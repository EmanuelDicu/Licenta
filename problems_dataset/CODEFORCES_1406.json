{
    "name": "1406_A. Subset Mex",
    "source": "CODEFORCES",
    "description": "Given a set of integers (it can contain equal elements).\n\nYou have to split it into two subsets A and B (both of them can contain equal elements or be empty). You have to maximize the value of mex(A)+mex(B).\n\nHere mex of a set denotes the smallest non-negative integer that doesn't exist in the set. For example: \n\n  * mex(\\{1,4,0,2,2,1\\})=3 \n  * mex(\\{3,3,2,1,3,0,0\\})=4 \n  * mex(\u2205)=0 (mex for empty set) \n\n\n\nThe set is splitted into two subsets A and B if for any integer number x the number of occurrences of x into this set is equal to the sum of the number of occurrences of x into A and the number of occurrences of x into B.\n\nInput\n\nThe input consists of multiple test cases. The first line contains an integer t (1\u2264 t\u2264 100) \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains an integer n (1\u2264 n\u2264 100) \u2014 the size of the set.\n\nThe second line of each testcase contains n integers a_1,a_2,... a_n (0\u2264 a_i\u2264 100) \u2014 the numbers in the set.\n\nOutput\n\nFor each test case, print the maximum value of mex(A)+mex(B).\n\nExample\n\nInput\n\n\n4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n\n\nOutput\n\n\n5\n3\n4\n0\n\nNote\n\nIn the first test case, A=\\left\\{0,1,2\\right\\},B=\\left\\{0,1,5\\right\\} is a possible choice.\n\nIn the second test case, A=\\left\\{0,1,2\\right\\},B=\u2205 is a possible choice.\n\nIn the third test case, A=\\left\\{0,1,2\\right\\},B=\\left\\{0\\right\\} is a possible choice.\n\nIn the fourth test case, A=\\left\\{1,3,5\\right\\},B=\\left\\{2,4,6\\right\\} is a possible choice.",
    "difficulty": "A",
    "tags": [
        "greedy",
        "implementation",
        "math"
    ],
    "rating": 900,
    "public_test": [
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n",
            "output": "5\n3\n4\n0\n"
        }
    ],
    "generated_test": [
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "15\n1\n0\n1\n1\n2\n0 0\n2\n0 1\n2\n1 1\n2\n0 2\n2\n1 2\n3\n0 0 0\n3\n0 1 0\n3\n0 1 2\n4\n0 1 2 3\n4\n1 1 2 3\n4\n0 1 0 2\n4\n0 0 0 1\n5\n0 0 0 0 0\n",
            "output": "1\n0\n2\n2\n0\n1\n0\n2\n3\n3\n4\n0\n4\n3\n2\n"
        },
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 1 1\n6\n1 2 3 4 5 6\n",
            "output": "5\n3\n3\n0\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 93 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "78\n"
        },
        {
            "input": "15\n1\n0\n1\n1\n2\n0 0\n2\n0 1\n2\n1 1\n2\n0 2\n2\n1 2\n3\n0 0 0\n3\n0 1 0\n3\n0 1 2\n4\n0 1 2 3\n4\n1 1 2 3\n4\n0 1 0 1\n4\n0 0 0 1\n5\n0 0 1 0 0\n",
            "output": "1\n0\n2\n2\n0\n1\n0\n2\n3\n3\n4\n0\n4\n3\n3\n"
        },
        {
            "input": "15\n1\n0\n1\n1\n2\n0 0\n2\n0 1\n2\n1 1\n2\n0 2\n2\n1 2\n3\n0 1 0\n3\n0 1 0\n3\n0 1 2\n4\n0 1 2 3\n4\n1 1 2 3\n4\n0 1 0 2\n4\n0 0 0 1\n5\n0 0 0 0 0\n",
            "output": "1\n0\n2\n2\n0\n1\n0\n3\n3\n3\n4\n0\n4\n3\n2\n"
        },
        {
            "input": "15\n1\n0\n1\n1\n2\n0 0\n2\n0 1\n2\n1 1\n2\n0 2\n2\n1 2\n3\n0 1 0\n3\n0 1 0\n3\n0 1 2\n4\n0 1 2 3\n4\n1 1 2 3\n4\n0 1 0 1\n4\n0 0 0 1\n5\n0 0 1 0 0\n",
            "output": "1\n0\n2\n2\n0\n1\n0\n3\n3\n3\n4\n0\n4\n3\n3\n"
        },
        {
            "input": "15\n1\n0\n1\n1\n2\n0 0\n2\n0 1\n2\n1 1\n2\n0 2\n2\n1 2\n3\n0 1 0\n3\n0 1 0\n3\n0 1 2\n4\n0 1 2 3\n4\n1 0 2 3\n4\n0 1 0 2\n4\n0 0 0 1\n5\n0 0 0 0 0\n",
            "output": "1\n0\n2\n2\n0\n1\n0\n3\n3\n3\n4\n4\n4\n3\n2\n"
        },
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 1 1\n6\n1 2 0 4 5 7\n",
            "output": "5\n3\n3\n3\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 26 27 28 29 30 24 32 0 34 35 36 37 38 39 40 41 47 43 44 45 46 47 48 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "18\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 11 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "32\n"
        },
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n0 2 3 4 5 6\n",
            "output": "5\n3\n4\n1\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 12 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 93 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "6\n"
        },
        {
            "input": "15\n1\n0\n1\n1\n2\n0 0\n2\n0 1\n2\n1 1\n2\n0 2\n2\n1 2\n3\n0 1 0\n3\n0 1 0\n3\n0 1 2\n4\n0 1 1 3\n4\n1 1 2 3\n4\n0 1 0 1\n4\n0 0 0 1\n5\n0 0 1 0 0\n",
            "output": "1\n0\n2\n2\n0\n1\n0\n3\n3\n3\n2\n0\n4\n3\n3\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 16 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "10\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 12 29 30 31 11 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "28\n"
        },
        {
            "input": "1\n100\n0 1 2 5 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 24 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "3\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 0 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 82 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "7\n"
        },
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n1 2 0 1\n6\n0 2 3 5 5 8\n",
            "output": "5\n3\n3\n1\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 5 16 33 18 19 20 21 22 23 24 25 38 27 28 29 30 31 32 33 34 35 36 37 38 36 40 41 42 43 44 45 46 54 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 62 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "15\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 4 23 24 7 44 27 28 29 30 24 32 33 34 35 36 37 17 39 40 41 47 43 44 45 46 47 48 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 87 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "22\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 2 1\n6\n1 2 3 4 5 6\n",
            "output": "5\n3\n3\n0\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 54 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 1 1\n6\n1 2 3 4 5 7\n",
            "output": "5\n3\n3\n0\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 31 20 21 22 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 47 43 44 45 46 47 48 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 27 21 22 23 24 25 26 27 28 29 30 24 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 16 27 21 22 23 24 25 26 27 28 29 30 24 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 32 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 93 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 32 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 47 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 32 33 34 35 36 37 15 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 16 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 24 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 54 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 62 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 92 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 31 20 21 22 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 37 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 47 43 44 45 46 47 48 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 87 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 27 21 22 23 24 25 26 27 28 29 30 24 29 33 34 35 18 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 42 27 28 29 30 24 32 0 34 35 36 37 38 39 40 41 47 43 44 45 46 47 48 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "18\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 32 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 37 38 39 40 41 42 43 44 12 48 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 51 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 82 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 70 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 32 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 93 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 32 88 61 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n0 2 3 4 5 8\n",
            "output": "5\n3\n4\n1\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 32 33 34 35 36 37 15 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 95 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 39 22 23 24 25 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 43 44 16 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 12 7 8 9 10 11 12 13 4 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 93 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "6\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 36 40 41 42 43 44 45 46 54 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 62 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 29 33 34 21 36 37 38 39 40 41 42 43 44 45 46 92 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 31 20 21 22 23 24 7 26 27 28 29 10 24 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 37 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 44 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 47 43 44 45 46 47 48 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 87 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 16 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 54 48 86 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "10\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 27 21 22 23 24 25 26 27 28 29 30 24 29 33 34 35 18 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 30 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 42 27 28 29 30 24 32 0 34 35 36 37 38 39 40 41 47 43 44 45 46 47 13 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "18\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 32 64 65 66 67 68 69 70 71 72 73 74 75 2 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 37 38 39 40 41 42 43 44 12 48 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 9 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 26 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 51 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 1 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 82 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "6\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 0 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 70 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 32 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 23 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 93 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 32 88 61 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 12 29 30 31 15 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "28\n"
        },
        {
            "input": "4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n0 2 3 5 5 8\n",
            "output": "5\n3\n4\n1\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 32 33 34 35 36 37 15 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 93 71 72 73 74 75 76 95 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 5 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 24 23 24 7 26 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 42 28 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "3\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 12 7 8 9 10 11 12 13 4 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 93 79 80 81 82 83 84 85 51 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "6\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 38 27 28 29 30 31 32 33 34 35 36 37 38 36 40 41 42 43 44 45 46 54 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 62 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 31 20 21 22 23 24 7 26 27 28 29 10 24 32 33 34 35 36 37 38 66 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 37 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 4 23 24 7 44 27 28 29 30 24 32 33 34 35 36 37 38 39 40 41 47 43 44 45 46 47 48 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 87 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 16 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 54 48 86 50 4 52 53 54 55 56 57 58 59 60 61 62 63 64 65 98 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "10\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 27 21 22 23 24 25 26 27 28 29 30 24 29 33 34 35 18 37 38 39 40 41 42 43 44 45 46 47 48 49 50 70 52 53 54 55 56 57 58 59 30 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 42 27 28 29 30 24 32 0 34 35 36 37 38 39 40 41 47 43 44 11 46 47 13 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "18\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 4 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 32 64 65 66 67 68 69 70 71 72 73 74 75 2 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 26 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 51 1 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 3 7 8 9 10 11 12 13 14 15 0 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 70 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 32 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "7\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 23 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 52 63 35 65 66 67 68 69 70 93 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 32 88 61 90 91 92 93 94 95 96 28 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 24 32 33 34 35 36 37 15 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 93 71 72 73 74 75 76 95 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 14 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 5 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 24 23 24 7 26 27 28 29 30 24 32 32 34 35 36 37 38 39 40 41 42 28 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "3\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 12 7 8 9 10 11 12 13 4 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 71 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 93 79 80 81 82 83 84 85 51 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "6\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 31 20 21 22 23 24 7 26 27 28 29 10 24 32 33 34 35 36 37 38 66 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 47 37 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 10 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 27 21 22 23 24 25 26 27 28 29 30 24 29 33 34 35 18 37 38 39 40 41 42 43 44 45 46 47 48 49 76 70 52 53 54 55 56 57 58 59 30 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 7 42 27 28 29 30 24 32 0 34 35 36 37 38 39 40 41 47 43 44 11 46 47 13 49 50 51 52 53 54 55 61 57 58 59 60 61 62 63 64 65 66 67 47 69 70 71 72 73 74 75 28 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "18\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 33 18 19 20 21 22 23 24 25 12 27 4 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 32 64 65 66 67 68 69 70 71 72 73 74 75 2 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n",
            "output": "17\n"
        },
        {
            "input": "1\n100\n0 1 2 3 4 5 0 7 8 9 10 11 12 13 8 15 16 33 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 43 37 37 38 39 40 41 42 43 48 12 46 54 48 49 50 4 52 53 54 55 56 57 58 59 60 61 62 63 35 65 66 67 68 69 70 71 72 73 74 82 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 28 98 99\n",
            "output": "7\n"
        }
    ],
    "solution": [
        {
            "language": 3,
            "solution": "t=int(input())\nwhile t!=0:\n    t-=1\n    n=int(input())\n    li=list(map(int,input().split()))\n    dic={}\n    dic2={}\n    a=0\n    b=0\n    flag=0\n    ans=[0]*101\n    for i in li:\n        if i not in dic and i not in dic2:\n            dic[i]=1\n        else:\n            ans[i]=1\n            dic2[i]=1\n            if i in dic:\n                dic.pop(i)\n    le=len(dic2)\n    c=0\n    for i in range(0,101):\n        if ans[i]==0 and le!=0:\n            if c<le:\n                a=i\n                \n                flag=1\n                break\n            else:\n                break\n        else:\n            c+=1\n    if flag==0:\n        a=le\n    for i in dic:\n        ans[i]=1\n    for j in range(0,101):\n        if ans[j]==0:\n            b=j\n            \n            break\n    print(a+b)\n        \n    \n                \n                \n        \n            \n            \n    \n    \n\n    \n        \n         \n        \n        \n            \n            \n"
        },
        {
            "language": 3,
            "solution": "for x in range(int(input())):\n\tn=int(input())\n\tl=list(map(int,input().split()))\n\tl=sorted(l)\n\t# print(l)\n\ta=0\n\tb=0\n\twhile l.count(a)>1:\n\t\ta+=1\n\t\tb+=1\n\twhile l.count(b)>0:\n\t\tb+=1\n\tprint(a+b)"
        },
        {
            "language": 3,
            "solution": "import math\n \nfrom sys import stdin, stdout\n \ndef solve():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n = int(input())\n        arr = list(map(int, input().split()))\n        brr = [0 for x in range(0, 111)]\n        for x in arr:\n            brr[x] += 1\n\n        ans = 0\n        flag = 0\n        for x in range(0, 111):\n            if brr[x] == 1:\n                if flag == 0:\n                    ans += x\n                    flag = 1\n            elif brr[x] == 0:\n                if flag == 0:\n                    print (2 * x)\n                    flag = 2\n                    break\n                elif flag == 1:\n                    print (ans + x)\n                    flag = 2\n                    break\n\n\nsolve()\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a, a + n);\n    int m = 0, k = 0;\n    for (int i = 0; i < n; i++) {\n      if (a[i] == m) {\n        m++;\n      } else if (a[i] == k) {\n        k++;\n      }\n    }\n    cout << m + k << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import collections\n\ndef solution(n, a):\n    c = collections.Counter(a)\n    i = 0\n    x = -1\n    while True:\n        '''if c[i] >= 2: continue\n        elif c[i] == 1:\n            if x: \n                continue\n            else:\n                x = i\n        elif c[i] == 0:\n            return x + i'''\n        if c[i] == 1 and x < 0:\n            x = i\n        elif c[i] == 0:\n            if x < 0:\n                return 2*i\n            else:      \n                return x + i\n        i += 1\n\n\n\nif __name__ == \"__main__\":\n    t = int(input())    \n\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split(' ')))\n        print(solution(n, a))\n"
        },
        {
            "language": 3,
            "solution": "from bisect import *\nfrom collections import *\nfrom math import gcd,ceil,sqrt,floor,inf\nfrom heapq import *\nfrom itertools import *\nfrom operator import add,mul,sub,xor,truediv,floordiv\nfrom functools import *\n\n#------------------------------------------------------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n# region fastio\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\n#------------------------------------------------------------------------\ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\n#------------------------------------------------------------------------\n\n\nfarr=[1]\nifa=[]\n\ndef fact(x,mod=0):\n    if mod:\n        while x>=len(farr):\n            farr.append(farr[-1]*len(farr)%mod)\n    else:\n        while x>=len(farr):\n            farr.append(farr[-1]*len(farr))\n    return farr[x]\n\ndef ifact(x,mod):\n    global ifa\n    ifa.append(pow(farr[-1],mod-2,mod))\n    for i in range(x,0,-1):\n        ifa.append(ifa[-1]*i%mod)\n    ifa=ifa[::-1]\n\ndef per(i,j,mod=0):\n    if i<j: return 0\n    if not mod:\n        return fact(i)//fact(i-j)\n    return farr[i]*ifa[i-j]%mod\n    \ndef com(i,j,mod=0):\n    if i<j: return 0\n    if not mod:        \n        return per(i,j)//fact(j)\n    return per(i,j,mod)*ifa[j]%mod\n\ndef catalan(n):\n    return com(2*n,n)//(n+1)\n    \ndef linc(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t>f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n\ndef rinc(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t<f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n\ndef ldec(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t<f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n\ndef rdec(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t>f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n\ndef isprime(n):\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            return False\n    return True\n\ndef binfun(x):\n    c=0\n    for w in arr:\n        c+=ceil(w/x)\n    return c\n\ndef lowbit(n):\n    return n&-n\n\ndef inverse(a,m):\n    a%=m\n    if a<=1: return a\n    return ((1-inverse(m,a)*m)//a)%m\n\nclass BIT:\n    def __init__(self,arr):\n        self.arr=arr\n        self.n=len(arr)-1\n        \n    def update(self,x,v):\n        while x<=self.n:\n            self.arr[x]+=v\n            x+=x&-x\n\n    def query(self,x):\n        ans=0\n        while x:\n            ans+=self.arr[x]\n            x&=x-1\n        return ans\n\nclass smt:\n    def __init__(self,l,r,arr):\n        self.l=l\n        self.r=r\n        self.value=(1<<31)-1 if l<r else arr[l]\n        mid=(l+r)//2\n        if(l<r):\n            self.left=smt(l,mid,arr)\n            self.right=smt(mid+1,r,arr)\n            self.value&=self.left.value&self.right.value\n        #print(l,r,self.value)\n    def setvalue(self,x,val):\n        if(self.l==self.r):\n            self.value=val\n            return\n        mid=(self.l+self.r)//2\n        if(x<=mid):\n            self.left.setvalue(x,val)\n        else:\n            self.right.setvalue(x,val)\n        self.value=self.left.value&self.right.value\n    def ask(self,l,r):\n        if(l<=self.l and r>=self.r):\n            return self.value\n        val=(1<<31)-1\n        mid=(self.l+self.r)//2\n        if(l<=mid):\n            val&=self.left.ask(l,r)\n        if(r>mid):\n            val&=self.right.ask(l,r)\n        return val\n\nclass DSU:#\u5bb9\u91cf+\u8def\u5f84\u538b\u7f29\n    def __init__(self,n):\n        self.c=[-1]*n\n\n    def same(self,x,y):\n        return self.find(x)==self.find(y)\n\n    def find(self,x):\n        if self.c[x]<0:\n            return x\n        self.c[x]=self.find(self.c[x])\n        return self.c[x]\n\n    def union(self,u,v):\n        u,v=self.find(u),self.find(v)\n        if u==v:\n            return False\n        if self.c[u]<self.c[v]:\n            u,v=v,u\n        self.c[u]+=self.c[v]\n        self.c[v]=u\n        return True\n\n    def size(self,x): return -self.c[self.find(x)]\n    \nclass UFS:#\u79e9+\u8def\u5f84\n    def __init__(self,n):\n        self.parent=[i for i in range(n)]\n        self.ranks=[0]*n\n\n    def find(self,x):\n        if x!=self.parent[x]:\n            self.parent[x]=self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self,u,v):\n        pu,pv=self.find(u),self.find(v)\n        if pu==pv:\n            return False\n        if self.ranks[pu]>=self.ranks[pv]:\n            self.parent[pv]=pu\n            if self.ranks[pv]==self.ranks[pu]:\n                self.ranks[pu]+=1\n        else:\n            self.parent[pu]=pv\n\ndef Prime(n):\n    c=0\n    prime=[]\n    flag=[0]*(n+1)\n    for i in range(2,n+1):\n        if not flag[i]:\n            prime.append(i)\n            c+=1\n        for j in range(c):\n            if i*prime[j]>n: break\n            flag[i*prime[j]]=prime[j]\n            if i%prime[j]==0: break\n    return prime\n\ndef dij(s,graph):\n    d={}\n    d[s]=0\n    heap=[(0,s)]\n    seen=set()\n    while heap:\n        dis,u=heappop(heap)\n        if u in seen:\n            continue\n        for v in graph[u]:\n            if v not in d or d[v]>d[u]+graph[u][v]:\n                d[v]=d[u]+graph[u][v]\n                heappush(heap,(d[v],v))\n    return d\n\ndef GP(it): return [(ch,len(list(g))) for ch,g in groupby(it)]\n\nclass DLN:\n    def __init__(self,val):\n        self.val=val\n        self.pre=None\n        self.next=None\n\n       \n\nt=N()\nfor i in range(t):\n    n=N()\n    a=RLL()\n    c=Counter(a)\n    x=[]\n    y=[]\n    for k in sorted(c.keys()):\n        if c[k]!=1:\n            y.append(k)\n        x.append(k)\n    m,n=len(x),len(y)\n    for i,a in enumerate(x):\n        if i!=a:\n            m=i\n            break\n    for i,a in enumerate(y):\n        if i!=a:\n            n=i\n            break\n    ans=m+n\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t, n, k;\nint main() {\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    int a[101] = {0};\n    for (int i = 1; i <= n; i++) {\n      cin >> k;\n      a[k]++;\n    }\n    int i = 0, j = 0;\n    while (a[i] >= 2) {\n      i++;\n    }\n    while (a[j] >= 1) {\n      j++;\n    }\n    cout << i + j << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(l):\n  s=set(l)\n  for i in range(len(l)+1):\n    if i not in s:\n      return i\nn = int(input())\nfor _ in range(n):\n    f = int(input())\n    l = list(map(int,input().split()))[:]\n    x = [0]*102\n    for i in set(l):\n        x[i] = l.count(i)\n    for i in range(len(x)):\n        if x[i]<=1:\n            k = i\n            break\n    print(mex(l)+k)    \n    "
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = [int(a) for a in input().split()]\n    X = [0] * 200\n    for a in A:\n        X[a] += 1\n    m = 2\n    ans = 0\n    for i, x in enumerate(X):\n        if m == 2:\n            if x >= 2: continue\n            if x == 1:\n                m = 1\n                ans += i\n                continue\n            ans += i * 2\n            break\n        if m == 1:\n            if x >= 1: continue\n            ans += i\n            break\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n = int(input())\n    arr = list(map(int,input().split()))\n    ans = {}\n    for i in range(0,101):\n        ans[i] = arr.count(i)\n    count = 0\n    for key in ans.keys():\n        if ans[key]==0:\n            count+=key\n            break\n    for key in ans.keys():\n        if ans[key]<=1:\n            count+=key\n            break\n    print(count)\n\n\n# solve()\nt = int(input())\nfor i in range(t):\n    solve()\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stderr\nfrom functools import *\nfrom itertools import *\n\nt = int(input())\nfor _ in range(t):\n    c = [0 for _ in range(101)]\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for a in arr:\n        c[a] += 1\n    a = 0\n    b = 0\n    # st_b = False\n    for val in range(101):\n        if c[val] >= 1:\n            c[val] -= 1\n            a = val+1\n            # print(f\"a is {a} now\", file=stderr)\n        else:\n            break\n            \n    for val in range(101):\n        if c[val] >= 1:\n            c[val] -= 1\n            b = val+1\n            # print(f\"b is {b} now\", file=stderr)\n        else:\n            break\n            \n    # print(file=stderr)\n    print(a + b)"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.Stack;\nimport java.util.TreeMap;\n\npublic class Round659 {\n\n\tstatic int rec = 0;\n\tstatic int X[] = { -1, 0, 0, 1 };\n\tstatic int Y[] = { 0, -1, 1, 0 };\n\tstatic long mod = 1000000007;\n\tstatic int last = 0;\n\tstatic int maxDepth = 0;\n\n\tstatic class Reader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\n\t\tpublic Reader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic Reader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[64]; // line length\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n\t}\n\n\tpublic static long[] initArray(int n, Reader scan) throws IOException {\n\n\t\tlong arr[] = new long[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = scan.nextLong();\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tpublic static long sum(long arr[]) {\n\n\t\tlong sum = 0;\n\t\tfor (long i : arr) {\n\t\t\tsum += (long) i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tpublic static long max(long arr[]) {\n\n\t\tlong max = Long.MIN_VALUE;\n\n\t\tfor (long i : arr) {\n\t\t\tmax = Math.max(i, max);\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tpublic static long min(long arr[]) {\n\t\tlong min = Long.MAX_VALUE;\n\n\t\tfor (long i : arr) {\n\t\t\tmin = Math.min(i, min);\n\t\t}\n\n\t\treturn min;\n\t}\n\t\n\tpublic static int[] intArray(int n, Reader scan) throws IOException {\n\t\t\n\t\tint arr[]=new int[n];\n\t\t\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tarr[i]=scan.nextInt();\n\t\t}\n\t\t\n\t\treturn arr;\n\t\t\n\t}\n\n\tpublic static List<Integer>[] initAdjacency(int n, int e, Reader scan, boolean type) throws IOException {\n\n\t\tList<Integer> adj[] = new ArrayList[n + 1];\n\n\t\tfor (int i = 0; i < e; i++) {\n\t\t\tint u = scan.nextInt();\n\t\t\tint v = scan.nextInt();\n\n\t\t\tif (adj[u] == null)\n\t\t\t\tadj[u] = new ArrayList<>();\n\t\t\tif (type && adj[v] == null)\n\t\t\t\tadj[v] = new ArrayList<>();\n\n\t\t\tadj[u].add(v);\n\n\t\t\tif (type)\n\t\t\t\tadj[v].add(u);\n\n\t\t}\n\n\t\treturn adj;\n\t}\n\t\n\tpublic static int[] nextGreater(int arr[]) {\n\t\t\n\t\tint n=arr.length;\n\t\tint nextGreater[] = new int[n];\n\n\t\tStack<Integer> stack = new Stack<>();\n\n\t\tfor (int i = 0; i < n; i++) {\n\n\t\t\twhile (!stack.isEmpty()) {\n\n\t\t\t\tif (arr[i] >= arr[stack.peek()]) {\n\t\t\t\t\tnextGreater[stack.pop()] = i;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstack.push(i);\n\n\t\t}\n\n\t\twhile (!stack.isEmpty()) {\n\t\t\tnextGreater[stack.pop()] = n;\n\t\t}\n\t\t\n\t\treturn nextGreater;\n\n\t}\n\t\n\tpublic static int[] nextGreater(long arr[]) {\n\t\t\n\t\tint n=arr.length;\n\t\tint nextGreater[] = new int[n];\n\n\t\tStack<Integer> stack = new Stack<>();\n\n\t\tfor (int i = 0; i < n; i++) {\n\n\t\t\twhile (!stack.isEmpty()) {\n\n\t\t\t\tif (arr[i] >= arr[stack.peek()]) {\n\t\t\t\t\tnextGreater[stack.pop()] = i;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstack.push(i);\n\n\t\t}\n\n\t\twhile (!stack.isEmpty()) {\n\t\t\tnextGreater[stack.pop()] = n;\n\t\t}\n\t\t\n\t\treturn nextGreater;\n\n\t}\n\t\n\tpublic static int[] nextSmaller(int[] arr) {\n\t\tint n=arr.length;\n\t\t\n\t\tStack<Integer> stack=new Stack<>();\n\t\tint nextSmaller[] = new int[n];\n\n\t\tfor (int i = 0; i < n; i++) {\n\n\t\t\twhile (!stack.isEmpty()) {\n\n\t\t\t\tif (arr[i] <= arr[stack.peek()]) {\n\t\t\t\t\tnextSmaller[stack.pop()] = i;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstack.push(i);\n\n\t\t}\n\n\t\twhile (!stack.isEmpty()) {\n\t\t\tnextSmaller[stack.pop()] = n;\n\t\t}\n\n\t\treturn nextSmaller;\n\t}\n\t\n\tpublic static int[] nextSmaller(long[] arr) {\n\t\tint n=arr.length;\n\t\t\n\t\tStack<Integer> stack=new Stack<>();\n\t\tint nextSmaller[] = new int[n];\n\n\t\tfor (int i = 0; i < n; i++) {\n\n\t\t\twhile (!stack.isEmpty()) {\n\n\t\t\t\tif (arr[i] <= arr[stack.peek()]) {\n\t\t\t\t\tnextSmaller[stack.pop()] = i;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstack.push(i);\n\n\t\t}\n\n\t\twhile (!stack.isEmpty()) {\n\t\t\tnextSmaller[stack.pop()] = n;\n\t\t}\n\n\t\treturn nextSmaller;\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tReader scan = new Reader();\n//\t\tScanner scan = new Scanner(System.in);\n\n\t\tint t = scan.nextInt();\n\t\twhile (t-- > 0) {\n\n\t\t\tint n=scan.nextInt();\n\t\t\t\n//\t\t\tlong arr[]=initArray(n, scan);\n\t\t\tint arr[]=intArray(n, scan);\n\t\t\t\n\t\t\tA(n, arr);\n\t\t}\n\n\t}\n\n\tpublic static void A(int n, int arr[]) {\n\t\t\n\t\t\n\t\tint count[]=new int[102];\n\t\t\n\t\tfor(int i: arr) {\n\t\t\tcount[i]++;\n\t\t}\n\t\t\n\t\t\n\t\tint first=0;\n\t\t\n\t\tfor(int i=0;i<count.length;i++) {\n\t\t\tif(count[i]<2) {\n\t\t\t\tif(count[i]==0) {\n\t\t\t\t\tSystem.out.println(2*i);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfirst=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=first+1;i<count.length;i++) {\n\t\t\tif(count[i]==0) {\n\t\t\t\tfirst+=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(first);\n\t\t\n\t}\n\n}\n\nclass Range {\n\n\tpublic long rangeMax[][];\n\tpublic long rangeMin[][];\n\n\tpublic int indexMax[][];\n\tpublic int indexMin[][];\n\n\tpublic Range(long arr[]) {\n\n\t\tdouble hi = Math.ceil(Math.log(arr.length) / Math.log(2));\n\t\t// System.out.println(\"hi=\"+hi);\n\t\trangeMax = new long[arr.length][(int) hi + 1];\n\t\trangeMin = new long[arr.length][(int) hi + 1];\n\t\tindexMax = new int[arr.length][(int) hi + 1];\n\t\tindexMin = new int[arr.length][(int) hi + 1];\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\trangeMax[i][0] = arr[i];\n\t\t\trangeMin[i][0] = arr[i];\n\n\t\t\tindexMax[i][0] = i;\n\t\t\tindexMin[i][0] = i;\n\t\t}\n\n\t\tfor (int len = 2, j = 1; len <= arr.length; len *= 2, j++) {\n\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\n\t\t\t\tif (i + len / 2 >= arr.length) {\n\t\t\t\t\trangeMax[i][j] = rangeMax[i][j - 1];\n\t\t\t\t\trangeMin[i][j] = rangeMin[i][j - 1];\n\n\t\t\t\t\tindexMax[i][j] = indexMax[i][j - 1];\n\n\t\t\t\t\tindexMin[i][j] = indexMin[i][j - 1];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\trangeMax[i][j] = Math.max(rangeMax[i][j - 1], rangeMax[i + len / 2][j - 1]);\n\t\t\t\trangeMin[i][j] = Math.min(rangeMin[i][j - 1], rangeMin[i + len / 2][j - 1]);\n\n\t\t\t\tindexMax[i][j] = indexMax[i + len / 2][j - 1];\n\n\t\t\t\tindexMin[i][j] = indexMin[i + len / 2][j - 1];\n\n\t\t\t\tif (rangeMax[i][j] == rangeMax[i][j - 1]) {\n\t\t\t\t\tindexMax[i][j] = indexMax[i][j - 1];\n\t\t\t\t}\n\n\t\t\t\tif (rangeMin[i][j] == rangeMin[i][j - 1]) {\n\t\t\t\t\tindexMin[i][j] = indexMin[i][j - 1];\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tpublic int getMax(int l, int r) {\n\n\t\tif (l > r)\n\t\t\treturn -1;\n\n\t\tint len = r - l + 1;\n\t\tlong ans = Long.MIN_VALUE;\n\t\tint index = l;\n\t\tint cur = l;\n\t\twhile (len != 0) {\n\t\t\tint val = (int) (Math.log(len) / Math.log(2));\n\t\t\tlen -= (1 << val);\n\t\t\tlong maxVal = Math.max(ans, rangeMax[cur][val]);\n\n\t\t\tif (maxVal > ans) {\n\t\t\t\tindex = indexMax[cur][val];\n\t\t\t}\n\n\t\t\tans = maxVal;\n\t\t\tcur += (1 << val);\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\tpublic int getMin(int l, int r) {\n\n\t\tif (l > r)\n\t\t\treturn -1;\n\n\t\tint len = r - l + 1;\n\t\tlong ans = Long.MAX_VALUE;\n\t\tint cur = l;\n\t\tint index = l;\n\t\twhile (len != 0) {\n\t\t\tint val = (int) (Math.log(len) / Math.log(2));\n\t\t\tlen -= (1 << val);\n\t\t\tlong minVal = Math.min(ans, rangeMin[cur][val]);\n\n\t\t\tif (minVal < ans) {\n\t\t\t\tindex = indexMin[cur][val];\n\t\t\t}\n\n\t\t\tans = minVal;\n\n\t\t\tcur += (1 << val);\n\t\t}\n\n\t\treturn index;\n\t}\n\n}\n\nclass MyPair {\n\n\tint value;\n\tint weight;\n\n\tpublic MyPair(int value, int w) {\n\t\tthis.value = value;\n\t\tweight = w;\n\t}\n\n}"
        },
        {
            "language": 1,
            "solution": "FAST_IO = 0\nif FAST_IO:\n    import io, sys, atexit\n    rr = iter(sys.stdin.read().splitlines()).next\n    sys.stdout = _OUTPUT_BUFFER = io.BytesIO()\n\n    @atexit.register\n    def write():\n        sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\nelse:\n    rr = raw_input\nrri = lambda: int(rr())\nrrm = lambda: map(int, rr().split())\nrrmm = lambda n: [rrm() for _ in xrange(n)]\n\n####\nMOD = 10**9 + 7\nYES, NO = \"Yes\", \"No\"\nfrom collections import defaultdict as ddic\n\nfrom collections import Counter\n\n\ndef solve(N, A):\n    count = Counter(A)\n    x = 0\n    while True:\n        if count[x] == 0: break\n        count[x] -= 1\n        x += 1\n    ans = x\n    x = 0\n    while True:\n        if count[x] == 0: break\n        x += 1\n    ans += x\n    return ans\n\n\nfor TC in xrange(rri()):\n    N = rri()\n    A = rrm()\n    print solve(N, A)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst double eps = 1e-7, PI = 3.1415926;\nconst int N = 2e5 + 10;\nusing namespace std;\nint n, q, m, k, x, y, a[N], mx = -1, mn = 1e9, sum;\nchar c[N];\nstring s, s1, s2;\nmap<int, int> mp;\nvector<int> vec;\nint main() {\n  cin >> q;\n  while (q--) {\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      mp[a[i]]++;\n    }\n    int mx1 = 0, mx2 = 0;\n    x = 0;\n    for (int i = 0; i <= 101; i++) {\n      if (mp[i] >= 2 && x == 0)\n        mx1 = i + 1, mx2 = i + 1;\n      else if (mp[i] == 1 || (mp[i] >= 2 && x == 1))\n        mx2 = i + 1, x = 1;\n      else {\n        break;\n      }\n    }\n    cout << mx1 + mx2 << endl;\n    mp.clear();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class MyClass {\n    public static void main(String args[]) throws IOException{\n      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n      int t = Integer.parseInt(br.readLine());\n      for (int i = 0; i < t; i++) {\n          int n = Integer.parseInt(br.readLine());\n          int [] arr = new int[n];\n          StringTokenizer s = new StringTokenizer(br.readLine());\n          for (int j = 0; j < n; j++) arr[j] = Integer.parseInt(s.nextToken());\n          Arrays.sort(arr);\n          if (arr[0] > 0) {\n              System.out.println(0);\n              continue;\n          }\n          int max1 = 1;\n          boolean [] visited = new boolean[n];\n          for (int j = 0; j < n; j++) {\n              if (j == 0) {\n                  visited[j] = true;\n              }\n              else {\n                  if (arr[j] == arr[j-1]) continue;\n                  else if (arr[j] == arr[j-1]+1) {\n                      max1++;\n                      visited[j] = true;\n                  }\n                  else break;\n              }\n          }\n          boolean hasVisited = false;\n          int lastVisited = -1;\n          int max2 = 0;\n          for (int j = 0; j < n; j++) {\n              if (visited[j]) continue;\n              if (!hasVisited) {\n                  if (arr[j] > 0) {\n                      break;\n                  }\n                  max2 = 1;\n                  hasVisited = true;\n                  lastVisited = j;\n              }\n              else {\n                  if (arr[j] == arr[lastVisited])continue;\n                  else if (arr[j] == arr[lastVisited]+1) {\n                      max2++;\n                      lastVisited = j;\n                  }\n                  else {\n                      break;\n                  }\n              }\n              \n          }\n          //System.out.println(max1 + \" \" + max2);\n          System.out.println(max1+max2);\n      }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfor _ in range(int(input())):\n\tn=int(input())\n\tl=list(map(int,input().split()))\n\td=defaultdict(lambda:0)\n\ta,b=[],[]\n\tma,mb=0,0\n\tf=1\n\tfor x in l:\n\t\td[x]+=1\n\tfor i in range(101):\n\t\tif(d[i]==0):\n\t\t\tbreak;\n\t\tif(d[i]==1):\n\t\t\tma+=1;\n\t\t\tf=0\n\t\telse:\n\t\t\tma+=1\n\t\t\tif(f):\n\t\t\t\tmb+=1\n\tprint(ma+mb)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        try (BufferedInputStream in = new BufferedInputStream(System.in);\n             PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\n\n            Scanner sc = new Scanner(in);\n            \n            int T = sc.nextInt();\n            for (int t = 0; t < T; t++) {\n                int n = sc.nextInt();\n                int[] vs = new int[n];\n                for (int i = 0; i < vs.length; i++) vs[i] = sc.nextInt();\n                Arrays.sort(vs);\n\n                out.println(mex(vs) + mex(vs));\n            }\n        }\n    }\n\n    private static int mex(int[] vs) {\n        int m = 0;\n        for (int i = 0; i < vs.length; i++) if (vs[i] != -1) {\n            if (vs[i] == m) {\n                m++;\n                vs[i] = -1;\n            }\n        }\n        return m;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ntry:\n        \n    test=int(input())\n    for _ in range(test):\n        num=int(input())\n        arr=list(map(int,input().strip().split()))[:num]\n\n        A=[]\n        B=[]\n        count=dict(Counter(arr))\n\n        for i in count:\n            if(count[i]%2==0):\n                val=count[i]//2\n                for k in range(0,val):\n                    A.append(i)\n                    B.append(i)\n            else:\n                A.append(i)\n                for k in range(0,count[i]-1):\n                    B.append(i)\n\n        #print(A)\n        #print(B)\n        valA=0\n        valB=0\n        if(len(A)!=0):\n            for i in range(0,max(A)+2):\n                #print(\"checking i value:\",i,end=\" \")\n                if(i not in A):\n                    valA=i\n                    break\n            \n        if(len(B)!=0):\n            for i in range(0,max(B)+2):\n                #print(\"checking i value:\",i,end=\" \")\n                if(i not in B):\n                    valB=i\n                    break\n                \n        print(valA+valB)\n\nexcept:\n    pass\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.Paint;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Deque;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Queue;\nimport java.util.Set;\nimport java.util.Stack;\n\npublic class CodeForces {\n\t\n\tstatic class Track{\n\t\t\n\t\tint start;\n\t\tint end;\n\t\t\n\t\tpublic Track(int start, int end) {\n\t\t\tsuper();\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn \"Track [start=\" + start + \", end=\" + end + \"]\";\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + end;\n\t\t\tresult = prime * result + start;\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\n\tstatic class Range {\n\n\t\tString s;\n\n\t\tpublic Range(String s) {\n\t\t\tthis.s = s;\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn s;\n\t\t}\n\t}\n\n\tstatic class RangeComparator implements Comparator<Range> {\n\n\t\tpublic int compare(Range o1, Range o2) {\n\t\t\tString[] v1 = o1.s.split(\"#\");\n\t\t\tString[] v2 = o2.s.split(\"#\");\n\t\t\tint val1 = Integer.parseInt(v1[1]) - Integer.parseInt(v1[0]);\n\t\t\tint val2 = Integer.parseInt(v2[1]) - Integer.parseInt(v2[0]);\n\t\t\tif (val1 > val2) {\n\t\t\t\treturn -1;\n\t\t\t} else if (val2 > val1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn o1.s.compareTo(o2.s);\n\t\t}\n\n\t}\n\n\tpublic static void printArray(int[] arr) {\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n\n\tpublic static int[] getIntArray(BufferedReader br) throws IOException {\n\t\tString line = br.readLine();\n\t\tString[] values = line.split(\" \");\n\t\tint[] arr = new int[values.length];\n\t\tfor (int i = 0; i < values.length; i++) {\n\t\t\tarr[i] = Integer.parseInt(values[i]);\n\t\t}\n\t\treturn arr;\n\t}\n\n\tpublic static long[] getLongArray(BufferedReader br) throws IOException {\n\t\tString line = br.readLine();\n\t\tString[] values = line.split(\" \");\n\t\tlong[] arr = new long[values.length];\n\t\tfor (int i = 0; i < values.length; i++) {\n\t\t\tarr[i] = Long.parseLong(values[i]);\n\t\t}\n\t\treturn arr;\n\t}\n\t\n\tpublic static List<Long> getLongList(BufferedReader br) throws IOException {\n\t\tString line = br.readLine();\n\t\tString[] values = line.split(\" \");\n\t\tList<Long> list = new ArrayList<>();\n\t\tfor (int i = 0; i < values.length; i++) {\n\t\t\tlist.add(Long.parseLong(values[i]));\n\t\t}\n\t\treturn list;\n\t}\n\t\n\tpublic static String[] getStringArray(BufferedReader br) throws IOException {\n\t\tString line = br.readLine();\n\t\tString[] values = line.split(\" \");\n\t\treturn values;\n\t}\n\n\tpublic static Set<Integer> getFactors(int n) {\n\t\tSet<Integer> set = new HashSet<>();\n\t\tfor (int i = 2; i <= Math.sqrt(n); i++) {\n\t\t\tif (n % i == 0) {\n\t\t\t\tset.add(i);\n\t\t\t\tset.add(n / i);\n\t\t\t}\n\t\t}\n\t\treturn set;\n\t}\n\n\tpublic static int[] decode(String s) {\n\t\tString[] v = s.split(\"#\");\n\t\tint[] arr = new int[2];\n\t\tarr[0] = Integer.parseInt(v[0]);\n\t\tarr[1] = Integer.parseInt(v[1]);\n\t\treturn arr;\n\t}\n\n\tpublic static String encode(int a, int b) {\n\t\treturn a + \"#\" + b;\n\t}\n\n\tpublic static long lcm(long a, long b) {\n\t\tBigInteger bigGCD = BigInteger.valueOf(a).gcd(BigInteger.valueOf(b));\n\t\tlong val = bigGCD.longValue();\n\t\tlong prod = a * b;\n\t\treturn prod / val;\n\t}\n\n\tpublic static Set<Integer> getPrimes() {\n\t\tSet<Integer> primes = new HashSet<>();\n\t\tfor (int i = 2; i < 20000; i++) {\n\t\t\tint fac = 0;\n\t\t\tfor (int j = 1; j <= Math.sqrt(i); j++) {\n\t\t\t\tif (i % j == 0) {\n\t\t\t\t\tfac += 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fac == 2) {\n\t\t\t\tprimes.add(i);\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(primes.size());\n\n\t\treturn primes;\n\t}\n\t\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line = br.readLine();\n\t\tint t = Integer.parseInt(line);\t\t\n//\t\tint t = 1;\n\n\t\twhile (t-- > 0) {\n\t\t\tline = br.readLine();\n\t\t\tint n = Integer.parseInt(line);\n\t\t\tint[] arr = getIntArray(br);\n//\t\t\tint k = arr[1];\n//\t\t\tList<Long> list = getLongList(br);\n\t\t\t\n\t\t\tArrays.sort(arr);\n\t\t\t\n\t\t\tint[] count = new int[101];\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tcount[arr[i]]++;\n\t\t\t}\n\t\t\t\n//\t\t\tint s1=0; int s2=0;\n\t\t\t\n//\t\t\tfor(int i=0;i<=100;i++){\n//\t\t\t\tif(count[i]>=2){\n//\t\t\t\t\ts1++;\n//\t\t\t\t\ts2++;\n//\t\t\t\t}else if(count[i]==0){\n//\t\t\t\t\tbreak;\n//\t\t\t\t}else{\n//\t\t\t\t\ts1++;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\t\n//\t\t\tSystem.out.println(s1+s2);\n\t\t\t\n\t\t\tif(count[0]==0){\n\t\t\t\tSystem.out.println(0);\n\t\t\t}else{\n\t\t\t\tint s2=0;\n\t\t\t\tfor(int i=0;i<=100;i++){\n\t\t\t\t\tif(count[i]>=2){\n\t\t\t\t\t\ts2++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint s1=0;\n\t\t\t\tfor(int i=0;i<=100;i++){\n\t\t\t\t\tif(count[i]>=1){\n\t\t\t\t\t\ts1++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println(s1+s2);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\n\t}\n\t\n\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "k=int(input())\nfor i in range(0,k):\n\to=int(input())\n\ta=list(map(int,input().split()))\n\ta.sort()\n\tb=[]\n\tc=0\n\tfor i in a:\n\t\tif i not in b:\n\t\t\tb.append(i)\n\tfor j in b:\n\t\tif j in a:\n\t\t\ta.remove(j)\n\tif len(b)>0:\n\t\tfor u in range(0,(max(b)+2)):\n\t\t\tif u not in b:\n\t\t\t\tc+=int(u)\n\t\t\t\tbreak\n\tif len(a)>0:\n\t\tfor y in range(0,(max(a)+2)):\n\t\t\tif y not in a:\n\t\t\t\tc+=int(y)\n\t\t\t\tbreak\n\tprint(c)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    d=Counter(l)\n    A=[]\n    B=[]\n    for i in d.keys():\n        if(d[i]>=2):\n            A.append(i)\n            B.append(i)\n        else:\n            A.append(i)\n    \n    Ar=list(range(0,len(A)))\n    Br=list(range(0,len(B)))\n    # print(Ar,A)\n    # print(Br,B)\n    s=0\n    flag1=0\n    flag2=0\n    for i in range(max(len(Ar),len(Br))):\n        if(i<len(Ar) and flag1==0 and Ar[i]!=A[i]):\n            flag1=1\n            s+=Ar[i]\n        if(i<len(Br) and flag2==0 and Br[i]!=B[i]):\n            flag2=1\n            s+=Br[i]\n        if(flag1==1 and flag2==1):\n            break\n    if(flag1==0):\n        s+=len(Ar)\n    if(flag2==0):\n        s+=len(Br)\n    print(s)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Subset_Mex\n{\n    static int mex(int[] l, int n){\n        \n        int out = 0;\n\n        for (int i=0; i<101; i++){\n            if (l[i]>0){\n                l[i]--;\n            }\n            else{\n                out = out + i;\n                break;\n            }\n        }\n\n        for (int i=0; i<101; i++){\n            if (l[i]>0){\n                l[i]--;\n            }\n            else{\n                out = out + i;\n                break;\n            }\n        }\n\n        return out;\n\n    }\n    public static void main(String[] args)\n    {\n        Scanner scn = new Scanner(System.in);\n        int tests = scn.nextInt();\n        scn.nextLine();\n\n        int n;\n        \n        int tt;\n        for (int j=0; j<tests; j++){\n            n = scn.nextInt();\n            scn.nextLine();\n            int[] a = new int[101];\n            for (int x=0; x<n; x++){\n                tt = scn.nextInt();\n                a[tt]++;\n            }\n            scn.nextLine();\n\n            System.out.println(mex(a, n));\n        }\n\n        scn.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "#: Author - Soumya Saurav\nimport sys,io,os,time\nfrom collections import defaultdict\nfrom collections import Counter\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\nimport bisect,math,heapq\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\ninput = sys.stdin.readline\n\n########################################\ndef mex(a):\n\tfor i in range(101):\n\t\tif i not in a:\n\t\t\treturn i\nfor ii in range(int(input())):\n\tn = int(input())\n\tarr = list(map(int , input().split()))\n\ta1 = []\n\ta2 = []\n\tcount = Counter(arr)\n\tfor k,v in count.items():\n\t\tif v > 0:\n\t\t\ta1.append(k)\n\t\tv-=1\n\t\tif v > 0:\n\t\t\ta2.append(k)\n\t#print(a1,a2)\n\tprint(mex(a1)+mex(a2))\n\n\n\n\n\n\n'''\n# Wrap solution for more recursion depth\n#submit as python3\nimport collections,sys,threading\nsys.setrecursionlimit(10**9)\nthreading.stack_size(10**8)\n\n\n\nthreading.Thread(target=solve).start()\n'''\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class subset_mex\n{\n    public static int mex(List<Integer> list)\n    {\n        //System.out.println(Arrays.toString(list.toArray()));\n        Collections.sort(list);\n        //System.out.println(Arrays.toString(list.toArray()));\n        List<Integer> a = new ArrayList<Integer>();\n        List<Integer> b = new ArrayList<Integer>();\n        for(int i=0; i<list.size()-1; ++i)\n        {\n            if(list.get(i) == list.get(i+1))\n            {\n                a.add(list.get(i));\n                b.add(list.get(i+1));\n                ++i;\n            }\n            else\n            {\n                a.add(list.get(i));\n            }\n        }\n        a.add(list.get(list.size()-1));\n        //System.out.println(Arrays.toString(a.toArray()));\n        //System.out.println(Arrays.toString(b.toArray()));\n        //System.out.println(counter(a)+\"\\t\"+counter(b));\n        return(counter(a)+counter(b));\n        \n    }\n\n    public static int counter(List<Integer> a)\n    {\n        int counter = 0;\n        if(a.size()==0)\n            ;\n        else if(a.size()==1)\n        {\n            if(a.get(0)>0)\n                counter += 0;\n            else\n                counter += 1;\n        }\n        else if(a.size()>1)\n        {\n           if(a.get(0) == 0)\n           {\n            for(int i=1;i<a.size(); ++i)\n            {\n                if((a.get(i) - a.get(i-1)) > 1)\n                {\n                    counter += a.get(i-1) + 1;break;\n                }\n                if(i==a.size()-1 && (a.get(i) - a.get(i-1)) <= 1)\n                    counter += a.get(i) + 1;\n\n            }\n           }\n           else\n            counter += 0;\n        }\n        return(counter);\n    }\n    \n    public static void main(String[] args)throws IOException \n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int test_cases = Integer.parseInt(br.readLine());\n        for(int i=0; i<test_cases; ++i)\n        {\n            int n = Integer.parseInt(br.readLine());\n            List<Integer> list = new ArrayList<Integer>();\n            String s = br.readLine();\n            for(String x: s.split(\" \"))\n                list.add(Integer.parseInt(x));\n            System.out.println(mex(list));\n        }\n        \n        \n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    c=Counter(a)\n    ans=0\n    check=0\n    for i in range(101):\n        if i not in c:\n            if check==1:\n                ans+=i\n                break\n            else:\n                ans=2*i\n                break\n        elif c[i]==1:\n            if check==0:\n                check+=1\n                ans+=i\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class SubMex {\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\tint t = in.nextInt();\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = in.nextInt(), i, j = 0, k = 0, a[] = new int[101];\n\t\t\tfor (i = 0; i < n; i++)\n\t\t\t\ta[in.nextInt()]++;\n\n\t\t\twhile (a[j] > 0)\n\t\t\t\ta[j++]--;\n\t\t\twhile (a[k] > 0)\n\t\t\t\ta[k++]--;\n\n\t\t\tSystem.out.println(j + k);\n\t\t}\n\t\tin.close();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\n\nfor _ in range(t):\n    n=int(input())\n    *a,=map(int,input().split())\n\n    cnt=[0]*(101)\n\n    for aa in a:\n        cnt[aa]+=1\n    \n    first=0\n    for i in range(101):\n        if cnt[i]==0:\n            break\n\n        cnt[i]-=1\n        first+=1\n    \n    second=0\n    for i in range(101):\n        if cnt[i]==0:\n            break\n        second+=1\n    \n    print(first+second)\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nt = int(input())\n\nwhile t > 0:\n    t -= 1\n    \n    n = int(input())\n    \n    arr = [int(val) for val in input().strip().split()]\n    \n    counts = Counter(arr)\n    \n    i = 0\n    \n    done = 0\n    \n    ans = 0\n    \n    while done < 2:\n        if counts[i] == 0 and done == 0:\n            print(i * 2)\n            break\n        elif counts[i] == 1 and done == 0:\n            ans += i\n            done += 1\n        elif counts[i] < 1 and done == 1:\n            ans += i\n            print(ans)\n            break\n        i += 1\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    i_liczb = int(input())\n    liczby = list(map(int, input().split()))\n    conter = Counter(liczby)\n    wynik = 0\n    cos = True\n    for x in range(101):\n        if cos:\n            if conter[x] >= 2:\n                continue\n            elif conter[x] == 1:\n                cos = False\n                wynik += x\n            else:\n                wynik += 2 * x\n                break\n        else:\n            if conter[x] >= 1:\n                continue\n            else:\n                wynik += x\n                break\n    print(wynik)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=[0]*101\n    arr=list(map(int,input().split()))\n    for x in arr:\n        a[int(x)]+=1\n    i=a.index(0);a[i]=1;print(i+a.index(1))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\ni = 0\nwhile i < t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    k = [a[0]]\n    h = []\n    j = 0\n    v = 0\n    while j < n:\n        if a.count(j) == 0:\n            break\n        j += 1\n    while v < j:\n\n        if a.count(v) <= 1:\n            break\n        v += 1\n    print(j + v)\n    i += 1\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    j = 0\n    while len(a) >= 2 and a[0] == a[1] and a[0] == j:\n        a = a[2:]\n        i = 0\n        for x in a:\n            if x == j:\n                i += 1\n            else:\n                break\n        a = a[i:]\n        j += 1\n    if len(a) == 0 or a[0] != j:\n        print(2*j)\n    else:\n        b = list(set(a[1:]))\n        b.sort()\n        cur = 0\n        i = j+1\n        for x in b:\n            if x != i:\n                break\n            i += 1\n        print(j+i)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = 0\n    b = 0\n    i = 0\n    while a in arr:\n        arr.remove(a)\n        a += 1\n    while b in arr:\n        arr.remove(b)\n        b += 1\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "t= int(input())\nfor i in range(t):\n    n = int(input())\n    l= list(map(int,input().split()))\n    a=0\n    \n    li=2\n    for j in range(101):\n        if l.count(j)>1:\n            continue\n        if l.count(j)==1:\n            if li==1:\n                continue\n            else:\n                a+=j\n                li=li-1\n                if li==0:\n                    break\n            \n        if l.count(j)==0:\n            if li==1:\n                a+=j\n            else:\n                a+=2*j\n            break\n    \n    print(a)\n"
        },
        {
            "language": 3,
            "solution": "#codeforces div-2 round 668\n\n\n'''for i in range(int(input())):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n    print(*arr[::-1])'''\n\n\n'''for i in range(int(input())):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n    run=0\n    for i in range(n-1,-1,-1):\n        if arr[i]<0:\n            run+=arr[i]\n        else:\n            if run<0:\n                temp=arr[i]\n                arr[i]=max(0,arr[i]+run)\n                run=min(0,temp+run)\n    res=0\n    for i in range(n):\n        res+=arr[i] if arr[i]>0 else 0\n    print(res)'''\n\n\"\"\"for i in range(int(input())):\n    n,k=[int(i) for i in input().split()]\n    s=intput()\"\"\"\n\n#Codechef long challenge\n'''from collections import defaultdict\nfor i in range(int(input())):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n    cnt=defaultdict(int)\n    for i in range(n):\n        cnt[arr[i]]+=1\n    print(len(cnt))'''\n\n#Codeforces round 669 div-02\n\n'''for i in range(int(input())):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n    ones=0\n    for i in range(n):\n        if arr[i]==1:\n            ones+=1\n    if ones<=n//2:\n        print(n-ones)\n        print(*[0 for j in range(n-ones)])\n    elif ones%2:\n        print(ones-1)\n        print(*[1 for j in range(ones-1)])\n    else:\n        print(ones)\n        print(*[1 for j in range(ones)])'''\n    \n\n'''def gcd(a,b):\n    if b==0:\n        return a\n    return gcd(b,a%b)\nfor i in range(int(input())):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n\n    k=max(arr)\n    imp=[]\n    run=k\n    arr0=arr[:]\n    for j in range(n):\n        for i in range(len(arr0)):\n\n\n    for i in range(n):\n        imp.append((gcd(k,arr[i]),arr[i]))\n    print(imp)\n    imp.sort(key=lambda x:x[0],reverse=True)\n    res=[]\n    for i in imp:\n        res.append(i[1])\n    print(*res)'''\n\n#Codeforces round 670 DIV-02\nfrom collections import defaultdict\nfor i in range(int(input())):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n    cnt=defaultdict(int)\n    for i in arr:\n        cnt[i]+=1\n    first=0\n    second=0\n    tot=0\n    for j in range(0,max(arr)+2):\n        if cnt[j]==0:\n            first=j\n            break\n    \n    res=0\n    for t in range(0,max(arr)+2):\n        if cnt[t]==1 or cnt[t]==0:\n            second=t\n            break\n    print(first+second)\n\n\n        \n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mxN = 1e5;\nconst long long mod = 1e9 + 7;\nlong long pow(long long a, long long b) {\n  long long r = 1;\n  while (b) {\n    if (b % 2 != 0) r = (r * a) % mod;\n    a = (a * a) % mod;\n    b /= 2;\n  }\n  return r;\n}\nconst int sz = 5e5 + 20;\nlong long fact[sz], inv[sz];\nvoid pre() {\n  fact[0] = 1;\n  inv[0] = pow(fact[0], mod - 2);\n  for (int i = 1; i < sz; i++) {\n    fact[i] = (fact[i - 1] * i) % mod;\n  }\n}\nint spf[10];\nvoid sieve() {\n  spf[1] = 1;\n  for (int i = 2; i < mxN; i++) spf[i] = i;\n  for (int i = 4; i < mxN; i += 2) spf[i] = 2;\n  for (int i = 3; i * i < mxN; i++) {\n    if (spf[i] == i) {\n      for (int j = i * i; j < mxN; j += i) {\n        if (spf[j] == j) spf[j] = i;\n      }\n    }\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int c[101];\n    memset(c, 0, sizeof(c));\n    for (int i = 0; i < n; i++) {\n      int a;\n      cin >> a;\n      c[a]++;\n    }\n    bool f = 0;\n    int ans = 0;\n    for (int i = 0; i <= 100; i++) {\n      if (c[i] == 1 && !f) {\n        ans += i;\n        f = 1;\n      } else if (c[i] == 0) {\n        if (!f) {\n          ans += 2 * i;\n          break;\n        }\n        ans += i;\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nfor i in range(0,a):\n    b=int(input())\n    arr=list(map(int,input().split()))\n    d=dict()\n    for i in arr:\n        d[i]=0\n    for i in arr:\n        d[i]=d[i]+1 \n    a1=[]\n    a2=[]\n    for i in range(0,max(arr)+1):\n        if(i in d):\n            if(d[i]<2):\n                a1.append(i)\n            else:\n                a2.append(i)\n                a1.append(i)\n                \n        else:\n            break \n    an1=0\n\n    for i in range(0,max(arr)+3):\n        if(i not in a1):\n            an1=i \n            break \n    an2=0\n    for i in range(0,max(arr)+3):\n        if(i not in a2):\n            an2=i \n            break\n    print(an1+an2)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom sys import stdin,stdout\nimport math\nimport random\nimport heapq\nfrom collections import Counter\nfrom functools import lru_cache\n#@lru_cache(maxsize=None) #for optimizing the execution time of callable objects/functions(placed above callable functions)\ntry:\n    for _ in range(int(input())):\n        n=int(input())\n        mp={i:0 for i in range(101)}\n        arr=[int(i) for i in input().split()]\n        for i in arr:\n            mp[i]+=1\n        ans=0\n        for i in range(101):\n            if mp[i]==0:\n                ans+=i\n                break\n        for i in range(101):\n            if mp[i]<2:\n                ans+=i\n                break\n        print(ans)\n            \n\n\n\n\n\n\n\n    \nexcept EOFError as e:\n    print(e)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class MainClass\n{\n    public static void main(String[] args) throws IOException\n    {\n        Reader in = new Reader();\n        int t = in.nextInt();\n        StringBuilder stringBuilder = new StringBuilder();\n        while (t-- > 0)\n        {\n            int n = in.nextInt();\n            int[] count = new int[110];\n            for (int i=0;i<n;i++)\n                count[in.nextInt()]++;\n            int ans = 0;\n            for (int i=0;i<110;i++)\n            {\n                if (count[i] == 0)\n                {\n                    ans += i;\n                    break;\n                }\n                count[i]--;\n            }\n            for (int i=0;i<110;i++)\n            {\n                if (count[i] == 0)\n                {\n                    ans += i;\n                    break;\n                }\n                count[i]--;\n            }\n            stringBuilder.append(ans).append(\"\\n\");\n        }\n        System.out.println(stringBuilder);\n    }\n}\nclass Reader\n{\n    final private int BUFFER_SIZE = 1 << 16;\n    private DataInputStream din;\n    private byte[] buffer;\n    private int bufferPointer, bytesRead;\n\n    public Reader()\n    {\n        din = new DataInputStream(System.in);\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public Reader(String file_name) throws IOException\n    {\n        din = new DataInputStream(new FileInputStream(file_name));\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public String readLine() throws IOException\n    {\n        byte[] buf = new byte[64]; // line length\n        int cnt = 0, c;\n        while ((c = read()) != -1)\n        {\n            if (c == '\\n')\n                break;\n            buf[cnt++] = (byte) c;\n        }\n        return new String(buf, 0, cnt);\n    }\n\n    public int nextInt() throws IOException\n    {\n        int ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do\n        {\n            ret = ret * 10 + c - '0';\n        }  while ((c = read()) >= '0' && c <= '9');\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long nextLong() throws IOException\n    {\n        long ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        }\n        while ((c = read()) >= '0' && c <= '9');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public double nextDouble() throws IOException\n    {\n        double ret = 0, div = 1;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n\n        do {\n            ret = ret * 10 + c - '0';\n        }\n        while ((c = read()) >= '0' && c <= '9');\n\n        if (c == '.')\n        {\n            while ((c = read()) >= '0' && c <= '9')\n            {\n                ret += (c - '0') / (div *= 10);\n            }\n        }\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws IOException\n    {\n        bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n        if (bytesRead == -1)\n            buffer[0] = -1;\n    }\n\n    private byte read() throws IOException\n    {\n        if (bufferPointer == bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n\n    public void close() throws IOException\n    {\n        if (din == null)\n            return;\n        din.close();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int a[n];\n    int temp[105] = {0};\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      temp[a[i]]++;\n    }\n    sort(a, a + n);\n    int c = 0, max = 0;\n    int i;\n    for (i = 0; i < n; i++) {\n      if (c == 2) break;\n      if (temp[i] == 2)\n        continue;\n      else if (temp[i] == 1 && c == 0) {\n        max += i;\n        c++;\n      } else if (temp[i] == 1 && c == 1) {\n        continue;\n      } else if (temp[i] == 0 && c == 0) {\n        max += 2 * i;\n        break;\n      } else if (temp[i] == 0 && c == 1) {\n        max += i;\n        break;\n      }\n    }\n    if (i == n)\n      cout << max + i << \"\\n\";\n    else\n      cout << max << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\ndef mexit(n,a):\n    b = list(set(a))\n    ca = Counter(a)\n    b.sort()\n    i = 0\n    m1, m2 = -1, -1\n    while i<len(b):\n        if b[i]!=i:\n            m1 = i\n            break\n        ca[i] -= 1\n        i += 1\n    if m1<0: \n        m1 = i\n    left = sorted([i for i in ca if ca[i]!=0])\n    # print(left)\n    if not left: return m1\n    i=0\n    while i<len(left):\n        if left[i]!=i:\n            m2 = i\n            break\n        i += 1\n    if m2<0: m2 = i\n    return m1+m2\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(mexit(n,a))"
        },
        {
            "language": 4,
            "solution": "\n/**\n * Date: 12 Sep, 2020\n * Link: https://codeforces.com/contest/1406/problem/A\n * \n * @author: Prasad Chaudhari\n * @linkedIn: https://www.linkedin.com/in/prasad-chaudhari-841655a6/\n * @git: https://github.com/Prasad-Chaudhari\n */\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.Arrays;\nimport java.util.LinkedList;\n\npublic class A_1406 {\n\n    public static void main(String[] args) throws IOException {\n        FastIO in = new FastIO(args);\n        int t = in.ni();\n        while (t-- > 0) {\n            int n = in.ni();\n            int a[] = in.gia(n);\n            int freq[] = new int[101];\n            for (int i : a) {\n                freq[i]++;\n            }\n            LinkedList<Integer> l1 = new LinkedList<>();\n            LinkedList<Integer> l2 = new LinkedList<>();\n            for (int i = 0; i <= 100; i++) {\n                if (freq[i] >= 2) {\n                    l1.add(i);\n                    l2.add(i);\n                } else if (freq[i] == 1) {\n                    l1.add(i);\n                }\n            }\n            // System.out.println(l1 + \" \" + l2);\n            int j = 0;\n            int ans = 0;\n            boolean not = false;\n            for (int i : l1) {\n                if (j != i) {\n                    ans += j;\n                    // System.out.println(j + \" _\");\n                    not = true;\n                    break;\n                }\n                j++;\n            }\n            if (!not) {\n                ans += j;\n            }\n            j = 0;\n            not = false;\n            for (int i : l2) {\n                if (j != i) {\n                    ans += j;\n                    // System.out.println(j + \"   __\");\n                    not = true;\n                    break;\n\n                }\n                j++;\n            }\n            if (!not)\n                ans += j;\n\n            System.out.println(ans);\n        }\n        in.bw.flush();\n    }\n\n    static class Data implements Comparable<Data> {\n\n        int a, b;\n\n        public Data(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(Data o) {\n            if (a == o.a) {\n                return Integer.compare(b, o.b);\n            }\n            return Integer.compare(a, o.a);\n        }\n\n        public static void sort(int a[]) {\n            Data d[] = new Data[a.length];\n            for (int i = 0; i < a.length; i++) {\n                d[i] = new Data(a[i], 0);\n            }\n            Arrays.sort(d);\n            for (int i = 0; i < a.length; i++) {\n                a[i] = d[i].a;\n            }\n        }\n    }\n\n    static class FastIO {\n\n        private final BufferedReader br;\n        private final BufferedWriter bw;\n        private String s[];\n        private int index;\n\n        public FastIO(String[] args) throws IOException {\n            if (args.length > 1) {\n                br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(args[0]))));\n                bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File(args[1]))));\n            } else {\n                br = new BufferedReader(new InputStreamReader(System.in));\n                bw = new BufferedWriter(new OutputStreamWriter(System.out, \"UTF-8\"));\n            }\n            s = br.readLine().split(\" \");\n            index = 0;\n        }\n\n        public int ni() throws IOException {\n            return Integer.parseInt(nextToken());\n        }\n\n        public double nd() throws IOException {\n            return Double.parseDouble(nextToken());\n        }\n\n        public long nl() throws IOException {\n            return Long.parseLong(nextToken());\n        }\n\n        public String next() throws IOException {\n            return nextToken();\n        }\n\n        public String nli() throws IOException {\n            try {\n                return br.readLine();\n            } catch (IOException ex) {\n\n            }\n            return null;\n        }\n\n        public int[] gia(int n) throws IOException {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public int[] gia(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            int a[] = new int[n];\n            for (int i = start; i < end; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public double[] gda(int n) throws IOException {\n            double a[] = new double[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nd();\n            }\n            return a;\n        }\n\n        public double[] gda(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            double a[] = new double[n];\n            for (int i = start; i < end; i++) {\n                a[i] = nd();\n            }\n            return a;\n        }\n\n        public long[] gla(int n) throws IOException {\n            long a[] = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nl();\n            }\n            return a;\n        }\n\n        public long[] gla(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            long a[] = new long[n];\n            for (int i = start; i < end; i++) {\n                a[i] = nl();\n            }\n            return a;\n        }\n\n        public int[][][] gwtree(int n) throws IOException {\n            int m = n - 1;\n            int adja[][] = new int[n + 1][];\n            int weight[][] = new int[n + 1][];\n            int from[] = new int[m];\n            int to[] = new int[m];\n            int count[] = new int[n + 1];\n            int cost[] = new int[n + 1];\n            for (int i = 0; i < m; i++) {\n                from[i] = i + 1;\n                to[i] = ni();\n                cost[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n                weight[i] = new int[count[i]];\n            }\n            for (int i = 0; i < m; i++) {\n                adja[from[i]][count[from[i]] - 1] = to[i];\n                adja[to[i]][count[to[i]] - 1] = from[i];\n                weight[from[i]][count[from[i]] - 1] = cost[i];\n                weight[to[i]][count[to[i]] - 1] = cost[i];\n                count[from[i]]--;\n                count[to[i]]--;\n            }\n            return new int[][][] { adja, weight };\n        }\n\n        public int[][][] gwg(int n, int m) throws IOException {\n            int adja[][] = new int[n + 1][];\n            int weight[][] = new int[n + 1][];\n            int from[] = new int[m];\n            int to[] = new int[m];\n            int count[] = new int[n + 1];\n            int cost[] = new int[n + 1];\n            for (int i = 0; i < m; i++) {\n                from[i] = ni();\n                to[i] = ni();\n                cost[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n                weight[i] = new int[count[i]];\n            }\n            for (int i = 0; i < m; i++) {\n                adja[from[i]][count[from[i]] - 1] = to[i];\n                adja[to[i]][count[to[i]] - 1] = from[i];\n                weight[from[i]][count[from[i]] - 1] = cost[i];\n                weight[to[i]][count[to[i]] - 1] = cost[i];\n                count[from[i]]--;\n                count[to[i]]--;\n            }\n            return new int[][][] { adja, weight };\n        }\n\n        public int[][] gtree(int n) throws IOException {\n            int adja[][] = new int[n + 1][];\n            int from[] = new int[n - 1];\n            int to[] = new int[n - 1];\n            int count[] = new int[n + 1];\n            for (int i = 0; i < n - 1; i++) {\n                from[i] = i + 1;\n                to[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n            }\n            for (int i = 0; i < n - 1; i++) {\n                adja[from[i]][--count[from[i]]] = to[i];\n                adja[to[i]][--count[to[i]]] = from[i];\n            }\n            return adja;\n        }\n\n        public int[][] gg(int n, int m) throws IOException {\n            int adja[][] = new int[n + 1][];\n            int from[] = new int[m];\n            int to[] = new int[m];\n            int count[] = new int[n + 1];\n            for (int i = 0; i < m; i++) {\n                from[i] = ni();\n                to[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n            }\n            for (int i = 0; i < m; i++) {\n                adja[from[i]][--count[from[i]]] = to[i];\n                adja[to[i]][--count[to[i]]] = from[i];\n            }\n            return adja;\n        }\n\n        public void print(String s) throws IOException {\n            bw.write(s);\n        }\n\n        public void println(String s) throws IOException {\n            bw.write(s);\n            bw.newLine();\n        }\n\n        public void print(int s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(int s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        public void print(long s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(long s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        public void print(double s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(double s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        private String nextToken() throws IndexOutOfBoundsException, IOException {\n            if (index == s.length) {\n                s = br.readLine().split(\" \");\n                index = 0;\n            }\n            return s[index++];\n        }\n\n        private void validate(int n, int start, int end) {\n            if (start < 0 || end >= n) {\n                throw new IllegalArgumentException();\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque as dq\nfrom collections import defaultdict as dd\nfrom collections import Counter as ct\nfrom functools import lru_cache as lc\nfrom heapq import heappush as hpush, heappop as hpop, heapify as hfy\nfrom bisect import bisect_left, bisect_right\nimport itertools as it\nimport math\nimport sys\n#sys.setrecursionlimit(10**9)\ninput=sys.stdin.readline\n####################################################################\ndef solve() :\n\tn = int(input())\n\tA = list(map(int, input().split()))\n\tC = ct(A)\n\n\tret = 0\n\tfor i in range(110) :\n\t\tif C[i] < 2 :\n\t\t\tret += i\n\t\t\tbreak\n\tfor i in range(110) :\n\t\tif C[i] < 1 :\n\t\t\tret += i\n\t\t\tbreak\n\tprint(ret)\n\nt = int(input())\n#t = 1\nfor i in range(t) :\n\t#print(\"Case #\" + str(i+1) + \": \", end = \"\")\n\tsolve()"
        },
        {
            "language": 3,
            "solution": "from collections import *\n\ndef mex(L):\n\tL = set(L)\n\tret = 0\n\twhile ret in L:\n\t\tret += 1\n\treturn ret\n\nfor T in range(int(input())):\n\tn = int(input())\n\tL = list(sorted(map(int, input().split())))\n\tA,B = [],[]\n\t\n\tA.append(L[0])\n\t\n\tfor x in L[1:]:\n\t\tif(x in A):\n\t\t\tB.append(x)\n\t\telse:\n\t\t\tA.append(x)\n\t\n\tprint(mex(A) + mex(B))\n\t"
        },
        {
            "language": 3,
            "solution": "import collections\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n\n\n    def solve(a):\n        A = collections.Counter(a)\n        a1 = -1\n        if A[0] == 0:\n            return 0\n        elif A[0] == 1:\n            a1 = 0\n        for i in range(len(A)+2):\n            if A[i] == 0:\n                a2 = i\n                if a1 == -1:\n                    return a2*2\n                else:\n                    return a1+a2\n            elif A[i] == 1 and a1 == -1:\n                a1 = i\n\n\n    print(solve(a))"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    s=sorted(set(a))\n    A,B=0,0\n    b=False\n    for i in range(len(s)):\n        if s[i]==i:\n            A+=1\n            if a.count(i)>1 and not b:\n                B+=1\n            else:\n                b=True\n        else:\n            break\n    print(A+B)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\ninput = stdin.readline\n#print = lambda x:stdout.write(str(x)+'\\n')\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s1 = set()\n    s2 = set()\n    for i in range(n):\n        if a[i] in s1:\n            s2.add(a[i])\n        else:\n            s1.add(a[i])\n    ans = 0\n    for i in range(101):\n        if i not in s1:\n            ans += i\n            break\n    for i in range(101):\n        if i not in s2:\n            ans += i\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\n\ntt = int(input())\n\nwhile tt!=0:\n\n    n = int(input())\n    d = defaultdict(int)\n    list1 = list(map(int,input().split()))\n    maxi = 0\n    for i in range(n):\n        d[list1[i]]+=1\n        maxi = max(maxi,list1[i])\n    ans = 0\n    t = -1\n    for i in range(maxi+2):\n        if i not in d.keys():\n            ans+=i\n            t=i\n            break\n\n    for i in range(t+1):\n        if i==t:\n            ans+=i\n        if d[i]==1:\n            ans+=i\n            break\n    print(ans)\n\n\n\n\n\n\n    tt-=1"
        },
        {
            "language": 3,
            "solution": "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\nfrom collections import defaultdict\n\ndef gift():\n    for _ in range(t):\n        n = int(input())\n        array = list(map(int,input().split()))\n        array.sort()\n        dic=defaultdict(lambda:0)\n        for ele in array:\n            dic[ele]+=1\n        counter=0\n        ans=0\n        for i in range(102):\n            if counter==0:\n                if dic[i]==1:\n                    ans+=i\n                    counter+=1\n                elif dic[i]==0:\n                    ans+=2*i\n                    counter+=2\n            elif counter==1:\n                if dic[i]==0:\n                    ans+=i\n                    break\n            else:\n                break\n        yield ans\n                    \nif __name__ == '__main__':\n    t= int(input())\n    ans = gift()\n    print(*ans,sep='\\n')\n            \n\n\n#\"{} {} {}\".format(maxele,minele,minele)\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nfor _ in range(int(input())):\n    N = int(input())\n    X = sorted(list(map(int, input().split())))\n    Answer = []\n    MyDict = Counter(X)\n    Check = True\n    Index = 0\n    while True:\n        if len(Answer)==0 and MyDict.get(Index) == None:\n            Answer.append(Index)\n            Answer.append(Index)\n            break\n        elif len(Answer)==1 and MyDict.get(Index)==None:\n            Answer.append(Index)\n            break\n        elif MyDict.get(Index) == 1 and Check:\n            Answer.append(Index)\n            Check = False\n        Index+=1\n    print(sum(Answer))\n\n# Let's see who is the best !!!\n# ravenS_The_Best\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter as C\nimport sys\npin = sys.stdin.readline\n\nfor T in range(int(pin())):\n    N = int(pin())\n    A = sorted(C([*map(int,pin().split())]).items())\n    f,sm,i = 2,0,0\n    for k,v in A:\n        if k == i and v >= f:\n            i += 1\n            continue\n        elif k == i:\n            sm += i\n            i += 1\n            f -= 1\n        else: break\n    sm += i*f\n    print(sm)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter as C\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d=dict(C(a))\n    x,c=0,0\n    for i in range(101):\n        if i in d:\n            if d[i]<2 and x!=1:\n                c+=i\n                x+=1\n        else:\n            c+=i*(2-x)\n            break\n    print(c)\n                \n    \n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n# coding: utf-8\n\n# In[6]:\n\n\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    c=[]\n    x=input().split(\" \")\n    for i in x:\n        c.append(int(i))\n    c.sort()\n    a=[]\n    b=[]\n    for i in c:\n        if(i not in a):\n            a.append(i)\n        else:\n            b.append(i)\n    mex1=0\n    mex2=0\n    for i in range(101):\n        if(i not in a):\n            mex1=i\n            break\n    for i in range(101):\n        if(i not in b):\n            mex2=i\n            break\n    print(mex1+mex2)\n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(set(a))\n    b.sort()\n    j=0\n    l=len(b)\n    p=[]\n    c=0\n    while j<l:\n        if b[j]!=j:\n            c=j\n            break\n        else:\n            p.append(b[j])\n            j=j+1\n    else:\n        c=j\n    j=0\n    while j<=c:\n        if a.count(j)<=1:\n            v=j\n            break\n        else:\n            j=j+1\n    print(c+v)\n    \n            \n    "
        },
        {
            "language": 1,
            "solution": "#python2\n#from __future__ import print_function\nmod=int(1e9+7)\n#import resource\n#resource.setrlimit(resource.RLIMIT_STACK, [0x100000000, resource.RLIM_INFINITY])\n#import threading\n#threading.stack_size(2**25)\n#import sys\n#sys.setrecursionlimit(10**5)\n#fact=[1]\n#for i in range(1,100001):\n#    fact.append((fact[-1]*i)%mod)\n#ifact=[0]*100001\n#ifact[100000]=pow(fact[100000],mod-2,mod)\n#for i in range(100000,0,-1):\n#    ifact[i-1]=(i*ifact[i])%mod\nfrom random import randint as rn\nimport bisect\nfrom bisect import bisect_left as bl              #c++ lowerbound bl(array,element)\nfrom bisect import bisect_right as br             #c++ upperbound\nimport itertools\nimport collections\nimport math\nimport heapq\nfrom types import GeneratorType\ndef bootstrap(f, stack=[]):\n    def wrappedfunc(*args, **kwargs):\n        if stack:\n            return f(*args, **kwargs)\n        else:\n            to = f(*args, **kwargs)\n            while True:\n                if type(to) is GeneratorType:\n                    stack.append(to)\n                    to = next(to)\n                else:\n                    stack.pop()\n                    if not stack:\n                        break\n                    to = stack[-1].send(to)\n            return to\n    return wrappedfunc\ndef modinv(n,p):\n    return pow(n,p-2,p)\ndef ncr(n,r,p):                        #for using this uncomment the lines calculating fact and ifact\n    t=((fact[n])*((ifact[r]*ifact[n-r])%p))%p\n    return t\ndef GCD(x,y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef ain():                           #takes array as input\n    return list(map(int,sin().split()))\ndef sin():\n    return input().strip()\nrange=xrange\nintmax=10**18\nintmin=-intmax\n\"\"\"*******************************************************\"\"\"\ndef main():\n    for _ in range(int(sin())):\n        n=int(sin())\n        a=ain()\n        f=[0]*102\n        for i in range(n):\n            f[a[i]]+=1\n        fl=0\n        ans=0\n        for i in range(102):\n            if(f[i]==0):\n                ans+=i\n                break\n            f[i]-=1\n        for i in range(102):\n            if(f[i]==0):\n                ans+=i\n                break\n            f[i]-=1\n        print ans\n######## Python 2 and 3 footer by Pajenegod and c1729\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\nimport os, sys\nfrom io import IOBase, BytesIO\n\nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s:self.buffer.write(s.encode('ascii'))\n            self.read = lambda:self.buffer.read().decode('ascii')\n            self.readline = lambda:self.buffer.readline().decode('ascii')\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nif __name__ == '__main__':\n   main()\n#threading.Thread(target=main).start()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5;\nint t, n, a, dem[105], mexb, mexa;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    memset(dem, 0, sizeof(dem));\n    for (int i = 1; i <= n; ++i) {\n      cin >> a;\n      ++dem[a];\n    }\n    mexb = -1;\n    mexa = -1;\n    for (int i = 0; i <= 101; ++i) {\n      if (dem[i] == 0) {\n        mexa = i;\n        if (mexb == -1) mexb = i;\n        break;\n      } else if (dem[i] == 1 && mexb == -1)\n        mexb = i;\n    }\n    if (mexa == -1) mexa = 0;\n    if (mexb == -1) mexb = 0;\n    cout << mexa + mexb << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1 << 30;\nconst long long LINF = 1LL << 50;\nconst int NIL = -1;\nconst int MAX = 10000;\nconst int mod = 1000000007;\nconst double pi = 3.141592653589;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> cnt(101, 0);\n  for (int i = 0; i < n; i++) {\n    int a;\n    cin >> a;\n    cnt[a]++;\n  }\n  int ans = 0;\n  for (int k = 0; k < 2; k++) {\n    for (int i = 0; i <= 100; i++) {\n      if (cnt[i] >= 1) {\n        cnt[i]--;\n      } else {\n        ans += i;\n        break;\n      }\n    }\n  }\n  cout << ans << '\\n';\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) solve();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class runner {\n  public static void main(String[] args)throws IOException \n       {\n           Scanner sc=new Scanner(System.in);\n           int t=sc.nextInt();\n           while(t-->0){\n              int n=sc.nextInt();\n              int[] arr=new int[n];\n              int fre[]=new int[101];\n              for(int i=0;i<n;i++){\n                arr[i]=sc.nextInt();\n                fre[arr[i]]++;}\n              int ans=0,cur=2;\n              for(int i=0;i<=100;i++)\n              { \n                  if(fre[i]==0)\n                      break;\n                  int a=(int)Math.min(fre[i],cur);\n                  ans+=a;\n                  cur=a;\n              }\n               System.out.println(ans);\n       }\n}\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor j in range(0,t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    f=[0]*101\n    for ll in range(0,n):\n        f[a[ll]]+=1\n    o=0\n    p=0\n    k=0\n    for ii in range(0,101):\n        if(k==0):\n            if(f[ii]>=2):\n                o=o+1\n                p=p+1\n            elif(f[ii]==1):\n                o=o+1\n                k=-1\n            else:\n                break\n        else:\n            if(f[ii]>=1):\n                o=o+1\n            else:\n                break\n    print(o+p)\n        \n            "
        },
        {
            "language": 3,
            "solution": "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    ar = [int(i) for i in input().split()]\n    kek = [0] * 101\n    for i in range(n):\n        kek[ar[i]]+=1\n    k,k1= -1,-1\n    for i in range(101):\n        if (kek[i] == 1):\n            if (k1 == -1):\n                k1 = i\n        elif kek[i] == 0:\n            if (k1 == -1):\n                k = k1 = i\n            else:\n                k = i\n            break\n    print(k+k1)\n"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nfor i in range (a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    d = [0] * 101\n    for j in range (b):\n        d[c[j]] += 1\n    e = 2\n    f = 0\n    for j in range (101):\n        if not e:\n            break\n        elif e == 2:\n            if d[j] >= 2:\n                f += 2\n            elif d[j] == 1:\n                e = 1\n                f += 1\n            else:\n                e = 0\n        else:\n            if d[j]:\n                f += 1\n            else:\n                e = 0\n    print(f)"
        },
        {
            "language": 3,
            "solution": "import sys\n# sys.setrecursionlimit(10**6) \ninput=sys.stdin.readline\nt=int(input())\nfor t1 in range(t):\n    n=int(input())\n    l=list(map(int,input().split(\" \")))\n    l.sort()\n    d={}\n    for i in range(n):\n        d[l[i]]=d.get(l[i],0)+1\n    c=0\n    ans=0\n    # print(d)\n    f=0\n    while(True):\n\n\n        if(d.get(c,0)>1):\n            c+=1\n        elif(d.get(c,0)==1):\n            if(f==0):\n                ans+=c\n                f=1\n            c+=1\n        else:\n            ans+=c\n            if(f==0):\n                ans+=c\n            break\n    print(ans)\n        \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int arr[n];\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n    }\n    sort(arr, arr + n);\n    set<int> a, b;\n    for (int i = 0; i < n; i++) {\n      if (!a.count(arr[i])) {\n        a.insert(arr[i]);\n      } else {\n        b.insert(arr[i]);\n      }\n    }\n    int x, y;\n    for (int i = 0; i < 105; i++) {\n      if (!a.count(i)) {\n        x = i;\n        break;\n      }\n    }\n    for (int i = 0; i < 105; i++) {\n      if (!b.count(i)) {\n        y = i;\n        break;\n      }\n    }\n    cout << x + y << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in \" \"*int(input()):\n  n=int(input())\n  a=sorted(list(map(int,input().split())))\n  lst = Counter(a)\n  s=0\n  sub = []\n  a1=sorted(set(a))\n  f=0\n  f1=0\n  for i in range(len(a1)):\n    if a1[i] != i:\n      s+=i\n      f=1\n      break\n    if lst[a1[i]] > 1 and f1 == 0:\n        sub.append(a1[i])\n    else:\n      f1=1\n  if f==0:\n    s=a1[-1]+1\n  if len(sub)!=0:\n    print(s+sub[-1]+1)\n  else:\n    print(s)"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nimport sys,math\ntry:sys.stdin,sys.stdout=open('input.txt','r'),open('out.txt','w')\nexcept:pass\nfrom sys import stdin,stdout;mod=int(1e9 + 7);from statistics import mode\nfrom collections import *;from math import ceil,floor,inf,factorial,gcd,log2,sqrt,log\nii1=lambda:int(stdin.readline().strip())\nis1=lambda:stdin.readline().strip()\niia=lambda:list(map(int,stdin.readline().strip().split()))\nisa=lambda:stdin.readline().strip().split()\n# print('{:.3f}'.format(1),round(1.123456789,4))\n# sys.setrecursionlimit(500000)\ndef lcm(a,b): return (a*b)//gcd(a,b)\ndef setbits(n):return bin(n).count('1')\ndef resetbits(n):return bin(n).count('0')\ndef modinv(n,p):return pow(n,p-2,p)\ndef ncr(n,r):\n    num,den=1,1;r=min(n,n-r)\n    for i in range(r):num*=(n-i);den*=(i+1)\n    return num//den\ndef ncr_p(n, r, p):\n    num,den=1,1;r=min(r,n-r)\n    for i in range(r):num = (num * (n - i)) % p ;den = (den * (i + 1)) % p\n    return (num * modinv(den,p)) % p\ndef isPrime(num) :\n    if num<=1:return False\n    if num==2 or n==3:return True\n    if (num % 2 == 0 or num % 3 == 0) :return False\n    m = int(num**0.5)+1\n    for i in range(5,m,6):\n        if (num % i == 0 or num % (i + 2) == 0) :return False\n    return True\ndef bin_search(s, low, high, val):\n    while low <= high:\n        mid = low + (high - low) // 2;\n        if s[mid] == val:return mid\n        elif s[mid] < val:low = mid + 1\n        else:high = mid - 1\n    return -1\ndef sumofdigit(num):\n    count=0;\n    while num : count+=num % 10;num //= 10;\n    return count;\ndef inputmatrix():\n    r,c=iia();mat=[0]*r;\n    for i in range(r):mat[i]=iia();\n    return r,c,mat;\ndef prefix_sum(n,s):\n    for i in range(1,n):s[i]+=s[i-1]\n    return s;\ndef binomial(n, k):\n    if 0 <= k <= n:\n        ntok = 1;ktok = 1\n        for t in range(1, min(k, n - k) + 1):ntok *= n;ktok *= t;n -= 1\n        return ntok // ktok\n    else:return 0\ndef divisors(n):\n    res = [];\n    for i in range(1,ceil(sqrt(n))+1):\n        if n%i == 0:\n            if i==n//i:res.append(i)\n            else:res.append(i);res.append(n//i)\n    return res;\n# code here\n# print('HI')\nfor _ in range(ii1()):\n    n = ii1()\n    arr = iia()\n    a = Counter(arr)\n    # print(a)\n    first=[]\n    second=[]\n    for key,val in a.items():\n        if val==1:\n            # print(type(key))\n            first.append(key)\n        elif val>=2:\n            first.append(key)\n            second.append(key)\n    first.sort()\n    second.sort()\n    # print(first)\n    # print(second)\n    ans=0\n    flag=False\n    for i in range(len(first)):\n        if first[i]!=i:\n            ans+=i\n            flag=True\n            break\n    if flag==False:\n        ans+=len(first)\n    flag=False\n    # print(ans)\n    for i in range(len(second)):\n        if second[i]!=i:\n            ans+=i\n            flag=True\n            break\n    if flag==False:\n        ans+=len(second)\n\n    print(ans)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    res = []\n    for _ in range(int(input())):\n        l = int(input())\n        arr = list(map(lambda x:int(x), input().split(' ')))\n        dl = [0 for _ in range(101)]\n\n        for ar in arr:\n            dl[ar] += 1\n\n        r = 0\n        cnt = 0\n        i = 0\n        while i < 101:\n            if dl[i] == 0:\n                r += i\n                cnt += 1\n                i -= 1\n            elif dl[i] == 1:\n                for j in range(i, 101):\n                    dl[j] += 1\n                r += i\n                cnt += 1\n            if cnt >= 2:\n                break\n            i += 1\n\n        res.append(r)\n\n    return res\n\nfor s in solve():\n    print(s)"
        },
        {
            "language": 3,
            "solution": "import sys\n\nT = int(sys.stdin.readline().strip())\nfor t in range (0, T):\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    a.sort()\n    m1 = 0\n    m2 = 0\n    for i in range (0, n):\n        if a[i] == m1:\n            m1 = m1 + 1\n        elif a[i] == m2:\n            m2 = m2 + 1\n    print(m1 + m2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, ans = 0, k;\n    cin >> n;\n    int arr[n];\n    vector<int> v(103);\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n      v[arr[i]]++;\n    }\n    for (int i = 0; i < 103; i++) {\n      if (v[i] < 1) {\n        ans = ans + i;\n        k = i;\n        break;\n      } else {\n        v[i]--;\n      }\n    }\n    for (int i = 0; i < 103; i++) {\n      if (v[i] < 1) {\n        ans = ans + i;\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfrom math import gcd\n \nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int,input().split()))\n \n    ans = 0\n    i = 0\n    \n    while True:\n        if i in arr:\n            ans += 1\n            arr.remove(i)\n        else:\n            break\n        \n        i+= 1\n        \n    i = 0\n\n    while True:\n        if i in arr:\n            ans += 1\n            arr.remove(i)\n        else:\n            break\n        \n        i+=1\n        \n    print(ans)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\n\ndef sid():\n    f=1\n    for i in range(10):\n        f=0\n    a=[1,2]\nt=int(input())\n\n\nfor i in range(t):\n    n=int(input())\n    sid()\n    \n    l=list(map(int,input().split()))\n    c={}\n    l.sort()\n    f=0\n    ptr=0\n    ans=0\n    for x in l:\n        if(x in c):\n            c[x]+=1\n        else:\n            c[x]=1\n    \n    \n    \n    \n    for k,v in c.items():\n        if(k==ptr and f==0):\n            if(v==1):\n                ans+=ptr\n                f=1\n                \n        elif(k!=ptr):\n            break\n        ptr+=1\n        \n    \n    if(f==1):\n        \n        ans+=ptr\n    else:\n        ans+=2*ptr\n    print(ans)\n                \n"
        },
        {
            "language": 3,
            "solution": "# def computeGCD(x, y=1):\n#     while (y):\n#         x, y = y, x % y\n#\n#     return x\n\n\nt = int(input())\nwhile(t):\n    t-=1\n    n = int(input())\n    a = [int(_) for _ in input().split(\" \")]\n    di = {}\n    dx = {}\n    dy = {}\n    for i in range(0,102):\n        di[i] = 0\n        dx[i] = 0\n        dy[i] = 0\n    for i in a:\n        di[i]+=1\n\n    ans = 0\n    x = []\n    y = []\n\n    a.sort()\n\n    for el in a:\n        if di[el]>1:\n            dy[el] = 1\n            dx[el] = di[el]-1\n        elif di[el]==1:\n            dx[el] = 1\n\n    for i in range(0,102):\n        if dy[i]==0:\n            ans+=i\n            break\n    for i in range(0,102):\n        if dx[i]==0:\n            ans+=i\n            break\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  std::cin >> n;\n  std::vector<int> v(101);\n  for (int i = 0; i < n; ++i) {\n    int temp;\n    std::cin >> temp;\n    v[temp]++;\n  }\n  int mex_A = -1;\n  int mex_B = -1;\n  bool flag1 = 1;\n  for (int i = 0; i < n; ++i) {\n    if (v[i] > 1 && flag1) {\n      mex_A = mex_B = i;\n    } else if (v[i] >= 1) {\n      mex_A = i;\n      flag1 = 0;\n    } else if (v[i] == 0) {\n      break;\n    }\n  }\n  std::cout << ++mex_A + ++mex_B << \"\\n\";\n}\nint main() {\n  int x;\n  cin >> x;\n  while (x--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    ans, tmp = 0,2\n    count = [0] * 200\n    for i in a:\n        count[i] += 1\n    for i in count:\n        tmp = min(tmp, i)\n        ans += tmp\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nwhile t > 0:\n    lst = [] \n    n = int(input())\n\n    lst=list(map(int, input().split(' ') ) )\n\n    lst.sort()\n\n    curr = 0\n    sum = 0\n    while True:\n        if curr not in lst:\n            sum += curr\n            break\n        lst.remove(curr)\n        curr += 1\n\n    curr = 0\n    while True:\n        if curr not in lst:\n            sum += curr\n            break\n        lst.remove(curr)\n        curr += 1\n\n    print(sum)\n    t-=1\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    size = int(input())\n    count = 0\n    arr = [int(i) for i in input().split(\" \")]\n    counting_arr = [0] * int(max(arr)+2)\n    for i in arr:\n        counting_arr[i] += 1\n    for i in range(len(counting_arr)):\n        if counting_arr[i] >= 1:\n            counting_arr[i] -= 1\n        else:\n            count += i\n            break\n    for i in range(len(counting_arr)):\n        if counting_arr[i] >= 1:\n            counting_arr[i] -= 1\n        else:\n            count += i\n            break\n    print(count)\n"
        },
        {
            "language": 1,
            "solution": "def calc(arr):\n    arr = sorted(arr)\n    A = []\n    B = []\n    m = {}\n    for a in arr:\n        if a not in m:\n            m[a] = 0\n        m[a] += 1\n    af = bf = False\n    for i in range(len(arr)):\n        if i not in m:\n            break\n        A.append(i)\n        if m[i] > 1 and not bf:\n            B.append(i)\n        else:\n            bf = True\n    return len(A) + len(B)\n\ndef main():\n    sol = ''\n    num_lines = int(input())\n    for i in range(num_lines):\n        n = int(input())\n        line = raw_input().split(' ')\n        arr = [int(x) for x in line]\n        sol += str(calc(arr))\n        if i < num_lines-1:\n            sol += '\\n'\n    print(sol)\n\nmain()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Solution{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint t  =sc.nextInt();\n\n\t\twhile(t-- >0){\n\t\t\tint n = sc.nextInt();\n\n\t\t\tint a[] = new int[n];\n\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ta[i] = sc.nextInt();\n\t\t\t}\n\n\t\t\tint map[] = new int[101];\n\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tmap[a[i]]++;\n\t\t\t}\n\n\n\t\t\tint twos = 0, ones = 0;\n    \t\twhile (map[twos] >= 2) twos++;\n    \t\twhile (map[ones] >= 1) ones++;\n\n\t\t\tSystem.out.println(twos + ones);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    t=list(map(int,input().split()))\n    t.sort()\n    l=[]\n    for i in range(n):\n        l.append(i)\n    a=[]\n    out=0\n    for i in range(n):\n        if l[i] not in t:\n            break\n        a.append(i)\n        #print(i)\n    if len(a)!=0:\n        out+=max(a)+1\n    for i in a:\n        t.remove(i)\n    b=t[:]\n    #print(a,b,out)\n    f=0\n    for i in range(n):\n        if l[i] not in b:\n            f=1\n            out+=l[i]\n            break\n    if f==0:\n        if len(b)!=0:\n            out+=max(b)+1\n    print(out)\n    "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nfor i in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    used=[0]*(n)\n    pa=-1\n    pb=-1\n\n    for j in range(n):\n        if arr[j]==pa+1:\n            pa=arr[j]\n            used[j]=1\n    for j in range(n):\n        if arr[j]==pb+1 and used[j]==0:\n            pb=arr[j]\n            used[j]=1\n    print(pa+pb+2)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import Counter\n\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    A = Counter(map(int, sys.stdin.readline().split()))\n\n    ans = 0\n    for _ in range(2):\n        for i in range(n):\n            if A[i] == 0:\n                break\n\n            A[i] -= 1\n            ans += 1\n\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "\ndef input_int():\n    return(int(input()))\n\ndef input_int_list():\n    return(list(map(int,input().split())))\n\ndef input_int_map():\n    return(map(int,input().split()))\n\ndef run():\n    q_num = input_int()\n\n    for i in range(q_num):\n        num_count = input_int()\n        nums = input_int_list()\n        nums.sort()\n\n        first_num = -1\n        second_num = -1\n\n        is_first_end = False\n\n        for i in range(num_count):\n            num_count = nums.count(i)\n\n            if num_count == 1:\n                is_first_end = True\n\n            if not is_first_end and num_count >= 2:\n                first_num = i\n\n            if num_count >= 1:\n                second_num = i\n            else:\n                break\n\n        print(first_num + second_num + 2)\n\nrun()\n\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nCode of Ayush Tiwari\nCodeforces: servermonk\nCodechef: ayush572000\n\n\"\"\"\nimport sys\ninput = sys.stdin.buffer.readline\n\ndef solution():\n    \n    # This is the main code\n    n=int(input())\n    l=list(map(int,input().split()))\n    d={}\n    for i in range(n):\n        d[l[i]]=d.get(l[i],0)+1\n    flag=0\n    for i in range(101):\n        if d.get(i,0)==0:\n            m2=i\n            flag=1\n            m1=i\n            break\n        if d.get(i,0)==1:\n            m1=i\n            break\n    if flag==0:\n        for i in range(101):\n            if d.get(i,0)==0:\n                m2=i\n                break\n    print(m1+m2)\n    \nt=int(input())\nfor _ in range(t):\n    solution()"
        },
        {
            "language": 3,
            "solution": "def mex(a):\n    '''\n    Returns MEX of set(a)\n    MEX = minimum excludant\n    The min number from 0 excludant from set\n    '''\n    mex = 0\n    while mex in a:\n        mex += 1\n    return mex\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    summ = mex(a)\n    for i in range(summ):\n        if a.count(i) > 1:\n            summ += 1\n        else:\n            break\n    print(summ)\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"1406 Problem A\n\"\"\"\nimport math\nfrom sys import stdin,stdout\n\ndef getInt():\n\treturn int(stdin.readline())\n\ndef getInts():\n\treturn list(map(int,stdin.readline().split()))\n\ndef solve():\n\tn = getInt()\n\ta = getInts()\n\thas = [0 for i in range(101)]\n\tfor i in range(n):\n\t\thas[a[i]] += 1\n\n\tx1 = 0\n\tx2 = 0\n\tfor i in range(101):\n\t\tif has[i] == 0:\n\t\t\tx1 = i\n\t\t\tbreak\n\n\tif x1 == 0:\n\t\treturn 0\n\n\tif x1 == n:\n\t\treturn n\n\n\tfor i in range(101):\n\t\tif has[i] == 1 or has[i] == 0:\n\t\t\tx2 = i\n\t\t\tbreak\n\n\treturn x1 + x2\n\n\n\n\ndef main():\n\tt = getInt()\n\tfor i in range(t):\n\t\tstdout.write(str(solve()) + \"\\n\")\n\n\nif __name__ == \"__main__\":\n\tmain()"
        },
        {
            "language": 3,
            "solution": "# by the authority of GOD     author: manhar singh sachdev #\n\nimport os,sys\nfrom io import BytesIO, IOBase\nfrom collections import Counter\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = Counter(map(int,input().split()))\n        ans = 0\n        fl = 2\n        for i in range(101):\n            if a[i] == 1 and fl == 2:\n                fl = 1\n                ans += i\n            elif not a[i]:\n                ans += i*fl\n                break\n        print(ans)\n\n\n#Fast IO Region\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    *a, = map(int, input().split())\n    a.sort()\n    b1, b2 = [], []\n    for i, x in enumerate(a):\n        if x not in b1:\n            b1.append(x)\n        else:\n            b2.append(x)\n\n    ans = 0\n\n    for i in range(0, 101):\n        if i not in b1:\n            ans += i\n            break\n\n    for i in range(0, 101):\n        if i not in b2:\n            ans += i\n            break\n\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    d=defaultdict(int)\n    for i in l:\n        d[i]+=1\n    c=0\n    sum=0\n    l1,l2=[],[]\n    for i in range(0,1001):\n        if d[i]>=2 and c==0:\n            l1.append(i)\n            l2.append(i)\n        else:\n            if d[i]==0:\n                break\n            else:\n                c=1\n                l1.append(i)\n    if len(l1)==0:\n        l1=[-1]\n    if len(l2)==0:\n        l2=[-1]\n    x=max(l1)\n    y=max(l2)\n    print(x+y+2)\n        "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class subset {\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            int n = sc.nextInt();\n            int a[] = new int[n];\n            int map[] = new int[101];\n            Arrays.fill(map, 0);\n            int ans = 0;\n            for (int i = 0; i < n; i++) {\n                a[i] = sc.nextInt();\n                map[a[i]]++;\n            }\n            for (int i = 0; i < 101; i++) {\n                if (map[i] != 0) {\n                    map[i]--;\n                } else {\n                    ans += i;\n                    break;\n                }\n            }\n            for (int i = 0; i < 101; i++) {\n                if (map[i] != 0) {\n                    map[i]--;\n                } else {\n                    ans += i;\n                    break;\n                }\n            }\n            System.out.println(ans);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\td = [0 for i in range(102)]\n\tfor i in a:\n\t\td[i]+=1\n\tcount = 0\n\tans = 0\n\tf = True\n\tfor i in range(102):\n\t\tif f==True and d[i]==1:\n\t\t\tans+=i\n\t\t\tcount+=1\n\t\t\tf=False\n\t\tif d[i]==0:\n\t\t\tif count==1:\n\t\t\t\tans+=i\n\t\t\telse:\n\t\t\t\tans+=i+i\n\t\t\tbreak\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    s = set()\n    z = set()\n    a.sort()\n    for i in range(n):\n        if a[i] in s:\n            z.add(a[i])\n        else:\n            s.add(a[i])\n            \n    mex = 0\n    for ind, i in enumerate(s):\n        if ind == 0 and i!=0:\n            mex += 0\n            break\n        if i+1 not in s:\n            mex += i+1\n            break\n    for jind, j in enumerate(z):\n        if jind == 0 and j != 0:\n            mex += 0\n            break\n        if j+1 not in z:\n            mex += j+1\n            break\n    print(mex)"
        },
        {
            "language": 3,
            "solution": "def algo(n, arr):\n    arr.sort()\n    temp = [0 for _ in range(arr[-1]+1)]\n    for i in range(n):\n        temp[arr[i]] += 1\n\n    t1 = 0\n    for i in range(len(temp)):\n        if temp[i] == 0:\n            t1 = i\n            break\n    else:\n        t1 = len(temp)\n\n    t2 = 0\n    for i in range(len(temp)):\n        if temp[i] < 2:\n            t2 = i\n            break\n    else:\n        t2 = len(temp)\n        \n    return t1 + t2\n    \n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = algo(n, arr)\n    print(ans)\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range (t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = set(a)\n    x = -1\n    for i in range(n):\n        if a.count(i)==0:\n            x = i\n            break\n    if x ==-1:\n        x = n    \n    y = -1\n    for i in range(x):\n        if a.count(i) == 1:\n            y = i\n            break\n    if y == -1:\n        y = x\n    \n    print(x+y)    \n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    a=[]\n    b=[]\n    n=int(input())\n    a=[int(a) for a in input().split()]\n    for j in range(max(a)+2):\n        if(a.count(j)<2):\n            b.append(j)\n            break\n    k=b[0]\n    if(a.count(b[0])==1):\n        while(a.count(k)!=0 and k<max(a)+1):\n            k=k+1    \n        print(b[0]+k)\n    elif(a.count(b[0])==0):\n        print(b[0]*2)"
        },
        {
            "language": 3,
            "solution": "def subsetMex(arr):\n    hashSet = {}\n\n    for i in arr:\n        if i in hashSet: hashSet[i]+=1\n        else: hashSet[i] = 1\n\n    mex = None\n\n    for i in range(102):\n        if i not in hashSet:\n            mex = i\n            break\n    \n    for i in range(mex):\n        if hashSet[i] < 2: return mex+i\n    \n\n    return 2*mex\n\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n\n    arr = list(map(int, input().split()))\n\n    print(subsetMex(arr))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayDeque;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class A {\n    //Solution by Sathvik Kuthuru\n    public static void main(String[] args) {\n        FastReader scan = new FastReader();\n        PrintWriter out = new PrintWriter(System.out);\n        Task solver = new Task();\n        int t = scan.nextInt();\n        for(int tt = 1; tt <= t; tt++) solver.solve(tt, scan, out);\n        out.close();\n    }\n\n    static class Task {\n\n        public void solve(int testNumber, FastReader scan, PrintWriter out) {\n            int n = scan.nextInt();\n            int[] a = new int[101];\n            for(int i = 0; i < n; i++) a[scan.nextInt()]++;\n            int bestA = -1, bestB = -1;\n            for(int i = 0; i <= 100; i++) {\n                if(a[i] > 0) {\n                    a[i]--;\n                    bestA = i;\n                }\n                else break;\n            }\n            for(int i = 0; i <= 100; i++) {\n                if(a[i] > 0) {\n                    a[i]--;\n                    bestB = i;\n                }\n                else break;\n            }\n            out.println(bestA + bestB + 2);\n        }\n    }\n\n    static void shuffle(int[] a) {\n        Random get = new Random();\n        for (int i = 0; i < a.length; i++) {\n            int r = get.nextInt(a.length);\n            int temp = a[i];\n            a[i] = a[r];\n            a[r] = temp;\n        }\n    }\n\n    static void shuffle(long[] a) {\n        Random get = new Random();\n        for (int i = 0; i < a.length; i++) {\n            int r = get.nextInt(a.length);\n            long temp = a[i];\n            a[i] = a[r];\n            a[r] = temp;\n        }\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public FastReader(String s) throws FileNotFoundException {\n            br = new BufferedReader(new FileReader(new File(s)));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())     # number of test cases\nfor _ in range(t):\n    n = int(input())\n    s = input().split()\n    nums = list(map(int, s))\n    nums.sort()\n    mex_a = 0\n    mex_b = 0\n    mex = 0\n    i = 0\n    while i < n:\n        if nums[i] == mex:\n            temp = 0\n            while i < n and nums[i] == mex:\n                temp += 1\n                i += 1\n\n            if temp >= 2:\n                mex += 1\n            else:\n                i -= 1\n                break\n\n        else:\n            break\n\n    mex_a = mex\n    for j in range(i, n):\n        if nums[j] > mex_a:\n            break\n        elif nums[j] == mex_a:\n            mex_a += 1\n    \n    print(mex_a + mex)\n\n\n        "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class SubsetMex{\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n = sc.nextInt();\n\t\t\tint arr[] = new int[n];\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tarr[i] = sc.nextInt();\n\t\t\t}\n\t\t\tArrays.sort(arr);\n\t\t\tint c1 = -1;\n\t\t\tint c2 = -1;\n\t\t\tint j=0;\n\t\t\tint k=0;\n\t\t\twhile(j<arr.length){\n\t\t\t\tint flag = 0;\n\t\t\t\tif(j<arr.length && arr[j]==(c1+1)){\n\t\t\t\t\tc1++;\n\t\t\t\t\tj++;\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\tif(j<arr.length && arr[j]==(c2+1)){\n\t\t\t\t\tc2++;\n\t\t\t\t\tj++;\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\tif(flag==0)\n\t\t\t\t\tj++;\n\t\t\t}\n\t\t\tSystem.out.println(c1+1+c2+1);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    result,got=0,0\n    x,r=True,True\n    for i in range(max(a)+2):\n        if x==True and a.count(i)<=1:\n                got=i\n                x=False\n        if r==True and i not in a:\n            result=i\n            r=False\n    print(got+result)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    c=Counter(a)\n    i=0\n    while c[i]!=0:\n        c[i]-=1\n        i+=1\n    s=i\n    j=0\n    while c[j]!=0:\n        c[j]-=1\n        j+=1\n    s+=j\n    print(s)"
        },
        {
            "language": 3,
            "solution": "'''\n    Auther: ghoshashis545 Ashis Ghosh\n    College: jalpaiguri Govt Enggineering College\n\n'''\nfrom os import path\nimport sys\nfrom heapq import heappush,heappop\nfrom functools import cmp_to_key as ctk\nfrom collections import deque,defaultdict as dd \nfrom bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import sqrt,log,gcd\ndef ii():return int(input())\ndef si():return input().rstrip()\ndef mi():return map(int,input().split())\ndef li():return list(mi())\ndef ceil(a,b): return (a+b-1)//b\nabc='abcdefghijklmnopqrstuvwxyz'\nmod=1000000007\n# mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\n\ndef bo(i):\n    return ord(i)-ord('a')\n\n\ntest = 0\n\n\n\ndef solve():\n\n    for _ in range(ii()):\n        n = ii()\n        a = li()\n        m = dd(int)\n        for i in a:\n            m[i]+=1\n        ans = 0\n        for i in range(101):\n            if i not in m or m[i] == 1:\n                ans += i\n                break\n        for i in range(101):\n            if i not in m:\n                ans += i\n                break\n        print(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n      \nif __name__ ==\"__main__\":\n\n   \n    if path.exists('input.txt'):\n        sys.stdin=open('input.txt', 'r')\n        sys.stdout=open('output.txt','w')\n    else:\n        input=sys.stdin.readline\n\n    t = 1\n    if test:\n        t = ii()\n\n    for _ in range(t):\n\n        solve()"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n\tn = int(input())\n\tnums = list(map(int, input().split()))\n\tre = [0]*105\n\tfor nu in nums:\n\t\tre[nu] += 1\n\tres =0\n\tfor i in range(105):\n\t\tif re[i] < 1:\n\t\t\tres+=i\n\t\t\tbreak\n\tfor i in range(105):\n\t\tif re[i]<2:\n\t\t\tres+=i\n\t\t\tbreak\n\tprint(res)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import defaultdict\ninput = sys.stdin.readline\nfrom collections import deque\n\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(map(int,input().split()))\n\n############ d\u00e9but du code\n\n\nnb = inp()\nfor i in range(nb):\n    temp = 2\n    n = inp()\n    tab = inlt()\n    res = 0\n    chiffre = 0\n    while temp != 0:\n        ite = 0\n        for i in range(n):\n            if tab[i] == chiffre and ite < temp:\n                res += 1\n                ite += 1\n        if ite != temp:\n            temp = ite\n        chiffre += 1\n    print(res)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\n\nimport java.util.*;\n\npublic class Solution {\n    \n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int ii=0;ii<t;ii++) {\n        \tint n=sc.nextInt();\n        \tint[] arr=new int [n];\n        \tint dp[]=new int[101];\n        \tint count=0;\n        \tfor(int i=0;i<n;i++) {\n        \t\tarr[i]=sc.nextInt();\n        \t\tdp[arr[i]]=dp[arr[i]]+1;\n        \t\tcount+=dp[arr[i]];\n        \t}\n        \t\n        \tint s=0;\n        \tint maxa=0;\n        \tfor(int i=0;i<=100;i++) {\n        \t\tif(dp[i]==0) {\n        \t\t\tmaxa=i;\n        \t\t\tbreak;\n        \t\t}\n        \t}\n        \tfor(int i=0;i<=100;i++) {\n        \t\tif(dp[i]==1||dp[i]==0) {\n        \t\t\tmaxa+=i;\n        \t\t\tbreak;\n        \t\t}\n        \t}\n        \tSystem.out.println(maxa);\n        }\n        \n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n \nimport static java.lang.Math.*;\n\npublic class A670 implements Runnable \n{\n    static class InputReader \n    {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream) \n        {\n            this.stream = stream;\n        }\n        \n        public int read()\n        {\n            if (numChars==-1) \n                throw new InputMismatchException();\n            \n            if (curChar >= numChars) \n            {\n                curChar = 0;\n                try\n                {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                \n                if(numChars <= 0)               \n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() \n        {\n            int c = read();\n            \n            while(isSpaceChar(c)) \n                c = read();\n            \n            int sgn = 1;\n        \n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            \n            int res = 0;\n            do\n            {\n                if(c<'0'||c>'9') \n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c)); \n        \n            return res * sgn;\n        }\n\t\t\n        public long nextLong() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            \n            do \n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n                return res * sgn;\n        }\n\t\t\n        public double nextDouble() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') \n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n    \n        public String readString() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do \n            {\n                res.appendCodePoint(c);\n                c = read();\n            } \n            while (!isSpaceChar(c));\n            \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) \n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next()\n        {\n            return readString();\n        }\n        \n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n\t\t\n    }\n\t\n    public static void main(String args[]) throws Exception \n    {\n        new Thread(null, new A670(),\"A670\",1<<27).start();\n    }\n\t// **just change the name of class from Main to reuquired**\n    public void run()\n    {\n        InputReader sc = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n\t\t\n\t\tint tc=sc.nextInt();\n\t\twhile(tc-->0)\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tint a[]=new int[n];\n\t\t\tfor(int i=0;i<n;++i)\n\t\t\t{\n\t\t\t\ta[i]=sc.nextInt();\n\t\t\t}\n\t\t\tHashSet<Integer> set1=new HashSet<>();\n\t\t\tHashSet<Integer> set2=new HashSet<>();\n\t\t\t\n\t\t\tfor(int e:a)\n\t\t\t{\n\t\t\t\tif(set1.contains(e)) set2.add(e);\n\t\t\t\telse set1.add(e);\n\t\t\t}\n\t\t\t\n\t\t\tint low=0,sum=0;\n\t\t\twhile(true)\n\t\t\t{\n\t\t\t\tif(set1.contains(low))\n\t\t\t\t{\n\t\t\t\t\tlow++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsum+=low;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tlow=0;\n\t\t\twhile(true)\n\t\t\t{\n\t\t\t\tif(set2.contains(low))\n\t\t\t\t{\n\t\t\t\t\tlow++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsum+=low;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tw.println(sum);\n\t\t}\n\t\t\n        System.out.flush();\n        w.close();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint T, n, cnt[101], ans;\nbool check;\nint main() {\n  int x;\n  scanf(\"%d\", &T);\n  for (int k = 0; k < T; k++) {\n    check = false;\n    ans = 0;\n    memset(cnt, 0, sizeof(cnt));\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &x);\n      cnt[x]++;\n    }\n    for (int i = 0; i <= 100; i++) {\n      if (cnt[i] >= 2) {\n        continue;\n      }\n      if (cnt[i] == 1) {\n        if (check == false) {\n          ans += i;\n          check = true;\n        }\n      } else {\n        if (check == false) {\n          ans = i * 2;\n          break;\n        } else {\n          ans += i;\n          break;\n        }\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    a = []\n    b = []\n    for num in arr:\n        if num not in a:\n            a.append(num)\n        elif num not in b:\n            b.append(num)\n    a.sort()\n    b.sort()\n    ma = 0\n    mb = 0\n    for i in range(len(a)):\n        if i != a[i]:\n            ma = i\n            break\n        if i == len(a) - 1:\n            ma = i + 1\n    for i in range(len(b)):\n        if i != b[i]:\n            mb = i\n            break\n        if i == len(b) - 1:\n            mb = i + 1\n    print(ma + mb)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mxn = 105;\nint n, a[mxn], cnt[mxn];\nvoid Main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < (int)(mxn); ++i) cnt[i] = 0;\n  for (int i = 0; i < (int)(n); ++i) scanf(\"%d\", &a[i]), cnt[a[i]]++;\n  for (int i = 0; i < (int)(mxn); ++i)\n    if (cnt[i] < 2) {\n      for (int j = i; j < mxn; ++j) {\n        if (cnt[j] < 1) {\n          printf(\"%d\\n\", i + j);\n          return;\n        }\n      }\n    }\n}\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) Main();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def ques2(n,a):\n    c1 = c2 = 0\n    if 0 not in a:\n        return 0 \n        \n    a.sort()\n    d = {}\n    for i in range(101):\n        d[i] = 0 \n    \n    for i in a:\n        d[i] += 1 \n        \n    \n    for i in d:\n        if d[i] < 1:\n            c1 = i \n            break\n            \n    for i in d:\n        if d[i] <= 1:\n            c2 = i \n            break\n        \n    if c1 + c2 > 0:\n        return c1 + c2 \n    else:\n        return 100\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = ques2(n,a)\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    s=list(set(l))\n    f=0\n    res=0\n    for i in range(0,101):\n        cnt=l.count(i)\n        if cnt==0 and f==0:\n            res=2*i\n            break \n        elif cnt<=1:\n            if f==0:\n                res+=i\n                f=1 \n            elif f==1 and cnt==0:\n                res+=i\n                break\n    print(res)\n"
        },
        {
            "language": 3,
            "solution": "import sys,math,heapq,copy\nfrom collections import defaultdict,deque\nfrom bisect import bisect_left,bisect_right\nfrom functools import cmp_to_key\nfrom itertools import groupby\n# sys.stdin=open('input1.txt','r')\n# sys.stdout=open('output1.txt','w')\nfor i in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    d={}\n    for i in range(0,101):\n        d[i]=0\n    for i in l:\n        d[i]+=1\n    l1=[]\n    flag=-1\n    for i in range(0,101):\n        if(d[i]==0):\n                l1.append(i)\n                l1.append(i)                \n        if(flag==-1 and d[i]==1):\n                l1.append(i)\n                flag=1\n        if(len(l1)>=2):\n                break\n    print(l1[0]+l1[1])                                "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 101;\nint n, t, buk[N], maxx;\nint main() {\n  scanf(\"%d\", &t);\n  while (t--) {\n    memset(buk, 0, sizeof(buk));\n    scanf(\"%d\", &n);\n    for (int i = 1, tmp; i <= n; ++i) {\n      scanf(\"%d\", &tmp);\n      buk[tmp]++;\n      maxx = std::max(maxx, tmp);\n    }\n    int a = 0x3fffffff, b = 0x3fffffff;\n    bool flag = false;\n    for (int i = 0; i <= maxx + 1; ++i) {\n      if (!buk[i]) {\n        a = i, b = std::min(b, i);\n        break;\n      } else if (buk[i] == 1 && !flag)\n        b = i, flag = true;\n      else if (flag) {\n        a = i + 1;\n      }\n    }\n    printf(\"%d\\n\", a + b);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\t\t\nfor i in range(t):\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\tz=max(a)+1\n\tfor j in range(n):\n\t\ts=a.count(j)\n\t\tif s==0:\n\t\t\tz=j\n\t\t\tbreak\n\n\tfor j in range(n):\n\t\ts=a.count(j)\n\t\tif s==1 or s==0:\n\t\t\tz=z+j\n\t\t\tbreak\n\tprint(z)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n, i, a[200], b[200] = {0}, n1 = 0, n2 = 0, sum = 0;\n    cin >> n;\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n      b[a[i]]++;\n    }\n    for (i = 0; i < 102; i++) {\n      if (b[i] == 0) {\n        n1 = i;\n        break;\n      } else {\n        if (b[i] == 1) {\n          n1 = i;\n          break;\n        }\n      }\n    }\n    if (b[n1] == 0)\n      cout << 2 * n1 << endl;\n    else {\n      for (i = n1 + 1; i < 102; i++) {\n        if (b[i] == 0) {\n          n2 = i;\n          break;\n        }\n      }\n      cout << n1 + n2 << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  N = int(input())\n  a = list(map(int, input().split()))\n  table = [0] * 101\n  for x in a: table[x] += 1\n  res = -1\n  for i in range(101):\n    if table[i] < 2:\n      if table[i] == 0:\n        if res == -1: res = i\n        res += i\n        break\n      elif res == -1: res = i\n  print(res)"
        },
        {
            "language": 3,
            "solution": "\nfor _ in range(int(input())):\n\tn=int(input())\n\tarr=list(map(int,input().split()))\n\tarr.sort()\n\ts1=set()\n\ts2=set()\n\tfor i in arr:\n\t\tif i not in s1:\n\t\t\ts1.add(i)\n\t\telse:\n\t\t\ts2.add(i)\n\tc=ans=0\n\tfor i in s1:\n\t\tif i!=c:\n\t\t\tbreak\n\t\telse:# -*- coding: ascii -*-\n\t\t\tc+=1\n\tans+=c\n\tc=0\n\tfor i in s2:\n\t\tif i!=c:\n\t\t\tbreak\n\t\telse:\n\t\t\tc+=1\n\tans+=c\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep 14 06:23:50 2020\n\n@author: Dell\n\"\"\"\n\nfor x in range(int(input())):\n    n = int(input())\n    m=list(map(int,input().split()))\n    d=[0]*101\n    for i in range(n):\n        d[m[i]]+=1\n    \n    a=[]\n    for i in range(101):\n        if d[i]==1 and len(a)==0:\n            a.append(i)\n        elif d[i]==0:\n            a.extend([i,i])\n        if len(a)>=2:\n            break\n        \n    print(sum(a[:2]))\n            \n            "
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    alst = list(map(int, input().split()))\n    lst = [0 for _ in range(101)]\n    for a in alst:\n        lst[a] += 1\n    ans = 0\n    flg = False\n    for i, num in enumerate(lst):\n        if num == 0:\n            if not flg:\n                ans = i * 2\n            else:\n                ans += i\n            break\n        elif num == 1 and not flg:\n            ans += i\n            flg = True\n    print(ans)\n    \n\nfor _ in range(int(input())):\n    main()\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\n\n\n\npublic class F{\n\t\n\t\n\t\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\t\n\t\tFastScanner sc=new FastScanner();\n\t\tint  t = sc.nextInt();\n\t\tfirst: while(t-- != 0) {\n\t\t\t\n\t\t\tint n = sc.nextInt();\n\t\t\tint arr[] = sc.readArray(n);\n\t\t\tHashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n\t\t\tfor(int e : arr)\n\t\t\t{\n\t\t\t\tmap.put(e, map.getOrDefault(e, 0)+1);\n\t\t\t}\n\t\t\tint max2 = -1,max1 = -1;\n\t\t\tfor(int i=0; i<=200; i++) {\n\t\t\t\tif(map.containsKey(i)) {\n\t\t\t\t\tif(map.get(i) == 1) {\n\t\t\t\t\t\tmap.remove(i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmap.put(i, map.get(i)-1);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tmax1 = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i=0; i<=200; i++) {\n\t\t\t\tif(!map.containsKey(i)) {\n\t\t\t\t\tmax2 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tSystem.out.println(max1+max2);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n \n\tstatic void sort(int[] a) {\n\t\tArrayList<Integer> l=new ArrayList<>();\n\t\tfor (int i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\n\t\n\tstatic class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong[] readArrayLong(int n) {\n        \tlong[] a=new long[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n        }\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tString nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*; \nimport java.util.*; \n//import javafx.util.*; \nimport java.math.*;\n//import java.lang.*;\npublic class Main \n{ \n  //   static long mod=1000000007;\n  //   static HashSet<Integer> adj[];\n   //  static boolean vis[];\n  //   static int n[];\n  //   static ArrayList<Integer> arr[];\n  // //  static long ans=0;\n  //   static boolean vis[][];\n  //   static final long oo=(long)1e18;\n    // static int par[];\n    // static long child[];\n    // static HashMap<String,Long> hm=new HashMap<>();\n   \n     public static void main(String[] args) throws IOException {  \n        PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        br = new BufferedReader(new InputStreamReader(System.in));\n        int test=nextInt();\n       // int test=1;\n        outer: while(test--!=0){\n            int n=nextInt();\n            int arr[]=new int[n];\n            HashMap<Integer,Integer> hm=new HashMap<>();\n            for(int i=0;i<n;i++){\n                arr[i]=nextInt();\n                hm.put(arr[i],hm.getOrDefault(arr[i],0)+1);\n            }\n            int ans=0;int count=0;\n            for(int i=0;i<n+2;i++){\n                if(!hm.containsKey(i)){\n                    if(count==1)\n                        ans+=i;\n                    else\n                        ans+=2*i;\n                    break;\n                }\n                else if(count==0&&hm.get(i)==1){\n                    ans+=i;\n                    count++;\n                }\n                if(count==2)\n                    break;\n            }\n            pw.println(ans);\n\n        }\n           \n        pw.close();\n    }\n    \n    \n    static class compare implements Comparable<compare>{\n         String s;\n         compare(String s){\n            this.s=s;\n        }\n        public  int compareTo(compare t){\n            return compareVersion(s,t.s);\n        }\n        public  int compareVersion(String version1, String version2) {\n            String[] nums1 = version1.split(\"\\\\.\");\n            String[] nums2 = version2.split(\"\\\\.\");\n            int n1 = nums1.length, n2 = nums2.length;\n\n            // compare versions\n            int i1, i2;\n            for (int i = 0; i < Math.max(n1, n2); ++i) {\n              i1 = i < n1 ? Integer.parseInt(nums1[i]) : 0;\n              i2 = i < n2 ? Integer.parseInt(nums2[i]) : 0;\n              if (i1 != i2) {\n                return i1 > i2 ? 1 : -1;\n              }\n            }\n            // the versions are equal\n            return 0;\n        }\n    }\n  \n    \n    static class Pair{\n        int a;int b;\n        Pair(int a,int b){\n          //  this.index=index;\n            this.a=a;\n            this.b=b;\n            \n            //this.z=z;\n        }   \n    }\n   static void update(long tree[],int idx,long val){\n        //println(idx);\n        while(idx<1000006){\n            \n            tree[idx]+=val;\n            idx+=(idx)&(-idx);\n        }\n    }   \n    static long sum(long tree[],int idx){\n        long sum=0;\n        while(idx>0){\n           \n            sum+=tree[idx];\n            idx-=(idx)&(-idx);\n        }\n        return sum;\n    }\n    public static BufferedReader br;\n    public static StringTokenizer st;\n    public static String next() {\n        while (st == null || !st.hasMoreTokens()) {\n       try {\n                st = new StringTokenizer(br.readLine());\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return st.nextToken();\n    }\n \n    public static Integer nextInt() {\n        return Integer.parseInt(next());\n    }\n    public static Long nextLong() {\n        return Long.parseLong(next());\n    }\n \n    public static Double nextDouble() {\n        return Double.parseDouble(next());\n    }\n    // static class Pair{\n    //     int x;int y;\n    //     Pair(int x,int y,int z){\n    //         this.x=x;\n    //         this.y=y;\n    //        // this.z=z;\n    //      //   this.z=z;\n    //       //  this.i=i;\n    //     }\n    // }\n    // static class sorting implements Comparator<Pair>{\n    //     public int compare(Pair a,Pair b){\n    //         //return (a.y)-(b.y);\n    //         if(a.y==b.y){\n    //             return -1*(a.z-b.z);\n    //         }\n    //         return (a.y-b.y);\n    //     }\n   // }\n\n    static long ncr(long n,long r){\n        \n        if(r==0)\n            return 1l;\n        long val=ncr(n-1,r-1);\n        val=(n*val);\n        val=(val/r);\n        return val;\n    }\n\n    public static int[] na(int n)throws IOException{\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = nextInt();\n        return a;\n    }\n    static class query implements Comparable<query>{\n        int l,r,idx,block;\n        static int len;\n        query(int l,int r,int i){\n            this.l=l;\n            this.r=r;\n            this.idx=i;\n            this.block=l/len;\n        }   \n        public int compareTo(query a){\n            return block==a.block?r-a.r:block-a.block;\n        }\n    }\n    \n    // static class sorting implements Comparator<Pair>{  \n    //     public int compare(Pair a1,Pair a2){  \n    //         if(o1.a==o2.a)\n    //             return (o1.b>o2.b)?1:-1;  \n    //         else if(o1.a>o2.a)  \n    //             return 1;  \n    //         else  \n    //             return -1;  \n    //     }\n    // }  \n    static boolean isPrime(int n) { \n        if (n <= 1) \n            return false; \n        if (n <= 3) \n            return true; \n        if (n % 2 == 0 ||  \n            n % 3 == 0) \n            return false; \n      \n        for (int i = 5; \n                 i * i <= n; i = i + 6) \n            if (n % i == 0 || \n                n % (i + 2) == 0) \n                return false; \n      \n        return true; \n    } \n    static int gcd(int a, int b) { \n      if (b == 0) \n        return a; \n      return gcd(b, a % b);  \n    }  \n    // To compute x^y under modulo m \n    static long power(long x, long y, long m){ \n        if (y == 0) \n            return 1;      \n        long p = power(x, y / 2, m) % m; \n        p = (p * p) % m; \n      \n        if (y % 2 == 0) \n            return p; \n        else\n            return (x * p) % m; \n    }\n    static long fast_pow(long base,long n,long M){\n        if(n==0)\n           return 1;\n        if(n==1)\n        return base;\n        long halfn=fast_pow(base,n/2,M);\n        if(n%2==0)\n            return ( halfn * halfn ) % M;\n        else\n            return ( ( ( halfn * halfn ) % M ) * base ) % M;\n    }\n       static long modInverse(long n,long M){\n        return fast_pow(n,M-2,M);\n    }\n    // (1,1)   \n\n    //     (3,2)   (3,5)\n\n} "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nusing namespace std;\nint t, n;\nvector<int> a, b;\nint main() {\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    a.resize(n);\n    map<int, int> m;\n    for (int i = 0; i < ((int)(n)); i++) cin >> a[i], m[a[i]]++;\n    int ans = 0;\n    int cnt = 0;\n    int i = 0;\n    while (cnt < 2) {\n      if (m[i] < 2 - cnt) ans += i, cnt++;\n      if (cnt == 2) break;\n      if (m[i] < 2 - cnt) ans += i, cnt++;\n      i++;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 1, 0, -1};\nint dy[] = {1, 0, -1, 0};\nconst long double Pi = acos(-1), e = 2.718, ebs = 0.00000000001;\nconst int N = 2e5 + 10, K = 30, mod = 1e9 + 7, SEED = 1331, B = 40;\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int T;\n  cin >> T;\n  while (T--) {\n    int n;\n    cin >> n;\n    vector<long long> a(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a.begin(), a.end());\n    int A = -1, B = -1;\n    for (int i = 0; i < n; i++) {\n      if (a[i] == A + 1) {\n        A = a[i];\n      } else if (a[i] == B + 1) {\n        B = a[i];\n      }\n    }\n    cout << A + B + 2 << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "test = int(input())\nfor t in range(test):\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\ta = 0\n\tb = 0\n\tcontains = [0 for i in range(101)]\n\tfor i in l:\n\t\tcontains[i]+=1\n\n\tfor i in range(n+1):\n\t\tif i in l:\n\t\t\tl.remove(i)\n\t\t\tcontinue\n\t\telse:\n\t\t\ta = i\n\t\t\tbreak\n\tfor i in range(n+1):\n\t\tif i in l:\n\t\t\tl.remove(i)\n\t\t\tcontinue\n\t\telse:\n\t\t\tb = i\n\t\t\tbreak\n\tprint(a+b)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = sorted([int(x) for x in input().split()])\n    A, B = 0, 0\n    for i in a:\n        if A == i:\n            A += 1\n        elif B == i:\n            B += 1\n        #print(A, B)\n    print(A + B)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\nfor nt in range(int(input())):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tc = Counter(a)\n\tflag = 0\n\tans = 0\n\tfor i in range(max(a)+2):\n\t\tif c[i]==1:\n\t\t\tif not flag:\n\t\t\t\tans = i\n\t\t\t\tflag = 1\n\t\telif c[i]==0:\n\t\t\tif not flag:\n\t\t\t\tans = 2*i\n\t\t\telse:\n\t\t\t\tans += i\n\t\t\tbreak\n\tprint (ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  multiset<int> S;\n  for (int i = 1; i <= n; ++i) {\n    int t;\n    cin >> t;\n    S.insert(t);\n  }\n  int Ans = 0;\n  for (int i = 0;; ++i) {\n    multiset<int>::iterator kksk = S.find(i);\n    if (kksk != S.end())\n      S.erase(kksk);\n    else {\n      Ans += i;\n      break;\n    }\n  }\n  for (int i = 0;; ++i) {\n    auto kksk = S.find(i);\n    if (kksk != S.end())\n      S.erase(kksk);\n    else {\n      Ans += i;\n      break;\n    }\n  }\n  cout << Ans << endl;\n}\nint main() {\n  int T;\n  cin >> T;\n  while (T--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1e5 + 5;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  map<int, int> mpp;\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n    mpp[v[i]]++;\n  }\n  int ans1 = 0, ans2 = 0;\n  bool flag = false;\n  for (int i = 0; i <= 100; i++) {\n    if (mpp[i] >= 2) {\n      if (!flag) {\n        ans1++;\n      }\n      ans2++;\n    } else if (mpp[i] == 1) {\n      flag = true;\n      ans2++;\n    } else {\n      break;\n    }\n  }\n  cout << ans1 + ans2 << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long t = 1;\n  cin >> t;\n  while (t--) solve();\n  cerr << \"Time : \" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC\n       << \"ms\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for l in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    a,b = 0,0\n    arr.sort()\n    for i in arr:\n        if a==i:\n            a+=1\n        elif b==i:\n            b+=1\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0]*101\n    for i in a:\n        b[i] += 1\n    flag = False\n    ans = 0\n    for i in range(101):\n        if b[i] == 1 and flag == False:\n            ans += i\n            flag = True\n        elif b[i] == 0:\n            if flag==False:\n                print(i*2)\n            else:\n                print(ans+i)\n            break"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = defaultdict(int)\n    \n    for i in a:\n        d[i] += 1\n        \n    mex1 = 0\n    mex2 = 0\n    for i in range(101):\n        if d[i] >= 2:\n            mex1 += 1\n            mex2 += 1\n        else:\n            for j in range(i, 101):\n                if d[j]:\n                    mex1 += 1\n                else:\n                    break\n                    \n            break\n            \n    print(mex1+mex2)"
        },
        {
            "language": 3,
            "solution": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------- fast io --------------------\nimport math\nfrom collections import Counter,defaultdict,deque\ndef int1():\n    return int(input())\ndef map1():\n    return map(int,input().split())\ndef list1():\n    return list(map(int,input().split()))\nmod=pow(10,9)+7\ndef solve():\n    n=int1()\n    l1=list1()\n    k=Counter(l1)\n    x1=[]\n    x2=[]\n    for i in k:\n        if(k[i]==1):\n            x1.append(i)\n        else:\n            x1.append(i)\n            x2.append(i)\n    x1.sort()\n    x2.sort()\n    sum1=0\n    for i in range(len(x1)):\n        if(x1[i]!=i):\n            sum1+=i\n            break\n    else:\n        sum1+=len(x1)\n    for i in range(len(x2)):\n        if(x2[i]!=i):\n            sum1+=i\n            break\n    else:\n        sum1+=len(x2)\n    print(sum1)    \nfor _ in range(int(input())):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    dc = {}\n    for num in arr:\n        dc[num] = dc.get(num, 0)+1\n    \n    m = max(arr)\n    count = 0\n    ans = 0\n    flag = True\n    for i in range(m+2):\n        if i in dc:\n            if dc[i]<2 and flag:\n                flag = False\n                count+=1\n                ans+=i\n        else:\n            if count:\n                count+=1\n                ans+=i\n            else:\n                count+=2\n                ans+=2*i\n        \n        if count==2:\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "#_________________ Mukul Mohan Varshney _______________#\n \n#Template\nimport sys\nimport os\nimport math\nimport copy\nfrom math import gcd\nfrom bisect import bisect\nfrom io import BytesIO, IOBase\nfrom math import sqrt,floor,factorial,gcd,log,ceil\nfrom collections import deque,Counter,defaultdict\nfrom itertools import permutations, combinations\nfrom itertools import accumulate\n \n#define function \ndef Int(): return int(sys.stdin.readline())\ndef Mint(): return map(int,sys.stdin.readline().split())\ndef Lstr(): return list(sys.stdin.readline().strip())\ndef Str(): return sys.stdin.readline().strip()\ndef Mstr(): return map(str,sys.stdin.readline().strip().split())\ndef List(): return list(map(int,sys.stdin.readline().split()))\ndef Hash(): return dict()\ndef Mod(): return 1000000007\ndef Ncr(n,r,p): return ((fact[n])*((ifact[r]*ifact[n-r])%p))%p\ndef Most_frequent(list): return max(set(list), key = list.count)\ndef Mat2x2(n): return [List() for _ in range(n)]\ndef Lcm(x,y):  return (x*y)//gcd(x,y)\ndef dtob(n): return bin(n).replace(\"0b\",\"\")\ndef btod(n): return int(n,2) \ndef common(l1, l2): \n    return set(l1).intersection(l2)\n    \n    \n# Driver Code     \ndef solution():\n    for i in range(Int()):\n        n=Int()\n        a=List()\n        o=[0]*101\n        p=[0]*101\n        for i in a:\n            if(o[i]>0):\n                p[i]+=1\n            else:\n                o[i]+=1\n        print(o.index(0)+p.index(0))        \n        \n    \n\n#Call the solve function          \nif __name__ == \"__main__\":\n     solution() "
        },
        {
            "language": 3,
            "solution": "#!/usr/local/bin/python3\ndef mex(S):\n    Sset = set(S)\n    for i in range(len(S)+1):\n        if i not in Sset:\n            return i\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    A = set()\n    B = []\n    for num in arr:\n        if num not in A:\n            A.add(num)\n        else:\n            B.append(num)\n    result = mex(A) + mex(B)\n    print(result)\n\n\n\n\"\"\"\nif no duplicates, then mex of the whole arr is the answer\nwhat if there are duplicates?\n\nwhat if we put everything that appears at least once in A\nand then put everything that repeats in B\n\n\"\"\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid charswap(char* a, char* b) {\n  char t = *a;\n  *a = *b;\n  *b = t;\n}\nvoid charbubble(char array[], int n) {\n  int i, j;\n  bool swapped;\n  for (i = 0; i < n - 1; i++) {\n    swapped = false;\n    for (j = 0; j < n - i - 1; j++) {\n      if (array[j] > array[j + 1]) {\n        charswap(&array[j], &array[j + 1]);\n        swapped = true;\n      }\n    }\n    if (swapped == false) break;\n  }\n}\nvoid intswap(int* a, int* b) {\n  int t = *a;\n  *a = *b;\n  *b = t;\n}\nvoid intbubble(int array[], int n) {\n  int i, j;\n  bool swapped;\n  for (i = 0; i < n - 1; i++) {\n    swapped = false;\n    for (j = 0; j < n - i - 1; j++) {\n      if (array[j] > array[j + 1]) {\n        intswap(&array[j], &array[j + 1]);\n        swapped = true;\n      }\n    }\n    if (swapped == false) break;\n  }\n}\nvoid longswap(long long* a, long long* b) {\n  long long t = *a;\n  *a = *b;\n  *b = t;\n}\nvoid longbubble(long long array[], long long n) {\n  long long i, j;\n  bool swapped;\n  for (i = 0; i < n - 1; i++) {\n    swapped = false;\n    {\n      for (j = 0; j < n - i - 1; j++) {\n        if (array[j] > array[j + 1]) {\n          longswap(&array[j], &array[j + 1]);\n          swapped = true;\n        }\n      }\n      if (swapped = false) break;\n    }\n  }\n}\nvoid lowercase(char array[], int n) {\n  for (int i = 0; i < n; i++) {\n    if (array[i] < 97) array[i] = array[i] + 32;\n  }\n}\nbool isprime(long long n) {\n  int count = 0;\n  int flag = 0;\n  for (long long i = n - 1; i > 1; i--) {\n    if (n % i == 0) {\n      flag++;\n    }\n  }\n  if (flag > 0)\n    return false;\n  else\n    return true;\n}\nint smallest(int a, int b, int c) {\n  return (a < b ? (a < c ? a : c) : (b < c ? b : c));\n}\nint greatest(int a, int b, int c) {\n  return (a > b ? (a > c ? a : c) : (b > c ? b : c));\n}\nint factorial(int n) {\n  if (n == 0)\n    return 1;\n  else\n    return n * factorial(n - 1);\n}\nvoid strshiftleft(char array[], int index, int length) {\n  int j;\n  j = index;\n  while (j < length) {\n    if (array[j + 1] != '-') {\n      array[j] = array[j + 1];\n    }\n    j++;\n  }\n}\nlong long fun(long long n) {\n  {\n    int i;\n    for (i = 3; i <= n; i++) {\n      if (n % i == 0)\n        break;\n      else\n        i++;\n    }\n    return i;\n  }\n}\nlong long larger(long long a, long long b) { return (a > b ? a : b); }\nlong long smallerlong(long long a, long long b) { return (a < b ? a : b); }\nint smallerint(int a, int b) { return (a < b ? a : b); }\nlong long maxfreq(long long array[], long long n) {\n  long long maxcount = 0;\n  long long max;\n  long long i = 0;\n  while (i < n - 1) {\n    long long count = 1;\n    bool flag = true;\n    while (flag == true) {\n      if (array[i] == array[i + 1]) {\n        count++;\n        flag = true;\n      } else {\n        flag = false;\n      }\n      i++;\n    }\n    if (count > maxcount) {\n      maxcount = count;\n      max = array[i - 1];\n    }\n  }\n  return max;\n}\nint intpartition(int array[], int low, int high) {\n  int pivot = array[high];\n  int i = low - 1;\n  for (int j = low; j <= high - 1; j++) {\n    if (array[j] < pivot) {\n      i++;\n      intswap(&array[i], &array[j]);\n    }\n  }\n  intswap(&array[i + 1], &array[high]);\n  return i + 1;\n}\nvoid intquick(int array[], int low, int high) {\n  if (low < high) {\n    int pi = intpartition(array, low, high);\n    intquick(array, low, pi - 1);\n    intquick(array, pi + 1, high);\n  }\n}\nint counter(int array[], int n, int a) {\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    if (array[i] == a) count++;\n  }\n  return count;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    int n;\n    cin >> n;\n    int array[n];\n    for (int j = 0; j < n; j++) {\n      cin >> array[j];\n    }\n    int count[101];\n    int mexa, mexb;\n    for (int j = 0; j < 101; j++) {\n      count[j] = counter(array, n, j);\n    }\n    for (int j = 0; j < 101; j++) {\n      if (count[j] == 0) {\n        mexa = j;\n        break;\n      }\n    }\n    for (int j = 0; j < 101; j++) {\n      if (count[j] <= 1) {\n        mexb = j;\n        break;\n      }\n    }\n    cout << mexa + mexb << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    ls =[int(x) for x in input().split()]\n    se = set()\n    for i in range(102):\n        if i in ls:\n            se.add(i)\n            continue\n        else:\n            cnt = i\n            break\n    c =Counter(ls)\n    for j in range(102):\n        if j in se:\n            if c[j]>1:\n                continue\n            else:\n                cnt2 = j\n                break\n        else:\n            cnt2 = j\n            break\n    print(cnt+cnt2)"
        },
        {
            "language": 3,
            "solution": "def solve(s,L):\n    count = [0 for i in range(104)]\n    for i in s:\n        count[i] += 1\n    i = 0\n    f = 0\n    mex = 0\n    while i<len(count):\n        if count[i] == 1 and f != 1:\n            mex += i\n            f = 1\n        elif count[i] == 0:\n            if f == 0:\n                return 2*i\n            else:\n                return mex + i\n        i += 1\n            \n        \nfor i in range(int(input())):\n    L = int(input())\n    s = list(map(int,input().split()))\n    print(solve(s,L))\n    \n\n\n"
        },
        {
            "language": 3,
            "solution": "# map(int, input().split())\nrw = int(input())\nfor wewq in range(rw):\n   n = int(input())\n   a = list(map(int, input().split()))\n   b = 0\n   c = 0\n   for i in range(max(a) + 1):\n      f = a.count(i)\n      if f == 0:\n         break\n      elif f == 1:\n         b += 1\n      elif f >= 2 and b == c:\n         b += 1\n         c += 1\n      elif f >= 2 and b != c:\n         b += 1\n   print(b + c)\n\n\n"
        },
        {
            "language": 3,
            "solution": "def mex(l):\n    if l==[]:\n        return 0\n    l.append(0)\n    for i in range(len(l)):\n        if i==l[i]:\n            pass\n        else:\n            return i\nt=int(input())\nfor i in range(t):\n    n,a=int(input()),list(map(int,input().split()))\n    if n==0:\n        print(0)\n    elif n==1:\n        if a[0]==0:\n            print(1)\n        else:\n            print(0)\n    else:\n        i=0\n        a.sort()\n        la,lb=[],[]\n        while(i<(n-1)):\n            if a[i]==a[i+1]:\n                if a[i] not in la:\n                    la.append(a[i])\n                if a[i+1] not in lb:\n                    lb.append(a[1+i])\n                i+=2\n            else:\n                if a[i] not in la:\n                    la.append(a[i])\n                i+=1\n        la.append(a[-1])\n        print(mex(la)+mex(lb))\n            \n"
        },
        {
            "language": 3,
            "solution": "######################################################\n############Created by Devesh Kumar###################\n#############devesh1102@gmail.com####################\n##########For CodeForces(Devesh1102)#################\n#####################2020#############################\n######################################################\nimport sys\ninput = sys.stdin.readline\n \nimport sys \nimport heapq \nimport copy\nimport math\nimport decimal\n \n# import sys.stdout.flush as flush\n# from decimal import *\n#heapq.heapify(li) \n#\n#heapq.heappush(li,4) \n#\n#heapq.heappop(li)\n#\n# &    Bitwise AND Operator    10 & 7 = 2\n# |    Bitwise OR Operator    10 | 7 = 15\n# ^    Bitwise XOR Operator    10 ^ 7 = 13\n \n# <<    Bitwise Left Shift operator    10<<2 = 40\n# >>    Bitwise Right Shift Operator\n# '''############ ---- Input Functions ---- #######Start#####'''\n# n = 100\n# parent = [-1 for i in range(n)]\n# def find(a):\n#     if parent[a] == a:\n#         return a\n#     else:\n#         parent[a] = find(parent[a])\n    \n# def union(a,b):\n\n\n\n\n\n\n\n\n    # print(lsp )\ndef inp():\n    return(int(input()))\ndef inlt(): \n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef insr2():\n    s = input()\n    s = list(s[:len(s) - 1])\n    s = [ord(s[i]) - ord(\"a\") for i in range(len(s))]\n    return s\ndef invr():\n    return(map(int,input().split()))\n############ ---- Input Functions ---- #######End\n# #####   \n\n\nans = 0\ndef pr_list(a):\n    print( *a , sep=\" \")\n\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return [ a,b]\n    # return [b,a]\ndef pri(a,b):\n    s = \"? \" + str(a) + \" \" + str(b)\n    print(s)\n    sys.stdout.flush()\ndef main():\n    tests =  inp()\n    # tests = 1\n    mod = 1000000007\n    limit = 10**18\n    ans = 0\n    stack = []\n    hashm = {}\n    arr = []\n    heapq.heapify(arr) \n    def find_next(hashm,itr):\n        for i in range(itr,len(hashm)):\n            if hashm[i] == 0:\n                return i \n\n    for test in range(tests):\n        n= inp()\n        arr= inlt()\n        hashm = [0 for i in range(103)]\n\n        for i in arr:\n            hashm[i] = hashm[i]+1\n        ans = 0\n        found = 0\n        for i in range(101):\n            if hashm[i] == 0:\n                if found == 1:\n                    ans = ans + i\n                    found= 2\n                    break\n                else:\n                    found= 2\n                    ans= ans + 2*i\n                    break\n            elif hashm[i] == 1:\n                if found == 1:\n                    found = 2\n                    ans = ans + i\n                    break\n                elif found== 0:\n                    found = 1\n                    ans= ans + i\n                    ans = ans + find_next(hashm,i+1)\n                    break \n        print(ans)\n\n\n\n            \n                \n\n        \n\n\nif __name__== \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "def mex(a):\n    for i in range(0,len(a)+1):\n        if i not in a:\n            break\n    return i\n\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int, input().split()))\n    a.sort()\n    x=a.count(0)\n    if x==0:\n        print(0)\n    elif x==1:\n        print(mex(a))\n    else:\n        s1=[0]\n        s2=[0]\n        a.remove(0)\n        a.remove(0)\n        for i in range(len(a)):\n            if a[i] not in s1:\n                s1.append(a[i])\n            else:\n                s2.append(a[i])\n            \n        x1=mex(s1)\n        x2=mex(s2)\n        print(x1+x2)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    N = int(input())\n    nums = [0] * 101\n    for i in map(int, input().split()):\n        nums[i] += 1\n    mexA = mexB = 0\n    for i in range(101):\n        if nums[i] == 0:\n            mexA = i\n            break\n        nums[i] -= 1\n    for i in range(101):\n        if nums[i] == 0:\n            mexB = i\n            break\n    print(mexA + mexB)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\ndef gmi(): return map(int, stdin.readline().strip().split())\ndef gms(): return map(str, stdin.readline().strip().split())\ndef gari(): return list(map(int, stdin.readline().strip().split()))\ndef gars(): return list(map(int, stdin.readline().strip().split()))\ndef gs(): return stdin.readline().strip()\ndef gls(): return list(stdin.readline())\ndef gi(): return int(stdin.readline())\n\ndef mex(ar):\n    if ar:\n        for i in range(max(ar)+2):\n            if i not in ar:\n                return i\n    else:\n        return 0\n\nt = gi()\nwhile t:\n    t -= 1\n    n = gi()\n    ar = gari()\n    s1, s2 = [] ,[]\n    for i in sorted(ar):\n        s1.append(i)\n        s2.append(i)\n        m1 = mex(s1)\n        m2 = mex(s2)\n        #print(m1, m2, s1, s2)\n        if m1 < m2:\n            s1.pop()\n        elif m1 > m2:\n            s2.pop()\n        else:\n            if len(s1) < len(s2):\n                s2.pop()\n            else:\n                s1.pop()\n    #print(s1, s2)\n    print(mex(s1)+mex(s2))"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    f = [0]*102\n    for i in a:\n        f[i] += 1\n    for i in range(101):\n        if f[i] < 2:\n            mex1 = i\n            break\n    for i in range(101):\n        if f[i] == 0:\n            mex2 = i\n            break\n    ans = mex1 + mex2\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    # l=sorted(l)\n    a=[0]*102\n    b=[0]*102\n    for j in l:\n        if a[j]>0:\n            b[j]+=1\n        else:\n            a[j]+=1\n    print(a.index(0)+b.index(0))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = sorted(list(map(int,input().split())))\n    mex1 = mex2 = 0\n    for i in a:\n        if i == mex1:\n            mex1 = i + 1\n        elif i == mex2:\n            mex2 = i + 1\n    print(mex1+mex2)        "
        },
        {
            "language": 3,
            "solution": "# Author : Pratyaydeep\u21afGhanta\nimport sys,threading\ndef inpt(): return sys.stdin.readline().rstrip()\ndef read(): return [int(x) for x in inpt().split()]\n# Am I debugging, check if I'm using same variable name in two places\ndef mex(a):\n    for i in range(107):\n        if i not in a:\n            return i\ndef main():\n    _T_,=read()\n    for _t_ in range(_T_):\n        n,=read()\n        ar=read()\n        a=set()\n        b=set()\n        vis=set()\n        for i in ar:\n            if i not in vis:\n                vis.add(i)\n                a.add(i)\n            else:\n                b.add(i)\n        print(mex(a)+mex(b))\n\nif (0):\n    sys.setrecursionlimit(10**7)\n    threading.stack_size(10**8)\n    threading.Thread(target=main).start()\nelse:\n    main()"
        },
        {
            "language": 3,
            "solution": "def mex(arr):\n    tmp = [0] * 101\n    for i in arr:\n        tmp[i] = 1\n    for i in range(102):\n        if tmp[i] == 0:\n            return i\n    return 0\nfor _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int,input().split()))\n    A, B = [], []\n    for i in lis:\n        if i not in A:\n            A.append(i)\n        else:\n            B.append(i)\n    \n    print(mex(A) + mex(B))\n    continue"
        },
        {
            "language": 3,
            "solution": "# CF_1406A.\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = [0] * 101\n    for i in range(len(a)):\n        cnt[a[i]] += 1\n    ans = 0\n    for i in range(101):\n        if cnt[i] == 0:\n            ans += i\n            break\n    for i in range(101):\n        if cnt[i] <= 1:\n            ans += i\n            break\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "\n\nfrom bisect import bisect_left, bisect_right\nfor _ in range(int(input())):\n    \n    N = int(input())\n    \n    A = list(map(int, input().split()))\n    \n    A.sort()\n    \n    a = 0\n    b = 0\n    i = 0\n    while i < N:\n        if A[i] < a:\n            i += 1\n        elif A[i] == a:\n            a += 1\n            i += 1\n            if i < N and A[i] == b:\n                b += 1\n                i += 1\n        else:\n            break\n    print(a + b)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    a_high = -1\n    b_high = -1\n    for ele in range(len(arr)):\n##        print(arr[ele], a_high, b_high)\n        if arr[ele] == a_high + 1:\n            a_high += 1\n\n        elif arr[ele] == a_high:\n            if arr[ele] == b_high + 1:\n                b_high += 1\n\n            else:\n                pass\n\n        else:\n            break\n\n    print(a_high + b_high + 2)\n\n    \n                    \n"
        },
        {
            "language": 3,
            "solution": "def get_mex(a):\n    a = sorted(list(set(a)))\n\n    if not a or a[0] != 0:\n        return 0\n\n    mex = 0\n    for i in a:\n        if i == mex:\n            mex = i + 1\n        else:\n            break\n\n    return mex\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    a = sorted(a)\n\n    a_ = []\n    b_ = []\n\n    for i in a:\n        if not a_ or a_[-1] + 1 == i:\n            a_.append(i)\n        else:\n            b_.append(i)\n\n    print(get_mex(a_) + get_mex(b_))\n"
        },
        {
            "language": 3,
            "solution": "for adfsda in range(int(input())):\n    n = int(input())\n    nums = [0] * 110\n    for i in list(map(int,input().split())):\n        nums[i] += 1\n    cs = True\n    ans = 0\n    for i in nums:\n        if i > 1 and cs:\n            ans += 2\n        elif i == 1 or (i > 1 and not cs):\n            cs = False\n            ans += 1\n        else:\n            break\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing std::cerr;\nusing std::cin;\nusing std::max;\nusing std::min;\nint T, n, A[105], cnt[105], Max, flag, ans;\nvoid clear() {\n  flag = Max = ans = 0;\n  for (int i = 1; i <= n; i++) cnt[A[i]]--;\n}\nint main() {\n  for (scanf(\"%d\", &T); T--; clear()) {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n      scanf(\"%d\", &A[i]), cnt[A[i]]++, Max = max(Max, A[i]);\n    for (int i = 0; i <= Max + 1; i++) {\n      if (cnt[i] > 1) continue;\n      if (!cnt[i]) {\n        if (flag)\n          ans += i;\n        else\n          ans += i + i;\n        break;\n      }\n      if (cnt[i] == 1 && !flag) ans += i, flag = 1;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\t\t\t\t\t\t\n\t\t\t\t\t\timport java.io.BufferedReader;\n\t\t\t\t\t\timport java.util.ArrayList;\n\t\t\t\t\t\timport java.util.Arrays;\n\t\t\t\t\t\timport java.util.Collections;\n\t\t\t\t\t\timport java.util.HashMap;\n\t\t\t\t\t\timport java.util.HashSet;\n\t\t\t\t\t\timport java.util.List;\n\t\t\t\t\t\timport java.util.Map;\n\t\t\t\t\t\timport java.io.IOException;\n\t\t\t\t\t\timport java.io.InputStreamReader;\n\t\t\t\t\timport java.math.BigInteger;\n\t\t\t\t\timport java.util.Scanner;\n\t\t\t\t\t\timport java.util.Set;\n\t\t\t\t\t\timport java.util.StringTokenizer;\n\t\t\t\t\timport java.util.Vector;\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tpublic class ForLooops {\n\t\t\t\t\t\t\t static class FastReader \n\t\t\t\t\t\t\t    { \n\t\t\t\t\t\t\t        BufferedReader br; \n\t\t\t\t\t\t\t        StringTokenizer st; \n\t\t\t\t\t\t\t       \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t        public FastReader() \n\t\t\t\t\t\t\t        { \n\t\t\t\t\t\t\t            br = new BufferedReader(new\n\t\t\t\t\t\t\t                     InputStreamReader(System.in)); \n\t\t\t\t\t\t\t        } \n\t\t\t\t\t\t\t        int[] readAr(int n) {\n\t\t\t\t\t\t\t        \tFastReader s=new FastReader();\n\t\t\t\t\t\t\t        \tint [] ar = new int [n];\n\t\t\t\t\t\t\t        \tfor(int i=0;i<n;i++) {\n\t\t\t\t\t\t\t        \t\tar[i]=s.nextInt();\n\t\t\t\t\t\t\t        \t}\n\t\t\t\t\t\t\t        \treturn ar;\n\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t        int[] printAr(int[] ar,int n) {\n\t\t\t\t\t\t\t        \tfor(int i=0;i<n;i++) {\n\t\t\t\t\t\t\t        \t\tSystem.out.print(ar[i]+\" \");\n\t\t\t\t\t\t\t        \t}\n\t\t\t\t\t\t\t           \treturn ar;\n\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\t        String next() \n\t\t\t\t\t\t\t        { \n\t\t\t\t\t\t\t            while (st == null || !st.hasMoreTokens()) \n\t\t\t\t\t\t\t            { \n\t\t\t\t\t\t\t                try\n\t\t\t\t\t\t\t                { \n\t\t\t\t\t\t\t                    st = new StringTokenizer(br.readLine()); \n\t\t\t\t\t\t\t                } \n\t\t\t\t\t\t\t                catch (IOException  e) \n\t\t\t\t\t\t\t                { \n\t\t\t\t\t\t\t                    e.printStackTrace(); \n\t\t\t\t\t\t\t                } \n\t\t\t\t\t\t\t            } \n\t\t\t\t\t\t\t            return st.nextToken();\n\t\t\t\t\t\t\t            \n\t\t\t\t\t\t\t        } \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t        int nextInt() \n\t\t\t\t\t\t\t        { \n\t\t\t\t\t\t\t            return Integer.parseInt(next()); \n\t\t\t\t\t\t\t        } \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t        long nextLong() \n\t\t\t\t\t\t\t        { \n\t\t\t\t\t\t\t            return Long.parseLong(next()); \n\t\t\t\t\t\t\t        } \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t        double nextDouble() \n\t\t\t\t\t\t\t        { \n\t\t\t\t\t\t\t            return Double.parseDouble(next()); \n\t\t\t\t\t\t\t        } \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t        String nextLine() \n\t\t\t\t\t\t\t        { \n\t\t\t\t\t\t\t            String str = \"\"; \n\t\t\t\t\t\t\t            try\n\t\t\t\t\t\t\t            { \n\t\t\t\t\t\t\t                str = br.readLine(); \n\t\t\t\t\t\t\t            } \n\t\t\t\t\t\t\t            catch (IOException e) \n\t\t\t\t\t\t\t            { \n\t\t\t\t\t\t\t                e.printStackTrace(); \n\t\t\t\t\t\t\t            } \n\t\t\t\t\t\t\t            return str; \n\t\t\t\t\t\t\t        }\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tpublic Character charAt(int i) {\n\t\t\t\t\t\t\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\tpublic BigInteger nextBigInteger() {\n\t\t\t\t\t\t\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t static int gcd(int a , int b) {\n\t\t\t\t\t\t\t\t if(b==0)return a;\n\t\t\t\t\t\t\t\t return gcd(b,a%b);\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param args\n\t\t\t\t\t\t\t * @throws IOException\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t static int m =(int) (1e9+7);\n\t\t\t\t\t\t\t static long mod(long x) {\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t return ((x%m+m)%m);\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t static long add(long x,long y) {\n\t\t\t\t\t\t\t\t return mod((mod(x)+mod(y)));\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t static long mul(long x,long y) {\n\t\t\t\t\t\t\t\t return mod((mod(x)*mod(y)));\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t static List<Integer> a= new ArrayList<>();\n\t\t\t\t\t\t\t static int solve(List<Integer> l) {\n\t\t\t\t\t\t\t\t int m = Integer.MAX_VALUE;\n\t\t\t\t\t\t\t\t while(!a.contains(m) && !l.contains(m)) {\n\t\t\t\t\t\t\t\t\t  m++;\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t a.add(m);\n\t\t\t\t\t\t\t\t return m;\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t static int mex(HashSet<Integer> s) {\n\t\t\t\t\t\t\t\t\tfor(int i=0;i<1000;i++) {\n\t\t\t\t\t\t\t\t\t\tif(!s.contains(i))return i;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthrow null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpublic static void main(String[] args)throws IOException  {\n\t\t\t\t\t\t\t\tFastReader s=new FastReader();\n\t\t\t\t\t\t\t\tint t = s.nextInt();\n\t\t\t\t\t\t\t\twhile(t-->0) {\n\t\t\t\t\t\t\t\t\tint n =s.nextInt();\n\t\t\t\t\t\t\t\t\tint[] ar = new int[n];\n\t\t\t\t\t\t\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\t\t\t\t\t\t\tar[i] = s.nextInt();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tHashSet<Integer> used = new HashSet<>(), used2 = new HashSet<>();\n\t\t\t\t\t\t\t\t\tfor(int i:ar) {\n\t\t\t\t\t\t\t\t\t\tif(used.contains(i))used2.add(i);\n\t\t\t\t\t\t\t\t\t\telse used.add(i);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tSystem.out.println(mex(used) + mex(used2));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n}\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    freq = [0 for i in range(101)]\n    arr = list(map(int, input().split()))\n    for i in arr:\n        freq[i] += 1\n    ans = 0\n    for i in range(101):\n        if freq[i] == 0:\n            ans += i\n            break\n        freq[i] -= 1\n    for i in range(101):\n        if freq[i] == 0:\n            ans += i\n            break\n    print(ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CFA {\n  static final PrintWriter out = new PrintWriter(System.out);\n  // static final Reader in = new Reader();\n  static final Scanner in = new Scanner(System.in);\n\n  static class Reader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public Reader() {\n      br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n      while (st == null || !st.hasMoreElements()) {\n        try {\n          st = new StringTokenizer(br.readLine());\n        } catch (final IOException e) {\n          e.printStackTrace();\n        }\n      }\n      return st.nextToken();\n    }\n\n    int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n      return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n      String str = \"\";\n      try {\n        str = br.readLine();\n      } catch (final IOException e) {\n        e.printStackTrace();\n      }\n      return str;\n    }\n  }\n\n  static long binpow(final int a, final int b) {\n    if (b == 0) return 1;\n    final long res = binpow(a, b / 2);\n    if (b % 2 == 1) return res * res * a; else return res * res;\n  }\n\n  static int gcd(final int a, final int b) {\n    if (b == 0) return a;\n    return gcd(b, a % b);\n  }\n\n  static void println(String s){\n    System.out.println(s);\n  }\n\n  static void print(String s){\n    System.out.print(s);\n  }\n\n\n  static int n, k, a[], b[],c[];\n  static Map<Integer, Integer> map;\n  static char[] w;\n  static boolean vis[];\n\n  public static void main(final String[] args) throws Exception {\n    int t = in.nextInt();\n    while (t-- > 0) {\n      n = in.nextInt();\n      a = new int[n];\n      map = new HashMap<>();\n\n      int mexa = -1,mexb = -1;\n\n      for(int i = 0;i < n;i++){\n        a[i] = in.nextInt();\n        map.putIfAbsent(a[i],0);\n        map.put(a[i],map.get(a[i])+1);\n      }\n      List<Integer> list = new ArrayList<>(map.keySet());\n      Collections.sort(list);\n\n      mexa = mexA();\n      mexb = mexB();\n      \n      // println(\" mexa = \"+mexa+\"  mexb = \"+mexb);\n\n      mexa += mexb;\n      println(mexa+\"\");\n    }\n\n    out.close();\n  }\n\n  static int mexA(){\n    for(int i = 0;i < 110;i++){\n      \n      if(map.get(i) == null)\n        return i;\n      map.put(i,map.get(i)-1);  \n    }\n    return -1;\n\n  }\n\n  static int mexB(){\n    for(int i = 0;i < 110;i++){\n      if(map.get(i) == null || map.get(i) == 0)\n        return i;\n    }\n    return -1;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for j in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    init = 0\n    is_first = False\n    for i in range(0, 101):\n        if not is_first and l.count(i) == 0:\n            print(i+i)\n            break\n        elif not is_first and l.count(i) < 2:\n            init = i\n            is_first =True\n            continue\n        elif is_first and l.count(i)== 0:\n            print(i+init)\n            break\n            "
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n  =int(input())\n    mas = list(map(int,input().split()))\n    otv = [0 for i in range(102)]\n    for j in mas:\n        otv[j]+=1\n    kol = 2\n    tum = 1\n    ans = 0\n    for j in range(0,102):\n        if kol == 0:\n            print(ans)\n            break\n        if otv[j] == 0:\n            if kol == 2:\n                ans = 2*j\n                print(ans)\n                break\n            else:\n                ans += j\n                print(ans)\n                break\n        elif otv[j] == 1 and tum:\n            if kol == 1:\n                ans += j\n                print(ans)\n                break\n            elif kol == 2:\n                kol -= 1\n                tum = 0\n                ans += j\n                "
        },
        {
            "language": 3,
            "solution": "# cook your dish here\n\nfrom collections import defaultdict\nt = int(input())\n\nwhile t>0:\n    t -= 1\n    \n    freq = defaultdict(int)\n    n = int(input())\n    arr = list(map(int, input().split()))\n    \n    for i in arr:\n        freq[i] += 1 \n        \n    set1 = []\n    set2 = []\n        \n        \n    firstEnd = False\n    firstNum = 0 \n    secondNum = 0\n    \n    if freq[0] == 0:\n        print(0)\n        continue;\n        \n    if freq[0] == 1:\n        firstEnd = True\n        firstNum = 0\n    \n\n    for i in range(1, 101):\n        \n        if freq[i]>=2:\n            continue;\n        elif freq[i]==1 and not firstEnd:\n            firstEnd = True\n            firstNum = i\n        elif freq[i] == 0:\n            \n            secondNum = i\n            if not firstEnd:\n                firstNum = i\n            \n            break;\n        \n    print(firstNum+secondNum)\n        \n    \n    \n    "
        },
        {
            "language": 3,
            "solution": "\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    b={}\n    for i in range(n):\n        if a[i] in b:\n            b[a[i]]+=1\n        else:\n            b[a[i]]=1\n    c=sorted(b.items(),key=lambda x:x[0])\n    r=0\n    t=0\n\n    for i in range(len(c)):\n        u,v=c[i]\n        if u==i and v==1 and t==0:\n            r+=u\n            t+=1\n\n        elif u!=i and t==0:\n            r+=2*i\n            t+=2\n\n        elif u!=i and t==1:\n            r+=i\n            t+=1\n        if t==2:\n            break\n    if t==1:\n        r+=c[-1][0]+1\n    elif t==0:\n        r+=(c[-1][0]+1)*2\n    print(r)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 1e5 + 10;\nusing namespace std;\nint main() {\n  int t;\n  int dp[111];\n  cin >> t;\n  while (t--) {\n    memset(dp, 0, sizeof(dp));\n    int n;\n    cin >> n;\n    int i;\n    for (i = 0; i < n; i++) {\n      int k;\n      cin >> k;\n      dp[k]++;\n    }\n    int ans = -1;\n    int book = -1;\n    for (i = 0; i < 101; i++) {\n      if (dp[i] <= 1 && ans == -1) {\n        ans = i;\n      }\n      if (dp[i] == 0 && book == -1) {\n        book = i;\n      }\n      if (book != -1 && ans != -1) break;\n    }\n    cout << ans + book << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, i, mex1 = 0, mex2 = 0;\n    cin >> n;\n    int ara[n];\n    for (i = 0; i < n; i++) {\n      cin >> ara[i];\n    }\n    sort(ara, ara + n);\n    for (i = 0; i < n; i++) {\n      if (ara[i] == mex1) mex1++;\n      if (ara[i] == ara[i + 1]) {\n        if (ara[i] == mex2) mex2++;\n      }\n    }\n    cout << mex1 + mex2 << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Sep 12 19:48:03 2020\n\n@author: Dark Soul\n\"\"\"\nt=int(input(''))\narr=[]\nfor i in range(t):\n    n=int(input(''))\n    arr.append(list(map(int,input().split())))\nfor i in arr:\n    n=len(i)\n    cnt=[0]*101\n    sol=0\n    \n    for j in range(n):\n        cnt[i[j]]+=1\n    \n    for j in range(len(cnt)):\n        if cnt[j]<2:\n            sol+=j\n            break\n    for j in range(len(cnt)):\n        if cnt[j]<1:\n            sol+=j\n            break\n    print(sol)"
        },
        {
            "language": 1,
            "solution": "import sys\n\ninput = raw_input\nrange = xrange\n\ndef solve(n, a):\n    a.sort()\n    expect = 0\n    rem = []\n    for el in a:\n        if el == expect:\n            max1 = el\n            expect += 1\n        elif el > expect:\n            break\n        else:\n            rem.append(el)\n    max1 = expect\n    expect = 0\n    for el in rem:\n        if el == expect:\n            expect += 1\n        elif el > expect:\n            break\n    max2 = expect\n    return max1 + max2\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(solve(n, a))\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    freq = [0] * 101\n    for e in map(int, input().split()):\n        freq[e] += 1\n    res = 0\n    one = False\n    for i in range(101):\n        if freq[i] == 0:\n            break\n        if one:\n            res += 1\n        else:\n            if freq[i] > 1:\n                res += 2\n            else:\n                one = True\n                res += 1\n    print(res)\n"
        },
        {
            "language": 3,
            "solution": "#872#sily\nfor _ in range(int(input())):\n    n=int(input())\n    a=[int(x)for x in input().split()]\n    a.sort()\n    b=[0]*101\n    flag=0\n    ss=0\n    for i in a:\n        b[i]+=1\n    for i in range(101):\n        if(flag):\n            if(b[i]==0):\n                ss+=i\n                break\n            else:\n                continue\n        else:\n            if(b[i]==0):\n                ss=2*i\n                break\n            elif(b[i]==1):\n                ss+=i\n                flag=1\n            else:\n                continue\n    print(ss)\n            \n        "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    N = int(input())\n    List = [int(x) for x in input().split()]\n    Dict = Counter(List)\n    first = 0\n    for i in range(101):\n        if(Dict[i]):\n            Dict[i]-=1\n        else:\n            first = i\n            break\n    second = 0\n    for i in range(101):\n        if(Dict[i]):\n            Dict[i]-=1\n        else:\n            second =i\n            break\n    print(first + second)"
        },
        {
            "language": 3,
            "solution": "# Author : Pratyaydeep\u21afGhanta\nimport sys\ndef inpt(): return sys.stdin.readline().rstrip()\ndef read(): return [int(x) for x in inpt().split()]\n# Am I debugging, check if I'm using same variable name in two places\ndef mex(a):\n    for i in range(107):\n        if i not in a:\n            return i\n_T_,=read()\nfor _t_ in range(_T_):\n    n,=read()\n    ar=read()\n    a=set()\n    b=set()\n    vis=set()\n    for i in ar:\n        if i not in vis:\n            vis.add(i)\n            a.add(i)\n        else:\n            b.add(i)\n    print(mex(a)+mex(b))\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid PrintJam(int tc, int val) {\n  cout << \"Case #\" << tc + 1 << \": \" << val << '\\n';\n}\nvoid PrintJam(int tc, const string& val) {\n  cout << \"Case #\" << tc + 1 << \": \" << val << '\\n';\n}\ntemplate <typename T>\nvoid PrintJam(int tc, const vector<T>& val) {\n  cout << \"Case #\" << tc + 1 << \": \";\n  for (int i = 0; i < val.size(); ++i) {\n    cout << val[i] << ' ';\n  }\n  cout << '\\n';\n}\ntemplate <typename T = int>\nvector<T> ReadVector(int sz) {\n  vector<T> v(sz);\n  for (int i = 0; i < sz; ++i) cin >> v[i];\n  return v;\n}\ntemplate <typename Cont>\nbool IsUnique(int sz, const Cont& a) {\n  vector<bool> used(sz, false);\n  for (auto el : a) {\n    if (used[el]) return false;\n    used[el] = true;\n  }\n  return true;\n}\nint64_t BinPow(int64_t a, int64_t p) {\n  if (p == 0) return 1;\n  if (p == 1) return a;\n  if (p % 2 == 0) {\n    auto r = BinPow(a, p / 2);\n    return r * r;\n  } else {\n    auto r = BinPow(a, p - 1);\n    return r * a;\n  }\n}\ntemplate <typename Predicate>\nint bin(int from, int to, Predicate predicate) {\n  while (from + 1 < to) {\n    int m = from + (to - from) / 2;\n    if (predicate(m))\n      from = m + 1;\n    else\n      to = m;\n  }\n  return from;\n}\nvector<vector<int>> ReadGraph(int n, int m, bool orient = false,\n                              bool minus_one = true) {\n  vector<vector<int>> g(n);\n  for (int i = 0; i < m; ++i) {\n    int a, b;\n    cin >> a >> b;\n    g[a - minus_one].push_back(b - minus_one);\n    if (!orient) g[b - minus_one].push_back(a - minus_one);\n  }\n  return g;\n}\nstruct DSU {\n  explicit DSU(int n) : parent(n), pts(n, 0) {\n    iota(parent.begin(), parent.end(), 0);\n  }\n  void Union(int a, int b) {\n    a = Get(a);\n    b = Get(b);\n    if (a == b) return;\n    if (pts[a] < pts[b]) swap(a, b);\n    parent[b] = a;\n    pts[b] -= pts[a];\n  }\n  int Get(int x) {\n    while (x != parent[x]) x = parent[x];\n    return x;\n  }\n  void Add(int x, int v) { pts[Get(x)] += v; }\n  int GetPts(int x) const {\n    int ans = pts[x];\n    while (x != parent[x]) {\n      x = parent[x];\n      ans += pts[x];\n    }\n    return ans;\n  }\n  vector<int> parent, pts;\n};\nusing ll = int64_t;\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  std::cin.tie(nullptr);\n  int t;\n  cin >> t;\n  for (int _ = 0; _ < t; ++_) {\n    int n;\n    cin >> n;\n    auto a = ReadVector(n);\n    vector<int> cnt(101, 0);\n    for (auto el : a) cnt[el]++;\n    int ans = 0;\n    int i = 0;\n    while (i <= 100 && cnt[i] > 0) {\n      --cnt[i];\n      ++i;\n    }\n    ans += i;\n    i = 0;\n    while (i <= 100 && cnt[i] > 0) {\n      --cnt[i];\n      ++i;\n    }\n    ans += i;\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double TL = 1.5 * CLOCKS_PER_SEC;\nmt19937 rng(\n    (unsigned int)chrono::steady_clock::now().time_since_epoch().count());\nconst double pi = acos(-1.0);\nconst long long mod = 1e9 + 7;\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    int n;\n    scanf(\"%d\", &n);\n    map<int, int> mp;\n    for (int i = 0; i < n; i++) {\n      int w;\n      scanf(\"%d\", &w);\n      mp[w] += 1;\n    }\n    int c = 2;\n    int ans = 0;\n    for (int i = 0; c; i++) {\n      if (mp[i] >= c) {\n        ans += c;\n      } else {\n        c = mp[i];\n        ans += c;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int arr[n], x = 0;\n    map<int, int> m;\n    for (int i = 0; i < n; i++) cin >> arr[i], m[arr[i]]++;\n    int i;\n    for (i = 0; i <= 100; i++) {\n      if (m[i] < 2) {\n        x += i;\n        break;\n      }\n    }\n    for (int j = i; j <= 100; j++) {\n      if (m[j] == 0) {\n        x += j;\n        break;\n      }\n    }\n    cout << x << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n/**\n *\n * @author alanl\n */\npublic class Main{\n    static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n    static StringTokenizer st;\n    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n    public static void main(String[] args) throws IOException{\n        int t = readInt();\n        while(t-->0){\n            int n = readInt(), arr[] = new int[n];\n            for(int i = 0; i<n; i++){\n                arr[i] = readInt();\n            }\n            Arrays.sort(arr);\n            int a = 0, b = 0;\n            for(int i = 0; i<n; i++){\n                if(arr[i]==a){\n                    a++;\n                }\n                else if(arr[i]==b)b++;\n            }\n            println(a+b);\n        }\n    }\n    static String next () throws IOException {\n        while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(input.readLine().trim());\n        return st.nextToken();\n    }\n    static long readLong () throws IOException {\n        return Long.parseLong(next());\n    }\n    static int readInt () throws IOException {\n        return Integer.parseInt(next());\n    }\n    static double readDouble () throws IOException {\n        return Double.parseDouble(next());\n    }\n    static char readChar () throws IOException {\n        return next().charAt(0);\n    }\n    static String readLine () throws IOException {\n        return input.readLine().trim();\n    }\n    static void print(Object b) {\n        System.out.print(b);\n    }\n    static void println(Object b) {\n        System.out.println(b);\n    }\n    static void println() {\n        System.out.println();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list([int(x) for x in input().split()])\n    nui = max(l)\n    l1 = []\n    l2 = []\n    ll=list()\n    for i in range  (nui+1):\n        c = 0\n        for j in l:\n            if(i == j):\n                c += 1\n\n        if(c == 1):\n            l1.append(i)\n\n        if(c >= 2):\n            l1.append(i)\n            l2.append(i)\n            ll.append(i*i)\n\n    m1 = max(l1)\n    kkk = -1\n    s = 0\n    for i in range(m1+1):\n        if(i not in l1):\n            kkk = i\n            break\n\n    s2 = -1\n    if(len(l2) > 0):\n        m2 = max(l2)\n        for i in range(m2+1):\n            if(i not in l2):\n                s2 = i\n                break\n    else:\n        s2 = 0\n\n    if(kkk == -1):\n        kkk = m1+1\n\n    if(s2 == -1):\n        s2 = m2+1\n\n    s = kkk+s2\n    v=98\n    print(s+98-v)"
        },
        {
            "language": 3,
            "solution": "from collections import *\nfor u in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    d=defaultdict(int)\n    for i in l:\n        d[i]+=1\n    x,y=[],[]\n    f=0\n    for i in d:\n        if(d[i]%2==0):\n            x.append(i)\n            y.append(i)\n        else:\n            if(d[i]==1):\n                x.append(i)\n            else:\n                x.append(i)\n                y.append(i)\n    x.sort()\n    y.sort()\n    xx,yy=0,0\n    for i in x:\n        if(i==xx):\n            xx+=1\n        else:\n            break\n    for i in y:\n        if(i==yy):\n            yy+=1\n        else:\n            break\n    print(xx+yy)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class A {\n\n    public static void main(String[] args) {\n\n        FastScanner sc = new FastScanner();\n        int t = sc.nextInt();\n        while(t-- > 0) {\n            int n = sc.nextInt();\n            int ar[] = sc.nextIntArray(n);\n            sort(ar);\n            int ans = 0;\n            int f[] = new int[101];\n            for(int i = 0; i < n; i++)\n                f[ar[i]]++;\n\n            for(int i = 0; i <= 100; i++) {\n\n                if (f[i] == 0) {\n                    ans = i * 2;\n                    break;\n                }\n                if(f[i] == 1) {\n                    ans += i;\n                    for(int j = i+1; j <= 100; j++) {\n                        if (f[j] >= 1)\n                            continue;\n                        ans += j;\n                        break;\n                    }\n                    break;\n                }\n            }\n            System.out.println(ans);\n        }\n\n    }\n\n    static final Random random = new Random();\n\n    static class FastScanner {\n        private InputStream sin = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n        public FastScanner(){}\n        public FastScanner(String filename) throws FileNotFoundException {\n            File file = new File(filename);\n            sin = new FileInputStream(file);\n        }\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            }else{\n                ptr = 0;\n                try {\n                    buflen = sin.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n        private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n        public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while(isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while(true){\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                }else if(b == -1 || !isPrintableChar(b) || b == ':'){\n                    return minus ? -n : n;\n                }else{\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n        public double nextDouble() { return Double.parseDouble(next());}\n        public long[] nextLongArray(final int n){\n            final long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n        public int[] nextIntArray(final int n){\n            final int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        public double[] nextDoubleArray(final int n){\n            final double[] a = new double[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextDouble();\n            return a;\n        }\n\n        public List<Integer>[] adjacencyList(int nodes, int edges) {\n            return adjacencyList(nodes, edges, false);\n        }\n        public List<Integer>[] adjacencyList(int nodes, int edges, boolean isDirected) {\n\n            List<Integer>[] adj = new ArrayList[nodes + 1];\n            Arrays.setAll(adj, (i) -> new ArrayList<>());\n            for (int i = 0; i < edges; i++) {\n                int a = nextInt(), b = nextInt();\n                adj[a].add(b);\n                if (!isDirected) adj[b].add(a);\n            }\n            return adj;\n        }\n    }\n\n    static int findDistance(List<Integer> G[], int nodes, int src, int dst) {\n\n        LinkedList<Integer> queue = new LinkedList<>();\n        int dist[] = new int[nodes + 1];\n        int ans = -1;\n        dist[src] = 0;\n        queue.add(src);\n        while(queue.size() > 0) {\n            int u = queue.poll();\n            if(u == dst) {\n                ans = dist[u];\n            }\n            for(int v : G[u]) {\n                if(dist[v] >= 0)\n                    continue;\n                queue.add(v);\n                dist[v] = dist[u] + 1;\n            }\n        }\n        return ans;\n    }\n\n    static void sort(int A[]) {\n        shuffleArray(A);\n        Arrays.sort(A);\n    }\n    static void sort(long A[]) {\n        shuffleArray(A);\n        Arrays.sort(A);\n    }\n    static void sort(double A[]) {\n        shuffleArray(A);\n        Arrays.sort(A);\n    }\n    static void shuffleArray(int[] A) {\n        int n = A.length;\n        for(int i = 0; i < n; i++) {\n            int tmp = A[i];\n            int randomPos = i + random.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n    }\n    static void shuffleArray(long[] A) {\n        int n = A.length;\n        for(int i = 0; i < n; i++) {\n            long tmp = A[i];\n            int randomPos = i + random.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n    }\n    static void shuffleArray(double[] A) {\n        int n = A.length;\n        for(int i = 0; i < n; i++) {\n            double tmp = A[i];\n            int randomPos = i + random.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n    }\n\n    static int[] subArray(int A[], int x, int y) {\n        int B[] = new int[y - x + 1];\n        for(int i = x; i <= y; i++)\n            B[i-x] = A[i];\n        return B;\n    }\n\n    static int[] toArray(List<Integer> L) {\n        return L.stream().mapToInt(x -> x).toArray();\n    }\n\n    static void println(int[] A) {\n        for(int e: A) System.out.print(e + \" \");\n        System.out.println();\n    }\n\n    static void println(long[] A) {\n        for(long e: A) System.out.print(e + \" \");\n        System.out.println();\n    }\n\n    static void println(List arr) {\n        for(Object e: arr) System.out.print(e + \" \");\n        System.out.println();\n    }\n\n    static void print(String s) {\n        System.out.print(s);\n    }\n\n    static void println(String s) {\n        System.out.println(s);\n    }\n\n    static List<Integer> toList(int ar[]) {\n        return Arrays.stream(ar).boxed().collect(Collectors.toList());\n    }\n\n    static List<Long> toList(long ar[]) {\n        return Arrays.stream(ar).boxed().collect(Collectors.toList());\n    }\n\n    static List<Double> toList(double ar[]) {\n        return Arrays.stream(ar).boxed().collect(Collectors.toList());\n    }\n\n    static long gcd(long a, long b) {\n        if(b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    private static int abs(int a){  return (a>=0) ? a: -a;  }\n    private static int min(int... ins){ return Arrays.stream(ins).min().getAsInt(); }\n    private static int max(int... ins){ return Arrays.stream(ins).max().getAsInt(); }\n    private static int sum(int... ins){ return Arrays.stream(ins).sum(); }\n    private static long abs(long a){ return (a>=0) ? a: -a; }\n    private static long min(long... ins){ return Arrays.stream(ins).min().getAsLong(); }\n    private static long max(long... ins){ return Arrays.stream(ins).max().getAsLong(); }\n    private static long sum(long... ins){ return Arrays.stream(ins).sum(); }\n    private static double abs(double a){ return (a>=0) ? a: -a; }\n    private static double min(double... ins){ return Arrays.stream(ins).min().getAsDouble(); }\n    private static double max(double... ins){ return Arrays.stream(ins).max().getAsDouble(); }\n    private static double sum(double... ins){ return Arrays.stream(ins).sum(); }\n\n    private static class Pair implements Comparable<Pair> {\n        int x, y;\n        Pair(int x, int y) { this.x = x; this.y = y; }\n        Pair() {}\n\n        @Override\n        public int compareTo(Pair other) {\n            return x == other.x ? y - other.y : x - other.x;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            Pair pair = (Pair) o;\n            return x == pair.x &&\n                    y == pair.y;\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(x, y);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor index in range(t):\n  row=[0]*101\n  n=input()\n  l=input().split()\n  for c in l:\n    row[int(c)]+=1\n  k=0\n  while row[k]>1:\n    k+=1\n  m=k\n  while row[m]:\n    m+=1\n  print(k+m)\n"
        },
        {
            "language": 3,
            "solution": "def check(arr,l):\n    for i in range(l):\n        if arr[i]!=i:\n            return i\n    else:\n        return i+1\n\ndef solve(l):\n    d={0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0}\n    m=0\n    for i in l:\n        d[i]+=1\n        if i>m:\n            m=i\n    l=[]\n    r=[]\n    ll=0\n    lr=0\n    for i in range(m+1):\n        if d[i]>=2:\n            r.append(i)\n            lr+=1\n            ll+=1\n            l.append(i)\n        elif d[i]==1:\n            ll+=1\n            l.append(i)\n    if lr>0:\n        return check(l,ll)+check(r,lr)\n    else:\n        return check(l,ll)\n\n\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(solve(l))"
        },
        {
            "language": 3,
            "solution": "z=int(input())\nfor i in range(z):\n    \n    x=int(input())\n    a=input().split()\n    A=[]\n    B=[]\n\n    check = 'yes'\n    acheck='yes'\n    bcheck='yes'\n    c=0\n    while check=='yes':\n        \n        if acheck == 'yes':\n            if str(c) in a:\n                A.append(c)\n                a.remove(str(c))\n            else:\n                acheck='no'\n                d=0\n                d+=c\n\n        if bcheck == 'yes':\n            if str(c) in a:\n                B.append(c)\n                a.remove(str(c))\n            else:\n                bcheck='no'\n                e=0\n                e+=c\n        \n        c+=1\n        if bcheck == 'no' and acheck=='no':\n            check='no'\n\n    print(e+d)\n            \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    long long int hashmapp[102] = {0};\n    long long int temp, max = -1;\n    for (long long int i = 0; i < n; i++) {\n      cin >> temp;\n      if (temp > max) {\n        max = temp;\n      }\n      if (hashmapp[temp] <= 1) {\n        hashmapp[temp]++;\n      }\n    }\n    long long int answer = 0, scope = 1;\n    long long int flag = 0;\n    for (long long int i = 0; i < 101; i++) {\n      if (hashmapp[i] == 2) {\n        continue;\n      } else if (hashmapp[i] == 1 && scope == 1) {\n        answer += i;\n        scope = 0;\n      } else if (hashmapp[i] == 0) {\n        answer += i;\n        if (scope == 1) {\n          answer += i;\n          scope = 0;\n        }\n        flag = 1;\n        break;\n      }\n    }\n    if (flag == 0) {\n      answer += max + 1;\n    }\n    if (scope == 1) {\n      answer += max + 1;\n    }\n    cout << answer << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.*;\npublic class Ques1 {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile(t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint a[] = new int[n];\n\t\t\tint freq[] = new int[101];\n\t\t\tfor(int i=0; i<n; i++) {\n\t\t\t\ta[i] = sc.nextInt();\n\t\t\t\tfreq[a[i]]++;\n\t\t\t}\n\t\t\t\n\t\t\tint mexa = 0;\n\t\t\tint mexb = 0;\n\t\t\tfor(int i=0; i<freq.length; i++) {\n\t\t\t\tif(freq[i] == 0) {\n\t\t\t\t\tmexa = i;\n\t\t\t\t\t//freq[i]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tfor(int i=0; i<freq.length; i++) {\n\t\t\t\tif(freq[i] <= 1) {\n\t\t\t\t\tmexb = i;\n\t\t\t\t\t//freq[i]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tSystem.out.println(mexa+mexb);\n\t\t\t\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\nif sys.subversion[0] == \"PyPy\":\n    import io, atexit\n    sys.stdout = io.BytesIO()\n    atexit.register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n    \n    sys.stdin = io.BytesIO(sys.stdin.read())\n    input = lambda: sys.stdin.readline().rstrip()\n\nRS = raw_input\nRI = lambda x=int: map(x,RS().split())\nRN = lambda x=int: x(RS())\n''' ...................................................................... '''\n\nfor _ in xrange(RN()):\n    n = RI()\n    arr = RI()\n    cnt = [0]*102\n\n    A = [0]*102\n    B = [0]*102\n\n    for i in arr:\n        cnt[i]+=1\n\n    for i in xrange(102):\n        if cnt[i]==1:\n            A[i]=1\n        elif cnt[i]>1:\n            A[i]=1\n            B[i]=1\n\n    for i in xrange(0,102):\n        if A[i]==0: break\n\n    for j in xrange(0,102):\n        if B[j]==0: break\n\n    print i+j\n\n        \n\n    \n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    c=[0]*101\n    for i in range(n):\n        c[a[i]]+=1\n    b0=1e5;b1=1e5\n    for i in range(101):\n        if c[i]==0:b0=min(b0,i)\n        elif c[i]==1:b1=min(b1,i)\n    if b0==1e5:print(100);continue\n    elif b1==1e5:print(2*b0);continue    \n    if b0<b1:print(2*b0)\n    else:\n        for i in range(101):\n            if i!=b1 and c[i]==0:\n                # print(b1,i)\n                print(b1+i);break"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n\n    counts = [0] * 102\n    \n    for i in arr:\n        counts[i] += 1\n    \n    ans = 0\n    for i in range(102):\n        if counts[i] == 0:\n            ans += i\n            counts[i] += 1\n            break\n    \n    for i in range(102):\n        if counts[i] <= 1:\n            ans += i\n            break\n    \n    \n    print(ans)"
        },
        {
            "language": 3,
            "solution": "def Solve(Set, n):\n    if 0 not in Set:\n        return 0\n    A, B = [], []\n    dic = {}\n    Mex_s = 0\n    for i in range(101):\n        if i not in Set:\n            Mex_s = i\n            break\n    for num in Set:\n        try:\n            dic[num] += 1\n        except:\n            dic[num] = 1\n    for num in dic:\n        A.append(num)\n        dic[num] -= 1\n        if dic[num] > 0:\n            B.append(num)\n    \n    Mex_a, Mex_b = 0, 0\n    for i in range(101):\n        if i not in A:\n            Mex_a = i\n            break\n    for i in range(101):\n        if i not in B:\n            Mex_b = i\n            break\n    return max(Mex_s, Mex_b+Mex_a)\n    \n\nfor _ in range(int(input())):\n    n = int(input())\n    S = list(map(int, input().split()))\n    S = sorted(S)\n    print(Solve(S, n))\n    "
        },
        {
            "language": 3,
            "solution": "# Created by Prabhat kumar jha and 12/09/20\n\nt = int(input())\nfor test_cases in range(t):\n    n = int(input())\n    l = sorted([int(i) for i in input().split(\" \")])\n    ls = [0]*(n)\n    for i in range(n):\n        if l[i]<n:\n            ls[l[i]]+=1\n    i = 0\n    j = 0\n    while i<n and ls[i]>1:\n        i+=1\n    while j<n and ls[j]>0:\n        j+=1\n    print(i+j)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class cf670_2_1 {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile(t-- > 0) {\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tint f = 0;\n\t\t\t\n\t\t\tint n = sc.nextInt();\n\t\t\tint a[] = new int[400];\n\t\t\tArrayList<Integer> al = new ArrayList<>();\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tint temp = sc.nextInt();\n\t\t\t\ta[temp]++;\n\t\t\t}\n\t\t\tint ans=0;\n\t\t\tfor (int i = 0; i < 101; i++) {\n\t\t\t\tif (a[i] < 2) {\n\t\t\t\t\tif (a[i] == 1) {\n\t\t\t\t\t\tif (f == 0) {\n\t\t\t\t\t\t\tans += i;\n\t\t\t\t\t\t\tf = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif (f == 0) {\n\t\t\t\t\t\t\tans += 2 * i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tans += i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int, input().split()))\n    a.sort()\n    mex=0\n    for i in range(n+3):\n        if i in a:\n            a.pop(a.index(i))\n        else: \n            mex+=i\n            break\n    for i in range(n+3):\n        if i not in a:\n            mex+=i\n            break\n    print(mex)"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.*; \n\npublic class A {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner scan = new Scanner(System.in);\n\t\tint t = scan.nextInt();\n\t\tfor(int tt = 0; tt < t; tt++) {\n\t\t\tint n= scan.nextInt();\n\t\t\tint arr[] =new int[n];\n\t\t\tfor(int i = 0;i<n;i++)\n\t\t\t\tarr[i] = scan.nextInt();\n\t\t\tHashSet<Integer> setA = new HashSet<Integer>();\n\t\t\tHashSet<Integer> setB = new HashSet<Integer>();\n\t\t\tfor(int i = 0;i<n;i++) {\n\t\t\t\tif(setA.contains(arr[i])!=true) {\n\t\t\t\t\tsetA.add(arr[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetB.add(arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint maxa = -1,maxb = -1;\n\t\t\tfor(int i = 0;i<=101;i++) {\n\t\t\t\tif(setA.contains(i)!=true) {\n\t\t\t\t\tmaxa = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0;i<=101;i++) {\n\t\t\t\tif(setB.contains(i)!=true) {\n\t\t\t\t\tmaxb = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(maxa+maxb);\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "noOfTestCases=int(input())\nfor testCase in range(noOfTestCases):\n    noOfElements=int(input())\n    arr=[int(i) for i in input().split()]\n    record=[0]*101\n    for i in range(noOfElements):\n        record[arr[i]]+=1\n    num1=None\n    num2=None\n    for i in range(101):\n        if record[i]==0:\n            num1=i\n            if num2 is None:\n                num2=i\n            break\n        elif record[i]==1:\n            if num2 is None:\n                num2=i\n        else:\n            num1=i\n    print(num1+num2)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        int t;\n        t = in.nextInt();\n        while (t > 0) {\n            solver.call(in,out);\n            t--;\n        }\n\n        out.close();\n    }\n\n    static class TaskA {\n        public void call(InputReader in, PrintWriter out) {\n            int n ,a =-1 , b=0 , c=0;\n            n = in.nextInt();\n            int[] arr= new int[101];\n            for (int i = 0; i <n ; i++) {\n                arr[in.nextInt()]++;\n            }\n            for (int i = 0; i <arr.length ; i++) {\n                if(arr[i]==1 && c==0){\n                    a = i;\n                    c++;\n                }\n                else if(arr[i]==0) {\n                    b = i;\n                    if(a==-1){\n                        b+=i;\n                    }\n                    break;\n                }\n            }\n            if(a==-1)\n            out.println(b);\n            else\n                out.println(a+b);\n\n        }\n    }\n    static int gcd(int a, int b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\npublic class A {\n\n    static class Task {\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int t = in.nextInt();\n            while ((t--) > 0) {\n                int n = in.nextInt();\n                int[] arr = new int[n];\n                int[] countArr = new int[102];\n                for (int i = 0; i < n; i++) {\n                    arr[i] = in.nextInt();\n                    countArr[arr[i]]++;\n                }\n\n                int ans = 0;\n                for (int i = 0; i <= 100; i++) {\n                    if (countArr[i] == 0) {\n                        ans = i * 2;\n                        break;\n                    } else if (countArr[i] == 1) {\n                        ans = i;\n                        for (int j = i + 1; j <= 100; j++) {\n                            if (countArr[j] == 0) {\n                                ans += j;\n                                break;\n                            }\n                        }\n\n                        break;\n                    }\n                }\n\n                out.println(ans);\n            }\n        }\n    }\n\n    private static void sort(double[] arr) {\n        Double[] objArr = Arrays.stream(arr).boxed().toArray(Double[]::new);\n        Arrays.sort(objArr);\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = objArr[i];\n        }\n    }\n\n    private static void sort(int[] arr) {\n        Integer[] objArr = Arrays.stream(arr).boxed().toArray(Integer[]::new);\n        Arrays.sort(objArr);\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = objArr[i];\n        }\n    }\n\n    private static void sort(long[] arr) {\n        Long[] objArr = Arrays.stream(arr).boxed().toArray(Long[]::new);\n        Arrays.sort(objArr);\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = objArr[i];\n        }\n    }\n\n    private static void solve() {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Task task = new Task();\n        task.solve(1, in, out);\n        out.close();\n    }\n\n    public static void main(String[] args) {\n        new Thread(null, () -> solve(), \"1\", 1 << 26).start();\n    }\n\n    static class InputReader {\n\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt = int(input())\nfor _ in range(1,t+1):\n    l = int(input())\n    ar = list(map(int,input().split()))\n    res = dict(Counter(ar))\n    flag = False\n    mex=0\n    for i in range(2147483647):\n        if(i not in res.keys()):\n            if(flag):\n                mex+=i\n            else:\n                mex+=2*i\n            break\n        elif(res[i]>=2):   \n            continue\n        elif(res[i]==1):   \n            if(not flag):\n                mex+=i\n                flag= True\n            else:\n                continue    \n    print(mex)\n            \n            \n    \n    "
        },
        {
            "language": 3,
            "solution": "import math\ndef calculateMex(Set): \n    Mex = 0\n  \n    while (Mex in Set): \n        Mex += 1\n  \n    return (Mex) \nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    Set=set()\n    Set2=set()\n    for num in a:\n        if num in Set:\n            Set2.add(num)\n        Set.add(num)\n    \n    A=calculateMex(Set)\n    B=calculateMex(Set2)\n    print(A+B)\n\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t;\nint n;\nint a;\nint vis[123];\nint res;\ninline void init() {\n  memset(vis, 0, sizeof(vis));\n  res = 0;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> t;\n  while (t--) {\n    init();\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> a;\n      vis[a]++;\n    }\n    for (int i = 0; i < 123; i++) {\n      if (vis[i] == 0) {\n        res += i;\n        break;\n      }\n      vis[i]--;\n    }\n    for (int i = 0; i < 123; i++) {\n      if (vis[i] == 0) {\n        res += i;\n        break;\n      }\n      vis[i]--;\n    }\n    cout << res << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef solution(arr: list) -> int:\n\n    freqArr = []\n    mexA = 0\n    mexB = 0\n    r = list(range(max(arr)+2))\n\n    for i in r:\n        freqArr.append(arr.count(i))\n\n    # iteraing for the first subset A\n    for x in range(len(freqArr)):\n        if freqArr[x] > 0:\n            freqArr[x] -= 1\n        else:\n            mexA = r[x]\n            break\n\n    # iteraing for the second subset B\n    for y in range(len(freqArr)):\n        if freqArr[y] > 0:\n            freqArr[y] -= 1\n        else:\n            mexB = r[y]\n            break\n\n    return mexA + mexB\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    i = input().split(' ')\n    i = [int(x) for x in i]\n    print(solution(i))"
        },
        {
            "language": 3,
            "solution": "def mex(a):\n    m = 0\n    while True:\n        if m in a:\n            m += 1\n        else:\n            return m\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    a = []\n    b = []\n\n    arr = sorted(arr)\n\n    for i in arr:\n        if i in a:\n            b.append(i)\n        else:\n            a.append(i) \n\n    print(mex(a) + mex(b))\n \t\t\t  \t\t \t\t \t\t  \t\t \t\t \t \t\t\t \t \t"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    from collections import Counter\n\n    d = {i: 0 for i in range(101)}\n    d1 = Counter(l)\n    for i in d1.keys():\n        d[i] = d1[i]\n    count=0\n    x=0\n    for i,j in d.items():\n        if x>=1:\n            break\n        if j==0:\n            count+=i\n            x+=1\n    x=0\n    for i,j in d.items():\n        if x>=1:\n            break\n        if j<=1:\n            count+=i\n            x+=1\n    print(count)\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    while i <= max(a) and a.count(i) > 1:\n        i += 1\n    j = 0\n    while j <= max(a) and (j + 1) in a:\n        j += 1\n    if 0 not in a:\n        print(0)\n    else:\n        print(i + j + 1)\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n= int(input())\n    a= [int(x) for x in input().split()]\n    p=0\n    r=-1\n    q=1\n    an=0\n    flag=-1\n    a.sort()\n    for j in set(a):\n\n        if j!=p:\n            if q==1:\n                an = 2*p\n                flag=1\n                break\n            else:\n                an+=p\n                flag=1\n                break\n        else:\n            x=a.count(j)\n            if x==1:\n                if q==1:\n                    an+=j\n                    q=-1\n                    flag=0\n        p+=1\n    if flag==0:\n        print(an + len(set(a)))\n    elif flag==1:\n        print(an)\n    else:\n        print(2*(len(set(a))))"
        },
        {
            "language": 3,
            "solution": "import math\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=[0 for i in range(101)]\n    for i in range(n):\n        b[a[i]]+=1\n    sumi=0\n    f=0\n    for i in range(len(b)):\n        if(b[i]==0 and f==1):\n            sumi+=i\n            f+=1\n        elif(b[i]==0):\n            sumi+=2*i\n            break\n        elif(b[i]==1 and f==0):\n            sumi+=i\n            f+=1\n        if(f==2):\n            break\n    print(sumi)\n            \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class A {\n\tstatic FastReader f = new FastReader();\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\t\n\n\tpublic static void main(String[] args) {\n\t\tint t = f.nextInt();\n\t\twhile(t-- > 0) {\n\t\t\tsolve();\n\t\t}\n\t\tout.close();\n\t}\n\n\tstatic void solve() {\n\t\tint n = f.nextInt();\n\t\tint[] occ = new int[105];\n\t\twhile(n-- > 0) {\n\t\t\tocc[f.nextInt()]++;\n\t\t}\n\n\t\tint ans = 0;\n\t\tfor(int i=0;i<=101;i++) {\n\t\t\tif(occ[i] == 0) {\n\t\t\t\tans = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i=0;i<=101;i++) {\n\t\t\tif(occ[i] < 2) {\n\t\t\t\tans += i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tout.println(ans);\t\t\n\t}\n\t\n\n\n\tstatic class FastReader {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st;\n\n\t\tString next() {\n\t\t\twhile(st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(IOException ioe) {\n\t\t\t\t\tioe.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString s = \"\";\n\t\t\ttry {\n\t\t\t\ts = br.readLine();\n\t\t\t} catch(IOException ioe) {\n\t\t\t\tioe.printStackTrace();\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tint  nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "# from sys import stdin, stdout\n\n# import re\n\n# import math\n# import statistics\n# import itertools\n# import collections\n# import cmath\n\n# import calendar\n# import datetime\n\n# import operator\n\n#----------Profiling----------\n# import cProfile\n# import pstats\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    n_arr = [arr.count(i) for i in range(max(arr)+1)]\n\n    if 1 in n_arr and 0 in n_arr:\n        zero = n_arr.index(0)\n        one = n_arr.index(1)\n        a = zero\n        b = one if one < zero else zero\n    \n    elif 1 not in n_arr and 0 in n_arr:\n        zero = n_arr.index(0)\n        a = zero\n        b = zero\n\n    elif 1 in n_arr and 0 not in n_arr:\n        one = n_arr.index(1)\n        a = max(arr) + 1\n        b = one\n    \n    else:\n        a = max(arr) + 1\n        b = max(arr) + 1\n    \n    print(a+b)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    vector<long long> a(n);\n    vector<long long> b;\n    for (long long i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a.begin(), a.end());\n    b.push_back(a[0]);\n    long long nde = 1;\n    for (long long i = 0; i < n - 1; i++) {\n      if (a[i] != a[i + 1]) {\n        nde++;\n        b.push_back(a[i + 1]);\n      }\n    }\n    vector<long long> c(nde);\n    for (long long i = 0; i < b.size(); i++) {\n      for (long long j = 0; j < a.size(); j++) {\n        if (b[i] == a[j]) {\n          c[i]++;\n        }\n      }\n    }\n    long long c1 = 0, c2 = 0, c3 = 0;\n    vector<long long> p(100, 100);\n    for (long long i = 0; i < nde; i++) {\n      if (b[i] != i) {\n        break;\n      } else {\n        if (c[i] >= 2) {\n          c1++;\n          c2++;\n        } else if (c[i] == 1) {\n          c1++;\n          p.push_back(i);\n        }\n      }\n    }\n    c3 = min(*min_element(p.begin(), p.end()), c2);\n    cout << min(c1 + c3, c1 + c2) << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# def main():\n#   t=int(input())\n#   i=1\n#   while i<=t:\n#       n=int(input())\n#       s=input()\n#       soln(n,s)\n#       i+=1\n      \n# def soln(n,s):\n#     ss=\"abacaba\"\n#     if ss in s:\n#         pos1=s.index(ss)\n#         cnt=s.count(ss)\n#         cnt2=s[pos1+1:].count(ss)\n#         if cnt+cnt2>1:\n#             print(\"No\")\n#             return\n#         print(\"Yes\")\n#         print(s.replace(\"?\",'d'))\n#         return\n#     l=len(ss)\n#     if n<l:\n#         print(\"No\")\n#         return\n#     i=0\n#     while i<=n-l:\n#         j=i\n#         k=0\n#         while k<l and (s[j]=='?' or s[j]==ss[k]):\n#             j+=1\n#             k+=1\n#         if k==l:\n#             print(\"Yes\")\n#             print(s[:i].replace(\"?\",\"d\")+ss+s[i+l:].replace(\"?\",\"d\"))\n#             return\n#         i+=1\n#     print(\"No\")\n#     return\n            \n          \n  \n# main()\ndef Test():\n    t=int(input())\n    while t>0:\n        t-=1\n        soln()\n        \ndef soln():\n    n=int(input())\n    a=list(map(int,input().strip().split(\" \")))\n    dic={}\n    for i in range(n):\n        if a[i] in dic:\n            dic[a[i]]+=1 \n        else:\n            dic[a[i]]=1 \n    ex=0\n    f1=0     \n    f2=0\n    l1=-1\n    l2=-1 \n    for i in sorted(dic.keys()):\n        if ex!=i:\n            l2=ex \n            f2=1\n            break\n        else:\n            ex+=1 \n            if dic[i]==1 and f1==0:\n                l1=i \n                f1=1\n    \n    ans=-1\n    if f2==0:\n        l2=ex \n    if f1==0:\n        ans=2*l2\n    else:\n        ans=max(l2,l1+l2)\n    print(ans)\n    \nTest()           "
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint arr[] = new int[n];\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = sc.nextInt();\n\t\t\t}\n\t\t\tArrayList<int[]> list = new ArrayList<>();\n\t\t\tlist.add(new int[105]);\n\t\t\tlist.add(new int[105]);\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tif (list.get(0)[arr[i]] == 0) {\n\t\t\t\t\tlist.get(0)[arr[i]] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tlist.get(1)[arr[i]] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint seta = 0;\n\t\t\tint temp[] = list.get(0);\n\t\t\tfor (int i = 0; i < temp.length; i++) {\n\t\t\t\tif (temp[i] != 0) {\n\t\t\t\t\tseta++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint setb = 0;\n\t\t\ttemp = list.get(1);\n\t\t\tfor (int i = 0; i < temp.length; i++) {\n\t\t\t\tif (temp[i] != 0) {\n\t\t\t\t\tsetb++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(seta+setb);\n\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int mod = 1000000007;\nbool check(pair<long long int, long long int> p1,\n           pair<long long int, long long int> p2) {\n  return p2.second > p1.second;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n;\n    map<int, int> mp;\n    while (n--) {\n      int t;\n      cin >> t;\n      mp[t]++;\n    }\n    int ans = 0, b = 1;\n    ;\n    for (int i = 0; i <= 105; i++) {\n      if (b == 1) {\n        if (mp[i] >= 2) {\n        } else if (mp[i] == 1) {\n          ans += i;\n          b = 2;\n        } else {\n          ans += 2 * i;\n          b = 3;\n          break;\n        }\n      } else if (b == 2) {\n        if (mp[i] >= 1) {\n        } else {\n          ans += i;\n          break;\n        }\n      }\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/contest/1406/problem/A\n\n\ndef _mex(_array_):\n    if(len(_array_) == 0):\n        return 0\n    for i in range(0, (max(_array_)+2)):\n        if(i not in _array_):\n            # print(\"not ir array\", i)\n            return i\n        else:\n            pass\n            # print(\"in array\", i)\n    return 0\n\n\nt = int(input())\nwhile(t):\n    lnegth_of_set = input()\n    arr = [int(x) for x in input().split()]\n    first_sub_set = []\n    second_sub_set = []\n    for i in arr:\n        if i in first_sub_set:\n            second_sub_set.append(i)\n        else:\n            first_sub_set.append(i)\n\n    first_sub_set.sort()\n    second_sub_set.sort()\n    # print(\"first_sub_set\", first_sub_set)\n    # print(\"second_sub_set\", second_sub_set)\n    first_mex = _mex(first_sub_set)\n    second_mex = _mex(second_sub_set)\n\n    # print(\"mex of first\", first_mex)\n    # print(\"mex of second\", second_mex)\n\n    print(first_mex + second_mex)\n    t -= 1\nexit()\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport collections\nimport bisect\nimport itertools\nimport decimal\nimport copy\nimport heapq\n\n# import numpy as np\n\n# sys.setrecursionlimit(10 ** 6)\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nni = lambda: int(sys.stdin.readline().rstrip())\nns = lambda: map(int, sys.stdin.readline().rstrip().split())\nna = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna1 = lambda: list(map(lambda x: int(x) - 1, sys.stdin.readline().rstrip().split()))\nflush = lambda: sys.stdout.flush()\n\n\n# ===CODE===\ndef main():\n    t = ni()\n\n    for _ in range(t):\n        n = ni()\n        a = na()\n        c = collections.Counter(a)\n        x = -1\n        y = -1\n        bflg = True\n        for i in range(max(a) + 1):\n            if i in c.keys():\n                if c[i] >= 2:\n                    x = i\n                    if bflg:\n                        y = i\n                elif c[i] >= 1:\n                    x = i\n                    bflg = False\n            else:\n                break\n\n        x += 1\n        y += 1\n\n        print(x + y)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfrom itertools import count\n\ndef solve(xs):\n    d = Counter(xs)\n    for elem in count():\n        if d[elem]:\n            d[elem] -= 1\n        else:\n            m1 = elem\n            break\n    for elem in count():\n        if d[elem]:\n            d[elem] -= 1\n        else:\n            m2 = elem\n            break\n    return m1 + m2\n\n\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    xs = [int(x) for x in input().split()]\n    print(solve(xs))"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\npublic class SubsetMex {\n    public static void main(String[] args) {\n        FastReader fs = new FastReader();\n        StringBuilder sb = new StringBuilder();\n        int t = fs.nextInt();\n        for(int tt = 0; tt < t; tt++) {\n            int n = fs.nextInt();\n            Map<Integer, Integer> map = new HashMap<>();\n            for(int i = 0; i < n; i++) {\n                int curr = fs.nextInt();\n                map.put(curr, map.getOrDefault(curr, 0) + 1);\n            }\n            int a = -1, b = -1;\n            int counter = 0;\n            while(true) {\n                if(!map.containsKey(counter)) {\n                    if(a == -1) a = counter;\n                    if(b == -1) b = counter;\n                }else {\n                    if(map.get(counter) == 1) {\n                        if(a == -1) a = counter;\n                    }\n                }\n                if(a > -1 && b > -1) break;\n                counter++;\n            }\n            sb.append(a + b);\n            sb.append(\"\\n\");\n        }\n        System.out.println(sb.toString());\n    }\n\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while(st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        float nextFloat() {\n            return Float.parseFloat(next());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nt = int(input())\nbuf = []\nfor _ in range(t):\n    n = int(input())\n    cnt = Counter(map(int, input().split()))\n    a, b = -1, -1\n    for i in range(101):\n        if cnt[i] < 1:\n            if a == -1:\n                a = b = i\n            else:\n                b = i\n            break\n        elif cnt[i] < 2:\n            if a == -1:\n                a = i\n    buf.append(a + b)\n\nprint('\\n'.join(map(str, buf)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int t;\n  std::cin >> t;\n  for (int i = 0; i < t; ++i) {\n    int n;\n    std::cin >> n;\n    int max = 0;\n    std::map<int, int> cnt;\n    for (int j = 0; j < n; ++j) {\n      int a;\n      std::cin >> a;\n      max = std::max(max, a);\n      cnt[a]++;\n    }\n    max++;\n    int res = 0;\n    for (int j = 0; j <= max; ++j) {\n      if (cnt[j] == 0) {\n        res += j;\n        break;\n      }\n      cnt[j]--;\n    }\n    for (int j = 0; j <= max; ++j) {\n      if (cnt[j] == 0) {\n        res += j;\n        break;\n      }\n    }\n    std::cout << res << std::endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int,input().split()))\n    m1=m2=0\n    for i in range(0,101):\n        if i in li:\n            li.remove(i)\n        else:\n            m1 = i\n            break\n    for i in range(0,101):\n        if i in li:\n            li.remove(i)\n        else:\n            m2 = i\n            break\n    print(m1+m2)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    l.sort()\n    num1,num2 = [l[0]],[]\n    for i in range(1,n):\n        if l[i]==l[i-1]: num2.append(l[i])\n        else: num1.append(l[i])\n    m1,m2 = 0,0\n    for i in num1:\n        if i==m1: m1 += 1\n    for i in num2:\n        if i==m2: m2 += 1\n    print(m1+m2)"
        },
        {
            "language": 1,
            "solution": "#   Author: yumtam\n#   Created at: 2020-09-12 22:33\n\nfrom __future__ import division, print_function\n_interactive = False\n\ndef main():\n    from collections import Counter\n    for _ in range(int(input())):\n        n = int(input())\n        ar = input_as_list()\n\n        ctr = Counter(ar)\n        i = 0\n        ans = 0\n        while ctr[i] >= 2:\n            i += 1\n            ans += 2\n        while ctr[i] >= 1:\n            i += 1\n            ans += 1\n\n        print(ans)\n\n\n# Constants\nINF = float('inf')\nMOD = 10**9+7\n\n# Python3 equivalent names\nimport os, sys, itertools\nif sys.version_info[0] < 3:\n    input = raw_input\n    range = xrange\n\n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n\n# print-flush in interactive problems\nif _interactive:\n    flush = sys.stdout.flush\n    def printf(*args, **kwargs):\n        print(*args, **kwargs)\n        flush()\n\n# Debug print, only works on local machine\nLOCAL = \"LOCAL_\" in os.environ\ndebug_print = (print) if LOCAL else (lambda *x, **y: None)\n\n# Fast IO\nif (not LOCAL) and (not _interactive):\n    from io import BytesIO\n    from atexit import register\n    sys.stdin = BytesIO(os.read(0, os.fstat(0).st_size))\n    sys.stdout = BytesIO()\n    register(lambda: os.write(1, sys.stdout.getvalue()))\n    input = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\n# Some utility functions(Input, N-dimensional lists, ...)\ndef input_as_list():\n    return [int(x) for x in input().split()]\n\ndef input_with_offset(o):\n    return [int(x)+o for x in input().split()]\n\ndef input_as_matrix(n, m):\n    return [input_as_list() for _ in range(n)]\n\ndef array_of(f, *dim):\n    return [array_of(f, *dim[1:]) for _ in range(dim[0])] if dim else f()\n\n# Start of external code templates...\n# End of external code templates.\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n =int(input())\n    a = list(map(int,input().split()))\n    ref = [i for i in range(max(a) + 2)]\n    mex1 = 0\n    for x in ref:\n        if x not in a:\n            mex1 = x\n            break\n    for i in range(mex1):\n        if i in a:\n            a.remove(i)\n    mex2 = 0\n    for x in ref:\n        if x not in a:\n            mex2 = x\n            break\n    print(mex1 + mex2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1e5 + 3;\nconst long long INF = INT_MAX;\nconst long long NEINF = INT_MIN;\nconst long long MOD = 1e9 + 7;\nlong long Add(long long x, long long y) { return (x + y) % MOD; }\nlong long Mul(long long x, long long y) { return (x * y) % MOD; }\nlong long BinPow(long long x, long long y) {\n  long long res = 1;\n  while (y) {\n    if (y & 1) res = Mul(res, x);\n    x = Mul(x, x);\n    y >>= 1;\n  }\n  return res;\n}\nlong long ModInverse(long long x) { return BinPow(x, MOD - 2); }\nlong long Div(long long x, long long y) { return Mul(x, ModInverse(y)); }\nlong long GetBit(long long num, long long i) { return (num >> i) & 1; }\nsigned main() {\n  cin.tie(NULL);\n  ios_base::sync_with_stdio(false);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    vector<long long> a(n);\n    vector<long long> cnt(101, 0);\n    for (long long &v : a) {\n      cin >> v;\n      cnt[v]++;\n    }\n    long long res = 0;\n    long long now = 0;\n    for (long long i = 0; i <= 100; ++i) {\n      if (cnt[i] == 0) break;\n      cnt[i]--;\n      now++;\n    }\n    res = now;\n    now = 0;\n    for (long long i = 0; i <= 100; ++i) {\n      if (cnt[i] == 0) break;\n      cnt[i]--;\n      now++;\n    }\n    cout << res + now << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int long long N = 3e5 + 5;\nint long long n;\nint long long a[N];\nint long long cache[N];\nvector<int long long> graph[N];\nvoid GO() {\n  cin >> n;\n  int long long count[200];\n  memset(count, 0, sizeof(count));\n  for (int long long i = 0; i < n; i++) {\n    int long long x;\n    cin >> x;\n    count[x]++;\n  }\n  int long long first = 0, second = 0;\n  for (int long long i = 0; i <= 100; i++) {\n    if (count[i] >= 1) {\n      count[i]--;\n      second = i + 1;\n    } else\n      break;\n  }\n  for (int long long i = 0; i <= 100; i++) {\n    if (count[i] >= 1) {\n      count[i]--;\n      first = i + 1;\n    } else {\n      break;\n    }\n  }\n  int long long f = first + second;\n  cout << f << endl;\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  srand(time(NULL));\n  int long long tc;\n  tc = 1;\n  cin >> tc;\n  while (tc--) {\n    GO();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class SubsetMex {\n    public static void main(String args[]){\n        Scanner sc= new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int z=0;z<t;z++){\n            int n=sc.nextInt();\n            ArrayList<Integer> al=new ArrayList<>();\n            for(int i=0;i<n;i++)\n                al.add(sc.nextInt());\n            Collections.sort(al);\n            ArrayList<Integer> bl=new ArrayList<>();\n            ArrayList<Integer> cl=new ArrayList<>();\n            for(int i=0; i<n;){\n                if(i!=n-1){\n                    if(al.get(i)==al.get(i+1)){\n                    bl.add(al.get(i));\n                    cl.add(al.get(i+1));\n                    i+=2;\n                    }\n                    else{\n                        bl.add(al.get(i));\n                        i++;\n                    }\n                }\n                else{\n                    bl.add(al.get(i));\n                    i++;\n                }\n            }\n//            for(int i=0;i<bl.size();i++)\n//                System.out.print(bl.get(i)+\" \");\n//            System.out.println();\n//            for(int i=0;i<cl.size();i++)\n//                System.out.print(cl.get(i)+\" \");\n//            System.out.println();\n            \n            \n            int i,mexb=0,mexc=0;\n            for(i=0;i<=100;i++){\n                if(!bl.contains(i)){\n                    mexb=i;\n                    break;\n                }\n            }\n            if(i==101)\n                mexb=101;\n            \n            for(i=0;i<=100;i++){\n                if(!cl.contains(i)){\n                    mexc=i;\n                    break;\n                }\n            }\n            if(i==101)\n                mexc=101;\n            \n            System.out.println(mexb+mexc);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    c={}\n    for x in l:\n        if(x in c):\n            c[x]+=1\n        else:\n            c[x]=1\n    ptr=0\n    ans=0\n    f=0\n    for k,v in c.items():\n        if(k==ptr and f==0):\n            if(v==1):\n                ans+=ptr\n                f=1\n                \n        elif(k!=ptr):\n            break\n        ptr+=1\n    if(f==1):\n        ans+=ptr\n    else:\n        ans+=2*ptr\n    print(ans)\n                \n"
        },
        {
            "language": 3,
            "solution": "for o in range(int(input())):\n    n=int(input())\n    s=list(map(int,input().split()))\n    p=0\n    r=[0 for i in range(101)]\n    for i in range(n):\n         r[s[i]]=r[s[i]]+1\n    for i in range(101):\n            if r[i]>=1:\n                r[i]=r[i]-1\n            else :\n                p=p+i\n                break\n    for i in range(101):\n            if r[i]>=1:\n                r[i]=r[i]-1\n            else :\n                p=p+i\n                break\n    print(p)"
        },
        {
            "language": 3,
            "solution": "t = int(input()) \nfor _ in range (t): \n    n = int(input()) \n    A = list(map(int, input().split())) \n    count = [0]*101\n    for a in A:\n        count[a] += 1 \n    \n    a1,a2 = -1,-1\n    flag = False\n\n    for i in range (len(count)):\n        \n        if not flag:\n            if count[i] > 1: \n                continue\n\n            elif count[i] == 1: \n                flag = True\n                a1 = i \n            \n            else:\n                a1,a2 = i,i \n                break\n        else: \n            if count[i] > 0: \n                continue\n            else:\n                a2 = i \n                break\n\n    if a1 == -1:\n        a1 = 101 \n    if a2 == -1:\n        a2 = 101 \n    print (a1+a2)  \n\n"
        },
        {
            "language": 4,
            "solution": "\n \n \nimport java.io.*;\nimport java.util.*;\n \npublic class Practise {\n \n    public static void main(String[] args)throws IOException {\n           Reader sc= new Reader();\n        PrintWriter w= new PrintWriter(System.out);\n    int t=sc.nextInt();\n    while(t-->0) {\n    \tint n=sc.nextInt();\n    \tint a[]= new int[n];\n    \tfor(int i=0;i<n;i++) {\n    \t\ta[i]=sc.nextInt();\n    \t}\n    \tArrays.sort(a);\n    \tint m=0,k=0;\n    \tfor(int i:a) {\n    \t\tif(i==m)m++;\n    \t\telse if(i==k)k++;\n    \t}\n    \tw.println(m+k);\n    }\n    \t \n    \t\n    \t \n     \n\n   \n \n      \n   w.close(); \n    \n    } \n    static int mex(int a[]) {\n   int n=a.length;\n   int i=1;\n   for( ;i<n;i++) {\n\t   if(a[i]-a[i-1]!=1) {\n\t\t \n\t\t   break;\n\t   }\n\t   \n   }\n \n   return a[i-1]+1;\n    \t\n    }\n    \n    static class Reader   // here reader class is defined.\n    { \n        final private int BUFFER_SIZE = 1 << 16; \n        private DataInputStream din; \n        private byte[] buffer; \n        private int bufferPointer, bytesRead; \n  \n        public Reader() \n        { \n            din = new DataInputStream(System.in); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public Reader(String file_name) throws IOException \n        { \n            din = new DataInputStream(new FileInputStream(file_name)); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public String readLine() throws IOException \n        { \n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c; \n            while ((c = read()) != -1) \n            { \n                if (c == '\\n') \n                    break; \n                buf[cnt++] = (byte) c; \n            } \n            return new String(buf, 0, cnt); \n        } \n  \n        public int nextInt() throws IOException \n        { \n            int ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do\n            { \n                ret = ret * 10 + c - '0'; \n            }  while ((c = read()) >= '0' && c <= '9'); \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public long nextLong() throws IOException \n        { \n            long ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public double nextDouble() throws IOException \n        { \n            double ret = 0, div = 1; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n  \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n  \n            if (c == '.') \n            { \n                while ((c = read()) >= '0' && c <= '9') \n                { \n                    ret += (c - '0') / (div *= 10); \n                } \n            } \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        private void fillBuffer() throws IOException \n        { \n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n            if (bytesRead == -1) \n                buffer[0] = -1; \n        } \n  \n        private byte read() throws IOException \n        { \n            if (bufferPointer == bytesRead) \n                fillBuffer(); \n            return buffer[bufferPointer++]; \n        } \n  \n        public void close() throws IOException \n        { \n            if (din == null) \n                return; \n            din.close(); \n        } \n    }\n \n \n}"
        },
        {
            "language": 1,
            "solution": "t=int(raw_input())\nfor r in range(t):\n    n=int(raw_input())\n    a= map(int, raw_input().split(\" \"))\n    a.sort()\n    s=0\n    #print r,\n    for i in range(max(a)+2):\n        if i in a:\n            a.remove(i)\n        else:\n            s+=i\n            break\n    #print a\n    if len(a)==0:\n        print s\n    else:\n        for i in range(max(a)+2):\n            if i in a:\n                a.remove(i)\n            else:\n                s+=i\n                break\n        print s\n    \n            \n    \n    \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor t1 in range(t):\n\n    n = int(input())\n\n    a = list(map(int,input().split(' ')))\n\n    a.sort()\n\n    s = 0\n    j = 0\n\n    f = []\n    f1 = 0\n\n    for i in range(n):\n        f.append(0)\n\n##    print(a)\n\n    for i in range(n):\n        if a[i] == j:\n            j += 1\n            f[i] = 1\n\n        elif a[i]>j:\n            s += j\n            f1 = 1\n            break\n\n    if f1 == 0:\n        s += j\n\n##    print(s)\n    j = 0\n    f1 = 0\n    \n    for i in range(n):\n\n        if f[i] == 0 and a[i] == j:\n            j += 1\n\n        elif a[i]>j:\n            s += j\n            f1 = 1\n            break\n\n    if f1 == 0:\n        s += j\n\n    print(s)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    freq=[0]*(arr[-1]+1)\n    for i in range(n):\n        freq[arr[i]]+=1\n        \n    ans=0\n    do=2\n    for i in range(arr[-1]+1):\n        if do==0:\n            break\n        elif do==2:\n            if freq[i]>=2:\n                continue\n            elif freq[i]==1:\n                ans+=i\n                do-=1\n            else:\n                ans+=(i-1)*do\n                do=0\n        else:\n            if freq[i]>=1:\n                continue\n            else:\n                ans+=i\n                do-=1\n    res=0\n    chain=1\n    for i in range(arr[-1]+1):\n        if freq[i]>=1:\n            res+=1\n            if freq[i]>1 and chain:\n                res+=1\n            else:\n                chain=0\n        else:\n            break\n    #print(arr)\n    print(max(ans,res))"
        },
        {
            "language": 3,
            "solution": "a=int(input())\ne=[]\n\ndef cont(no,arr):\n  arr=list(set(arr))\n  for i in range(len(arr)):\n    if(no==arr[i]):\n      return True\n\nfor i in range(a):\n  b=int(input())\n  c=list(map(int,input().split()))\n  e.append(c)\n\nfor i in range(len(e)):\n  e[i].sort()\n\nfor i in e:\n  f=[]\n  g=[]\n  for j in range(len(i)):\n    if(cont(i[j],f)):\n      g.append(i[j])\n    else:\n      f.append(i[j])\n  no1=0\n  no2=0\n  for i in range(101):\n    if(cont(i,f)):\n      no1=i+1\n    else:\n      break\n  for i in range(101):\n    if(cont(i,g)):\n      no2=i+1\n    else:\n      break\n  print(no1+no2)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep 17 08:24:39 2020\n\n@author: Harshal\n\"\"\"\n\ntest=int(input())\nfor _ in range(test):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    temp=[0]*(101)\n    for i in arr:\n        temp[i]+=1\n    i=temp.index(0)\n    temp[i]=1\n    print(i+temp.index(1))\n    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int,input().split())))\n    ch = 0\n    low = []\n    c = 0\n    for i in range(110):\n        if ch not in a:\n            low.append(ch)\n            c = c+1\n        if c == 2:\n            break\n        ch = ch+1\n    for i in a:\n        chk = a.count(i)\n        if chk == 1:\n            low.append(i)\n            break\n    if len(low)>2:\n        low[2] = low[0]+low[2]\n    low[1] = low[0]+low[1]\n    low[0] = low[0]+low[0]\n    print(min(low))"
        },
        {
            "language": 3,
            "solution": "import math,sys,bisect,heapq\nfrom collections import defaultdict,Counter,deque\nfrom itertools import groupby,accumulate\n#sys.setrecursionlimit(200000000)\nint1 = lambda x: int(x) - 1\ninput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__\nilele = lambda: map(int,input().split())\nalele = lambda: list(map(int, input().split()))\nilelec = lambda: map(int1,input().split())\nalelec = lambda: list(map(int1, input().split()))\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\n#MOD = 1000000000 + 7\ndef Y(c):  print([\"NO\",\"YES\"][c])\ndef y(c):  print([\"no\",\"yes\"][c])\ndef Yy(c):  print([\"No\",\"Yes\"][c])\n    \ndef mex(A):\n    for i in range(102):\n        if i not in A:\n            return i\n    \nfor _ in range(int(input())):\n    N = int(input())\n    A = alele()\n    x = A.count(0)\n    if x == 0:\n        print(0)\n    elif x == 1:\n        print(mex(A))\n    else:\n        A.sort()\n        B = []\n        C = []\n        for i in A:\n            if i not in B:\n                B.append(i)\n            else:\n                C.append(i)\n        print(mex(B) + mex(C))\n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t = 1;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    long long int a[n], b[102] = {0};\n    for (long long int i = 0; i < n; i++) {\n      cin >> a[i];\n      b[a[i]]++;\n    }\n    long long int m = 0;\n    for (long long int i = 0; i < 102; i++) {\n      if (b[i] == 0) {\n        m += i;\n        break;\n      }\n      b[i]--;\n    }\n    for (long long int i = 0; i < 102; i++) {\n      if (b[i] == 0) {\n        m += i;\n        break;\n      }\n      b[i]--;\n    }\n    cout << m << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile t:\n    h=int(input())\n    c=list(map(int,input().split()))\n    a=[]\n    b=[]\n    c=sorted(c)\n    for x in c:\n        if x in a:\n            b.append(x)\n        else:\n            a.append(x)\n    s=0\n    i=0\n    if len(a):\n        while 1:\n            if i not in a:\n                s+=i\n                break\n            i+=1\n    i=0\n    if len(b):\n        while 1:\n            if i not in b:\n                s+=i\n                break\n            i+=1\n    print(s)\n    t-=1\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor z in range(t):\n    \n    n=int(input())\n    a = list(map(int,input().split()))[:n]\n    a.sort()\n    if a[0]!=0:\n        print(0)\n        continue\n    else:\n        b=list()\n        suma=0\n        a.pop(0)\n        current = 0\n        for i in range(len(a)):\n            if a[i]-current==1:\n                current = a[i]\n                \n            else:\n                b.append(a[i])    \n        suma=current+1\n        if len(b)!=0:\n            if b[0]!=0:\n                print(suma)\n                continue\n            else:\n                current=0\n                for i in range(len(b)):\n                    if b[i]-current==1:\n                        current = b[i]\n                    elif b[i]-current > 1:\n                        break\n            suma=suma+current+1\n        print(suma)\n\n    "
        },
        {
            "language": 3,
            "solution": "import sys\n# sys.stdin = open('E:/Competitiive Programming/output.txt', 'w')\n# sys.setrecursionlimit(1000000)ve Programming/input.txt', 'r')\n# sys.stdout = open('E:/Competit\ndef Ints(): return map(int, sys.stdin.readline().strip().split())\ndef Strs(): return map(str, sys.stdin.readline().strip().split())\ndef Array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef Str(): return sys.stdin.readline().strip()\ndef Int(): return int(sys.stdin.readline().strip())\ndef MOD(): return 1000000007    \n\n\n\nif __name__ == \"__main__\":\n\tt = Int()\n\twhile t:\n\t\tt -= 1\n\n\t\tn = Int()\n\t\tarr = Array()\n\t\tmaps = {}\n\t\tfor i in arr:\n\t\t\tmaps[i] = maps.get(i,0) + 1\n\n\t\tans = 0\n\t\tfor i in range(max(arr)+2):\n\t\t\tif i not in maps:\n\t\t\t\tans += i\n\t\t\t\tbreak;\n\t\t\tif i in maps and maps[i] > 0:\n\t\t\t\tmaps[i] -= 1 \n\n\t\tfor i in range(max(arr)+2):\n\t\t\tif i not in maps:\n\t\t\t\tans += i\n\t\t\t\tbreak;\n\t\t\telif(maps[i] == 0):\n\t\t\t\tans += i\n\t\t\t\tbreak;\n\t\t\tif i in maps and maps[i] > 0:\n\t\t\t\tmaps[i] -= 1 \n\t\tprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing pii = pair<int, int>;\nusing lli = long long int;\nconst int INF = 1e9;\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n;\n    scanf(\"%d\", &n);\n    vector<int> marc(110);\n    for (int i = 0; i < n; ++i) {\n      int x;\n      scanf(\"%d\", &x);\n      ++marc[x];\n    }\n    int maxi = -1;\n    for (int i = 0; i <= 100 && marc[i]; ++i) {\n      --marc[i], maxi = i;\n    }\n    int maxi2 = -1;\n    for (int i = 0; i <= 100 && marc[i]; ++i) {\n      --marc[i], maxi2 = i;\n    }\n    printf(\"%d\\n\", maxi + 1 + maxi2 + 1);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Problem1 {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\ta[j] = sc.nextInt();\n\t\t\t}\n\t\t\tSystem.out.println(run(a));\n\t\t}\n\t}\n\t\n\tpublic static int run(int[] a) {\n\t\tint[] nums = new int[101];\n\t\tfor (int i : a) nums[i]++;\n\t\tint left = 2;\n\t\tint curr = 0;\n\t\t//System.out.println(Arrays.toString(nums));\n\t\tfor (int i = 0; i < nums.length; i++) {\n\t\t\tif (left==2) {\n\t\t\t\tif (nums[i]==0) {\n\t\t\t\t\treturn 2*i;\n\t\t\t\t} else if (nums[i]==1) {\n\t\t\t\t\tleft--;\n\t\t\t\t\tcurr += i;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (nums[i] < 1) {\n\t\t\t\t\treturn curr+i;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\treturn -1;\n\t}\n}\t\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math,sys,heapq\nfrom itertools import permutations, combinations\nfrom collections import defaultdict,deque,OrderedDict\nfrom os import path\nimport random\nimport bisect as bi\ndef yes():print('YES')\ndef no():print('NO')\nif (path.exists('input.txt')): \n    #------------------Sublime--------------------------------------#\n    sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');\n    def I():return (int(input()))\n    def In():return(map(int,input().split()))\nelse:\n    #------------------PYPY FAst I/o--------------------------------#\n    def I():return (int(stdin.readline()))\n    def In():return(map(int,stdin.readline().split()))\n#sys.setrecursionlimit(1500)\ndef dict(a):\n    d={} \n    for x in a:\n        if d.get(x,-1)!=-1:\n            d[x]+=1\n        else:\n            d[x]=1\n    return d\ndef find_gt(a, x):\n    'Find leftmost value greater than x'\n    i = bi.bisect_left(a, x)\n    if i != len(a):\n        return i\n    else:            \n        return -1\ndef main():\n    try:\n        n=I()\n        l=list(In())\n        a,b=-1,-1\n        d=dict(l)\n        a,b=[],[]\n        for x in d:\n            if d[x]>=2:\n                a.append(x)\n                b.append(x)\n            else:\n                a.append(x)\n        a.sort()\n        b.sort()\n        #print(a,b)\n        A,B=-1,-1\n        if len(a)>0:\n            for x in range(a[-1]+1):\n                if a[x]!=x:\n                    A=x\n                    break\n            if A==-1:\n                A=a[-1]+1\n        if len(b)>0:\n            for x in range(b[-1]+1):\n                if b[x]!=x:\n                    B=x\n                    break\n            if B==-1:\n                B=b[-1]+1\n        if A==-1:\n            A=0\n        if B==-1:\n            B=0\n        print(A+B)\n    except:\n        pass\n        \nM = 998244353\nP = 1000000007\n \nif __name__ == '__main__':\n    for _ in range(I()):main()\n    #for _ in range(1):main()"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    a.sort()\n    A,B = set(),set()\n    for x in a:\n        if x in A: \n            B.add(x)\n        else:\n            A.add(x)\n    i, j = 0, 0\n    while i in A:\n        i += 1\n    while j in B:\n        j += 1\n    print(i + j)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long double PI = 3.14159265358979323846264338327950288;\nconst long long MOD = 1000000007;\nconst long long MAX = 32000;\nusing namespace std;\nlong long fun(long long n) {\n  long long i, x, flag = 0, mx = INT_MIN;\n  multiset<long long> a;\n  for (i = 0; i < n; i++) {\n    cin >> x;\n    mx = max(mx, x);\n    a.insert(x);\n  }\n  x = 0;\n  for (i = 0; i <= mx + 5; i++) {\n    if (flag) {\n      if (!a.count(i)) return x + i;\n      continue;\n    }\n    if (a.count(i) == 0) {\n      return i + i;\n    } else if (a.count(i) == 1) {\n      x = i;\n      flag = 1;\n    }\n  }\n  return i + x;\n  return 0;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ios::sync_with_stdio(0);\n  ;\n  long long n;\n  long long t;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    cout << fun(n) << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class SubsetMex {\n    public static void main(String[] args) {\n        Scanner inp = new Scanner(System.in);\n        long t = inp.nextLong();\n\n        while(t-- != 0) {\n            int n = inp.nextInt();\n            int[] arr = new int[101];\n            for(int i = 0 ; i < n ; i++) {\n                int haha = inp.nextInt();\n                arr[haha]++;\n            }\n\n            int answer = 0;\n\n            for(int i = 0 ; i < arr.length ; i++) {\n                if(arr[i] < 1) {\n                    answer += i;\n                    break;\n                }\n                arr[i]--;\n            }\n            for(int i = 0 ; i < arr.length ; i++) {\n                if(arr[i] < 1) {\n                    answer += i;\n                    break;\n                }\n                arr[i]--;\n            }\n\n            System.out.println(answer);\n        }\n        \n    }    \n}\n\n\n// void solve()\n// {\n// \tint n;\n// \tcin>>n;\n// \tmap<int,int> mp;\n// \tfor(int i=0;i<n;i++)\n// \t{int x;cin>>x;\n// \tmp[x]++;}\n \n// \tint s=0;\n// \tfor(int i=0;i<=n+1;i++)\n// \t{\n// \t\tif(mp[i]<1)\n// \t\t{s+=i;\n// \t\tbreak;}\n \n// \t\tmp[i]--;\n// \t}\n// \tfor(int i=0;i<=n+1;i++)\n// \t{\n// \t\tif(mp[i]<1)\n// \t\t{s+=i;\n// \t\tbreak;}\n \n// \t\tmp[i]--;\n// \t}\n \n// \tcout<<s<<endl;\n// }"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport math\nimport heapq\nimport sys\nimport io, os\n\ninput = sys.stdin.readline\n# input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import *\n\nrs = lambda: input().strip()\nri = lambda: int(input())\nrl = lambda: list(map(int, input().strip().split()))\nrls = lambda: list(map(str, input().split()))\n\n\n\nt=int(input())\nfor _ in range(0,t):\n    n=ri()\n    a=rl()\n    d=defaultdict(lambda:0)\n    x1=[]\n    x2=[]\n    ans1=0\n    ans2=0\n    for i in range(0,101):\n        if i not in a:\n            ans1=i\n            break\n        else:\n            a.remove(i)\n    for i in range(0,101):\n        if i not in a:\n            ans2=i\n            break\n    print(ans1+ans2)\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "T, = map(int, input().split())\nfrom collections import defaultdict\nfor _ in range(T):\n    N, = map(int, input().split())\n    X = list(map(int, input().split()))\n    D = defaultdict(int)\n    for x in X:\n        D[x] += 1\n#    print(D)\n    f = 0\n    for i in range(N+1):\n        if D[i] < 2:\n            f = i\n            break\n    for i in range(N+1):\n#        print(i, D[i])\n        if D[i] < 1:\n            f2 = i\n            break\n#    print(f,f2)\n    print(f+f2)\n\n\n"
        },
        {
            "language": 3,
            "solution": "tests = int(input())\nwhile tests:\n    tests -= 1\n    n = input()\n    l = [int(x) for x in input().split(\" \")]\n    freq = [0 for i in range(0,101)]\n    for i in l: freq[i] += 1\n    answer = 0\n    for i in range(101):\n        if freq[i]==0:\n            answer = 2*i\n        elif freq[i]==1:\n            answer += i\n            for j in range(i+1,101):\n                if freq[j] in [0]:\n                    answer += j\n                    break\n        else:\n            continue\n        break\n    print(answer)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    x=-1\n    y=-1\n    for j in range(n):\n        if l[j]==x+1:\n            x+=1\n        elif l[j]==y+1:\n            y+=1\n        elif l[j]==x or l[j]==y:\n            pass\n        else:\n            break\n    print(x+y+2)\n            \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.time.LocalTime;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\n\npublic class Main {\n\n    public static void main(String[] args) {\n    \n    \tFastScanner scan = new FastScanner();\n \n    \t\tint t = scan.nextInt();\n    \t\tfor(int tt=0; tt<t; tt++) {\n    \t\t\tint n = scan.nextInt();\n    \t\t\tint [] arr = scan.readArray(n);\n    \t\t\tArrays.sort(arr);\n    \t\t\tArrayList<Integer> a = new ArrayList<>(), b = new ArrayList<>();\n    \t\t\tfor(int i=0; i<n; i++) {\n    \t\t\t\tif(a.contains(arr[i])) b.add(arr[i]);\n    \t\t\t\telse a.add(arr[i]);\n    \t\t\t}\n    \t\t\tSystem.out.println(mex(a) + mex(b));\n    \t\t}\n    } \n    \n    static int mex(ArrayList<Integer>a) {\n    \t\n    \tfor(int i=0; i<a.size()+1; i++) {\n    \t\tif(!a.contains(i)) return i;\n    \t}\n    \treturn 0;\n    }\n    \n\n    static class FastScanner{\n    \t\n    \tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    \tStringTokenizer st = new StringTokenizer(\"\");\n    \tString next() {\n    \t\twhile(!st.hasMoreTokens())\n    \t\t\ttry {\n    \t\t\t\tst = new StringTokenizer(br.readLine());\n    \t\t\t} catch (IOException e){\n    \t\t\t\te.printStackTrace();\n    \t\t\t}\n    \t\treturn st.nextToken();\n    \t}\n    \t\n    \tint nextInt() {\n    \t\treturn Integer.parseInt(next());\n    \t}\n    \t\n    \tint [] readArray(int n) {\n    \t\tint [] a = new int[n];\n    \t\tfor(int i=0; i<n ; i++) a[i] = nextInt();\n    \t\treturn a;\n    \t}\n    \t\n    \tlong nextLong() {\n    \t\treturn Long.parseLong(next());\n    \t}\n    \t\n    \t\n    }\n    \n   \n}\n\n"
        },
        {
            "language": 3,
            "solution": "def mex(arr):\n    if len(arr) == 0: return 0\n    arr.sort()\n    if arr[0] > 0: return 0\n\n    for i in range(len(arr) - 1):\n        if arr[i+1] - arr[i] > 1: return arr[i] + 1\n    \n    return arr[-1] + 1\n\n\nif __name__ == '__main__':    \n    \n    num_test_cases = int(input())\n\n    for i in range(num_test_cases):\n        size = int(input())\n        occ = {}\n        my_set = []\n        tmp = input().strip().split(\" \")\n        for n in tmp:\n            m = int(n)\n            my_set.append(m)\n            occ[m] = occ.get(m, 0) + 1\n        keys_sorted = sorted(occ)\n        my_set = []\n        for key in keys_sorted:\n            if occ[key] >= 2:\n                my_set += [key, key]\n            else:\n                my_set += [key]\n\n        if my_set[0] != 0:\n            print(0)\n            continue\n\n        if len(my_set) > 1 and my_set[1] == 0:\n            # my_set contains two zeros at least\n            i = 1\n            end = len(keys_sorted)\n            while True and i < end:\n                if keys_sorted[i] != i or occ[keys_sorted[i]] < 2:\n                    break\n                i += 1\n\n            if i == end:\n                result = (keys_sorted[i-1]+1) * 2\n            else:\n                if occ[keys_sorted[i]] >= 2:\n                    result = i * 2\n                elif keys_sorted[i] == i:\n                    i += 1\n                    result = i\n                    while True and i < end:\n                        if keys_sorted[i] != i:\n                            break\n                        i += 1\n                    result += keys_sorted[i-1]\n                else:\n                    result = i * 2\n            print(result)\n        else: print(mex(my_set))\n            "
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    lis1=[arr[0]]\n    lis2=[]\n    for i in range(n-1):\n        if arr[i+1]==arr[i]:\n            lis2.append(arr[i+1])\n        else:\n            lis1.append(arr[i+1])\n    a=0\n    b=0\n    x=len(lis1)\n    y=len(lis2)\n    for i in range(x):\n        if a==lis1[i]:\n            a+=1\n    for i in range(y):\n        if b==lis2[i]:\n            b+=1\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    u = 0\n    for i in range(n + 1):\n        if a.count(i) < 2:\n            u = i\n            break\n    v = 0\n    for i in range(n + 1):\n        if a.count(i) < 1:\n            v = i\n            break\n    print(u + v)\n\nt = int(input())\nfor _ in range(t):\n    solve()"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    num = [0 for _ in range(101)]\n    for j in a:\n        num[j]+=1\n    flg_1 = 0\n    flg_0 = 0\n    ans = 0\n    for k in range(n+1):\n        if flg_0 != 0:\n            break\n        elif flg_1 == 0 and num[k] == 1:\n            ans += k\n            flg_1 = 1\n        elif flg_0 == 0 and num[k] == 0:\n            if flg_1 == 1:\n                ans += k\n                flg_0 = 1\n            else:\n                ans += 2*k\n                flg_0 = 1    \n    print(ans)"
        },
        {
            "language": 3,
            "solution": "def mex(v):\n    if not v: \n      return 0\n    if (v[0]!=0):\n      return 0\n    for k in range(len(v)-1):\n      if (abs(v[k]-v[k+1])>1):\n        return int(v[k]+1)\n    return int(v[len(v)-1]+1)\n\nt = int(input())\nfor i in range(t):\n  n = int(input())\n  x = list(map(int, input().split(' ',n))) \n  x.sort()\n  a=[]\n  b=[]\n  for j in x:\n      if(a.count(j)>0):\n        b.append(j)\n      else:\n        a.append(j)\n#  print(\"a\",a,'\\n',\"b\",b,'\\n',  \"ma\",mex(a),\"mb\",mex(b))\n  print(int( mex(a)+mex(b) ))\n\n"
        },
        {
            "language": 3,
            "solution": "\n\nR = lambda:map(int,input().split())\n\nt, = R()\n\nfor _ in range(t):\n    n,  = R()\n    arr = list(R())\n    arr.sort()\n    a = b = 0\n    for i in arr:\n        if i == a:\n            a += 1\n        elif b == i:\n            b += 1\n    print(a+b)\n        \n        \n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 9e18;\nconst int INF = 0x3f3f3f3f;\nconst int mod = 1e9 + 7;\nconst int maxn = 110;\nint cnt[maxn], a[maxn];\nint main() {\n  int t, n;\n  for (scanf(\"%d\", &t); t--;) {\n    scanf(\"%d\", &n);\n    memset(cnt, 0, sizeof(cnt));\n    for (int i = 0; i < n; ++i) scanf(\"%d\", a + i), ++cnt[a[i]];\n    int ans = 0, i;\n    for (i = 0; cnt[i]; ++i) --cnt[i];\n    ans = i;\n    for (i = 0; cnt[i]; ++i) --cnt[i];\n    ans += i;\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from fractions import Fraction\nfrom collections import defaultdict\nimport math\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\ndef input(): return sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\n#----------------------------------------Code Starts Here--------------------------------------------#\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list([int(x) for x in input().split()])\n    mx = max(l)\n    l1 = []\n    l2 = []\n    for i in range(mx+1):\n        c = 0\n        for j in l:\n            if(i == j):\n                c += 1\n\n        if(c == 1):\n            l1.append(i)\n\n        if(c >= 2):\n            l1.append(i)\n            l2.append(i)\n\n    m1 = max(l1)\n    s1 = -1\n    s = 0\n    for i in range(m1+1):\n        if(i not in l1):\n            s1 = i\n            break\n\n    s2 = -1\n    if(len(l2) > 0):\n        m2 = max(l2)\n        for i in range(m2+1):\n            if(i not in l2):\n                s2 = i\n                break\n    else:\n        s2 = 0\n\n    if(s1 == -1):\n        s1 = m1+1\n\n    if(s2 == -1):\n        s2 = m2+1\n\n    s = s1+s2\n    print(s)\n"
        },
        {
            "language": 3,
            "solution": "\nfrom collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = Counter(a)\n    num1, num2 = -1, -1\n    for i in range(101):\n        if cnt[i] == 2:\n            continue\n        if cnt[i] == 1:\n            if num1 == -1:\n                num1 = i\n        if cnt[i] == 0:\n            if num1 != -1:\n                num2 = i\n            else:\n                num1 = num2 = i\n        if num1 != -1 and num2 != -1:\n            break\n    print(num1 + num2)\n"
        },
        {
            "language": 3,
            "solution": "#*****DO NOT COPY*****\n#F\n#U       ___                     ___                         ___           ___           ___           ___          _____\n#C      /  /\\      ___          /  /\\          ___          /__/\\         /  /\\         /  /\\         /  /\\        /  /::\\\n#K     /  /::\\    /  /\\        /  /:/_        /  /\\         \\  \\:\\       /  /::\\       /  /::\\       /  /:/_      /  /:/\\:\\\n#     /  /:/\\:\\  /  /:/       /  /:/ /\\      /  /::\\         \\  \\:\\     /  /:/\\:\\     /  /:/\\:\\     /  /:/ /\\    /  /:/  \\:\\\n#Y   /  /:/~/:/ /__/::\\      /  /:/ /::\\    /  /:/\\:\\    ___  \\  \\:\\   /  /:/~/::\\   /  /:/~/:/    /  /:/ /:/_  /__/:/ \\__\\:|\n#O  /__/:/ /:/  \\__\\/\\:\\__  /__/:/ /:/\\:\\  /  /:/~/::\\  /__/\\  \\__\\:\\ /__/:/ /:/\\:\\ /__/:/ /:/___ /__/:/ /:/ /\\ \\  \\:\\ /  /:/\n#U  \\  \\:\\/:/      \\  \\:\\/\\ \\  \\:\\/:/~/:/ /__/:/ /:/\\:\\ \\  \\:\\ /  /:/ \\  \\:\\/:/__\\/ \\  \\:\\/:::::/ \\  \\:\\/:/ /:/  \\  \\:\\  /:/\n#    \\  \\::/        \\__\\::/  \\  \\::/ /:/  \\  \\:\\/:/__\\/  \\  \\:\\  /:/   \\  \\::/       \\  \\::/~~~~   \\  \\::/ /:/    \\  \\:\\/:/\n#A    \\  \\:\\        /__/:/    \\__\\/ /:/    \\  \\::/        \\  \\:\\/:/     \\  \\:\\        \\  \\:\\        \\  \\:\\/:/      \\  \\::/\n#L     \\  \\:\\       \\__\\/       /__/:/      \\__\\/          \\  \\::/       \\  \\:\\        \\  \\:\\        \\  \\::/        \\__\\/\n#L      \\__\\/                   \\__\\/                       \\__\\/         \\__\\/         \\__\\/         \\__\\/\n#\n#\n#*****DO NOT COPY******\n\n\"\"\"\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u281b\u280b\u28c9\u28c9\u28c9\u28c9\u28c9\u28c9\u2819\u281b\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u281f\u2881\u28e4\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f6\u28e4\u2848\u283b\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u287f\u280b\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28c4\u2819\u28bf\u28ff\u28ff\u28ff\n\u28ff\u28ff\u285f\u2880\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u2840\u28bb\u28ff\u28ff\n\u28ff\u285f\u28a0\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u28bb\u28ff\n\u28ff\u2880\u28ff\u28ff\u28ff\u281f\u2801\u28e0\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28c4\u2808\u283b\u28ff\u28ff\u28ff\u2840\u28ff\n\u2847\u28b8\u28ff\u28ff\u280b\u28e0\u287e\u283f\u281b\u281b\u281b\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u281b\u281b\u281b\u283b\u28b7\u28c4\u2819\u28ff\u28ff\u2847\u28b8\n\u2847\u28b8\u28ff\u28ff\u28fe\u28ff\u2880\u28e0\u28e4\u28e4\u28e4\u28e4\u28c0\u28ff\u28ff\u28ff\u28ff\u28c0\u28e4\u28e4\u28e4\u28e4\u28c4\u2840\u28ff\u28f7\u28fe\u28ff\u2847\u28b8\n\u2847\u2838\u281f\u28eb\u28e5\u28f6\u28e7\u2839\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u283f\u280f\u28fc\u28f6\u28ec\u28cd\u283b\u2807\u28b8\n\u2867\u28f0\u28ff\u28ff\u28ff\u28ff\u28ff\u28b0\u28e6\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28f4\u2846\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u28bc\n\u2847\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u2808\u2819\u281b\u283b\u283f\u283f\u283f\u283f\u283f\u283f\u283f\u283f\u281f\u281b\u280b\u2801\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28b8\n\u28ff\u28cc\u287b\u283f\u283f\u288b\u28f4\u28e6\u2840\u2840\u2840\u2840\u2840\u2840\u2840\u2840\u2840\u2840\u2840\u2840\u2840\u2880\u28f4\u28e6\u2859\u283f\u283f\u289f\u28e1\u28fe\n\u28ff\u28ff\u28ff\u28f7\u28c4\u2819\u28bf\u28ff\u28ff\u28f6\u28e4\u28c0\u2840\u2840\u2840\u2840\u2840\u2840\u28c0\u28e4\u28f6\u28ff\u28ff\u287f\u280b\u28e0\u28fe\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28e6\u28c9\u281b\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u281b\u28c9\u28f4\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f6\u28e4\u28cc\u28c9\u28c9\u28c9\u28c9\u28c9\u28c9\u28e1\u28e4\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\n\n*****DO NOT COPY******\n\"\"\"\ndef solve(n , arr):\n    set1 = []\n    set2 = []\n    arr.sort()\n    current_inserted = -1\n\n    for i in range(n):\n        if arr[i] == current_inserted:\n            set2.append(arr[i])\n        else:\n            set1.append(arr[i])\n            current_inserted = arr[i]\n    set1.sort()\n    set2.sort()\n    total = 0\n    current = 0\n    for i in range(len(set1)):\n        if set1[i] == current:\n            current +=1\n    total += current\n    current = 0\n    for i in range(len(set2)):\n        if set2[i] == current:\n            current += 1\n    total += current\n    return total\n\n\nfor _ in range(int(input())):\n\n    n = int(input())\n    arr = list(map(int , input().split()))\n    print(solve(n , arr))"
        },
        {
            "language": 3,
            "solution": "def mex(sett):\n    if len(sett)==0:\n        return 0\n    sett.sort()\n    sett = list( dict.fromkeys(sett) )\n    test=0\n    for i in range(len(sett)+1):\n        if test in sett:\n            test+=1\n        else:\n            return test\nt= int(input())\nfor i in range(t):\n    length=int(input())\n    the_set=list(map(int,input().split()))\n    if len(the_set)==1:\n        print(mex(the_set))\n    else:\n        A=[]\n        B=[]\n        the_set.sort()\n        A.append(the_set[0])\n        for i in range(1,len(the_set)):\n            if the_set[i]==the_set[i-1]:\n                B.append(the_set[i])\n            else:\n                A.append(the_set[i])\n\n        print(mex(A)+mex(B))\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n    n = int(input())\n    s = [int(v) for v in input().split()]\n    s.sort()\n    m1 = 0\n    m2 = 0\n    for v in s:\n        if v == m1:\n            m1 += 1\n        elif v == m2:\n            m2 += 1\n        elif v > m1 and v > m2:\n            break\n    print(m1 + m2)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n  n = int(input())\n  a = list(map(int,input().split()))\n  at = list(a)\n  at.sort()\n  ma = -1\n  mb = -1\n  for i in range(101):\n    try:\n      at.remove(i)\n      ma = i\n    except:\n      break\n  for i in range(101):\n    try:\n      at.remove(i)\n      mb = i\n    except:\n      break\n  print(ma + mb + 2)    \n  "
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.InputMismatchException;\nimport java.util.List;\n\npublic class Main {\n\n\tprivate static final String NO = \"No\";\n\tprivate static final String YES = \"Yes\";\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\tprivate List<int[]>[] g;\n\n\tprivate static final long MOD = 1000000007;\n\tprivate static final int MAXN = 1000000;\n\n\tvoid solve() {\n\t\tint T = ni();\n\t\tfor (int i = 0; i < T; i++)\n\t\t\tsolve(i);\n\t}\n\n\tvoid solve(int T) {\n\t\tint n = ni();\n\t\tint cnt[] = new int[102];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tcnt[ni()]++;\n\t\tint m1 = 0;\n\t\tfor (int i = 0; i <= 101; i++)\n\t\t\tif (cnt[i] < 2) {\n\t\t\t\tm1 = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\tfor (int i = 0; i <= 101; i++) {\n\t\t\tif (cnt[i] == 0) {\n\t\t\t\tout.println(m1 + i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// a^b\n\tlong power(long a, long b) {\n\t\tlong x = 1, y = a;\n\t\twhile (b > 0) {\n\t\t\tif (b % 2 != 0) {\n\t\t\t\tx = (x * y) % MOD;\n\t\t\t}\n\t\t\ty = (y * y) % MOD;\n\t\t\tb /= 2;\n\t\t}\n\t\treturn x % MOD;\n\t}\n\n\tprivate long gcd(long a, long b) {\n\t\twhile (a != 0) {\n\t\t\tlong tmp = b % a;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\t\treturn b;\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate List<Integer> na2(int n) {\n\t\tList<Integer> a = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta.add(ni());\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl();\n\t\treturn a;\n\t}\n\n\tprivate long[][] nl(int n, int m) {\n\t\tlong[][] a = new long[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl(m);\n\t\treturn a;\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d={}\n    for i in a:\n        if i in d:\n            d[i]+=1\n        else:\n            d[i]=1    \n    s1=list(set(a))\n    s1=sorted(s1)\n    s2=[]\n    for i in d:\n        if d[i]>1:\n            s2.append(i)\n    s2=list(set(s2))        \n    s2=sorted(s2)\n    #print(s1,s2) \n    i=0\n    j=0\n    ans=0\n    while i<len(s1):\n        if s1[i]==i:\n            i+=1\n        else:\n            ans=i\n            break\n    if i==   len(s1):\n        ans=i \n    #print(ans)    \n    while j<len(s2):\n        if s2[j]==j :\n            j+=1\n        else:\n            ans+=j\n            break\n    if j==len(s2):\n        ans+=j     \n    print(ans)               \n\n\n    \n    "
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = [0]*102\n    for i in l:\n        dic[i]+=1\n    a,b =0,0\n    k = 2\n    for i in range(102):\n        if dic[i]<2:\n            a = i\n            break\n    for i in range(102):\n        if dic[i]<1:\n            b = i\n            break\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nwhile t:\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    x = [-1]*101\n    y = [-1]*101\n    \n    mem = {ele:0 for ele in a}\n    \n    for ele in a:\n        mem[ele]+=1\n        \n    for i in mem.keys():\n        if mem[i]>1:\n            x[i]+=1\n            y[i]+=1\n        else:\n            x[i]+=1\n            \n    mex1 = max(a)+1\n    mex2 = max(a)+1\n    \n    for i in range(101):\n        if x[i]<0:\n            mex1 = i\n            break\n    for i in range(101):\n        if y[i]<0:\n            mex2 = i\n            break\n        \n    print(mex1+mex2)\n    t-=1"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\n\npublic class A {\n\n\tpublic static void main(String[] args) {\n\t\tMyScanner s = new MyScanner();\n\t\tout = new PrintWriter(new BufferedOutputStream(System.out));\n\t\tint t=s.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n=s.nextInt();\n\t\t\tHashMap<Integer,Integer> map=new HashMap<>();\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tint x=s.nextInt();\n\t\t\t\tmap.put(x,map.getOrDefault(x, 0)+1);\n\t\t\t}\n\t\t\t\n\t\t\tint one=-1;\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(!map.containsKey(i)) {\n\t\t\t\t\tone=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmap.put(i,map.get(i)-1);\n\t\t\t\t\tif(map.get(i)==0)\n\t\t\t\t\t\tmap.remove(i);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif(one==-1)\n\t\t\t\tone=n;\n\t\t\tint two=-1;\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(!map.containsKey(i)) {\n\t\t\t\t\ttwo=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmap.put(i,map.get(i)-1);\n\t\t\t\t\tif(map.get(i)==0)\n\t\t\t\t\t\tmap.remove(i);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif(two==-1)\n\t\t\t\ttwo=n;\n\t\t\tSystem.out.println(Math.max(one,one+two));\n\t\t}\n\t\t\n\t\tout.close();\n\t}\n\t\n\tpublic static PrintWriter out;\n\t\n\tpublic static class MyScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\t\n\t\tpublic MyScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\t\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\t\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\t\n\t}\n\tpublic static class FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\t\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tString nextToken() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\t\t\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\t\t\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def solver():\n    t = int(input())\n    for epoch in range(t):\n        n = int(input())\n        num = list(map(int, input().split()))\n        index = [0 for i in range(110)]\n        for s in num:\n            index[s] += 1\n        a = []\n        b = []\n        ans, ok1, ok2 = 0, True, True\n        for i in range(len(index)):\n            if index[i] >= 1:\n                a.append(i)\n            if index[i] >= 2:\n                b.append(i)\n        for i in range(len(index)):\n            if ok1:\n                if len(a) <= i or a[i] != i:\n                    ok1 = False\n                    ans += i\n            if ok2:\n                if len(b) <= i or b[i] != i:\n                    ok2 = False\n                    ans += i\n        print(ans)\n\n\nif __name__ == \"__main__\":\n    solver()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long mux(vector<long long> v) {\n  long long i;\n  for (i = 0; i < (v.size()); i++) {\n    if (i != v[i]) return i;\n  }\n  if (v.size())\n    return i;\n  else\n    return 0;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long _, i, j, n, a, b, e, k, u, t, x = 1, m, y, q, f = 1, c = 0, d = 0,\n                                          l, p, z, o, r, g;\n  string ss, s;\n  cin >> _;\n  while (_--) {\n    cin >> n;\n    vector<long long> v, vv;\n    long long aa[107];\n    memset(aa, 0, sizeof(aa));\n    for (i = 0; i < (n); i++) {\n      cin >> x;\n      aa[x]++;\n    }\n    for (i = 0; i < (107); i++) {\n      if (aa[i] >= 2) {\n        v.push_back(i);\n        vv.push_back(i);\n      } else if (aa[i] == 1) {\n        v.push_back(i);\n      } else\n        break;\n    }\n    cout << mux(v) + mux(vv) << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int tt;\n  cin >> tt;\n  int vect[101];\n  while (tt--) {\n    int n;\n    cin >> n;\n    for (int i = 0; i < 101; ++i) {\n      vect[i] = 0;\n    }\n    for (int i = 0; i < n; ++i) {\n      int temp;\n      cin >> temp;\n      vect[temp]++;\n    }\n    int ans = 0;\n    for (int i = 0; i < 101; ++i) {\n      if (vect[i] == 0 or vect[i] == 1) {\n        ans += i;\n        break;\n      }\n    }\n    for (int i = 0; i < 101; ++i) {\n      if (vect[i] == 0) {\n        ans += i;\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\nusing ll = long long;\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  vector<int> cnt(101, 0);\n  vector<bool> m(101, 0);\n  for (auto &x : a) {\n    cin >> x;\n    cnt[x]++;\n  }\n  int ans = 0;\n  for (int i = 0; i <= 100; i++) {\n    if (cnt[i] == 0) {\n      ans += i;\n      break;\n    }\n    cnt[i]--;\n  }\n  for (int i = 0; i <= 100; i++) {\n    if (cnt[i] == 0) {\n      ans += i;\n      break;\n    }\n  }\n  cout << ans << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T, typename U>\nstatic inline void amin(T &x, U y) {\n  if (y < x) x = y;\n}\ntemplate <typename T, typename U>\nstatic inline void amax(T &x, U y) {\n  if (x < y) x = y;\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  int a[n];\n  map<int, int> m1;\n  for (auto &i : a) {\n    cin >> i;\n  }\n  int v[111] = {0};\n  for (auto j : a) {\n    v[j]++;\n  }\n  int res = 0;\n  for (int i = 0; i < 111; i++) {\n    if (v[i] == 0) {\n      res += i;\n      break;\n    } else\n      v[i]--;\n  }\n  for (int i = 0; i < 111; i++) {\n    if (v[i] == 0) {\n      res += i;\n      break;\n    } else\n      v[i]--;\n  }\n  cout << res << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int tc;\n  cin >> tc;\n  while (tc--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# URL : https://codeforces.com/contest/1406/problem/A\nT = int(input())\n\n\ndef mex(l):\n    ret = 0\n    while 1:\n        if l.count(ret) == 0:\n            return ret\n        ret += 1\n\n\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    l = [-1]\n    for i in range(n):\n        if a[i] == l[-1] + 1:\n            l.append(a[i])\n            a[i] = -1\n    a = sorted(a)\n    res = l[-1] + 1\n    res += mex(a)\n    print(res)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int n;\n    cin >> n;\n    vector<int> vec(n, 0);\n    for (int j = 0; j < n; j++) {\n      cin >> vec[j];\n    }\n    sort(vec.begin(), vec.end());\n    map<int, int> m;\n    for (int j = 0; j < n; j++) {\n      m[vec[j]]++;\n    }\n    int amount = 0;\n    set<int> used;\n    vector<int> sxva(vec[vec.size() - 1] + 1, 0);\n    for (int j = 0; j < vec.size(); j++) {\n      sxva[vec[j]]++;\n    }\n    set<int> s;\n    for (int j = 0; j < vec.size(); j++) {\n      s.insert(vec[j]);\n    }\n    int tmp = 0;\n    int result = 0;\n    for (int j = 0;; j++) {\n      if (s.find(j) == s.end()) {\n        result += j;\n        tmp = j;\n        break;\n      }\n    }\n    bool g = false;\n    for (int j = 0; j < vec.size(); j++) {\n      if (sxva[vec[j]] >= 2 && used.find(vec[j]) == used.end() &&\n          vec[j] <= tmp && !g) {\n        amount++;\n        used.insert(vec[j]);\n      }\n      if (sxva[vec[j]] < 2) break;\n    }\n    result += amount;\n    cout << result << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def fun(ls,n):\n    count=[0 for i in range(101)]\n    for i in ls:\n        count[i]+=1\n    first_nonrepating=None\n    first_absent=None\n    for i,val in enumerate(count):\n        if (val<=1 and first_nonrepating==None):\n            first_nonrepating=i\n        if(val==0 and first_absent==None):\n            first_absent=i\n    # if(first_absent==0 and first_nonrepating ==1):\n    #     print(0)\n    #     return\n    # if(first_nonrepating==None):\n    #     print(first_absent)\n    #     return\n\n    print(first_absent+first_nonrepating)\n\n\n\nT = int(input())\nfor i in range(T):\n    # var=input()\n    val=int(input())\n    # st=input()\n    # ms= list(map(int, input().split()))\n    # ls= list(map(int, input().split()))\n    st= list(map(int, input().split()))\n    # fun(ls)\n    fun(st,val)"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    mx = max(numbers)\n    d = dict()\n\n    first = -1\n    second = -1\n\n    first_stop = False\n\n    for n in numbers:\n        d[n] = d.get(n, 0) + 1\n\n    i = 0\n    while mx >= i:\n        if i not in d:\n            break\n        elif d[i] >= 2:\n            if not first_stop:\n                first = i\n            second = i\n        elif d[i] == 1:\n            second = i\n            first_stop = True\n        i += 1\n\n    print(first + second + 2)\n\n\nfor _ in range(int(input())):\n    main()\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nins = lambda: input().rstrip()\nini = lambda: int(input().rstrip())\ninm = lambda: map(int, input().rstrip().split())\ninl = lambda: list(map(int, input().rstrip().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\n\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = sorted(inl())\n    first = second = -1\n    for i in range(101):\n        if first != -1 and second != -1:\n            break\n        if a.count(i) > 1:\n            continue\n        if a.count(i) == 1 and first == -1:\n            first = i\n            continue\n        if a.count(i) == 0:\n            first = i if first == -1 else first\n            second = i\n            break\n    print(first+second)\n"
        },
        {
            "language": 3,
            "solution": "import collections\n\nt = input()\nt = int(t)\n\ndef solve(n, arr):\n\n    arr_dict = collections.Counter(arr)\n\n    mex_A = 0\n    mex_B = 0\n\n    flag = 0\n\n    for i in range(101):\n        if i not in arr_dict:\n            break\n\n        if arr_dict[i]>=2 and flag==0:\n            mex_A = i+1\n            mex_B = i+1\n        elif arr_dict[i]==1 and flag==0:\n            mex_A = i+1\n            flag = 1\n        else :\n            mex_A = i+1\n\n\n    print(mex_A + mex_B)\n\n\nfor i in range(t):\n    n = input()\n    n = int(n)\n    arr = list(map(int, input().split()))\n\n    solve(n, arr)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nt = int(input())\nfor _ in range(t):\n    N = int(input())\n    X = list(map(int, input().split()))\n    C = Counter(X)\n    i = 0\n    a, b = float('inf'), float('inf')\n    while True:\n        if C[i] == 0:\n            a = min(i, a)\n            b = min(i, b)\n            break\n        elif C[i] == 1:\n            b = min(i, b)\n        i += 1\n    print(a+b)\n"
        },
        {
            "language": 3,
            "solution": "def solve(arr,n):\n\n\thashmap = [0 for i in range(101)]\n\tfor x in arr:\n\t\thashmap[x]+=1\n\n\ta=-1\n\tb=-1\n\n\tfor i in range(101):\n\t\tif(hashmap[i]<2):\n\t\t\tif(hashmap[i]==0):\n\t\t\t\ta = i \n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\thashmap[i]-=1\n\n\tif(a==-1):\n\t\ta = 101 \n\tfor j in range(101):\n\t\tif(hashmap[j]<2):\n\t\t\tb = j\n\t\t\tbreak\n\tif(b==-1):\n\t\tb = 101\n\n\treturn a+b\n\n\nt = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tarr = list(map(int,input().split()))\n\tprint(solve(arr,n))"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Answer\n{\n\tpublic static void main(String [] args) throws IOException\n\t{\n\t\tBufferedReader buf = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(buf.readLine().trim());\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n = Integer.parseInt(buf.readLine().trim());\n\t\t\tStringTokenizer token = new StringTokenizer(buf.readLine().trim());\n\t\t\tint a[] = new int[n];\n\t\t\tint i = 0;\n\t\t\twhile(token.hasMoreTokens())\n\t\t\t{\t\n\t\t\t\ta[i++] = Integer.parseInt(token.nextToken());\n\t\t\t}\n\t\t\tint sum = findSum(a);\n\t\t\tSystem.out.println(sum);\n\t\t}\n\n\t}\n\tpublic static int findSum(int a[])\n\t{\n\t\tint arr1[] = new int[102];\n\t\tint arr2[] = new int[102];\n\t\tfor(int i:a)\n\t\t\tarr1[i]++;\n\t\tfor(int i=0;i<=100;i++)\n\t\t{\n\t\t\tif(arr1[i] > 0)\n\t\t\t{\n\t\t\t\tarr2[i]++;\n\t\t\t\tarr1[i]--;\n\t\t\t}\n\t\t}\n\t\tint sum = 0;\n\t\tfor(int i=0;i<=101;i++)\n\t\t{\n\t\t\tif(arr1[i] == 0)\n\t\t\t{\n\t\t\t\tsum += i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t for(int i=0;i<=101;i++)\n                {\n                        if(arr2[i] == 0)\n                        {\n                                sum += i;\n                                break;\n                        }\n                }\n\t\treturn sum;\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, cnt[101];\nvoid solve() {\n  cin >> n;\n  vector<int> a(n + 1);\n  for (int i = 1; i <= n; ++i) cin >> a[i];\n  fill(cnt, cnt + 101, 0);\n  for (int i = 1; i <= n; ++i) ++cnt[a[i]];\n  int ans = 0;\n  bool b = false;\n  for (int i = 0; i <= 101; ++i) {\n    if (cnt[i] == 1) {\n      if (not b) {\n        b = true;\n        ans += i;\n      }\n    } else if (cnt[i] == 0) {\n      ans += i;\n      if (not b) {\n        b = true;\n        ans += i;\n      }\n      break;\n    }\n  }\n  cout << ans << '\\n';\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> arr(n, 0);\n    int hash[101];\n    memset(hash, 0, sizeof(hash));\n    int inMax = INT_MIN;\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n      inMax = max(arr[i], inMax);\n      hash[arr[i]]++;\n    }\n    int ans = 0;\n    int count = 0;\n    int i = 0;\n    while (hash[i] != 0) {\n      hash[i]--;\n      i++;\n    }\n    ans += i;\n    i = 0;\n    while (hash[i] != 0) {\n      hash[i]--;\n      i++;\n    }\n    ans += i;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import *\nt = int(stdin.readline())\nwhile(t):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    cnt = [0 for i in range(101)]\n    for ele in a:\n        cnt[ele] += 1\n    a = 0\n    b = 0\n    for i in range(101):\n        if cnt[i] == 0:\n            a = i\n            break\n\n    for i in range(101):\n        if cnt[i] < 2:\n            b = i\n            break\n    print(a+b)\n    t -= 1\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid DBG() { cerr << \"]\" << endl; }\ntemplate <class H, class... T>\nvoid DBG(H h, T... t) {\n  cerr << to_string(h);\n  if (sizeof...(t)) cerr << \", \";\n  DBG(t...);\n}\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> cnt(102, 0);\n  for (int i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    cnt[x]++;\n  }\n  long long sum = 0;\n  for (int i = 0; i <= 100; i++) {\n    if (cnt[i] == 0) {\n      sum += i;\n      break;\n    }\n  }\n  for (int i = 0; i <= 100; i++) {\n    if (cnt[i] <= 1) {\n      sum += i;\n      break;\n    }\n  }\n  cout << sum << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int test = 1;\n  cin >> test;\n  while (test--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nT = int(input().strip())\n\nwhile T:\n    T -= 1\n    fq = defaultdict(int)\n    n = int(input())\n\n    lis = map(int, input().strip().split())\n    maxn = -1\n    for num in lis:\n        maxn = max(num, maxn)\n        fq[num] += 1\n\n    ans = 0\n\n    for num in range(maxn+2):\n        if fq[num] < 2:\n            ans = num\n            break\n\n    for num in range(ans, maxn+2):\n        if fq[num] < 1:\n            ans += num\n            break\n    print(ans)\n        "
        },
        {
            "language": 3,
            "solution": "import sys\n\nfor i in range(0,int(sys.stdin.readline())):\n  leng=sys.stdin.readline()\n  vllist = list(map(int,sys.stdin.readline().split()))\n\n  c=0\n  while c in vllist:\n    vllist.pop(vllist.index(c))\n    c+=1\n  mexa = c\n  c=0\n  while c in vllist:\n    vllist.pop(vllist.index(c))\n    c+=1\n  mexb = c\n\n  sys.stdout.write(str(mexa+mexb))\n  sys.stdout.write(\"\\n\")\n"
        },
        {
            "language": 3,
            "solution": "# Author : Pratyaydeep\u21afGhanta\nimport sys,threading\ndef inpt(): return sys.stdin.readline().rstrip()\ndef read(): return [int(x) for x in inpt().split()]\n# Am I debugging, check if I'm using same variable name in two places\ndef mex(a):\n    for i in range(107):\n        if i not in a:\n            return i\ndef main():\n    _T_,=read()\n    for _t_ in range(_T_):\n        n,=read()\n        ar=read()\n        a=set()\n        b=set()\n        vis=set()\n        for i in ar:\n            if i not in vis:\n                vis.add(i)\n                a.add(i)\n            else:\n                b.add(i)\n        print(mex(a)+mex(b))\n\nif (1):\n    sys.setrecursionlimit(10**7)\n    threading.stack_size(10**8)\n    threading.Thread(target=main).start()\nelse:\n    main()"
        },
        {
            "language": 3,
            "solution": "\nt=int(input())\nwhile(t>0):\n    t-=1\n    n=int(input())\n    l=list(map(int,input().split()))\n    lst=[0]*101\n    for i in l:\n        lst[i]+=1\n    for i in range(len(lst)):\n        if(lst[i]==0):\n            mexA=i\n            break\n    for i in range(len(lst)):\n        if(lst[i]<=1):\n            mexB=i\n            break\n    print(mexA+mexB)    "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\ncases = int(input())\nfor t in range(cases):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a1 = Counter(a)\n    a2 = []\n    a3 = []\n    for i in a1:\n        a2.append(i)\n        a1[i]-=1\n    for i in a1:\n        if a1.get(i,0):\n            a3.append(i)\n    a2 = set(a2)\n    a3 = set(a3)\n    la2 = len(a2)\n    la3 = len(a3)\n    m2 = set(range(la2+1))\n    m3 = set(range(la3+1))\n    print(min(m2-a2)+min(m3-a3))\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.HashSet;\n\n\npublic class Test{\n    public static void main(String[] args)throws Exception{\n\n\n\n\n\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        int t=Integer.parseInt(br.readLine());\n        for(int ti=0;ti<t;ti++){\n            int n=Integer.parseInt(br.readLine());\n            int arr[]=new int[101];\n            StringTokenizer st=new StringTokenizer(br.readLine());\n            for(int i=0;i<n;i++){\n                arr[Integer.parseInt(st.nextToken())]++;\n            }\n            int count=0;\n            int sum=0;\n            int first=0;\n            int second=0;\n            int tempi=-1;\n            int flag=0;\n            for(int i=0;i<101;i++){\n                if(arr[i]==0){\n                    if(count==0){\n                        first=i;\n                    }\n                    count=2;\n                }\n                if(arr[i]==1 && flag!=-1){\n                    tempi=i;\n                    flag=-1;\n                }\n                if(count==2){\n                    break;\n                }\n            }\n            if(tempi!=-1){\n                System.out.println(first+tempi);\n            }\n            else{\n                System.out.println(first+first);\n            }\n        }\n    }\n\n\n    private static int partition(int arr[], int low, int high) \n    { \n        int pivot = arr[high];  \n        int i = (low-1);\n        for (int j=low; j<high; j++) \n        { \n            if (arr[j] < pivot) \n            { \n                i++; \n                int temp = arr[i]; \n                arr[i] = arr[j]; \n                arr[j] = temp; \n            } \n        }  \n        int temp = arr[i+1]; \n        arr[i+1] = arr[high]; \n        arr[high] = temp; \n        return i+1; \n    } \n        \n\n\n    private static void sort(int arr[], int low, int high) \n    { \n        if (low < high) \n        { \n            int pi = partition(arr, low, high); \n            sort(arr, low, pi-1); \n            sort(arr, pi+1, high); \n        } \n    } \n}\n\n\n\n/*\nBufferedReader br=new Bufferedreader(new InputStreamReader(System.in));\nint t=Integer.parseInt(br.readLine());\nfor(int ti=0;ti<t;ti++){\n\n}\nStringTokenizer st=new StringTokenizer(br.readLine());\nint n=Integer.parseInt(st.nextToken());\nlong n=Long.parseLong(st.nextToken());\nlong n=Long.parseLong(br.readLine());\n */"
        },
        {
            "language": 3,
            "solution": "import sys\nsys.setrecursionlimit(10000)\n# default is 1000 in python\n\n# increase stack size as well (for hackerrank)\n# import resource\n# resource.setrlimit(resource.RLIMIT_STACK, (resource.RLIM_INFINITY, resource.RLIM_INFINITY))\n\n\nt = int(input())\n# t = 1\n\nfor _ in range(t):\n\tn = int(input())\n\n\t# u, v = list(map(int, input().split()))\n\n\ta = list(map(int, input().split()))\n\ta.sort()\n\n\tmydict = {}\n\tfor i in a:\n\t\tif i not in mydict:\n\t\t\tmydict[i] = 0\n\t\tmydict[i] += 1\n\n\tmaxno = 0\n\tfor i in range(102):\n\t\tif i not in mydict:\n\t\t\tmaxno = i\n\t\t\tbreak\n\tans = maxno\n\n\tfor i in range(102):\n\t\tif not (i in mydict and mydict[i] >= 2):\n\t\t\tans = i + maxno\n\t\t\tbreak\n\tprint(ans)\n\n# try:\n\t# raise Exception\n# except:\n\t# print(\"-1\")\n\n\n# from itertools import combinations \n# all_combs = list(combinations(range(N), r))\n\n\n\n# from collections import OrderedDict \n# mydict = OrderedDict() \n\n\n# thenos.sort(key=lambda x: x[2], reverse=True)\n\n\n# int(math.log(max(numbers)+1,2))\n\n\n# 2**3 (power)\n\n\n# a,t = (list(x) for x in zip(*sorted(zip(a, t))))\n\n\n# to copy lists use:\n# import copy\n# copy.deepcopy(listname)\n\n# pow(p, si, 1000000007) for modular exponentiation\n\n\n# my_dict.pop('key', None)\n# This will return my_dict[key] if key exists in the dictionary, and None otherwise.\n\n\n# bin(int('010101', 2))\n\n# Binary Search\n# from bisect import bisect_right\n# i = bisect_right(a, ins)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import Counter\n# sys.stdin = open(\"input.txt\")\n\ndef main():\n    tn = int(input())\n    for ti in range(tn):\n        n = int(input())\n        A = Counter(int(a) for a in input().split())\n        for i in range(200):\n            if A[i] == 0:\n                a = i\n                break\n            A[i] -= 1\n        for i in range(200):\n            if A[i] == 0:\n                b = i\n                break\n            A[i] -= 1\n        print(a + b)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gcd(int a, int b) {\n  if (b == 0)\n    return a;\n  else\n    return gcd(b, a % b);\n}\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    int n, ans = 0;\n    cin >> n;\n    int a[n];\n    unordered_map<int, int> mp;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      mp[a[i]]++;\n    }\n    int i = 0;\n    while (mp[i] >= 2) {\n      i++;\n    }\n    ans = i;\n    i = 0;\n    while (mp[i] > 0) i++;\n    ans += i;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nimport threading \nfrom bisect import bisect_right\nfrom math import gcd,log\nfrom collections import Counter\nfrom pprint import pprint\n\ndef main():\n    n=int(input())\n    arr=list(map(int,input().split()))\n    c=Counter(arr)\n    x=0\n    while x in c and  c[x]>1:\n        x+=1\n    ans=x\n    while x in c and c[x]>0:\n        x+=1\n    ans+=x\n    print(ans)\n\n        \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \nif __name__ == \"__main__\":\n\n    for _ in range(int(input())):\n        main()\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, i;\n    cin >> n;\n    int a[n], c[500] = {0};\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      c[a[i]]++;\n    }\n    int ifdeci = 0, ifnot = 0;\n    sort(a, a + n);\n    for (i = 0; i <= 101; i++) {\n      if (c[i] == 0) {\n        ifnot = i;\n        break;\n      }\n    }\n    for (i = 0; i < 101; i++) {\n      if (c[i] > 1)\n        ifdeci++;\n      else\n        break;\n    }\n    int ans = max(ifnot, ifnot + ifdeci);\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "\nfrom collections import Counter\n\n\ndef tc():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    c = Counter(a)\n\n    ans = 0\n    bad = 0\n\n    for _ in range(2):\n        for i in range(n + 1):\n            if c[i]:\n                c[i] -= 1\n            else:\n                ans += i\n                bad += 1\n                break\n    print(ans)\n\n\n#################\nT = int(input())\nfor _ in range(T):\n    tc()\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nfor t in range(int(input())):\n    n = int(input())\n    frq = Counter(list(map(int, input().split())))\n    ans1, ans2 = None, None\n    i = 0\n    while True:\n        if i not in frq:\n            ans1 = i\n            ans2 = i\n            break\n        elif frq[i] == 1:\n            ans2 = i\n            break\n        else:\n            i += 1\n\n    while ans1 is None:\n        if i not in frq:\n            ans1 = i\n            break\n        else:\n            i += 1\n\n\n    print(ans1 + ans2)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\nint n;\nint a[105];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    sort(a, a + n);\n    int m[2] = {0};\n    for (int i = 0; i < n; i++) {\n      if (a[i] == m[0])\n        m[0]++;\n      else if (a[i] == m[1])\n        m[1]++;\n    }\n    cout << m[0] + m[1] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = input()\n    l = [int(x) for x in input().split()]\n\n    l.sort()\n\n    a, b = 0, 0\n    for i in l:\n        if i == a:\n            a += 1\n\n        elif i == b:\n            b += 1\n\n    print(a+b)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class A {\n\tpublic static void main(String[] args) {\n\t\t\tScanner sc = new Scanner(System.in);\n\t\t\tint t=sc.nextInt();\n\t\t\touter:while(t-->0) {\n\t\t\t\tint n=sc.nextInt();\n\t\t\t\tint[]arr=new int[101];\n\t\t\t\tint[] arr1=new int[101];\n\t\t\t\tint count =0;\n\t\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\t\tint k=sc.nextInt();\n\t\t\t\t\tif(arr[k]>0) {\n\t\t\t\t\t\tarr1[k]++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tarr[k]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint val1=100;\n\t\t\t\tint val2=0;\n\t\t\t\tfor(int i=0;i<=100;i++) {\n\t\t\t\t\tif(arr[i]==0) {\n\t\t\t\t\t\tval1=i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int i=0;i<=100;i++) {\n\t\t\t\t\tif(arr1[i]==0) {\n\t\t\t\t\t\tval2=i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println(val1+val2);\n\t\t\t}\n\t}\n\tstatic boolean isvalid(int mid,int n) {\n\t\tlong val=(2l*mid)+(long)(((mid*1l*(mid-1))/2)*3);\n\t\tif(val<=n) return true;\n\t\treturn false;\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    ar=list(map(int,input().split()))\n    d={}\n    for i in ar:\n        try:\n            d[i]+=1\n        except:\n            d[i]=1\n\n    cnt=0\n    s=0\n    t1=[]\n    t2=[]\n    # print(d)\n    for i in d:\n        if d[i]>1:\n            t1.append(i)\n            t2.append(i)\n        else:\n            t2.append(i)\n\n    t1.sort()\n    t2.sort()\n    # print(t1,t2)\n    flag=0\n    for i in range(len(t1)):\n        if t1[i]!=i:\n            s+=i\n            flag=1\n            break\n    if flag==0:\n        s+=len(t1)\n\n    flag=0\n\n    for i in range(len(t2)):\n        if t2[i]!=i:\n            s+=i\n            flag=1\n            break\n\n    if flag==0:\n        s+=len(t2)\n\n    print(s)\n\n\n\n\n        \n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader; \nimport java.io.*;\nimport java.io.InputStreamReader; \nimport java.util.Scanner; \nimport java.util.StringTokenizer; \nimport java.util.*;\nimport java.math.*;\npublic class Main \n{ \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader()\n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next()\n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine();\n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n   public static void main(String args[]) throws Exception\n    {\n        FastReader sc=new FastReader();\n        PrintWriter pw=new PrintWriter(System.out);\n        int t=sc.nextInt();\n        while(t-->0)\n        {\n           int n=sc.nextInt(),f=0,p=1;long a[]=new long[n];\n           Map<Integer,Integer> h=new TreeMap<>();\n           for(int i=0;i<n;i++)\n           {\n             h.merge(sc.nextInt(),1,Integer::sum);\n           }int ans1=-1,ans2=-1;\n           for(int i=0;i<=100;i++)\n           {\n               if(!h.containsKey(i)) \n               {\n                   if(ans1==-1) ans1=i;\n                   if(ans2==-1) ans2=i;\n               }\n               else if(h.containsKey(i) && h.get(i)==1 && ans1==-1)\n               ans1=i;\n               else if(h.containsKey(i) && h.get(i)==1 && ans2!=-1)\n               ans2=i;\n               if(ans1>-1 && ans2>-1) break;\n           }\n            pw.println(ans1+ans2);\n        }\n           pw.close();\n    }\n}\n  "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Subset_Mex {\n\n\tstatic Scanner in = new Scanner(System.in);\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tint t = in.nextInt();\n\t\t\n\t\twhile(t-- > 0) {\n\t\t\t\n\t\t\tint n = in.nextInt();\n\t\t\tint[] tab = new int[101];\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++) tab[in.nextInt()]++;\n\t\t\t\n\t\t\tint a = -1;\n\t\t\tint b = -1;\n\t\t\t\n\t\t\tfor(int i = 0; i <= 100; i++) {\n\t\t\t\tif(tab[i]<=1 && a == -1) a = i;\n\t\t\t\tif(tab[i]==0 && b == -1) {\n\t\t\t\t\tb = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//System.out.println(a + \" \" + b);\n\t\t\tSystem.out.println(a+b);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i1 = 0\n    i2 = 0\n    while a.count(i1) >= 2:\n        i1 += 1\n        i2 +=1\n    while a.count(i1) >= 1:\n        i1 += 1\n    print(i1+i2)\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    d = {}\n    ans = 0\n    for x in a:\n        if x not in d:\n            d[x] = 0\n        d[x] += 1\n    for _ in range(2):\n        i = 0\n        while True:\n            try:\n                if d[i] == 0:\n                    int(\"d\")\n                d[i] -= 1\n            except:\n                ans += i\n                break\n            i += 1\n    print(ans)\n    \n    \n\n    \n\nt = int(input())\nfor x in range(t):\n    solve()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Codeforces\n{\n    public static void main(String args[])throws Exception\n    {\n        BufferedReader bu=new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb=new StringBuilder();\n        int t=Integer.parseInt(bu.readLine());\n        while(t-->0)\n        {\n            int n=Integer.parseInt(bu.readLine());\n            int c[]=new int[101],i,a;\n            String s[]=bu.readLine().split(\" \");\n            for(i=0;i<n;i++)\n            {\n                a=Integer.parseInt(s[i]);\n                c[a]++;\n            }\n            int m1=-1,m2=-1;\n            for(i=0;i<=100;i++)\n            if(c[i]!=0) c[i]--;\n            else {m1=i; break;}\n\n            for(i=0;i<n;i++)\n            if(c[i]==0) {m2=i; break;}\n            sb.append(m1+m2+\"\\n\");\n        }\n        System.out.print(sb);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\ndef solve():\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    cou=[0 for i in range(120)]\n    for i in range(n):\n        cou[a[i]]+=1\n    b=[]\n    c=[]\n    for  i in range(120):\n        if cou[i]==0:\n            break\n        elif cou[i]==1:\n            b.append(i)\n        else:\n            b.append(i)\n            c.append(i)\n    ans1=len(b)\n    ans2=len(c)\n    b.sort()\n    c.sort()\n    for i in range(len(b)):\n        if i!=b[i]:\n            ans1=i\n            break\n    for i in range(len(c)):\n        if i!=c[i]:\n            ans2=i\n            break\n    print(ans1+ans2)\n\nwhile t:\n    t-=1\n    solve()\n\n"
        },
        {
            "language": 3,
            "solution": "import bisect\nimport collections\nimport copy\nimport fractions\nimport functools\nimport heapq\nimport math\nimport random\nimport sys\n\n\ndef _p(str):\n    sys.stdout.write(str+'\\n')\ndef _i():\n    return sys.stdin.readline()\n\nif __name__ == '__main__':\n\n    T = int(_i())\n\n    for t in range(T):\n        N = int(_i())\n        A = list(map(int, _i().split()))\n\n        cnts = {}\n        for a in A:\n            if a not in cnts:\n                cnts[a] = 0\n            cnts[a] += 1\n\n        m1, m2 = None, None\n        for n in range(N+2):\n            if n not in cnts:\n                if m1 is None:\n                    m1 = n\n                m2 = n\n                break\n            if cnts[n] == 1:\n                if m1 is None:\n                    m1 = n\n\n        _p(str(m1 + m2))\n\n    sys.stdout.flush()\n"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import deque\nfrom sys import stdin, stdout\nfrom string import ascii_letters\nimport sys\nletters = ascii_letters\ninput = stdin.readline\n#print = stdout.write\n\nfor _ in range(int(input())):\n    n = int(input())\n    vals = dict()\n    for i in map(int, input().split()):\n        if i not in vals:\n            vals[i] = 0\n        vals[i] += 1\n    was = False\n    res = 0\n    for g in range(0, 1000):\n        if not was:\n            if g in vals and vals[g] >= 2:\n                continue\n            res += g\n            was = True\n            if g not in vals:\n                res += g\n                break\n        else:\n            if g not in vals:\n                res += g\n                break\n    print(res)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nans = []\nwhile(t>0):\n    t-=1\n    flag = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    if a.count(0) == 0:\n        print(0)\n    else:\n        am = []\n        bm = []\n        for i in a:\n            if i not in am:\n                am.append(i)\n            if a.count(i)>1 and i not in bm:\n                bm.append(i)\n        for i in list(range(101)):\n            if i not in am:\n                amax = i\n                break\n        for i in list(range(101)):\n            if i not in bm:\n                bmax = i\n                break\n        print(amax+bmax)\n                \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 200 + 5;\nint num[N];\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n;\n    scanf(\"%d\", &n);\n    memset(num, 0, sizeof(num));\n    for (int i = 1; i <= n; i++) {\n      int x;\n      scanf(\"%d\", &x);\n      ++num[x];\n    }\n    int ans = 0, ss = 0;\n    for (int i = 0; i <= 101; i++) {\n      if (num[i] == 1 && ss == 0) ans += i, ++ss;\n      if (num[i] == 0) {\n        if (ss == 0)\n          ans += 2 * i, ss = 2;\n        else\n          ans += i, ss = 2;\n      }\n      if (ss == 2) break;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void) {\n  int t;\n  cin >> t;\n  while (t--) {\n    map<int, int> mp;\n    int n, temp, i;\n    cin >> n;\n    for (i = 0; i < n; i++) {\n      cin >> temp;\n      mp[temp]++;\n    }\n    int ans1 = 101, ans2 = 101;\n    for (i = 0; i < 100; i++) {\n      if (mp[i] == 0) {\n        if (ans2 == 101) ans2 = i;\n        ans1 = i;\n        break;\n      } else {\n        if (mp[i] == 1) {\n          ans1 = i + 1;\n          if (ans2 == 101) ans2 = i;\n        }\n      }\n    }\n    cout << ans1 + ans2 << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e3;\nint cnt[maxn];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    int n;\n    scanf(\"%d\", &n);\n    int a;\n    memset(cnt, 0, sizeof cnt);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &a);\n      cnt[a]++;\n    }\n    int ansa = 0, ansb = 0;\n    while (cnt[ansa] != 0) ansa++;\n    while (cnt[ansb] > 1) ansb++;\n    printf(\"%d\\n\", ansa + ansb);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    mex = []\n    num = 0\n    while len(mex)<=1:\n        c = a.count(num)\n        if len(mex) == 0:\n            if c == 0:\n                mex.append(num)\n                mex.append(num)\n            elif c == 1:\n                mex.append(num)\n        elif len(mex) == 1:\n            if c == 0:\n                mex.append(num)\n        num += 1\n    # print(mex)\n    ans = sum(mex)\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\n\nfor i in range(t):\n    n=int(input())\n    l=[int(x) for x in input().split()]\n    d={}\n    a=[]\n    b=[]\n    for x in l:\n        if x in d:\n            b.append(x)\n        else:\n            a.append(x)\n            d[x]=True\n    #print(a,b)\n    a.sort()\n    b.sort()\n    i=0\n    c1=0\n    while(c1 in a):\n        c1+=1\n\n    c2=0\n    while(c2 in b):\n        c2+=1\n    print(c1+c2)\n    \n        \n        \n    \n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n\n\ndef main():\n    pass\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n\n\ndef test():\n    n = int(input())\n    l = list(map(int, input().split()))\n    a, b, f = 0, 0, []\n\n    for i in range(max(l) + 5):\n        f.append(l.count(i))\n\n    for i in range(len(f)):\n        if f[i] > 0:\n            f[i] -= 1\n        else:\n            a = i\n            break\n    for i in range(len(f)):\n        if f[i] > 0:\n            f[i] -= 1\n        else:\n            b = i\n            break\n\n    return a + b\n\n\nt = int(input())\nfor _ in range(t):\n    print(test())\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport collections\ninput=sys.stdin.readline\nt=int(input())\nfor w in range(t):\n    n=int(input())\n    l=[int(i) for i in input().split()]\n    l.sort()\n    s=0\n    c=0\n    k=0\n    if(l[0]==0):\n        d=collections.Counter(l)\n        for i in range(101):\n            if(c==2):\n                break\n            if(i in d):\n                if(d[i]==1):\n                    if(c==0):\n                        s+=i\n                        c+=1\n                    else:\n                        k=i\n            else:\n                if(c==0):\n                    s=2*i\n                    c=2\n                else:\n                    s+=i\n                    c+=1\n        if(c==1):\n            print(k+1+s)\n        else:\n            print(s)\n    else:\n        print(0)"
        },
        {
            "language": 3,
            "solution": "for _ in range (int(input())):\n    n=int(input())\n    s=list(map(int,input().split()))\n    if s.count(0)==0:\n        print(\"0\")\n    elif s.count(0)==1:\n        f=1\n        for i in range (1,max(s)):\n            if i not in s:\n                f=0\n                print(i)\n                break\n        if f==1:\n            print(max(s)+1)\n    else:\n        f=1\n        j=0\n        g=0\n        z=0\n        for i in range (1,max(s)+1):\n            if s.count(i)<2:\n                j=i-1\n                z=1\n                break\n        if z==0:\n            j=max(s)\n        for x in range (j,max(s)+1):\n            g=1\n            if x not in s:\n                print(j+x+1)\n                f=0\n                break\n        if g==1 and f==1:\n            print(j+max(s)+2)\n        if g==0 and f==1:\n            print(2*(max(s)+1))\n                \n                \n                \n        "
        },
        {
            "language": 3,
            "solution": "t = int(input())\ndef mex(setter):\n    a = set(range(0, 101))\n    return min(a - setter)\n\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int,input().split())))\n    A = set(a)\n    B = set()\n    for elem in a:\n        if a.count(elem) > 1:\n            B.add(elem)\n    minimum = mex(A)+mex(B)\n    print(minimum)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint mex(set<int> a) {\n  for (int i = 0; i < 1000; i++) {\n    if (!a.count(i)) {\n      return i;\n    }\n  }\n  return NULL;\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  set<int> one, two;\n  while (n--) {\n    int x;\n    cin >> x;\n    if (one.count(x)) {\n      two.insert(x);\n      continue;\n    }\n    one.insert(x);\n  }\n  cout << mex(one) + mex(two) << \"\\n\";\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "//package codeforce.div2.r670;\n\nimport java.util.Scanner;\n\npublic class ProblemA {\n  public static void main(String[] args) {\n    try (Scanner sc = new Scanner(System.in)) {\n      int t = sc.nextInt();\n      for (int i = 0; i < t; i++) {\n        int n = sc.nextInt();\n        int[] arr = new int[101];\n        int[] freq = new int[101];\n        for (int j = 0; j < n; j++) {\n          arr[j] = sc.nextInt();\n          freq[arr[j]]++;\n        }\n        int ans = 0;\n\n        int A = 101;\n        for (int j = 0; j < 101; j++) {\n          if (freq[j] == 0) {\n            A = j;\n            break;\n          } else {\n            freq[j]--;\n          }\n        }\n        int B = 101;\n        for (int j = 0; j < 101; j++) {\n          if (freq[j] == 0) {\n            B = j;\n            break;\n          } else {\n            freq[j]--;\n          }\n        }\n        ans = A + B;\n\n        System.out.println(ans);\n      }\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    s=set(l)\n    if len(s)==n:\n        for i in range(0,101):\n            if i not in s:\n                print(i)\n                break\n    else:\n        s1=set()\n        s2=set()\n        for i in l:\n            if i not in s1:\n                s1.add(i)\n            else:\n                s2.add(i)\n        for i in range(0,101):\n            if i not in s1:\n                m1=i\n                break\n        for i in range(0,101):\n            if i not in s2:\n                m2=i\n                break\n        print(m1+m2)\n            \n            \n        \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 105;\nint cnt[N];\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n;\n    scanf(\"%d\", &n);\n    for (int tmp, i = 1; i <= n; ++i) {\n      scanf(\"%d\", &tmp);\n      ++cnt[tmp];\n    }\n    int ans = 0;\n    bool c2 = 1, c1 = 1;\n    for (int i = 0; i <= 101; ++i) {\n      if (c2 && cnt[i] < 2) c2 = 0, ans += i;\n      if (c1 && cnt[i] < 1) c1 = 0, ans += i;\n    }\n    printf(\"%d\\n\", ans);\n    memset(cnt, 0, sizeof(cnt));\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n    static StringTokenizer st = new StringTokenizer(\"\");\n    static int T = 1;\n    public static void main(String args[]) throws IOException{\n    \tT = Integer.parseInt(next());\n        for (int t = 1; t <= T; t++) {\n            int n = Integer.parseInt(next());\n            int[] a = new int[101];\n            Arrays.fill(a, 0);\n            for (int i = 0; i < n; i++) a[Integer.parseInt(next())]++;\n            out.println(zero(a) + leq(a));\n        }\n        br.close(); out.close();\n    }\n    static String next() throws IOException{\n        while(!st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n    static int zero(int[] a) {\n        for (int i = 0; i < 101; i++) if (a[i] == 0) return i;\n        return -1;\n    }\n    static int leq(int[] a) {\n        for (int i = 0; i < 101; i++) if (a[i] <= 1) return i;\n        return -1;\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n\n    private static FastReader in = new FastReader();\n\n    public static void main(String[] args) throws Exception {\n        int t = in.nextInt();\n        while (t-- > 0) {\n            solve();\n        }\n    }\n\n    static void solve() {\n        int n = in.nextInt();\n        int[] a = new int[n];\n        int[] ax = new int[101];\n        for(int i=0; i<n; i++){\n            a[i] = in.nextInt();\n            ax[a[i]]++;\n        }\n        int max1 =0 , max2 = 0;\n        for(int i=0; i<101; i++){\n            if(ax[i] == 0){\n                max1 = i;\n                break;\n            }\n            ax[i]--;\n        }\n        for(int i=0; i<n; i++){\n            if(ax[i] == 0){\n                max2 = i;\n                break;\n            }\n        }\n        \n        System.out.println(max1+max2);\n        \n    }\n}\n\nclass Pair {\n    Integer a, b;\n\n    Pair(int a, int b) {\n        this.a = a;\n        this.b = b;\n    }\n}\n\nclass FastReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "def solve(arr,n):\n    i = 0\n    mexA = 0\n    mexB = 0\n    b = False\n    while True:\n        temp = arr.count(i)\n        if temp >= 2:\n            i += 1\n            continue\n        if b == False and temp == 1:\n            mexB = i\n            b = True\n            i += 1\n            continue\n        if b == True and temp == 1:\n            i += 1\n            continue\n        if temp == 0:\n            mexA = i\n            if b == False:\n                mexB = i\n            break\n    return mexA+mexB\n\n\n# for _ in range(1):\n#     n = 6\n#     arr = [0,2,1,5,0,1]\n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    print(solve(arr,n))"
        },
        {
            "language": 3,
            "solution": "# from math import factorial\n\n# ans=  0\n# for x in range(1,5):\n# \tfor y in range(1,5-x+1):\n# \t\tprint(x,y,5-x-y)\n# \t\tprint(pow(12,x)*pow(33,y)*pow(52,5-x-y)*factorial(5)//(factorial(x)*factorial(y)*factorial(5-x-y)))\n# \t\tans += pow(12,x)*pow(33,y)*pow(52,5-x-y)*factorial(5)//(factorial(x)*factorial(y)*factorial(5-x-y))\n# print(ans*52)\n\nfor _ in range(int(input())):\n\tn = int(input())\n\tarr = list(map(int,input().split()))\n\tarr.sort()\n\tdic = {}\n\tfor i in arr:\n\t\ttry:\n\t\t\tdic[i]+=1\n\t\texcept:\n\t\t\tdic[i] = 1\n\ta = []\n\tb = []\n\tfor i in dic:\n\t\ta+=[i]*(1)\n\t\tb+=[i]*(dic[i]-1)\n\ta = list(set(a))\n\tb = list(set(b))\n\t# print(a,b)\n\tans = 0\n\tc = 0\n\tfor i in a:\n\t\tif i==c:\n\t\t\tc+=1\n\t\telse:\n\t\t\tbreak\n\tans += c\n\tc = 0\n\tfor i in b:\n\t\t# print('kk')\n\t\tif i==c:\n\t\t\tc+=1\n\t\telse:\n\t\t\tbreak\n\tprint(ans+c)"
        },
        {
            "language": 3,
            "solution": "T=int(input())\nwhile(T):\n    n=int(input())\n    l=[int(k) for k in input().split()]\n    c=[0]*101\n    b=[]\n    a=[]\n    nl=[]\n    for i in l:\n        c[i]+=1\n    for i in range(101):\n        x=min(2,c[i])\n        for j in range(x):\n            if(j==0):\n                a.append(i)\n            else:\n                b.append(i)\n    \n    bl=len(b)\n    al=len(a)\n    i=0\n    while(i<al):\n        if(a[i]!=i):\n            nl.append(i)\n            break\n        i+=1\n    if(i==al):\n        nl.append(i)\n    i=0\n    while(i<bl):\n        if(b[i]!=i):\n            nl.append(i)\n            break\n        i+=1\n    if(i==bl):\n        nl.append(i)\n    print(sum(nl))\n    \n            \n    \n    T-=1"
        },
        {
            "language": 3,
            "solution": "def getMex(arr):\n    arr.sort()\n    c=0\n    l1,l2 = [-1],[-1]\n    for i in arr:\n        if(i==l1[-1]):\n            l2.append(i)\n        else:\n            l1.append(i)\n\n    i=0\n    while(i in l1):\n        i+=1\n    c+=i\n    i=0\n    while(i in l2):\n        i+=1\n    c+=i\n    return c\n\nif __name__ == \"__main__\":\n    t=int(input())\n    for i in range(t):\n        n=int(input())\n        arr = list(map(int, input().split()))\n        print(getMex(arr))"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nT = int(input())\nfor _ in range(T):\n    n = input()\n    aa = map(int, input().split())\n    cc = Counter(aa)\n    ans = 0\n    x = -1\n    y = -1\n    for a in range(101):\n        cnt = cc[a]\n        if cnt == 0:\n            x = a\n            if y == -1:\n                y = a\n            break\n        if cnt == 1:\n            if y == -1:\n                y = a\n\n    print(max(0, x) + max(0, y))\n"
        },
        {
            "language": 3,
            "solution": "cases = int(input())\n\nfor i in range(cases):\n    answer = 0\n    length = int(input())\n    intlist = list(map(int, input().split()))\n    intlist.sort()\n    for a in range(length + 1):\n        if a in intlist:\n            intlist.remove(a)\n        else:\n            answer += a\n            break\n    for j in range(length + 1):\n        if j in intlist:\n            intlist.remove(j)\n        else:\n            answer += j\n            break\n    print(str(answer))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int,input().split())))\n    b = []\n    c = []\n    prev = float('inf')\n    for i in range(n):\n        if a[i] == prev:\n            c.append(a[i])\n        else:\n            b.append(a[i])\n            prev = a[i]\n    x = 0\n    for i in range(len(b)):\n        if b[i] > x:\n            break\n        else:\n            if b[i] == x:\n                x += 1\n    y = 0\n    for i in range(len(c)):\n        if c[i] > y:\n            break\n        else:\n            if c[i] == y:\n                y += 1\n    print(x+y)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> A(n);\n  for (int i = 0; i < n; i++) {\n    cin >> A[i];\n  }\n  int count[n + 1];\n  memset(count, 0, sizeof(count));\n  for (int i = 0; i < n; i++) {\n    if (A[i] <= n) {\n      count[A[i]]++;\n    }\n  }\n  int a = n + 1, b = n + 1, flag = 0;\n  for (int i = 0; i <= n; i++) {\n    if (count[i] == 0) {\n      if (flag == 1) {\n        b = i;\n        break;\n      } else {\n        a = i;\n        b = i;\n        break;\n      }\n    } else if (count[i] == 1) {\n      if (flag == 0) {\n        a = i;\n        flag = 1;\n      }\n    }\n  }\n  cout << a + b << endl;\n  return;\n}\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class Ano {\n     public static void main(String[] args) {\n         FastScanner fs=new FastScanner();\n         int T=fs.nextInt();\n        // int T = 1;\n         for (int tt=0; tt<T; tt++) {\n            int n = fs.nextInt();\n            int[] count = new int[102];\n            Arrays.fill(count, 0);\n            int []values = fs.readArray(n); \n            for(int i=0;i<n;i++){\n                count[values[i]]++;\n            }      \n            int mex1 = -1,mex2 =-1 ;\n            int i;\n            for(i=0;i<102;i++){\n                if(count[i] <= 0){\n                    mex1 = i;\n                    count[i]--;\n                    break;\n                }\n                count[i]--;\n            }\n\n            for(i=0;i<102;i++){\n                if(count[i] <= 0){\n                    mex2 = i;\n                    break;\n                }\n            }\n            System.out.println(mex1+mex2);\n        }\n        \n}\n \n static class FastScanner {\n     BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n     StringTokenizer st=new StringTokenizer(\"\");\n     String next() {\n     while (!st.hasMoreTokens())\n         try {\n             st=new StringTokenizer(br.readLine());\n         } catch (IOException e) {\n             e.printStackTrace();\n         }\n         return st.nextToken();\n     }\n     \n     int nextInt() {\n         return Integer.parseInt(next());\n     }\n     int[] readArray(int n) {\n         int[] a=new int[n];\n         for (int i=0; i<n; i++) a[i]=nextInt();\n         return a;\n     }\n     long nextLong() {\n         return Long.parseLong(next());\n     }\n }\n\n \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.HashSet;\n\npublic class SetMex {\n    public static void main(String[] args) {\n        try {\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n            long t = Long.parseLong(br.readLine());\n            StringBuilder sb = new StringBuilder();\n            while (t-- > 0) {\n                int n = Integer.parseInt(br.readLine());\n                String[] s = br.readLine().split(\" \");\n                HashSet<Integer> a = new HashSet<>();\n                HashSet<Integer> b = new HashSet<>();\n                for (String str : s) {\n                    if (!a.contains(Integer.parseInt(str))) {\n                        a.add(Integer.parseInt(str));\n                    } else {\n                        b.add(Integer.parseInt(str));\n                    }\n                }\n                int i = 0;\n                int j = 0;\n                while (!a.isEmpty() && a.contains(i)) {\n                    i++;\n                }\n                while (!b.isEmpty() && b.contains(j)) {\n                    j++;\n                }\n                sb.append(i + j).append(\"\\n\");\n            }\n            System.out.println(sb);\n        } catch (Exception e) {\n            return;\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) cin >> a[i];\n    int m = 0, k = 0;\n    sort(a, a + n);\n    for (int i = 0; i < n; i++) {\n      if (a[i] == m)\n        m++;\n      else if (a[i] == k)\n        k++;\n    }\n    cout << m + k << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = sorted([int(s) for s in input().split()])\n    ansa = 0\n    ansb = 0\n    i = 0\n    while i in a:\n        a.remove(i)\n        ansa += 1\n        i += 1\n    i = 0\n    while i in a:\n        a.remove(i)\n        ansb += 1\n        i += 1\n    print(ansa+ansb)"
        },
        {
            "language": 3,
            "solution": "import sys\ndef input():\n    return sys.stdin.readline().rstrip()\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    values = [0] * 101\n    for v in arr:\n        values[v] +=1\n    target = 1\n    ans = 0\n    for index in range(0,101):\n        if values[index] == target:\n            ans += index\n            target -=1\n            if target < 0:\n                break\n        if values[index] == target - 1:\n            ans =  2 * index\n            target = -1\n            break\n    \n    if target == -1:\n        print(ans)\n    elif target == 0:\n        print(ans+101)\n    else:\n        print(2*101)    \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1000000000;\nint64_t sumofdigits(int64_t n) {\n  int64_t ans = 0;\n  while (n) {\n    ans = ans + n % 10;\n    n = n / 10;\n  }\n  return ans;\n}\nint main() {\n  int64_t t;\n  cin >> t;\n  while (t--) {\n    int64_t n;\n    cin >> n;\n    int64_t a[n];\n    vector<int64_t> c(101, 0);\n    for (int64_t i = 0; i < n; i++) {\n      cin >> a[i];\n      c[a[i]]++;\n    }\n    int64_t ans = 0;\n    int64_t flag = 0;\n    for (int64_t i = 0; i <= 100; i++) {\n      if (c[i] < 2 && flag == 0) {\n        ans = ans + i;\n        flag = 1;\n        if (c[i] == 0) {\n          ans = ans + i;\n          break;\n        }\n      }\n      if (flag == 1 && c[i] == 0) {\n        ans = ans + i;\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in \" \"*int(input()):\n  n = int(input())\n  lst = sorted(list(map(int,input().split())))\n  a,b = 0,0\n  for i in lst:\n    if a==i:\n      a+=1\n    elif b==i:\n      b+=1\n  print(a+b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 1e5 + 20;\nint n;\nint cnt[200];\nvoid solve() {\n  int ans = 0;\n  int p = 0;\n  while (cnt[p] >= 2) {\n    p++;\n  }\n  ans += p;\n  while (cnt[p] >= 1) {\n    p++;\n  }\n  ans += p;\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  int test;\n  scanf(\"%d\", &test);\n  while (test--) {\n    int x;\n    memset(cnt, 0, sizeof(cnt));\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &x);\n      cnt[x]++;\n    }\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long arr[101], N, T;\nvoid Input() {\n  cin >> N;\n  memset(arr, 0, sizeof arr);\n  for (int i = 0; i < N; i++) {\n    long long tmp;\n    cin >> tmp;\n    arr[tmp]++;\n  }\n}\nvoid Solve() {\n  int one = 0, two = 0;\n  for (int i = 0; i <= 100; i++) {\n    if (arr[i] >= 2 && one == two) {\n      one++;\n      two++;\n    } else if (arr[i] >= 1) {\n      one++;\n    } else {\n      break;\n    }\n  }\n  cout << one + two << '\\n';\n}\nint main() {\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    Input();\n    Solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int (input())\n    s=list(map(int,input().split()))\n    s.sort()\n    a,b=0,0\n    for i in s:\n        if a==i:\n            a+=1\n        elif b==i:\n            b+=1\n    print(a+b)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport static java.lang.System.out;\nimport java.util.*;\nimport java.util.Map.Entry;\nimport javax.crypto.AEADBadTagException;\n\n\n\npublic class Main \n{\n    public static void main(String[] args) throws Exception\n    {\n        \n        long start = System.currentTimeMillis();\n        \n        /*\n        FileWriter writer = new FileWriter(\"input.txt\");\n        \n        for(int i=0;i<1000;++i)\n        {\n            int val = Mother_Class.getRandomInteger(1, 100000);\n            writer.write(val+\"\\n\");\n            for(int j=0;j<val;++j)\n            {\n                writer.write(j+\" \");\n            }\n            writer.write(\"\\n\");\n        }\n        \n        writer.close();\n        */\n        \n        \n        Reader read = new Reader();\n        \n        int test, n;\n        test = read.inte();\n        \n        while(test-- > 0)\n        {\n            n = read.inte();\n            int[] count = new int[101];\n            for(int i=0;i<n;++i) { int x = read.inte(); ++count[x]; }\n            \n            int[] A = new int[101];\n            int[] B = new int[101];\n            \n            for(int i=0;i<101;++i)\n            {\n                if(count[i]>0)\n                {\n                    ++A[i];\n                    --count[i];\n                }\n                if(count[i]>0)\n                {\n                    ++B[i];\n                    --count[i];\n                }\n            }\n            \n            int sum = 0;\n            \n            for(int i=0;i<101;++i)\n            {\n                if(A[i]==0) { sum += i; break; }\n            }\n            for(int i=0;i<101;++i)\n            {\n                if(B[i]==0) { sum += i; break; }\n            }\n            out.println(sum);\n        }\n        \n        long end = System.currentTimeMillis();\n        \n        //out.println(\"Execution Time: \"+(end-start)+\"ms\");\n        \n    }\n    \n    \n}\n\nclass Pair\n{\n    public int first;\n    public int second;\n\n    public Pair(int first, int second)\n    {\n        this.first = first;\n        this.second = second;\n    }\n\n    @Override\n    public String toString()\n    {\n        return \"{\"+first+\", \"+second+\"}\";\n    }\n\n    \n}\n\nclass CustomCompare implements Comparator<Pair>\n{\n\n    @Override\n    public int compare(Pair o1, Pair o2) \n    {\n        return o1.first - o2.first;\n    }\n    \n}\n\nclass Triplet\n{\n    public int first;\n    public int second;\n    public int third;\n\n    public Triplet(int first, int second, int third)\n    {\n        this.first = first;\n        this.second = second;\n        this.third = third;\n    }\n\n    @Override\n    public String toString()\n    {\n        return \"{\"+first+\", \"+second+\", \"+third+\"}\";\n    }\n}\n\n\n\nclass Reader \n{\n    final private int BUFFER_SIZE = 1 << 16;\n    private DataInputStream din;\n    private byte[] buffer;\n    private int bufferPointer, bytesRead;\n\n    public Reader()\n    {\n        din = new DataInputStream(System.in);\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public Reader(String file_name) throws IOException\n    {\n        din = new DataInputStream(\n            new FileInputStream(file_name));\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public String stren() throws IOException\n    {\n        byte[] buf = new byte[500000]; // line length\n        int cnt = 0, c;\n        while ((c = read()) != -1) {\n            if (c == '\\n') {\n                if (cnt != 0) {\n                    break;\n                }\n                else {\n                    continue;\n                }\n            }\n            buf[cnt++] = (byte)c;\n        }\n        return new String(buf, 0, cnt);\n    }\n\n    public String strsp() throws IOException\n    {\n        byte[] buf = new byte[500000]; // line length\n        int cnt = 0, c;\n        while ((c = read()) != -1) {\n            if (c == ' ' || c == '\\n') {\n                if (cnt != 0) {\n                    break;\n                }\n                else {\n                    continue;\n                }\n            }\n            buf[cnt++] = (byte)c;\n        }\n        return new String(buf, 0, cnt);\n    }\n\n    public int inte() throws IOException\n    {\n        int ret = 0;\n        byte c = read();\n        boolean eof = false;\n        while (c <= 47 || c >= 58) \n        {\n            if(c==45) { break; }\n            if(c==-1) { eof = true; break; }\n            c = read();\n        }\n        if(eof) { return Integer.MIN_VALUE; }\n        \n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long lon() throws IOException\n    {\n        long ret = 0;\n        byte c = read();\n        boolean eof = false;\n        while (c <= 47 || c >= 58) \n        {\n            if(c==45) { break; }\n            if(c==-1) { eof = true; break; }\n            c = read();\n        }\n        if(eof) { return Long.MIN_VALUE; }\n        \n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public double dbl() throws IOException\n    {\n        double ret = 0, div = 1;\n        byte c = read();\n        boolean eof = false;\n        while (c <= 47 || c >= 58) \n        {\n            if(c==45) { break; }\n            if(c==-1) { eof = true; break; }\n            c = read();\n        }\n        if(eof) { return Double.NEGATIVE_INFINITY; }\n        \n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n\n        if (c == '.') {\n            while ((c = read()) >= '0' && c <= '9') {\n                ret += (c - '0') / (div *= 10);\n            }\n        }\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws IOException\n    {\n        bytesRead = din.read(buffer, bufferPointer = 0,\n                             BUFFER_SIZE);\n        if (bytesRead == -1)\n            buffer[0] = -1;\n    }\n\n    private byte read() throws IOException\n    {\n        if (bufferPointer == bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n\n    public void close() throws IOException\n    {\n        if (din == null)\n            return;\n        din.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile(t>0):\n    n=int(input())\n    l=list(map(int,input().split()))\n    d={}\n    for i in range(n):\n        if l[i] in d:\n            d[l[i]]+=1\n        else:\n            d[l[i]]=1\n    k=max(l)\n    ans=0\n    for i in range(k+2):\n        if i not in d:\n            ans+=i\n            break\n        else:\n            d[i]-=1\n    for i in range(k+2):\n        if i not in d:\n            ans+=i\n            break\n        elif d[i]==0:\n            ans+=i\n            break\n    print(ans)\n    t-=1\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    k = [int(j) for j in input().split()]\n    dic = { i:0 for i in range(0,101)}\n    l = Counter(k)\n    for i in l.keys():\n        dic[i]=l[i]\n    for i in range(0,101):\n        if dic[i]==0:\n            a = i\n            break\n    for i in range(0,101):\n        if dic[i]<=1:\n            b = i\n            break\n    print(a+b)\n    "
        },
        {
            "language": 3,
            "solution": "def mex(l):\n    if len(l)==1:\n        if l[0]>0:\n            return 0\n        else:\n            return 1\n    c=[0]*(max(l)+1)\n    for i in l:\n        c[i]+=1\n    if c[0]==0:\n        return 0\n    else:\n        if c[0]==1:\n            flag=0\n            for i in range(len(c)):\n                if c[i]==0:\n                    return i\n            if flag==0:\n                return max(l)+1\n        else:\n            count=0\n            res = 0\n            for i in c:\n                if i<2:\n                    break\n                elif count==len(c)-1 and i>=2:\n                    return 2*(max(l)+1)\n                count+=1\n            count = 0\n            for i in range(len(c)):\n                if c[i]==0 and count==0:\n                    return 2*i\n                elif c[i]==1 and count==0:\n                    res=res+i\n                    count+=1\n                elif c[i]==0 and count==1:\n                    res=res+i\n                    count+=1\n            if count==1:\n                return res+max(l)+1\n            return res\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(mex(l))\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "def mex(A):\n    if A == []:\n        return(0)\n    for i in range(max(A)+2):\n        if i not in A:\n            return(i)\n\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    S = list(map(int, input().split()))\n\n    if 0 not in S:\n        print(0)\n        continue\n\n    if S.count(0) == 1:\n        print(mex(S))\n        continue\n    \n    adict = {}\n    for i in S:\n        if i in adict:\n            adict[i] += 1\n        else:\n            adict[i] = 1\n\n    A = []\n    B = []\n\n    values = sorted(list(adict.keys()))\n\n    for i in values:\n        if adict[i] > 1:\n            A = A + [i]*(adict[i]//2)\n            B = B + [i]*(adict[i] - (adict[i]//2))\n\n        else:\n            #print(A)\n            #print(i)\n            if mex(A + [i]) > mex(A):\n                A.append(i)\n            else:\n                B.append(i)\n\n    print(mex(A) + mex(B))\n"
        },
        {
            "language": 3,
            "solution": "'''Author- Akshit Monga'''\nfrom sys import stdin,stdout\nimport math\n# input=stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    arr=[int(x) for x in input().split()]\n    dict={}\n    for i in range(0,102):\n        dict[i]=0\n    for i in arr:\n        dict[i]+=1\n    ans=0\n    b=0\n    for i in range(0,102):\n        if b:\n            if dict[i]==0:\n                ans+=i\n                break\n            continue\n        if dict[i]==0:\n            ans+=2*(i)\n            break\n        elif dict[i]==1:\n            ans+=(i)\n            b=1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "import collections\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    \n    a=list(map(int,input().split()))\n    minm=min(a)\n    if minm!=0 :\n        print(0)\n        continue\n    dic={}\n    for i in a:\n        if i in dic:\n            dic[i]+=1\n        else:\n            dic[i]=1\n    dic = collections.OrderedDict(sorted(dic.items()))\n    k=0\n    for j in dic:\n        if j!=k:\n            break\n        else:\n            dic[j]=dic[j]-1\n            k+=1\n    ans1=k\n    #print(ans1,\"ans1\")\n    k2=0\n    if dic[0]>0:\n        for j in dic:\n            if j!=k2 or dic[j]<=0:\n                break\n            else:\n                dic[j]=dic[j]-1\n                k2+=1\n    ans2=k2\n    print(ans1+ans2)\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "\nfor j in range(int(input())):\n    n = int(input())\n    a = [int(b) for b in input().split()]\n    x = set()\n    y = set()\n    for i in range(n):\n        if a[i] in x:\n            y.add(a[i])\n        else:\n            x.add(a[i])\n    x = sorted(x)\n    y = sorted(y)\n    ans = 0\n    k = 0\n    for i in x:\n        if k != i:\n            break\n        k += 1\n    ans += k\n    k = 0\n    for i in y:\n        if k != i:\n            break\n        k += 1\n    ans += k\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from itertools import groupby\n\ndef main(inp):\n    a, b = [], []\n    while True:     \n        if (len(inp) == 0): break\n        if (len(inp) == 1): a.append(inp[0]); break\n        if (inp[0] != inp[1]): a.extend(inp); break\n        else: a.append(inp[0]), b.append(inp[1]); inp = inp[2:]\n    a.extend([102, 103]); b.extend([102, 103])\n    return a, b\n\ndef mex(a):\n    if (a[0] != 0): return 0\n    for i in range(len(a)):\n        if (a[i+1] > a[i]+1):\n            mex = a[i]+1\n            return mex\n            \ntestcases = int(input()); i=0\nfor inp in range(testcases*2):\n    inp = input().split(' ')\n    i+=1\n    if (i % 2) == 0:\n        inp = [int(i) for i in inp]\n        inp.sort()\n        inp_s = [\n            item\n            for item, group in groupby(inp)\n            for i in range(min(2, sum(1 for _ in group)))\n        ]\n        a, b = main(inp_s)\n        a, b = mex(a), mex(b)\n        print(str(a+b))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    mex1=0\n    for i in range(102):\n        for j in range(n):\n            if arr[j]==mex1:\n                mex1+=1\n                arr[j]=-1\n                break\n                \n    mex2=0        \n        \n    for i in range(102):\n        for j in range(n):\n            if arr[j]==mex2:\n                  mex2+=1\n                  arr[j]=-1\n                  break\n                  \n            \n    print(str(mex1+mex2))  "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t, n, i;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    int arr[n];\n    for (i = 0; i < n; i++) cin >> arr[i];\n    sort(arr, arr + n);\n    int A = 0;\n    int B = 0;\n    for (int i = 0; i < n; i++) {\n      if (arr[i] == A) {\n        A++;\n      } else if (B == arr[i]) {\n        B++;\n      }\n    }\n    cout << A + B << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# Started contest 10 min late\nt = int(input())\nfrom collections import Counter\n\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    c = Counter(a)\n\n    lo = 0\n    hi = 0\n    \n    for i in range(102):\n        if c[i] < 2:\n            break\n        else:\n            lo = i + 1\n\n    \n    for i in range(102):\n        if c[i] == 0:\n            break\n        else:\n            hi = i + 1\n\n    print(lo + hi)\n"
        },
        {
            "language": 3,
            "solution": "import sys     \nimport math as mt\ninput=sys.stdin.readline\nt=int(input())\n#t=1  \nfor _ in range(t):\n    n=int(input())\n    #n,m=map(int,input().split())\n    #x,k,y=map(int,input().split())\n    l=list(map(int,input().split()))\n    #l2=list(map(int,input().split()))\n    d={}\n    for i in range(n):    \n        d[l[i]]=d.get(l[i],0)+1\n    ans=0\n    for i in range(0,102):\n        if d.get(i,0)==0:\n            ans=i\n            break\n        else:\n            d[i]-=1\n            \n    for i in range(0,102):\n        if d.get(i,0)==0:\n            ans+=i\n            break\n        else:\n            d[i]-=1\n    print(ans)        \n        \n            "
        },
        {
            "language": 3,
            "solution": "# Anuneet Anand\n\nT = int(input())\n\nwhile T:\n\tn = int(input())\n\tA = list(map(int,input().split()))\n\tD = {}\n\tfor i in range(max(A)+1):\n\t\tD[i]=0\n\n\tfor i in A:\n\t\tD[i]+=1\n\n\ta = max(A)+1\n\tfor i in range(max(A)+1):\n\t\tif D[i]==0:\n\t\t\ta = i\n\t\t\tbreak\n\t\telse:\n\t\t\tD[i]-=1\n\n\tb = max(A)+1\n\tfor i in range(max(A)+1):\n\t\tif D[i]==0:\n\t\t\tb = i\n\t\t\tbreak\n\t\telse:\n\t\t\tD[i]-=1\n\n\tprint(a+b)\n\n\tT = T - 1\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mxn = 100000;\nvoid solve() {\n  int n;\n  cin >> n;\n  int a[101];\n  memset(a, 0, sizeof(a));\n  for (int i = 0; i < n; i++) {\n    int ele;\n    cin >> ele;\n    a[ele]++;\n  }\n  int cnt = 0, sum = 0;\n  for (int i = 0; i <= 101; i++) {\n    if (a[i] >= 2)\n      continue;\n    else if (a[i] == 1) {\n      if (cnt == 0) {\n        sum += i;\n        cnt = 1;\n      }\n    } else {\n      if (cnt == 0)\n        sum += 2 * i;\n      else\n        sum += i;\n      break;\n    }\n  }\n  cout << sum << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import *\nfrom collections import *\nfrom itertools import *\nfrom functools import *\nfrom bisect import *\nfrom heapq import *\nfrom operator import *\nfrom sys import *\nsetrecursionlimit(100000000)\n\n\nfor _ in range(int(input())):\n\tn=int(input())\n\tl=list(map(int,input().split()))\n\tc=Counter(l)\n\tans=0\n\tf=0\n\tc1,c2=0,0\n\tfor x in range(101):\n\t\tif c[x]==0:\n\t\t\tbreak\n\t\t\t# if f==1:\n\t\t\t# \tans+=x\n\t\t\t# \tbreak\n\t\t\t# if f==0:\n\t\t\t# \tans+=2*x\n\t\t\t# \tbreak\n\t\t\t# if f==2:\n\t\t\t# \tbreak\n\t\telif c[x]==1:\n\t\t\tc1+=1\n\t\t\tf=1\n\t\t\t# f+=1\n\t\t\t# ans+=x\n\t\t\t# if f==2:\n\t\t\t# \tbreak\n\t\telse:\n\t\t\tc1+=1\n\t\t\tif not f:\n\t\t\t\tc2+=1\n\tprint(c1+c2)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    mxa=mxb=0\n    for i in sorted(map(int,input().split())):\n        if i==mxa:mxa+=1\n        elif i==mxb:mxb+=1\n    print(mxa+mxb)\n"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Main\n{\n    \n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\t// your code goes here\n\t\tScanner sc=new Scanner(System.in);\n\t\tint T=sc.nextInt();\n\t\twhile(T-->0) {\n\t\t    int n=sc.nextInt();\n\t\t    int a[]=new int[n];\n\t\t    int max=-1;\n\t\t    for(int i=0;i<n;i++) {\n\t\t    a[i]=sc.nextInt();\n\t\t    if(max<a[i])\n\t\t    max=a[i];\n\t\t    }\n\t\t   int d[]=new int[max+2];\n\t\t   for(int i=0;i<n;i++) {\n\t\t       d[a[i]]++;\n\t\t   }\n\t\t   int sum=0;\n\t\t   for(int i=0;i<n;i++) {\n\t\t       if(d[i]<2) {\n\t\t       sum+=i;\n\t\t       break;\n\t\t       }\n\t\t   }\n\t\t   for(int i=0;i<=max+1;i++) {\n\t\t       if(d[i]==0) {\n\t\t       sum+=i;\n\t\t       break;\n\t\t       }\n\t\t   }\n\t\t   System.out.println(sum);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    a=0\n    b=0\n    for i in l:\n        if a==i:\n            a+=1\n        elif b==i:\n            b+=1\n    print(a+b)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    arr=[int(X) for X in input().split()]\n    temp=[0 for i in range(101)]\n    for i in arr:\n        temp[i]+=1\n    first=-1\n    second=-1\n    for i in range(101):\n        if temp[i]==0:\n            first=i\n            break\n    if first==-1:\n        first=101\n    for i in range(101):\n        if temp[i]<=1:\n            second=i\n            break\n    print(first+second)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class Subset_mex {\n    public static boolean testint (int[] set, int test,int times) {\n        int freq=0;\n        for (int i=0; i<set.length; i++) {\n            if (set[i]==test) freq++;\n            if (freq>=times) return true;\n        }\n        return false;\n    }\n    public static Scanner scan = new Scanner(System.in);\n    public static void main(String[] args) {\n        int testcases = scan.nextInt();\n        for (int i=0; i<testcases; i++) {\n            int size = scan.nextInt();\n            int[] set = new int[size];\n            for (int j=0; j<size; j++) {\n                set[j]=scan.nextInt();\n            }\n            int twice=0;\n            int once=0;\n            for (int j=0; j<size; j++) {\n                if (testint(set,j,1)) {\n                    once++;\n                    if (twice==j&&testint(set, j, 2)) twice++;\n                }\n                else break;\n            }\n            System.out.println(twice+once);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    l2 = [0]*120\n    for num in l:\n        l2[num]+=1\n    ans1 = 0\n    ans2 = 0\n    for i in range(0,105):\n        if l2[i] == 0:\n            ans1 = i\n            break\n        else:\n            l2[i]-=1\n    for i in range(0,105):\n        if l2[i]==0:\n            ans2 = i\n            break\n        else:\n            l2[i]-=1;\n    print(ans1 + ans2)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nlong long mcm(long long a, long long b) { return (a * b) / gcd(a, b); }\nbool comp(long long a, long long b) { return a > b; }\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  vector<bool> visitado(110, 0);\n  vector<int> comba, comb;\n  for (int i = 0; i < n; i++) {\n    if (!visitado[a[i]]) {\n      visitado[a[i]] = true;\n      comba.push_back(a[i]);\n    } else\n      comb.push_back(a[i]);\n  }\n  sort(comba.begin(), comba.end());\n  bool ok = false;\n  if (comb.size() == 0) {\n    if (comba[0] != 0) {\n      cout << \"0\\n\";\n      return;\n    }\n    for (int i = 0; i < comba.size() - 1; i++) {\n      if (comba[i] != comba[i + 1] - 1 && comba[i] != comba[i + 1]) {\n        cout << comba[i] + 1 << \"\\n\";\n        return;\n      }\n    }\n    cout << comba[comba.size() - 1] + 1 << \"\\n\";\n  } else {\n    sort(comb.begin(), comb.end());\n    int sum = 0;\n    if (comba[0] == 0) {\n      for (int i = 0; i < comba.size() - 1; i++) {\n        if (comba[i] != comba[i + 1] - 1 && comba[i] != comba[i + 1]) {\n          sum += comba[i] + 1;\n          ok = true;\n          break;\n        }\n      }\n      if (!ok) sum += comba[comba.size() - 1] + 1;\n    }\n    ok = false;\n    if (comb[0] == 0) {\n      for (int i = 0; i < comb.size() - 1; i++) {\n        if (comb[i] != comb[i + 1] - 1 && comb[i] != comb[i + 1]) {\n          sum += comb[i] + 1;\n          ok = true;\n          break;\n        }\n      }\n      if (!ok) sum += comb[comb.size() - 1] + 1;\n    }\n    cout << sum << \"\\n\";\n  }\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t = 1;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#Author:harshal_509\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    m={}\n    for i in range(101):\n        m[i]=0\n    for i in range(n):\n        m[l[i]]+=1\n    for i in range(101):\n        if(m[i]==0):\n            ans=i\n            break\n        m[i]-=1\n    for i in range(n):\n        if(m[i]==0):\n            ans+=i\n            break\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint oc[101];\nint main() {\n  int t, n;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    int a[n], mexa = 0, mexb = 0, fa = 1, fb = 1;\n    for (int i = 0; i < n; i++) cin >> a[i];\n    for (int i = 0; i < n; i++) oc[a[i]]++;\n    for (int i = 0; i <= 100; i++) {\n      if (oc[i] >= 2) {\n        if (fa) mexa++;\n        if (fb) mexb++;\n      }\n      if (oc[i] == 1) {\n        if (fa) mexa++;\n        fb = 0;\n      }\n      if (oc[i] == 0) {\n        fa = 0, fb = 0;\n      }\n    }\n    cout << mexa + mexb << '\\n';\n    for (int i = 0; i <= 100; i++) oc[i] = 0;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; ++t) {\n    int N;\n    cin >> N;\n    vector<int> arr(N);\n    vector<bool> visited(N, false);\n    for (int i = 0; i < N; ++i) cin >> arr[i];\n    sort(arr.begin(), arr.end());\n    int mex1 = 0;\n    for (int i = 0; i < arr.size(); ++i) {\n      if (arr[i] == mex1) {\n        visited[i] = true;\n        ++mex1;\n      } else if (arr[i] > mex1)\n        break;\n    }\n    int mex2 = 0;\n    for (int i = 0; i < arr.size(); ++i) {\n      if (visited[i]) continue;\n      if (arr[i] == mex2)\n        ++mex2;\n      else if (arr[i] > mex2)\n        break;\n    }\n    cout << mex1 + mex2 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nconst long long inf = 2e18;\nconst int sz = 256;\nconst int max_k = 20;\nvoid solve() {\n  int n;\n  cin >> n;\n  multiset<int> a;\n  for (int i = 0; i < n; ++i) {\n    int x;\n    cin >> x;\n    a.insert(x);\n  }\n  int ans = 0;\n  for (int i = 0; i <= 101; ++i) {\n    if (a.find(i) != a.end()) {\n      a.erase(a.find(i));\n    } else {\n      ans += i;\n      break;\n    }\n  }\n  for (int i = 0; i <= 101; ++i) {\n    if (a.find(i) != a.end()) {\n      a.erase(a.find(i));\n    } else {\n      ans += i;\n      break;\n    }\n  }\n  cout << ans << \"\\n\";\n}\nvoid input() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t = 0;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\nint main() {\n  input();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter,defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    d = Counter(a)\n    mex = 0\n    b = set(a)\n    for i in range(101):\n        if i not in b:\n            mex+=i\n            break\n    for i in range(101):\n        if d[i]<2:\n            mex+=i\n            break\n    print(mex)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    map<int, int> m;\n    vector<int> t1, t2;\n    int arr[n];\n    for (int a = 0; a < n; a++) {\n      cin >> arr[a];\n      m[arr[a]]++;\n    }\n    sort(arr, arr + n);\n    for (auto it = m.begin(); it != m.end(); it++) {\n      if (it->second >= 2) {\n        t1.push_back(it->first);\n        t2.push_back(it->first);\n      } else\n        t1.push_back(it->first);\n    }\n    int p = 0, p2 = 0;\n    if (t1.size() > 0) {\n      int y = 0;\n      for (int a = 0; a < t1.size(); a++, p++) {\n        if (t1[a] != p) {\n          y++;\n          break;\n        }\n      }\n    }\n    if (t2.size() > 0) {\n      int y = 0;\n      for (int a = 0; a < t2.size(); a++, p2++) {\n        if (t2[a] != p2) {\n          y++;\n          break;\n        }\n      }\n    }\n    cout << p + p2 << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int,input().split()))\n    a=[]\n    b=[]\n    temp=[]\n    for i in li:\n        if i not in a:\n            a.append(i)\n        else:\n            b.append(i)\n    a.sort()\n    if b!=temp:\n        b.sort()\n    x=-1\n    y=-1\n    A = [i for i in range(len(a))]\n    B = [i for i in range(len(b))]\n    for i in range(len(a)):\n        if a[i]!=A[i]:\n            x=A[i]\n            break\n    a = list(set(a))\n    a.sort()\n    if x==-1:\n        if a[0]==0:\n            x=len(a)\n        else:\n            x=0\n    b=list(set(b))\n    b.sort()\n    for i in range(len(b)):\n        if b[i]!=B[i]:\n            y=B[i] \n            break\n    if y==-1:\n        if len(b)!=0:\n            if b[0]==0:\n                y=len(b)\n            else:\n                y=0\n        else:\n            y=0\n    # print(a,A)\n    # print(b,B)\n    print(x+y)\n"
        },
        {
            "language": 3,
            "solution": "tests=int(input())\n\nfor testnum in range(tests):\n    n=int(input())\n    counter = [0] * 101\n\n    ret=-1\n\n    numbers=map(int, input().split())\n    numbers=list(numbers)\n\n    for i in range(n):\n        counter[numbers[i]]+=1\n\n    ones=-1\n    for i in range(101):\n        if counter[i]==0:\n            ones=i\n            break\n\n    twos=-1\n    for i in range(101):\n        if counter[i]<2:\n            twos=i\n            break\n\n    if ones<0:\n        ones=100\n        if twos<0:\n            ret=200\n        else:\n            ret=ones+twos\n    else:\n        if twos<0:\n            ret=100+ones\n        else:\n            ret=ones+twos\n\n    print(ret)\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfor t in range(T):\n    n = int(input())\n    xs = [int(x) for x in input().split()]\n    for i in range(102):\n        if xs.count(i) < 2:\n            a = i\n            for j in range(i, 102):\n                if xs.count(j) < 1:\n                    b = j\n                    break\n            break\n    print(j+i)\n            "
        },
        {
            "language": 3,
            "solution": "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())      \n        s = list(map(int, input().split()))\n        d = [0]*101\n        for i in s:\n            d[i] += 1\n        f = [0,0]\n        k = 2\n        i = 0\n        while k > 0:\n            if d[i] == 0:\n                if k == 2:\n                    f[0], f[1] = i, i\n                elif k == 1:\n                    f[0] = i\n                k -= 2\n            elif d[i] == k - 1:\n                f[k-1] = i\n                k -= 1\n            i += 1\n        print(f[0] + f[1])\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\npublic class Problem_13_9 {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint a[] = new int[n];\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\ta[i] = sc.nextInt();\n\t\t\t}\n\t\t\tint count[] = new int[101];\n\t\t\tArrays.fill(count, 0);\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tcount[a[i]]++;\n\t\t\t}\n\t\t\tboolean end = false;\n\t\t\tint ma = -1;\n\t\t\tint mb = -1;\n\t\t\tfor(int i=0;i<101;i++) {\n\t\t\t\tif(count[i] == 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(count[i] == 1) {\n\t\t\t\t\tma = i;\n\t\t\t\t\tend = true;\n\t\t\t\t}\n\t\t\t\telse if(!end){\n\t\t\t\t\tma = i;\n\t\t\t\t\tmb = i;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tma = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tma++;\n\t\t\tmb++;\n\t\t\tSystem.out.println(ma+mb);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\nt = int(stdin.readline())\n#t=1\nfor _ in xrange(t):\n    #a,b= map(int,stdin.readline().split())\n    n = int(stdin.readline())\n    a = map(int,stdin.readline().split())\n    b = [0] * 105\n    for i in a:\n        b[i]+=1\n    fir = 0\n    sec = 0\n    for i in xrange(101):\n        if b[i] < 2:\n            break\n    fir = i\n    while i<=100:\n        if b[i] < 1:\n            break\n        i+=1\n    print fir + i"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor test in range(t):\n    n=int(input())\n    arr=[int(x) for x in input().split()]\n    arr.sort()\n    hashmap={}\n    first=[]\n    second=[]\n    for i in arr:\n        if i in hashmap:\n            second.append(i)\n        else:\n            first.append(i)\n            hashmap[i]=0\n    #print(first,second)\n    mina=0\n    minb=0\n    second=list(set(second))\n    for ind,val in enumerate(first):\n        if ind!=val:\n            mina=ind\n            break\n        else:\n            mina+=1\n    for ind,val in enumerate(second):\n        if ind!=val:\n            minb=ind\n            break\n        else:\n            minb+=1\n    print(mina+minb)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "h = int(input())\nl = []\nfor i in range(h):\n    y = int(input())\n    x = list(map(int, input().split()))\n    if y == 1 :\n        if x[0] == 0:\n            l.append(1)\n        else:\n            l.append(0)\n        continue\n    x.sort()\n    sum = 0\n    A = []\n    B=[]\n    n = None\n    s = x[0]\n    if s == 0:\n        for i in range(len(x)):\n            if x[i] == n:\n                if i == len(x)-1:\n                    sum += s\n                else:\n                    continue\n            elif x[i] > s:\n                sum += s\n                break\n            else:\n                A.append(x[i])\n                B.append(x[i])\n                n = x[i]\n                s+=1\n                if i == len(x)-1:\n                    sum += s\n    A = []\n    if len(B) != y:\n        n = None\n        s = x[0]\n        if s == 0:\n            for i in range(len(x)):\n                if x[i] == n:\n                    if i == len(x) - 1:\n                        sum += s\n                    else:\n                        continue\n                elif x[i] > s:\n                    sum += s\n                    break\n                else:\n                    if x[i] in B:\n                        B.remove(x[i])\n                        if i == len(x) - 1:\n                            sum += s\n                    else:\n                        A.append(x[i])\n                        n = x[i]\n                        s += 1\n                        if i == len(x) - 1:\n                            sum += s\n\n    l.append(sum)\nfor i in l:\n    print(i)"
        },
        {
            "language": 3,
            "solution": "\ndef solve():\n    n = int(input())\n    arr = list(map(int,input().split()))\n    a = b = None\n    count = {}    \n    for val in arr:\n        if val in count:\n            count[val]+=1\n        else:\n            count[val]=1\n    # print(count)\n    req = 2\n    for i in range(max(arr)+2):\n        # print(i, end=\"       \")\n        if i not in count:\n            if a is None: \n                a = i\n            if b is None:\n                b = i\n                break\n        \n        elif count[i]>=req:\n            pass\n        else:\n            # Count is 1\n            a = i\n            req = 1\n        # print(a,b)\n    # print(a,b,a+b )\n    print(a+b)\n    \n\nif __name__ == \"__main__\":\n    for _ in range(int(input())):\n        solve()"
        },
        {
            "language": 3,
            "solution": "def solve(arr):\n    ans = 0\n    arr.sort()\n    m = arr[-1]\n    ind = 0\n    mex1 = 0\n    for mex1 in range(m+2):\n        found = False\n        while ind < len(arr):\n            if arr[ind] == mex1:\n                arr[ind] = -1\n                found = True\n                break\n            ind += 1\n        if not found:\n            break\n    ans += mex1\n    arr = set(arr)\n    mex2 = 0\n    for mex2 in range(m+2):\n        if mex2 not in arr:\n            break\n    print(ans + mex2)\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    solve(arr)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(in.readLine());\n        while (t-- > 0) {\n            int n = Integer.parseInt(in.readLine());\n            String[] inp2 = in.readLine().split(\"\\\\s+\");\n            HashMap<Integer,Integer> map = new HashMap<>();\n            ArrayList<Integer> arr = new ArrayList<>();\n            for (String elm : inp2) {\n                int e = Integer.parseInt(elm);\n                arr.add(e);\n                map.put(e,map.getOrDefault(e,0)+1);\n            }\n            int ans2=0, i=0, flag=0;\n            while(i<=n ){\n                if(map.get(i)==null || map.get(i)<2 ) {\n                    ans2 = 2 * i;\n                    break;\n                }\n                i++;\n            }\n\n            while(map.get(i)!=null) {\n                if(flag!=1){\n                    flag =1;\n                }\n                i++;\n            }\n            if(flag ==1)\n                ans2 = (ans2/2) + (i);\n            System.out.println(ans2);\n\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "T=int(input())\nfor _ in range(T):\n    n=int(input())\n    A=list(map(int,input().split()))\n    B=[0]*101\n    for i in range(n):\n        B[A[i]]+=1\n    ans=0\n    #print(B)\n    for i in range(0,101):\n        if(B[i]==0):\n            ans=ans+i\n            #print(i)\n            if(i!=0):\n                for j in range(i-1,-1,-1):\n                    if(B[j]!=0):\n                        B[j]-=1\n            break\n    #print(\"After===\",B)\n    \"\"\"if(ans==n):\n        print(ans)\n        continue\"\"\"\n    for i in range(0,101):\n        if(B[i]==0):\n            ans=ans+i\n            #print(i)\n            break\n    print(ans)\n    \n"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nwhile T:\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    for i in range(0, max(A)+2):\n        c=0\n        for j in A:\n            if j==i:\n                c+=1\n        if c>=2:\n            continue\n        if c==0:\n            ans=2*i\n            break\n        else:\n            ans+=i\n            i+=1\n            while(i<=max(A)):\n                if i not in A:\n                    break\n                i+=1\n            ans+=i\n            break\n    print(ans)\n    T-=1"
        },
        {
            "language": 3,
            "solution": "def mex(array):\n    q = sorted(array)\n    for i in range(len(array)):\n        if i==q[i]:\n            pass\n        else:\n            return i\n    return len(array)\n\nfor _ in range(int(input())):\n    a = int(input())\n    b = list(int(x) for x in input().split())\n    c = list(set(b))\n    for i in c:\n        b.remove(i)\n    b = list(set(b))\n    print(mex(c)+mex(b))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    b = []\n\n    for i in range(101):\n        a.append(-1)\n        b.append(-1)\n        \n    for j in input().split():\n        k = int(j)\n        if a[k] > -1:\n            b[k] += 1\n        else:\n            a[k] += 1\n    \n    print(a.index(-1) + b.index(-1))\n\t \t\t       \t\t  \t \t   \t \t\t  \t\t\t\t"
        },
        {
            "language": 3,
            "solution": "PI = 3.141592653589793238460\nINF =  999999999\nMOD  = 1000000007\n# MOD = 998244353\n\ndef add(x,y):\n    return (x+y)%MOD\n\ndef sub(x,y):\n    return (x-y+MOD)%MOD\n\ndef mul(x,y):\n    return (x*y)%MOD\n\ndef gcd(x,y):\n    if y == 0:\n        return x\n    return gcd(y,x%y)\n\ndef lcm(x,y):\n    return (x*y)//gcd(x,y)\n\ndef power(x,y):\n    res = 1\n    x%=MOD\n    while y!=0:\n        if y&1 :\n            res = mul(res,x)\n        y>>=1\n        x = mul(x,x)\n        \n    return res\n        \ndef mod_inv(n):\n    return power(n,MOD-2)\n\ndef prob(p,q):\n    return mul(p,power(q,MOD-2))    \n  \ndef ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\n\ndef ls():\n    return [i for i in input().split()]\n\ndef mex(l):\n    for i in range(len(l)):\n        if l[i]!=i:\n            return i\n    return len(l)\n\n\n\nfor t in range(ii()):\n    t+=1\n    n = ii()\n    a = li()\n    f = [0 for i in range(101)]\n    for i in a:\n        f[i]+=1\n    x = []\n    y = []\n\n    for i in range(101):\n        if f[i] == 1:\n            x.append(i)\n        elif f[i]>1:\n            x.append(i)\n            y.append(i)\n    x.sort()\n    y.sort()\n\n    print(mex(x) + mex(y))\n\n    \n\n "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = Counter(map(int,input().split()))\n    a,b =-1,-1\n    for i in range(n+1):\n        if l[i]==1:\n            if a==-1:a=i\n        if l[i]==0:\n            if a==-1:a=i\n            if b==-1:b=i\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "#https://codeforces.com/contest/1406/problem/A\ndef mex(l):\n    for i in range(len(l)+1):\n        if (i not in l): return (i)\n    else: return 0\n\n    \nT=int(input())\nfor t in range(T):\n\n    n = int(input())\n    l = list(map(int, input().split()))\n\n    A=[]\n\n    for i in range(len(l)+1):\n        if i in (l): A.append(i); l.remove(i)\n        else: break\n        \n\n    print(len(A)+mex(l))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t:\n    t += -1\n    vis = [0] * 102\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in l: vis[i] -= -1\n    t1 = 0\n    for i in range(102):\n        if vis[i] <= 1:\n            t1 = i\n            break\n    t2 = 0\n    for i in range(t1, 102):\n        if vis[i] == 0:\n            t2 = i\n            break\n    print(t1 + t2)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = [0]*101\n    for a in map(int, input().split()):\n        x[a] += 1\n    mA = 0\n    while x[mA] > 0:\n        mA += 1\n    mB = 0\n    while x[mB] > 1:\n        mB += 1\n    print(mA+mB)"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom sys import stdout\nimport random\nfrom fractions import Fraction\nfrom math import *\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n\ndef finput():\n    return float(input())\n\ndef tinput():\n    return input().split()\n\ndef linput():\n    return list(input())\n \ndef rinput():\n    return map(int, tinput())\n\ndef fiinput():\n    return map(float, tinput())\n \ndef rlinput():\n    return list(map(int, input().split()))\ndef trinput():\n    return tuple(rinput())\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef NOYES(fl):\n    if fl:\n        print(\"NO\")\n    else:\n        print(\"YES\")\ndef YESNO(fl):\n    if fl:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    \ndef main():\n    n = iinput()\n    #k = iinput() \n    #m = iinput() \n    #n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    #q = srlinput()\n    #q = linput()\n    q = srlinput()\n    w = set([i for i in range(105)])\n    res = list(w - set(q))[0]\n    for i in range(res):\n        del q[q.index(i)]\n    print(list(w - set(q))[0] + res)\n    \n        \n    \n    \n        \n    \n\nfor i in range(iinput()):\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[200];\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int cs = 1; cs <= t; cs++) {\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n      int x;\n      scanf(\"%d\", &x);\n      arr[x]++;\n    }\n    int flag = 0;\n    int ans = 0;\n    for (int i = 0; i <= 100 && flag < 2; i++) {\n      if (arr[i] == 0) {\n        if (flag == 0) {\n          ans += (2 * i);\n          flag = 2;\n        } else {\n          ans += i;\n          flag = 2;\n        }\n      } else if (arr[i] == 1) {\n        if (flag == 0) {\n          ans += i;\n          flag = 1;\n        }\n      }\n    }\n    printf(\"%d\\n\", ans);\n    memset(arr, 0, sizeof(arr));\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class SubSetMex {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int tt = sc.nextInt();\n        while(tt!=0) {\n            int n = sc.nextInt();\n            int Count[] = new int[101];\n            boolean flag = false;\n            for(int i=1;i<=n;i++){\n                int cur = sc.nextInt();\n                if(cur != i) flag = true;\n                Count[cur]++;\n            }\n            int mexA = Integer.MAX_VALUE,mexB = Integer.MAX_VALUE;\n            if(flag){\n                for(int i=0;i<=100;i++){\n                    if(Count[i] == 0) mexA = Math.min(mexA,i);\n                    if(Count[i] <= 1) mexB = Math.min(mexB,i);\n                }\n                System.out.println(mexA+mexB);\n            }else{\n                System.out.println(\"0\");\n            }\n            tt--;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "def range_input():\n    return range(int(input()))\n\ndef map_int_input():\n    return map(int,input().split())\n\n\n\nfor t in range_input():\n    n = int(input())\n    a = list(map_int_input())\n    a.sort()\n    val1 = -1\n    val2 = -1\n    for i in a:\n        if i == val1+1:\n            val1+=1\n        elif i == val2+1:\n            val2+=1\n        elif i> val1+1:\n            break\n        \n    val1+=1\n    val2+=1\n    print(val1+val2)\n    \n        \n        \n\n        \n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\n\nQ = int(input())\nfor _ in range(Q):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = [0]*101\n    for a in A:\n        B[a] += 1\n    \n    a1 = 0\n    u1 = False\n    u2 = False\n    a2 = 0\n    for n, b in enumerate(B):\n        if b >= 2 and not u1:\n            a1 = n+1\n        else:\n            u1 = True\n        if b >= 1 and not u2:\n            a2 = n+1\n        else:\n            u2 = True\n    \n    print(a1+a2)\n"
        },
        {
            "language": 1,
            "solution": "def solve(arr):\n    a = max(arr)\n    hehe = {}\n    counter = 0\n    for i in range(a+1):\n        hehe[i] = arr.count(i)\n    res = 0\n    # print(hehe)\n    for j in hehe:\n        # print(\"j\",j)\n        if counter ==2:\n            break\n        if hehe[j] == 0:\n            if counter==1:\n                res+=j\n                counter +=1\n                \n            elif counter==0:\n                res+=(j*2)\n                counter +=2\n            break\n        if hehe[j] == 1:\n            # print(\"sama dengan 1\")\n            if counter==1:\n                continue\n            elif counter==0:\n                res += j\n                counter+=1\n        else:\n            continue\n    else:\n\n        # print(\"masuk else\")\n        res+= ((a+1)*(2-counter))\n    return res\n\nfor _ in range(input()):\n    n = input()\n    arr = map(int,raw_input().split())\n    print solve(arr)"
        },
        {
            "language": 3,
            "solution": "for case in range(int(input())):\n    N = int(input())\n    arr = list(map(int,input().split()))\n    arr.sort\n    tally = 0\n    lowest = None\n    highest = None\n    while highest == None:\n        if arr.count(tally) == 0:\n            highest = tally\n        tally += 1\n    tally = 0\n    while lowest == None:\n        if arr.count(tally) < 2:\n            lowest = tally\n        tally += 1\n    print(highest + lowest)"
        },
        {
            "language": 3,
            "solution": "# import sys \n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\nmod = int(1e9)+7\ndef sp(n):\n\tif n==1:\n\t\treturn input()\n\telse:\n\t\treturn map(str, input().split())\ndef np(n):\n\tif n==1:\n\t\treturn int(input())\n\telse:\n\t\treturn map(int, input().split())\nfor _ in range (0, int(input())):\n\tn = np(1)\n\tl = list(np(2))\n\ta,b = [], []\n\tfor i in l:\n\t\tif i not in a:\n\t\t\ta.append(i)\n\t\telse:\n\t\t\tb.append(i)\n\tans = 0\n\tfor i in range (0,101):\n\t\tif i not in a:\n\t\t\tans += i\n\t\t\tbreak\n\tfor i in range (0,101):\n\t\tif i not in b:\n\t\t\tans += i\n\t\t\tbreak\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n#from bisect import bisect_left as bl                #c++ lowerbound bl(array,element)\n#from bisect import bisect_right as br               #c++ upperbound br(array,element)\n \n \ndef main():\n\n    for _ in range(int(input())):\n        n=int(input())\n        a=list(map(int,input().split(\" \")))\n        ma=0\n        for x in range(0,200):\n            if x in a:\n                ma=x+1\n                a.remove(x)\n            else:\n                break;\n        mb=0\n        for x in range(0,200):\n            if x in a:\n                a.remove(x)\n                mb=x+1\n            else:\n                break\n        print(ma+mb)\n            \n\n\n#-----------------------------BOSS-------------------------------------!\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "\ndef solution():\n    n = int(input())\n    l = list(map(int,input().split()))\n\n    d = {}\n    a = -1\n    b = -1\n\n    for i in range(len(l)):\n        if l[i] in d:\n            d[l[i]] += 1\n        else:\n            d[l[i]] = 1\n    #print(d)\n    for i in range(0,n+1):\n        \n        if i not in d:\n            if a == -1:\n                a = i\n                b = i\n            else:\n                b = i \n            break\n\n        if (i in d and d[i] == 1):\n            if a == -1:\n                a = i\n             \n    \n    \n    print(a+b)\n\n\nt = int(input())\nwhile(t>0):\n    solution()\n    t -= 1"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nt = int(input())\nfor _ in range(t):\n    input()\n    counts = Counter(map(int, input().split()))\n    ans = 0\n    now = 0\n    max_c = 2\n    while now in counts:\n        max_c = min(max_c, counts[now])\n        ans += max_c\n        now += 1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\tA,B=[],[]\n\tfor i in a:\n\t\tif i not in A:\n\t\t\tA.append(i)\n\t\telse:\n\t\t\tB.append(i)\n\ts=0\n\tif len(A)!=0:\n\t\tfor i in range(max(A)+2):\n\t\t\tif i not in A:\n\t\t\t\ts+=i\n\t\t\t\tbreak\n\tif len(B)!=0:\n\t\tfor i in range(max(B)+2):\n\t\t\tif i not in B:\n\t\t\t\ts+=i\n\t\t\t\tbreak\n\tprint(s)"
        },
        {
            "language": 3,
            "solution": "from __future__ import division, print_function\n\n''' Hey stalker :) '''\nINF = 10 ** 10\nTEST_CASES = True\n\nfrom collections import defaultdict, deque, Counter\ndef main():\n    n = get_int()\n    li = get_list()\n    cnt = Counter(li)\n    s1, s2= -1,-1\n    #print(cnt)\n    for i in range(0, 10**10):\n        if s1!=-1 and i not in cnt:\n            s2 = i\n            break\n        elif s1==-1:\n            if i in cnt:\n                if cnt[i]==1: s1 = i\n            else:\n                s1,s2 = i, i\n                break\n    print(s1+s2)\n\n\n''' FastIO Footer: PyRival Library, Thanks @c1729 and contributors '''\nimport os\nimport sys\nfrom bisect import bisect_left, bisect_right, bisect\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\n# else:\n#     sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nget_int = lambda: int(input())\nget_list = lambda: list(map(int, input().split()))\n\nif __name__ == \"__main__\":\n    if TEST_CASES:\n        [main() for _ in range(int(input()))]\n    else:\n        main()\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tl = list(map(int,input().split()))\n\tl.sort()\n\tans = 0\n\tc = 0\n\tfor i in range(max(l)+1):\n\t\tif i not in l:\n\t\t\tif c == 0:\n\t\t\t\tans = 2*i\n\t\t\t\tc = \"hi\"\n\t\t\telse:\n\t\t\t\tans += i\n\t\t\t\tc = \"hi\"\n\t\t\tbreak\n\t\telse:\n\t\t\tif l.count(i) == 1 and c == 0:\n\t\t\t\tans += i\n\t\t\t\tc = 1\n\tif c==1:\n\t\tans += (i+1)\n\telif c==0:\n\t\tans = 2*(i+1)\n\n\tprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.Map.Entry;\n\n\nimport java.io.*;\nimport java.math.*;\nimport static java.util.stream.Collectors.*;\nimport static java.util.Map.Entry.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Main\n{\n\t\n\tstatic int k;\n\tpublic static void main (String[] args) throws IOException\n\t{\n\t\tfinal long mod=(long) (1e9+7);  \n\t\tReader s=new Reader();\n\t\t  PrintWriter pt=new PrintWriter(System.out);\n//\t\t  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\t  int T=s.nextInt();\n//\t\t  int T=Integer.parseInt(br.readLine());\n//\t\t  int T=1;\n\t\t  while(T-->0)\n\t\t  {\n\t\t\t  int n=s.nextInt();\n\t\t\t  HashSet<Integer> hs1 = new HashSet<Integer>();\n\t\t\t  HashSet<Integer> hs2 = new HashSet<Integer>();\n\t\t\t  for(int i=0;i<n;i++) {\n\t\t\t\t  int p=s.nextInt();\n\t\t\t\t  if(hs1.contains(p)) {\n\t\t\t\t\t  hs2.add(p);\n\t\t\t\t  }\n\t\t\t\t  else {\n\t\t\t\t\t  hs1.add(p);\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  int a=0;\n\t\t\t  for(int i=0;i<102;i++) {\n\t\t\t\t  if(hs1.contains(i)==false) {\n\t\t\t\t\t  a=i;\n\t\t\t\t\t  break;\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  for(int i=0;i<102;i++) {\n\t\t\t\t  if(hs2.contains(i)==false) {\n\t\t\t\t\t  a+=i;\n\t\t\t\t\t  break;\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  pt.println(a);\n\t\t  }\n\t\t  pt.close();\n\t}\n\tpublic static int numberOfprimeFactors(int n) \n    { \n        // Print the number of 2s that divide n \n\t\tHashSet<Integer> hs = new HashSet<Integer>();\n        while (n%2==0) \n        { \n            hs.add(2);\n            n /= 2; \n        } \n  \n        // n must be odd at this point.  So we can \n        // skip one element (Note i = i +2) \n        for (int i = 3; i <= Math.sqrt(n); i+= 2) \n        { \n            // While i divides n, print i and divide n \n            while (n%i == 0) \n            { \n                hs.add(i);\n                n /= i; \n            } \n        } \n  \n        // This condition is to handle the case whien \n        // n is a prime number greater than 2 \n        if (n > 2) \n            hs.add(n);\n        return hs.size();\n    } \n\tstatic int gcd(int a, int b) \n    { \n      if (b == 0) \n        return a; \n      return gcd(b, a % b);  \n    } \n\tstatic void dfs(int node, int parent, ArrayList<Integer> al[], long sts[], long afe[], int n) {\n\t\tfor(int c:al[node]) {\n\t\t\tif(c!=parent) {\n\t\t\t\tdfs(c,node,al,sts,afe,n);\n\t\t\t\tsts[node]=sts[node]+sts[c];\n\t\t\t}\n\t\t}\n//\t\tSystem.out.println(k++);\n\t\tafe[k++]=(n-sts[node])*sts[node];\n\t}\n\n\n\n\t\n\n\tstatic void reverse(int arr[],int start, int end) \n\t{ \n\t\tint temp; \n\t\t   \n\t\twhile (start < end) \n\t\t{ \n\t\t    temp = arr[start];  \n\t\t    arr[start] = arr[end]; \n\t\t    arr[end] = temp; \n\t\t    start++; \n\t\t    end--; \n\t\t}  \n\t}  \n\tstatic void reverse(long arr[],int start, int end) \n\t{ \n\t\tlong temp; \n\t\t   \n\t\twhile (start < end) \n\t\t{ \n\t\t    temp = arr[start];  \n\t\t    arr[start] = arr[end]; \n\t\t    arr[end] = temp; \n\t\t    start++; \n\t\t    end--; \n\t\t}  \n\t}  \n\tstatic boolean isPrime(int n) \n    { \n        // Corner cases \n        if (n <= 1) return false; \n        if (n <= 3) return true; \n      \n        // This is checked so that we can skip  \n        // middle five numbers in below loop \n        if (n % 2 == 0 || n % 3 == 0) return false; \n      \n        for (int i = 5; i * i <= n; i = i + 6) \n            if (n % i == 0 || n % (i + 2) == 0) \n            return false; \n      \n        return true; \n    } \n\tstatic int p2(int n) {\n\t\tint k=0;\n\t\twhile(n>1) {\n\t\t\tif(n%2!=0)\n\t\t\t\treturn k;\n\t\t\tn/=2;\n\t\t\tk++;\n\t\t}\n\t\treturn k;\n\t}\n\tstatic boolean isp2(int n) {\n\t\twhile(n>1) {\n\t\t\tif(n%2==1)\n\t\t\t\treturn false;\n\t\t\tn/=2;\n\t\t}\n\t\treturn true;\n\t}\n\tstatic int binarySearch(int arr[], int first, int last, int key){  \n\t\t   int mid = (first + last)/2;  \n\t\t   while( first <= last ){  \n\t\t      if ( arr[mid] < key ){  \n\t\t        first = mid + 1;     \n\t\t      }else if ( arr[mid] == key ){  \n\t\t        return mid;  \n\t\t      }else{  \n\t\t         last = mid - 1;  \n\t\t      }  \n\t\t      mid = (first + last)/2;  \n\t\t   }  \n\t\t   return -1;\n\t\t }  \n\n\tstatic void print(int a[][]) {\n\t\tfor(int i=0;i<a.length;i++)\n\t\t{\n\t\t\tfor(int j=0;j<a[0].length;j++)\n\t\t\t\tSystem.out.print(a[i][j]+\" \");\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\tstatic int max (int x, int y) {\n\t\treturn (x > y)? x : y;\n\t} \n\tstatic int search(Pair[] p, Pair pair) {\n\t\tint l=0, r=p.length;\n\t\twhile (l <= r) { \n\t        int m = l + (r - l) / 2;\n\t        if (p[m].compareTo(pair)==0) \n\t            return m; \n\t        if (p[m].compareTo(pair)<0) \n\t            l = m + 1; \n\t        else\n\t            r = m - 1;\n\t    }\n\t    return -1;\n\t}\n\tstatic void pa(int a[])\n\t{\n\t\tfor(int i=0;i<a.length;i++)\n\t\t\tSystem.out.print(a[i]+\" \");\n\t\tSystem.out.println();\n\t\t\n\t}\n\tstatic void pa(long a[])\n\t{\n\t\tfor(int i=0;i<a.length;i++)\n\t\t\tSystem.out.print(a[i]+\" \");\n\t\tSystem.out.println();\n\t\t\n\t}\n\tstatic void reverseArray(int arr[], \n            int start, int end) \n\t{ \n\t\tint temp; \n\t\t   \n\t\twhile (start < end) \n\t\t{ \n\t\t    temp = arr[start];  \n\t\t    arr[start] = arr[end]; \n\t\t    arr[end] = temp; \n\t\t    start++; \n\t\t    end--; \n\t\t}  \n\t}     \n\tstatic boolean isPalindrome(String s) {\n\t\tint l=s.length();\n\t\tfor(int i=0;i<l/2;i++)\n\t\t{\n\t\t\tif(s.charAt(i)!=s.charAt(l-i-1))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\tstatic long nc2(long n, long m) {\n\t\treturn (n*(n-1)/2)%m;\n\t}\n\tstatic long c(long a) {\n\t\treturn a*(a+1)/2;\n\t}\n\tstatic int next(int[] arr, int target)  \n    {  \n        int start = 0, end = arr.length - 1;  \n    \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;  \n    \n            // Move to right side if target is  \n            // greater.  \n            if (arr[mid] <= target) {  \n                start = mid + 1;  \n            }  \n    \n            // Move left side.  \n            else {  \n                ans = mid;  \n                end = mid - 1;  \n            }  \n        }  \n        return ans;  \n    }  \n\n\tstatic long power(long x, long y, long p) \n    { \n        long res = 1; \n        x = x % p; \n                      \n        while (y > 0) \n        { \n            if (y % 2 == 1) \n                res = (res * x) % p; \n            y = y >> 1;\n            x = (x * x) % p; \n        } \n        return  res; \n    } \n    static long modInverse(long n, long p) \n    { \n        return power(n, p-2, p); \n    } \n    static long nCrModP(long n, long r, \n                                    long p) \n    { \n        if (r == 0) \n            return 1; \n        long[] fac = new long[(int) (n+1)]; \n        fac[0] = 1; \n        for (int i = 1 ;i <= n; i++) \n            fac[i] = fac[i-1] * i % p; \n        return (fac[(int) n]* modInverse(fac[(int) r], p) \n                % p * modInverse(fac[(int) (n-r)], p) \n                                    % p) % p; \n    } \n\tstatic String reverse(String str)\n\t{\n\t\treturn new StringBuffer(str).reverse().toString();\n\t}\n\n\n\n\tstatic long fastpow(long x, long y, long m)  \n    { \n        if (y == 0) \n            return 1; \n          \n        long p = fastpow(x, y / 2, m) % m; \n        p = (p * p) % m; \n      \n        if (y % 2 == 0) \n            return p; \n        else\n            return (x * p) % m; \n    } \n\t\n\tstatic boolean isPerfectSquare(long l)\n\t{\n\t\treturn Math.pow((long)Math.sqrt(l),2)==l;\n\t}\n\t\n\t\n\tstatic void merge(long[] arr, int l, int m, int r) \n    { \n        // Find sizes of two subarrays to be merged \n        int n1 = m - l + 1; \n        int n2 = r - m; \n  \n        /* Create temp arrays */\n        long L[] = new long [n1]; \n        long R[] = new long [n2]; \n  \n        /*Copy data to temp arrays*/\n        for (int i=0; i<n1; ++i) \n            L[i] = arr[l + i]; \n        for (int j=0; j<n2; ++j) \n            R[j] = arr[m + 1+ j]; \n  \n  \n        /* Merge the temp arrays */\n  \n        // Initial indexes of first and second subarrays \n        int i = 0, j = 0; \n  \n        // Initial index of merged subarry array \n        int k = l; \n        while (i < n1 && j < n2) \n        { \n            if (L[i] <= R[j]) \n            { \n                arr[k] = L[i]; \n                i++; \n            } \n            else\n            { \n                arr[k] = R[j]; \n                j++; \n            } \n            k++; \n        } \n  \n        /* Copy remaining elements of L[] if any */\n        while (i < n1) \n        { \n            arr[k] = L[i]; \n            i++; \n            k++; \n        } \n  \n        /* Copy remaining elements of R[] if any */\n        while (j < n2) \n        { \n            arr[k] = R[j]; \n            j++; \n            k++; \n        } \n    } \n  \n    // Main function that sorts arr[l..r] using \n    // merge() \n    static void sort(int arr[], int l, int r) \n    { \n        if (l < r) \n        { \n            // Find the middle point \n            int m = (l+r)/2; \n  \n            // Sort first and second halves \n            sort(arr, l, m); \n            sort(arr , m+1, r); \n  \n            // Merge the sorted halves \n            merge(arr, l, m, r); \n        } \n    } \n\tstatic void merge(int arr[], int l, int m, int r) \n    { \n        // Find sizes of two subarrays to be merged \n        int n1 = m - l + 1; \n        int n2 = r - m; \n  \n        /* Create temp arrays */\n        int L[] = new int [n1]; \n        int R[] = new int [n2]; \n  \n        /*Copy data to temp arrays*/\n        for (int i=0; i<n1; ++i) \n            L[i] = arr[l + i]; \n        for (int j=0; j<n2; ++j) \n            R[j] = arr[m + 1+ j]; \n  \n  \n        /* Merge the temp arrays */\n  \n        // Initial indexes of first and second subarrays \n        int i = 0, j = 0; \n  \n        // Initial index of merged subarry array \n        int k = l; \n        while (i < n1 && j < n2) \n        { \n            if (L[i] <= R[j]) \n            { \n                arr[k] = L[i]; \n                i++; \n            } \n            else\n            { \n                arr[k] = R[j]; \n                j++; \n            } \n            k++; \n        } \n  \n        /* Copy remaining elements of L[] if any */\n        while (i < n1) \n        { \n            arr[k] = L[i]; \n            i++; \n            k++; \n        } \n  \n        /* Copy remaining elements of R[] if any */\n        while (j < n2) \n        { \n            arr[k] = R[j]; \n            j++; \n            k++; \n        } \n    } \n  \n    // Main function that sorts arr[l..r] using \n    // merge() \n    static void sort(long arr[], int l, int r) \n    { \n        if (l < r) \n        { \n            // Find the middle point \n            int m = (l+r)/2; \n  \n            // Sort first and second halves \n            sort(arr, l, m); \n            sort(arr , m+1, r); \n  \n            // Merge the sorted halves \n            merge(arr, l, m, r); \n        } \n    } \n    static class Pair implements Comparable<Pair>{\n        int a;\n        int b;\n        Pair(int a,int b){\n            this.a=a;\n \n            this.b=b;\n        }   \n        public int compareTo(Pair p){\n            if(a>p.a)\n                return 1;\n            if(a==p.a)\n                return (b-p.b);\n            return -1;\n        }\n    }\n\tstatic class Reader \n    { \n        final private int BUFFER_SIZE = 1 << 16; \n        private DataInputStream din; \n        private byte[] buffer; \n        private int bufferPointer, bytesRead; \n  \n        public Reader() \n        { \n            din = new DataInputStream(System.in); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public Reader(String file_name) throws IOException \n        { \n            din = new DataInputStream(new FileInputStream(file_name)); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public String readLine() throws IOException \n        { \n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c; \n            while ((c = read()) != -1) \n            { \n                if (c == '\\n') \n                    break; \n                buf[cnt++] = (byte) c; \n            } \n            return new String(buf, 0, cnt); \n        } \n  \n        public int nextInt() throws IOException \n        { \n            int ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do\n            { \n                ret = ret * 10 + c - '0'; \n            }  while ((c = read()) >= '0' && c <= '9'); \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public long nextLong() throws IOException \n        { \n            long ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public double nextDouble() throws IOException \n        { \n            double ret = 0, div = 1; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n  \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n  \n            if (c == '.') \n            { \n                while ((c = read()) >= '0' && c <= '9') \n                { \n                    ret += (c - '0') / (div *= 10); \n                } \n            } \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        private void fillBuffer() throws IOException \n        { \n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n            if (bytesRead == -1) \n                buffer[0] = -1; \n        } \n  \n        private byte read() throws IOException \n        { \n            if (bufferPointer == bytesRead) \n                fillBuffer(); \n            return buffer[bufferPointer++]; \n        } \n  \n        public void close() throws IOException \n        { \n            if (din == null) \n                return; \n            din.close(); \n        } \n    } \n}"
        },
        {
            "language": 3,
            "solution": "import sys, math\n\ninput = lambda: sys.stdin.readline().rstrip()\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    s, d = 0, 0\n    mas = []\n    for i in range(n):\n        if a[i] == s:\n            s += 1\n            mas.append(i)\n        else:\n            if a[i] > s:\n                break\n    n -= len(mas)\n    l = 0\n    ans = s\n    s = 0\n    for i in mas:\n        del a[i - l]\n        l += 1\n    for i in range(n):\n        if a[i] == s:\n            s += 1\n            mas.append(i)\n        else:\n            if a[i] > s:\n                break\n    ans += s\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic final class Main\n{\n    public static void main (String[] args) throws java.lang.Exception {\n        Scanner in = new Scanner(System.in);\n        int t = in.nextInt();\n        while(t-->0) {\n            \n            int n = in.nextInt();\n            int[] arr = new int[101];\n            for(int i =0; i<n; i++)\n            arr[in.nextInt()]++;\n            int a =0;\n            for(int i =0; i<=100; i++){\n                if(arr[i]==0) {\n                    a = i;\n                    break;\n                } else {\n                    arr[i]--;\n                }\n            }\n            int b =0;\n            for(int i =0; i<=100; i++){\n                if(arr[i]==0) {\n                    b = i;\n                    break;\n                } else {\n                    arr[i]--;\n                }\n            }\n            \n            System.out.println((a+b));\n            \n        }\n\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "\n\nfor _ in range(int(input())):\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\ta=sorted(a)\n\n\tif(min(a)==0):\n\t\ti=0\n\t\twhile i in a:\n\t\t\ti+=1\n\t\tans=i\n\t\tcov=[0]*i\n\t\tb=[]\n\t\tfor i in a:\n\t\t\tif i < ans:\n\t\t\t\tif(cov[i]):\n\t\t\t\t\tb.append(i)\n\t\t\t\telse:\n\t\t\t\t\tcov[i]=1\n\t\t\telse:\n\t\t\t\tb.append(i)\n\n\t\ti=0\n\t\twhile i in b:\n\t\t\ti+=1\n\n\t\tans+=i\n\n\t\tprint(ans)\n\n\n\telse:\n\t\tprint(0)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt=int(input())\nfor  _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    c=Counter(a)\n    ans=[]\n    a1=0\n    for i in range(n+1):\n        if c[i]>0:\n            c[i]-=1\n            a1+=1\n        else:\n            break\n    a2=0\n    for i in range(n+1):\n        if c[i]>0:\n            c[i]-=1\n            a2+=1\n        else:\n            break\n    print(a1+a2)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    input()\n    arr = list(map(int, input().split(' ')))\n    if arr.count(0) < 1:\n        print(0)\n    elif arr.count(0) == 1:\n        b = 1\n        while(arr.count(b)):\n            b += 1\n        print(b)\n    else:\n        A = list(set(arr))\n        for i in A:\n            arr.remove(i)\n        B = arr\n        b1 = 1\n        while(A.count(b1)):\n            b1 += 1\n        b2 = 1\n        while(B.count(b2)):\n            b2 += 1\n        print(b1+b2)"
        },
        {
            "language": 3,
            "solution": "def mex(list1):\n    if(len(list1)==0):\n        return 0\n    else:\n        max1 = max(list1)\n        for i in range(max1+1):\n            if i not in list1:\n                return i\n        return max1+1\n \nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    sum = 0\n    first =[]\n    second =[]\n    for i in range(n):\n        x = a.count(i)\n        if(x==2 or x>2):\n            first.append(i)\n            second.append(i)\n        elif(x==1):\n            first.append(i)\n    sum = mex(first) + mex(second)\n    print(sum)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  long long tt;\n  cin >> tt;\n  while (tt--) {\n    long long n, a = 0, b = 0;\n    cin >> n;\n    vector<long long> v(n);\n    vector<long long> k(101);\n    for (long long i = 0; i < n; i++) {\n      cin >> v[i];\n      k[v[i]]++;\n    }\n    for (long long i = 0; i < 101; i++) {\n      if (k[i] == 0) {\n        break;\n      } else if (k[i] > 1 && a == b) {\n        a++;\n        b++;\n      } else {\n        a++;\n      }\n    }\n    cout << a + b << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "[(lambda N,n,d:([d.__setitem__(i,d.get(i,0)+1)for i in n],print(min((lambda n:n if n else [0])([i for i in range(101)if i not in d]))+min((lambda n:n if n else [0])([i for i in range(101)if d.get(i,0)<=1])))))(int(input()),list(map(int,input().split())),{})for t in range(int(input()))]"
        },
        {
            "language": 3,
            "solution": "import os\nfrom io import BytesIO, IOBase\nimport sys\n\ndef main():\n    from collections import Counter\n    for t in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = Counter(a)\n        c = []\n        d = []\n        for i in range(max(a) + 1):\n            if b[i] >= 2:\n                c.append(i)\n                d.append(i)\n            else:\n                if b[i] == 1:\n                    c.append(i)\n        ans = 0\n        flag = 0\n        for i in range(len(c)):\n            if i != c[i]:\n                ans += i\n                flag = 1\n                break\n        if flag == 0:\n            ans = c[-1] + 1\n        flag = 0\n        for i in range(len(d)):\n            if i != d[i]:\n                ans += i\n                flag = 1\n                break\n        if flag == 0:\n            if d != []:\n                ans += d[-1] + 1\n        print(ans)\n        \n# region fastio\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log2, ceil\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom bisect import insort\nfrom collections import Counter\nfrom collections import deque\nfrom heapq import heappush,heappop,heapify\nfrom itertools import permutations,combinations\nmod = int(1e9)+7\n\n \nip = lambda : int(stdin.readline())\ninp = lambda: map(int,stdin.readline().split())\nips = lambda: stdin.readline().rstrip()\nout = lambda x : stdout.write(str(x)+\"\\n\")\n\nt = ip()\nfor _ in range(t):\n    n = ip()\n    arr = list(inp())\n    dic = Counter(arr)\n    ch = list(dic.keys())\n    ch.sort()\n    mex1,mex2 = 0,0\n    flag = True\n    ideal = [i for i in range(101)]\n    for i in ideal:\n        if dic[i]>= 2 and flag:\n            mex1 += 1\n            mex2 += 1\n        else:\n            flag = False\n            if dic[i] >= 1:\n                mex1 += 1\n            else:\n                break\n    ans = mex1+mex2\n    out(ans)\n                \n        \n\n        \n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\n# Constants\nmod = 998244353\n\n# Program Settings\ncases = True\n\n\n# Functions Settings\ndynamic_factorial = False\n\n\n\n# Pre-defined function\n# Begin\n\n# Testcase handler\ndef main(test_case = False):\n    n = int(input()) if test_case else 1\n    for _ in range(n):\n        test()\n        print()\n\n# Binary method of power\ndef fast_pow(a:int, b:int):\n    res = 1\n    while b > 0:\n        if b & 1:\n            res *= a\n        a *= a\n        b >>= 1\n    return res\n\n# Combination of 2\ndef c2(n):\n    return n * (n-1) // 2\n\n# Get the list form of input\ndef get():\n    return list(map(int, input().split()))\n\n# Number of 1s in binary form\ndef bits(n: int):\n    return list(bin(n)).count('1')\n\n# For interactive problems\ndef flush():\n    sys.stdout.flush()\n\n# Print array and split it with space\ndef parr(arr):\n    print(*arr, sep=' ')\n\n# GCD (int a, int b)\n# Return: value of GCD(a, b)\ndef gcd(a, b):\n    while b:\n        if b % a == 0:\n            break\n        tmp = a\n        a = b % a\n        b = tmp\n    return a\n\n# Extended GCD (int a, int b)\n# Return: array of [GCD(a, b), [x0, y0]]\n# Where a * x0 + b * y0 = 1\n# If GCD(a, b) != 1 then return False\ndef ext_gcd(a: int, b: int):\n    if (b == 0):\n        return [a, [1, 0]]\n \n    res = ext_gcd(b, a % b)\n    g = res[0]\n    if g != 1:\n        return False\n    x1 = res[1][0]\n    y1 = res[1][1]\n    x = y1\n    y = x1 - y1 * (a // b)\n \n    return [g, [x, y]]\n\n# Get all different values of array a with their count\ndef get_set(a):\n    res = {}\n    for x in a:\n        if x in res:\n            res[x] += 1\n        else:\n            res[x] = 1\n    return res\n\n# Factorial\nfact = {0: 1}\ndef factorial(n):\n    if dynamic_factorial:\n        if n not in fact:\n            fact[n] = factorial(n-1) * n\n        return fact[n]\n    else:\n        res = 1\n        while n > 0:\n            res = (res * n) % mod\n            n -= 1\n        return res\n\n# Sum of array\ndef sum_of(a):\n    res = 0\n    for x in a:\n        res = (res + x) % mod\n    return res\n\n# Prod of array\ndef prod_of(a):\n    res = 1\n    for x in a:\n        res = (res * x) % mod\n    return res\n\n# End\n\ndef test():\n    n = get()[0]\n    a = sorted(get())\n    b = {}\n    for x in a:\n        if x in b:\n            b[x] += 1\n        else:\n            b[x] = 1\n    \n    mx = max(a) + 1\n    ans = 0\n    # print(b)\n    for i in range(mx+1):\n        if i not in b or b[i] == 0:\n            ans += i\n            break\n        else:\n            b[i] -= 1\n    # print(ans)\n    for i in range(mx+1):\n        if i not in b or b[i] == 0:\n            ans += i\n            break\n        else:\n            b[i] -= 1\n    print(ans)\n\n\nmain(cases)"
        },
        {
            "language": 3,
            "solution": "def inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) ]))\ndef invr():\n    return(map(int,input().split()))\n\nn = inp()\n\nfor _ in range(n):\n    m = inp()\n    l = inlt()\n\n    val = [0] * 102\n\n    for x in l:\n        val[x] += 1\n\n    ans = 0\n    cnt = 0\n    for i in range(102):\n        if(val[i] == 0 and cnt == 0):\n            ans = 2*i\n            break\n        elif(val[i] == 0 and cnt == 1):\n            ans += i\n            break\n        elif(cnt == 0 and val[i] == 1):\n            ans += i\n            cnt += 1\n\n\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math\nimport heapq\nimport collections\ninput = stdin.readline\ndef inputnum():\n    return(int(input()))\ndef inputnums():\n    return(map(int,input().split()))\ndef inputlist():\n    return(list(map(int,input().split())))\ndef inputstring():\n    return([x for x in input()])\ndef inputstrings():\n    return([x for x in input().split()])\ndef inputstringnum():\n    return([ord(x)-ord('a') for x in input()])\ndef inputmatrixchar(rows):\n    arr2d = [[j for j in input().strip()] for i in range(rows)] \n    return arr2d\ndef inputmatrixint(rows):\n    arr2d = []\n    for _ in range(rows):\n        arr2d.append([int(i) for i in input().split()])\n    return arr2d\n    \nt = int(input())\nfor q in range(t):\n    n = inputnum()\n    a = inputlist()\n    a.sort()\n    ans = 0\n    ans1 = 0\n    for i in range(n):\n        if a[i] == ans:\n            ans += 1\n            a[i] = -1\n    a.sort()\n    for i in range(n):\n        if a[i] == ans1:\n            ans1 += 1\n    print(ans+ans1)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> arr(110);\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      arr[x]++;\n    }\n    int ans = 101;\n    for (int i = 0; i <= 100; i++) {\n      if (arr[i] == 0) {\n        ans = i;\n        break;\n      }\n    }\n    int sum = ans;\n    for (int i = 0; i < ans; i++) {\n      if (arr[i] == 1) {\n        ans = i;\n        break;\n      }\n    }\n    sum += ans;\n    cout << sum << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(a):\n    k=0\n    for i in range(1000):\n        if a.count(i)==0:\n            k+=i\n            break\n    for i in range(1000):\n        if a.count(i)<=1:\n            k+=i\n            break\n    return k\n        \nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    print(mex(a))"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class Main {\n    public static void main(String args[]) {\n        Scanner s = new Scanner(System.in);\n        int t = s.nextInt();\n        while(t-- != 0){\n            int n = s.nextInt();\n            int arr[] = new int[101];\n            for(int i = 0; i < n; i++){\n                arr[s.nextInt()]++;\n            }\n            boolean flag = false;\n            int i = 0;\n            for(i = 0; i <= 100; ){\n                if(arr[i] < 2){\n                    break;\n                }\n                i++;\n            }\n            if(arr[i] == 0){\n                System.out.println(2 * i);\n                continue;\n            }\n            int ans = i;\n            i++;\n            boolean added = false;\n            while(i <= 100){\n                if(arr[i] < 1){\n                    ans += i;\n                    added = true;\n                    break;\n                }\n                i++;\n            }\n            if(!added){\n                ans += i;\n            }\n            System.out.println(ans);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    n = int(sys.stdin.readline())\n    list_num = list(map(int, sys.stdin.readline().split()))\n    list_num.sort(reverse=True)\n    mex = [0, 0]\n    while list_num:\n        num = list_num.pop()\n        if mex[0] == num:\n            mex[0]+=1\n        elif mex[1] == num:\n            mex[1] += 1\n    print(sum(mex))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    r=int(input())\n    arr=list(map(int,input().split()))\n    a,b = 0,0\n    arr.sort()\n    for i in arr:\n        if a==i:\n            a+=1\n        elif b==i:\n            b+=1\n    print(a+b)  \n        \n    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    dic={}\n    for d in arr:\n        if d not in dic:\n            dic[d]=0\n        dic[d]+=1\n    fl=0\n    x=0\n    y=1000\n    for i in range(0,102):\n        if i not in dic:\n            if fl==1:\n                x=i\n                break\n            if fl==0:\n                x=i\n                y=i\n            break\n        elif dic[i]==1:\n            if y==1000:\n                y=i\n            fl=1\n    print(x+y)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long fxp(long long a, long long b) {\n  a %= 1000000007;\n  long long res = 1;\n  while (b > 0) {\n    if (b % 2 == 1) res = (res * a) % 1000000007;\n    a = (a * a) % 1000000007;\n    b /= 2;\n  }\n  return res % 1000000007;\n}\ninline long long minv(long long x) { return fxp(x, 1000000007 - 2); }\ninline long long mmul(long long a, long long b) {\n  if (a >= 1000000007) a = a % 1000000007;\n  if (b >= 1000000007) b = b % 1000000007;\n  if (a * b >= 1000000007) return (a * b) % 1000000007;\n  return (a * b);\n}\ninline long long madd(long long a, long long b) {\n  if (a >= 1000000007) a = a % 1000000007;\n  if (b >= 1000000007) b = b % 1000000007;\n  if (a + b >= 1000000007) return (a + b) % 1000000007;\n  return (a + b);\n}\ninline long long msub(long long a, long long b) {\n  if (a >= 1000000007) a = a % 1000000007;\n  if (b >= 1000000007) b = b % 1000000007;\n  return (((a - b) % 1000000007 + 1000000007) % 1000000007);\n}\ninline long long mdiv(long long a, long long bb) {\n  if (a >= 1000000007) a = a % 1000000007;\n  long long b = minv(bb);\n  if (b >= 1000000007) b = b % 1000000007;\n  if (a * b >= 1000000007) return (a * b) % 1000000007;\n  return (a * b);\n}\nvoid c_p_c() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  map<int, int> mp;\n  for (long long i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    mp[x]++;\n  }\n  int v1 = 0, v2 = 0;\n  bool update = true;\n  for (long long i = 0; i < 101; i++) {\n    if (!mp.count(i)) {\n      if (update) v1 = i;\n      v2 = i;\n      break;\n    }\n    if (mp[i] > 1) {\n      if (update) v1 = i + 1;\n      v2 = i + 1;\n    } else {\n      if (update) v1 = i;\n      v2 = i + 1;\n      update = false;\n    }\n  }\n  cout << v1 + v2 << '\\n';\n}\nint main(int argc, char const *argv[]) {\n  c_p_c();\n  int T;\n  cin >> T;\n  for (long long tc = 1; tc <= T; tc++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef solve(lst):\n\tlst = sorted(lst)\n\tnew = []\n\tfor i in range(len(lst)-1):\n\t\tif lst[i] == lst[i+1]:\n\t\t\tnew.append(lst[i])\n\tnew = sorted(list(set(new)))\n\tlst = sorted(list(set(lst)))\n\ta=0\n\tb=0\n\tmex1=0\n\tmex2=0\n\twhile mex1 in new:\n\t\tmex1+=1\n\t\ta+=1\n\twhile mex2 in lst:\n\t\tmex2+=1\n\t\tb+=1\n\treturn a+b\nk = int(input())\nfor i in range(k):\n\tm = int(input())\n\tlst = list(map(int,input().split()))\n\tprint(solve(lst))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t!=0:\n    n = int(input())\n    s = input()\n    arr = s.split()\n    arr = [int(ele) for ele in arr]\n    arr.sort()\n    hm = {}\n    for num in arr:\n        if num not in hm:\n            hm[num] = 0\n        hm[num]+=1\n    c_l1 = -1\n    c_l2 = -1\n    fix_l2 = 0\n    for i in range(len(arr)):\n        if fix_l2!=1:\n            if i in hm and hm[i]>=2:\n                c_l1=i\n                c_l2 = i\n            elif i in hm and hm[i]==1:\n                c_l1=i\n                fix_l2 = 1\n            else:\n                break\n        else:\n            if i in hm and hm[i]>0:\n                c_l1 = i\n            else:\n                break\n    # print(hm)\n    # print(c_l1,c_l2)\n    print(c_l1+c_l2+2)\n    t-=1\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> a(n);\n  vector<long long> h(101, 0);\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    h[a[i]]++;\n  }\n  long long cnt = 0, ans = 0;\n  for (long long i = 0; i < 101 and cnt < 2; i++) {\n    if (h[i] < 2 and cnt < 1) {\n      ans += i;\n      cnt++;\n    }\n    if (h[i] < 1 and cnt < 2) {\n      ans += i;\n      cnt++;\n    }\n  }\n  cout << ans << \"\\n\";\n}\nsigned main() {\n  ios_base ::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t;\n  cin >> t;\n  while (t-- > 0) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n \nfor _ in range(t):\n    x=0\n    k=0\n    n = int(input())\n    count = [0] * 101\n    for v in map(int, input().split()):\n        count[v] += 1 \n    for i in range(101):\n        if(count[i]==1):\n            if(k==0):\n                x+=i\n                k+=1\n            else:\n                if(count[i+1]==0):\n                    x+=i+1\n                    k+=1\n        elif(count[i]==0):\n            if(k==1):\n                x+=i\n                k+=1\n            else:\n                x=2*i\n                k+=2\n        else:\n            continue\n        if(k==2):\n            print(x)\n            break"
        },
        {
            "language": 3,
            "solution": "#Python Template\n\nfrom sys import stdin, stdout\n\ndef main():\n\tt = int(stdin.readline())\n\tfor _ in range(t):\n\t\tn = int(stdin.readline())\n\t\tS = [int(i) for i in stdin.readline().split()]\n\t\tS.sort()\n\n\t\ta_mex = 0\n\t\tb_mex = 0\n\t\ta_adding = True\n\t\tb_adding = True\n\n\t\tfor k in S:\n\t\t\tif k == a_mex:\n\t\t\t\ta_mex += 1\n\t\t\t\tcontinue\n\t\t\tif k == b_mex:\n\t\t\t\tb_mex += 1\n\n\t\tprint(a_mex + b_mex)\n\n\nmain()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Solution{\n    private static Scanner sc = new Scanner(System.in);\n\n    public static void main(String [] args){\n\tint t = sc.nextInt();\n\twhile(t--!=0){\n\t\tsolve();\n\t}\n    }\n\n    public static int[] getArray(int n){\n\tint [] arr = new int[n];\n\tfor(int i=0;i<n;i++){\n\t\tarr[i] = sc.nextInt();\n\t}\n\treturn arr;\n    }\n\n    public static void solve(){\n\tint n = sc.nextInt();\n\tint [] arr = getArray(n);\n\tSet<Integer> used = new HashSet<>(), used2 = new HashSet<>();\n\tfor(int i=0;i<n;i++){\n\t\tif(used.contains(arr[i]))used2.add(arr[i]);\n\t\telse used.add(arr[i]);\n\t}\n\tSystem.out.println((mex(used)+mex(used2)));\n    }\n    static int mex(Set<Integer> set){\n\t\tfor(int i=0;i<=1000;i++){\n\t\t\tif(!set.contains(i))return i;\n\t\t}\n\t\treturn 0;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "cases=int(input())\nfor _ in range(cases):\n\tn=int(input())\n\tc=list(map(int,input().split()))\n\tl=sorted(c)\n\tindex=0\n\tw=[]\n\tm=l.copy()\n\t\n\tif 0 not in l:\n\t\tprint(0)\n\t\tcontinue\n\t\n\tfor i in range(len(l)):\n\t\tif index in l:\n\t\t\tw.append(index)\n\t\t\tm.remove(index)\n\t\telse:\n\t\t\tbreak\n\t\tindex+=1\n\t\t\n\ttot=max(w)+1\n\t\n\tm=sorted(list(set(m)))\n\t\n\t\n\tindex=0\n\tfor i in range(len(m)):\n\t\tif m[i]== index:\n\t\t\tindex+=1\n\t\telse:\n\t\t\tbreak\n\ttot+=index\n\t\n\tprint(tot)\n\t\n\t\n"
        },
        {
            "language": 3,
            "solution": "\nt = int(input())\n\nwhile t !=0:\n    case = []\n    t -=1\n    n = int(input())\n    result=0\n    \n    temp=input().split(\" \")\n    for i in range(0,n):\n        case.append(int(temp[i]))\n\n    for i in range(0,101):\n        #print(hhhhhhh)\n    \n        if i in case:\n            #print(\"remove\",i)\n            case.remove(i)\n        else:\n            #print(\"+\",i)\n            result +=i\n            break\n    for i in range(0,101):\n        #print(hhhhhhh)\n    \n        if i in case:\n            #print(\"remove\",i)\n            case.remove(i)\n        else:\n            #print(\"+\",i)\n            result +=i\n            break\n    print(result)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    a,b=0,0\n    n=int(input())\n    S=list(map(int,input().split()))\n    i=0\n    v=True\n    while(i in S):\n        S.remove(i)\n        a=i+1\n        if(i in S and v):\n            b=i+1\n        else:\n            v=False\n        i=i+1\n    print(a+b)    "
        },
        {
            "language": 4,
            "solution": "    import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\nimport javax.sound.sampled.ReverbType;\n\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tstatic ArrayList<Integer> adj[];\n\t// static PrintWriter out = new PrintWriter(System.out);\n\n\tstatic int[][] notmemo;\n\tstatic int k;\n\tstatic int[] a;\n\tstatic int b[];\n\tstatic int m;\n\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint d;\n\t\tint s;\n\n\t\tpublic Pair(int b, int l) {\n\t\t\td = b;\n\t\t\ts = l;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\tif (o.d - o.s > this.d - this.s) {\n\t\t\t\treturn 1;\n\t\t\t} else if (o.d - o.s < this.d - this.s) {\n\t\t\t\treturn -1;\n\t\t\t} else\n\t\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tstatic Pair s1[];\n\tstatic ArrayList<Pair> adjlist[];\n\t// static char c[];\n\tpublic static long mod = (long) (1e9 + 7);\n\tstatic int V;\n\tstatic long INF = (long) 1E16;\n\tstatic int n;\n\tstatic char c[];\n\tstatic int d[];\n\tstatic int z;\n\tstatic Pair p[];\nstatic int R;\nstatic int C;\nstatic int K;\nstatic long grid[][];\n\tpublic static void main(String args[]) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n=sc.nextInt();\n\t\t\tint a[]=new int[n];\n\t\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\t\ta[i]=sc.nextInt();\n\t\t\t}\n\t\t\tsortarray(a);\n\t\t\tHashSet<Integer> set1=new HashSet<>();\n\t\t\tHashSet<Integer> set2=new HashSet<>();\n\t\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\t\tif(!set1.contains(a[i])) {\n\t\t\t\t\tset1.add(a[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tset2.add(a[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint mexa=0;\n\t\t\tfor (int i = 0; i <=100; i++) {\n\t\t\t\tif(!set1.contains(i)) {\n\t\t\t\t\tmexa=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint mexb=0;\n\t\t\tfor (int i = 0; i <=100; i++) {\n\t\t\t\tif(!set2.contains(i)) {\n\t\t\t\t\tmexb=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(mexa+mexb);\n\t\t}\n\t\tout.flush();\n\t}\n\tstatic int max=0;\n\tstatic int node;\n\tstatic int tar;\n\t\n\tstatic void dfs1(int u,int count) {\n\tvis[u]=true;\n\tfor(int v:adj[u]) {\n\t\tif(!vis[v]) {\n\t\t\tif(count>max) {\n\t\t\t\tmax=count;\n\t\t\t\tnode=v;\n\t\t\t}\n\t\t\tdfs1(v,count+1);\n\t\t}\n\t}\n\t}\n\t\n\t\n\t\n\tstatic  class FenwickTree { // one-based DS\n\n\t\tint n;\n\t\tint[] ft;\n\t\t\n\t\tFenwickTree(int size) { n = size; ft = new int[n+1]; }\n\t\t\n\t\tint rsq(int b) //O(log n)\n\t\t{\n\t\t\tint sum = 0;\n\t\t\twhile(b > 0) { sum += ft[b]; b -= b & -b;}\t\t//min?\n\t\t\treturn sum;\n\t\t}\n\t\t\n\t\tint rsq(int a, int b) { return rsq(b) - rsq(a-1); }\t\n\t\t\n\t\tvoid point_update(int k, int val)\t//O(log n), update = increment\n\t\t{\n\t\t\twhile(k <= n) { ft[k] += val; k += k & -k; }\t\t//min?\n\t\t}\n\t}\n\tstatic ArrayList<Integer> euler=new ArrayList<>();\n\t\n\n\tstatic ArrayList<Integer> arr;\n\n\t\nstatic long total[];\nstatic TreeMap<Integer,Integer> map1;\n\n\t\tstatic int zz;\n//static int dp(int idx,int left,int state) {\n//if(idx>=k-((zz-left)*2)||idx+1==n) {\n//\treturn 0;\n//}\n//if(memo[idx][left][state]!=-1) {\n//\treturn memo[idx][left][state];\n//}\n//int ans=a[idx+1]+dp(idx+1,left,0);\n//if(left>0&&state==0&&idx>0) {\n//\tans=Math.max(ans,a[idx-1]+dp(idx-1,left-1,1));\n//}\n//return memo[idx][left][state]=ans;\n//}21\nstatic HashMap<Integer,Integer> map;\nstatic int maxa=0;\nstatic int ff=123123;\n\nstatic int[][][] memo;\n\n\n\tstatic long modmod=998244353;\n\tstatic int dx[]= {1,-1,0,0};\n\t static int dy[]= {0,0,1,-1};\t\n\tstatic class BBOOK implements Comparable<BBOOK>{\n\t\tint t;\n\t\tint alice;\n\t\tint bob;\n\t\tpublic BBOOK(int x,int y,int z) {\n\t\tt=x;\n\t\talice=y;\n\t\tbob=z;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(BBOOK o) {\n\t\t\treturn this.t-o.t;\n\t\t}\n\t}\n\tprivate static long lcm(long a2, long b2) {\n\treturn (a2*b2)/gcd(a2,b2);\n\t}\n\tstatic class Edge implements Comparable<Edge>\n\t{\n\t\tint node;long cost ; long time; \n\t\t\n\t\tEdge(int a, long b,long c) { node = a;\tcost = b; time=c; }\n\t\t\n\t\tpublic int compareTo(Edge e){ return Long.compare(time,e.time);\t}\n\t}\n\t\n        static void sieve(int N)\t// O(N log log N) \n\t{\n\t\tisComposite = new int[N+1];\t\t\t\t\t\n\t\tisComposite[0] = isComposite[1] = 1;\t\t\t// 0 indicates a prime number\n\t\tprimes = new ArrayList<Integer>();\n \n\t\tfor (int i = 2; i <= N; ++i) \t\t\t\t\t//can loop till i*i <= N if primes array is not needed O(N log log sqrt(N)) \n\t\t\tif (isComposite[i] == 0) \t\t\t\t\t//can loop in 2 and odd integers for slightly better performance\n\t\t\t{\n\t\t\t\tprimes.add(i);\n\t\t\t\tif(1l * i * i <= N)\n\t\t\t\t\tfor (int j = i * i; j <= N; j += i)\t// j = i * 2 will not affect performance too much, may alter in modified sieve\n\t\t\t\t\t\tisComposite[j] = 1;\n\t\t\t}   \n\t}\n    static TreeSet<Integer> factors;\n    static ArrayList<Integer> primeFactors(int N)\t\t// O(sqrt(N) / ln sqrt(N))\n\t{\n\t\tArrayList<Integer> factors = new ArrayList<Integer>();\t\t//take abs(N) in case of -ve integers\n\t\tint idx = 0, p = primes.get(idx);\n\n\t\twhile(1l*p * p <= N)\n\t\t{\n\t\t\twhile(N % p == 0) { factors.add(p); N /= p; }\n\t\t\tp = primes.get(++idx);\n\t\t}\n\n\t\tif(N != 1)\t\t\t\t\t\t// last prime factor may be > sqrt(N)\n\t\t\tfactors.add(N);\t\t\t\t// for integers whose largest prime factor has a power of 1\n\t\treturn factors;\n\t}\n\n\tstatic class UnionFind {\n\t\tint[] p, rank, setSize;\n\t\tint numSets;\n\t\tint max[];\n\n\t\tpublic UnionFind(int N) {\n\t\t\tp = new int[numSets = N];\n\t\t\trank = new int[N];\n\t\t\tsetSize = new int[N];\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tp[i] = i;\n\t\t\t\tsetSize[i] = 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic int findSet(int i) {\n\t\t\treturn p[i] == i ? i : (p[i] = findSet(p[i]));\n\t\t}\n\n\t\tpublic boolean isSameSet(int i, int j) {\n\t\t\treturn findSet(i) == findSet(j);\n\t\t}\n\t\tpublic int chunion(int i,int j, int x2) {\n\t\t\tif (isSameSet(i, j))\n\t\t\t\treturn 0;\n\t\t\tnumSets--;\n\t\t\tint x = findSet(i), y = findSet(j);\n\t\t\tint z=findSet(x2);\n\t\t\tp[x]=z;;\n\t\t\tp[y]=z;\n\t\treturn x;\n\t\t}\n\n\t\tpublic void unionSet(int i, int j) {\n\t\t\tif (isSameSet(i, j))\n\t\t\t\treturn;\n\t\t\tnumSets--;\n\t\t\tint x = findSet(i), y = findSet(j);\n\t\t\tif (rank[x] > rank[y]) {\n\t\t\t\tp[y] = x;\n\t\t\t\tsetSize[x] += setSize[y];\n\n\n\t\t\t} else {\n\t\t\t\tp[x] = y;\n\t\t\t\tsetSize[y] += setSize[x];\n\t\t\t\tif (rank[x] == rank[y])\n\t\t\t\t\trank[y]++;\n\n\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\tpublic int numDisjointSets() {\n\t\t\treturn numSets;\n\t\t}\n\n\t\tpublic int sizeOfSet(int i) {\n\t\t\treturn setSize[findSet(i)];\n\t\t}\n\t}\n\n\n\tstatic class Quad implements Comparable<Quad> {\n\t\tint u;\n\t\tint v;\n\t\tchar state;\n\t\tint turns;\n\n\t\tpublic Quad(int i, int j, char c, int k) {\n\t\t\tu = i;\n\t\t\tv = j;\n\t\t\tstate = c;\n\t\t\tturns = k;\n\t\t}\n\n\t\tpublic int compareTo(Quad e) {\n\t\t\treturn (int) (turns - e.turns);\n\t\t}\n\n\t}\n\n\tstatic long manhatandistance(long x, long x2, long y, long y2) {\n\t\treturn Math.abs(x - x2) + Math.abs(y - y2);\n\t}\n\n\tstatic long fib[];\n\n\tstatic long fib(int n) {\n\t\tif (n == 1 || n == 0) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (fib[n] != -1) {\n\t\t\treturn fib[n];\n\t\t} else\n\t\t\treturn fib[n] = ((fib(n - 2) % mod + fib(n - 1) % mod) % mod);\n\t}\n\n\tstatic class Point  implements Comparable<Point>{\n\t\tlong x, y;\n\n\t\tPoint(long counth, long counts) {\n\t\t\tx = counth;\n\t\t\ty = counts;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Point p )\n\t\t{\n\t\t\treturn Long.compare(p.y*1l*x, p.x*1l*y);\n\t\t}\n\t}\n\n\tstatic TreeSet<Long> primeFactors(long N) // O(sqrt(N) / ln sqrt(N))\n\t{\n\t\tTreeSet<Long> factors = new TreeSet<Long>(); // take abs(N) in case of -ve integers\n\t\tint idx = 0, p = primes.get(idx);\n\n\t\twhile (p * p <= N) {\n\t\t\twhile (N % p == 0) {\n\t\t\t\tfactors.add((long) p);\n\t\t\t\tN /= p;\n\t\t\t}\n\t\t\tif (primes.size() > idx + 1)\n\t\t\t\tp = primes.get(++idx);\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (N != 1) // last prime factor may be > sqrt(N)\n\t\t\tfactors.add(N); // for integers whose largest prime factor has a power of 1\n\t\treturn factors;\n\t}\n\n\tstatic boolean visited[];\n\n\t/**\n\t * static int bfs(int s) { Queue<Integer> q = new LinkedList<Integer>();\n\t * q.add(s); int count=0; int maxcost=0; int dist[]=new int[n]; dist[s]=0;\n\t * while(!q.isEmpty()) {\n\t * \n\t * int u = q.remove(); if(dist[u]==k) { break; } for(Pair v: adj[u]) {\n\t * maxcost=Math.max(maxcost, v.cost);\n\t * \n\t * \n\t * \n\t * if(!visited[v.v]) {\n\t * \n\t * visited[v.v]=true; q.add(v.v); dist[v.v]=dist[u]+1; maxcost=Math.max(maxcost,\n\t * v.cost); } }\n\t * \n\t * } return maxcost; }\n\t **/\n\n\tstatic boolean[] vis2;\n\n\tstatic boolean f2 = false;\n\n\tstatic long[][] matMul(long[][] a2, long[][] b, int p, int q, int r) // C(p x r) = A(p x q) x (q x r) -- O(p x q x\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// r)\n\t{\n\t\tlong[][] C = new long[p][r];\n\t\tfor (int i = 0; i < p; ++i) {\n\t\t\tfor (int j = 0; j < r; ++j) {\n\t\t\t\tfor (int k = 0; k < q; ++k) {\n\t\t\t\t\tC[i][j] = (C[i][j] + (a2[i][k] % mod * b[k][j] % mod)) % mod;\n\t\t\t\t\tC[i][j] %= mod;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn C;\n\t}\n\tpublic static int[] schuffle(int[] a2) {\n\t\tfor (int i = 0; i < a2.length; i++) {\n\t\t\tint x =  (int) (Math.random() * a2.length);\n\t\t\tint temp = a2[x];\n\t\t\ta2[x] = a2[i];\n\t\t\ta2[i] = temp;\n\t\t}\n\t\treturn a2;\n\t}\n\n\n\tstatic boolean vis[];\n\tstatic HashSet<Integer> set = new HashSet<Integer>();\n\n\tstatic long modPow(long ways, long count, long mod) // O(log e)\n\t{\n\t\tways %= mod;\n\t\tlong res = 1;\n\t\twhile (count > 0) {\n\t\t\tif ((count & 1) == 1)\n\t\t\t\tres = (res * ways) % mod;\n\t\t\tways = (ways * ways) % mod;\n\t\t\tcount >>= 1;\n\t\t}\n\t\treturn res % mod;\n\t}\n\n\tstatic long gcd(long l, long o) {\n\t\tif (o == 0) {\n\t\t\treturn l;\n\t\t}\n\t\treturn gcd(o, l % o);\n\t}\n\n\tstatic int[] isComposite;\n\tstatic int[] valid;\n\n\tstatic ArrayList<Integer> primes;\n\tstatic ArrayList<Integer> l1;\n\n\t\n\tstatic TreeSet<Integer> primus = new TreeSet<Integer>();\n\t\n\tstatic void sieveLinear(int N)\n\t{\n\t\tint[] lp = new int[N + 1];\t\t\t\t\t\t\t\t//lp[i] = least prime divisor of i\n\t\tfor(int i = 2; i <= N; ++i)\n\t\t{\n\t\t\tif(lp[i] == 0)\n\t\t\t{\n\t\t\t\tprimus.add(i);\n\t\t\t\tlp[i] = i;\n\t\t\t}\n\t\t\tint curLP = lp[i];\n\t\t\tfor(int p: primus)\n\t\t\t\tif(p > curLP || p * i > N)\n\t\t\t\t\tbreak;\n\t\t\t\telse\n\t\t\t\t\tlp[p * i] = i;\n\t\t}\n\t}\n\t\n\n\tpublic static long[] schuffle(long[] a2) {\n\t\tfor (int i = 0; i < a2.length; i++) {\n\t\t\tint x =  (int) (Math.random() * a2.length);\n\t\t\tlong temp = a2[x];\n\t\t\ta2[x] = a2[i];\n\t\t\ta2[i] = temp;\n\t\t}\n\t\treturn a2;\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic Long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\n\t\tpublic int[] nxtArr(int n) throws IOException {\n\t\t\tint[] ans = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tans[i] = nextInt();\n\t\t\treturn ans;\n\t\t}\n\t\t\n\t}\n\tpublic static int[] sortarray(int a[]) {\n\t\tschuffle(a);\n\t\tArrays.sort(a);\n\t\treturn a;\n\t\t}\n\t\tpublic static long[] sortarray(long a[]) {\n\t\t\tschuffle(a);\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n}"
        },
        {
            "language": 3,
            "solution": "def ans(a, n):\n    arr = [0]*101\n    for i in a:\n        arr[i]+=1\n\n    #finding mex A\n    for i in range(len(arr)):\n        if arr[i]==0:\n            t = i\n            break\n\n    #finding mex B\n    for i in range(len(arr)):\n        if arr[i]<=1:\n            u = i\n            break\n\n    return(t+u)\n    \n    \nm = int(input())\n\nfor j in range(m):\n    n = int(input())\n    a = input().split()\n\n    arr = []\n    for i in a:\n        arr.append(int(i))\n    \n    print(ans(arr, n))\n"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\n\nfrom collections import Counter, defaultdict, deque\n\n\ndef solve(N, A):\n    freq = Counter(A)\n    mex1 = 0\n    mex2 = 0\n    for i in range(max(A) + 2):\n        if freq[i] >= 2 and mex2 == i:\n            mex2 = i + 1\n        \n        if freq[i] >= 1 and mex1 == i:\n            mex1 = i + 1\n\n    return mex1 + mex2\n\n\nif __name__ == \"__main__\":\n    input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n    TC = int(input())\n    for tc in range(1, TC + 1):\n        N, = [int(x) for x in input().split()]\n        A= [int(x) for x in input().split()]\n        ans = solve(N, A)\n        print(ans)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t = 1;\n  cin >> t;\n  while (t--) {\n    long long n, k = 0, s = 0, s1 = 0;\n    cin >> n;\n    long long a[n + 10], dp[110] = {};\n    for (long long i = 1; i <= n; ++i) {\n      cin >> a[i];\n      dp[a[i]]++;\n    }\n    for (long long i = 0; i <= 101; ++i) {\n      if (dp[i] == 0 && k == 0) {\n        k++;\n        s += i;\n      }\n    }\n    k = 0;\n    for (long long i = 0; i <= s; ++i) {\n      if (dp[i] <= 1 && k == 0) {\n        s1 += i;\n        k++;\n      }\n    }\n    cout << s + s1;\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def subsetmex(a):\n    j=0\n    k=0\n    x=max(a)\n    for i in range(x+1):\n        if i in a:\n            j=i+1\n            a.remove(i)\n        else:\n            j=i\n            break\n    for i in range(len(a)):\n        if i in a:\n            k=i+1\n            continue\n        else:\n            k=i\n            break\n    return j+k\nT=int(input())\nfor _ in range(T):\n    a=int(input())\n    b=list(map(int,input().split()))\n    print(subsetmex(b))\n    \n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\nfrom decimal import *\n\ngetcontext().prec = 30\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(\" \")))\n    d = {}\n    for i in range(n):\n        d[l[i]] = d.get(l[i], 0) + 1\n    ans = 0\n    x = list(d.keys())\n    for i in range(max(x)+2):\n        if d.get(i, 0) < 2:\n            ans = i\n            break\n    for i in range(max(x)+2):\n        if d.get(i, 0) < 1:\n            ans += i\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nfor i in range(n):\n    t=int(input())\n    x = [int(i) for i in input().split(\" \")]\n    y,z=[],[]\n    x.sort()\n    for j in range(len(x)):\n        if x[j] not in y:\n            y.append(x[j])\n            \n        else:\n            z.append(x[j])\n            \n            \n    ans=0\n    if y:\n        for i in range(y[-1]+1):\n            \n            if i in y:\n                pass\n            else:\n                ans+=i\n                break\n        if i==y[-1]:\n            ans+=y[-1]+1\n    if z:      \n        for i in range(z[-1]+1):\n            \n            if i in z:\n                pass\n            else:\n                ans+=i\n                break\n        if i==z[-1]:\n            ans+=z[-1]+1\n\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long i, j, k, l = 0, m, n, sum = 0, mx = -0x3f3f3f3f;\n    cin >> n;\n    long long md[1000000] = {0};\n    for (i = 0; i < n; i++) {\n      cin >> k;\n      md[k]++;\n    }\n    for (i = 0; i <= 100; i++) {\n      if (md[i] == 0 && l == 0) {\n        sum = sum + 2 * i;\n        break;\n      }\n      if (md[i] == 1 && l == 0) {\n        sum = sum + i;\n        l = 1;\n      }\n      if (l == 1 && md[i] == 0) {\n        sum = sum + i;\n        break;\n      }\n    }\n    cout << sum << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while(t-- > 0){\n            int n = sc.nextInt();\n            int[] arr = new int[n];\n            for(int i = 0; i < n; i++){\n                arr[i] = sc.nextInt();\n//                System.out.print(arr[i] + \" \");\n            }\n//            System.out.println(\" ok \");\n            int mex_1 = 0;\n            boolean now_ok = false;\n            int mex_2 = 0;\n            Arrays.sort(arr);\n//            for(int i : arr){\n//                System.out.print(i + \" \");\n//            }\n            int x = 0;\n            for(int i = 0; i < n; i++){\n                int c = count(arr, i, x);\n//                System.out.println(x + \" appeared \" + c + \" times\");\n                if(c == 1 || now_ok){\n                    now_ok = true;\n                    if(c >= 1) {\n                        mex_1 = x + 1;\n                    }\n                }\n                if(c >= 2 && mex_1 == mex_2){\n                    mex_1 = x+1;\n                    mex_2 = x+1;\n                }\n                if(c == 0){\n                    mex_1 = x;\n                    break;\n                }\n                x++;\n                i += c-1;\n            }\n            System.out.println(mex_1 + mex_2);\n        }\n    }\n\n    public static int count(int[] arr, int index, int search){\n        int count = 0;\n        for(int i = index; i < arr.length; i++){\n            if(arr[i] == search){\n                count++;\n            }else{\n                break;\n            }\n        }\n        return count;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\nimport collections\nimport bisect\nimport time\ndef get_ints():return map(int, sys.stdin.readline().strip().split())\ndef get_list():return list(map(int, sys.stdin.readline().strip().split()))\ndef get_string():return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    n=int(input())\n    arr=get_list()\n    arr.sort()\n    ans1=set()\n    ans2=set()\n    for i in range(n):\n        ele=arr[i]\n        if ele not in ans1:\n            ans1.add(ele)\n        else:\n            ans2.add(ele)\n    val=0\n    for i in range(101):\n        if i not in ans1:\n            val+=i\n            break\n    for i in range(101):\n        if i not in ans2:\n            val+=i\n            break\n    print(val)"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nNTC here\n\"\"\"\n\n\n\n\n#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\n\n\n\ndef main():\n    T = iin()\n    while T:\n        T-=1\n        n = iin()\n        a = lin()\n        dc = {}\n        for i in a:\n            try:\n                dc[i] += 1\n            except:\n                dc[i] = 1\n        ch = 0\n        a1, a2 = [-1], [-1]\n        while ch in dc:\n            if a1[-1]+1==ch and dc[ch]:\n                dc[ch]-=1\n                a1.append(ch)\n            if a2[-1]+1==ch and dc[ch]:\n                dc[ch]-=1\n                a2.append(ch)\n            ch += 1\n        print(a1[-1]+1 + a2[-1]+1)    \n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\ndef iin(): return int(input())\ndef lin(): return list(map(int, input().split()))\n# endregion\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "from itertools import permutations\n#from fractions import Fraction\nfrom collections import defaultdict\nfrom math import*\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nfrom heapq import nlargest\nfrom bisect import*\nimport copy\nimport itertools\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0 \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ndef input(): return sys.stdin.readline().rstrip(\"\\r\\n\")\n#-------------above part copied-----------------------\n\n\nt=int(input())\nwhile t:\n    t-=1\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n#    print(arr)\n    m1,m2=0,0\n    c1,c2=0,0\n    for i in range(n):\n        isTaken=False\n        if arr[i]==c1:\n            c1+=1\n            m1+=1\n            isTaken=True\n\n        if arr[i]==c2 and isTaken==False:\n            c2+=1\n            m2+=1\n    print(m1+m2)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport itertools\nimport math\ninput = sys.stdin.readline\nI = lambda : list(map(int,input().split()))\n\nm,=I()\nwhile(m):\n    n,=I()\n    arr=I()\n    g=[0]*(max(arr)+2)\n    for i in range(n):\n        g[arr[i]]+=1\n\n    ma=c=key=0\n    for i in range(len(g)):\n        if g[i]==0 and c<2:\n            c+=1\n            ma+=i\n            break\n\n    for i in range(len(g)):\n        if g[i]<2 and c<2:\n            c+=1\n            ma+=i\n            break\n    print(ma)\n    m-=1\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninp = lambda : stdin.readline().strip()\n\nt = int(inp())\n\nfor _ in range(t):\n    n = int(inp())\n    a = [int(x) for x in inp().split()]\n    cnt = [0]*101\n\n    for i in a:\n        cnt[i]+=1\n    ans = 0\n    flag = True\n    for i in range(101):\n        if cnt[i] > 1 and flag:\n            ans += 1\n        elif cnt[i] == 0:\n            ans+= i\n            break\n        else:\n            flag = False\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    frq = [0] * (2*n)\n    for c in l:\n        frq[c] += 1\n    wan = False\n    ans = 0\n    for i in range(2*n):\n        if(frq[i] == 0):\n            if(wan == False):\n                ans += 2*i\n                break\n            else:\n                ans += i\n                break\n        if(frq[i] == 1):\n            if(wan == False):\n                ans += i\n                wan = True\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a[101];\nlong long vis[101];\nlong long judge(vector<long long> A) {\n  if (A.empty()) return 0;\n  for (long long i = 0; i < A.size(); i++) {\n    if (A[i] != i) return i;\n  }\n  return A.size();\n}\nsigned main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    for (long long i = 1; i <= n; i++) cin >> a[i];\n    sort(a + 1, a + n + 1);\n    memset(vis, 0, sizeof vis);\n    vector<long long> A, B;\n    vis[1] = 1;\n    A.push_back(a[1]);\n    for (long long i = 2; i <= n; i++) {\n      if (a[i] != a[i - 1]) {\n        vis[i] = 1;\n        A.push_back(a[i]);\n      }\n    }\n    for (long long i = 1; i <= n; i++) {\n      if (!vis[i]) {\n        B.push_back(a[i]);\n      }\n    }\n    B.erase(unique(B.begin(), B.end()), B.end());\n    cout << judge(A) + judge(B) << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def Solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ptr = 0\n\n    MAX = 111\n    cnt = [0] * MAX\n    while ptr < n:\n        nptr = ptr + 1\n        while nptr < n and a[nptr] == a[ptr]:\n            nptr += 1\n        cnt[a[ptr]] += nptr - ptr\n        ptr = nptr\n    \n    for mex in range(MAX):\n        if cnt[mex] == 0:\n            print(mex + mex)\n            return\n        if cnt[mex] == 1:\n            for other in range(mex + 1, MAX):\n                if cnt[other] == 0:\n                    print(mex + other)\n                    return\n\nfor _ in range(int(input())):\n    Solve()"
        },
        {
            "language": 3,
            "solution": "import math\nimport os\nimport random\nimport re\nimport string\nfrom sys import *\nfrom collections import *\n#\"Case #\"+str(_+1)+\":\"+\" \"+str(c)\n#l=list(map(int,stdin.readline().strip().split()))\ndef bs(arr,x,l,r):\n    if l<=r:\n        mid=(r+l)//2\n        if arr[mid]==x:\n            return mid\n        elif arr[mid]>x:\n            return bs(arr,x,l,mid-1)\n        else:\n            return bs(arr,x,mid+1,r)\n    else:\n        return -1\ndef solve():\n    for _ in range(int(input())):\n        n=int(input())\n        l=list(map(int,stdin.readline().strip().split()))\n        l.sort()\n        d=dict(Counter(l))\n        c=0\n        s=0\n        f=0\n        #print(d)\n        prev=1\n        for i in sorted(d.keys()):\n            #print(\"ic\",i,c)\n            if i==c:\n                if d[i]>=2:\n                    pass\n                else:\n                    if f==0:\n                        s+=c\n                        f+=1\n            else:\n                if f==1:\n                    s+=c\n                    f+=1\n                else:\n                    s=(2*c)\n                    f=2\n            c+=1\n            prev=i\n            #print(\"sf\",s,f)\n            if f==2:\n                break\n        if f==1:\n            s+=c\n        if f==0:\n            s=(2*c)\n        print(s)\n            \nif __name__==\"__main__\":\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    s=list(map(int,input().split()))\n    s.sort()\n    h={}\n    for i in s:\n        if(i not in h):h[i]=0\n        h[i]+=1\n    for i in range(102):\n        if(i not in h):h[i]=0\n        \n    out=0\n    for i in range(102):\n        if(h[i]==0):\n            out=i\n            \n            break\n    temp=1    \n    for i in range(102):\n        if(h[i]==1 and i<out):\n            out+=i\n            temp=0\n            break\n    if(temp==0):print(out)\n    else:print(2*out)"
        },
        {
            "language": 3,
            "solution": "def ans(n,a):\n    A,B = set(),set()\n    mA,mB = 0,0\n    m = {}\n    for i in range(n):\n        if a[i] not in m:\n            m[a[i]]=0\n        m[a[i]]+=1\n    canUpdateB = True\n    for i in range(0,101):\n        if i not in m:\n            break\n        if m[i] >= 2:\n            mA+=1\n            if canUpdateB:\n                mB+=1\n        elif m[i] == 1:\n            canUpdateB = False\n            mA+=1\n        else:\n            break\n    return mA+mB \n\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int,input().split(\" \")))\n    out = ans(n,a)\n    print(out)\n    t-=1"
        },
        {
            "language": 3,
            "solution": "getn = lambda  : int(input())\ngetlist = lambda : list(map(int, input().split(\" \")))\n\n\ndef solve():\n    n = getn()\n    arr = getlist()\n    arr.sort()\n    left = [arr[0]]\n    l = 1 if arr[0] == 0 else 0\n    right = []\n    r = 0\n\n    for i in range(1, len(arr)):\n        num = arr[i]\n        if l == num:\n            l += 1\n            left.append(num) \n        elif left[-1] < l < num:\n            l = left[-1] + 1\n            left.append(num)\n        else:\n            last_r = right[-1] if len(right) else 0\n            if r == num:\n                r += 1\n                right.append(num)\n            elif last_r < r <= num:\n                r = last_r + 1\n                right.append(num)\n            else:\n                right.append(num)\n    print(l+r)\n    return\n    \nt = getn()\nwhile t > 0:\n    solve()\n    t -= 1"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A {\n    public static void main(String[] args) {\n        FastScanner fs = new FastScanner();\n        int T = 0;\n        if(type == 0) T = fs.nextInt();\n        else if(type == 1) T = 1;\n        for(int t=0;t<T;t++) algo(fs);\n    }\n\n    static int type = 0; // 0 - known tcs, 1 - only 1 tcs\n\n    public static void algo(FastScanner fs) {\n        int N = fs.nextInt();\n        int[] A = fs.readArray(N);\n        HashMap<Integer, Integer> m = new HashMap<>();\n        for(int i : A) {\n            if(!m.containsKey(i)) m.put(i, 0);\n            int c = m.get(i);\n            c++;\n            m.put(i,c);\n        }\n        boolean a = true, b = true;\n        int minA = 0, minB = 0;\n        for(int i=0;i<101;i++) {\n            int c = 0;\n            if(m.containsKey(i)) c= m.get(i);\n            //System.out.println(i + \",\" + c);\n            if(a && b) {\n                if(c == 0) {\n                    a = false; b = false;\n                    minA = i; minB = i;\n                    break;\n                }\n                else if(c == 1) {\n                    a = false;\n                    minA = i;\n                }\n                else {\n\n                }\n            }\n            else {\n                if(c == 0) {\n                    b = false;\n                    minB = i;\n                    break;\n                }\n                else {\n\n                }\n            }\n        }\n        System.out.println(minA + minB);\n    }\n\n    static class FastScanner {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st=new StringTokenizer(\"\");\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st=new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        int[] readArray(int n) {\n            int[] a=new int[n];\n            for (int i=0; i<n; i++) a[i]=nextInt();\n            return a;\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    x=max(a)+1\n    count=[a.count(i) for i in range(x+1)]\n    ans=0\n    for i in range(len(count)):\n        if count[i]>0:\n            count[i]-=1\n        else:\n            ans+=i\n            break\n    for i in range(len(count)):\n        if count[i]>0:\n            count[i]-=1\n        else:\n            ans+=i\n            break\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(3)\nusing namespace std;\ninline long long read() {\n  long long x = 0, f = 1;\n  char c = getchar();\n  while (c != '-' && (c < '0' || c > '9')) c = getchar();\n  if (c == '-') f = -1, c = getchar();\n  while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n  return f * x;\n}\nconst long long N = 2e5 + 7;\nconst long long M = 1e9 + 7;\nconst long long MAXN = 2e18 + 7;\nconst long long Mod = 1004535809;\nlong long _, i, j, k, n, m, p, q, s, T, t, l, r, o, u, v, w, x, y, z, ans, nex,\n    sum, num, len, st, en, sx, sy, tx, ty, th, ma, mi, mod, op, res, flag, cas,\n    ret, mid, cnt, now, tmp, rt;\nlong long a[N], b[N], c[N], dp[N];\nchar ch;\nvector<long long> g[N], h;\nstring s1, s2, s3;\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  long long T = 1;\n  T = read();\n  while (T--) {\n    n = read();\n    for (i = 0; i <= 107; i++) c[i] = 0;\n    for (i = 1; i <= n; i++) {\n      u = read();\n      c[u]++;\n    }\n    for (i = 0; i < 107; i++)\n      if (c[i] < 2) break;\n    for (j = 0; j < 107; j++)\n      if (c[j] < 1) break;\n    printf(\"%lld\\n\", i + j);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nt = int(sys.stdin.readline())\n\nans_arr=[]\n\nfor i in range(t):\n\tn=int(sys.stdin.readline())\n\n\ta=[int(j) for j in sys.stdin.readline().split()]\n\t\n\tans=0\n\n\tfor mex in range(101):\n\t\t\n\t\ttmp=0\n\n\t\td={}\n\t\tfor p in range(n):\n\t\t\tif(a[p] in d):\n\t\t\t\td[a[p]]+=1\n\t\t\telse:\n\t\t\t\td[a[p]]=1\n\n\t\tflag=True\n\t\tfor h in range(mex):\n\t\t\tif(h not in d):\n\t\t\t\tflag=False\n\t\t\t\tbreak\n\t\t\telif(d[h]==0):\n\t\t\t\tflag=False\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\td[h]-=1\n\t\t\n\t\tif(flag):\n\t\t\ttmp=mex\n\n\t\t\tarr=[]\n\n\t\t\tfor k in d:\n\t\t\t\tif(d[k]>0):\n\t\t\t\t\tarr.append(k)\n\n\t\t\tarr.sort()\n\n\t\t\tprev=0\n\t\t\tfor w in range(len(arr)):\n\t\t\t\tif(prev==arr[w]):\n\t\t\t\t\tprev+=1\n\t\t\t\telif(prev<arr[w]):\n\t\t\t\t\tbreak\n\n\t\t\ttmp+=prev\n\n\t\t\tans=max(ans,tmp)\n\n\tans_arr.append(str(ans))\n\nprint(\"\\n\".join(ans_arr))"
        },
        {
            "language": 3,
            "solution": "def sort(l):\n    for i in range(len(l)-1):\n        for j in range(len(l)-i-1):\n            if l[j]>l[j+1]:\n                l[j],l[j+1]=l[j+1],l[j]\n    return l\n\ndef subset(l):\n    l=sort(l)\n    l.append(-1)\n    A=[]\n    B=[]\n    i=0\n    while i < (len(l)-1):\n        if l[i]==l[i+1]:\n            A.append(l[i])\n            B.append(l[i])\n            i=i+1\n        else:\n            A.append(l[i])\n        i=i+1\n        a=set(A)\n        b=set(B)\n    return a,b\n\ndef mex(s):\n    s=list(s)\n    i=0\n    while i<len(s):\n        if s[i]!=i:\n            return i\n        i=i+1\n    return i\n\ncase=int(input())\nwhile case:\n    n=int(input())\n    lst=input().split(' ')\n    for i in range(len(lst)):\n        lst[i]=int(lst[i])\n    A,B=subset(lst)\n    print(mex(A)+mex(B))\n    case=case-1"
        },
        {
            "language": 3,
            "solution": "import math\nimport collections\n\ndef solve(n, a):\n    ans = 0\n    for i in range(0, 101):\n        if a.count(i) > 0:\n            a.remove(i)\n        else:\n            ans += i\n            break\n    for i in range(0, 101):\n        if a.count(i) > 0:\n            a.remove(i)\n        else:\n            ans += i\n            break\n    return ans\n    \nt = int(input())\nfor t in range(t):\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    result = solve(n, a)\n    print(result)\n"
        },
        {
            "language": 1,
            "solution": "for _ in range(int(raw_input())):\n    n = int(raw_input())\n    arr = map(int, raw_input().split())\n    c = [0] * 101\n    for i in arr:\n        c[i] += 1\n    flag = True\n    t1,t2 = 0,0\n    for i in range(0, 101):\n        if c[i] == 1 and flag:\n            t1 = i\n            flag = False\n        elif c[i] == 0:\n            t2 = i\n            if t1 == 0 and c[0] != 1:\n                t1 = i\n            break\n            \n\n    print t1+t2"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main {\n    static class Scan {\n        private byte[] buf=new byte[1024];\n        private int index;\n        private InputStream in;\n        private int total;\n        public Scan()\n        {\n            in=System.in;\n        }\n        public int scan()throws IOException\n        {\n            if(total<0)\n            throw new InputMismatchException();\n            if(index>=total)\n            {\n                index=0;\n                total=in.read(buf);\n                if(total<=0)\n                return -1;\n            }\n            return buf[index++];\n        }\n        public int scanInt()throws IOException\n        {\n            int integer=0;\n            int n=scan();\n            while(isWhiteSpace(n))\n            n=scan();\n            int neg=1;\n            if(n=='-')\n            {\n                neg=-1;\n                n=scan();\n            }\n            while(!isWhiteSpace(n))\n            {\n                if(n>='0'&&n<='9')\n                {\n                    integer*=10;\n                    integer+=n-'0';\n                    n=scan();\n                }\n                else throw new InputMismatchException();\n            }\n            return neg*integer;\n        }\n        public double scanDouble()throws IOException\n        {\n            double doub=0;\n            int n=scan();\n            while(isWhiteSpace(n))\n            n=scan();\n            int neg=1;\n            if(n=='-')\n            {\n                neg=-1;\n                n=scan();\n            }\n            while(!isWhiteSpace(n)&&n!='.')\n            {\n                if(n>='0'&&n<='9')\n                {\n                    doub*=10;\n                    doub+=n-'0';\n                    n=scan();\n                }\n                else throw new InputMismatchException();\n            }\n            if(n=='.')\n            {\n                n=scan();\n                double temp=1;\n                while(!isWhiteSpace(n))\n                {\n                    if(n>='0'&&n<='9')\n                    {\n                        temp/=10;\n                        doub+=(n-'0')*temp;\n                        n=scan();\n                    }\n                    else throw new InputMismatchException();\n                }\n            }\n            return doub*neg;\n        }\n        public String scanString()throws IOException\n        {\n            StringBuilder sb=new StringBuilder();\n            int n=scan();\n            while(isWhiteSpace(n))\n            n=scan();\n            while(!isWhiteSpace(n))\n            {\n                sb.append((char)n);\n                n=scan();\n            }\n            return sb.toString();\n        }\n        private boolean isWhiteSpace(int n)\n        {\n            if(n==' '||n=='\\n'||n=='\\r'||n=='\\t'||n==-1)\n            return true;\n            return false;\n        }\n    }\n    public static void main(String args[]) throws IOException {\n        Scan input=new Scan();\n        int test=input.scanInt();\n        for(int tt=1;tt<=test;tt++) {\n            int n=input.scanInt();\n            int arr[]=new int[101];\n            for(int i=0;i<n;i++) {\n                arr[input.scanInt()]++;\n            }\n            int set1[]=new int[105];\n            int set2[]=new int[105];\n            for(int i=0;i<arr.length;i++) {\n                if(arr[i]==0) {\n                    continue;\n                }\n                if(arr[i]==1) {\n                    set1[i]++;\n                }\n                else {\n                    set1[i]++;\n                    set2[i]++;\n                }\n            }\n            int mex1=0,mex2=0;\n            for(int i=0;i<set1.length;i++) {\n                if(set1[i]==0) {\n                    mex1=i;\n                    break;\n                }\n            }\n            for(int i=0;i<set2.length;i++) {\n                if(set2[i]==0) {\n                    mex2=i;\n                    break;\n                }\n            }\n            System.out.println(mex1+mex2);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nfor _ in range(n):\n    k=int(input())\n    a=list(map(int,input().split(\" \")))\n    a.sort()\n    r=[]\n    l=[]\n    for i in a[:]:\n        if a.count(i)==1 and i not in r[:]:\n            r.append(i)\n        elif a.count(i)>=2 and i not in r[:]:\n            r.append(i)\n            l.append(i)\n    #print(\"r\",r)\n    #print(\"l\",l)\n    for i in range(101):\n        if i not in r[:]:\n            q=i\n            break\n    for i in range(101):\n        if i not in l[:]:\n            w=i\n            break\n    print(q+w)\n\n       "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t, n, j, ans, c, y, i, f, k, z, l, r, h, m, p, x, q, count,\n      temp, mid, a, b;\n  string s;\n  char ch;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    vector<int> v(101, 0);\n    for (i = 0; i < n; i++) {\n      cin >> x;\n      v[x]++;\n    }\n    y = 0;\n    ans = 0;\n    for (i = 0; i < 101; i++) {\n      if (v[i] >= 2) continue;\n      if (v[i] == 1) {\n        if (y == 1) continue;\n        ans += i;\n        y += 1;\n      } else if (v[i] == 0) {\n        if (y == 0)\n          ans += 2 * i;\n        else\n          ans += i;\n        break;\n      }\n      if (y == 2) break;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(A,B,m):\n\tfind = [i for i in range(0,m+2)]\n\t# print(find)\n\n\tfor item in find:\n\t\tif item not in A:\n\t\t\tmex_A = item\n\t\t\tbreak\n\n\tfor item in find:\n\t\tif item not in B:\n\t\t\tmex_B = item\n\t\t\tbreak\n\n\treturn (mex_A + mex_B)\n\n\n\n\n\n\ndef solve(a):\n\ta.sort()\n\tm = max(a)\n\tA = []\n\tB = []\n\tfor item in a:\n\t\tif item not in A:\n\t\t\tA.append(item)\n\t\telse:\n\t\t\tB.append(item)\n\t# print(A,'--',B)\n\treturn mex(list(set(A)),list(set(B)),m)\n\n\n\n\nif __name__ == \"__main__\":\n\tt = int(input())\n\n\tfor _ in range(t):\n\t\tn = int(input())\n\t\ta = list(map(int,input().split()))\n\t\tprint(solve(a))"
        },
        {
            "language": 3,
            "solution": "import math as mt\nimport sys, string\nfrom collections import Counter, defaultdict\ninput = sys.stdin.readline\n\n# input functions\nI = lambda : int(input())\nM = lambda : map(int, input().split())\nARR = lambda: list(map(int, input().split()))\n\ndef mex(arr):\n    i = 0\n    while True:\n        if i not in arr:\n            return i\n        i += 1\n\ndef main():\n    n = I()\n    arr = ARR()\n    arr.sort()\n    a, b = [], []\n    lst = -1\n    for i in range(n):\n        if lst + 1 == arr[i]:\n            lst = arr[i]\n            a.append(arr[i])\n        else:\n            b.append(arr[i])\n    print(mex(a)+mex(b))\n\n# testcases\ntc = I()\nfor _ in range(tc):\n    main()"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n  n=int(input())\n  output=0\n  lis=list(map(int,input().split()))\n  dic=Counter(lis)\n  c=0\n  for i in range(101):\n    if i in dic:\n      dic[i]-=1\n      if dic[i]==0:\n        del dic[i]\n\n      continue\n    else:\n      output+=i \n      break\n  for i in range(101):\n    if i in dic:\n      dic[i]-=1\n      if dic[i]==0:\n        del dic[i]\n\n      continue\n    else:\n      output+=i \n      break\n  print(output)\n\n \t\t \t\t \t \t \t\t\t  \t\t   \t\t\t   \t"
        },
        {
            "language": 4,
            "solution": "// package codeforces;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class A {\n\tstatic FastReader sc=new FastReader();\n\n\tpublic static void main(String[] args) {\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n=sc.nextInt();\n\t\t\tint a[]=readArray(n);\n\t\t\tMap<Integer,Integer> map=new HashMap<>();\n\t\t\tfor(int e:a) {\n\t\t\t\tif(map.containsKey(e)) {\n\t\t\t\t\tint c=map.get(e);\n\t\t\t\t\tmap.put(e,++c);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmap.put(e, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint i=0;\n\t\t\tint j1=0;\n\t\t\twhile(i<n) {\n\t\t\t\tif((map.containsKey(i)) && map.get(i)>1) {\n\t\t\t\t\tj1++;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile(true) {\n\t\t\t\tif(map.containsKey(i))i++;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tj1+=i;\n\t\t\tSystem.out.println(j1);\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\t\n\t}\n\t\n\tstatic void print(int a[]) {\n\t\tfor(int e:a) {\n\t\t\tSystem.out.print(e+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n\tstatic int[] readArray(int n) {\n\t\tint a[]=new int [n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=sc.nextInt();\n\t\t}\n\t\treturn a;\n\t}\n\tstatic class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> ab(101, 0);\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      ab[x]++;\n    }\n    int a = -1;\n    int b = -1;\n    while (ab[a + 1] > 0) {\n      a++;\n    }\n    while (ab[b + 1] > 1) {\n      b++;\n    }\n    cout << a + b + 2 << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long long mod = 1000007;\nusing namespace std;\nconst int nax = 1e5 + 9;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  map<int, int> mp;\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n    mp[v[i]]++;\n  }\n  int totmex = 0, submex = 0;\n  for (int i = 0; i <= 101; i++) {\n    if (mp[i] == 0) {\n      totmex = i;\n      break;\n    }\n  }\n  sort(v.begin(), v.end());\n  for (int i = 0; i <= 101; i++) {\n    if (mp[i] < 2) {\n      submex = i;\n      break;\n    }\n  }\n  cout << totmex + submex << \"\\n\";\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author revanth\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        ASubsetMex solver = new ASubsetMex();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class ASubsetMex {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int t = in.nextInt();\n            while (t-- > 0) {\n                int n = in.nextInt();\n                int[] a = new int[101];\n                for (int i = 0; i < n; i++)\n                    a[in.nextInt()]++;\n                int x = 0, y = 0;\n                for (int i = 0; i <= 100; i++) {\n                    if (a[i] == 0) {\n                        x = i;\n                        break;\n                    }\n                }\n                for (int i = 0; i <= 100; i++) {\n                    if (a[i] <= 1) {\n                        y = i;\n                        break;\n                    }\n                }\n                out.println(x + y);\n            }\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void println(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1 << 16];\n        private int curChar;\n        private int snumChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int snext() {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) {\n                curChar = 0;\n                try {\n                    snumChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = snext();\n            while (isSpaceChar(c))\n                c = snext();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = snext();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter,defaultdict\nt=int(input())\nfor _ in range(t):\n  n=int(input())\n  inp=(list(map(int,input().split())))\n  c=Counter(inp)\n  \n  c=dict(sorted(c.items(),key = lambda i: i[0]))\n  \n  ans=0\n  i=0\n  while(1):\n    if i in c:\n      if c[i]>1:\n        ans+=1\n        i+=1\n      else:\n        break  \n    else:\n      break\n\n    \n  f=0  \n  for j in range(i,len(set(inp))):\n    if j not in c:\n      ans+=j  \n      f=1\n      break\n  if f==0:\n    ans+=len(set(inp))    \n  print(ans)    \n  \n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import math\nt = int(input())\nans = []\ndef solve(arr):\n    sets = 2\n    i = 0\n    ans = 0\n    while sets > 0:\n        cnt = arr.count(i)\n        if cnt == 0:\n            return ans\n        if cnt < sets:\n            sets -= 1\n        ans += sets\n        i += 1\n    return ans\n\n\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans.append(solve(arr))\n\n#print(ans)\nfor test in ans:\n   print(test)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class temp{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int testCase = sc.nextInt();\n        while (testCase-- > 0) {\n            int n = sc.nextInt();\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) arr[i] = sc.nextInt();\n            Arrays.sort(arr);\n            HashMap<Integer,Integer> map = new HashMap<>();\n            for(int ele : arr){\n                if(!map.containsKey(ele))\n                    map.put(ele,0);\n                map.put(ele,map.get(ele)+1);\n            }\n            Set<Integer> s1 = new HashSet<>();\n            Set<Integer> s2 = new HashSet<>();\n            for(int ele : map.keySet()){\n                s1.add(ele);\n                map.put(ele,map.get(ele)-1);\n            }\n            for(int ele : map.keySet()) {\n                if(map.get(ele)==0)continue;\n                s2.add(ele);\n            }\n            int min1 = -1;\n            int min2 = -1;\n            int i = 0;\n            for( i=0;i<s1.size();i++) {\n                if (!s1.contains(i)) {\n                    min1 = i;\n                    break;\n                }\n            }\n            if(min1==-1)min1=i;\n            i=0;\n            for( i=0;i<s2.size();i++) {\n                if (!s2.contains(i)) {\n                    min2 = i;\n                    break;\n                }\n            }\n            if(min2==-1)min2=i;\n            System.out.println(min1+min2);\n\n        }\n    }\n} "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn= int(input())\n\tl=sorted(list(map(int,input().split())))\n\tans=0\n\tj=0\n\tk=0\n\tfor i in range(n):\n\t\tif(l.count(i)==0):\n\t\t\tif( j==0):\n\t\t\t\tans+=(2*i)\n\t\t\t\tj+=2\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tans+=i\n\t\t\t\tj+=1\n\t\t\t\tk=0\n\t\t\t\tbreak\n\t\telif((j==1) and (l.count(i)==1)):\n\t\t\tk=i+1\n\t\telif(l.count(i)==1):\n\t\t\tj+=1\n\t\t\tans+=i\n\t\tif(j==2):\n\t\t\tbreak\n\tif(n==1 and l[0]==0):\n\t\tk=1\n\tprint(ans+k)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    c = [0 for i in range(102)]\n    for i in range(len(x)):\n        c[x[i]] += 1\n    mex1 = mex2 = -1\n    for i in range(102):\n        if c[i] == 0 and mex1 == -1:\n            mex1 = i\n            mex2 = i\n            break\n        elif c[i] == 0:\n            mex2 = i\n            break\n        elif c[i] == 1 and mex1 == -1:\n            mex1 = i\n            continue\n        elif c[i] == 1:\n            continue\n        else:\n            continue\n    print(mex1 + mex2)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.min;\n\npublic class Main {\n\n    void solve() throws Throwable {\n        int t = readInt();\n        for (int test = 0; test < t; test++) {\n            int n = readInt();\n            int[] a = readIntArray(n);\n            int[] cnt = new int[200];\n            for (int i = 0; i < n; i++) {\n                cnt[a[i]]++;\n            }\n            int first = -1, second = -1;\n            for (int i = 0; i < cnt.length; i++) {\n                if (cnt[i] == 0) {\n                    if (first == -1) {\n                        first = i;\n                    }\n                    if (second == -1) {\n                        second = i;\n                    }\n                }\n                if (cnt[i] == 1) {\n                    if (second == -1) {\n                        second = i;\n                    }\n                }\n            }\n            System.out.println(first + second);\n        }\n    }\n\n    //-------------------------------------------------\n\n    final boolean ONLINE_JUDGE = !new File(\"input.txt\").exists();\n\n    BufferedReader in;\n    PrintWriter out;\n    StringTokenizer tok;\n\n    public void run() {\n        Runnable run = () -> {\n            try {\n                long startTime = System.currentTimeMillis();\n                Locale.setDefault(Locale.US);\n                if (ONLINE_JUDGE) {\n                    in = new BufferedReader(new InputStreamReader(System.in));\n                    out = new PrintWriter(System.out);\n                } else {\n                    in = new BufferedReader(new FileReader(\"input.txt\"));\n                    out = new PrintWriter(\"output.txt\");\n                }\n                tok = new StringTokenizer(\"\");\n                solve();\n                in.close();\n                out.close();\n                long endTime = System.currentTimeMillis();\n                long totalMemory = Runtime.getRuntime().totalMemory();\n                long freeMemory = Runtime.getRuntime().freeMemory();\n                System.err.println();\n                System.err.println(\"Time = \" + (endTime - startTime) + \" ms\");\n                //System.err.println(\"Memory = \" + ((totalMemory - freeMemory) / 1024) + \" KB\");\n            } catch (Throwable e) {\n                e.printStackTrace(System.err);\n                System.exit(-1);\n            }\n        };\n        new Thread(null, run, \"run\", 256 * 1024 * 1024).start();\n        min(0, 0);\n    }\n\n    String readString() {\n        while (!tok.hasMoreTokens()) {\n            String line;\n            try {\n                line = in.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n            if (line == null) return null;\n            tok = new StringTokenizer(line);\n        }\n        return tok.nextToken();\n    }\n\n    int readInt() {\n        return Integer.parseInt(readString());\n    }\n\n    long readLong() throws IOException {\n        return Long.parseLong(readString());\n    }\n\n    double readDouble() throws IOException {\n        return Double.parseDouble(readString());\n    }\n\n    void debug(Object... o) {\n        if (!ONLINE_JUDGE) {\n            System.err.println(Arrays.deepToString(o));\n        }\n    }\n\n    /*long binpow(long a, long n) {\n        long r = 1;\n        while (n > 0) {\n            if ((n & 1) > 0) {\n                r *= a;\n            }\n            a *= a;\n            n /= 2;\n        }\n        return r;\n    }/**/\n\n    long binpow(long a, long n, long mod) {\n        long r = 1;\n        while (n > 0) {\n            if ((n & 1) > 0) {\n                r = (r * a) % mod;\n            }\n            a = (a * a) % mod;\n            n /= 2;\n        }\n        return r;\n    }/**/\n\n    static long gcd(long x, long y) {\n        return y == 0 ? x : gcd(y, x % y);\n    }\n\n    private long[] readLongArray(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = readLong();\n        }\n        return a;\n    }\n\n    private int[] readIntArray(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = readInt();\n        }\n        return a;\n    }\n\n    public static void main(String[] args) {\n        new Main().run();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n1=int(input())\nfor test in range (n1):\n    n = int(input())\n    set1=[int(y) for y in input().split()]\n    set1.sort()\n    x=0\n\n    for j in range(2):\n        cur=0\n        for i in range(len(set1)):\n            if(set1[i]==cur):\n                cur=cur+1\n                set1[i]=-1\n            elif(set1[i]>cur ):\n                x=x+cur\n                break\n            if(i==len(set1)-1):\n                x=x+cur\n                \n            \n\n    print(x)\n            \n                                \n                \n            \n            \n            \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cerr << '{';\n  __print(x.first);\n  cerr << ',';\n  __print(x.second);\n  cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cerr << '{';\n  for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> a(101);\n    int e;\n    for (int i = 0; i < n; i++) cin >> e, a[e]++;\n    int mex = 0;\n    int ans = 0;\n    while (mex <= 100 && a[mex] >= 2) mex++;\n    ans += mex;\n    while (mex <= 100 && a[mex] >= 1) mex++;\n    ans += mex;\n    cout << ans;\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n\tn = int(input())\n\tlist1 = list(map(int , input().split()))\n\tlist1.sort()\n\tdict1 = {}\n\tdict2 = {}\n\tfor j in range(n):\n\t\tif(list1[j] in dict1):\n\t\t\tif(dict1[list1[j]] == 1 and list1[j] not in dict2):\n\t\t\t\tdict2[list1[j]] = 1\n\t\t\telse:\n\t\t\t\tdict1[list1[j]] += 1\n\t\telse:\n\t\t\tdict1[list1[j]] = 1\n\tb = list1[-1]\n\tfor j in range(b+2):\n\t\tif(j not in dict1):\n\t\t\tc = j\n\t\t\tbreak\n\t\telse:\n\t\t\tcontinue\n\tfor j in range(b+2):\n\t\tif(j not in dict2):\n\t\t\td = j\n\t\t\tbreak\n\t\telse:\n\t\t\tcontinue\n\tprint(c+d)"
        },
        {
            "language": 3,
            "solution": "import sys, math\nimport io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n# from itertools import permutations,combinations\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var): sys.stdout.write(' '.join(map(str, var)) + '\\n')\ndef out(var): sys.stdout.write(str(var) + '\\n')\nfrom decimal import Decimal\n# from fractions import Fraction\n# sys.setrecursionlimit(100000)\nmod = int(1e9) + 7\nINF=100000\n\nfor t in range(int(data())):\n    n=int(data())\n    a=mdata()\n    d=dd(int)\n    for i in a:\n        d[i]+=1\n    ans1,ans2=INF,0\n    for i in range(max(a)+2):\n        if d[i]==1:\n            ans1=min(ans1,i)\n        elif d[i]==0:\n            ans1=min(ans1,i)\n            ans2=i\n            break\n    out(ans1+ans2)\n\n"
        },
        {
            "language": 3,
            "solution": "from functools import reduce\nimport os\nimport sys\nfrom collections import *\n#from fractions import *\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom io import BytesIO, IOBase\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ndef value(): return tuple(map(int, input().split())) # multiple values\ndef arr(): return [int(i) for i in input().split()] # array input\ndef sarr(): return [int(i) for i in input()] #array from string\ndef starr(): return [str(x) for x in input().split()] #string array\ndef inn(): return int(input()) # integer input\ndef svalue(): return tuple(map(str, input().split())) #multiple string values\ndef parr(): return [(value()) for i in range(n)] # array of pairs\nmo = 1000000007\n# ----------------------------CODE------------------------------#\nfor _ in range(inn()):\n    n=inn()\n    a=arr()\n    d=defaultdict(int)\n    for i in a:\n        d[i]+=1\n    flag=0\n    ans=0\n    for i in range(105):\n        if(flag==0):\n            if(d[i]==0):\n                ans+=2*i\n                break\n            elif(d[i]==1):\n                ans+=i\n                flag=1\n        else:\n            if(d[i]==0):\n                ans+=i\n                break\n    print(ans)\n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n\n    arr.sort()\n    \n    hash1 = [0]*101\n    for i in arr:\n        hash1[i] += 1\n    f_done = False\n\n    ans = 0\n    for i in range(101):\n        if hash1[i]>1:\n            continue\n        if hash1[i]==0:\n            if (not f_done):\n                ans = 2*i\n            else:\n                ans += i\n            break\n        elif hash1[i]==1 and (not f_done):\n            f_done = True\n            ans = i\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "def mex(L):\n\tM=[False]*101\n\tfor i in range(0,len(L)):\n\t\tM[L[i]]=True\n\tfor i in range(0,len(M)):\n\t\tif(not M[i]):\n\t\t\treturn i\n\n\nt=int(input())\nfor i in range(0,t):\n\tn=int(input())\n\tL=list(map(int,input().split()))\n\tL.sort()\n\tcount=0\n\tfor i in range(0,n):\n\t\tif(L[i]==0):\n\t\t\tcount+=1\n\tif(count==0):\n\t\tprint(0)\n\telse:\n\t\tif(count==1):\t\t\t\n\t\t\tprint(mex(L))\n\t\telse:\n\t\t\tM=[0]\n\t\t\tN=[]\n\t\t\tfor i in range(1,n):\n\t\t\t\tif(L[i]==L[i-1]+1):\n\t\t\t\t\tif(M[-1]==L[i-1]):\n\t\t\t\t\t\tM.append(L[i])\n\t\t\t\t\telse:\n\t\t\t\t\t\tN.append(L[i])\n\t\t\t\telse:\n\t\t\t\t\tif(M[-1]==L[i-1]):\n\t\t\t\t\t\tN.append(L[i])\n\t\t\t\t\telse:\n\t\t\t\t\t\tM.append(L[i])\n\t\t\t\n\t\t\tprint(mex(M)+mex(N))\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n = int(input())\n    A = list(map(int,input().split()))\n    A = sorted(A)\n    cnt = 0\n    MexA = []\n    ans = 0\n    while cnt in A:\n        A.remove(cnt)\n        MexA.append(cnt)\n        cnt += 1\n    cnt = 0\n    while cnt in A:\n        ans += 1\n        cnt += 1\n    \n    cnt = 0\n    for k in MexA:\n        if k == cnt:\n            ans += 1\n            cnt += 1\n        else:break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "def mex(crr):\n    crr = list(set(crr))\n    if len(crr) ==0:\n        return 0\n    else:\n        ans = len(crr)\n        for i in range(0,len(crr)):\n            if crr[i] == i:\n                pass\n            else:\n                ans = i\n                break\n        # print('aa',ans)\n        return ans\n\n\nfrom collections import deque,defaultdict,Counter,OrderedDict\n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    a,b=[],[]\n\n    for i in arr:\n        if i not in a:\n            a.append(i)\n        else:\n            b.append(i)\n\n    a.sort()\n    b.sort()\n    x=mex(a)\n    y= mex(b)\n\n    print(x+y)"
        },
        {
            "language": 3,
            "solution": "\n\nif __name__ == \"__main__\":\n    for t in  range(int(input())):\n        n = int(input())\n        set1_list_form =  list(map(int,input().split()))\n        l1 = [0 for i in range(0,101)]\n        set1 = set(set1_list_form)\n        for i in set1:\n            l1[i] = set1_list_form.count(i)\n            #print(i,l1[i])\n\n        \n        a = 0\n        for i in range(0,101):\n            if l1[i] == 0:\n                a += i\n                break\n        for i in range(0,101):\n            if l1[i] <= 1:\n                a += i\n                break\n\n        print(a)    \n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "for __ in range(int(input())):\n    n = int(input())\n    c = [0 for _ in range(101)]\n    a = input().split()\n    for x in a:\n        c[int(x)] += 1\n    k = 0\n    while c[k] >= 2:\n        k += 1\n    p = 0\n    while c[p]:\n        p += 1\n    print(p + k)"
        },
        {
            "language": 3,
            "solution": "from sys import *\nfrom math import *\nt=int(stdin.readline())\nfor _ in range(t):\n    n=int(stdin.readline())\n    a=list(map(int,stdin.readline().split()))\n    a.sort()\n    x=[a[0]]\n    j=[]\n    if x[0]!=0:\n        m1=0\n    else:\n        j=[0]\n        k=0\n        for i in range(1,n):\n            if x[k]+1==a[i]:\n                x.append(a[i])\n                j.append(i)\n                k+=1\n        m1 = max(x) + 1\n    y=[]\n    for i in range(n):\n        if i not in j:\n            y.append(a[i])\n    if len(y)==0:\n        m2=0\n    else:\n        y.sort()\n        if y[0]!=0:\n            m2=0\n        else:\n            f=0\n            for i in range(len(y)):\n                if y[i]+1 not in y:\n                    m2=y[i]+1\n                    f=1\n                    break\n            if f==0:\n                m2=max(y)+1\n    print(m1+m2)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor j in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = max(a)\n    s = [0 for i in range(m+2)]\n    s1 = [0 for i in range(m+2)]\n    for i in a:\n        if not s[i]:\n            s[i] += 1\n        else:\n            s1[i] += 1\n    res = 0\n    r = 0\n    r1 = 0\n    for i in range(len(s)):\n        if s[i] == 0 and not r:\n            res += i\n            r = 1\n        if s1[i] == 0 and not r1:\n            res += i\n            r1 = 1\n    print(res)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.util.*;\n \npublic class Main {\n\tstatic final int INF = (int) (1e9 + 10);\n\tstatic final int MOD = (int) (1e9 + 7);\n \n\t// static final int N = (int) (4e5 + 5);\n\t// static ArrayList<Integer>[] graph;\n\t// static boolean visited[];\n\t// static long size[];\n \n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\tFastReader sc = new FastReader();\n\t\tPrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint [] arr = new int[n];\n\t\t\tint [] map = new int [101];\n\t\t\tlong pro = 1;\n\t\t\tint z =0;\n\t\t\tfor(int i =0 ; i < n ; i++){\n\t\t\t    arr[i] = sc.nextInt();\n\t\t\t    map[arr[i]]++;\n\t\t\t}\n\t\t\tint a =0;\n\t\t\tfor(int i =0 ; i < 101 ; i++){\n\t\t\t    if(map[i] < 2){\n\t\t\t        a = i;\n\t\t\t        break;\n\t\t\t    }\n\t\t\t}\n\t\t\tint b =0;\n\t\t\tfor(int i =0 ; i < 101 ; i++){\n\t\t\t    if(map[i] == 0){\n\t\t\t        b = i;\n\t\t\t        break;\n\t\t\t    }\n\t\t\t}\n\t\t\tpr.println((a+b));\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n// \t\t\tif(n%2!=0){\n\t\t\t    \n// \t\t\t    boolean got = false;\n// \t\t\t    int i=0;\n// \t\t\t    for(int num : set){\n// \t\t\t        if(num != i){\n// \t\t\t            pr.println(i);\n// \t\t\t            got = true;\n// \t\t\t            break;\n// \t\t\t        }\n// \t\t\t        i++;\n// \t\t\t    }\n// \t\t\t    if(!got){\n// \t\t\t        pr.println(set.size());\n// \t\t\t    }\n// \t\t\t}else{\n// \t\t\t    Arrays.sort(arr);\n\t\t\t    \n// \t\t\t}\n// // // \t\t\tpr.println(ans);\n \n\t\t}\n\t\tpr.flush();\n\t\tpr.close();\n\t}\n \n\t/*\n\t * Template From Here\n\t */\n\tprivate static boolean possible(long[] arr, int[] f, long mid, long k) {\n\t\tlong c = 0;\n \n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tif ((arr[i] * f[f.length - i - 1]) > mid) {\n\t\t\t\tc += (arr[i] - (mid / f[f.length - i - 1]));\n\t\t\t}\n\t\t}\n\t\t// System.out.println(mid+\" \"+c);\n\t\tif (c <= k)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n \n\tpublic static int lowerBound(ArrayList<Integer> array, int length, long value) {\n\t\tint low = 0;\n\t\tint high = length;\n\t\twhile (low < high) {\n\t\t\tfinal int mid = (low + high) / 2;\n\t\t\tif (value <= array.get(mid)) {\n\t\t\t\thigh = mid;\n\t\t\t} else {\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t}\n\t\treturn low;\n\t}\n \n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n \n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n \n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n \n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n \n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n \n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n \n\tstatic long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}\n \n\tstatic long lcm(long a, long b) {\n\t\treturn (a * b) / gcd(a, b);\n\t}\n \n\tpublic static void sortbyColumn(int[][] att, int col) {\n\t\t// Using built-in sort function Arrays.sort\n\t\tArrays.sort(att, new Comparator<int[]>() {\n \n\t\t\t@Override\n\t\t\t// Compare values according to columns\n\t\t\tpublic int compare(final int[] entry1, final int[] entry2) {\n \n\t\t\t\t// To sort in descending order revert\n\t\t\t\t// the '>' Operator\n\t\t\t\t// if (entry1[col] > entry2[col])\n\t\t\t\t// return 1;\n\t\t\t\t// else //(entry1[col] >= entry2[col])\n\t\t\t\t// return -1;\n\t\t\t\treturn new Integer(entry1[col]).compareTo(entry2[col]);\n\t\t\t\t// return entry1[col].\n\t\t\t}\n\t\t}); // End of function call sort().\n\t}\n \n\tstatic class pair {\n\t\tint V, I;\n \n\t\tpair(int v, int i) {\n\t\t\tV = v;\n\t\t\tI = i;\n\t\t}\n\t}\n \n\tpublic static int[] swap(int data[], int left, int right) {\n\t\tint temp = data[left];\n\t\tdata[left] = data[right];\n\t\tdata[right] = temp;\n\t\treturn data;\n\t}\n \n\tpublic static int[] reverse(int data[], int left, int right) {\n\t\twhile (left < right) {\n\t\t\tint temp = data[left];\n\t\t\tdata[left++] = data[right];\n\t\t\tdata[right--] = temp;\n\t\t}\n\t\treturn data;\n\t}\n \n\tpublic static boolean findNextPermutation(int data[]) {\n\t\tif (data.length <= 1)\n\t\t\treturn false;\n \n\t\tint last = data.length - 2;\n\t\twhile (last >= 0) {\n\t\t\tif (data[last] < data[last + 1]) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlast--;\n\t\t}\n\t\tif (last < 0)\n\t\t\treturn false;\n \n\t\tint nextGreater = data.length - 1;\n\t\tfor (int i = data.length - 1; i > last; i--) {\n\t\t\tif (data[i] > data[last]) {\n\t\t\t\tnextGreater = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tdata = swap(data, nextGreater, last);\n\t\tdata = reverse(data, last + 1, data.length - 1);\n\t\treturn true;\n\t}\n \n\tstatic long nCr(long n, long r) {\n\t\tif (n == r)\n\t\t\treturn 1;\n\t\treturn fact(n) / (fact(r) * fact(n - r));\n\t}\n \n\tstatic long fact(long n) {\n\t\tlong res = 1;\n\t\tfor (long i = 2; i <= n; i++)\n\t\t\tres = res * i;\n\t\treturn res;\n\t}\n \n\t/*\n\t * static boolean prime[] = new boolean[1000007];\n\t * \n\t * public static void sieveOfEratosthenes(int n) {\n\t * \n\t * for (int i = 0; i < n; i++) prime[i] = true; * for (int p = 2; p * p <=\n\t * n; p++) { // If prime[p] is not changed, then it is a prime if (prime[p]\n\t * == true) { // Update all multiples of p for (int i = p * p; i <= n; i +=\n\t * p) prime[i] = false; } }\n\t * \n\t * // Print all prime numbers // for(int i = 2; i <= n; i++) // { //\n\t * if(prime[i] == true) // System.out.print(i + \" \"); // } }\n\t */\n \n\tstatic long power(long fac2, int y, int p) {\n\t\tlong res = 1;\n\t\tfac2 = fac2 % p;\n\t\twhile (y > 0) {\n\t\t\tif (y % 2 == 1)\n\t\t\t\tres = (res * fac2) % p;\n\t\t\tfac2 = (fac2 * fac2) % p;\n\t\t}\n\t\treturn res;\n\t}\n \n\tstatic long modInverse(long fac2, int p) {\n\t\treturn power(fac2, p - 2, p);\n\t}\n \n\tstatic boolean isPrime(int n) {\n\t\t// Corner cases\n\t\tif (n <= 1)\n\t\t\treturn false;\n\t\tif (n <= 3)\n\t\t\treturn true;\n \n\t\t// This is checked so that we can skip\n\t\t// middle five numbers in below loop\n\t\tif (n % 2 == 0 || n % 3 == 0)\n\t\t\treturn false;\n \n\t\tfor (int i = 5; i * i <= n; i = i + 6)\n\t\t\tif (n % i == 0 || n % (i + 2) == 0)\n\t\t\t\treturn false;\n \n\t\treturn true;\n\t}\n \n\tpublic static BigInteger lcmm(String a, String b) {\n\t\tBigInteger s = new BigInteger(a);\n\t\tBigInteger s1 = new BigInteger(b);\n\t\tBigInteger mul = s.multiply(s1);\n\t\tBigInteger gcd = s.gcd(s1);\n\t\tBigInteger lcm = mul.divide(gcd);\n\t\treturn lcm;\n\t}\n \n}"
        },
        {
            "language": 3,
            "solution": "from sys  import stdin,stdout\n\nst=lambda:list(stdin.readline().strip())\nli=lambda:list(map(int,stdin.readline().split()))\nmp=lambda:map(int,stdin.readline().split())\ninp=lambda:int(stdin.readline())\npr=lambda n: stdout.write(str(n)+\"\\n\")\n\nmod=1000000007\n\ndef solve():\n    n=inp()\n    l=li()\n    s=set(l)\n    if len(s)!=n:\n        x,y=set(),set()\n        for i in l:\n            if i in x:\n                y.add(i)\n            else:\n                x.add(i)\n        for i in range(101):\n            if i not in x:\n                val=i\n                break\n        for i in range(101):\n            if i not in y:\n                vall=i\n                break\n        pr(val+vall)\n    else:\n        for i in range(101):\n            if i not in s:\n                pr(i)\n                break\n                \n            \n\n\nfor _ in range(inp()):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "import sys\n#input=sys.stdin.readline\nt=int(input())\nwhile t:\n    t-=1\n    n=int(input())\n    a=sorted(list(map(int,input().split())))\n    l=[]\n    ate=list(set(a))\n    for i in range(len(ate)):\n        co=a.count(ate[i])\n        l.append([ate[i],co])\n    #print(l)   \n    x=[]\n    y=[]\n    ax=0\n    ay=0\n    ans=0\n    for i in range(len(l)):\n        no=l[i][0]\n        fre=l[i][1]\n        if fre>=2:\n            x.append(no)\n            y.append(no)\n        elif fre==1:\n            x.append(no)\n    \n    if len(x)>=1:\n        x1=0\n\n        for i in range(len(x)):\n            if x[i] !=i:\n                x1=1\n                ax=i\n                break\n        if not x1:\n            ans+=x[len(x)-1]+1\n        else:\n            ans+=ax\n    if len(y)>=1:\n        y1=0\n        \n        for i in range(len(y)):\n            if y[i] !=i:\n                y1=1\n                ay+=i\n                break\n        if not y1:\n            ans+=y[len(y)-1]+1\n        else:\n            ans+=ay\n    print(ans)\n    \n        \n                    "
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\n\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = [0 for i in range(105)]\n    for i in arr:\n        freq[i] += 1\n    b = c = -1\n    for i in range(106):\n        if freq[i] > 0:\n            freq[i] -= 1\n        else:\n            b = i\n            break\n    for i in range(106):\n        if freq[i] > 0:\n            freq[i] -= 1\n        else:\n            c = i\n            break\n    print(b+c)\n    t -= 1\n"
        },
        {
            "language": 3,
            "solution": "import collections\nfor t in range(int(input())):\n    n=int(input())\n    num=sorted(map(int,input().split()),reverse=True)\n    k=collections.defaultdict(int)\n    for i in num:\n        k[i]+=1\n    count=2\n    out=0\n    base=0\n    for i in sorted(k.keys()):\n        if base!=i:\n            out+=base*count\n            count=0\n            break\n        if k[i]==1:\n            if count==2:\n                out+=base\n                count-=1\n        base+=1\n    if count:\n        out+=base*count\n    print(out)"
        },
        {
            "language": 3,
            "solution": "from collections import *\nfrom heapq import *\n\n\ndef find(arr):\n    for i in range(0,102):\n        if i not in arr:\n            return i\n\nt = int(input())\n\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr1 = set()\n    arr2 =  set()\n    arr.sort()\n    l = 0\n    last = -1\n    visit = [False for i in range(n)]\n    for e in arr:\n        if l == 0 or e - last == 1:\n            arr1.add(e)\n            visit[l] = True\n            last = e\n            l += 1\n        elif e == last:\n            l += 1\n            continue\n        else:\n            break\n    for i in range(n):\n        if visit[i] == False:\n            arr2.add(arr[i])\n    # print(arr)\n    # print(visit)\n    # print(arr1)\n    # print(arr2)\n    print(find(arr1) + find(arr2))\n    "
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport heapq as hq\nfrom collections import defaultdict\n\nt = int(input())\nfor tc in range(t):\n    n = int(stdin.readline())\n    ar = list(map(int, stdin.readline().split()))\n\n    c=defaultdict(int)\n    for v in ar:\n        c[v]+=1\n\n    for i in range(102):\n        if c[i]<2:\n            break\n\n    for j in range(102):\n        if c[j]<1:\n            break\n\n    stdout.write(str(i+j) + \"\\n\")"
        },
        {
            "language": 3,
            "solution": "t=int(input())\ni=1\nwhile(i<=t):\n    n=int(input())\n    s=list(map(int,input().split()))\n    j=0;\n    flag=True\n    one=False\n    r=0\n    while(flag):\n        c=s.count(j)\n        if c==1 and one==False:\n            r+=j\n            one=True\n        elif c==0:\n            if one==True:\n                r+=j\n                print(r)\n            else:\n                r+=(2*j)\n                print(r)\n            break;\n        j+=1\n    \n    i+=1"
        },
        {
            "language": 3,
            "solution": "def mex(arr):\n    if len(arr) == 0:\n        return 0\n    for i in range(arr[-1] + 2):\n        if i in arr:\n            pass\n        else:\n            return i\n\n\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    ar = sorted(list(map(int, input().split())))\n    mn1 = []\n    mn2 = []\n    mn1.append(ar[0])\n    for i in range(1, len(ar)):\n        if ar[i] - mn1[-1] == 1:\n            mn1.append(ar[i])\n        else:\n            mn2.append(ar[i])\n    print(mex(mn1) + mex(mn2))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.lang.*;\npublic class div2a\n{\n    public static void main(String [] args) throws IOException\n    {\n        Scanner sc=new Scanner (System.in);\n        int t;\n        t=sc.nextInt();\n        sc.nextLine();\n        int r[]=new int[t];\n        int i;\n        for(i=0;i<t;i++)\n        {\n            int n;\n            n=sc.nextInt();\n            sc.nextLine();\n            int a[]=new int[n];\n            int j;\n            int b[]=new int[101];\n            for(j=0;j<101;j++)\n            {\n                b[j]=0;\n            }\n            \n            for(j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[a[j]]+=1;\n            }\n            sc.nextLine();\n            Arrays.sort(a);\n            int k;\n            int c=0;\n            for(j=0;j<101;j++)\n            {\n                if(b[j]>=2)\n                continue;\n                else if(b[j]==1)\n                {\n                    if(c==0)\n                    {\n                     r[i]+=j;\n                     c=1;\n                    }\n                    else\n                    {\n                        if(b[j+1]>=1)\n                        continue;\n                        else\n                        {\n                         r[i]+=j+1;\n                         break;\n                        }\n                    }\n                }\n                else if(b[j]==0)\n                {\n                    if(c==0)\n                    {\n                        r[i]+=2*j;\n                        break;\n                    }\n                    else \n                    {\n                    r[i]+=j;\n                    break;\n                    }\n                }\n                \n                else\n                {\n                 r[i]=j+j+1;\n                 break;\n                }\n            }\n        }\n         \n        for(i=0;i<t;i++)\n        {\n            System.out.println(r[i]);\n        }\n    }\n}\n    \n            \n            "
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfor _ in range(int(input())):\n    n=int(input())\n    ar=list(map(int,input().split()))\n    dic={}\n    for i in range(101):\n        dic[i]=0\n    for i in ar:\n        dic[i]+=1\n    p1=0\n    p2=0\n    for i in range(101):\n        if(p1==i and dic[i]>0):\n            p1+=1\n            dic[i]-=1\n        if(p2==i and dic[i]>0):\n            p2+=1\n            dic[i]-=1\n    print(p1+p2)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n    \nclass Input:\n    def __init__(self):\n        self.next = self.readline()\n    \n    def readline(self):\n        return stdin.readline().strip()\n\n    def line(self):\n        try:\n            return self.next\n        finally:\n            self.next = self.readline()\n\n    def array(self, sep = ' ', cast = int):\n        return list(map(cast, self.line().split(sep = sep)))\n\n    def known_tests(self):\n        num_of_cases, = self.array()\n    \n        for case in range(num_of_cases):\n            yield self\n\n    def unknown_tests(self):\n        while self.next:\n            yield self\n\nclass Problem:\n    def __init__(self, input):\n        n, = input.array()\n        a = input.array()\n\n        a.sort()\n        \n        m1 = self.f(a)\n        m2 = self.f(a)\n\n        print(m1 + m2)\n    \n    def f(self, a):\n        r = 0\n\n        for i in range(len(a)):\n            if a[i] == None or a[i] < r:\n                continue\n            if a[i] > r:\n                break\n            if a[i] == r:\n                r += 1\n                a[i] = None\n\n        return r\n\nfor tc in Input().known_tests():\n    Problem(tc)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile(t>0):\n    n=int(input())\n    l=list(map(int, input().split()))    \n    ll=set(l)\n    nll=ll\n    lk=[]\n    \n    for i in range(n):\n        if(l[i] in nll):\n            nll=nll-{l[i]}\n        else:    \n            lk.append(l[i])\n    lll=list(ll)\n    l=set(l)\n    ul=[]\n    for i in range(max(lll)+2):\n        ul.append(i)\n    ul=set(ul)\n    m1=min(list(ul-ll))\n    ul=[]\n    if(lk==[]):\n        m2=0\n    else:\n        for i in range(max(lk)+2):\n            ul.append(i)\n        ul=set(ul)                  \n        m2=min(list(ul-set(lk)))\n    print(m1+m2)\n    t=t-1\n        \n"
        },
        {
            "language": 3,
            "solution": "import math, sys\nfrom collections import defaultdict, Counter, deque\nfrom functools import reduce\n\nINF = float('inf')\nMOD = int(1e9) + 7\n \ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a%b\n\treturn a\n \ndef isPrime(n):\n\tif (n <= 1): \n\t\treturn False\n\ti = 2\n\twhile i ** 2 <= n:\n\t\tif n % i == 0:\n\t\t\treturn False\n\t\ti += 1\n\treturn True\n \ndef primeFactors(n):\n\tfactors = defaultdict(int)\n\ti = 2\n\twhile i ** 2 <= n:\n\t\twhile n % i == 0:\n\t\t\tfactors[i] += 1\n\t\t\tn //= i \n\t\ti += 1\n\tif n > 1:\n\t\tfactors[n] += 1 \n\treturn factors\n\ndef a():\n\tn = int(input())\n\tarr = array()\n\n\tm = Counter(arr)\n\n\tmex1 = -1\n\tmex2 = -1\n\n\tfor k in sorted(m.keys()):\n\t\tif mex1 + 1 != k:\n\t\t\tbreak\n\t\tmex1 += 1\n\t\tif mex2 + 1 == k and m[k] >= 2:\n\t\t\tmex2 += 1 \n\n\tprint(mex1 + mex2 + 2) \n\n\ndef b():\n\tn = int(input())\n\tarr = array()\n\n\tarr.sort()\n\tans = -INF\n\n\tfor i in range(6):\n\t\tmul = 1 \n\n\t\tl = i \n\t\tr = n - (5 - i)\n\n\t\tfor i in range(0, l):\n\t\t\tmul *= arr[i]\n\t\t\n\t\tfor i in range(r, n):\n\t\t\tmul *= arr[i]\n\n\t\tans = max(ans, mul)\n\n\n\tprint(ans)\n\n\n\nclass DSU:\n\tdef __init__(self, n):\n\t\tself.p = [i for i in range(n + 1)]\n\t\tself.size = [1 for i in range(n + 1)]\n\t\tself.minmax = [[i, i] for i in range(n + 1)]\n\t\tself.n = n\n\n\tdef find(self, node):\n\t\tif self.p[node] != node:\n\t\t\tself.p[node] = self.find(self.p[node])\n\n\t\treturn self.p[node]\n\n\tdef union(self, source, dest):\n\t\tsource = self.find(source)\n\t\tdest = self.find(dest)\n\n\t\tif source != dest:\n\t\t\tif self.size[source] < self.size[dest]:\n\t\t\t\tsource, dest = dest, source\n\t\t\tself.p[dest] = source\n\t\t\tself.size[source] += self.size[dest]\n\t\t\tmini = min(self.minmax[source][0], self.minmax[dest][0])\n\t\t\tmaxi = max(self.minmax[source][1], self.minmax[dest][1])\n\t\t\tself.minmax[source] = [mini, maxi]\n\n\n\ndef input():\n\treturn sys.stdin.readline().rstrip('\\n')\n\ndef print(*args, sep=' ', end='\\n'):\n\tfirst = True\n\tfor arg in args:\n\t\tif not first:\n\t\t\tsys.stdout.write(sep)\n\t\tsys.stdout.write(str(arg))\n\t\tfirst = False \n\n\tsys.stdout.write(end)\n\ndef vars():\n\treturn map(int, input().split())\n \ndef array():\n\treturn list(map(int, input().split()))\n\nif __name__ == \"__main__\":\n\tt = 1\n\tt = int(input())\n\tfor _ in range(t):\n\t\ta()\n"
        },
        {
            "language": 3,
            "solution": "def find_a_b(l1):\n    find_a=0\n    a=0\n    find_b=0\n    b=0\n    \n    while True:\n        if(l1.count(find_a)==0):\n            a=find_a\n            break\n        find_a+=1\n    while True:\n        if(l1.count(find_b)<=1):\n            b=find_b\n            break\n        find_b+=1\n    \n    return a,b\n\nnumber_of_test= int(input())\noutput_array=[]\nfor i in range(number_of_test):\n    loose=input()\n    l1=list(map(int, input().split()))\n    a,b=find_a_b(l1)\n    output_array.append((a+b))\n\n\nfor j in output_array:\n    print(j)\n            \n        "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\n\ndef get_ans(n, arr):\n    arr.sort()\n    for i in range(len(arr)-1):\n        if arr[i+1] != arr[i] + 1 and arr[i+1] != arr[i]:\n            arr = arr[:i+1]\n            break\n    cter = dict(Counter(arr))\n    s = set(arr)\n    a = 0\n    b = 0\n    i = 1\n    Fn = False\n    if arr[0] != 0:\n        return 0\n    prev = 0\n    for i in s:\n        if cter[i] == 1:\n            a = i\n            break\n    if a == 0 and cter[0] != 1:\n        a = arr[-1] + 1\n    return a + arr[-1] + 1\n\n\ndef dfs(G, v, curr):\n    v.append(curr)\n    max_d = 1\n    v_max_d = []\n    tr = False\n    for node in range(n):\n        if G[curr][node] != -1:\n            if node not in v:\n                tr = True\n                d_v = dfs(G, v, node)\n                if d_v[0] + 1 > max_d:\n                    max_d = d_v[0] + 1\n                    v_max_d = d_v[1]\n    if not tr:\n        return 1, v\n    return max_d, v_max_d\n\ndef bfs(G, start):\n    v = []\n    querry = []\n\n    v.append(start)\n    querry.append(start)\n    depth = 0\n\n    while (querry):\n        depth += 1\n        curr = querry.pop(0)\n        for node in range(n):\n            if G[curr][node] != -1 and node not in v:\n                v.append(node)\n                querry.append(node)\n\n    return depth, v\n\nt = int(input())\nanss = []\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    anss.append(get_ans(n, arr))\nfor i in anss:\n    print(i)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b={}\n    for i in a:\n        b[i]=b.get(i,0)+1\n    c=101\n    d=101\n    for i in range(101):\n        if b.get(i,0)<2:\n            c=i\n            break\n    for i in range(101):\n        if b.get(i,0)==0:\n            d=i\n            break\n    print(c+d)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfor _ in range(int(input())):\n    d = defaultdict(int)\n    n = int(input())\n    a = list(map(int,input().split()))\n    for i in a:\n        d[i] += 1\n    first = -1\n    second = -1\n    i = 0\n    while True:\n        if d[i] < 2:\n            first = i\n            if d[i] == 0:\n                second = i\n                break\n            break\n        i += 1\n    if second == -1:\n        while True:\n            if d[i] == 0:\n                second = i\n                break\n            i += 1\n    print(first + second)\n"
        },
        {
            "language": 3,
            "solution": "import collections\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    idx = [0] * 101\n    for i in range(n):\n        idx[a[i]] += 1\n    ans = 0\n    t = 0\n    for i in range(101):\n        if idx[i] == 0 and t == 0:\n            ans = 2 * i\n            break\n        elif idx[i] == 0 and t == 1:\n            ans += i\n            break\n        elif idx[i] == 1 and t == 0:\n            ans += i\n            t += 1\n    print(ans) \n    "
        },
        {
            "language": 4,
            "solution": "import com.sun.source.tree.Tree;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\n\n/*\n1\n4\n0 2 0 1\n */\npublic class problemA {\n    private static void solve() throws Exception {\n        int n = fs.nextInt();\n        int[] a = fs.readArray(n);\n        int opt1 = 0;\n\n        HashSet<Integer> set = new HashSet<>();\n        for (int x: a) set.add(x);\n        while (set.contains(opt1)) opt1++;\n\n\n        TreeMap<Integer, Integer> map = new TreeMap<>();\n        for (int x : a ) map.put(x, map.getOrDefault(x, 0)+1);\n\n        int mex1 = n;\n        int mex2 = n;\n        for (int x = 0 ; x < n ; x ++ ) {\n            if (map.getOrDefault(x, 0) == 0) {\n                mex1 = x ;\n                break;\n            } else {\n                map.put(x, map.getOrDefault(x, 0)-1);\n            }\n        }\n\n        for (int x = 0 ; x < n ; x ++ ) {\n            if (map.getOrDefault(x, 0) == 0) {\n                mex2 = x ;\n                break;\n            }\n        }\n\n        int opt2 = mex2+ mex1;\n        out.println(Math.max(opt1, opt2));\n    }\n\n    private static  int getBest(TreeMap<Integer, Integer> counts, int half) {\n        for (int i = 0 ; i < 200; i ++ ) {\n            int c = counts.getOrDefault(i, 0);\n            if ( c == 0 ) {\n                return 2 * i ;\n            } else if ( c == 1 ) {\n                return i + findOne(counts, i+1, half);\n            }\n        }\n        return 0;\n    }\n\n    private static int findOne(TreeMap<Integer, Integer> counts,int cur, int limit) {\n        for (int i = cur ; i < 200; i ++ ) {\n            int c = counts.getOrDefault(i, 0);\n            if (c == 0) {\n                 return Math.min(i, limit+1);\n            }\n        }\n        return 0;\n    }\n\n    private static FastScanner fs = new FastScanner();\n    private static PrintWriter out = new PrintWriter(System.out);\n\n    public static void main(String[] args) throws Exception {\n        int T = 1;\n        T = fs.nextInt();\n        for (int t = 0; t < T; t++) {\n            solve();\n        }\n        out.close();\n    }\n\n    static void debug(Object... O) {\n        System.err.print(\"DEBUG \");\n        System.err.println(Arrays.deepToString(O));\n    }\n\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextString() {\n            return next();\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "# 0 0 0 1 1 1 2 2 3 4 5 7 7\n# 3 3 2 1 1 1 0 2\n# A = 0 0 1 1 2 3 4 5 7 7 mex=6\n# B = 0 1 2 mex=3\n\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    mexA = 0\n    mexB = 0\n    s = [0] * 101 # count\n    for i in range(n):\n        s[l[i]] += 1\n\n    for i in range(101):\n        if s[i] == 0:\n            mexA = i\n            mexB = i\n            break\n        if s[i] == 1:\n            mexB = i\n            for k in range(101):\n                if s[k] == 0:\n                    mexA = k\n                    break\n            break\n\n    print(mexA + mexB)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\npublic class cf1 {\n    static long mod = (long)1e9 + 7;\n    static long mod1 = 998244353;\n    static FastScanner f;\n    static PrintWriter pw = new PrintWriter(System.out);\n    static Scanner S = new Scanner(System.in);\n    static long x0; static long y0;\n    static int inf = (int)(1e9) + 5;\n    static long iinf = (long)(1e18);\n    static double eps = (double)1e-4;\n    static void solve()throws IOException {\n        int n = f.ni();\n        int arr[] = new int[n];\n        for (int i = 0; i < n; ++i) arr[i] = f.ni();\n\n        sort(arr);\n        HashSet<Integer> first = new HashSet<>();\n        HashSet<Integer> second = new HashSet<>();\n        \n        for (int i = 0; i < n; ++i) {\n            if (first.contains(arr[i])) second.add(arr[i]);\n            else first.add(arr[i]);\n        }\n\n        int m1 = -1 , m2 = -1;\n        for (int i = 0; ; ++i) {\n            if (!first.contains(i)){\n                m1 = i;\n                break;\n            } \n        }\n\n        for (int i = 0; ; ++i) {\n            if (!second.contains(i)) {\n                m2 = i;\n                break;\n            }\n        }\n\n        int ans = m1 +  m2;\n        pn(ans);\n    }    \n    public static void main(String[] args)throws NumberFormatException , IOException {\n        init();\n        boolean tc = true;\n        int t = tc ? f.ni() : 1;\n        while(t --> 0) solve();\n        pw.flush(); \n        pw.close();  \n    }\n        \n/******************************END OF MAIN PROGRAM*******************************************/\n    public static void init()throws IOException{if(System.getProperty(\"ONLINE_JUDGE\")==null){f=new FastScanner(\"\");}else{f=new FastScanner(System.in);}}\n    public static class FastScanner {\n        BufferedReader br;StringTokenizer st;\n        FastScanner(InputStream stream){try{br=new BufferedReader(new InputStreamReader(stream));}catch(Exception e){e.printStackTrace();}}\n        FastScanner(String str){try{br=new BufferedReader(new FileReader(\"!a.txt\"));}catch(Exception e){e.printStackTrace();}}\n        String next(){while(st==null||!st.hasMoreTokens()){try{st=new StringTokenizer(br.readLine());}catch(IOException e){e.printStackTrace();}}return st.nextToken();}\n        String nextLine()throws IOException{return br.readLine();}int ni(){return Integer.parseInt(next());}long nl(){return Long.parseLong(next());}double nd(){return Double.parseDouble(next());}\n    }\n    public static void pn(Object o){pw.println(o);}\n    public static void p(Object o){pw.print(o);}\n    public static void pni(Object o){pw.println(o);pw.flush();}\n    static int gcd(int a,int b){if(b==0)return a;else{return gcd(b,a%b);}}\n    static long gcd(long a,long b){if(b==0l)return a;else{return gcd(b,a%b);}}\n    static long lcm(long a,long b){return (a*b/gcd(a,b));}\n    static long exgcd(long a,long b){if(b==0){x0=1;y0=0;return a;}long temp=exgcd(b,a%b);long t=x0;x0=y0;y0=t-a/b*y0;return temp;}\n    static long pow(long a,long b){long res=1;while(b>0){if((b&1)==1)res=res*a;b>>=1;a=a*a;}return res;}\n    static long mpow(long a,long b){long res=1;while(b>0l){if((b&1)==1l)res=((res%mod)*(a%mod))%mod;b>>=1l;a=((a%mod)*(a%mod))%mod;}return res;}\n    static long mul(long a , long b){return ((a%mod)*(b%mod)%mod);}\n    static long adp(long a , long b){return ((a%mod)+(b%mod)%mod);}\n    static int log2(int x){return (int)(Math.log(x)/Math.log(2));}\n    static boolean isPrime(long n){if(n<=1)return false;if(n<=3)return true;if(n%2==0||n%3==0)return false;for(long i=5;i*i<=n;i=i+6)if(n%i==0||n%(i+2)==0)return false;return true;}\n    static boolean isPrime(int n){if(n<=1)return false;if(n<=3)return true;if(n%2==0||n%3==0)return false;for(int i=5;i*i<=n;i=i+6)if(n%i==0||n%(i+2)==0)return false;return true;}\n    static HashSet<Long> factors(long n){HashSet<Long> hs=new HashSet<Long>();for(long i=1;i<=(long)Math.sqrt(n);i++){if(n%i==0){hs.add(i);hs.add(n/i);}}return hs;}\n    static HashSet<Integer> factors(int n){HashSet<Integer> hs=new HashSet<Integer>();for(int i=1;i<=(int)Math.sqrt(n);i++){if(n%i==0){hs.add(i);hs.add(n/i);}}return hs;}\n    static HashSet<Long> pf(long n){HashSet<Long> ff=factors(n);HashSet<Long> res=new HashSet<Long>();for(Long i:ff)if(isPrime(i))res.add(i);return res;}\n    static HashSet<Integer> pf(int n){HashSet<Integer> ff=factors(n);HashSet<Integer> res=new HashSet<Integer>();for(Integer i:ff)if(isPrime(i))res.add(i);return res;}\n    static int[] inpint(int n){int arr[]=new int[n+1];for(int i=1;i<=n;++i){arr[i]=f.ni();}return arr;}\n    static long[] inplong(int n){long arr[] = new long[n+1];for(int i=1;i<=n;++i){arr[i]=f.nl();}return arr;}\n    static boolean ise(int x){return ((x&1)==0);}static boolean ise(long x){return ((x&1)==0);}\n    static int gnv(char c){return Character.getNumericValue(c);}//No. of integers less than equal to i in ub\n    static int log(long x){return x==1?0:(1+log(x/2));} static int log(int x){return x==1?0:(1+log(x/2));}\n    static int upperbound(int a[],int i){int lo=0,hi=a.length-1,mid=0;int count=0;while(lo<=hi){mid=(lo+hi)/2;if(a[mid]<=i){count=mid+1;lo=mid+1;}else hi=mid-1;}return count;}\n    static void sort(int[] a){ArrayList<Integer> l=new ArrayList<>();for(int i:a)l.add(i);Collections.sort(l);for(int i=0;i<a.length;++i)a[i]=l.get(i);}\n    static void sort(long[] a){ArrayList<Long> l=new ArrayList<>();for(long i:a)l.add(i);Collections.sort(l);for(int i=0;i<a.length;++i)a[i]=l.get(i);}\n    static void sort(ArrayList<Integer> a){Collections.sort(a);}//!Precompute fact in ncr()!\n    static int nextPowerOf2(int n){int count=0;if(n>0&&(n&(n-1))==0)return n;while(n!=0){n>>=1;count += 1;}return 1<<count;} \n}"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n=int(input())\n    b=list(map(int,input().split()))\n    a=[0 for i in range(101)]\n    for i in range(n):\n        a[b[i]]+=1\n    store=0\n    flag=2\n    for i in range(101):\n        if(a[i]==1 and flag==2):\n           store=i\n           flag=0\n        if(a[i]==0):\n            if(flag==0):\n                flag=1\n                break\n            break\n    if(flag==1):\n        print(store+i)\n    else:\n        print(2*i)"
        },
        {
            "language": 3,
            "solution": "import os\nimport heapq\nimport sys,threading\nimport math as mt\nimport operator\nfrom copy import copy\nfrom collections import defaultdict,deque\nfrom io import BytesIO, IOBase\n\nsys.setrecursionlimit(10 ** 5)\n#threading.stack_size(2**27)\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\n\"\"\"def pw(a,b):\n    result=1\n    while(b>0):\n        if(b%2==1): result*=a\n        a*=a\n        b//=2\n    return result\"\"\"\n\n\ndef inpt():\n    return [int(k) for k in input().split()]\n\n\n\ndef main():\n    for _ in range(int(input())):\n        n=int(input())\n        ar=inpt()\n        ar.sort()\n        d=defaultdict(int)\n        for i in ar:\n            d[i]+=1\n        ans=0\n        ct=0\n        mx1,mx2=10**9,10**9\n        for i in range(102):\n            if(i not in d):\n                mx1=min(i,mx1)\n                break\n            elif(d[i]==1):\n                mx2=min(i,mx2)\n        if(mx2==10**9):\n            print(2*mx1)\n        else:\n            print(mx1+mx2)\n\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    main()\n    #threading.Thread(target=main).start()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        int T = sc.nextInt();\n        for (int t = 0; t < T; t++) {\n            solve();\n        }\n        out.close();\n    }\n\n    private static void solve() {\n        int n = sc.nextInt();\n        int[] arr = sc.readArray(n);\n        int[] count = new int[101];\n        for(int i : arr) {\n            count[i]++;\n        }\n\n        List<Integer> list1 = new ArrayList<>();\n        List<Integer> list2 = new ArrayList<>();\n        for(int i = 0;i<101;i++) {\n            int currCount = count[i];\n            if(currCount == 0) continue;\n\n            int inLeft = currCount/2;\n            int inRight = currCount-inLeft;\n            for(int j = 1;j<=inLeft;j++) {\n                list1.add(i);\n            }\n\n            for(int j = 1;j<=inRight;j++) {\n                list2.add(i);\n            }\n        }\n        out.println(getMex(list1)+getMex(list2));\n    }\n\n    public static int getMex(List<Integer> list) {\n        for(int i = 0;i<=100;i++) {\n            if (!list.contains(i)) return i;\n        }\n        return 101;\n    }\n\n    private static final FastScanner sc = new FastScanner();\n    private static final PrintWriter out = new PrintWriter(System.out);\n\n    public static long gcd(long a, long b) {\n        if (a == 0) {\n            return b;\n        }\n        return gcd(b % a, a);\n    }\n\n    public static long lcm(long a, long b) {\n        return a * (b / gcd(a, b));\n    }\n\n    public static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextString() {\n            return next();\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "k = int(input())\nwhile k > 0:\n    l = [0] * 101\n    n = int(input())\n    ml = list(map(int,input().split()))\n    for i in ml:\n        l[i] += 1\n    sumi = 0\n    for i in range(0,101):\n        if l[i] == 0:\n            sumi += i\n            break\n    for i in range(0,101):\n        if l[i] <= 1:\n            sumi += i\n            break\n    k -= 1\n    print(sumi)\n    "
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int, input().split()))\n    d={}\n    for i in range(0,101):\n        d[i]=0\n    for i in l:\n        d[i]=d[i]+1\n    ans=0\n    for i in range(102):\n        if d[i]<=1:\n            ans=ans+i\n            break\n    for i in range(102):\n        if d[i]==0:\n            ans=ans+i\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor ad in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    c=Counter(l)\n    ans=0;left=2\n    for i in range(102):\n        if c[i]==0:\n            ans=2*i\n            left=0\n            #print(i)\n            break\n        elif c[i]==1:\n            left=1\n            ans=i\n            x=i\n            #print(i)\n            break\n    if left==1:\n        for j in range(x+1,102):\n            if c[j]==0:\n                ans+=j\n                break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    a=[0]*101\n    for j in l:\n        a[j]+=1\n    mcnt=-1\n    lcnt=-1\n    for j in range(101):\n        if a[j]<2:\n            if lcnt==-1:\n                \n                lcnt=j\n        \n            if a[j]==0 :\n                mcnt=j\n                break\n    print(lcnt+mcnt)\n            \n                \n                \n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    arr=[0]*101\n    item=list(map(int, input().split()))\n    for j in item:\n        arr[j]+=1\n    if arr[0]==0:\n        print(0)\n    elif arr[0]==1:\n        j=0\n        while j<=100:\n            if arr[j]==0:\n                print(j)\n                break\n            elif j==100:\n                print(101)\n                break\n            j+=1\n    else:\n        one=0\n        j=1\n        while j<=100:\n            if arr[j]==0:\n                if one!=0:\n                    print(one+j)\n                else:\n                    print(2*j)\n                break\n            elif arr[j]==1:\n                if one==0:\n                    one=j\n            j+=1"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ndef single(i, c, s, arr):\n    for j in range(i+1, max(arr)+2):\n        if j not in c:\n            return s+j\n        else:\n            if c[j]>=1:\n                continue\n            else:\n                return s+j\n\n\ndef fun(arr):\n    c = Counter(arr)\n    s = 0\n    t = 2\n    for i in range(max(arr)+2):\n        if i in c:\n            if c[i] >= 2:\n                continue\n            elif c[i]==1:\n                if t>0:\n                    t -= 1\n                    s += i\n                    if t==1:\n                        return single(i, c, s, arr)\n                else:\n                    return s\n            else:\n                s += t*i\n                return s\n        else:\n            s += t*i \n            return s\n\nif __name__ == '__main__':\n    t = int(input())\n\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        print(fun(arr))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, lis, a, b = int(input()), sorted(list(map(int, input().split()))), 0, 0\n    for i in lis:\n        if a == i:\n            a += 1\n        elif b == i:\n            b += 1\n    print(a + b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nbool uin(T &a, T b) {\n  return a > b ? (a = b, true) : false;\n}\ntemplate <class T>\nbool uax(T &a, T b) {\n  return a < b ? (a = b, true) : false;\n}\nint main() {\n  long long tests;\n  cin >> tests;\n  while (tests--) {\n    long long n;\n    cin >> n;\n    long long a[102] = {0}, m1 = 0, m2 = 0;\n    for (long long i = 0; i < (long long)(n); ++i) {\n      long long num;\n      cin >> num;\n      a[num]++;\n    }\n    for (long long i = 0; i < (long long)(101); ++i) {\n      if (a[i] == 0) break;\n      m1++;\n      a[i]--;\n    }\n    for (long long i = 0; i < (long long)(101); ++i) {\n      if (a[i] == 0) break;\n      m2++;\n      a[i]--;\n    }\n    cout << m1 + m2 << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\nt = int(input())\npi = 3.1415\n# t = 1\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    ans = 0\n    mp = [0 for i in range(102)]\n    for i in a:\n        mp[i] += 1\n    for i in range(102):\n        if(mp[i] >= 2):\n            continue\n        else:\n            if(cnt == 0):\n                ans += i*((2-mp[i]))\n                cnt += (2-mp[i])\n            else:\n                if(mp[i] == 0):\n                    cnt += 1\n                    ans += i\n            if(cnt >= 2):\n                break\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "import sys, os, io\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math,datetime,functools,itertools,operator,bisect,fractions\nfrom collections import deque,defaultdict,OrderedDict,Counter\nfrom fractions import Fraction\nfrom decimal import Decimal\n    \ndef main():\n    starttime=datetime.datetime.now()\n    if(os.path.exists('input.txt')):\n        sys.stdin = open(\"input.txt\",\"r\")\n        sys.stdout = open(\"output.txt\",\"w\")\n    \n    for _ in range(ri()):\n        n=ri()\n        a=ria()\n        d=Counter(a)\n        c=0\n        ans=0\n        for i in range(101):\n            if i in d and d[i]>0:\n                d[i]-=1\n            else:\n                ans+=i\n                break\n        for i in range(101):\n            if i in d and d[i]>0:\n                d[i]-=1\n            else:\n                ans+=i\n                break\n            \n                \n        print(ans) \n            \n            \n            \n                \n        \n        \n        \n                 \n                \n                \n        \n        \n        \n        \n                    \n        \n    #<--Solving Area Ends\n    endtime=datetime.datetime.now()\n    time=(endtime-starttime).total_seconds()*1000\n    if(os.path.exists('input.txt')):\n        print(\"Time:\",time,\"ms\")  \n    \n                \nclass FastReader(io.IOBase):\n    newlines = 0\n\n    def __init__(self, fd, chunk_size=1024 * 8):\n        self._fd = fd\n        self._chunk_size = chunk_size\n        self.buffer = io.BytesIO()\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self, size=-1):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size if size == -1 else size))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n\nclass FastWriter(io.IOBase):\n\n    def __init__(self, fd):\n        self._fd = fd\n        self.buffer = io.BytesIO()\n        self.write = self.buffer.write\n\n    def flush(self):\n        os.write(self._fd, self.buffer.getvalue())\n        self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass FastStdin(io.IOBase):\n    def __init__(self, fd=0):\n        self.buffer = FastReader(fd)\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nclass FastStdout(io.IOBase):\n    def __init__(self, fd=1):\n        self.buffer = FastWriter(fd)\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.flush = self.buffer.flush\n\n\nif __name__ == '__main__':\n    sys.stdin = FastStdin()\n    sys.stdout = FastStdout()\n    main()\n\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "for _ in range(input()):\n    n=input()\n    l=[0 for i in range(102)]\n    a=[int(i) for i in raw_input().split()]\n    v1=-1\n    v2=-1\n    for i in a:\n        l[i]+=1\n    for i in range(102):\n        if l[i]<2 and v1==-1:\n            v1=i\n        if l[i]<1 and v2==-1:\n            v2=i\n    print v1+v2\n        \n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Scanner;\n\npublic class Mex {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int t = in.nextInt();\n        while (t-- > 0) {\n            int n = in.nextInt();\n            int[] qus = new int[101];\n            for (int i = 0; i < n; i++) {\n                qus[in.nextInt()]++;\n            }\n            int ans = 0;\n\n            int i = 0;\n            for (i = 0; i < qus.length; i++) {\n                if (qus[i] < 2) {\n                    break;\n                }\n            }\n            if (i == qus.length) {\n                ans = i * 2;\n            } else if (qus[i] == 0) {\n                ans = i * 2;\n            } else if (qus[i] == 1) {\n                ans += i;\n                i++;\n                while (i < qus.length && qus[i] > 0) {\n                    i++;\n                }\n                ans += i;\n            }\n            System.out.println(ans);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nt=int(input())\nfor j in range(t):\n    n=int(input())\n    ar=[int(k) for k in input().split()]\n    dic={}\n    for k in ar:\n        try:\n            dic[k]+=1\n        except:\n            dic[k]=1\n    i=0\n    mexa=None\n    while(i<10000):\n        if i in dic and dic[i]>1:\n            i+=1\n        else:\n            mexa=i\n            break\n    while(i in dic and i<1000):\n        i+=1\n    print(mexa+i)\n            "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n;\n    scanf(\"%d\", &n);\n    int a[105];\n    int has[105] = {0};\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n      has[a[i]]++;\n    }\n    int m1 = 0;\n    int m2 = 0;\n    for (int i = 0; i <= 100; i++) {\n      if (m1 == i && has[i] >= 1) {\n        if (has[i] >= 2 && m1 == m2) {\n          m1++;\n          m2++;\n        } else {\n          m1++;\n        }\n        continue;\n      }\n      break;\n    }\n    printf(\"%d\\n\", m1 + m2);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor case in range(t):\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    ans = 0\n    for i in range(n + 1):\n        if a.count(i) < 2:\n            ans += i\n            break\n    for i in range(n + 1):\n        if a.count(i) < 1:\n            ans += i\n            break\n    print(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Round670Div2ProbA {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner scn = new Scanner(System.in);\n\t\tint t = scn.nextInt();\n\t\twhile (t > 0) {\n\t\t\tint n = scn.nextInt();\n\t\t\tHashMap<Integer, Integer> map = new HashMap<>();\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tint x = scn.nextInt();\n\t\t\t\tif (map.containsKey(x)) {\n\t\t\t\t\tmap.put(x, map.get(x) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tmap.put(x, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(solve(map));\n\t\t\tt--;\n\t\t}\n\t}\n\n\tpublic static int solve(HashMap<Integer, Integer> map) {\n\t\tint sum = 0;\n\t\tint i = 0;\n\t\tint flag = 0;\n\t\twhile (true) {\n\t\t\tif (map.containsKey(i)) {\n\t\t\t\tint f = map.get(i);\n\t\t\t\tif (flag == 0) {\n\t\t\t\t\tif (f > 1) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(f==1) {\n\t\t\t\t\t\tsum+=i;\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag==1) {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(flag==1) {\n\t\t\t\t\tsum+=i;\n\t\t\t\t}\n\t\t\t\telse if(flag==0) {\n\t\t\t\t\tsum+=(i*2);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn sum;\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\n/**\n * Created by enpingkuang on 2020/9/12 9:51 \u4e0b\u5348\n */\npublic class A {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int t = scanner.nextInt();\n        while (t-- > 0) {\n            int[] count = new int[105];\n            int n = scanner.nextInt();\n            for(int i =0;i<n;i++){\n                int x = scanner.nextInt();\n                count[x]++;\n            }\n            int sum = 0;\n            for(int i = 0;i<2;i++){\n                for(int j = 0;j<= 100;j++) {\n                    if (count[j] == 0){\n                        sum+=j;\n                        break;\n                    }\n                    count[j]--;\n                }\n            }\n            System.out.println(sum);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    occurrences = [0]*(n+1)\n    for a_i in a:\n        if a_i < n:\n            occurrences[a_i] += 1\n    occurrences.append(1)  # for max_b calculation\n    mex_a = occurrences.index(0)\n    mex_b = min(occurrences.index(0), occurrences.index(1))\n    print(mex_a+mex_b)"
        },
        {
            "language": 3,
            "solution": "import sys\nii = lambda: sys.stdin.readline().strip()\nidata = lambda: [int(x) for x in ii().split()]\n\ndef solve():\n    n = int(ii())\n    data = sorted(idata())\n    a = -1\n    b = -1\n    for i in range(n):\n        if data[i] == a + 1:\n            a += 1\n        elif data[i] == a:\n            if b + 1 == data[i]:\n                b += 1\n    print(a + b + 2)\n    return\n\nfor t in range(int(ii())):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n n=int(input())\n arr=map(int, input().split())\n freq=[0 for i in range(101) ]\n for k in arr:\n  freq[k]+=1\n ans=0\n for j in range(0,101):\n  if(freq[j]!=0):\n   ans+=1\n   freq[j]=freq[j]-1\n  else:\n   break\n tf=0\n \n for j in range(0,101):\n  if(freq[j]!=0):\n   ans+=1\n   freq[j]=freq[j]-1\n  else:\n   break\n print(ans)\n   \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n \n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Main\n{\n    static Scanner scn=new Scanner(System.in);\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tint t=scn.nextInt();\n\t\twhile(t-->0){\n\t\t    int max=Integer.MIN_VALUE;\n\t\t    int arr[]=new int[scn.nextInt()];\n\t\t    for(int i=0;i<arr.length;i++){\n\t\t    arr[i]=scn.nextInt();\n\t\t    \n\t\t    max=Math.max(max,arr[i]);\n\t\t    }\n\t\t    int f[]=new int[max+1];\n\t\t    for(int i=0;i<arr.length;i++){\n\t\t        f[arr[i]]++;\n\t\t    }\n\t\t    int ans=0;\n\t\t    boolean temp=true;\n\t\t    int ansfound=0;\n\t\t    for(int i=0;i<f.length;i++){\n\t\t        if(f[i]==1){\n\t\t            temp=false;\n\t\t            ans+=i;\n\t\t            break;\n\t\t        }\n\t\t        if(f[i]==0){\n\t\t            ans+=2*i;\n\t\t            temp=false;\n\t\t            ansfound=1;\n\t\t            break;\n\t\t        }\n\t\t    }\n\t\t    \n\t\t   if(ansfound==0){ ArrayList<Integer> a=new ArrayList<>();\n\t\t    for(int i=0;i<f.length;i++){\n\t\t        if(f[i]==0)\n\t\t        continue;\n\t\t        else\n\t\t        a.add(i);\n\t\t         \n\t\t    }\n\t\t    boolean flag=true;\n\t\t    for(int i=0;i<f.length;i++ ){\n\t\t        if(a.get(i)!=i){\n\t\t            ans+=i;\n\t\t            flag=false;\n\t\t        break;}\n\t\t    }\n\t\t    if(flag){\n\t\t    \n\t\t    if(temp)\n\t\t    ans=2*f.length;\n\t\t    else\n\t\t    ans+=f.length;}}\n\t\t    System.out.println(ans);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = [0] * 205\n    for x in a:\n        cnt[x] += 1\n\n    for i in range(205):\n        if(cnt[i] == 0):\n            break\n    ans = i\n    for i in range(205):\n        if(cnt[i] < 2):\n            break\n    ans += i\n    print(ans)\n\t\t\t\t\t\t\t\t\t\t\t    \t\t\t \t \t \t\t   \t\t"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class current {\n    public static void main(String[] args) {\n        FastReader fr = new FastReader();\n        int a = fr.nextInt();\n        for (int i = 0; i < a; i++) {\n            fr.nextLine();\n            solve(fr.nextIntArray());\n        }\n    }\n\n    public static void solve(int[] arr) {\n        Arrays.sort(arr);\n        Set<Integer> a = new HashSet<>();\n        Set<Integer> b = new HashSet<>();\n        if (arr[0] != 0) {\n            System.out.println(0);\n            return;\n        }\n        int cur = 0;\n        boolean addToSecond = true;\n        for (int i = 0; i < arr.length; i++) {\n            if (i >= 1) {\n                if (arr[i] > arr[i - 1] + 1) {\n                    break;\n                }\n            }\n            int j = arr[i];\n            // Check if b contains it\n            if (j != cur && a.contains(cur) && !b.contains(cur)) {\n                addToSecond = false;\n            }\n            if (!a.contains(j)) {\n                cur = j;\n                a.add(j);\n            } else {\n                if (addToSecond) {\n                    b.add(j);\n                }\n            }\n        }\n        int here = 0;\n        int there = 0;\n        if (a.size() > 0) {\n            here = Collections.max(a) + 1;\n        }\n        if (b.size() > 0) {\n            there = Collections.max(b) + 1;\n        }\n        System.out.println(here+there);\n    }\n\n    static class SegTree {\n        int startIndex, endIndex;\n        long sum;\n        SegTree lchild, rchild;\n\n        SegTree(int[] arr) {this(0, arr.length-1, arr);}\n\n        SegTree(int startIndex, int endIndex, int[] arr) {\n            this.startIndex = startIndex;\n            this.endIndex = endIndex;\n            if (startIndex == endIndex) sum = arr[startIndex];\n            else {\n                int mid = (startIndex + endIndex) / 2;\n                lchild = new SegTree(startIndex, mid, arr);\n                rchild = new SegTree(mid + 1, endIndex, arr);\n                sum = lchild.sum + rchild.sum;\n                recalc();\n            }\n        }\n\n        void recalc() {\n            if (startIndex == endIndex) return; sum = lchild.sum + rchild.sum;\n        }\n\n        public void valueUpdate(int index, int value) {\n            if (startIndex == endIndex) {sum = value; return;}\n            if (index > lchild.endIndex) rchild.valueUpdate(index, value); else lchild.valueUpdate(index, value); recalc();\n        }\n\n        public long rangeSum(int startIndex, int endIndex) {\n            if (endIndex < this.startIndex || startIndex > this.endIndex) return 0;\n            if (startIndex <= this.startIndex && endIndex >= this.endIndex) return sum;\n            return lchild.rangeSum(startIndex, endIndex) + rchild.rangeSum(startIndex, endIndex);\n        }\n    }\n\n    public static double sum(List<Long> n) {\n        double a = 0;\n        for (long i : n) {\n            a += i;\n        }\n        return a;\n    }\n\n    public static int toInt(String n) {\n        return Integer.parseInt(n);\n    }\n\n    public static double toDouble(String n) {\n        return Double.parseDouble(n);\n    }\n\n    public static long toLong(String n) {\n        return Long.parseLong(n);\n    }\n\n    static class FastReader {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st;\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        String nextLine() {\n            String a = \"\";\n            try {\n                a = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return a;\n        }\n\n        int[] nextIntArray() {\n            return intArray(nextLine().split(\" \"));\n        }\n\n        long[] nextLongArray() {\n            return longArray(nextLine().split(\" \"));\n        }\n\n        double[] nextDoubleArray() {\n            return doubleArray(nextLine().split(\" \"));\n        }\n\n        public int getInt(int index) {\n            String[] arr = nextLine().split(\" \");\n            return Integer.parseInt(arr[index]);\n        }\n\n        public long getLong(int index) {\n            String[] arr = nextLine().split(\" \");\n            return Long.parseLong(arr[index]);\n        }\n\n        public double getDouble(int index) {\n            String[] arr = nextLine().split(\" \");\n            return Double.parseDouble(arr[index]);\n        }\n\n        public List<String> stringList() {\n            String[] arr = nextLine().split(\" \");\n            return Arrays.asList(arr);\n        }\n\n        public List<Integer> intList() {\n            String[] arr = nextLine().split(\" \");\n            List<Integer> a = new ArrayList<>();\n            for (String i : arr) {\n                a.add(Integer.parseInt(i));\n            }\n            return a;\n        }\n\n        public List<Double> doubleList() {\n            String[] arr = nextLine().split(\" \");\n            List<Double> a = new ArrayList<>();\n            for (String i : arr) {\n                a.add(Double.parseDouble(i));\n            }\n            return a;\n        }\n\n        public List<Long> longList() {\n            String[] arr = nextLine().split(\" \");\n            List<Long> a = new ArrayList<>();\n            for (String i : arr) {\n                a.add(Long.parseLong(i));\n            }\n            return a;\n        }\n    }\n\n\n    public static int[] intArray(String[] arr) {\n        int l = arr.length;\n        int[] a = new int[l];\n        for (int i = 0; i < l; i++) {\n            a[i] = Integer.parseInt(arr[i]);\n        }\n        return a;\n    }\n\n    public static long[] longArray(String[] arr) {\n        int l = arr.length;\n        long[] a = new long[l];\n        for (int i = 0; i < l; i++) {\n            a[i] = Long.parseLong(arr[i]);\n        }\n        return a;\n    }\n\n    public static double[] doubleArray(String[] arr) {\n        int l = arr.length;\n        double[] a = new double[l];\n        for (int i = 0; i < l; i++) {\n            a[i] = Double.parseDouble(arr[i]);\n        }\n        return a;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "def get(l):\n    i = 0\n    j = 0\n    both = True\n    count = 1\n    for k, x in enumerate(l):\n        if k == 0:\n            if x != 0:\n                return 0\n            else:\n                i += 1\n        else:\n            if l[k] != l[k-1]:\n                if l[k] != l[k-1] + 1:\n                    return i + j\n                if count == 1:\n                    both = False\n                count = 1\n            else:\n                count += 1\n            if count == 1:\n                i += 1\n            elif count == 2 and both:\n                j += 1\n    return i + j\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = sorted([int(x) for x in input().split()])\n    print(get(l))\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map.Entry;\nimport java.util.TreeMap;\n\n\npublic class A\n{\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tint t = Integer.parseInt(br.readLine());\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n =Integer.parseInt(br.readLine());\n\t\t\tTreeMap<Integer, Integer> nums = new TreeMap<Integer, Integer>();\n\t\t\tString[] inp = br.readLine().split(\" \");\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tint x = nums.getOrDefault(Integer.parseInt(inp[i]), 0);\n\t\t\t\tnums.put(Integer.parseInt(inp[i]), x+1);\n\t\t\t}\n\t\t\tHashSet<Integer> a = new HashSet<Integer>();\n\t\t\tHashSet<Integer> b = new HashSet<Integer>();\n\t\t\twhile(!nums.isEmpty())\n\t\t\t{\n\t\t\t\tEntry<Integer, Integer> e = nums.pollFirstEntry();\n\t\t\t\ta.add(e.getKey());\n\t\t\t\tif(e.getValue()>1)b.add(e.getKey());\n\t\t\t}\n\t\t\tint c=0;\n\t\t\tfor(int i=0;i<=100;i++)\n\t\t\t{\n\t\t\t\tif(!a.contains(i)) {\n\t\t\t\t\tc+=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<=100;i++)\n\t\t\t{\n\t\t\t\tif(!b.contains(i)) {\n\t\t\t\t\tc+=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpw.println(c);\n\t\t}\n\t\t\n\t\tpw.close();\n\t\tpw.flush();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    k = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    elem = []\n    s1 = set()\n    s2 =set()\n    flag=0\n    for i in range(k+1):\n        if(a.count(i)==0):\n            if(flag):\n                elem.append(i)\n            else:\n                elem.append(i)\n                elem.append(i)\n            break\n        if(a.count(i)==1 and flag==0):\n            elem.append(i)\n            flag =1\n    print(elem[0] + elem[1])       "
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int test_case = sc.nextInt();\n        for (int t = 0; t < test_case; t++) {\n            int n = sc.nextInt();\n            int[] arr = new int[101];\n\n            for (int i = 0; i < n; i++) {\n                arr[sc.nextInt()]++;\n            }\n            int ans = 0;\n            for (int i = 0; i <= 100; i++) {\n                if (arr[i] != 0) {\n                    arr[i]--;\n                } else {\n                    ans += i;\n                    break;\n                }\n            }\n\n            for (int i = 0; i <= 100; i++) {\n                if (arr[i] != 0) {\n                    arr[i]--;\n                } else {\n                    ans += i;\n                    break;\n                }\n            }\n\n            System.out.println(ans);\n        }\n\n    }\n\n    public static class Scanner {\n        private BufferedReader bufferedReader;\n        private StringTokenizer stk;\n\n        public Scanner(InputStream inputStream) {\n            bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        public int nextInt() throws IOException {\n            nullOrGet();\n            return Integer.parseInt(stk.nextToken());\n        }\n\n        public long nextLong() throws IOException {\n            nullOrGet();\n            return Long.parseLong(stk.nextToken());\n        }\n\n        public String next() throws IOException {\n            nullOrGet();\n            return stk.nextToken();\n        }\n\n        public String next(String delim) throws IOException {\n            stk = new StringTokenizer(bufferedReader.readLine(), next());\n            return stk.nextToken();\n        }\n\n        private StringTokenizer nullOrGet() throws IOException {\n            if (stk == null || !stk.hasMoreTokens()) {\n                stk = new StringTokenizer(bufferedReader.readLine());\n            }\n            return stk;\n        }\n    }\n\n    public static class SegmentTree {\n        int[] tree;\n        int s;\n\n        public SegmentTree(int n) {\n            for (s = 1; s < n; s *= 2) ;\n            tree = new int[s * 2];\n        }\n\n        void update(int x, int v) {\n            int l = x + s - 1;\n            tree[l] = v;\n            l /= 2;\n            while (l > 1) {\n                tree[l] = Math.max(tree[l * 2], tree[l * 2 + 1]);\n                l /= 2;\n            }\n        }\n\n        int getMax(int Left, int Right) {\n            int l = Left + s - 1, r = Right + s - 1;\n            int rval = 0;\n            while (l <= r) {\n                if (l % 2 == 0) l /= 2;\n                else {\n                    rval = Integer.max(rval, tree[l]);\n                    l = (l / 2) + 1;\n                }\n                if (r % 2 == 1) r /= 2;\n                else {\n                    rval = Integer.max(rval, tree[r]);\n                    r = (r / 2) - 1;\n                }\n            }\n            return rval;\n        }\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.awt.List;\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\n\n/*\n * \n * daiict\n *\n * \n * \n */\n\npublic class Solution {\n\tFastScanner in;\n\tPrintWriter out;\n\n\tstatic ArrayList[] adj;\n\tstatic ArrayList[] aadj;\n\tstatic int last;\n\tstatic int n;\n\tstatic int m;\n\n\tstatic long C[][];\n\n\tstatic int[] dp1;\n\tstatic int[] dp2;\n\tstatic int color[];\n\tstatic int visited[];\n\tstatic int[] arr;\n\tstatic long[] brr;\n\tstatic double ans;\n\tstatic int array[];\n\tstatic int start[];\n\tstatic int finish[];\n\tstatic int pref[];\n\tstatic int tree[];\n\tstatic int maxval = 32;\n\t\n\tstatic int fenwik[];\n\n\tstatic int ttt[];\n\tstatic int sum = 0;\n\tstatic String s;\n\n\tstatic int cc = 0;\n\tstatic long min = Long.MAX_VALUE;\n\n\tstatic ArrayList<Integer> segt[];\n\n\t// for dfs do not delete\n\tstatic int dir[][] = { { 1, 0 }, { 0, 1 }, { 0, -1 }, { -1, 0 } };\n\n\tstatic int[] seg;\n\tstatic long count = 1;\n\tstatic long mod = (long) 1e9 + 7;\n\n\tstatic int parent[];\n\tstatic int size[];\n\n\tstatic int[] l;\n\tstatic int[] r;\n\tstatic int[] next;\n\tstatic int[] cnt;\n\tstatic int[] block;\n\n\tstatic HashSet<String> set;\n\tstatic HashSet<String> set2;\n\n\tstatic int low[];\n\tstatic int disc[];\n\tstatic int time;\n\tstatic int acn[];\n\n\tstatic class Pair1 implements Comparable<Pair1> {\n\t\tint x;\n\t\tint y;\n\n\t\tPair1(int l, int m) {\n\n\t\t\tthis.x = l;\n\t\t\tthis.y = m;\n\n\t\t}\n\t\t\n\t\tpublic void setX(int x){\n\t\t\tthis.x = x;\n\t\t}\n\t\tpublic void setY(int y){\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic int compareTo(Pair1 p) {\n\n\t\t\tif (this.y != p.y) {\n\t\t\t\treturn (int) (this.x - p.x);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn x + \" \" + y;\n\t\t}\n\n\t\tpublic boolean equals(Object o) {\n\t\t\tif (o instanceof Pair1) {\n\t\t\t\tPair1 a = (Pair1) o;\n\n\t\t\t\treturn this.x == a.x;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic int hashCode() {\n\t\t\treturn new Long(x).hashCode() * 31 + new Long(y).hashCode();\n\t\t}\n\n\t}\n\n\tpublic static int gcd(int a, int b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\n\t// public static void update(int x,int val){\n\t// while(x<=maxval){\n\t// tree[x] += val;\n\t// x = (x&-x);\n\t// }\n\t// }\n\n\tpublic static int read(int idx) {\n\t\tint sum = 0;\n\n\t\twhile (idx >= 0) {\n\t\t\tsum += tree[idx];\n\t\t\tidx -= (idx & (-idx));\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tpublic static int find(int i) {\n\t\tif (parent[i] != i) {\n\t\t\treturn find(parent[i]);\n\t\t}\n\n\t\treturn i;\n\t}\n\n\tpublic static void union(int a, int b) {\n\t\tint x = find(a);\n\t\tint y = find(b);\n\n\t\tif (x != y) {\n\t\t\tif (size[x] > size[y]) {\n\t\t\t\tsize[x] += size[y];\n\t\t\t\tparent[y] = x;\n\t\t\t} else {\n\t\t\t\tsize[y] += size[x];\n\t\t\t\tparent[x] = y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvoid updateF(int pos, int v, int n){\n\t\tpos = pos + 1;\n\t\twhile(pos < n) {\n\t\t\tfenwik[pos] += v;\n\t\t\tpos += ((pos)&(-pos));\n\t\t}\n\t}\n\t\n\tint getF(int pos, int n) {\n\t\tint sum = 0;\n\t\tpos++;\n\t\twhile(pos>0) {\n\t\t\tsum += fenwik[pos];\n\t\t\tpos -= ((pos)&(-pos));\n\t\t}\n\t\treturn sum;\n\t}\n\t\n\tint process(int sum, int n){\n\t\tint l = 0;\n\t\tint r = n;\n\t\twhile(l+1<r){\n\t\t\tint mid = (l+r)/2;\n\t\t\tint got = getF(mid,1000010);\n\t\t\tif (got >= sum){\n\t\t\t\tr = mid;\n\t\t\t} else {\n\t\t\t\tl = mid;\n\t\t\t}\n\t\t}\n\t\tupdateF(l,-1,1000010);\n\t\treturn l;\n\t}\n\t\n\tvoid build(int n, int arr[]) { // build the tree\n\t\tfor (int i = n - 1; i > 0; --i)\n\t\t\tarr[i] = arr[i << 1] + arr[i << 1 | 1];\n\t}\n\n\tpublic static void modify(int p, int val, int n, int arr[]) { // set value at position\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// p\n\t\tfor (arr[p += n] = val; p > 1; p >>= 1)\n\t\t\tarr[p >> 1] = arr[p] + arr[p ^ 1];\n\t}\n\n\tint query(int l, int r, int n, int arr[]) { // sum on interval [l, r)\n\t\tint res = 0;\n\t\tfor (l += n, r += n; l < r; l >>= 1, r >>= 1) {\n\t\t\tif ((l & 1) == 1)\n\t\t\t\tres += arr[l++];\n\t\t\tif ((r & 1) == 1)\n\t\t\t\tres += arr[--r];\n\t\t}\n\t\treturn res;\n\t}\n\n\n\t/* static */ void solve() throws NumberFormatException,InputMismatchException, IOException {\n\t\t    \t\t    \n\t\t    \t\t    \tScanner in = new Scanner(System.in);\n\t\t    \t\t    \t\n\n\t\t    \t\t    \t\n\t\t    \t\t    \tint t = in.nextInt();\n\t\t    \t\t    \t\n\t\t    \t\t    \twhile(t-->0){\n\t\t    \t\t    \t\tint n = in.nextInt();\n\t\t    \t\t    \t\tHashMap<Integer,Integer> map = new HashMap();\n\t\t    \t\t    \t\tfor (int i = 0;i<n;i++){\n\t\t    \t\t    \t\t\tint a = in.nextInt();\n\t\t    \t\t    \t\t\tInteger c = map.get(a);\n\t\t    \t\t    \t\t\tif (c == null){\n\t\t    \t\t    \t\t\t\tc = 0;\n\t\t    \t\t    \t\t\t}\n\t\t    \t\t    \t\t\tmap.put(a, c+1);\n\t\t    \t\t    \t\t}\n\t\t    \t\t    \t\tint ans = 0;\n\t\t    \t\t    \t\tint f = 0;\n\t\t    \t\t    \t\tfor (int i =0;i<=100;i++){\n\t\t    \t\t    \t\t\tInteger d = map.get(i);\n\t\t    \t\t    \t\t\tif (d == null && f == 0) {\n\t\t    \t\t    \t\t\t\tans = 2*i;\n\t\t    \t\t    \t\t\t\tbreak;\n\t\t    \t\t    \t\t\t} else if (d == null){\n\t\t    \t\t    \t\t\t\tans += i;\n\t\t    \t\t    \t\t\t\tbreak;\n\t\t    \t\t    \t\t\t}\n\t\t    \t\t    \t\t\tif (d == 1 && f == 0) {\n\t\t    \t\t    \t\t\t\tans += i;\n\t\t    \t\t    \t\t\t\tf = 1;\n\t\t    \t\t    \t\t\t}\n\t\t    \t\t    \t\t}\n\t\t    \t\t    \t\tSystem.out.println(ans);\n\t\t    \t\t    \t}\n\t\t    \t\t    \t\n\t\t    \t\t    }\n\t\n\t\n\tpublic int findSum(int i, int[] arr, int offset){\n\t\t\n\t\tint sum = 0;\n\t\t\n\t\tfor(int j = 0;(1<<j)<=i;j++){\n\t\t\t//System.out.append(i + \" \" + j + \" \" + (i>>j));\n\t\t\tif (((i>>j)&1) == 1){\n\t\t\t\t//System.out.println(i + \" \" + j + \" \" + (i>>j));\n\t\t\t\tsum += arr[j+offset];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn sum;\n\t}\n\t\n\tpublic static int c(int n){\n\t\tif(n == 1){\n\t\t\treturn 1;\n\t\t}\n\t\tif(n == 2)\n\t\t\treturn 5;\n\t\t\n\t\treturn 4*(2*(n-2) - 1) + 4 + c(n-1);\n\t\t\n\t}\n\n\tpublic static long dfs(int i,ArrayList<Long> list,long n) {\n\t\tif (visited[i] == 1) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvisited[i] = 1;\n\t\tint count = 1;\n\t\tfor (int j = 0; j < adj[i].size(); j++) {\n\t\t\tint next = (int) (adj[i].get(j));\n\t\t\tlong nextC = dfs(next, list,n);\n\t\t\tif (nextC == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlong ans = (nextC * (n-nextC)%mod)%mod;\n\t\t\tlist.add(ans);\n\t\t\tcount += nextC;\n\t\t}\n\t\treturn count;\n\n\t}\n\n\tpublic static void uu(int arr[], int i, int f) {\n\t\tif (i == 1) {\n\t\t\treturn;\n\t\t}\n\t\tint next = i / 2;\n\t\tint x = 0;\n\t\tif (i % 2 == 0) {\n\t\t\tx = i + 1;\n\t\t} else {\n\t\t\tx = i - 1;\n\t\t}\n\n\t\tif (f == 1) {\n\t\t\tarr[next] = arr[i] ^ arr[x];\n\t\t} else {\n\t\t\tarr[next] = arr[i] | arr[x];\n\t\t}\n\n\t\tuu(arr, next, 1 - f);\n\t}\n\n\tpublic static void sbuild(int i, int l, int r) {\n\t\t// System.out.println(i + \" \");\n\t\tif (l == r) {\n\t\t\tsegt[i] = new ArrayList();\n\t\t\tsegt[i].add(array[l - 1]);\n\t\t\treturn;\n\t\t}\n\n\t\tint mid = (l + r) / 2;\n\t\tsbuild(2 * i, l, mid);\n\t\tsbuild(2 * i + 1, mid + 1, r);\n\n\t\tsegt[i] = new ArrayList();\n\t\tmerge(segt[2 * i], segt[2 * i + 1], segt[i]);\n\t}\n\n\tpublic static int squery(int i, int l, int r, int ql, int qr, int val) {\n\n\t\tif (l > qr || r < ql || l > r || ql > qr) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (l >= ql && r <= qr) {\n\t\t\tint x = lbw(segt[i], val);\n\t\t\treturn x;\n\t\t}\n\n\t\tint mid = (l + r) / 2;\n\n\t\treturn (squery(2 * i, l, mid, ql, qr, val) + squery(2 * i + 1, mid + 1, r, ql, qr, val));\n\n\t}\n\n\tpublic static int lbw(ArrayList<Integer> list, int value) {\n\n\t\t// System.out.println(list);\n\t\t// System.out.println(value + \" ff \");\n\n\t\tint low = 0;\n\t\tint high = list.size();\n\n\t\twhile (low != high) {\n\t\t\tint mid = (low + high) / 2;\n\t\t\tif (list.get(mid) <= value) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\tif (low == list.size()) {\n\t\t\treturn list.size();\n\t\t}\n\t\treturn low;\n\t}\n\n\tpublic static void merge(ArrayList<Integer> l1, ArrayList<Integer> l2, ArrayList<Integer> ans) {\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile (i < l1.size() && j < l2.size()) {\n\t\t\tif (l1.get(i) > l2.get(j)) {\n\t\t\t\tans.add(l2.get(j));\n\t\t\t\tj++;\n\t\t\t} else {\n\t\t\t\tans.add(l1.get(i));\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\twhile (i < l1.size()) {\n\t\t\tans.add(l1.get(i));\n\t\t\ti++;\n\t\t}\n\n\t\twhile (j < l2.size()) {\n\t\t\tans.add(l2.get(j));\n\t\t\tj++;\n\t\t}\n\t}\n\n\tpublic static void dfs(int i, int p) {\n\t\tstart[i] = time;\n\t\tarray[time] = arr[i];\n\t\ttime++;\n\t\tfor (int j = 0; j < adj[i].size(); j++) {\n\t\t\tif ((int) adj[i].get(j) != p) {\n\t\t\t\tdfs((int) adj[i].get(j), i);\n\t\t\t}\n\t\t}\n\n\t\tfinish[i] = time;\n\n\t}\n\n\tstatic void call(int i) {\n\n\t\t// System.out.println(i);\n\n\t\tvisited[i] = 1;\n\t\ttime++;\n\t\tdisc[i] = time;\n\t\tlow[i] = time;\n\n\t\tfor (int j = 0; j < adj[i].size(); j++) {\n\t\t\tif (visited[(int) adj[i].get(j)] == 0) {\n\t\t\t\tacn[(int) adj[i].get(j)] = i;\n\t\t\t\tcall((int) adj[i].get(j));\n\n\t\t\t\tlow[i] = Math.min(low[i], low[(int) adj[i].get(j)]);\n\n\t\t\t\tif (low[(int) adj[i].get(j)] > disc[i]) {\n\t\t\t\t\tint temp = (int) adj[i].get(j);\n\t\t\t\t\tunion(temp, i);\n\t\t\t\t\tSystem.out.println(temp + \" \" + i);\n\t\t\t\t}\n\t\t\t} else if ((int) adj[i].get(j) != acn[i]) {\n\t\t\t\tlow[i] = Math.min(low[i], disc[(int) adj[i].get(j)]);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tstatic void update(int idx, int b) {\n\t\tint j = block[idx];\n\t\tarr[idx] = b;\n\n\t\tfor (int i = r[j]; i >= l[j]; i--) {\n\t\t\tint k = (int) (i + arr[i]);\n\t\t\tif (k >= n) {\n\t\t\t\tnext[i] = i;\n\t\t\t\tcnt[i] = 1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (block[k] > block[i]) {\n\t\t\t\tnext[i] = k;\n\t\t\t\tcnt[i] = 1;\n\t\t\t} else {\n\t\t\t\tnext[i] = next[k];\n\t\t\t\tcnt[i] = cnt[k] + 1;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tstatic void get(int idx) {\n\t\tif (next[idx] == idx) {\n\t\t\tlast = idx;\n\t\t\tans = 1;\n\t\t\treturn;\n\t\t}\n\t\tint c = 0;\n\t\twhile (true) {\n\t\t\tint j = next[idx];\n\t\t\tif (block[j] == block[idx]) {\n\t\t\t\tc += cnt[idx];\n\t\t\t\tlast = next[idx];\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tc += cnt[idx];\n\t\t\t\tidx = next[idx];\n\t\t\t}\n\t\t}\n\n\t\tans = c;\n\t}\n\n\tstatic private String Frac(double x) {\n\t\tif (x < 0) {\n\t\t\treturn \"-\" + Frac(-x);\n\t\t}\n\t\tdouble tolerance = 1.0E-18;\n\t\tdouble h1 = 1;\n\t\tdouble h2 = 0;\n\t\tdouble k1 = 0;\n\t\tdouble k2 = 1;\n\t\tdouble b = x;\n\t\tdo {\n\t\t\tdouble a = Math.floor(b);\n\t\t\tdouble aux = h1;\n\t\t\th1 = a * h1 + h2;\n\t\t\th2 = aux;\n\t\t\taux = k1;\n\t\t\tk1 = a * k1 + k2;\n\t\t\tk2 = aux;\n\t\t\tb = 1 / (b - a);\n\t\t} while (Math.abs(x - h1 / k1) > x * tolerance);\n\n\t\treturn h1 + \" \" + k1;\n\t}\n\n\tpublic static long invcount(int arr[]) {\n\t\tif (arr.length < 2) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tint mid = (arr.length + 1) / 2;\n\n\t\tint left[] = Arrays.copyOfRange(arr, 0, mid);\n\t\tint right[] = Arrays.copyOfRange(arr, mid, arr.length);\n\n\t\treturn invcount(left) + invcount(right) + merge(arr, left, right);\n\n\t}\n\n\tpublic static long merge(int arr[], int left[], int right[]) {\n\t\tlong count = 0;\n\n\t\tint i = 0;\n\t\tint j = 0;\n\n\t\twhile (i < left.length || j < right.length) {\n\n\t\t\tif (i == left.length) {\n\t\t\t\tarr[i + j] = right[j];\n\t\t\t\tj++;\n\t\t\t} else if (j == right.length) {\n\t\t\t\tarr[j + i] = left[i];\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tif (left[i] <= right[j]) {\n\t\t\t\t\tarr[i + j] = left[i];\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\tarr[i + j] = right[j];\n\t\t\t\t\tj++;\n\t\t\t\t\tcount += left.length - i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * \n\t * @param div\n\t * @param left\n\t * @param right\n\t * @param value\n\t * @return the smallest index i which a[i] >= value in range [left, right)\n\t *         if exists, otherwise return -1\n\t */\n\tint ff(int[] div, int left, int right, int value) {\n\t\tint low = left;\n\t\tint high = right;\n\n\t\tif (value > div[right - 1]) {\n\t\t\treturn left;\n\t\t}\n\n\t\twhile (low != high) {\n\t\t\tint mid = (low + high) / 2;\n\t\t\tif (div[mid] < value) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\tif (low == right) {\n\t\t\treturn low;\n\t\t}\n\t\treturn low;\n\t}\n\n\t/**\n\t * \n\t * @param div\n\t * @param left\n\t * @param right\n\t * @param value\n\t * @return greatest index i which a[i] <= value in range [left, right) if\n\t *         exists, otherwise return a number out of [left, right)\n\t */\n\tint ffff(int[] div, int left, int right, int value) {\n\n\t\tif (value < div[left]) {\n\t\t\treturn right - 1;\n\t\t}\n\n\t\twhile (left != right) {\n\t\t\tint mid = (left + right) >> 1;\n\t\t\tif (div[mid] <= value) {\n\t\t\t\tleft = mid + 1;\n\t\t\t} else {\n\t\t\t\tright = mid;\n\t\t\t}\n\t\t}\n\t\tif (left < 0) {\n\t\t\tleft *= -1;\n\t\t}\n\t\treturn --left;\n\t}\n\n\tpublic static String reverse(String s) {\n\n\t\tString ans = \"\";\n\n\t\tfor (int i = s.length() - 1; i >= 0; i--) {\n\t\t\tans += s.charAt(i);\n\t\t}\n\n\t\treturn ans;\n\n\t}\n\n\tpublic static long sum(long x) {\n\t\treturn x < 10 ? x : x % 10 + sum(x / 10);\n\t}\n\n\tpublic static long gcd(long x, long y) {\n\t\tif (x == 0)\n\t\t\treturn y;\n\t\telse\n\t\t\treturn gcd(y % x, x);\n\t}\n\n\tstatic long inv(long x, long mod) {\n\t\tlong r, y;\n\t\tfor (r = 1, y = mod - 2; y != 0; x = x * x % mod, y >>= 1) {\n\t\t\tif ((y & 1) == 1)\n\t\t\t\tr = r * x % mod;\n\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic static long pow(long x, long y, long n) {\n\t\tif (y == 0)\n\t\t\treturn 1 % n;\n\t\tif (y % 2 == 0) {\n\t\t\tlong z = pow(x, y / 2, n);\n\t\t\treturn (z * z) % n;\n\t\t}\n\t\treturn ((x % n) * pow(x, y - 1, n)) % n;\n\t}\n\n\tpublic static boolean isPrime(long a) {\n\t\t// Corner cases\n\t\tif (a <= 1)\n\t\t\treturn false;\n\t\tif (a <= 3)\n\t\t\treturn true;\n\n\t\t// This is checked so that we can skip\n\t\t// middle five numbers in below loop\n\t\tif (a % 2 == 0 || a % 3 == 0)\n\t\t\treturn false;\n\n\t\tfor (long i = 5; i * i <= a; i = i + 6)\n\t\t\tif (a % i == 0 || a % (i + 2) == 0)\n\t\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\tvoid run() throws NumberFormatException, InputMismatchException, IOException {\n\t\tin = new FastScanner();\n\t\tout = new PrintWriter(System.out);\n\n\t\tsolve();\n\n\t\tout.close();\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(in.br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws NumberFormatException, InputMismatchException, IOException {\n\t\t// new Thread(null ,new Runnable(){\n\t\t// public void run(){\n\t\t// try{\n\t\t//\n\t\t// test();\n\t\t//\n\t\t// } catch(Exception e){\n\t\t// e.printStackTrace();\n\t\t// }\n\t\t// }\n\t\t// },\"1\",1<<26).start();\n\t\t// }\n\t\t// static StringBuilder sb;\n\t\t// public static void test() throws IOException{\n\t\t// sb=new StringBuilder();\n\t\t// int t=1;\n\t\t// while(t-->0){\n\t\t//\n\t\t// solve();\n\t\t//\n\t\t// }\n\t\t//\n\n\t\tnew Solution().run();\n\t}\n\n}\n\nclass Pair {\n\tint x;\n\tint y;\n\n\tpublic Pair(int i, int j) {\n\t\tthis.x = i;\n\t\tthis.y = j;\n\n\t}\n\n}\n\nclass MyComp implements Comparator<String> {\n\n\tint c = 0;\n\n\tMyComp(int d) {\n\t\tc = d;\n\t}\n\n\t@Override\n\tpublic int compare(String a, String b) {\n\n\t\t// < == -1\n\n\t\tString arr[] = a.split(\" \");\n\t\tString brr[] = b.split(\" \");\n\n\t\treturn arr[c].compareTo(brr[c]);\n\n\t}\n\n}\n\nclass MyComp2 implements Comparator<Pair> {\n\n\t@Override\n\tpublic int compare(Pair a, Pair b) {\n\n\t\t// < == -1\n\n\t\tif (a.y != b.y) {\n\t\t\treturn a.x - b.x;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    l = sorted(l)\n    prev = -1\n    v = [0]*102\n    for i in range(n):\n        v[l[i]] +=1\n    am = 2\n    ans = 0\n    for i in range(102):\n        if(v[i]< am):\n            ans+= (am-v[i])*i\n            am = v[i]\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=[int(j) for j in input().split()]\n    a,b=[],[]\n    f=[0]*101\n    for i in l:\n        f[i]+=1\n    for i in range(len(f)):\n        if f[i]!=0:\n            for j in range(f[i]):\n                if j%2==0:\n                    a.append(i)\n                else:\n                    b.append(i)\n    #print(f,a,b)\n    s=0\n    for i in range(101):\n        if i not in a:\n            s+=i\n            break\n    for i in range(101):\n        if i not in b:\n            s+=i\n            break\n    print(s)\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"T=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\n\nT=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    s=[int(x) for x in input().split()]\n    pos=[0]*101\n    for i in range(0,len(s)):\n        pos[s[i]]+=1\n\n    ans=0\n    flag=0\n    for i in range(0,101):\n        if(flag==0 and pos[i]==1):\n            flag=1\n            ans+=i\n\n        elif(flag==0 and pos[i]==0):\n            ans+=i\n            ans+=i\n            break\n\n        elif(flag==1 and pos[i]==0):\n            ans+=i\n            break\n\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (long long k = 0; k < t; k++) {\n    int n;\n    cin >> n;\n    vector<int> S;\n    for (long long i = 0; i < n; i++) {\n      int a;\n      cin >> a;\n      S.push_back(a);\n    }\n    sort(S.begin(), S.end());\n    int mex = 0;\n    for (long long i = 0; i < n; i++) {\n      if (S[i] == mex) {\n        mex++;\n      }\n    }\n    int mex2 = 0;\n    vector<int> A;\n    vector<int> B;\n    int ACurr = -1, BCurr = -1;\n    for (long long i = 0; i < n; i++) {\n      if (S[i] < mex) {\n        if (ACurr < 0) {\n          A.push_back(S[i]);\n          ACurr++;\n        } else if (A[ACurr] == S[i]) {\n          B.push_back(S[i]);\n          BCurr++;\n        } else {\n          A.push_back(S[i]);\n          ACurr++;\n        }\n      } else {\n        B.push_back(S[i]);\n        BCurr++;\n      }\n    }\n    for (long long i = 0; i < (int)B.size(); i++) {\n      if (B[i] == mex2) {\n        mex2++;\n      }\n    }\n    cout << (mex + mex2) << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor tc in range(t):\n    n=int(input())\n    c=list(map(int,input().split()))\n    c.sort()\n    b=c\n    # print(c)\n    a=[]\n    count=0\n    l=0\n    for i in range(101):\n        if i in b:\n            a.append(i)\n            b.remove(i)\n        else:\n            break\n    # print(a)\n    # print(b)\n    for mexA in range(102):\n        if mexA not in a:\n            break\n    # print(mexA)\n    for mexB in range(102):\n        if mexB not in b:\n            break\n    # print(mexB)\n    print(mexA+mexB)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int d[101];\n  int a[101];\n  int h1[101];\n  int h2[101];\n  int i, j, k, t, n, f1, f2;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    for (i = 0; i <= 100; i++) d[i] = 0;\n    for (i = 0; i <= 100; i++) h1[i] = 0;\n    for (i = 0; i <= 100; i++) h2[i] = 0;\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n      d[a[i]]++;\n    }\n    k = 0;\n    j = 0;\n    for (i = 0; i <= 100; i++) {\n      if (d[i] == 0)\n        continue;\n      else if (d[i] == 1) {\n        h1[i] = 1;\n      } else {\n        h1[i] = 1;\n        h2[i] = 1;\n      }\n    }\n    f1 = 0;\n    f2 = 0;\n    for (i = 0; i < 101; i++) {\n      if (h1[i] == 0) {\n        j = i;\n        f1 = 1;\n        break;\n      }\n    }\n    if (f1 == 0) j = 0;\n    for (i = 0; i < 101; i++) {\n      if (h2[i] == 0) {\n        k = i;\n        f2 = 1;\n        break;\n      }\n    }\n    if (f2 == 0) k = 0;\n    cout << k + j << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve(l):\n    d = dict()\n    s = set(l)\n    s = list(s)\n    s.sort()\n    for i in range(0, len(s)):\n        if i != s[i]:\n            mex_a = i\n            break\n        else:\n            if i == len(s) - 1:\n                mex_a = i + 1\n\n    for i in l:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n\n    for i in range(0, 101):\n        if i not in d.keys():\n            d[i] = 0\n\n    for i in range(0, 101):\n        if d[i] < 2:\n            mex_b = i\n            break\n    print(\"{}\".format(mex_a + mex_b))\n\n\ndef main():\n    for i in range(int(input())):\n        n = input()\n        solve([int(x) for x in input().split()])\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 1e18;\nsigned main() {\n  std ::ios_base ::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    vector<long long> v(n);\n    map<long long, long long> mp;\n    for (auto &x : v) {\n      cin >> x;\n      mp[x]++;\n    }\n    vector<long long> a, b;\n    long long p1 = inf, p2 = inf;\n    for (auto x : mp) {\n      if (x.second >= 2) {\n        a.emplace_back(x.first);\n        p1 = x.first;\n        for (long long i = 0; i < x.second - 1; i++) b.emplace_back(x.first);\n        p2 = x.first;\n      } else if (abs(x.first - p1) <= abs(x.first - p2)) {\n        a.emplace_back(x.first);\n        p1 = x.first;\n      } else {\n        b.emplace_back(x.first);\n        p2 = x.first;\n      }\n    }\n    long long need = 0, res, i;\n    for (i = 0; i < a.size(); i++) {\n      if (a[i] == need) {\n        long long j = i + 1;\n        while (j < a.size() && a[j] == need) j++;\n        i = j - 1;\n        need++;\n      } else {\n        res = need;\n        break;\n      }\n    }\n    if (i == a.size()) res = a[a.size() - 1] + 1;\n    need = 0;\n    for (i = 0; i < b.size(); i++) {\n      if (b[i] == need) {\n        long long j = i + 1;\n        while (j < b.size() && b[j] == need) j++;\n        i = j - 1;\n        need++;\n      } else {\n        res += need;\n        break;\n      }\n    }\n    if (b.size() != 0 && i == b.size()) res += b[b.size() - 1] + 1;\n    cout << res << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport heapq\nimport cProfile\nfrom collections import Counter, defaultdict, deque\nfrom functools import reduce\nimport math\n\n\ndef get_int():return int(stdin.readline().strip())\ndef get_tuple():return map(int, stdin.readline().split())\ndef get_list():return list(map(int, stdin.readline().split()))\n\n\ndef solve():\n    n = get_int()\n    ls = get_list()\n    ls.sort()\n    ans = 0\n    for i in range(101):\n        if i in ls:\n            ls.remove(i)\n        else:\n            ans += i\n            break\n    for i in range(101):\n        if i in ls:\n            ls.remove(i)\n        else:\n            ans += i\n            break\n    print(ans)\n\n\n\n\ndef main():\n    solve()\n\n\nTestCases = True\n\nif TestCases:\n    for i in range(get_int()):\n        main()\nelse:\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mxn = 1e17;\nint main() {\n  long long i, j, a, b, c, d, n, m, t;\n  cin >> t;\n  for (int zz = 1; zz <= t; zz++) {\n    cin >> n;\n    vector<long long> vec(n);\n    for (i = 0; i < n; i++) {\n      cin >> vec[i];\n    }\n    long long tem1 = 0, tem2 = 0;\n    sort(vec.begin(), vec.end());\n    long long tem = 0;\n    for (i = 0; i < n; i++) {\n      if (tem == vec[i]) {\n        vec[i] = 1000;\n        tem++;\n        continue;\n      } else if (tem > vec[i]) {\n        continue;\n      } else {\n        break;\n      }\n    }\n    sort(vec.begin(), vec.end());\n    tem1 = tem;\n    tem = 0;\n    for (i = 0; i < n; i++) {\n      if (tem == vec[i]) {\n        vec[i] = 1000;\n        tem++;\n        continue;\n      } else if (tem > vec[i]) {\n        continue;\n      } else {\n        break;\n      }\n    }\n    tem2 = tem;\n    cout << tem1 + tem2 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# Author : Pratyaydeep\u21afGhanta\nimport sys\ninp=sys.stdin.buffer.readline\ninar=lambda: list(map(int,inp().split()))\ninin=lambda: int(inp())\ninst=lambda: inp().decode().rstrip('\\n\\r')\n# Am I debugging, check if I'm using same variable name in two places\ndef mex(a):\n    for i in range(107):\n        if i not in a:\n            return i\n_T_=inin()\nfor _t_ in range(_T_):\n    n=inin()\n    ar=inar()\n    a=set()\n    b=set()\n    vis=set()\n    for i in ar:\n        if i not in vis:\n            vis.add(i)\n            a.add(i)\n        else:\n            b.add(i)\n    print(mex(a)+mex(b))\n\n"
        },
        {
            "language": 3,
            "solution": "import collections\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    d = {}\n    for i in range(len(arr)):\n        if arr[i] in d:\n            d[arr[i]] += 1\n        else:\n            d[arr[i]] = 1\n    i = 0\n    A = 0\n    B = 0\n    while i in d and d[i] >= 2:\n        A = i + 1\n        B = i + 1\n        i += 1\n    while i in d:\n        A = i + 1\n        i += 1\n    print(A + B)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    A=sorted([int(_) for _ in input().split()])\n    S=sorted(list(set(A)))\n    \n    D1={}\n    D2={}\n    for _ in range(n):\n        if A[_] in D1:\n            D2[A[_]]=1\n        else:\n            D1[A[_]]=1\n    A=sorted(list(D1.keys()))\n    B=sorted(list(D2.keys()))\n    #print(A,B)\n    \n    x=0\n    i=0\n    while i<len(A):\n        if i!=A[i]:\n            break\n        i+=1\n    x+=i\n    \n    j=0\n    while j<len(B):\n        if j!=B[j]:\n            break\n        j+=1\n    x+=j\n    print(x)"
        },
        {
            "language": 3,
            "solution": "# code by RAJ BHAVSAR\nfor _ in range(int(input())):\n\tn = int(input())\n\tarr = list(map(int,input().split()))\n\tarr.sort()\n\ts,e = 0,0\n\tfor i in arr:\n\t\tif(i == s):\n\t\t\ts += 1\n\t\telse:\n\t\t\tif(i == e):\n\t\t\t\te += 1\n\tprint(s+e)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\tcnt = []\n\tres = 0\n\tfor i in range(101):\n\t\tcnt.append(arr.count(i))\n\tfor i in range(101):\n\t\tif cnt[i]==0:\n\t\t\tres += i\n\t\t\tbreak\n\tfor i in range(101):\n\t\tif cnt[i] <= 1:\n\t\t\tres += i\n\t\t\tbreak\n\tprint(res)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    a, b = [], []\n    x = -1\n    for i in arr:\n        if i != x:\n            a.append(i)\n            x = i\n        else:\n            b.append(i)\n    # print(a, b)\n    m, ma, mb = 0, -1, -1\n    if a[0] == 0:\n        for i in range(len(a) - 1):\n            if a[i + 1] - a[i] > 1:\n                ma = (a[i] + 1)\n                break\n        if ma == -1:\n            ma = a[len(a) - 1] + 1\n    else:\n        ma = 0\n\n    if len(b) == 0:\n        mb = 0\n    elif b[0] == 0:\n        for i in range(len(b) - 1):\n            if b[i + 1] - b[i] > 1:\n                mb = (b[i] + 1)\n                break\n        if mb == -1:\n            mb = b[len(b) - 1] + 1\n    else:\n        mb = 0\n    m = ma + mb\n    print(m)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor q in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    N=[0]*101\n    for i in l:\n        N[i]+=1\n    s=0\n    for i in range(101):\n        if N[i]>0:\n            N[i]-=1\n        else:\n            s=i\n            break\n    for i in range(101):\n        if N[i]>0:\n            N[i]-=1\n        else:\n            s=s+i\n            break\n    print(s)\n        \n        \n        "
        },
        {
            "language": 3,
            "solution": "def check(a):\n    a = set(a)\n    for i in range(101):\n        if i not in a:\n            return i\n    else:\n        return 101\n\n\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = check(l)\n    x = 0\n    while x < m:\n        l.remove(x)\n        x += 1\n    m1 = check(l)\n    print(m + m1)\n    "
        },
        {
            "language": 3,
            "solution": "ct = input()\nfor line in range(int(ct)):\n    x = input()\n    n = [int(i) for i in input().split()]  \n\n    first = []\n    second = []\n    for i in n:\n        if i not in first:\n            first.append(i)\n        else:\n            second.append(i)\n    for k in range(101):\n        if k not in first:\n            fFinal = k\n            break\n    for k in range(101):\n        if k not in second:\n            sFinal = k\n            break\n    \n    print(fFinal + sFinal)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, lst, cnt, ans = int(input()), sorted(map(int, input().split(\" \"))), 0, 0\n    for i in range(101):\n        if i in lst:\n            lst.remove(i)\n        else:\n            ans += i\n            break\n    for i in range(101):\n        if i in lst:\n            lst.remove(i)\n        else:\n            ans += i\n            break\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    vector<int> a(105);\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      a[x]++;\n    }\n    int b = -1;\n    int c = -1;\n    for (int i = 0; i <= 105; i++) {\n      if (a[i] > 0) {\n        a[i]--;\n      } else {\n        b = i;\n        break;\n      }\n    }\n    for (int i = 0; i <= 105; i++) {\n      if (a[i] > 0) {\n        a[i]--;\n      } else {\n        c = i;\n        break;\n      }\n    }\n    cout << b + c << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn,l,a,b=int(input()),list(map(int,input().strip().split())),0,0\n\tl.sort()\n\tfor x in l:\n\t\tif x==a:a+=1\n\t\telif x==b:b+=1\n\tprint(a+b)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    co = Counter(a)\n    b = []\n    c = []\n    b1 = -1\n    c1 = -1\n    for i in range(101):\n        if(i in co):\n            if(co[i]==1):\n                b.append(i)\n            else:\n                b.append(i)\n                c.append(i)\n    # for i in a:\n    #     if i not in b:\n    #         b.append(i)\n    #     else:\n    #         c.append(i)\n    if(len(b)==0):\n        b1 = 0\n    else:\n        for i in range(len(b)):\n            if i!=b[i]:\n                b1 = i\n                break\n    if(len(c)==0):\n        c1 = 0\n    else:\n        for i in range(len(c)):\n            if i!=c[i]:\n                c1= i\n                break\n    if b1==-1:\n        b1 = max(b)+1\n    if c1==-1:\n        c1 = max(c)+1\n    print(b1+c1)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    _ = input()\n    arr = [int(n) for n in input().split(\" \")]\n\n    counts = [0 for _ in range(101)]\n    for x in arr:\n        counts[x] += 1\n\n    res = 0\n    for _ in range(2):\n        curr = 0\n        while counts[curr] > 0:\n            counts[curr] -= 1\n            curr += 1\n        res += curr\n\n    print(res)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A\n{\n   public static void main(String[] args) throws IOException\n   {\n      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n      PrintWriter out = new PrintWriter(System.out);\n      int T = Integer.parseInt(br.readLine());\n      for(int t = 0; t < T; t++){\n         int N = Integer.parseInt(br.readLine());\n         StringTokenizer st = new StringTokenizer(br.readLine());\n         int[] arr = new int[N];\n         for(int i = 0; i < N; i++){\n            arr[i] = Integer.parseInt(st.nextToken());\n         }\n         Arrays.sort(arr);\n         int ac = 0; int bc = 0;\n         ArrayList<Integer> alist = new ArrayList<Integer>();\n         ArrayList<Integer> blist = new ArrayList<Integer>();\n         for(int i = 0; i < N; i++){\n            if(arr[i] == ac){\n               ac++;\n            }\n            else if(arr[i] == bc){\n               bc++;\n            }\n         }\n         out.println(ac + bc);\n      }\n      out.close();\n   }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import Counter as C\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    \n    cnts=C(a)\n    ans=0\n    b=2\n    for i in range(101):\n        b=min(b,cnts[i])\n        ans+=b\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    # arr = sorted(arr)\n    arr_d = {}\n    for elem in arr:\n        arr_d[elem] = arr_d.get(elem, 0) + 1\n    mexs = -1\n    # mexcounted = 0\n    isconti = True\n    for i in range(101):\n        # print('mexs',mexs)\n        count = arr_d.get(i, 0)\n        if count == 0:\n            if mexs == -1:\n                mexs = 2*i\n                # mexcounted = 2\n            else:\n                mexs += i\n            break\n        if count == 1:\n            if mexs == -1:\n                mexs = i\n                # mexcounted = 1\n            elif isconti:\n                continue\n            else:\n                mexs += i\n                # mexcounted = 2\n                break\n        if count == 0:\n            isconti = False\n    print(mexs)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nwhile n>0:\n    n-=1\n    te = int(input())\n    a = [int(x) for x in input().split(' ')]\n    d= {}\n    for i in range(len(a)):\n        if a[i] in d:\n            d[a[i]]+=1\n        else:\n            d[a[i]] = 1\n    ans = 0\n    f = 0\n    for i in range(len(a)):\n        if f == 0:\n            if i not in d:\n                ans+=2*i\n                break\n            elif d[i] == 1:\n                ans+=i\n                f = 1\n        elif f == 1:\n            if i not in d:\n                ans+=i\n                f-=1\n                break\n    if f == 2:\n        ans = (max(a)+1)*2\n    elif f == 1:\n        ans+=max(a)+1\n    print(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class A1406 {\n\t\t\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tint tc=sc.nextInt();\n\t\tfor(int i=0; i<tc; i++)\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tint[] arr= new int[101];\n\t\t\tfor(int j=0; j<n; j++)\n\t\t\t{\n\t\t\t\tarr[sc.nextInt()]++;\n\t\t\t}\n\t\t\tint sum=0;\n\t\t\tfor(int j=0; j<101; j++)\n\t\t\t{\n\t\t\t\tif(arr[j]==0)\n\t\t\t\t{\n\t\t\t\t\tsum+=2*j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(arr[j]==1)\n\t\t\t\t{\n\t\t\t\t\tsum+=j;\n\t\t\t\t\tj++;\n\t\t\t\t\twhile(arr[j]>=1)\n\t\t\t\t\t{\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tsum+=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sum);\n\n\t\t}\n\n\t\t\t\n\n\t\t\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "# Fast IO (be careful about bytestring, not on interactive)\n\nimport os,io\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    elemCount = [0] * 101\n    for elem in a:\n        elemCount[elem] += 1\n    twoMax = -1\n    twoMaxEnd = False\n    oneMax = -1\n    for i in range(101):\n        if elemCount[i] == 0:\n            break\n        if elemCount[i] == 1:\n            oneMax = i\n            twoMaxEnd = True\n        if elemCount[i] >= 2 and twoMaxEnd:\n            oneMax = i\n        if elemCount[i] >= 2 and not twoMaxEnd:\n            oneMax = i\n            twoMax = i\n    print(oneMax + 1 + twoMax + 1)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long int n;\n  cin >> n;\n  vector<long long int> v(n);\n  map<long long int, long long int> m;\n  for (auto &i : v) {\n    cin >> i;\n  }\n  for (auto it : v) {\n    m[it]++;\n  }\n  long long int c = 0, count = 0;\n  long long int a = -1, b = -1;\n  for (auto it : m) {\n    if (it.first != c) {\n      if (count == 0) {\n        a = c;\n        b = c;\n      } else {\n        a = c;\n      }\n      break;\n    }\n    if (it.second < 2 && count == 0) {\n      b = c;\n      count++;\n    }\n    if (count == 2) break;\n    c++;\n  }\n  if (a == -1) a = c;\n  if (b == -1) b = c;\n  cout << a + b << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class SubsetMex {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        for (int x = 0; x < t; x++) {\n            int n = sc.nextInt();\n            Set<Integer> s1 = new HashSet<>(), s2 = new HashSet<>();\n            for (int i = 0; i < n; i++) {\n                int num = sc.nextInt();\n                if (s1.contains(num)) {\n                    s2.add(num);\n                } else {\n                    s1.add(num);\n                }\n            }\n            System.out.println(mex(s1) + mex(s2));\n        }\n    }\n    public static int mex(Set<Integer> s) {\n        for (int i = 0; i <= 100; i++) {\n            if (!s.contains(i)) {\n                return i;\n            }\n        }\n        return 0;\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class pb1 {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\n\t\tint t = in.nextInt();\n\t\tfor (int ti = 0; ti < t; ti++) {\n\t\t\tint n = in.nextInt();\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) a[i] = in.nextInt();\n\t\t\tArrays.sort(a);\n\t\t\tint[] cnts = new int[101];\n\t\t\tArrays.fill(cnts, -1);\n\t\t\tfor (int i = 0; i < n; i++) cnts[a[i]]++;\n\t\t\tint mx = -1;\n\t\t\tfor (int i = 0; i <= 100; i++) {\n\t\t\t\tif (i > 0 && cnts[i-1] < 0) break;\n\t\t\t\tint astop = 101;\n\t\t\t\tfor (int j = 0; j <= 100; j++) {\n\t\t\t\t\tif (cnts[j] == -1) {\n\t\t\t\t\t\tastop = j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < i && cnts[j] <= 0) {\n\t\t\t\t\t\tastop = j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmx = Math.max(mx, i+astop);\n\t\t\t}\n\t\t\tSystem.out.println(mx);\n\t\t}\n\t\tin.close();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid test_case() {\n  long long int n;\n  cin >> n;\n  vector<long long int> a(n);\n  for (long long int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  sort(a.begin(), a.end());\n  long long int i = 0, j = 0;\n  for (long long int k = 0; k < n; k++) {\n    long long int nax = max(i, j);\n    long long int nim = min(i, j);\n    if (a[k] == nax) {\n      if (i == nax) {\n        i++;\n      } else {\n        j++;\n      }\n      continue;\n    } else if (a[k] == nim) {\n      if (j == nim) {\n        j++;\n      } else {\n        i++;\n      }\n    } else {\n      if (a[k] != a[k - 1]) {\n        break;\n      }\n    }\n  }\n  cout << i + j << '\\n';\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int T = 1;\n  cin >> T;\n  for (long long int TT = 1; TT <= T; TT++) {\n    test_case();\n  }\n  cerr << '\\n'\n       << \"Time : \" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC\n       << \"ms\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor r in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = list(set(l))\n    s.sort()\n    w = [];p = [];a = [];b = [];y=0\n    c = 0\n    if 0 not in l:\n        c = 0\n    else:\n        for i in s:\n            w.append(l.count(i))\n            p.append(i)\n        p.sort()\n\n        for i in range(len(s)):\n            if s[i] != i:\n                y = i\n                break\n\n        e = list(set(w))\n        if e[0]>=3:\n            e[0]=2\n        if len(e) == 1:\n            if y!=0 :\n                c = y * e[0]\n            else:\n                c=(p[-1]+1)*e[0]\n        else:\n            d=0;f=0\n            for i in range(len(p)):\n                if w[i] == 1:\n                    a.append(p[i])\n                else:\n                    a.append(p[i])\n                    b.append(p[i])\n            for i in range(len(a)):\n                if a[i] != i:\n                    d = i\n                    break\n            a.sort()\n\n            if d==0 and 0 in a:\n                c+=a[-1]+1\n            else:\n                c+=d\n            for i in range(len(b)):\n                if b[i] != i:\n                    f = i\n                    break\n            b.sort()\n\n            if f==0 and 0  in b:\n                c+=b[-1]+1\n            else:\n                c+=f\n\n    print(c)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.valueOf(reader.readLine());\n        while((t--) != 0) {\n            int n = Integer.valueOf(reader.readLine());\n            int[] info = new int[n];\n            int[] cnt = new int[101];\n            String[] tmp = reader.readLine().split(\" \");\n            for(int i=0; i<n; i++) {\n                info[i] = Integer.valueOf(tmp[i]);\n                cnt[info[i]]++;\n            }\n            int idx1 = -1;\n            int idx2 = -1;\n            for(int i=0; i<101; i++) {\n                if(cnt[i] < 2 && idx1 == -1) {\n                    idx1 = i;\n                }\n                if(idx1 != -1 && idx2 == -1 && cnt[i] == 0) {\n                    idx2 = i;\n                    break;\n                }\n            }\n            System.out.println(idx1 + idx2);\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, x;\n    int a1 = 0;\n    int a2 = 0;\n    int flag1 = 0;\n    int flag2 = 0;\n    cin >> n;\n    int h[101];\n    memset(h, 0, sizeof(h));\n    for (int i = 0; i < n; i++) {\n      cin >> x;\n      h[x]++;\n    }\n    for (int i = 0; i <= 100; i++) {\n      if (flag1 == 1 && flag2 == 1) break;\n      if (h[i] == 0) {\n        if (flag1 == 0) {\n          a1 = i;\n          flag1 = 1;\n        }\n        if (flag2 == 0) {\n          a2 = i;\n          flag2 = 1;\n        }\n      }\n      if (h[i] == 1) {\n        if (flag1 == 0) {\n          a1 = i;\n          flag1 = 1;\n        } else if (flag2 == 0) {\n          a2 = i;\n        }\n      }\n    }\n    int ans = a1 + a2;\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nfrom collections import Counter\nfrom itertools import islice\n\ndef find_missing(nums):\n    nums = list(nums)\n    nums.sort()\n    missing  = 0\n    for i in range(len(nums)):\n        if nums[i] == missing:\n            missing += 1\n    return missing\n\n\ndef find_mex(arr):\n    ctr = Counter(arr)\n    arr.sort()\n    #print(\"The sorted array is:\", arr)\n    seta, setb = set(), set()\n\n    #nums = [arr[i:i+2] for i in range(0, len(arr), 2)]\n\n    for i, c in enumerate(arr):\n        if ctr[c] >=2:\n            seta.add(c)\n            setb.add(c)\n        else:\n            seta.add(c)\n\n    #print(seta, setb)\n    missing1 = find_missing(seta)\n    missing2 = find_missing(setb)\n\n    return missing1 + missing2\n\nif __name__ == '__main__':\n    t = int(input())\n    while t > 0:\n        n = input()\n        arr = list(map(int, input().split()))\n        op = find_mex(arr)\n        print(op)\n        t -= 1"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math,bisect\nsys.setrecursionlimit(10 ** 5)\nfrom collections import defaultdict\nfrom itertools import groupby,accumulate\nfrom heapq import heapify,heappop,heappush\nfrom collections import deque,Counter,OrderedDict\ndef I(): return int(sys.stdin.readline())\ndef neo(): return map(int, sys.stdin.readline().split())\ndef Neo(): return list(map(int, sys.stdin.readline().split()))\nfor _ in range(I()):\n    N = I()\n    A = Neo()\n    Ans,f = 0,0\n    for i in range(101):\n        if A.count(i) == 1 and f == 0:\n            Ans = i\n            f = 1\n        elif A.count(i) == 0:\n            if f == 1:\n                Ans += i\n            else:\n                Ans += 2*i\n            break\n    print(Ans)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    a=list(map(int,input().strip().split(\" \")))\n    x=[0 for _ in range(101)]\n    for i in a:\n        x[i]+=1\n    f1=0;f2=0\n    ans=0\n    \n    for i in range(101):\n        if f1==0 and f2==0 and x[i]==1:\n            f1=1\n            ans+=i\n        elif f1==0 and f2==0 and x[i]==0:\n            f1=1\n            f2=1\n            ans+=2*i\n            break\n        elif f2==0 and x[i]==0:\n            ans+=i\n            break\n    print(ans)\n        \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    net = [0] * 101\n    for i in set(a):\n        net[i] = a.count(i)\n    for j in range(len(net)):\n        if net[j] == 0:\n            x = j\n            break\n        net[j] -= 1\n    for k in range(len(net)):\n        if net[k] == 0:\n            y = k\n            break\n        net[k] -= 1\n    print(x + y)\n    t -= 1\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n# import bisect\n# import heapq\n# import math\n# import random\n# from collections import Counter, defaultdict, deque\n# from decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\n# from fractions import Fraction\n# from functools import lru_cache, reduce\n# from itertools import combinations, combinations_with_replacement, product, permutations, accumulate\n# from operator import add, mul, sub, itemgetter, attrgetter\n\n\nimport sys\n# sys.setrecursionlimit(10**6)\n# readline = sys.stdin.buffer.readline\nreadline = sys.stdin.readline\n\nINF = 1 << 60\n\n\ndef read_int():\n    return int(readline())\n\n\ndef read_int_n():\n    return list(map(int, readline().split()))\n\n\ndef read_float():\n    return float(readline())\n\n\ndef read_float_n():\n    return list(map(float, readline().split()))\n\n\ndef read_str():\n    return readline().strip()\n\n\ndef read_str_n():\n    return readline().strip().split()\n\n\ndef ep(*args):\n    print(*args, file=sys.stderr)\n\n\ndef mt(f):\n    import time\n\n    def wrap(*args, **kwargs):\n        s = time.perf_counter()\n        ret = f(*args, **kwargs)\n        e = time.perf_counter()\n\n        ep(e - s, 'sec')\n        return ret\n\n    return wrap\n\nfrom collections import Counter\n\n# @mt\ndef slv(N, A):\n    c = Counter(A)\n    for i in range(10000):\n        if c[i] < 2:\n            a = i\n            break\n\n    for i in range(10000):\n        if c[i] < 1:\n            b = i\n            break\n\n    return a + b\n\n\ndef main():\n\n    for _ in range(read_int()):\n        N = read_int()\n        A = read_int_n()\n        print(slv(N, A))\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MX = 200;\nconst long long mod = 1e9 + 7;\nconst long long inf = 1e9;\nint f[MX];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int tc, n;\n  cin >> tc;\n  while (tc--) {\n    cin >> n;\n    memset(f, 0, sizeof(f));\n    for (int i = 1; i <= n; i++) {\n      int x;\n      cin >> x;\n      f[x]++;\n    }\n    int mx = 0;\n    for (int i = 0; i <= 100; i++) {\n      if (f[i] == 0) {\n        mx = i;\n        break;\n      } else\n        mx = i + 1;\n    }\n    int mx2 = 0;\n    for (int i = 0; i <= 100; i++) {\n      if (f[i] >= 2)\n        mx2 = i + 1;\n      else\n        break;\n    }\n    cout << mx2 + mx << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/**\n * @author Finn Lidbetter\n */\nimport java.util.*;\nimport java.io.*;\nimport java.awt.geom.*;\n\npublic class TaskA {\n  public static void main(String[] args) throws IOException {\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    int nTests = Integer.parseInt(br.readLine());\n    for (int test=0; test<nTests; test++) {\n      int n = Integer.parseInt(br.readLine());\n      int[] arr = new int[n];\n      String[] s = br.readLine().split(\" \");\n      for (int i=0; i<n; i++) {\n        arr[i] = Integer.parseInt(s[i]);\n      }\n      Arrays.sort(arr);\n      HashSet<Integer> a = new HashSet<>();\n      HashSet<Integer> b = new HashSet<>();\n      for (int i=0; i<n; i++) {\n        if (a.contains(arr[i])) {\n          b.add(arr[i]);\n        } else {\n          a.add(arr[i]);\n        }\n      }\n      int mexA = 0;\n      for (int i=0; i<200; i++) {\n        if (!a.contains(i)) {\n          mexA = i;\n          break;\n        }\n      }\n      int mexB = 0;\n      for (int i=0; i<200; i++) {\n        if (!b.contains(i)) {\n          mexB = i;\n          break;\n        }\n      }\n      System.out.println(mexA + mexB);\n    }\n  }\n  \n\n}\n\nclass MyUtils {\n  static void shuffleArray(int[] arr) {\n    int n = arr.length;\n    Random rnd = new Random();\n    for(int i=0; i<n; i++) {\n      int tmp = arr[i];\n      int randomPos = i + rnd.nextInt(n-i);\n      arr[i] = arr[randomPos];\n      arr[randomPos] = tmp;\n    }\n  }\n  static void shuffleArray(long[] arr) {\n    int n = arr.length;\n    Random rnd = new Random();\n    for(int i=0; i<n; i++) {\n      long tmp = arr[i];\n      int randomPos = i + rnd.nextInt(n-i);\n      arr[i] = arr[randomPos];\n      arr[randomPos] = tmp;\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\npriority_queue<long long int, vector<long long int>, greater<long long int> >\n    ti;\nvector<long long int> r[300005], y[300005], b(300005, 0), f(2000005, 0);\nlong long int vis[200005];\nmap<pair<long long int, long long int>, long long int> mp;\nset<pair<long long int, long long int> > s;\nset<long long int> st;\nmap<long long int, long long int> np, v;\nqueue<long long int> qy;\nlong long int gcd(long long int a, long long int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long int bpow(long long int a, long long int b) {\n  long long int res = 1;\n  while (b > 0) {\n    if (b & 1) res = (res * a) % 998244353;\n    a = (a * a) % 998244353;\n    b >>= 1;\n  }\n  return res % 998244353;\n}\nlong long int fact(long long int i) {\n  f[0] = 1;\n  for (long long int k = 1; k <= i; k++) {\n    (f[k] = f[k - 1] * k) %= 998244353;\n  }\n  return f[i];\n}\nlong long int isprime(long long int n) {\n  if (n == 1) return 0;\n  for (long long int i = 2; i <= sqrt(n); i++)\n    if (n % i == 0) return 0;\n  return 1;\n}\nvector<long long int> p, q;\nvoid add() {\n  long long int k = p.size();\n  vector<long long int> f;\n  for (long long int i = 0; i < k; i++) {\n    q.push_back(p[i]);\n    long long int j = 0;\n    while (j < f.size()) {\n      q.push_back(f[j]);\n      j++;\n    }\n    f = q;\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    vector<long long int> a(n);\n    map<long long int, long long int> mp;\n    for (long long int i = 0; i < n; i++) {\n      cin >> a[i];\n      mp[a[i]]++;\n    }\n    long long int c1 = 0, c2 = 0;\n    long long int f = 0;\n    for (long long int i = 0; i < n; i++) {\n      if (mp[i] >= 1) {\n        c1++;\n        if (mp[i] == 1) f = 1;\n      }\n      if (mp[i] > 1 && f == 0) {\n        c2++;\n      }\n      if (mp[i] == 0) {\n        break;\n      }\n    }\n    cout << c1 + c2 << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n, i, j;\n  cin >> n;\n  int a[n];\n  vector<long long> s1;\n  vector<long long> s2;\n  vector<long long> f(101);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    f[a[i]]++;\n  }\n  for (int i = 0; i < 101; i++) {\n    if (f[i] > 1) {\n      s1.push_back(i);\n      s2.push_back(i);\n    } else if (f[i] == 1) {\n      s2.push_back(i);\n    }\n  }\n  for (i = 0; i < s1.size(); i++) {\n    if (i != s1[i]) {\n      break;\n    }\n  }\n  for (j = 0; j < s2.size(); j++) {\n    if (j != s2[j]) {\n      break;\n    }\n  }\n  cout << i + j << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  ;\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#author : dazlersan1\n\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    ans=0\n    flag=0\n    ans=[0 for i in range(101)]\n    for i in a:\n        ans[i]+=1\n    for i in range(len(ans)):\n        if(ans[i]>=2 and flag==0):\n            continue\n        elif(ans[i]==1 and flag==0):\n            cor=i\n            flag=1\n        elif(ans[i]==0):\n            if(flag==0):\n                cor=i*2\n            else:\n                cor+=i\n            break\n    print(cor)\n            \n    \n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    \n    a.sort()\n    i=0\n    ans=0\n    x1=0\n    x2=0\n    l1=[]\n    l2=[]\n    \n    while(i<n):\n        if a.count(a[i])>=2:\n            l1.append(a[i])\n            l2.append(a[i])\n            i+=a.count(a[i])\n            \n        elif a.count(a[i])==1:\n            l1.append(a[i])\n            i+=1\n            \n        else:\n            i+=1\n    \n    for j in l1:\n        if j!=x1:\n            break\n        x1+=1\n        \n    for j in l2:\n        if j!=x2:\n            break\n        x2+=1\n        \n    print(x1+x2)\n                           "
        },
        {
            "language": 3,
            "solution": "def f(l):\n    for j in range(max(l)+2):\n        if j not in l:\n            return j\n            break\nfor t in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l1=[]\n    l2=[]\n    mex=0\n    for i in l:\n        if i not in l1:\n            l1.append(i)\n        else:\n            l2.append(i)\n    \n    if len(l2)>0:\n        mex=f(l1)+f(l2)\n    else:\n        mex=f(l1)\n    print(mex)\n    "
        },
        {
            "language": 3,
            "solution": "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if a.count(0) == 0:\n        print(\"0\")\n    elif a.count(0) == 1:\n        a.sort()\n        count = 0\n        ans = 0\n        for i in range(n-1):\n            if a[i+1]-a[i] == 0 or a[i+1]-a[i] ==1:\n                count += 1\n                pass\n            else:\n                ans = a[i]\n                break\n        if count == n-1:\n            print(a[-1]+1)\n        else:\n            print(ans+1)\n    else:\n        a.sort()\n        j = 0\n        b = []\n        while j < n:\n            if j in a:\n                b.append(j)\n                a.remove(j)\n                j+=1\n            else:\n                break\n        a.sort()\n        ans = b[-1]+1\n        count = 0\n        ans1 = 0\n        for i in range(len(a)-1):\n            if a[i+1]-a[i] == 0 or a[i+1]-a[i] ==1:\n                count += 1\n                pass\n            else:\n                ans1 = a[i]+1\n                break\n        if count == len(a)-1:\n            print(a[-1]+1+ans)\n        else:\n            print(ans1+ans)"
        },
        {
            "language": 3,
            "solution": "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        d = {}\n        for j in a:\n            if j not in d:\n                d[j] = 1\n            else:\n                d[j] += 1\n        mexa = mexb = -1\n        #print(d)\n        for i in range(102):\n            #print(i)\n            if i not in d:\n                if mexa == -1:\n                    mexa = mexb = i\n                else:\n                    mexb = i\n            elif d[i] >= 2:\n                continue\n            elif d[i] == 1:\n                #`print(mexa, mexb)\n                if mexa == -1:\n                    mexa = i\n            if mexa != -1 and mexb != -1:\n                break\n        print(mexa + mexb)\nmain()"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as dd, deque, Counter\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    A = Counter(int(x) for x in input().split())\n\n    res = 0\n    i = 0\n    while True:\n        if A[i] >= 2:\n            res += 2\n        else:\n            break\n        i += 1\n    while True:\n        if A[i] >= 1:\n            res += 1\n        else:\n            break\n        i += 1\n    print(res)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\nT = int(input())\nfor t in range(1,T + 1):\n\tcount = dict()\n\tfor i in range(0,101):\n\t\tcount[i] = 0\n\tn = int(input())\n\t_input = list(map(int,input().split()))\n\tfor i in _input:\n\t\tcount[i] += 1\n\tnum1 = 0; num2 = 0\n\tfor i in range(0,101):\n\t\tif count[i] == 0:\n\t\t\tnum1 = i\n\t\t\tbreak\n\t\tcount[i] -= 1\n\tfor i in range(0,101):\n\t\tif count[i] == 0:\n\t\t\tnum2 = i\n\t\t\tbreak\n\tprint(num1 + num2)\n"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import defaultdict\n \n \nfor _ in range(int(input())):\n    \n    n=int(input())\n                    \n    a=list(map(int,input().split())) \n    if 0 not in a:\n        print(0)\n    elif a.count(0)==1:\n        for i in range(1,101):\n            if i not in a:\n                print(i)\n                break\n    else:\n        an=10**5\n        for i in range(1,101):\n            k=a.count(i)\n            if k==1:\n                an=min(i,an)\n            \n            elif k==0:\n                if an!=10**5:\n                    \n                    print(an+i)\n                    break\n                else:\n                    print(2*i)\n                    break\n                \n                \n   "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor test in range(int(input())):\n    n = int(input())\n    \n    arr = tuple(map(int, input().split()))\n    \n    c = Counter(arr)\n    \n    for item in c:\n        if c[item] > 2:\n            c[item] = 2 \n    \n    A = []\n    B = []\n    \n    mex1 = 0\n    mex2 = 0\n    \n    for i in range(0, len(arr)):\n        if i in c:\n            if c[i] == 2:\n                mex1 += 1\n                mex2 += 1\n            else:\n                mex1 += 1\n                break\n        else:\n            break\n    \n    if i in c:\n        i += 1\n        while i in c:\n            mex1 += 1\n            i += 1\n\n    print(mex1 + mex2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1000000007;\nlong long rng(long long l, long long u) {\n  double f = 1. / (RAND_MAX + 1);\n  return l + rand() * f * (u - l + 1);\n}\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nlong long lcm(long long a, long long b) { return a / gcd(a, b) * b; }\nlong long bpow(long long a, int n) {\n  return n ? n & 1 ? bpow(a, n - 1) * a : bpow(a * a, n >> 1) : 1;\n}\nbool prime(int n) {\n  if (!n || n == 1) return 0;\n  for (int i = 2; i <= sqrt(n); ++i) {\n    if (n % i == 0) return 0;\n  }\n  return 1;\n}\nvoid solve() {\n  multiset<int> s;\n  int n;\n  cin >> n;\n  for (int x, i = 0; i < n; ++i) {\n    cin >> x;\n    s.insert(x);\n  }\n  int k = 0, sum = 0;\n  for (int i = 0; i <= 101; ++i) {\n    if (s.count(i) == 0) {\n      sum += 2 * i;\n      cout << sum;\n      return;\n    }\n    if (s.count(i) == 1) {\n      sum += i;\n      s.insert(i);\n      break;\n    }\n  }\n  for (int i = 0; i <= 101; ++i) {\n    if (s.count(i) == 0) {\n      sum += i;\n      break;\n    }\n  }\n  cout << sum;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; ++i) {\n    solve();\n    cout << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nfrom decimal import *\nimport random\n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    mrk = [1]*n\n    ans = 0\n    for i in range(101):\n        if(i in arr):\n            pos = arr.index(i)\n            arr.pop(pos)\n        else:\n            ans+=i\n            break\n    for i in range(101):\n        if(i in arr):\n            pos = arr.index(i)\n            arr.pop(pos)\n        else:\n            ans+=i\n            break\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Problem1 {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner input = new Scanner(System.in);\n\t\t\n\t\tint testCases = input.nextInt();\n\t\t\n\t\tfor (int i = 0; i < testCases; i++) {\n\t\t\t\n\t\t\t//build set\n\t\t\tint setLength = input.nextInt();\n\t\t\tint[] set = new int[setLength];\n\t\t\t\n\t\t\tfor (int j = 0; j < setLength; j++) {\n\t\t\t\t\n\t\t\t\tset[j] = input.nextInt();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t//calculate mex sum\n\t\t\tArrays.sort(set);\n\t\t\tint first = -1;\n\t\t\tint second = -1;\n\t\t\t\n\t\t\tfor (int j = 0; j < set.length; j++) {\n\n\t\t\t\t//second's turn, first == second + 1\n\t\t\t\tif (first == second + 1) {\n\t\t\t\t\tif (set[j] == first) {\n\t\t\t\t\t\tsecond++;\n\t\t\t\t\t} else if (set[j] == first + 1){\n\t\t\t\t\t\tfirst++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//flat case, first == second; or second is dead, first > second + 1\n\t\t\t\telse {\n\t\t\t\t\tif (set[j] == first + 1) {\n\t\t\t\t\t\tfirst++;\n\t\t\t\t\t} else if (set[j] == first) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//update to next integers\n\t\t\tfirst++;\n\t\t\tsecond++;\n\t\t\t\n\t\t\tSystem.out.println(first + second);\n\t\t}\n\t}\n\t\n}"
        },
        {
            "language": 3,
            "solution": "mod = 10**9 + 7\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    cnt = [0 for i in range(1000)]\n    for x in a:\n        cnt[x] += 1\n    for i in range(1001):\n        if cnt[i] > 1:\n            cnt[i] -= 1\n            ans += 1\n        else:\n            break\n\n    for i in range(1001):\n        if cnt[i] > 0:\n            ans += 1\n        else:\n            break\n    print(ans)\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author sergioRG\n */\npublic class Main {\n  public static void main(String[] args) {\n    InputStream inputStream = System.in;\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    PrintWriter out = new PrintWriter(outputStream);\n    TaskA solver = new TaskA();\n    solver.solve(1, in, out);\n    out.close();\n  }\n\n  static class TaskA {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n      int t = in.nextInt();\n      while (t-- > 0) {\n        int n = in.nextInt();\n        int[] cnt = new int[101];\n        for (int i = 0; i < n; ++i) {\n          ++cnt[in.nextInt()];\n        }\n        int once = 0, twice = 0;\n        for (int i = 0; i < 101; ++i) {\n          if (cnt[i] > 1 && twice == i) {\n            ++twice;\n            ++once;\n          } else if (cnt[i] > 0) {\n            ++once;\n          } else {\n            break;\n          }\n        }\n        out.println(Math.max(0, twice) + once);\n      }\n    }\n\n  }\n\n  static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n      reader = new BufferedReader(new InputStreamReader(stream), 65536 / 2);\n      tokenizer = null;\n    }\n\n    public String next() {\n      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n        try {\n          tokenizer = new StringTokenizer(reader.readLine());\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return tokenizer.nextToken();\n    }\n\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n  }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "for s in[*open(0)][2::2]:\n a=b=0\n for i in sorted(map(int,s.split())):\n  if i==a:a+=1\n  else:b+=i==b\n print(a+b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid dbg_out() { cerr << endl; }\ntemplate <typename Head, typename... Tail>\nvoid dbg_out(Head H, Tail... T) {\n  cerr << ' ' << H;\n  dbg_out(T...);\n}\nconst long double pi = 3.14159265359;\nconst long long mod = 1000000007;\nconst long long modc = 998244353;\nconst long long inf = LLONG_MAX;\nconst long long neg_inf = LLONG_MIN;\nlong long inline power(long long a, long long b, long long p) {\n  a %= p;\n  long long ans = 1;\n  while (b > 0) {\n    if (b & 1) ans = (ans * a) % p;\n    a = (a * a) % p;\n    b >>= 1;\n  }\n  return ans;\n}\nlong long mod_inv(long long n, long long p) { return power(n, p - 2, p); }\nbool inline isPrime(long long n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (long long i = 5; i * i <= n; i = i + 6)\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  return true;\n}\ntemplate <typename... T>\nvoid W(T &&...args) {\n  ((cout << fixed << setprecision(17) << args << \" \"), ...);\n  cout << endl;\n}\ntemplate <typename... T>\nvoid R(T &&...args) {\n  ((cin >> args), ...);\n}\nlong long ston(string s) {\n  long long a = 0;\n  reverse(s.begin(), s.end());\n  long long pow = 1;\n  for (long long i = 0; i < s.size(); i++) {\n    a += pow * (s[i] - '0');\n    pow *= 10;\n  }\n  return a;\n}\ntemplate <class T>\nstring to_binary(T n) {\n  string binaryNum;\n  long long i = 0;\n  while (n > 0) {\n    binaryNum.push_back((n % 2) + '0');\n    n = n / 2;\n    i++;\n  }\n  if ((long long)binaryNum.size() == 0) binaryNum.push_back('0');\n  reverse(binaryNum.begin(), binaryNum.end());\n  return binaryNum;\n}\nlong long bton(string &s, long long base) {\n  long long ans = 0;\n  long long pow = 1;\n  reverse(s.begin(), s.end());\n  for (auto x : s) {\n    if (x >= 'a' && x <= 'z')\n      ans += (x - 'a' + 10) * pow;\n    else\n      ans += (x - '0') * pow;\n    pow *= base;\n  }\n  return ans;\n}\ntemplate <class T>\nvoid wv(T &v) {\n  for (auto x : v) cout << x << \" \";\n  cout << endl;\n}\ntemplate <class T>\nvoid rv(T &v) {\n  for (long long i = 0; i < (long long)v.size(); i++) cin >> v[i];\n}\nstruct custom_hash {\n  static uint64_t splitmix64(uint64_t x) {\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM =\n        chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\nconst long long M = 2e5;\nvoid solve() {\n  long long i, j, sum = 0, prod = 1, maxl = neg_inf, minl = inf;\n  long long n;\n  cin >> n;\n  vector<long long> a(n);\n  rv(a);\n  unordered_map<long long, long long, custom_hash> m;\n  for (auto x : a) m[x]++;\n  long long first = -1, second = -1;\n  for (i = 0; i <= 101; i++) {\n    if (first == -1) {\n      if (m[i] == 0) first = i;\n    }\n    if (second == -1) {\n      if (m[i] <= 1) second = i;\n    }\n  }\n  cout << first + second << endl;\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long t = 1;\n  R(t);\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,collections as cc\ninput = sys.stdin.readline\nI = lambda : list(map(int,input().split()))\n\nt,=I()\nfor _ in range(t):\n\tn,=I()\n\tl=I()\n\tan=cc.Counter(l)\n\ta=b=0\n\tf=1\n\tfor i in range(n):\n\t\tif f:\n\t\t\tif an[i]>1:\n\t\t\t\ta+=1;b+=1\n\t\t\telif an[i]:\n\t\t\t\ta+=1;f=0\n\t\t\telse:\n\t\t\t\tbreak\n\t\telif an[i]:\n\t\t\ta+=1\n\t\telse:\n\t\t\tbreak\n\tprint(a+b)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nfor i in range(n):\n         l = int(input())\n         m = list(map(int,input().split()))\n         a = []\n         b = []\n         for i in m:\n                  if i in a:\n                           b.append(i)\n                  else:\n                           a.append(i)\n         s = set(range(101))\n         b = set(b)\n         a = set(a)\n         mex = min(s-a) + min(s-b)\n         print(mex)\n                  "
        },
        {
            "language": 3,
            "solution": "cases = int(input())\n\nfor case in range(cases):\n    n = int(input())\n    l = [int(s) for s in input().split()]\n    end = max(l)+2\n    d = {}\n    for i in range(end):\n        d[i] = 0\n    \n    for k in l:\n        d[k] +=1\n    \n    m1 = 0\n    m2 = 0\n    \n    for i in range(end):\n        if d[i]<1:\n            m1 = i\n            break\n    for i in range(end):\n        if d[i]<2:\n            m2 = i\n            break\n\n    print(max(0,m1)+max(0,m2))"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nT = int(input())\n\ndef mex(A):\n    # A is sorted\n    A = set(A)\n    for i in range(102):\n        if i not in A:\n            return i\n\nfor t in range(T):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    #ans = mex(A)\n    d = defaultdict(int)\n    for i in A:\n        d[i] += 1\n    first = 0\n    second = 0\n    second_fix = False\n    for i in range(102):\n        if d[i] < 2 and not second_fix:\n            second = i\n            second_fix = True\n        if d[i] < 1:\n            first = i\n            break\n    print(first + second)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class SubsetMex {\n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n\n    static Reader sc = new Reader();\n    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n    public static void main(String args[]) throws IOException {\n       int t = inputInt();\n       while(t-->0){\n           int n = inputInt();\n           int[] a = new int[n];\n           for(int i=0;i<n;i++){\n               a[i] = inputInt();\n           }\n           int[] count = new int[101];\n           for(int i=0;i<n;i++){\n               count[a[i]]++;\n           }\n          /* println(Arrays.toString(count));*/\n           ArrayList<Integer> al = new ArrayList<>();\n           ArrayList<Integer> bl = new ArrayList<>();\n           for(int i=0;i<101;i++){\n               if((count[i]&1) == 0 && count[i]!=0){\n                   al.add(i);\n                   bl.add(i);\n               }\n               else if(count[i]!=0) {\n                   if(count[i]>1)\n                   {\n                       al.add(i);\n                       bl.add(i);\n                   }\n                   else\n                       al.add(i);\n               }\n           }\n          /* println(al.toString());\n           println(bl.toString());*/\n           int mexa = countsort(al);\n           int mexb = countsort(bl);\n           println((mexa+mexb)+\"\");\n\n\n       }\n        bw.flush();\n        bw.close();\n    }\n    public static int countsort(ArrayList<Integer> al) throws IOException {\n        int[] count = new int[101];\n        count[0] = -1;\n        for(int i=0;i<al.size();i++){\n            count[al.get(i)] = al.get(i);\n        }\n        if(count[0] == -1)\n            return 0;\n       /* println(Arrays.toString(count)+\"\");*/\n        for(int i=0;i<101;i++){\n            if(i!=count[i])\n                return i;\n        }\n        return 0;\n    }\n\n    public static int inputInt() throws IOException {\n        return sc.nextInt();\n    }\n\n    public static long inputLong() throws IOException {\n        return sc.nextLong();\n    }\n\n    public static double inputDouble() throws IOException {\n        return sc.nextDouble();\n    }\n\n    public static String inputString() throws IOException {\n        return sc.readLine();\n    }\n\n    public static void print(String a) throws IOException {\n        bw.write(a);\n    }\n\n    public static void printSp(String a) throws IOException {\n        bw.write(a + \" \");\n    }\n\n    public static void println(String a) throws IOException {\n        bw.write(a + \"\\n\");\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n\tn = int(input())\n\ta = sorted(map(int, input().split()), reverse = True)\n\n\tA, B = [], []\n\tother = []\n\n\tA = list(set(a))\n\n\tfor i in A:\n\t\tdel a[a.index(i)]\n\n\tB = a\n\n\tfor numa in range(101):\n\t\tif not numa in A:\n\t\t\tbreak\n\n\tfor numb in range(101):\n\t\tif not numb in B:\n\t\t\tbreak\n\n\tprint(numa + numb)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile (t):\n    t=t-1\n    n=int(input())\n    l=[int(x) for x in input().split()]\n    l.sort()\n    su=0\n    dic={}\n    df=max(l)\n    for i in range (df+1):\n        dic[i]=0\n    for i in range (n):\n        dic[l[i]]+=1\n    b=list(set(l))\n    act=0\n    for i in range(df+1):\n        if dic[i]==0:\n            su=su+i\n            act=1\n            break\n    if act==0:\n        su=df+1\n    act=0\n    for i in range(df+1):\n        if dic[i]==1 or dic[i]==0:\n            su=su+i\n            act=1\n            break\n    if act==0:\n        su=su+df+1\n    print(su)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, i, j, maxe = -99999, x;\n    cin >> n;\n    int a[1000] = {0}, b[1000] = {0};\n    vector<int> v, vv;\n    for (i = 0; i < n; i++) {\n      cin >> x;\n      if (a[x] == 0) {\n        v.push_back(x);\n        a[x] = 1;\n      } else {\n        vv.push_back(x);\n      }\n    }\n    set<int> s(v.begin(), v.end());\n    set<int> ss(vv.begin(), vv.end());\n    int vt = 0, vvt = 0;\n    for (auto i : s) {\n      if (i != vt) {\n        break;\n      }\n      vt++;\n    }\n    for (auto i : ss) {\n      if (i != vvt) {\n        break;\n      }\n      vvt++;\n    }\n    cout << vt + vvt << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\n\nt = int(input())\nfor i in range(t):\n\tcounter = {}\n\tn = int(input())\n\tA = list(map(int, input().strip().split(' ')))\n\tfor a in A:\n\t\tif a not in counter:\n\t\t\tcounter[a] = 1\n\t\telse:\n\t\t\tcounter[a] += 1\n\tans = 0\n\t# set 0\n\tfor i in range(101):\n\t\tif i not in counter:\n\t\t\tans += i\n\t\t\tbreak\n\t# set 1\n\tfor i in range(101):\n\t\tx = counter.get(i)\n\t\tif x is None or x == 1:\n\t\t\tans += i\n\t\t\tbreak\n\n\tprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class subset_mex {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint t = in.nextInt();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n = in.nextInt();\n\t\t\tint a[]=new int[n];\n\t\t\tint f[]=new int[101];\n\t\t\t\n\t\t\tfor(int i=0 ; i<n ; i++) \n\t\t\t{\n\t\t\t\ta[i]=in.nextInt();\n\t\t\t\tf[a[i]]++;\n\t\t\t\t\n\t\t\t}\n\t\t\tArrays.sort(a);\n\t\t\tint m1=101,m2=0;\n\t\t\tfor(int i=0 ; i<101 ; i++)\n\t\t\t{\n\t\t\t\tif(f[i]<=1&&m1==101)\n\t\t\t\t\tm1=i;\n\t\t\t\tif(f[i]==0&&m1!=101)\n\t\t\t\t{\n\t\t\t\t\tm2=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\tSystem.out.println(m1+m2);\n\t\t\t\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long tc;\n  cin >> tc;\n  while (tc--) {\n    long long n, a, p, q;\n    cin >> n;\n    map<long long, long long> mpp;\n    for (long long i = 0; i < n; i++) {\n      cin >> a;\n      mpp[a]++;\n    }\n    for (p = 0; mpp[p] >= 2; p++)\n      ;\n    for (q = 0; mpp[q] >= 1; q++)\n      ;\n    cout << p + q << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t, it;\n  cin >> t;\n  for (it = 0; it < t; it++) {\n    long long int n, i;\n    vector<int> arr;\n    cin >> n;\n    map<int, int> m;\n    for (i = 0; i < n; i++) {\n      int z;\n      cin >> z;\n      m[z] += 1;\n    }\n    int a = 0;\n    int b = 0;\n    int val1 = 0;\n    int val2 = 0;\n    for (auto itr = m.begin(); itr != m.end(); itr++) {\n      int V = itr->first;\n      int cnt = itr->second;\n      if (val1 == V && cnt > 0) {\n        val1++;\n        cnt--;\n      }\n      if (val2 == V && cnt > 0) {\n        val2++;\n      }\n    }\n    cout << val1 + val2 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(list):\n    temp=0\n    for i in list:\n        if i < temp:continue\n        elif i==temp:\n            temp+=1\n        else:\n            break\n    return temp\n\nn=int(input())\nfor i in range(n):\n    m=int(input())\n    mylist=[int(p) for p in input().split()]\n    mylist.sort()\n    list1=[]\n    list2=[]\n    list1.append(mylist[0])\n    k=1\n    while(k<len(mylist)):\n        if mylist[k]==mylist[k-1]:\n            flag=1\n        if mylist[k]==mylist[k-1]+1:\n            list1.append(mylist[k])\n        else:\n            list2.append(mylist[k])\n        k+=1\n    if len(list2)==0:\n        print(mex(list1))\n    else:\n        print(mex(list1)+mex(list2))\n\n"
        },
        {
            "language": 3,
            "solution": "def mex(num):\n    m: int = 0\n    for nu in num:\n        if m == nu:\n            m += 1\n    return m\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    a = []\n    b = []\n    y = -1\n    for x in l:\n        if y == x:\n            b.append(x)\n        else:\n            a.append(x)\n        y = x\n    print(mex(a) + mex(b))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int arr[n];\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n    }\n    int res[101] = {0};\n    for (int i = 0; i < n; i++) {\n      res[arr[i]]++;\n    }\n    int cnt[101] = {0};\n    for (int i = 0; i < 101; i++) {\n      if (res[i] >= 1) {\n        res[i]--;\n        cnt[i]++;\n      }\n    }\n    int f, s;\n    for (int i = 0; i < 101; i++) {\n      if (res[i] == 0) {\n        f = i;\n        break;\n      }\n    }\n    for (int i = 0; i < 101; i++) {\n      if (cnt[i] == 0) {\n        s = i;\n        break;\n      }\n    }\n    cout << f + s << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    a=b=0\n    for j in range(n):\n        if l[j]==a:\n            a+=1\n        elif l[j]==b:\n            b+=1\n    print(a+b)\n\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    a=[]\n    b=[]\n    f=list(set(l))\n    z=min(f)\n    f.sort()\n    a.append(z)\n    i=0\n    while(i<len(f)):\n        l.remove(f[i])\n        i+=1\n    mini1=0\n    mini2=0\n   # print(l,f)\n    if l==[]:\n        mini1=0\n    else:\n        j=0\n        l=list(set(l))\n        l.sort()\n        for i in range(len(l)):\n            if l[i]<=j:\n                j+=1\n                continue\n            else:\n                \n                mini1=j\n                break\n        mini1=j\n\n    if f==[]:\n        mini2=0\n    else:\n        j=0\n        f=list(set(f))\n        f.sort()\n        for i in range(len(f)):\n            #print(mini2,f[i],j)\n            if f[i]==j:\n                j+=1\n                continue\n            else:\n                mini2=j\n                break\n        mini2=j\n    #print(f)\n    #print(l)\n    #print(mini1,mini2)\n    print(mini1+mini2)\n            \n            \n        \n    \n            \n        \n        \n        \n        \n    \n    \n                   \n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    c=101\n    d=101\n    x=Counter(l)\n    for i in range(101):\n        if(x.get(i,0)<2):\n            c=i\n            break\n    for j in range(101):\n        if(x.get(j,0)==0):\n            d=j\n            break\n    print(c+d)\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    d=defaultdict(int)\n    f=0\n    s=set()\n    for i in l:\n        s.add(i)\n        d[i]+=1\n        if(d[i]>1):\n            f=1\n    ans=0\n    if(f==0):\n        for i in range(max(l)+2):\n            if(i not in s):\n                ans=i\n                break\n        print(ans)\n                \n    else:\n        s1=set()\n        s2=set()\n        for i in d:\n            if(d[i]>1):\n                s1.add(i)\n                s2.add(i)\n            else:\n                s1.add(i)\n        m1,m2=0,0\n        for i in range(max(s1)+2):\n            if(i not in s1):\n                m1=i\n                break\n        for i in range(max(s2)+2):\n            if(i not in s2):\n                m2=i\n                break\n        \n        print(m1+m2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dem[1001];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    memset(dem, 0, sizeof(dem));\n    while (n--) {\n      int k;\n      cin >> k;\n      dem[k]++;\n    }\n    int x = 2, i = 0, ans = 0;\n    while (i < 1000 && x > 0) {\n      if (dem[i] < x) {\n        ans += i * (x - dem[i]);\n        x -= 2 - dem[i];\n      }\n      i++;\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    # a.sort()\n    # s = set(a)\n    # if(len(s)==1):\n    #     if(a[0]==0):\n    #         print(2)\n    #     else:\n    #         print(0)\n    #     continue\n    # elif(len(s)==n and a[0]==1):\n    #     print(0)\n    #     continue\n    dic = dict()\n    for i in range(0,101):\n        dic[i] = 0\n    for i in a:\n        dic[i] += 1\n    res = 0\n    temp = True\n    for i in dic:\n        if(dic[i]>=2):\n            continue\n        elif(temp==True and dic[i]==1):\n            res += i\n            temp = False\n        elif(temp==True and dic[i]==0):\n            # temp = 1\n            res = 2*i\n            break\n        elif((temp==False) and dic[i]==1):\n            continue\n        elif((temp==False) and dic[i]==0):\n            res += i\n            break\n    print(res)"
        },
        {
            "language": 3,
            "solution": "MOD = 1000000007\nfrom collections import defaultdict as dd, Counter, deque\n\n\ndef si(): return input()\n\n\ndef ii(): return int(input())\n\n\ndef li(): return list(map(int, input().split()))\n\n\ndef mi(): return map(int, input().split())\n\n\ndef out(v): print(v)\n\n\ndef spout(): print(v, end=\" \")\n\n\ndef d2b(n): return bin(n).replace(\"0b\", \"\")\n\n\ndef twod(n, m, num): return [[num for x in range(m)] for y in range(n)]\n\n\ndef vow(): return ['a', 'e', 'i', 'o', 'u']\n\n\ndef let(): return [chr(i) for i in range(97, 123)]\n\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\n\ndef ispow2(x):\n    return (x and (not (x & (x - 1))))\n\n\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1: factors.append(n)\n    return (list(factors))\nt = ii()\nwhile t:\n    t -= 1\n    n=ii()\n    a=li()\n    d={}\n    for i in range(101):\n        d[i]=0\n    for i in a:\n        d[i]+=1\n    s=0\n    for i,j in d.items():\n        if j==0:\n            s+=i\n            break\n        else:\n            d[i]-=1\n    for i,j in d.items():\n        if j==0:\n            s+=i\n            break\n    print(s)"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class subsetmex {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner s = new Scanner(System.in);\n\t\t\n\t\tint t = s.nextInt();\n\t\t\n\t\tfor(int i = 0; i<t; i++) {\n\t\t\t\n\t\t\tint[] arr = new int[101];\n\t\t\tint n = s.nextInt();\n\t\t\tfor(int j = 0; j<n; j++) {\n\t\t\t\tarr[s.nextInt()]++;\n\t\t\t}\n\t\t\tint cur = 2;\n\t\t\tint first = 0;\n\t\t\tint second = 0;\n\t\t\tfor(int j = 0; j<101; j++) {\n\t\t\t\tif(arr[j]<cur) {\n\t\t\t\t\tif(cur==2) {\n\t\t\t\t\t\tcur = arr[j];\n\t\t\t\t\t\tfirst = j;\n\t\t\t\t\t\tif(cur==0) {\n\t\t\t\t\t\t\tsecond = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcur = 0;\n\t\t\t\t\t\tsecond = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(first + second);\n\t\t\t\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\ninline T rd() {\n  T x = 0;\n  long long f = 1;\n  char c = getchar();\n  while (c > '9' || c < '0') f = c == '-' ? -1 : 1, c = getchar();\n  while (c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n  return x * f;\n}\ntemplate <class T>\ninline void write(T x) {\n  if (x < 0) {\n    putchar('-'), write(-x);\n    return;\n  }\n  if (x >= 10) write(x / 10);\n  putchar(x % 10 + 48);\n}\ntemplate <class T>\ninline void write_(T x) {\n  if (x < 0) {\n    putchar('-'), write(-x);\n    putchar(' ');\n    return;\n  }\n  if (x >= 10) write(x / 10);\n  putchar(x % 10 + 48);\n  putchar(' ');\n}\ntemplate <class T>\ninline void writeln(T x) {\n  if (x < 0) {\n    putchar('-'), write(-x);\n    putchar('\\n');\n    return;\n  }\n  if (x >= 10) write(x / 10);\n  putchar(x % 10 + 48);\n  putchar('\\n');\n}\ntemplate <class T>\ninline T min(T a, T b, T c) {\n  return min(min(a, b), c);\n}\ntemplate <class T>\ninline T max(T a, T b, T c) {\n  return max(max(a, b), c);\n}\ntemplate <class T>\ninline T min(T a, T b, T c, T d) {\n  return min(min(a, b), min(c, d));\n}\ntemplate <class T>\ninline T max(T a, T b, T c, T d) {\n  return max(max(a, b), max(c, d));\n}\ntemplate <class T>\ninline T fpow(T a, T b, T c) {\n  T ans = 1;\n  while (b) {\n    if (b & 1) ans = 1ll * ans * a % c;\n    a = 1ll * a * a % c;\n    b >>= 1;\n  }\n  return ans;\n}\ntemplate <class T>\ninline T fpow(T a, T b) {\n  T ans = 1;\n  while (b) {\n    if (b & 1) ans = 1ll * ans * a;\n    a = 1ll * a * a;\n    b >>= 1;\n  }\n  return ans;\n}\ntemplate <class T>\ninline T gcd(T a, T b) {\n  if (!b) return a;\n  return gcd(b, a % b);\n}\ntemplate <class T>\ninline T lcm(T a, T b) {\n  return a / gcd(a, b) * b;\n}\ntemplate <class T>\ninline void Exgcd(T a, T b, T &x, T &y) {\n  if (b == 0) {\n    x = 1;\n    y = 0;\n    return;\n  }\n  Exgcd(b, a % b, x, y);\n  T tp = x;\n  x = y;\n  y = tp - a / b * y;\n}\nint a[105];\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0);\n  int T;\n  cin >> T;\n  while (T--) {\n    memset(a, 0, sizeof(a));\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n      int tmp;\n      cin >> tmp;\n      a[tmp]++;\n    }\n    int ans = 0;\n    for (int i = 1; i <= 2; i++) {\n      for (int j = 0; j <= 101; j++) {\n        if (a[j] > 0)\n          a[j]--;\n        else {\n          ans += j;\n          break;\n        }\n      }\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile t>0:\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    f=[0]*101\n    ans=0\n    for i in range(n):\n        f[a[i]]+=1\n    for i in range(len(f)):\n        if f[i]!=0:\n            f[i]-=1\n        else:\n            ans+=i\n            break\n    for i in range(len(f)):\n        if f[i]!=0:\n            f[i]-=1\n        else:\n            ans+=i\n            break\n    \n    print(ans)\n    t-=1"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nfor i in range(a):\n    sum=0\n    k=1\n    b=int(input())\n    c=input().split()\n    c=sorted(c)\n    for j in range(b+1):\n        if str(j) not in c:\n            sum+=j\n            if k==1:\n                print(sum+j)\n            else:\n                print(sum)\n            break\n        if (c.count(str(j))==1 or c.count(str(j))==0) and k==1:\n            sum+=j\n            k-=1\n     "
        },
        {
            "language": 3,
            "solution": "def solution(A):\n\tm = max(A) \n\tif m < 1: \n\t\treturn 1\n\tif len(A) == 1: \n\t\treturn 2 if A[0] == 1 else 1\t\n\tl = [0] * m \n\tfor i in range(len(A)): \n\t\tif A[i] > 0: \n\t\t\tif l[A[i] - 1] != 1: \n\t\t\t\tl[A[i] - 1] = 1\n\tfor i in range(len(l)): \n\t\tif l[i] == 0: \n\t\t\treturn i + 1\n\treturn i + 2\t\na=int(input())\nfor i in range(a):\n    b=int(input())\n    x1=[]\n    x2=[]\n    c=[int(x) for x in input().split()]\n    d=[0]*101\n    for j in range(b):\n        d[c[j]]=d[c[j]]+1\n    for j in range(101):\n        if(d[j]>=2):\n            x1.append(j)\n            x2.append(j)\n        if(d[j]==1):\n            x1.append(j)\n    if(x1==[]):\n        a1=0\n    else:\n        if(min(x1)>0):\n            a1=0\n        else:\n            a1=solution(x1)\n    if(x2==[]):\n        a2=0\n    else:\n        if(min(x2)>0):\n            a2=0\n        else:\n            a2=solution(x2)\n    print(a1+a2)\n"
        },
        {
            "language": 3,
            "solution": "test_cases = int(input())\n\ndef mex(arr) :\n    num = 0\n    while True:\n        if num not in arr :\n            break\n        num +=1\n    return num\n     \ndef non_repeat(arr):\n    num = 0\n    while True:\n        if arr.count(num) < 2:\n            break\n        num +=1\n    return num\n\nfor i in range(test_cases):\n    arr_size = int(input())\n    arr = list(map(int, input().split()))\n    print(mex(arr) + non_repeat(arr))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;    //PrintWriter\nimport java.math.*;  //BigInteger, BigDecimal\nimport java.util.*;  //StringTokenizer, ArrayList\n\n\npublic class R670_Div2_A\n{\t\n\tFastReader in;\n\tPrintWriter out;\n\t\n\tpublic static void main(String[] args)  {\n\t\tnew R670_Div2_A().run();\n\t}\n\t\n\tvoid run()\n\t{\t\t\n\t\tin = new FastReader(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t}\n\t\n\tvoid solve()\n\t{\n\t\tint t = in.nextInt();\n\t\tfor (int T = 0; T < t; T++) {\n\t\t\tint n = in.nextInt();\n\t\t\tint[] d = new int[101];\t\t\t\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint a = in.nextInt();\n\t\t\t\td[a]++;\n\t\t\t}\n\t\t\t\n\t\t\tint sum = 0;\n\t\t\tfor (int i = 0; i <= 100; i++) {\n\t\t\t\tif (d[i] < 2) {\n\t\t\t\t\tsum += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i <= 100; i++) {\n\t\t\t\tif (d[i] < 1) {\n\t\t\t\t\tsum += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tout.println(sum);\n\t\t}\n\t}\n\n\t//-----------------------------------------------------\n\tvoid runWithFiles() {\n\t\tin = new FastReader(new File(\"input.txt\"));\n\t\ttry {\n\t\t\tout = new PrintWriter(new File(\"output.txt\"));\n\t\t} \n\t\tcatch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tsolve();\n\t\tout.close();\n\t}\n\t\n\tclass FastReader\n\t{\n\t    BufferedReader br;\n\t    StringTokenizer tokenizer;\n\t    \n\t    public FastReader(InputStream stream)\n\t    {\n\t        br = new BufferedReader(new InputStreamReader(stream));\n\t        tokenizer = null;\n\t    }\n\t\tpublic FastReader(File f) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(f));\n\t\t\t\ttokenizer = null;\n\t\t\t}\n\t\t\tcatch (FileNotFoundException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t    \n\t    private String next() {\n\t        while (tokenizer == null || !tokenizer.hasMoreTokens())\n\t            try {\n\t            \ttokenizer = new StringTokenizer(br.readLine());\n\t            }\n\t            catch (IOException e) {\n\t                throw new RuntimeException(e);\n\t            }\n\t        return tokenizer.nextToken();\n\t    }\n\t\tpublic String nextLine() {\n\t\t\ttry\t{\n\t\t\t\treturn br.readLine();\n\t\t\t}\n\t\t\tcatch(Exception e) {\n\t\t\t\tthrow(new RuntimeException());\n\t\t\t}\n\t\t}\n\n\t    int nextInt() {\n\t        return Integer.parseInt(next());\n\t    }\n\t    long nextLong() {\n\t        return Long.parseLong(next());\n\t    }\n\t    double nextDouble() {\n\t        return Double.parseDouble(next());\n\t    }\t    \n\t    BigInteger nextBigInteger() {\n\t        return new BigInteger(next());\n\t    }\n\t    BigDecimal nextBigDecimal() {\n\t        return new BigDecimal(next());\n\t    }\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\ntest = int(input())\nfor t in range(test):\n    n = int(input())\n    A = list(map(int,input().split()))\n    A.sort()\n    cnt = [0 for i in range(101)]\n    for i in A:\n        cnt[i]+=1\n    ans1 = -1;ans2 = -1\n    p = 0\n    for i in range(101):\n        if(cnt[p]==0):\n            ans1 = p\n            break\n        p+=1\n    p=0\n    for i in range(101):\n        if(cnt[p]==1 or cnt[p]==0):\n            ans2 = p\n            break\n        p+=1\n    print(ans1+ans2)\n    \n        \n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    __ = input()\n    arr=list(map(int, input().split()))\n    arr.sort()\n    s = -1\n    e = -1\n    for i in arr:\n        if (i == s+1):\n            s=i\n        elif (i == e+1):\n            e=i\n    print(max(0,s+1)+max(0,e+1))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    \n    ans = 0\n    for i in range(0, 101):\n        if l.count(i) < 2:\n            ans += i\n            break\n    for i in range(0, 101):\n        if l.count(i) < 1:\n            ans += i\n            break\n    \n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from functools import lru_cache\nfrom sys import stdin, stdout\nimport sys\nfrom math import *\n\n# from collections import deque\n# sys.setrecursionlimit(int(2e5+10))\ninput = stdin.readline\n# print = stdout.write\n# dp=[-1]*100000\n\nfor __ in range(int(input())):\n\tn=int(input())\n\tar=list(map(int,input().split()))\n\tar.sort()\n\td={}\n\tfor i in range(n):\n\t\tif(d.get(ar[i])==None):\n\t\t\td[ar[i]]=0\n\t\td[ar[i]]+=1\n\tx=0\n\ty=0\n\tfor i in range(101):\n\t\tif(d.get(i)==None):\n\t\t\tx=i\n\t\t\tbreak\n\tfor i in range(101):\n\t\tif(d.get(i)==None or d.get(i)==1):\n\t\t\ty=i\n\t\t\tbreak\n\tprint(x+y)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nt = int(input())\nwhile(t>0):\n    n=  int(input())\n    a = [int(i) for i in input().split()]\n    d = defaultdict(int)\n    for i in a:\n        d[i]+=1\n    ans = 0\n    count=  0\n    for i in range(110):\n        if d[i]>=1:\n            d[i]-=1\n        else:\n            ans+=i\n            break\n    for i in range(110):\n        if d[i]>=1:\n            d[i]-=1\n        else:\n            ans+=i\n            break\n    print(ans)\n    t-=1"
        },
        {
            "language": 1,
            "solution": "\n# Rhythem Jain\n# Date: 13.09.20\n\nfrom __future__ import division, print_function\nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii():  return int(input())\ndef si():  return input()\ndef mi():  return map(int,input().strip().split())\ndef msi(): return map(str,input().strip().split())\ndef li():  return list(mi())\n \ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \nfrom collections import deque, Counter, OrderedDict,defaultdict\nfrom math import *\nfrom itertools import permutations\n \nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\nvow=['a','e','i','o','u','A','E','I','O','U']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\ndef getKey(item): return item[1] \ndef sort2(l):return sorted(l, key=getKey,reverse=True)\ndef d2(n,m,num):return [[num for x in range(m)] for y in range(n)]\ndef isPowerOfTwo (x): return (x and (not(x & (x - 1))) )\ndef decimalToBinary(n): return bin(n).replace(\"0b\",\"\")\ndef ntl(n):return [int(i) for i in str(n)]\ndef ncr(n,r): return factorial(n)//(factorial(r)*factorial(max(n-r,1)))\n \ndef ceil(x,y):\n    if x%y==0:\n        return x//y\n    else:\n        return x//y+1\n \ndef powerMod(x,y,p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y&1:\n            res = (res*x)%p\n        y = y>>1\n        x = (x*x)%p\n    return res\n \ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n    \ndef isPrime(n) : \n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n \ndef read():\n    sys.stdin  = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n \ndef main():\n    for _ in range(ii()):\n        num=ii()\n        arr=li()\n        a=list(set(arr))\n        a.sort()\n        num=-1\n        for i in range(len(a)):\n            if a[i]!=i:\n                num=i\n                break\n        if num==-1:\n            num=len(a)\n        for i in a:\n            arr.remove(i)\n        arr.sort()\n        for i in range(len(a)+1):\n            if i not in arr:\n                num+=i\n                break\n        print(num)\n        \n\n\n\n\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int,input().split()))\n    A.sort()\n    cnt = [0 for i in range(101)]\n    for i in A:\n        cnt[i]+=1\n    ans1 = -1;ans2 = -1\n    p = 0\n    for i in range(101):\n        if(cnt[p]==0):\n            ans1 = p\n            break\n        p+=1\n    p=0\n    for i in range(101):\n        if(cnt[p]==1 or cnt[p]==0):\n            ans2 = p\n            break\n        p+=1\n    print(ans1+ans2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dx[4] = {1, 0, -1, 0};\nlong long dy[4] = {0, 1, 0, -1};\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  long long a, b, c, d, m, n, k, x, y, maxi = 0, f = 0, mini = LLONG_MAX,\n                                       sum = 0, loop;\n  string str;\n  cin >> loop;\n  for (long long _ = (long long)(0); _ < (long long)(loop); _++) {\n    cin >> n;\n    vector<long long> v(n);\n    for (long long i = (long long)(0); i < (long long)(n); i++) cin >> v[i];\n    map<long long, long long> mp;\n    for (long long i = (long long)(0); i < (long long)(n); i++) mp[v[i]]++;\n    a = 0;\n    b = 0;\n    for (long long i = (long long)(0); i < (long long)(105); i++) {\n      if (mp[i] != 0) {\n        mp[i]--;\n        a = i + 1;\n      } else {\n        break;\n      }\n    }\n    for (long long i = (long long)(0); i < (long long)(105); i++) {\n      if (mp[i] != 0) {\n        mp[i]--;\n        b = i + 1;\n      } else {\n        break;\n      }\n    }\n    cout << a + b << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\nimport fileinput\nimport copy\n \nORDA = 97  # a\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return [int(i) for i in input().split()]\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r, prime\ndef divs(n, start=2):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    new_number = 0\n    while number > 0:\n        new_number += number % base\n        number //= base\n    return new_number\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ispal(s): # Palindrome\n    for i in range(len(s) // 2 + 1):\n        if s[i] != s[-i - 1]:\n            return False\n    return True\n# a = [1,2,3,4,5] -----> print(*a) ----> list print krne ka new way\n\n#rr = sieve(100)\n\ndef main():\n\tfor i in range(ii()):\n\t\tn = ii()\n\t\tarr = li()\n\t\tarr = sorted(arr)\n\t\ts1 = []\n\t\ts2 = []\n\t\tk = 0\n\t\tfor ele in arr:\n\t\t\tif k == ele:\n\t\t\t\ts1.append(ele)\n\t\t\t\tk += 1\n\t\t\telse:\n\t\t\t\ts2.append(ele)\n\t\t\n\t\tm1 = 0\n\t\tm2 = 0\n\t\tfor ele in s1:\n\t\t\tif ele  == m1:\n\t\t\t\tm1 += 1\n\t\tfor ele in s2:\n\t\t\tif ele == m2:\n\t\t\t\tm2 += 1\n\t\tprint(m1+m2)\nmain()\n\t\t\t"
        },
        {
            "language": 3,
            "solution": "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    l = list(map(int,input().split()))\n    wyn = 0\n    stop = False\n    for i in range(101):\n        if not stop:\n            if l.count(i) >= 2:\n                wyn += 2\n            if l.count(i) == 1:\n                wyn += 1\n                stop = True\n            if l.count(i)==0:\n                stop = True\n                break\n        else:\n            if l.count(i) >= 1:\n                wyn +=1\n            else:\n                break\n    print(wyn)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve();\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long int t = 1;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\nvoid solve() {\n  long long int i, j;\n  long long int n;\n  cin >> n;\n  vector<long long int> a(n + 1);\n  multiset<long long int> s;\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n    s.insert(a[i]);\n  }\n  long long int ans = 0;\n  2;\n  ;\n  for (i = 0; i <= 101; i++) {\n    if (s.find(i) != s.end()) {\n      s.erase(s.find(i));\n    } else {\n      ans += i;\n      break;\n    }\n  }\n  2;\n  ;\n  for (i = 0; i <= 101; i++) {\n    if (s.find(i) != s.end()) {\n      s.erase(s.find(i));\n    } else {\n      ans += i;\n      break;\n    }\n  }\n  cout << ans << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "\nfor q in range(int(input())):\n\tn = int(input())\n\ta = sorted(list(map(int, input().split())))\n\tj = 0\n\tres = 0\n\tfor i in range(n):\n\t\tif a[i] == j:\n\t\t\tres = j + 1\n\t\t\ta[i] = -1\n\t\t\tj+=1\n\tj = 0\n\tr = 0\n\tfor i in range(n):\n\t\tif a[i] == j:\n\t\t\tr = j + 1\n\t\t\ta[i] = -1\n\t\t\tj+=1\n\tprint(res + r)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\n#t=1\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().rstrip().split()))\n    ct=[0]*101\n    for i in a:\n        ct[i]+=1\n    sb=-1\n    sa=-1\n    for i in range(101):\n        if sa==-1 or sb==-1:\n            if ct[i]==0:\n                if sa==-1:\n                    sa=i\n                if sb==-1:\n                    sb=i\n                continue\n            if ct[i]<2 and sb==-1:\n                sb=i\n        else:\n            break\n    print(sa+sb)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class A670Div2 {\n\n    public static void main(String args[]) {\n\tScanner sc = new Scanner(System.in);\n\tint t = sc.nextInt();\n\twhile (t-- > 0) {\n\t    int n = sc.nextInt();\n\t    HashMap<Integer, Integer> hashMap = new HashMap();\n\t    List<Integer> list = new ArrayList<Integer>();\n\t    for (int i = 0; i < n; i++) {\n\t\tint element = sc.nextInt();\n\t\tlist.add(element);\n\t\tif (hashMap.containsKey(element))\n\t\t    hashMap.put(element, hashMap.get(element) + 1);\n\t\telse\n\t\t    hashMap.put(element, 1);\n\t    }\t\n\t    int ans = 0;\n\t    HashSet<Integer> setA = new HashSet();\n\t    HashSet<Integer> setB = new HashSet();\n\t    for (int i = 0; i <= 100; i++) {\n\t\tif (hashMap.containsKey(i)) {\n\t\t    int value = hashMap.get(i);\n\t\t    if (value >= 2) {\n\t\t\tsetA.add(i);\n\t\t\tsetB.add(i);\n\t\t    } else {\n\t\t\tsetA.add(i);\n\t\t    }\n\t\t}\n\t    }\n\t    boolean gotSetA = false;\n\t    boolean gotSetB = false;\n\t    for (int i = 0; i <= 100; i++) {\n\t\tif (setA.contains(i) && setB.contains(i)) {\n\t\t    continue;\n\t\t}\n\t\tif (!setA.contains(i) && !gotSetA) {\n\t\t    gotSetA = true;\n\t\t    ans += i;\n\t\t}\n\t\tif (!setB.contains(i) && !gotSetB) {\n\t\t    gotSetB = true;\n\t\t    ans += i;\n\t\t}\n\t    }\n\t    System.out.println(ans);\n\t}\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class P1 {\n\n\tpublic static void main(String[] args) {\n\t\tScanner reader = new Scanner(System.in);\n\t\tint numTests = reader.nextInt();\n\t\tfor (int testNum = 0; testNum < numTests; testNum++) {\n\t\t\tint n = reader.nextInt();\n\t\t\tHashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint num = reader.nextInt();\n\t\t\t\tif (!hm.containsKey(num)) {\n\t\t\t\t\thm.put(num, 0);\n\t\t\t\t}\n\t\t\t\thm.put(num, hm.get(num) + 1);\n\t\t\t}\n\t\t\tSystem.out.println(helper(hm));\n\t\t}\n\t\treader.close();\n\t}\n\t\n\tpublic static int helper(HashMap<Integer, Integer> hm) {\n\t\tint curr = 0, ans = 0;\n\t\twhile (true) {\n\t\t\tif (!hm.containsKey(curr)) {\n\t\t\t\treturn 2 * curr;\n\t\t\t}\n\t\t\tif (hm.get(curr) == 1) {\n\t\t\t\tans += curr;\n\t\t\t\tcurr++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurr++;\n\t\t}\n\t\twhile (hm.containsKey(curr)) {\n\t\t\tcurr++;\n\t\t}\n\t\treturn ans + curr;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gcd(int a, int b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long t, i, j, k;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    long long A[n + 1];\n    unordered_map<long long, long long> cnt;\n    for (i = 0; i < n; i++) {\n      cin >> A[i];\n      cnt[A[i]]++;\n    }\n    long long ans = 0;\n    for (i = 0; i < 101; i++) {\n      if (cnt[i] == 0) {\n        ans += i;\n        break;\n      } else if (cnt[i] > 0)\n        cnt[i]--;\n    }\n    long long ans2 = 0;\n    for (i = 0; i < 101; i++) {\n      if (cnt[i] == 0) {\n        ans2 = i;\n        break;\n      }\n    }\n    cout << ans + ans2 << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d=dict() \n    for i in a:\n        if d.get(i,None)==None:\n            d[i]=0 \n        d[i]+=1 \n    i=0 \n    fa,fb=True,True\n    ans=0 \n    while (fa or fb): \n        if d.get(i,None)==None:\n            if fa:\n                ans=ans+i \n            if fb:\n                ans=ans+i \n            break\n        if d[i]>=2:\n            i+=1\n            continue\n        elif d[i]==1:\n            if fa:\n                ans=ans+i \n                fa=False \n            \n        i+=1 \n    print(ans)\n        "
        },
        {
            "language": 3,
            "solution": "for j in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    i=0\n    s=0\n    while True:\n        if i in l:\n            l.remove(i)\n            i+=1\n        else:\n            s+=i\n            break\n    i=0\n    while True:\n        if i  in l:\n            l.remove(i)\n            i+=1\n        else:\n            s+=i\n            break\n    print(s)"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Math.max;\nimport static java.lang.Math.min;\nimport static java.lang.Math.abs;\nimport static java.lang.System.out;\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Template {\n\n\tstatic int mod = 1000000007;\n\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc = new FastScanner();\n\t\tint yo = sc.nextInt();\n\t\twhile (yo-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint[] a = sc.readInts(n);\n\t\t\t\n\t\t\tMap<Integer,Integer> map = new HashMap<>();\n\t\t\tfor(int e : a) map.put(e,map.getOrDefault(e,0)+1);\n\t\t\t\n\t\t\tsort(a);\n\t\t\t\n\t\t\tList<Integer> l = new ArrayList<>();\n\t\t\tList<Integer> r = new ArrayList<>();\n\t\t\t\n\t\t\tint add = 0;\n\t\t\twhile(true){\n\t\t\t\tif(map.containsKey(add)) {\n\t\t\t\t\tl.add(add);\n\t\t\t\t\tint val = map.get(add)-1;\n\t\t\t\t\tif(val > 0) map.put(add,val);\n\t\t\t\t\telse map.remove(add);\n\t\t\t\t\tadd++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tadd = 0;\n\t\t\twhile(true){\n\t\t\t\tif(map.containsKey(add)) {\n\t\t\t\t\tr.add(add);\n\t\t\t\t\tint val = map.get(add)-1;\n\t\t\t\t\tif(val > 0) map.put(add,val);\n\t\t\t\t\telse map.remove(add);\n\t\t\t\t\tadd++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint start = 0;\n\t\t\tfor(int e : l) {\n\t\t\t\tif(e != start) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\t\n\t\t\tint s2 = 0;\n\t\t\tfor(int e : r) {\n\t\t\t\tif(e != s2) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ts2++;\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(start + s2);\n\t\t}\n\t}\n\n\tpublic static class Pair {\n\t\tint x;\n\t\tint y;\n\n\t\tpublic Pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t}\n\n\tpublic static void sort(int[] arr) {\n\t\tArrayList<Integer> ls = new ArrayList<Integer>();\n\t\tfor (int x : arr)\n\t\t\tls.add(x);\n\t\tCollections.sort(ls);\n\t\tfor (int i = 0; i < arr.length; i++)\n\t\t\tarr[i] = ls.get(i);\n\t}\n\n\tpublic static long gcd(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tstatic boolean[] sieve(int N) {\n\t\tboolean[] sieve = new boolean[N + 1];\n\t\tfor (int i = 2; i <= N; i++)\n\t\t\tsieve[i] = true;\n\n\t\tfor (int i = 2; i <= N; i++) {\n\t\t\tif (sieve[i]) {\n\t\t\t\tfor (int j = 2 * i; j <= N; j += i) {\n\t\t\t\t\tsieve[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sieve;\n\t}\n\n\tpublic static long power(long x, long y, long p) {\n\t\tlong res = 1L;\n\t\tx = x % p;\n\t\twhile (y > 0) {\n\t\t\tif ((y & 1) == 1)\n\t\t\t\tres = (res * x) % p;\n\t\t\ty >>= 1;\n\t\t\tx = (x * x) % p;\n\t\t}\n\t\treturn res;\n\t}\n\n\tpublic static void print(int[] arr) {\n\t\t//for debugging only\n\t\tfor (int x : arr)\n\t\t\tout.print(x + \" \");\n\t\tout.println();\n\t}\n\n\tstatic class FastScanner {\n\t\tprivate int BS = 1 << 16;\n\t\tprivate char NC = (char) 0;\n\t\tprivate byte[] buf = new byte[BS];\n\t\tprivate int bId = 0, size = 0;\n\t\tprivate char c = NC;\n\t\tprivate double cnt = 1;\n\t\tprivate BufferedInputStream in;\n\n\t\tpublic FastScanner() {\n\t\t\tin = new BufferedInputStream(System.in, BS);\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tin = new BufferedInputStream(new FileInputStream(new File(s)), BS);\n\t\t\t} catch (Exception e) {\n\t\t\t\tin = new BufferedInputStream(System.in, BS);\n\t\t\t}\n\t\t}\n\n\t\tprivate char getChar() {\n\t\t\twhile (bId == size) {\n\t\t\t\ttry {\n\t\t\t\t\tsize = in.read(buf);\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\treturn NC;\n\t\t\t\t}\n\t\t\t\tif (size == -1)\n\t\t\t\t\treturn NC;\n\t\t\t\tbId = 0;\n\t\t\t}\n\t\t\treturn (char) buf[bId++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn (int) nextLong();\n\t\t}\n\n\t\tpublic int[] readInts(int N) {\n\t\t\tint[] res = new int[N];\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tres[i] = (int) nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long[] readLongs(int N) {\n\t\t\tlong[] res = new long[N];\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tres[i] = nextLong();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tcnt = 1;\n\t\t\tboolean neg = false;\n\t\t\tif (c == NC)\n\t\t\t\tc = getChar();\n\t\t\tfor (; (c < '0' || c > '9'); c = getChar()) {\n\t\t\t\tif (c == '-')\n\t\t\t\t\tneg = true;\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tfor (; c >= '0' && c <= '9'; c = getChar()) {\n\t\t\t\tres = (res << 3) + (res << 1) + c - '0';\n\t\t\t\tcnt *= 10;\n\t\t\t}\n\t\t\treturn neg ? -res : res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\tdouble cur = nextLong();\n\t\t\treturn c != '.' ? cur : cur + nextLong() / cnt;\n\t\t}\n\n\t\tpublic double[] readDoubles(int N) {\n\t\t\tdouble[] res = new double[N];\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tres[i] = nextDouble();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\twhile (c <= 32)\n\t\t\t\tc = getChar();\n\t\t\twhile (c > 32) {\n\t\t\t\tres.append(c);\n\t\t\t\tc = getChar();\n\t\t\t}\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\twhile (c <= 32)\n\t\t\t\tc = getChar();\n\t\t\twhile (c != '\\n') {\n\t\t\t\tres.append(c);\n\t\t\t\tc = getChar();\n\t\t\t}\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tif (c > 32)\n\t\t\t\treturn true;\n\t\t\twhile (true) {\n\t\t\t\tc = getChar();\n\t\t\t\tif (c == NC)\n\t\t\t\t\treturn false;\n\t\t\t\telse if (c > 32)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\t//\tFor Input.txt and Output.txt\t\n\t//\tFileInputStream in = new FileInputStream(\"input.txt\");\n\t//\tFileOutputStream out = new FileOutputStream(\"output.txt\");\n\t//\tPrintWriter pw = new PrintWriter(out);\n\t//\tScanner sc = new Scanner(in);\n}"
        },
        {
            "language": 3,
            "solution": "#include <CodeforcesSolutions.h>\n#include <ONLINE_JUDGE <solution.cf(contestID = \"1406\",questionID = \"A\",method = \"GET\")>.h>\n\"\"\"\n    Author : thekushalghosh\n    Team   : CodeDiggers\n \n    I prefer Python language over the C++ language :p :D\n        \n    Visit my website : thekushalghosh.github.io\n\"\"\"\nimport sys,math,cmath,time\nstart_time = time.time()\n##########################################################################\n################# ---- THE ACTUAL CODE STARTS BELOW ---- #################\ndef solve():\n    n = inp()\n    a = inlt()\n    q = counter(a)\n    qw = 0\n    for i in range(len(q)):\n        if q[i] == 0:\n            if qw == 0:\n                qq = 2 * i\n            else:\n                qq = qq + i\n            break\n        if q[i] == 1 and qw == 0:\n            if qw == 0:\n                qq = i\n                qw = 1\n    print(qq)\n\n################## ---- THE ACTUAL CODE ENDS ABOVE ---- ##################\n##########################################################################\n \ndef main():\n    global tt\n    if not ONLINE_JUDGE:\n        sys.stdin = open(\"input.txt\",\"r\")\n        sys.stdout = open(\"output.txt\",\"w\")\n    t = 1\n    t = inp()\n    for tt in range(t):\n        solve()\n    if not ONLINE_JUDGE:\n        print(\"Time Elapsed :\",time.time() - start_time,\"seconds\")\n        sys.stdout.close()\n\n#---------------------- USER DEFINED INPUT FUNCTIONS ----------------------#\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    return(input().strip())\ndef invr():\n    return(map(int,input().split()))\n \n#------------------ USER DEFINED PROGRAMMING FUNCTIONS ------------------#\ndef counter(a):\n    q = [0] * (max(a) + 2)\n    for i in range(len(a)):\n        q[a[i]] = q[a[i]] + 1\n    return(q)\n\ndef counter_elements(a):\n    q = dict()\n    for i in range(len(a)):\n        if a[i] not in q:\n            q[a[i]] = 0\n        q[a[i]] = q[a[i]] + 1\n    return(q)\n \ndef string_counter(a):\n    q = [0] * 26\n    for i in range(len(a)):\n        q[ord(a[i]) - 97] = q[ord(a[i]) - 97] + 1\n    return(q)\n \ndef factors(n):\n    q = []\n    for i in range(1,int(n ** 0.5) + 1):\n        if n % i == 0: q.append(i); q.append(n // i)\n    return(list(sorted(list(set(q)))))\n \ndef prime_factors(n):\n    q = []\n    while n % 2 == 0: q.append(2); n = n // 2\n    for i in range(3,int(n ** 0.5) + 1,2):\n        while n % i == 0: q.append(i); n = n // i\n    if n > 2: q.append(n)\n    return(list(sorted(q)))\n \ndef transpose(a):\n    n,m = len(a),len(a[0])\n    b = [[0] * n for i in range(m)]\n    for i in range(m): \n        for j in range(n): \n            b[i][j] = a[j][i]\n    return(b)\n\ndef factorial(n,m = 1000000007):\n    q = 1\n    for i in range(n):\n        q = (q * (i + 1)) % m\n    return(q)\n#-----------------------------------------------------------------------#\nONLINE_JUDGE = __debug__\nif ONLINE_JUDGE:\n    input = sys.stdin.readline\n\n\n\nmain()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = (int)1e6 + 100;\nconst long long INF = 9 * (long long)(1e18);\nconst long double PI = 3.14159265358979323846;\nlong long int modexp(long long int x, long long int y, long long int p) {\n  long long int res = 1;\n  x = x % p;\n  if (y == 0)\n    return 1;\n  else if (x == 0)\n    return 0;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res % p;\n}\nvector<long long int> fact(N + 1, 1);\nvoid factmod(long long int n, long long int k) {\n  for (long long int i = 2; i <= n; i++) fact[i] = (i * fact[i - 1]) % k;\n}\nvector<long long int> invfact(N + 1, 1);\nvoid factinvmod(long long int n, long long int k) {\n  for (long long int i = 2; i <= n; i++) {\n    invfact[i] = modexp(fact[i], k - 2, k);\n  }\n}\nlong long int ncrmod(long long int n, long long int r, long long int k) {\n  return (((fact[n] * invfact[n - r]) % k) * invfact[r]) % k;\n}\nvector<long long int> is_prime(N + 1, 1);\nvoid sieve(long long int n) {\n  for (long long int i = 1; i <= n; i++) is_prime[i] = i;\n  for (long long int i = 2; i * i <= n; i++) {\n    if (is_prime[i] == i) {\n      for (long long int j = i * i; j <= n; j += i) {\n        is_prime[j] = min(i, is_prime[j]);\n      }\n    }\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int testc;\n  cin >> testc;\n  while (testc--) {\n    long long int n;\n    cin >> n;\n    int arr[105] = {0};\n    for (long long int i = 0; i <= n - 1; i++) {\n      long long int temp;\n      cin >> temp;\n      arr[temp]++;\n    }\n    long long int ans = 0;\n    for (long long int x = 0; x <= 1; x++) {\n      for (long long int i = 0; i <= 104; i++) {\n        if (!arr[i]) {\n          ans += i;\n          break;\n        } else\n          arr[i]--;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "#from bisect import bisect_left as bl                #c++ lowerbound bl(array,element)\n#from bisect import bisect_right as br               #c++ upperbound br(array,element)\n#from __future__ import print_function, division    #while using python2\n# from itertools import accumulate\nfrom collections import defaultdict, Counter\n\ndef modinv(n,p):\n    return pow(n,p-2,p)\n\ndef main():\n    #sys.stdin = open('input.txt', 'r')\n    #sys.stdout = open('output.txt', 'w')\n\n    for case in range(int(input())):\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        ct = Counter(arr)\n\n        ans = 0\n\n        first = True\n        second = True\n        for i in range(101):\n            if first and ct[i] == 1:\n                first = False\n                ans += i\n                continue\n            if ct[i] == 0:\n                ans += i\n                if first:\n                    ans += i\n                break\n        print(ans)\n\n\n#------------------ Python 2 and 3 footer by Pajenegod and c1729-----------------------------------------\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\nimport os, sys\nfrom io import IOBase, BytesIO\n\nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s:self.buffer.write(s.encode('ascii'))\n            self.read = lambda:self.buffer.read().decode('ascii')\n            self.readline = lambda:self.buffer.readline().decode('ascii')\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\nif __name__ == '__main__':\n   main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int modexp(long long int x, long long int n, long long int mod) {\n  x %= mod;\n  long long int res = 1;\n  while (n > 0) {\n    if (n & 1) res = res * x % mod;\n    x = x * x % mod;\n    n /= 2;\n  }\n  return res;\n}\nlong long int modInverse(long long int n, long long int p) {\n  return modexp(n, p - 2, p);\n}\nlong long int nCr(long long int n, long long int r, long long int p) {\n  if (r == 0) return 1;\n  long long int fac[n + 1];\n  fac[0] = 1;\n  for (long long int i = 1; i <= n; i++) fac[i] = (fac[i - 1] * i) % p;\n  return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) %\n         p;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int t = 1;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    long long int arr[n];\n    long long int i, j, k;\n    map<long long int, long long int> m;\n    for (i = 0; i <= n - 1; i++) {\n      cin >> arr[i];\n      m[arr[i]]++;\n    }\n    long long int ans = 0;\n    bool ok = true;\n    for (i = 0; i <= 101; i++) {\n      if (m[i] == 0) {\n        if (ok)\n          cout << 2 * i << '\\n';\n        else\n          cout << ans + i << '\\n';\n        break;\n      } else if (m[i] == 1 && ok) {\n        ok = false;\n        ans += i;\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport random\ninput = sys.stdin.readline\n\ncases = int(input())\nfor case in range(cases):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = set()\n    a.sort()\n    ans, mex, b = 0, 0, []\n    if a[0] != 0:\n        print(0)\n        continue\n    s.add(a[0])\n    for i in range(1, len(a)):\n        if a[i] - a[i - 1] > 1:\n            break\n        if not a[i] in s:\n            s.add(a[i])\n            mex = max(mex, a[i])\n        else:\n            b.append(a[i])\n    mex += 1\n    ans += mex\n    if len(b) == 0:\n        print(ans)\n        continue\n    if b[0] != 0:\n        print(ans)\n        continue\n    mex = 0\n    for i in range(1, len(b)):\n        if b[i] - b[i - 1] > 1:\n            break\n        mex = max(mex, b[i])\n    mex += 1\n    ans += mex\n    print(ans)\n\n\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n\tn = int(input())\n\ts = input().split(\" \")\n\ts = list(map(int, s))\n\n\tlib = {}\n\tM = 0\n\tfor i in s:\n\t\tM = max(M, i);\n\t\tif i in lib:\n\t\t\tlib[i] += 1;\n\t\telse:\n\t\t\tlib[i] = 1;\n\n\tA = []\n\tfor i in range(M + 1):\n\t\tif i in lib: \n\t\t\tif lib[i] == 0:\n\t\t\t\tbreak;\n\t\t\telse:\n\t\t\t\tA.append(i)\n\t\t\t\tlib[i] -= 1\n\t\telse:\n\t\t\tbreak;\n\n\tB = []\n\tfor i in range(M + 1):\n\t\tif i in lib: \n\t\t\tif lib[i] == 0:\n\t\t\t\tbreak;\n\t\t\telse:\n\t\t\t\tB.append(i)\n\t\t\t\tlib[i] -= 1\n\t\telse:\n\t\t\tbreak;\n\n\tm = 0\n\tn = 0\n\tif A: m = max(A) + 1\n\tif B: n = max(B) + 1\n\n\tprint(m + n)\n\n\nn = int(input())\nfor i in range(n):\n\tsolve()"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    N = list(map(int,input().split()))\n    d = dict()\n    for i in N:\n        d[i] = d.get(i,0) + 1\n    s = list(set(N))\n    s.sort()\n    aa = 0\n    bb = 0\n    done = 0\n    q = 0  \n    ans = 0 \n    # print(\"jhw\")\n    # print(\"don\",done)\n    # print(\"q\",q)\n    while(done<2 and q<101):\n        # print(\"aaas\")\n        if done == 0:\n            if q not in s:\n                ans = 2*q\n                done = 2\n                q += 1\n            elif d[q] == 1:\n                ans += q\n                done += 1\n                q += 1\n            else:\n                q += 1\n        elif done==1:\n            if q not in s:\n                ans += q\n                q += 1\n                done += 1\n            else:\n                q += 1\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    long long arr[n];\n    for (long long i = 0; i < n; i++) cin >> arr[i];\n    long long a = 0, b = 0;\n    map<long long, long long> mp;\n    for (long long i = 0; i < n; i++) mp[arr[i]]++;\n    long long flg = 0;\n    for (long long i = 0; i < 101; i++) {\n      if (mp[i] >= 2 && flg == 0) {\n        a++;\n        b++;\n      } else if (mp[i] && flg == 1)\n        a++;\n      else if (mp[i] < 2 && mp[i] && flg == 0) {\n        flg++;\n        a++;\n      } else if (mp[i] == 0) {\n        flg += 2;\n      }\n    }\n    cout << a + b << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    ans1=0\n    ans2=0\n    m=max(arr)+1\n    arr.sort()\n    s=set(arr)\n    for i in arr:\n        if ans1==i:\n            ans1+=1\n        elif ans2==i:\n            ans2+=1\n    print(ans2+ans1)\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "//package cses.dp;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class A {\n    static InputReader in;\n    static PrintWriter out;\n\n    public static void main(String[] args) {\n        //initReaderPrinter(true);\n        initReaderPrinter(false);\n        solve(in.nextInt());\n        //solve(1);        \n    }\n\n    static void solve(int testCnt) {\n        for (int testNumber = 0; testNumber < testCnt; testNumber++) {\n            int n = in.nextInt();\n            int[] cnt = new int[102];\n            for(int i = 0; i < n; i++) {\n                cnt[in.nextInt()]++;\n            }\n\n            int ans = 0;\n            for(int j = 0; j < 2; j++) {\n                for(int i = 0; i <= 101; i++) {\n                    if(cnt[i] == 0) {\n                        ans += i;\n                        break;\n                    }\n                    else {\n                        cnt[i]--;\n                    }\n                }\n            }\n            out.println(ans);\n        }\n        out.close();\n    }\n\n    static void initReaderPrinter(boolean test) {\n        if (test) {\n            try {\n                in = new InputReader(new FileInputStream(\"src/input.in\"));\n                out = new PrintWriter(new FileOutputStream(\"src/output.out\"));\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        } else {\n            in = new InputReader(System.in);\n            out = new PrintWriter(System.out);\n        }\n    }\n\n    static class InputReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        InputReader(InputStream stream) {\n            try {\n                br = new BufferedReader(new InputStreamReader(stream), 32768);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        Integer[] nextIntArray(int n) {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        Long[] nextLongArray(int n) {\n            Long[] a = new Long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n    }\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "\nfor tc in range(int(input())):\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\tarr.sort()\n\ta=[];b=[]\n\tprev = -1\n\tfor i in arr:\n\t\tif i==prev:\n\t\t\tb.append(i)\n\t\telse:\n\t\t\tprev=i\n\t\t\ta.append(i)\n\n\ta = set(a);ini=0\n\tfor i in a:\n\t\tif i != ini:\n\t\t\tsa = ini\n\t\t\tbreak\n\t\tini+=1\n\telse:\n\t\tsa = ini\n\n\tb = set(b);ini=0\n\tfor i in b:\n\t\tif i != ini:\n\t\t\tsb = ini\n\t\t\tbreak\n\t\tini+=1\n\telse:\n\t\tsb = ini\n\tprint(sa+sb)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int T;\n  cin >> T;\n  while (T > 0) {\n    long long int n, a[1000], sum = 0, flag = 0;\n    cin >> n;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    for (int i = 0; i <= 100; i++) {\n      flag = 0;\n      for (int j = 1; j <= n; j++) {\n        if (a[j] == i) {\n          flag = 1;\n          a[j] = -1;\n          break;\n        }\n      }\n      if (flag == 0) {\n        sum = i;\n        break;\n      }\n    }\n    for (int i = 0; i <= 100; i++) {\n      flag = 0;\n      for (int j = 1; j <= n; j++) {\n        if (a[j] == i) {\n          flag = 1;\n          a[j] = -1;\n          break;\n        }\n      }\n      if (flag == 0) {\n        sum += i;\n        break;\n      }\n    }\n    cout << sum << \"\\n\";\n    T--;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> arr(n);\n    map<int, int> mp;\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n      mp[arr[i]]++;\n    }\n    int ans = 0;\n    int ct = 0;\n    for (int i = 0; i <= 100; i++) {\n      if (ct < 2) {\n        if (mp[i] == 0) {\n          ans += (2 - ct) * i;\n          if (ct == 1)\n            ct++;\n          else\n            ct += 2;\n        } else if (mp[i] % 2 == 0)\n          continue;\n        else if (mp[i] == 1) {\n          if (ct == 1)\n            continue;\n          else {\n            ct++;\n            ans += i;\n          }\n        }\n      } else\n        break;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def solution(val):\n    ans = []\n    for i in range(0, len(val)):\n        a = val[i]\n        a.sort()\n        mex = 0\n        count = 0\n        for j in range(0, len(a)+1):\n            r = 2 - count\n            for k in range(0,r):\n                if j in a:\n                    a.remove(j)\n                elif count < 2:\n                    mex += j\n                    count += 1\n                    if count == 2:\n                        ans.append(mex)\n                        break\n            if count == 2:\n                break\n    return ans\n\n\n\ndef main():\n    n = int(input())\n    l = []\n    for i in range(0,n):\n        p = int(input())\n        num = list(map(int, input().split()))\n        l.append(num)\n    result = solution(l)\n    for i in range(0,len(result)):\n        print(result[i])\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\nimport javafx.util.Pair;\n\npublic class Level {\n\n    public static int BS(ArrayList<Integer> list, int l, int r, int x) {\n        if (r >= l) {\n            int mid = l + (r - l) / 2;\n\n            if (list.get(mid) == x) {\n                return mid;\n            }\n\n            if (list.get(mid) > x) {\n                return BS(list, l, mid - 1, x);\n            }\n\n            return BS(list, mid + 1, r, x);\n        }\n\n        return -1;\n    }\n\n    public static Container.Reader in = new Container.Reader();\n    public static Container.Print out = new Container.Print();\n    public static int[] parent = null;\n\n    public static int find(int u) {\n        if (parent[u] == u) {\n            return u;\n        } else {\n            return parent[u] = find(parent[u]);\n        }\n    }\n\n    public static boolean connected(int u, int v) {\n        u = find(u);\n        v = find(v);\n        if (u == v) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static void merge(int u, int v) {\n        if (connected(u, v)) {\n            return;\n        } else {\n            u = find(u);\n            v = find(v);\n            parent[u] = v;\n        }\n    }\n\n    public static int mex(ArrayList<Integer> list) {\n        Collections.sort(list);\n        int ans = 0;\n        for (int i = 0; i <=list.size(); i++) {\n            if (!list.contains(i)) {\n                ans = i;\n                break;\n            }\n        }\n        return ans;\n    }\n\n    public static void main(String[] args) throws IOException {\n        int T = in.nextInt();\n        while (T-- > 0) {\n            int n = in.nextInt();\n            int[] z = new int[n];\n            for (int i = 0; i < n; i++) {\n                z[i] = in.nextInt();\n            }\n            Arrays.sort(z);\n            HashSet<Integer> set = new HashSet<Integer>();\n            boolean[] v = new boolean[n];\n            for (int i = 0; i < n; i++) {\n                int cur = z[i];\n                if (!set.contains(cur)) {\n                    set.add(cur);\n                    v[i] = true;\n                }\n            }\n            ArrayList<Integer> a = new ArrayList<Integer>();\n            ArrayList<Integer> b = new ArrayList<Integer>();\n           \n            for (int i = 0; i < n; i++) {\n                if (v[i]) {\n                    a.add(z[i]);\n                } else {\n                    b.add(z[i]);\n                }\n            }\n            System.out.println(mex(b)+mex(a));\n        }\n    }\n\n    public static class Algo {\n\n        public static long pow(long a, long b) {\n            long res = 1;\n            while (b > 0) {\n                if (b % 2 != 0) {\n                    res *= a;\n                }\n                b /= 2;\n                a *= a;\n            }\n            return res;\n        }\n\n        public static int lowerBound(ArrayList<Long> list, int length, long value) {\n            int low = 0;\n            int high = length;\n            while (low < high) {\n                final int mid = (low + high) / 2;\n                if (value <= list.get(mid)) {\n                    high = mid;\n                } else {\n                    low = mid + 1;\n                }\n            }\n            return low;\n        }\n\n        public static int upperBound(ArrayList<Long> list, int length, long value) {\n            int low = 0;\n            int high = length;\n            while (low < high) {\n                final int mid = (low + high) / 2;\n                if (value >= list.get(mid)) {\n                    low = mid + 1;\n                } else {\n                    high = mid;\n                }\n            }\n            return low;\n        }\n\n        public static void merge(int arr[], int l, int m, int r) {\n            int n1 = m - l + 1;\n            int n2 = r - m;\n\n            int L[] = new int[n1];\n            int R[] = new int[n2];\n\n            for (int i = 0; i < n1; ++i) {\n                L[i] = arr[l + i];\n            }\n            for (int j = 0; j < n2; ++j) {\n                R[j] = arr[m + 1 + j];\n            }\n\n            int i = 0, j = 0;\n\n            int k = l;\n            while (i < n1 && j < n2) {\n                if (L[i] <= R[j]) {\n                    arr[k] = L[i];\n                    i++;\n                } else {\n                    arr[k] = R[j];\n                    j++;\n                }\n                k++;\n            }\n\n            while (i < n1) {\n                arr[k] = L[i];\n                i++;\n                k++;\n            }\n\n            while (j < n2) {\n                arr[k] = R[j];\n                j++;\n                k++;\n            }\n        }\n\n        public static void sort(int arr[], int l, int r) {\n            if (l < r) {\n                int m = (l + r) / 2;\n\n                sort(arr, l, m);\n                sort(arr, m + 1, r);\n\n                merge(arr, l, m, r);\n            }\n        }\n\n        public static ArrayList<Integer> sieve(int n) {\n            long sqr = (long) Math.sqrt(n);\n            boolean[] isPrime = new boolean[n + 1];\n            for (int i = 0; i <= n; i++) {\n                isPrime[i] = true;\n            }\n            for (int i = 2; i <= sqr; i++) {\n                if (isPrime[i]) {\n                    for (int p = i * i; p <= n; p += i) {\n                        isPrime[p] = false;\n                    }\n                }\n            }\n            ArrayList<Integer> list = new ArrayList<Integer>();\n            for (int i = 0; i <= n; i++) {\n                if (isPrime[i]) {\n                    list.add(i);\n                }\n            }\n            list.remove(0);\n            list.remove(0);\n            return list;\n        }\n\n        public static boolean isPrime(long n) {\n            boolean res = true;\n            List l = sieve((int) Math.sqrt(n));\n            for (int i = 0; i < l.size(); i++) {\n                int curPrime = (int) l.get(i);\n                if (n % curPrime == 0) {\n                    res = false;\n                    break;\n                }\n            }\n            return res;\n        }\n\n        public static ArrayList factorizatin(int n) {\n\n            ArrayList<Integer> list = new ArrayList<Integer>();\n            if (n == 1) {\n                list.add(1);\n                return list;\n            } else if (n == 2) {\n                list.add(2);\n                return list;\n            } else {\n                if (isPrime(n)) {\n                    System.out.println(-1);\n                    return null;\n                } else {\n                    Iterator ptr = sieve((int) Math.sqrt(n)).iterator();\n                    if (ptr.hasNext()) {\n                        int cur = (int) ptr.next();\n                        // System.out.println(cur);\n                        while (n != 1) {\n                            System.out.println(n);\n                            while (n % cur == 0) {\n                                list.add(cur);\n                                n /= cur;\n                            }\n                            if (ptr.hasNext()) {\n                                cur = (int) ptr.next();\n                            }\n                            //System.out.println(cur);\n                        }\n                    }\n                    if (n > 2) {\n                        list.add(n);\n                    }\n                }\n                return list;\n            }\n        }\n\n        public static long gcd(long a, long b) {\n            if (b == 0) {\n                return a;\n            } else {\n                return gcd(b, a % b);\n            }\n        }\n\n        public static long lcm(long a, long b) {\n            long ab = a * b;\n            long gcd = gcd(a, b);\n            return ab / gcd;\n        }\n\n        public static int bs(int[] z, int k) {\n            int res = 0;\n            int l = 0;\n            int r = z.length - 1;\n            int mid = (l + r) / 2;\n            while (l <= r) {\n\n                if (z[mid] == k) {\n                    res = 1;\n                    break;\n                }\n                if (z[mid] > k) {\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n                mid = (l + r) / 2;\n            }\n            return res;\n        }\n\n        public static void solve() {\n            int n = Integer.parseInt(in.next());\n            int target = Integer.parseInt(in.next());\n            int[] z = new int[n];\n            for (int i = 0; i < n; i++) {\n                z[i] = Integer.parseInt(in.next());\n            }\n            Arrays.sort(z);\n            int ptr1 = 0;\n            int ptr2 = n - 1;\n            int wind = z[ptr1] + z[ptr2];\n            if (wind == target) {\n                System.out.println(ptr1 + \"-\" + ptr2);\n            } else {\n                while (ptr1 < ptr2 && wind != target) {\n                    if (wind > target) {\n                        wind -= z[ptr2--];\n                        wind += z[ptr2];\n                    } else {\n                        wind -= z[ptr1++];\n                        wind += z[ptr1];\n                    }\n                }\n                if ((ptr1 != 0 || ptr2 != n - 1) && ptr2 != ptr1) {\n                    System.out.println(ptr1 + \"-\" + ptr2);\n                } else {\n                    System.out.println(-1);\n                }\n            }\n        }\n\n        public static void sliding() {\n            int n = Integer.parseInt(in.next());\n            int k = Integer.parseInt(in.next());\n            int[] z = new int[n];\n            for (int i = 0; i < n; i++) {\n                z[i] = Integer.parseInt(in.next());\n            }\n            int wind = 0;\n            for (int i = 0; i < k; i++) {\n                wind += z[i];\n            }\n            int max = wind;\n            for (int i = k; i < n; i++) {\n                wind += z[i];\n                wind -= z[i - k];\n                max = Math.max(max, wind);\n            }\n            System.out.println(max);\n        }\n\n        public static ArrayList<Long> dd(long n) {\n            ArrayList<Long> list = new ArrayList<Long>();\n            for (long i = 1; i * i <= n; i++) {\n                if (n % i == 0) {\n                    list.add(n / i);\n                    list.add(i);\n                }\n            }\n\n            return list;\n        }\n    }\n\n    private static class Container {\n\n        public static class Print {\n\n            private final BufferedWriter bw;\n\n            public Print() {\n                this.bw = new BufferedWriter(new OutputStreamWriter(System.out));\n            }\n\n            public void print(Object object) throws IOException {\n                bw.append(object + \"\");\n            }\n\n            public void println(Object object) throws IOException {\n                print(object);\n                bw.append(\"\\n\");\n            }\n\n            public void close() throws IOException {\n                bw.close();\n            }\n        }\n\n        private static class Reader {\n\n            BufferedReader br;\n            StringTokenizer st;\n\n            public Reader() {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n\n            String next() {\n                while (st == null || !st.hasMoreElements()) {\n                    try {\n                        st = new StringTokenizer(br.readLine());\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return st.nextToken();\n            }\n\n            int nextInt() {\n                return Integer.parseInt(next());\n            }\n\n            long nextLong() {\n                return Long.parseLong(next());\n            }\n\n            double nextDouble() {\n                return Double.parseDouble(next());\n            }\n\n            String nextLine() {\n                String str = \"\";\n                try {\n                    str = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return str;\n            }\n\n            BigInteger nextBigInteger() {\n                return new BigInteger(next());\n            }\n\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t > 0) {\n    int n;\n    cin >> n;\n    vector<int> v;\n    int m;\n    for (int i = 0; i < n; i++) {\n      cin >> m;\n      v.push_back(m);\n    }\n    sort(v.begin(), v.end());\n    if (v[0] > 0) {\n      { cout << 0 << endl; }\n    } else {\n      if (n == 1) {\n        cout << 1 << endl;\n      } else {\n        int ct1 = v[0];\n        int ct2 = -1;\n        for (int j = 1; j < n; j++) {\n          if (v[j - 1] == v[j]) {\n            if (ct2 == v[j] - 1) {\n              ct2 = v[j];\n            }\n          } else if (ct1 == v[j] - 1) {\n            ct1 = v[j];\n          } else {\n            continue;\n          }\n        }\n        ct1++;\n        if (ct2 == -1) {\n          ct2 = 0;\n        } else {\n          ct2++;\n        }\n        cout << ct1 + ct2 << endl;\n      }\n    }\n    t--;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nLI=lambda:list(map(int, sys.stdin.readline().strip('\\n').split()))\nMI=lambda:map(int, sys.stdin.readline().strip('\\n').split())\nSI=lambda:sys.stdin.readline().strip('\\n')\nII=lambda:int(sys.stdin.readline().strip('\\n'))\n\nfor _ in range(II()):\n\tn=II()\n\tcnt=[0]*101\n\tfor i in MI():\n\t\tcnt[i]+=1\n\ta, b=-1, -1\n\tfor i in range(101):\n\t\tif cnt[i]==0:\n\t\t\tif a==-1:\n\t\t\t\ta=b=i\n\t\t\telse:\n\t\t\t\tb=i\n\t\t\tbreak\n\t\tif cnt[i]==1:\n\t\t\tif a==-1:\n\t\t\t\ta=i\n\tprint(a+b)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    L=[int(x) for x in input().split()]\n    l=sorted(set(L))\n    x=[]\n    y=[]\n    for i in l:\n        if(L.count(i)>=2):\n            x.append(i)\n            y.append(i)\n        else:\n            x.append(i)\n    x.sort()\n    y.sort()\n    a=0\n    b=0\n    for i in x:\n        if(i!=a):\n            break\n        else:\n            a+=1\n    for j in y:\n        if(j != b):\n            break\n        else:\n            b+=1\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nt=int(input())\nwhile t>0:\n\tt-=1\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\ta.sort()\n\tx=[]\n\tcnt=0\n\td=defaultdict(lambda : 0)\n\tfor i in a:\n\t\td[i]+=1\n\t# for k,v in d.items():\n\t# \tprint(k,v)\n\t#print(d[3])\n\tfor i in range(max(a)+2):\n\t\tif d[i]>0:\n\t\t\td[i]-=1\n\t\telse:\n\t\t\tx.append(i)\n\t\t\tbreak\n\tfor i in range(max(a)+2):\n\t\tif d[i]==0:\n\t\t\tx.append(i)\n\t\t\tbreak\n\n\tprint(sum(x))\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    x = set()\n    y = set()\n    for i in a:\n        if i not in x:\n            x.add(i)\n        else:\n            y.add(i)\n\n    x = list(x)\n    x.sort()\n    y = list(y)\n    y.sort()\n\n    ans = []\n    for i in range(101):\n        if i == len(x):\n            break\n        if x[i] != i:\n            ans.append(i)\n            break\n    if len(ans) == 0:\n        ans.append(x[-1] + 1)\n\n    if len(y) == 0:\n        ans.append(0)\n    else:\n        for i in range(101):\n            if i == len(y):\n                break\n            if y[i] != i:\n                ans.append(i)\n                break\n        if len(ans) == 1:\n            ans.append(y[-1] + 1)\n\n    print(sum(ans))\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n     n=int(input())\n     l=list(map(int,input().split()))\n     d={}\n     for i in l:\n          if i not in d:\n               d[i]=1\n          else:\n               d[i]+=1\n     k=[]\n     k1=[]\n     for i in d:\n          if d[i]>=2:\n               k+=[i]\n               k1+=[i]\n          else:\n               k+=[i]\n     for j in range(len(k)+1):\n          if j not in k:\n               break\n     for h in range(len(k1)+1):\n          if h not in k1:\n               break\n     print(j+h)\n     \n"
        },
        {
            "language": 3,
            "solution": "def mex(l):\n    cur = -1\n    for e in l:\n        if e in [cur, cur + 1]:\n            cur = e\n        else: break\n    return cur + 1\n    \nfor _ in range(int(input())):\n    n = int(input())\n    l = sorted(map(int, input().split()))\n    a, b = [], []\n    for e in l:\n        if a and e <= a[-1]: b.append(e)\n        else: a.append(e)\n    print(mex(a) + mex(b))\n    "
        },
        {
            "language": 3,
            "solution": "def mex(arr):\n    if arr == []:\n        return 0\n    arr.sort()\n    res = None\n    for i in range(len(arr)):\n        #print(arr[i],i)\n        if arr[i] != i:\n            res = i\n            break\n    if res == None:\n        res = len(arr)\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    a = []\n    b = []\n    dic = {}\n    for i in arr:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i]+=1\n    for i in dic:\n        if dic[i] > 1:\n            a.append(i)\n            b.append(i)\n            dic[i] = 0\n        else:\n            a.append(i)\n            dic[i] = 0\n    #print(a,b)\n    x = mex(a)\n    y = mex(b)\n    print(x+y)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nwhile t:\n    t -= 1\n\n    n = int(input())\n    a = [int(ai) for ai in input().split()]\n\n    occ = {}\n\n    for ai in a:\n        if ai not in occ.keys():\n            occ[ai] = 1\n        else:\n            occ[ai] += 1\n\n    mexA = 101\n    mexB = 101\n\n    for i in range(0, 101):\n        if i not in occ:\n            mexA = min(mexA, i)\n            mexB = min(mexB, i)\n            break\n\n        if occ[i] == 1:\n            mexB = min(mexB, i)\n            continue\n\n    print(mexA+mexB)\n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n# region fastio\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------------------\n \ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\ndef print_list(l):\n    print(' '.join(map(str,l)))\n# import sys\n# sys.setrecursionlimit(5010)\n# import heapq as hq\n# from collections import deque as dq\n# from math import ceil,floor,sqrt,pow\n# import bisect as bs\nfrom collections import Counter\n# from collections import defaultdict as dc\n\nfor _ in range(N()):\n    n = N()\n    a = RLL()\n    dic = Counter(a)\n    res = 0\n    for i in range(1000):\n        if i not in dic:\n            res+=i \n            break\n        dic[i]-=1\n    for i in range(1000):\n        if i not in dic or dic[i]==0:\n            res+=i \n            break\n        # dic[i]-=1\n    print(res)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport os\nfrom io import BytesIO, IOBase\n\n#########################\n# imgur.com/Pkt7iIf.png #\n#########################\n\n\n\n# def cel(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // gcd(a, b)\ndef prr(a, sep=' '): print(sep.join(map(str, a)))\ndef ddi(): return defaultdict(int)\ndef ddl(): return defaultdict(list)\ndef ddd(): return defaultdict(defaultdict(int))\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n            while True:\n                    b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n                    if not b:\n                            break\n                    ptr = self.buffer.tell()\n                    self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n            self.newlines = 0\n            return self.buffer.read()\n\n    def readline(self):\n            while self.newlines == 0:\n                    b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n                    self.newlines = b.count(b\"\\n\") + (not b)\n                    ptr = self.buffer.tell()\n                    self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n            self.newlines -= 1\n            return self.buffer.readline()\n\n    def flush(self):\n            if self.writable:\n                    os.write(self._fd, self.buffer.getvalue())\n                    self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n            self.buffer = FastIO(file)\n            self.flush = self.buffer.flush\n            self.writable = self.buffer.writable\n            self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n            self.read = lambda: self.buffer.read().decode(\"ascii\")\n            self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nfrom collections import defaultdict \n# from collections import deque\n#from collections import OrderedDict\nfrom math import gcd,pi,inf\n#import time\n#import itertools\n#import timeit\n# import random\n# from bisect import bisect_left as bl\n# from bisect import bisect_right as br\n#from bisect import insort_left as il\n#from bisect import insort_right as ir\n#from heapq import *\n# from queue import PriorityQueue\n#mod=998244353\n#mod=10**9+7\n\n\n\nfrom collections import Counter\n\nfor _ in range(ii()):\n        n=ii()\n        a=li()\n        cnt=Counter(a)\n        mexa,mexb=-1,-1\n        for i in range(110):\n                if cnt[i]==0:\n                        mexa=i\n                        break\n        for i in range(110):\n                if cnt[i]<=1:\n                        mexb=i\n                        break\n        print(mexa+mexb)\n                \n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\n\nMOD = 998244353\nmod = 10**9 + 7\n\n# import resource\n# resource.setrlimit(resource.RLIMIT_STACK, [0x100000000, resource.RLIM_INFINITY])\n\ndef prepare_factorial():\n    fact = [1]\n    for i in range(1, 100005):\n        fact.append((fact[-1] * i) % mod)\n    ifact = [0] * 100005\n    ifact[100004] = pow(fact[100004], mod - 2, mod)\n    for i in range(100004, 0, -1):\n        ifact[i - 1] = (i * ifact[i]) % mod\n\n    return fact, ifact\n\n# import threading\n# threading.stack_size(1<<27)\nimport sys\n# sys.setrecursionlimit(10000)\n\n# from bisect import bisect_left, bisect_right, insort\nfrom math import floor, ceil, sqrt, degrees, atan, pi, log, sin, radians\n# from heapq import heappop, heapify, heappush\nfrom collections import Counter, defaultdict, deque\nfrom itertools import permutations\n\n\ndef modinv(n, p):\n    return pow(n, p - 2, p)\n\ndef ncr(n, r, fact, ifact):    # for using this uncomment the lines calculating fact and ifact\n    t = (fact[n] * (ifact[r] * ifact[n-r]) % mod) % mod\n    return t\n\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\n\n\"\"\"*****************************************************************************************\"\"\"\n\ndef GCD(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return (x * y)//(GCD(x, y))\n\ndef get_xor(n):\n    return [n, 1, n+1, 0][n % 4]\n\ndef get_n(P):    # this function returns the maximum n for which Summation(n) <= Sum\n    ans = (-1 + sqrt(1 + 8*P))//2\n    return ans\n\n\"\"\" ********************************************************************************************* \"\"\"\n\n\ndef main():\n    \n    T = int(input())\n    while T:\n        n = int(input())\n        Arr = get_array()\n        mydict = defaultdict(int)\n        for i in Arr:\n            mydict[i] += 1\n\n        curr = 0\n        ans = 0\n        flag = 0\n        while True:\n            p = mydict[curr]\n            if p >= 2:\n                curr += 1\n            elif p == 1:\n                if flag == 1:\n                    curr += 1\n                else:\n                    ans += curr\n                    curr += 1\n                    flag = 1\n            else:\n                if flag == 1:\n                    ans += curr\n                else:\n                    ans += 2*curr\n                break\n        print(ans)\n        T -= 1\n\n\n\n\n\"\"\" -------- Python 2 and 3 footer by Pajenegod and c1729 ---------\"\"\"\n\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\nimport os, sys\nfrom io import IOBase, BytesIO\n\nBUFSIZE = 8192\n\nclass FastIO(BytesIO):\n    newlines = 0\n\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0, 2), super(FastIO, self).write(s))[0])\n        return s\n\n    def read(self):\n        while self._fill(): pass\n        return super(FastIO, self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill();\n            self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\n\nclass IOWrapper(IOBase):\n\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s: self.buffer.write(s.encode('ascii'))\n            self.read = lambda: self.buffer.read().decode('ascii')\n            self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\nif __name__ == '__main__':\n    main()\n    # threading.Thread(target=main).start()"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\ndef solve(a):\n    c=Counter(a)\n    first=0\n    m=max(a)\n    hello=False\n    for i in range(m+1):\n        if c[i]==0:\n            first=i\n            hello=True\n            break\n        else:\n            c[i]-=1\n    if not hello:\n        first=m+1\n    hello=False\n    ans=[]\n    for v in c:\n        if c[v]:\n            ans.append(v)\n    ans.sort()\n    second=0\n    for i in range(m+1):\n        if i not in ans:\n            second=i\n            hello=True\n            break\n    if not hello:\n        second=m+1\n        \n    #print(second)\n    print(first+second)\n\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split( )))\n    solve(a)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.stream.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n\t\tStringBuilder result = new StringBuilder();\n\t\tint t = scan.nextInt();\n\t\tfor(int i = 0; i < t; i++) {\n\t\t\tint n = scan.nextInt();\n\t\t\tint ka = 0, kb = 0;\n\t\t\tSet<Integer> a = new HashSet<>();\n\t\t\tSet<Integer> b = new HashSet<>();\n\t\t\tfor(int j = 0; j < n; j++) {\n\t\t\t\tint next = scan.nextInt();\n\t\t\t\tif(!a.contains(next)) {\n\t\t\t\t\ta.add(next);\n\t\t\t\t\tif(ka == next) {\n\t\t\t\t\t\tka++;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\tif(!b.contains(next)) {\n\t\t\t\t\tb.add(next);\n\t\t\t\t\tif(kb == next) {\n\t\t\t\t\t\tkb++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile(a.contains(ka)) ka++;\n\t\t\twhile(b.contains(kb)) kb++;\n\t\t\tint res = ka + kb;\n\t\t\tresult.append(res + \"\\n\");\n\t\t}\n\t\tSystem.out.println(result);\n    }\t\n\t\n}"
        },
        {
            "language": 4,
            "solution": "/*input\n4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n\n*/\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\npublic class jav{\n  \tpublic static void main(String[] args) throws IOException{\n  \t\tReader sc=new Reader();\n  \t\tPrintWriter pw=new PrintWriter(System.out);\n  \t\tint t=sc.nextInt();\n  \t\twhile(t-->0){\n  \t\t\tint n=sc.nextInt();\n  \t\t\tint a[]=new int[n];\n  \t\t\tint []map=new int[101];\n  \t\t\tfor(int i=0;i<n;i++){\n  \t\t\t\ta[i]=sc.nextInt();\n  \t\t\t\tmap[a[i]]++;\n  \t\t\t}\n  \t\t\tint rem=2;\n  \t\t\tint ans=0;\n  \t\t\tint i=0;\n  \t\t\twhile(map[i]!=0){\n  \t\t\t\ti++;\n  \t\t\t}\n  \t\t\tans+=i;\n  \t\t\ti=0;\n  \t\t\twhile(map[i]>=2){\n  \t\t\t\ti++;\n  \t\t\t}\n  \t\t\tans+=i;\n  \t\t\tpw.println(ans);\n   \t\t}\n   \t\tpw.flush();\n   \t\tpw.close();\n  \t}\n  \tpublic static int helper(int a,int b,int c){\n  \t\tif(a<=0||b<=0){\n  \t\t\treturn c;\n  \t\t}\n  \t\tif(a<b){\n  \t\t\ta-=1;\n  \t\t\tb-=2;\n  \t\t}else if(b<a){\n  \t\t\ta-=2;\n  \t\t\tb-=1;\n  \t\t}else if(a==1&&b==1){\n  \t\t\treturn c;\n  \t\t}else{\n  \t\t\ta-=1;b-=2;\n  \t\t}\n  \t\treturn helper(a,b,c+1);\n  \t}\n\nstatic class Reader \n    { \n        final private int BUFFER_SIZE = 1 << 16; \n        private DataInputStream din; \n        private byte[] buffer; \n        private int bufferPointer, bytesRead; \n  \n        public Reader() \n        { \n            din = new DataInputStream(System.in); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public Reader(String file_name) throws IOException \n        { \n            din = new DataInputStream(new FileInputStream(file_name)); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public String readLine() throws IOException \n        { \n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c; \n            while ((c = read()) != -1) \n            { \n                if (c == '\\n') \n                    break; \n                buf[cnt++] = (byte) c; \n            } \n            return new String(buf, 0, cnt); \n        } \n  \n        public int nextInt() throws IOException \n        { \n            int ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do\n            { \n                ret = ret * 10 + c - '0'; \n            }  while ((c = read()) >= '0' && c <= '9'); \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public long nextLong() throws IOException \n        { \n            long ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public double nextDouble() throws IOException \n        { \n            double ret = 0, div = 1; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n  \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n  \n            if (c == '.') \n            { \n                while ((c = read()) >= '0' && c <= '9') \n                { \n                    ret += (c - '0') / (div *= 10); \n                } \n            } \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        private void fillBuffer() throws IOException \n        { \n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n            if (bytesRead == -1) \n                buffer[0] = -1; \n        } \n  \n        private byte read() throws IOException \n        { \n            if (bufferPointer == bytesRead) \n                fillBuffer(); \n            return buffer[bufferPointer++]; \n        } \n  \n        public void close() throws IOException \n        { \n            if (din == null) \n                return; \n            din.close(); \n        } \n        public int[] nextIntArray(int size)throws IOException {\n            int[] arr = new int[size];\n            for (int i = 0; i < size; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n        public long[] nextLongArray(int size) throws IOException {\n            long[] arr = new long[size];\n            for (int i = 0; i < size; i++) {\n                arr[i] = nextLong();\n            }\n            return arr;\n        }\n\n        public double[] nextDoubleArray(int size) throws IOException{\n            double[] arr = new double[size];\n            for (int i = 0; i < size; i++) {\n                arr[i] = nextDouble();\n            }\n            return arr;\n        }\n    } \n}\n\n"
        },
        {
            "language": 3,
            "solution": "def mi():\n    return map(int, input().split())\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(mi())\n    cnt = [0]*(102)\n    for i in a:\n        cnt[i]+=1\n    i=0\n    while i<=100 and cnt[i]:\n        cnt[i]-=1\n        i+=1\n    ans = i\n    i = 0\n    while i <= 100 and cnt[i]:\n        cnt[i] -= 1\n        i += 1\n    ans+=i\n    print (ans)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom decimal import Decimal\nfrom collections import defaultdict as dc\n#input=sys.stdin.readline\nimport math\nfrom bisect import bisect_left, bisect_right\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    x=dc(int)\n    y=dc(int)\n    for i in l:\n        if x[i]==0:\n            x[i]+=1\n        elif y[i]==0:\n            y[i]+=1\n    s=0\n    for i in range(101):\n        if x[i]==0:\n            s+=i\n            break\n    for i in range(101):\n        if y[i]==0:\n            s+=i\n            break\n    print(s)\n        \n    "
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile(t > 0):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    ma = 0\n    mb = 0\n    m = {}\n    for i in range(n):\n        if arr[i] not in m:\n            m[arr[i]] = 0\n        m[arr[i]] += 1\n    flagUpdate = False\n    for i in range(101):\n        if i not in m:\n            break\n        if m[i] >= 2:\n            ma += 1\n            if not flagUpdate:\n                mb += 1\n        elif m[i] == 1:\n            ma += 1\n            flagUpdate = True\n    print(ma+mb)\n    t -= 1\n"
        },
        {
            "language": 3,
            "solution": "def run():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ex = list(set(nums))\n    ex.sort()\n    ans = 0\n    for i in range(101):\n        if i not in ex:\n            ans += i\n            break\n    ex = []\n    for i in nums:\n        if nums.count(i) > 1:\n            ex.append(i)\n    ex.sort()\n    for i in range(101):\n        if i not in ex:\n            ans += i\n            break\n    print(ans)\n\n\n\nfor i in range(int(input())):\n    run()"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom math import gcd,sqrt,inf\nfrom collections import deque\ninput=stdin.readline\nR=lambda:map(int,input().split())\nI=lambda:int(input())\nS=lambda:input().rstrip('\\n')\nL=lambda:list(R())\nP=lambda x:stdout.write(x)\nhg=lambda x,y:((y+x-1)//x)*x\npw=lambda x:1 if x==1 else 1+pw(x//2)\nchk=lambda x:chk(x//2) if not x%2 else True if x==1 else False\nN=inf\nfor _ in range(I()):\n\tn=I()\n\t*a,=R()\n\tx=y=0\n\tfor i in range(102):\n\t\tp=a.count(i)\n\t\tif p<1:\n\t\t\tif not x:x=i+1\n\t\t\ty=i\n\t\t\tbreak\n\t\tif p<2 and not x:\n\t\t\tx=i+1\n\tprint(x+y-1)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    l.sort()\n    f = 0\n    som = 0\n    for i in range(0,101):\n        if l.count(i) == 0:\n            if f == 1:\n                som = som+i\n\n            else:\n                som = som+i+i\n\n            break\n\n        if l.count(i) == 1 and f == 0:\n            som = som+i\n            f = 1\n\n    print(som)"
        },
        {
            "language": 4,
            "solution": "//package clipse;\n\n\nimport java.util.*;\nimport java.util.function.Function;\nimport java.util.stream.Collectors;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\nimport java.io.*;\nimport java.math.*;\n\n\n\n\npublic class AA\n{\n\t\n\tstatic StringBuilder sb;\n\tstatic dsu dsu;\n\tstatic long fact[];\n\tstatic int mod=998244353;\n\t\n\t\n\tstatic void solve()\n    {\n\t\tint n=i();\n\t\tint A[]=new int[n];\n\t\tint X[]=new int[101];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tA[i]=i();\n\t\t\tX[A[i]]++;\n\t\t}\n\t\t\n\t\tint sum=0;\n\t\t\n\t\tfor(int i=0;i<=100;i++)\n\t\t{\n\t\t\tif(X[i]>0)\n\t\t\t{\n\t\t\t\tX[i]--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(X[i]==0)\n\t\t\t\t{\n\t\t\t\t\tsum+=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\tfor(int i=0;i<=100;i++)\n\t\t{\n\t\t\tif(X[i]>0)\n\t\t\t{\n\t\t\t\tX[i]--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(X[i]==0)\n\t\t\t\t{\n\t\t\t\t\tsum+=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\tSystem.out.println(sum);\n\t\t\n\t\t\n\t\t\n\t\t\n    }\n\t\n\t public static void main(String[] args)\n\t {\n\t         sb=new StringBuilder();\n\t         \n\t       /*  fact=new long[(int)1e6+1];\n\t         fact[0]=fact[1]=1;\n\t         for(int i=2;i<fact.length;i++)\n\t         {\n\t        \tfact[i]=((long)(i%mod)*1L*(long)(fact[i-1]%mod))%mod; \n\t         }*/\n\t         \n\t        \t\n\t         \n\t         \n\t        int test=i();\n\t        while(test-->0) \n\t        {\n\t        \t\n\t    \t\t\n\t        \t solve();\n\t        }\n\t        \n\t         System.out.println(sb);\n\t         \n\t }\n\t \n//*******************************************NCR%P*******************************************************\t \n\t static long ncr(int n, int r)\n\t {\n\t\t if(r>n)\n\t\t\t return (long)0;\n\t\t \n\t\t long res=fact[n]%mod;\n\t\t //System.out.println(res);\n\t\t res=((long)(res%mod)*(long)(p(fact[r],mod-2)%mod))%mod;\n\t\t res=((long)(res%mod)*(long)(p(fact[n-r],mod-2)%mod))%mod;\n\t\t //System.out.println(res);\n\t\t return res;\n\t\t\n\t\t \n\t }\n\t\tstatic long p(long x, long y)//POWER FXN //\n\t\t{\n\t\t\tif(y==0)\n\t\t\t\treturn 1;\n\t\t\t\n\t\t\tlong res=1;\n\t\t\twhile(y>0)\n\t\t\t{\n\t\t\t\tif(y%2==1)\n\t\t\t\t{\n\t\t\t\t\tres=(res*x)%mod;\n\t\t\t\t\ty--;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tx=(x*x)%mod;\n\t\t\t\ty=y/2;\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\t\n\n//*******************************************END*******************************************************\n\t \n\t \n\t \n\t \n\t \n\t //*********************************Disjoint set union*************************//\n\t static class dsu\n\t {\n\t\t int parent[];\n\t\t dsu(int n)\n\t\t {\n\t\t\t parent=new int[n];\n\t\t\t for(int i=0;i<n;i++)\n\t\t\t\t parent[i]=-1;\n\t\t }\n\t\t int find(int a)\n\t\t {\n\t\t\t if(parent[a]<0)\n\t\t\t\t return a;\n\t\t\t else\n\t\t\t {\n\t\t\t\t int x=find(parent[a]);\n\t\t\t\t parent[a]=x;\n\t\t\t\t return x;\n\t\t\t }\n\t\t }\n\t\t void merge(int a,int b)\n\t\t {\n\t\t\t a=find(a);\n\t\t\t b=find(b);\n\t\t\t if(a==b)\n\t\t\t\t return;\n\t\t\t parent[b]=a;\n\t\t }\n\t }\n\t \n\t \n\t \n//*******************************************PRIME FACTORIZE *****************************************************************************************************//\n\t static TreeMap<Integer,Integer> prime(long n)\n\t {\n\t\t TreeMap<Integer,Integer>h=new TreeMap<>();\n\t\t long num=n;\n\t\t for(int i=2;i<=Math.sqrt(num);i++)\n\t\t {\n\t\t\t if(n%i==0)\n\t\t\t {\n\t\t\t\t int nt=0;\n\t\t\t\t while(n%i==0) {\n\t\t\t\t\t n=n/i;\n\t\t\t\t\t nt++;\n\t\t\t\t }\n\t\t\t\t h.put(i, nt);\n\t\t\t }\n\t\t }\n\t\t if(n!=1)\n\t\t\t h.put((int)n, 1);\n\t\t return h;\n\t\t \n\t }\n\t \n\t\n\t\n//*************CLASS PAIR ***********************************************************************************************************************************************\n\t    static class pair implements Comparable<pair>\n\t    {\n\t        int x;\n\t        int y;\n\n\t        pair(int x, int y) {\n\t            this.x = x;\n\t            this.y = y;\n\t        }\n\t        public int compareTo(pair o)\n\t        {\n\t        \treturn x-o.x==0?y-o.y:x-o.x;\n\t        \t\n\t        }\n\t\t\t\n\t       \n\t    }\n//*************CLASS PAIR *****************************************************************************************************************************************************\n\t\n\t\n\t\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int Int() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String String() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return String();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0)\n                    writer.print(' ');\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void flush() {\n            writer.flush();\n        }\n    }\n\n    static InputReader in = new InputReader(System.in);\n    static OutputWriter out = new OutputWriter(System.out);\n   \n\n    public static int[] sort(int[] a) {\n        int n = a.length;\n        ArrayList<Integer> l = new ArrayList<>();\n        for (int i : a)\n            l.add(i);\n        Collections.sort(l);\n        for (int i = 0; i < l.size(); i++)\n            a[i] = l.get(i);\n        return a;\n    }\n\n    public static long pow(long x, long y) {\n        long res = 1;\n        while (y > 0) {\n            if (y % 2 != 0) {\n                res = (res * x);// % modulus;\n                y--;\n\n            }\n            x = (x * x);// % modulus;\n            y = y / 2;\n        }\n        return res;\n    }\n//GCD___+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    public static long gcd(long x, long y) {\n        if (x == 0)\n            return y;\n        else\n            return gcd(y % x, x);\n    }\n    //****************LOWEST COMMON MULTIPLE   *************************************************************************************************************************************\n\n    public static long lcm(long x, long y) {\n        return (x * (y / gcd(x, y)));\n    }\n//INPUT PATTERN******************************************************************************************************************************************************************\n    public static int i() {\n        return in.Int();\n    }\n\n    public static long l() {\n        String s = in.String();\n        return Long.parseLong(s);\n    }\n\n    public static String s() {\n        return in.String();\n    }\n\n    public static int[] readArray(int n) {\n        int A[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            A[i] = i();\n        }\n        return A;\n    }\n\n    public static long[] readArray(long n) {\n        long A[] = new long[(int) n];\n        for (int i = 0; i < n; i++) {\n            A[i] = l();\n        }\n        return A;\n    }\n\n}\n\n\n\n\n\n\n\t"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nwhile T > 0:\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\tcount = [0]*101\n\tfor x in arr:\n\t\tcount[x] += 1\n\tres = 0\n\tfinal = 0\n\tfor i in range(101):\n\t\tfinal = i\n\t\tif count[i] == 0: \n\t\t\tbreak\n\t\telse:\n\t\t\tcount[i] -= 1\n\tres += final\n\tfinal = 0\n\n\tfor i in range(101):\n\t\tfinal = i\n\t\tif count[i] == 0 :\n\t\t\tbreak\n\t\telse:\n\t\t\tcount[i] -= 1\n\tres += final\n\n\tprint(res)\n\n\n\tT -= 1"
        },
        {
            "language": 3,
            "solution": "t= int(input())\nans=[]\nfor i in range(t):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    b=[]\n    if 0 not in a:\n        ans.append(0)\n    else:\n        i=0\n        while(True):\n            \n            if i in a:\n                b.append(i)\n                a.remove(i)\n                i+=1\n            else:\n                break\n        count=max(b) + 1\n        b=[]\n        i=0\n        while(True):\n            \n            if i in a:\n                b.append(i)\n                a.remove(i)\n                i+=1\n            else:\n                break\n        count+=i\n        ans.append(count)\n\n\n\n\nfor i in ans:\n    print(i)"
        },
        {
            "language": 4,
            "solution": "import java.util.function.Consumer;\nimport java.util.*;\nimport java.io.*;\n public class KickStart2020{\n\tstatic class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n        public FastReader(){br = new BufferedReader(\n           new InputStreamReader(System.in));}\n        String next(){\n            while (st == null || !st.hasMoreElements()) {\n                try { st = new StringTokenizer(br.readLine()); }\n                catch (IOException e) {e.printStackTrace();}}\n            return st.nextToken();}\n        int nextInt() { return Integer.parseInt(next()); }\n        long nextLong() { return Long.parseLong(next()); }\n        double nextDouble() { return Double.parseDouble(next());}\n        float nextFloat() {return Float.parseFloat(next());}\n        String nextLine() {\n            String str = \"\";\n            try {str = br.readLine();}\n            catch (IOException e) { e.printStackTrace();}\n            return str; }}\n\t\n\tstatic String reverseOfString(String a) {\n\t\tStringBuilder ssd = new StringBuilder();\n\t\tfor(int i = a.length() - 1; i >= 0; i--) {\n\t\t\tssd.append(a.charAt(i));\n\t\t}\n\t\treturn ssd.toString();\n\t}\n\tstatic boolean isPalindrome(char a[]) {\n\t\tboolean hachu = true;\n\t\tfor(int i = 0; i <= a.length / 2; i++) {\n\t\t\tif(a[i] != a[a.length - 1 - i]) {\n\t\t\t\thachu = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn hachu;\n\t}\n\tstatic boolean areEqual(char a[], char b[]) {\n\t\tboolean hachu = true;\n\t\tfor(int i = 0; i < a.length; i++) if(a[i] != b[i]) {hachu = false; break;}\n\t\treturn hachu;\n\t}\n\tstatic int gcd(int a, int b)\n\t{\n\t    if (b == 0) {\n\t        return a;}\n\t    \n\t    return gcd(b, a % b);\n\t     \n\t}\n\tstatic boolean bracket(char a[]) {\n\t\tStack<Character> dd = new Stack<>();\n\t\tfor(int i = 0; i < a.length; i++) {\n\t\t\tif(a[i] == ')' && dd.isEmpty()) {\n\t\t\t\tdd.push(a[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[i] == '(') dd.push('(');\n\t\t\telse dd.pop();\n\t\t}\n\t\treturn dd.isEmpty();\n\t}\n\t\tpublic static void main(String[] args) throws Exception{\nFastReader sc = new FastReader();\nint t = sc.nextInt();\nwhile(t-- > 0) {\n\tint n = sc.nextInt();\n\tint arr[] = new int[101];\n\tfor(int i = 0; i < n; i++) {\n\t\tarr[sc.nextInt()]++;\n\t}\n\tint x = 0, y = 0;\n\tboolean hachu = true, hachu1 = false;\n\tfor(int i = 0; i < 101; i++) {\n\t\tif(arr[i] == 0) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tif(arr[i] == 1) {\n\t\t\t\tx = i + 1;\n\t\t\t\thachu = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = i + 1;\n\t\t\t\ty = (hachu) ? i + 1 : y;\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(x + y);\n}\n}\n }\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int mod = 1000000007;\nvoid solve() {\n  long long int n;\n  cin >> n;\n  vector<long long int> arr(n);\n  long long int count[1000] = {0};\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    count[arr[i]]++;\n  }\n  long long int a, b;\n  for (int i = 0; i < 1000; i++) {\n    if (count[i] == 0) {\n      a = i;\n      break;\n    }\n    if (count[i] > 0) count[i]--;\n  }\n  for (int i = 0; i < 1000; i++) {\n    if (count[i] == 0) {\n      b = i;\n      break;\n    }\n    if (count[i] > 0) count[i]--;\n  }\n  cout << a + b << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\tx=[0]*101\n\tfor i in a:\n\t\tx[i]+=1\n\tans=x.index(0)\n\tx[ans]=1\n\tans+=x.index(1)\n\tprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int n1 = 100 + 5;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> a(n1);\n    long long int x, y;\n    for (int i = 0; i < n; i++) {\n      int x1;\n      cin >> x1;\n      a[x1]++;\n    }\n    int k = 0;\n    for (int i = 0; i < n1; i++) {\n      if (a[i] == 1 && k == 0) {\n        x = i;\n        k++;\n      } else if (a[i] == 0) {\n        if (k == 0) {\n          x = i;\n          y = i;\n          break;\n        } else {\n          y = i;\n          break;\n        }\n      }\n    }\n    cout << x + y << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\n\nwhile t:\n    arr=[0]*102\n    t-=1\n    n=int(input())\n    l=list(map(int,input().split()))\n    for i in l:\n        arr[i]+=1\n    a=-1\n    b=-1\n    #print(l)\n    for i,v in enumerate(arr):\n        if v==1 and a==-1:\n            a=i\n        if v==0:\n            b=i\n            if a==-1:\n                a=i\n            break\n    print(a+b)    \n    \n"
        },
        {
            "language": 3,
            "solution": "testcases = int(input())\nfor testcase in range(testcases):\n    n = int(input())\n    temparr = input()\n    temparr = temparr.split()\n    arr = []\n    for i in temparr:\n        arr.append(int(i))\n    arr = sorted(arr)\n    dictsa = {}\n    dictsb = {}\n    flag = 0 \n    prev = 0\n    for i in arr:\n        if i not in dictsa:\n            dictsa[i] = 1 \n        else:\n            dictsb[i] = 1 \n    ans = 0\n    for i in range(0, n + 2):\n        if i not in dictsa:\n            ans += i \n            break \n    for i in range(0, n + 2):\n        if i not in dictsb:\n            ans += i \n            break \n    print(ans)\n    #     if i & 1 == 0 :\n    #         arra.append(arr[i])\n    #     else:\n    #         if arra[-1] == arr[i]:\n    #             arrb.append(arr[i])\n    #         else:\n    #             arra.append(arr[i])\n    # lenga = len(arra)\n    # lengb = len(arrb)\n    # dictsa = {}\n    # dictsb = {}\n    # for i in arra:\n    #     if i not in dictsa:\n    #         dictsa[i] = 1 \n    #     else:\n    #         dictsa[i] += 1 \n    # for i in arrb:\n    #     if i not in dictsb:\n    #         dictsb[i] = 1 \n    #     else:\n    #         dictsb[i] += 1 \n    # ans = 0 \n    # if lenga != 0 :\n    #     for i in range(lenga + 2):\n    #         if i not in dictsa:\n    #             ans += i \n    #             break \n    # if lengb != 0 :\n    #     for i in range(lengb + 2):\n    #         if i not in dictsb:\n    #             ans += i \n    #             break \n    # print(arra)\n    # print(arrb)\n    # print(ans)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep 14 16:10:50 2020\n\n@author: KRC\n\"\"\"\n\nloop=int(input())\nresult = []\n\nfor i in range (0,loop):\n    fl=0\n    sum=0\n    size = int(input())\n    arr=list(map(int,input().split()))\n    for j in range (0,size+1):\n        ct=0\n        for x in range(0,size):\n            if (j==arr[x]):\n                ct = ct + 1\n        if ct==0 and fl==0:\n            sum = sum + 2*j\n            break\n        elif ct==1 and fl==0:\n            sum = sum +j         \n            fl=1\n        elif ct==0 and fl==1:\n            sum = sum +j\n            break\n    result.append(sum)\n    \nprint(*result, sep = \"\\n\")\n            \n                "
        },
        {
            "language": 3,
            "solution": "# ---------------------------iye ha aam zindegi---------------------------------------------\nimport math\nimport random\nimport heapq, bisect\nimport sys\nfrom collections import deque, defaultdict\nfrom fractions import Fraction\nimport sys\nimport threading\nfrom collections import defaultdict\n#threading.stack_size(10**8)\nmod = 10 ** 9 + 7\nmod1 = 998244353\n\n# ------------------------------warmup----------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n#sys.setrecursionlimit(300000)\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\n# -------------------game starts now----------------------------------------------------import math\nclass TreeNode:\n    def __init__(self, k, v):\n        self.key = k\n        self.value = v\n        self.left = None\n        self.right = None\n        self.parent = None\n        self.height = 1\n        self.num_left = 1\n        self.num_total = 1\n\n\nclass AvlTree:\n\n    def __init__(self):\n        self._tree = None\n\n    def add(self, k, v):\n        if not self._tree:\n            self._tree = TreeNode(k, v)\n            return\n        node = self._add(k, v)\n        if node:\n            self._rebalance(node)\n\n    def _add(self, k, v):\n        node = self._tree\n        while node:\n            if k < node.key:\n                if node.left:\n                    node = node.left\n                else:\n                    node.left = TreeNode(k, v)\n                    node.left.parent = node\n                    return node.left\n            elif node.key < k:\n                if node.right:\n                    node = node.right\n                else:\n                    node.right = TreeNode(k, v)\n                    node.right.parent = node\n                    return node.right\n            else:\n                node.value = v\n                return\n\n    @staticmethod\n    def get_height(x):\n        return x.height if x else 0\n\n    @staticmethod\n    def get_num_total(x):\n        return x.num_total if x else 0\n\n    def _rebalance(self, node):\n\n        n = node\n        while n:\n            lh = self.get_height(n.left)\n            rh = self.get_height(n.right)\n            n.height = max(lh, rh) + 1\n            balance_factor = lh - rh\n            n.num_total = 1 + self.get_num_total(n.left) + self.get_num_total(n.right)\n            n.num_left = 1 + self.get_num_total(n.left)\n\n            if balance_factor > 1:\n                if self.get_height(n.left.left) < self.get_height(n.left.right):\n                    self._rotate_left(n.left)\n                self._rotate_right(n)\n            elif balance_factor < -1:\n                if self.get_height(n.right.right) < self.get_height(n.right.left):\n                    self._rotate_right(n.right)\n                self._rotate_left(n)\n            else:\n                n = n.parent\n\n    def _remove_one(self, node):\n        \"\"\"\n        Side effect!!! Changes node. Node should have exactly one child\n        \"\"\"\n        replacement = node.left or node.right\n        if node.parent:\n            if AvlTree._is_left(node):\n                node.parent.left = replacement\n            else:\n                node.parent.right = replacement\n            replacement.parent = node.parent\n            node.parent = None\n        else:\n            self._tree = replacement\n            replacement.parent = None\n        node.left = None\n        node.right = None\n        node.parent = None\n        self._rebalance(replacement)\n\n    def _remove_leaf(self, node):\n        if node.parent:\n            if AvlTree._is_left(node):\n                node.parent.left = None\n            else:\n                node.parent.right = None\n            self._rebalance(node.parent)\n        else:\n            self._tree = None\n        node.parent = None\n        node.left = None\n        node.right = None\n\n    def remove(self, k):\n        node = self._get_node(k)\n        if not node:\n            return\n        if AvlTree._is_leaf(node):\n            self._remove_leaf(node)\n            return\n        if node.left and node.right:\n            nxt = AvlTree._get_next(node)\n            node.key = nxt.key\n            node.value = nxt.value\n            if self._is_leaf(nxt):\n                self._remove_leaf(nxt)\n            else:\n                self._remove_one(nxt)\n            self._rebalance(node)\n        else:\n            self._remove_one(node)\n\n    def get(self, k):\n        node = self._get_node(k)\n        return node.value if node else -1\n\n    def _get_node(self, k):\n        if not self._tree:\n            return None\n        node = self._tree\n        while node:\n            if k < node.key:\n                node = node.left\n            elif node.key < k:\n                node = node.right\n            else:\n                return node\n        return None\n\n    def get_at(self, pos):\n        x = pos + 1\n        node = self._tree\n        while node:\n            if x < node.num_left:\n                node = node.left\n            elif node.num_left < x:\n                x -= node.num_left\n                node = node.right\n            else:\n                return (node.key, node.value)\n        raise IndexError(\"Out of ranges\")\n\n    @staticmethod\n    def _is_left(node):\n        return node.parent.left and node.parent.left == node\n\n    @staticmethod\n    def _is_leaf(node):\n        return node.left is None and node.right is None\n\n    def _rotate_right(self, node):\n        if not node.parent:\n            self._tree = node.left\n            node.left.parent = None\n        elif AvlTree._is_left(node):\n            node.parent.left = node.left\n            node.left.parent = node.parent\n        else:\n            node.parent.right = node.left\n            node.left.parent = node.parent\n        bk = node.left.right\n        node.left.right = node\n        node.parent = node.left\n        node.left = bk\n        if bk:\n            bk.parent = node\n        node.height = max(self.get_height(node.left), self.get_height(node.right)) + 1\n        node.num_total = 1 + self.get_num_total(node.left) + self.get_num_total(node.right)\n        node.num_left = 1 + self.get_num_total(node.left)\n\n    def _rotate_left(self, node):\n        if not node.parent:\n            self._tree = node.right\n            node.right.parent = None\n        elif AvlTree._is_left(node):\n            node.parent.left = node.right\n            node.right.parent = node.parent\n        else:\n            node.parent.right = node.right\n            node.right.parent = node.parent\n        bk = node.right.left\n        node.right.left = node\n        node.parent = node.right\n        node.right = bk\n        if bk:\n            bk.parent = node\n        node.height = max(self.get_height(node.left), self.get_height(node.right)) + 1\n        node.num_total = 1 + self.get_num_total(node.left) + self.get_num_total(node.right)\n        node.num_left = 1 + self.get_num_total(node.left)\n\n    @staticmethod\n    def _get_next(node):\n        if not node.right:\n            return node.parent\n        n = node.right\n        while n.left:\n            n = n.left\n        return n\n\n\n# -----------------------------------------------binary seacrh tree---------------------------------------\nclass SegmentTree1:\n    def __init__(self, data, default=0, func=lambda a, b: max(a , b)):\n        \"\"\"initialize the segment tree with data\"\"\"\n        self._default = default\n        self._func = func\n        self._len = len(data)\n        self._size = _size = 1 << (self._len - 1).bit_length()\n\n        self.data = [default] * (2 * _size)\n        self.data[_size:_size + self._len] = data\n        for i in reversed(range(_size)):\n            self.data[i] = func(self.data[i + i], self.data[i + i + 1])\n\n    def __delitem__(self, idx):\n        self[idx] = self._default\n\n    def __getitem__(self, idx):\n        return self.data[idx + self._size]\n\n    def __setitem__(self, idx, value):\n        idx += self._size\n        self.data[idx] = value\n        idx >>= 1\n        while idx:\n            self.data[idx] = self._func(self.data[2 * idx], self.data[2 * idx + 1])\n            idx >>= 1\n\n    def __len__(self):\n        return self._len\n\n    def query(self, start, stop):\n        if start == stop:\n            return self.__getitem__(start)\n        stop += 1\n        start += self._size\n        stop += self._size\n\n        res = self._default\n        while start < stop:\n            if start & 1:\n                res = self._func(res, self.data[start])\n                start += 1\n            if stop & 1:\n                stop -= 1\n                res = self._func(res, self.data[stop])\n            start >>= 1\n            stop >>= 1\n        return res\n\n    def __repr__(self):\n        return \"SegmentTree({0})\".format(self.data)\n\n\n# -------------------game starts now----------------------------------------------------import math\nclass SegmentTree:\n    def __init__(self, data, default=0, func=lambda a, b:a + b):\n        \"\"\"initialize the segment tree with data\"\"\"\n        self._default = default\n        self._func = func\n        self._len = len(data)\n        self._size = _size = 1 << (self._len - 1).bit_length()\n\n        self.data = [default] * (2 * _size)\n        self.data[_size:_size + self._len] = data\n        for i in reversed(range(_size)):\n            self.data[i] = func(self.data[i + i], self.data[i + i + 1])\n\n    def __delitem__(self, idx):\n        self[idx] = self._default\n\n    def __getitem__(self, idx):\n        return self.data[idx + self._size]\n\n    def __setitem__(self, idx, value):\n        idx += self._size\n        self.data[idx] = value\n        idx >>= 1\n        while idx:\n            self.data[idx] = self._func(self.data[2 * idx], self.data[2 * idx + 1])\n            idx >>= 1\n\n    def __len__(self):\n        return self._len\n\n    def query(self, start, stop):\n        if start == stop:\n            return self.__getitem__(start)\n        stop += 1\n        start += self._size\n        stop += self._size\n\n        res = self._default\n        while start < stop:\n            if start & 1:\n                res = self._func(res, self.data[start])\n                start += 1\n            if stop & 1:\n                stop -= 1\n                res = self._func(res, self.data[stop])\n            start >>= 1\n            stop >>= 1\n        return res\n\n    def __repr__(self):\n        return \"SegmentTree({0})\".format(self.data)\n\n\n# -------------------------------iye ha chutiya zindegi-------------------------------------\nclass Factorial:\n    def __init__(self, MOD):\n        self.MOD = MOD\n        self.factorials = [1, 1]\n        self.invModulos = [0, 1]\n        self.invFactorial_ = [1, 1]\n\n    def calc(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate n!\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        if n < len(self.factorials):\n            return self.factorials[n]\n        nextArr = [0] * (n + 1 - len(self.factorials))\n        initialI = len(self.factorials)\n        prev = self.factorials[-1]\n        m = self.MOD\n        for i in range(initialI, n + 1):\n            prev = nextArr[i - initialI] = prev * i % m\n        self.factorials += nextArr\n        return self.factorials[n]\n\n    def inv(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate n^(-1)\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        p = self.MOD\n        pi = n % p\n        if pi < len(self.invModulos):\n            return self.invModulos[pi]\n        nextArr = [0] * (n + 1 - len(self.invModulos))\n        initialI = len(self.invModulos)\n        for i in range(initialI, min(p, n + 1)):\n            next = -self.invModulos[p % i] * (p // i) % p\n            self.invModulos.append(next)\n        return self.invModulos[pi]\n\n    def invFactorial(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate (n^(-1))!\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        if n < len(self.invFactorial_):\n            return self.invFactorial_[n]\n        self.inv(n)  # To make sure already calculated n^-1\n        nextArr = [0] * (n + 1 - len(self.invFactorial_))\n        initialI = len(self.invFactorial_)\n        prev = self.invFactorial_[-1]\n        p = self.MOD\n        for i in range(initialI, n + 1):\n            prev = nextArr[i - initialI] = (prev * self.invModulos[i % p]) % p\n        self.invFactorial_ += nextArr\n        return self.invFactorial_[n]\n\n\nclass Combination:\n    def __init__(self, MOD):\n        self.MOD = MOD\n        self.factorial = Factorial(MOD)\n\n    def ncr(self, n, k):\n        if k < 0 or n < k:\n            return 0\n        k = min(k, n - k)\n        f = self.factorial\n        return f.calc(n) * f.invFactorial(max(n - k, k)) * f.invFactorial(min(k, n - k)) % self.MOD\n\n\n# --------------------------------------iye ha combinations ka zindegi---------------------------------\ndef powm(a, n, m):\n    if a == 1 or n == 0:\n        return 1\n    if n % 2 == 0:\n        s = powm(a, n // 2, m)\n        return s * s % m\n    else:\n        return a * powm(a, n - 1, m) % m\n\n\n# --------------------------------------iye ha power ka zindegi---------------------------------\ndef sort_list(list1, list2):\n    zipped_pairs = zip(list2, list1)\n\n    z = [x for _, x in sorted(zipped_pairs)]\n\n    return z\n\n\n# --------------------------------------------------product----------------------------------------\ndef product(l):\n    por = 1\n    for i in range(len(l)):\n        por *= l[i]\n    return por\n\n\n# --------------------------------------------------binary----------------------------------------\ndef binarySearchCount(arr, n, key):\n    left = 0\n    right = n - 1\n\n    count = 0\n\n    while (left <= right):\n        mid = int((right + left) / 2)\n\n        # Check if middle element is\n        # less than or equal to key\n        if (arr[mid] < key):\n            count = mid + 1\n            left = mid + 1\n\n        # If key is smaller, ignore right half\n        else:\n            right = mid - 1\n\n    return count\n\n\n# --------------------------------------------------binary----------------------------------------\ndef countdig(n):\n    c = 0\n    while (n > 0):\n        n //= 10\n        c += 1\n    return c\ndef binary(x, length):\n    y = bin(x)[2:]\n    return y if len(y) >= length else \"0\" * (length - len(y)) + y\n\ndef countGreater(arr, n, k):\n    l = 0\n    r = n - 1\n\n    # Stores the index of the left most element\n    # from the array which is greater than k\n    leftGreater = n\n\n    # Finds number of elements greater than k\n    while (l <= r):\n        m = int(l + (r - l) / 2)\n        if (arr[m] >= k):\n            leftGreater = m\n            r = m - 1\n\n        # If mid element is less than\n        # or equal to k update l\n        else:\n            l = m + 1\n\n    # Return the count of elements\n    # greater than k\n    return (n - leftGreater)\n\n\n# --------------------------------------------------binary------------------------------------\nfor ik in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    d=defaultdict(int)\n    for i in range(n):\n        d[l[i]]+=1\n    #print(d)\n    ans=0\n    t=0\n    for i in range(max(l)+2):\n        if d[i]==0:\n            ans+=i+i\n            t=1\n            break\n        if d[i]==1:\n            ans+=i\n            break\n    if t==1:\n        print(ans)\n        continue\n    for i in range(max(l)+2):\n        if d[i]==0:\n            ans+=i\n            break\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "#------------------------template--------------------------#\nimport os\nimport sys\n# from fractions import *\nfrom math import *\nfrom collections import *\nfrom bisect import *\n# from heapq import*\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nALPHA='abcdefghijklmnopqrstuvwxyz'\nM=998244353\nEPS=1e-6\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n\n#-------------------------code---------------------------#\n# vsInput()\n\n\nfor _ in range(Int()):\n    n=Int()\n    a=sorted(array())\n    C=Counter(a)\n\n    found=False\n    ans=0\n\n    for i in range(105):\n\n        if(C[i]<2 and not found):\n            found=True\n            ans+=i\n        if(found and C[i]==0):\n            ans+=i\n            break\n\n    print(ans)\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n    \n        \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    "
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom collections import Counter\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef main():\n    t = int(input())\n\n    for _ in range(t):\n        n = int(input())\n        a = Counter([int(ai) for ai in input().split()])\n\n        c0 = -1\n        c1 = -1\n\n        for i in range(0, 110):\n            if a[i] < 2 and c1 == -1:\n                c1 = i\n            if a[i] == 0:\n                c0 = i\n                break\n\n        print(c0 + c1)\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solved() {\n  int n;\n  cin >> n;\n  vector<int> ve;\n  int x;\n  map<int, int> mp;\n  for (int i = 1; i <= n; i++) cin >> x, ve.push_back(x), mp[x]++;\n  sort(ve.begin(), ve.end());\n  int ans1 = 0, ans2 = 0;\n  for (int i = 0; i <= 100; i++) {\n    if (mp[i] < 2) {\n      ans2 = i;\n      break;\n    }\n  }\n  for (int i = ans2; i <= 100; i++) {\n    if (mp[i] < 1) {\n      cout << (i + ans2) << endl;\n      return;\n    }\n  }\n}\nint main() {\n  int t;\n  while (cin >> t) {\n    while (t--) solved();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nrl = sys.stdin.readline\nreadInt = lambda: int(rl())\nt = readInt()\nfor i in range(t):\n    n = readInt()\n    ns = [int(x) for x in rl().split()]\n    nums = sorted(ns)\n    a, b = -1, -1\n    for n in nums:\n        da = n - a\n        if da == 1:\n            a = n\n            continue\n        db = n - b\n        if db == 1:\n            b = n\n            continue\n    print(a + b + 2)\n\n"
        },
        {
            "language": 3,
            "solution": "import math\ntst =int(input())\n\nt=1\nwhile t<=tst:\n    n=int(input())\n    ls=list(map(int,input().split()))\n    ls1=[0]*105\n    sum=i=0\n    while i<n:\n        ls1[ls[i]]+=1\n        i+=1\n    i=0\n    while i<=105:\n        if ls1[i]>0:\n            ls1[i]-=1\n        else:\n            sum+=i\n            break\n        i+=1\n    i=0\n    while i<=105:\n        if ls1[i]>0:\n            ls1[i]-=1\n        else:\n            sum+=i\n            break\n        i+=1\n    print(sum)\n\n    t+=1"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    lst=list(map(int,input().split()))\n    lst.sort()\n    freq={}\n    if 0 not in lst:\n        print(0)\n    else:\n        for i in lst:\n            if i in freq:\n                freq[i]+=1\n            else:\n                freq[i]=1\n        ans=0\n        l1=[]\n        l2=[]\n        for k,v in freq.items():\n            if v>=2:\n                l1.append(k)\n                l2.append(k)\n            \n            elif v==1:\n                l1.append(k)\n        ans=0\n        ans1=0\n        if len(l1)!=0:\n            ans=0\n            for i in range(len(l1)-1):\n                if l1[i+1]-l1[i]!=1:\n                    ans+=l1[i]+1\n                    break\n            if ans==0:\n                ans=l1[-1]+1\n        if len(l2)!=0 and l2[0]==0:\n            ans1=0\n            for i in range(len(l2)-1):\n                if l2[i+1]-l2[i]!=1:\n                    ans1+=l2[i]+1\n                    break\n            if ans1==0:\n                ans1=l2[-1]+1\n        elif len(l2)!=0 and l2[0]!=0:\n            ans1+=0\n        print(ans+ans1)\n            \n                "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class A {\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t\tFastScanner fs = new FastScanner();\n\t\tint tt = fs.nextInt();\n\t\tfor(int ii = 0; ii < tt; ii++) {\n\t\t\tint n = fs.nextInt();\n\t\t\tint[] a = fs.readArray(n);\n\t\t\tHashSet<Integer> used = new HashSet<>(), used2 = new HashSet<>();\n\t\t\tfor(int i:a) {\n\t\t\t\tif(used.contains(i)) used2.add(i);\n\t\t\t\telse used.add(i);\n\t\t\t}\n\t\t\tSystem.out.println(mex(used) + mex(used2));\n\t\t}\n\t}\n\t\n\tprivate static int mex(HashSet<Integer> s) {\n\t\tfor(int  i = 0; i < 1000; i++)\n\t\t\tif(!s.contains(i)) return i;\n\t\tthrow null;\n\t}\n\t\n\tstatic class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a2 = list(set(a))\n    ans = 0\n    for i in range(len(a2)):\n        if a2[i] != i:\n            ans += i\n            break\n    else:\n        ans += len(a2)\n    for i in range(ans):\n        a.remove(i)\n    a2 = list(set(a))\n    for i in range(len(a2)):\n        if a2[i] != i:\n            ans += i\n            break\n    else:\n        ans += len(a2)\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "T=int(input())\nfor _ in range(T):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    if arr[0]==0:\n        my_dict=dict()\n        for i in arr:\n            if i in my_dict:\n                my_dict[i]+=1\n            else:\n                my_dict[i]=1\n        a,b=[],[]\n        for i in my_dict:\n            if my_dict[i]==1:\n                a.append(i)\n            else:\n                a.append(i)\n                b.append(i)\n        ans=0\n        if len(a)>0:\n            up=a[-1]\n            f1=0\n            for i in range(0,up+1):\n                if a[i]==i:\n                    continue\n                else:\n                    f1=1\n                    ans+=i\n                    break\n            if f1==0:\n                ans+=(up+1)\n        if len(b)>0:\n            up=b[-1]\n            f2=0\n            for i in range(0,up+1):\n                if b[i]==i:\n                    continue\n                else:\n                    f2=1\n                    ans+=i\n                    break\n            if f2==0:\n                ans+=(up+1)\n        print(ans)\n    else:\n        print(0)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math \nfrom decimal import *\ndef I(): return int(sys.stdin.readline())\ndef IL(): return list(map(int,sys.stdin.readline().strip().split()))\ndef ILS(): return list(map(str,sys.stdin.readline().strip().split()))\n\ndef solve():\n\ttt = I()\n\tfor ii in range(tt):\n\t\tn = I()\n\t\tl = IL()\n\t\tlast = max(l)\n\t\td= {}\n\t\tfor ll in l :\n\t\t\tif ll not in d : d[ll] = 1\n\t\t\telse : d[ll]+=1\n\t\tp= []\n\t\t# for dd in d : \n\t\t# \tx,y = dd,d[dd]\n\t\t# \tp.append((x,y))\n\t\t# p.sort()\n\n\t\ta1=None;a2 =None\n\t\tma = 0\n\n\t\tfor x in range(0,last+2) :\n\t\t\t# print(x,a1,d)\n\t\t\tif x in d and d[x]>0 : d[x]-=1\n\t\t\telse : a1 = x;break;\n\t\tfor x in range(0,last+2) :\n\t\t\tif x in d and d[x]>0: d[x]-=1\n\t\t\telse : a2 = x;break;\n\t\t\n\t\tprint(a1+a2)\n\t\tpass\n\t\t\n\nsolve()"
        },
        {
            "language": 3,
            "solution": "def Ans():\n    N=int(input())\n    for i in range(N):\n        A=int(input())\n        B=sorted(list(map(int,input().split())))\n        a=0\n        ans=0 \n        C=B\n        for i in range(len(B)+1):\n            if i not in B:\n                ans+=i\n                break\n            else:\n                C.remove(i)\n        D=C\n        for i in range(len(C)+1):\n            if i not in C:\n                ans+=i\n                break\n            else:\n                D.remove(i)\n        print(ans)\n\nAns()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  scanf(\" %d\", &n);\n  vector<int> a(n), cnt(200, 0);\n  for (auto &b : a) cin >> b, cnt[b]++;\n  sort(a.begin(), a.end());\n  int n1 = 0, n2 = 0;\n  int tt = 0;\n  for (int i = 0; i < n && cnt[i] > 1; i++) n1++;\n  for (int i = n1; i < n && cnt[n2]; i++) n2++;\n  cout << n1 + n2 << endl;\n}\nint main() {\n  int t;\n  scanf(\" %d\", &t);\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n\n    cnt_t = [0] * 101\n    for x in a:\n        cnt_t[x] += 1\n    mex_comp = None\n\n    for i, count in enumerate(cnt_t):\n        if count == 0:\n            mex_comp = i\n            break\n    assert mex_comp != None\n    for i, count in enumerate(cnt_t):\n        if count != 0:\n            cnt_t[i] -= 1\n    mex_a = mex_comp\n    mex_b = None\n    for i, count in enumerate(cnt_t):\n        if count == 0:\n            mex_b = i\n            break\n    assert mex_b != None\n    print(mex_b + mex_a)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\t\n\tpublic class Solution {\n\n\t\tpublic static void main(String[] args) {\n\t\t\t\n\t\t\tScanner scan = new Scanner(System.in);\n\t\t\tint t = scan.nextInt();\n\t\t\t\n\t\t\twhile(t-->0) {\n\t\t\t\tint n =scan.nextInt();\n\t\t\t\t//String str= scan.next();\n\t\t\t\tint curr1=0, curr2=0;\n\t\t\t\tint[] arr = new int[n];\n\t\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\t\tarr[i]=scan.nextInt();\n\t\t\t\t}\n\t\t\t\tArrays.parallelSort(arr);\n\t\t\t\t//System.out.println(arr[0]+\" \"+arr[1]);\n\t\t\t\tboolean is2active=true;\n\t\t\t\tint ans=0;\n\t\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\t\tif(arr[i]==curr1) {\n\t\t\t\t\t\tcurr1++;\n\t\t\t\t\t\t//if(is2active)i++;\n\t\t\t\t\t}else if(arr[i]>curr1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else if(arr[i]<curr1) continue;\n\t\t\t\t\tif(is2active && i+1<n && arr[i+1]==curr2) {\n\t\t\t\t\t\tcurr2++;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}else if(i+1<n && arr[i+1]>curr2 && is2active) {\n\t\t\t\t\t\tans+=curr2;\n\t\t\t\t\t\tis2active=false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tans+=curr1;\n\t\t\t\tif(is2active) ans+=curr2;\n\t\t\t\tSystem.out.println(ans);\n\t\t\t}\n\t\t\t\n\t\t\tscan.close();\n\t\t}\n\t\t\n\t}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &FF) {\n  T RR = 1;\n  FF = 0;\n  char CH = getchar();\n  for (; !isdigit(CH); CH = getchar())\n    if (CH == '-') RR = -1;\n  for (; isdigit(CH); CH = getchar()) FF = (FF << 1) + (FF << 3) + (CH ^ 48);\n  FF *= RR;\n}\nint a[110], h[110];\nint work() {\n  memset(h, 0, sizeof(h));\n  int n;\n  read(n);\n  for (int i = 1; i <= n; i++) {\n    read(a[i]);\n    h[a[i]]++;\n  }\n  int ans = 0, s = 0;\n  for (int i = 0; i <= 100; i++) {\n    if (!h[i]) {\n      ans += i;\n      if (++s == 2) break;\n      ans += i;\n      if (++s == 2) break;\n    }\n    if (h[i] == 1 && s != 1) {\n      ans += i;\n      if (++s == 2) break;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\nint main() {\n  int T;\n  read(T);\n  while (T--) {\n    work();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\npublic class test\n {\n\tpublic static void main (String[] args) throws Exception\n\t {\n\t //code\n\t\tBufferedReader  br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\t\twhile(t-- > 0)\n\t\t{\n\t\t\tint n = Integer.parseInt(br.readLine());\n\t\t\tint a[] = new int[n];\n\t\t\tString str[] = br.readLine().trim().split(\"\\\\s+\");\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\ta[i] = Integer.parseInt(str[i]);\n\t\t\t\n\t\t\tSystem.out.println(fun(a));\n\t\t}\n\t }\n\n\tstatic int fun(int a[]){\n\t\tint max = Integer.MIN_VALUE;\n\t\tint n = a.length;\n\t\tfor(int i = 0 ; i < n; i++)\n\t\t\tmax = max>=a[i]?max:a[i];\n\t\tint f[] = new int[max+2];\n\t\tfor(int i = 0; i < n;i++)\n\t\t\tf[a[i]]++;\n\t\tint ans = 0; \n\t\tint count = 0;\n\t\tfor(int i = 0; i < f.length; i++)\n\t\t\tif(f[i] == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tans += i;\n\t\t\t\tif(count == 2)\n\t\t\t\t\tbreak; \n\t\t\t\twhile(--i >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tf[i]--;\t\n\t\t\t\t\t}\n\t\t\t}\t\n\t\treturn ans;\t\n\t} \n\t\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = sorted(map(int, stdin.readline().split()))\n    mex_a, mex_b = 0, 0\n    for i in a:\n        if i == mex_a:\n            mex_a += 1\n        elif i == mex_b:\n            mex_b += 1\n\n    print(mex_a + mex_b)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep 28 08:56:36 2020\n\n@author: welcome\n\"\"\"\n\nfor _ in range(int(input())):\n    n=int(input())\n    arr = list(map(int,input().rstrip().rsplit()))\n    new,a,b=[],0,0\n    arr.sort()\n    f=[arr.count(i) for i in range(arr[n-1]+2)]\n    for i in range(arr[n-1]+2):\n        if f[i]>0:\n            f[i]-=1\n        else:\n            a=i\n            break\n    for i in range(n):\n        if f[i]>0:\n            f[i]-=1\n        else:\n            b=i\n            break\n    print(b+a)\n    \n    "
        },
        {
            "language": 3,
            "solution": "\"\"\"\n- math -\nfrom math import factorial\nfrom math import gcd\nfrom math import pi\nlarge_p = 10**9 + 7\nfrom itertools import accumulate # \u7d2f\u7a4d\u548c\nfrom operator import mul\n- other -\nfrom collections import Counter\nfrom itertools import combinations\nfrom itertools import combinations_with_replacement\nfrom itertools import permutations\nfrom operator import itemgetter\nfrom functools import reduce\n- list -\nfrom copy import deepcopy\nfrom collections import deque\nfrom heapq import heapify, heappop, heappush\n- output -\np2d = lambda x: print(*x, sep=\"\\n\")\np2line = lambda x: print(*x, sep=\" \")\nprint(*list1, sep=\"\\n\")\n- input -\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n= map(int, input().split())\n= [tuple(map(int, input().split())) for _ in range(n)]\nm = map(int, read().split()) /ab = zip(m, m) /for a, b in ab:\nps = [line.split() for line in readlines()] # input\u306e\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3002\nn, k, *h = map(int, read().split())\na = tuple(map(int, readlines()))\na = np.array(read().split(), np.int32)\n- run -\nsys.setrecursionlimit(10**6)\nfrom time import sleep\nfrom numba import njit\nimport numpy as np\n\"\"\"\n# ATC05\n\nimport sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom collections import Counter\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        a = [ea for ea in a if ea >= 0]\n        a.sort()\n        if a[0] >= 1:\n            print(0)\n        else:\n            ac = Counter(a)\n            r1 = 0\n            r2 = 0\n            cnt = 0\n            flag = False\n            for k, v in ac.items():\n                if k != cnt:\n                    break\n                if v <= 1:\n                    r1 = cnt + 1\n                    flag = True\n                else:\n                    if flag:\n                        r1 = cnt + 1\n                    else:\n                        r1 = cnt + 1\n                        r2 = cnt + 1\n                cnt += 1\n            print(r1 + r2)\n\nif __name__ == '__main__':\n    main()\n\n"
        },
        {
            "language": 3,
            "solution": "def mex(N,S):\n    c=0\n    ans=0\n    for i in range(102):\n        if S.count(i)==0:\n            ans+=i*(2-c)\n            break\n        elif S.count(i)==1:\n            if c==0:\n                ans+=i\n                c+=1\n    return(ans)\n            \nfor i in range(int(input())):\n    print(mex(int(input()),list(map(int,input().split()))))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[101];\nint main() {\n  ios::sync_with_stdio(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    for (int i = 0; i <= 100; i++) a[i] = 0;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      a[x]++;\n    }\n    int u = 1000, v = 1000;\n    for (int i = 0; i < 102; i++) {\n      if (a[i] >= 2) continue;\n      if (a[i] == 1) {\n        u = min(u, i);\n        continue;\n      }\n      v = min(v, i);\n      u = min(u, i);\n    }\n    cout << u + v << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    l1=[]\n    l2=[]\n    for i in range(n):\n        if l[i] in l1:\n            l2.append(l[i])\n        else:\n            l1.append(l[i])\n    l1.sort()\n    l2.sort()\n    ans=0\n    for i in range(101):\n        if i not in l1:\n            ans+=i\n            break\n    for i in range(101):\n        if i not in l2:\n            ans+=i\n            break\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    m = len(set(arr))\n    temp = list(range(n))\n    arr = temp + arr\n    freqs = list(Counter(arr).values())\n    for i in range(m):\n        freqs[i] -= 1\n    i = 0\n    while i < m and freqs[i] > 0:\n        freqs[i] -= 1\n        i += 1\n    l = i\n    i = 0\n    while i < m and freqs[i] > 0:\n        freqs[i] -= 1\n        i += 1\n    r = i\n    print(l+r)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n        StringBuilder ans = new StringBuilder();\n        int t = sc.nextInt();\n        while (t-->0) {\n            int n = sc.nextInt();\n            int[] cnt = new int[111];\n            for (int i = 0; i < n; i++) {\n                cnt[sc.nextInt()]++;\n            }\n            int mexA = 0;\n            for (int a = 0; a <= 110; a++) {\n                if (cnt[a] == 0) break;\n                cnt[a]--;\n                mexA = a+1;\n            }\n            int mexB = 0;\n            for (int a = 0; a <= 110; a++) {\n                if (cnt[a] == 0) break;\n                cnt[a]--;\n                mexB = a+1;\n            }\n \n            //System.out.println(\"#\"+min+\",\"+max);\n            ans.append(mexA+mexB).append('\\n');\n        }\n\n        System.out.print(ans);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n = int(input())\n    u = list(map(int, input().split()))\n    u.sort()\n    a = []\n    k = 1\n    #print(*u)\n    for i in range(1, n):\n        if u[i] == u[i - 1]:\n            k += 1\n        else:\n            a.append((k, u[i - 1]))\n            k = 1\n    a.append((k, u[-1]))\n    cur1 = -1\n    for i in range(len(a)):\n        if a[i][1] == cur1 + 1 and a[i][0] > 1:\n            cur1 += 1\n        else:\n            break\n    cur2 = -1\n    for i in range(len(a)):\n        if a[i][1] == cur2 + 1:\n            cur2 += 1\n        else:\n            break\n    print(cur1 + cur2 + 2)\n##    print(*a)\n##    if a[0][1] != 0:\n##        print(0)\n##        continue\n##    if a[0][0] == 1:\n##        cur = 0\n##        for i in range(1, len(a)):\n##            if a[i][1] > cur + 1:\n##                break\n##            cur += 1\n##        print(cur)\n##        continue\n##    cur = 0\n##    for i in range(1, len(a)):\n##        if a[i][1] > cur + 1:\n##            print(cur * 2)\n##            break\n##        if a[i][0] == 1:\n##            cur1 = cur\n##            for j in range(i + 1, len(a)):\n##                if a[j][1] > cur1 + 1:\n##                    break\n##                cur1 += 1\n##            print(cur + cur1)\n##            break\n##        cur += 1\n##    else:\n##        print(cur * 2)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int,input().split()))\n\n    arr.sort()\n    left,right = set(),set()\n    for num in arr:\n        if num not in left:\n            left.add(num)\n        else:\n            right.add(num)\n\n    mexA=mexB=0\n    for num in range(101):\n        if num not in left:\n            mexA = num\n            break\n    \n    for num in range(101):\n        if num not in right:\n            mexB = num\n            break\n\n    ans = mexB + mexA\n    print(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main\n{\n\tpublic static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        while(t--!=0)\n        {\n            long sum=0,c=0;\n            int n=sc.nextInt();\n            int a[]=new int[n];\n            for(int i=0;i<n;i++)\n            {\n                a[i]=sc.nextInt();\n            }\n            Arrays.sort(a);\n            int freq[]=new int[101];\n            for(int i=0;i<101;i++)\n            {\n                freq[i]=0;\n            }\n            for(int i=0;i<n;i++)\n            {\n                freq[a[i]]++;\n            }\n            \n            int i=0;\n            while(c!=2)\n            {\n                if(freq[i]==0)\n                {\n                    sum+=i;\n                    c++;\n                    if(c==2)\n                    break;\n                    i=0;\n                }\n                else\n                {\n                    freq[i]--;\n                    i++;\n                }\n                if(i==n)\n                {\n                    sum+=n;\n                    break;\n                }\n                \n            }\n            \n            System.out.println(sum);\n        }\n        \n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfor _ in range(int(input())):\n  n=int(input())\n  a=[int(x) for x in input().split()]\n  l1=[]\n  l2=[]\n  ans=0\n  h=defaultdict(int)\n  for i in a:\n    h[i]+=1\n  for i in h:\n    if h[i]>=2:\n      l1.append(i)\n      h[i]-=1\n      for j in range(h[i]):\n        l2.append(i)\n      for j in range(h[i]+1):\n        a.remove(i)\n      h[i]=-1\n  for i in range(0,102):\n    if i in l1:\n      continue\n    if i in a:\n      l1.append(i)\n      a.remove(i)\n    else:\n      ans+=i\n      break\n  for i in range(0,102):\n    if i in l2:\n      continue\n    if i in a:\n      l2.append(i)\n      a.remove(i)\n    else:\n      ans+=i\n      break\n  print(ans)"
        },
        {
            "language": 3,
            "solution": "def meh(a):\n    b = set(a)\n    i = 0\n    while i in b:\n        i += 1\n    return i\n\n\nn = int(input())\nfor i in range(n):\n    k = int(input())\n    myList = list(map(int, input().split()))\n    b = []\n    myList.sort()\n    a = [myList[0]]\n    for j in range(1, k):\n        if myList[j] != myList[j - 1]:\n            a.append(myList[j])\n        else:\n            b.append(myList[j])\n    print(meh(a) + meh(b))\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nT = int(input())\n\nfor t in range(T):\n    _ = input()\n    a = [int(x) for x in input().split()]\n    a.sort()\n    freq = Counter(a)\n    # print(freq)\n    onerun = -1\n    tworun = -1\n    for c in range(0, a[-1]+1):\n        if freq[c] == 1:\n            onerun = c\n        elif freq[c] >= 2:\n            if tworun == c - 1:\n                tworun = c\n            onerun = c\n        else:\n            break\n    \n    # print(onerun, tworun)\n    print(onerun+1 + tworun+1)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math, sys\nfrom itertools import permutations, combinations\nfrom collections import defaultdict, deque, OrderedDict, Counter\nfrom os import path\nimport bisect as bi\nimport heapq\n\n\ndef yes(): print('YES')\n\n\ndef no(): print('NO')\n\n\nif (path.exists('input.txt')):\n    # ------------------Sublime--------------------------------------#\n    sys.stdin = open('input.txt', 'r');\n    sys.stdout = open('output.txt', 'w');\n\n\n    def inp():\n        return (int(input()))\n\n\n    def minp():\n        return (map(int, input().split()))\nelse:\n    # ------------------PYPY FAst I/o--------------------------------#\n    def inp():\n        return (int(stdin.readline()))\n\n\n    def minp():\n        return (map(int, stdin.readline().split()))\n\nfor _ in range(inp()):\n    n = inp()\n    a = list(minp())\n    if 0 not in a:\n        print(0)\n        continue\n\n    if a.count(0) == 1:\n        for i in range(n + 1):\n            if i not in a:\n                flag = i\n                break\n        print(flag)\n        continue\n    flag = False\n    for i in range(n + 1):\n        if i not in a:\n            t1 = 2 * i\n            break\n        elif a.count(i) == 1:\n            flag = True\n            t1 = i\n            break\n    t2 = 0\n    if flag:\n        for i in range(t2,n + 1):\n            if i not in a:\n                t2 = i\n                break\n    print(t1 + t2)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor ii in range(t):\n\n\tn = int(input())\n\n\ta = list(map(int, input().split()))\n\n\tfreq = {}\n\n\tfor i in a:\n\t\tif i in freq:\n\t\t\tfreq[i] += 1\n\n\t\telse:\n\t\t\tfreq[i] = 1\n\n\tmex = 0\n\n\tfoud = False\n\n\tprinted = False\n\n\tfor i in range(0, 101):\n\t\t# print(i, mex)\n\t\tif i in freq:\n\t\t\tif freq[i]>=2:\n\t\t\t\tcontinue\n\n\t\t\telse:\n\t\t\t\tif foud:\n\t\t\t\t\tcontinue\n\n\t\t\t\telse:\n\t\t\t\t\tmex += i\n\t\t\t\t\tfoud = True\n\n\t\telse:\n\t\t\tprinted = True\n\t\t\tif not foud:\n\t\t\t\tmex += 2*i\n\t\t\t\tprint(mex)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tmex += i\n\t\t\t\tprint(mex)\n\t\t\t\tbreak\n\n\tif not printed:\n\t\tprint((max(a)+1)*2)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Test\n{\n    public static void main(String[] args)\n    {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        while(t-->0)\n        {\n            int n=sc.nextInt();\n            int[] arr=new int[n];\n            int[] store=new int[101];\n            for(int i=0;i<n;i++)\n            {\n                arr[i]=sc.nextInt();\n                store[arr[i]]++;\n            }\n            int val1 = 0;\n            for(int i=0;i<101;i++)\n            {\n                if(store[i]==0 || store[i]==1)\n                {\n                    val1=i;\n                    break;\n                }\n            }\n            if(store[val1]==0)\n                System.out.println(2*val1);\n            else\n            {\n                for(int i=val1+1;i<101;i++)\n                {\n                    if(store[i]==0)\n                    {\n                        System.out.println(i+val1);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    kls= [0]*101\n    for i in arr:\n        kls[i]+=1\n    s1=0\n    s2=0\n    flag=0\n\n    for i in range(101):\n        if kls[i]>=2:\n            s1+=1\n            if flag==0:\n                s2+=1\n        elif kls[i]==1:\n            s1+=1\n            flag=1\n        else:\n            break\n    print(s1+s2)\n"
        },
        {
            "language": 3,
            "solution": "import random\nimport sys\nimport os\n\nt = int(input())\n\nfor ti in range (t):\n    both = 1\n    ans = 0\n\n    n = int(input ())\n    v = list(map(int, input().split()))\n    v.sort()\n    nr=0\n    i=0\n    while(i < n) :\n        if v[i] != nr :\n            break\n\n        cnt = 1\n        while i+1 < n and v[i] == v[i+1]:\n            cnt+=1\n            i+=1\n        if not cnt :\n            break\n        if cnt == 1 :\n            both = 0\n\n        ans += 1 + both\n        nr += 1\n        i+=1\n\n    print (ans)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_a = max(a)\n\n    i = 0\n    result = 0\n    max_add = 2\n    while i <= max_a:\n        count = a.count(i)\n        if count >= max_add:\n            result += max_add\n        else:\n            max_add -= 1\n            if count == 0 or max_add == 0:\n                break\n            result += max_add\n        i += 1\n    print(result)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nsys.setrecursionlimit(2147483647)\ninput=sys.stdin.readline\nfrom collections import defaultdict\n\ndef solve(t, A):\n  d = defaultdict(int)\n  for a in A:\n    d[a] += 1\n  index = 0\n  while(True):\n    if d[index] > 0:\n      d[index] -= 1\n      index += 1\n    else:\n      a = index\n      break\n  index = 0\n  while(True):\n    if d[index] > 0:\n      d[index] -= 1\n      index += 1\n    else:\n      b = index\n      break\n  return a + b\n  \n\ndef main():\n  n = int(input())\n  ans = []\n  for _ in range(n):\n    t = int(input())\n    ans.append(solve(t, list(map(int, input().split(' ')))))\n  for r in ans:\n    print(r)\n  \n\nif __name__=='__main__':\n  main()"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic long sx = 0, sy = 0, mod = (long) (1e9 + 7);\n\n\tstatic ArrayList<Integer>[] a;\n\tstatic Double[][][] dp;\n\tstatic long[] fa;\n\tstatic long[] farr;\n\tpublic static PrintWriter out = new PrintWriter(System.out);\n\tstatic ArrayList<pair> pa = new ArrayList<>();\n\tstatic long[] fact = new long[(int) 1e6];\n\tstatic StringBuilder sb = new StringBuilder();\n\tstatic boolean cycle = false;\n\tstatic long m = 998244353;\n\tstatic long[] no, col;\n\tstatic String s;\n\tstatic long k = 0, n = 0, one = 0;\n\tstatic int cnt;\n\t// static long[] dp;\n\tstatic long[] p;\n\tstatic long[] ans;\n\t// static Double[][] a = new Double[2][2];\n\t// static Double[][] b = new Double[2][2];\n\tstatic Double[] x;\n\tstatic Double[] y;\n\tstatic Double[] dis;\n\tstatic boolean b = true;\n\tstatic int[][] par;\n\tstatic int[] depth;\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t// Scanner scn = new Scanner(new BufferedReader(new\n\t\t// InputStreamReader(System.in)));\n\n\t\tReader scn = new Reader();\n\n\t\tint t = scn.nextInt();\n\n\t\twhile (t-- != 0) {\n\n\t\t\tint n = scn.nextInt();\n\n\t\t\tTreeMap<Integer, Integer> hm = new TreeMap<>();\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\n\t\t\t\tint x = scn.nextInt();\n\t\t\t\thm.put(x, hm.containsKey(x) ? hm.get(x) + 1 : 1);\n\t\t\t}\n\n\t\t\tint ans = 0;\n\n\t\t\tfor (int i = 0; i < 105; i++) {\n\n\t\t\t\tif (hm.containsKey(i))\n\t\t\t\t\tans++;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint mex1 = 0, mex2 = 0;\n\n\t\t\tboolean b = true;\n\n\t\t\twhile (true) {\n\n\t\t\t\tif (b) {\n\n\t\t\t\t\tif (hm.containsKey(mex1)) {\n\t\t\t\t\t\thm.put(mex1, hm.get(mex1) - 1);\n\t\t\t\t\t\tif (hm.get(mex1) == 0)\n\t\t\t\t\t\t\thm.remove(mex1);\n\t\t\t\t\t\tmex1++;\n\t\t\t\t\t}\n\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\telse {\n\n\t\t\t\t\tif (hm.containsKey(mex2)) {\n\t\t\t\t\t\thm.put(mex2, hm.get(mex2) - 1);\n\t\t\t\t\t\tif (hm.get(mex2) == 0)\n\t\t\t\t\t\t\thm.remove(mex2);\n\t\t\t\t\t\tmex2++;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tb = !b;\n\t\t\t}\n\n\t\t\tans = Math.max(ans, mex1 + mex2);\n\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n\n\t// _________________________TEMPLATE_____________________________________________________________\n\n\t// public static long lcm(long x, long y) {\n\t//\n\t// return (x * y) / gcd(x, y);\n\t// }\n\t//\n\t// private static long gcd(long x, long y) {\n\t// if (x == 0)\n\t// return y;\n\t//\n\t// return gcd(y % x, x);\n\t// }\n\t//\n\t// static class comp implements Comparator<Integer> {\n\t//\n\t// @Override\n\t// public int compare(Integer p1, Integer p2) {\n\t//\n\t// return p2 - p1;\n\t//\n\t// }\n\t// }\n\t//\n\t// }\n\t//\n\t// public static long pow(long a, long b) {\n\t//\n\t// if (b < 0)\n\t// return 0;\n\t// if (b == 0 || b == 1)\n\t// return (long) Math.pow(a, b);\n\t//\n\t// if (b % 2 == 0) {\n\t//\n\t// long ret = pow(a, b / 2);\n\t// ret = (ret % mod * ret % mod) % mod;\n\t// return ret;\n\t// }\n\t//\n\t// else {\n\t// return ((pow(a, b - 1) % mod) * a % mod) % mod;\n\t// }\n\t// }\n\n\tprivate static class pair implements Comparable<pair> {\n\n\t\tint v;\n\t\tint d;\n\n\t\tpair(int a, int b) {\n\t\t\tv = a;\n\t\t\td = b;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(pair o) {\n\t\t\treturn 1;\n\t\t}\n\n\t\t// @Override\n\t\t//\n\t\t// public int hashCode() {\n\t\t// return i;\n\t\t// }\n\t\t//\n\t\t// @Override\n\t\t//\n\t\t// public boolean equals(Object o) {\n\t\t//\n\t\t// pair p = (pair) o;\n\t\t// return this.i == p.i;\n\t\t// }\n\n\t}\n\n\tprivate static String reverse(String s) {\n\n\t\treturn new StringBuilder(s).reverse().toString();\n\t}\n\n\tpublic static class Reader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\n\t\tpublic Reader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic Reader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[1000000 + 1]; // line length\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic int[][] nextInt2DArray(int m, int n) throws IOException {\n\t\t\tint[][] arr = new int[m][n];\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\t\tarr[i][j] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic long[][] nextInt2DArrayL(int m, int n) throws IOException {\n\t\t\tlong[][] arr = new long[m][n];\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\t\tarr[i][j] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t// kickstart - Solution\n\t\t// atcoder - Main\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "import os\nimport heapq\nimport sys,threading\nimport math\nimport bisect\nimport operator\nfrom collections import defaultdict\n#sys.setrecursionlimit(10**5)\nfrom io import BytesIO, IOBase\ndef gcd(a,b):\n    if b==0:\n\n        return a\n    else:\n        return gcd(b,a%b)\ndef power(x, p,m):\n    res = 1\n    while p:\n        if p & 1:\n            res = (res * x) % m\n        x = (x * x) % m\n        p >>= 1\n    return res\ndef inar():\n    return [int(k) for k in input().split()]\n\ndef lcm(num1,num2):\n    return (num1*num2)//gcd(num1,num2)\n\ndef main():\n    t=int(input())\n    for _ in range(t):\n        n=int(input())\n        arr=inar()\n        freq=[0]*(101)\n        for i in range(n):\n            freq[arr[i]]+=1\n        ans=0\n        for i in range(101):\n            if freq[i]>0:\n                freq[i]-=1\n                continue\n            else:\n                ans+=i\n                break\n        for i in range(101):\n            if freq[i]>0:\n                freq[i]-=1\n                continue\n            else:\n                ans+=i\n                break\n\n        print(ans)\n\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    main()\n    #threadin.Thread(target=main).start()\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    A = set(a)\n    d = Counter(a)\n    for i in A:\n        d[i] -= 1\n    B = set()\n    for i in d:\n        if d[i]>0:\n            B.add(i)\n    temp = set()\n    mx = max(a)\n    for i in range(mx+2):\n        temp.add(i)\n    print(min(temp - A) + min(temp - B))"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n=int(input())\n    list1=list(map(int,input().split()))\n    a=sorted(list1)\n    min_a=a[0]\n    ans1=100\n    ans2=100\n\n    c={}\n    for k in range(0,101):\n        c[k]=0\n    for b in a :\n        c[b]+=1\n        \n    for k in range(0,101):\n        if c[k]==0:\n            ans1=min(k,ans1)\n            break\n        else:\n            c[k]-=1\n    for k in range(0,101):\n        if c[k]==0:\n            ans2= min(k,ans2)\n            break\n        else:\n            c[k]-=1 \n    ans = ans2+ans1\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline void read(int& x) {\n  static char c;\n  while (!isdigit(c = getchar()))\n    ;\n  x = c ^ 48;\n  while (isdigit(c = getchar())) x = (x * 10) + (c ^ 48);\n}\ninline void read(long long& x) {\n  static char c;\n  while (!isdigit(c = getchar()))\n    ;\n  x = c ^ 48;\n  while (isdigit(c = getchar())) x = (x * 10) + (c ^ 48);\n}\nint T, n;\nint A[105];\nvector<int> V[2];\ninline void Work() {\n  read(T);\n  while (T--) {\n    read(n);\n    for (register int i = 1; i <= n; ++i) read(A[i]);\n    sort(A + 1, A + n + 1);\n    V[0].clear(), V[1].clear();\n    V[0].push_back(-1), V[1].push_back(-1);\n    for (register int i = 1; i <= n; ++i) {\n      if (A[i] > V[0][V[0].size() - 1])\n        V[0].push_back(A[i]);\n      else if (A[i] > V[1][V[1].size() - 1])\n        V[1].push_back(A[i]);\n    }\n    int Ans1 = -1, Ans2 = -1;\n    for (int i : V[0])\n      if (i == Ans1) ++Ans1;\n    for (int i : V[1])\n      if (i == Ans2) ++Ans2;\n    printf(\"%d\\n\", Ans1 + Ans2);\n  }\n}\nint main() { Work(); }\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfor _ in range(int(input())):\n    n = int(sys.stdin.readline())\n    arr = list(map(int,sys.stdin.readline().split()))\n    \n    arr.sort()\n    ans = []\n    for i in range(101):\n        if i in arr:\n            arr.remove(i)\n        else:\n            ans.append(i)\n            break\n    for i in range(101):\n        if i in arr:\n            arr.remove(i)\n        else:\n            ans.append(i)\n            break\n\n    print(sum(ans))\n    "
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class d2670 implements Runnable \n{\n\tprivate boolean console=false;\n\t\n\tpublic void solve()\n\t{\n\t\tint i;\n\t\tint n=in.ni();\n\t\tint c[]=new int[101];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tc[in.ni()]++;\n\t\t}\n\t\tint ans=0;\n\t\tfor(i=0;i<=100;i++)\n\t\t{\n\t\t\tif(c[i]<2)\n\t\t\t{\n\t\t\t\tans+=i;\n\t\t\t\twhile(i<=100&&c[i]>=1)\n\t\t\t\t\ti++;\n\t\t\t\tans+=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\t@Override\n\tpublic void run() {\n\t\ttry {  init();  } \n\t\tcatch (FileNotFoundException e) {  e.printStackTrace();   }\n\n\t\tint t= in.ni();\n\n\t\twhile (t-->0) {\n\t\t\tsolve();\n\t\t\tout.flush(); }\n\t}\n\tprivate FastInput in;    private PrintWriter out;\n\tpublic static void main(String[] args) throws Exception {\t new d2670().run();\t }\n\n\tprivate void init() throws FileNotFoundException {\n\t\tInputStream inputStream = System.in; \t OutputStream outputStream = System.out;\n\t\ttry {  if (!console && System.getProperty(\"user.name\").equals(\"sachan\")) {\n\t\t\toutputStream = new FileOutputStream(\"/home/sachan/Desktop/output.txt\");\n\t\t\tinputStream = new FileInputStream(\"/home/sachan/Desktop/input.txt\");   \t}\n\t\t}\tcatch (Exception ignored) {\t}\n\t\tout = new PrintWriter(outputStream); \t in = new FastInput(inputStream);\n\t}\n\tstatic class FastInput { InputStream obj;\n\tpublic FastInput(InputStream obj) {\tthis.obj = obj;\t}\n\tbyte inbuffer[] = new byte[1024];  int lenbuffer = 0, ptrbuffer = 0;\n\tint readByte() { if (lenbuffer == -1) throw new InputMismatchException();\n\tif (ptrbuffer >= lenbuffer) { ptrbuffer = 0;\n\ttry { lenbuffer = obj.read(inbuffer);  }\n\tcatch (IOException e) { throw new InputMismatchException(); } }    \n\tif (lenbuffer <= 0) return -1;return inbuffer[ptrbuffer++]; }\n\n\tString ns() { int b = skip();StringBuilder sb = new StringBuilder();\n\twhile (!(isSpaceChar(b)))\t  { sb.appendCodePoint(b);b = readByte(); }return sb.toString();}\n\n\tint ni() { int num = 0, b;boolean minus = false;\n\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n\tif (b == '-') { minus = true;b = readByte(); }\n\twhile (true) { if (b >= '0' && b <= '9') { num = num * 10 + (b - '0'); } else {\n\t\treturn minus ? -num : num; }b = readByte(); }}\n\n\tlong nl() { long num = 0;int b;boolean minus = false;\n\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n\tif (b == '-') { minus = true;b = readByte(); }\n\twhile (true) { if (b >= '0' && b <= '9') { num = num * 10L + (b - '0'); } else {\n\t\treturn minus ? -num : num; }b = readByte(); } }\n\n\tboolean isSpaceChar(int c) { return (!(c >= 33 && c <= 126)); }\n\tint skip() { int b;while ((b = readByte()) != -1 && isSpaceChar(b)) ;return b; }\n\tfloat nf() {return Float.parseFloat(ns());}\n\tdouble nd() {return Double.parseDouble(ns());}\n\tchar nc() {return (char) skip();}\n\t}\n}\nclass pair\n{\n\tint ind,val;\n\tpair(int ind,int val)\n\t{\n\t\tthis.ind=ind; this.val=val;\n\t}\n}\nclass cp1 implements Comparator<pair> { \n    public int compare(pair a, pair b) \n    { \n        if(a.val<b.val)\n        \treturn -1;\n        else\n        \treturn 1;\n    } \n} \n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nclass SOLVE:\n    def solve(self):\n        R = stdin.readline\n        #f = open('input.txt');R = f.readline\n        W = stdout.write\n        \n        ans = []\n        \n        for i in range(int(R())):\n            n = int(R())\n            a = [int(x) for x in R().split()]\n            a.sort()\n            \n            A = {}\n            B = {}\n            for j in range(n):\n                if a[j] not in A:\n                    A[a[j]] = 1\n                elif a[j] not in B:\n                    B[a[j]] = 1\n            \n            val = 0\n            for j in range(102):\n                if j not in A:\n                    val += j\n                    break\n                    \n            for j in range(102):\n                if j not in B:\n                    val += j\n                    break\n                    \n            ans.append(str(val))\n        \n        W('\\n'.join(ans))\n        \ndef main():\n    s = SOLVE()\n    s.solve()\nmain()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, un, maximum;\n  cin >> n;\n  while (n--) {\n    vector<int> v;\n    cin >> un;\n    int ele, non_repeated = 0;\n    int missing;\n    for (int i = 0; i < un; i++) {\n      cin >> ele;\n      v.push_back(ele);\n    }\n    int flag = 1;\n    sort(v.begin(), v.end());\n    maximum = v[un - 1];\n    if (v[0] != 0) {\n      cout << non_repeated << \"\\n\";\n      continue;\n    }\n    non_repeated = v[0];\n    int i;\n    for (i = 1; i < v.size(); i++) {\n      if (v[i] == non_repeated) {\n        flag = 0;\n        continue;\n      }\n      if (v[i] != non_repeated) {\n        if (flag == 1) break;\n        if (flag == 0) {\n          non_repeated = non_repeated + 1;\n          flag = 1;\n        }\n      }\n    }\n    if (non_repeated == maximum && v[un - 2] == non_repeated && v.size() >= 2)\n      non_repeated++;\n    missing = 0;\n    for (int i = 0; i < v.size(); i++) {\n      if (v[i] == missing)\n        continue;\n      else if (v[i] == missing + 1) {\n        missing = missing + 1;\n      } else {\n        missing = missing + 1;\n        break;\n      }\n    }\n    if (maximum == missing) missing++;\n    cout << (non_repeated + missing) << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class a{\n   static char[] count;\n   // static int[] count1;\n   static long[] arr;\n   //static char[] c;\n   static long[] darr;\n   // static int x;\n   static long maxl;\n   // static long minl;\n   static long mod = 998244353l;\n   static int n;\n   static long a;\n   static long b;\n   static long c;\n   static long d;\n   static int x;\n   static long y;\n   static int m;\n   static long k;\n   static String str;\n   static Set<Long> set;\n   // static Map<Long,Long> map;\n   static StringBuilder sb;\n\n   // public static int log(long n){\n   //     if(n == 0)\n   //         return 0;\n\n   //     if(n == 1)\n   //         return 0;\n   //     if(n == 2)\n   //         return 1;\n   //     double num = Math.log(n);\n   //     double den = Math.log(2);\n   //     if(den == 0)\n   //         return 0;\n   //     return (int)(num/den);\n   // }\n\n   // public static void swap(int i,int j){\n   //     long temp = arr[j];\n   //     arr[j] = arr[i];\n   //     arr[i] = temp;\n   // }\n\n\n\n   public static void solve(){\n\n      SortedSet<Long> list1 = new TreeSet<>();\n      SortedSet<Long> list2 = new TreeSet<>();\n      Arrays.sort(arr);\n\n      for(int i = 0 ; i < n; i++){\n         if(list1.contains(arr[i]))\n            list2.add(arr[i]);\n         else\n            list1.add(arr[i]);\n      }\n\n      long mex1 = 0;\n      long mex2 = 0;\n      for(Long i : list1){\n         if(mex1 != i){\n            break;\n         }\n         else\n            mex1 += 1;\n      }\n      for(Long i : list2){\n         if(mex2 != i){\n            break;\n         }\n         else\n            mex2 += 1;\n      }\n\n      System.out.println(mex1+mex2);\n\n   }\n\n   public static void main(String[] args) {\n\n      Scanner sc = new Scanner(System.in);\n\n      int t = sc.nextInt();\n      while(t > 0){\n         // set = new HashSet<>();\n         // map = new HashMap<>();\n//         a = sc.nextLong();\n//         b = sc.nextLong();\n//         c = sc.nextLong();\n//         d = sc.nextLong();\n\n         // long x = sc.nextLong();\n\n         // maxl = Integer.MIN_VALUE;\n\n\n         n = sc.nextInt();\n         //k = sc.nextLong();\n         // k = sc.nextInt();\n         // // x = sc.nextInt();\n         // // // c = sc.next().toCharArray();\n\n         // // // k = sc.nextInt();\n         arr = new long[n];\n         // // // // // darr = new char[n];\n\n          for(int i = 0; i < n ; i++){\n              arr[i] = sc.nextLong();\n          }\n\n\n\n         // darr = new long[n];\n         // for(int i = 0; i < n ; i++){\n         //     darr[i] = sc.nextLong();\n         // }\n         // boolean flag = false;\n         // str = sc.next();\n\n         // x = sc.nextInt();\n\n\n\n         //System.out.println(solve()?\"Yes\":\"No\");\n         solve();\n         //System.out.println(solve());\n         // sb = new StringBuilder();\n         // sb.append(str);\n\n         t -= 1;\n      }\n\n\n\n   }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long INF = 1e15;\nconst int N = 2e5 + 50;\nlong long binpow(long long a, long long b, long long m) {\n  a %= m;\n  long long res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a % m;\n    a = a * a % m;\n    b >>= 1;\n  }\n  return res;\n}\nlong long modinverse(long long a, long long m) { return binpow(a, m - 2, m); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t) {\n    t--;\n    long long n;\n    cin >> n;\n    vector<long long> cnt(105, 0);\n    for (long long i = 0; i < n; i++) {\n      long long val;\n      cin >> val;\n      cnt[val]++;\n    }\n    int found1 = 0, found2 = 0;\n    int ans = 0;\n    for (long long i = 0; i <= 101; i++) {\n      if (!found1 && cnt[i] <= 1) {\n        ans += i;\n        found1 = 1;\n      }\n      if (!found2 && cnt[i] == 0) {\n        ans += i;\n        found2 = 1;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    ar=sorted(list(map(int,input().split())))\n    t=max(ar)\n    ar1=[]\n    for i in range(n):\n        if ar[i] not in ar1:\n            ar1.append(ar[i])\n            ar[i]=-1\n    ar2=[]\n    for i in ar:\n        if i>=0:\n            ar2.append(i)\n    ans1=0;ans2=0\n    #print(ar1,ar2)\n    for i in range(0,101):\n        if i in ar2:\n            pass\n        else:\n            ans1=i\n            break\n    for j in range(0,101):\n        if j in ar1:\n            pass\n        else:\n            ans2=j\n            break\n    print(ans1+ans2)\n        "
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n\n    a1 = 200\n    a2 = 200\n    for i in range(200, -1, -1):\n        if l.count(i) < 2:\n            a2 = i\n        if l.count(i) < 1:\n            a1 = i\n    print(a1+a2)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import defaultdict\ninput=sys.stdin.readline\n\nfor _ in range(int(input())):\n    n=int(input())\n    lis=list(map(int,input().split()))\n    lis.sort()\n    x=-1\n    for i in range(n):\n        if lis[i]==x+1:\n            x+=1\n            lis[i]=-1\n    y=-1\n    for i in range(n):\n        if lis[i]==y+1:\n            y+=1\n    print(x+y+2)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nfor i in range(n):\n    input()\n    nums = list(map(int,input().split()))\n    tem = [0 for j in range(len(nums))]\n    for j in range(len(nums)):\n        if nums[j] < len(tem):\n            tem[nums[j]] += 1\n    first = tem.index(0) if 0 in tem else len(tem)\n    for j in range(len(tem[:first])):\n        tem[j] -= 1\n    second = tem.index(0)\n    print(first+second)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.text.*;\npublic class  Main  //Main\n{\n     public static void main (String... args) throws IOException\n\t{\n\t\t   Scanner sc=new Scanner(System.in);\n\t\t  // Scanner sc=new Scanner(new FileReader(\"./input.txt\"));\n\t\t //BufferedReader inf=new BufferedReader(new InputStreamReader(System.in));     \n      // BufferedReader inf=new BufferedReader(new FileReader(\"./input.txt\"));\n       //StringTokenizer sc=new StringTokenizer(inf.readLine());\n       int t=Integer.parseInt(sc.next());\n        int n,i,j;\n        int occ[]=new int[101];\n       //System.setOut(new PrintStream(new File(\"./output.txt\")));\n        while((t--)>0)\n        {\n          int count=2;\n        \t//if(sc.hasMoreTokens())\n        \tArrays.fill(occ,0);\n        \t{\n             n=Integer.parseInt(sc.next());\n             int a[]=new int[n];\n             boolean f=true;\n             for(i=0;i<n;i++)\n             {\n              a[i]=Integer.parseInt(sc.next());\n              occ[a[i]]+=1;\n             }\n            for(i=0;(occ[i]>1);i++);  //iterate through the list untill i find the element with occurrence as 1 and less.\n\n               for(j=i;(occ[j]>0);j++); ///iterate through the list until i find the element with occurrence as 0 from the position i left in the previous iteration... \n            System.out.println((i+j));  \n             \n\n        }\n      }\n   }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    s=0\n    l=list(map(int,input().split()))\n    for i in range(102):\n        if i not in l:\n            s=s+i\n            break\n    for i in range(102):\n        if l.count(i)<2:\n            s=s+i\n            break\n    print(s)    \n            "
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    dic = defaultdict(lambda:0)\n    for i in l:\n        dic[i]+=1\n    ans = 0\n    for i in range(max(l)+2):\n        if dic[i]==0:\n            ans = i\n            break\n        else:\n            dic[i]-=1\n    pre = ans\n    for i in range(max(l)+2):\n        if dic[i]==0:\n            ans+= i\n            break\n        else:\n            dic[i]-=1\n    \n    print(ans)\n    "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ndef func(A):\n    m=max(A)\n    A=Counter(A)\n    f=max(A)+1\n    flag=False\n    for i in range(m+1):\n        if i in A:\n            A[i]-=1\n            if A[i]==0:\n                del(A[i])\n        else:\n            flag=True\n            f=i\n            break\n        \n    if not A:\n        return f\n    s=max(A)+1\n    flag=False\n    for i in range(m+1):\n        if i in A:\n            A[i]-=1\n            if A[i]==0:\n                del(A[i])\n        else:\n            flag=True\n            s=i\n            break\n         \n    if flag==True:\n        return f+s\n    else:\n        return f+s\n    \n\n\nt=int(input())\n\nfor i in range(t):\n    n=int(input())\n    A=list(map (int, input().split()))\n    print(func(A))"
        },
        {
            "language": 3,
            "solution": "import sys\nsys.setrecursionlimit(10**8)\ntry: \n\tFILE_POINTER = open('input.inpt')\n\tinput = FILE_POINTER.readline\nexcept: \n\tFILE_POINTER = None\n\tinput = sys.stdin.readline\n\n# ********************* Write your code from here ********************\nfrom collections import Counter\nt = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tarr = list(map(int, input().strip().split()))\n\t\n\tnum1 = num2 = 0\n\td = Counter(arr)\n\t\n\tflag = 1\n\tfor i in range(101):\n\t\tif i in d:\n\t\t\tif d[i] >=2:\n\t\t\t\tnum1 += 1\n\t\t\t\tif flag:\n\t\t\t\t\tnum2 += 1\n\t\t\t\tcontinue\n\t\t\telif d[i] == 1:\n\t\t\t\tnum1 += 1\n\t\t\t\tflag = 0\n\t\t\telse:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tbreak\n\tprint(num1+num2)\n\t\n\t\n\t\n# *********************      Code ends here       ********************\t\n\t\nif FILE_POINTER:\n\tFILE_POINTER.close()"
        },
        {
            "language": 3,
            "solution": "\nfor i in range(int(input())):\n    n = int(input())\n    ar = [int(i) for i in input().split()]\n    ar.sort()\n    a,b=0,0\n    for i in ar:\n        if a==i:\n            a+=1\n        elif b==i:\n            b+=1\n    print(a+b)\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ndef read_line():\n    return list(map(int, input().split()))\n\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    l = list(sorted(read_line()))\n    l2 = Counter(l)\n    m1 = 0\n    ok = True\n    m2 = 0\n    for i in range(0, 101):\n        if l2[i] >= 2 and ok:\n            m1 += 1\n            m2 += 1\n        elif l2[i] >= 1:\n            m1 += 1\n            ok = False\n        else:\n            break\n    print(m1 + m2)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid test();\nvoid preprocessing();\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    test();\n    cout << endl;\n  }\n  return 0;\n}\nvoid preprocessing() { return; }\nvoid test() {\n  int n;\n  cin >> n;\n  int freq[105] = {0};\n  int num;\n  for (int i = 0; i < n; i++) {\n    cin >> num;\n    freq[num]++;\n  }\n  int mexa = -1, mexb = -1;\n  for (int i = 0; i < 105; i++) {\n    if (freq[i] == 0 && mexa == -1) {\n      mexa = i;\n    }\n    if (freq[i] <= 1 && mexb == -1) mexb = i;\n    if (mexa != -1 && mexb != -1) break;\n  }\n  cout << (mexa + mexb);\n  return;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    q={}\n    n=int(input())\n    a=list(map(int,input().split()))\n    r=0\n    for i in range(2):\n        w=0\n        while w in a:\n            a.remove(w)\n            w+=1\n        r+=w\n    print(r)"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class Mex {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint[] arr = new int[n];\n\t\t\tTreeSet<Integer> ts = new TreeSet<Integer>();\n\t\t\tint[] freq = new int[101];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = sc.nextInt();\n\t\t\t\tts.add(arr[i]);\n\t\t\t\tfreq[arr[i]]++;\n\t\t\t}\n\n\t\t\tTreeSet<Integer> A = new TreeSet<Integer>();\n\t\t\tTreeSet<Integer> B = new TreeSet<Integer>();\n\t\t\tfor (int x : ts) {\n\t\t\t\tif (freq[x] > 1) {\n\t\t\t\t\tA.add(x);\n\t\t\t\t\tB.add(x);\n\t\t\t\t} else\n\t\t\t\t\tA.add(x);\n\t\t\t}\n\n\t\t\tint i = 0;\n\t\t\tint a1 = 0;\n\t\t\tint b1 = 0;\n\t\t\twhile (true) {\n\t\t\t\tif (!A.contains(i)) {\n\t\t\t\t\ta1 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t}\n\t\t\tint c = 0;\n\t\t\twhile (true) {\n\t\t\t\tif (!B.contains(c)) {\n\t\t\t\t\tb1 = c;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tc++;\n\n\t\t\t}\n\t\t\tpw.println(c + i);\n\n\t\t}\n\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic Scanner(String file) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n\ndef multiple_input(): return map(int, sys.stdin.readline().strip().split())\n\n\ndef list_input(): return list(map(int, sys.stdin.readline().strip().split()))\n\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list_input()\n    a.sort()\n    x, y = -1, -1\n    ans1, ans2 = 0, 0\n    for i in a:\n        if i - x == 1:\n            x = i\n        elif i - x == 0:\n            if i - y == 1:\n                y = i\n        else:\n            break\n    print(x + y + 2)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor case in range(t) :\n\tn=int(input())\n\tList=[int(j) for j in input().split(\" \")]\n\tList_1=set(List) \n\tk=0\n\tfor i in List_1:\n\t\tif i!=k:\n\t\t\tbreak\n\t\telse:\n\t\t\tk+=1\n\tList.sort()\n\tList_3=[]\n\tfor i in range(1,n) :\n\t\tif List[i]==List[i-1]:\n\t\t\tif List[i] not in List_3:\n\t\t\t\tList_3.append(List[i])\n\ta=0\n\tfor i in List_3:\n\t\tif i!=a:\n\t\t\tbreak\n\t\telse:\n\t\t\ta+=1\n\n\tprint(a+k) "
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout \nfrom collections import defaultdict \ninput=lambda:stdin.readline().rstrip()\nfor _ in range(int(input())):\n    n=int(input())\n    lst=[int(i) for i in input().split()]\n    dict1=defaultdict(int)\n    for i in lst:\n        dict1[i]+=1\n    lst1=[]\n    lst2=[]\n    for i in dict1:\n        if dict1[i]>1:\n            lst1.append(i)\n            lst2.append(i)\n        else:\n            lst1.append(i)\n    lst1.sort()\n    lst2.sort()\n    sum1=0\n    for i in range(0,103):\n        try:\n            if lst1[i]!=i:\n                sum1+=i \n                break\n        except:\n            sum1+=i\n            break \n    for i in range(0,103):\n        try:\n            if lst2[i]!=i:\n                sum1+=i \n                break\n        except:\n            sum1+=i \n            break\n    print(sum1)"
        },
        {
            "language": 3,
            "solution": "for j in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    d=[0]*101\n    for x in a:\n        d[x]+=1\n    t=0\n    s=2\n    for i in range(102):\n        if s==0:\n            break\n        if s==2 and d[i]<2:\n            t+=i\n            s=1\n        if s==1 and d[i]<1:\n            s=0\n            t+=i\n    print(t)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nL = []\nfor i in range(t):\n\tn = input()\n\tL.append([])\n\tL[i] = [int(x) for x in input().split()]\n\ndef mex(L):\n\ti = 0\n\twhile True:\n\t\tif i not in L:\n\t\t\tbreak\n\t\ti+=1\n\treturn i\n\ndef maxmex(S):\n\tA = []\n\tB = []\n\tS.sort()\n\tminS= S.pop(0)\n\tA.append(minS)\n\n\ti = 0\n\twhile True:\n\t\tif A[i]+1 in S:\n\t\t\tA.append(S.pop(S.index(A[i]+1)))\n\t\t\ti+=1\n\t\telse:\n\t\t\tbreak\n\tB = S\n\tprint(mex(A)+mex(B))\n\nfor S in L:\n\tmaxmex(S)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class cf {\n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n\n    static Reader sc = new Reader();\n    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n    public static void main(String args[]) throws IOException {\n        int n = inputInt();\n        while (n > 0) {\n            int l = inputInt();\n            ArrayList<Integer> a = new ArrayList<Integer>();\n            for (int i = 0; i < l; i++) {\n                a.add(inputInt());\n            }\n            ArrayList<Integer> A = new ArrayList<Integer>();\n            ArrayList<Integer> B = new ArrayList<Integer>();\n            Collections.sort(a);\n            for (int i = 0; i < l; i++) {\n                if (A.contains(a.get(i)) && !B.contains(a.get(i))) {\n                    B.add(a.get(i));\n                } else if (!A.contains(a.get(i))) {\n                    A.add(a.get(i));\n                }\n            }\n            int ansA = 0, ansB = 0, ch = 0;\n            for (int i = 0; i < A.size(); i++) {\n                if (A.get(i) != i) {\n                    ansA = i;\n                    ch = 1;\n                    break;\n                }\n            }\n            if (ch == 0) {\n                if (A.size() == 0)\n                    ansA = 0;\n                else\n                    ansA = A.get(A.size() - 1) + 1;\n            }\n            ch = 0;\n            for (int i = 0; i < B.size(); i++) {\n                if (B.get(i) != i) {\n                    ansB = i;\n                    ch = 1;\n                    break;\n                }\n            }\n            if (ch == 0) {\n                if (B.size() == 0)\n                    ansB = 0;\n                else\n                    ansB = B.get(B.size() - 1) + 1;\n            }\n            // println(A + \"\");\n            // println(B + \"\");\n            println((ansA + ansB) + \"\");\n            n--;\n        }\n        bw.flush();\n        bw.close();\n    }\n\n    public static int inputInt() throws IOException {\n        return sc.nextInt();\n    }\n\n    public static long inputLong() throws IOException {\n        return sc.nextLong();\n    }\n\n    public static double inputDouble() throws IOException {\n        return sc.nextDouble();\n    }\n\n    public static String inputString() throws IOException {\n        return sc.readLine();\n    }\n\n    public static void print(String a) throws IOException {\n        bw.write(a);\n    }\n\n    public static void printSp(String a) throws IOException {\n        bw.write(a + \" \");\n    }\n\n    public static void println(String a) throws IOException {\n        bw.write(a + \"\\n\");\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nimport collections\ninput = sys.stdin.readline\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        A = [int(x) for x in input().split()]\n        c = collections.Counter(A)\n\n        ans = []\n        for i in range(max(A) + 2):\n            if len(ans) == 2:\n                break\n            if c[i] == 0:\n                if len(ans) == 0:\n                    ans.append(i)\n                    ans.append(i)\n                else:\n                    ans.append(i)\n            elif c[i] == 1:\n                if len(ans) == 0:\n                    ans.append(i)\n\n\n        print(sum(ans))\n\n\n        \n        \n    \n\nif __name__ == '__main__':\n    main()\n\n\n"
        },
        {
            "language": 3,
            "solution": "def mex(arr):\n    arr = set(arr)\n    for i in range(len(arr) + 2):\n        if i not in arr:\n            return i\n\nfor _ in range(int(input())):\n    n = int(input())\n    *arr, = map(int, input().split())\n    mx = 0\n    arr_mex = mex(arr)\n    for i in range(arr_mex):\n        arr.remove(i)\n    new_mex = mex(arr)\n    print(arr_mex + new_mex)\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nimport sys\nfrom collections import defaultdict,Counter as CC\nfrom math import sqrt,ceil,floor,log2\n\n\n\nINF = float('inf')\nMOD = 10**9+7;\n# MOD = 998244353;\nread = lambda: [int(s) for s in sys.stdin.readline().split()]\n\n\n\n\ndef mex(arr):\n    n = len(arr)\n\n    if n==0:\n        return 0\n    \n    st = set(arr)\n\n    for i in range(n):\n        if i not in st:\n            return i\n    \n    return n\n    \n\n\ndef solve():\n\n    n, = read()\n\n    a = read()\n\n    d = CC(a)\n\n    a1 = []\n    a2 = []\n\n    for i in d:\n        if d[i]>1:\n            a1.append(i)\n            a2.extend((d[i]-1)*[i])\n        elif d[i]==1:\n            a1.append(i)\n\n    \n    # print(a1,a2)\n\n    print(mex(a1)+mex(a2))\n\n\n        \n_ = 1\n_ = int(input())\nwhile _:\n\n    solve()\n                      \n    _-=1\n\n"
        },
        {
            "language": 3,
            "solution": "T=int(input())\nfor z in range(T):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    large=max(a)\n    \n    a1=[0 for x in range(large+2)]\n    a2=[0 for x in range(large+2)]\n\n    for e in a:\n        if a1[e]==0:\n            a1[e]+=1\n        else:\n            a2[e]+=1\n    su=0\n\n    for i in range(large+2):\n        if a1[i]==0:\n            su+=i\n            break\n    for i in range(large+2):\n        if a2[i]==0:\n            su+=i\n            break\n\n    print(su)\n    \n"
        },
        {
            "language": 3,
            "solution": "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        A = [int(x) for x in input().split()]\n        default = dict([(i,0) for i in range(101)])\n        for ele in A:\n            default[ele] += 1\n        ans = 0\n        count = 0\n        #print(default)\n        one_occur = False\n        for k in default:\n            if( default[k] == 0 and count <2):\n                ans += k\n                count += 1\n                if(count<2):\n                    ans += k\n                    count +=1\n            elif(default[k]==1 and count <2 and not one_occur):\n                ans += k\n                count += 1\n                one_occur = True\n            \n            if(count >2):\n                break\n        print(ans)\n    \nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 1,
            "solution": "for _ in range(input()):\n    n=input()\n    a=map(int,raw_input().split())\n    cn=[0 for i in range(101)]\n    for i in a:\n        cn[i]+=1\n    ans=0\n    lf=2\n    rd=-1\n    for i in range(101):\n        if cn[i]<2:\n            ans+=i\n            rd=i\n            break\n    for i in range(rd,101):\n        if cn[i]<1:\n            ans+=i\n            break\n    print ans\n\n"
        },
        {
            "language": 1,
            "solution": "n = int(input())\n \nresult = list()\nfor t in range(n):\n    n = int(raw_input())\n    x = map(int, raw_input().split())\n    result.append(x)\n \ndef mex(nums):\n    if len(nums) < 1:\n        return 0\n    if 0 not in nums:\n        return 0\n    for k in range(len(nums)):\n        if nums[0] > 1:\n            return 1\n        elif k + 1 < len(nums) and nums[k + 1] == nums[k] + 1:\n            continue\n        else:\n            if k + 1 < len(nums) and nums[k + 1] == nums[k]:\n                continue\n            else:\n                return nums[k] + 1\n \nfor i in range(len(result)):\n \n    if 0 not in result[i]:\n        print(0)\n        continue\n \n    result[i].sort()\n    resA = list()\n    resB = list()\n \n    for j in range(len(result[i])):\n        if len(resA) < 1:\n            resA.append(result[i][j])\n        elif result[i][j] == resA[len(resA) - 1] + 1:\n            resA.append(result[i][j])\n        else:\n            resB.append(result[i][j])\n \n    mexA = mex(resA)\n    mexB = mex(resB)\n \n    print(mexA + mexB)"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import deque\nfrom collections import defaultdict\n\nt = int(input())\nwhile t>0:\n    t-=1\n    n = int(input())\n    arr = list(map(int,input().strip().split(\" \")))\n    \n    fq = [0]*101\n    \n    for i in arr:\n        fq[i] += 1\n    \n    ans = 0\n    ct = 0\n    \n    for i in range(101):\n        if fq[i]<2:\n            ans +=i\n            ct = i\n            break\n    \n    for i in range(i, 101):\n        if fq[i]<1:\n            ans +=i\n            ct = i\n            break\n    \n    \n    print(ans)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    line = input().split()\n    arr = []\n    arr2 = []\n    indices = []\n    for i in range(n):\n        arr.append(int(line[i]))\n\n    arr.sort()\n    for i in range(1, n):\n        if arr[i] == arr[i-1]:\n            indices.append(i)\n            arr2.append(arr[i])\n            \n    for i in indices:\n        arr[i] = -1\n    # print(arr, arr2)\n\n    ans = 0\n    i = 0\n    j = 0\n    if len(arr) > 0 and len(arr2) > 0:\n        while(1):\n            if i in arr:\n                i += 1\n            else:\n                ans += i\n                # print(ans)\n                break\n        while(1):\n            if j in arr2:\n                j += 1\n            else:\n                ans += j\n                # print(ans)\n                break\n    elif len(arr) == 0:\n        while(1):\n            if j in arr2:\n                j += 1\n            else:\n                ans += j\n                break\n    elif len(arr2) == 0:\n        while(1):\n            if i in arr:\n                i += 1\n            else:\n                ans += i\n                break\n\n    print(ans)\n        "
        },
        {
            "language": 3,
            "solution": "def subset_mex(arr):\n    c = arr\n    \n    A = []\n    B = []\n    for x in arr:\n        r = 0\n        for y in c:\n            if x == y:\n                r += 1\n        if r>=2:\n            A.append(x)\n            B.append(x)\n        else:\n            A.append(x)\n    mex_A, mex_B = mex(A, B)\n    \n    result = mex_A + mex_B\n    return result\n    \ndef mex(A, B):\n    a = max(A)\n    if len(B) == 0:\n        b = -1\n    else:\n        b = max(B)\n    mex_A , mex_B = 0, 0\n    for i in range(a+1, -1, -1):\n        if i not in A:\n            mex_A = i\n    for i in range(b+1, -1, -1):\n        if i not in B:\n            mex_B = i\n    return mex_A, mex_B\n        \n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    c = subset_mex(x)\n    print(c)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfrom collections import Counter\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    X = [0]*102\n    for a in A:\n        X[a] += 1\n    flag = True\n    ans = 0\n    for i in range(102):\n        if X[i] == 0:\n            if flag:\n                ans += 2*i\n                break\n            else:\n                ans += i\n                break\n        elif X[i] == 1:\n            if flag:\n                ans += i\n                flag = False\n        else:\n            pass\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nwhile t > 0:\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = 0\n    for i in range(101):\n        if i in lst:\n            lst.remove(i)\n        else:\n            ans += i\n            break\n    for j in range(101):\n        if j in lst:\n            lst.remove(j)\n        else:\n            ans += j\n            break\n    print(ans)\n    t -= 1\n"
        },
        {
            "language": 3,
            "solution": "import sys\nread = lambda: sys.stdin.readline().strip()\nreadi = lambda: map(int, read().split())\nfrom collections import defaultdict\n\nfor _ in range(int(read())):\n    n = int(read())\n    nums = list(readi())\n    counts = defaultdict(int)\n    m = -1\n    for i in nums: \n        counts[i] += 1\n        m = max(m, i)\n    \n    ans1 = ans2 = 0\n    stop2 = False\n    for i in range(m+1):\n        if i in counts:\n            if counts[i] > 1:\n                ans1 += 1\n                if not stop2: ans2 += 1\n            else:\n                stop2 = True\n                ans1 += 1\n        else:\n            break\n    print(ans1+ans2)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    x = Counter(a)\n    for i in range(101):\n        if x[i] == 0:\n            print(i * 2)\n            break\n        elif x[i] == 1:\n            s = i\n            for j in range(i + 1, 101):\n                if x[j] == 0:\n                    s += j\n                    break\n            else:\n                s += 101\n            print(s)\n            break\n    else:\n        print(101 * 2)"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a.count(0) ==0:\n        print(0)\n    elif a.count(0) ==1:\n        for i in range(len(a)+2):\n            if i not in a:\n                print(i)\n                break\n    else:\n        for i in range(1,len(a)+2):\n            if a.count(i) <2:\n                if a.count(i) ==1:\n                    b =i\n                    while b+1 in a:\n                        b+=1\n                        \n                    print(b+i+1)\n                    break\n                elif a.count(i) ==0:\n                    print(int(2*i))\n                    break\n                elif 1>0:\n                    print(i+i+1)\n                    break\n                "
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n = int(input())\n    lst=sorted([int(x) for x in input().split()])\n    m1,m2 = 0,0\n    taken = list()\n    for i in range(n):\n        if lst[i]==m1:\n            m1+=1\n            taken.append(i)\n    for i in range(n):\n        if i in taken: continue\n        if lst[i]==m2:\n            m2+=1\n    sol = m1+m2\n    print(sol)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int INF = 1LL << 60;\nconst long long int N = 1e5 + 5;\nlong long int n, m, k, x, y, z, q;\nint mod = 1e9 + 7;\nlong long int add(long long int a, long long int b) {\n  if (a + b >= mod) return a + b - mod;\n  return a + b;\n}\nlong long int sub(long long int a, long long int b) {\n  if (a < b) return a - b + mod;\n  return a - b;\n}\nlong long int mul(long long int a, long long int b) {\n  return 1LL * a * b % mod;\n}\nlong long int power(long long int a, long long int b) {\n  if (b < 0) return 0;\n  int re = 1;\n  while (b) {\n    if (b & 1) {\n      re = mul(re, a);\n    }\n    a = mul(a, a);\n    b >>= 1;\n  }\n  return re;\n}\nbool sortbysec(const pair<long long int, long long int> &a,\n               const pair<long long int, long long int> &b) {\n  return (a.second < b.second);\n}\nbool sortbyfi(\n    const pair<long long int, pair<long long int, long long int>> &a,\n    const pair<long long int, pair<long long int, long long int>> &b) {\n  return (a.first > b.first);\n}\npriority_queue<pair<long long int, long long int>,\n               vector<pair<long long int, long long int>>,\n               greater<pair<long long int, long long int>>>\n    ppq;\nbool bs(long double xx) {\n  long long int sb = xx / (x * y);\n  long long int sb1 = xx / x;\n  long long int sb2 = xx / y;\n  if ((xx - sb1) < n or (xx - sb2) < m) return false;\n  xx -= sb;\n  long long int sum = m + n;\n  return sum <= xx;\n}\nbool cmp1(std::pair<long long int, long long int> a,\n          std::pair<long long int, long long int> b) {\n  return a.second < b.second;\n}\nbool cmp2(std::pair<long long int, long long int> a,\n          std::pair<long long int, long long int> b) {\n  return a.second > b.second;\n}\nvoid Birdperson() {\n  cin >> n;\n  vector<int> aa(101, 0);\n  for (int i = 0; i < (n); ++i) {\n    cin >> x;\n    aa[x]++;\n  }\n  int ans = 0;\n  for (int i = 0; i < (101); ++i)\n    if (aa[i] < 2) {\n      ans += i;\n      break;\n    }\n  for (int i = 0; i < (101); ++i)\n    if (aa[i] < 1) {\n      ans += i;\n      break;\n    }\n  cout << ans << \"\\n\";\n}\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int t = 1;\n  long long int ct = 1;\n  cin >> t;\n  while (ct <= t) {\n    Birdperson();\n    ++ct;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nimport sys\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor t in range(T):\n    N = int(input())\n    A = [int(_) for _ in input().split()]\n\n    cc = Counter(A)\n\n    f = None\n    for i in range(101):\n        if cc[i] >= 2:\n            continue\n\n        elif cc[i] == 1 and f is None:\n            f = i\n\n        elif cc[i] == 0:\n            if f is None:\n                f = i\n            s = i\n            break\n\n    print(f+s)\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env pypy3\n\nfrom collections import Counter\n\ndef mex(A):\n\tsA = set(A)\n\tfor i in range(0, 200):\n\t\tif i not in sA:\n\t\t\treturn i\n\t\t\t\ndef ans(A):\n\tcA = Counter(A)\n\tA = []\n\tB = []\n\tfor i in range(0, 200):\n\t\tif cA[i] >= 2:\n\t\t\tA += [i]\n\t\t\tB += [i]\n\t\telif cA[i] == 1:\n\t\t\tB += [i]\n\n\treturn mex(A) + mex(B)\n\nT = int(input())\nfor t in range(T):\n\tinput()\n\tA = list(map(int, input().split()))\n\tprint(ans(A))\n"
        },
        {
            "language": 1,
            "solution": "def mex(a):\n    a = set(a)\n    for i in xrange(111):\n        if i not in a:\n            return i\n    return 0\n\nfor _ in xrange(input()):\n    n, a = input(), map(int, raw_input().split())\n    l, r = [], []\n    for x in a:\n        if x not in l:\n            l.append(x)\n        else:\n            r.append(x)\n    print mex(l) + mex(r)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\nvoid solve() {\n  int n;\n  cin >> n;\n  int arr;\n  vector<int> freq(102);\n  for (int i = 0; i < n; i++) {\n    cin >> arr;\n    freq[arr]++;\n  }\n  int first = -1, second = -1;\n  for (int i = 0; i < 102; i++) {\n    if (freq[i] == 0) {\n      if (first == -1) first = i;\n      second = i;\n      break;\n    }\n    if (freq[i] == 1) {\n      if (first == -1) first = i;\n    }\n  }\n  cout << first + second << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfrom collections import Counter\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int,input().split()))\n    ctr = Counter(A)\n    a = b = -1\n    for i in range(101):\n        if ctr[i] >= 2: continue\n        if a==-1 and ctr[i]==1:\n            a = i\n        if ctr[i]==0:\n            b = i\n            if a==-1:\n                a = i\n            break\n    print(a+b)\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        a.sort(reverse=True)\n\n        A, B = [-1], [-1]\n        while a:\n            x = a.pop()\n            if x == A[-1] + 1:\n                A.append(x)\n            else:\n                B.append(x)\n\n        A = sorted(set(A))\n        B = sorted(set(B))\n\n        cnt_1, cnt_2 = 0, 0\n        for i in range(len(A) - 1):\n            if A[i + 1] == A[i] + 1:\n                cnt_1 = i + 1\n            else:\n                break\n        for i in range(len(B) - 1):\n            if B[i + 1] == B[i] + 1:\n                cnt_2 = i + 1\n            else:\n                break\n\n        print(cnt_1 + cnt_2)\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner in=new Scanner(System.in);\n    int t=in.nextInt();\n    while(t-->0)\n    {\n      int j;\n      int n=in.nextInt();\n      int a[]=new int[n];\n      for(int i=0;i<n;i++)\n      a[i]=in.nextInt();\n      int c[]=new int[101];\n      int cou=0;\n      boolean fl=true;\n      for(int i=0;i<n;i++)\n      {\n        c[a[i]]++;\n      }\n     \n      if(c[0]==0)\n      System.out.println(0);\n      else\n      {\n      for( j=0;j<n;j++)\n      {\n        if(c[j]>=2)\n        {\n          if(fl)\n        cou=j;\n        }\n        else \n        fl=false;\n        if(c[j]==0)\n        break;\n      }\n    if(c[0]==1)\n    System.out.println(j+cou);\n    else\n     System.out.println(j+cou+1);\n      }\n    }\n  }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nfrom math import ceil\nimport sys\n\n# input = sys.stdin.buffer.readline\n# def print(val):\n# \tsys.stdout.write(str(val) + '\\n')\nfor _ in range(int(input())):\n\tn = int(input())\n\ta = {}\n\tfor i in range(103):\n\t\ta[i] = 0\n\tfor i  in input().split():\n\t\ta[int(i)] += 1\n\tj = 0\n\tans = 0\n\twhile a[j]>1:\n\t\tans += 2\n\t\tj += 1\n\twhile a[j]>0:\n\t\tans += 1\n\t\tj += 1\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "test=int(input())\nfor i in range(test):\n    leng=int(input())\n    inp=list(map(int,input().split(\" \")))\n    out=[]\n    if 0 in inp:\n        for j in range(101):\n            if j in inp:\n                inp.remove(j)\n            else:\n                out.append(j)\n                break\n    else:\n        out.append(0)\n    if 0 in inp:\n        for j in range(101):\n            if j in inp:\n                inp.remove(j)\n            else:\n                out.append(j)\n                break\n    else:\n        out.append(0)\n\n    print(out[0]+out[1])\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor you in range(t):\n    n=int(input())\n    l=input().split()\n    li=[int(i) for i in l]\n    arr=[0 for i in range(105)]\n    for i in li:\n        arr[i]+=1\n    ans=0\n    done1=0\n    done2=0\n    for i in range(105):\n        if(done1==0 and done2==0):\n            if(arr[i]==0):\n                ans=2*i\n                break\n            if(arr[i]==1):\n                ans+=i\n                done1=1\n        if(done1==1):\n            if(arr[i]==0):\n                ans+=i\n                break\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "# Answer Printing Module\ndef ans_if_list(ans):\n\n    if isinstance(ans, str):\n        return ans\n\n    elif isinstance(ans, int):\n        return ans\n\n    else:\n        return ' '.join(str(ans[i]) for i in range(len(ans)))\n\n# For various input\ndef input_list(typ='int'):\n    if typ == 'int':\n        return list(map(int, input().split()))\n    elif typ == 'str':\n        return list(input())\n\n\n\n# Question 1\ndef hashmapuh(num_list_):\n    num_dict_ = {}\n    for num in num_list_:\n        if num not in num_dict_.keys():\n            num_dict_[num] = 1\n        else:\n            num_dict_[num] += 1\n    return num_dict_\n\n\nt = int(input())\n\n\n\nfor q in range(t):\n    l = int(input())\n    ls = input_list()\n\n    a = list(range(0,101))\n    b = list(range(0,101))\n\n    for i in ls:\n        cond1 = i in a\n        cond2 = i in b\n        if cond1 and cond2:\n            a.remove(i)\n        elif cond1 and not cond2:\n            a.remove(i)\n        elif not cond1 and cond2:\n            b.remove(i)\n        else:\n            pass\n\n    ans = min(a) + min(b)\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "import math\nt = int(input())\nwhile t>0:\n  n = int(input())\n  a = list(map(int, input().split()))\n  a.sort()\n  rem = 2\n  result = 0\n  count = [0]*(101)\n  for num in a:\n    count[num] += 1\n  for i in range(0,101):\n    if count[i] < rem:\n      temp = rem - count[i]\n      result += temp*i\n      rem -= temp\n  print(result)\n  t-=1\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    vector<long long> v;\n    long long i;\n    for (i = 0; i < n; i++) {\n      long long f;\n      cin >> f;\n      v.push_back(f);\n    }\n    vector<long long> mark(102, 0);\n    for (i = 0; i <= 101; i++) {\n      mark[i] = 0;\n    }\n    for (i = 0; i < n; i++) {\n      mark[v[i]]++;\n    }\n    long long req = 2;\n    long long ans = 0;\n    for (i = 0; i <= 101; i++) {\n      if (mark[i] < 2) {\n        long long offer = 2 - mark[i];\n        long long f = min(req, offer);\n        ans += (i * f);\n        req = req - f;\n      }\n      if (req == 0 || req == 1) break;\n    }\n    if (req == 0) {\n      cout << ans << endl;\n    } else {\n      i++;\n      for (; i <= 101; i++) {\n        if (mark[i] == 0) {\n          ans += i;\n          break;\n        }\n      }\n      cout << ans << endl;\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list()\n    x = 0\n    c = 0\n    A = 0\n    B = 0\n    flag = 0\n    flag1 = 0\n    while(c<2):\n        if(flag == 0 and a.count(x) == 0):\n            c += 1\n            flag = 1\n            A = x\n        if(flag1 == 0 and a.count(x) <= 1):\n            B = x\n            c += 1\n            flag1 = 1  \n        x += 1\n    print(A+B)\n    t-=1\n        \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    i = 0\n    while True:\n        if a.count(i) >= 2:\n            i += 1\n        else:\n            break\n    j = i\n    while True:\n        if j in a:\n            j += 1\n        else:\n            break\n\n    print(i+j)    "
        },
        {
            "language": 4,
            "solution": "// Working program with FastReader \nimport java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\n\n\n public final class Main \n{ \n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} \n\tpublic static void main(String[] args) \n\t{ \n\t\tFastReader sc=new FastReader(); \n\t\tint t=sc.nextInt();\n\t\twhile(t-- > 0)\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tint a[]=new int[n];\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\ta[i]=sc.nextInt();\n\t\t\t\n\t\t\tArrays.sort(a);\n\t\t\tif(a[0]>0)\n\t\t\t{\n\t\t\t\tSystem.out.println(\"0\");\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint freq[]=new int[101];\n\t\t\t\tArrays.fill(freq,0);\n\t\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tfreq[a[i]]++;\n\t\t\t\t\n\t\t\t\tint f=0;\n\t\t\t\tint sum=0;\n\t\t\t\tfor(int i=0;f<1 && i<101;i++)\n\t\t\t\t{\n\t\t\t\t\tif(freq[i]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsum+=i;\n\t\t\t\t\t\tf++;\n\t\t\t\t\t\tfreq[i]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf=0;\n\t\t\t\tfor(int i=0;f<1 && i<101;i++)\n\t\t\t\t{\n\t\t\t\t\tif(freq[i]==1)\n\t\t\t\t\t{\n\t\t\t\t\t\tsum+=i;\n\t\t\t\t\t\tf++;\n\t\t\t\t\t\tfreq[i]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println(sum);\n\t\t\t}\n\t\t}\n\t\t\n\t\n\n\t} \n} \n"
        },
        {
            "language": 3,
            "solution": "t=int(input()) \nwhile t:\n    t-=1 \n    n=int(input()) \n    a=list(map(int,input().split())) \n    a.sort() \n    s1=-1\n    s2=-1  \n    for i in a:\n        if i-1==s1:\n            s1+=1 \n\n        elif i-1==s2:\n            s2+=1 \n        elif i==s1 or i==s2:\n            continue\n        else:\n            break \n    print(s2+1 +s1+1)\n"
        },
        {
            "language": 3,
            "solution": "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return map(int, input().split(' '))\n\n\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    a = list(read_ints())\n    cnt = [0 for _ in range(101)]\n    for i in a:\n        cnt[i] += 1\n    ans = 0\n    status = 2\n    for i in range(101):\n        status = min(status, cnt[i])\n        if status == 0:\n            break\n        ans += status\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "for _  in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l, r = 0, 0\n    for i in a:\n        if l == i:\n            l += 1\n        elif r == i:\n            r += 1\n    print(l + r)\n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\n\ndef main():\n    pass\n\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\ndef binary(n):\n    return (bin(n).replace(\"0b\", \"\"))\n\n\ndef decimal(s):\n    return (int(s, 2))\n\n\ndef pow2(n):\n    p = 0\n    while (n > 1):\n        n //= 2\n        p += 1\n    return (p)\n\n\ndef primeFactors(n):\n    l=[]\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = n / i\n    if n > 2:\n        l.append(int(n))\n    return (l)\n\n\ndef isPrime(n):\n    if (n == 1):\n        return (False)\n    else:\n        root = int(n ** 0.5)\n        root += 1\n        for i in range(2, root):\n            if (n % i == 0):\n                return (False)\n        return (True)\n\ndef maxPrimeFactors(n):\n    maxPrime = -1\n    while n % 2 == 0:\n        maxPrime = 2\n        n >>= 1\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            maxPrime = i\n            n = n / i\n    if n > 2:\n        maxPrime = n\n    return int(maxPrime)\n\nfor xyz in range(0,int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    f=[0]*102\n    for i in l:\n        f[i]+=1\n        f[i]=min(2,f[i])\n    a=0\n    c=0\n    i=0\n    #print(f)\n    for i in range(0,102):\n        if(f[i]!=1):\n            break\n    a1=i\n    for i in range(0,102):\n        if(f[i]!=2):\n            break\n    a2=i\n    for i in range(a2,102):\n        if(f[i]==0):\n            break\n    a2+=i\n    print(max(a1,a2))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    \n    res = 0\n    step = 2\n    \n    for i in range(101):\n        num = a.count(i)\n        \n        if step == 2:\n            if num >= 2: res += 2\n            elif num == 1:\n                res += 1\n                step = 1\n            else: step = 0\n        elif step == 1:\n            if num >= 1: res += 1\n            else: step = 0\n                \n    print(res)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor i in range(int(input())):\n    n=int(input())\n    r=list(map(int,input().split()))\n    dic=Counter(r)\n    chk=0\n    r=0\n    re=0\n    while(dic[chk]>1):\n        chk+=1\n    if(dic[chk]):\n        re+=chk\n        chk+=1\n        while(dic[chk]):\n            chk+=1\n        re+=chk\n    else:\n        re=2*chk\n\n    print(re)"
        },
        {
            "language": 3,
            "solution": "import sys\n\nt = int(input())\nwhile t>0:\n\tt-=1\n\tn = int(sys.stdin.readline())\n\tinput=sys.stdin.readline()\n\tarr = list(map(int, input.split()))\n\tmex1=0\n\tmex2=0\n\tindex = [0 for i in range(n+1)]\n\tfor x in arr:\n\t\tif x<=n:\n\t\t\tindex[x]+=1\n\tflag=0\n\t# print(index)\n\tfor i in range(len(index)):\n\t\t# print(i)\n\t\tif index[i]<2:\n\t\t\tif index[i]==1:\n\t\t\t\tif flag ==0:\n\t\t\t\t\tmex1=i\n\t\t\t\t\tflag =1\n\t\t\telif index[i] == 0:\n\t\t\t\tif flag == 0:\n\t\t\t\t\tmex1=i\n\t\t\t\t\tmex2=i\n\t\t\t\telse:\n\t\t\t\t\tmex2=i\n\t\t\t\tbreak\n\n\tprint(mex1+mex2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MAXX = 1e9;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  long long t;\n  cin >> t;\n  for (long long i = 0; i < t; i++) {\n    int n;\n    cin >> n;\n    int a;\n    vector<int> count(101, 0);\n    for (int j = 0; j < n; ++j) {\n      cin >> a;\n      count[a]++;\n    }\n    bool fl_1 = true, fl_2 = true;\n    int cnt_1 = 0, cnt_2 = 0;\n    for (int j = 0; j < 101; ++j) {\n      if (fl_1 && count[j] >= 1) {\n        cnt_1++;\n      } else\n        fl_1 = false;\n      if (fl_2 && count[j] >= 2) {\n        cnt_2++;\n      } else\n        fl_2 = false;\n    }\n    cout << cnt_1 + cnt_2 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n  n=int(input())\n  li=list(map(int,input().split()))\n  s_for=2\n  first=second=-1\n  arr=[0]*102\n  for i in range(n):\n    arr[li[i]]+=1\n  \n  for i in range(102):\n    if arr[i]==1:\n      if first==-1:\n        first=i\n        s_for-=1\n    if arr[i]==0:\n      if first==-1 and second==-1:\n        first=second=i\n        s_for-=2\n      else:\n        second=i\n        s_for-=1  \n    if s_for==0:\n      break\n  \n  \n  print(first+second)\n    \n\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n# created : 2020. 12. 31. 23:59\n\nimport os\nfrom sys import stdin, stdout\n\n\ndef solve(tc):\n    n = int(stdin.readline().strip())\n    seq = list(map(int, stdin.readline().split()))\n\n    nums = [0 for i in range(101)]\n    for i in range(n):\n        nums[seq[i]] += 1\n    \n    ans = 0\n    for i in range(101):\n        if nums[i]:\n            nums[i] -= 1\n        else:\n            ans += i\n            break\n\n    for i in range(101):\n        if nums[i]:\n            nums[i] -= 1\n        else:\n            ans += i\n            break\n\n    print(ans)\n\n\ntcs = 1\ntcs = int(stdin.readline().strip())\ntc = 1\nwhile tc <= tcs:\n    solve(tc)\n    tc += 1\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    for j in range(102):\n        if(l.count(j)>=2):\n            continue\n        else:\n            total = j\n            for k in range(j,102):\n                if(k in l):\n                    continue\n                else:\n                    total+=k\n                    break\n            print(total)\n            break\n            "
        },
        {
            "language": 3,
            "solution": "l=[]\ndef mx(a):\n    if len(a)==0:\n        return 0\n    if a[0]!=0 :\n        return 0\n    else:\n        for i in range(1,len(a)):\n            if a[i]-a[i-1]>1:\n                return a[i-1]+1\n    return a[-1]+1\nfor i in range(int(input())):\n    n=int(input())\n    s=list(map(int,input().split()))\n    s.sort()\n    b=[]\n    a=[s[0]]\n    j=0\n    for i in range(1,n):\n        if s[i]==a[j]:\n            b.append(s[i])\n        else:\n            a.append(s[i])\n            j=j+1\n    l.append(mx(a)+mx(b))\nfor i in l:\n    print(i)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=[0]*(102)\n    arr=list(map(int,input().split()))\n    x=[]\n    for i in arr:\n        l[i]+=1\n    req=2\n    for i in range(102):\n        while(req>l[i]):\n            req-=1\n            x+=[i]\n    print(sum(x))\n        "
        },
        {
            "language": 3,
            "solution": "import sys\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().split()))\n    arr.sort()\n    arrA = []\n    arrB = []\n\n    for x in arr:\n        if x not in arrA:\n            arrA.append(x)\n        elif x not in arrB:\n            arrB.append(x)\n        else:\n            continue\n    # print(arrA)\n    # print(arrB)\n\n    mexA = 0\n    mexB = 0\n    for i in range(0, 101):\n        if i not in arrA:\n            mexA = i\n            break\n    for i in range(0, 101):\n        if i not in arrB:\n            mexB = i\n            break\n    print(mexA + mexB)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn=int(input())\n\tl=sorted(list(map(int,input().split())))\n\tx=y=i=0\n\twhile i in l:\n\t\tl.remove(i)\n\t\ti+=1\n\tx=i\n\ti=0\n\twhile i in l:i+=1\n\ty=i\n\ti=0\n\tprint(x+y)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint _;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nint n, cnt[100050];\nint main() {\n  for (scanf(\"%d\", &_); _; _--) {\n    memset(cnt, 0, sizeof(cnt));\n    int t = 2, ans = 0;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n      int x;\n      scanf(\"%d\", &x);\n      cnt[x]++;\n    }\n    for (int i = 0; i <= 101; i++)\n      if (cnt[i] == 0) {\n        ans = i;\n        break;\n      }\n    for (int i = 0; i < n; i++)\n      if (cnt[i] == 1 || cnt[i] == 0) {\n        ans += i;\n        break;\n      }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(a):\n    m = 0\n    while m in a:\n        m += 1\n    return m\n\n\ncases = int(input())\n\nfor _ in range(cases):\n    n = int(input())\n    ints = input()\n\n    arr = ints.split(\" \")\n    arr = [int(a) for a in arr]\n\n    m_0 = mex(arr)\n\n    a = []\n    b = []\n\n    for i in range(n):\n        if arr.count(i) > 1:\n            b.append(i)\n            arr.remove(i)\n    a = arr\n\n    print(max(m_0, mex(a) +  mex(b)))    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    A = int(input())\n    B = sorted(list(map(int, input().split())))\n    a = 0\n    ans = 0\n    C = B\n    for i in range(len(B) + 1):\n        if i not in B:\n            ans += i\n            break\n        else:\n            C.remove(i)\n    D = C\n    for i in range(len(C) + 1):\n        if i not in C:\n            ans += i\n            break\n        else:\n            D.remove(i)\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  #\u7a7a\u767d\u3042\u308a\n\n\nt = I()\n\nfor i in range(t):\n    n = I()\n    A = LI()\n    B = [0]*101\n    for a in A:\n        B[a] += 1\n    ans = 0\n    for j in range(101):\n        if B[j] == 0:\n            ans += j\n            break\n    for j in range(101):\n        if B[j] <= 1:\n            ans += j\n            break\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "mod = 1000000007\neps = 10**-9\n\n\ndef main():\n    import sys\n    from collections import Counter\n    input = sys.stdin.readline\n\n    for _ in range(int(input())):\n        N = int(input())\n        A = list(map(int, input().split()))\n        C = Counter(A)\n\n        ans = 0\n        for i in range(101):\n            if C[i] == 0:\n                ans += i\n                break\n            else:\n                C[i] -= 1\n\n        for i in range(101):\n            if C[i] == 0:\n                ans += i\n                break\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "//Codeforces 1406A \nimport java.util.Scanner;\n\npublic class CF1406A {\n    static final Scanner SC = new Scanner(System.in);\n    public static void main(String[] args) {\n        int tests = SC.nextInt();\n        for (int t = 0; t < tests; ++t) {\n            int setSize = SC.nextInt();\n            int[] set = new int[setSize];\n            for (int i = 0; i < setSize; ++i) {\n                set[i] = SC.nextInt();\n            }\n            int maxMex = computeMaxMex(set);\n            System.out.println(maxMex);\n        }\n    }\n\n    // Computes and returns maximum mex value\n    static int computeMaxMex(int[] set) {\n        int[] numOccurrences = new int[101];\n        for (int i = 0; i < set.length; ++i) {\n            numOccurrences[set[i]] += 1;\n        }\n\n        int mexFound = 0;\n        int answer = 0;\n        loop :\n        for (int i = 0; i < numOccurrences.length; ++i) {\n            if (numOccurrences[i] < 2 - mexFound) {\n                int found = 2 - Math.max(mexFound, numOccurrences[i]);\n                answer += found * i;\n                mexFound += found;\n            }\n        }\n        answer += (2 - mexFound) * 101;\n\n        return answer;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    map<long long, long long> m;\n    for (long long i = 0; i <= 1000; i++) m[i] = 0;\n    for (long long i = 0; i < n; i++) {\n      long long a;\n      cin >> a;\n      m[a]++;\n    }\n    long long a = 0, k = 0;\n    while (1) {\n      if (m[a] < 2) break;\n      a++;\n    }\n    k = a;\n    a = 0;\n    while (1) {\n      if (!m[a]) break;\n      a++;\n    }\n    cout << a + k << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    a=-1\n    b=-1\n    for i in range(n):\n        if l[i]==a+1:\n            a=a+1\n            l[i]=-1\n    \n    for i in range(n):\n        if l[i]==-1:\n            pass\n        elif l[i]==b+1:\n            b=b+1\n    \n    print(a+1+b+1)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int mex(vector<long long int> a) {\n  long long int ans = 0;\n  for (long long int i = 0; i < 101; i++) {\n    long long int k = 0;\n    for (auto p : a) {\n      if (i == p)\n        continue;\n      else\n        k++;\n    }\n    if (k == a.size()) {\n      ans = i;\n      break;\n    }\n  }\n  return ans;\n}\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    vector<long long int> arr(n), a, b;\n    for (long long int i = 0; i < n; i++) cin >> arr[i];\n    sort(arr.begin(), arr.end());\n    long long int i;\n    for (i = 0; i <= n - 2; i++) {\n      if (arr[i] == arr[i + 1]) {\n        a.push_back(arr[i]);\n        b.push_back(arr[i + 1]);\n        i++;\n      } else {\n        a.push_back(arr[i]);\n      }\n    }\n    if (i == n - 1) a.push_back(arr[i]);\n    cout << mex(a) + mex(b) << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e7 + 10;\nconst int V_MAX = 800 + 10;\nconst int mod = 10007;\nconst int INF = 0x3f3f3f3f;\nconst double eps = 1e-6;\nvoid solve() {\n  int n;\n  cin >> n;\n  int arr[200] = {0};\n  int t;\n  for (int i = 0; i < n; i++) {\n    cin >> t;\n    arr[t]++;\n  }\n  int ans = 0, flag = 2;\n  for (int i = 0; i <= 100; i++) {\n    if (arr[i] >= 2)\n      continue;\n    else if (arr[i] == 0) {\n      if (flag == 2) {\n        cout << 2 * i << endl;\n        return;\n      } else if (flag == 1) {\n        ans += i;\n        cout << ans << endl;\n        return;\n      }\n    } else if (arr[i] == 1) {\n      if (flag == 2) {\n        ans += i;\n        flag--;\n      }\n    }\n  }\n}\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile t>0:\n    t-=1\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=0\n    c=0\n    for i in range(n):\n        if i in a:\n            a.remove(i)\n            \n        else:\n            b=i\n            break\n        if len(a)==0:\n            b=i+1\n            break\n    for i in range(n):\n        if i in a:\n            a.remove(i)\n        else:\n            c=i\n            break\n        if len(a)==0:\n            c=i+1\n    print(b+c)        "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n\tn=int(input())\n\ta=sorted(list(map(int,input().split())))\n\tA=[]\n\tB=[]\n\tfor i in a:\n\t\tif len(A)==0 or i!=A[-1]:\n\t\t\tA.append(i)\n\t\telse:\n\t\t\tB.append(i)\n\tcount=0\n\tfor i in range(101):\n\t\tif i not in A:\n\t\t\tcount+=i\n\t\t\tbreak\n\tfor i in range(101):\n\t\tif i not in B:\n\t\t\tcount+=i\n\t\t\tbreak\n\tprint(count)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Round670_1 {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint tAll = sc.nextInt();\n\t\tfor (int t = 0; t < tAll; t++) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint[] set = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tset[i] = sc.nextInt();\n\t\t\t}\n\n\t\t\tint mexA = 0;\n\t\t\tint mexB = 0;\n\t\t\tboolean mexBDone = false;\n\t\t\tfor (int i = 0; i < 101; i++) {\n\t\t\t\tint count = 0;\n\t\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\t\tif (set[j] == i) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tif (!mexBDone) {\n\t\t\t\t\t\tmexB++;\n\t\t\t\t\t}\n\t\t\t\t\tmexA++;\n\t\t\t\t} else if (count == 1) {\n\t\t\t\t\tmexA++;\n\t\t\t\t\tmexBDone = true;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(mexA + mexB);\t\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        FastReader in = new FastReader(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int t = in.nextInt();\n        for (int t1 = 0; t1 < t; t1++) {\n            TreeSet<Integer>[] set = new TreeSet[2];\n            for (int i = 0; i < 2; i++) set[i] = new TreeSet<>();\n            int n = in.nextInt();\n            for (int i = 0; i < n; i++) {\n                int a = in.nextInt();\n                if (set[0].contains(a)) {\n                    set[1].add(a);\n                } else set[0].add(a);\n            }\n            int max1 = -1;\n            int max2 = -1;\n            for (int i = 0; i <= 100; i++) {\n                if (max1 == -1 && !set[0].contains(i)) max1 = i;\n                if (max2 == -1 && !set[1].contains(i)) max2 = i;\n            }\n            pw.println(max1 + max2);\n        }\n        pw.close();\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n\n    static class FastReader {\n        InputStream is;\n        private byte[] inbuf = new byte[1024];\n        private int lenbuf = 0, ptrbuf = 0;\n\n        public FastReader(InputStream is) {\n            this.is = is;\n        }\n\n        public int readByte() {\n            if (lenbuf == -1) throw new InputMismatchException();\n            if (ptrbuf >= lenbuf) {\n                ptrbuf = 0;\n                try {\n                    lenbuf = is.read(inbuf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (lenbuf <= 0) return -1;\n            }\n            return inbuf[ptrbuf++];\n        }\n\n        public boolean isSpaceChar(int c) {\n            return !(c >= 33 && c <= 126);\n        }\n\n        private boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        public int skip() {\n            int b;\n            while ((b = readByte()) != -1 && isSpaceChar(b)) ;\n            return b;\n        }\n\n        public String next() {\n            int b = skip();\n            StringBuilder sb = new StringBuilder();\n            while (!(isSpaceChar(b))) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n\n        public String nextLine() {\n            int c = skip();\n            StringBuilder sb = new StringBuilder();\n            while (!isEndOfLine(c)) {\n                sb.appendCodePoint(c);\n                c = readByte();\n            }\n            return sb.toString();\n        }\n\n        public int nextInt() {\n            int num = 0, b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = (num << 3) + (num << 1) + (b - '0');\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n        public long nextLong() {\n            long num = 0;\n            int b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = (num << 3) + (num << 1) + (b - '0');\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public char[] next(int n) {\n            char[] buf = new char[n];\n            int b = skip(), p = 0;\n            while (p < n && !(isSpaceChar(b))) {\n                buf[p++] = (char) b;\n                b = readByte();\n            }\n            return n == p ? buf : Arrays.copyOf(buf, p);\n        }\n\n        public char readChar() {\n            return (char) skip();\n        }\n    }\n}\n\t \t \t \t\t\t   \t\t\t\t   \t\t\t\t \t\t  \t\t\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long a[102] = {}, an = 0;\n  ;\n  for (long long i = 0; i < n; i++) {\n    long long k;\n    cin >> k;\n    a[k]++;\n  }\n  for (long long i = 0; i < 102; i++) {\n    if (a[i] == 0) {\n      an = i;\n      break;\n    }\n  }\n  if (true) {\n    vector<long long> v1;\n    long long m1 = -1, c1 = 0;\n    for (long long i = 0; i < 102; i++) {\n      if (a[i] == 0) {\n        if ((long long)v1.size() > 0) {\n          v1.push_back(i);\n          break;\n        }\n        v1.push_back(i);\n        v1.push_back(i);\n        break;\n      } else if (a[i] == 1 && (long long)v1.size() == 0) {\n        v1.push_back(i);\n      }\n    }\n    an = max(an, v1[0] + v1[1]);\n  }\n  cout << an << endl;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long t1 = 1;\n  cin >> t1;\n  cout << fixed << setprecision(7);\n  while (t1--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    cnt = defaultdict(int)\n    for i in a:\n        cnt[i] += 1\n    ans = 0\n    for i in range(0,101):\n        if(cnt[i] != 0): \n            cnt[i]-=1\n        else:\n            ans += i\n            break\n    for i in range(0,101):\n        if(cnt[i] != 0): \n            cnt[i]-=1\n        else:\n            ans += i\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n        n=int(input())\n        arr=list(map(int,input().split()))\n        val=0\n        a=list(set(arr))\n        a.sort()\n        count=0\n        for i in range(n+1):\n            if i not in a:\n                val+=(2-count)*i\n                break\n            else:\n                if i in a:\n                    if arr.count(i)<(2-count):\n                        val+=i\n                        count+=1\n                        if count==2:\n                            break\n        \n        print(val)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\n\nfor _ in range(int(input())):\n    input()\n    set1, set2 = set(), set()\n    nam = [int(n) for n in input().split()]\n    nam_c = Counter(nam)\n    for i in range(0, max(nam) + 1):\n        if nam_c[i] < 2:\n            for j in range(i, max(nam) + 1):\n                if j not in nam_c or nam_c[j] == 0:\n                    print(i + j)\n                    break\n            else:\n                print(j + 1 + i)\n            break\n    else:\n        print(i * 2 + 2)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long T;\nlong long n;\nlong long a[105];\nint main() {\n  scanf(\"%lld\", &T);\n  while (T--) {\n    scanf(\"%lld\", &n);\n    for (long long i = 0; i < n; i++) {\n      scanf(\"%lld\", &a[i]);\n    }\n    a[n] = 4e18;\n    sort(a, a + n + 1);\n    long long cnt1 = -1, cnt2 = -1;\n    for (long long i = 0; i <= n; i++) {\n      if (cnt1 >= a[i]) {\n        if (cnt2 >= a[i])\n          continue;\n        else if (cnt2 == a[i] - 1)\n          cnt2 = a[i];\n      } else if (cnt1 == a[i] - 1)\n        cnt1 = a[i];\n    }\n    printf(\"%lld\\n\", cnt1 + cnt2 + 2);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter as C\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    \n    cnts=C(a)\n    mex0=0\n    mex1=0\n    b=2\n    for i in range(101):\n        if cnts[i]==0:\n            break\n        mex0+=1\n        if cnts[i]==1:\n            b=1\n        if b==2:\n            mex1+=1\n    print(mex0+mex1)"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n = int(input())\n    s = [0 for i in range(102)]\n    for elem in list(map(int,input().split())):\n        s[elem] += 1\n    m = 0\n    a = 0\n    p = -1\n    for elem in s:\n        p += 1\n        if elem == 0:\n            if a == 0:\n                m += p\n            m += p\n            break\n        if elem == 1 and a == 0:\n                m += p\n                a = 1\n    print(m)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    a,b,c=0,0,0\n    p,q,k=1,1,1\n    if arr[0]!=0:\n        print(0)\n        continue\n    d=defaultdict(int)\n    for i in arr:\n        d[i]+=1\n            \n    l=list(set(arr))\n    l.sort()\n    i,j=0,0\n    while(a!=len(l)):\n        if i!=l[a]:\n            break\n        i+=1\n        a+=1\n    p=i\n    for i in range(100):\n        if d[i]<=1:\n            j=i\n            break\n    print(p+j)    "
        },
        {
            "language": 4,
            "solution": "import java.io.*;import java.util.*;import java.math.*;\npublic class Main\n{\n\tstatic long mod=1000000007l;\n    static int max=Integer.MAX_VALUE,min=Integer.MIN_VALUE;\n    static long maxl=Long.MAX_VALUE,minl=Long.MIN_VALUE;\n    static BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n    static StringTokenizer st;\n    static StringBuilder sb;\n    \n    static public void main(String[] args)throws Exception\n    {\n    \tst=new StringTokenizer(br.readLine());\n    \tint t=i();\n    \tsb=new StringBuilder();\n    \to:\n    \twhile(t-->0)\n    \t{\n    \t\tint n=i();\n    \t\tint ar[]=ari(n);\n    \t\tHashMap<Integer,Integer> h=new HashMap<>();\n    \t\tfor(int x:ar)h.put(x,h.getOrDefault(x,0)+1);\n    \t\tint c=-1;\n    \t\tboolean b=false;\n    \t\tfor(int x=0;x<n;x++)\n    \t\t{\n    \t\t\tif(!h.containsKey(x))\n    \t\t\t{\n    \t\t\t\tc=x;\n    \t\t\t\tb=true;\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t\tif(h.get(x)==1)h.remove(x);\n    \t\t\telse h.put(x, h.get(x)-1);\n    \t\t}\n    \t\tif(b)\n    \t\t{\n    \t\t\tif(c==-1)c=0;\n    \t\t}\n    \t\telse c=n;\n    \t\tb=false;\n    \t\tint k=-1;\n    \t\tfor(int x=0;x<n;x++)\n    \t\t{\n    \t\t\tif(!h.containsKey(x))\n    \t\t\t{\n    \t\t\t\tk=x;\n    \t\t\t\tb=true;\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t\tif(h.get(x)==1)h.remove(x);\n    \t\t\telse h.put(x, h.get(x)-1);\n    \t\t}\n    \t\tif(b)\n    \t\t{\n    \t\t\tif(k==-1)k=0;\n    \t\t}\n    \t\telse k=n;\n    \t\tsl(c+k);\n    \t}\n    \tp(sb);\n    }\n    \n    static void s(String s){sb.append(s);}\n    static void s(int s){sb.append(s);}\n    static void s(long s){sb.append(s);}\n    static void s(char s){sb.append(s);}\n    static void s(double s){sb.append(s);}\n    static void ss(){sb.append(' ');}\n    static void sl(String s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(int s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(long s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(char s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(double s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(){sb.append(\"\\n\");}\n    static int max(int a,int b){return a>b?a:b;}\n    static int min(int a,int b){return a<b?a:b;}\n    static int abs(int a){return Math.abs(a);}\n    static long max(long a,long b){return a>b?a:b;}\n    static long min(long a,long b){return a<b?a:b;}\n    static long abs(long a){return Math.abs(a);}\n    static int sq(int a){return (int)Math.sqrt(a);}\n    static long sq(long a){return (long)Math.sqrt(a);}\n    static int gcd(int a,int b){return b==0?a:gcd(b,a%b);}\n    static boolean pa(String s,int i,int j)\n    {\n    \twhile(i<j)if(s.charAt(i++)!=s.charAt(j--))return false;\n    \treturn true;\n    }\n    static int ncr(int n,int c,long m)\n    {\n        long a=1l;\n        for(int x=n-c+1;x<=n;x++)a=((a*x)%m);\n        long b=1l;\n        for(int x=2;x<=c;x++)b=((b*x)%m);\n        return (int)((a*(mul((int)b,m-2,m)%m))%m);\n    }\n    static boolean[] sieve(int n)\n    {\n        boolean bo[]=new boolean[n+1];\n        bo[0]=true;bo[1]=true;\n        for(int x=4;x<=n;x+=2)bo[x]=true;\n        for(int x=3;x*x<=n;x+=2)if(!bo[x])for(int y=x*x;y<=n;y+=x)bo[y]=true;\n        return bo;\n    }\n    static int[] fac(int n)\n    {\n        int bo[]=new int[n+1];\n        for(int x=1;x<=n;x++)for(int y=x;y<=n;y+=x)bo[y]++;\n        return bo;\n    }\n    static long mul(long a,long b,long m) \n    {\n        long r=1l;\n        a%=m;  \n        while(b>0)\n        {\n            if((b&1)==1)r=(r*a)%m; \n            b>>=1;\n            a=(a*a)%m;  \n        } \n        return r; \n    }\n    static int i()throws IOException\n    {\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        return Integer.parseInt(st.nextToken());\n    }\n    static long l()throws IOException\n    {\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        return Long.parseLong(st.nextToken());\n    }\n    static String s()throws IOException\n    {\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n    static double d()throws IOException\n    {\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        return Double.parseDouble(st.nextToken());\n    }\n    static void p(Object p){System.out.print(p);}\n    static void p(String p){System.out.print(p);}\n    static void p(int p){System.out.print(p);}\n    static void p(double p){System.out.print(p);}\n    static void p(long p){System.out.print(p);}\n    static void p(char p){System.out.print(p);}\n    static void p(boolean p){System.out.print(p);}\n    static void pl(Object p){System.out.println(p);}\n    static void pl(String p){System.out.println(p);}\n    static void pl(int p){System.out.println(p);}\n    static void pl(char p){System.out.println(p);}\n    static void pl(double p){System.out.println(p);}\n    static void pl(long p){System.out.println(p);}\n    static void pl(boolean p){System.out.println(p);}\n    static void pl(){System.out.println();}\n    static int[] ari(int n)throws IOException\n    {\n        int ar[]=new int[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++)ar[x]=Integer.parseInt(st.nextToken());\n        return ar;\n    }\n    static int[][] ari(int n,int m)throws IOException\n    {\n        int ar[][]=new int[n][m];\n        for(int x=0;x<n;x++)\n        {\n        \tif(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n            for(int y=0;y<m;y++)ar[x][y]=Integer.parseInt(st.nextToken());\n        }\n        return ar;\n    }\n    static long[] arl(int n)throws IOException\n    {\n        long ar[]=new long[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++) ar[x]=Long.parseLong(st.nextToken());\n        return ar;\n    }\n    static long[][] arl(int n,int m)throws IOException\n    {\n        long ar[][]=new long[n][m];\n        for(int x=0;x<n;x++)\n        {\n        \tif(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n            for(int y=0;y<m;y++)ar[x][y]=Long.parseLong(st.nextToken());\n        }\n        return ar;\n    }\n    static String[] ars(int n)throws IOException\n    {\n        String ar[]=new String[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++) ar[x]=st.nextToken();\n        return ar;\n    }\n    static double[] ard(int n)throws IOException\n    {\n        double ar[]=new double[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++)ar[x]=Double.parseDouble(st.nextToken());\n        return ar;\n    }\n    static double[][] ard(int n,int m)throws IOException\n    {\n        double ar[][]=new double[n][m];\n        for(int x=0;x<n;x++)\n        {\n        \tif(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n            for(int y=0;y<m;y++)ar[x][y]=Double.parseDouble(st.nextToken());\n        }\n        return ar;\n    }\n    static char[] arc(int n)throws IOException\n    {\n        char ar[]=new char[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++)ar[x]=st.nextToken().charAt(0);\n        return ar;\n    }\n    static char[][] arc(int n,int m)throws IOException\n    {\n        char ar[][]=new char[n][m];\n        for(int x=0;x<n;x++)\n        {\n            String s=br.readLine();\n            for(int y=0;y<m;y++)ar[x][y]=s.charAt(y);\n        }\n        return ar;\n    }\n    static void p(int ar[])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length);\n        for(int a:ar)\n        {\n        \tsb.append(a);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(int ar[][])\n    {\n    \tStringBuilder sb=new StringBuilder(2*ar.length*ar[0].length);\n        for(int a[]:ar)\n        {\n            for(int aa:a)\n            {\n            \tsb.append(aa);\n            \tsb.append(' ');\n            }\n            sb.append(\"\\n\");\n        }\n        p(sb);\n    }\n    static void p(long ar[])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length);\n        for(long a:ar)\n        {\n        \tsb.append(a);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(long ar[][])\n    {\n    \tStringBuilder sb=new StringBuilder(2*ar.length*ar[0].length);\n        for(long a[]:ar)\n        {\n            for(long aa:a)\n            {\n            \tsb.append(aa);\n            \tsb.append(' ');\n            }\n            sb.append(\"\\n\");\n        }\n        p(sb);\n    }\n    static void p(String ar[])\n    {\n    \tint c=0;\n    \tfor(String s:ar)c+=s.length()+1;\n        StringBuilder sb=new StringBuilder(c);\n        for(String a:ar)\n        {\n        \tsb.append(a);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(double ar[])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length);\n        for(double a:ar)\n        {\n        \tsb.append(a);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(double ar[][])\n    {\n    \tStringBuilder sb=new StringBuilder(2*ar.length*ar[0].length);\n        for(double a[]:ar)\n        {\n            for(double aa:a)\n            {\n            \tsb.append(aa);\n            \tsb.append(' ');\n            }\n            sb.append(\"\\n\");\n        }\n        p(sb);\n    }\n    static void p(char ar[])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length);\n        for(char aa:ar)\n        {\n        \tsb.append(aa);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(char ar[][])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length*ar[0].length);\n        for(char a[]:ar)\n        {\n            for(char aa:a)\n            {\n            \tsb.append(aa);\n            \tsb.append(' ');\n            }\n            sb.append(\"\\n\");\n        }\n        p(sb);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor y in range(t):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n    arr1=[0 for i in range(n)]\n    for i in range(n):\n        if arr[i]<n:\n            arr1[arr[i]]+=1\n    ans=-1\n    for i in range(n):\n        if arr1[i]==0:\n            ans=i\n            break\n    if ans==-1:\n        ans=n\n    for j in range(ans):\n        arr1[j]-=1\n    if ans<n and arr1[ans]!=0:\n        arr1[ans]-=1\n    ele=-1\n    for k in range(n):\n        if arr1[k]==0:\n            ele=k\n            break\n    if ele==-1:\n        ele=n\n    print(ans+ele)\n"
        },
        {
            "language": 3,
            "solution": "\n\n\ndef solve():\n    n = int(input())\n    arr = [int(i) for i in input().strip().split()]\n    arr.sort()\n\n    count = [0]*101\n    for i in arr:\n        count[i]+=1\n    res = 0\n    chos = 0\n\n    for i in range(0, 101):\n        if count[i] == 0:\n            if chos == 1:\n                res += i\n            else:\n                res += 2*i\n            break\n        elif count[i] == 1:\n            if chos == 0:\n                res += i\n                chos = 1\n\n    print(res)\n\n\nif(__name__ == \"__main__\"):\n    t = 1\n    t = int(input())\n    for i in range(0, t):\n        solve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long a[101] = {0};\n  for (long long i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    a[x]++;\n  }\n  long long q, w;\n  for (long long i = 0; i < 101; i++) {\n    if (a[i] > 0) {\n      a[i]--;\n    } else {\n      q = i;\n      break;\n    }\n  }\n  for (long long i = 0; i < 101; i++) {\n    if (a[i] <= 0) {\n      w = i;\n      break;\n    }\n  }\n  cout << q + w << '\\n';\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t = 1;\n  cin >> t;\n  for (long long i = 1; i <= t; i++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, x, i, mex = 0;\n  int arr[102];\n  cin >> n;\n  memset(arr, 0, sizeof(arr));\n  for (i = 0; i < n; i++) {\n    cin >> x;\n    if (arr[x]) {\n      arr[x] = 2;\n    } else {\n      arr[x] = 1;\n    }\n  }\n  for (i = 0; i <= n; i++) {\n    if (arr[i] == 0) {\n      mex += i;\n      break;\n    }\n  }\n  for (i = 0; i <= n; i++) {\n    if (arr[i] <= 1) {\n      mex += i;\n      break;\n    }\n  }\n  cout << mex << \"\\n\";\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    long long int arr[n];\n    for (long long int &i : arr) cin >> i;\n    sort(arr, arr + n);\n    set<long long int> x;\n    set<long long int> y;\n    for (long long int i = 0; i < n; i++) {\n      long long int c = count(arr, arr + n, arr[i]);\n      if (c > 1) {\n        x.insert(arr[i]);\n        y.insert(arr[i]);\n      } else {\n        x.insert(arr[i]);\n      }\n    }\n    long long int temp = 0, ans = 0;\n    for (auto i = 0; i <= 100; i++) {\n      if (x.count(temp) == 0) {\n        ans += temp;\n        break;\n      }\n      temp++;\n    }\n    temp = 0;\n    for (auto i = 0; i <= 100; i++) {\n      if (y.count(temp) == 0) {\n        ans += temp;\n        break;\n      }\n      temp++;\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nimport sys\nimport math\nfrom math import *\nfrom collections import Counter,defaultdict,deque\n    \nlip = lambda : list(map(int, input().split()))\nip = lambda : int(input())\nsip = lambda : input().split()\n  \n\ndef main():\n\tn = ip()\n\tarr = lip()\n\tset1 = set()\n\tset2 = set()\n\td1 = defaultdict(lambda:False)\n\td2 = defaultdict(lambda:False)\n\tfor i in arr:\n\t\t\n\t\tif i in set1:\n\t\t\tset2.add(i)\n\t\t\td2[i] = True\n\t\telse:\n\t\t\td1[i] = True\n\t\t\tset1.add(i)\n\tA = 0\n\tfor i in range(len(set1)+2):\n\t\tif not d1[i]:\n\t\t\tA = i\n\t\t\tbreak\n\n\tB = 0\n\tfor i in range(len(set2)+2):\n\t\tif not d2[i]:\n\t\t\tB = i\n\t\t\tbreak\n\n\tprint(A+B)\n\n\nfor i in range(ip()):\n\tmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 104;\nconst int INF = 0x3f3f3f3f;\nint a[MAXN];\nint vis[MAXN];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    memset(vis, 0, sizeof(vis));\n    int n;\n    scanf(\"%d\", &n);\n    int ma = 0;\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%d\", &a[i]);\n      ma = max(ma, a[i]);\n    }\n    sort(a, a + n);\n    int now = 0;\n    for (int i = 0; i < n; ++i) {\n      if (a[i] == now) {\n        vis[i] = true;\n        ++now;\n      }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; ++i) {\n      if (vis[i]) continue;\n      if (a[i] == ans) ++ans;\n    }\n    printf(\"%d\\n\", ans + now);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# Author: S Mahesh Raju\n# Username: maheshraju2020\n# Date: 16/09/2020\nfrom sys import stdin, stdout, setrecursionlimit\nimport heapq\nfrom math import gcd, ceil, sqrt\nfrom collections import Counter, deque\nfrom bisect import bisect_left, bisect_right\nii1 = lambda: int(stdin.readline().strip())\nis1 = lambda: stdin.readline().strip()\niia = lambda: list(map(int, stdin.readline().strip().split()))\nisa = lambda: stdin.readline().strip().split()\nsetrecursionlimit(100000)\nmod = 1000000007\n\ntc = ii1()\nfor _ in range(tc):\n    n = ii1()\n    arr = iia()\n    a, b = set(), set()\n    for i in arr:\n        if i not in a:\n            a.add(i)\n        elif i not in b:\n            b.add(i)\n    \n    a = list(sorted(a))\n    b = list(sorted(b))\n    for i in range(len(a)):\n        if a[i] != i:\n            res = i\n            break\n    else:\n        res = max(a) + 1\n    \n    for i in range(len(b)):\n        if b[i] != i:\n            res += i\n            break\n    else:\n        if len(b):\n            res += max(b) + 1\n    print(res)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list()\n\tc = list()\n\tresult = 0\n\tfor i in range(n):\n\t\tif 1<=a.count(i):\n\t\t\tb.append(i)\n\t\telse:\n\t\t\tbreak\n\tfor i in range(n):\n\t\tif 2<=a.count(i):\n\t\t\tc.append(i)\n\t\telse:\n\t\t\tbreak\n\tif len(b)==len(c):\n\t\tprint(len(b)*2)\n\telse:\n\t\tprint(len(c)+len(b))\n"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Main\n{\n    \n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\t// your code goes here\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t    int n=sc.nextInt();\n\t\t    int a[]=new int[n];\n\t\t    int max=-1;\n\t\t    for(int i=0;i<n;i++) {\n\t\t    a[i]=sc.nextInt();\n\t\t    if(max<a[i])\n\t\t    max=a[i];\n\t\t    }\n\t\t   int d[]=new int[max+2];\n\t\t   for(int i=0;i<n;i++) {\n\t\t       d[a[i]]++;\n\t\t   }\n\t\t   int sum=0;\n\t\t   for(int i=0;i<n;i++) {\n\t\t       if(d[i]<2) {\n\t\t       sum+=i;\n\t\t       break;\n\t\t       }\n\t\t   }\n\t\t   for(int i=0;i<=max+1;i++) {\n\t\t       if(d[i]==0) {\n\t\t       sum+=i;\n\t\t       break;\n\t\t       }\n\t\t   }\n\t\t   System.out.println(sum);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "\nfor _ in range(int(input())):\n    freq=[0]*101\n    n=int(input())\n    arr=list(map(int,input().split()))\n    for val in arr:\n        freq[val]+=1\n    ans=0\n    cnt=2   \n    for x in range(101):\n        if freq[x]==0:\n            ans+=x\n            break\n        else:    \n            freq[x]-=1\n    for x in range(101):\n        if freq[x]==0:\n            ans+=x\n            break\n        else:    \n            freq[x]-=1\n    print(ans)                \n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool f(int arr[], int n) {\n  for (int i = 0; i < n; i++)\n    if (arr[i] == 0) return false;\n  return true;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int arr[101];\n    memset(arr, 0, sizeof(arr));\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      arr[x]++;\n    }\n    int a = 0, b = 0;\n    for (int i = 0; i < 101; i++) {\n      if (arr[i] != 0)\n        arr[i]--;\n      else {\n        a += i;\n        break;\n      }\n    }\n    for (int i = 0; i < 101; i++) {\n      if (arr[i] != 0)\n        arr[i]--;\n      else {\n        b += i;\n        break;\n      }\n    }\n    cout << a + b << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class codeforces670div2 {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner s=new Scanner(System.in);\n\t\tint t=s.nextInt();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n=s.nextInt();\n\t\t\tint a[]=new int[n];\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\ta[i]=s.nextInt();\n\t\t\tArrayList<Integer> al1=new ArrayList<>();\n\t\t\tArrayList<Integer> al2=new ArrayList<>();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(!al1.contains(a[i]))\n\t\t\t\t\tal1.add(a[i]);\n\t\t\t\telse\n\t\t\t\t\tal2.add(a[i]);\n\t\t\t}\n\t\t\tint value1=0,value2=0;\n\t\t\tint i=0,j=0;\n\t\t\tfor(i=0;i<=Collections.max(al1)+1;i++)\n\t\t\t{\n\t\t\t\tif(!al1.contains(i))\n\t\t\t\t{\n\t\t\t\t\tvalue1=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!al2.isEmpty())\n\t\t\tfor(j=0;j<=Collections.max(al2)+1;j++)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif(!al2.contains(j))\n\t\t\t\t{\n\t\t\t\t\tvalue2=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(value1+value2);\n\t\t\t\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math,sys\nfrom itertools import permutations, combinations\nfrom collections import defaultdict,deque,OrderedDict,Counter\nfrom os import path\nimport bisect as bi\nimport heapq \ndef yes():print('YES')\ndef no():print('NO')\nif (path.exists('input.txt')): \n    #------------------Sublime--------------------------------------#\n    sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');\n    def inp():return (int(input()))\n    def minp():return(map(int,input().split()))\nelse:\n    #------------------PYPY FAst I/o--------------------------------#\n    def inp():return (int(stdin.readline()))\n    def minp():return(map(int,stdin.readline().split()))\n    \n####### ---- Start Your Program From Here ---- #######\nfor _ in range(inp()):\n    n=inp()\n    a=list(minp())\n    if 0 not in a:\n        print(0)\n        continue\n    a.sort()\n    if a.count(0)==1:\n        for i in range(n+1):\n            if i not in a:\n                flag=i\n                break\n        print(flag)\n        continue\n    flag=False\n    for i in range(n+1):\n        if a.count(i)==0:\n            t1=2*i\n            break\n        if a.count(i)==1:\n            flag=True\n            t1=i\n            break\n    t2=0\n    if flag:\n        for i in range(n+1):\n            if i not in a:\n                t2=i\n                break\n    print(t1+t2)"
        },
        {
            "language": 4,
            "solution": "import java.lang.*;\nimport java.util.*;\n\npublic class Abhishek {\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            int n = sc.nextInt();\n            int[] a = new int[101];\n            for (int i = 0; i < n; i++) {\n                a[sc.nextInt()]++;\n            }\n            int mexA = -1, mexB = -1;\n            for (int i = 0; i < a.length; i++) {\n                if (a[i] <= 1 && mexA == -1)\n                    mexA = i;\n                if (a[i] == 0 && mexB == -1)\n                    mexB = i;\n            }\n            System.out.println(mexA+mexB);\n        }\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "// package CodeForces;\n\nimport java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.*;\n\n\npublic class Solution {\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\tReader s = new Reader();\n\t\tStringBuilder str = new StringBuilder();\n\t\tint cases = s.nextInt();\n\t\tfor(int Case = 0 ; Case < cases ; Case++ ) {\n\t\t\tint n = s.nextInt();\n\t\t\tint[] arr = new int[n];\n\t\t\tint[] map = new int[101];\n\t\t\tfor(int i = 0 ; i < n ; i++) {\n\t\t\t\tarr[i] = s.nextInt();\n\t\t\t\tmap[arr[i]]++;\n\t\t\t}\n\t\t\tint first = -1;\n\t\t\tfor(int i = 0 ; i < 101 ; i++) {\n\t\t\t\tif(map[i] < 2) {\n\t\t\t\t\tfirst = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint second = -1;\n\t\t\tfor(int i = 0 ; i < 101 ; i++) {\n\t\t\t\tif(map[i] == 0) {\n\t\t\t\t\tsecond = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstr.append((first+second)+\"\\n\");\n\t\t}\n\t\tSystem.out.println(str);\n\t\t\n\t}\n\n\n\n\n\tstatic class Reader \n    { \n        final private int BUFFER_SIZE = 1 << 16; \n        private DataInputStream din; \n        private byte[] buffer; \n        private int bufferPointer, bytesRead; \n  \n        public Reader() \n        { \n            din = new DataInputStream(System.in); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public Reader(String file_name) throws IOException \n        { \n            din = new DataInputStream(new FileInputStream(file_name)); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public String readLine() throws IOException \n        { \n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c; \n            while ((c = read()) != -1) \n            { \n                if (c == '\\n') \n                    break; \n                buf[cnt++] = (byte) c; \n            } \n            return new String(buf, 0, cnt); \n        } \n  \n        public int nextInt() throws IOException \n        { \n            int ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do\n            { \n                ret = ret * 10 + c - '0'; \n            }  while ((c = read()) >= '0' && c <= '9'); \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public long nextLong() throws IOException \n        { \n            long ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public double nextDouble() throws IOException \n        { \n            double ret = 0, div = 1; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n  \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n  \n            if (c == '.') \n            { \n                while ((c = read()) >= '0' && c <= '9') \n                { \n                    ret += (c - '0') / (div *= 10); \n                } \n            } \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        private void fillBuffer() throws IOException \n        { \n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n            if (bytesRead == -1) \n                buffer[0] = -1; \n        } \n  \n        private byte read() throws IOException \n        { \n            if (bufferPointer == bytesRead) \n                fillBuffer(); \n            return buffer[bufferPointer++]; \n        } \n  \n        public void close() throws IOException \n        { \n            if (din == null) \n                return; \n            din.close(); \n        } \n    } \n}\n"
        },
        {
            "language": 3,
            "solution": "for T in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    count=[0]*101\n    for i in a:\n        count[i]+=1\n    mex=-1\n    for i in range(101):\n        if(count[i]==0):\n            mex=i\n            break\n    if(mex==-1):\n        mex=101\n    check=-1\n    for i in range(101):\n        if(count[i]==1 or count[i]==0):\n            mex+=i\n            check=i\n            break\n    if(check==-1):\n        mex+=101\n    print(mex)\n            \n            \n            \n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom collections import Counter\nfor _ in range(int(stdin.readline())):\n    n=int(stdin.readline());ans=0\n    a=list(map(int,stdin.readline().split()))\n    d=Counter(a);sa=set();sb=set();dont=1\n    for v in range(101):\n        if d[v]==1:\n            sa.add(v)\n            dont=0\n        elif d[v]>=2:\n            sa.add(v)\n            if dont:sb.add(v)\n        else:break\n    # print(sa,sb)\n    if sa:ans+=max(sa)+1\n    if sb:ans+=max(sb)+1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "# your code goes here\ndef mex(arr):\n\tfor i in range(len(arr)):\n\t\tif(i!=arr[i]):\n\t\t\treturn i\n\treturn len(arr)\t\t\nfor i in range(int(input())):\n\tn=int(input())\n\tlst=list(map(int,input().split()))\n\tlst.sort()\n\ta1=[]\n\ta2=[]\n\tfor i in range(n):\n\t\tif lst[i] not in a1:\n\t\t\ta1.append(lst[i])\n\t\telse:\n\t\t\ta2.append(lst[i])\n\tf1=mex(list(set(a1)))\n\tf2=mex(list(set(a2)))\n\tf3=mex(list(set(lst)))\n\t#print(f3)\n\tprint(max(f1+f2,f3))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 105;\nint T, n;\nint cnt[N];\nint main() {\n  std::ios::sync_with_stdio(false), std::cin.tie(nullptr);\n  std::cin >> T;\n  while (T--) {\n    std::cin >> n;\n    memset(cnt, 0, sizeof(cnt));\n    for (int i = 1, x; i <= n; ++i) {\n      std::cin >> x;\n      ++cnt[x];\n    }\n    int ans;\n    for (int i = 0; i <= 101; ++i)\n      if (!cnt[i]) {\n        ans = i;\n        break;\n      } else\n        --cnt[i];\n    for (int i = 0; i <= 101; ++i)\n      if (!cnt[i]) {\n        ans += i;\n        break;\n      } else\n        --cnt[i];\n    std::cout << ans << std::endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring tostr(int n) {\n  stringstream rr;\n  rr << n;\n  return rr.str();\n}\nint sc() {\n  register int c = getchar();\n  register int x = 0;\n  int neg = 0;\n  for (; ((c < 48 || c > 57) && c != '-'); c = getchar())\n    ;\n  if (c == '-') {\n    neg = 1;\n    c = getchar();\n  }\n  for (; c > 47 && c < 58; c = getchar()) {\n    x = (x << 1) + (x << 3) + c - 48;\n  }\n  if (neg) x = -x;\n  return x;\n}\ninline void out(int n) {\n  int N = n < 0 ? -n : n, rev, cnt = 0;\n  rev = N;\n  if (N == 0) {\n    putchar('0');\n    putchar('\\n');\n    return;\n  }\n  while ((rev % 10) == 0) {\n    cnt++;\n    rev /= 10;\n  }\n  if (n < 0) putchar('-');\n  rev = 0;\n  while (N != 0) {\n    rev = (rev << 3) + (rev << 1) + N % 10;\n    N /= 10;\n  }\n  while (rev != 0) {\n    putchar(rev % 10 + '0');\n    rev /= 10;\n  }\n  while (cnt--) putchar('0');\n  putchar('\\n');\n  return;\n}\nvoid deb(istream_iterator<string> it) {}\ntemplate <typename T, typename... Args>\nvoid deb(istream_iterator<string> it, T a, Args... args) {\n  cout << *it << \" = \" << a << endl;\n  deb(++it, args...);\n}\nconst int mod = 1e9 + 7;\nconst int N = 3e5 + 9;\nconst long double eps = 1e-9;\nconst long double PI = acos(-1.0);\nlong long gc(long long a, long long b) {\n  while (b) {\n    long long x = a % b;\n    a = b;\n    b = x;\n  }\n  return a;\n}\nlong long lc(long long a, long long b) { return a / gc(a, b) * b; }\nlong long qpow(long long n, long long k) {\n  long long ans = 1;\n  assert(k >= 0);\n  n %= mod;\n  while (k > 0) {\n    if (k & 1) ans = (ans * n) % mod;\n    n = (n * n) % mod;\n    k >>= 1;\n  }\n  return ans % mod;\n}\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> v(n);\n  for (auto &it : v) cin >> it;\n  sort(v.begin(), v.end());\n  vector<long long> mp(n);\n  long long mx0 = 0, mx1 = 0;\n  for (int i = 0; i < n; i++) {\n    if (mx0 == v[i])\n      mx0 = v[i] + 1;\n    else if (mx1 == v[i])\n      mx1 = v[i] + 1;\n  }\n  cout << mx0 + mx1 << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=sorted(list(map(int,input().split())))\n    s=set(l)\n    a=0\n    b=[]\n    for i in s:\n        if i==a:\n            b.append(i)\n        else:\n            break\n        a+=1\n    if 0 not in b:\n        print('0')\n    else:\n        m=0\n        for i in s:\n            if l.count(i)-1>0 and i==m:\n                m+=1\n                continue\n            else:\n                break\n        print(max(b)+1+m)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    a=0\n    k=max(l)+2\n    for i in range(k):\n        if i not in l:\n            a=i\n            break\n    if a!=0:\n        for i in range(a):\n            l.remove(i)\n        if len(l)!=0:\n            k=max(l)+2\n            b=0\n            for i in range(k):\n                if i not in l:\n                    b=i\n                    break\n            print(a+b)\n        else:\n            print(a)\n    else:\n        print(0)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        try {\n\n            BufferedReader br = new BufferedReader((new InputStreamReader(System.in)));\n\n            int t = Integer.parseInt(br.readLine());\n\n            for(int l=0;l<t;l++) {\n\n                int n = Integer.parseInt(br.readLine());\n                String[] s = br.readLine().split(\" \");\n                int count[] = new int[102];\n\n                for(int i=0;i<n;i++){\n                    int a  = Integer.parseInt(s[i]);\n                    count[a] += 1;\n                }\n\n                int j = 2, i = 0, r = 0;\n\n                while(j > 0 && i <= 102){\n                    if(count[i] == 0){\n                        r += i * 2;\n                        j = 0;\n\n                    } else if (count[i] == 1){\n                        j = 1;\n                        r += i;\n                        i++;\n                        while(i <= 102 && j > 0){\n                            if(count[i] == 0){\n                                j--;\n                                r += i;\n                            }\n                            i++;\n                        }\n                    }\n                    i++;\n                }\n\n                System.out.println(r);\n\n\n\n            }\n\n\n        }\n\n        catch(Exception e) {\n            System.out.println(e);\n        }\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math \nfrom collections import defaultdict\n \nfor _ in range(ri()):\n    n=ri()\n    l=ria()\n    l.sort()\n    x=0\n    d=defaultdict(int)\n    for i in l:d[i]+=1\n    k=list(d.keys())\n    v=list(d.values())\n    a=[]\n    b=[]\n    for i in range(len(k)):\n        if v[i]>1:\n            a.append(k[i])\n            b.append(k[i])\n        elif v[i]==1:\n               a.append(k[i])\n    for i in range(101):\n        if i not in a:\n            x+=i\n            break\n    for i in range(101):\n        if i not in b:\n            x+=i\n            break\n    wi(x)\n"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfor test in range(T):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    lval = 0\n    rval = 0\n    for i in range(n):\n        if a[i]==lval and rval==lval+1:\n            lval+=1\n        if a[i]==rval:\n            rval+=1\n    print(lval+rval)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Soltuion\n{\n       public static void main(String []args)\n       {\n              Scanner sc = new Scanner(System.in);\n              int t = sc.nextInt();\n              while(t-- > 0)\n              {\n                     \n              \n              int n = sc.nextInt();\n              int arr[] = new int[n];\n              boolean is = false;\n              for(int i = 0 ; i < n ; i++)\n              {\n                     arr[i] = sc.nextInt();\n                     if(arr[i] == 0)\n                     is = true;\n              }\n              \n              if(!is)\n              System.out.println(0);\n              \n              else\n              {\n                     int tot = n;\n                     int sum = 0;\n                     int curr = 0;\n                     while(tot > 0)\n                     {\n                            boolean found = false;\n                            for(int i = 0 ; i < n ; i++)\n                            {\n                                   if(arr[i] == curr)\n                                   {\n                                      curr++;    \n                                      arr[i] = -1;\n                                      tot--;\n                                      found = true;\n                                      break;\n                                   }\n                                   \n                                   \n                            }\n                            if(!found)\n                            {\n                                   sum += curr;\n                            break;\n                            }\n                            \n                            if(tot == 0)\n                            {\n                                   sum += curr;\n                                   break;\n                            }\n                     }\n                    \n                     curr = 0;\n                     while(tot > 0)\n                     {\n                            boolean found = false;\n                            for(int i = 0 ; i < n ; i++)\n                            {\n                                   if(arr[i] == curr)\n                                   {\n                                      curr++;    \n                                      arr[i] = -1;\n                                      tot--;\n                                      found = true;\n                                      break;\n                                   }\n                                   \n                                  \n                            }\n                            if(!found)\n                            {\n                                   sum += curr;\n                            break;\n                            }\n                            \n                             if(tot == 0)\n                            {\n                                   sum += curr;\n                                   break;\n                            }\n                     }\n                     System.out.println(sum);\n              }\n              }\n              \n              \n       }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/stack:247474112\")\n#pragma GCC optimize(\"Ofast\")\nusing namespace std;\nvoid solve() {\n  long long n;\n  cin >> n;\n  multiset<long long> m;\n  for (long long i = 0; i < n; ++i) {\n    long long first;\n    cin >> first;\n    m.insert(first);\n  }\n  long long first = 0;\n  while (m.find(first) != m.end()) {\n    m.erase(m.find(first));\n    ++first;\n  }\n  long long ans = first;\n  first = 0;\n  while (m.find(first) != m.end()) {\n    m.erase(m.find(first));\n    ++first;\n  }\n  ans += first;\n  cout << ans << '\\n';\n}\nint32_t main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int,input().split()))\n    d = {}\n    for i in c:\n        d.setdefault(i,0)\n        d[i]+=1\n    #print(d)\n    c = sorted(set(c))\n    #print(c)\n    r,i = 0,0\n    ans = []\n    a1,a2 = -1,-1\n    while i < len(c): \n        if c[i] != r:\n            a1 = r\n            break\n        i+=1\n        r+=1\n    if a1 == -1:\n        a1 = r\n    a2 = r\n    i = 0\n    r= 0\n    while i < len(c):\n        if c[i] == r and d[c[i]] <=1:\n            a2 =  c[i]\n            break\n        \n        i+=1\n        r+=1\n    \n    print(a1+a2)\n                \n            \n            "
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n * Accomplished using the EduTools plugin by JetBrains https://plugins.jetbrains.com/plugin/10081-edutools\n */\n\npublic class Main {\n   public static void main(String[] args) {\n      Scanner sc = new Scanner(System.in);\n      int t = sc.nextInt();\n      for (int i = 0; i < t; i++) {\n         int n = sc.nextInt();\n         int[] a = new int[n];\n         for (int j = 0; j < n; j++) {\n            a[j] = sc.nextInt();\n         }\n         System.out.println(maxMex(a));\n      }\n   }\n\n   private static int maxMex(int[] a) {\n      Arrays.sort(a);\n      if (a[0] > 0) return 0;\n      int mexA = 0;\n      int mexB = 0;\n      for (int i = 0; i < a.length; i++) {\n         if (a[i] == mexA) {\n            mexA++;\n         } else if (a[i] == mexB) {\n            mexB++;\n         }\n      }\n      return mexA + mexB;\n   }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n        for (int tc = 0; tc < t; ++tc) {\n            int n = sc.nextInt();\n            int[] a = new int[n];\n            for (int i = 0; i < n; ++i) {\n                a[i] = sc.nextInt();\n            }\n\n            System.out.println(solve(a));\n        }\n\n        sc.close();\n    }\n\n    static int solve(int[] a) {\n        Map<Integer, Integer> valueToCount = new HashMap<>();\n        for (int value : a) {\n            valueToCount.put(value, valueToCount.getOrDefault(value, 0) + 1);\n        }\n\n        int result = 0;\n        for (int i = 0; i < 2; ++i) {\n            int mex = 0;\n            while (valueToCount.getOrDefault(mex, 0) != 0) {\n                valueToCount.put(mex, valueToCount.get(mex) - 1);\n                ++mex;\n            }\n\n            result += mex;\n        }\n\n        return result;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    a.sort()\n    s1=set()\n    s2=set()\n    for i in a:\n        if i not in s1:\n            s1.add(i)\n        elif i not in s2:\n            s2.add(i)\n\n    c=0\n    for i in s1:\n        if i!=c:\n            break\n        else:\n            c+=1\n\n    c2=0\n\n    for i in s2:\n        if i!=c2:\n            break\n        else:\n            c2+=1\n    print(c+c2)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split(\" \")))\n\n    arr.sort()\n    mexA = set()\n    mexB = set()\n    for i in range(n):\n        if arr[i] not in mexA:\n            mexA.add(arr[i])\n        else:\n            mexB.add(arr[i])\n    s = 0\n    for id,val in enumerate(mexA): \n        if id != val:\n            s += id\n            break\n    else:\n        s += len(mexA)\n    for id,val in enumerate(mexB): \n        if id != val:\n            s += id\n            break\n    else:\n        s += len(mexB)\n    print(s)\n    t -= 1\n\n\n\n\n    \n    \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int M = 1000000007;\nlong long int gcd(long long int a, long long int b) {\n  return (b == 0) ? a : gcd(b, a % b);\n}\nbool isprime(long long int p) {\n  if (p == 1) return false;\n  if (p == 2) return true;\n  if (p % 2 == 0) return false;\n  for (long long int i = 3; i <= sqrt(p); i += 2) {\n    if (p % i == 0) return false;\n  }\n  return true;\n}\nbool compare(pair<long long int, long long int> p1,\n             pair<long long int, long long int> p2) {\n  return p1.second < p2.second;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t = 1;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    long long int a[n];\n    for (long long int i = 0; i < n; i++) cin >> a[i];\n    long long int m1, m2;\n    map<long long int, long long int> m;\n    for (long long int i = 0; i < n; i++) {\n      m[a[i]] += 1;\n    }\n    long long int i = 0;\n    while (1) {\n      if (m[i] >= 2) {\n        i++;\n      } else {\n        m1 = i;\n        break;\n      }\n    }\n    i = 0;\n    while (1) {\n      if (m[i] >= 1) {\n        i++;\n      } else {\n        m2 = i;\n        break;\n      }\n    }\n    cout << m1 + m2 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n=int(input())\n    arr = list(map(int, input().split()))\n\n    arr=sorted(arr)\n    c=Counter(arr)\n    ls=[]\n    a=[]\n    for i in c:\n        if c[i]==1:\n            ls.append(i)\n        else:\n            ls.append(i)\n            a.append(i)\n    ans=0\n    f=0\n    f1=0\n    \n    for i in range(101):\n        if f==0 and i not in ls:\n            ans+=i\n            f=1\n        if f1==0 and i not in a:\n            ans+=i\n            f1=1\n        if f==1 and f1==1:\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    cnt=[0]*102\n    for i in a:\n        cnt[i]+=1\n    ind1=0\n    ind2=0\n    flag=2\n    # print(cnt)\n    for i in range(101):\n        if (cnt[i]<=1) and flag==2:\n            ind2=i\n            flag-=1\n        if cnt[i]==0 and flag==1:\n            ind1=i\n            flag=0\n    print(ind1+ ind2)        \n            \n    "
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    Satwik_Tiwari ;) .\n    12th Sept , 2020  - Saturday\n\"\"\"\n\n#===============================================================================================\n#importing some useful libraries.\nfrom __future__ import division, print_function\n\nfrom fractions import Fraction\nimport sys\nimport os\nfrom io import BytesIO, IOBase\n\nfrom itertools import *\nimport bisect\nfrom heapq import *\nfrom math import *\nfrom copy import *\nfrom collections import deque\nfrom collections import Counter as counter  # Counter(list)  return a dict with {key: count}\nfrom itertools import combinations as comb # if a = [1,2,3] then print(list(comb(a,2))) -----> [(1, 2), (1, 3), (2, 3)]\nfrom itertools import permutations as permutate\nfrom bisect import bisect_left as bl\n\n#If the element is already present in the list,\n# the left most position where element has to be inserted is returned.\n\nfrom bisect import bisect_right as br\nfrom bisect import bisect\n\n#If the element is already present in the list,\n# the right most position where element has to be inserted is returned\n\n#==============================================================================================\n#fast I/O region\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n# inp = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n#===============================================================================================\n### START ITERATE RECURSION ###\nfrom types import GeneratorType\ndef iterative(f, stack=[]):\n  def wrapped_func(*args, **kwargs):\n    if stack: return f(*args, **kwargs)\n    to = f(*args, **kwargs)\n    while True:\n      if type(to) is GeneratorType:\n        stack.append(to)\n        to = next(to)\n        continue\n      stack.pop()\n      if not stack: break\n      to = stack[-1].send(to)\n    return to\n  return wrapped_func\n#### END ITERATE RECURSION ####\n\n#===============================================================================================\n#some shortcuts\n\nmod = 1000000007\ndef inp(): return sys.stdin.readline().rstrip(\"\\r\\n\") #for fast input\ndef out(var): sys.stdout.write(str(var))  #for fast output, always take string\ndef lis(): return list(map(int, inp().split()))\ndef stringlis(): return list(map(str, inp().split()))\ndef sep(): return map(int, inp().split())\ndef strsep(): return map(str, inp().split())\n# def graph(vertex): return [[] for i in range(0,vertex+1)]\ndef zerolist(n): return [0]*n\ndef nextline(): out(\"\\n\")  #as stdout.write always print sring.\ndef testcase(t):\n    for pp in range(t):\n        solve(pp)\ndef printlist(a) :\n    for p in range(0,len(a)):\n        out(str(a[p]) + ' ')\ndef google(p):\n    print('Case #'+str(p)+': ',end='')\ndef lcm(a,b): return (a*b)//gcd(a,b)\ndef power(x, y, p) :\n    res = 1     # Initialize result\n    x = x % p  # Update x if it is more , than or equal to p\n    if (x == 0) :\n        return 0\n    while (y > 0) :\n        if ((y & 1) == 1) : # If y is odd, multiply, x with result\n            res = (res * x) % p\n\n        y = y >> 1      # y = y/2\n        x = (x * x) % p\n    return res\ndef ncr(n,r): return factorial(n)//(factorial(r)*factorial(max(n-r,1)))\ndef isPrime(n) :\n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) :\n        if (n % i == 0 or n % (i + 2) == 0) :\n            return False\n        i = i + 6\n    return True\n\n#===============================================================================================\n# code here ;))\n\n\ndef solve(case):\n    n = int(inp())\n    a = lis()\n\n    ans = []\n    for i in range(101):\n        if(len(ans) == 2):\n            break\n        cnt = a.count(i)\n        if(cnt>1):\n            continue\n        if(cnt == 0):\n            ans.append(i)\n            if(len(ans) == 2):\n                continue\n            ans.append(i)\n        else:\n            if(len(ans)==1):\n                continue\n            ans.append(i)\n    mx = max(a)\n    if(len(ans) == 1):\n        if(a.count(mx) == 1):\n            print(ans[0]+mx)\n        else:\n            print(ans[0]+mx+1)\n    elif(len(ans) == 0):\n        print(2*(mx+1))\n    else:\n        print(sum(ans))\n\n\n\n\n\n\n# testcase(1)\ntestcase(int(inp()))\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfrom collections import deque\nfrom sys import stdin\nfrom bisect import *\nfrom heapq import *\nimport math\n\ng   = lambda : stdin.readline().strip()\ngl  = lambda : g().split()\ngil = lambda : [int(var) for var in gl()]\ngfl = lambda : [float(var) for var in gl()]\ngcl = lambda : list(g())\ngbs = lambda : [int(var) for var in g()]\nmod = int(1e9)+7\ninf = float(\"inf\")\n\n\nt, = gil()\n\nfor _ in range(t):\n\tn, = gil()\n\ta = gil()\n\tb = Counter(a)\n\tans = []\n\tfor i in range(max(a)+2):\n\t\tif i not in b :\n\t\t\tans.append(i)\n\t\t\tbreak\n\n\tb[i] = 1\n\n\tfor i in range(max(a)+2):\n\t\tif i not in b or b[i] <= 1:\n\t\t\tans.append(i)\n\t\t\tbreak\n\n\n\n\tprint(ans[0]+ans[1])\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst int N = 1e2 + 10;\nint a[N], cont[N];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      cont[a[i]]++;\n    }\n    int ans = 0;\n    bool ok1 = true, ok2 = true;\n    for (int i = 0; i <= 100; i++) {\n      if (ok1 and cont[i] == 0) {\n        ans += i;\n        ok1 = false;\n      }\n      if (ok2 and cont[i] <= 1) {\n        ans += i;\n        ok2 = false;\n      }\n    }\n    cout << ans << '\\n';\n    for (int i = 0; i < n; i++) cont[a[i]] = 0;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(nList):\n    mex = 0\n    for i in nList:\n        if i<=mex:\n            mex += 1\n    if mex == max(nList):\n        return mex+1\n    else:\n        return mex\n\n\nt=int(input())\nwhile(t>0):\n    t=t-1\n    n=int(input())\n    lst=[]\n    lst=input().split()\n    ar=[]\n    cnt=[0]*101\n    for i in range(n):\n        ar.append(int(lst[i]))\n        cnt[ar[i]]+=1\n    x=0\n    y=0\n    for i in range(0,101):\n        if(cnt[i]>0):\n            x=i+1\n            cnt[i]-=1\n        else:\n            break\n    for i in range(0,101):\n        if(cnt[i]>0):\n            y=i+1\n            cnt[i]-=1\n        else:\n            break\n    print(x+y)"
        },
        {
            "language": 3,
            "solution": "\nfrom collections import Counter\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=list(map(int,input().split()))\n    d=dict(Counter(s))\n    ma=0\n    mb=0\n    mbvisited=False\n    for x in range(101):\n        if x not in d:\n            ma=x\n            if mbvisited==False:\n                mb=x\n            break\n        if d[x]==1 and mbvisited==False:\n            mb=x\n            mbvisited=True\n    print(ma+mb)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    ara = list(map(int, input().strip().split()))\n\n    ara.sort()\n\n    a = set()\n    b = set()\n\n    a.add(ara[0])\n\n    for i in range(1, n):\n        if ara[i] == ara[i - 1]:\n            b.add(ara[i])\n        else:\n            a.add(ara[i])\n\n    ans = count = flag = 0\n\n    for i in a:\n        if i == count:\n            count += 1\n            flag = 1\n        else:\n            ans += count\n            flag = 0\n            break\n\n    if flag == 1:\n        ans += count\n\n    count = flag = 0\n\n    for i in b:\n        if i == count:\n            count += 1\n            flag = 1\n        else:\n            ans += count\n            flag = 0\n            break\n\n    if flag == 1:\n        ans += count\n\n    print(ans)\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\ndef INPUT():return list(int(i) for i in stdin.readline().split())\ndef inp():return stdin.readline()\ndef out(x):return stdout.write(x)\nimport math\nimport random\nimport sys\n#============================================================\nfor _ in range(int(input())):\n    n=int(input())\n    A=INPUT()\n    F=[0]*101\n    for i in range(n):\n        F[A[i]]+=1\n    i=0\n    #print(F[0:10])\n    while(F[i]>0):\n        i+=1\n    first=i\n    j=0\n    while(F[j]!=1 and F[j]!=0):\n        j+=1\n    second=j\n    print(first+second)\n    #print()\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = dict()\n    for i in a:\n        if x.get(i, 0) == 0:\n            x[i] = 1\n        else:\n            x[i] += 1\n    b = set(a)\n    ans = 0\n    for i in range(101):\n        if i not in b:\n            ans += i\n            break\n    for i in range(101):\n        if x.get(i, 0) < 2:\n            ans += i\n            print(ans)\n            break"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math, sys\nfrom itertools import permutations, combinations\nfrom collections import defaultdict, deque, OrderedDict, Counter\nfrom os import path\nimport bisect as bi\nimport heapq\n\n\ndef yes(): print('YES')\n\n\ndef no(): print('NO')\n\n\nif (path.exists('input.txt')):\n    # ------------------Sublime--------------------------------------#\n    sys.stdin = open('input.txt', 'r');\n    sys.stdout = open('output.txt', 'w');\n\n\n    def inp():\n        return (int(input()))\n\n\n    def minp():\n        return (map(int, input().split()))\nelse:\n    # ------------------PYPY FAst I/o--------------------------------#\n    def inp():\n        return (int(stdin.readline()))\n\n\n    def minp():\n        return (map(int, stdin.readline().split()))\n\nfor _ in range(inp()):\n    n = inp()\n    a = list(minp())\n    if 0 not in a:\n        print(0)\n        continue\n    a.sort()\n    if a.count(0) == 1:\n        for i in range(n + 1):\n            if i not in a:\n                flag = i\n                break\n        print(flag)\n        continue\n    flag = False\n    for i in range(n + 1):\n        if i not in a:\n            t1 = 2 * i\n            break\n        elif a.count(i) == 1:\n            flag = True\n            t1 = i\n            break\n    t2 = 0\n    if flag:\n        for i in range(t2,n + 1):\n            if i not in a:\n                t2 = i\n                break\n    print(t1 + t2)\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    d = defaultdict(int)\n    for i in a:\n        d[i]+=1\n    s = 0\n    for j in range(2):\n        for i in range(101):\n            if d[i]>0:\n                d[i]-=1\n            else:\n                s+=i\n                break\n    print(s)"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.PrintWriter;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class A {\n  public static PrintWriter out = new PrintWriter(System.out);\n  public static Scanner in = new Scanner(System.in);\n\n  public static void main(String[] args) {\n    int t = ni();\n    while (t-- > 0) solve();\n    out.flush();\n  }\n\n  private static void solve() {\n    int n = ni();\n    LinkedList<Integer> a = new LinkedList<>();\n    for (int i = 0; i < n; i++) {\n      a.add(ni());\n    }\n    HashSet<Integer> set = new HashSet<>(a);\n    for (int x : set) {\n      a.removeFirstOccurrence((Integer) x);\n    }\n    System.out.println(mex(set) + mex(new HashSet<>(a)));\n  }\n\n  static int mex(HashSet<Integer> a) {\n    int mex = 0;\n    while (a.contains(mex)) mex++;\n    return mex;\n  }\n\n  private static int ni() {\n    return in.nextInt();\n  }\n  /*k,*/\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++) a[i] = ni();\n    return a;\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++) a[i] = nl();\n    return a;\n  }\n\n  private static long nl() {\n    return in.nextLong();\n  }\n\n  private float nf() {\n    return in.nextFloat();\n  }\n\n  private static double nd() {\n    return in.nextDouble();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    a = []\n    b = []\n    ar.sort()\n    if ar[0] == 0:\n        a.append(ar[0])\n    else:\n        print(0)\n        continue\n    for i in ar[1:]:\n        if i == a[-1] + 1:\n            a.append(i)\n        elif len(b) == 0 and i == 0:\n            b.append(i)\n        elif len(b) > 0 and i == b[-1]+1:\n            b.append(i)\n    if len(a) == 0:\n        aa = 0\n    else:\n        aa = a[-1] + 1\n    if len(b) == 0:\n        bb = 0\n    else:\n        bb = b[-1] + 1\n    print(aa + bb)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n input();a=[*map(int,input().split())];b=c=0\n while a.count(c)>1:b+=1;c+=1\n while a.count(c):c+=1\n print(b+c)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n\n    d = {}\n    for i in x:\n        d[i] = d.get(i, 0) + 1\n\n    a, b = 0, 0\n    while d.get(a, 0) != 0:\n        if d.get(a, 0) >= 2 and a == b:\n            b += 1\n        a += 1\n\n    print(a + b)\n\n"
        },
        {
            "language": 3,
            "solution": "def computeGCD(x, y): \n   while(y): \n       x, y = y, x % y \n   return x \nfor _ in range(int(input())):\n    n=int(input())\n    arr=[int(j) for j in input().split()]\n    arr.sort()\n    dic=dict()\n    # count=[0]*(101)\n    for i in range(0,101):\n        dic[i]=0\n    for i in arr:\n        dic[i]+=1\n    ans=0\n    flag=0\n    # print(dic)\n    for i in dic:\n        if dic[i]>=2:\n            continue\n        elif dic[i]==1 and flag==0:\n            ans+=i\n            flag=1\n            \n        elif flag==0 and dic[i]==0:\n            ans=2*i\n            break\n        elif flag==1 and dic[i]==1:\n            continue\n        elif flag==1 and dic[i]==0:\n            ans+=i\n            break\n\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Round_670D2P1 {\n    static final FS sc = new FS();\n    static final PrintWriter pw = new PrintWriter(System.out);\n\n    public static void main(String[] args) {\n        int t = sc.nextInt();\n        while(t-->0){\n            int n = sc.nextInt();\n            int[] a = sc.nextArray(n);\n            int[] sol = new int[101];\n            for(int i = 0; i<n; i++){\n                sol[a[i]]++;\n            }\n            /*for(int i=0; i<100; i++){\n                System.out.print(i+\" \");\n            }*/\n            //System.out.println(Arrays.toString(sol));\n            int firstLess = -1, notOcc = -1;\n            for(int i=0; i<=100; i++){\n                if(i==0 && sol[i]==0){\n                    firstLess = 0;\n                    notOcc = 0;\n                }\n                if(sol[i]==1 && firstLess==-1){\n                    firstLess = i;\n                }\n                if(sol[i]==0 && notOcc==-1){\n                    notOcc = i;\n                }\n                if(notOcc!=-1 && firstLess==-1){\n                    firstLess = i;\n                }\n                if(notOcc!=-1 && firstLess!=-1){\n                    break;\n                }\n            }\n            System.out.println(firstLess+notOcc);\n        }\n    }\n\n    static class FS {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception ignored) {\n                }\n            }\n            return st.nextToken();\n        }\n\n        int[] nextArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "\n# Author : raj1307 - Raj Singh\n# Date   : 12.09.2020\n\nfrom __future__ import division, print_function\n\nimport os,sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef ii():  return int(input())\ndef si():  return input()\ndef mi():  return map(int,input().strip().split(\" \"))\ndef msi(): return map(str,input().strip().split(\" \"))\ndef li():  return list(mi())\n\ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import log,sqrt,factorial,cos,tan,sin,radians\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *\n#import threading\n#from itertools import permutations\n#Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\n\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\ndef getKey(item): return item[1] \ndef sort2(l):return sorted(l, key=getKey,reverse=True)\ndef d2(n,m,num):return [[num for x in range(m)] for y in range(n)]\ndef isPowerOfTwo (x): return (x and (not(x & (x - 1))) )\ndef decimalToBinary(n): return bin(n).replace(\"0b\",\"\")\ndef ntl(n):return [int(i) for i in str(n)]\ndef ncr(n,r): return factorial(n)//(factorial(r)*factorial(max(n-r,1)))\n\ndef ceil(x,y):\n    if x%y==0:\n        return x//y\n    else:\n        return x//y+1\n\ndef powerMod(x,y,p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y&1:\n            res = (res*x)%p\n        y = y>>1\n        x = (x*x)%p\n    return res\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n    \ndef isPrime(n) : # Check Prime Number or not \n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n\n\n\ndef read():\n    sys.stdin  = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n\n\n\n\n\n\ndef main():\n    \n    \n    for _ in range(ii()):\n        \n            \n        n=ii()\n\n        a=li()\n\n        f=[0]*105\n\n        for i in range(n):\n            f[a[i]]+=1\n\n\n        f1=0\n        f2=0\n\n        ans=0\n\n\n        for i in range(101):\n\n            if f1 and f2:\n                break\n\n\n            if f[i]==0:\n\n                if f1==0:\n                    ans+=i\n                    f1=1\n\n                if f2==0:\n                    ans+=i\n                    f2=1\n\n            else:\n\n                if f[i]==1:\n\n                    if f2==0:\n                        f2=1\n                        ans+=i\n\n                else:\n                    continue\n\n\n        print(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\n\nif __name__ == \"__main__\":\n    #read()\n    main()\n    #dmain()\n\n# Comment Read()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\t        public final class Solve {\n\t        \tstatic void solve() {\n\t        \t\t\n\t        \t}\n\t        public static void main(String args[]) throws IOException {\n\t        \tFastReader sc = new FastReader();\n\t        \tint t = sc.nextInt();\n\t        \twhile(t-- > 0 )  {\n\t        \t\tint n = sc.nextInt();\n\t        \t\tint[] arr = sc.readIntArray(n);\n\t        \t\tint[] te = new int[101];\n\t        \t\tfor(int i = 0;i<n;i++) {\n\t        \t\t\tte[arr[i]]++;\n\t        \t\t}\n\t        \t\t\n\t        \t\tint nu = 0;\n\t        \t\tfor(int i= 0;i<te.length;i++) {\n\t        \t\t\tif(te[i] == 0) {\n\t        \t\t\t\tnu += i;\n\t        \t\t\t\tbreak;\n\t        \t\t\t}\n\t        \t\t\telse te[i] -= 1;\n\t        \t\t}\n\t        \t\tfor(int i = 0;i<te.length;i++) {\n\t        \t\t\tif(te[i] == 0 ) {\n\t        \t\t\t\tnu += i;\n\t        \t\t\t\tbreak;\n\t        \t\t\t}\n\t        \t\t\telse te[i] -= 1;\n\t        \t\t}\n\t        \t\t\n\t        \t\tpn(nu);\n\t        \t}\n\t       }\n\t       static void p(Object p){System.out.print(p);}\n\t       static void pn(){System.out.println();}\n\t       static void pn(Object o){System.out.println(o);}\n\t       \n\t       static class FastReader {\n\t       static BufferedReader br;\n\t       StringTokenizer st;\n\t       public FastReader() {\n\t       br = new BufferedReader(new InputStreamReader(System.in));\n\t       }\n\t            \n\t       String next(){\n\t       while (st == null || !st.hasMoreElements()) {\n\t            try{\n\t                st = new StringTokenizer(br.readLine());\n\t            }\n\t            catch (IOException  e) {\n\t                e.printStackTrace();\n\t            }}\n\t            return st.nextToken();\n\t            }\n\t            \n\t            int nextInt(){ \n\t                return Integer.parseInt(next());\n\t            }\n\t            \n\t            long nextLong(){ \n\t                return Long.parseLong(next());\n\t            }\n\t            \n\t            static int max(int[] a){\n\t            int max = Integer.MIN_VALUE;\n\t            for(int i : a) max = Math.max(max, i);\n\t            return max;\n\t            }\n\t            \n\t            public int[] readIntArray(int n) {\n\t            int[] arr = new int[n];\n\t            for(int i=0; i<n; ++i) arr[i]=nextInt();\n\t            return arr;\n\t            }\n\t            \n\t            public long[] readLongArray(int n){\n\t            long[] arr = new long[n];\n\t            for(int i=0; i<n; ++i) arr[i]=nextLong();\n\t            return arr;\n\t            }\n\t            \n\t            public int[][] readIntArray(int m, int n){\n\t            int[][] arr = new int[m][n];\n\t            for(int i = 0;i<m;i++) \n\t            for(int j = 0;j<n;j++) arr[i][j] = nextInt();\n\t            return arr;\n\t            }\n\t            \n\t            public String[] readStringArray(int n) {\n\t            String[] arr = new String[n];\n\t            for(int i=0; i<n; ++i) arr[i]= nextLine();\n\t            return arr;\n\t            }\n\t            \n\t            double nextDouble() {return Double.parseDouble(next());}\n\t            \n\t            String nextLine() {\n\t            String str = \"\";\n\t            try{str = br.readLine();}\n\t            catch (IOException e) {e.printStackTrace();}\n\t            return str;}}\n\t        }"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor z in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    max_index = max(l) + 1\n    freq = [0]*102\n    for i in l:\n        freq[i] += 1\n    first = 0\n    while(freq[first]>1):\n        first += 1\n    sec = first\n    while(freq[sec]>0):\n        sec += 1\n    print(sec+first)\n    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=[]\n    ano=[]\n    l=map(int,input().split())\n    u=[]\n    l=sorted(l)\n    #l=list(set(l))\n    for i in l:\n        if i not in ano:\n            ano.append(i)\n        else:\n            if i not in u:\n                u.append(i)\n        \n    #print(ano,u)\n    flag=0\n    ans=0\n    ano=sorted(ano)\n    u=sorted(u)\n    if(len(ano)!=0):\n        for i in range(len(ano)):\n            #print(i,ano[i])\n            if(i!=ano[i]):\n                flag=1\n                ans=i\n                break\n        if(flag==0):\n            ans=i+1\n    else:\n        ans=0\n    #ans=0\n    flag=0\n    if(len(u)!=0):\n        for i in range(len(u)):\n            if(i!=u[i]):\n                flag=1\n                ans+=i\n                break\n        if(flag==0):\n            ans+=i+1\n    else:\n        ans+=0\n        \n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    am = int(input())\n    arr = list(map(int,input().split()))\n    arr.sort()\n    counter = [0]*(max(arr)+2)\n\n    for i in range(am):\n        counter[arr[i]]+=1\n    arr1 = [0]*(max(arr)+2)\n    arr2 = [0]*(max(arr)+2)\n    for i in range(len(counter)):\n        if counter[i] > 0:\n            arr1[i] = 1\n        if counter[i] > 1:\n            arr2[i] = 1\n    s = 0\n\n    for i in range(len(arr1)):\n        if arr1[i] == 0:\n            s+=i\n            break\n    for i in range(len(arr2)):\n        if arr2[i] == 0:\n            s+=i\n            break\n    print(s)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys \nimport math\nfrom collections import Counter,defaultdict\nLI=lambda:list(map(int,input().split()))\nMAP=lambda:map(int,input().split())\nIN=lambda:int(input())\nS=lambda:input()\n\ndef case():\n    n = IN()\n    a = LI()\n    d = Counter(a)\n    ans = 0\n    b = set(a)\n    for i in range(101):\n        if i not in b:\n            ans+=i\n            break\n    for i in range(101):\n        if d[i]<2:\n            ans+=i\n            break\n    print(ans)\nfor _ in range(IN()):\n    case()\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t:\n    t-=1\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict()\n    for i in l:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i]+=1\n    one = None\n    two = None\n    for i in range(102):\n        if i not in d:\n            one = i\n            break\n        elif d[i]==1:\n            d.pop(i)\n    for i in range(102):\n        if i not in d:\n            two = i\n            break\n        # print(i, one, two, d)\n    # print(one, two)\n    print(one+two)"
        },
        {
            "language": 3,
            "solution": "from collections import *\nfor _ in range(int(input())):\n    n = int(input())\n    l = [*map(int,input().split())]\n    l.sort()\n    dic = Counter(l)\n    arr = set()\n    array = set()\n    for i in range(0,101):\n        if i in dic and dic[i] > 1:\n            arr.add(i)\n            array.add(i)\n        elif i in dic:\n            arr.add(i)\n    ans = -1\n    for i in range(0,101):\n        if i not in arr:\n            ans = i\n            break\n    if ans == -1:\n        ans = 101\n    val = ans\n    flag = False\n    for i in range(0,101):\n        if i not in array:\n            ans += i\n            flag = True\n            break\n    if ans == val and not flag:\n        ans += 101\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput= sys.stdin.readline\ndef print(val):\n    sys.stdout.write(str(val) + '\\n')\ndef prog():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int,input().split()))\n        counts = [0]*(101)\n        for i in range(n):\n            counts[a[i]] += 1\n        best2 = 0\n        best1 = 0\n        stopped = False\n        for i in range(101):\n            if counts[i] == 0:\n                break\n            else:\n                if counts[i] >= 1:\n                    best1 += 1\n                if counts[i] == 1:\n                    stopped = True\n                if counts[i] > 1 and not stopped:\n                    best2 += 1\n        print(best1 + best2)  \nprog()\n        \n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Aug  5 20:01:40 2020\n\n@author: siddh\n\"\"\"\n\ndef sid():\n    f=1\n    for i in range(10):\n        f=0\n    a=[1,2]\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    \n    \n    l=list(map(int,input().split()))\n    l.sort()\n    c={}\n    for x in l:\n        if(x in c):\n            c[x]+=1\n        else:\n            c[x]=1\n    ptr=0\n    ans=0\n    \n    \n    f=0\n    for k,v in c.items():\n        if(k==ptr and f==0):\n            if(v==1):\n                ans+=ptr\n                f=1\n                \n        elif(k!=ptr):\n            break\n        ptr+=1\n    if(f==1):\n        \n        ans+=ptr\n    else:\n        ans+=2*ptr\n    print(ans)\n                \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    dic = dict()\n    ans = 0\n    flag = 0\n    for i in a:\n        if i in dic:\n            dic[i] = dic[i] + 1\n        else:\n            dic[i] = 1\n    for i in range(max(a)+2):\n        if i not in dic:\n            if flag == 0:\n                ans = 2*i\n                break\n            ans = ans +i\n            break\n        elif dic[i] == 1 and flag == 0:\n            ans = ans + i\n            flag = 1\n    print(ans)\n    t -= 1\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l = [int(x) for x in input().split()]\n    d = {}\n    m = 0\n    ans = 0\n    for i in l:\n        d[i] = 1 if i not in d else d[i]+1\n        m = max(m,i)\n    for i in range(m + 2):\n        if i in d and d[i]>0:\n            d[i] -= 1\n        else:\n            ans += i\n            break\n    for i in range(m + 2):\n        if i in d and d[i]>0:\n            d[i] -= 1\n        else:\n            ans += i\n            break\n    print(ans)\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, l, a, b = int(input()), list(map(int, input().split())), 0, 0\n    lis=sorted(l)\n    for i in lis:\n        if a == i:\n            a += 1\n        elif b == i:\n            b += 1\n    print(a + b)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    # n = int(input())\n    n = input()\n    if not n:\n        n = input()\n\n    arr = input()\n    if not arr:\n        arr = input()\n    arr = list(map(int, arr.split(\" \")))\n    d = {}\n    for i in arr:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n\n    # print(\"poinn A\")\n    i = 0\n    a = 0\n    b = 0\n    while True:\n        if i in d:\n            if d[i] >= 2:\n                a += 1\n                b += 1\n            else:\n                break\n            i += 1\n        else:\n            break\n\n    # print(\"point B\")\n    while True:\n        if i in d:\n            b += 1\n        else:\n            break\n        i += 1\n\n    # print(\"point c\")\n\n    print(a + b)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e4 + 20;\nconst int mod = 1e9 + 7;\nint n, m;\nint a[maxn];\ninline int read() {\n  int x = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = (x << 3) + (x << 1) + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nint main() {\n  int t = read();\n  while (t--) {\n    int now, tent = 0;\n    n = read();\n    for (register int i = 0, _r = 100; i <= _r; ++i) a[i] = 0;\n    for (register int i = 1, _r = n; i <= _r; ++i) now = read(), a[now]++;\n    for (register int i = 0, _r = 102; i <= _r; ++i)\n      if (a[i])\n        a[i]--;\n      else {\n        tent += i;\n        break;\n      }\n    for (register int i = 0, _r = 102; i <= _r; ++i)\n      if (a[i])\n        a[i]--;\n      else {\n        tent += i;\n        break;\n      }\n    cout << tent << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class B {\n\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc = new FastScanner();\n\t\tint t = sc.nextInt();\n\t\tfor(int tt =0 ;tt < t ;tt++) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint a[] = new int[101];\n\t\t\tfor(int i = 0 ; i  < n ;i++) {\n\t\t\t\tint p = sc.nextInt();\n\t\t\t\ta[p]++;\n\t\t\t}\n\t\t\tint ans = 0;\n\t\t\tfor(int i = 0 ; i <= 101 ; i++) {\n\t\t\t\tif(a[i] != 0) {\n\t\t\t\t\ta[i]--;\n\t\t\t\t}else {\n\t\t\t\t\tans += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0 ; i <= 101 ; i++) {\n\t\t\t\tif(a[i] != 0) {\n\t\t\t\t\ta[i]--;\n\t\t\t\t}else {\n\t\t\t\t\tans += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n\n\tstatic class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\t\n\t\tpublic String next() {\n\t\t\twhile (!st.hasMoreElements())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() {return Long.parseLong(next());}\n \n\t\tpublic double nextDouble() {return Double.parseDouble(next());}\n\t\t\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "w = int(input())\nfor a in range(w):\n    ok1=True\n    ok2=True\n    mexA=0\n    mexB=0\n    x = int(input())\n    l=list(map(int,input().split()))\n    for i in range(x):\n        if(i in l):\n            mexA=i+1\n            l.remove(i)\n            if(ok1):\n                if(i in l):\n                    mexB=i+1\n                else:\n                    resultB=i\n                    ok1=False\n        else:\n            resultA=i\n            ok2=False\n            break\n\n    if(ok1):\n        resulB=mexB\n    if(ok2):\n        resultA=mexA\n    print(mexA+mexB)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    long long ara[101] = {0};\n    for (int i = 0; i < n; i++) {\n      long long x;\n      cin >> x;\n      ara[x]++;\n    }\n    long long ans = 0;\n    long long i = 0;\n    while (ara[i] && i <= 100) {\n      ara[i]--;\n      i++;\n    }\n    ans += i;\n    i = 0;\n    while (ara[i] && i <= 100) {\n      i++;\n    }\n    ans += i;\n    cout << ans << endl;\n  }\n}\nint main() {\n  {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n  };\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n   n=int(input())\n   a=list(map(int,input().split()))[:n]\n   a.sort()\n   x=[]\n   y=[]\n   x1=[]\n   y1=[]\n   for i in range(n):\n       if(i%2==0):\n           x.append(a[i])\n       else:\n           y.append(a[i])\n   for i in range(0,101):\n       if i not in x:\n           c=i\n           break\n   for i in range(0,101):\n       if i not in y:\n           d=i\n           break\n   for i in range(0,101):\n       if i not in a:\n           z=i\n           break  \n   for i in range(n):   \n       if(x1.count(a[i])==0):\n           x1.append(a[i])\n       else:\n           y1.append(a[i])\n   for i in range(0,101):\n       if i not in x1:\n           c1=i\n           break\n   for i in range(0,101):\n       if i not in y1:\n           d1=i\n           break\n    \n   print(max(c+d,z,c1+d1))\n           "
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor z in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    a = []\n    b = []\n    sum = 0\n    for i in l:\n        if i not in a:\n            a.append(i)\n        else:\n            b.append(i)\n    for i in range(101):\n        if i not in a:\n            sum+=i\n            break\n    for i in range(101):\n        if i not in b:\n            sum+=i\n            break\n    print(sum)\n\n"
        },
        {
            "language": 3,
            "solution": "from fractions import Fraction\nimport bisect\nimport os\nimport io\nfrom collections import Counter\nimport bisect\nfrom collections import defaultdict\nimport math\nimport random\nimport heapq\nfrom math import sqrt\nimport sys\nfrom functools import reduce, cmp_to_key\nfrom collections import deque\nimport threading\nfrom itertools import combinations\nfrom io import BytesIO, IOBase\nfrom itertools import accumulate\nfrom queue import Queue\n\n\n# sys.setrecursionlimit(200000)\n# input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n\ndef iinput():\n    return int(input())\n\n\ndef tinput():\n    return input().split()\n\n\ndef rinput():\n    return map(int, tinput())\n\n\ndef rlinput():\n    return list(rinput())\n\n\nmod = int(1e9)+7\n\n\ndef factors(n):\n    return set(reduce(list.__add__,\n                      ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))\n\n\n# ----------------------------------------------------\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\n# ------------------------------------------------------------\nt = 1\nt = iinput()\nfor _ in range(t):\n    n = iinput()\n    a = rlinput()\n    count = Counter(a)\n    ans = 0\n    got = 0\n    for i in range(max(a) + 1):\n        if count[i] == 0:\n            if got == 0:\n                ans += 2 * i\n                got = 2\n                break\n            elif got == 1:\n                ans += i\n                got += 1\n        elif count[i] == 1:\n            if got == 0:\n                ans += i\n                got += 1\n        if got >= 2:\n            break\n    if got == 1:\n        ans += max(a) + 1\n    if got == 0:\n        ans += 2*(max(a) + 1)\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "def checker(a):\n  s = set(a)\n  for i in range(len(a)+1):\n      if i not in s:\n          return i\n\n \nfor _ in range(int(input())):\n    m = int(input())\n    lst = [int(i) for i in input().split()][:]\n    x = [0]*102\n    for i in set(lst):\n        x[i] = lst.count(i)\n    for i in range(len(x)):\n        if x[i] <= 1:\n            k = i\n            break\n    print(checker(lst)+ k)  "
        },
        {
            "language": 3,
            "solution": "num_cases = int(input())\n\nfor case in range(num_cases):\n    num_ints = int(input())\n    ints = input().split()\n    ints = [int(n) for n in ints]\n    ints = sorted(ints)\n\n    if ints[0] > 0:\n        ans = 0\n    else:\n        a_found = False\n        a = -1\n        for i in range(num_ints * 2):\n            count = ints.count(i)\n            if count == 0 and not a_found:\n                ans = 2 * i\n                break\n            if count == 0 and a_found:\n                ans = a + i\n                break\n            if count == 1:\n                if not a_found:\n                    a_found = True\n                    a = i\n\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=[int(x) for x in input().split()]\n    d={}\n    for i in l:\n        if i in d:\n            d[i]+=1\n        else:\n            d[i]=1\n    k=0\n    for i in range(101):\n        if i in d:\n            d[i]-=1\n        else:\n            a=i\n            break\n    for i in range(101):\n        if i in d:\n            if d[i]==0:\n                b=i\n                break\n        else:\n            b=i\n            break\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "def mex(t):\n    t.sort()\n    if len(t) == 0:\n        return 0\n    for j in range(0,len(t)):\n            if t[j] != j:\n                return j\n    if(t[len(t)-1] != len(t)):  \n        return len(t)     \n    else: return 0\n\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int , input().split()))\n    A = list()\n    B = list()\n    a.sort()\n    for i in range(len(a)):\n        for j in range(i+1,len(a)):\n            if a[i] == a[j]:\n                B.append(a[i])\n                break\n            else : continue\n    \n    a = set(a)\n    A = set(A)\n    B = set(B)\n\n    A = a - B\n    A = A | B\n    p = mex(list(A))\n    q = mex(list(B))\n    \n    \n    print(p+q)\n\n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile t>0:\n    n=int(input())\n    ls=[int (x) for x in input().split()]\n    js=[]\n    k=0\n    while k <=n:\n        for i in range(len(ls)):\n            if k==ls[i]:\n                js.append(ls[i])\n                ls.pop(i)\n                break\n        k=k+1\n    l=0\n    ls.sort()\n    ls = list(dict.fromkeys(ls))\n    for i in ls:\n        if l!=i:\n            break\n        l=l+1\n    m=0\n    for i in js:\n        if m!=i:\n            break\n        m=m+1\n    print(l+m)\n    t=t-1\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class SubsetMex {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc= new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tint f[]=new int [102];\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tf[sc.nextInt()]++;\n\t\t\tint x=0;\n\t\touter:\tfor(int i=0;i<102;i++)\n\t\t\t{\n\t\t\t\tif(f[i]<2)\n\t\t\t\t{\n\t\t\t\t\tif(f[i]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(2*i);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx=i; i++;\n\t\t\t\t\t\twhile(i<=102)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(f[i]<1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tSystem.out.println(x+i);\n\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int,input().split()))\n    has=[0]*(1000)\n    for i in lis:\n        has[i]+=1\n    fi=se=-1\n    for i in range(200):\n        if has[i]==0:\n            if fi==-1 and se==-1:\n                fi=i\n                se=i\n                break\n            elif fi!=-1:\n                se=i\n                break\n        elif has[i]==1:\n            if fi==-1:\n                fi=i\n    print(fi+se)\n            \n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nimport collections\ndef counter1(n):\n    return sorted(collections.Counter(n).items(),key = lambda x:x[0])\ndef counter2(n):\n    return sorted(collections.Counter(n).items(),key = lambda x:x[1])\nmod = 10**9+7\n\nn = int(input())\nfor i in range(n):\n    k = int(input())\n    ll = list(map(int,input().split()))\n    ll.sort()\n    A,B = [],[]\n    num = 0\n    if 0 not in ll:\n        print(0)\n    else:\n        if ll == [i for i in range(0,len(ll))]:\n            print(len(ll))\n        else:\n            result = 0\n            mm = collections.Counter(ll)\n            num = 0\n            while num in mm:\n                num += 1\n            result += num\n            num = 0\n            while mm[num] >= 2:\n                num+=1\n            result += num\n            print(result)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n   n = int(input())\n   L = sorted(list(map(int, input().split())))\n   c, t, flag = 0, None, True\n   while True:\n      if c not in L: \n         if t==None: print(2*c)\n         else: print(t+c)\n         break\n      elif L.count(c)==1 and flag:\n         t = c\n         flag = False\n      c+=1\n"
        },
        {
            "language": 3,
            "solution": "def solution(hmp,mx):\n    c=-1\n    a=0\n    b=0\n\n    for i in range(0,mx+2):\n\n        if hmp[i]==0:\n            a=i\n            c=i\n            break \n\n    for i in range(0,mx+2):\n\n        if hmp[i]<=1:\n            b=i\n            \n            break \n\n    # if c==-1:\n    #     for i in range(0,mx+2):\n\n    #         if hmp[i]<=1 and i!=b:\n    #             a=i\n    #             c=i\n    #             break \n    return a+b\n\n\n        \n  \n \nt=int(input())\n \nwhile(t>0):\n    t-=1\n    n=int(input())\n    arr=[int(x) for x in input().split()]\n    hmp=[0 for x in range(101)]\n    for a in arr:\n        hmp[a]+=1\n \n    print(solution(hmp,max(arr)))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> v(n);\n    for (int i = 0; i < n; i++) {\n      cin >> v[i];\n    }\n    sort(v.begin(), v.end());\n    int l = 0, r = 0, i;\n    int flag = 0;\n    for (i = 0; i < n; i++) {\n      if (i < n - 1) {\n        if (v[i] == v[i + 1] && v[i] == l) {\n          while (i < n && v[i] == l) {\n            i++;\n          }\n          i--;\n          l++;\n          r++;\n        } else if (v[i] == v[i + 1] && v[i] != l) {\n          flag = 1;\n          break;\n        } else {\n          break;\n        }\n      } else {\n        if (l == v[i]) l++;\n        flag = 1;\n        break;\n      }\n    }\n    if (flag == 0) {\n      while (i < n) {\n        if (l == v[i]) {\n          while (i < n && v[i] == l) {\n            i++;\n          }\n          l++;\n        } else\n          break;\n      }\n    }\n    cout << (l + r) << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\nt = int(input())\n\nwhile (t):\n\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\ta.sort()\n\n\tA,B = [],[]\n\n\tprev = a[0]\n\tcnt = 1\n\n\tfor i in range(1,n):\n\t\tif (prev == a[i]):\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tif (cnt > 0): \n\t\t\t\tA.append(prev)\n\t\t\tif (cnt > 1):\n\t\t\t\tB.append(prev)\n\t\t\tcnt = 1\n\t\t\tprev = a[i]\n\n\tif (cnt > 0): \n\t\tA.append(prev)\n\tif (cnt > 1):\n\t\tB.append(prev)\n\n\ta,b = 0,0\n\tfor x in A:\n\t\tif (a == x):\n\t\t\ta += 1\n\t\telse:\n\t\t\tbreak\n\n\tfor x in B:\n\t\tif (b == x):\n\t\t\tb += 1\n\t\telse:\n\t\t\tbreak\n\n\tprint(a+b)\n\t\t\n\n\tt -= 1\n\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nfor i in range(n):\n    l=int(input())\n    a=[int(x) for x in input().split()]\n    b=-1\n    c=-1\n    #to get first max element of regular sequence 1\n    for j in range(101):\n        if a.count(j)==0:\n            c=j\n            break    \n    #to find second sequence max elemenet as we have taken  all elements with count 1\n    #in first sequence so this time we will also take in consideration elements with count 1\n    for j in range(101):\n        if a.count(j)==1 or a.count(j)==0:\n            b=j\n            break\n    \n    print(b+c)"
        },
        {
            "language": 3,
            "solution": "\n\t\t\t\n\nT = int(input())\nfor i in range(0,T):\n\tn = int(input())\n\tarray = [int(s) for s in input().split()]\n\tarray.sort()\n\tA=[]\n\tB=[]\t\n\tfor i in range(0,len(array)):\n\t\tif(i==0):\n\t\t\tA.append(array[i]);\n\t\telse:\n\t\t\tif(array[i]==array[i-1]):\n\t\t\t\tB.append(array[i])\n\t\t\telse:\n\t\t\t\tA.append(array[i])\n\t\n\tA.sort();\n\tB.sort();\n\tvalue1 = 0;\n\tvalue2 = 0;\n\tnum=0;\n\tif(len(A)==0):\n\t\tvalue1=0;\n\telse:\n\t\tfor i in range(0,len(A)):\n\t\t\tif(A[i]==num):\n\t\t\t\tnum+=1;\n\t\tvalue1=num;\n\t\n\tnum=0;\n\tif(len(B)==0):\n\t\tvalue2=0;\n\telse:\n\t\tfor i in range(0,len(B)):\n\t\t\tif(B[i]==num):\n\t\t\t\tnum+=1;\n\t\t\t\t\n\t\tvalue2 =num;\t\n\t\n\tans = value1 +value2;\n\tprint(ans);\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    dic=[0]*101\n    for i in a:\n        dic[i]+=1\n    ans=0\n    i=0\n    while dic[i]!=0:\n        count=dic[i]\n        dic[i]-=1\n        i+=1\n    ans=i\n    i=0\n    while dic[i]!=0:\n        count=dic[i]\n        dic[i]-=1\n        i+=1\n    ans+=i \n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "t  = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    m = [0 for i in range(101)]\n    for i in a:\n        m[i] += 1\n    \n    f, s = 0, 0\n    flag = True\n    for k in range(101):\n        if m[k] >= 2:\n            if flag:\n                f += 1\n            s += 1\n        elif m[k] == 1:\n            f += 1\n            flag = False\n        else:\n            break\n    print(f + s)"
        },
        {
            "language": 3,
            "solution": "import sys,math\ninput=sys.stdin.readline\ndef findMex(l):\n    d2 = {}\n    for i in l:\n        d2[i] = 1\n    j = 0\n    while True:\n        try:\n            x = d2[j]\n            j += 1\n        except:\n            break\n    return j\nt=int(input())\nfor r in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    d = {}\n    for i in l:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    ll = []\n    for i in d:\n        ll.append([i,d[i]])\n    ll.sort(key = lambda x: x[0])\n    set1 = []\n    set2 = []\n    start = ll[0][0]\n    ll[0][1] -= 1\n    length = len(ll)\n    set1.append(start)\n    for i in range(1, length):\n        if ll[i][0] == start + 1:\n            set1.append(ll[i][0])\n            ll[i][1] -= 1\n            start = ll[i][0]\n        else:\n            break\n    for i in range(length):\n        if ll[i][1] > 0:\n            set2.append(ll[i][0])\n    ans = findMex(set1) + findMex(set2)\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    z=max(a)+2\n    b=[0]*(z+2)\n    t=0\n    # 2 2 1 \n    for i in a:\n        b[i]+=1\n    for i in range(z):\n        if b[i]<=0:\n            t=i\n            for j in range(i):b[j]-=1\n            for j in range(z):\n                if b[j]<=0:\n                    t+=j\n                    break\n            break\n    print(t)"
        },
        {
            "language": 3,
            "solution": "import time,math as mt,bisect as bs,sys\nfrom sys import stdin,stdout\nfrom collections import deque\nfrom fractions import Fraction\nfrom collections import Counter\nfrom collections import OrderedDict\npi=3.14159265358979323846264338327950\ndef II(): # to take integer input\n    return int(stdin.readline())\ndef IP(): # to take tuple as input\n    return map(int,stdin.readline().split())\ndef L(): # to take list as input\n    return list(map(int,stdin.readline().split()))\ndef P(x): # to print integer,list,string etc..\n    return stdout.write(str(x)+\"\\n\")\ndef PI(x,y): # to print tuple separatedly\n    return stdout.write(str(x)+\" \"+str(y)+\"\\n\")\ndef lcm(a,b): # to calculate lcm\n    return (a*b)//gcd(a,b)\ndef gcd(a,b): # to calculate gcd\n    if a==0:\n        return b\n    elif b==0:\n        return a\n    if a>b:\n        return gcd(a%b,b)\n    else:\n        return gcd(a,b%a)\ndef bfs(adj,v): # a schema of bfs\n    visited=[False]*(v+1)\n    q=deque()\n    while q:\n        pass\ndef sieve():\n    li=[True]*(2*(10**5)+5)\n    li[0],li[1]=False,False\n    for i in range(2,len(li),1):\n        if li[i]==True:\n            for j in range(i*i,len(li),i):\n                li[j]=False\n    prime=[]\n    for i in range((2*(10**5)+5)):\n        if li[i]==True:\n            prime.append(i)\n    return prime\ndef setBit(n):\n    count=0\n    while n!=0:\n        n=n&(n-1)\n        count+=1\n    return count\nmx=10**7\nspf=[mx]*(mx+1)\ndef SPF():\n    spf[1]=1\n    for i in range(2,mx+1):\n        if spf[i]==mx:\n            spf[i]=i\n            for j in range(i*i,mx+1,i):\n                if i<spf[j]:\n                    spf[j]=i\n    return\ndef readTree(n,e): # to read tree\n    adj=[set() for i in range(n+1)]\n    for i in range(e):\n        u1,u2=IP()\n        adj[u1].add(u2)\n    return adj\n#####################################################################################\nmod=10**9+7\ndef mex(li):\n    for i in range(101):\n        if i not in li:\n            return i\n\ndef solve():\n    n=II()\n    li=L()\n    l1,l2=[],[]\n    for ele in li:\n        l1.append(ele)\n        if li.count(ele)>1:\n            l2.append(ele)\n    print(mex(l1)+mex(l2))\n\n\nt=II()\nfor i in range(t):\n    solve()\n\n    #######\n   #\n  #\n #######   #     #  # ####   # #     #\n       #  # #   #  # #   #  # # #   #\n      #  ####  #  # ####   ####  # #\n######  #   # #### #    # #   #   #"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = [0 for i in range(101)]\n    for i in a:\n        d[i] += 1\n\n    cnt1 = 0\n    for i in range(len(d)):\n        if d[i] != 0:\n            d[i] -= 1\n            cnt1 = i + 1\n        else: break\n\n\n    cnt2 = 0\n    for i in range(len(d)):\n        if d[i] != 0:\n            d[i] -= 1\n            cnt2 = i + 1\n        else: break\n\n    print(cnt1 + cnt2)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    arr = list(map(int,input().split()))\n    arr.sort()\n    i=j=0\n    count=[0]*(arr[-1]+1)\n    notPresent=[]\n    while True:\n        if arr[j]==i:\n            count[i]+=1\n            j+=1\n        else:\n            if count[i]>0:\n                i+=1\n                continue\n            else:\n                notPresent.append(i)\n                i+=1\n        if j>=len(arr):break\n    if not notPresent:\n        try: \n            i = count.index(1)\n            ans = max(arr[-1]+1, i+arr[-1]+1)\n        except Exception:\n            ans = max(arr[-1]+1, (arr[-1]+1)*2)\n    else:\n        ans=notPresent[0]\n        try:\n            i=count.index(1)\n            if i<ans:\n                ans+=i\n            else:\n                ans+=ans\n        except Exception:\n            ans += ans\n    print(ans)\n        "
        },
        {
            "language": 1,
            "solution": "\nimport collections\ndef f(ais):\n\t\n\tcc = collections.Counter(ais)\n\tkeys = sorted(cc.keys())\n\ta = 0\n\tb = 0\n\n\tfor k in keys:\n\t\tif a == k and cc[k]>= 1:\n\t\t\ta +=1\n\t\telse:\n\t\t\tbreak\n\n\tfor k in keys:\n\t\tif b == k and cc[k]> 1:\n\t\t\tb +=1\n\t\telse:\n\t\t\tbreak\n\treturn a + b\nfor uuu in range(int(raw_input())):\n\tn = int(raw_input())\n\tais = map(int, raw_input().split())\n\n\tprint f(ais)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    vector<int> freq(101);\n    int mex1, mex2;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      freq[a[i]]++;\n    }\n    for (int i = 0; i < 101; i++) {\n      if (freq[i] == 0) {\n        mex1 = i;\n        break;\n      }\n    }\n    for (int i = 0; i < 101; i++) {\n      if (freq[i] <= 1) {\n        mex2 = i;\n        break;\n      }\n    }\n    cout << mex1 + mex2 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main (String[] args) {\n\t   // Scanner scan = new Scanner(System.in);\n    \tFastScanner scan = new FastScanner();\n        int t = scan.nextInt();\n        while(t-- > 0) {\n            int n = scan.nextInt();\n            int[] arr = scan.readArray(n);\n            \n            Map<Integer, Integer> map = new TreeMap<>();\n            \n            for(int i : arr) map.put(i, map.getOrDefault(i, 0) + 1);\n            \n            int startFrom = 0;\n            int ans = 0;\n            boolean done = false;\n            for(int key : map.keySet()) {\n                if(key != startFrom) {\n                    break;\n                }\n                \n                if(map.get(key) < 2 && !done) {\n                    done = true;\n                    ans = key;\n                }\n                \n                startFrom++;\n            }\n            \n            ans += startFrom;\n            if(!done) ans += startFrom;\n            \n            System.out.println(ans);\n            \n        }\n    }\n/*\n    int n = scan.nextInt();\n            int[] arr = scan.readArray(n);\n    \n    int n = scan.nextInt();\n            int m = scan.nextInt();\n            int[][] arr = new int[n][m];\n            for(int i = 0; i < n; i++) {\n                for(int j = 0; j < m; j++) {\n                    arr[i][j] = scan.nextInt();\n                }\n            }\n    \n*/\n    \n    \n    static class FastScanner {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) a[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n    \n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class SubsetMex {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int T = in.nextInt();\n        for (int t = 0; t < T; t++) {\n            int N = in.nextInt();\n            int[] arr = new int[N];\n            for (int i = 0; i < N; i++) {\n                arr[i] = in.nextInt();\n            }\n            int[] freq = new int[101];\n            for (int i : arr) {\n                freq[i]++;\n            }\n            int n = 2, res = 0;\n            for (int i = 0; i <= 100; i++) {\n                n = Math.min(n, freq[i]);\n                res += n;\n            }\n            System.out.println(res);\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class A implements Runnable {\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new A(), \"A\", 1 << 27).start();\n    }\n\n    void merge1(int arr[], int l, int m, int r) {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[l + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[m + 1 + j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            } else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    void sort1(int arr[], int l, int r) {\n        if (l < r) {\n            int m = (l + r) / 2;\n            sort1(arr, l, m);\n            sort1(arr, m + 1, r);\n            merge1(arr, l, m, r);\n        }\n    }\n\n    public void run() {\n        try {\n            InputReader in = new InputReader(System.in);\n            PrintWriter out = new PrintWriter(System.out);\n            int t = in.ni();\n            while (t-- > 0) {\n                int res = 0;\n                int n = in.ni();\n                int[] ints = in.nextIntArray(n);\n                Arrays.sort(ints);\n                int currElem = 0;\n                for (int i = 0; i <= 100; i++) {\n                    for (int j = 0; j < ints.length; j++) {\n                        if (ints[j] == currElem) {\n                            ints[j] = -1;\n                            currElem++;\n                            break;\n                        }\n\n                    }\n                }\n\n                res += currElem;\n                currElem = 0;\n                for (int i = 0; i <= 100; i++) {\n                    for (int j = 0; j < ints.length; j++) {\n                        if (ints[j] == currElem) {\n                            ints[j] = -1;\n                            currElem++;\n                            break;\n                        }\n\n                    }\n                }\n                res += currElem;\n                out.println(res);\n            }\n            out.flush();\n            out.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            //throw new RuntimeException();\n        }\n    }\n\n    static class pair implements Comparable {\n        int f;\n        int s;\n\n        pair(int fi, int se) {\n            f = fi;\n            s = se;\n        }\n\n        public int compareTo(Object o)//asc order\n        {\n            pair pr = (pair) o;\n            if (s > pr.s)\n                return 1;\n            if (s == pr.s) {\n                if (f > pr.f)\n                    return 1;\n                else\n                    return -1;\n            } else\n                return -1;\n        }\n\n        public boolean equals(Object o) {\n            pair ob = (pair) o;\n            if (o != null) {\n                if ((ob.f == this.f) && (ob.s == this.s))\n                    return true;\n            }\n            return false;\n        }\n\n        public int hashCode() {\n            return (this.f + \" \" + this.s).hashCode();\n        }\n    }\n\n    static class InputReader {\n\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) {\n                curChar = 0;\n                try {\n                    snumChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int ni() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nl() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int[] nextIntArray(int n) {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public String nextLine() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n    }\n\n    public class triplet implements Comparable {\n        int f;\n        int s;\n        long t;\n\n        triplet(int f, int s, long t) {\n            this.f = f;\n            this.s = s;\n            this.t = t;\n        }\n\n        public boolean equals(Object o) {\n            triplet ob = (triplet) o;\n            if (o != null) {\n                if ((ob.f == this.f) && (ob.s == this.s) && (ob.t == this.t))\n                    return true;\n            }\n            return false;\n        }\n\n        public int hashCode() {\n            return (this.f + \" \" + this.s + \" \" + this.t).hashCode();\n        }\n\n        public int compareTo(Object o)//desc order\n        {\n            triplet tr = (triplet) o;\n            if (t > tr.t)\n                return -1;\n            else if (t == tr.t) {\n                if (f > tr.f)\n                    return 1;\n                else\n                    return -1;\n            } else\n                return 1;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    a,b = 0,0\n    arr.sort()\n    for i in arr:\n        if a==i:\n            a+=1\n        elif b==i:\n            b+=1\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nfrom collections import OrderedDict\nimport math\n \nimport sys\nimport os\nimport threading\nimport bisect\n \nimport operator\n \nimport heapq\n \n \nfrom atexit import register\nfrom io import BytesIO\n \n#sys.stdin = BytesIO(os.read(0, os.fstat(0).st_size))\n#sys.stdout = BytesIO()\n#register(lambda: os.write(1, sys.stdout.getvalue()))\n \n \nimport io\n#input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n\nfrom sys import stdin, stdout\n#input = sys.stdin.readline\n#input = stdin.buffer.readline\n#print = stdout.write\n#a = [int(x) for x in input().split()]\n\n\n#import os,io\n#input=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\nclass FastIO(IOBase):\n\tnewlines = 0\n \n\tdef __init__(self, file):\n\t\tself._fd = file.fileno()\n\t\tself.buffer = BytesIO()\n\t\tself.writable = \"x\" in file.mode or \"r\" not in file.mode\n\t\tself.write = self.buffer.write if self.writable else None\n \n\tdef read(self):\n\t\twhile True:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tif not b:\n\t\t\t\tbreak\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines = 0\n\t\treturn self.buffer.read()\n \n\tdef readline(self):\n\t\twhile self.newlines == 0:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tself.newlines = b.count(b\"\\n\") + (not b)\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines -= 1\n\t\treturn self.buffer.readline()\n \n\tdef flush(self):\n\t\tif self.writable:\n\t\t\tos.write(self._fd, self.buffer.getvalue())\n\t\t\tself.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n\tdef __init__(self, file):\n\t\tself.buffer = FastIO(file)\n\t\tself.flush = self.buffer.flush\n\t\tself.writable = self.buffer.writable\n\t\tself.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n\t\tself.read = lambda: self.buffer.read().decode(\"ascii\")\n\t\tself.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \n#sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n#sys.stdin = open(\"F:\\PY\\\\test.txt\", \"r\")\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\n\n\n\n    \nfor _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    set1 = set()\n    set2 = set()\n    for i in range(n):\n        if ar[i] not in set1:\n            set1.add(ar[i])\n            ar[i]=-1\n    \n    for i in range(n):\n        if (ar[i] not in set2) and ar[i]!=-1:\n            set2.add(ar[i])\n    \n    max1 = 0\n    max2 = 0\n    \n    idx=0\n    for i in set1:\n        if i!=idx:\n            max1=idx\n            break\n        idx+=1\n    else:\n        max1=idx\n        \n        \n    idx=0\n    for i in set2:\n        if i!=idx:\n            max2=idx\n            break\n        idx+=1\n    else:\n        max2=idx   \n    \n    \n    print(max1+max2)\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n        \n\n\n\n\n\nsys.exit(0)\nn  = int(input())\nlis = list(map(int, input().split()))\nanswer = 0\nfor i in range(n):\n    answer+=lis[i]-1\nif n==1:\n    print(n-1)\nelif n>32:\n    print(answer)\n    sys.exit(0)\nlis.sort()\nfor i in range(2, 50000):\n    localMin = 0\n    for j in range(n):\n        needVal = i**j\n        localMin+=abs(lis[j]-needVal)\n        if localMin>answer:\n            break\n    else:\n        answer = min(localMin, answer)\nprint(answer)\n     \n                \n    \n        \n    \n\n'''\nn = int(input())\nlis = list(map(int, input().split()))\nsumAr = 0\nfor i in range(n):\n    sumAr+=lis[i]\nk = (sumAr-(n*(n-1)//2))//n\ndif = sumAr - (k*n+(n*(n-1)//2))\n\nanswer=[]\nfor i in range(n):\n    if i<dif:\n        print(k+i+1)\n        #print(k+i+1, end=\" \")\n    else:\n        print(k+i)\n        #print(k+i, end=\" \")\n\n#print(*answer, sep=\" \")\n        \n'''\n\n\n\n\n\nsys.exit(0)\n\nclass Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\np1 = Person(\"heelo\", 27)\n\nprint(help(Person))\n\n\nage = 26\nname = 'Swaroop'\nprint('\u0412\u043e\u0437\u0440\u0430\u0441 {} -- {} \u043b\u0435\u0442'.format(name, age))\nprint(help(object))\n\n\n'''\nfor _ in range(int(input())):\n    \n    n = int(input())\n    ar = list(map(int, input().split()))\n    dp = [0]*100005\n    for i in range(n):\n        dp[ar[i]]+=1\n    ar.clear()\n    for i in range(len(dp)):\n        if dp[i]!=0:\n            ar.append(dp[i])       \n    ar.sort()\n    maxC = ar[len(ar)-1]\n    sumA = sum(ar)\n    answer=0\n    for i in range(len(ar)):\n        if ar[i]==maxC:\n            answer+=1\n            sumA-=maxC\n    answer-=1\n    answer+= min(sumA//(maxC-1), len(ar)-1)\n    print(answer)\n    #sys.exit(0)   \n         \n    \n\n\n\n\ndef maxDisjointIntervals(list_):\n    list_.sort(key=lambda x: x[1])\n    print(list_[0][0], list_[0][1])\n    r1 = list_[0][1]\n    for i in range(1, len(list_)):\n        l1 = list_[i][0]\n        r2 = list_[i][1]\n        if l1>r1:\n            print(l1, r2)\n            r1 = r2\n\nif __name__ ==\"__main__1\":\n    N=4\n    intervals = [[1, 4], [2, 3], [4,6], [8,9]]\n    maxDisjointIntervals(intervals)\n    \n    '''\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split(' ')))\n    l,l1=[],[]\n    i=0\n    c=min(a)\n    if(c>0):\n        print(0)\n    else:\n        while(a.count(i)>0):\n            if(a.count(i)>=2):\n                l1.append(i)\n            elif(a.count(i)==1):\n                l.append(i)\n            i+=1\n        if(len(l1)>0):\n            k=min(l1)\n            if(k==0 and len(l)>0):\n                c=l[0]\n            elif(k==0 and len(l)==0):\n                c=max(l1)+1\n            elif(k>0):\n                c=0\n        elif(len(l1)==0):\n            if(len(l)>0):\n                c=0\n            \n        print(i+c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  int m[101] = {0};\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    m[x]++;\n  }\n  int ans = 0;\n  for (int i = 0; i < 101; i++) {\n    if (m[i] != 0) {\n      m[i]--;\n    } else {\n      ans = ans + i;\n      break;\n    }\n  }\n  for (int i = 0; i < 101; i++) {\n    if (m[i] != 0) {\n      m[i]--;\n    } else {\n      ans = ans + i;\n      break;\n    }\n  }\n  cout << ans << endl;\n  return;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "#670\nfrom collections import Counter\nt = int(input())\n\nfor _  in range(t):\n\tn = int(input())\n\tarr = list(map(int,input().split()))\n\tarr.sort()\n\td = Counter(arr)\n\tc=0\n\n\tppos = None\n\tfor pos,i in enumerate(d):\n\t\tif i==c and d[i]>1:\n\t\t\tc+=1\n\t\telse:\n\t\t\tppos = pos\n\t\t\tbreak\n\n\tif ppos==None:\n\t\tprint(2*c)\n\telse:\n\t\tv = 0\n\t\tk = list(d.keys())\n\n\t\tif k[ppos]!=c:\n\t\t\tv=2*c\n\t\telse:\n\t\t\tv=c\n\t\t\tc+=1\n\t\t\tfor i in range(ppos+1,len(k)):\n\t\t\t\tif k[i]==c:\n\t\t\t\t\tc+=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\tv+=c\n\t\tprint(v)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict \n\ndef def_value(): \n    return 0\n\ncases = input()\nfor _ in range(int(cases)):\n    d = defaultdict(def_value)\n    res = 0\n    len = int(input())\n    x_str = input().strip().split(\" \")\n    for x in x_str:\n        if int(x) < 0:\n            continue\n        d[int(x)] += 1\n    for _ in range(2):\n        for x in range(101):\n            if d[x] == 0 :\n                res += x\n                break\n            else:\n                d[x] -= 1\n    print(res)"
        },
        {
            "language": 3,
            "solution": "#                               #\n    # author : samars_diary #\n    # 12-09-2020 \u2502 19:22:08 #\n#                               #\n\nimport sys, os.path\n\nif(os.path.exists('input.txt')):\n    sys.stdin = open('input.txt',\"r\")\n    #sys.stdout = open('output.txt',\"w\")\n\nsys.setrecursionlimit(10 ** 5)\n\ndef i(): return sys.stdin.readline().strip()\ndef ii(): return int(sys.stdin.readline())\ndef li(): return list(sys.stdin.readline().strip())\ndef mii(): return map(int, sys.stdin.readline().split())\ndef lii(): return list(map(int, sys.stdin.readline().strip().split()))\n\n#print=sys.stdout.write\n\ndef solve():\n    a=ii();b=lii();c=[];d=e=0\n    [c.append(x) and b.remove(x) for x in b if b.count(x)>1 and x not in c];[b.remove(x) for x in c]\n    for i in range(max(b)+2):\n        if i not in b:\n            d=i;break\n    if len(c)!=0:\n        for i in range(max(c)+2):\n            if i not in c:\n                e=i;break\n    print(d+e)\nfor _ in range(ii()):\n    solve()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, i, j, x, maxe = -99999;\n    cin >> n;\n    int a[1000] = {0};\n    for (i = 0; i < n; i++) {\n      cin >> x;\n      a[x]++;\n    }\n    int b, c;\n    for (i = 0; i < 104; i++) {\n      if (a[i] > 0) {\n        a[i]--;\n      } else {\n        b = i;\n        break;\n      }\n    }\n    for (i = 0; i < 106; i++) {\n      if (a[i] == 0) {\n        cout << b + i << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "'''input\n4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n\n\n\n'''\n\nRI = lambda: [int(_x) for _x in raw_input().split()]\n\n\n\n\nfor _t in range(input()):\n\t\n\tn = input()\n\tA = RI()\n\tC = [0]*101\n\tfor i in A:\n\t\tC[i]+=1\n\n\tans = 0\n\tfor i in range(101):\n\t\tif C[i]==0:\n\t\t\tans += i\n\t\t\tbreak\n\t\tC[i]-=1\n\n\tfor i in range(101):\n\t\tif C[i]==0:\n\t\t\tans += i\n\t\t\tbreak\n\t\tC[i]-=1\n\tprint ans\n\n\n"
        },
        {
            "language": 4,
            "solution": "/*==============================================\nAuthor      : Shadman Shariar                 ||\nEmail       : shadman.shariar@northsouth.edu  ||\nUniversity  : North South University (NSU)    ||\nFacebook    : shadman.shahriar.007            ||\n==============================================*/\nimport java.io.*;\nimport java.util.*;\n//import java.math.BigInteger;\n//import java.text.DecimalFormat;\npublic class Main {\npublic static Main obj = new Main();\n//public static FastReader fr = new FastReader();\n//public static Scanner input = new Scanner(System.in);\n//public static PrintWriter pw = new PrintWriter(System.out);\n//public static DecimalFormat df = new DecimalFormat(\".000\");\n//public static BufferedReader br = new BufferedReader\n//(new InputStreamReader(System.in));\npublic static void main(String[] args) throws Exception {\nScanner input = new Scanner (System.in);\n//BigInteger bi1 = new BigInteger(\"000\");\n//StringBuilder sb = new StringBuilder();\n//StringTokenizer str = new StringTokenizer(\"String\",\"Split\");\n\n//-----------------CODE STARTS FROM HERE------------------//\n\nint tt = input.nextInt();\n\nfor (int z = 0; z < tt; z++) {\n\tint n  =input.nextInt();\n\tint a[] = new int[101];\n\tfor(int i = 1; i <= n; i++){\n\t\tint x = input.nextInt();\n\t\ta[x]++;\n\t}\n\tint sum = 0;\n\tfor(int i = 1; i <= 2; i++){\n\t\tfor(int j = 0; j <= 101; j++){\n\t\t\tif(a[j] >= 1) a[j]--;\n\t\t\telse{\n\t\t\t\tsum += j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} System.out.println(sum);\n\t\n\n}\n\n//---------------------CODE ENDS HERE---------------------//\n\n        //pw.close();\n        input.close();\n\t\tSystem.exit(0);\n}\n\n   public static long gcd(long a, long b) {\n\t   if (a == 0)\n\t\t   return b;\n\t   return gcd(b % a, a);\n   }\n\n   public static long lcm(long a, long b) {\n\t   return (a / gcd(a, b)) * b;\n   }\n\n   public static long nCr(long n, long r)\n   {\n       return factorial(n) / (factorial(r) *\n                  factorial(n - r));\n   }\n\n   public static long nPr(long n, long r)\n   {\n    return factorial(n) / factorial(n - r);\n   }\n\n   public static int countsubstring(String str)\n   {\n    int n = str.length();\n    return n * (n + 1) / 2;\n   }\n \n   public static boolean ispalindrome(String str)\n   {\n    int i = 0, j = str.length() - 1;\n    while (i < j) {\n        if (str.charAt(i) != str.charAt(j))\n            return false;\n        i++;\n        j--;\n    }\n    return true;\n   }\n \n   public static boolean perfectsquare(long x)\n   {\n    if (x >= 0) {\n        long sr = (long)(Math.sqrt(x));\n        return ((sr * sr) == x);\n    }\n    return false;\n   }\n \n   public static boolean perfectcube(long N)\n   {\n    int cube; int c = 0;\n    for (int i = 0; i <= N; i++) {\n        cube = i * i * i;\n        if (cube == N) {\n           \n            c=1; break;\n        }\n        else if (cube > N) {\n          \n           c=0 ; break ;\n        }\n    }\n\t  if (c==1)return true;\n\t  else return false;\n   }\n \n  public static int divcount(int n)\n   {\n       boolean hash[] = new boolean[n + 1];\n       Arrays.fill(hash, true);\n       for (int p = 2; p * p < n; p++)\n           if (hash[p] == true)\n               for (int i = p * 2; i < n; i += p)\n                   hash[i] = false;\n       int total = 1;\n       for (int p = 2; p <= n; p++) \n       {\n           if (hash[p])\n           {\n               int count = 0;\n               if (n % p == 0) \n               {\n                   while (n % p == 0) \n                   {\n                       n = n / p;\n                       count++;\n                   }\n                   total = total * (count + 1);\n               }\n           }\n       }\n       return total;\n   }\n   \n public static void printdiv(int n)\n  {\n      for (int i=1; i<=Math.sqrt(n); i++)\n      {\n          if (n%i==0)\n          {\n              if (n/i == i)\n                  System.out.print(\" \"+ i);\n    \n              else\n                  System.out.print(i+\" \" + n/i + \" \" );\n          }\n      }\n  }\n  \n   public static boolean[] sieveOfEratosthenes(int n)\n   {\n    boolean prime[] = new boolean[n + 1];\n    for (int i = 0; i <= n; i++)\n        prime[i] = true;\n \n    for (int p = 2; p * p <= n; p++)\n    {\n        if (prime[p] == true)\n        {\n            for (int i = p * p; i <= n; i += p)\n                prime[i] = false;\n        }\n    }\n    prime[1]=false;\n    return prime;\n   }\n\t\n   public static int removeduplicateelements(int arr[], int n){ \n\t\tArrays.sort(arr);\n        if (n==0 || n==1){  \n            return n;  \n        }  \n        int[] temp = new int[n];  \n        int j = 0;  \n        for (int i=0; i<n-1; i++){  \n            if (arr[i] != arr[i+1]){  \n                temp[j++] = arr[i];  \n            }  \n         }  \n        temp[j++] = arr[n-1];      \n        for (int i=0; i<j; i++){  \n            arr[i] = temp[i];  \n        }  \n        return j;  \n    }  \n\t\n\tpublic static int fibon(int n) {\n \n\t\tif (n <= 1) {\n \n\t\t\treturn n;\n\t\t}\n\t\tint[] array = new int[n + 1];\n\t\tarray[0] = 0;\n\t\tarray[1] = 1;\n\t\tfor (int i = 2; i <= n; i++) {\n\t\t\tarray[i] = array[i - 2] + array[i - 1];\n\t\t}\n \n\t\treturn array[n];\n \n\t}\n \n\tpublic static long sumofdigits(long n) {\n\t\tlong sum = 0;\n \n\t\twhile (n != 0) {\n\t\t\tsum = sum + n % 10;\n\t\t\tn = n / 10;\n\t\t}\n \n\t\treturn sum;\n\t}\n \n\tpublic static int reversedigits(int num) {\n\t\tint rev_num = 0;\n\t\twhile (num > 0) {\n\t\t\trev_num = rev_num * 10 + num % 10;\n\t\t\tnum = num / 10;\n\t\t}\n\t\treturn rev_num;\n\t}\n \n\tpublic static int binarysearch(int arr[], int l, int r, int x) {\n \n\t\tif (r >= l) {\n\t\t\tint mid = l + (r - l) / 2;\n\t\t\tif (arr[mid] == x)\n\t\t\t\treturn mid;\n\t\t\tif (arr[mid] > x)\n\t\t\t\treturn binarysearch(arr, l, mid - 1, x);\n\t\t\treturn binarysearch(arr, mid + 1, r, x);\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic static void rangeofprimenumber(int a, int b) {\n\t\tint i, j, flag;\n\t\tfor (i = a; i <= b; i++) {\n\t\t\tif (i == 1 || i == 0)\n\t\t\t\tcontinue;\n\t\t\tflag = 1;\n\t\t\tfor (j = 2; j <= i / 2; ++j) {\n\t\t\t\tif (i % j == 0) {\n\t\t\t\t\tflag = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag == 1)\n\t\t\t\tSystem.out.println(i);\n\t\t}\n\t}\n \n\tpublic static boolean isprime(long n) {\n\t\tif (n <= 1)\n\t\t\treturn false;\n\t\telse if (n == 2)\n\t\t\treturn true;\n\t\telse if (n % 2 == 0)\n\t\t\treturn false;\n\t\tfor (long i = 3; i <= Math.sqrt(n); i += 2) {\n\t\t\tif (n % i == 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n \n\tpublic static long factorial(long n) {\n\t\treturn (n == 1 || n == 0) ? 1 : n * factorial(n - 1);\n\t}\n \n\tpublic static int[] reversearrayinrange(int arr[], int start, int end) {\n\t\tint temp;\n \n\t\twhile (start < end) {\n\t\t\ttemp = arr[start];\n\t\t\tarr[start] = arr[end];\n\t\t\tarr[end] = temp;\n\t\t\tstart++;\n\t\t\tend--;\n\t\t}\n\t  return arr;\n\t}\n \n    public static class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n \n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n \n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n \n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n \n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list1 = []\n    list2 = []\n    x = input()\n    s = x.split()\n    for j in s:\n        k = int(j)\n        if k not in list1:\n            list1.append(k)\n        else:\n            list2.append(k)\n    max = 0\n    for j in range(101):\n        if j not in list1:\n            max += j\n            break\n    if len(list2) > 0:\n        for j in range(101):\n            if j not in list2:\n                max += j\n                break\n    print(max)\n\n  \t\t\t \t   \t \t \t  \t\t\t\t \t \t\t\t\t \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long binpow(long long a, long long b) {\n  long long res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a;\n    a = a * a;\n    b >>= 1;\n  }\n  return res;\n}\nbool isprime(int x) {\n  for (int d = 2; d * d <= x; d++) {\n    if (x % d == 0) return false;\n  }\n  return true;\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  int arr[101] = {0};\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    arr[x]++;\n  }\n  int a, b;\n  for (int i = 0; i < 101; i++) {\n    if (arr[i] == 0) {\n      a = i;\n      break;\n    }\n  }\n  for (int i = 0; i < 101; i++) {\n    if (arr[i] <= 1) {\n      b = i;\n      break;\n    }\n  }\n  cout << a + b << \"\\n\";\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int T;\n  cin >> T;\n  while (T--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\n\nfor T in range(t):\n\n    n=int(input())\n    a=list(map(int,input().split()))\n    first=0\n    second=0\n\n    amin=min(a)\n    amax=max(a)\n\n    if(amin!=0):\n        print(0)\n        continue\n\n    else:\n        flag=0\n        another_flag=0\n        # for i in range(102):\n        #     if(i>amax):\n        #         i-=1\n        #         another_flag=1\n        #\n        #     if i not in a and flag==0:\n        #         first=i;\n        #         flag+=1\n        #     if a.count(i)==1 and flag==0:\n        #         first=i\n        #         flag+=1\n        #\n        #\n        #     if i not in a and flag==1 and (first!=i or another_flag==1):\n        #         second=i\n        #         flag+=1\n        #     # if a.count(i)<=1 and flag==1 and first!=i:\n        #     #     second=i\n        #     #     flag+=1\n        #     if flag==2:\n        #         break\n        for i in range(102):\n            if i not in a:\n                first=i;\n                break\n\n        for i in range(102):\n            if a.count(i)<=1:\n                second=i;\n                break\n\n        print(first+second)\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tl = [0]*102\n\tfor k in a:\n\t\tl[k] += 1\n\tans = -1\n\tfor i in range(102):\n\t\tif(l[i] <= 1 and ans == -1):\n\t\t\tif(l[i] == 1):\n\t\t\t\tans += i + 1\n\t\t\telse:\n\t\t\t\tans = 2*i\n\t\t\t\tbreak\n\t\telif(not l[i]):\n\t\t\tans += i\n\t\t\tbreak\n\tif(ans == -1):\n\t\tans = 0\n\tprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong double PI = 3.14159265358979323846;\nlong long int modo = 1e9 + 7;\nconst long long int inf = 1e12;\nconst long long int ms = (1e5 * 2) + 5;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int tc = 1;\n  cin >> tc;\n  while (tc--) {\n    long long int n;\n    cin >> n;\n    long long int i, a[n];\n    map<long long int, long long int> umap;\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n      umap[a[i]]++;\n    }\n    long long int a1 = 0, a2 = 0, ans1 = 0;\n    for (i = 0; i < n + 1; i++) {\n      if (umap.find(i) == umap.end() && ans1 == 0) {\n        a1 = i;\n        a2 = i;\n        break;\n      } else if (umap.find(i) == umap.end() && ans1 == 1) {\n        a2 = i;\n        break;\n      } else if (umap[i] == 1 && ans1 == 0) {\n        a1 = i;\n        ans1 = 1;\n      }\n    }\n    cout << a1 + a2 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\ndef check(arr,l):\n    for i in range(l):\n        if arr[i]!=i:\n            return i\n    else:\n        return i+1\n\ndef solve(l):\n    d={0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0}\n    m=0\n    for i in l:\n        d[i]+=1\n        if i>m:\n            m=i\n    l=[]\n    r=[]\n    ll=0\n    lr=0\n    for i in range(m+1):\n        if d[i]>=2:\n            r.append(i)\n            lr+=1\n            ll+=1\n            l.append(i)\n        elif d[i]==1:\n            ll+=1\n            l.append(i)\n    if lr>0:\n        return check(l,ll)+check(r,lr)\n    else:\n        return check(l,ll)\n\n\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(solve(l))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n \nfor _ in range(t):\n    n = int(input())\n    count = [0] * 200\n    for v in map(int, input().split()):\n        count[v] += 1 \n    out = 0\n    curr = 2\n    for v in count:\n        curr = min(curr, v)\n        out += curr\n    print(out)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String args[])\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\tfor(int i=0;i<t;i++)\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tint ar[]=new int[n];\n\t\t\tfor(int j=0;j<n;j++) ar[j]=sc.nextInt();\n\t\t\tint count=-1,a=0;\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tcount=0;\n\t\t\t\tfor(int k=0;k<n;k++)\n\t\t\t\t{\n\t\t\t\t\tif(ar[k]==j) count++;\n\t\t\t\t}\n\t\t\t\tif(count==0)\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(j+j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(count==1)\n\t\t\t\t{\n\t\t\t\t\ta=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count==1)\n\t\t\t{\n\t\t\t\tfor(int j=0;j<=n;j++)\n\t\t\t\t{\n\t\t\t\t\tcount=0;\n\t\t\t\t\tfor(int k=0;k<n;k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(ar[k]==j) count++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(count==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tSystem.out.println(a+j);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n}\n\n\n\n\t   \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint countn[104];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    memset(countn, 0, sizeof(countn));\n    int n, a;\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n      cin >> a;\n      countn[a]++;\n    }\n    int num = 0, ans = 0;\n    for (int i = 0; i <= 100; ++i) {\n      if (countn[i] == 0) {\n        ans += i;\n        if (num == 0) {\n          ans += i;\n        }\n        break;\n      } else if (countn[i] == 1 && num == 0) {\n        ans += i;\n        num = 1;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    s=sorted(set(a))\n    i=0\n    B=0\n    if s[0]==0:\n        i+=1\n        while i<len(s) and s[i]==s[i-1]+1:\n            i+=1\n        for x in range(i):\n            if a.count(s[x])<2:\n                break\n            B+=1\n    A=i\n    print(A+B)\n    "
        },
        {
            "language": 3,
            "solution": "def solve(n,ar):\n\n    ar = sorted(ar)\n\n    freq = [0] * 101\n\n    for i in range(n):\n        freq[ar[i]] += 1\n\n    b = 0\n    for i in range(len(freq)):\n        if freq[i] >= 2: continue\n        else:\n            b = i\n            break\n    a = 0\n    for i in range(len(freq)):\n        if freq[i] == 0:\n            a = i\n            break\n\n    print(a+b)\n\n\n\n\n\n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n =int(input())\n        ar = list(map(int,input().split()))\n        solve(n,ar)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class CodeForces1406A{\n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tint t = input.nextInt();\n\t\tfor(int j = 0;j<t;j++){\n\t\t\tint n  = input.nextInt();\n\t\t\tint[] a = new int[101];\n\t\t\tfor(int i = 0;i<n;i++){\n\t\t\t\tint c = input.nextInt();\n \t\t\t\ta[c]++;\n\t\t\t}\t\n\n\t\t\t//int min = 2;\n\t\t\tint sum = 0;\n\t\t\tboolean bool = false;\n\t\t\tfor(int i = 0;i<101;i++){\n\t\t\t\tif(a[i] < 2 && !bool){\n\t\t\t\t\tsum+= i;\n\t\t\t\t\tbool = true;\n\t\t\t\t}\n\n\t\t\t\tif(bool && a[i] < 1){\n\t\t\t\t\tsum+= i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sum);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    first = 0\n    second = 0\n    freq = [0 for j in range(101)]\n    for j in range(n):\n        freq[lst[j]] += 1\n    for j in range(len(freq)):\n        if(freq[j]==0):\n            first = j\n            break\n        freq[j] -= 1\n    \n    for j in range(len(freq)):\n        if(freq[j]==0):\n            second = j\n            break\n        freq[j] -= 1\n        \n    print(first+second)\n    \n            \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct cmp {\n  bool operator()(pair<long long, long long> a, pair<long long, long long> b) {\n    return ((a.first - a.first / 2) * a.second) <\n           ((b.first - b.first / 2) * b.second);\n  }\n};\nconst long long N = 1e6 + 1;\nconst long long MOD = 1e9 + 7;\nlong long func(long long n) { return n * (n + 1) / 2; }\nvoid Anon_mouS() {\n  long long n;\n  cin >> n;\n  vector<long long> v(101);\n  for (long long i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    v[x]++;\n  }\n  long long ans = 0, cnt = 0;\n  for (long long i = 0; i <= 100; i++) {\n    if (v[i] == 1 and cnt == 0) {\n      ans += i;\n      cnt++;\n    } else if (v[i] == 0) {\n      if (cnt == 1) {\n        ans += i;\n        break;\n      } else {\n        ans += 2 * i;\n        break;\n      }\n    }\n  }\n  cout << ans << '\\n';\n}\nint32_t main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  ;\n  long long q = 1;\n  cin >> q;\n  for (long long it = 1; it <= q; it++) {\n    Anon_mouS();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#########\t\t\t##\t##     ##    \t  ####  #####  ##     #  ##     #\t\t##\n\t#\t\t\t   # #\t# #   # #\t\t #\t  #\t#\t#  # #    #  # #    #\t   # #\n\t#\t\t\t  #  #\t#  ###  #\t    #\t\t#\t#  #  #   #  #  #   #\t  #  #\n\t#\t\t\t #####\t#\t#\t#\t   #    ###\t#\t#  #   #  #  #   #  #    #####\n\t#\t\t\t#    #\t#\t\t#\t   #    # #\t#\t#  #\t# #  #\t  # #   #    #  \n######### \t   #     # \t#\t\t#\t\t##### #\t#####  #\t ##  #\t   ##  #     #\n\n\"\"\"\n\nPPPPPPP       RRRRRRR\t\t    OOOO\t  VV        VV    EEEEEEEEEE\nPPPPPPPP      RRRRRRRR         OOOOOO     VV       VV\t  EE\nPPPPPPPPP     RRRRRRRRR       OOOOOOOO    VV      VV\t  EE\nPPPPPPPP      RRRRRRRR        OOOOOOOO    VV     VV    \t  EEEEEE\nPPPPPPP       RRRRRRR         OOOOOOOO    VV    VV        EEEEEEE\nPP  \t\t  RRRR\t\t\t  OOOOOOOO    VV   VV         EEEEEE\nPP\t\t\t  RR  RR          OOOOOOOO    VV  VV          EE\nPP\t\t\t  RR    RR         OOOOOO     VV VV           EE\nPP\t\t\t  RR      RR        OOOO      VVVV            EEEEEEEEEE\n\n\"\"\"\n\n\n\n\"\"\"\n Perfection is achieved not when there is nothing more to add, but rather when there is nothing more to take away.\n\"\"\"\nimport sys\ninput = sys.stdin.readline\nread = lambda: map(int, input().split())\nread_float = lambda: map(float, input().split())\n# from bisect import bisect_left as lower_bound;\n# from bisect import bisect_right as upper_bound;\n# from math import ceil, factorial;\n\n \ndef ceil(x):\n    if x != int(x):\n        x = int(x) + 1\n    return x\n \ndef factorial(x, m):\n\tval = 1\n\twhile x>0:\n\t\tval = (val * x) % m\n\t\tx -= 1\n\treturn val\n\ndef fact(x):\n\tval = 1\n\twhile x > 0:\n\t\tval *= x\n\t\tx -= 1\n\treturn val\n    \n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n \n## gcd function\ndef gcd(a,b):\n    if b == 0:\n        return a;\n    return gcd(b, a % b);\n\n## lcm function\ndef lcm(a, b):\n\treturn (a * b) // math.gcd(a, b)\n \n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n\tif k > n:\n\t\treturn 0\n\tif(k > n - k):\n\t\tk = n - k\n\tres = 1\n\tfor i in range(k):\n\t\tres = res * (n - i)\n\t\tres = res / (i + 1)\n\treturn int(res)\n \n## upper bound function code -- such that e in a[:i] e < x;\n\n \n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0 and n > 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0 and n > 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n \n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n \n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b;\n \n# find function with path compression included (recursive)\n# def find(x, link):\n#     if link[x] == x:\n#         return x\n#     link[x] = find(link[x], link);\n#     return link[x];\n \n# find function with path compression (ITERATIVE)\ndef find(x, link):\n    p = x;\n    while( p != link[p]):\n        p = link[p];\n    \n    while( x != p):\n        nex = link[x];\n        link[x] = p;\n        x = nex;\n    return p;\n \n \n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n \n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    prime[0], prime[1] = False, False\n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n# Euler's Toitent Function phi\ndef phi(n) : \n  \n    result = n \n    p = 2\n    while(p * p<= n) : \n        if (n % p == 0) : \n            while (n % p == 0) : \n                n = n // p \n            result = result * (1.0 - (1.0 / (float) (p))) \n        p = p + 1\n    if (n > 1) : \n        result = result * (1.0 - (1.0 / (float)(n))) \n   \n    return (int)(result) \n\ndef is_prime(n):\n\tif n == 0:\n\t\treturn False\n\tif n == 1:\n\t\treturn True\n\tfor i in range(2, int(n ** (1 / 2)) + 1):\n\t\tif not n % i:\n\t\t\treturn False\n \n\treturn True\n \n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e5 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n \n################## un-comment below 2 lines when using factorization #################\nspf = [0 for i in range(MAXN)]\n# spf_sieve();\ndef factoriazation(x):\n    res = []\n    for i in range(2, int(x ** 0.5) + 1):\n    \twhile x % i == 0:\n    \t\tres.append(i)\n    \t\tx //= i\n    if x != 1:\n   \t\tres.append(x)\n    return res\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\ndef factors(n):\n\tres = []\n\tfor i in range(1, int(n ** 0.5) + 1):\n\t\tif n % i == 0:\n\t\t\tres.append(i)\n\t\t\tres.append(n // i)\n\treturn list(set(res))\n \n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()));\n \ndef float_array():\n    return list(map(float, input().strip().split()));\n \n## taking string array input\ndef str_array():\n    return input().strip().split();\n\ndef binary_search(low, high, w, h, n):\n\twhile low < high:\n\t\tmid = low + (high - low) // 2\n\t\t# print(low, mid, high)\n\t\tif check(mid, w, h, n):\n\t\t\tlow = mid + 1\n\t\telse:\n\t\t\thigh = mid\n\treturn low\n\n## for checking any conditions\ndef check(councils, a, k):\n\tsumm = 0\n\tfor x in a:\n\t\tsumm += min(x, councils)\n\treturn summ // councils >= k\n\t\n\n \n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n \n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n \nfrom itertools import permutations\nimport math\nimport bisect as bis\nimport random\nimport sys\n\n\ndef solve():\n\tn = int(input())\n\ta = list(read())\n\ta.sort()\n\tif a[0] != 0:\n\t\tprint(0)\n\t\treturn\n\tfirst = []\n\tsecond = []\n\tmp = {}\n\tfor x in a:\n\t\tif mp.get(x) == None:\n\t\t\tfirst.append(x)\n\t\t\tmp[x] = 1\n\t\telif mp.get(x) != None:\n\t\t\tsecond.append(x)\n\tsecond = list(set(second))\n\t# print(first, second)\n\tans = 0\n\ti = 0\n\tfor x in first:\n\t\tif x == i:\n\t\t\ti += 1\n\t\telse:\n\t\t\tbreak\n\tans += i\n\t# print(ans)\n\ti = 0\n\n\tif len(second) == 0:\n\t\tprint(ans)\n\t\treturn\n\tfor x in second:\n\t\tif x == i:\n\t\t\ti += 1\n\t\telse:\n\t\t\tbreak\n\tans += i\n\tprint(ans)\n\n\n\nif __name__ == '__main__':\n\tfor _ in range(int(input())):\n\t\tsolve()\n\t# fin_time = datetime.now()\n# \tprint(\"Execution time (for loop): \", (fin_time-init_time))\n"
        },
        {
            "language": 3,
            "solution": "\nfor _ in range(int(input())): \n     n = int(input())\n     a = list(map(int, input().split()))\n     a.sort()\n     A = {a[0]}\n     B = set()\n     for i in range(1, len(a)):\n          if a[i] == a[i - 1]:\n               B.add(a[i])\n          else:\n               A.add(a[i])\n     x, y = 0, 0\n     while x in A:\n          x += 1\n     while B and y in B:\n          y += 1\n     print(x + y)\n     \n\n          \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class A670 {\n\t/*\n\t * Yu Lim's OP Template\n\t */\n\t// You got this lmao >:)\n\tstatic class Fscan {\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\t// pass (new FileInputStream(\"'FILE NAME'.in\")) for reading files\n\t\t// pass (System.in) for reading standard input\n\t\tpublic Fscan(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tint read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\t// returns the next N lines in an integer array\n\t\t// each line contains 1 integer\n\t\t// delta is how much to add to each input (can be negative)\n\t\t// delta is useful if you want to convert 1-based input to 0-based\n\t\tint[] nextInts(int N, int delta) {\n\t\t\tint[] ret = new int[N];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = nextInt() + delta;\n\t\t\treturn ret;\n\t\t}\n\n\t\t// returns the next N lines in a long array\n\t\t// each line contains 1 long\n\t\t// delta is how much to add to each input (can be negative)\n\t\t// delta is useful if you want to convert 1-based input to 0-based\n\t\tlong[] nextLongs(int N, long delta) {\n\t\t\tlong[] ret = new long[N];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = nextLong() + delta;\n\t\t\treturn ret;\n\t\t}\n\n\t\t// returns the next N lines in a double array\n\t\t// each line contains 1 double\n\t\tdouble[] nextDouble(int N) {\n\t\t\tdouble[] ret = new double[N];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = nextDouble();\n\t\t\treturn ret;\n\t\t}\n\n\t\t// returns the next N lines in a string array\n\t\t// each line contains 1 string\n\t\tString[] next(int N) {\n\t\t\tString[] ret = new String[N];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = next();\n\t\t\treturn ret;\n\t\t}\n\n\t\t// returns the next N lines in a string array\n\t\t// each line contains 1 string/sentence\n\t\tString[] nextLines(int N) {\n\t\t\tString[] ret = new String[N];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = nextLine();\n\t\t\treturn ret;\n\t\t}\n\n\t\t// close the stream (IMPORTANT)\n\t\tvoid close() throws IOException {\n\t\t\tstream.close();\n\t\t}\n\t}/*\n\t\t             \t^    ^\n\t\t              / \\  //\\\n\t\t|\\___/|      /   \\//  .\\\n\t\t/O  O  \\__  /    //  | \\ \\\n\t\t/     /  \\/_/    //   |  \\  \\\n\t\t@___@'    \\/_   //    |   \\   \\ \n\t\t  |       \\/_ //     |    \\    \\ \n\t\t  |        \\///      |     \\     \\ \n\t\t _|_ /   )  //       |      \\     _\\\n\t\t'/,_ _ _/  ( ; -.    |    _ _\\.-~        .-~~~^-.\n\t\t,-{        _      `-.|.-~-.           .~         `.\n\t\t '/\\      /                 ~-. _ .-~      .-~^-.  \\\n\t\t    `.   {            }                   /      \\  \\\n\t\t  .----~-.\\        \\-'                 .~         \\  `. \\^-.\n\t\t ///.----..>    c   \\             _ -~             `.  ^-`   ^-_\n\t\t   ///-._ _ _ _ _ _ _}^ - - - - ~                     ~--,   .-~\n\t\t                                                         /.-'*/\n\n\t// Main/Driver method\n\tpublic static void main(String[] args) throws IOException {\n\t\t// Fast Scanner and PrintWriter for Standard Input/Output\n\t\tFscan sc = new Fscan(System.in);\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\n\t\tint T = sc.nextInt();\n\t\tfor(; T > 0; T--) {\n\t\t\tint N = sc.nextInt();\n\t\t\tint[] arr = new int[N];\n\t\t\tfor(int i = 0; i < N; i++)\n\t\t\t\tarr[i] = sc.nextInt();\n\t\t\tArrays.sort(arr);\n\t\t\tboolean[] s1 = new boolean[200];\n\t\t\tboolean[] s2 = new boolean[200];\n\t\t\tfor(int i: arr)\n\t\t\t\tif(s1[i])\n\t\t\t\t\ts2[i] = true;\n\t\t\t\telse\n\t\t\t\t\ts1[i] = true;\n\t\t\tint sum = 0;\n\t\t\tfor(int i = 0; i < 200; i++)\n\t\t\t\tif(!s1[i]) {\n\t\t\t\t\tsum += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tfor(int i = 0; i < 200; i++)\n\t\t\t\tif(!s2[i]) {\n\t\t\t\t\tsum += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tpw.println(sum);\n\t\t}\n\t\t\n\n\t\tsc.close();\n\t\tpw.close();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\n\ndef solve():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    A = []\n    B = []\n    ma = 0\n    mb = 0\n    arr.sort()\n    for x in arr:\n        if x==ma:\n            A.append(x)\n            ma+=1\n        else:\n            B.append(x)\n            if x==mb:\n                mb+=1\n\n    print(ma + mb)\n\n    return\n\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\n    return\n\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "def least_min_int(set):\n    if 0 in set:\n        x=0\n        while x in set:\n            x+=1\n        return x\n    else:\n        return 0\ndef main():\n    tc=int(input())\n    res=[]\n    \n    for i in range(tc):\n        _=input()\n        a=map(int,input().split())\n        set1,set2=set(),set()\n        for i in a:\n            if i in set1:\n                set2.add(i)\n            else:\n                set1.add(i)\n        s1=least_min_int(set1)\n        s2=least_min_int(set2)\n        res.append(s1+s2)\n    print(*res,sep=\"\\n\")\nmain()"
        },
        {
            "language": 3,
            "solution": "import sys,os,io\ninput = sys.stdin.readline\n#input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nT = int(input())\nans = [0]*T\nfor t in range(T):\n  N = int(input())\n  A = list(map(int, input().split()))\n  cnt = 0\n  for i in range(101):\n    c = A.count(i)\n    if c==0:\n      ans[t] += i*(2-cnt)\n      cnt = 2\n    elif c==1:\n      if cnt==0:\n        ans[t] += i\n        cnt = 1\n    if cnt==2:\n      break\nprint(*ans, sep='\\n')"
        },
        {
            "language": 3,
            "solution": "test = int(input())\nfor q in range(test):\n    n = int(input())\n    x = list(map(int,input().split()))\n    f = {}\n    for i in range(n):\n        if x[i] in f:\n            f[x[i]] += 1\n        else:\n            f[x[i]] = 1\n    for i in range(max(x)+2):\n        if i not in f:\n            a = i\n            break\n        f[i]-=1\n    for i in range(max(x)+2):\n        if i not in f or f[i]==0:\n            b = i\n            break\n        f[i]-=1\n    print(a+b)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Test {\n    private static final Scanner sc = new Scanner(System.in);\n    public static void main(String[] args) {\n        int t = sc.nextInt();\n        outer:\n        for (int i = 0; i < t; i++) {\n            int l = sc.nextInt();\n            int[] arr = new int[l];\n            for (int j = 0; j < l; j++) {\n                arr[j] = sc.nextInt();\n            }\n\n            HashMap<Integer, Integer> m1 = new HashMap<>();\n            HashMap<Integer, Integer> m2 = new HashMap<>();\n\n            for (int j = 0; j < 101; j++) {\n                m1.put(j, 0);\n                m2.put(j, 0);\n            }\n\n            for (int num : arr) {\n                if (m1.get(num) == 0) {\n                    m1.put(num, 1);\n                } else {\n                    m2.put(num, 1);\n                }\n            }\n            int sum = 0;\n            for (int j = 0; j < 101; j++) {\n                if (m1.get(j) == 0) {\n                    sum += j;\n                    break;\n                }\n            }\n            for (int j = 0; j < 101; j++) {\n                if (m2.get(j) == 0) {\n                    sum += j;\n                    break;\n                }\n            }\n            System.out.println(sum);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    values = sorted(list(map(int, input().split())), reverse=True)\n    B = []\n    \n    firstMex = -1\n    secondMex = -1\n    for i in range(n+1):\n        if i == n or not values:\n            firstMex = i\n            break\n        while values and values[-1] < i:\n            B.append(values.pop())\n        if values and i == values[-1]:\n            values.pop()\n        else:\n            firstMex = i\n            break\n        \n    B += values\n    #print(B, values)\n    n = len(B)\n    B.sort(reverse=True)\n    for i in range(n+1):\n        if i == n or not B:\n            secondMex = i\n            break\n        while B and B[-1] < i:\n            B.pop()\n        if B and i == B[-1]:\n            B.pop()\n        else:\n            secondMex = i\n            break\n    \n    #print(firstMex, secondMex)\n    print(firstMex+secondMex)\n        \n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MAX = 1e5 + 5;\nint check(set<int> x) {\n  for (int i = 0; i <= 100; i++) {\n    if (x.find(i) == x.end()) {\n      return i;\n    }\n  }\n  return -1;\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n), cnt(105, 0);\n  ;\n  for (int i = 0; i < n; i++) cin >> a[i], cnt[a[i]]++;\n  set<int> b, c;\n  int ans = 0;\n  for (int i = 0; i <= 100; i++) {\n    if (cnt[i] >= 2) {\n      b.insert(i);\n      c.insert(i);\n      continue;\n    } else if (cnt[i] == 1) {\n      b.insert(i);\n    }\n  }\n  cout << check(b) + check(c) << '\\n';\n}\nint main() {\n  srand(time(NULL));\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# ===============================================================================================\n# importing some useful libraries.\nfrom __future__ import division, print_function\nfrom fractions import Fraction\nimport sys\nimport os\nfrom io import BytesIO, IOBase\nfrom itertools import *\nimport bisect\nfrom heapq import *\nfrom math import *\nfrom copy import *\nfrom collections import deque\nfrom collections import Counter as counter  # Counter(list)  return a dict with {key: count}\nfrom itertools import combinations as comb  # if a = [1,2,3] then print(list(comb(a,2))) -----> [(1, 2), (1, 3), (2, 3)]\nfrom itertools import permutations as permutate\nfrom bisect import bisect_left as bl\n# If the element is already present in the list,\n\n# the left most position where element has to be inserted is returned.\nfrom bisect import bisect_right as br\nfrom bisect import bisect\n\n# If the element is already present in the list,\n# the right most position where element has to be inserted is returned\n\n# ==============================================================================================\n# fast I/O region\n\nBUFSIZE = 8192\nfrom sys import stderr\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n# inp = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ===============================================================================================\n### START ITERATE RECURSION ###\nfrom types import GeneratorType\n\n\ndef iterative(f, stack=[]):\n    def wrapped_func(*args, **kwargs):\n        if stack: return f(*args, **kwargs)\n        to = f(*args, **kwargs)\n        while True:\n            if type(to) is GeneratorType:\n                stack.append(to)\n                to = next(to)\n                continue\n            stack.pop()\n            if not stack: break\n            to = stack[-1].send(to)\n        return to\n\n    return wrapped_func\n\n\n#### END ITERATE RECURSION ####\n\n# ===============================================================================================\n# some shortcuts\n\nmod = 1000000007\n\n\ndef inp(): return sys.stdin.readline().rstrip(\"\\r\\n\")  # for fast input\n\n\ndef out(var): sys.stdout.write(str(var))  # for fast output, always take string\n\n\ndef lis(): return list(map(int, inp().split()))\n\n\ndef stringlis(): return list(map(str, inp().split()))\n\n\ndef sep(): return map(int, inp().split())\n\n\ndef strsep(): return map(str, inp().split())\n\n\ndef zerolist(n): return [0] * n\n\n\ndef nextline(): out(\"\\n\")  # as stdout.write always print sring.\n\n\ndef testcase(t):\n    for p in range(t):\n        solve()\n\n\ndef printlist(a):\n    for p in range(0, len(a)):\n        out(str(a[p]) + ' ')\n\ndef pow(x, y, p):\n    res = 1  # Initialize result\n    x = x % p  # Update x if it is more , than or equal to p\n    if (x == 0):\n        return 0\n    while (y > 0):\n        if ((y & 1) == 1):  # If y is odd, multiply, x with result\n            res = (res * x) % p\n\n        y = y >> 1  # y = y/2\n        x = (x * x) % p\n    return res\n\nfrom functools import reduce\n\ndef factors(n):\n    return set(reduce(list.__add__,\n                ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))\n\ndef gcd(a, b):\n    if a == b: return a\n    while b > 0: a, b = b, a % b\n    return a\n# =========================================================================================\n\ndef solve():\n    n=int(inp())\n    ar=lis()\n    c=counter(ar)\n    l1=[]\n    l2=[]\n    f=-1\n\n    for i in range(max(ar)+2):\n        if c[i]==0:\n            if f==-1:\n                print(2*i)\n                break\n            else:\n                print(f+i)\n                break\n        elif c[i]==1:\n            if f==-1:\n                f=i\n\n\n\n\n\n\n\n\n#solve()\ntestcase(int(inp()))\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comp(int x, int y) { return x > y; }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t = 1;\n  cin >> t;\n  long long m, n, k;\n  while (t--) {\n    cin >> n;\n    int arr[101] = {0};\n    for (long long i = 0; i < n; i++) {\n      int input;\n      cin >> input;\n      arr[input] += 1;\n    }\n    if (arr[0] == 0) {\n      cout << 0 << '\\n';\n    } else {\n      int n1 = -1, n2 = -1;\n      int flag = 0;\n      for (long long i = 0; i < 101; i++) {\n        if (flag == 0) {\n          if (arr[i] == 0) {\n            n1 = n2 = i;\n            break;\n          } else if (arr[i] == 1) {\n            n1 = i;\n            flag = 1;\n          }\n        } else {\n          if (arr[i] == 0) {\n            n2 = i;\n            break;\n          }\n        }\n      }\n      if (n2 == -1) n2 = 101;\n      cout << n1 + n2 << '\\n';\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n \n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class scaler\n{\n    static class FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public FastReader()\n        {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n    \n    \n    public static void main (String[] args) throws java.lang.Exception\n    {\n        FastReader sc = new FastReader();\n        //System.out.print(\"hel\");\n        int t=sc.nextInt();\n        PrintWriter out=new PrintWriter(System.out);\n        Set<Long> st=new HashSet<Long>();\n        long sum=0,sum1=0;\n        int i,n,j,x=0,y=0,u,d,r,l,k;\n        int E,H,A,B,C;\n        int max,min;\n        int t1,h;\n        String s=\"\",s1=\"\";\n        char ch;\n        int c1,c2,c3;\n        int arr[]=new int[101];\n        for(;t>0;t--)\n        {\n        \tboolean f1=false,f2=false;\n        \tArrays.fill(arr, 0);\n        \tn=sc.nextInt();\n        \tfor(i=0;i<n;i++)\n        \t{\n        \t\tarr[sc.nextInt()]++;\n        \t}\n        \tfor(i=0;i<101;i++)\n        \t{\n        \t\tif(f1==false && arr[i]<=1)\n        \t\t{\n        \t\t\tx=i;\n        \t\t\tf1=true;\n        \t\t}\n        \t\tif(f2==false &&arr[i]==0)\n        \t\t{\n        \t\t\ty=i;\n        \t\t\tf2=true;\n        \t\t}\n        \t\tif(f1==true && f2==true)\n        \t\t\tbreak;\n        \t}\n        \tout.println(x+y);\n        }  \n        out.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    \n    n = int(input())\n    \n    a = list(map(int,input().split()))\n    \n    mp = [0]*101\n    \n    for i in range(n):\n        mp[a[i]] += 1\n    \n    ans = 0\n    k = 2\n    # mx = max(a)\n    # print(mp)\n    for i in range(101):\n        if k <= 0:\n            break\n        \n        if mp[i] == 1 and k == 2:\n            ans += i\n            k-=1\n        elif k == 1 and mp[i] == 0  :\n            ans += i\n            k -= 1\n            \n        \n        elif mp[i] == 0 and k == 2:\n            ans += (i*2)\n            k -= 2\n        \n    print(ans)\n        \n        "
        },
        {
            "language": 4,
            "solution": "// Don't place your source in a package\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.*; \n\n// Please name your class Main\npublic class Main {\n\t\n\tstatic StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n    \n \n    static int read() throws IOException {\n        in.nextToken();\n        return (int) in.nval;\n    }\n    static String readString() throws IOException {\n        in.nextToken();\n        return in.sval;\n\t}\n\t\n\t\n\tpublic static void main (String[] args) throws java.lang.Exception {\n\t    Scanner in = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t//InputReader in = new InputReader(System.in);\n\t\t\t\t\n\t\t\n\t\tint T=in.nextInt();\n\t\tfor(int t=0;t<T;t++){\n\t\t\t\n\t\t\tint n=in.nextInt();\n\t\t\tint A[]=new int[n];\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tA[i]=in.nextInt();\n\t\t\t}\n\t\t\t\n\t\t\tSolution sol=new Solution();\n\t\t\tsol.solution(A);\n\t\t}\n\t\tout.flush();\n\n\t}\n \n}\n \nclass Solution{\n\t//constant variable\n\tfinal int MAX=Integer.MAX_VALUE;\n\tfinal int MIN=Integer.MIN_VALUE;\n\t//Set<Integer>adjecent[];\n\t//////////////////////////////\n\t\n\t\n\t\n\tpublic void solution(int A[]){\n\t\tint res=0;\n\t\tint cnt=0;\n\t\tint table[]=new int[110];\n\t\tfor(int i:A){\n\t\t\ttable[i]++;\n\t\t}\n\t\t\n\t\tfor(int i=0;i<table.length;i++){\n\t\t\tif(table[i]==0){\n\t\t\t\t\n\t\t\t\tres+=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttable[i]--;\n\t\t}\n\t\t\n\t\tfor(int i=0;i<table.length;i++){\n\t\t\tif(table[i]==0){\n\t\t\t\tres+=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttable[i]--;\n\t\t}\n\t\t\n\t\tmsg(res+\"\");\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\tpublic long C(long fact[],int i,int j){ // C(20,3)=20!/(17!*3!)\n\t\t//return fact[i].divide(fact[i-j].multiply(fact[j]));\n\t\tlong mod=998244353;\n\t\tlong a=fact[i];\n\t\tlong b=((fact[i-j]%mod)*(fact[j]%mod))%mod;\n\t\tBigInteger B= BigInteger.valueOf(b);\n\t\tlong binverse=B.modInverse(BigInteger.valueOf(mod)).longValue();\n\t\treturn ((a)*(binverse%mod))%mod;\n\t}\n\t\n\t \n\t\n\t//map operation\n\tpublic void put(Map<Integer,Integer>map,int i){\n\t\tif(!map.containsKey(i))map.put(i,0);\n\t\tmap.put(i,map.get(i)+1);\n\t}\n\t\n\tpublic void delete(Map<Integer,Integer>map,int i){\n\t\tmap.put(i,map.get(i)-1);\n\t\tif(map.get(i)==0)map.remove(i);\n\t}\n\n\n\t\n\t\n\n\t\n \n \n\t/*public void tarjan(int p,int r){\n\t\tif(cut)return;\n\t\tList<Integer>childs=adjecent[r];\n\t\tdis[r]=low[r]=time;\n\t\ttime++;\n\t\t\n\t\t//core for tarjan\n\t\tint son=0;\n\t\tfor(int c:childs){\n\t\t\tif(ban==c||c==p)continue;\n\t\t\tif(dis[c]==-1){\n\t\t\t\tson++;\n\t\t\t\ttarjan(r,c);\n\t\t\t\tlow[r]=Math.min(low[r],low[c]);\n\t\t\t\tif((r==root&&son>1)||(low[c]>=dis[r]&&r!=root)){\n\t\t\t\t\tcut=true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(c!=p){\n\t\t\t\t\tlow[r]=Math.min(low[r],dis[c]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}*/\n\t\n\t\n \n\t\n\t\n\t\t\n\t\n\t//helper function I would use\n\tpublic void remove(Map<Integer,Integer>map,int i){\n\t\tmap.put(i,map.get(i)-1);\n\t\tif(map.get(i)==0)map.remove(i);\n\t}\n\t\n\t\n\t\n\tpublic void ascii(String s){\n\t\tfor(char c:s.toCharArray()){\n\t\t\tSystem.out.print((c-'a')+\" \");\n\t\t}\n\t\tmsg(\"\");\n\t}\n\t\n\tpublic int flip(int i){\n\t\tif(i==0)return 1;\n\t\telse return 0;\n\t}\n\t\n\tpublic boolean[] primes(int n){\n\t\tboolean A[]=new boolean[n+1];\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tif(A[i]==false){\n\t\t\t\tfor(int j=i+i;j<=n;j+=i){\n\t\t\t\t\tA[j]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn A;\n\t}\n\t\n\tpublic void msg(String s){\n\t\tSystem.out.println(s);\n\t}\n\t\n\tpublic void msg1(String s){\n\t\tSystem.out.print(s);\n\t}\n\t\n\tpublic int[] kmpPre(String p){\n\t\tint pre[]=new int[p.length()];\n\t\tint l=0,r=1;\n\t\twhile(r<p.length()){\n\t\t\tif(p.charAt(l)==p.charAt(r)){\n\t\t\t\tpre[r]=l+1;\n\t\t\t\tl++;r++;\n\t\t\t}else{\n\t\t\t\tif(l==0)r++;\n\t\t\t\telse l=pre[l-1];\n\t\t\t}\n\t\t}\n\t\treturn pre;\n\t}\n\t\n\tpublic boolean isP(String s){\n\t\tint l=0,r=s.length()-1;\n\t\twhile(l<r){\n\t\t\tif(s.charAt(l)!=s.charAt(r))return false;\n\t\t\tl++;r--;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic int find(int nums[],int x){//union find => find method\n\t\tif(nums[x]==x)return x;\n\t\tint root=find(nums,nums[x]);\n\t\tnums[x]=root;\n\t\treturn root;\n\t}\n\t\n\tpublic boolean check(int grid[][],int r,int c){\n\t\tif(r<0||c<0||r>=grid.length||c>=grid[0].length)return false;\n\t\treturn true;\n\t}\n\t\n\tpublic int get(int A[],int i){\n\t\tif(i<0||i>=A.length)return 0;\n\t\treturn A[i];\n\t}\n\tpublic int[] copy1(int A[]){\n\t\tint a[]=new int[A.length];\n\t\tfor(int i=0;i<a.length;i++)a[i]=A[i];\n\t\treturn a;\n\t}\n\t\n\tpublic int[] copy2(int A[]){\n\t\tint a[]=new int[A.length];\n\t\tfor(int i=0;i<a.length;i++)a[i]=A[i];\n\t\treturn a;\n\t}\n\t\n\t\n\tpublic void print1(int A[]){\n\t\tfor(long i:A)System.out.print(i+\" \");\n\t\tSystem.out.println();\n\t}\n\tpublic void print2(int A[][]){\n\t\tfor(int i=0;i<A.length;i++){\n\t\t\tfor(int j=0;j<A[0].length;j++){\n\t\t\t\tSystem.out.print(A[i][j]+\" \");\n\t\t\t}System.out.println();\n\t\t}\n\t}\n\t\n\tpublic int min(int a,int b){\n\t\treturn Math.min(a,b);\n\t}\n\t\n\t\n\tpublic int[][] matrixdp(int[][] grid) {\n        if(grid.length==0)return new int[][]{};\n        int res[][]=new int[grid.length][grid[0].length];\n        for(int i=0;i<grid.length;i++){\n            for(int j=0;j<grid[0].length;j++){\n                res[i][j]=grid[i][j]+get(res,i-1,j)+get(res,i,j-1)-get(res,i-1,j-1);\n            }\n        }\n        return res;\n    }\n    \n    public int get(int grid[][],int i,int j){\n        if(i<0||j<0||i>=grid.length||j>=grid[0].length)return 0;\n        return grid[i][j];\n    }\n\t\n\tpublic int[] suffixArray(String s){\n\t\tint n=s.length();\n\t\tSuffix A[]=new Suffix[n];\n\t\t\n\t\tfor(int i=0;i<n;i++){\n\t\t\tA[i]=new Suffix(i,s.charAt(i)-'a',0);\n\t\t}\n\t\t\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(i==n-1){\n\t\t\t\tA[i].next=-1;\n\t\t\t}else{\n\t\t\t\tA[i].next=A[i+1].rank;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(A);\n\t\t\n\t\tfor(int len=4;len<A.length*2;len<<=1){\n\t\t\tint in[]=new int[A.length];\n\t\t\tint rank=0;\n\t\t\tint pre=A[0].rank;\n\t\t\tA[0].rank=rank;\n\t\t\tin[A[0].index]=0;\n\t\t\tfor(int i=1;i<A.length;i++){//rank for the first two letter\n\t\t\t\tif(A[i].rank==pre&&A[i].next==A[i-1].next){\n\t\t\t\t\tpre=A[i].rank;\n\t\t\t\t\tA[i].rank=rank;\n\t\t\t\t}else{\n\t\t\t\t\tpre=A[i].rank;\n\t\t\t\t\tA[i].rank=++rank;\n\t\t\t\t}\n\t\t\t\tin[A[i].index]=i;\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<A.length;i++){\n\t\t\t\tint next=A[i].index+len/2;\n\t\t\t\tif(next>=A.length){\n\t\t\t\t\tA[i].next=-1;\n\t\t\t\t}else{\n\t\t\t\t\tA[i].next=A[in[next]].rank;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tArrays.sort(A);\n\t\t}\n\t\t\n\t\t\n\t\tint su[]=new int[A.length];\n\t\tfor(int i=0;i<su.length;i++){\n\t\t\tsu[i]=A[i].index;\n\t\t}\n\t\treturn su;\n\t}\n\t\n}\n\n//suffix array Struct\nclass Suffix implements Comparable<Suffix>{\n\tint index;\n\tint rank;\n\tint next;\n\tpublic Suffix(int i,int rank,int next){\n\t\tthis.index=i;\n\t\tthis.rank=rank;\n\t\tthis.next=next;\n\t}\n\t\n\t@Override\n\tpublic int compareTo(Suffix other) {\n\t\tif(this.rank==other.rank){\n\t\t\treturn this.next-other.next;\n\t\t}\n\t\treturn this.rank-other.rank;\n\t}\n\t\n\tpublic String toString(){\n\t\treturn this.index+\"   \"+this.rank+\"   \"+this.next+\"  \";\n\t}\n}\n\n\n \nclass Wrapper implements Comparable<Wrapper>{\n\tint spf;int cnt;\n\tpublic Wrapper(int spf,int cnt){\n\t\tthis.spf=spf;\n\t\tthis.cnt=cnt;\n\t}\n\t\t\n\t@Override\n\tpublic int compareTo(Wrapper other) {\n\t\treturn this.spf-other.spf;\n\t}\n}\n\n\n\n    class Node{//what the range would be for that particular node\n\t\tboolean state=false;\n        int l=0,r=0;\n\t\tint ll=0,rr=0;\n        public Node(boolean state){\n            this.state=state;\n        }\n    }\n\t\n\t\n\t\n\t\n\tclass Seg1{\n\t\t\tint A[];\n\t\t\tpublic Seg1(int A[]){\n\t\t\t\tthis.A=A;\n\t\t\t}\n\t\t\t\n\t\t\tpublic void update(int left,int right,int val,int s,int e,int id){\n\t\t\t\tif(left<0||right<0||left>right)return;\n\t\t\t\tif(left==s&&right==e){\n\t\t\t\t\t\n\t\t\t\t\tA[id]+=val;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tint mid=s+(e-s)/2; //[s,mid] [mid+1,e]\n\t\t\t\t\n\t\t\t\tif(left>=mid+1){\n\t\t\t\t\tupdate(left,right,val,mid+1,e,id*2+2);\n\t\t\t\t}else if(right<=mid){\n\t\t\t\t\tupdate(left,right,val,s,mid,id*2+1);\n\t\t\t\t}else{\n\t\t\t\t\tupdate(left,mid,val,s,mid,id*2+1);\n\t\t\t\t\tupdate(mid+1,right,val,mid+1,e,id*2+2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpublic int query(int i,int add,int s,int e,int id){\n\t\t\t\t\n\t\t\t\tif(s==e&&i==s){\n\t\t\t\t\treturn A[id]+add;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tint mid=s+(e-s)/2; //[s,mid] [mid+1,e]\n\t\t\t\t\n\t\t\t\tif(i>=mid+1){\n\t\t\t\t\treturn query(i,A[id]+add,mid+1,e,id*2+2);\n\t\t\t\t}else{\n\t\t\t\t\treturn query(i,A[id]+add,s,mid,id*2+1);\n\t\t\t\t}\n\t\t\t}\n\t}\n \n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\n\n\nfor _ in range(int(input())):\n    \n    n=int(input())    \n    \n    arr = get_array()\n    \n    dic = {}\n    m=max(arr)\n    # print(m)\n    \n    for i in range(0,m+2):\n        # print(i)\n        dic[i]=0\n    \n    for i in arr:\n        dic[i]+=1\n    \n    ans=0\n    flag=0\n    for i in dic.keys():\n        if(flag==1 and dic[i]==0):\n            ans+=i\n            # print('ans',ans)\n            # print('f')\n            break\n        # print('key',i,dic[i])\n        if(dic[i]==0 and flag!=1):\n            ans=i+i\n            # print('s')\n            break\n        elif(dic[i]==1 and flag!=1):\n            flag=1\n            ans+=i\n            # print('t')\n            # print('ans',ans)\n        \n    print(ans)"
        },
        {
            "language": 3,
            "solution": "T=lambda: range(int(input()))\nA=lambda : list(map(int,input().split()))\nfor _ in T() :\n    n=int(input())\n    a=A()\n    a.sort()\n    p=[0]*101\n    for i in a :\n        p[i]+=1\n    i=0\n    acn=0\n    bcn=0\n    st=True\n    while True :\n        if not(p[i]) :\n            acn=i\n            if st :\n                bcn=i\n            break\n        elif p[i]>1 :\n            acn+=1\n            if st :\n                bcn+=1\n        elif p[i]>0 :\n            acn+=1\n            st=False\n        i+=1\n    print(acn+bcn)"
        },
        {
            "language": 3,
            "solution": "for ii in range(int(input())):\n    n=int(input())\n    a = (list(map(int , input().split())))\n    m=max(a)\n    x=0\n    for i in range(m+2):\n        if i not in a:\n            x+=i\n            break\n        else:\n            a.remove(i)\n    x1=0\n    for i in range(m+2):\n        if i not in a:\n            x1+=i\n            break\n    print(x+x1)\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.io.FileWriter;\nimport java.io.PrintWriter;\n/*\n    Solution Created: 16:49:11 12/09/2020\n    Custom Competitive programming helper.\n*/\npublic class Main {\n\tpublic static void solve(Reader in, Writer out) {\n\t\tint t = in.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n = in.nextInt();\n\t\t\tint[] f = new int[102];\n\t\t\tfor(int i = 0; i<n; i++) f[in.nextInt()]++;\n\t\t\tint i = 0, j = 0;\n\t\t\tfor(; ; i++) {\n\t\t\t\tif(f[i]<2) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(; ; j++) {\n\t\t\t\tif(f[j]<1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(i+j);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tReader in = new Reader();\n\t\tWriter out = new Writer();\n\t\tsolve(in, out);\n\t\tout.exit();\n\t}\n\nstatic class Reader {\n\tstatic BufferedReader br;\n\tstatic StringTokenizer st;\n\tprivate int charIdx = 0;\n\tprivate String s;\n\n\tpublic Reader() {\n\t\tthis.br = new BufferedReader(new InputStreamReader(System.in));\n\t}\n\t\n\tpublic Reader(String f){\n\t\ttry {\n\t\t\tthis.br = new BufferedReader(new FileReader(f));\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\tpublic int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nextInt();\n\t\treturn a;\n\t}\n\n\tpublic double[] nd(int n) {\n\t\tdouble[] a = new double[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nextDouble();\n\t\treturn a;\n\t}\n\n\tpublic char nextChar() {\n\t\tif (s == null || charIdx >= s.length()) {\n\t\t\tif (st == null || !st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\treadLine();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\ts = st.nextToken();\n\t\t\tcharIdx = 0;\n\t\t}\n\t\treturn s.charAt(charIdx++);\n\t}\n\n\tpublic long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nextLong();\n\t\treturn a;\n\t}\n\n\tpublic char[] nca() {\n\t\treturn next().toCharArray();\n\t}\n\n\tpublic String[] nS(int n) {\n\t\tString[] a = new String[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = next();\n\t\treturn a;\n\t}\n\n\tpublic int nextInt() {\n\t\tif (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\treadLine();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\treturn Integer.parseInt(st.nextToken());\n\t}\n\n\tpublic double nextDouble() {\n\t\tif (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\treadLine();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\treturn Double.parseDouble(st.nextToken());\n\t}\n\n\tpublic Long nextLong() {\n\t\tif (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\treadLine();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\treturn Long.parseLong(st.nextToken());\n\t}\n\n\tpublic String next() {\n\t\tif (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\treadLine();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic static void readLine() {\n\t\ttry {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t} catch (Exception e) {\n\t\t}\n\t}\n}\n\nstatic class Util{\n\t\tprivate static Random random = new Random();\n\t\tstatic long[] fact;\n\t\tpublic static void initFactorial(int n, long mod) {\n\t\t\tfact = new long[n+1];\n\t\t\tfact[0] = 1;\n\t\t\tfor (int i = 1; i < n+1; i++) fact[i] = (fact[i - 1] * i) % mod;\n\t\t}\n\t\tpublic static long modInverse(long a, long MOD) {\n\t\t\tlong[] gcdE = gcdExtended(a, MOD);\n\t\t\tif (gcdE[0] != 1) return -1; // Inverted doesn't exist\n\t\t\tlong x = gcdE[1];\n\t\t\treturn (x % MOD + MOD) % MOD;\n\t\t}\n\t\tpublic static long[] gcdExtended(long p, long q) {\n\t\t\tif (q == 0) return new long[] { p, 1, 0 };\n\t\t\tlong[] vals = gcdExtended(q, p % q);\n\t\t\tlong tmp = vals[2];\n\t\t\tvals[2] = vals[1] - (p / q) * vals[2];\n\t\t\tvals[1] = tmp;\n\t\t\treturn vals;\n\t\t}\n\t\tpublic static long nCr(int n, int r, long MOD) {\n\t\t\tif (r == 0) return 1;\n\t\t\treturn (fact[n] * modInverse(fact[r], MOD) % MOD * modInverse(fact[n - r], MOD) % MOD) % MOD;\n\t\t}\n\t\tpublic static long nCr(int n, int r) {\n\t\t\treturn (fact[n]/fact[r])/fact[n-r];\n\t\t}\n\t\tpublic static long nPr(int n, int r, long MOD) {\n\t\t\tif (r == 0) return 1;\n\t\t\treturn (fact[n] * modInverse(fact[n - r], MOD) % MOD) % MOD;\n\t\t}\n\t\tpublic static long nPr(int n, int r) {\n\t\t\treturn fact[n]/fact[n-r];\n\t\t}\n\t\tpublic static boolean isPrime(int n) { \n\t        if (n <= 1) return false; \n\t        if (n <= 3) return true; \n\t        if (n % 2 == 0 || n % 3 == 0) return false; \n\t        for (int i = 5; i * i <= n; i = i + 6) \n\t            if (n % i == 0 || n % (i + 2) == 0) \n\t            return false; \n\t        return true; \n\t    }\n\t    public static int lowerBound(int[] a, int v) {\n\t    \tint l = 0, h = a.length;\n\t    \twhile(l<h) {\n\t    \t\tint mid = (l+h)/2;\n\t    \t\tif(v<=a[mid]) h = mid;\n\t    \t\telse l = mid+1;\n\t    \t}\n\t    \treturn l;\n\t    }\n\t    public static int lowerBound(long[] a, long v) {\n\t    \tint l = 0, h = a.length;\n\t    \twhile(l<h) {\n\t    \t\tint mid = (l+h)/2;\n\t    \t\tif(v<=a[mid]) h = mid;\n\t    \t\telse l = mid+1;\n\t    \t}\n\t    \treturn l;\n\t    }\n\t    public static int upperBound(int[] a, int v) {\n\t    \tint l = 0, h = a.length;\n\t    \twhile(l<h) {\n\t    \t\tint mid = (l+h)/2;\n\t    \t\tif(a[mid]<=v) l = mid+1;\n\t    \t\telse h = mid;\n\t    \t}\n\t    \treturn l;\n\t    }\n\t    public static int upperBound(long[] a, long v) {\n\t    \tint l = 0, h = a.length;\n\t    \twhile(l<h) {\n\t    \t\tint mid = (l+h)/2;\n\t    \t\tif(a[mid]<=v) l = mid+1;\n\t    \t\telse h = mid;\n\t    \t}\n\t    \treturn l;\n\t    }\n\t    public static boolean[] getSieve(int n) {\n\t        boolean[] isPrime = new boolean[n+1];\n\t        for (int i = 2; i <= n; i++) isPrime[i] = true;\n\t        for (int i = 2; i*i <= n; i++) if (isPrime[i]) \n\t                for (int j = i; i*j <= n; j++) isPrime[i*j] = false;\n\t        return isPrime;\n\t    }\n\t    public static int gcd(int a, int b) { \n\t    \tint tmp = 0;\n\t    \twhile(b != 0) {\n\t    \t\ttmp = b;\n\t    \t\tb = a%b;\n\t    \t\ta = tmp;\n\t    \t}\n\t    \treturn a;\n\t    }\n\t    public static long gcd(long a, long b) { \n\t    \tlong tmp = 0;\n\t    \twhile(b != 0) {\n\t    \t\ttmp = b;\n\t    \t\tb = a%b;\n\t    \t\ta = tmp;\n\t    \t}\n\t    \treturn a;\n\t    }\n\t    public static int random(int min, int max) {\n\t    \treturn random.nextInt(max-min+1)+min;\n\t    }\n\t\tpublic static void dbg(Object... o) { \n\t\t\tSystem.out.println(Arrays.deepToString(o)); \n\t\t}\n\t\tpublic static void reverse(int[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tint tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\tpublic static void reverse(int[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\tpublic static void reverse(long[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tlong tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\tpublic static void reverse(long[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\tpublic static void reverse(float[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tfloat tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\tpublic static void reverse(float[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\tpublic static void reverse(double[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tdouble tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\tpublic static void reverse(double[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\tpublic static void reverse(char[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tchar tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\tpublic static void reverse(char[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\tpublic static <T> void reverse(T[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tT tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\tpublic static <T> void reverse(T[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\tpublic static void shuffle(int[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            int t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    public static void shuffle(long[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            long t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    public static void shuffle(float[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            float t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    public static void shuffle(double[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            double t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    public static void shuffle(char[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            char t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    public static <T> void shuffle(T[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            T t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t\tpublic static void sortArray(int[] a) {\n\t        shuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\tpublic static void sortArray(long[] a) {\n\t\t\tshuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\tpublic static void sortArray(float[] a) {\n\t\t\tshuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\tpublic static void sortArray(double[] a) {\n\t\t\tshuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\tpublic static void sortArray(char[] a) {\n\t\t\tshuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\tpublic static <T extends Comparable<T>> void sortArray(T[] a) {\n\t        Arrays.sort(a);\n\t    }\n\t}\n\nstatic class Writer {\n\tprivate PrintWriter pw;\n\tpublic Writer(){\n\t\tpw = new PrintWriter(System.out);\n\t}\n\t\n\tpublic Writer(String f){\n\t\ttry {\n\t\t\tpw = new PrintWriter(new FileWriter(f));\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\tpublic void printArray(int[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t}\n\tpublic void printlnArray(int[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t\tpw.println();\n\t}\n\tpublic void printArray(long[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t}\n\tpublic void printlnArray(long[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t\tpw.println();\n\t}\n\tpublic void print(Object o) {\n\t\tpw.print(o.toString());\n\t}\n\tpublic void println(Object o) {\n\t\tpw.println(o.toString());\n\t}\n\tpublic void println() {\n\t\tpw.println();\n\t}\n\tpublic void flush() {\n\t\tpw.flush();\n\t}\n\tpublic void exit() {\n\t\tpw.close();\n\t}\n}\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    a = [s[0]] \n    b = [] \n    if min(s) != 0:\n        print(0)\n    else:\n        for i in range(1, n):\n            if s[i] - a[-1] == 1:\n                a.append(s[i])\n            else:\n                b.append(s[i])\n        ans1 = max(a) + 1\n        if len(b) == 0:\n            ans2 = 0\n        else:\n            if min(b) != 0:\n                ans2 = 0\n            elif len(b) == 1:\n                ans2 = 1\n            else:\n                ans2 = 1\n                for k in range(len(b) - 1):\n                    if b[k+1] - b[k] != 1 and  b[k+1] - b[k] != 0:\n                        break\n                    ans2 = b[k+1] + 1\n        ans = ans1 + ans2\n        print(ans)\n        \n    \n        \n        \n        \n        \n    \n        \n        \n        \n    \n        \n                \n    \n        \n        \n            \n        \n        \n    \n    \n    \n            \n        \n    \n            \n        \n    \n        \n    \n            \n        \n    \n    \n        \n            \n    \n    \n        \n    \n        \n            \n            \n            \n        \n            \n            \n            \n            \n            \n            \n\n    \n        \n        \n        \n        \n    \n    \n        \n            \n    \n        \n        \n                \n            \n            \n            \n            \n    \n            \n                \n        \n        \n    \n            \n    \n        \n            \n        \n    \n\n    \n    \n    \n           \n        \n        \n        \n            \n\n        \n    \n        \n    \n    \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nbool umin(T &a, T b) {\n  return a > b ? (a = b, true) : false;\n}\ntemplate <class T>\nbool umax(T &a, T b) {\n  return a < b ? (a = b, true) : false;\n}\nlong long POW(long long a, long long p, long long M) {\n  if (!p) return 1LL;\n  long long T = POW(a, p / 2, M);\n  T = T * T % M;\n  if (p & 1) T = T * (a % M) % M;\n  return T;\n}\nlong long SQRT(long long a) {\n  long long b = (long long)sqrtl(((double)a) + 0.5);\n  while (b * b < a) ++b;\n  while (b * b > a) --b;\n  return (b * b == a) ? b : -1;\n}\nconst long long MOD = 1e9 + 7;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.precision(10);\n  cout << fixed;\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int cnt[101];\n    memset(cnt, 0, sizeof(cnt));\n    for (int i = 0; i < n; i++) {\n      int a;\n      cin >> a;\n      cnt[a]++;\n    }\n    int ans = 0;\n    int a, b;\n    a = b = 101;\n    for (int i = 0; i <= 100; i++) {\n      if (cnt[i] >= 2)\n        continue;\n      else if (cnt[i] == 1) {\n        if (b == 101) b = i;\n      } else {\n        if (b == 101) b = i;\n        a = i;\n        break;\n      }\n    }\n    ans = a + b;\n    cout << ans << endl;\n  }\n  cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    a=[]\n    b=[]\n    f1=-1\n    l.sort()\n    f2=-1\n    for i in l:\n        if(len(a)==0):\n            a.append(i)\n        elif i in a:\n            if(i not in b):\n                b.append(i)\n        elif i not in a:\n            a.append(i)\n    a.sort()\n    b.sort()\n    for i in range(len(a)):\n        if(a[i]!=i):\n            f1=i\n            break\n    for i in range(len(b)):\n        if(b[i]!=i):\n            f2=i\n            break\n    if(f1==-1):\n        f1=len(a)\n    if f2==-1:\n        f2=len(b)\n    print(abs(f2+f1))\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\n\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    Xs = list(mapint())\n    Xs.sort()\n    x1 = 0\n    for i in range(100):\n        if i in Xs:\n            x1 += 1\n            Xs.remove(i)\n        else:\n            break\n    x2 = 0\n    for i in range(100):\n        if i in Xs:\n            x2 += 1\n            Xs.remove(i)\n        else:\n            break\n    print(x1+x2)"
        },
        {
            "language": 3,
            "solution": "cases=int(input(\"\"))\nlist1=[]\nlist2=[]\noutput=[]\nmex=0\nflag=0\nfor case in range(cases):\n\tsize=int(input(\"\"))\n\tx=input(\"\").split()\n\tif size == 1:\n\t\tif int(x[0]) == 0:\n\t\t\toutput.append(1)\n\t\t\tcontinue\n\t\telse:\n\t\t\toutput.append(0)\n\t\t\tcontinue \n\tif size ==2  and x[0]=='0' and x[1]=='0':\n\t\toutput.append(2)\n\t\tcontinue \n\tfor c in range(size):\n\t\tlist1.append(int(x[c]))\n\tlist1.sort()    \n\tfor c in range(size-1):\n\t\tif list1[c] == list1[c+1]:\n\t\t\tlist2.append(list1[c])\t\n                                                               \n\t#for c in range (0,size):\n\t#\tfalg=0\n\t#\tfor i in range (c+1,size-1):\n\t#\t\tif list1[c] == list1[i]:\n\t#\t\t\tflag=1\n\t#\t\tif flag == 1:\n\t#\t\t\tlist2.append(list1[c]) \n\tlist2=set(list2)\n\tlist1=set(list1)\n\tlist2=list(list2)\n\tlist1=list(list1)\n\tlist1.sort()\n\tlist2.sort()\n\t#print(list1)\n\t#print(list2)\n\tfor c in range(105):\n\t\tif list1[c] != c :\n\t\t\tmex+=c\n\t\t\tbreak\n\t\tif c == len(list1)-1:\n\t\t\tmex+=list1[len(list1)-1]+1 \t\n\t\t\tbreak \n\tfor z in range(105):\n\t\tif len(list2) == 0 :\n\t\t\tbreak \n\t\tif list2[z] != z :\n\t\t\tmex+=z\n\t\t\tbreak\n\t\tif z == len(list2)-1:\n\t\t\tmex+=list2[len(list2)-1]+1\n\t\t\tbreak\n\toutput.append(mex)\n\tmex=0\n\tlist1=[]\n\tlist2=[]\n\tflag=0\nprint(*output,sep=\"\\n\")\n\n\t"
        },
        {
            "language": 3,
            "solution": "totLoop = int(input())\nfor x in range (totLoop):\n    z = int(input())\n    y = list(map(int, input().split()))\n    y.sort()\n    dict = {}\n    for i in y:\n        if str(i) in dict:\n            dict[str(i)] += 1\n        else:\n            dict[str(i)] = 1\n    listValue = list(dict.keys())\n    mexA = 0\n    mexB = 0\n    checkVal = 0\n    oneElementFlag = 0\n    for p in listValue :\n        if p != str(checkVal) :\n            \n            break\n        else:\n            checkVal += 1\n            if dict[p] > 1:\n                mexA += 1\n                if oneElementFlag != 1:\n                    mexB += 1\n            else:\n                oneElementFlag = 1\n                mexA += 1\n    print(mexA + mexB)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        if arr[0] != 0:\n            print(\"0\")\n        else:\n            print(\"1\")\n        continue\n    arr.sort()\n    if arr[0] != 0:\n        print(\"0\")\n        continue\n\n    set1 = [0]\n    set2 = []\n    el1 = 1\n    el2 = 0\n    for i in range(1, n):\n        if arr[i] == set1[-1]:\n            set2.append(arr[i])\n            if arr[i] == el2:\n                el2 += 1\n        else:\n            set1.append(arr[i])\n            if arr[i] == el1:\n                el1 += 1\n    print(el1 + el2)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    kls= [0]*101\n    for i in arr:\n        kls[i]+=1\n    s1=0\n    s2=0\n    \n   \n    for i in range(101):\n        if kls[i]:\n            s1+=1\n        else:\n            break\n    for i in range(101):\n        if kls[i]>=2:\n            s2+=1\n        else:\n            break\n    \n    print(s1+s2)\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfrom collections import Counter\nimport math\n\ndef solve(n,A):\n    m = max(A)\n    ans = 0\n    freq = Counter(A)\n    fa = [0]*(110)\n    for i,v in freq.items():\n        fa[i] = v \n    \n    k = 2 \n    while k!= 0:\n        i = 0\n        while fa[i] != 0:\n            fa[i]-=1 \n            i+=1 \n        ans += (i)\n        \n        \n        k -=1\n    return ans\nt = int(input())\nwhile t:\n    res = []\n    n = int(input())\n    in_ = map(int,input().split(\" \"))\n    for x in in_:\n        res.append(int(x))\n    print(solve(n,res))\n    t-=1"
        },
        {
            "language": 3,
            "solution": "def ans(n, arr):\n    d = dict()\n    for i in range(n):\n        d[arr[i]] = d.get(arr[i], 0) + 1\n    # we created a dictionary of occurence of elements\n    # make a variable which will decide if we will append to B or not\n    flag = 0\n    a, b = 0, 0\n    for i in range(n):\n        x = d.get(i, 0)\n        if x >= 2:\n            a += 1\n            if flag == 0:\n                b += 1\n        elif x == 1:\n            a += 1\n            flag = 1\n        elif x == 0:\n            break\n    return a + b\n\n\nt = int(input())\nL = []\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    L.append(ans(n, arr))\n\nfor l in L:\n    print(l)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing db = double;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pII = pair<int, int>;\nusing pLL = pair<ll, ll>;\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    ll n, c = 0;\n    cin >> n;\n    ll a[n];\n    map<ll, ll> m, m1;\n    for (int i = 1; i <= n; i++) {\n      cin >> a[i];\n      m[a[i]] = -1;\n      m1[a[i]]++;\n    }\n    ll Rekhe_De = 0;\n    ll Rekhe_de = 0;\n    for (int i = 0; i <= 101; i++) {\n      if (m[i] == 0 && c == 0) {\n        Rekhe_De = i;\n        ++c;\n        break;\n      } else if (m1[i] > 0)\n        m1[i]--;\n    }\n    for (int i = 0; i <= 101; ++i) {\n      if (m1[i] == 0) {\n        Rekhe_de = i;\n        break;\n      }\n    }\n    cout << Rekhe_De + Rekhe_de << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import bisect\nfrom collections import Counter,defaultdict,deque\nfrom sys import stdin, stdout\ninput = stdin.readline\nI =lambda:int(input())\nM =lambda:map(int,input().split())\nLI=lambda:list(map(int,input().split()))\nfor _ in range(I()):\n  n=I()\n  arr=LI()\n  arr.sort()\n  c=0\n  if arr[0]!=0:\n    print(0)\n  else:\n    dic=Counter(arr)\n    brr=[]\n    crr=[]\n    for i in dic.keys():\n      if dic[i]>=2:\n        brr+=[i]\n        crr+=[i]\n      elif dic[i]==1:\n        brr+=[i]\n    flag=1\n    for i in range(len(crr)):\n      if i!=crr[i]:\n        c+=i;flag=0;break\n      if i==len(crr)-1 and flag:\n        c+=(i+1)\n    flag=1\n    for j in range(len(brr)):\n      if j!=brr[j]:\n        c+=j;flag=0;break\n      if j==len(brr)-1 and flag:\n        c+=(j+1)\n    \n    print(c)\n      \n      \n    \n\n  \n\n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    freq = [0] * 101\n    for i in l:\n        freq[i] += 1\n    #print(freq)\n    ans = 0\n    for i in range(len(freq)):\n        if freq[i] >= 2:\n            continue\n        else:\n            if freq[i] == 0 :\n                ans += i\n                break\n    for i in range(len(freq)):\n        if freq[i] <= 1:\n            ans += i\n            break\n    print(ans)\n           \n"
        },
        {
            "language": 3,
            "solution": "num_cases = int(input())\n\nfor i in range(num_cases):\n    case_len = input()\n    case_str = input()\n\n    integers = list(map(int, case_str.split(' ')))\n    max_integer = max(integers)\n    # print('max', max_integer)\n    max_sum = 0\n    max_sum_count = 0\n\n    for j in range(max_integer + 2):\n        j_count = integers.count(j)\n\n        if j_count == 0:\n            if max_sum_count == 0:\n                max_sum += j\n                max_sum_count += 1\n                # print('+ +', j, max_sum_count)\n            max_sum += j\n            max_sum_count += 1\n            # print('++', j, max_sum_count)\n        if j_count == 1 and max_sum_count == 0:\n            max_sum += j\n            max_sum_count += 1\n            # print('+', j, max_sum_count)\n\n        if max_sum_count > 1:\n            break\n\n    print(max_sum)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    int n;\n    cin >> n;\n    int a[n], b[101] = {0};\n    for (int i = 0; i < n; i++) cin >> a[i];\n    for (int i = 0; i < n; i++) {\n      b[a[i]]++;\n    }\n    int x = 0, y = 0;\n    for (int i = 0; i < 101; i++) {\n      if (b[i] == 1 || b[i] == 0) {\n        x = i;\n        break;\n      }\n    }\n    for (int i = 0; i < 101; i++) {\n      if (b[i] == 0) {\n        y = i;\n        break;\n      }\n    }\n    cout << x + y << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nfrom math import *\nt = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tarr = sorted([int(p) for p in input().split()])\n\tcount = {}\n\tfor i in range(len(arr)):\n\t\ttry:\n\t\t\tcount[arr[i]]  += 1\n\t\texcept KeyError:\n\t\t\tcount[arr[i]] = 1\n\ta1 = []\n\ta2  = []\n\tfor i in count:\n\t\ta1.append(i)\n\t\tcount[i] -= 1\n\tfor i in count:\n\t\tif count[i] > 0:\n\t\t\ta2.append(i)\n\tc1 = 0\n\tc2 = 0\n\tfor i in range(len(a1)):\n\t\tif a1[i] != i:\n\t\t\tc1 = i\n\t\t\tbreak\n\t\tif i == len(a1) - 1:\n\t\t\tc1 = i+1\n\tfor i in range(len(a2)):\n\t\tif a2[i] != i:\n\t\t\tc2 = i\n\t\t\tbreak\n\t\tif i == len(a2) - 1:\n\t\t\tc2 = i+1\n\tprint(c1+c2)"
        },
        {
            "language": 3,
            "solution": "def findMax(l):\n    l = sorted(set(l))\n    for i in range(len(l) + 1):\n        if i >= len(l):\n            return i\n        if i != l[i]:\n            return i\n\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    a = []\n    b = []\n    for i in range(0, 101):\n        if i in d:\n            a.append(i)\n            d[i] -= 1\n            if d[i] != 0:\n                b.append(i)\n    # print(a,b)\n    print(findMax(a) + findMax(b))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    freq=101*[0]\n    for i in l:\n        freq[i]+=1\n    ans=0\n    c=0\n    for i in range(101):\n        if freq[i]<2:\n            ans+=i\n            break\n    add=0\n    import bisect\n    for i in range(102):\n        j=bisect.bisect_left(l,i)\n        if j==len(l) or l[bisect.bisect_left(l,i)]!=i:\n            add=i\n            break\n    print(ans+add)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    cc = Counter(l)\n    x,y=0,0\n    for i in range(101):\n        if cc[i]>=2:\n            continue\n        else:\n            x=i\n            y=i\n            break\n    d=i\n    for i in range(d,101):\n        if cc[i]>=1:\n            continue\n        else:\n            x=i\n            break\n    print(x+y)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nfor i in range(n):\n    l=int(input())\n    a=[int(x) for x in input().split()]\n    b=-1\n    c=-1\n    for j in range(101):\n        if a.count(j)<2:\n            b=j\n            break\n    for j in range(101):\n        if a.count(j)<1:\n            c=j\n            break    \n    print(b+c)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class a_670 {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t// TODO Auto-generated method stub\n\n\t\tFastScanner in = new FastScanner(System.in);\n\t\tOutputStream outputStream = System.out;\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\t\n\t\tint T = in.nextInt();\n\t\t\n\t\tfor(int aa = 0; aa < T; aa++) {\n\t\t\tint N = in.nextInt();\n\t\t\t\n\t\t\tint freq [] = new int [101];\n\t\t\t\n\t\t\tfor(int i = 0; i < N; i++) {\n\t\t\t\tfreq[in.nextInt()]++;\n\t\t\t}\n\t\t\t// check for first 1, first 0\n\t\t\tint first1 = -1;\n\t\t\tint first0 = -1;\n\t\t\tfor(int i = 0; i < 101; i++) {\n\t\t\t\tif(first1 == -1 && freq[i] == 1) {\n\t\t\t\t\tfirst1 = i;\n\t\t\t\t} else if (freq[i] == 0) {\n\t\t\t\t\tfirst0 = i;\n\t\t\t\t\tif(first1 == -1) first1 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint ans = Math.max(0, first1) + Math.max(0, first0);\n\t\t\tout.println(ans);\n\t\t}\n\t\t\n\t\t\n\t\tout.close();\n\t}\n\n\tstatic class FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner(InputStream stream) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(stream));\n\t\t\tst = new StringTokenizer(\"\");\n\t\t}\n\n\t\tpublic FastScanner(String fileName) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(new File(fileName)));\n\t\t\tst = new StringTokenizer(\"\");\n\t\t}\n\n\t\tpublic String next() throws Exception {\n\t\t\twhile (!st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws Exception {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws Exception {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic Double nextDouble() throws Exception {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic String nextLine() throws Exception {\n\t\t\tif (st.hasMoreTokens()) {\n\t\t\t\tStringBuilder str = new StringBuilder();\n\t\t\t\tboolean first = true;\n\t\t\t\twhile (st.hasMoreTokens()) {\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr.append(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tstr.append(st.nextToken());\n\t\t\t\t}\n\t\t\t\treturn str.toString();\n\t\t\t} else {\n\t\t\t\treturn br.readLine();\n\t\t\t}\n\t\t}\n\t}\n\n\t\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nistream& inp = cin;\ntemplate <typename T>\nvector<T> readV(int64_t size) {\n  vector<T> result;\n  for (int64_t i = 0; i < size; ++i) {\n    T x;\n    inp >> x;\n    result.push_back(x);\n  }\n  return result;\n}\ntemplate <typename T>\nT divup(T a, T b) {\n  if ((a % b) == 0) return a / b;\n  return 1 + a / b;\n}\ntemplate <typename T>\npair<T, T> gcdl(T a, T b) {\n  if (0 == b) return {1, 0};\n  if (a < b) {\n    auto p = gcdl(b, a);\n    return {p.second, p.first};\n  }\n  auto p = gcdl(a % b, b);\n  return {p.first, p.second - p.first * (a / b)};\n}\nint64_t constexpr M = 1000000007;\nstatic_assert(M <= (1 << 30));\nclass modint {\n  int64_t v;\n\n public:\n  modint(int64_t x) : v(x % M) {}\n  int64_t get() const { return v; }\n  modint operator+(modint b) { return modint(v + b.v); }\n  modint operator*(modint b) { return modint(v * b.v); }\n  modint operator-(modint b) { return modint(v + M - b.v); }\n  modint operator/(modint b) {\n    auto p = gcdl(b.get(), M);\n    assert(1 == int64_t(p.first) * b.get() + int64_t(p.second) * M);\n    int64_t x = p.first + int64_t(M) * M;\n    return *this * modint(x);\n  }\n};\nint32_t main() {\n  int64_t ntests;\n  assert(inp);\n  inp >> ntests;\n  for (int64_t test = 0; test < ntests; ++test) {\n    int64_t n;\n    inp >> n;\n    const auto a = readV<int64_t>(n);\n    vector<int64_t> count(102, 0);\n    for (int64_t x : a) ++count.at(x);\n    int64_t mex1 = 0;\n    while (mex1 < count.size() && count.at(mex1) >= 2) ++mex1;\n    int64_t mex2 = 0;\n    while (mex2 < count.size() && count.at(mex2) >= 1) ++mex2;\n    cout << mex1 + mex2 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import *\nfrom bisect import *\nfrom collections import *\nfrom random import *\nfrom decimal import *\nimport sys\ninput=sys.stdin.readline\ndef inp():\n    return int(input())\ndef st():\n    return input().rstrip('\\n')\ndef lis():\n    return list(map(int,input().split()))\ndef ma():\n    return map(int,input().split())\nt=inp()\nwhile(t):\n    t-=1\n    n=inp()\n    a=lis()\n    co=[0]*(102)\n    for i in a:\n        co[i]+=1\n    a=[]\n    b=[]\n    a.sort()\n    po=0\n    fl=0\n    s=0\n    for i in range(101):\n        if(co[i]>=2):\n            continue\n        if(co[i]==0):\n            if(fl==0):\n                s+=2*i\n            else:\n                s+=i\n            break\n        elif(fl==0 and co[i]==1):\n            fl=1\n            s+=i\n        elif(fl==1 and co[i]==0):\n            s+=i\n            break\n    print(s)\n    \n        \n        \n            \n    \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    for j in range(101):\n        if j not in a:\n            mex_a = j\n            break\n        if j in a:\n            a.remove(j)\n    for j in range(101):\n        if j not in a:\n            mex_b = j\n            break\n    print(mex_a + mex_b)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, t, temp, t1, t2, count;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    count = 0;\n    map<int, int> a, b, c;\n    for (int i = 0; i < n; ++i) {\n      cin >> temp;\n      a[temp]++;\n    }\n    auto it = a.begin();\n    while (it != a.end()) {\n      count = it->second;\n      if (count >= 2) {\n        b[it->first]++;\n        c[it->first]++;\n      } else\n        b[it->first]++;\n      it++;\n    }\n    temp = 0;\n    it = b.begin();\n    while (it != b.end()) {\n      if (it->first == temp && it->second != 0) {\n        for (int i = temp + 1;; ++i) {\n          if (b[i] == 0) {\n            temp = i;\n            break;\n          }\n        }\n      }\n      it++;\n    }\n    t1 = temp;\n    temp = 0;\n    it = c.begin();\n    while (it != c.end()) {\n      if (it->first == temp && it->second != 0) {\n        for (int i = temp + 1;; ++i) {\n          if (c[i] == 0) {\n            temp = i;\n            break;\n          }\n        }\n      }\n      it++;\n    }\n    t2 = temp;\n    cout << t1 + t2 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\n\npublic class Mex {\n\n    private static long mex(List<Long> set) {\n\n        if (set.size() == 0)\n            return 0;\n\n        sort(set);\n        long val = 0;\n\n        long mexA = -1;\n        long mexB = -1;\n\n        boolean isA = true;\n        boolean bOver = false;\n\n        for (int i = 0; i < set.size(); i += 1) {\n            long curr = set.get(i);\n\n            if (curr == val && mexA == curr && mexA == mexB)\n                continue;\n\n\n            if (curr == val + 1) {\n                if (mexA == -1)\n                    break;\n                val = curr;\n                if (!isA) {\n                    bOver = true;\n                    isA = true;\n                }\n            } else if (curr > val + 1) {\n                break;\n            }\n\n            if (isA) {\n                mexA = curr;\n                if (!bOver)\n                    isA = false;\n            } else {\n                mexB = curr;\n                isA = true;\n            }\n        }\n\n        return mexA + mexB + 2;\n\n    }\n\n    public static void sort(List A) {\n        PriorityQueue pq = new PriorityQueue();\n        int i = 0;\n        for (i = 0; i < A.size(); i++)\n            pq.add(A.get(i));\n\n        for (i = 0; i < A.size(); i++)\n            A.set(i, pq.poll());\n    }\n\n    public static void main(String[] args) {\n\n        MyScanner sc = new MyScanner();\n        out = new PrintWriter(new BufferedOutputStream(System.out));\n\n        int nb = sc.nextInt();\n        for (int i = 0; i < nb; i++) {\n            int nb2 = sc.nextInt();\n            List<Long> set = new ArrayList<>();\n            for (int j = 0; j < nb2; j++) {\n                set.add(sc.nextLong());\n            }\n            out.println(mex(set));\n        }\n        out.close();\n\n    }\n\n    //-----------PrintWriter for faster output---------------------------------\n    public static PrintWriter out;\n\n    //-----------MyScanner class for faster input----------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Codechef1 {\n\n\tpublic static void main(String[] args) {\n\t\tScanner s=new Scanner(System.in);\n\t\tint t=s.nextInt();\n\t\tfor(int tt=0;tt<t;tt++) {\n\t\t\tint n=s.nextInt();\n\t\t\tint a[]=new int[n];\n\t\t\tint max=Integer.MIN_VALUE;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ta[i]=s.nextInt();\n\t\t\t\tif(a[i]>max) {\n\t\t\t\t\tmax=a[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tint ans=0;\n\t\t\tHashMap<Integer,Integer> h=new HashMap<>();\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(!h.containsKey(a[i])) {\n\t\t\t\t\th.put(a[i], 1);\n\t\t\t\t}else {\n\t\t\t\t\th.put(a[i], h.get(a[i])+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint b=0;\n\t\t\tfor(int i=0;i<max+2;i++) {\n\t\t\t\tif(h.containsKey(i) && h.get(i)<2 && b==0) {\n\t\t\t\t\tb++;\n\t\t\t\t\tans=ans+i;\n\t\t\t\t\t//System.out.println(i+\" \"+ans);\n\t\t\t\t\t//System.out.println(ans+\" \"+i+\" \"+h.get(i));\n\t\t\t\t}else if(!h.containsKey(i)) {\n\t\t\t\t\tans=ans+i*(2-b);\n\t\t\t\t\t//System.out.println(i+\" \"+ans);\n\t\t\t\t\t//System.out.println(ans+\" \"+b);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t\ts.close();\n\t\t\t\t\n\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\nvoid solve() {\n  long long int n;\n  cin >> n;\n  long long int a[n];\n  long long int fre[200];\n  memset(fre, 0, sizeof(fre));\n  for (long long int i = 0; i < n; i++) {\n    cin >> a[i];\n    fre[a[i]]++;\n  }\n  long long int last = -1;\n  for (long long int i = 0; i < 105; i++) {\n    if (fre[i] == 0) {\n      last = i;\n      break;\n    }\n  }\n  long long int last1 = -1;\n  for (long long int i = 0; i < last; i++) {\n    fre[i]--;\n  }\n  for (long long int i = 0; i < 105; i++) {\n    if (fre[i] == 0) {\n      last1 = i;\n      break;\n    }\n  }\n  cout << last1 + last << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  srand(time(NULL));\n  ;\n  int t = 1;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nstruct MI {\n private:\n  char bb[4096];\n  FILE* f;\n  char *bs, *be;\n  char e;\n  bool o, l;\n\n public:\n  MI() : f(stdin) {}\n  MI(FILE* f) : f(f), bs(0), be(0) {}\n  MI(const char* s) : f(fmemopen(const_cast<char*>(s), strlen(s), \"r\")) {}\n  inline operator bool() { return !l; }\n  inline char get() {\n    if (o) {\n      o = 0;\n      return e;\n    }\n    if (bs == be) be = (bs = bb) + fread(bb, 1, sizeof(bb), f);\n    if (bs == be) {\n      l = 1;\n      return -1;\n    };\n    return *bs++;\n  }\n  inline void unget(char c) {\n    o = 1;\n    e = c;\n  }\n  template <typename T>\n  inline T read() {\n    T r;\n    *this > r;\n    return r;\n  }\n  template <typename T>\n  inline MI& operator>(T&);\n};\ntemplate <typename T>\nstruct Q {\n  const static bool U = T(-1) >= T(0);\n  inline void operator()(MI& t, T& r) const {\n    r = 0;\n    char c;\n    bool y = 0;\n    if (U)\n      for (;;) {\n        c = t.get();\n        if (c == -1) goto E;\n        if (isdigit(c)) break;\n      }\n    else\n      for (;;) {\n        c = t.get();\n        if (c == -1) goto E;\n        if (c == '-') {\n          c = t.get();\n          if (isdigit(c)) {\n            y = 1;\n            break;\n          };\n        } else if (isdigit(c))\n          break;\n        ;\n      };\n    for (;;) {\n      if (c == -1) goto E;\n      if (isdigit(c))\n        r = r * 10 + (c ^ 48);\n      else\n        break;\n      c = t.get();\n    }\n    t.unget(c);\n  E:;\n    if (y) r = -r;\n  }\n};\ntemplate <>\nstruct Q<char> {\n  inline void operator()(MI& t, char& r) {\n    int c;\n    for (;;) {\n      c = t.get();\n      if (c == -1) {\n        r = -1;\n        return;\n      };\n      if (!isspace(c)) {\n        r = c;\n        return;\n      };\n    }\n  }\n};\ntemplate <typename T>\ninline MI& MI::operator>(T& t) {\n  Q<T>()(*this, t);\n  return *this;\n}\ntemplate <typename T>\nstd::ostream& operator<(std::ostream& out, const T& t) {\n  return out << t;\n}\nusing std::cout;\nMI cin;\nconst int nmax = 101;\nint n;\nint occ[nmax];\ninline void work() {\n  cin > n;\n  memset(occ, 0, sizeof(occ));\n  for (int i = 1; i <= n; ++i) ++occ[(cin.read<int>())];\n  int l = 0;\n  while (occ[l]) --occ[l++];\n  int r = 0;\n  while (occ[r]) --occ[r++];\n  cout < (l + r) < ('\\n');\n}\nint main() {\n  int T = (cin.read<int>());\n  while (T--) work();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t, n;\nint main() {\n  ios::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n  cin >> t;\n  while (t--) {\n    int cnt[2], a[110];\n    bool b = false;\n    fill(a, a + 101, 0);\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      int inp;\n      cin >> inp, a[inp]++;\n    }\n    for (int i = 0; i <= 100; i++) {\n      if (a[i] == 1)\n        cnt[b] = i, b = true;\n      else if (!a[i] && !b) {\n        cnt[0] = cnt[1] = i;\n        break;\n      } else if (b && a[i] <= 1) {\n        cnt[b] = i;\n        break;\n      }\n    }\n    cout << cnt[0] + cnt[1] << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\n\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = [0 for i in range(101)]\n    for i in arr:\n        freq[i] += 1\n    b = c = -1\n    for i in range(101):\n        if freq[i] > 0:\n            freq[i] -= 1\n        else:\n            b = i\n            break\n    for i in range(101):\n        if freq[i] > 0:\n            freq[i] -= 1\n        else:\n            c = i\n            break\n    print(b+c)\n    t -= 1\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.math.BigInteger;\npublic final class codeForces\n{    \n    public static void main(String args[])\n    {\n        StringBuilder ans=new StringBuilder();;\n        FastReader in=new FastReader();  \n        int T=in.nextInt();\n        while(T-->0)\n        {\n            int N=in.nextInt();\n            int A[]=new int[N];\n            int f[]=new int[101];\n            Arrays.fill(f,0);\n            for(int i=0; i<N; i++)\n            {\n                A[i]=in.nextInt();\n                f[A[i]]++;\n            }\n            int c=2;\n            int a=0;\n            for(int i=0; i<=100; i++)\n            {\n                if(f[i]==0)\n                {\n                    //no check if any element before this has freq]==1\n                    for(int j=0; j<i; j++)\n                    if(f[j]==1)\n                    {\n                        a+=j;\n                        c--;\n                        break;\n                    }\n                    a+=c*i;\n                    break;\n                }\n            }\n            System.out.println(a);\n        }\n    }\n    //fucntions\n    //fucntions\n    //fucntions\n    //fucntions\n    static int[] input(int A[]) //input of Int Array\n    {\n        FastReader in=new FastReader();\n        int N=A.length;\n        for(int i=0; i<N; i++)\n        {\n            A[i]=in.nextInt();\n        }\n        return A;\n    }\n\n    static long[] input(long A[]) //Input of long Array\n    {\n        FastReader in=new FastReader();\n        for(int i=0; i<A.length; i++)A[i]=in.nextLong();\n        return A;\n    }\n\n    static int GCD(int a,int b) //wrong output if a ||b are intially zero\n    {\n        if(b==0)\n        {\n            return a;\n        }\n        else return GCD(b,a%b );\n    }\n\n    static boolean isPrime(int N)\n    {\n        for(int i=2; i*i<N; i++)\n            if(N%i==0)return false;\n        return true;\n    }\n\n}\n//Code For FastReader\n//Code For FastReader\n//Code For FastReader\n//Code For FastReader\nclass FastReader\n{\n    BufferedReader br;\n    StringTokenizer st;\n    public FastReader()\n    {\n        br=new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next()\n    {\n        while(st==null || !st.hasMoreElements())\n        {\n            try\n            {\n                st=new StringTokenizer(br.readLine());\n            }\n            catch(IOException e)\n            {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt()\n    {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong()\n    {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble()\n    {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine()\n    {\n        String str=\"\";\n        try\n        {\n            str=br.readLine();\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n        return str;\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "\n\n\nfrom collections import defaultdict\n\n\n\nt = int(input())\n\nfor _ in range(t):\n\n    n = int(input())\n    l = list(map(int,input().split()))\n    hash = defaultdict(int)\n    for i in l:\n        hash[i]+=1\n    mexa = 0\n    mexb = 0\n    flag = 0\n    for i in range(n+1):\n        if i in hash:\n\n            if hash[i] == 1:\n                mexa+=1\n                flag = 1\n            else:\n                mexa+=1\n                if flag!=1:\n                    mexb+=1\n\n        else:\n            break\n    print(mexa+mexb)\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int T;\n  cin >> T;\n  for (int testcases = 0; testcases < T; testcases++) {\n    int n;\n    cin >> n;\n    vector<int> arr(n);\n    vector<int> cnt(101);\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n      cnt[arr[i]]++;\n    }\n    int cnt1 = 0;\n    bool both = true;\n    int cnt2 = 0;\n    for (int i = 0; i < 101; i++) {\n      if (both && cnt[i] > 1) cnt1++;\n      if (both && cnt[i] <= 1) {\n        both = false;\n      }\n      if (!both && cnt[i] > 0) cnt2++;\n      if (!both && cnt[i] == 0) break;\n    }\n    cout << cnt1 * 2 + cnt2 << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid process() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int &i : a) cin >> i;\n  int ans = 0;\n  sort(a.begin(), a.end());\n  int x = -1, y = -1;\n  for (int i : a) {\n    if (i == x + 1) {\n      x++;\n    } else {\n      if (i == y + 1) {\n        y++;\n      }\n    }\n  }\n  ans = x + y + 2;\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    process();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a=[]\n    b=[]\n    l = list(map(int,input().split()))\n    l.sort()\n    c1=0\n    c2=0\n    for i in l:\n        if i not in a:\n            a.append(i)\n        elif i not in b:\n            b.append(i)\n    for i in range(len(a)):\n        if c1==a[i]:\n            c1+=1\n        else:\n            break\n    for i in range(len(b)):\n        if c2 == b[i]:\n            c2 += 1\n        else:\n            break\n    print(c1+c2)\n"
        },
        {
            "language": 3,
            "solution": "# 1406A.py\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    count = dict()\n    count = defaultdict(lambda : 0,count)\n    for i in range(n):\n        count[a[i]]+=1\n    p = 0\n    while count[p]!=0:\n        p+=1\n    # print(p)\n    i = 0\n    while count[i]>1:\n        i+=1\n    p+=i\n    print(p)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = Counter(map(int, input().split()))\n    ans = 0\n    for i in range(101):\n        if i in a and a[i]>0:\n            a[i] -= 1\n            continue\n        ans += i\n        break\n    for i in range(101):\n        if i in a and a[i]>0:\n            a[i] -= 1\n            continue\n        ans += i\n        break\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class A {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tint numOfTests = Integer.parseInt(br.readLine());\n\n\t\tfor (int test = 0; test < numOfTests; test++) {\n\n\t\t\tStringTokenizer st = new StringTokenizer(br.readLine(), \" \");\n\n\t\t\tint n = Integer.parseInt(st.nextToken());\n\t\t\t\n\t\t\tList<Integer> a = new ArrayList<Integer>();\n\t\t\t\n\t\t\tst = new StringTokenizer(br.readLine(), \" \");\n\t\t\tfor(int i=0; i<n; i++) {\n\t\t\t\ta.add(Integer.parseInt(st.nextToken()));\n\t\t\t}\n\t\t\t\n\t\t\tint res = 0;\n\t\t\tfor(int i=0; i<2; i++) {\n\t\t\t\t\n\t\t\t\tboolean run = true;\n\t\t\t\tfor(int j=0; run; j++) {\n\t\t\t\t\t\n\t\t\t\t\tint found = -1;\n\t\t\t\t\tfor(int k=0; k<a.size(); k++) {\n\t\t\t\t\t\tif (a.get(k) == j) {\n\t\t\t\t\t\t\tfound = k;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (found > -1) {\n\t\t\t\t\t\ta.remove(found);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres += j;\n\t\t\t\t\t\trun = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(res);\n\t\t}\n\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vector<int> v;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      v.push_back(x);\n    }\n    sort(v.begin(), v.end());\n    int l = 0, r = 0;\n    for (int i = 0; i < n; i++) {\n      if (v[i] == l)\n        l++;\n      else if (v[i] == r)\n        r++;\n    }\n    cout << l + r << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\ninput = sys.stdin.readline\n\nif __name__ == '__main__':\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().rstrip().split()))\n        m1, m2 = -1, -1\n        for i in range(101):\n            if m1!=-1 and m2 != -1:\n                break\n            c = a.count(i)\n            if c == 0:\n                if m1 == -1:\n                    m1 = m2 = i\n                else:\n                    m2 = i\n            if c == 1:\n                if m1 == -1:\n                    m1 = i\n        print(m1+m2)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class SubsetMex {\t\t\t\t//1406A\n\t\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\t\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint t = Integer.parseInt(br.readLine());\n\t\twhile (t-- > 0) \n\t\t{\n\t\t\tint n = Integer.parseInt(br.readLine());\n\t\t\tStringTokenizer st = new StringTokenizer(br.readLine(), \" \");\n\t\t\tint ar[] = new int[102];\n\t\t\tfor (int i = 0; i < n; i++) \n\t\t\t\tar[Integer.parseInt(st.nextToken())]++;\n\t\t\tsb.append(solve(ar, n)).append(\"\\n\");\n\t\t}\n\t\tSystem.out.println(sb);\n\t}\n\n\tprivate static int solve(int[] ar, int n) {\n\t\t\n\t\tint p = 2, s = 0;\n\t\tfor(int i = 0; i <= n+1; i++)\n\t\t{\n\t\t\tif(ar[i] < p)\n\t\t\t{\n\t\t\t\ts += i;\n\t\t\t\ti--;\n\t\t\t\tp--;\n\t\t\t}\n\t\t\tif(p == 0) break;\n\t\t}\n\t\treturn s;\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    b = [i for i in range(n)]\n    net = [0] * 101\n    for i in range(n):\n        net[a[i]] += 1\n    for i in range(101):\n        if net[i] == 0:\n            x = i\n            break\n        else:\n            net[i] -= 1\n    for i in range(101):\n        if net[i] == 0:\n            y = i\n            break\n        else:\n            net[i] -= 1\n    print(x + y)\n    t -= 1\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor q in range(0,t):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    b=[0]*(101)\n    for i in range(0,n):\n        b[a[i]]+=1\n    count=0\n    for i in range(0,101):\n        if b[i]==0:\n            count=i\n            break\n    for i in range(0,101):\n        if b[i]<=1:\n            count+=i\n            break\n    print(count)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    a=[0]*101\n    b=[0]*101\n    n=int(input())\n    ls=list(map(int,input().split()))\n    for i in ls:\n        if(a[i]==1):\n            b[i]=1\n        else:\n            a[i]=1\n    # print(a)\n    # print(b)\n    ans=0\n    ind=0\n    flaga=0\n    flagb=0\n    while(ind<101 and (flaga!=1 or flagb!=1)):\n        if(a[ind]==0 and flaga!=1):\n            flaga+=1\n            ans+=ind\n        if(b[ind]==0 and flagb!=1):\n            flagb+=1\n            ans+=ind\n        ind+=1\n        # print(flaga,flagb,ind)\n    print(ans)\n    "
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int, input().split()))\n    def mex(l):\n        i=0\n        a=[]\n        while i<n+1:\n            if i in l:\n                a.append(i)\n                l.remove(i)\n                i+=1\n            else:\n                return i\n    r1=mex(l)\n    r2=mex(l)\n    print(r1+r2)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n  n,lst,a,b = int(input()),sorted(list(map(int,input().split()))),0,0\n  for i in lst:\n    if a == i:a+=1\n    elif b == i:b+=1\n  print(a+b)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tN=int(input())\n\tarray=[int(x) for x in input().split()]\n\tchecklist=[0 for i in range(200)]\n\ttotal=0\n\tfor i in array:\n\t\tchecklist[i]+=1\n\tfor i in range(2):\n\t\tj=0\n\t\twhile checklist[j]:\n\t\t\tchecklist[j]-=1\n\t\t\tj+=1\n\t\ttotal+=j\n\tprint(total)"
        },
        {
            "language": 3,
            "solution": "import random\n\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a * b) / gcd(a, b)\n\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    curr=0\n    d={}\n    ans=[]\n    for i in a:\n        if i not in d:\n            d[i]=1\n        else:\n            d[i]+=1\n    while(len(ans)<2):\n        if curr in d:\n            if d[curr]==1 and len(ans)==0:\n                ans.append(curr)\n        else:\n            ans.append(curr)\n            ans.append(curr)\n        curr+=1\n    print(ans[0]+ans[1])\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\ndef mex(li):\n    now = 0\n\n    if not li:\n        return 0\n    \n    while True:\n        if now not in li:\n            break\n\n        now += 1\n\n    return now\n\nfor _ in range(n):\n    m = int(input())\n    li = list(map(int,input().split()))\n    li.sort()\n\n    a = []\n    b = []\n\n    for i in li:\n        if i in a:\n            b.append(i)\n        else:\n            a.append(i)\n\n    print(mex(a)+mex(b))"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nfrom collections import defaultdict,Counter\n\n# input=sys.stdin.readline\n# def print(x):\n#     sys.stdout.write(str(x)+\"\\n\")\n\n# sys.stdout=open(\"CP1/output.txt\",'w')\n# sys.stdin=open(\"CP1/input.txt\",'r')\n\n# mod=pow(10,9)+7\nt=int(input())\nfor i in range(t):\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\tc=Counter(a)\n\tans=0\n\tfor j in range(101):\n\t\tif c.get(j,0)==0:\n\t\t\tans+=2*j\n\t\t\tbreak\n\t\telif c.get(j,0)==1:\n\t\t\tans+=j\n\t\t\tfor k in range(j+1,101):\n\t\t\t\tif c.get(k,0)==0:\n\t\t\t\t\tans+=k\n\t\t\t\t\tbreak\n\t\t\tbreak\n\tprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    lst1=[]\n    lst2=[]\n    for j in arr:\n        if j in lst1:\n            lst2.append(j)\n        else:\n            lst1.append(j)\n    a=0\n    while a in lst1:\n        a=a+1\n        if a==max(lst1)+1:\n            break\n    mex1=a\n    b=0\n    while b in lst2:\n        b=b+1\n        if b==max(lst2)+1:\n            break\n    mex2=b\n    print(mex1+mex2)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a=[0]*105\n    input()\n    for i in map(int,input().split()):\n        a[i]+=1\n    ans=0\n    #print(a)\n    for i in range(101):\n        if a[i]<2:\n            ans+=i\n            break\n    for i in range(101):\n        if a[i]<1:\n            ans+=i\n            break\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    unordered_map<int, int> m;\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      int a;\n      cin >> a;\n      m[a]++;\n    }\n    int ans = 0;\n    int i = 0;\n    while (true) {\n      if (m[i] >= 2) {\n        ans += 2;\n      } else if (m[i] == 1) {\n        ans++;\n        i++;\n        while (m[i] > 0) {\n          ans++;\n          i++;\n        }\n        break;\n      } else {\n        break;\n      }\n      i++;\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    v = [0] * 110\n    for u in map(int,input().split()):\n        v[u]+=1\n    mx = 0\n    for i in range(0,110):\n        if v[i]<2:\n            mx = i\n            break\n    if v[mx]==0:\n        mx=2 * mx\n    else:\n        for i in range(mx+1,110):\n            if v[i]<1:\n                mx+=i\n                break\n    print(mx)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nsys.setrecursionlimit(10**5)\nint1 = lambda x: int(x)-1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\nfrom collections import Counter\n\nfor _ in range(II()):\n    n=II()\n    aa=LI()\n    ac=Counter(aa)\n    x=y=-1\n    for a in range(101):\n        if x==-1 and ac[a]<2:x=a\n        if y==-1 and ac[a]<1:y=a\n    print(x+y)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, a;\n  cin >> n;\n  vector<int> cnt(102);\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    cnt[a]++;\n  }\n  int ans = 0, x = 0, i = 0;\n  while (i < 101 && cnt[i] >= 2) i++;\n  if (cnt[i] == 0) {\n    cout << 2 * i << endl;\n    return;\n  }\n  ans = i;\n  i++;\n  while (i < 101 && cnt[i] >= 1) i++;\n  ans += i;\n  cout << ans << endl;\n}\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\nimport java.util.*;\npublic class M {\n\tstatic Scanner scanner=new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tint q=scanner.nextInt();\n\t\twhile(q-->0) {\n\t\t\tint n=scanner.nextInt();\n\t\t\tint a[]=new int [n];\n\t\t\tfor(int i=0;i<n;i++)a[i]=scanner.nextInt();\n\t\t\tArrays.sort(a);\n\t\t\tSet<Integer>set=new TreeSet<Integer>();\n\t\t\tSet<Integer>set2=new TreeSet<Integer>();\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(!set.contains(a[i]))set.add(a[i]);\n\t\t\t\telse set2.add(a[i]);\n\t\t\t}\n\t\t\tList<Integer>list=new ArrayList<Integer>();\n\t\t\tlist.addAll(set);\n\t\t\tCollections.sort(list);\n\t\t\tList<Integer>list2=new ArrayList<Integer>();\n\t\t\tlist2.addAll(set2);\n\t\t\tCollections.sort(list2);\n\t\t\tint x=-1,y=-1;\n\t\t\tfor(int i:set) {\n\t\t\t\tif(i==x+1)x=i;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tfor(int i:set2) {\n\t\t\t\tif(i==y+1)y=i;\n\t\t\t\telse break;\n\t\t\t}\n//\t\t\tSystem.out.println(set+\" \"+x);\n//\t\t\tSystem.out.println(set2+\" \"+y);\n\t\t\tSystem.out.println(x+y+2);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nconst int MOD = 1e9 + 7;\nconst int MX = 2e5 + 5;\nconst ll INF = 1e18;\nconst ld PI = acos((ld)-1);\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    vector<int> cnt(101);\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      cnt[x]++;\n    }\n    int queda = 2;\n    int sol = 0;\n    for (int i = 0; i < 102 && queda > 0; i++) {\n      if (cnt[i] == 0) {\n        if (queda == 2) {\n          queda -= 2;\n          sol += (i * 2);\n        } else {\n          queda--;\n          sol += i;\n        }\n      } else if (cnt[i] == 1 && queda == 2) {\n        queda--;\n        sol += i;\n      }\n    }\n    cout << sol << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nins = lambda: input().rstrip()\nini = lambda: int(input().rstrip())\ninm = lambda: map(int, input().rstrip().split())\ninl = lambda: list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\n\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = inl()\n    first = second = -1\n    for i in range(101):\n        if a.count(i) > 1:\n            continue\n        if a.count(i) == 1 and first == -1:\n            first = i\n            continue\n        if a.count(i) == 0:\n            first = i if first == -1 else first\n            second = i\n            break\n    print(first+second)\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=sorted(list(map(int,input().split())))\n    list1=[]\n    list2=[]\n    for items in a :\n        if items not in list1:\n            list1.append(items)\n        elif items not in list2:\n            list2.append(items)\n    x=-1\n    for i in range(0,len(list1)):\n        x+=1\n        if list1[i]!=x:\n            break\n    if i==len(list1)-1:\n        if x==list1[i]:\n            x+=1\n    y=-1\n    if len(list2)==0:\n        y=0\n    else:\n        for i in range(0,len(list2)):\n            y+=1\n            if list2[i]!=y:\n                break\n    if i==len(list2)-1:\n        if y==list2[i]:\n            y+=1\n    print(x+y)"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfrom collections import Counter\n\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = Counter(a)\n    al,be = -1,-1\n    \n    for i in range(102):\n        if b[i] >= 2:\n            continue\n            \n        elif b[i] == 1:\n            if al == -1:\n                al = i\n                \n        elif b[i] == 0:\n            if al == -1:\n                al,be = i,i\n                print(al+be)\n                break\n            else:\n                be = i\n                print(al+be)\n                break"
        },
        {
            "language": 3,
            "solution": "def mex(l):\n    for i in range(101):\n        if i not in l:\n            return i\n        \nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    x.sort()\n    for each in x:\n        if each in l1:\n            l2.append(each)\n        else:\n            l1.append(each)\n\n    print(mex(l1) + mex(l2))"
        },
        {
            "language": 3,
            "solution": "for s in[*open(0)][2::2]:\n a=[0]*101\n for x in s.split():a[int(x)]+=1\n i=a.index(0);a[i]=1;print(i+a.index(1))"
        },
        {
            "language": 3,
            "solution": "res=[]\nfor x in range(int(input())):\n    a=int(input())\n    l=list(map(int,input().split()))\n    m=set(l)\n    ans1=[];ans2=[];fi=[];sec=[]\n    for y in m:\n        e=l.count(y)\n        if e>1:\n            sec.append(y)\n            fi.append(y)\n        else:\n            fi.append(y)\n    for t in range(len(sec)+1):\n        if t not in sec:\n            ans1.append(t)\n            break\n        if t==len(sec):\n            ans1.append(t)\n            break\n    if len(sec)==0:\n        d=0\n        ans1.append(d)\n    for t in range(len(fi)+1):\n        if t not in fi:\n            ans2.append(t)\n            break\n        if t==len(fi):\n            ans1.append(t)\n            break\n    if len(fi)==0:\n        d=0\n        ans2.append(d)\n    final=sum(ans1)+sum(ans2)\n    res.append(final)\nfor B in res:\n    print(B)   "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int a[n];\n    int freq[101] = {0};\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      freq[a[i]] += 1;\n    }\n    int ans = 0;\n    int i;\n    int f = 0;\n    for (i = 0; i <= 100; i++) {\n      if (freq[i] == 0) {\n        ans = 2 * i;\n        f = 1;\n        break;\n      }\n      if (freq[i] == 1) {\n        ans += i;\n        break;\n      }\n    }\n    if (i == 101) {\n      cout << \"202\" << endl;\n      continue;\n    }\n    if (f == 1) {\n      cout << ans << endl;\n      continue;\n    }\n    while (freq[i] >= 1 && i <= 100) {\n      i += 1;\n    }\n    ans += i;\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    a = list(map(int, input().split()))\n    nums = [0] * 101\n    for i in range(N):\n        nums[a[i]] += 1\n    now = 0\n    while nums[now] >= 2:\n        now += 1\n    now2 = 0\n    while nums[now2] >= 1:\n        now2 += 1\n    print(now+now2)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    l1=list(map(int,input().split()))\n    l2=list(set(l1))\n    l3=[]\n    l2.sort()\n    x,y=min(l2),max(l2)\n    ans=0\n    if x==0:\n        f,c=0,0\n        for i in range(x,y+1):\n            if i not in l2:\n                c=i\n                f=1\n                break\n        if f==0:\n            ans+=y+1\n        else:\n            ans+=c\n    if len(l1)!=len(l2):\n        for i in l2:\n            if l1.count(i)>1:\n                l3.append(i)\n        x,y=min(l3),max(l3)\n        if x==0:\n            f,c=0,0\n            for i in range(x,y+1):\n                if i not in l3:\n                    c=i\n                    f=1\n                    break\n            if f==0:\n                ans+=y+1\n            else:\n                ans+=c\n    print(ans)\n    \n        "
        },
        {
            "language": 3,
            "solution": "# @oj: codeforces\n# @id: hitwanyang\n# @email: 296866643@qq.com\n# @date: 2020-09-12 21:45\n# @url:https://codeforc.es/contest/1406/problem/A\nimport sys,os\nfrom io import BytesIO, IOBase\nimport collections,itertools,bisect,heapq,math,string\nfrom decimal import *\n# region fastio\n\nBUFSIZE = 8192\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# ------------------------------\n## \u6ce8\u610f\u5d4c\u5957\u62ec\u53f7!!!!!!\n## \u5148\u6709\u601d\u8def,\u518d\u5199\u4ee3\u7801,\u522b\u7740\u6025!!!\n## \u5148\u6709\u6734\u7d20\u89e3\u6cd5,\u4e0d\u8981\u6709\u601d\u7ef4\u5b9a\u5f0f,\u8bd5\u7740\u6362\u601d\u8def\u89e3\u51b3\ndef main():\n    t=int(input())\n    for i in range(t):\n        n=int(input())\n        a=list(map(int,input().split()))\n        cnt=[0]*101\n        for x in a:\n            cnt[x]+=1\n        ans=0\n        for j in range(len(cnt)):\n            if cnt[j]==0:\n                ans+=j\n                break\n            cnt[j]-=1\n        for j in range(len(cnt)):\n            if cnt[j]==0:\n                ans+=j\n                break\n            cnt[j]-=1\n        print (ans)\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Main {\n\n\tstatic PrintWriter pw = new PrintWriter(System.out);\n\n\tpublic static void main(String[] args) throws IOException, InterruptedException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = sc.nextInt();\n\t\t\t}\n\t\t\tint[] freq = new int[101];\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tfreq[arr[i]]++;\n\t\t\t}\n//\t\t\tpw.println(Arrays.toString(freq));\n\t\t\tint idx1 = 0, idx0 = 0;\n\t\t\tfor (int i = 0; i < freq.length; i++) {\n\t\t\t\tif (freq[i] == 0) {\n\t\t\t\t\tidx0 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < freq.length; i++) {\n\t\t\t\tif (freq[i] == 0 || freq[i] == 1) {\n\t\t\t\t\tidx1 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpw.println(idx0 + idx1);\n\t\t}\n\t\tpw.close();\n\t}\n\n\tpublic static class pair implements Comparable<pair> {\n\t\tint x;\n\t\tint y;\n\n\t\tpublic pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn x + \" \" + y;\n\t\t}\n\n\t\tpublic boolean equals(Object o) {\n\t\t\tif (o instanceof pair) {\n\t\t\t\tpair p = (pair) o;\n\t\t\t\treturn p.x == x && p.y == y;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic int hashCode() {\n\t\t\treturn new Double(x).hashCode() * 31 + new Double(y).hashCode();\n\t\t}\n\n\t\tpublic int compareTo(pair other) {\n\t\t\tif (this.x == other.x) {\n\t\t\t\treturn Long.compare(this.y, other.y);\n\t\t\t}\n\t\t\treturn Long.compare(this.x, other.x);\n\t\t}\n\t}\n\n\tpublic static class tuble implements Comparable<tuble> {\n\t\tint x;\n\t\tint y;\n\t\tint z;\n\n\t\tpublic tuble(int x, int y, int z) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn x + \" \" + y + \" \" + z;\n\t\t}\n\n\t\tpublic int compareTo(tuble other) {\n\t\t\tif (this.x == other.x) {\n\t\t\t\tif (this.y == other.y)\n\t\t\t\t\treturn this.z - other.z;\n\t\t\t\treturn this.y - other.y;\n\t\t\t} else {\n\t\t\t\treturn this.x - other.x;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tString x = next();\n\t\t\tStringBuilder sb = new StringBuilder(\"0\");\n\t\t\tdouble res = 0, f = 1;\n\t\t\tboolean dec = false, neg = false;\n\t\t\tint start = 0;\n\t\t\tif (x.charAt(0) == '-') {\n\t\t\t\tneg = true;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\tfor (int i = start; i < x.length(); i++)\n\t\t\t\tif (x.charAt(i) == '.') {\n\t\t\t\t\tres = Long.parseLong(sb.toString());\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t\tdec = true;\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(x.charAt(i));\n\t\t\t\t\tif (dec)\n\t\t\t\t\t\tf *= 10;\n\t\t\t\t}\n\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\treturn res * (neg ? -1 : 1);\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \npublic class template {\n\tstatic InputReader scn = new InputReader(System.in);\n\tstatic OutputWriter out = new OutputWriter(System.out);\n \n\tpublic static void main(String[] args) {\n\t\tint t = scn.nextInt();\n\t\twhile (t-- > 0)\n\t\t\tsolve();\n\t\tout.close();\n\t}\n \n\tpublic static void solve() {\n\t\tint n = scn.nextInt();\n\t\tint[] arr = readArray(n);\n\t\tArrays.sort(arr);\n\t\tHashMap<Integer, Integer> map = CountFrequencies(arr);\n\t\tArrayList<Integer> list1 = new ArrayList<>();\n\t\tArrayList<Integer> list2 = new ArrayList<>();\n \n\t\tfor (int val : map.keySet()) {\n\t\t\tint times = map.get(val);\n\t\t\tif (times > 1) {\n\t\t\t\tlist1.add(val);\n\t\t\t\tlist2.add(val);\n\t\t\t} else {\n\t\t\t\tlist1.add(val);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(list1);\n\t\tCollections.sort(list2);\n\t\tint val1 = 0;\n\t\tint val2 = 0;\n\t\tint counter = 0;\n\t\twhile (true) {\n\t\t\tint bin = Collections.binarySearch(list1, counter);\n\t\t\tif (bin < 0) {\n\t\t\t\tval1 = counter;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcounter++;\n\t\t}\n\t\tcounter = 0;\n\t\twhile (true) {\n\t\t\tint bin = Collections.binarySearch(list2, counter);\n\t\t\tif (bin < 0) {\n\t\t\t\tval2 = counter;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcounter++;\n\t\t}\n\t\tout.println(val1 + val2);\n\t}\n \n\tpublic static long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}\n \n\tpublic static long lcm(long a, long b) {\n\t\treturn (a * b) / gcd(a, b);\n\t}\n \n\tpublic static boolean isPrime(long n) {\n\t\tif (n < 2)\n\t\t\treturn false;\n\t\tif (n == 2 || n == 3)\n\t\t\treturn true;\n\t\tif (n % 2 == 0 || n % 3 == 0)\n\t\t\treturn false;\n\t\tlong sqrtN = (long) Math.sqrt(n) + 1;\n\t\tfor (long i = 6L; i <= sqrtN; i += 6) {\n\t\t\tif (n % (i - 1) == 0 || n % (i) + 1 == 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n \n\tpublic static HashMap<Integer, Integer> CountFrequencies(int[] arr) {\n\t\tHashMap<Integer, Integer> map = new HashMap<>();\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tint a = arr[i];\n\t\t\tif (map.containsKey(a)) {\n\t\t\t\tmap.put(a, map.get(a) + 1);\n\t\t\t} else {\n\t\t\t\tmap.put(a, 1);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}\n \n\tpublic static int[] readArray(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = scn.nextInt();\n\t\t}\n\t\treturn a;\n\t}\n \n\tpublic static int countPrimeFactors(int n) {\n\t\tint count = 0;\n\t\twhile (n % 2 == 0) {\n\t\t\tn = n / 2;\n\t\t\tcount++;\n\t\t}\n\t\tfor (int i = 3; i <= Math.sqrt(n); i = i + 2) {\n\t\t\twhile (n % i == 0) {\n\t\t\t\tn = n / i;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (n > 2)\n\t\t\tcount++;\n\t\treturn (count);\n\t}\n \n\tpublic static ArrayList<Integer> printKAlmostPrimes(int n) {\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int i = 1, num = 2; i <= n; num++) {\n\t\t\tif (countPrimeFactors(num) == 2) {\n\t\t\t\tif (num > n) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlist.add(num);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n \n\tpublic static int[] SieveOfEratosthenes(int[] arr) {\n\t\tint n = arr.length;\n\t\tfor (long i = 3; i < n; i = i + 2) {\n\t\t\tarr[(int) i] = 1;\n\t\t}\n\t\tfor (long i = 3; i < n; i = i + 2) {\n\t\t\tif (arr[(int) i] == 1) {\n\t\t\t\tfor (long j = (long) i * i; j < n; j = j + i) {\n\t\t\t\t\tarr[(int) j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tarr[2] = 1;\n\t\tarr[0] = arr[1] = 0;\n\t\treturn arr;\n\t}\n \n\tstatic void sort(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}\n \n\tpublic static ArrayList<String> printPermutn(String str, String ans, ArrayList<String> list) {\n\t\tif (str.length() == 0) {\n\t\t\tlist.add(ans);\n\t\t}\n\t\tfor (int i = 0; i < str.length(); i++) {\n\t\t\tchar ch = str.charAt(i);\n\t\t\tString ros = str.substring(0, i) + str.substring(i + 1);\n\t\t\tprintPermutn(ros, ans + ch, list);\n\t\t}\n\t\treturn list;\n\t}\n \n\tpublic static ArrayList<String> GetSubSequences(String s) {\n\t\tif (s.length() == 0) {\n\t\t\tArrayList<String> br = new ArrayList<>();\n\t\t\tbr.add(\"\");\n\t\t\treturn br;\n\t\t}\n\t\tchar ch = s.charAt(0);\n\t\tString ms = s.substring(1);\n \n\t\tArrayList<String> rr = GetSubSequences(ms);\n \n\t\tArrayList<String> mr = new ArrayList<>();\n \n\t\tint t = rr.size();\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tmr.add(rr.get(i));\n\t\t\tmr.add(ch + rr.get(i));\n\t\t}\n \n\t\treturn mr;\n \n\t}\n \n\tpublic static int binarySearch(int arr[], int l, int r, int x) {\n\t\tif (r >= l) {\n\t\t\tint mid = l + (r - l) / 2;\n\t\t\tif (arr[mid] == x)\n\t\t\t\treturn mid;\n\t\t\tif (arr[mid] > x)\n\t\t\t\treturn binarySearch(arr, l, mid - 1, x);\n\t\t\treturn binarySearch(arr, mid + 1, r, x);\n\t\t}\n\t\treturn -1;\n\t}\n \n\tpublic static int firstOccurence(int array1[], int low, int high, int x, int n) {\n\t\tif (low <= high) {\n\t\t\tint mid = low + (high - low) / 2;\n\t\t\tif ((mid == 0 || x > array1[mid - 1]) && array1[mid] == x)\n\t\t\t\treturn mid;\n\t\t\telse if (x > array1[mid])\n\t\t\t\treturn firstOccurence(array1, (mid + 1), high, x, n);\n\t\t\telse\n\t\t\t\treturn firstOccurence(array1, low, (mid - 1), x, n);\n\t\t}\n\t\treturn -1;\n\t}\n \n\tpublic static int lastOccurence(int array2[], int low, int high, int x, int n) {\n\t\tif (low <= high) {\n\t\t\tint mid = low + (high - low) / 2;\n\t\t\tif ((mid == n - 1 || x < array2[mid + 1]) && array2[mid] == x)\n\t\t\t\treturn mid;\n\t\t\telse if (x < array2[mid])\n\t\t\t\treturn lastOccurence(array2, low, (mid - 1), x, n);\n\t\t\telse\n\t\t\t\treturn lastOccurence(array2, (mid + 1), high, x, n);\n\t\t}\n\t\treturn -1;\n\t}\n \n\tpublic static void quickSort(int[] arr, int lo, int hi) {\n\t\tif (lo >= hi) {\n\t\t\treturn;\n\t\t}\n\t\tint mid = (lo + hi) / 2;\n\t\tint pivot = arr[mid];\n\t\tint left = lo;\n\t\tint right = hi;\n\t\twhile (left <= right) {\n\t\t\twhile (arr[left] < pivot) {\n\t\t\t\tleft++;\n\t\t\t}\n\t\t\twhile (arr[right] > pivot) {\n\t\t\t\tright--;\n\t\t\t}\n\t\t\tif (left <= right) {\n\t\t\t\tint temp = arr[left];\n\t\t\t\tarr[left] = arr[right];\n\t\t\t\tarr[right] = temp;\n\t\t\t\tleft++;\n\t\t\t\tright--;\n\t\t\t}\n\t\t}\n\t\tquickSort(arr, lo, right);\n\t\tquickSort(arr, left, hi);\n\t}\n \n\tstatic class InputReader {\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\tprivate SpaceCharFilter filter;\n \n\t\tpublic InputReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n \n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n \n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n \n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n \n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n \n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\tif (filter != null)\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n \n\t\tpublic String next() {\n\t\t\treturn nextLine();\n\t\t}\n \n\t\tpublic interface SpaceCharFilter {\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t}\n \n\tstatic class OutputWriter {\n\t\tprivate final PrintWriter writer;\n \n\t\tpublic OutputWriter(OutputStream outputStream) {\n\t\t\twriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n\t\t}\n \n\t\tpublic OutputWriter(Writer writer) {\n\t\t\tthis.writer = new PrintWriter(writer);\n\t\t}\n \n\t\tpublic void print(Object... objects) {\n\t\t\tfor (int i = 0; i < objects.length; i++) {\n\t\t\t\tif (i != 0) {\n\t\t\t\t\twriter.print(' ');\n\t\t\t\t\t// writer.print(1);\n\t\t\t\t}\n\t\t\t\twriter.print(objects[i]);\n\t\t\t}\n\t\t}\n \n\t\tpublic void println(Object... objects) {\n\t\t\tprint(objects);\n\t\t\twriter.println();\n\t\t}\n \n\t\tpublic void close() {\n\t\t\twriter.close();\n\t\t}\n\t}\n \n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    a = [0]\n    b = [-1]\n    bool = False\n    if l[0] != 0:\n        print(0)\n    else:\n        for num in range(n):\n            if abs(l[num] - a[-1]) <= 1:\n                if l.count(l[num]) < 2:\n                    a.append(l[num])\n                    bool = True\n                else:\n                    if bool == False:\n                        a.append(l[num])\n                        b.append(l[num])\n                    else:\n                        a.append(l[num])\n            else:\n                break\n        print(max(a)+1+max(b)+1)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[105];\n  int t;\n  cin >> t;\n  while (t--) {\n    memset(a, 0, sizeof(a));\n    int n;\n    int b[105];\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> b[i];\n      a[b[i]]++;\n    }\n    int ans = 0;\n    int len = 2;\n    for (int i = 0; i < 102; i++) {\n      if (len == 0) break;\n      if (a[i] >= 2) continue;\n      if (a[i] == 1) {\n        if (len == 2)\n          ans += i, len--;\n        else if (len == 1)\n          continue;\n      } else if (a[i] == 0) {\n        if (len == 2)\n          ans += 2 * i, len -= 2;\n        else if (len == 1)\n          ans += i, len--;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int arr[100], freq[101] = {0}, sum = 0, n;\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &arr[i]);\n    }\n    for (int x = 0; x < n; x++) {\n      freq[arr[x]]++;\n    }\n    for (int j = 0; j < 101; j++) {\n      if (freq[j] != 0)\n        freq[j]--;\n      else {\n        sum = j;\n        break;\n      }\n    }\n    for (int j = 0; j < 101; j++) {\n      if (freq[j] != 0)\n        freq[j]--;\n      else {\n        sum = sum + j;\n        break;\n      }\n    }\n    printf(\"%d\\n\", sum);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A {\n\tpublic static void main(String[] args) {\n\t\tFastReader in = new FastReader();\n\t\t\n\t\tint T = in.nextInt();\n\t\twhile(T-- > 0) {\n\t\t\tint n = in.nextInt();\n\t\t\tint[] a = new int[101];\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\ta[in.nextInt()]++; \n\t\t\t}\n\t\t\t\n\t\t\tif(a[0]==0) System.out.println(0);\n\t\t\telse {\n\t\t\t\tint sum = 0;\n\t\t\t\tint cur = 0;\n\t\t\t\twhile(cur<101 && a[cur]>=1) {\n\t\t\t\t\ta[cur]--;\n\t\t\t\t\tcur++;\n\t\t\t\t}\n\t\t\t\tsum += cur;\n\t\t\t\tcur = 0;\n\t\t\t\twhile(cur<n && a[cur]>=1) cur++;\n\t\t\t\tSystem.out.println(sum + cur);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\tpublic FastReader() { br = new BufferedReader(new InputStreamReader(System.in)); }\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry { st = new StringTokenizer(br.readLine()); }\n\t\t\t\tcatch(IOException e) { e.printStackTrace(); }\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() { return Integer.parseInt(next()); }\n\t\tlong nextLong() { return Long.parseLong(next()); }\n\t\tdouble nextDouble() { return Double.parseDouble(next()); }\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry { str = br.readLine(); }\n\t\t\tcatch(IOException e) { e.printStackTrace(); }\n\t\t\treturn str;\n\t\t}\n\t\tint[] readInt(int size) {\n\t\t\tint[] arr = new int[size];\n\t\t\tfor(int i = 0; i < size; i++)\n\t\t\t\tarr[i] = Integer.parseInt(next());\n\t\t\treturn arr;\n\t\t}\n\t\tlong[] readLong(int size) {\n\t\t\tlong[] arr = new long[size];\n\t\t\tfor(int i = 0; i < size; i++)\n\t\t\t\tarr[i] = Long.parseLong(next());\n\t\t\treturn arr;\n\t\t}\n\t\tint[][] read2dArray(int rows, int cols) {\n\t\t\tint[][] arr = new int[rows][cols];\n\t\t\tfor(int i = 0; i < rows; i++) {\n\t\t\t\tfor(int j = 0; j < cols; j++)\n\t\t\t\t\tarr[i][j] = Integer.parseInt(next());\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        int t = Integer.parseInt(br.readLine());\n        while(t-->0) {\n            int n = Integer.parseInt(br.readLine());\n            String[] s = br.readLine().split(\" \");\n            int[] a = new int[101];\n            for(int i=0;i<n;i++){\n                int temp = Integer.parseInt(s[i]);\n                a[temp]+=1;\n            }\n            int ans1=0,ans2=0;\n            boolean flag1=true,flag2=true;\n            for(int i=0;i<=100;i++){\n                int temp = a[i];\n                if(temp>=2 && flag2){\n                    ans1=i+1;\n                    ans2=i+1;\n                }else if(temp>=1){\n                    ans1=i+1;\n                    flag2=false;\n                }else{\n                    flag1=false;\n                    flag2=false;\n                }\n                if(!flag1) break;\n            }\n            pw.println(ans1+ans2);\n        }\n        pw.flush();\n        pw.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    f = []\n    for i in range(101):\n        f.append(0)\n    for i in l:\n        f[i]+=1\n    f1 = -1\n    f2 = 0\n    #print(f)\n    for i in range(101):\n        if f[i]==0:\n            if f1==-1:\n                f1 = i\n            f2 = i\n            break\n        if f[i]==1:\n            if f1==-1:\n                f1=i\n    print(f2+f1)"
        },
        {
            "language": 3,
            "solution": "test=int(input())\n\nfor i in range(0,test):\n    n=int(input())\n    s=[int(i) for i in input().split(' ')]\n    c=[]\n    for i in range(0,102):\n        c.append(0)\n    for e in s:\n        c[e]+=1\n    oi=-1\n    zi=-1\n    for i in range(0,102):\n        if c[i]==1:\n            oi=i\n            break\n    for i in range(0,102):\n        if c[i]==0:\n            zi=i\n            break\n    if oi==-1:\n        print(2*zi)    \n    elif zi<oi:\n        print(2*zi)\n    else:\n        print(zi+oi)\n            "
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    a,b=None,None\n    d={}\n    for i in range(101):\n        d[i]=0\n    for i in l:\n        d[i]=d[i]+1\n    for i in range(101):\n        if d[i]<2:\n            if d[i]==1:\n                if a==None:\n                    a=i\n            if d[i]==0:\n                if a==None:\n                    a,b=i,i\n                else:\n                    b=i\n        if a!=None and b!=None:\n            break\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n=int(input())\n    x=list(map(int,input().split()))\n    x.sort()\n    lst=list()\n    lst1=list()\n    c3=0\n    c2=0\n    for i in range(n):\n        if x[i] in lst and x[i] in lst1:\n            continue\n        if x[i] not in lst:\n            lst.append(x[i])\n        else:\n            lst1.append(x[i])\n    for i in range(len(lst)):\n        if i!=lst[i]:\n            c=i\n            c2=1\n            break\n    if c2!=1:\n        if len(lst)==0:\n            c=0\n        else:\n            c=lst[-1]+1\n    for i in range(len(lst1)):\n        if i!=lst1[i]:\n            c1=i\n            c3=1\n            break\n    if c3!=1:\n        if len(lst1)==0:\n            c1=0\n        else:\n            c1=lst1[-1]+1\n    print(c+c1)\n"
        },
        {
            "language": 3,
            "solution": "def ans(A):\n    d={}\n    for i in A:d[i]=d.get(i,0)+1\n\n    ans=0\n    for i in range(105):\n        if i not in d:\n            ans+=i\n            break\n        else:\n            d[i]-=1\n            if d[i]==0:del d[i]\n\n    for i in range(105):\n        if i not in d:\n            ans+=i\n            break\n        else:\n            d[i]-=1\n            if d[i]==0:del d[i]\n\n    return ans\n            \n\n\nT=int(input())\nfor i in range(T):\n    n=int(input())\n    arr=list(map(int,input().strip().split(\" \")))\n    print(ans(arr))\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n    freq = [0 for i in range(101)]\n    n = int(input())\n    a = list(map(int, input().split()))\n    for num in a:\n        freq[num] += 1\n    \n    mexa = -1\n    for i, count in enumerate(freq):\n        if count == 1 and mexa == -1:\n            mexa = i\n        elif count == 0:\n            if mexa == -1:\n                mexa = i\n                mexb = i\n            else:\n                mexb = i\n            break\n    print(mexa + mexb)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class L, class R>\nostream& operator<<(ostream& os, pair<L, R> P) {\n  return os << \"(\" << P.first << \",\" << P.second << \")\";\n}\ntemplate <class T>\nostream& operator<<(ostream& os, vector<T> V) {\n  os << \"[ \";\n  for (auto v : V) os << v << \" \";\n  return os << \"]\";\n}\ntemplate <class T>\nostream& operator<<(ostream& os, set<T> second) {\n  os << \"{ \";\n  for (auto s : second) os << s << \" \";\n  return os << \"}\";\n}\ntemplate <class L, class R>\nostream& operator<<(ostream& os, map<L, R> M) {\n  os << \"{ \";\n  for (auto m : M) os << \"(\" << m.first << \" : \" << m.second << \") \";\n  return os << \"}\";\n}\ntemplate <typename Arg1>\nvoid __f(const char* name, Arg1&& arg1) {\n  cout << name << \" : \" << arg1 << '\\n';\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char* names, Arg1&& arg1, Args&&... args) {\n  const char* comma = strchr(names + 1, ',');\n  cout.write(names, comma - names) << \" : \" << arg1 << \" |\";\n  __f(comma + 1, args...);\n}\nvoid solve() {\n  map<int, int> cnt;\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    int x;\n    cin >> x;\n    cnt[x]++;\n  }\n  int a = -1;\n  for (int i = 0; i <= 101; ++i) {\n    if (cnt[i] == 0) {\n      cout << i + (a == -1 ? i : a) << '\\n';\n      return;\n    } else if (cnt[i] == 1 and a == -1) {\n      a = i;\n    }\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int T = 1, tc = 1;\n  cin >> T;\n  while (T--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    \n    a=sorted(a)\n    ans=0\n    \n    if a.count(0)<2 and n%2==1:\n        for i in range(101):\n            if i not in a:\n                ans=i\n                break\n    else:\n        if a.count(0)>=2:\n            a1=[0]\n            a2=[]\n            for i in range(1,n):\n                if a[i] not in a1 and a[i]-1 in a1:\n                    a1.append(a[i])\n                else :\n                    a2.append(a[i])\n                \n                \n            for i in range(101):\n                if i not in a1:\n                    ans+=i\n                    break\n            for i in range(101):\n                if i not in a2:\n                    ans+=i\n                    break\n            for i in range(101):\n                if i not in a:\n                    ans=max(ans,i)\n                    break\n        else:\n            for i in range(101):\n                if i not in a:\n                    ans+=i\n                    break\n    print(ans)        \n    \n    \n        \n        \n        \n    \n\n\n      \n\n      "
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class A {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner nik = new Scanner(System.in);\n\t\tint t = nik.nextInt();\n\n\t\tStringBuilder st = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = nik.nextInt();\n\t\t\tHashMap<Integer, Integer> ht = new HashMap<>();\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint temp = nik.nextInt();\n\t\t\t\tht.put(temp, ht.getOrDefault(temp, 0) + 1);\n\t\t\t}\n\t\t\tint l = 0;\n\t\t\tint r = 0;\n\t\t\tboolean b = true;\n\t\t\tfor (int i = 0; i <= 100; i++) {\n\n\t\t\t\tint g = ht.getOrDefault(i, 0);\n\n\t\t\t\tif (g == 0) {\n\n\t\t\t\t\tif (b) {\n\t\t\t\t\t\tr = i;\n\t\t\t\t\t}\n\t\t\t\t\tl = i;\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (g == 1 && b) {\n\t\t\t\t\tb = false;\n\t\t\t\t\tr = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tSystem.out.println(l + r);\n\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\nfrom functools import lru_cache\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\nfor _ in range(val()):\n    n = val()\n    l = sorted(li())\n\n    a1 = set()\n    a2 = set()\n    for i in l:\n        if i in a1:\n            a2.add(i)\n        else:a1.add(i)\n    ans = 0\n    for i in range(200):\n        if i not in a1:\n            ans += i\n            break\n    for i in range(200):\n        if i not in a2:\n            ans += i\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "T=int(input())\nwhile T:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    b=[]\n    c=[]\n    if a[0]!=0:\n        print(\"0\")\n    else:\n        b = list(set(a))\n        b.sort()\n        f=x=y=0\n        for i in range(len(b)):\n            if i not in b:\n                x=i\n                f=1\n                break\n        if f==0:\n            x = b[-1]+1\n        for i in b:\n            a.remove(i)\n        f=0\n        for i in range(len(a)):\n            if i not in a:\n                y=i\n                f=1\n                break\n        if f==0:\n            if(len(a)>0):\n                y = a[-1]+1\n        print(x+y)\n    T-=1"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int arr[105];\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n    }\n    int visited[105] = {0};\n    for (int i = 0; i < n; i++) {\n      visited[arr[i]]++;\n    }\n    int flag1 = -1;\n    int flag2 = -1;\n    for (int i = 0; i < 105; i++) {\n      if (visited[i] == 1 and flag1 == -1) {\n        flag1 = i;\n      }\n      if (visited[i] == 0 and flag1 == -1) {\n        flag1 = i;\n        flag2 = i;\n        break;\n      } else if (visited[i] == 0 and flag1 != -1) {\n        flag2 = i;\n        break;\n      }\n    }\n    cout << flag1 + flag2 << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "#Codeforces Round #670\n#Problem A\nimport sys, collections\n\n#\n#BEGIN TEMPLATE\n#\ndef input(): return sys.stdin.readline()[:-1]\ndef getInt(): return int(input())\ndef getIntIter(): return map(int, input().split())\ndef getIntList(): return list(getIntIter())\ndef flush(): sys.stdout.flush()\n#\n#END TEMPLATE\n#\n\nfor _ in range(getInt()):\n    n = getInt()\n    nums = getIntList()\n    c = collections.Counter(nums)\n    out = 0\n    curr = 0\n    m = 2\n    while curr in c.keys():\n        out += min(c[curr],m)\n        m = min(m,c[curr])\n        curr += 1\n    print(out)\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    m=arr[-1]\n\n    l=[0]*(m+1)\n\n    for i in set(arr):\n        l[i]=arr.count(i)\n\n    x=[]\n    y=[]\n    for i in range(len(l)):\n        for j in range(l[i]//2):\n            x.append(i)\n            y.append(i)\n        if l[i]%2!=0:\n            x.append(i)\n\n    ans1,ans2=-1,-1\n    x=list(set(x))\n    y=list(set(y))\n    for i in range(len(x)):\n        if x[i]!=i:\n            ans1=i\n            break\n    if ans1==-1:\n        if len(x)>=1:\n            ans1=x[-1]+1\n        else:\n            ans1=0\n\n    for i in range(len(y)):\n        if y[i]!=i:\n            ans2=i\n            break\n    if ans2==-1:\n        if len(y)>=1:\n            ans2=y[-1]+1\n        else:\n            ans2=0\n    print(ans1+ans2)"
        },
        {
            "language": 3,
            "solution": "Q=int(input())\nfor i in range(Q):\n    N=int(input())\n    L=list(map(int,input().split()))\n    A=[0 for i in range(100+2)]\n    B=[0 for i in range(100+2)]\n    for n in range(N):\n        if A[L[n]]==0:\n            A[L[n]]=1\n        else:\n            B[L[n]]=1\n    a=0\n    b=0\n    for i in range(len(A)):\n        if A[101-i]==0:\n            a=101-i\n        if B[101-i]==0:\n            b=101-i\n    print(a+b)\n    #print(A[:10])"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.lang.*;\nimport java.math.*;\npublic class A1406 {\n    public static void main(String[] args) throws IOException {\n        Scanner in = new Scanner(System.in);\n        int t = in.nextInt();\n        while (t-- != 0) {\n            int n = in.nextInt();\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = in.nextInt();\n            int[] c = new int[102];\n            int count = 0;\n            int ans = 0;\n            int min = 100;\n            for (int i = 0; i < n; i++)\n                c[a[i]]++;\n            if(c[0]==0)\n                System.out.println(0);\n            else if(c[0]==1)\n            {\n                for(int i=1;i<101;i++)\n                {\n                    if(c[i]==0)\n                    {\n                        System.out.println(i);\n                        break;\n                    }\n                }\n            }\n            else{\n                for(int i=1;i<101;i++)\n                {\n                    if(c[i]==0){\n                        if(min==100){\n                        System.out.println(2*i);break;}\n                        else{\n                            System.out.println(min+i);break;\n                        }\n                    }\n                    else if(c[i]==1)\n                    {\n                        min=Math.min(min,i);\n                        if(c[i+1]==0)\n                        {\n                            System.out.println(min+i+1);break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "T=int(input())\nfor _ in range(T):\n    N=int(input())\n    A=list(map(int,input().split()))\n    dic={}\n    mex=max(A)\n    for i in A:\n        if i in dic:\n            dic[i]+=1\n        else:\n            dic[i]=1\n    count=ans=0\n    #print(dic)\n    flag=1\n    for i in range(mex+2):\n        if i in dic:\n            if dic[i]==1 and flag==1:\n                ans+=i\n                flag=0\n                #print(i,\"a\")\n                count+=1\n                if count==2:\n                    break\n        else:\n            ans+=i\n            flag=0\n            count+=1\n            break\n    if count==1:\n        ans*=2\n    print(ans)\n"
        },
        {
            "language": 4,
            "solution": "//I AM THE CREED\n/* //I AM THE CREED\n/* package codechef; // don't place package name! */\nimport java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.StringTokenizer; \nimport java.util.*;\nimport java.awt.Point;\npublic class Main{\n    public static void main(String[] args) throws IOException \n    { \n  \n        Scanner input = new Scanner(System.in);\n        input.nextInt();\n        while(input.hasNext()){\n            int n=input.nextInt();\n            Integer[] l=new Integer[n];\n            for(int i=0;i<n;i++){\n                l[i]=input.nextInt();\n            }\n            Arrays.sort(l);\n            int mexa=(l[0]==0?1:0);\n            int mexb=0;\n            for(int i=1;i<n;i++){\n                if(l[i]==l[i-1]){\n                    if(mexa==l[i]){\n                        mexa=l[i]+1;\n                    }\n                    if(mexb==l[i]){\n                        mexb=l[i]+1;\n                    }\n                    continue;\n                }\n                if(l[i]==mexa){\n                    mexa=l[i]+1;\n                }\n            }\n            System.out.println(mexa+mexb);\n        }\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "//note: 0<=|int|<=2 * 10^9\n//note: 0<=|long|<= 9 * 10^18\n//note: 20! max w/ long\n//note: 91st fibonacci # highest calculable w/long\n//note: 0 <= |double| <= 1.8 * 10^308\n//note: 170! max w/long;\n//java machine can make 10^8 computations in a second.\nimport java.io.*;\nimport java.util.*;\nimport java.math.BigInteger;\n    \npublic class CP{\n    private static int MAX = Integer.MAX_VALUE;\n    private static int MIN = Integer.MIN_VALUE;\n    private static int[][] dirs = new int[][] {{-1,0},{0,1},{1,0},{0,-1}};\n    public static void main(String[] args) throws IOException{\n        FastScanner sc = new FastScanner();\n        out = new PrintWriter(new BufferedOutputStream(System.out));\n        \n        int t = sc.nextint();\n        while(t-- > 0) {\n        \tint n = sc.nextint();\n        \tint[] nums = sc.read(n);\n        \tMap<Integer, Integer> mp = new HashMap<>();\n        \tfor(int i = 0; i < n; i++) {\n        \t\tmp.put(nums[i], mp.getOrDefault(nums[i], 0)+1);\n        \t}\n        \tint ans = 0;\n        \tint left = 0;\n        \tint right = 0;\n        \tint count = 0;\n        \tboolean ok = true;\n        \tfor(int i = 0; i <= 100; i++) {\n        \t\tif(mp.containsKey(i)) {\n        \t\t\tif(mp.get(i) >= 1) {\n        \t\t\t\t++left;\n            \t\t}\n        \t\t\tif(ok && mp.get(i) >= 2) {\n        \t\t\t\t++right;\n        \t\t\t}\n        \t\t\telse {\n        \t\t\t\tok = false;\n        \t\t\t}\n        \t\t}\n        \t\telse {\n        \t\t\tbreak;\n        \t\t}\n        \t}\n        \tout.println(left+right);\n        }\n        \n        \n        out.close(); \n    }\n    \n    private static class Point{\n        int x, y;\n        public Point(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n    }\n    \n    private static class Edge{\n        Point start, end;\n        int weight;\n        public Edge(Point start, Point end, int weight) {\n            this.start = start;\n            this.end = end;\n            this.weight = weight;\n        }\n    }\n    \n    private static class Node{\n        Set<Node> adj = new HashSet<>();\n        \n        public void add(Node n) {\n            adj.add(n);\n        }\n    }\n    \n    private static class UnionFind{\n        int numComponents;\n        int[] component;\n        public UnionFind(int n) {\n            numComponents = n;\n            component = new int[n];\n        }\n        \n        public void unite(int n1, int n2) {\n            if(findComponent(n1) != findComponent(n2)) {\n                component[findComponent(n1)] = n2;\n                numComponents--;\n            }\n        }\n        \n        public int findComponent(int n) {\n            if(component[n] != n) {\n                component[n] = findComponent(component[n]);\n            }\n            return component[n];\n        }\n    }\n   \n    private static class FenTree{\n        private long[] tree;\n        public FenTree(int size) {\n            tree = new long[size+1];\n        }\n        \n        public void add(int index, int add) {\n            while(index < tree.length) {\n                tree[index] += add;\n                index += (index & -index);\n            }\n        }\n        \n        public long sum(int index) {\n            long sum = 0;\n            while(index > 0) {\n                sum += tree[index];\n                index -= (index & -index);\n            }\n            \n            return sum;\n        }\n    }\n    \n    private static long modInverse(long a, long b) {\n        long bb = b, temp, q;\n        long x0 = 0, x1 = 1;\n        if(b == 1){\n            return 1L;\n        }\n        while(a > 1){\n            q = a/b;\n            temp = b; b = a%b; a=temp;\n            temp = x0; x0 = x1-q*x0; x1 = temp;\n        }\n        if(x1 < 0){\n            x1 += bb;\n        }\n        return x1;\n    }\n    private static long gcd(long a, long b) {\n        if(a == 0) {\n            return b;\n        }\n        return gcd(b%a, a);\n    }\n    \n    private static int gcd(int a, int b){\n        if(a == 0){\n            return b;\n        }\n        return gcd(b%a, a);\n    }\n\n    static final Random random = new Random();\n    \n    static void sort(int[] a) {\n        int n = a.length;\n        for(int i = 0; i< n; i++) {\n            int r = random.nextInt(n), temp=a[r];\n            a[r] = a[i]; a[i] = temp;\n        }\n        Arrays.sort(a);\n    }\n    \n    private static PrintWriter out;\n    private static BufferedReader br;\n    private static StringTokenizer st;\n    \n    private static class FastScanner{\n        public FastScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        \n        String next() {\n            while(st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n        \n        int[] read(int n) {\n            int[] res = new int[n];\n            for(int i = 0; i < n; i++) {\n                res[i] = nextint();\n            }\n            return res;\n        }\n        \n        int nextint() {\n            return Integer.parseInt(next());\n        }\n        \n        double nextdouble() {\n            return Double.parseDouble(next());\n        }\n        \n        long nextlong() {\n            return Long.parseLong(next());\n        }\n        \n        String nextline() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        \n    }\n    \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7;\nvoid solve() {\n  int n, a[105];\n  memset((a), (0), sizeof(a));\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    int b;\n    cin >> b;\n    b[a]++;\n  }\n  int i;\n  for (i = 0; i < 101; i++) {\n    a[i]--;\n    if (a[i] < 0) break;\n  }\n  int j;\n  for (j = 0; j < 101; j++) {\n    if (a[j] < 1) break;\n  }\n  cout << (i + j) << \"\\n\";\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    count = {i: 0 for i in range(102)}\n    for i in a:\n        count[i] += 1\n    mexA = None\n    mexB = None\n    for i in range(101):\n        if count[i] == 1:\n            if mexA==None:\n                mexA = i\n        elif count[i] == 0:\n            if mexA==None:\n                mexA = i\n            if mexB==None:\n                mexB = i\n            break\n    print(mexA + mexB)\n\n\nt = int(input().strip())\n\nfor _ in range(t):\n    solve()\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class S {\n\tpublic static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\tpublic static final Scanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint t = sc.nextInt();\n\t\tfor (int c = 0; c < t; c++) {\n\t\t\tint n=sc.nextInt();\n\t\t\t\n\t\t\tint[] arr= new int[n];\n\t\t\tint[]  freq = new int[101];\n\t\t\t\n\t\t\t\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i]=sc.nextInt();\t\n\t\t\t\tfreq[arr[i]]++;\n\t\t\t}\n\t\t\t\n\t\t\tint mexa=0,mexb=0;\n\t\t\tfor(int i=0;i<freq.length;i++)\n\t\t\t{\n\t\t\t\tif(freq[i]==0)\n\t\t\t\t{\n\t\t\t\t\tmexa=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<freq.length;i++)\n\t\t\t{\n\t\t\t\tif(freq[i]==1 || freq[i]==0)\n\t\t\t\t{\n\t\t\t\t\tmexb=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tSystem.out.println(mexa+mexb);\n\n\t\t}\n\n\t\tsc.close();\n\t\tbr.close();\n\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\n# code\n#    ___________________________________\n#   |                                   |\n#   |                                   |\n#   |        _,     _   _     ,_        |\n#   |    .-'` /     \\'-'/     \\ `'-.    |\n#   |   /    |      |   |      |    \\   |\n#   |  ;      \\_  _/     \\_  _/      ;  |\n#   | |         ``         ``         | |\n#   | |                               | |\n#   |  ;    .-.   .-.   .-.   .-.    ;  |\n#   |   \\  (   '.'   \\ /   '.'   )  /   |\n#   |    '-.;         V         ;.-'    |\n#   |        `                 `        |\n#   |                                   |\n#   |___________________________________|\n#   |                                   |\n#   |  Author      :   Ramzz            |\n#   |  Created On  :   21-07-2020       |\n#   |___________________________________|\n#\n#    _ __ __ _ _ __ ___  ________\n#   | '__/ _` | '_ ` _ \\|_  /_  /\n#   | | | (_| | | | | | |/ / / / \n#   |_|  \\__,_|_| |_| |_/___/___|\n#\n\nimport math\nimport collections\nfrom sys import stdin,stdout,setrecursionlimit\nfrom bisect import bisect_left as bsl\nfrom bisect import bisect_right as bsr\nimport heapq as hq\nsetrecursionlimit(2**20)\n\nt = 1\nt = int(stdin.readline())\n\nfor _ in range(t):\n    n = int(stdin.readline())\n    #s = stdin.readline().strip('\\n')\n    a = list(map(int, stdin.readline().rstrip().split()))\n    \n    d = {}\n    for i in a:\n        if(i not in d):\n            d[i] = 0\n        d[i]+=1\n        \n    ans1 = 0\n    for i in range(0,102):\n        if(i not in d):\n            ans1 = i\n            break\n    #print(d)\n    for j in range(0,ans1):\n        if(j in d):\n            d[j]-=1\n            if(d[j]==0):\n                del d[j]\n    #print(d)\n    ans2 = 0\n    for i in range(0,102):\n        if(i not in d):\n            ans2 = i\n            break\n    \n    print(ans1+ans2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool flag = 0, flag1 = 0, flag2 = 0, flag3 = 0, flag4 = 0, flag5 = 0;\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n, k, ans = 0;\n    cin >> n;\n    multiset<long long int> a;\n    for (long long int i = 0; i < n; i++) {\n      cin >> k;\n      a.insert(k);\n    }\n    for (long long int i = 0; i < n + 1; i++) {\n      if (a.count(i) == 0) {\n        ans += i;\n        break;\n      } else\n        a.erase(a.find(i));\n    }\n    for (long long int i = 0; i < n + 1; i++) {\n      if (a.count(i) == 0) {\n        ans += i;\n        break;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nfor _ in range(int(input())):\n    input()\n    arr = map(int, input().split())\n    c = Counter(arr)\n    one = two = 0\n    while 1:\n        if c[two] >= 2:\n            two += 1\n        else:\n            break\n            \n    one = two\n    while 1:\n        if c[one] >= 1:\n            one += 1\n        else:\n            break\n        \n    print(two + one)\n    "
        },
        {
            "language": 3,
            "solution": "# import sys\n# input=sys.stdin.readline\n# print=sys.stdout.writeline\ndef check(arr,l):\n    for i in range(l):\n        if arr[i]!=i:\n            return i\n    else:\n        return i+1\n\ndef solve(l):\n    d={0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0}\n    m=0\n    for i in l:\n        d[i]+=1\n        if i>m:\n            m=i\n    l=[]\n    r=[]\n    ll=0\n    lr=0\n    for i in range(m+1):\n        if d[i]>=2:\n            r.append(i)\n            lr+=1\n            ll+=1\n            l.append(i)\n        elif d[i]==1:\n            ll+=1\n            l.append(i)\n    if lr>0:\n        return check(l,ll)+check(r,lr)\n    else:\n        return check(l,ll)\n\n\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(solve(l))"
        },
        {
            "language": 1,
            "solution": "# Name: Rhythem Jain\n# Date: 01.09.2020\n \n \nfrom __future__ import division, print_function\nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii():  return int(input())\ndef si():  return input()\ndef mi():  return map(int,input().strip().split())\ndef msi(): return map(str,input().strip().split())\ndef li():  return list(mi())\n \ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \nfrom collections import deque, Counter, OrderedDict,defaultdict\nfrom math import *\n# from Queue import LifoQueue\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import log,sqrt,factorial,cos,tan,sin,radians\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *\n#import threading\nfrom itertools import permutations\n# Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\n \nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\nvow=['a','e','i','o','u','A','E','I','O','U']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\ndef getKey(item): return item[1] \ndef sort2(l):return sorted(l, key=getKey,reverse=True)\ndef d2(n,m,num):return [[num for x in range(m)] for y in range(n)]\ndef isPowerOfTwo (x): return (x and (not(x & (x - 1))) )\ndef decimalToBinary(n): return bin(n).replace(\"0b\",\"\")\ndef ntl(n):return [int(i) for i in str(n)]\ndef ncr(n,r): return factorial(n)//(factorial(r)*factorial(max(n-r,1)))\n \ndef ceil(x,y):\n    if x%y==0:\n        return x//y\n    else:\n        return x//y+1\n \ndef powerMod(x,y,p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y&1:\n            res = (res*x)%p\n        y = y>>1\n        x = (x*x)%p\n    return res\n \ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n    \ndef isPrime(n) : # Check Prime Number or not \n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n \ndef read():\n    sys.stdin  = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n \ndef main():\n    for _ in range(ii()):\n        n=ii()\n        arr=li()\n        val=0\n        a=list(set(arr))\n        a.sort()\n        count=0\n        for i in range(n+1):\n            if i not in a:\n                val+=(2-count)*i\n                break\n            else:\n                if i in a:\n                    if arr.count(i)<(2-count):\n                        # print(arr.count(i),i)\n                        val+=i\n                        count+=1\n                        if count==2:\n                            break\n        \n        print(val)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n \nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\n\nif __name__ == \"__main__\":\n    #read()\n    main()\n    #dmain()"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner scanner = new Scanner(System.in);\n\n\t\tint T = scanner.nextInt();\n\n\t\tfor (int t = 0; t < T; t++) {\n\t\t\t\n\t\t\tint [] b = new int[101];\n\n\t\t\tint n = scanner.nextInt();\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tb[scanner.nextInt()]++;\n\t\t\t}\n\n\t\t\tint c1 = 0 , c2 = 0;\n\t\t\tfor(int i = 0; i < 101; i++) {\n\t\t\t\tif(b[i] < 2) {\n\t\t\t\t\tc1 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i = 0; i < 101; i++) {\n\t\t\t\tif(b[i] == 0) {\n\t\t\t\t\tc2 = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(c1 + c2);\n\t\t}\n\n\t\tscanner.close();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef answer(n, ary):\n    sum = 0\n    inc = 2\n    #print('n=', n, 'ary=', ary)\n    for i in range(n+1):\n        if ary.count(i) >= 2:\n            sum += inc\n        elif ary.count(i) == 1:\n            inc = 1\n            sum += inc\n        else: #count(i) == 0\n            return sum\n\n\n\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    ary = [0] * t\n    for j in range(t):\n        n[j] = int(input())\n        ary[j] = [int(i) for i in input().split()]\n\n    for j in range(t):\n        print(answer(n[j], ary[j]))\n\nmain()"
        },
        {
            "language": 3,
            "solution": "numeroTestes = int(input())\nfor i in range (numeroTestes):\n  # descarta tamanho, em python n\u00e3o precisamos\n  int(input())\n  aux = 0\n  vector = []\n  \n  countVector = [ 0 ] * 101\n\n  for i in input().split():\n    countVector[int(i)]+=1\n  \n  for i in range (101):\n    if countVector[i] != 0:\n      countVector[i] -= 1\n    else:\n      aux += i\n      break\n  for i in range (101):\n    if countVector[i] != 0:\n      countVector[i] -= 1\n    else:\n      aux += i\n      break\n  print(aux)\n\t  \t\t\t\t\t\t\t  \t\t \t  \t   \t  \t \t\t\t\t"
        },
        {
            "language": 3,
            "solution": "for _ in ' '*int(input()):\n    v, i, n, a = 0, 0, int(input()), sorted([int(x) for x in input().split()])\n    for row in set(a):\n        if a.count(row) >= 2 and row == v: v += 1; i += 1\n        elif row == i: i += 1\n    print(v+i)"
        },
        {
            "language": 3,
            "solution": "if __name__ == \"__main__\":\n    for _ in range(int(input())):\n        n = int(input())\n        num = list(map(int, input().split()))\n        num.sort()\n        a = [0] * 101\n        b = [0] * 101\n\n        for i in range(len(num)):\n            if a[num[i]] == 0:\n                a[num[i]] = 1\n            else:\n                b[num[i]] = 1\n\n        answer = 0\n        for i in range(101):\n            if a[i] == 1:\n                continue\n            else:\n                answer += i\n                break\n        for i in range(101):\n            if b[i] == 1:\n                continue\n            else:\n                answer += i\n                break\n        print(answer)\n"
        },
        {
            "language": 3,
            "solution": "from collections import *\nfor _ in range(int(input())):\n    N=int(input())\n    A=list(map(int,input().split()))\n    dic=defaultdict(int)\n    for i in A:\n        dic[i]+=1\n    ans=0\n    check1=-1\n    flag=0\n    for i in range(0,101):\n        if(dic[i]==0):\n            ans+=i\n            break\n        else:\n            dic[i]-=1\n    flag=0\n    for i in range(0,101):\n        if(dic[i]==0):\n            ans+=i\n            break\n        else:\n            dic[i]-=1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "#Code by Sounak, IIESTS\n#------------------------------warmup----------------------------\n\nimport os\nimport sys\nimport math\nfrom io import BytesIO, IOBase\nfrom fractions import Fraction\nimport collections\nfrom itertools import permutations\nfrom collections import defaultdict\nimport threading\n\n \n\nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n    \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n     \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n  \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n#-------------------game starts now-----------------------------------------------------\nfor _ in range (int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    mx=max(a)+1\n    mn=0\n    ch=1\n    d=dict()\n    for i in a:\n        if i in d:\n            d[i]+=1\n        else:\n            d[i]=1\n    for i in range (max(a)+1):\n        if i not in d:\n            mx=i\n            break\n        if ch==1 and d[i]>1:\n            mn=i+1\n        if d[i]==1:\n            ch=0\n    #print(mx,mn)\n    print(mx+mn)"
        },
        {
            "language": 3,
            "solution": "# for _ in range(int(input())):\n# = map(int, input().split())\n# = int(input())\n# = input()\n\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    a.sort()\n    m1 = 0\n    m2 = 0\n    pairs = True\n    while len(a) > 0:\n        if a[0] == m1:\n            m1+=1\n            a.pop(0)\n        elif a[0] == m2:\n            m2+=1\n            a.pop(0)\n        elif a[0] < m1 or a[0] < m2:\n            a.pop(0)\n            continue\n        else:\n            break\n    print(m1+m2)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class GreedyMex {\n\tpublic static void main(String[] args) {\n\t\tScanner sc  = new Scanner(System.in); \n\t\tint t = sc.nextInt(); \n\t\tfor(int x = 0 ; x<t ; x++)\n\t\t{\n\t\t\tint n = sc.nextInt(); \n\t\t\t\n\t\t\tint[] arr = new int[n]; \n\t\t\tint [] freq = new int [n+1];\n\t\t\tfor(int j = 0 ; j < n ; j++)\n\t\t\t{\n\t\t\t\tarr[j] = sc.nextInt();\n\t\t\t\tif(arr[j]>=0 && arr[j]<=n)\n\t\t\t\t{\n\t\t\t\t\tfreq[arr[j]]++;\n\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tint num1 =0 , num2= 0 , k ;\t\t\n\t\t\tfor( k = 0 ; k <=n ; k++)\n\t\t\t{\n\t\t\t\tif(freq[k]==0)\n\t\t\t\t{\n\t\t\t\t\tnum1 = k;\n\t\t\t\t\tfreq[k]++;\n\t\t\t\t\t//System.out.println(k);\n\t\t\t\t\tbreak ;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tfor(int s = 0 ; s<=num1 ; s++)\n\t\t\t{\n\t\t\t\tfreq[s]--;\n\t\t\t\tif(freq[s]==0)\n\t\t\t\t{\n\t\t\t\t\tnum2= s; \n\t\t\t\t\t//System.out.println(s);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(num1+num2);\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t}\n\t\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nusing PQ = priority_queue<T>;\ntemplate <class T>\nusing PQ_inv = priority_queue<T, vector<T>, greater<T>>;\nconst double pai = 3.1415926535897;\nconst long long mod = 1000000007;\nconst long long INF = 1000000021;\nconst long long LINF = 2000000000000000000;\nconst long long MAX = 510000;\nconst long long MOD = 1000000007;\nlong long fac[MAX], finv[MAX], inv[MAX];\nvoid COMinit() {\n  fac[0] = fac[1] = 1;\n  finv[0] = finv[1] = 1;\n  inv[1] = 1;\n  for (long long i = 2; i < MAX; i++) {\n    fac[i] = fac[i - 1] * i % MOD;\n    inv[i] = MOD - inv[MOD % i] * (MOD / i) % MOD;\n    finv[i] = finv[i - 1] * inv[i] % MOD;\n  }\n}\nlong long COM(long long n, long long k) {\n  if (n < k) return 0;\n  if (n < 0 || k < 0) return 0;\n  return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;\n}\nlong long PER(long long n, long long k) {\n  if (n < 0 || k < 0) return 0;\n  if (n < k) return fac[n];\n  return fac[n] * finv[n - k] % mod;\n}\nlong long modinv(long long a, long long m) {\n  long long b = m, u = 1, v = 0;\n  while (b) {\n    long long t = a / b;\n    a -= t * b;\n    swap(a, b);\n    u -= t * v;\n    swap(u, v);\n  }\n  u %= m;\n  if (u < 0) u += m;\n  return u;\n}\nlong long modpow(long long a, long long n) {\n  long long res = 1;\n  while (n > 0) {\n    if (n & 1) res = res * a % mod;\n    a = a * a % mod;\n    n >>= 1;\n  }\n  return res;\n}\nstruct edge {\n  long long to, cost;\n};\nedge m_e(long long xx, long long yy) {\n  edge ed;\n  ed.to = xx;\n  ed.cost = yy;\n  return ed;\n}\nlong long b_s(vector<long long>& vec, long long xx) {\n  return lower_bound(vec.begin(), vec.end(), xx) - vec.begin();\n}\ntemplate <class T>\nvoid vecout(vector<T>& vec) {\n  for (T t : vec) cout << t << \" \";\n  cout << \"\\n\";\n}\ntemplate <class T>\nvoid vecout(vector<vector<T>>& vec) {\n  for (vector<T> tvec : vec) {\n    for (T t : tvec) cout << t << \" \";\n    cout << \"\\n\";\n  }\n}\ntemplate <class T>\nvoid vecin(vector<T>& vec) {\n  for (long long i = 0; i < (long long)vec.size(); i++) cin >> vec[i];\n}\nbool chmax(long long& xx, long long yy) {\n  if (xx < yy) {\n    xx = yy;\n    return true;\n  }\n  return false;\n}\nbool chmin(long long& xx, long long yy) {\n  if (xx > yy) {\n    xx = yy;\n    return true;\n  }\n  return false;\n}\ndouble dist(long long x, long long y) { return sqrt(x * x + y * y); }\ndouble dist(long long xx1, long long xx2, long long yy1, long long yy2) {\n  return sqrt(abs(xx1 - xx2) * abs(xx1 - xx2) +\n              abs(yy1 - yy2) * abs(yy1 - yy2));\n}\nlong long mypow(long long nn, long long kk) {\n  long long xx = 1;\n  for (long long i = 0; i < (long long)(kk); i++) {\n    xx *= nn;\n  }\n  return xx;\n}\nlong long gcd(long long xx, long long yy) {\n  long long p = xx;\n  long long q = yy;\n  if (q > p) swap(p, q);\n  while (p % q != 0) {\n    p %= q;\n    swap(p, q);\n  }\n  return q;\n}\nlong long lcm(long long xx, long long yy) { return xx * yy / gcd(xx, yy); }\nbool prime(long long xx) {\n  if (xx <= 1) {\n    return 0;\n  }\n  for (long long i = 2; i * i <= xx; i++) {\n    if (xx % i == 0) {\n      return 0;\n    }\n  }\n  return 1;\n}\nsigned main() {\n  long long t, n, a;\n  cin >> t;\n  for (long long i = 0; i < (long long)(t); i++) {\n    long long ans = 0, d = 2;\n    cin >> n;\n    map<long long, long long> ma;\n    for (long long i = 0; i < (long long)(n); i++) {\n      cin >> a;\n      if (!ma.count(a)) {\n        ma[a] = 1;\n      } else {\n        ma[a]++;\n      }\n    }\n    long long j = 0;\n    while (1) {\n      if (!ma.count(j)) {\n        break;\n      }\n      if (ma[j] == 1) {\n        d = 1;\n      }\n      ans += d;\n      j++;\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(arr):\n    tmp = [0] * 101\n    for i in arr:\n        tmp[i] = 1\n    for i in range(102):\n        if tmp[i] == 0:\n            return i\nfor _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int,input().split()))\n    A, B = [], []\n    for i in lis:\n        if i not in A:\n            A.append(i)\n        else:\n            B.append(i)\n    \n    print(mex(A) + mex(B))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 7;\nint a[N];\nint main() {\n  int i, j, k, m, n, t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d\", &n);\n    for (i = 0; i <= 105; i++) a[i] = 0;\n    for (i = 1; i <= n; i++) scanf(\"%d\", &k), a[k]++;\n    i = 0;\n    while (a[i] >= 2) i++;\n    int ans = 0;\n    ans = i;\n    while (a[i] >= 1) i++;\n    ans += i;\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 5e5 + 10;\nint a[maxn], b[maxn], w[maxn];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    memset(a, 0, sizeof(a));\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n      int x;\n      cin >> x;\n      a[x]++;\n    }\n    int ans = 0;\n    for (int i = 0; i <= n; i++) {\n      if (a[i])\n        a[i]--;\n      else {\n        ans += i;\n        break;\n      }\n    }\n    for (int i = 0; i <= n; i++) {\n      if (a[i])\n        a[i]--;\n      else {\n        ans += i;\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "\"\"\"\n// Author : snape_here - Susanta Mukherjee\n     \n \"\"\"\n \nfrom __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \ndef ii(): return int(input())\ndef fi(): return float(input())\ndef si(): return input()\ndef msi(): return map(str,input().split())\ndef mi(): return map(int,input().split())\ndef li(): return list(mi())\n \n \ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n \ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return (x*y)//(gcd(x,y))\n\nmod=1000000007\n\ndef modInverse(b,m): \n    g = gcd(b, m)  \n    if (g != 1):         \n        return -1\n    else:          \n        return pow(b, m - 2, m) \n\ndef modu(a,b,m): \n\n    a = a % m \n    inv = modInverse(b,m) \n    if(inv == -1): \n        return -999999999\n    else: \n        return (inv*a)%m\n\nfrom math import log,sqrt,factorial,cos,tan,sin,radians,ceil,floor\n\nimport bisect\n\nfrom decimal import *\n\ngetcontext().prec = 8\n\nabc=\"abcdefghijklmnopqrstuvwxyz\"\n\npi=3.141592653589793238\n\nimport random\n\ndef pisano_period(m):\n    a=0 \n    b=1 \n    for i in range(m*m):\n        c=(a+b)%m \n        a=b \n        b=c \n        if a==0 and b==1:\n            return i+1\n\ndef main():\n\n    for _ in range(ii()):\n        n=ii()\n        l=li()\n        f=[0]*105 \n        for i in range(n):\n            f[l[i]]+=1 \n        c=d=0\n        g=h=1\n        for i in range(105):\n            if f[i]>=2:\n                if g:\n                    c+=1 \n                if h:\n                    d+=1 \n            elif f[i]>=1:\n                c+=1 \n                h=0\n            else:\n                g=0 \n                h=0\n                break \n        print(c+d)\n\n\n\n\n# region fastio\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst int N = 110;\nconst int mod = 1e9 + 7;\nint a[N];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    memset(a, 0, sizeof(a));\n    ;\n    int n;\n    cin >> n;\n    for (int i = 0, x; i < n; i++) {\n      cin >> x;\n      a[x]++;\n    }\n    int j = 0, k = 0;\n    while (a[j] != 0) j++;\n    while (a[k] > 1) k++;\n    cout << j + k << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n   m=int(input())\n   a=list(map(int,input().split(' ')))\n   a.sort()\n   if a.count(0)==0:\n       print(0)\n   elif a.count(0)==1:\n        for j in range(len(a)+1):\n            if a.count(j)==0:\n                print(j)\n                break\n   else:\n       sum=0\n       for k in range(len(a)):\n           if a.count(k)>=2:\n               continue\n           elif a.count(k)==1 and sum==0:\n                 sum+=k\n                 continue\n           elif a.count(k)==0 and sum!=0:\n                 sum+=k\n                 break\n           elif a.count(k)==0 and sum==0:\n                 sum+=k*2\n                 break\n           else:\n                continue\n       print(sum)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int M = 1000000007;\nint n = 7, m, k, dots = 0, cou = 0, yes = 0, r;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long int i, lim, p, mn = INT_MAX, mx = INT_MIN, j, t, sum = 0, sal = 0,\n                           ii, jj, cnt = 0, x, y, ans = 0;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    vector<int> v(n), val(102);\n    for (i = 0; i < n; i++) {\n      cin >> v[i];\n      val[v[i]]++;\n    }\n    int ans1 = -1, ans2 = -1;\n    for (i = 0; i < 101; i++) {\n      if (val[i] >= 2) continue;\n      if (val[i] == 1) {\n        if (ans1 == -1) ans1 = i;\n      } else {\n        if (ans1 == -1) {\n          ans1 = i;\n          ans2 = i;\n          break;\n        } else {\n          ans2 = i;\n          break;\n        }\n      }\n    }\n    cout << ans1 + ans2 << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    temp = set(lst)\n    ans = 0\n    for i in range(101):\n        if i not in lst:\n            ans += i\n            break\n    done = False\n    for j in range(i):\n        if lst.count(j)<2:\n            ans += j\n            done = True\n            break\n    if not done:\n        ans += i\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom collections import defaultdict, deque, Counter, OrderedDict\n\n\ndef Integer(): return int(stdin.readline().strip())\ndef MapInteger(): return map(int, stdin.readline().strip().split())\ndef MapList(): return list(map(int, stdin.readline().split()))\n\nfor _ in range(int(input())):\n\tk=int(input())\n\tarray=list(MapInteger())\n\n\tcountnum=Counter(array)\n\n\n\tfirst=True\n\tsecond=True\n\ta,b=0,0\n\n\tfor i in range(max(array)+1):\n\n\t\t\n\t\tif countnum[i]>=2:\n\t\t\tif first:\n\n\t\t\t\ta+=1\n\t\t\tif second:\n\n\t\t\t\tb+=1\n\t\t\n\t\tif countnum[i]==1:\n\n\t\t\tif first:\n\t\t\t\ta+=1\n\t\t\tif second:\n\t\t\t\tsecond=False\n\t\t\n\t\tif countnum[i]==0:\n\t\t\tif first:\n\t\t\t\tfirst=False\n\t\t\tif second:\n\t\t\t\tsecond=False\n\tprint(a+b)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    cnt1 = [0] * 110\n    cnt2 = [0] * 110\n    for i in range(n):\n        if cnt1[a[i]] == 0:\n            cnt1[a[i]] += 1\n        else:\n            cnt2[a[i]] += 1\n\n    ans1, ans2 = 0, 0\n    for i in range(110):\n        if cnt1[i] == 0:\n            ans1 = i\n            break\n    for i in range(110):\n        if cnt2[i] == 0:\n            ans2 = i\n            break\n    print(ans1 + ans2)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    C=Counter(map(int,input().split()))\n\n    X=0\n    Y=0\n\n    TWO=1\n\n    for i in range(200):\n        if TWO==1:\n            if C[i]>=2:\n                X+=1\n                Y+=1\n            elif C[i]==1:\n                X+=1\n                TWO=0\n            else:\n                break\n\n        else:\n            if C[i]>=1:\n                X+=1\n            else:\n                break\n\n    print(X+Y)\n\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import Counter\n\ninput = sys.stdin.readline\n\n\ndef solve(n, a):\n    c = Counter(a)\n    subseta = set()\n    subsetb = set()\n\n    for i in range(102):\n        if c[i] >= 2:\n            subseta.add(i)\n            subsetb.add(i)\n        elif c[i] == 1:\n            subseta.add(i)\n\n    mexa = mexb = 0\n    for i in range(102):\n        if i not in subseta:\n            mexa = i\n            break\n    for i in range(102):\n        if i not in subsetb:\n            mexb = i\n            break\n\n    return mexa + mexb\n\n\n# assert solve(4, list(map(int, '0 2 1 5 0 1'.split()))) == 5\n# assert solve(3, list(map(int, '0 1 2'.split()))) == 3\n# assert solve(4, list(map(int, '0 2 0 1'.split()))) == 4\n# assert solve(6, list(map(int, '1 2 3 4 5 6'.split()))) == 0\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    v = solve(n, a)\n    print(v)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int t, x, n;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    vector<int> v(109, 0);\n    while (n--) {\n      cin >> x;\n      v[x] += 1;\n    }\n    int sum = 0;\n    for (int i = 0; i < v.size(); i++) {\n      if (v[i] == 0) {\n        sum += i;\n        break;\n      }\n    }\n    for (int i = 0; i < v.size(); i++) {\n      if (v[i] <= 1) {\n        sum += i;\n        break;\n      }\n    }\n    cout << sum << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def don(arr):\n    try:\n        a = []\n        b = []\n        mex = []\n        for value in arr:\n            if value not in a:\n                a.append(value)\n            else:\n                b.append(value)\n        if a!= []:\n            max_a = max(a)\n            for i in range(max_a+2):\n                if i not in a:\n                    mex.append(i)\n                    break\n        if b!= []:\n            max_b = max(b)\n            for j in range(max_b+2):\n                if j not in b:\n                    mex.append(j)\n                    break\n        sum = 0\n        for values in mex:\n            sum = sum + values\n        return sum\n    except:\n        return 0\nt = int(input())\nsolution = []\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    arr.sort()\n    x = don(arr)\n    solution.append(x)\n\nfor values in solution:\n    print(values,end= '\\n')\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile(t):\n  n=int(input())\n  a=list(map(int,input().split()))\n  m1=m2=0\n  m11=m22=True\n # b=set(a)\n  for x in range(0,n+2):\n  #  print(x,a.count(x))\n    if(a.count(x)==0 and m11):\n      m1=x\n      m11=False\n    if(a.count(x)==0 and m22):\n      m2=x\n      m22=False\n    if(a.count(x)==1 and m11):\n      m1=x\n      m11=False\n      continue\n  #  if(a.count(x)==1 and m22):\n   #   m2=x\n    #  m22=False\n  print(m1+m2)\n  t-=1"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ch=[0 for i in range(101)]\n    for el in a:\n        ch[el]+=1\n    i=0\n    while ch[i]>=2:\n        i+=1\n    x=i\n    while ch[i]>=1:\n        i+=1\n    print(x+i)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1, a2 = None, None\n    freq = Counter(a)\n    for i in range(0, 101):\n        if freq.get(i, 0) == 0:\n            if a1 == None and a2 == None:\n                print(2*i)\n            else:\n                print(a1 + i)\n            break\n        elif freq.get(i) == 1:\n            if a1 == None:\n                a1 = i\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    ans = 0\n    sum = 0\n\n    for i in a:\n        if ans == i:\n            ans+=1\n        elif sum == i:\n            sum += 1\n    print(ans+sum)\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in \" \"*int(input()):\n    z=int(input())\n    a=sorted(map(int,input().split()))\n    c,d=[],[]\n    for i in range(z):\n        if a[i] in c:d.append(a[i])\n        else:c.append(a[i])\n    i=0\n    while i in c:i+=1\n    j=0\n    while j in d:j+=1\n    print(i+j)"
        },
        {
            "language": 3,
            "solution": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ------------------- fast io --------------------\nfrom math import gcd, ceil\n\ndef pre(s):\n    n = len(s)\n    pi = [0] * n\n    for i in range(1, n):\n        j = pi[i - 1]\n        while j and s[i] != s[j]:\n            j = pi[j - 1]\n        if s[i] == s[j]:\n            j += 1\n        pi[i] = j\n    return pi\n\n\ndef prod(a):\n    ans = 1\n    for each in a:\n        ans = (ans * each)\n    return ans\n\ndef lcm(a, b): return a * b // gcd(a, b)\n\n\ndef binary(x, length=16):\n    y = bin(x)[2:]\n    return y if len(y) >= length else \"0\" * (length - len(y)) + y\n\n\nfor _ in range(int(input()) if True else 1):\n    n = int(input())\n    #n, k = map(int, input().split())\n    #a, b = map(int, input().split())\n    #c, d = map(int, input().split())\n    a = list(map(int, input().split()))\n    #b = list(map(int, input().split()))\n    #s = input()\n    di = {}\n    for i in a:\n        di[i] = 1 if i not in di else di[i] + 1\n    mex = 0\n    two = 0\n    twopos = True\n    for i in range(n):\n        if i in di:\n            mex += 1\n            if twopos and di[i] >= 2:\n                two += 2\n            else:\n                two += 1\n                twopos = False\n        else:break\n    if mex == n:\n        print(mex)\n        continue\n    print(max(mex, two))\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint smallest_positive(vector<long long int> &v) {\n  long long int i = 0;\n  if (v.size() == 0) return 0;\n  if (v[0] != 0) return 0;\n  for (i = 1; i < v.size(); i++) {\n    if (v[i] != (v[i - 1] + 1) && v[i] != v[i - 1]) {\n      return v[i - 1] + 1;\n    };\n  }\n  return v[v.size() - 1] + 1;\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    vector<long long int> a(n);\n    vector<long long int> a1;\n    vector<long long int> a2;\n    for (long long int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a.begin(), a.end());\n    a1.push_back(a[0]);\n    for (long long int i = 1; i < n; i++) {\n      if (a[i] != a[i - 1])\n        a1.push_back(a[i]);\n      else\n        a2.push_back(a[i]);\n    }\n    cout << smallest_positive(a1) + smallest_positive(a2) << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    N = int(input())\n    array = list(map(int, input().split()))\n    dic = {}\n    for i in array:\n        if i not in dic.keys():\n            dic[i] = 1\n        else:\n            dic[i] += 1\n\n    set_1 = []\n    set_2 = []\n    ans = 0\n    for i in range(101):\n        if dic.get(i, -1) > 0:\n            dic[i] -= 1\n        else:\n            ans += i\n            break\n    for i in range(101):\n        if dic.get(i, -1) > 0:\n            dic[i] -= 1\n        else:\n            ans += i\n            break\n    print(ans)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\n\npublic class competetive {\n    public static void main(String[] args) throws java.lang.Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(java.io.FileDescriptor.out), \"ASCII\"), 512);\n        int t = Integer.parseInt(br.readLine());\n        while (t-- > 0) {\n            int n=Integer.parseInt(br.readLine());\n            String line=br.readLine();\n            String []s=line.trim().split(\" \");\n            int[]a=new int[n];\n            int []f=new int[200];\n            for(int i=0;i<n;i++){\n                a[i]=Integer.parseInt(s[i]);\n                f[a[i]]++;\n            }\n            int min1=0;\n            int min2=0;\n            boolean flag1=true;\n            boolean flag=true;\n            for(int i=0;i<=100;i++){\n                if(f[i]>=2){\n                    if(flag) {\n                        min1 = i + 1;\n\n                    }\n                    min2 = i + 1;\n                }else if(f[i]==1){\n                    if(flag1)\n                    min1=i;\n                    min2=i+1;\n                    flag1=false;\n                    flag=false;\n                }else{\n                    break;\n                }\n            }\n            out.write(String.valueOf(min1+min2));\n            out.newLine();\n\n        }\n        out.flush();\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import *\n\ninput  = stdin.readline\n\nt=int(input())\nfor case in range(t):\n    n=int(input())\n    arr = [*map(int,input().split())]\n    arr.sort()\n    mex_a,mex_b=0,0\n    for i in range(n):\n        if arr[i]==mex_a:\n            mex_a+=1\n            arr[i]=-1\n        elif arr[i]>mex_a:\n            break\n    for i in range(n):\n        if arr[i]==-1:\n            continue\n        if arr[i]==mex_b:\n            mex_b+=1\n            arr[i]=-1\n        elif arr[i]>mex_b:\n            break\n    print(mex_a+mex_b)\n        \n            \n"
        },
        {
            "language": 3,
            "solution": "number_of_entries=int(input())\nlen_of_array=[]\narray=[]\nfor i in range(number_of_entries):\n\tithlen=int(input())\n\titharray=list(map(int,input().split()))\n\tlen_of_array.append(ithlen)\n\tarray.append(itharray)\ndef calculate_mex(len_of_array,array):\n\tarray.sort()\n\tmex=0\n\tfor i in range(len_of_array):\n\t\tif array[i]==mex:\n\t\t\tmex+=1\n\treturn mex\ndef maximum_sum_of_mex_of_subsets(len_of_array,array):\n\tarray.sort()\n\tsub_array1=[]\n\tsub_array2=[]\n\tfor i in range(len_of_array-1):\n\t\tif array[i]==array[i+1]:\n\t\t\tarray[i]=-1\n\t\t\tsub_array1.append(array[i+1])\n\tfor i in range(len_of_array):\n\t\tif array[i]!=-1:\n\t\t\tsub_array2.append(array[i])\n\tmex1=calculate_mex(len(sub_array1),sub_array1)\n\tmex2=calculate_mex(len(sub_array2),sub_array2)\n\treturn mex1+mex2\nfor i in range(number_of_entries):\n\tans=maximum_sum_of_mex_of_subsets(len_of_array[i],array[i])\n\tprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  int arr[101];\n  for (int i = 0; i < 101; i++) {\n    arr[i] = 0;\n  }\n  int temp;\n  for (long long int i = 0; i < n; i++) {\n    cin >> temp;\n    arr[temp]++;\n  }\n  int ans = 0;\n  for (int i = 0; i < 101; i++) {\n    if (arr[i] >= 1) {\n      arr[i]--;\n    } else {\n      ans += i;\n      break;\n    }\n  }\n  for (int i = 0; i < 101; i++) {\n    if (arr[i] >= 1) {\n      arr[i]--;\n    } else {\n      ans += i;\n      break;\n    }\n  }\n  cout << ans << endl;\n}\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ndef mex(A):\n    A = [-1] + A\n    for i in range(1, len(A)):\n        if A[i] - A[i - 1] > 1:\n            return A[i - 1] + 1\n    return A[-1] + 1\n\nfor _ in range(int(input())):\n    n = input()\n    arr = [*map(int, input().split())]\n    c = Counter(arr)\n\n    A, B = [], []\n\n    for i in sorted(c.keys()):\n        if c[i] > 1:\n            A.append(i)\n            B.append(i)\n        else:\n            A.append(i)\n\n    print(mex(A) + mex(B))"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nT = int(input())\n\nfor t in range(T):\n    n = int(input())\n    S = list(map(int, input().split()))\n    Sd = Counter()\n\n    for i in S:\n        Sd[i] += 1\n\n    mA = 0\n\n    while Sd[mA]:\n        Sd[mA] -= 1\n        mA += 1\n\n    mB = 0\n\n    while Sd[mB]:\n        Sd[mB] -= 1\n        mB += 1\n\n    print(mA + mB)\n"
        },
        {
            "language": 3,
            "solution": "def read(datatype=int):\n    return datatype(input())\n\n\ndef readl(datatype=int):\n    return list(map(datatype, input().split()))\n\n\ndef printl(data):\n    string = ''\n    for d in data:\n        string += str(d) + ' '\n    print(string)\n\n\ndef mex(arr):\n    freq = [False for _ in range(101)]\n    for a in arr:\n        freq[a] = True\n    for i in range(101):\n        if not freq[i]:\n            return i\n\n    return 101\n\n\ndef testcase():\n    # --------------------- start testcase ---------------------\n\n    n = read()\n    arr = readl()\n    freq = [0 for _ in range(101)]\n\n    for a in arr:\n        freq[a] += 1\n\n    a = []\n    b = []\n\n    for i in range(101):\n\n        while freq[i] > 1:\n            a.append(i)\n            b.append(i)\n            freq[i] -= 2\n\n        if freq[i] == 1:\n            a.append(i)\n\n    print(\n        mex(a) + mex(b)\n    )\n\n    # --------------------- end testcase -----------------------\n    return\n\n\nt = read()\nfor _ in range(t):\n    testcase()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Problems problems = new Problems();\n        problems.solve();\n    }\n}\n\nclass Problems {\n\n    Parser parser = new Parser();\n\n    void solve() {\n        int t = parser.parseInt();\n        for (int i = 0; i < t; i++) {\n            Problem problem = new Problem();\n            problem.solve(i);\n        }\n    }\n\n    class Problem {\n\n        void solve(int testcase) {\n            int n = parser.parseInt();\n            int[] a = new int[n];\n            int[] cnt = new int[109];\n\n            for(int i = 0; i < n; i++) {\n                a[i] = parser.parseInt();\n                cnt[a[i]] += 1;\n            }\n\n            int v1 = 0;\n            for(int i = 0; i <= 100; i++) {\n                if(cnt[i] > 0) {\n                    v1 += 1;\n                    cnt[i] -= 1;\n                } else {\n                    break;\n                }\n            }\n\n            int v2 = 0;\n\n            for(int i = 0; i <= 100; i++) {\n                if(cnt[i] > 0) {\n                    v2 += 1;\n                } else {\n                    break;\n                }\n            }\n\n            System.out.println(v1 + v2);\n        }\n    }\n\n}\n\nclass Parser {\n    private final Iterator<String> stringIterator;\n    private final Deque<String> inputs;\n\n    Parser() {\n        this(System.in);\n    }\n\n    Parser(InputStream in) {\n        BufferedReader br = new BufferedReader(new InputStreamReader(in));\n        stringIterator = br.lines().iterator();\n        inputs = new ArrayDeque<>();\n    }\n\n    void fill() {\n        while (inputs.isEmpty()) {\n            if (!stringIterator.hasNext()) throw new NoSuchElementException();\n            inputs.addAll(Arrays.asList(stringIterator.next().split(\" \")));\n            while (!inputs.isEmpty() && inputs.getFirst().isEmpty()) {\n                inputs.removeFirst();\n            }\n        }\n    }\n\n    Integer parseInt() {\n        fill();\n        if (!inputs.isEmpty()) {\n            return Integer.parseInt(inputs.pollFirst());\n        }\n        throw new NoSuchElementException();\n    }\n\n    Long parseLong() {\n        fill();\n        if (!inputs.isEmpty()) {\n            return Long.parseLong(inputs.pollFirst());\n        }\n        throw new NoSuchElementException();\n    }\n\n    Double parseDouble() {\n        fill();\n        if (!inputs.isEmpty()) {\n            return Double.parseDouble(inputs.pollFirst());\n        }\n        throw new NoSuchElementException();\n    }\n\n    String parseString() {\n        fill();\n        return inputs.removeFirst();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class SubsetMex {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n=sc.nextInt();\n\t\t\tint arr[]=new int[101];\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tint in=sc.nextInt();\n\t\t\t\tarr[in]++;\n\t\t\t}\n\t\t\t\n\t\t\t//first set mex\n\t\t\tint sum=0;\n\t\t\tfor(int i=0;i<101;i++) {\n\t\t\t\tif(arr[i]==0) {\n\t\t\t\t\tsum+=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//second set mex\n\t\t\tfor(int i=0;i<101;i++) {\n\t\t\t\tif(arr[i]<=1) {\n\t\t\t\t\tsum+=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(sum);\n\t\t}\n\t}\n\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.text.*;\n\npublic class CF_1406_A{\n    //SOLUTION BEGIN\n    void pre() throws Exception{}\n    void solve(int TC) throws Exception{\n        int N = ni(), M = 105;\n        int[] A = new int[M];\n        for(int i = 0; i <N; i++)A[ni()]++;\n        int ans = 0;\n        int f = 2;\n        for(int i = 0; i< M; i++){\n            while(f > A[i]){\n                ans += i;\n                f--;\n            }\n        }\n        pn(ans);\n    }\n    //SOLUTION END\n    void hold(boolean b)throws Exception{if(!b)throw new Exception(\"Hold right there, Sparky!\");}\n    void exit(boolean b){if(!b)System.exit(0);}\n    static void dbg(Object... o){System.err.println(Arrays.deepToString(o));}\n    final long IINF = (long)1e17;\n    final int INF = (int)1e9+2;\n    DecimalFormat df = new DecimalFormat(\"0.00000000000\");\n    double PI = 3.141592653589793238462643383279502884197169399, eps = 1e-8;\n    static boolean multipleTC = true, memory = true, fileIO = false;\n    FastReader in;PrintWriter out;\n    void run() throws Exception{\n        long ct = System.currentTimeMillis();\n        if (fileIO) {\n            in = new FastReader(\"\");\n            out = new PrintWriter(\"\");\n        } else {\n            in = new FastReader();\n            out = new PrintWriter(System.out);\n        }\n        //Solution Credits: Taranpreet Singh\n        int T = multipleTC? ni():1;\n        pre();\n        for (int t = 1; t <= T; t++) solve(t);\n        out.flush();\n        out.close();\n        System.err.println(System.currentTimeMillis() - ct);\n    }\n    public static void main(String[] args) throws Exception{\n        if(memory)new Thread(null, new Runnable() {public void run(){try{new CF_1406_A().run();}catch(Exception e){e.printStackTrace();System.exit(1);}}}, \"1\", 1 << 28).start();\n        else new CF_1406_A().run();\n    }\n    int[][] make(int n, int e, int[] from, int[] to, boolean f){\n        int[][] g = new int[n][];int[]cnt = new int[n];\n        for(int i = 0; i< e; i++){\n            cnt[from[i]]++;\n            if(f)cnt[to[i]]++;\n        }\n        for(int i = 0; i< n; i++)g[i] = new int[cnt[i]];\n        for(int i = 0; i< e; i++){\n            g[from[i]][--cnt[from[i]]] = to[i];\n            if(f)g[to[i]][--cnt[to[i]]] = from[i];\n        }\n        return g;\n    }\n    int[][][] makeS(int n, int e, int[] from, int[] to, boolean f){\n        int[][][] g = new int[n][][];int[]cnt = new int[n];\n        for(int i = 0; i< e; i++){\n            cnt[from[i]]++;\n            if(f)cnt[to[i]]++;\n        }\n        for(int i = 0; i< n; i++)g[i] = new int[cnt[i]][];\n        for(int i = 0; i< e; i++){\n            g[from[i]][--cnt[from[i]]] = new int[]{to[i], i, 0};\n            if(f)g[to[i]][--cnt[to[i]]] = new int[]{from[i], i, 1};\n        }\n        return g;\n    }\n    int find(int[] set, int u){return set[u] = (set[u] == u?u:find(set, set[u]));}\n    int digit(long s){int ans = 0;while(s>0){s/=10;ans++;}return ans;}\n    long gcd(long a, long b){return (b==0)?a:gcd(b,a%b);}\n    int gcd(int a, int b){return (b==0)?a:gcd(b,a%b);}\n    int bit(long n){return (n==0)?0:(1+bit(n&(n-1)));}\n    void p(Object... o){for(Object oo:o)out.print(oo+\" \");}\n    void pn(Object... o){for(int i = 0; i< o.length; i++)out.print(o[i]+(i+1 < o.length?\" \":\"\\n\"));}\n    void pni(Object... o){for(Object oo:o)out.print(oo+\" \");out.println();out.flush();}\n    String n()throws Exception{return in.next();}\n    String nln()throws Exception{return in.nextLine();}\n    int ni()throws Exception{return Integer.parseInt(in.next());}\n    long nl()throws Exception{return Long.parseLong(in.next());}\n    double nd()throws Exception{return Double.parseDouble(in.next());}\n\n    class FastReader{\n        BufferedReader br;\n        StringTokenizer st;\n        public FastReader(){\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public FastReader(String s) throws Exception{\n            br = new BufferedReader(new FileReader(s));\n        }\n\n        String next() throws Exception{\n            while (st == null || !st.hasMoreElements()){\n                try{\n                    st = new StringTokenizer(br.readLine());\n                }catch (IOException  e){\n                    throw new Exception(e.toString());\n                }\n            }\n            return st.nextToken();\n        }\n\n        String nextLine() throws Exception{\n            String str;\n            try{\n                str = br.readLine();\n            }catch (IOException e){\n                throw new Exception(e.toString());\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn = int(input())\n\ta = sorted(list(map(int,input().split())))\n\tl = [0,0]\n\tfor i in a:\n\t\tif i==l[0]:\n\t\t\tl[0]+=1\n\t\telif i==l[1]:\n\t\t\tl[1]+=1\n\tprint(sum(l))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nfor i in range(n):\n    m=int(input())\n    a=[int(i) for i in input().split()]\n    l=[]\n    l1=[]\n    d=set(a)\n    first=0\n    second=0\n    for j in d:\n        if(a.count(j)==1):\n            l.append(j)\n        else:\n            l.append(j)\n            l1.append(j)\n    for j in range(0,101):\n        if(j not in l):\n            first=j\n            break\n    for j in range(0,101):\n        if(j not in l1):\n            second=j\n            break\n    print(first+second)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as dc\n\n\ndef solv():\n    x = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    a = dc(lambda: 0)\n    b = dc(lambda: 0)\n\n    for n in s:\n        if a[n] == 0:\n            a[n] = 1\n        else:\n            b[n] = 1\n    p = 0\n    while a[p]:\n        p += 1\n    q = 0\n    while b[q]:\n        q += 1\n    print(p+q)\n\n\nfor n in range(int(input())):\n    solv()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\nusing namespace std;\ntemplate <class c>\nstruct rge {\n  c b, e;\n};\ntemplate <class c>\nrge<c> range(c i, c j) {\n  return rge<c>{i, j};\n}\ntemplate <class c>\nauto dud(c* x) -> decltype(cerr << *x, 0);\ntemplate <class c>\nchar dud(...);\nstruct debug {\n  template <class c>\n  debug& operator<<(const c&) {\n    return *this;\n  }\n};\nconst long long MOD = 1e9 + 7;\nconst long long N = 1e7 + 1;\nconst long long INF = 1e18 + 10;\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> v(n);\n  multiset<long long> ms;\n  for (long long i = 0; i < n; i++) {\n    cin >> v[i];\n    ms.insert(v[i]);\n  }\n  long long first = -1;\n  for (long long i = 0; i <= 101; i++) {\n    if (ms.count(i) == 0) {\n      debug() << \" [\"\n              << \"first\"\n                 \": \"\n              << (first) << \"] \";\n      if (first != -1) {\n        cout << first + i << endl;\n      } else\n        cout << i + i << endl;\n      return;\n    } else if (ms.count(i) == 1 && first == -1) {\n      first = i;\n    }\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nfor _ in range(int(input())):\n    n=int(input())\n    arr=Counter(map(int,input().split()))\n    a=[]\n    b=[]\n    for i in arr:\n        a.append(i)\n        if arr[i]>=2:\n            b.append(i)\n    last=a[-1]+10\n    a.append(last)\n    a.sort()\n    if len(b)!=0:\n        last=b[-1]+10\n        b.append(last)\n    b.sort()\n    mex=[]\n    if len(a)!=0:\n        for i in range(len(a)+1):\n            if i!=a[i]:\n                mex.append(i)\n                break\n    if len(b)!=0:\n        for i in range(len(b)+1):\n            if i!=b[i]:\n                mex.append(i)\n                break\n    print(sum(mex))"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\npublic class hello {\n\t\n\tpublic static void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tArrayList<Integer> a=new ArrayList<Integer>();\n\t\tArrayList<Integer> b=new ArrayList<Integer>();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tint q=sc.nextInt();\n\t\t\tfor(int j=0;j<q;j++){\n\t\t\t\tint x=sc.nextInt();\n\t\t\t\tif((a.contains(x)==false||x==a.get(a.size()-1)+1)){\n\t\t\t\t\ta.add(x);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif((b.contains(x)==false||x==b.get(b.size()-1)+1)){\n\t\t\t\t\t\tb.add(x);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tCollections.sort(a);\n\t\t\t\tCollections.sort(b);\n\n\t\t\t\tint e=0,w=0,r=0,t=0;\n\t\t\t\tfor(int k=0;k<a.size();k++){\n\t\t\t\t\tif(a.get(k)!=k){\n\t\t\t\t\t\tw=k;\n\t\t\t\t\t\tr=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tfor(int k=0;k<b.size();k++){\n\t\t\t\t\tif(b.get(k)!=k){\n\t\t\t\t\t\te=k;\n\t\t\t\t\t\tt=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\tif(r==0){\n\t\t\t\tw=a.size();\n\t\t\t}\n\t\t\tif(t==0){\n\t\t\t\te=b.size();\n\t\t\t}\n\t\t\tSystem.out.println(w+e);\n\t\t\ta.clear();\n\t\t\tb.clear();\n\t\t\t\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int arr[n];\n    map<int, int> m;\n    int mx = 0, mn = 101, sum = 0;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      m[x] += 1;\n    }\n    for (int i = 0; i <= 100; i++) {\n      if (m[i] == 0) {\n        sum += i;\n        break;\n      } else if (m[i] > 0) {\n        m[i] -= 1;\n      }\n    }\n    for (int i = 0; i <= 100; i++) {\n      if (m[i] == 0) {\n        sum += i;\n        break;\n      }\n    }\n    cout << sum << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import *\nfor u in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    d=[0]*101\n    for i in l:\n        d[i]+=1\n    x=-1\n    for i in range(101):\n        if(d[i]==0):\n            x=i\n            break\n    r=0\n    i=0\n    while(i<101 and d[i]>1):\n        i+=1\n    if(i<101 and d[i]==0):\n        r=2*i\n        print(max(x,r))\n        continue\n    r+=i\n    i+=1\n    while(i<101 and d[i]>0):\n        i+=1\n    r+=i\n    print(max(r,x))\n"
        },
        {
            "language": 3,
            "solution": "for __ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    kek = [0] * 200\n    for elem in ar:\n        kek[elem] += 1\n    a, b = 0, 0\n    flag = True\n    for i in range(200):\n        if flag and kek[i] >= 2:\n            a += 1\n            b += 1\n        else:\n            flag = False\n            if kek[i] >= 1:\n                a += 1\n            else:\n                break\n    print(a + b)"
        },
        {
            "language": 3,
            "solution": "#### IMPORTANT LIBRARY ####\n\n############################\n### DO NOT USE import random --> 250ms to load the library\n############################\n\n### In case of extra libraries: https://github.com/cheran-senthil/PyRival\n\n######################\n####### IMPORT #######\n######################\n\nfrom functools import cmp_to_key \nfrom collections import deque, Counter\nfrom heapq import heappush, heappop\nfrom math import log, ceil\n\n######################\n#### STANDARD I/O ####\n######################\n\nimport sys\nimport os\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ndef print(*args, **kwargs):\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\ndef inp():\n    return sys.stdin.readline().rstrip(\"\\r\\n\")  # for fast input\n    \ndef ii():\n    return int(inp())\n\ndef si():\n    return str(inp())\n\ndef li(lag = 0):\n    l = list(map(int, inp().split()))\n    if lag != 0:\n        for i in range(len(l)):\n            l[i] += lag\n    return l\n    \ndef mi(lag = 0):\n    matrix = list()\n    for i in range(n):\n        matrix.append(li(lag))\n    return matrix\n\ndef lsi(): #string list\n    return list(map(str, inp().split()))\n\ndef print_list(lista, space = \" \"):\n    print(space.join(map(str, lista)))\n\n######################\n### BISECT METHODS ###\n######################\n\ndef bisect_left(a, x):\n    \"\"\"i tale che a[i] >= x e a[i-1] < x\"\"\"\n    left = 0\n    right = len(a)\n    while left < right:\n        mid = (left+right)//2\n        if a[mid] < x: \n            left = mid+1\n        else: \n            right = mid\n    return left\n\ndef bisect_right(a, x):\n    \"\"\"i tale che a[i] > x e a[i-1] <= x\"\"\"\n    left = 0\n    right = len(a)\n    while left < right:\n        mid = (left+right)//2\n        if a[mid] > x: \n            right = mid\n        else: \n            left = mid+1\n    return left\n\ndef bisect_elements(a, x):\n    \"\"\"elementi pari a x nell'\u00e1rray sortato\"\"\"\n    return bisect_right(a, x) - bisect_left(a, x)\n\n######################\n### MOD OPERATION ####\n######################\n\nMOD = 10**9 + 7\nmaxN = 5\nFACT = [0] * maxN\nINV_FACT = [0] * maxN\n\ndef add(x, y):\n    return (x+y) % MOD\n   \ndef multiply(x, y):\n    return (x*y) % MOD\n\ndef power(x, y):\n    if y == 0:\n        return 1\n    elif y % 2:\n        return multiply(x, power(x, y-1))\n    else:\n        a = power(x, y//2)\n        return multiply(a, a)\n\ndef inverse(x):\n    return power(x, MOD-2)\n   \ndef divide(x, y):\n    return multiply(x, inverse(y))\n\ndef allFactorials():\n    FACT[0] = 1\n    for i in range(1, maxN):\n        FACT[i] = multiply(i, FACT[i-1])\n\ndef inverseFactorials():\n    n = len(INV_FACT)\n    INV_FACT[n-1] = inverse(FACT[n-1])\n    for i in range(n-2, -1, -1):\n        INV_FACT[i] = multiply(INV_FACT[i+1], i+1)\n\ndef coeffBinom(n, k):\n    if n < k:\n        return 0\n    return multiply(FACT[n], multiply(INV_FACT[k], INV_FACT[n-k]))\n\n######################\n#### GRAPH ALGOS #####\n######################\n\n# ZERO BASED GRAPH\ndef create_graph(n, m, undirected = 1, unweighted = 1):\n    graph = [[] for i in range(n)]\n    if unweighted:\n        for i in range(m):\n            [x, y] = li(lag = -1)\n            graph[x].append(y)\n            if undirected:\n                graph[y].append(x)\n    else:\n        for i in range(m):\n            [x, y, w] = li(lag = -1)\n            w += 1\n            graph[x].append([y,w])\n            if undirected:\n                graph[y].append([x,w])\n    return graph\n\ndef create_tree(n, unweighted = 1):\n    children = [[] for i in range(n)]\n    if unweighted:\n        for i in range(n-1):\n            [x, y] = li(lag = -1)\n            children[x].append(y)\n            children[y].append(x)\n    else:\n        for i in range(n-1):\n            [x, y, w] = li(lag = -1)\n            w += 1\n            children[x].append([y, w])\n            children[y].append([x, w])\n    return children\n   \ndef dist(tree, n, A, B = -1):\n    s = [[A, 0]]\n    massimo, massimo_nodo = 0, 0\n    distanza = -1\n    v = [-1] * n\n    while s:\n        el, dis = s.pop() \n        if dis > massimo:\n            massimo = dis\n            massimo_nodo = el\n        if el == B:\n            distanza = dis\n        for child in tree[el]:\n            if v[child] == -1:\n                v[child] = 1\n                s.append([child, dis+1])\n    return massimo, massimo_nodo, distanza\n\ndef diameter(tree):\n    _, foglia, _ = dist(tree, n, 0)\n    diam, _, _ = dist(tree, n, foglia)\n    return diam\n   \ndef dfs(graph, n, A):\n    v = [-1] * n\n    s = [[A, 0]]\n    v[A] = 0\n    while s:\n        el, dis = s.pop()\n        for child in graph[el]:\n            if v[child] == -1:\n                v[child] = dis + 1\n                s.append([child, dis + 1])\n    return v #visited: -1 if not visited, otherwise v[B] is the distance in terms of edges\n\ndef bfs(graph, n, A):\n    v = [-1] * n\n    s = deque()\n    s.append([A, 0])\n    v[A] = 0\n    while s:\n        el, dis = s.popleft()\n        for child in graph[el]:\n            if v[child] == -1:\n                v[child] = dis + 1\n                s.append([child, dis + 1])\n    return v #visited: -1 if not visited, otherwise v[B] is the distance in terms of edges\n\n#FROM A GIVEN ROOT, RECOVER THE STRUCTURE\ndef parents_children_root_unrooted_tree(tree, n, root = 0):\n    q = deque()\n    visited = [0] * n\n    parent = [-1] * n\n    children = [[] for i in range(n)]\n    q.append(root)\n    while q:\n        all_done = 1\n        visited[q[0]] = 1\n        for child in tree[q[0]]:\n            if not visited[child]:\n                all_done = 0\n                q.appendleft(child)\n        if all_done:\n            for child in tree[q[0]]:   \n                if parent[child] == -1:\n                    parent[q[0]] = child\n                    children[child].append(q[0])\n            q.popleft()\n    return parent, children\n\n# CALCULATING LONGEST PATH FOR ALL THE NODES \ndef all_longest_path_passing_from_node(parent, children, n):\n    q = deque()\n    visited = [len(children[i]) for i in range(n)]\n    downwards = [[0,0] for i in range(n)]\n    upward = [1] * n\n    longest_path = [1] * n\n    for i in range(n):\n        if not visited[i]:\n            q.append(i)\n            downwards[i] = [1,0]\n    while q:\n        node = q.popleft()\n        if parent[node] != -1:\n            visited[parent[node]] -= 1\n            if not visited[parent[node]]:\n                q.append(parent[node])\n        else:\n            root = node\n        for child in children[node]:   \n            downwards[node] = sorted([downwards[node][0], downwards[node][1], downwards[child][0] + 1], reverse = True)[0:2]\n    s = [node]\n    while s:\n        node = s.pop()\n        if parent[node] != -1:\n            if downwards[parent[node]][0] == downwards[node][0] + 1:\n                upward[node] = 1 + max(upward[parent[node]], downwards[parent[node]][1])\n            else:\n                upward[node] = 1 + max(upward[parent[node]], downwards[parent[node]][0])\n        longest_path[node] = downwards[node][0] + downwards[node][1] + upward[node] - min([downwards[node][0], downwards[node][1], upward[node]]) - 1\n        for child in children[node]:\n            s.append(child)\n    return longest_path\n\n### TBD SUCCESSOR GRAPH 7.5\n### TBD TREE QUERIES 10.2 da 2 a 4\n### TBD ADVANCED TREE 10.3\n### TBD GRAPHS AND MATRICES 11.3.3 e 11.4.3 e 11.5.3 (ON GAMES)\n\n######################\n## END OF LIBRARIES ##\n######################\n\nfor test in range(ii()):\n    n = ii()\n    a = li()\n    a = sorted(a)\n    occ = [0 for i in range(n+1)]\n    for i in range(n):\n        if a[i] >= 0 and a[i] <= n:\n            occ[a[i]] += 1\n    messo = 0\n    s = 0\n    i = 0\n    while i <= n and messo < 2:\n        if occ[i] == 0:\n            s += (2-messo)*i\n            messo = 2\n        elif occ[i] == 1 and messo == 0:\n            s += i\n            messo += 1\n        i += 1\n    print(s)"
        },
        {
            "language": 3,
            "solution": "class Node():\n    def __init__(self,val):\n        self.val=val\n        self.children=None\n        self.centroid=None\n        self.edges=[]\n\nclass Graph():\n    def __init__(self):\n        self.root=None\n    def add_edge(self,a,b):\n        if(self.root==None):\n            self.root=a\n        a.edges.append(b)\n        b.edges.append(a)\n\n\n\ndef dfs_children(g,root,visited):\n    visited.add(root.val)\n    c=0\n    for i in root.edges:\n        if(i.val not in visited):\n            visited.add(i.val)\n            c+=1+dfs_children(g,i,visited)\n    root.children=c\n    return root.children\n\n\n\n\ndef dfs_centroids(g,root,visited,n,ce):\n    visited.add(root.val)\n    c=-1\n    t=0\n    for i in root.edges:\n        if(i.val not in visited):\n            visited.add(i.val)\n            c=max(c,i.children+1)\n            dfs_centroids(g,i,visited,n,ce)\n            t+=i.children+1\n    c=max(c,n-t-1)\n    root.centroid=c\n    if(c in ce):\n        ce[c].append(root)\n    else:\n        ce[c]=[root]\n    return root.centroid\n\ndef get_leaf(root,li,visited,noti):\n    if(root.val==noti.val):\n        return False\n    visited.add(root.val)\n    flag=True\n    for i in root.edges:\n        if(i.val not in visited and i.val!=noti.val):\n            visited.add(i.val)\n            li[0]=root\n            li[1]=i\n            flag=flag & get_leaf(root,li,visited,noti)\n    return flag\n\n\n\ndef process():\n    n=int(input())\n    li=list(map(int,input().split()))\n    counts={}\n    for i in li:\n        if(i in counts):\n            counts[i]+=1\n        else:\n            counts[i]=1\n    ans=-1\n    for i in range(0,101):\n        if(i in counts):\n            if(counts[i]>=2):\n                pass\n            elif(counts[i]==1 and ans==-1):\n                ans=0\n                ans+=i\n        else:\n            if(ans>=0):\n                ans+=i\n                break\n            else:\n                ans=2*i\n                break\n    print(ans)\n\n    # g=Graph()\n    # nodes={}\n    # for i in range(n-1):\n    #     if(a not in nodes):\n    #         nodes[a]=Node(a)\n    #     if(b not in nodes):\n    #         nodes[b]=Node(b)\n    #     g.add_edge(nodes[a],nodes[b])\n    # visited=set()\n    # dfs_children(g,g.root,visited)\n    # visited=set()\n    # ce={}\n    # dfs_centroids(g,g.root,visited,n,ce)\n    # centroid=min(list(ce.keys()))\n    # if(len(ce[centroid])==1):\n    #     print(g.root.val,g.root.edges[0].val)\n    #     print(g.root.val, g.root.edges[0].val)\n    #     pass\n    # else:\n    #     li=[-1,ce[centroid][0]]\n    #     # print(li[1].val)\n    #     for i in ce[centroid][0].edges:\n    #         visited={i.val,ce[centroid][0].val}\n    #         li[0]=ce[centroid][0]\n    #         li[1]=i\n    #         if(get_leaf(i,li,visited,ce[centroid][1])):\n    #             break\n    #\n    #     print(li[0].val,li[1].val)\n    #     print(li[1].val,ce[centroid][1].val)\n    #     a,b=list(map(int,input().split()))\n\n\n\n\ntests=int(input())\nfor i in range(tests):\n    process()"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    al = list(map(int, input().split()))\n    al.sort()\n    cntl = []\n    prev = al[0]\n    cnt = 1\n    for a in al[1:]:\n        if prev == a: cnt+=1\n        else:\n            cntl.append((prev,cnt))\n            cnt = 1\n            prev = a\n    cntl.append((prev,cnt))\n\n\n    one_end = False\n    ans1 = -1\n    ans2 = -1\n    # print(cntl)\n    for i, (a,cnt) in enumerate(cntl):\n        if a == i:\n            if cnt >= 2:\n                # i += 1\n                pass\n            else:\n                if not one_end:\n                    ans1 = i\n                    one_end = True\n                    # i += 1\n                else:\n                    pass\n        else:\n            if ans1 == -1: ans1 = i\n            ans2 = i\n            break\n    else:\n        if ans1 == -1: ans1 = max(al)+1\n        if ans2 == -1: ans2 = max(al)+1\n    print(ans1+ans2)\n\n    # for i, (a,cnt) in enumerate(cntl):\n    #     if a == i:\n    #         if cnt >= 2:\n    #             # i += 1\n    #             pass\n    #         else:\n    #             if not one_skip:\n    #                 ans1 = i\n    #                 one_skip = True\n    #                 # i += 1\n    #             else:\n    #                 ans2 = i\n    #                 break\n    #     else:\n    #         if ans1 == -1: ans1 = i\n    #         ans2 = i\n    #         break\n    # else:\n    #     if ans1 == -1: ans1 = max(al)+1\n    #     if ans2 == -1: ans2 = max(al)+1\n    # print(ans1+ans2)\n    # print(ans1,ans2)\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "# It's never too late to start!\nfrom bisect import bisect_left\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nfrom collections import Counter, defaultdict\nfrom collections import deque\nfrom functools import cmp_to_key\nimport math\nimport heapq\n\ndef sin():\n    return input()\ndef ain():\n    return list(map(int, sin().split()))\ndef sain():\n    return input().split()\ndef iin():\n    return int(sin())\nMAX = float('inf')\nMIN = float('-inf')\nMOD = 1000000007\ndef sieve(n): \n    prime = [True for i in range(n+1)]\n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    s = set()\n    for p in range(2, n+1): \n        if prime[p]: \n            s.add(p)\n    return s\ndef readTree(n, m):\n    adj = [deque([]) for _ in range(n+1)]\n    for _ in range(m):\n        u,v = ain()\n        adj[u].append(v)\n        adj[v].append(u)\n    return adj\n\n# Stay hungry, stay foolish!\n\ndef main():\n    for _ in range(iin()):\n        n = iin()\n        l = ain()\n        a = [0]*101\n        for i in l:\n            a[i] += 1\n        m1 = 101\n        for i in range(101):\n            if a[i] == 0:\n                m1 = i\n                break\n            else:\n                a[i] -= 1\n        m2 = 101\n        for i in range(101):\n            if a[i] == 0:\n                m2 = i\n                break\n            else:\n                a[i] -= 1\n        print(m1+m2)\n\n        \n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n            \n        \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n\n\n\n# Fast IO Template starts\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\nif os.getcwd() == 'D:\\\\code':\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n    input = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# Fast IO Template ends\nif __name__ == \"__main__\":\n    main()\n\n# Never Give Up - John Cena"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n    n = int(input())\n    k = list(map(int, input().split()))\n    m1, m2 = 0, 0\n    for i in range(101):\n        if k.count(i) < 2:\n            m1 = i\n            break\n    for i in range(m1, 101):\n        if k.count(i) < 1:\n            m2 = i\n            break\n    print(m1+m2)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor q in range(t):\n    n=int(input())\n    ch=input()\n    L=[int(i)for i in ch.split()]\n\n\n    M=[0]*102\n    for i in range(n):\n        M[L[i]]+=1\n    for i in range(102):\n        if M[i]==0:\n            x=i\n            break\n        M[i]-=1\n    for i in range(102):\n        if M[i]==0:\n            y=i\n            break\n        M[i]-=1\n        \n    print(x+y)\n            \n        \n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport heapq, functools, collections\nimport math, random\nfrom collections import Counter, defaultdict\n\n# available on Google, not available on Codeforces\n# import numpy as np\n# import scipy\n\n\ndef solve(lst):  # fix inputs here\n    console(\"----- solving ------\")\n\n    c = Counter(lst)\n\n    cur = 0\n    while True:\n        if c[cur] < 2:\n            a = cur\n            break\n        cur += 1\n\n    while True:\n        if c[cur] < 1:\n            b = cur\n            break\n        cur += 1\n\n    # return a string (i.e. not a list or matrix)\n    return a + b  \n\n\ndef console(*args):  # the judge will not read these print statement\n    print('\\033[36m', *args, '\\033[0m', file=sys.stderr)\n    return\n\n# fast read all\n# sys.stdin.readlines()\n\nfor case_num in range(int(input())):\n    # read line as a string\n    # strr = input()\n\n    # read line as an integer\n    k = int(input())\n    \n    # read one line and parse each word as a string\n    # lst = input().split()\n\n    # read one line and parse each word as an integer\n    lst = list(map(int,input().split()))\n\n    # read matrix and parse as integers (after reading read nrows)\n    # lst = list(map(int,input().split()))\n    # nrows = lst[0]  # index containing information, please change\n    # grid = []\n    # for _ in range(nrows):\n    #     grid.append(list(map(int,input().split())))\n\n    res = solve(lst)  # please change\n    \n    # Google - case number required\n    # print(\"Case #{}: {}\".format(case_num+1, res))\n\n    # Codeforces - no case number required\n    print(res)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int A[n];\n    for (int i = 0; i < n; i++) cin >> A[i];\n    sort(A, A + n);\n    vector<int> h(A[n - 1] + 2, 0);\n    for (int i : A) {\n      h[i]++;\n    };\n    int ans = 0, c = 0, zero = -1, one = -1;\n    for (int i = 0; i < h.size(); i++) {\n      if (h[i] == 1) {\n        one = i;\n        break;\n      };\n    };\n    for (int i = 0; i < h.size(); i++) {\n      if (h[i] == 0) {\n        zero = i;\n        break;\n      };\n    };\n    if (one == -1 || one > zero) {\n      ans += 2 * zero;\n    } else {\n      ans += (one + zero);\n    };\n    cout << ans << endl;\n  };\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(l):\n\tl.sort()\n\tif len(l)==0:\n\t\treturn(0)\n\n\telif l[0]!=0:\n\t\treturn(0)\n\n\telse:\n\t\tbase=0\n\t\tfor m in range(1,len(l)):\n\t\t\tif l[m]-base>=2:\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbase=l[m]\n\n\t\tbase+=1\n\t\treturn(base)\n\n\n\n\n\nt=int(input())\nfor i in range(t):\n\tn=int(input())\n\tl=list(map(int,input().split()))\n\tl.sort()\n\td={}\n\tfor item in l:\n\t\td[item]=d.get(item,0)+1\n\n\ta=list(set(l))\n\tb=[]\n\tfor itm in a:\n\t\td[itm]=d.get(itm)-1\n\tfor it in l:\n\t\tif d[it]>0:\n\t\t\tb.append(it)\n\tprint(mex(a)+mex(b))\n\n"
        },
        {
            "language": 3,
            "solution": "def mex(hash_map):\n    for i in range(0,1000):\n        if(i not in hash_map):\n            return i\n    return None\n    \n\n     \n\nt=int(input())\nwhile t>0:\n    t-=1\n    n=int(input())\n    a=list(map(int,input().strip().split()))\n    a.sort()\n    used={}\n    used2={}\n    for i in a:\n        if i in used:\n            used2[i]=1\n        else:\n            used[i]=1\n    print(mex(used)+mex(used2))\n\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint vis[110];\nint a[110];\nint main() {\n  int t;\n  int n;\n  cin >> t;\n  while (t--) {\n    scanf(\"%d\", &n);\n    memset(vis, 0, sizeof(vis));\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &a[i]);\n      vis[a[i]]++;\n    }\n    int flag = 0, ans = 0;\n    for (int i = 0; i <= 100 && flag != 2; i++) {\n      if (flag == 0) {\n        if (vis[i] == 0)\n          ans += i * 2, flag = 2;\n        else if (vis[i] == 1)\n          ans += i, flag = 1;\n      } else if (flag == 1) {\n        if (vis[i] == 0) ans += i, flag = 2;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# from bisect import bisect_left\nTC = int(input())\n\nfor tc in range(TC):\n    N = int(input())\n    A = list(map(int, input().split()))\n    cnt = [0 for _ in range(101)]\n    # print(N, A)\n    for a in A:\n        cnt[a] += 1\n\n    m1 = -1\n    m2 = -1\n    for i, c in enumerate(cnt):\n        if m1 == -1:\n            if c < 2:\n                m1 = i\n\n        if c == 0:\n            m2 = i\n            break\n\n    print(m1 + m2)\n    # print(cnt[:10])\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    mexA, mexB = 0,0\n    k = max(a)\n    for i in range(k+2):\n        if i not in a: mexA = i; break\n        if i in a: del a[a.index(i)]\n        \n    for j in range(k+2):\n        if j not in a: mexB = j; break\n        if j in a: del a[a.index(j)]\n        \n    \n    print(mexA+mexB)\n    \n    \n\n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    c=[0]*(101)\n    for i in  map(int,input().split()):\n        c[i]+=1\n    s=0\n    z=1;v=1\n    for i in range(101):\n        if z and c[i]==0:\n            s+=i\n            z=0\n        if v and c[i]<=1:\n            s+=i\n            v=0\n        if not z and not v:\n            break\n    print(s)"
        },
        {
            "language": 3,
            "solution": "t= int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int,input().strip().split()))[:n]\n    my_hash = [0]*200\n    for i in arr:\n        my_hash[i] += 1\n    #print(my_hash[:10])\n    a_mex = None\n    b_mex = None\n    for i in range(len(my_hash)):\n        if my_hash[i] == 0:\n            if a_mex is None:\n                a_mex = i\n            if b_mex is None:\n                b_mex = i\n            break\n        elif my_hash[i] == 1:\n            if a_mex is None:\n                a_mex = i\n    print(a_mex+b_mex)\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nfor _ in range(n):\n    mex = []\n    s = int(input())\n    myset = list(map(int, input().split()))\n    #print(myset)\n\n    for i in range(101):\n        if myset.count(i) == 0 and len(mex) == 0:\n            mex.append(i + i)\n            break\n        if myset.count(i) < (2 - len(mex)):\n            mex.append(i)\n            #print(\"c mex:\", mex)\n            if len(mex) == 2:\n                break\n    \n    print(sum(mex))\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "cases = int(input())\nfor i in range(cases):\n    n = int(input())\n    l2 = input().split(' ')\n    arr = []\n    sol = 0\n    for a in l2:\n        arr.append(int(a))\n    ss = []\n    n1 = n2 = 0\n    for b in range(0, 101):\n        if b in arr:\n            ss.append(b)\n            arr.remove(b)\n        else:\n            n1 = b\n            break\n    for c in range(0,101):\n        if c not in arr:\n            n2 = c\n            break\n    print(n1+n2)\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint mex(set<int> s) {\n  if (s.size() == 0) return 0;\n  for (int i = 0;; i++)\n    if (s.find(i) == s.end()) return i;\n  return -1;\n}\nvoid solve() {\n  int n, x;\n  scanf(\"%d\", &n);\n  vector<int> v(n);\n  set<int> a, b;\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &x);\n    if (a.find(x) != a.end())\n      b.insert(x);\n    else\n      a.insert(x);\n  }\n  printf(\"%d\\n\", mex(a) + mex(b));\n}\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nT = int(input())\n\nfor i in range(T):\n    N = int(input())\n    A = list(map(int,input().split()))\n    C = Counter(A)\n    flag1 = False\n    for i in range(102):\n        if not i in C:\n            if flag1:\n                b = i\n            else:\n                a = i\n                b = i\n            break\n        else:\n            if C[i]==1:\n                if not flag1:\n                    a = i\n                    flag1 = True\n    print(a+b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 110;\nint t, n, a[N];\nint main() {\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    memset(a, 0, sizeof a);\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      a[x]++;\n    }\n    int b[101], c[101], a1 = 0, a2 = 0;\n    memset(b, 0, sizeof b);\n    memset(c, 0, sizeof c);\n    for (int i = 0; i < 101; i++) {\n      if (a[i] >= 2)\n        b[i] = c[i] = 1;\n      else if (a[i] == 1)\n        b[i] = 1, c[i] = 0;\n      else\n        b[i] = c[i] = 0;\n    }\n    int s1, s2;\n    for (int i = 0; i < 101; i++) {\n      if (!b[i]) {\n        s1 = i;\n        break;\n      }\n    }\n    for (int i = 0; i < 101; i++) {\n      if (!c[i]) {\n        s2 = i;\n        break;\n      }\n    }\n    cout << s1 + s2 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    p={}\n    ans=0\n    for i in range(101):\n        p[i]=arr.count(i)\n    for k in p:\n        if p[k]==0:\n            ans+=k\n            break\n    for k in p:\n        if p[k]<2:\n            ans+=k\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\ny122=int(input())\nfor _ in range(y122):\n    a=input()\n    a=Counter(map(int,input().strip().split()))\n    b=0\n    c=0\n    d=2\n    for i in range(101):\n        try:\n            qw=a[i]\n        except:\n            a[i]=0\n        if a[i]<2:\n            if d==2:\n                if a[i]==1:\n                    b=i\n                    d-=1\n                else:\n                    b=i\n                    c=i\n                    break\n            else:\n                if a[i]<1:\n                    c=i\n                    break\n\n    print(b+c)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while (t-->0) {\n            int n = sc.nextInt();\n            HashMap<Integer, Integer> map = new HashMap<>();\n            for(int i=0;i<n;i++){\n                int a = sc.nextInt();\n                int val = map.getOrDefault(a, 0);\n                map.put(a,val+1);\n            }\n            int mex1 = -1; int mex2 = -1;\n            for(int i=0;i<=101;i++){\n                int num = map.getOrDefault(i, 0);\n                if(num==0){\n                    mex1 = i;\n                    if(mex2==-1) mex2 = i;\n                    break;\n                }\n                if(num==1 && mex2==-1){\n                    mex2 = i;\n                }\n            }\n            System.out.println(mex1 + mex2);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n\n\ndef solution(arr, n):\n    arr.sort()\n    s1, s2 = [], []\n\n    i = 0\n    while i < n:    \n        s1.append(arr[i])\n        while i < n - 1 and arr[i] == arr[i + 1]:\n            s2.append(arr[i + 1])\n            i += 1\n        i += 1\n    \n    res, x = 0, 0\n    while True:\n        if x not in s1:\n            res += x\n            break\n        x += 1\n\n    x = 0\n    while True and s2:\n        if x not in s2:\n            res += x\n            break\n        x += 1\n    \n    write(res)\n\n\ndef main():\n    for _ in range(r_int()):\n        n = r_int()\n        arr = r_array()\n        solution(arr, n)\n\n\n# fast-io region\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\ndef input():\n    return sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\ndef write(*args, end='\\n'):\n    for x in args[:-1]:\n        sys.stdout.write(str(x) + ' ')\n    sys.stdout.write(str(args[-1]))\n    sys.stdout.write(end)\n\n\ndef r_array():\n    return [int(x) for x in input().split()]\n\n\ndef r_int():\n    return int(input())\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    res = 0\n    b = [0] * 101\n\n    for x in a:\n        b[x] += 1\n\n    for x in range(102):\n        if b[x] == 0:\n            res = x\n            break\n        else:\n            b[x] -= 1\n\n    for x in range(102):\n        if b[x] == 0:\n            res += x\n            break\n\n    print(res)"
        },
        {
            "language": 3,
            "solution": "MAXA = 100\n\ndef solve(n, a):\n\tcnt = [0] * (MAXA + 1)\n\tfor v in a:\n\t\tcnt[v] += 1\n\tboth = 0\n\twhile both < len(cnt) and cnt[both] > 1:\n\t\tboth += 1\n\tsingle = both\n\twhile single < len(cnt) and cnt[single] > 0:\n\t\tsingle += 1\n\treturn both + single\n\ntests = int(input())\nfor test in range(tests):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tprint(solve(n, a))\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Sep 12 19:34:24 2020\n\n@author: Nihkv\n\"\"\"\n\ndef mex(l):\n    if l==[]:\n        return 0\n    l.append(0)\n    for i in range(len(l)):\n        if i==l[i]:\n            pass\n        else:\n            return i\nt=int(input())\nfor i in range(t):\n    n,a=int(input()),list(map(int,input().split()))\n    if n==0:\n        print(0)\n    elif n==1:\n        if a[0]==0:\n            print(1)\n        else:\n            print(0)\n    else:\n        i=0\n        a.sort()\n        la,lb=[],[]\n        while(i<(n-1)):\n            if a[i]==a[i+1]:\n                if a[i] not in la:\n                    la.append(a[i])\n                if a[i+1] not in lb:\n                    lb.append(a[1+i])\n                i+=2\n            else:\n                if a[i] not in la:\n                    la.append(a[i])\n                i+=1\n        la.append(a[-1])\n        print(mex(la)+mex(lb))\n            "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    x = sorted(list(map(int, input().split())))\n    a, b = [], []\n    ans = 0\n    for i in x:\n        if i not in a:\n            a.append(i)\n        else:\n            b.append(i)\n    if a:\n        for i in range(max(a) + 2):\n            if i not in a:\n                ans += i\n                break\n    if b:\n        for i in range(max(b) + 2):\n            if i not in b:\n                ans += i\n                break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt = int(input())\nfor i in range(t):\n    a = input()\n    nums = list(map(int, input().split()))\n    nums = Counter(nums)\n    cur = 0\n    while nums[cur]:\n        cur += 1\n    ans = cur\n    cur = 0\n    while nums[cur] > 1:\n        cur += 1\n    ans += cur\n    print(ans)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nfor i in range(n):\n    a=[0]*102\n    m=int(input())\n    for j in input().split():\n        a[int(j)]+=1\n    s=0\n    ll=0\n    ink=0\n    f=True\n    while a[ll]!=0:\n        if a[ll]==1 and f==True:\n            ink=ll\n            f=False\n        ll+=1\n    if f==True:\n        s=ll+ll\n    else:\n        s=ink+ll\n    print(s)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\n\ndef inp():\n    return stdin.buffer.readline().rstrip().decode('utf8')\n\n\ndef itg():\n    return int(stdin.buffer.readline())\n\n\ndef mpint():\n    return map(int, stdin.buffer.readline().split())\n\n\n# ############################## import\n# ############################## main\nfrom collections import Counter\nfor __ in range(itg()):\n    n = itg()\n    c = Counter(mpint())\n    ans = v = 0\n    for k in range(101):\n        if v is None:\n            if c[k]:\n                ans += 1\n            else:\n                break\n        else:\n            if c[k] >= 2:\n                ans += 1\n                v += 1\n            elif c[k] == 1:\n                ans += 1 + v\n                v = None\n            else:\n                ans += v\n                break\n    print(ans)\n\n# Please check!\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int a[n + 5];\n    int b[105] = {0};\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      b[a[i]]++;\n    }\n    int ans = 0;\n    bool f = false;\n    for (int i = 0; i < 105; i++) {\n      if (!f && b[i] == 0) {\n        ans += i + i;\n        break;\n      }\n      if (!f && b[i] == 1) {\n        f = true;\n        ans += i;\n      }\n      if (f && b[i] == 0) {\n        ans += i;\n        break;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush\n# from math import *\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\nimport copy\nimport time\n# import numpy as np\nstarttime = time.time()\n# import numpy as np\nmod = int(pow(10, 9) + 7)\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var))+end)\ndef L(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return map(int, data().split())\ndef ssp(): return map(str, data().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\ntry:\n    # sys.setrecursionlimit(int(pow(10,6)))\n    sys.stdin = open(\"input.txt\", \"r\")\n    # sys.stdout = open(\"../output.txt\", \"w\")\nexcept:\n    pass\n\n\n\n\n\nfor _ in range(L()[0]):\n    n=L()[0]\n    A=L()\n    cnt=[0 for i in range(101)]\n    for ele in A:\n        cnt[ele]+=1\n    a=-1\n    b=-1\n    for i in range(101):\n        if cnt[i]==0:\n            b=i\n            if a==-1:\n                a=i\n            break\n        if cnt[i]<=1 and a==-1:\n            a=i\n    print(a+b)\n\n\n\n\n\n\n\n\n\n\n\n\nendtime = time.time()\n# print(f\"Runtime of the program is {endtime - starttime}\")\n"
        },
        {
            "language": 3,
            "solution": "import sys\nt=int(input().strip())\nfor a0 in range(t):\n    n=int(input())\n    l1=[int(i) for i in input().split()]\n    l=[]\n    r=[]\n    for i in l1:\n        if(i in l and i in r):\n            continue\n        elif(i in l):\n            r.append(i)\n        else:\n            l.append(i)\n    r.sort()\n    l.sort()\n    a=0\n    b=0\n    countl=0\n    countr=0\n    if(len(l)==0):\n        a=0\n    else:\n        for i in range(len(l)):\n            if(l[i]!=i):\n                a=i\n                break\n            else:\n                countl+=1\n    if(countl==len(l)):\n        a=len(l)\n    if(len(r)==0):\n        b=0\n    else:\n        for i in range(len(r)):\n            if(r[i]!=i):\n                b=i\n                break\n            else:\n                countr+=1\n    if(countr==len(r)):\n        b=len(r)\n    print(a+b)\n        \n        "
        },
        {
            "language": 3,
            "solution": "def mex(a):\n    if(not a):\n        return 0\n    for i in range(max(a)+2):\n        if(i not in a):\n            return i\ndef main():\n    for _ in range(int(input())):\n        n=int(input())\n        a=list(map(int,input().split()))\n        s1,s2=set(),set()\n        a=sorted(a)\n        for i in range(n):\n            if(a[i] not in s1):\n                s1.add(a[i])\n            else:\n                s2.add(a[i])\n        print(mex(s1)+mex(s2))\nmain()"
        },
        {
            "language": 3,
            "solution": "z,zz=input,lambda:list(map(int,z().split()))\nzzz=lambda:[int(i) for i in stdin.readline().split()]\nszz,graph,mod,szzz=lambda:sorted(zz()),{},10**9+7,lambda:sorted(zzz())\nfrom string import *\nfrom re import *\nfrom collections import *\nfrom queue import *\nfrom sys import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom bisect import *\nfrom collections import Counter as cc\nfrom math import factorial as f\nfrom bisect import bisect as bs\nfrom bisect import bisect_left as bsl\nfrom itertools import accumulate as ac\nfrom itertools import permutations as permu\ndef lcd(xnum1,xnum2):return (xnum1*xnum2//gcd(xnum1,xnum2))\ndef prime(x):\n    p=ceil(x**.5)+1\n    for i in range(2,p):\n        if (x%i==0 and x!=2) or x==0:return 0\n        \n    return 1\ndef dfs(u,visit,graph):\n    visit[u]=True\n    for i in graph[u]:\n        if not visit[i]:\n            dfs(i,visit,graph)\n\n###########################---Test-Case---#################################\n\"\"\"\n\n\n\n\n\"\"\"\n###########################---START-CODING---##############################\n\nnum=1\nnum=int(z())\n\nfor _ in range( num ):\n    n=int(z())\n    arr=zzz()\n    cnt=[0]*(103)\n    for i in arr:\n        cnt[i]+=1\n\n    \n    \n    ans=0\n    for i in range(102):\n        if cnt[i]>=1:\n            continue\n        else:\n            ans=i\n            break\n        \n\n    for i in range(102):\n        if cnt[i]>=2:\n            continue\n        else:\n            ans+=i\n            break\n        \n    print(ans)\n        \n            \n        \n        \n            \n    \n\n    \n    \n     \n    \n        \n    \n\n\n    \n\n    \n\n    \n\n\n\n \n        \n    \n            \n        \n        \n        \n            \n            \n            \n            \n            \n        \n        \n        \n        \n    \n            \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "\nfrom collections import Counter\nt = int(input())\nfor _ in range(t):\n\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = Counter(arr)\n\n\n    for ele in d:\n        if d[ele] > 2:\n            d[ele] = 2\n\n    maximum1 = 0\n    maximum2 = 0\n    n = len(arr)\n\n    for i in range(0, len(arr)):\n        if i in d:\n            if d[i] == 2:\n                maximum1 += 1\n                maximum2 += 1\n\n            else:\n                maximum1 += 1\n                break\n        else:\n            break\n            \n            \n            \n            \n            \n            \n            \n    if i in d:\n        i += 1\n        while i in d:\n            maximum1 += 1\n            i += 1\n            \n            \n    \n    print(maximum1 + maximum2)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner();\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint a[] = new int[100 + 10];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[sc.nextInt()]++;\n\t\t\t}\n\t\t\tint ans = 0;\n\t\t\tfor (int i = 0; i <= 100; i++) {\n\t\t\t\tif (a[i] < 1) {\n\t\t\t\t\tans += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i <= 100; i++) {\n\t\t\t\tif (a[i] < 2) {\n\t\t\t\t\tans += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\n\t\t}\n\n\t}\n}\n\nclass Scanner {\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tScanner() {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n\n\tString next() throws IOException {\n\t\twhile (st == null || !st.hasMoreElements())\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\treturn st.nextToken();\n\t}\n\n\tint nextInt() throws NumberFormatException, IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tlong nextLong() throws NumberFormatException, IOException {\n\t\treturn Long.parseLong(next());\n\t}\n}\n\n//creating a hash table\n//Hashtable<Integer, String> h = new Hashtable<Integer, String>();\n//\n//Hashtable<Integer, String> h1 = new Hashtable<Integer, String>();\n//\n//h.put(3, \"Geeks\");\n//h.put(2, \"forGeeks\");\n//h.put(1, \"isBest\");\n//System.out.println(h.get(1));\n//if (h.containsKey(1)) {\n//\tSystem.out.println(1111111);\n//}\n//if (h.containsValue(\"isBest\")) {\n//\tSystem.out.println(1111111);\n//}\n//\n//// create a clone or shallow copy of hash table h\n//h1 = (Hashtable<Integer, String>) h.clone();\n//\n//// checking clone h1\n////System.out.println(\"values in clone: \" + h1);\n//\n//// clear hash table h\n//h.clear();\n\n//Creating object of the \n// class linked list \n//LinkedList<String> ll \n//    = new LinkedList<String>(); \n//\n//// Adding elements to the linked list \n//ll.add(\"A\"); \n//ll.add(\"B\"); \n//ll.addLast(\"C\"); \n//ll.addFirst(\"D\"); \n//ll.add(2, \"E\"); \n//\n//System.out.println(ll); \n//\n//ll.remove(\"B\"); \n//ll.remove(3); \n//ll.removeFirst(); \n//ll.removeLast(); \n//\n//System.out.println(ll); \n\n//Set<Integer> set = new HashSet<Integer>();\n//try {\n//   for(int i = 0; i < 5; i++) {\n//      set.add(count[i]);\n//   }\n//   System.out.println(set);\n//\n//   TreeSet sortedSet = new TreeSet<Integer>(set);\n//   System.out.println(\"The sorted list is:\");\n//   System.out.println(sortedSet);\n//\n//   System.out.println(\"The First element of the set is: \"+ (Integer)sortedSet.first());\n//   System.out.println(\"The last element of the set is: \"+ (Integer)sortedSet.last());\n//}\n//catch(Exception e) {}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    ans = 0\n    flag = False\n    for i in range(n):\n        if i in a:\n            a.remove(i)\n        else:\n            ans+=i\n            flag = True\n            break\n    if not flag: ans+=n\n    flag = False\n    for i in range(n):\n        if i in a:\n            a.remove(i)\n        else:\n            ans+=i\n            flag = True\n            break\n    if not flag: ans += n\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int a;\n    cin >> a;\n    int arr[105] = {0};\n    for (int i = 0; i < a; i++) {\n      int x;\n      cin >> x;\n      arr[x]++;\n    }\n    int b = -1;\n    int c = -1;\n    for (int i = 0; i <= 105; i++) {\n      if (arr[i] > 0) {\n        arr[i]--;\n      } else {\n        b = i;\n        break;\n      }\n    }\n    for (int i = 0; i <= 105; i++) {\n      if (arr[i] > 0) {\n        arr[i]--;\n      } else {\n        c = i;\n        break;\n      }\n    }\n    cout << b + c << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n\tocc=[0]*120\n\tn=int(input())\n\ta=[int(x) for x in input().split()]\n\tfor x in a:\n\t\tocc[x]+=1\n\tfl=1\n\tok=0\n\tm1=-1\n\tfor i in range(len(occ)):\n\t\tif(occ[i]==0):\n\t\t\tm1=i\n\t\t\tbreak\n\t\telse:\n\t\t\tocc[i]-=1\n\tm2=-1\n\tfor i in range(len(occ)):\n\t\tif(occ[i]==0):\n\t\t\tm2=i\n\t\t\tbreak\n\t\telse:\n\t\t\tocc[i]-=1\n\tprint(m1+m2)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(num) for num in input().split(' ')]\n    arr.sort()\n    a = [arr[0]]\n    b = []\n    for i in range(1,n):\n        if arr[i] == arr[i-1] + 1 :\n            a.append(arr[i])\n        else:\n            b.append(arr[i])\n            \n    ans = 0\n       \n    for i in range(a[-1] + 2):\n        if a.count(i) == 0:\n            ans = ans + i\n            break\n    if len(b)>0:      \n        for i in range(b[-1] + 2):\n            if b.count(i) == 0:\n                ans = ans + i \n                break\n            \n    print(ans)\n   "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[110];\nint b[110];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n      cin >> a[i];\n      b[a[i]]++;\n    }\n    int ans = 0;\n    for (int i = 0; i < 110; i++) {\n      if (b[i] == 0) {\n        ans += i;\n        break;\n      }\n      b[i]--;\n    }\n    for (int i = 0; i < 110; i++) {\n      if (b[i] == 0) {\n        ans += i;\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Codechef\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tScanner in = new Scanner(System.in);\n\t\tint tc = in.nextInt();\n\t\tfor(int f = 0; f < tc; f++)\n\t\t{\n\t\t    HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();\n\t\t    int len = in.nextInt();\n\t\t    \n\t    \tfor(int y = 0; y < 101; y++)\n\t    \t{\n\t    \t    map.put(y,0);\n\t    \t}\n\t\t\n\t    \tint val = 0;\n\t\t\n\t    \tfor(int x = 0; x < len; x++)\n    \t\t{\n    \t\t    val = in.nextInt();\n    \t\t    map.put(val, map.get(val) + 1);\n    \t\t}\n    \t\t\n    \t\t//System.out.println(map);\n        \t\t\n    \t\n\t\t\n    \t\tint ansA = 101;\n    \t\tint ansB = 101;\n    \t\tboolean flagA = false;\n    \t\tboolean flagB = false;\n\t\t\n    \t\tfor(int i = 0; i <= 100; i++)\n    \t\t{\n    \t\t    if(map.get(i) == 0 && flagA == false)\n    \t\t    {\n    \t\t        ansA = i;\n    \t\t        flagA = true;\n    \t\t    }\n    \t\t    if(map.get(i) < 2 && flagB == false)\n\t    \t    {\n    \t\t        ansB = i;\n    \t\t        flagB = true;\n\t    \t    }\n\t    \t    if(flagB == true && flagA == true)\n\t    \t    {\n\t\t            break;\n\t\t        }\n\t    \t}\n\t    \t\n\t    \tSystem.out.println(ansA + ansB);\n\t\t}\n\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n\tn=int(input())\n\tarr=list(map(int,input().split()))\n\ti=0\n\ta=0\n\tb=0\n\twhile True:\n\t\tif i not in arr:\n\t\t\ta=i\n\t\t\tbreak\n\t\telse:\n\t\t\tarr.remove(i)\n\t\ti+=1\n\ti=0\n\twhile True:\n\t\tif i not in arr:\n\t\t\tb=i\n\t\t\tbreak\n\t\telse:\n\t\t\tarr.remove(i)\n\t\ti+=1\n\tprint(a+b)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    tab = list(map(int, input().split()))\n    arr = [0]*101\n    for i in tab:\n        arr[i] += 1\n    sol = 0\n    it = 0\n    while arr[it] >= 2:\n        it += 1\n    sol += it\n    #print(sol)\n    while(arr[it]>=1):\n        it += 1\n    sol += it\n    print(sol)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\n/*Coded by johhnsnoow */\npublic class SUBSET\n{\n\tstatic class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    }\n    public static void main(String args[])\n    {\n        FastReader sc=new FastReader();\n        PrintWriter pr= new PrintWriter(System.out);\n        int t = sc.nextInt();\n        while(t-->0)\n        {\n            int n = sc.nextInt();\n            int[] a = new int[101];\n            int[] b = new int[101];\n            int max1=0,max2=0;\n            boolean[] c = new boolean[101];\n            for(int i=0;i<n;i++)\n            {\n                  int temp = sc.nextInt();\n                  if(c[temp]==true)\n                  {\n                        b[temp]++;\n                        c[temp]=false;\n                  }\n                  else\n                  {\n                        a[temp]++;\n                        c[temp]=true;\n                  }\n            }\n            for(int i=0;i<101;i++)\n            {\n                  if(a[i]==0)\n                  {\n                        max1=i;\n                        break;\n                  }\n            }\n            for(int i=0;i<101;i++)\n            {\n                  if(b[i]==0)\n                  {\n                        max2=i;\n                        break;\n                  }\n            }\n            pr.println(max1+max2);\n            pr.flush();\n        }\n    }\n  \n} \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A {\n\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc=new FastScanner();\n\t\tint T=sc.nextInt();\n\t\tfor (int tt=0; tt<T; tt++) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint ar[] = new int[106];\n\t\t\tfor(int i =0;i<n;i++) {\n\t\t\t\tint val = sc.nextInt();\n\t\t\t\tar[val]++;\n\t\t\t}\n\t\t\tint ans =0;\n\t\t\t\n\t\t\tint count=0;\n\t\t\tif(ar[0]==0) {\n\t\t\t\tSystem.out.println(0);\n\t\t\t}else {\n\t\t\t\tfor(int i =0;i<105;i++) {\n\t\t\t\t\tif(count==2)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tif(ar[i]==0) {\n\t\t\t\t\t\tans+=i;\n\t\t\t\t\t\tif(count==0)\n\t\t\t\t\t\t\tans+=i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tif(ar[i]==1 && count==1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(ar[i]==1) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tans+=i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println(ans);\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n\tstatic final Random random = new Random();\n\t\n\tstatic void sort(int[] a) {\n\t\tint n = a.length;\n\t\tfor(int i =0; i<n; i++) {\n\t\t\tint val = random.nextInt(n);\n\t\t\tint cur = a[i];\n\t\t\ta[i] = a[val];\n\t\t\ta[val] = cur;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\t\n\tstatic void sortl(long[] a) {\n\t\tint n = a.length;\n\t\tfor(int i =0; i<n; i++) {\n\t\t\tint val = random.nextInt(n);\n\t\t\tlong cur = a[i];\n\t\t\ta[i] = a[val];\n\t\t\ta[val] = cur;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\t\n\tstatic class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (st == null  || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tString nextLine() { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n\t\t} \n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble() { \n            return Double.parseDouble(next()); \n        } \n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "//package pkg1406a;\nimport java.util.*;\npublic class Main\n{\n    public static void main(String[] args) \n    {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        while(t-- >0)\n        {\n            int n=sc.nextInt();\n            int array[]=new int[n];\n            for(int i=0;i<n;i++)\n            {\n                int a=sc.nextInt();\n                if(a>=0 && a<n)\n                {\n                    array[a]++;\n                }\n            }\n            int ans=0;\n            int temp=0;\n            int i;\n            for(i=0;i<n;i++)\n            {\n                if(array[i]==0)\n                {\n                    temp=i;\n                    break;\n                }\n                \n            }\n           // System.out.println(\"i:\"+i+\" n:\"+n);\n            if(i==n)\n            {\n                //System.out.println(\"hi\");\n                 i=0;\n                ans +=n;\n                for(i=0;i<n;i++)\n                {\n                    if(array[i]<2)\n                    {\n                        ans +=i;\n                        break;\n                    }\n                }\n                System.out.println(ans);\n            }\n            else\n            {\n                ans =ans + temp;\n           \n                for(i=0;i<n;i++)\n                {\n                    if(array[i]<2)\n                    {\n                        ans=ans + i;\n                        break;\n                    }\n                }\n                System.out.println(ans);\n            }\n            \n        }\n    }\n    \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n    \n        var sc = new Scanner(System.in);\n        var pw = new PrintWriter(System.out);\n        \n        int T = Integer.parseInt(sc.next());\n        for(int t = 0; t < T; t++){\n            int n = Integer.parseInt(sc.next());\n            var map = new HashMap<Integer, Integer>();\n            for(int i = 0; i < n; i++){\n                int a = Integer.parseInt(sc.next());\n                map.put(a, map.getOrDefault(a, 0) +1);\n            }\n            int a = 0;\n            int b = 0;\n            boolean bool = true;\n            for(int i = 0; i <= 100; i++){\n                if(bool && map.getOrDefault(i, 0) < 2){\n                    a = i;\n                    bool = false;\n                }\n                if(map.getOrDefault(i, 0) < 1){\n                    b = i;\n                    break;\n                }\n            }\n            pw.println(a+b);\n        }\n        pw.flush();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A {\n\n\tstatic PrintWriter out;\n\t\n\tstatic class FIO {\n\t\tBufferedReader in;\n\t\tStringTokenizer st = null;\n\t\tFIO() throws IOException{\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout = new PrintWriter(System.out);\n\t\t\tst = null;\n\t\t}\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(in.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n\tstatic class thing {\n\t\tint a, b;\n\t\tpublic thing(int a, int b) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t}\n\t}\n\tstatic class cmp implements Comparator<thing> {\n\t\t@Override\n\t\tpublic int compare(thing o1, thing o2) {\n\t\t\treturn o1.a - o2.a;\n\t\t}\n\t}\n\tstatic FIO in;\n\tpublic static void main(String[] args) throws IOException {\n\t\tin = new FIO();\n\t\tint tc = in.nextInt();\n\t\twhile (tc-- > 0) {\n\t\t\tnew solver();\n\t\t}\n\t\tout.close();\n\t\t\n\t}\n\tstatic class solver {\n\t\tsolver() {\n\t\t\tint N = in.nextInt();\n\t\t\tint[] ar = new int[N];\n\t\t\tfor (int i = 0; i < N; ++i)\n\t\t\t\tar[i] = in.nextInt();\n\t\t\tint[] oc = new int[105];\n\t\t\tfor (int x : ar)\n\t\t\t\toc[x]++;\n\t\t\tint res = 0;\n\t\t\tfor (int i = 0; i < 105; ++i) {\n\t\t\t\tif (oc[i] <= 1) {\n\t\t\t\t\tres = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < 105; ++i) {\n\t\t\t\tif (oc[i] == 0) {\n\t\t\t\t\tres += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(res);\n\t\t\t\n\t\t}\n\t}\n\n}\n/*\n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * \n * */\n"
        },
        {
            "language": 4,
            "solution": "//package hackerrank_subset_mex;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class Hackerrank_Subset_Mex {\n    public static void main(String[] args) {\n        Scanner r=new Scanner(System.in);\n        int ph=r.nextInt();\n        for(int hw=0;hw<ph;hw++)\n        {\n        int n=r.nextInt();\n        \n        Map<Integer,Integer>pk=new HashMap<>();\n        int high=0;\n        for(int i=0;i<n;i++)\n        {\n         int gf=r.nextInt();\n         if(gf>high)\n         high=gf;\n         if(!pk.containsKey(gf))\n         {\n           pk.put(gf,1);\n         }\n         else\n         pk.put(gf,pk.get(gf)+1);\n         \n        }\n        //System.out.println(high);\n       // System.out.println(pk);\n        int br=0;\n        int ch=0;\n        int hq=0;\n        int jol=0;\n        for(int iy=0;iy<=high+1;iy++)\n        {\n         if(!pk.containsKey(iy))\n         {\n            hq=iy;\n            break;\n         }\n            \n         if(br==0)\n         {\n            if(pk.get(iy)==1)\n            {\n             ch=iy;\n             br=1;\n             jol=0;\n            }\n            else\n            {\n              jol=1;  \n            }\n         }\n        }\n        \n        //System.out.println(hq);\n        //System.out.println(jol);\n       // if(ch!=Integer.MAX_VALUE&&)\n        if(jol==1)\n        {\n          System.out.println(2*hq);  \n        }\n        else\n        {\n          System.out.println(hq+ch);\n        }\n    }\n    \n}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nlong long a[maxn];\nint vis[110];\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    memset(vis, 0, sizeof(vis));\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      vis[a[i]]++;\n    }\n    int a = -1, b = -1;\n    for (int i = 0; i <= 100; i++) {\n      if (!vis[i]) {\n        a = i;\n        break;\n      } else\n        vis[i]--;\n    }\n    for (int i = 0; i <= 100; i++) {\n      if (!vis[i]) {\n        b = i;\n        break;\n      }\n    }\n    cout << a + b << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class practice {\n\n    InputStream is;\n    PrintWriter out;\n \n    void solve() {\n        int t = ni();\n        while(t-->0) {\n\t\t\tint n = ni();\n\t\t\tint count[] = new int[101];\n\t\t\tint sum = 0, k = 0;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tcount[ni()] ++;\n\t\t\tfor(int i=0;i<=100;i++) {\n\t\t\t\tif(count[i] == 0 && k == 0) {\n\t\t\t\t\tsum += i;\n\t\t\t\t\tk = 1;\n\t\t\t\t\ti = -1;\n\t\t\t\t}\n\t\t\t\telse if(count[i] <= 1 && k == 1) {\n\t\t\t\t\tsum += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(sum);\n\t\t}\n    }\n    \n    //---------- I/O Template ----------\n    \n    public static void main(String[] args) { new practice().run(); }\n    void run() { \n        is = System.in;\n        out = new PrintWriter(System.out);\n        solve();\n        out.flush();\n    }\n    \n    byte input[] = new byte[1024];\n    int len = 0, ptr = 0;\n    \n    int readByte() { \n        if(ptr >= len) { ptr = 0; \n            try { len = is.read(input); } \n            catch(IOException e) { throw new InputMismatchException(); } \n            if(len <= 0) { return -1; } \n        } return input[ptr++];\n    }\n    boolean isSpaceChar(int c) { return !( c >= 33 && c <= 126 ); }\n    int skip() { \n        int b = readByte(); \n        while(b != -1 && isSpaceChar(b)) { b = readByte(); } \n        return b;\n    }\n    \n    char nc() { return (char)skip(); }\n    String ns() { \n        int b = skip(); \n        StringBuilder sb = new StringBuilder(); \n        while(!isSpaceChar(b)) { sb.appendCodePoint(b); b = readByte(); } \n        return sb.toString();\n    }\n    String nLine() { \n        int b = skip(); \n        StringBuilder sb = new StringBuilder(); \n        while( !(isSpaceChar(b) && b != ' ') ) { sb.appendCodePoint(b); b = readByte(); } \n        return sb.toString();\n    }\n    int ni() { \n        int n = 0, b = readByte(); \n        boolean minus = false; \n        while(b != -1 && !( (b >= '0' && b <= '9') || b == '-')) { b = readByte(); } \n        if(b == '-') { minus = true; b = readByte(); } \n        if(b == -1) { return -1; }  //no input \n        while(b >= '0' && b <= '9') { n = n * 10 + (b - '0'); b = readByte(); } \n        return minus ? -n : n;\n    }\n    long nl() { \n        long n = 0L;    int b = readByte(); \n        boolean minus = false; \n        while(b != -1 && !( (b >= '0' && b <= '9') || b == '-')) { b = readByte(); } \n        if(b == '-') { minus = true; b = readByte(); } \n        while(b >= '0' && b <= '9') { n = n * 10 + (b - '0'); b = readByte(); } \n        return minus ? -n : n;\n    }\n\n    double nd() { return Double.parseDouble(ns()); }\n    float nf() { return Float.parseFloat(ns()); }\n    int[] na(int n) { \n        int a[] = new int[n]; \n        for(int i = 0; i < n; i++) { a[i] = ni(); } \n        return a;\n    }\n    char[] ns(int n) { \n        char c[] = new char[n]; \n        int i, b = skip(); \n        for(i = 0; i < n; i++) { \n            if(isSpaceChar(b)) { break; } \n            c[i] = (char)b; b = readByte(); \n        } return i == n ? c : Arrays.copyOf(c,i);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.buffer.readline\n\nfor _ in range(int(input())):\n\tn = int(input())\n\t*a, = map(int, input().split())\n\td = {}\n\tfor i in a:\n\t\td[i] = d.get(i, 0) + 1\n\tans = cnt = 0\n\t#print(d)\n\tfor i in range(n + 1):\n\t\tif d.get(i, 0) < 2:\n\t\t\tans = i\n\t\t\t#print(i)\n\t\t\tbreak\n\tfor i in range(ans, n + 1):\n\t\tif i not in d:\n\t\t\tans += i\n\t\t\t#print(i)\n\t\t\tbreak\n\t#print(d)\n\tprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort()\n    a, b = 0, 0\n    c = 0\n    for e in li:\n        if a == e:\n            a += 1\n            continue\n        if b == e:\n            b += 1\n    print(a+b)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\n// . >\npublic class A{\n\tstatic Scanner in = new Scanner(System.in);\n\n\tpublic static void main(String args[]){\t\n\t\t// String a = in.nextLine();\n\t\tint arr[] = new int[101];\n\t\tint t = scInt();\n\t\tfor(int q = 0; q < t; q++){\n\t\t\tint n = scInt();\n\t\t\tint res = 0;\n\t\t\tint cnt = 0;\n\t\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\t\tarr[i] = 0;\n\t\t\t}\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tint temp = scInt();\n\t\t\t\tarr[temp]++;\n\t\t\t}\n\n\t\t\tboolean b = true;\n\n\t\t\tfor(int i = 0; i < arr.length; i++){\n\t\t\t\t// System.out.print(arr[i] + \" \");\n\t\t\t\tif(b){\n\t\t\t\t\tif(arr[i] == 0){\n\t\t\t\t\t\tres += (2 * i);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(arr[i] == 1){\n\t\t\t\t\t\tb = false;\n\t\t\t\t\t\tres += i;\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tif(arr[i] == 0){\n\t\t\t\t\tres += i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t\n\t\t\t// System.out.println(\"RES\");\n\t\t\tSystem.out.println(res);\n\n\n\n\t\t}\n\t\t\n\n\t}\n\n\n\n\tpublic static int scInt(){return in.nextInt();}\n\tpublic static double scDbl(){return in.nextDouble();}\n\tpublic static String scStr(){return in.next();}\n\tpublic static String scLne(){return in.nextLine();}\n\n\tpublic static void pl(String s){System.out.println(s);}\t\n\n}\n\n\n\nclass DerevoOtresok{\n\t\n\tprivate int[] trees;\n\tprivate int size;\n\tpublic void init(int n){\n\t\tsize = 1;\n\t\twhile(size < n)\tsize *= 2;\n\t\t// trees = new long[2 * size - 1];\n\t\ttrees = new int[2 * size - 1];\n\t}\n\n\tpublic int[] getArray(){ return trees; }\n\tpublic int getSize(){ return size; };\n\n\tpublic void set(int i, int v){ set(i, v, 0, 0, size); }\t\n\tpublic void set(int i, int v, int x, int lx, int rx){\n\t\tif(rx - lx == 1){\n\t\t\ttrees[x] = v;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (lx + rx) / 2;\n\t\tif(i < mid){ set(i, v, 2 * x + 1, lx, mid); }\n\t\telse{ set(i, v, 2 * x + 2, mid, rx); }\n\t\ttrees[x] = Math.max(trees[2 * x + 1], trees[2 * x + 2]);\n\t}\n\tpublic void set(int[] arr){ set(arr, 0, 0, size); }\n\tpublic void set(int[] arr, int x, int lx, int rx){\n\t\tif(rx - lx == 1){\n\t\t\ttrees[x] = arr[lx];\n\t\t\treturn;\n\t\t}\n\t\tint mid = (lx + rx) / 2;\n\t\tset(arr, 2 * x + 1, lx, mid);\n\t\tset(arr, 2 * x + 2, mid, rx);\n\t\ttrees[x] = Math.max(trees[2 * x + 1], trees[2 * x + 2]);\n\t}\n\n\n\tpublic void set(int i){ set(i, 0, 0, size); }\n\tpublic void set(int i, int x, int lx, int rx){\n\t\tif(rx - lx == 1){\n\t\t\ttrees[x] = (trees[x] == 1) ? 0 : 1;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (lx + rx) / 2;\n\t\tif(i < mid){ set(i, 2 * x + 1, lx, mid); }\n\t\telse{ set(i, 2 * x + 2, mid, rx); }\n\t\ttrees[x] = trees[2 * x + 1] + trees[2 * x + 2];\n\t}\n\n\tpublic int get(int v, int l){ return get(v, l, 0, 0, size); }\n\tpublic int get(int v, int l, int x, int lx, int rx){\n\t\t// System.out.printf(\"%d-v, %d-l, %d-x, %d-lx, %d-rx\\n\", v, l, x, lx, rx);\n\t\tif(trees[x] < v){ return -1; }\n\n\t\tif(rx - lx == 1){\n\t\t\treturn lx;\n\t\t}\n\n\t\tint mid = (lx + rx) / 2;\n\t\tint lv = -1, rv = -1;\n\t\tif(mid > l){ \n\t\t\t// System.out.println(\"THIS\");\n\t\t\tif(trees[2 * x + 1] >= v){\n\t\t\t\tlv = get(v, l, 2 * x + 1, lx, mid); \n\t\t\t}\n\t\t}\n\t\tif(trees[2 * x + 2] >= v){\n\t\t\trv = get(v, l, 2 * x + 2, mid, rx);\n\t\t}\n\t\t// System.out.printf(\"%d-lv, %d-rv, %d-lx, %d-rx\\n\", lv, rv, lx, rx);\n\t\treturn (lv >= 0 && rv >= 0) ? Math.min(lv, rv) : Math.max(lv, rv);\n\t\t\n\t}\n\n\t\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t;\nint n, x, v[105], nr1, nr2;\nint main() {\n  cin >> t;\n  ++t;\n  while (--t) {\n    cin >> n;\n    for (int i = 0; i <= 100; ++i) v[i] = 0;\n    for (int i = 1; i <= n; ++i) {\n      cin >> x;\n      v[x]++;\n    }\n    nr1 = nr2 = -1;\n    for (int i = 0; i <= 100 && nr2 == -1; ++i) {\n      if (v[i] == 1 && nr1 == -1) nr1 = i;\n      if (v[i] == 0) {\n        nr2 = i;\n        if (nr1 == -1) nr1 = i;\n      }\n    }\n    cout << nr1 + nr2 << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\tn = II()\n\ta = LI()\n\td = [0]*101\n\tfor i in range(n):\n\t\td[a[i]]+=1\n\tans = 0\n\tboo = False\n\tfor i in range(101):\n\t\tif boo == False and d[i]<2:\n\t\t\tans+=i\n\t\t\tboo = True\n\t\tif boo == True and d[i]<1:\n\t\t\tans+=i\n\t\t\tbreak\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=[int(x) for x in input().split()]\n    l.sort()\n    l1=[]\n    l2=[]\n    l1.append(l[0])\n    for i in range(1,n):\n        if l[i] not in l1:\n            l1.append(l[i])\n        elif l[i] not in l2:\n            l2.append(l[i])\n        else:\n            l1.append(l[i])\n    ans1=0\n    ans2=0\n    for k in range(101):\n        if k not in l1:\n            ans1+=k\n            break\n    for j in range(101):\n        if j not in l2:\n            ans2+=j\n            break\n    print(ans1+ans2)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor _ in range(int(input())):\n    n=int(input())\n    arr=Counter(map(int,input().split()))\n    i=0\n    while arr[i]>0:\n        arr[i]-=1\n        i+=1\n    out=i\n    i=0\n    while arr[i]>0:\n        arr[i]-=1\n        i+=1\n    out+=i\n    print(out)\n    "
        },
        {
            "language": 4,
            "solution": "/*\nWritten by Kabir Kanha Arora\n@kabirkanha\n */\n\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int t = scanner.nextInt();\n        while (t-- > 0) {\n            //Input\n            int n = scanner.nextInt();\n            int[] arr = new int[n];\n            for (int i = 0; i < n; ++i)\n                arr[i] = scanner.nextInt();\n            int[] freq = new int[101];\n            for (int i = 0; i < n; ++i)\n                freq[arr[i]]++;\n            int left = 0;\n            int right = 0;\n            boolean flag = true;\n            for (int i = 0; i <= 100; ++i) {\n                if (freq[i] == 0) {\n                    left = i;\n                    right = i;\n                    flag = false;\n                    break;\n                } else if (freq[i] == 1) {\n                    left = i;\n                    break;\n                }\n            }\n            if (flag) {\n                for (int i = left + 1; i <= 100; ++i) {\n                    if (freq[i] == 0) {\n                        right = i;\n                        break;\n                    }\n                }\n            }\n            System.out.println(left + right);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import collections\n\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = collections.Counter(l)\n    cur = 0\n    cur2 = 0\n    l.sort()\n    s = set(l)\n    for e in s:\n        if e != cur:\n            break\n        else:\n            cur += 1\n    for e in s:\n        if e == cur2 and c[e] > 1:\n            cur2 += 1\n        else:\n            break\n    return cur + cur2\n\n\nfor __ in range(int(input())):\n    print(solve())\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    d = dict()\n    #print(d)\n    lst,lst1 = [],[]\n    for i in a:\n        d[i] = d.get(i,0)+1\n    for i,j in d.items():\n        if d[i]%2==0:\n            lst+=[i]*(d[i]//2)\n            lst1+=[i]*(d[i]//2)\n        else:\n            lst+=[i]*(d[i]//2+1)\n            lst1+=[i]*(d[i]//2)\n    #print(lst,lst1)\n    lst = list(set(lst))\n    lst1 = list(set(lst1))\n    p,q = 0,0\n    if lst!=[]:\n        for i in range(max(lst)+2):\n            if i not in lst:\n                p = i\n                break\n    if lst1!=[]:\n        for j in range(max(lst1)+2):\n            if j not in lst1:\n                q = j\n                break\n    #print(p,q,lst,lst1)\n    print(p+q)\n"
        },
        {
            "language": 3,
            "solution": "# for #!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nfrom math import log2, ceil\nfrom heapq import heappush, heappop, heapify\nfrom copy import deepcopy\nfrom collections import deque, Counter as CC\nfrom bisect import bisect_left as bl\ndef main():\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n    for t in range(int(input())):\n        n = int(input())\n        l = [int(j) for j in input().split()]\n        m1 = -1\n        m2 = -1\n        x = CC(l)\n        ct = 0 \n        for i in range(101):\n            if(m1!=-1 and m2!=-1):\n                break\n            if x[ct]==0:\n                if(m1==-1):\n                    m1 = ct\n                if(m2==-1):\n                    m2 = ct\n                break\n            elif x[ct]==1:\n                if m1!=-1 or m2!=-1:\n                    pass\n                elif m1==-1:\n                    m1 = ct\n                elif m2==-1:\n                    m2 = ct\n            # print(m1, m2, ct)\n            ct+=1\n        print(m1+m2)\n\n\n\n        \n\n\n        \n\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "USE_FILE = False\n\nFILE = None\nif USE_FILE:\n    FILE = open(\"input.txt\")\n\n\ndef rline():\n    return (FILE.readline() if USE_FILE else input()).split()\n\n\ndef readint():\n    return int(rline()[0])\n\n\ndef sum2(l, r):\n    return ((l + r) // 2) * (((r - l) // 2) + 1)\n\n\ndef solve():\n    n = readint()\n    line = rline()\n    all = [int(x) for x in line]\n    cnt = {}\n    for x in all:\n        if x not in cnt:\n            cnt[x] = 1\n        else:\n            cnt[x] += 1\n    res = 0\n    remain = 2\n    for i in range(103):\n        if i not in cnt:\n            if remain == 2:\n                return i * 2\n            else:\n                return res + i\n        if cnt[i] < remain:\n            res = i\n            remain -= 1\n\n    return res\n\n\nif __name__ == '__main__':\n    t = int(rline()[0])\n    for z in range(t):\n        res = solve()\n        print(res)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom math import sqrt, gcd, ceil, log, floor\nfrom bisect import bisect, bisect_left\nfrom collections import defaultdict, Counter, deque\nfrom heapq import heapify, heappush, heappop\ninput = sys.stdin.readline\nread = lambda: list(map(int, input().strip().split()))\n\n# MOD = 10**9 + 7\ndef main():\n\tans_ = []\n\tfor _ in range(int(input())):\n\t\tn = int(input());arr = Counter(read())\n\t\tans = 0\n\t\tfor i in range(101):\n\t\t\tif arr[i] < 2:ans += i;break\n\t\tfor i in range(101):\n\t\t\tif arr[i] == 0:ans += i;break\n\t\tans_.append(ans)\n\tprint((\"\\n\").join(map(str, ans_)))\n\n\t\t\n\n\n\n\t\n\nif __name__ == \"__main__\":\n\tmain()\n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor z in range(t):\n    n=int(input())\n    arr=input()\n    arr=arr.split()\n    a=[]\n    for i in range(n):\n        a.append(int(arr[i]))\n    s=[0]*101\n    for i in range(n):\n        s[a[i]] += 1\n    ans=0\n    for i in range(101):\n        if s[i] > 1:\n            continue\n        ans+=i\n        break\n    for i in range(101):\n        if s[i]>0:\n            continue\n        ans+=i\n        break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\n\tcnt = [0 for i in range(101)]\n\tfor x in a:\n\t\tcnt[x] += 1\n\n\tans = -1\n\tfor i in range(102):\n\t\tif cnt[i] == 1 and ans == -1:\n\t\t\tans = i\n\t\tif not cnt[i]:\n\t\t\tans = ans + i if ans != -1 else 2*i\n\t\t\tbreak\n\n\tprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nfor i in range(n):\n    x = int(input())\n    s = list(map(int,input().split()))[:x]\n    s.sort()\n    a =[]\n    b =[]\n    j =2\n    #print(s)\n    while(j<len(s)+1):\n        if s[j-2]==s[j-1]:\n            a.append(s[j-2])\n            b.append(s[j-1])\n            j +=2\n        else:\n            a.append(s[j-2])\n            j+=1\n    a.append(s[len(s)-1])\n\n    mexA = 0\n    mexB = 0\n\n    # print(a)\n    # print(b)\n\n    if len(a) > 0:\n        # print(max(a)+1)\n        for k in range(max(a)+2):\n            if k not in a:\n                # print(k)\n                mexA = k\n                break\n    if len(b)>0:\n        for k in range(max(b)+2):\n            if k not in b:\n                mexB = k\n                break\n\n    # print(mexA, mexB)\n    print(mexA+mexB)\n"
        },
        {
            "language": 3,
            "solution": "lst = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\nx = int(input())\n\nfor i in range(x):\n    sub1 = []; sub2 = []; check1 = []; check2 = []; u = 0; v = 0\n    n = int(input())\n    lst1 = [int(x) for x in input().split()]\n    copy = lst1.copy()\n  \n    for j in lst1:\n        \n        sub1.append(j)\n        \n        copy.pop(0)\n        for k in copy:\n            if j==k:\n                sub2.append(k)\n                \n                \n    \n        for l in lst:\n            if l not in sub1:\n                u = l\n                break\n        for m in lst:\n            if m not in sub2:\n                v = m\n                break\n    print(u+v)"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    a=[0 for i in range(max(l)+1)]\n    for i in l:\n        a[i]+=1\n    m,n=0,0\n    check=0\n    k=max(l)\n    for i in range(k+1):\n        if a[i]==0:\n            m,n=i,i\n            check=1\n            break\n        elif a[i]==1:\n            m=i\n            check=2\n            break\n    if check==1:\n        print(m+n)\n    elif check==2:\n        for j in range(i+1,k+1):\n            if a[j]==0:\n                n=j\n                check=0\n                break\n        if check==0:\n            print(m+n)\n        else:\n            print(m+k+1)\n    else:\n        print(2*k+2)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\n\nwhile t:\n\n    n=int(input())\n    a=list(map(int, input().split()))\n\n    a1=-1\n    b1=-1\n\n    d1={}\n\n    for i in a:\n        if i in d1.keys():\n            d1[i]+=1\n        else:\n            d1[i]=1\n\n    p=list(d1.keys())\n    p.sort()\n\n    for i in range(0,p[-1]+1):\n        if i not in d1.keys():\n            if a1==-1:\n                a1=i\n            b1=i\n            break\n        else:\n            if d1[i]==1 and a1==-1:\n                a1=i\n\n    else:\n        b1=p[-1]+1\n\n        if a1==-1:\n            a1=b1\n\n    print (a1+b1)\n            \n\n\n    # p=0\n    # i=0\n    # count=0\n    # ans=0\n    # check=0\n    # first=-1\n    # second=-1\n\n    # while i<n:\n    #     if a[i]==p:\n    #         count=count+1\n    #         i=i+1\n    #     else:\n    #         if count==0 and first==-1:\n    #             first=p\n                \n\n    #         if count==1 and second==-1:\n    #             second=p\n            \n    #         count=0\n    #         p=p+1\n\n    # if count==1 and second==-1:\n    #     second=p\n            \n    # if first==-1:\n    #     first=a[-1]+1\n\n    # if second==-1:\n    #     second=a[-1]+1\n\n    # if first<second:\n    #     print (first)\n    # else:\n    #     print (first+second)\n\n\n    t=t-1"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(\" \")))\n    a.sort()\n    x,y = 0,0\n    for i in range(n):\n        if i in a:\n            a.remove(i)\n            if i==n-1:\n                x = i+1\n        else:\n            x = i\n            break\n    m = len(a)\n    for j in range(m):\n        if j in a:\n            a.remove(j)\n            if j==m-1:\n                y = j+1\n        else:\n            y = j\n            break\n    print(x+y)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Aug 12 10:16:00 2020\n\n670-2: A. Subset Mex\n\n@author: jonathan-chen10\n\"\"\"\n\ndef main():\n    trials = input()\n    for i in range(int(trials)):\n        input()\n        nums = [int(n) for n in input().split()]\n        l_open = 2\n        mex_sum = 0\n        \n        for j in range(max(nums)+2):\n            if nums.count(j) < l_open:\n                mex_sum += j * (l_open-nums.count(j))\n                l_open = nums.count(j)\n            if l_open == 0:\n                break\n        print(mex_sum)            \n    \n\nif __name__ == '__main__':\n    main()\n            \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor ex in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n\n    num = 0\n    while a.count(num) >= 2:\n        num += 1\n    m1 = num\n    while a.count(num) >= 1:\n        num+= 1\n    m2 = num\n    print(m1 + m2)"
        },
        {
            "language": 3,
            "solution": "for test in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split(\" \")]\n    freq = [0 for i in range(0,101)]\n    for i in l:\n        freq[i] += 1\n    ans = 0\n    for i in range(101):\n        if freq[i]==0:\n            ans = 2*i\n            break\n        elif freq[i]==1:\n            ans += i\n            for j in range(i+1,101):\n                if freq[j] in [0]:\n                    ans += j\n                    break\n            break\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 105;\nint T, n;\nint a[N], cnt[N];\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    memset(cnt, 0, sizeof(cnt));\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), cnt[a[i]]++;\n    int ans = 0;\n    int anscnt = 0;\n    for (int i = 0; i <= n; i++) {\n      if (cnt[i] == 0 && anscnt == 0)\n        ans += i * 2, anscnt = 2;\n      else if (cnt[i] == 1 && anscnt == 0) {\n        anscnt++;\n        ans += i;\n      } else if (cnt[i] == 0 && anscnt == 1) {\n        anscnt++;\n        ans += i;\n      }\n      if (anscnt == 2) break;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int n, i;\n  long long int t;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    long long int a[n], x = -1, y = -1;\n    for (i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    for (i = 0; i < n; i++) {\n      if (a[i] - 1 == x)\n        x = a[i];\n      else {\n        if (a[i] - 1 == y) y = a[i];\n      }\n    }\n    cout << x + y + 2 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n\npublic class Cf131 implements Runnable \n{\n    static class InputReader \n    {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream) \n        {\n            this.stream = stream;\n        }\n        \n        public int read()\n        {\n            if (numChars==-1) \n                throw new InputMismatchException();\n            \n            if (curChar >= numChars) \n            {\n                curChar = 0;\n                try\n                {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                \n                if(numChars <= 0)               \n                    return -1;\n            }\n            return buf[curChar++];\n        }\n    \n        public String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }    \n            return str;\n        }\n        public int nextInt() \n        {\n            int c = read();\n            \n            while(isSpaceChar(c)) \n                c = read();\n        \n            int sgn = 1;\n        \n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            \n            int res = 0;\n            do\n            {\n                if(c<'0'||c>'9') \n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c)); \n        \n            return res * sgn;\n        }\n        \n        public long nextLong() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            \n            do \n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }    \n            while (!isSpaceChar(c));\n                return res * sgn;\n        }\n        \n        public double nextDouble() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') \n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') \n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n    \n        public String readString() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do \n            {\n                res.appendCodePoint(c);\n                c = read();\n            } \n            while (!isSpaceChar(c));\n            \n            return res.toString();\n        }\n    \n        public boolean isSpaceChar(int c) \n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    \n        public String next()\n        {\n            return readString();\n        }\n        \n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n    public static void main(String args[]) throws Exception \n    {\n        new Thread(null, new Cf131(),\"Main\",1<<27).start();\n    }\n    \n    static class Pair{\n        int nod;\n        int ucn;\n        \n        \n        Pair(int nod,int ucn){\n            this.nod=nod;\n            this.ucn=ucn;\n            \n        }\n        \n        public static Comparator<Pair> wc = new Comparator<Pair>(){\n            public int compare(Pair e1,Pair e2){\n                \n                //reverse order\n                if(e1.ucn < e2.ucn) \n                    return 1;  // 1 for swaping.\n                else if (e1.ucn > e2.ucn) \n                    return -1; \n                else{\n                    // if(e1.siz>e2.siz)\n                    //     return 1;\n                    // else\n                    //     return -1;\n                    return 0;\n                } \n            }\n        };\t\n    }\n\n    public static long gcd(long a,long b){\n        if(b==0)return a;\n        else return gcd(b,a%b);\n    }\n\n\n    ////recursive BFS\n    public static int bfsr(int s,ArrayList<Integer>[] a,int[] dist,boolean[] b,int[] pre){\n        b[s]=true;\n        int p = 0;\n        int t = a[s].size();\n        for(int i=0;i<t;i++){\n            int x = a[s].get(i);\n            if(!b[x]){\n                dist[x] = dist[s] + 1;\n                p+= (bfsr(x,a,dist,b,pre)+1);\n            }\n        }\n        pre[s] = p;\n        return p;\n    }\n\n//// iterative BFS\n    public static int bfs(int s,ArrayList<Integer>[] a,int[] dist,boolean[] b,PrintWriter w){\n        b[s]=true;\n        int siz = 0;\n        \n        Queue<Integer> q = new LinkedList<>();\n        q.add(s);\n        while(q.size()!=0){\n            int i=q.poll();\n            Iterator<Integer> it = a[i].listIterator();\n            int z=0;\n            while(it.hasNext()){\n                z=it.next();\n                if(!b[z]){\n                    b[z]=true;\n                    dist[z] = dist[i] + 1;\n                    siz++;\n                    q.add(z);\n                }\n            }   \n        \n        }\n        return siz;\n    }\n\n    \n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n    public void run()\n    {\n        InputReader sc = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        int defaultValue=0;\n        \n\n        int tc = sc.nextInt();\n\n        while(tc-->0){\n            int n = sc.nextInt();\n            int[] a = new int[n];\n            int[] d = new int[102];\n            for(int i=0;i<n;i++){\n                a[i] = sc.nextInt();\n                d[a[i]]++;\n            }\n            //Arrays.sort(a);\n            int x = 0;\n            int y = 0;\n            int z = 0;\n            boolean yy = false;\n            for(int i=0;i<101;i++){\n                if(d[i]==1 && !yy){\n                    y = i;\n                    yy = true;\n                }\n                else if(d[i]==0){\n                    x = i;\n                    if(!yy)y = i;\n                    break;\n                }\n            }\n            \n            w.println(x+y);\n            \n            \n            \n        \n\n\n\n            \n            \n\n\n\n            \n            \n        \n\n       }\n        w.flush();\n        w.close();\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tstatic void main() throws Exception{\n\t\tint n=sc.nextInt();\n\t\tint[]occ=new int[101];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tocc[sc.nextInt()]++;\n\t\t}\n\t\tint mex1=0;\n\t\twhile(occ[mex1]>0) {\n\t\t\tocc[mex1++]--;\n\t\t}\n\t\tint mex2=0;\n\t\twhile(occ[mex2]>0) {\n\t\t\tocc[mex2++]--;\n\t\t}\n\t\tpw.println(mex1+mex2);\n\t}\n\tpublic static void main(String[] args) throws Exception{\n\t\tsc=new MScanner(System.in);\n\t\tpw = new PrintWriter(System.out);\n\t\tint tc=1;\n\t\ttc=sc.nextInt();\n\t\twhile(tc-->0)\n\t\t\tmain();\n\t\tpw.flush();\n\t}\n\tstatic PrintWriter pw;\n\tstatic MScanner  sc;\n\tstatic class MScanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\t\tpublic MScanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n \n\t\tpublic MScanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n \n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tpublic int[] intArr(int n) throws IOException {\n\t        int[]in=new int[n];for(int i=0;i<n;i++)in[i]=nextInt();\n\t        return in;\n\t\t}\n\t\tpublic long[] longArr(int n) throws IOException {\n\t        long[]in=new long[n];for(int i=0;i<n;i++)in[i]=nextLong();\n\t        return in;\n\t\t}\n\t\tpublic int[] intSortedArr(int n) throws IOException {\n\t        int[]in=new int[n];for(int i=0;i<n;i++)in[i]=nextInt();\n\t        shuffle(in);\n\t        Arrays.sort(in);\n\t        return in;\n\t\t}\n\t\tpublic long[] longSortedArr(int n) throws IOException {\n\t        long[]in=new long[n];for(int i=0;i<n;i++)in[i]=nextLong();\n\t        shuffle(in);\n\t        Arrays.sort(in);\n\t        return in;\n\t\t}\n\t\tpublic Integer[] IntegerArr(int n) throws IOException {\n\t        Integer[]in=new Integer[n];for(int i=0;i<n;i++)in[i]=nextInt();\n\t        return in;\n\t\t}\n\t\tpublic Long[] LongArr(int n) throws IOException {\n\t        Long[]in=new Long[n];for(int i=0;i<n;i++)in[i]=nextLong();\n\t        return in;\n\t\t}\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n \n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n \n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n \n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n \n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n \n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n\tstatic void shuffle(int[]in) {\n\t\tfor(int i=0;i<in.length;i++) {\n\t\t\tint idx=(int)(Math.random()*(i+1));\n\t\t\tint tmp=in[i];\n\t\t\tin[i]=in[idx];\n\t\t\tin[idx]=tmp;\n\t\t}\n\t}\n\tstatic void shuffle(long[]in) {\n\t\tfor(int i=0;i<in.length;i++) {\n\t\t\tint idx=(int)(Math.random()*(i+1));\n\t\t\tlong tmp=in[i];\n\t\t\tin[i]=in[idx];\n\t\t\tin[idx]=tmp;\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "cases = int(input())\n\nfor _ in range(cases):\n    n = int(input())\n    ds = list(map(int, input().split()))\n\n    index = 102\n    cn = [0] * index\n    for v in ds:\n        cn[v] += 1\n    \n    a, b = 0, 0\n    for i in range(index):\n        if cn[i] == 0:\n            b = i\n            break\n        else:\n            cn[i] -= 1\n    \n    for i in range(index):\n        if cn[i] == 0:\n            a = i\n            break\n    \n    print(a + b)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nfrom collections import Counter\nN = int(stdin.readline())\nfor case in range(N):\n    length = int(stdin.readline())\n    array = [int(i) for i in stdin.readline().split()]\n    mexa = 0\n    mexb = 0\n    count = Counter(array)\n    for i in range(101):\n        if count[i] > 0:\n            count[i] -= 1\n            continue\n        else:\n            mexa = i\n            break\n    for i in range(101):\n        if count[i] == 0:\n            mexb = i\n            break\n    print(mexa + mexb)\n\n    \n"
        },
        {
            "language": 3,
            "solution": "for s in[*open(0)][2::2]:\n a=[0]*102+[1]\n for x in s.split():a[int(x)]+=1\n i=a.index(0);print(i+min(i,a.index(1)))"
        },
        {
            "language": 3,
            "solution": "def mex(l):\n    l = sorted(l)\n    A = []\n    B = []\n    for var in l:\n        if A:\n            if var == A[-1]:\n                B.append(var)\n            else:\n                A.append(var)\n        else:\n            A.append(var)\n    return A, B\n\n\ndef min_mex(x):\n    if not x:\n        return 0\n    for i in range(0, max(x)):\n        if i not in x:\n            return i\n    return max(x) + 1\n\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    li = [int(s) for s in input().split()]\n    a, b = mex(li)\n    print(min_mex(a) + min_mex(b))\n"
        },
        {
            "language": 3,
            "solution": "T = int(input().rstrip())\n\ndef get_mex(d):\n    c = 0\n    while True:\n        if c not in d or d[c] == 0:\n            return c\n        d[c] -= 1\n        c += 1\n\ndef solve(arr):\n    nd = {}\n    for i in arr:\n        if i in nd:\n            nd[i] += 1\n        else:\n            nd[i] = 1\n\n    mex1 = get_mex(nd)\n    mex2 = get_mex(nd)\n    return mex1 + mex2\n\nfor test in range(T):\n    n = int(input().rstrip())\n    arr = [int(x) for x in input().rstrip().split()]\n    ret = solve(arr)\n    print(ret)\n"
        },
        {
            "language": 3,
            "solution": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\n# import time,random,resource\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\ndef IF(c, t, f): return t if c else f\ndef YES(c): return IF(c, \"YES\", \"NO\")\ndef Yes(c): return IF(c, \"Yes\", \"No\")\n\n\ndef main():\n    t = I()\n\n    rr = []\n    for _ in range(t):\n        n = I()\n        a = LI()\n\n\n        c = collections.Counter(a)\n        d = e = 0\n        for i in range(n+1):\n            if c[i] < 2:\n                d = i\n                break\n        for i in range(n+1):\n            if c[i] < 1:\n                e = i\n                break\n\n        rr.append(d + e)\n\n    return JA(rr, \"\\n\")\n\n\nprint(main())\n\n\n"
        },
        {
            "language": 3,
            "solution": "def don(arr):\n    try:\n        a = []\n        b = []\n        mex = []\n        for value in arr:\n            if value not in a:\n                a.append(value)\n            else:\n                b.append(value)\n        if a!= []:\n            max_a = max(a)\n            for i in range(max_a+2):\n                if i not in a:\n                    mex.append(i)\n                    break\n        if b!= []:\n            max_b = max(b)\n            for j in range(max_b+2):\n                if j not in b:\n                    mex.append(j)\n                    break\n        sum = 0\n        for values in mex:\n            sum = sum + values\n        return sum\n    except:\n        return 0\nt = int(input())\nsolution = []\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    arr.sort()\n    x = don(arr)\n    solution.append(x)\n\nfor values in solution:\n    print(values)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile(t):\n    n = int(input())\n    li = list(map(int,input().split()))\n    a,b = [],[]\n    small_a, small_b =0,0\n    for i in li:\n        if i not in a:\n            a.append(i)\n        else:\n            b.append(i)\n    for i in range(0,101):\n        if i not in a:\n            small_a = i\n            break\n    for i in range(0,101):\n        if i not in b:\n            small_b = i\n            break\n    print(small_a + small_b)\n    t-=1"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nfrom collections import Counter\n\n\ndef find_mex(a):\n    Mex = 0\n    while Mex in a:\n        Mex += 1\n    return Mex\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = sorted(list(set(a)))\n        c = Counter(a)\n        p = []\n        q = []\n        for key, val in c.items():\n            if val > 1:\n                p.append(key)\n                q.append(key)\n            else:\n                p.append(key)\n        ans = find_mex(set(p)) + find_mex(set(q))\n        print(ans)\n\n\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\nimport sys\nimport math\nimport os\nimport itertools\nimport string\nimport heapq\nimport _collections\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nfrom functools import lru_cache\nimport bisect\nimport re\nimport queue\nimport copy\nimport decimal\n\n\nclass Scanner():\n    @staticmethod\n    def int():\n        return int(sys.stdin.readline().rstrip())\n\n    @staticmethod\n    def string():\n        return sys.stdin.readline().rstrip()\n\n    @staticmethod\n    def map_int():\n        return [int(x) for x in Scanner.string().split()]\n\n    @staticmethod\n    def string_list(n):\n        return [Scanner.string() for i in range(n)]\n\n    @staticmethod\n    def int_list_list(n):\n        return [Scanner.map_int() for i in range(n)]\n\n    @staticmethod\n    def int_cols_list(n):\n        return [Scanner.int() for i in range(n)]\n\n\ndef solve():\n    n = Scanner.int()\n    a = Scanner.map_int()\n    a.sort()\n    A = []\n    B = []\n    for i in range(0, n):\n        if len(A) == 0:\n            A.append(a[i])\n        elif A[-1] == a[i]:\n            B.append(a[i])\n        else:\n            A.append(a[i])\n\n    def mex(a):\n        a.sort()\n        s = set()\n        for i in a:\n            s.add(i)\n        for i in range(0, 101):\n            if not i in s:\n                return i\n        return 100\n    print(mex(A) + mex(B))\n\n\ndef main():\n    # sys.setrecursionlimit(1000000)\n    # sys.stdin = open(\"sample.txt\")\n    T = Scanner.int()\n    for _ in range(T):\n        solve()\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep  9 14:53:08 2020\n\n@author: mohit\n\"\"\"\n\ndef DD(W):\n    if(len(W)==0):\n        return 0\n    else:\n        for p in range(len(W)):\n            if(p in W):\n                pass\n            else:\n                return p\n        return p+1\nt=int(input())\nfor i in range(t):\n    N=int(input())\n    A=list(map(int,input().split()))\n    B=sorted(A)\n    C=[]\n    D=[]\n    Z=0\n    for j in range(len(B)):\n        if(B[j] in C):\n            pass\n        else:\n            C.append(B[j])\n            A.remove(B[j])\n    m=DD(C)\n    n=DD(A)\n    print(m+n)\n        \n\n"
        },
        {
            "language": 3,
            "solution": "# 1 \nimport itertools\nimport math\nimport sys\nfrom collections import defaultdict\n\n \ndef stdinWrapper():\n    data = '''4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n\n'''\n    \n    for line in data.split('\\n'):\n        yield line\n \nif '--debug' not in sys.argv:\n    def stdinWrapper():\n        while True:\n            yield input()\n \ninputs = stdinWrapper()\n \ndef inputWrapper():\n    return next(inputs)\n \ndef getType(_type):\n    return _type(inputWrapper())\n \ndef getArray(_type):\n    return [_type(x) for x in inputWrapper().split()]\n \n \n \n''' Solution '''\n\ndef solve(a):\n    a = sorted(a)\n\n    left = []\n    right = []\n\n    for x in a:\n        if not left or left[-1] != x:\n            left.append(x)\n        elif not right or right[-1] != x:\n            right.append(x)\n\n\n    def mex(arr):\n        if not arr:\n            return 0\n        for i in range(max(arr)):\n            if i not in arr:\n                return i\n        return max(arr)+1\n\n\n    return mex(left) + mex(right)\n\n\nt = getType(int)\n\nfor _ in range(t):\n    n = getType(int)\n    a = getArray(int)\n    res = solve(a)\n\n    print(res)\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nif __name__==\"__main__\":\n\n    t=int(input())\n    for i in range(t):\n\n        n=int(input())\n\n        l=list(map(int,input().split()))\n        count=defaultdict(int)\n        for i in range(len(l)):\n            count[l[i]]+=1\n        l=set(l)\n        mex=0\n        total=0\n      \n        for i in range(max(l)+2):\n           \n            if count[i]==0 and total==0:\n                mex=2*i\n                \n                break\n            elif count[i]==1 and total==0:\n                mex+=i\n                \n                total+=1\n            elif count[i]==0 and total==1:\n                mex+=i\n             \n                total+=1\n                \n            if total==2:\n                break\n        print(mex)\n                \n                \n"
        },
        {
            "language": 3,
            "solution": "def Input():\n    Str= input('')\n    List = Str.split(' ')\n    for i in range(len(List)):\n        List[i] = int(List[i])\n    return List\n\ndef Twice(List,n):\n    Count = 0\n    for i in range(len(List)):\n        if List[i] == n:\n            Count += 1\n        if Count == 2:\n            break\n    return Count\n\ndef Mex(List):\n    N = 0\n    Done = False\n    while Done == False:\n        x = Twice(List,N)\n        if x == 0 or x == 1:\n            Done = True\n        else:\n            N += 1\n    M = N\n    if x != 0:\n        Done = False\n        N += 1\n    while Done == False:\n        x = Twice(List,N)\n        if x == 0:\n            Done = True\n        else:\n            N += 1\n    return M+N\n            \n            \n\ntrials = int(input(''))\nfor i in range(trials):\n    input('')\n    List = Input()\n    print(Mex(List))\n\n"
        },
        {
            "language": 3,
            "solution": "# Author : devil9614 - Sujan Mukherjee\n\nfrom __future__ import division, print_function\n\nimport os,sys\nimport math\nimport collections\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\nclass my_dictionary(dict):\n    def __init__(self):\n        self = dict()\n    def add(self,key,value):\n        self[key] = value\n\n\ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().strip().split(\" \"))\ndef msi(): return map(str,input().strip().split(\" \"))\ndef li(): return list(mi())\ndef sli(): return list(msi())\n\ndef dmain():\n    sys.setrecursionlimit(100000000)\n    threading.stack_size(40960000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import log,sqrt,factorial\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *,threading\n#from itertools import permutations\n#Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\n\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\ndef getKey(item): return item[1] \ndef sort2(l):return sorted(l, key=getKey,reverse=True)\ndef d2(n,m,num):return [[num for x in range(m)] for y in range(n)]\ndef isPowerOfTwo (x): return (x and (not(x & (x - 1))) )\ndef decimalToBinary(n): return bin(n).replace(\"0b\",\"\")\ndef ntl(n):return [int(i) for i in str(n)]\ndef factorial(n): return 1 if (n==1 or n==0) else n * factorial(n - 1)\ndef ncr(n,r): return factorial(n)//(factorial(r)*factorial(n-r))\ndef binary_search(arr, low, high, x): \n    if high >= low: \n  \n        mid = (high + low) // 2\n        if arr[mid] == x: \n            return mid \n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n  \n        else: \n            return binary_search(arr, mid + 1, high, x) \n  \n    else: \n        return -1\ndef ceil(x,y):\n    if x%y==0:\n        return x//y\n    else:\n        return x//y+1\n\ndef powerMod(x,y,p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y&1:\n            res = (res*x)%p\n        y = y>>1\n        x = (x*x)%p\n    return res\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef nCr(n, r): \n  \n    return (fact(n) / (fact(r)  \n                * fact(n - r))) \n  \n# Returns factorial of n \ndef fact(n): \n  \n    res = 1\n      \n    for i in range(2, n+1): \n        res = res * i \n          \n    return res \n    \ndef isPrime(n) : # Check Prime Number or not \n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n\n\n\ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n\ndef padded_bin_with_complement(x):\n    if x < 0:\n        return bin((2**16) - abs(x))[2:].zfill(16)\n    else:\n        return bin(x)[2:].zfill(16)\ndef binaryToDecimal(binary): \n      \n    binary1 = binary \n    decimal, i, n = 0, 0, 0\n    while(binary != 0): \n        dec = binary % 10\n        decimal = decimal + dec * pow(2, i) \n        binary = binary//10\n        i += 1\n    print(decimal) \ndef CountFrequency(my_list): \n    freq = {} \n    for item in my_list: \n        if (item in freq): \n            freq[item] += 1\n        else: \n            freq[item] = 1\n  \n    return freq \ndef pos(a):\n    b = [0]*len(a)\n    c = sorted(a)\n    for i in range(len(a)):\n        for j in range(len(a)):\n            if c[j] == a[i]:\n                b[i] = j\n                break\n    return b\ndef smallestDivisor(n): \n  \n    # if divisible by 2 \n    if (n % 2 == 0): \n        return 2\n  \n    # iterate from 3 to sqrt(n) \n    i = 3  \n    while(i * i <= n): \n        if (n % i == 0): \n            return i \n        i += 2 \n  \n    return n\ndef commonn(a,b,n):\n    c = []\n    for i in range(n):\n        if a[i] == b[i]:\n            c.append(\"-1\")\n        else:\n            c.append(b[i])\n    return c\n\n\ndef find_lcm(num1, num2): \n    if(num1>num2): \n        num = num1 \n        den = num2 \n    else: \n        num = num2 \n        den = num1 \n    rem = num % den \n    while(rem != 0): \n        num = den \n        den = rem \n        rem = num % den \n    gcd = den \n    lcm = int(int(num1 * num2)/int(gcd)) \n    return lcm \n\ndef sumdigit(n):\n    n = str(n)\n    k = 0\n    for i in range(len(n)):\n        k+=int(n[i])\n    return k\n\ndef main():\n\n    for _ in range(ii()):\n        n = ii()\n        a = li()\n        b = [0]*105\n        res = 0\n        for i in range(n):\n            b[a[i]]+=1\n        count = 0\n        f1 = f2 = 1\n        first = 0\n        sec = 0\n        # print(b[0:n])\n        for i in range(len(b)):\n            if b[i] > 1:\n                if f1:\n                    first+=1\n                if f2:\n                    sec+=1\n            elif b[i] ==1:\n                first+=1 \n                f2=0\n            else:\n                break\n            # print(first,sec)\n        print(sec+first)\n\n        # print(b[0:n]) \n        # print(res)\n\n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\n\nif __name__ == \"__main__\":\n    #read()\n    main()"
        },
        {
            "language": 3,
            "solution": "\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lol=[int(n) for n in input().split()]\n    l1 = []\n    l2 = []\n    ans = 0\n    for i in lol:\n        if i not in l1:\n            l1.append(i)\n        else:\n            l2.append(i)\n    if(len(l1) > 0 and len(l2) > 0):\n    \t\n\t    for i in range(0, max(l1) + 2):\n\t        if i not in l1:\n\t            ans += i \n\t            f = 1\n\t            break\n\t            \n\t    for j in range(0, max(l2) + 2):\n\t        if j not in l2:\n\t            ans += j \n\t            f = 1\n\t            break\n    if(len(l1)==0):\n    \tfor j in range(0, max(l2) + 2):\n\t        if j not in l2:\n\t            ans += j \n\t            f = 1\n\t            break\n    if(len(l2)==0):\n    \t\n     \tfor i in range(0, max(l1) + 2):\n\t        if i not in l1:\n\t            ans += i \n\t            f = 1\n\t            break\n    print(ans)\n    # print(l1)\n    # print(l2)"
        },
        {
            "language": 3,
            "solution": "def segregate(arr, size): \n    j = 0\n    for i in range(size): \n        if (arr[i] <= 0): \n            arr[i], arr[j] = arr[j], arr[i] \n            j += 1 \n    return j  \n\ndef findMissingPositive(arr, size): \n    for i in range(size): \n        if (abs(arr[i]) - 1 < size and arr[abs(arr[i]) - 1] > 0): \n            arr[abs(arr[i]) - 1] = -arr[abs(arr[i]) - 1] \n    for i in range(size): \n        if (arr[i] > 0): \n            return i + 1\n    return size + 1\n\ndef findMissing(arr, size): \n    shift = segregate(arr, size)\n    if 0 not in arr:\n        return 0\n    if arr == []:\n        return 0\n    return findMissingPositive(arr[shift:], size - shift)\n\nt = int(input())\nfor p in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    A = set()\n    B = set()\n    a.sort()\n    for i in range(n):\n        if a[i] not in A:\n            A.add(a[i])\n        else:\n            B.add(a[i])\n    A = list(A)\n    B = list(B)\n    print(findMissing(A, len(A)) + findMissing(B, len(B)))\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\n\ndef solver(arr):\n    if len(arr) == 0:\n        return 0\n\n    set_arr = list(set(arr))\n    set_arr.sort()\n    if set_arr[0] != 0:\n        return 0\n\n    val = 0\n    seq = []\n    for idx, item in enumerate(set_arr):\n        if idx == item:\n            val += 1\n            seq.append(idx)\n        else:\n            break\n    counted = dict(Counter(arr))\n    for i in seq:\n        val += min(counted[i] - 1, 1)\n        if counted[i] - 1 == 0:\n            break\n    return val    \n\n\nN = int(input())\nfor _ in range(N):\n    n = int(input())\n    arr = list(map(lambda x: int(x), input().split(\" \")))\n    print(solver(arr))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    \n    a,b=0,0\n    for i in range(101):\n        if i not in l:\n            a=i\n            break\n    for i in range(101):\n        if l.count(i)<=1:\n            b=i\n            break\n    print(a+b)\n    \n    \n        \n        "
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class SubsetMax {\n    public static void main(String[] args) {\n        Scanner s=new Scanner(System.in);\n        int t=s.nextInt();\n        while(t-->0){\n            int n=s.nextInt();\n            int a[]=new int[n];\n            int b[]=new int[101];\n            for(int i=0;i<101;i++){\n                b[i]=0;\n            }\n           \n            for(int i=0;i<n;i++){\n                a[i]=s.nextInt();\n                b[a[i]]++;\n            }\n            int c=0; int d=0;\n            for(int i=0;i<101;i++){\n                if(b[c]!=0){\n                    b[c]--; c++;\n                }\n                if(b[d]!=0){\n                    b[d]--; d++;\n                }\n            }\n            System.out.println(c+d);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(_) for _ in input().split()]\n    num = [0] * 101\n    for i in a:\n        num[i] += 1\n    ans = 0\n    mode = True\n    for i in range(101):\n        if num[i] >= 2:\n            if mode:\n                ans += 2\n            else:\n                ans += 1\n            continue\n        elif num[i] == 1:\n            mode = False\n            ans += 1\n        else:\n            break\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Prob1 {\n    public static void main(String[] args) {\n        // an array to take a record of frequency of elements in input array\n        int B[]= new int[101];\n        for (int f=0;f<101;f++){\n            B[f]=0;\n        }\n\n        int t;\n        Scanner scanner = new Scanner(System.in);\n        t = scanner.nextInt();\n        while (t-->0){\n            int n = scanner.nextInt();\n            int A[]=new int[n];\n            for(int i=0;i<n;i++){\n                A[i]=scanner.nextInt();\n                B[A[i]]+=1;\n            }\n            if(B[0]==0){\n                System.out.println(0);\n            }\n            else if(B[0]==1){\n                for (int m=0;m<101;m++){\n                    if(B[m]==0){\n                        System.out.println(m);\n                        break;\n                    }\n                }\n            }\n            else {\n                int one=0,two=0;\n                label:\n                for (int p=0;p<101;p++){\n                    if(B[p]==0){\n                        one=p;\n                        for (int k=0;k<101;k++){\n                            if(B[k]<2){\n                                two=k;\n                                break label;\n                            }\n                        }\n                    }\n                }\n                System.out.println(one+two);\n            }\n            for (int f=0;f<101;f++){\n                B[f]=0;\n            }\n        }\n        scanner.close();\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//    int t;\n//    Scanner scanner  = new Scanner(System.in);\n//        t=scanner.nextInt();\n//                while(t-->0){\n//                int j=0;\n//                j=scanner.nextInt();\n//                int A[]=new int[j];\n//                int z=0;\n//                for(int p=0;p<j;p++){\n//        A[p]=scanner.nextInt();\n//        if(A[p]==0){\n//        z+=1;\n//        }\n//        }\n//\n//        Arrays.sort(A);\n//\n//        if(z==0){\n//        System.out.println(0);\n//        }\n//        else if(z==1){\n//        for (int m=0;m<=j;m++){\n//        if(m==j){\n//        System.out.println(m);\n//        break;\n//        }\n//        if(A[m]!=m){\n//        System.out.println(m);\n//        break;\n//        }\n//        }\n//        }\n//        else if(z>1){\n//        int c=0;\n//        label1:\n//        for (int l=1;l<100;l++) {\n//        if(Arrays.binarySearch(A,l)<0){\n//        c=l;\n//        break label1;\n//        }\n//        }\n////                System.out.println(c); /// REMOVE ME\n//        int count=0;\n//        for (int g=1;g<100;g++) {\n//        for (int h = 1; h < j; h++) {\n//        if(A[h]==g){\n//        count+=1;\n//        }\n//        if(count==2){\n//        break;\n//        }\n//        }\n//        if(count==1){\n//        count=g;\n//        break;\n//        }\n//        count=0;\n//        }\n//        System.out.println(c+count);\n//        }\n//        }"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long INF = 1e18;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    long long n;\n    cin >> n;\n    vector<long long> a(n);\n    long long x = 0, y = 0;\n    for (long long i = 0; i < n; ++i) cin >> a[i];\n    sort(a.begin(), a.end());\n    for (long long i = 0; i < n; ++i) {\n      if (a[i] == x) {\n        ++x;\n        continue;\n      } else if (a[i] == y)\n        ++y;\n    }\n    cout << x + y << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vi = vector<int>;\nusing vl = vector<long long>;\nint main() {\n  cin.tie(nullptr);\n  ios::sync_with_stdio(false);\n  cout.tie(nullptr);\n  ;\n  ll t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    vi a(n);\n    map<int, int> m;\n    for (long long i = 0; i < n; i += 1) {\n      cin >> a[i];\n      m[a[i]]++;\n    }\n    int amex = 0, bmex = 0;\n    if ((m.begin())->first != 0) {\n      cout << 0 << endl;\n      continue;\n    }\n    for (auto i : m) {\n      if ((i.first) - amex == 0) {\n        amex = i.first + 1;\n        i.second--;\n      } else\n        break;\n      if ((i.second) && (i.first) - bmex == 0) {\n        bmex = i.first + 1;\n      }\n    }\n    cout << amex + bmex << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "// package CodeForces;\n\nimport java.io.BufferedOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\n\npublic class Round670A {\n\n\tpublic static void solve() {\n\t\tint t = s.nextInt();\n\t\twhile(t-- > 0) {\n\t\t\tint n = s.nextInt();\n\t\t\tint[] arr = s.nextIntArray(n);\n\t\t\tint[] count = new int[1000];\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tcount[arr[i]]++;\n\t\t\t}\n\t\t\tint curr = 0;\n\t\t\twhile(count[curr] >= 2) {\n\t\t\t\tcurr++;\n\t\t\t}\n\t\t\tint ans = curr;\n\t\t\twhile(count[curr] >= 1) {\n\t\t\t\tcurr++;\n\t\t\t}\n\t\t\tans += curr;\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, null, \"Thread\", 1 << 27) {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tout = new PrintWriter(new BufferedOutputStream(System.out));\n\t\t\t\t\ts = new FastReader(System.in);\n\t\t\t\t\tsolve();\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t\tSystem.exit(1);\n\t\t\t\t}\n\t\t\t}\n\t\t}.start();\n\t}\n\n\tpublic static PrintWriter out;\n\tpublic static FastReader s;\n\n\tpublic static class FastReader {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[4096];\n\t\tprivate int curChar, snumChars;\n\n\t\tpublic FastReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (snumChars == -1) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (curChar >= snumChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException E) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (snumChars <= 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint number = 0;\n\t\t\tdo {\n\t\t\t\tnumber *= 10;\n\t\t\t\tnumber += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn number * sgn;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong number = 0;\n\t\t\tdo {\n\t\t\t\tnumber *= 10L;\n\t\t\t\tnumber += (long) (c - '0');\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn number * sgn;\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = this.nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = this.nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndofLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tpublic boolean isEndofLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t}\n\n\t\n}\n"
        },
        {
            "language": 3,
            "solution": "def mex(arr):\n    if len(arr)==0:\n        return 0\n    for i in range(max(arr)+2):\n        if i not in arr:\n            res=i\n            return res\nfor i in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    a=[]\n    b=[]\n    i=0\n    while i<len(arr)-1:\n        if arr[i+1]==arr[i]:\n            a.append(arr[i])\n            b.append(arr[i+1])\n            i+=2\n        else:\n            a.append(arr[i])\n            i+=1\n    a.append(arr[len(arr)-1])\n    print(mex(a)+mex(b))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong double PI = 3.14159265358979323846;\nconst long long M = 1e9 + 7;\nconst long long inf = 1e18;\nconst long long ms = 2e5 + 5;\nstatic int fastline = []() {\n  std::ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  return 0;\n}();\n;\nunsigned long long ans;\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> v1, v2;\n  map<long long, long long> mp;\n  for (int i = 0; i < n; i++) {\n    long long a;\n    cin >> a;\n    mp[a]++;\n  }\n  for (auto &it : mp) {\n    if (it.second) {\n      v1.push_back(it.first);\n      it.second--;\n    }\n    if (it.second) {\n      v2.push_back(it.first);\n      it.second--;\n    }\n  }\n  long long a1 = v1.size(), a2 = v2.size();\n  for (int i = 0; i < v1.size(); i++) {\n    if (i != v1[i]) {\n      a1 = i;\n      break;\n    }\n  }\n  for (int i = 0; i < v2.size(); i++) {\n    if (i != v2[i]) {\n      a2 = i;\n      break;\n    }\n  }\n  cout << a1 + a2 << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, a = int(input()), sorted([int(x) for x in input().split()])\n    v = 0\n    i = 0\n    for row in set(a):\n        if row == i:\n            if a.count(row) >= 2 and row == v: v += 1; i += 1\n            else: i += 1\n    print(v+i)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, k = 0, t;\nint main() {\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    vector<int> cnt(101, 0);\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      if (x <= 100) ++cnt[x];\n    }\n    int min1 = 0, min2 = 0;\n    for (int i = 0; i < 101; i++) {\n      if (i > min1)\n        break;\n      else if (cnt[i] > 1) {\n        min1++;\n        if (i <= min2) min2++;\n      } else if (cnt[i] == 1)\n        min1++;\n    }\n    cout << min1 + min2 << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    m = 0\n    a = []\n    b = []\n    for i in l:\n        if i not in a:\n            a.append(i)\n        else:\n            b.append(i)\n    if len(a) > 0:\n        for i in range(max(a)+2):\n            if i not in a:\n                x = i\n                break\n    else:\n        x = 0\n    if len(b) > 0:\n        for i in range(max(b)+2):\n            if i not in b:\n                y = i\n                break\n    else:\n        y = 0\n    print(x+y)"
        },
        {
            "language": 3,
            "solution": "# @uthor : Kaleab Asfaw\nfrom sys import stdin, stdout\n# Fast IO\n# from math import gcd\n\ndef input():\n\ta = stdin.readline()\n\tif a[-1] == \"\\n\": a = a[:-1]\n\treturn a\ndef print(*argv, end=\"\\n\", sep=\" \"):\n\tn = len(argv)\n\tfor i in range(n):\n\t\tif i == n-1: stdout.write(str(argv[i]))\n\t\telse: stdout.write(str(argv[i]) + sep)\n\tstdout.write(end)\n# Others\nmod = 10**9+7\ndef lcm(x, y): return (x * y) / (gcd(x, y))\ndef fact(x, mod=mod):\n\tans = 1\n\tfor i in range(1, x+1): ans = (ans * i) % mod\n\treturn ans\ndef arr2D(n, m, default=0):\n\tlst = []\n\tfor i in range(n): temp = [default] * m; lst.append(temp)\n\treturn lst\ndef sortDictV(x): return {k: v for k, v in sorted(x.items(), key = lambda item : item[1])}\n\ndef solve(n, lst):\n\tcnt = [0]*101\n\tfor i in lst:\n\t\tif cnt[i] == -1: cnt[i] = 1\n\t\telse: cnt[i] += 1\n\tcheck = False\n\ta, b = -1, -1\n\tfor i in range(101):\n\t\tif not check:\n\t\t\tif cnt[i] == 1:\n\t\t\t\ta = i\n\t\t\t\tcheck = True\n\t\t\telif cnt[i] == 0:\n\t\t\t\treturn i*2\n\t\telse:\n\t\t\tif cnt[i] == 0:\n\t\t\t\tb = i\n\t\t\t\tbreak\n\tif b == -1: return 0\n\telse: return a + b\n\nfor _ in range(int(input())): # Multicase\n\tn = int(input())\n\tlst = list(map(int, input().split()))\n\tprint(solve(n, lst))"
        },
        {
            "language": 3,
            "solution": "\n\ndef subsetMax(arr,n):\n    countDict = {}\n    setA = set()\n    setB = set()\n    setC = set([i for i in range(101)])\n    for i in range(n):\n        if(arr[i] not in setA):\n            setA.add(arr[i])\n        elif(arr[i] not in setB):\n            setB.add(arr[i])\n    remA = min(setC-setC.intersection(setA))\n    remB = min(setC-setC.intersection(setB))\n    return remA+remB\n\n\n\nif __name__ == '__main__':\n    testCases = input()\n    for i in range(int(testCases)):\n        n = int(input())\n        arr = list(map(int,input().split()))\n        ans = subsetMax(arr,n)\n        print(ans)\n"
        },
        {
            "language": 3,
            "solution": "\ndef inp():\n    return int(input())\n\n\nfor _ in range(inp()):\n    n = inp()\n    arr = list(map(int, input().split(' ')))\n    if 0 not in arr:\n        print(0)\n    else:\n        a = []\n        b = []\n        ans = []\n        for i in arr:\n            if i not in a:\n                a.append(i)\n            else:\n                b.append(i)\n        for j in range(n):\n            if j not in a:\n                ans.append(j)\n                break\n        if len(ans) == 0:\n            ans.append(max(a) + 1)\n        if len(b) > 0:\n            for j in range(n):\n                if j not in b:\n                    ans.append(j)\n                    break\n        else:\n            ans.append(0)\n        print(sum(ans))"
        },
        {
            "language": 3,
            "solution": "def fun(n,arr):\n\t\n\tarr.sort()\n\ta=arr\n\tb=[]\n\ti=0\n\twhile True:\n\t\tif i in a:\n\t\t\tind = arr.index(i)\n\t\t\tb.append(arr.pop(ind))\n\t\t\ti+=1\n\t\telse:\n\t\t\tmex_b = i\n\t\t\tbreak\n\t\n\n\n\tj=0\n\twhile True:\n\t\tif j in a:\n\t\t\tj+=1\n\t\telse:\n\t\t\tmex_a = j\n\t\t\tbreak\n\n\tprint(mex_a+mex_b)\n\n\n\n\n\n\n\n\n\nt=int(input())\nn = []\nnum = []\nfor i in range(t):\n\tn.append(int(input()))\n\ttem = list(int(ele) for ele in input().strip().split(\" \"))\n\tnum.append(tem)\nfor i in range(t):\n\tfun(n[i],num[i])\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n \npublic class Main{\n    public static void main(String[] args) throws IOException{\n        In in = new In();\n        for(int qr = in.pint(); qr > 0; qr--) {\n        \tint n = in.pint();\n        \tint[] a = new int[n];\n        \tint[] ct = new int[101];\n        \tin.tok();\n        \tfor(int i = 0; i < n; i++) {\n        \t\ta[i] = in.pint();\n        \t\tct[a[i]]++;\n        \t}\n        \tint best =  -1;\n        \tfor(int i = 0; i < 101; i++) {\n        \t\tif(ct[i] == 0) {best = i; break;}\n        \t}\n        \tfor(int i = 0; i < 101; i++) {\n        \t\tif(ct[i] == 0 || ct[i] == 1) {best += i; break;}\n        \t}\n        \tSystem.out.println(best);\n        }\n    }\n}   \nclass In{\n    BufferedReader in;\n    StringTokenizer st = new StringTokenizer(\"\");\n    public In(){\n        in = new BufferedReader(new InputStreamReader(System.in));\n    }\n    \n    int pint() throws IOException{\n        if(st.hasMoreTokens()) {return Integer.parseInt(st.nextToken());}\n        else {return Integer.parseInt(in.readLine());}\n    } \n    double pdbl() throws IOException{\n        if(st.hasMoreTokens()) {return Double.parseDouble(st.nextToken());}\n        else {return Double.parseDouble(in.readLine());}\n    }\n    long plng() throws IOException{\n        if(st.hasMoreTokens()) {return Long.parseLong(st.nextToken());}\n        else {return Long.parseLong(in.readLine());}\n    }\n    char pchr() throws IOException{\n        if(st.hasMoreTokens()) {return st.nextToken().charAt(0);}\n        else {return in.readLine().charAt(0);}\n    }\n    String pstr() throws IOException{\n        if(st.hasMoreTokens()) {return st.nextToken();}\n        else {return in.readLine();}\n    }\n    String readLine() throws IOException{\n        return in.readLine();\n    }\n    boolean ready() throws IOException {return in.ready();}\n    boolean readyN() throws IOException{return in.ready() || st.hasMoreTokens();}\n    boolean tokens() {return st.hasMoreTokens();}\n    void tok() throws IOException{st = new StringTokenizer(in.readLine());}\n    void skip() throws IOException{in.readLine();}\n}"
        },
        {
            "language": 3,
            "solution": "\ndef solve():\n    # put code here\n    n=int(input())\n    cntr=[0]*200\n    arr=[int(v) for v in input().split()]\n    for v in arr:\n        cntr[v]+=1\n    ans=0\n    st=0\n    for i in range(len(cntr)):\n        if cntr[i]>=2:\n            ans=i+1\n        else:\n            st=i\n            break\n    while st<len(cntr) and cntr[st]:\n        st+=1\n    ans+=st\n    print(ans)\n\n\nt = int(input())\nfor _ in range(t):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nfor _ in range(N):\n    _ = int(input())\n    A = sorted(list(map(int, input().split())))\n    seta = set()\n    setb = set()\n    for a in A:\n        if a in seta:\n            setb.add(a)\n        else:\n            seta.add(a)\n    numa, numb = -1,-1\n    for i in range(101):\n        if (i not in seta) and numa == -1:\n            numa = i\n        if (i not in setb) and numb == -1:\n            numb = i\n    print(numa + numb)\n"
        },
        {
            "language": 3,
            "solution": "def subset_mex(arr):\n    s = list(set(arr))\n    s.sort()\n    a = []\n    b = []\n    min = 0\n    for i in s:\n        if arr.count(i)>=2:\n            a.append(i)\n            b.append(i)\n        else:\n            a.append(i)\n    if a:\n        for i in range(max(a)):\n            if i not in a:\n                min+=i\n                break\n        else:\n            min+=max(a)+1\n    if b:\n        for i in range(max(b)):\n            if i not in b:\n                min+=i\n                break\n        else:\n            min+=max(b)+1\n    return min\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    print(subset_mex(arr))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    A = []\n    B = []\n    ans = 0\n    count = 0\n    for i in a:\n        if i not in A:\n            A.append(i)\n        else:\n            B.append(i)\n    for i in range(n + 1):\n        if i not in A:\n            ans += i\n            break\n    for i in range(n + 1):\n        if i not in B:\n            ans += i\n            break\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t > 0:\n    n = int(input())\n    counts = [0]*101\n    elems = list(map(int, input().split()))\n    for elem in elems:\n        counts[elem] += 1\n    i = 0\n    sum = 0\n    flag = 0\n    while i <= 100:\n        if counts[i] == 0:\n            print(sum)\n            break\n        if counts[i] == 1:\n            sum+=1\n            flag = 1\n        elif counts[i] >= 2 and i != 0:\n            if flag == 0:\n                sum+=2\n            else:\n                sum+=1\n        elif counts[i] >= 2:\n            sum += 2\n        i+=1\n    t -= 1\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n    counts = [0 for i in range(101)]\n    input()\n    numbers = [int(i) for i in input().split(' ')]\n    for n in numbers:\n        counts[n] +=1\n    x = 0\n    while counts[x] >= 2:\n        x += 1\n    ans = x\n    while counts[x] >= 1:\n        x += 1\n    ans += x\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l= sorted(list(map(int,input().split())))\n    a = 0\n    b = 0\n    for i in l:\n        if a== i:\n            a += 1\n        elif b == i:\n            b +=1\n    print(a+b)\n "
        },
        {
            "language": 3,
            "solution": "t = int(input())\ndef mex(setter):\n    a = set(range(0, 101))\n    return min(a - setter)\n\nfor i in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    A = set(a)\n    B = set()\n    for elem in a:\n        if a.count(elem) > 1:\n            B.add(elem)\n    minimum = mex(A)+mex(B)\n    print(minimum)\n"
        },
        {
            "language": 3,
            "solution": "import collections\nm = int(input())\nwhile(m):\n    z=0\n    l=0\n    n=int(input())\n    x=collections.Counter(map(int,input().split()))\n    for i in range (101):\n        if(x[i]==0 and z>0):\n            print(l+i)\n            break\n        if(x[i]==0):\n            print(i*2)\n            break\n        elif(x[i]==1):\n            if(z==0):\n                l=i\n                z+=1\n                \n    m-=1\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class A1406 {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int T = in.nextInt();\n        for (int t=0; t<T; t++) {\n            int N = in.nextInt();\n            int[] stat = new int[101];\n            for (int n=0; n<N; n++) {\n                int a = in.nextInt();\n                stat[a]++;\n            }\n            int answer = 0;\n            int sets = 2;\n            for (int a=0; a<=100; a++) {\n                sets = Math.min(sets, stat[a]);\n                answer += sets;\n            }\n            System.out.println(answer);\n        }\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class SubsetMex {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int tests = sc.nextInt();\n        \n\n        for (int i = 0; i < tests; i++) {\n            int numbers = sc.nextInt();\n            \n            ArrayList<Integer> A = new ArrayList<>();\n            ArrayList<Integer> B = new ArrayList<>();\n            int min = 0;\n\n            for(int j = 0; j < numbers; j++){\n                \n                int n = sc.nextInt();\n                \n                if(A.contains(n)) {\n                    B.add(n);\n                }\n                else{\n                    A.add(n);\n                }\n            }\n\n            for(int a = 0; a <= 100; a++){\n                if(!A.contains(a)){\n                    min += a;\n                    break;\n                }\n                    \n            }\n            for(int b = 0; b <= 100; b++){\n                if(!B.contains(b)){\n                    min += b;\n                    break;\n                }\n            }\n            System.out.println(min);\n            \n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    lst = list(map(int, input().strip().split(' ')))\n    lst.sort()\n   \n    #mylist = list( dict.fromkeys(lst) )\n    if lst[0]!=0:\n        print(0)\n    elif n==1 and lst[0]==0:\n        print(1)\n    elif n>1 and lst[1]!=0:\n        lst = list( dict.fromkeys(lst) )\n        for j in range(len(lst)):\n            if lst[j]==j:\n                if j==len(lst)-1:\n                    print(len(lst)) \n            else:\n                print(j)\n                break\n        \n    else:\n        lst1=[0]\n        lst2=[0]\n \n        for j in range(2,n):\n            \n            if lst[j]==lst1[-1]+1:\n                lst1.append(lst[j])\n            elif lst[j]==lst2[-1]+1:\n                lst2.append(lst[j])\n            elif lst[j]==lst1[-1] or lst[j]==lst2[-1]:\n                continue\n            else:\n                break\n        print(lst1[-1]+lst2[-1]+2)\n            \n            \n        \n    \n        \n    \n        \n    \n"
        },
        {
            "language": 1,
            "solution": "from collections import Counter, defaultdict, deque\nimport bisect\nfrom sys import stdin, stdout\nfrom itertools import repeat\nimport math\n\n# sys.stdin = open('input')\n\ndef inp(force_list=False):\n    re = map(int, raw_input().split())\n    if len(re) == 1 and not force_list:\n        return re[0]\n    return re\n\ndef inst():\n    return raw_input().strip()\n\ndef gcd(x, y):\n   while(y):\n       x, y = y, x % y\n   return x\n\nmod = 1000000007\n\n\ndef my_main():\n    T = inp()\n    for _ in range(T):\n        n = inp()\n        da = inp(True)\n        ct = Counter(da)\n        ans = 0\n        leave = 2\n        for i in range(102):\n            if leave == 0:\n                break\n            if i not in ct:\n                ans += leave * i\n                break\n            if ct[i]==1 and leave != 1:\n                ans += i\n                leave -= 1\n        print ans\n\n\n\n\n\n\n\nmy_main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main{\n\n    public static void main(String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n\n        while(t > 0)\n        {\n            int n = sc.nextInt();\n            HashMap<Integer, Integer> hmap = new HashMap<>();\n            \n            for(int i=0; i<n; i++)\n            {\n                int x = sc.nextInt();\n                if(hmap.containsKey(x))\n                {\n                    hmap.put(x, hmap.get(x)+1);\n                }\n                else\n                {\n                    hmap.put(x, 1);\n                }\n            }\n\n            Set<Integer> A = new HashSet<>();\n            Set<Integer> B = new HashSet<>();\n\n            \n\n            if(!hmap.containsKey(0))\n            {\n                System.out.println(0);\n                t--;\n                continue;\n            }\n            else\n            {\n                int k = 0;\n                while(hmap.size() > 0)\n                {\n                    if(hmap.containsKey(k))\n                    {\n                        if(hmap.get(k) >= 2)\n                        {\n                            A.add(k);\n                            B.add(k);\n                        }\n                        else \n                        {\n                            A.add(k);\n                        }\n                    }\n                    \n                    hmap.remove(k++);\n                }\n            }\n\n            int x = 0, y = 0;\n            \n            while(A.contains(x))\n            {\n                x++;\n            }\n            while(B.contains(y))\n            {\n                y++;\n            }\n            System.out.println(x+y);\n\n\n            t--;\n        }\n\n        sc.close();\n    }\n\n    \n}"
        },
        {
            "language": 3,
            "solution": "t= int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    dic=[0]*(100+1)\n    for i in range(len(l)):\n        dic[l[i]]+=1\n    a=b=0\n    for i in range(len(dic)):\n        if dic[i]==0:\n            a=i\n            break\n    for i in range(len(dic)):\n        if dic[i]<=1:\n            b=i\n            break\n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# ------------------- fast io --------------------\ndef findmex(arr):\n    cur=0\n    for s in range(len(arr)):\n        if arr[s]==cur:\n            cur+=1\n    return cur\nfor j in range(int(input())):\n    n=int(input());vals=list(map(int,input().split()));enc=set([])\n    m1=[];m2=[]\n    for s in range(n):\n        if not(vals[s] in enc):\n            m1.append(vals[s]);enc.add(vals[s])\n        else:\n            m2.append(vals[s])\n    m1.sort();m2.sort()\n    print(findmex(m1)+findmex(m2))"
        },
        {
            "language": 4,
            "solution": "/*****Author: Satyajeet Singh************************************/\n    import java.io.*;\n    import java.util.*;\n    import java.text.*; \n    import java.lang.*;\n    import java.math.*;\npublic class Main{\n/*********************************************Constants******************************************/\n    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));        \n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static long mod=(long)1e9+7;\n    static long mod1=998244353;\n    static ArrayList<Integer> graph[];\n    static int pptr=0,pptrmax=0;\n    static String st[];\n/*****************************************Solution Begins***************************************/        \n\n    public static void main(String args[]) throws Exception{\n        int tt=pi();\n        while(tt-->0){\n            int n=pi();\n            int input[]=new int[102];\n            for(int i=0;i<n;i++)input[pi()]++;\n            boolean flag=false;\n            int ans=0;\n            for(int i=0;i<=101;i++){\n                if(input[i]>=2)continue;\n                if(flag){\n                    if(input[i]==1)continue;\n                    else{\n                        ans+=i;\n                        break;\n                    }\n                }\n                else{\n                    if(input[i]==0){\n                        ans+=2*i;\n                        break;\n                    }\n                    else{\n                        flag=true;\n                        ans+=i;\n                    }\n                }\n            }\n            out.println(ans);\n           \n        }\n/****************************************Solution Ends**************************************************/\n        clr();\n    }\n    static void clr(){\n        out.flush();\n        out.close();\n    }\n    static void nl() throws Exception{\n        pptr=0;\n        st=br.readLine().split(\" \");\n        pptrmax=st.length;\n    }\n    static void nls() throws Exception{\n        pptr=0;\n        st=br.readLine().split(\"\");\n        pptrmax=st.length;\n    }\n    static int pi() throws Exception{\n        if(pptr==pptrmax)\n            nl();\n        return Integer.parseInt(st[pptr++]);\n    }\n    static long pl() throws Exception{\n        if(pptr==pptrmax)\n            nl();\n        return Long.parseLong(st[pptr++]);\n    }\n    static double pd() throws Exception{\n        if(pptr==pptrmax)\n            nl();\n        return Double.parseDouble(st[pptr++]);\n    }\n    static String ps() throws Exception{\n        if(pptr==pptrmax)\n            nl();\n        return st[pptr++];\n    }\n/***************************************Precision Printing**********************************************/\n    static void printPrecision(double d){\n        DecimalFormat ft = new DecimalFormat(\"0.00000000000\"); \n        out.println(ft.format(d));\n    }\n/**************************************Bit Manipulation**************************************************/\n    static int countBit(long mask){\n        int ans=0;\n        while(mask!=0){\n            mask&=(mask-1);\n            ans++;\n        }\n        return ans;\n    }\n/******************************************Graph*********************************************************/\n    static void Makegraph(int n){\n        graph=new ArrayList[n];\n        for(int i=0;i<n;i++)\n            graph[i]=new ArrayList<>();\n    }\n    static void addEdge(int a,int b){\n        graph[a].add(b);\n    }\n    // static void addEdge(int a,int b,int c){\n    //     graph[a].add(new Pair(b,c));\n    // }    \n/*********************************************PAIR********************************************************/\n    static class Pair{\n        int u;\n        int v;\n        public Pair(int u, int v) {\n            this.u = u;\n            this.v = v;\n        }\n        public int hashCode() {\n            int hu = (int) (u ^ (u >>> 32));\n            int hv = (int) (v ^ (v >>> 32));\n            return 31 * hu + hv;\n        }\n        public boolean equals(Object o) {\n            Pair other = (Pair) o;\n            return u == other.u && v == other.v;\n        }\n        public String toString() {\n            return \"[u=\" + u + \", v=\" + v + \"]\";\n        }\n    }\n/******************************************Long Pair*******************************************************/\n    static class Pairl{\n        long u;\n        long v;\n        public Pairl(long u, long v) {\n            this.u = u;\n            this.v = v;\n        }\n        public int hashCode() {\n            int hu = (int) (u ^ (u >>> 32));\n            int hv = (int) (v ^ (v >>> 32));\n            return 31 * hu + hv;\n        }\n        public boolean equals(Object o) {\n            Pairl other = (Pairl) o;\n            return u == other.u && v == other.v;\n        }\n        public String toString() {\n            return \"[u=\" + u + \", v=\" + v + \"]\";\n        }\n    }\n/*****************************************DEBUG***********************************************************/\n    public static void debug(Object... o){\n        System.out.println(Arrays.deepToString(o));\n    }\n/************************************MODULAR EXPONENTIATION***********************************************/\n    static long modulo(long a,long b,long c){\n        long x=1,y=a%c;\n        while(b > 0){\n            if(b%2 == 1)\n                x=(x*y)%c;\n            y = (y*y)%c;\n            b = b>>1;\n        }\n        return  x%c;\n    }\n/********************************************GCD**********************************************************/\n    static long gcd(long x, long y){\n        if(x==0)\n            return y;\n        if(y==0)\n            return x;\n        long r=0, a, b;\n        a = (x > y) ? x : y; \n        b = (x < y) ? x : y;\n        r = b;\n        while(a % b != 0){\n            r = a % b;\n            a = b;\n            b = r;\n        }\n        return r;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (auto& cur : a) cin >> cur;\n  sort(a.begin(), a.end());\n  int mex1 = 0;\n  for (auto& cur : a) {\n    if (cur == mex1) {\n      cur = -1;\n      mex1++;\n    }\n  }\n  int mex2 = 0;\n  for (auto& cur : a) {\n    if (cur == mex2) {\n      cur = -1;\n      mex2++;\n    }\n  }\n  cout << mex1 + mex2 << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n\npublic class codeforcesc {\n\n//\tstatic void methods() {\n//\t\tInteger arr[] = { 1, 2, 5, 1, 7, 8 };\n//\t\tInteger arr2[] = { 1, 1, 1, 1, 1, 1 };\n//\t\tList<Integer> l1 = new ArrayList<>();\n//\t\tl1 = Arrays.asList(arr);\n//\t\t ll = new ArrayList<>(l1);\n//\t\tboolean bb = Arrays.equals(arr, arr2);\n//\t\t Collections.reverse(ll);\n//\t\tll.remove((Integer) 5);\n//\t\tSystem.out.println(ll);\n//\n//\t}\n\n//\tstatic long gcd(long a, long b) {\n//\t\tif (b == 0)\n//\t\t\treturn a;\n//\t\treturn gcd(b, a % b);\n//\t}\n\t\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\tint t=sc.nextInt();\n\t\t\twhile(t-->0) {\n\t\t\t\tint n=sc.nextInt();\n\t\t\t   int arr[]=new int[n];\n\t\t\t   for(int i=0;i<n;i++) {\n\t\t\t\t   arr[i]=sc.nextInt();\n\t\t\t   }\n\t\t\t   int count[]=new int[101];\n\t\t\t   for(int i=0;i<n;i++) {\n\t\t\t\t   count[arr[i]]++;\n\t\t\t   }\n\t\t\t   int s=0;\n\t\t\t   for(int i=0;i<101;i++) {\n\t\t\t\t   if(count[i]<=0) {\n\t\t\t\t\t   s=s+i;\n\t\t\t\t\t   break;\n\t\t\t\t   }\n\t\t\t\t   else {\n\t\t\t\t\t   count[i]--;\n\t\t\t\t   }\n\t\t\t   }\n\t\t\t   for(int i=0;i<101;i++) {\n\t\t\t\t   if(count[i]<=0) {\n\t\t\t\t\t   s=s+i;\n\t\t\t\t\t   break;\n\t\t\t\t   }\n\t\t\t\t   else {\n\t\t\t\t\t   count[i]--;\n\t\t\t\t   }\n\t\t\t   }System.out.println(s);\n\t}}\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(0,int(input())):\n    n =int(input())\n    a =list(map(int,input().split()))\n    a.sort()\n    m,n=0,0\n    for i in a:\n        if i==m:\n            m+=1\n        elif i==n:\n            n+=1\n    print(m+n)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n#from collections import deque\n#from functools import *\n#from fractions import Fraction as f\nfrom copy import *\nfrom bisect import *\t\n#from heapq import *\n#from math import *\n#from itertools import permutations ,product\n \ndef eprint(*args):\n    print(*args, file=sys.stderr)\nzz=1\n \n#sys.setrecursionlimit(10**6)\nif zz:\n\tinput=sys.stdin.readline\nelse:\t\n\tsys.stdin=open('input.txt', 'r')\n\tsys.stdout=open('all.txt','w')\ndi=[[-1,0],[1,0],[0,1],[0,-1]]\ndef inc(d,c,x=1):\n\td[c]=d[c]+x if c in d else x\ndef bo(i):\n\treturn ord(i)-ord('A')\t\ndef li():\n\treturn [int(xx) for xx in input().split()]\ndef fli():\n\treturn [float(x) for x in input().split()]\t\ndef comp(a,b):\n\tif(a>b):\n\t\treturn 2\n\treturn 2 if a==b else 0\t\t\ndef gi():\t\n\treturn [xx for xx in input().split()]\ndef fi():\n\treturn int(input())\ndef pro(a): \n\treturn reduce(lambda a,b:a*b,a)\t\t\ndef swap(a,i,j): \n\ta[i],a[j]=a[j],a[i]\t\ndef si():\n\treturn list(input().rstrip())\t\ndef mi():\n\treturn \tmap(int,input().split())\t\t\t\ndef gh():\n\tsys.stdout.flush()\ndef isvalid(i,j):\n\treturn 0<=i<n and 0<=j<m and a[i][j]!=\".\"\ndef bo(i):\n\treturn ord(i)-ord('a')\t\ndef graph(n,m):\n\tfor i in range(m):\n\t\tx,y=mi()\n\t\ta[x].append(y)\n\t\ta[y].append(x)\n \nt=fi()\n \nwhile t>0:\n\tt-=1\n\tn=fi()\n\ta=li()\n\td=[0]*(100+2)\n\tans=0\n\tfor i in range(n):\n\t\td[a[i]]+=1\n\tfor i in range(n+2):\n\t\tif d[i]==1:\n\t\t\tans+=i\n\t\t\tfor j in range(i+1,n+2):\n\t\t\t\tif \td[j]==0:\n\t\t\t\t\tans+=j\n\t\t\t\t\tbreak\n\t\t\tbreak\n\t\telif d[i]==0:\n\t\t\tans+=2*i\n\t\t\tbreak\t\n\tprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    long long int a[n];\n    long long int b[105] = {0};\n    for (long long int i = 0; i < n; i++) {\n      cin >> a[i];\n      b[a[i]]++;\n    }\n    long long int mexa[105] = {0};\n    long long int mexb[105] = {0};\n    for (long long int i = 0; i <= 100; i++) {\n      if (b[i] > 0) {\n        if (b[i] > 1) {\n          mexa[i] = b[i] / 2;\n          mexb[i] = b[i] - mexa[i];\n        } else\n          mexa[i] = 1;\n      }\n    }\n    long long int ans = 0;\n    for (long long int i = 0; i <= 100; i++) {\n      if (mexa[i] == 0) {\n        ans = ans + i;\n        break;\n      }\n    }\n    for (long long int i = 0; i <= 100; i++) {\n      if (mexb[i] == 0) {\n        ans = ans + i;\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\n# import threading\n# threading.stack_size(2**27)\nimport sys\nsys.setrecursionlimit(10**4)\n# sys.stdin = open('inpy.txt', 'r')\n# sys.stdout = open('outpy.txt', 'w')\nfrom sys import stdin, stdout\nimport bisect            #c++ upperbound\nimport math\nimport heapq\ni_m=9223372036854775807\ndef modinv(n,p):\n    return pow(n,p-2,p)\ndef cin():\n    return map(int,sin().split())\ndef ain():                           #takes array as input\n    return list(map(int,sin().split()))\ndef sin():\n    return input()\ndef inin():\n    return int(input())\nimport math  \ndef GCD(x, y): \n    x=abs(x)\n    y=abs(y)\n    if(min(x,y)==0):\n        return max(x,y)\n    while(y): \n        x, y = y, x % y \n    return x \ndef Divisors(n) : \n    l = []  \n    for i in range(1, int(math.sqrt(n) + 1)) :\n        if (n % i == 0) : \n            if (n // i == i) : \n                l.append(i) \n            else : \n                l.append(i)\n                l.append(n//i)\n    return l\nprime=[]\ndef SieveOfEratosthenes(n): \n    global prime\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    f=[]\n    for p in range(2, n): \n        if prime[p]: \n            f.append(p)\n    return f\ndef primeFactors(n): \n    a=[]\n    # Print the number of two's that divide n \n    while n % 2 == 0: \n        a.append(2) \n        n = n // 2\n          \n    # n must be odd at this point \n    # so a skip of 2 ( i = i + 2) can be used \n    for i in range(3,int(math.sqrt(n))+1,2): \n          \n        # while i divides n , print i ad divide n \n        while n % i== 0: \n            a.append(i) \n            n = n // i \n              \n    # Condition if n is a prime \n    # number greater than 2 \n    if n > 2: \n        a.append(n)\n    return a\n\n\"\"\"*******************************************************\"\"\"\ndef main():\n    t=inin()\n    for _ in range(t):\n        n=inin()\n        b=[0]*101\n        a=ain()\n        for i in a:\n            b[i]+=1\n        x=y=-1\n        h=2\n        # print(b)\n        for i in range(n):\n            if b[i]>=2 and h==2:\n                x=i\n                y=i\n                continue    \n            if b[i]>=1 and h>=1:\n                h=1\n                y=i\n            if b[i]==0:\n                break\n        print(x+y+2)\n######## Python 2 and 3 footer by Pajenegod and c1729\n \n# Note because cf runs old PyPy3 version which doesn't have the sped up\n# unicode strings, PyPy3 strings will many times be slower than pypy2.\n# There is a way to get around this by using binary strings in PyPy3\n# but its syntax is different which makes it kind of a mess to use.\n \n# So on cf, use PyPy2 for best string performance.\n \npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n \nimport os, sys\nfrom io import IOBase, BytesIO\n \nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n \n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n \n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n \n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n \n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s:self.buffer.write(s.encode('ascii'))\n            self.read = lambda:self.buffer.read().decode('ascii')\n            self.readline = lambda:self.buffer.readline().decode('ascii')\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n# Cout implemented in Python\nimport sys\nclass ostream:\n    def __lshift__(self,a):\n        sys.stdout.write(str(a))\n        return self\ncout = ostream()\nendl = '\\n'\n \n# Read all remaining integers in stdin, type is given by optional argument, this is fast\ndef readnumbers(zero = 0):\n    conv = ord if py2 else lambda x:x\n    A = []; numb = zero; sign = 1; i = 0; s = sys.stdin.buffer.read()\n    try:\n        while True:\n            if s[i] >= b'R' [0]:\n                numb = 10 * numb + conv(s[i]) - 48\n            elif s[i] == b'-' [0]: sign = -1\n            elif s[i] != b'\\r' [0]:\n                A.append(sign*numb)\n                numb = zero; sign = 1\n            i += 1\n    except:pass\n    if s and s[-1] >= b'R' [0]:\n        A.append(sign*numb)\n    return A\n \n# threading.Thread(target=main).start()\nif __name__== \"__main__\":\n  main()"
        },
        {
            "language": 4,
            "solution": "/*input\n4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6\n\n*/\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Main\n{\n\tstatic PrintWriter out;\n\tstatic int MOD = 1000000007;\n\tstatic FastReader scan;\n\n    /*-------- I/O using short named function ---------*/\n\tpublic static String ns(){return scan.next();}\n\tpublic static int ni(){return scan.nextInt();}\n\tpublic static long nl(){return scan.nextLong();}\n\tpublic static double nd(){return scan.nextDouble();}\n\tpublic static String nln(){return scan.nextLine();}\n\tpublic static void p(Object o){out.print(o);}\n\tpublic static void ps(Object o){out.print(o + \" \");}\n\tpublic static void pn(Object o){out.println(o);}\n    /*-------- for output of an array ---------------------*/\n     static void iPA(int arr []){\n     \t StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void lPA(long arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void sPA(String arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void dPA(double arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n    /*-------------- for input in an array ---------------------*/\n\tstatic void iIA(int arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = ni();\n\t}\n\tstatic void lIA(long arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = nl(); \n\t}\n\tstatic void sIA(String arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = ns(); \n\t}\n\tstatic void dIA(double arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = nd();\n\t}\n\t/*------------ for taking input faster ----------------*/\n     static class FastReader\n\t{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader()\n\t\t{\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next()\n\t\t{\n\t\t\twhile (st == null || !st.hasMoreElements())\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt()\n\t\t{\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong()\n\t\t{\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble()\n\t\t{\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine()\n\t\t{\n\t\t\tString str = \"\";\n\t\t\ttry\n\t\t\t{\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\t// Method to check if x is power of 2\n    static boolean isPowerOfTwo (int x) { return x!=0 && ((x&(x-1)) == 0);}\n    //Method to return lcm of two numbers\n    static int gcd(int a, int b){return a==0?b:gcd(b % a, a); }\n    //Method to count digit of a number\n    static int countDigit(long n){return (int)Math.floor(Math.log10(n) + 1);}\n\n    //Method for sorting\n\tstatic void ruffle_sort(int[] a) {\n\t\t//shandom_ruffle\n\t\tRandom r=new Random();\n\t\tint n=a.length;\n\t\tfor (int i=0; i<n; i++) {\n\t\t\tint oi=r.nextInt(n);\n\t\t\tint temp=a[i];\n\t\t\ta[i]=a[oi];\n\t\t\ta[oi]=temp;\n\t\t}\n\t\t//sort\n\t\tArrays.sort(a);\n\t}\n\t//Method for checking if a number is prime or not\n\tstatic boolean isPrime(int n) { \n        if (n <= 1) return false; \n        if (n <= 3) return true; \n        if (n % 2 == 0 || n % 3 == 0) return false; \n        for (int i = 5; i * i <= n; i = i + 6) \n            if (n % i == 0 || n % (i + 2) == 0) \n            return false; \n        return true; \n    } \n\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tOutputStream outputStream =System.out;\n        out =new PrintWriter(outputStream);\n        scan =new FastReader();\n\t\t//for fast output sometimes\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint t = ni();\n\t\twhile(t-->0){\n\t\t\tint n = ni();\n\t\t\tint arr[] = new int[n];\n\t\t\tiIA(arr);\n\t\t\tint cnt[] = new int[102];\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\tcnt[arr[i]]++;\n\t\t\t}\n\t\t\tboolean first = false, second = false;\n\t\t\tint a= 0, b = 0;\n\t\t\t//iPA(cnt);\n\t\t\tfor(int i=0; i<=101; i++){\n\t\t\t\tif(first && second)\n\t\t\t\t\tbreak;\n\t\t\t\tif(cnt[i]==0){\n\t\t\t\t\tif(!first){\n\t\t\t\t\t\tfirst = true;\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t}\n\t\t\t\t\tif(!second){\n\t\t\t\t\t\tsecond = true;\n\t\t\t\t\t\tb = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(cnt[i]==1){\n\t\t\t\t\tif(!second){\n\t\t\t\t\t\tsecond = true;\n\t\t\t\t\t\tb = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpn(a + b);\n        }\n        out.flush();\n\t\tout.close();\n\t}\n\t\n\t\n}\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\n\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = [0 for i in range(101)]\n    for i in arr:\n        freq[i] += 1\n    b = c = -1\n    for i in range(101):\n        if freq[i] > 0:\n            freq[i] -= 1\n        else:\n            b = i\n            break\n    for i in range(106):\n        if freq[i] > 0:\n            freq[i] -= 1\n        else:\n            c = i\n            break\n    print(b+c)\n    t -= 1\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n \n \npublic class Main \n{\n//     HashMap<> map=new HashMap<>();\n//     TreeMap<> map=new TreeMap<>();\n//     map.put(p,map.getOrDefault(p,0)+1);\n//     for(Map.Entry<> mx:map.entrSet()){\n//           int v=mx.getValue(),k=mx.getKey();\n//     }\n//     ArrayList<> l=new ArrayList<>();\n//     HashSet<> has=new HashSet<>();\n    \n    PrintWriter out;\n    FastReader sc;\n    public void sol(){\n        int t=ni();\n        while(t-->0){\n              int n=ni();\n              int[] ar=new int[101];\n              for(int i=0;i<n;i++){\n                    int q=ni();\n                    ar[q]++;\n              }int c=0,p=0;\n              int i=0;\n              boolean f=false;\n              for( i=0;i<101;i++){\n                    if(ar[i]==1){\n                          c=i;\n                          i++;\n                          break;\n                    }else if(ar[i]==0){\n                          c=i;\n                          f=true;break;\n                    }\n              }for(i=0;i<101&!f;i++){\n                   if(ar[i]==0){\n                          p=i;\n                          break;\n                    } \n              }if(!f)\n              pl(c+p);\n              else pl(2*c);\n        } \n    }\n    public static void main(String[] args) \n\t{ \n\t      Main g=new Main();\n\t\tg.out=new PrintWriter(System.out);\n\t\tg.sc=new FastReader();\n\t\tg.sol();\n\t\tg.out.flush();\n\t}\n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n \n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n \n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n \n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n \n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n \n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n \n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} public int ni(){\n\t      return sc.nextInt();\n\t}public long nl(){\n\t      return sc.nextLong();\n\t}public double nd(){\n\t      return sc.nextDouble();\n\t}public String rl(){\n\t      return sc.nextLine();\n\t}public void pl(Object s){\n\t      out.println(s);\n\t}public void pr(Object s){\n\t      out.print(s);\n\t}public String next(){\n\t      return sc.next();\n\t}public long abs(long x,long y){\n\t      return Math.abs(x-y);\n\t}\n\tpublic int abs(int x,int y){\n\t      return Math.abs(x-y);\n\t}\n\tpublic double abs(double x,double y){\n\t      return Math.abs(x-y);\n\t}\n      public long pow(long x,long y){\n            return (long)Math.pow(x,y);\n      }\n      public int pow(int x,int y){\n            return (int)Math.pow(x,y);\n      }\n      public double pow(double x,double y){\n            return Math.pow(x,y);\n      }public long min(long x,long y){\n            return (long)Math.min(x,y);\n      }\n      public int min(int x,int y){\n            return (int)Math.min(x,y);\n      }\n      public double min(double x,double y){\n            return Math.min(x,y);\n      }public static int gcd(int a, int b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}static void sort(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort(long[] a) {\n\t\tArrayList<Long> l = new ArrayList<>();\n\t\tfor (long i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort(double[] a) {\n\t\tArrayList<Double> l = new ArrayList<>();\n\t\tfor (double i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}int  swap(int a,int b){\n\t      return a;\n\t}long  swap(long a,long b){\n\t      return a;\n\t}double  swap(double a,double b){\n\t      return a;\n\t}\n\tboolean isPowerOfTwo (int x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }boolean isPowerOfTwo (long x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }public long max(long x,long y){\n            return (long)Math.max(x,y);\n      }\n      public int max(int x,int y){\n            return (int)Math.max(x,y);\n      }\n      public double max(double x,double y){\n            return Math.max(x,y);\n      }long sqrt(long x){\n            return (long)Math.sqrt(x);\n      }int sqrt(int x){\n            return (int)Math.sqrt(x);\n      }\n\t \n} "
        },
        {
            "language": 3,
            "solution": "from sys import stdin, exit, setrecursionlimit\nfrom collections import deque\ninput = stdin.readline\nlmi = lambda: list(map(int, input().split()))\nmi = lambda: map(int, input().split())\nsi = lambda: input().strip('\\n')\nssi = lambda: input().strip('\\n').split()\nmod = 10**9+7\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = lmi()\n    tot = 0\n    for i in range(n+1):\n        if a.count(i) < 2:\n            tot += i\n            break\n    for i in range(n+1):\n        if a.count(i) < 1:\n            tot += i\n            break\n    print(tot)"
        },
        {
            "language": 3,
            "solution": "cases = int(input())\nfor _ in range(cases):\n    count = 0\n    a = []\n    n = int(input())\n    b = list(map(int,input().split()))\n    b.sort()\n    s = set(b)\n    s = list(s)\n    s.sort()\n    #print(a,b,s)\n    a.append(s[0])\n    b.remove(s[0])\n    for x in range(len(s)-1):\n        if s[x] == s[x+1] - 1:\n            a.append(s[x+1])\n            b.remove(s[x+1])\n        else:\n            break\n    #print(a,b,s)\n    for x in range(101):\n        if x not in a:\n            count += x\n            break\n    #print(count)\n    for x in range(101):\n        if x not in b:\n            count += x\n            break\n    \n    print(count)"
        },
        {
            "language": 3,
            "solution": "def answer(n,A):\n    arr=[0]*(102)\n    for i in range(n):\n        arr[A[i]]+=1\n        \n    s1=set()\n    s2=set()\n    ans=0\n    for i in range(102):\n        if arr[i]==0:\n            ans=i\n            break\n    flag=1       \n    for i in range(102):\n        if arr[i]==1:\n            s1.add(i)\n            flag=0\n        elif arr[i]>1:\n            s1.add(i)\n            if flag:\n                s2.add(i)\n            \n        else:\n            break\n            \n    if s2 and s1:\n        ans=max(ans,max(s2)+1+max(s1)+1)\n        \n    if s1:\n        ans=max(ans,max(s1)+1)\n        \n    return ans\n\n\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(answer(n,l))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t > 0:\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    x.sort()\n    if 0 not in x:\n        print(0)\n    else:\n        a = []\n        b = []\n        res = 0\n        m = 0\n        a.append(x[0])\n        for i in range(1, n):\n            if a[m] + 1 == x[i]:\n                a.append(x[i])\n                m += 1\n            elif a[m] == x[i]:\n                if x[i] not in b:\n                    b.append(x[i])\n            else:\n                if x[i] not in b:\n                    b.append(x[i])\n                break\n        res = a[m] + 1\n        z = 0\n        for i in range(len(b)):\n            if b[i] == z:\n                z += 1\n            else:\n                break\n        res += z\n        print(res)\n    t -= 1\n"
        },
        {
            "language": 3,
            "solution": "import sys,bisect\ninput = sys.stdin.buffer.readline\n\nT = int(input())\nfor testcase in range(T):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    flag = [True]*n\n    res = -1\n    for j in range(101):\n        k = bisect.bisect_left(a,j)\n        if k < n and a[k] == j:\n            flag[k] = False\n            res = j\n        else:\n            break\n    c = []\n    for i in range(n):\n        if flag[i]:\n            c.append(a[i])\n    ans = -1\n    c = list(set(c))\n    for e in c:\n        if e == ans+1:\n            ans = e\n        else:\n            break\n    print(ans+res+2)\n        "
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    i = 0\n    arr.sort()\n    while True:\n        if i in arr:\n            arr.remove(i)\n            i += 1\n        else:\n            break\n    a = i\n    i = 0\n    while True:\n        if i in arr:\n            arr.remove(i)\n            i += 1\n        else:\n            break\n    b = i\n    print(a+b)        \n    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    ans=0\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    d=list(set(a))\n    #print(d)\n    f=0\n    for i in range(len(d)):\n        if(i==d[i]):\n            #print(i)\n            for j in range(len(a)):\n                if(a[j]==i):\n                    a.pop(j)\n                    break\n            continue\n        else:\n            f=1\n            ans+=i\n            break\n    if(f==0):\n   \n        ans+=i+1\n    #print(a)\n    d=list(set(a))\n    f=0\n    for i in range(len(d)):\n        if(i==d[i]):\n            continue\n        else:\n            f=1\n            ans+=i\n            break\n    if(f==0 and len(d)!=0):\n        ans+=i+1\n    print(ans)\n        "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    frequency = [0]*101\n    for item in list(map(int,input().split())):\n        frequency[item]+=1\n    ans=0\n    for i in range(101):\n        if (frequency[i]==0):\n            ans+=i\n            break\n        frequency[i]-=1\n    for i in range(101):\n        if frequency[i]==0:\n            ans+=i\n            break\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Program\n{\t\n\tstatic Scanner sc;\n\t\n\tpublic static <Tp> Tp swap(Tp... args)\n\t{\n\t\treturn args[0];\n\t}\n\t\n\tpublic static void solve()\n\t{\n\t\tInteger n = sc.nextInt(), a, res = 0;\n\t\t\n\t\tMap<Integer, Integer> inf = new HashMap<Integer, Integer>();\n\t\t\n\t\tfor(int i = 0; i<n;i++)\n\t\t{\n\t\t\ta = sc.nextInt();\n\t\t\t\n\t\t\tif(!inf.containsKey(a))\t\t\t\n\t\t\t{\n\t\t\t\tinf.put(a, 0);\n\t\t\t}\n\t\t\t\n\t\t\tinf.put(a, inf.get(a)+ 1);\n\t\t}\n\t\t\n\t\tint state = 2;\n\t\tfor(int i=0;true;i++)\n\t\t{\n\t\t\tif(state == 2)\n\t\t\t{\n\t\t\t\tif(inf.containsKey(i))\n\t\t\t\t{\n\t\t\t\t\tif(inf.get(i)>=2)\n\t\t\t\t\t{\n\t\t\t\t\t\tres +=2;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tres += 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tstate = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(inf.containsKey(i))\n\t\t\t\t{\n\t\t\t\t\tres += 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.print(res + \"\\n\");\n\t}\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tsc = new Scanner(System.in);\n\t\t\n\t\tint n = sc.nextInt();\n\t\t\n\t\tfor(int i = 0; i<n;i++)\n\t\t{\n\t\t\tsolve();\n\t\t}\n\t\t\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn=int(input())\n\tl=list(map(int,input().split()))\n\ta=[0]*102\n\tfor i in l:\n\t\ta[i]+=1\n\tma1=-1\n\tma2=-1\n\tfor i in range(101):\n\t\tif a[i]>=2:\n\t\t\tif ma2==i-1:\n\t\t\t\tma2=i\n\t\t\t\tma1=i\n\t\t\telse:\n\t\t\t\tma1=i\n\t\telif a[i]==1:\n\t\t\tma1=i\n\t\telse:\n\t\t\tbreak\n\tprint(ma1+ma2+2)\n\t"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\ta.sort()\n\tb=[0]*105\n\tfor i in range(n):\n\t\tb[a[i]]+=1\n\t# print(b)\n\tc=0\n\tfor i in range(len(b)):\n\t\tif b[i]>0:\n\t\t\tb[i]-=1\n\t\telse:\n\t\t\tc+=i\n\t\t\tbreak\n\tfor i in range(len(b)):\n\t\tif b[i]>0:\n\t\t\tb[i]-=1\n\t\telse:\n\t\t\tc+=i\n\t\t\tbreak\n\tprint(c)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.InputMismatchException;\nimport java.util.List;\nimport java.util.Set;\n\npublic class Codeforces {\n\n    public void solve() {\n        InputReader in = new InputReader(System.in);\n        OutputWriter out = new OutputWriter(System.out);\n        int t = in.readInt();\n        while (t-- > 0) {\n            int n = in.readInt();\n            int a[] = IOUtils.readIntegerArray(in, n);\n            Arrays.sort(a);\n            long res = 0 ;\n            int nextA =-1, nextB = -1 ;\n            for (int i = 0; i < n; i++) {\n                if(nextA+1==a[i]){\n                    nextA++;\n                }\n                else if(nextB+1==a[i]){\n                    nextB++;\n                }\n            }\n            out.printLine(nextA+1+nextB+1);\n        }\n        out.flush();\n    }\n\n//    private long calCost(long c) {\n//        long cost = 0;\n//        long cur = 1;\n//        for (int i = 0; i < n; i++, cur = cur * c) {\n//            cost += Math.abs(a[i] - cur);\n//        }\n//        return cost;\n//    }\n//\n//    private long search() {\n//        long st = 1;\n//        long end = (long) Math.pow((long) 1e18, 1.0 / n);\n//        long mid = 0;\n//        while (st <= end) {\n//            mid = st + (end - st) / 2;\n//            long cur = calCost(mid);\n//            long left = calCost(mid - 1);\n//            long right = calCost(mid + 1);\n//            if ( left > cur && cur < right ) {\n//                return cur;\n//            }\n//            if ( cur > left ) {\n//                end = mid - 1;\n//            } else st = mid + 1;\n//        }\n//        return calCost(mid);\n//    }\n\n    public static void main(String[] args) {\n        Codeforces solver = new Codeforces();\n//        System.out.println(217871987498122L + 2128012501878L);\n        solver.solve();\n    }\n\n    static class InputReader {\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if ( numChars == -1 )\n                throw new InputMismatchException();\n            if ( curChar >= numChars ) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if ( numChars <= 0 )\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if ( c == '-' ) {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if ( c < '0' || c > '9' )\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if ( c == '-' ) {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if ( c < '0' || c > '9' )\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if ( filter != null )\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if ( i != 0 )\n                    writer.print(' ');\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void flush() {\n            writer.flush();\n        }\n\n    }\n\n    static class IOUtils {\n\n        public static int[] readIntegerArray(InputReader in, int size) {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = in.readInt();\n            }\n            return array;\n        }\n\n        public static long[] readLongArray(InputReader in, int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = in.readLong();\n            }\n            return array;\n        }\n\n        public static List<Integer> readIntegerList(InputReader in, int size) {\n            List<Integer> set = new ArrayList<>();\n            for (int i = 0; i < size; i++) {\n                set.add(in.readInt());\n            }\n            return set;\n        }\n\n        public static Set<Integer> readIntegerSet(InputReader in, int size) {\n            Set<Integer> set = new HashSet<Integer>();\n            for (int i = 0; i < size; i++) {\n                set.add(in.readInt());\n            }\n            return set;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t, n;\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    int p = -1, q = -1, a, d = 0;\n    vector<int> h(101, 0);\n    for (int i = 0; i < n; i++) {\n      cin >> a;\n      h[a]++;\n    }\n    for (int i = 0; i <= n; i++) {\n      if (h[i] == 0) {\n        cout << p + q + 2 << endl;\n        break;\n      } else if (h[i] == 1) {\n        p++;\n        d = 1;\n      } else {\n        p++;\n        if (d == 0) q++;\n      }\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import Counter\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10**19\nMOD = 10**9 + 7\n\nfor _ in range(INT()):\n    N = INT()\n    A = LIST()\n\n    C = Counter(A)\n    has2 = True\n    ans = 0\n    for i in range(101):\n        if C[i] >= 2 and has2:\n            ans += 2\n        elif C[i] >= 1:\n            has2 = False\n            ans += 1\n        else:\n            break\n    print(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class prog11 {\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            int n = sc.nextInt();\n            ArrayList<Integer> al = new ArrayList<>();\n            for(int i=0;i<n;i++){\n                al.add(sc.nextInt());\n            }\n\n            al.sort(null);\n            HashSet<Integer> hs = new HashSet<>(al);\n            \n            int[] a = new int[101];\n            for(int i:hs){\n                a[i] = Collections.frequency(al, i);\n            }\n            \n\n            int a1 = 0;\n            for(int i=0;i<101;i++){\n                if(a[i] == 0){a1 = i;break;}\n            }\n\n            \n            ArrayList<Integer> fzero = new ArrayList<>();\n            ArrayList<Integer> fone = new ArrayList<>();\n            for(int i=0;i<101;i++){\n            if(a[i] == 0)fzero.add(a[i]);\n            if(a[i] == 1)fone.add(a[i]);\n            }\n            if(!fzero.isEmpty())\n            fzero.sort(null);\n            if(!fone.isEmpty())\n            fone.sort(null);\n\n            int a2 = 0;\n            if(fone.isEmpty()){\n                a2 = a1;\n            }else if(fzero.isEmpty()){\n                a1 = fone.get(0);\n            }else{\n                for(int i=0;i<101;i++){\n                    if(a[i] == 0 || a[i] == 1){\n                        a2 = i;\n                        break;\n                    }\n                }\n            }\n\n            System.out.println(a1+a2);\n\n        }\n        sc.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport string\nimport math\nimport heapq\nfrom collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nfrom functools import lru_cache\nfrom fractions import Fraction\n\n\ndef mi(s):\n    return map(int, s.strip().split())\n\ndef lmi(s):\n    return list(mi(s))\n\ndef tmi(s):\n    return tuple(mi(s))\n\ndef mf(f, s):\n    return map(f, s)\n\ndef lmf(f, s):\n    return list(mf(f, s))\n\ndef js(lst):\n    return \" \".join(str(d) for d in lst)\n\ndef jsns(lst):\n    return \"\".join(str(d) for d in lst)\n\ndef line():\n    return sys.stdin.readline().strip()\n\ndef linesp():\n    return line().split()\n\ndef iline():\n    return int(line())\n\ndef mat(n):\n    matr = []\n    for _ in range(n):\n        matr.append(linesp())\n    return matr\n\ndef matns(n):\n    mat = []\n    for _ in range(n):\n        mat.append([c for c in line()])\n    return mat\n\ndef mati(n):\n    mat = []\n    for _ in range(n):\n        mat.append(lmi(line()))\n    return mat\n\ndef pmat(mat):\n    for row in mat:\n        print(js(row))\n\ndef solve():\n    line()\n    arr = lmi(line())\n    counts = Counter(arr)\n    i = 0\n    j = 0\n    while True:\n        noj = True\n        noi = True\n        if counts[i] >= 1:\n            counts[i] -= 1\n            i += 1\n            noi = False\n\n        if counts[j] >= 1:\n            counts[j] -= 1\n            j += 1\n            noj = False\n\n        if noi and noj:\n            break\n    print(i + j)\n\n\ndef main():\n    t = iline()\n    for _ in range(t):\n        solve()\nmain()\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\n\nt = int(input())\n\n\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n\n    ct = defaultdict(int)\n    for x in A:\n        ct[x] = ct[x] + 1\n\n    ans = 0\n    for i in range(101):\n        if ct[i] == 0:\n            ans += i\n            break\n        ct[i] -= 1\n\n    for i in range(101):\n        if ct[i] == 0:\n            ans += i\n            break\n\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  sort(a.begin(), a.end());\n  int j = 0;\n  int ans = 0;\n  int cnt = 0;\n  for (int i = 0; i < n; ++i) {\n    int k = 0;\n    while (i < n && a[i] == j) {\n      ++i;\n      ++k;\n    }\n    if (cnt == 0) {\n      if (k == 0) {\n        ans += 2 * j;\n        cnt += 2;\n      } else if (k == 1) {\n        ans += j;\n        ++cnt;\n      }\n    } else if (cnt == 1) {\n      if (k == 0) {\n        ans += j;\n        ++cnt;\n      }\n    }\n    if (cnt == 2) {\n      break;\n    }\n    ++j;\n    --i;\n  }\n  if (cnt == 2) {\n    cout << ans << endl;\n  } else if (cnt == 1) {\n    cout << ans + j << endl;\n  } else {\n    cout << j * 2 << endl;\n  }\n}\nint main() {\n  int n = 1;\n  cin >> n;\n  for (unsigned long long i = 0; i < n; ++i) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile t>0:\n    t-=1\n    n = int(input())\n    C = list(map(int,input().split(' ')))\n    m = max(C)\n    A = []\n    for i in range(m+1):\n        if i in C:\n            A.append(i)\n            C.remove(i)\n    A.sort()\n    C.sort()\n    ans = 0\n    for i in range(max(A)+1):\n        if i not in A:\n            ans+=i\n            break\n    else:\n        ans+=max(A)+1\n    if len(C)!=0:\n        for i in range(max(C)+1):\n            if i not in C:\n                ans+=i\n                break\n        else:\n            ans+=max(C)+1\n\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string token;\n  int t;\n  cin >> token;\n  t = stoi(token);\n  for (int i = 0; i < t; i++) {\n    vector<int> v;\n    int n;\n    cin >> token;\n    n = stoi(token);\n    for (int j = 0; j < n; j++) {\n      cin >> token;\n      v.push_back(stoi(token));\n    }\n    sort(v.begin(), v.end());\n    int c = 0;\n    int a;\n    for (int j = 0; j < v.size();) {\n      if (v[j] == c) {\n        v.erase(v.begin() + j);\n        c++;\n      } else if (v[j] < c) {\n        j++;\n      } else {\n        break;\n      }\n    }\n    a = c;\n    int b;\n    c = 0;\n    for (int j = 0; j < v.size();) {\n      if (v[j] == c) {\n        v.erase(v.begin() + j);\n        c++;\n      } else if (v[j] < c) {\n        j++;\n      } else {\n        break;\n      }\n    }\n    b = c;\n    cout << a + b << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "T = int(raw_input())\nfor t in xrange(T):\n    n = int(raw_input())\n    x = map(int, raw_input().split())\n    now = 0\n    ans = 0\n    for i in range(102):\n        if i not in x:\n            ans += i\n            now = i\n            break\n    for i in range(now+1):\n        if x.count(i) < 2:\n            ans += i\n            break\n    print ans\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l1 = sorted([int(x) for x in input().split()])\n    i=0\n    ans=0\n    while i<2:\n        j=0\n        while j in l1:\n            l1.remove(j)\n            j+=1\n        ans+=j\n        i+=1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile (t>0):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n    a=[]\n    b=[]\n    for i in arr:\n        if (i not in a):a.append(i)\n        else:b.append(i)\n    i=0\n    j=0\n    while (i in a):\n        i+=1\n    while (j in b):\n        j+=1\n\n    print(i+j)\n    t-=1"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong double PI = 3.14159265359;\nlong long inf = 1000000000000000007;\nlong long mod = 1000000007;\nlong long mod1 = 998244353;\nconst bool multi = 1;\nlong long ile[107];\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long tt;\n  if (multi)\n    cin >> tt;\n  else\n    tt = 1;\n  while (tt--) {\n    for (long long i = 0; i <= 100; i++) ile[i] = 0;\n    long long n, x;\n    cin >> n;\n    for (long long i = 0; i < n; i++) {\n      cin >> x;\n      ile[x]++;\n    }\n    long long a, b, it = 0;\n    while (ile[it] >= 1) it++;\n    a = it, it = 0;\n    while (ile[it] >= 2) it++;\n    b = it;\n    cout << a + b << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int n;\n    cin >> n;\n    vector<int> arr(101, 0);\n    for (int j = 0; j < n; j++) {\n      int temp;\n      cin >> temp;\n      arr[temp]++;\n    }\n    int count1 = 0, count2 = 0, flag = 0;\n    for (int j = 0; j < n; j++) {\n      if (arr[j] == 0) {\n        cout << count1 + count2 << endl;\n        break;\n      }\n      if (arr[j] > 0) {\n        if (arr[j] >= 2 && flag == 0) {\n          count1 = j + 1;\n          count2 = j + 1;\n        }\n        if (arr[j] == 1 || flag == 1) {\n          count1 = j + 1;\n          flag = 1;\n        }\n      }\n      if (j == n - 1) {\n        cout << count1 + count2 << endl;\n        break;\n      }\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    data = [0]*101\n    for i in range(n):\n        data[a[i]]+=1\n\n    M = -1\n    m = -1\n    for i in range(101):\n        if data[i]<=1:\n            m = i\n            break\n\n    for i in range(101):\n        if data[i]==0:\n            M = i\n            break\n\n    print(m+M)\n"
        },
        {
            "language": 3,
            "solution": "k = int(input())\n\nfor _ in range(k):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    \n    arr.sort()\n    \n    check = 0\n    b_check = 0\n    stack = 0\n    a, b = 0, 0\n    \n    for e in arr:\n        if e == check:\n            stack += 1\n            if stack >= 3:\n                continue\n        elif e != check:\n            check += 1\n            stack = 1\n            if e == a and e != b:\n                b_check = 1\n            elif e != a and e != b:\n                break\n        if check == a and stack == 1:\n            a += 1\n        elif check == b and stack == 2 and b_check == 0:\n            b += 1\n        \n    print(a+b)"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nfrom sys import stdin,stdout\nfrom collections import Counter\nfrom itertools import permutations\nimport bisect\nimport math\nI=lambda: map(int,stdin.readline().split())\nI1=lambda: stdin.readline()\n#(a/b)%m =((a%m)*pow(b,m-2)%m)%m\n\nfor _ in range(int(I1())):\n    n=int(I1())\n    a=list(I())\n    m=max(a)\n    d={i:0 for i in range(101)}\n    for x in a:\n        d[x]+=1 \n    ans=0\n    #print(d)\n    for x in range(101):\n        if(d[x]==0):\n            ans+=x\n            break\n        d[x]-=1\n    #print(d)\n    for x in range(101):\n        if(d[x]==0):\n            ans+=x\n            break\n        d[x]-=1\n    #print(d)      \n    print(ans)\n            \n            \n    "
        },
        {
            "language": 3,
            "solution": "\"\"\"\n                            pppppppppppppppppppp\n                         ppppp  ppppppppppppppppppp\n                      ppppppp    ppppppppppppppppppppp\n                      pppppppp  pppppppppppppppppppppp\n                      pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n       ppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppp\n      pppppppppppppppppppppppppppppppppppppppppppppppp  ppppppppppppppppppppp\n     ppppppppppppppppppppppppppppppppppppppppppppppppp  pppppppppppppppppppppp\n    ppppppppppppppppppppppppppppppppppppppppppppppp    pppppppppppppppppppppppp\n   pppppppppppppppppppppppppppppppppppppppppppppp     pppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppppppppppppppppppppp      pppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppppppp               pppppppppppppppppppppppppppppppp\n  pppppppppppppppppppppppppppp     pppppppppppppppppppppppppppppppppppppppppppppp\n  ppppppppppppppppppppppppppp    pppppppppppppppppppppppppppppppppppppppppppppppp\n    pppppppppppppppppppppppp  pppppppppppppppppppppppppppppppppppppppppppppppppp\n     ppppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppppp\n      pppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppppp\n       ppppppppppppppppppppp  ppppppppppppppppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppppp\n                              pppppppppppppppppppppppppppppppp\n                              pppppppppppppppppppppp  pppppppp\n                              ppppppppppppppppppppp    ppppppp\n                                 ppppppppppppppppppp  ppppp\n                                    pppppppppppppppppppp\n\"\"\"\n\n\nimport sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\nfrom decimal import Decimal\n# sys.setrecursionlimit(pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(var, end=\"\\n\"): sys.stdout.write(str(var)+end)\ndef outa(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var)) + end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return map(int, data().split())\ndef ssp(): return map(str, data().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nfor _ in range(int(data())):\n    n = int(data())\n    c = C(l())\n    answer = 0\n    for i in range(101):\n        if not c[i]:\n            answer = i\n            break\n        c[i] -= 1\n    for i in range(101):\n        if not c[i]:\n            answer += i\n            break\n    out(answer)\n"
        },
        {
            "language": 3,
            "solution": "inputed = []\ncount = int(input())\n\nlinesPer = 2\nfor i in range(count*linesPer):\n    inputed.append(input())\n\nfor i in range(count):\n    try:\n        inputed[1] = inputed[1].split(\" \")\n        inputed[1] = [int(x) for x in inputed[1]]\n        countArr = [0 for x in inputed[1]]\n        maxA = 0\n        maxB = 0\n        for x in inputed[1]:\n            if x < len(countArr):\n                countArr[x] += 1\n        #print(countArr)\n        for i in range(len(countArr)):\n            if countArr[i] > 0:\n                maxA += 1\n                countArr[i] -= 1\n            else:\n                break\n\n        for i in range(len(countArr)):\n            if countArr[i] > 0:\n                maxB += 1\n            else:\n                break\n        print(maxA + maxB)\n    except:\n        print(0)\n    \n    #print(\"maxA\",maxA,\"maxB\",maxB)    \n    \n                   \n    for i in range(linesPer):\n        del inputed[0]\n"
        },
        {
            "language": 3,
            "solution": "if __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        counter = [0 for _ in range(102)]\n        for i in a:\n            counter[i] += 1\n        mex_a = mex_b = 0\n        flag1 = flag2 = True\n        for i in range(len(counter)):\n            if counter[i] == 0:\n                mex_a = i if flag1 else mex_a\n                mex_b = i\n                break\n            elif counter[i] == 1:\n                if not flag1:\n                    mex_b = i\n                    break\n                else:\n                    flag1 = False\n                    mex_a = i\n        res1 = mex_a + mex_b\n\n        mex_a = mex_b = 0\n        flag1 = flag2 = True\n        for i in range(len(counter)):\n            if counter[i] == 0:\n                mex_a = i if flag1 else mex_a\n                mex_b = i\n                break\n            elif counter[i] == 1:\n                if flag1:\n                    flag1 = False\n                    mex_a = i\n        res2 = mex_a + mex_b\n        print(max(res1, res2))\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class A {\n    \n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner scn = new Scanner(System.in);\n\t\t\n\t\tint t = scn.nextInt();\n\t\t\n\t\twhile(t-->0){\n\t\tint n = scn.nextInt();\n\t\t\t\n\t\t\tint arr[] = new int[n];\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tarr[i] = scn.nextInt();\n\t\t\t}\n\t\t\t\n\t\t\tHashSet<Integer> one = new HashSet<>(), two = new HashSet<>();\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\t\n\t\t\t\tif(one.contains(arr[i])){\n\t\t\t\t\ttwo.add(arr[i]);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tone.add(arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(mex(one)+mex(two));\n\t\t}\n\t\t\n\t}\n\t\n\tstatic int mex(HashSet<Integer> hs){\n\t\t\n\t\tfor(int i=0;i<=101;i++){\n\t\t\tif(!hs.contains(i)){\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn 1;\n\t}\n\tstatic int gcd(int a,int b){\n\t\t\n\t\tif(b == 0) return a;\n\t\t\n\t\treturn gcd(b,a%b);\n\t}\n\t\n\tstatic int helper(String x,String y,int z){\n\t\t\n\t\tint a = Integer.parseInt(x);\n\t\tint b = Integer.parseInt(y);\n\t\t\n\t\tif(a%b == 0){\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tif(x.length()>=7){\n\t\t\treturn a;\n\t\t}\n\t\tfor(int i=0;i<=9;i++){\n\t\t\tSystem.out.println(x+i);\n\t\t\thelper(x+i,y,z);\n\t\t}\n\t\t\n\t\treturn a;\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))\n\n    cnt = [0] * 101\n    for x in data:\n        cnt[x] += 1\n\n    first = 0\n    while True:\n        if cnt[first] >= 1:\n            cnt[first] -= 1\n        else:\n            break\n        first += 1\n\n    second = 0\n    while True:\n        if cnt[second] >= 1:\n            cnt[second] -= 1\n        else:\n            break\n        second += 1\n    \n    print(first + second)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int,input().split()))\n    a,b = set(),set()\n    for i in s:\n        if i in a:\n            b.add(i)\n        else:\n            a.add(i)\n    mexa = 0\n    for i in range(n+1):\n        if i not in a:\n            mexa = i\n            break\n    mexb = 0\n    for i in range(n+1):\n        if i not in b:\n            mexb = i\n            break\n    \n    print(mexa+mexb)\n\n"
        },
        {
            "language": 4,
            "solution": "\n\n\nimport java.util.*;\nimport java.io.*;\n\npublic class Main \n\n{ \nstatic int mod=(int)Math.pow(10, 9)+7;\n\t static FastReader sc=new FastReader(); \n\t \n\t\t  public static void main(String[] args) \n    {\n\t\t\t  \n\t\t\t  int t = i(); \n\t\t\t  //StringBuffer sb=new StringBuffer(\"\");\n\t\t\t  while (t-- > 0)\n\t\t\t  { \n\t\t\t\t  int n=i();\t\n\t\t\t\t  int A[]=input(n);\n\t\t\t\t  HashMap<Integer,Integer> map=new HashMap<Integer, Integer>();\n\t\t\t\t  for(int i : A) {\n\t\t\t\t\t  if(map.containsKey(i)) {\n\t\t\t\t\t\t  map.put(i, map.get(i)+1);\n\t\t\t\t\t\t  continue;\n\t\t\t\t\t  }\n\t\t\t\t\t  map.put(i, 1);\n\t\t\t\t  }\n\t\t\t\t  int sum=0;\n\t\t\t\t  for(int i=0;i>=0;i++) {\n\t\t\t\t\t  if(!map.containsKey(i)) {\n\t\t\t\t\t\t  sum+=i;\n\t\t\t\t\t\t  break;\n\t\t\t\t\t  }\n\t\t\t\t\t  else {\n\t\t\t\t\t\t  map.put(i,map.get(i)-1);\n\t\t\t\t\t  }\n\t\t\t\t  }\n\t\t\t\t  for(int i=0;i>=0;i++) {\n\t\t\t\t\t  if(map.containsKey(i) && map.get(i)<=0 || !map.containsKey(i)) {\n\t\t\t\t\t\t  sum+=i;\n\t\t\t\t\t\t  break;\n\t\t\t\t\t  }\n\t\t\t\t  }\n\t\t\t\t  System.out.println(sum);\n\t\t        \t\n\t\t\t\t\n\t\t\t  }\n\n//\t\t        System.out.println(sb.toString());\n\t\t        \t\n\t\t\t\t\n    }\n\t\t  \n\t\t  \nstatic int[] input(int n) {\n\tint A[]=new int[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.nextInt();\n\t   }\n\t   return A;\n   }\nstatic long[] inputL(int n) {\n\tlong A[]=new long[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.nextLong();\n\t   }\n\t   return A;\n   }\nstatic String[] inputS(int n) {\n\tString A[]=new String[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.next();\n\t   }\n\t   return A;\n   }\n\n\nstatic void input(int A[],int B[]) {\n\t   for(int i=0;i<A.length;i++) {\n\t\t   A[i]=sc.nextInt();\n\t\t   B[i]=sc.nextInt();\n\t   }\n}\nstatic long mod(long x) {\n\t  return ((x%mod + mod)%mod);\n}\n\n     static int i() {\n    \t return sc.nextInt();\n     }\n     static String s() {\n    \t return sc.next();\n     }\n     static long l() {\n    \t return sc.nextLong();\n     }  \n     static void sort(int[] arr){\n        int n = arr.length;\n        Random rnd = new Random();\n        for(int i=0; i<n; ++i){\n            int tmp = arr[i];\n            int randomPos = i + rnd.nextInt(n-i);\n            arr[i] = arr[randomPos];\n            arr[randomPos] = tmp;\n        }\n        Arrays.sort(arr);\n     }\n  \n        \n        \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n} \n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class mex\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int q=0;q<t;q++)\n        {\n            int n=sc.nextInt();\n            int a1[]=new int[101];\n            int a2[]=new int[101];\n            Arrays.fill(a1,-1);\n            Arrays.fill(a2,-1);\n            for(int i=0;i<n;i++)\n            {\n                int x=sc.nextInt();\n                if(a1[x]==-1)\n                a1[x]=x;\n                else\n                a2[x]=x;\n            }\n            int sum=0,w=0,r=0;\n            for(int i=0;i<101;i++)\n            {\n                if(w==0)\n                {\n                if(a1[i]==-1)\n                {\n                    sum=sum+i;\n                    w=1;\n                }\n                }\n                if(r==0)\n                {\n                if(a2[i]==-1)\n                {\n                    sum=sum+i;\n                    r=1;\n                }\n                }\n                if(r==1 && w==1)\n                break;\n            }\n            System.out.println(sum);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\n\ndef gcd(a,b): \n\n    #  a>b\n    if(b==0): \n        return a \n    else: \n        return gcd(b,a%b)\n\ndef prime(n) :  \n    if (n <= 1) : \n        return False\n    if (n <= 3) : \n        return True\n  \n    # This is checked so that we can skip  \n    # middle five numbers in below loop \n    if (n % 2 == 0 or n % 3 == 0) : \n        return False\n  \n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n  \n    return True\n\n\ndef divisors(n) : \n      \n    # Note that this loop runs till square root \n    i = 1\n    div = []\n    while i <= math.sqrt(n): \n          \n        if (n % i == 0) : \n              \n            # If divisors are equal, print only one \n            if (n / i == i) : \n                div.append(i)\n            else : \n                # Otherwise print both \n                div.append(i)\n                div.append(n//i) \n                \n               \n                \n        i = i + 1\n    return div\n    \ndef solve() :\n    \n    for _ in range(int(input())) :\n        \n        n = int(input()) \n        \n        arr = list(map(int,input().split()))\n        \n        cnt = [0]*101 \n        for i in arr :\n            \n            cnt[i] += 1 \n        ans = 0   \n        flag1 = 1\n        flag2 = 1\n        for i in range(len(cnt)) :\n            \n            if cnt[i]==0 and flag1==1:\n                ans = ans + i \n                flag1 = 0\n                \n            if cnt[i]<=1 and flag2==1 :\n                \n                ans = ans + i \n                flag2 = 0\n                \n            if flag1==0 and flag2==0 :\n                break \n            \n        print(ans)\n            \n            \n                \n            \n                \n  \ndef main():\n    \n    solve()\n    pass\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n\n    a = 0\n    br = 0\n    g=True\n   \n    for j in range(0, max(arr) + 1):\n        if arr.count(j) >= 2 and g==True:\n            a = j + 1\n            br = j + 1\n        elif arr.count(j)>= 1 and abs(j - a) == 0 :\n\n            g=False\n            a = j + 1\n        else:\n            break\n\n   \n    print(br + a)\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    ar = []\n    for i in a:\n        if a.count(i) > 1:\n            ar.append(i)\n    ai = dict.fromkeys(ar)\n    l = dict.fromkeys(a)\n    ai = sorted(ai)\n    l = sorted(l)\n    c = 0\n    b = 0\n    if 0 in ai:\n        for i in range(len(ai)):\n            if i == ai[i]:\n                c+=1\n            else:\n                break\n    elif len(ai) == 0:\n        c = 0\n    else:\n        c = 0\n\n    if 0 in l:\n        for i in range(len(l)):\n            if i == l[i]:\n                b += 1\n            else:\n                break\n    elif len(l) == 0:\n        b = 0\n    else:\n        b = 0\n\n    print(c+b)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict,Counter\nfrom math import ceil,floor,log2\n#n,k = map(int,input().split())\n#a = sorted(list(map(int,input().split())))\n#a = list(map(int,input().split()))\nalph = \"abcdefghijklmnopqrstuvwxyz\"\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    c = Counter(a)\n    el = sorted(list(set(a)))\n    total = 0\n    added = False\n    prev = -1\n    count = 0\n    for x in el:\n        if x-2>=prev:\n            break\n        else:\n            count+=1\n            if c[x]==1 and not added:\n                total+=count-1\n                added = True\n        prev = x\n        #print (count,c[x],x,total)\n    if added:\n        total+=count\n    else:\n        total+=count*2\n    print (total)\n    #break\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e2 + 5;\nconst int MAX = 1e5 + 5;\nconst int MOD = 1e9 + 7;\nconst long long INF = 1e14;\nint test, n, x, y;\nint f[N];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> test;\n  while (test--) {\n    cin >> n;\n    for (int i = 0; i <= n; ++i) {\n      f[i] = 0;\n    }\n    for (int i = 1; i <= n; ++i) {\n      cin >> x;\n      if (x <= n) {\n        ++f[x];\n      }\n    }\n    x = -1;\n    y = -1;\n    for (int i = 0; i <= n; ++i) {\n      if (f[i] == 0) {\n        if (x == -1) {\n          x = i;\n        }\n        if (y == -1) {\n          y = i;\n        }\n        break;\n      }\n      if (f[i] == 1) {\n        if (i == 0 || x == i) {\n          x = i + 1;\n          if (y == -1) {\n            y = 0;\n          }\n        } else {\n          if (i == 0 || y == i) {\n            ++y;\n          } else {\n            break;\n          }\n        }\n      } else {\n        if (i == 0 || x == i) {\n          x = i + 1;\n        }\n        if (i == 0 || y == i) {\n          y = i + 1;\n        }\n        if (x != i + 1 && y != i + 1) {\n          break;\n        }\n      }\n    }\n    cout << x + y << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n  u = input()\n  nums = list(map(int,input().split()))\n  A = [0 for _ in range(101)]\n  B = [0 for _ in range(101)]\n  for i in nums:\n    if(A[i] == 0):\n      A[i] = 1\n    else:\n      B[i] = 1\n  A_stop = 1000\n  B_stop = 1000\n  for i in range(101):\n    if (A_stop == 1000) and A[i] == 0:\n      A_stop = i\n    if (B_stop == 1000) and B[i] == 0:\n      B_stop = i\n  A_stop = min(A_stop,100)\n  B_stop = min(B_stop,100)\n  print(A_stop + B_stop)"
        },
        {
            "language": 3,
            "solution": "import collections\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(map(int,input().split()))\n    \n\nt = inp()\n\nfor _ in range(t):\n    n = inp()\n    l = inlt()\n    a, b = set(), set()\n    for num in l:\n        if num not in a:\n            a.add(num)\n        else:\n            b.add(num)\n\n    res = 0\n    afound = bfound = False\n    for i in range(0, 101):\n        if not afound and i not in a:\n            res += i\n            afound = True\n        if not bfound and i not in b:\n            res += i\n            bfound = True\n        if afound and bfound:\n            print(res)\n            break\n            \n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = [0 for i in range(105)]\n    for i in a:\n        l[i]+=1\n    s = 0\n    mn = 2\n    for i in range(105):\n        if l[i]==0:\n            break\n        if l[i]>=mn:\n            s+=mn\n        elif l[i]<mn:\n            mn = l[i]\n            s+=mn\n    print(s)\n"
        },
        {
            "language": 3,
            "solution": "# import sys\n# input = lambda: sys.stdin.readline().rstrip()\nimport sys\nimport math\ninput = sys.stdin.readline\nfrom collections import deque\nfrom queue import LifoQueue\n\ndef binary_search(a, n):\n  L = 0\n  R = len(a)-1\n  while L<=R:\n    mid = L+(R-L)//2\n    if a[mid]==n:\n      return mid\n    elif a[mid]<n:\n      L = mid+1\n    else:\n      R = mid-1\n  return -1\n\nfor _ in range(int(input())):\n  n = int(input())\n  a = list(map(int, input().split()))\n  a.sort()\n  c = [a[0]]\n  I = [0]\n  for i in range(n):\n      if c[-1]!=a[i] and a[i]==c[-1]+1:\n        c.append(a[i])\n        I.append(i)\n  k = 0\n  for i in I:\n    a.pop(i-k)\n    k+=1\n  a = list(set(a))\n  a.sort()\n  # a.append(10**4)\n  ans = 0\n  for i in range(len(a)):\n    if i!=a[i]:\n      if i-1>=0:\n        ans+=a[i-1]+1\n      else:\n        ans+=0\n      break\n    elif i==len(a)-1:\n      ans+=a[i]+1\n  for i in range(len(c)):\n    if i!=c[i]:\n      if i-1>=0:\n        ans+=c[i-1]+1\n      else:\n        ans+=0\n      break\n    elif i==len(c)-1:\n      ans+=c[i]+1\n  # print(a,c)\n  print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e2;\nint t, n;\nint freq[N + 2];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  clock_t ck;\n  ck = clock();\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    memset(freq, 0, sizeof(freq));\n    for (int i = 1; i <= n; i++) {\n      int x;\n      cin >> x;\n      freq[x]++;\n    }\n    int a, b;\n    a = b = 0;\n    for (int i = 0; i <= N && freq[i] > 0; i++) {\n      a = i + 1;\n    }\n    for (int i = 0; i <= N && freq[i] > 1; i++) {\n      b = i + 1;\n    }\n    cout << a + b << '\\n';\n  }\n  ck = clock() - ck;\n  cerr << \"It took \" << 1.0 * ck / CLOCKS_PER_SEC << \" sec\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\nfrom collections import *\n\nrint = lambda: int(stdin.readline())\nrints = lambda: [int(x) for x in stdin.readline().split()]\nout = []\n\nfor _ in range(int(input())):\n    n, a, tem = rint(), rints(), []\n    mem = Counter(a)\n    for i in range(102):\n        if mem[i] == 0:\n            if not tem:\n                tem = [i, i]\n            else:\n                tem.append(i)\n            break\n\n        elif mem[i] == 1 and not tem:\n            tem.append(i)\n\n    out.append(tem[0] + tem[1])\n\nprint('\\n'.join(map(str, out)))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class A {\n    public static void main(String[] args) throws Exception{\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n        int t = Integer.parseInt(in.readLine());\n        for(int i = 0; i < t; i++){\n            int n = Integer.parseInt(in.readLine());\n            StringTokenizer st = new StringTokenizer(in.readLine());\n            int[] a = new int[n];\n            for(int j = 0; j < n; j++){\n                a[j] = Integer.parseInt(st.nextToken());\n            }\n            Arrays.sort(a);\n            Map<Integer, Integer> occs = new HashMap<>();\n            for(int j: a){\n                if(!occs.containsKey(j)){\n                    occs.put(j, 1);\n                }\n                else{\n                    occs.put(j, occs.get(j) + 1);\n                }\n            }\n            List<Integer> A = new ArrayList<>(), B = new ArrayList<>();\n            List<Integer> baddies = new ArrayList<>();\n            for(int j: occs.keySet()){\n                if(occs.get(j) >= 2){\n                    for(int k = 0; k < occs.get(j)/2; k++){\n                        A.add(j);\n                    }\n                    for(int k = 0; k < occs.get(j)/2; k++){\n                        B.add(j);\n                    }\n                }\n                if(occs.get(j) % 2 == 1){\n                    baddies.add(j);\n                }\n            }\n            List<Integer> tmpA = new ArrayList<>(A);\n            List<Integer> tmpB = new ArrayList<>(B);\n            tmpA.addAll(baddies);\n            Collections.sort(tmpA);\n            int mex = 0;\n            for(int j: tmpA){\n                if(j == mex){\n                    mex++;\n                }\n            }\n            int mex1 = 0;\n            for(int j : tmpB){\n                if(j == mex1){\n                    mex1++;\n                }\n            }\n            int ans = mex + mex1;\n            for(int j = 1; j < baddies.size(); j++){\n                tmpA = new ArrayList<>(A);\n                tmpB = new ArrayList<>(B);\n                for(int k = 0; k < j; k++){\n                    tmpA.add(baddies.get(k));\n                }\n                for(int k = j; k < baddies.size(); k++){\n                    tmpB.add(baddies.get(k));\n                }\n                Collections.sort(tmpA);\n                Collections.sort(tmpB);\n                int Amex = 0, Bmex = 0;\n                for(int k: tmpA){\n                    if (Amex == k) {\n                        Amex++;\n                    }\n                }\n                for(int k: tmpB){\n                    if(Bmex == k){\n                        Bmex++;\n                    }\n                }\n                ans = Math.max(ans, Amex + Bmex);\n            }\n            out.println(ans);\n        }\n        out.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "testcases = int(input())\n\nfor _ in range(testcases):\n    cnt = [0 for i in range(0,101)]\n    \n    n = int(input())\n    l = list(map(int,input().split()))\n    \n    for i in l :\n        cnt[i]+=1 \n    \n    a_mex,i = 0,0 \n    while(True):\n        if(cnt[i] == 0):\n            a_mex = i \n            break \n        else:\n            cnt[i]-=1\n        i+=1 \n    b_mex,i = 0 , 0 \n    \n    while(True):\n        if(cnt[i] == 0):\n            b_mex = i \n            break \n        i+=1 \n    print(a_mex + b_mex)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\n\ndef mex(ar):\n    n = len(ar)\n    have = [False] * (n + 1)\n    for item in ar:\n        if item <= n:\n            have[item] = True\n    return have.index(False)\n\nt = int(stdin.readline())\nfor case in range(t):\n    n = int(stdin.readline())\n    xx = list(map(int, stdin.readline().split()))\n    count = [0] * 101\n    for item in xx:\n        count[item] += 1\n    mex_a = mex(xx)\n    b = []\n    for i in range(101):\n        if count[i] >= 2:\n            b.append(i)\n    stdout.write(\"{}\\n\".format(mex_a + mex(b)))\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct point {\n  int x, y, ind;\n  char ch;\n};\nlong long mod = 1e9 + 7;\nlong long powmod(long long a, long long b) {\n  long long res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nlong long fact[13];\nvoid factorial() {\n  fact[0] = 1;\n  for (long long i = 1; i < 12; i++) fact[i] = (fact[i - 1] * i);\n}\nbool cmp(point A, point B) {\n  if (A.x != B.x) return A.x < B.x;\n  return A.y < B.y;\n}\nvector<long long> sie;\nlong long spf[1000007 + 7];\nvoid sieve() {\n  for (long long i = 2; i < 1000007; i++) {\n    if (spf[i] == 0) {\n      spf[i] = i;\n      sie.push_back(i);\n    }\n    for (long long j = 0; j < ((long long)(sie).size()) &&\n                          i * sie[j] <= 1000007 && sie[j] <= spf[i];\n         j++)\n      spf[i * sie[j]] = sie[j];\n  }\n}\nconst long long mx = 2e5 + 9;\nlong long n, a, b, _, ans, c, _1, _2, m, an, k, need, shuru, _3, _c, _a, _b,\n    way, _0, mex, q, d, temp;\ndouble DF, AF;\nstring st, good, orginal[2];\nlong long ar[mx], co[mx];\nlong long sol(long long x, long long y) { return _1; }\nvoid f() {\n  for (long long i = 0; i < 103; i++) co[i] = 0;\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    cin >> _;\n    co[_]++;\n  }\n  ans = 0;\n  _ = 0;\n  for (long long i = 0; i < 102; i++) {\n    if (co[i] >= 2) continue;\n    if (co[i] && _ == 0) {\n      _ = 1;\n      ans = i;\n    } else if (co[i] == 0 && _ == 1) {\n      _ = 2;\n      ans += i;\n    } else if (co[i] == 0 && _ == 0) {\n      _ = 2;\n      ans = i + i;\n    }\n    if (_ == 2) break;\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  cout << setprecision(12);\n  long long _t;\n  cin >> _t;\n  for (long long w = 0; w < _t; w++) f();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))[:n]\n    a=sorted(a)\n    b,c=[],[]\n    for i in range(n):\n        if a[i] not in b:\n            b.append(a[i])\n        else:\n            c.append(a[i])\n    x,y=0,0\n    while x in b:\n        x=x+1\n    while y in c:\n        y=y+1\n    print(x+y)\n    \n            \n        \n            \n"
        },
        {
            "language": 3,
            "solution": "def solve(a):\n    x, y = -1, -1\n    for i in range(101):\n        if a.count(i) == 0:\n            return 2*i if x == -1 else x + i\n        elif a.count(i) == 1:\n            if x == -1:\n                x=i\n    return 101 + x if x != -1 else 101 + 102\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(\" \")))\n    a.sort()\n    print(solve(a))\n"
        },
        {
            "language": 3,
            "solution": "from __future__ import division, print_function\n# import threading\n# threading.stack_size(2**27)\n# import sys\n# sys.setrecursionlimit(10**7)\n# sys.stdin = open('inpy.txt', 'r')\n# sys.stdout = open('outpy.txt', 'w')\nfrom sys import stdin, stdout\nimport bisect            #c++ upperbound\nimport math\nimport heapq\ni_m=9223372036854775807\ndef inin():\n    return int(input())\ndef stin():\n    return input()\ndef spin():\n    return map(int,stin().split())\ndef lin():                           #takes array as input\n    return list(map(int,stin().split()))\ndef matrix(n):\n    #matrix input\n    return [list(map(int,input().split()))for i in range(n)]\n\n################################################\ndef count2Dmatrix(i,list):\n    return sum(c.count(i) for c in list)\n\ndef modinv(n,p):\n    return pow(n,p-2,p)\n\ndef GCD(x, y): \n    x=abs(x)\n    y=abs(y)\n    if(min(x,y)==0):\n        return max(x,y)\n    while(y): \n        x, y = y, x % y \n    return x\ndef Divisors(n) : \n    l = []  \n    for i in range(1, int(math.sqrt(n) + 1)) :\n        if (n % i == 0) : \n            if (n // i == i) : \n                l.append(i) \n            else : \n                l.append(i)\n                l.append(n//i)\n    return l\nprime=[]\ndef SieveOfEratosthenes(n): \n    global prime\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    f=[]\n    for p in range(2, n): \n        if prime[p]: \n            f.append(p)\n    return f\nq=[]       \ndef dfs(n,d,v,c):\n    global q\n    v[n]=1\n    x=d[n]\n    q.append(n)\n    j=c\n    for i in x:\n        if i not in v:\n            f=dfs(i,d,v,c+1)\n            j=max(j,f)\n            # print(f)\n    return j\n# d = {}\n \n\"\"\"*******************************************************\"\"\"\nfor _ in range(inin()):\n    n = inin()\n    a  = lin()\n    a.sort()\n\n    x, y = 0, 0\n\n    for i in a:\n        if x == i:\n            x += 1\n        elif y == i:\n            y += 1\n    print(x + y)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n;\n    cin >> n;\n    int a[102], x, i, j;\n    for (i = 0; i <= 100; i++) {\n      a[i] = 0;\n    }\n    while (n--) {\n      cin >> x;\n      a[x]++;\n    }\n    for (i = 0; a[i] > 1; i++)\n      ;\n    for (j = i; a[j] > 0; j++)\n      ;\n    cout << (j + i);\n    cout << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n=int(input())\n    lis=list(map(int,input().split()))\n    lis.sort()\n    a=[-1]\n    b=[-1]\n    for i in lis:\n        if a[-1]!=i:\n            a.append(i)\n        elif b[-1]!=i:\n            b.append(i)\n    i1=-1\n    for j in a:\n        if j!=i1:\n            break\n        else:\n            i1+=1\n    k1=-1\n    for j in b:\n        if j!=k1:\n            break\n        else:\n            k1+=1\n    print(i1+k1)\n\n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile t:\n    n=int(input())\n    arr=list(map(int,input().split()))\n    occr=[0]*101\n    for e in arr:\n        occr[e]+=1\n    ans=0\n    minb=102\n    for i in range(0,101):\n        if occr[i]==0:\n            mina=i\n            break\n    for i in range(0,101):\n        if occr[i]==1:\n            minb=i\n            break\n    if mina<minb or minb==102:\n        minb=mina\n    ans=mina+minb\n    print(ans)\n    t-=1"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n    static boolean use_n_tests = true;\n    static int stack_size = 1 << 27;\n\n    void solve(FastScanner in, PrintWriter out, int testNumber) {\n        int n = in.nextInt();\n        int[] a = new int[n];\n        int[] cnt = new int[102];\n        for (int i = 0; i < a.length; i++) {\n            a[i] = in.nextInt();\n            cnt[a[i]]++;\n        }\n        int m1 = 0, m2 = 0;\n        int i = 0;\n        boolean one = false;\n        while (cnt[i] != 0) {\n            if (cnt[i] < 2 || one) {\n                m1++;\n                one = true;\n            } else if (cnt[i] >= 2) {\n                m1++;\n                m2++;\n            }\n            i++;\n        }\n        out.println(m1 + m2);\n    }\n\n    // ****************************** template code ***********\n\n    static class Range {\n        int l, r;\n        int id;\n\n        public int getL() {\n            return l;\n        }\n\n        public int getR() {\n            return r;\n        }\n\n        public Range(int l, int r, int id) {\n            this.l = l;\n            this.r = r;\n            this.id = id;\n        }\n    }\n\n    static class Array {\n        static Range[] readRanges(int n, FastScanner in) {\n            Range[] result = new Range[n];\n            for (int i = 0; i < n; i++) {\n                result[i] = new Range(in.nextInt(), in.nextInt(), i);\n            }\n            return result;\n        }\n\n        static public Integer[] read(int n, FastScanner in) {\n            Integer[] out = new Integer[n];\n            for (int i = 0; i < out.length; i++) {\n                out[i] = in.nextInt();\n            }\n            return out;\n        }\n\n        static public int[] readint(int n, FastScanner in) {\n            int[] out = new int[n];\n            for (int i = 0; i < out.length; i++) {\n                out[i] = in.nextInt();\n            }\n            return out;\n        }\n    }\n\n    static class Graph {\n        static List<List<Integer>> create(int n) {\n            List<List<Integer>> graph = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                graph.add(new ArrayList<>());\n            }\n            return graph;\n        }\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(InputStream io) {\n            br = new BufferedReader(new InputStreamReader(io));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n    void run_t_tests() {\n        int t = in.nextInt();\n        int i = 0;\n        while (t-- > 0) {\n            solve(in, out, i++);\n        }\n    }\n\n    void run_one() {\n        solve(in, out, -1);\n    }\n\n    @Override\n    public void run() {\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n        if (use_n_tests) {\n            run_t_tests();\n        } else {\n            run_one();\n        }\n        out.close();\n    }\n\n    static FastScanner in;\n    static PrintWriter out;\n\n    public static void main(String[] args) throws InterruptedException {\n        Thread thread = new Thread(null, new Main(), \"\", stack_size);\n        thread.start();\n        thread.join();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\ni = 0\nwhile i < t:\n\n    n = int(input())\n    a = list(map(int, input().split()))\n    A = [0] * 101\n    Am = -1\n    Bm = -1\n\n    for j in a:\n        A[j] += 1\n    index = 0\n    while True:\n        while A[index] >= 2:\n            Am = index\n            Bm = index\n            index += 1\n        while A[index] >= 1:\n            Am = index\n            index += 1\n        print(Am + Bm + 2)\n        break\n        \n    \n    \n    i += 1\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  long long t;\n  cin >> t;\n  for (long long i = 0; i < t; i++) {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int j = 0; j < n; j++) {\n      cin >> a[j];\n    }\n    int occur[102];\n    for (int j = 0; j <= 101; j++) {\n      occur[j] = 0;\n    }\n    for (int j = 0; j < n; j++) {\n      occur[a[j]]++;\n    }\n    int ans = 0;\n    int one = 0;\n    for (int j = 0; j <= 101; j++) {\n      if (occur[j] >= 2) {\n      } else if (occur[j] == 1) {\n        if (one == 1) {\n          continue;\n        }\n        ans += j;\n        one = 1;\n      } else {\n        if (one == 1) {\n          ans += j;\n        } else {\n          ans += 2 * j;\n        }\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if arr[i] in d:\n            d[arr[i]] += 1\n        else:\n            d[arr[i]] = 1\n    mexa = 0\n    mexb = 0\n    flag = True\n    for i in range(max(arr)+1):\n        if i in d:\n            if d[i] > 1:\n                mexa = i+1\n                if flag:\n                    mexb = i+1\n            else:\n                mexa = i+1\n                flag = False\n        else:\n            break\n    print(mexa+mexb)\n\n\n        \n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import defaultdict\n\n#input driver\nname = sys.stdin.read()\n\njobGrid = []\nisJob = True\nrow = []\n\ngrid = name.split('\\n') \n\ngrid = grid[:-1]\n\nnumber_of_cases = int(grid[0])\n\nfor i in range(number_of_cases):\n   l = list(map(int,grid[i*2+2].split()))\n   sum1 = 0\n   sum2 = 0\n   l.sort()\n   newvalue = 0 \n   if(l[0] != 0):\n      print(0)\n      continue\n   for j,k in enumerate(l):\n      if(k - newvalue > 1):\n         sum1 = newvalue + 1\n         break\n      else:\n         newvalue = k\n         sum1 = newvalue + 1\n   \n   if(len(l) > 1 and l[1] != 0):\n      print(sum1)\n      continue\n   newvalue = 0 \n   twice = 0\n   for k in range(0, len(l), 1 ):\n      if(l[k] - newvalue > 1):\n         sum2 = newvalue + 1\n         break\n      else:\n         if(twice == 1 and sum2 != l[k]+1):\n            newvalue = l[k]\n            sum2 = newvalue + 1\n            twice = 0\n         elif(twice == 0 and sum2 != l[k] + 1):\n            twice = 1\n            \n   print(sum1+sum2)\n            \n\n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor ttt in range(t):\n\tn=int(input())\n\tf=list(map(int, input().split()))\n\td={}\n\tmax=0\n\tfor i in range(len(f)):\n\t\tif f[i] not in d.keys():\n\t\t\td[f[i]]=0\n\t\td[f[i]]+=1\n\t\tif f[i]>max:\n\t\t\tmax=f[i]\n\tk=0\n\tq=0\n\tfor i in range(max+2):\n\t\tif i not in d.keys() or d[i]==0:\n\t\t\tk+=(i*(2-q))\n\t\t\tbreak\n\t\telif d[i]==1:\n\t\t\tif q==0:\n\t\t\t\tk+=i\n\t\t\t\tq+=1\n\tprint(k)"
        },
        {
            "language": 3,
            "solution": "tc = int(input())\nfor t in range(tc):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))[:n]\n    arr = sorted(arr)\n    setA = []\n    setB = []\n    for num in arr:\n        if not setA:\n            setA.append(num)\n        elif num in setA:\n            setB.append(num)\n        else:\n            setA.append(num)\n    mexA = mexB = 0\n    if not setA:\n        mexA = 0\n    else:\n        for x in range(0, max(setA)+2):\n            if x not in setA:\n                mexA = x\n                break\n    if not setB:\n        mexB = 0\n    else:\n        for x in range(0, max(setB)+2):\n            if x not in setB:\n                mexB = x\n                break\n\n    print(mexA+mexB)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\n\npublic class A {\n\tpublic static void main(String[] args) {\n\t\tFastScanner fs = new FastScanner();\n\t\tint test_case = fs.nextInt();\n\t\tfor (int t = 0; t < test_case; t++) {\n\t\t\tint n = fs.nextInt();\n\t\t\tint[] a = fs.readArray(n);\n\t\t\tHashSet<Integer> used1 = new HashSet<Integer>(), used2 = new HashSet<Integer>();\n\t\t\tfor(int x : a) {\n\t\t\t\tif(used1.contains(x)) {\n\t\t\t\t\tused2.add(x);\n\t\t\t\t}else {\n\t\t\t\t\tused1.add(x);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(mex(used1) + mex(used2));\n\t\t}\n\t}\n\t\n\tstatic int mex(HashSet<Integer> s) {\n\t\tfor(int i = 0; i < 1000; i++) {\n\t\t\tif(!s.contains(i)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tthrow null;\n\t}\n\n\tstatic class FastScanner {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] readArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys \ninput = sys.stdin.readline\nfrom collections import defaultdict\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    mx = max(a)\n    freq = defaultdict(int)\n    for i in a:\n        freq[i] += 1\n    if freq[0]==0: print(0)\n    else:\n        ans = 0\n        mexa,mexb = 0,0\n        for i in range(max(a)+2):\n            if freq[i]==0:\n                if mexb:\n                    ans += i\n                else:\n                    ans = 2*i\n                break\n            elif freq[i]==1 and mexb==0:\n                mexb = 1\n                ans += i\n            if mexa==1 and mexb==1:\n                break\n        print(ans)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "#https://codeforces.com/problemset/problem/1406/A\nfor _ in range(int(input())):\n\tn=int(input())\n\tl=list(map(int,input().split()))\n\tl1,l2={},{}\n\tfor i in l:\n\t\tif i not in l1:\n\t\t\tl1[i]=1\n\t\telse:\n\t\t\tl2[i]=1\n\tl1=sorted(list(l1.keys()))\n\tl2=sorted(list(l2.keys()))\n\tm1,m2=None,None\n\tfor i in range(len(l1)):\n\t\tif i!=l1[i]:\n\t\t\tm1=i\n\t\t\tbreak\n\tif m1==None:\n\t\tm1=len(l1)\n\tfor i in range(len(l2)):\n\t\tif i!=l2[i]:\n\t\t\tm2=i\n\t\t\tbreak\n\tif m2==None:\n\t\tm2=len(l2)\n\tprint(m1+m2)\n\t\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse = False)\n\ts, b = 0, 0\n\tfor i in a:\n\t\tif s == i:\n\t\t\ts += 1\n\t\telif b == i:\n\t\t\tb += 1\n\tprint( b + s )\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    freq=[0]*101\n    for i in a:\n        freq[i]+=1\n    ans=0\n    for j in range(2):\n        for i in range(101):\n            if freq[i]==0:\n                ans+=i\n                break\n            else:\n                freq[i]-=1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nimport math\ninp = lambda : stdin.readline().strip()\n\nt = int(inp())\nfor _ in range(t):\n\tn = int(inp())\n\ta = [int(x) for x in inp().split()]\n\ta.sort()\n\tans = 0\n\ttwos = True\n\tones = True\n\tc = 0\n\twhile True:\n\t\tif a.count(c) < 2 and twos:\n\t\t\tans += c\n\t\t\ttwos = False\n\t\tif a.count(c) < 1 and ones:\n\t\t\tans += c\n\t\t\tones = False\n\t\tif twos == False and ones == False:\n\t\t\tbreak\n\t\tc += 1\t\n\tprint(ans)\t\t"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom collections import defaultdict as dd\ninput=stdin.readline\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort(reverse=True)\n    d=dd(int)\n    for i in a:\n        d[i]+=1\n    fl=0\n    ans=0\n    for i in range(102):\n        if fl>=2:\n            break\n        if fl==0 and d[i]==1:\n            ans+=i\n            fl+=1\n        if d[i]==0:\n            if fl==0:\n                ans+=2*i\n                fl=2\n            else:\n                ans+=i\n                fl=2\n    print(ans)\n    \n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    x=[int(x) for x in input().split()]\n    x.sort()\n    a=set(x)\n    b=[]\n    for item in a:\n        if x.count(item)>1:\n            b.append(item)\n    def func(x):\n        if x==[]:\n            return 0\n        for i in range(0,max(x)+2):\n            if i in x:\n                continue\n            else:\n                return i \n    print(func(a)+func(b))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class TaskA {\n    public static void main(String[] args) throws Exception {\n        Reader sc = new Reader();\n        PrintWriter pw = new PrintWriter(System.out);\n        \n        try {\n            int t = sc.nextInt();\n            while(t-->0) {\n                int n = sc.nextInt();\n                int[] a = new int[n];\n                TreeMap<Integer, Integer> tm = new TreeMap<>();\n                TreeMap<Integer, Integer> tm2 = new TreeMap<>();\n\n                for(int i=0 ; i<n ; i++) {\n                    int x = sc.nextInt();\n                    if(!tm.containsKey(x)) {\n                        tm.put(x, 1);\n                    }\n                    else {\n                        tm2.put(x, 1);\n                    }\n                }\n\n                int poin = 0;\n                while(tm.containsKey(poin)) {\n                    poin++;\n                }\n                int sum = 0;\n                sum += poin;\n\n                poin = 0;\n                while(tm2.containsKey(poin)) {\n                    poin++;\n                }\n\n                sum += poin;\n\n                pw.println(sum);\n\n\n\n            }\n        }\n        finally {\n            pw.flush();\n            pw.close();\n        }\n    }\n    \n    static class Reader {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while(!st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch(IOException io) {\n                    io.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a = {x:0 for x in range(101)}\n    n = int(input())\n    l = list(map(int,input().split()))\n    for i in l:\n        a[i]+=1\n\n    ans = 0\n    i = 0\n    while True:\n        if a[i] == 0:\n            ans+=i\n            break\n        i+=1\n    i = 0\n    while True:\n        if a[i]<=1:\n            ans+=i\n            break\n        i+=1\n\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nwhile T >= 1:\n    n = int(input())\n    arr = list(map(int,input().split()))\n    lst = [0] * (101) ; size = 2 ; res = 0\n    for i in arr:\n        lst[i] += 1\n    while size >= 1:\n        check = True\n        for i in range(0,101):\n            if lst[i] > 0: lst[i] -= 1\n            else:\n                res += i\n                break\n        size -= 1\n    print(res)\n\n    T -= 1"
        },
        {
            "language": 3,
            "solution": "#to run: ctrl+alt+b\n#del window: ctrl+w\n\ndef mex(a):\n\ta_s=list(set(a))\n\ta_s.sort()\n\n\tfor i in range(len(a_s)):\n\t\tif i!=a_s[i]:\n\t\t\treturn i\n\treturn len(a_s)\n\n\n\nfor _ in range(int(input())):\n\tn=int(input())\n\tarr=list(map(int,input().split()))\n\tif 0 not in arr:\n\t\tprint(0)\n\telif arr.count(0)==1:\n\t\tprint(mex(arr))\n\telse:\n\t\ta=mex(arr)\n\t\tfor i in range(a):\n\t\t\tarr.remove(i)\n\t\tb=mex(arr)\n\t\tprint(a+b)\n\t\t\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;   \nimport java.math.*;\npublic class Prac{     \n    static class InputReader { \n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n        public InputReader(InputStream st) {\n            this.stream = st;\n        } \n        public int read() {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) {\n                curChar = 0;\n                try {\n                    snumChars = stream.read(buf);\n                } \n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n        public int ni() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        } \n        public long nl() {\n            int c = read();\n            while (isSpaceChar(c)) {\n            c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        } \n        public int[] nia(int n) {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        } \n        public int[] nia1(int n) {\n            int a[] = new int[n+1];\n            for (int i = 1; i <=n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        } \n        public long[] nla(int n) {\n            long a[] = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nl();\n            }\n            return a;\n        } \n        public long[] nla1(int n) {\n            long a[] = new long[n+1];\n            for (int i = 1; i <= n; i++) {\n                a[i] = nl();\n            }\n            return a;\n        } \n        public Long[] nLa(int n) {\n            Long a[] = new Long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nl();\n            }\n            return a;\n        } \n        public Long[] nLa1(int n) {\n            Long a[] = new Long[n+1];\n            for (int i = 1; i <= n; i++) {\n                a[i] = nl();\n            }\n            return a;\n        } \n        public Integer[] nIa(int n) {\n            Integer a[] = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        } \n        public Integer[] nIa1(int n) {\n            Integer a[] = new Integer[n+1];\n            for (int i = 1; i <= n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        } \n        public String rs() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                    c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n        public String nextLine() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        } \n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        } \n    }\n    public static class Key {\n        private final int x, y;\n        public Key(int x, int y) {\n            this.x = x; this.y = y;\n        }\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (!(o instanceof Key)) return false;\n            Key key = (Key) o;\n            return x == key.x && y == key.y;\n        }\n        @Override\n        public int hashCode() {\n            int result = x;\n            result = 31 * result + y;\n            return result;\n        }\n    }\n    static class Pair{\n            int x,y;\n            Pair(int a,int b){\n                    x=a;y=b;\n            }\n//            @Override\n//            public int compareTo(Pair p) {\n//                    if(x==p.x) return y-p.y;\n//                    return x-p.x;\n//            }\n    }\n    static void shuffleArray(long temp[]){\n        int n = temp.length;\n        Random rnd = new Random();\n        for(int i=0; i<n; ++i){\n            long tmp = temp[i];\n            int randomPos = i + rnd.nextInt(n-i);\n            temp[i] = temp[randomPos];\n            temp[randomPos] = tmp;\n        }   \n    }\n    static long gcd(long a,long b){ return b==0?a:gcd(b,a%b);}\n    static long lcm(long a,long b){return (a/gcd(a,b))*b;}\n    static PrintWriter w = new PrintWriter(System.out);\n    static long mod1=998244353L,mod=1000000007;\n    //static int r[]={0,1,0,-1}, c[]={1,0,-1,0};\n    \n    public static void main(String [] args){\n        InputReader sc=new InputReader(System.in); \n        int t = sc.ni();\n        while(t -- > 0){\n            int n=sc.ni();\n            int arr[]=sc.nia(n);\n            Arrays.sort(arr);\n            int c[]=new int[200];\n            for(int i=0;i<n;i++){\n                c[arr[i]]++;\n            }\n            int req=2;\n            int ans=0;\n            for(int i=0;i<200;i++){\n                if(c[i]==0){\n                    ans+=i;\n                    break;\n                }\n                c[i]--;\n                \n            }\n            for(int i=0;i<200;i++){\n                if(c[i]==0){\n                    ans+=i;\n                    break;\n                }\n                c[i]--;\n                \n            }\n            w.println(ans);\n        }\n        \n        w.close();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.util.Scanner;\n\n\npublic class circle {\n\tstatic public void main(String args[]) throws IOException {\n\n\t\tScanner in=new Scanner(System.in);\n\t\tint T=in.nextInt();\n\t\tfor (int  t=0;t<T;t++) {\n\t\t\tint n=in.nextInt();\n\t\t\tint [] a=new int [n];\n\t\t\tfor (int i=0;i<n;i++) {\n\t\t\t\ta[i]=in.nextInt();\t\t\t\t\n\t\t\t}\n\t\t\tint[] b=new int [101];\n\t\t\tfor (int i:a) {\n\t\t\t\tb[i]++;\n\t\t\t}\n\t\t\t\n\t\t\tint x=2,ans=0;\n\t\t\tfor (int i=0;i<=100;i++) {\n\t\t\t\tx=Math.min(x, b[i]);\n\t\t\t\tans+=x;\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t\t\n\t\t\n\t\n\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    x=[]\n    lsta=[]\n    lstb=[]\n    i=int(input())\n    x= list(map(int, input().split()[:i]))\n    x.sort() \n    for j in x:\n        if j not in lsta:\n            lsta.append(j)\n        else:\n            lstb.append(j)\n    a=max(lsta)+2\n    try:\n        b=max(lstb)+2\n    except:\n        b=0\n        val2=0\n    for l in range(a):\n        if l not in lsta:\n            val1=l\n            break\n    for m in range(b):\n        if m not in lstb:\n            val2=m\n            break\n    print(val1+val2)\n        \n        \n        \n    \n    \n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n/**\n * @author adarshbhattarai on 2020-09-12\n * @project untitled\n */\npublic class A {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int testcases = sc.nextInt();\n        int[] output = new int[testcases];\n        for(int i=0;i<testcases;i++){\n            //System.out.println(\"Provide N\");\n            int N = sc.nextInt();\n            int[] M =  new int[N];\n            for(int j=0;j<N;j++){\n                M[j] =  Integer.parseInt(sc.next());\n            }\n            output[i]=solve(M);\n\n        }\n\n        for(int s : output)\n            System.out.println(s);\n    }\n\n    private static int solve(int[] m) {\n\n        int tSum = 0;\n\n        Arrays.sort(m);\n        Map<Integer,Integer> set = new HashMap<>();\n        for(int i=0;i<m.length;i++){\n            set.put(m[i],set.getOrDefault(m[i],0)+1);\n        }\n        int sum=-1;\n        int j=0;\n        int rot=0;\n        int miss = -1;\n        for(;j<m.length&&rot<2;j++){\n            if(!set.containsKey(j) && miss==-1){\n                return 2*j;\n            }\n           if(!set.containsKey(j)){\n               sum=j;\n               break;\n           }\n           if(set.containsKey(j)&&miss==-1 &&set.get(j)==1){\n               miss=j;\n           }\n        }\n\n\n        return sum==-1?m.length:sum+miss;\n\n\n    }\n\n    private static int[] readNextIntArray(Scanner sc, int N) {\n        int[] read = new int[N+1];\n        for(int i=0;i<N;i++){\n            String s = sc.next();\n            read[i] = Integer.parseInt(s);\n        }\n        return read;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt = int(input())\nwhile t :\n    t -= 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if 0 not in a : print(0)\n    else :\n        l = list(dict.fromkeys(a))\n        x,y = 0,0 ; x1,y1 = True , True\n        for i in l :\n            a.remove(i)\n        for i in range(101) :\n            if i not in l and x1:\n                x = i ; x1 = False \n            if i not in a and y1 :\n                y = i ; y1 = False \n            if x1 == False and y1 == False : break \n        print(x+y)                 \n                    "
        },
        {
            "language": 3,
            "solution": "def main(n,arr):\n    val1,val2 = 0,n\n    for i in range(n):\n        if arr.count(i) < 2:\n            val1 = i\n            break\n    for i in range(n):\n        if arr.count(i) == 0:\n            val2 = i\n            break\n    return val1+val2    \n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int,input().split()))\n        val = main(n,arr)\n        print(val)"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\n\nfor i in range(n):\n\tk = int(input().strip())\n\tall = [int(i) for i in input().strip().split()]\n\ttotal = {}\n\t\n\tfor i in all:\n\t\ttotal[i] = total.get(i,0)+1\n\t\n\tresa = 0\n\tresb = 0\n\tfor i in range(101):\n\t\tif i in total and total[resa]:\n\t\t\ttotal[resa]-=1\n\t\t\tresa+=1\n\t\telse:\n\t\t\tbreak\n\t\n\t\n\tfor i in range(101):\n\t\tif i in total and total[resb]:\n\t\t\ttotal[resb]-=1\n\t\t\tresb+=1\n\t\telse:\n\t\t\tbreak\n\t\n\tprint(resa+resb)\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    m=0\n    ans=0\n    f=0\n    for i in range(n+1):\n        k=a.count(i)\n        if k==1:\n            ans=i+1\n            f=1\n        elif k>1:\n            if f==0:\n                ans=i+1\n                m=i+1\n            else:\n                ans=i+1\n        elif k==0:\n            break\n    print(ans+m)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint mex(vector<int>& arr) {\n  if (arr.size() == 0) return 0;\n  if (arr[0] > 0) return 0;\n  for (int i = 1; i < arr.size(); i++) {\n    if (arr[i] != arr[i - 1] && arr[i] - arr[i - 1] > 1) return arr[i - 1] + 1;\n  }\n  return arr.back() + 1;\n}\nvoid solve() {\n  int n, re, ans = 0;\n  cin >> n;\n  map<int, int> arr;\n  vector<int> a, b;\n  for (int i = 0; i < n; i++) {\n    cin >> re;\n    arr[re]++;\n  }\n  for (auto x : arr) {\n    if (x.second & 1 && x.second > 1) {\n      a.push_back(x.first);\n      b.push_back(x.first);\n    } else if (x.second >= 2) {\n      a.push_back(x.first);\n      b.push_back(x.first);\n    } else if (x.second == 1) {\n      a.push_back(x.first);\n    }\n  }\n  cout << mex(a) + mex(b) << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint M = 1000000007;\nlong long n, m;\nvoid solve() {}\nvoid test() {\n  long long n;\n  cin >> n;\n  vector<int> a(n);\n  int count[101] = {\n      0,\n  };\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    count[a[i]]++;\n  }\n  bool flag = 1;\n  int ans = 0;\n  for (long long i = 0; i < 101; i++) {\n    if (count[i] == 0 && flag) {\n      cout << 2 * i << endl;\n      return;\n    }\n    if (count[i] == 1 && flag) {\n      ans += i;\n      flag = 0;\n    }\n    if (count[i] == 0 && !flag) {\n      ans += i;\n      cout << ans << endl;\n      return;\n    }\n  }\n}\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) test();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.util.Scanner;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\nimport java.math.BigInteger;\npublic class A670\n{\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tstatic void pn(Object o) {\n\t\tout.println(o);\n\t\tout.flush();\n\n\t}\n\n\tstatic void p(Object o) {\n\t\tout.print(o);\n\t\tout.flush();\n\t}\n\n\tstatic void pni(Object o) {\n\t\tout.println(o);\n\t\tSystem.out.flush();\n\t}\n\n\tstatic int I() throws IOException {\n\t\treturn sc.nextInt();\n\t}\n\n\tstatic long L() throws IOException {\n\t\treturn sc.nextLong();\n\t}\n\n\tstatic double D() throws IOException {\n\t\treturn sc.nextDouble();\n\t}\n\n\tstatic String S() throws IOException {\n\t\treturn sc.next();\n\t}\n\n\tstatic char C() throws IOException\n\t{\n\t\treturn sc.next().charAt(0);\n\t}\nstatic int[] Ai(int n) throws IOException\n{\n\tint[] arr = new int[n];\n\n\tfor (int i = 0; i < n; i++)\n\t\tarr[i] = I();\n\n\treturn arr;\n}\n\nstatic String[] As(int n) throws IOException\n{\n\tString s[] = new String[n];\n\n\tfor (int i = 0; i < n; i++)\n\t\ts[i] = S();\n\n\treturn s;\n}\n\nstatic long[] Al(int n) throws IOException \n{\n\tlong[] arr = new long[n];\n\n\tfor (int i = 0; i < n; i++)\n\t\tarr[i] = L();\n\n\treturn arr;\n}\npublic \tstatic void process() throws IOException\n{\nint n=I();\n\tint[] arr=Ai(n);\n\tint cnt[]= new int[101];\n\t\n\tfor(int s:arr)\n\t{\n\t\tcnt[s]++;\n    }\n\n\tint c=101;int d=101;\n\tfor(int i=0;i<101;i++)\n\t{\n\t\tif(cnt[i]==0)\n\t\t{\n\t\t\tc=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=0;i<101;i++)\n\t{\n\t\tif(cnt[i]==1)\n\t\t{\n\t\t\t\n\t\t\td=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t\n\tif(d<c)\n\t{\n\t\tpn(c+d);\n\t}\n\telse\n\t{\n\t\tpn(c+c);\n\t}\n}\n\npublic static void main(String[] args) throws IOException {\n\tint t = I();\n\twhile (t-- > 0)\n\n\t\tprocess();\n}\n\n\t}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Test{\n  public static void main(String args[] ) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        Scanner s = new Scanner(System.in);\n       int t=Integer.parseInt(br.readLine());\n       while(t!=0)\n       {\n          int n=Integer.parseInt(br.readLine());\n        String st=br.readLine();\n        int []arr=new int[n];\n        for(int i=0;i<n;i++)\n        arr[i]=Integer.parseInt(st.split(\" \")[i]);\n\n         int ans=0;\n     int[]hash=new int[101];\n     for(int  i=0;i<n;i++)hash[arr[i]]++;\n        for(int i=0;i<=100;i++)\n        {\n            if(hash[i]==0){ans+=i;break;}else hash[i]--;\n        }\n         for(int i=0;i<=100;i++)\n        {\n            if(hash[i]==0){ans+=i;break;}else hash[i]--;\n        }\n\n\n\n        System.out.println(ans);\n           t--;\n       }\n         \n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e6 + 5;\nconst long long mod = 1e9 + 7;\nlong long t, n, ans, k, cnt, s;\nlong long a[maxn];\nmap<long long, long long> m;\nint main() {\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    m.clear();\n    s = 0;\n    for (int i = 1; i <= n; i++) {\n      cin >> a[i];\n      m[a[i]]++;\n    }\n    sort(a + 1, a + 1 + n);\n    int flag = 0;\n    for (int i = 0; i <= 100; i++) {\n      if (m[i] >= 2)\n        continue;\n      else {\n        if (m[i] == 1 && flag == 0) {\n          flag = 1;\n          s += i;\n        }\n        if (m[i] == 0) {\n          if (flag == 0) {\n            s += i;\n          }\n          s += i;\n          break;\n        }\n      }\n    }\n    cout << s << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys as _sys\n\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n, = _read_ints()\n        a = tuple(_read_ints())\n        result = find_max_two_subsets_mex_sum(a)\n        print(result)\n\n\ndef _read_line():\n    result = _sys.stdin.readline()\n    assert result[-1] == \"\\n\"\n    return result[:-1]\n\n\ndef _read_ints():\n    return map(int, _read_line().split(\" \"))\n\n\ndef find_max_two_subsets_mex_sum(sequence):\n    sequence = sorted(sequence)\n    a_last = -1\n    b_last = -1\n    for x in sequence:\n        a_next = a_last + 1\n        if x == a_next:\n            a_last = x\n            continue\n        b_next = b_last + 1\n        if x == b_next:\n            b_last = x\n            continue\n    return (a_last + 1) + (b_last + 1)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long const INF = 1e6;\nlong long power(long long a, long long b) {\n  long long result = 1;\n  while (b) {\n    if (b % 2) result = (result * a) % 1000000007;\n    a = (a * a) % 1000000007;\n    b /= 2;\n  }\n  return result;\n}\nvoid sol() {\n  int n;\n  cin >> n;\n  map<int, int> mp;\n  vector<int> a(n);\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    mp[a[i]]++;\n  }\n  int m1 = 101, m2 = 101;\n  for (int i = 0; i < 101; i++) {\n    if (mp[i] >= 2) continue;\n    if (mp[i] == 0) {\n      m1 = min(m1, i);\n      m2 = min(m2, i);\n      break;\n    } else if (mp[i] == 1)\n      m1 = min(i, m1);\n  }\n  cout << m1 + m2 << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int T = 1;\n  cin >> T;\n  while (T--) sol();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\ndef solve():\n\tn = mint()\n\tb = [0]*101\n\tfor i in mints():\n\t\tb[i] += 1\n\ta = 0\n\tfor j in range(101):\n\t\tif b[j] >= 2:\n\t\t\ta = j + 1\n\t\telse:\n\t\t\tbreak\n\tc = 0\n\tfor j in range(101):\n\t\tif b[j] >= 1:\n\t\t\tc = j + 1\n\t\telse:\n\t\t\tbreak\n\tprint(a+c)\n\n\nfor i in range(mint()):\n\tsolve()\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    # arr.sort()\n    A = set()\n    B = set()\n    for num in arr:\n        if not (num in A):\n            A.add(num)\n        elif not (num in B):\n            B.add(num)\n    A = list(A)\n    B = list(B)\n    A.sort()\n    B.sort()\n    # print(A, B)\n    res = 0\n    for ind, num in enumerate(A):\n        if ind != num:\n            res += ind\n            break\n    else:\n        res += len(A)\n    for ind, num in enumerate(B):\n        if ind != num:\n            res += ind\n            break\n    else:\n        res += len(B)\n    print(res)\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\nimport java.util.*;\n\npublic class SubsetMex {\n    private static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    private static final PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n    private static final long[] POWERS_OF_TEN = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000,\n            1000000000, 10000000000L, 100000000000L, 1000000000000L, 10000000000000L, 100000000000000L,\n            1000000000000000L, 10000000000000000L, 100000000000000000L, 1000000000000000000L };\n    private static StringTokenizer st;\n\n    public static int gcd(int a, int b) {\n        int res = 0;\n        if (b > a) {\n            int temp = a;\n            a = b;\n            b = temp;\n        }\n        while (b > 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n            res = a;\n        }\n        return res;\n    }\n\n    private static int readInt() throws IOException {\n        while (st == null || !st.hasMoreTokens())\n            st = new StringTokenizer(br.readLine());\n        return Integer.parseInt(st.nextToken());\n    }\n\n    private static Long readLong() throws IOException {\n        while (st == null || !st.hasMoreTokens())\n            st = new StringTokenizer(br.readLine());\n        return Long.parseLong(st.nextToken());\n    }\n\n    private static String readToken() throws IOException {\n        while (st == null || !st.hasMoreTokens())\n            st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    public static void main(String[] args) throws IOException {\n        int T = readInt();\n        while (T-- > 0)\n            solve();\n        pw.close();\n    }\n\n    private static void solve() throws IOException {\n        int len = readInt();\n        int[] ans = new int[101];\n        int maxv2 = -1;\n        int maxv1 = -1;\n        boolean dothething = true;\n        for (int i = 0; i < len; i++) {\n            int temp = readInt();\n            ans[temp]++;\n        }\n        for (int i = 0; i < 101; i++) {\n            if (ans[i] > 1) {\n                if (dothething)\n                    maxv2 = i;\n                maxv1 = i;\n            } else if (ans[i] > 0) {\n                maxv1 = i;\n                dothething = false;\n            } else {\n                break;\n            }\n        }\n        //if (maxv2 != -1) {\n            maxv2++;\n        //}\n        //if (maxv1 != -1) {\n            maxv1++;\n        //}\n        pw.println(maxv2 + maxv1);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    j=int(input())\n    k=list(map(int,input().split()))\n    a=[]\n    b=[]\n    for l in k:\n        if l in a:\n            b.append(l);\n        else:\n            a.append(l)\n    ai=0;\n    bi=0\n    for l in range(len(a)+1):\n        if l in a:\n            continue\n        ai=l;\n        break\n\n    for l in range(len(b)+1):\n        if l in b:\n            continue\n        bi=l;\n        break\n    print(ai+bi)\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s1, s2 = set(), set()\n    for i in a:\n        if a.count(i) > 1:\n            s1.add(i)\n            s2.add(i)\n        else:\n            s1.add(i)\n    ans = 0\n    for i in range(n + 1):\n        if i not in s1:\n            ans += i\n            break\n    for i in range(n + 1):\n        if i not in s2:\n            ans += i\n            break\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> v(n);\n  for (long long &x : v) cin >> x;\n  map<long long, long long> m;\n  for (long long x : v) m[x]++;\n  long long i = 0;\n  for (auto p : m) {\n    if (p.first == i and p.second >= 1)\n      m[p.first]--, i++;\n    else\n      break;\n  }\n  long long mex_a = i;\n  i = 0;\n  for (auto p : m) {\n    if (p.first == i and p.second >= 1)\n      m[p.first]--, i++;\n    else\n      break;\n  }\n  cout << mex_a + i << '\\n';\n}\nvoid solve(bool testcase) {\n  long long t;\n  cin >> t;\n  while (t--) solve();\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  solve(true);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[105];\nint a[105], b[105];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n      cin >> arr[i];\n    }\n    sort(arr + 1, arr + n + 1);\n    a[1] = arr[1];\n    int c1 = 2, c2 = 1;\n    for (int i = 2; i <= n; i++) {\n      if (arr[i] != arr[i - 1]) {\n        a[c1++] = arr[i];\n      } else {\n        b[c2++] = arr[i];\n      }\n    }\n    int ans = 0;\n    int f1 = 0, f2 = 0;\n    for (int i = 1; i < c1; i++) {\n      if (a[1] != 0) {\n        f1 = 1;\n        break;\n      }\n      if (a[i] == a[i - 1] || a[i] == a[i - 1] + 1)\n        continue;\n      else {\n        ans += a[i - 1] + 1;\n        f1 = 1;\n        break;\n      }\n    }\n    if (!f1) ans += a[c1 - 1] + 1;\n    for (int i = 1; i < c2; i++) {\n      if (b[1] != 0) {\n        f2 = 1;\n        break;\n      }\n      if (b[i] == b[i - 1] || b[i] == b[i - 1] + 1)\n        continue;\n      else {\n        ans += b[i - 1] + 1;\n        f2 = 1;\n        break;\n      }\n    }\n    if (!f2 && c2 != 1) ans += b[c2 - 1] + 1;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t= int(input())\nfor _ in range(t):\n  length = int(input())\n  array = [int(i) for i in input().split()]\n  if 0 not in array:\n    print(0)\n  else:\n    new_array=list()\n    new_array.append(0)\n    array.remove(0)\n    for i in range(1,length+1):\n      if (i) in array:\n        new_array.append(i)\n        array.remove(i)\n      else:\n        break\n    newarray2 = list()\n    for i in range(length+1):\n      if i in array:\n        newarray2.append(i)\n        array.remove(i)\n      else:\n        break\n    ans=0\n    for i in range(length+1):\n      if i not in new_array:\n        ans+=i\n        break\n    for i in range(length+1):\n      if i not in newarray2:\n        ans+=i\n        break\n    print(ans)\n  "
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ndef find_ans(n):\n    s=list(map(int,input().split()))\n    s=sorted(dict(Counter(s)).items())\n    a=[]\n    b=[]\n    for i in s:\n        if i[1]>=2:\n            a.append(i[0])\n            b.append(i[0])\n        elif i[1]<2 :\n            a.append(i[0])\n    qa=1111111110\n    qb=1111111110\n    for i in range(101):\n        if i not in a:\n            qa=min(i,qa)\n        if i not in b:\n            qb=min(qb,i)\n    print(qa+qb)\n\n\n\nfor _ in range(int(input())):\n    find_ans(int(input()))\n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n  n=int(input())\n  a=list(map(int,input().split()))\n  dic=[0]*101\n  for i in range(n):\n    dic[a[i]]+=1\n  ans=0\n  for i in range(101):\n    if dic[i]<2:\n      ans+=i\n      break\n  for i in range(101):\n    if dic[i]<1:\n      ans+=i\n      break\n  print(ans)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = Counter(a)\n    num1, num2 = -1, -1\n    num1_modded, num2_modded = False, False\n    for i in range(101):\n        if cnt[i] >= 2:\n            continue\n        if cnt[i] == 1:\n            if not num1_modded:\n                num1_modded = True\n                num1 = i\n        if cnt[i] == 0:\n            if num1_modded:\n                num2 = i\n                num2_modded = True\n            else:\n                num1_modded = num2_modded = True\n                num1 = num2 = i\n        if num1_modded and num2_modded:\n            break\n    print(num1 + num2)\n"
        },
        {
            "language": 1,
            "solution": "for t in range(input()):\n    n = input()\n    A = B = 0\n    for x in sorted(map(int,raw_input().split())):\n        if x > A: break\n        if x == A: A+=1\n        elif x == B: B+=1\n    print(A+B)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Pa{\n\tpublic static void main(String[] args) throws IOException{\n\t\tFastReader sc = new FastReader();\n\t\tBufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(java.io.FileDescriptor.out),\"ASCII\"),512);\n\t\tint t = sc.nextInt();\n\t\twhile(t-- > 0){\n\t\t\tint n = sc.nextInt();\n\t\t\tint[] a = new int[n];\n\t\t\tint[] present = new int[101];\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ta[i] = sc.nextInt();\n\t\t\t\tpresent[a[i]]++;\n\t\t\t}\n\t\t\tint max = 0;\n\t\t\tint done = 0;\n\t\t\tfor(int i=0;i<101;i++){\n\t\t\t\tif(present[i] == 1 && done != 1){\n\t\t\t\t\tmax += i;\n\t\t\t\t\tdone = 1;\n\t\t\t\t}else if(present[i] == 0){\n\t\t\t\t\tif(done == 0){\n\t\t\t\t\t\tmax += (2*i);\n\t\t\t\t\t}else if(done == 1){\n\t\t\t\t\t\tmax += i;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.write(max + \"\");\n\t\t\tout.write('\\n');\n\t\t}\n\t\tout.flush();\n\t}\n}\nclass FastReader{\n\tBufferedReader br;\n\tStringTokenizer st;\n\tpublic FastReader(){\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n\tString next(){\n\t\twhile(st == null || !st.hasMoreElements()){\n\t\t\ttry{ \n\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t} \n\t\t\tcatch (IOException  e){ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t} \n\t\treturn st.nextToken();\n\t}\n\tint nextInt(){ \n        return Integer.parseInt(next()); \n\t}\n    long nextLong(){ \n        return Long.parseLong(next()); \n    }\n    double nextDouble(){ \n        return Double.parseDouble(next()); \n    }\n    String nextLine(){ \n        String str = \"\"; \n        try{ \n            str = br.readLine(); \n        } \n\t\tcatch (IOException e){ \n            e.printStackTrace(); \n        } \n        return str; \n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nfrom collections import Counter\ninput = sys.stdin.readline\n\ndef solve():\n    n=int(input())\n    L=list(map(int,input().split()))\n    #S=list(set(L))\n    val =max(L)\n    for i in range(val):\n        if i not in L:\n            a=i\n            break\n    else:\n        a=val+1\n    \n    li=[]\n    C = dict(Counter(L))\n    for i in C:\n        if C[i]>1:\n            li.append(i)\n    if li==[]:\n        print(a)\n        return \n    else:\n        val = max(li)\n        for i in range(val):\n            if i not in li:\n                b=i\n                break\n        else:\n            b=val+1\n    print(a+b)\n\n\nif __name__==\"__main__\":\n    for _ in range(int(input())):\n        solve()\n\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    temp = set([i for i in range(0, 101)])\n    cnt = Counter(a)\n    ans = 0\n    p, q = 0, 0\n    for x in temp:\n        if x not in cnt:\n            p = x\n            break\n    for x in temp:\n        if cnt[x] <= 1:\n            q = x\n            break\n    ans = p+q\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid printVec(vector<int> &v) {\n  for (int i = 0; i < (int)v.size(); i++) {\n    cout << v[i] << \" \";\n  }\n  cout << endl;\n}\nint main() {\n  int t, n, x;\n  vector<int> testCase;\n  cin >> t;\n  while (t) {\n    cin >> n;\n    int maximum = INT_MIN;\n    for (int i = 0; i < n; i++) {\n      cin >> x;\n      maximum = max(maximum, x);\n      testCase.push_back(x);\n    }\n    vector<int> counter(maximum + 1, 0);\n    for (int i = 0; i < n; i++) {\n      counter[testCase[i]] += 1;\n    }\n    int i = 0;\n    int j = 0;\n    while (i <= maximum and counter[i] >= 2) {\n      i++;\n      j++;\n    }\n    while (i <= maximum and counter[i] >= 1) {\n      i++;\n    }\n    cout << i + j << endl;\n    testCase.clear();\n    counter.clear();\n    t--;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def getInts():\n    return [int(s) for s in input().split()]\n\ndef getInt():\n    return int(input())\n\ndef getStrs():\n    return [s for s in input().split()]\n\ndef getStr():\n    return input()\n\ndef listStr():\n    return list(input())\n\nimport collections as c\n\ndef solve():\n    N = getInt()\n    A = getInts()\n    counts = c.defaultdict(int)\n    for a in A:\n        counts[a] += 1\n    j = 0\n    ans = []\n    while True:\n        if len(ans) == 0:\n            if counts[j] == 0:\n                ans.append(j)\n                if len(ans) == 2:\n                    break\n                ans.append(j)\n                break\n            elif counts[j] == 1:\n                ans.append(j)\n                if len(ans) == 2:\n                    break\n        else:\n            if counts[j] == 0:\n                ans.append(j)\n                break\n        j += 1\n    return sum(ans)\n    \nT = getInt()\nfor t in range(T):\n    ans = solve()\n    print(ans)\n    \n    "
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split(\" \")))\n    i = 0\n    mex1 = 0\n    mex2 = 0\n    while (l.count(i) > 0):\n        if l.count(i) > 1 and mex1 == mex2:\n            mex2 = i + 1\n        mex1 = i + 1\n        i += 1\n    print(mex1 + mex2)\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict,Counter\nfor i in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    d=defaultdict(int)\n    d=Counter(l)\n    l1=set()\n    l2=set()\n    for i in l:\n        if d[i]>1:\n            l1.add(i)\n            l2.add(i)\n        else:\n            l1.add(i)\n    j=0\n    s=0\n    l1=list(l1)\n    l2=list(l2)\n    l1.sort()\n    l2.sort()\n    c1=0\n    for i in l1:\n        if i==j:\n            j+=1\n        else:\n            s+=j\n            c1=1\n            break\n    if c1==0:\n        s+=j\n    j=0\n    c1=0\n    for i in l2:\n        if i==j:\n            j+=1\n        else:\n            s+=j\n            c1=1\n            break\n    if c1==0:\n        s+=j\n    print(s)\n    \n            \n            \n        \n    \n"
        },
        {
            "language": 3,
            "solution": "import sys, os.path\nimport math\nfrom collections import Counter\nif(os.path.exists('input.txt')):\n    sys.stdin = open(\"input.txt\",\"r\")\n    sys.stdout = open(\"output.txt\",\"w\")\n\ndef solve():\n    n = int(input())\n    l = list(map(int,input().split()))\n    c = Counter(l)\n    mex1 = 0\n    mex2 = 0\n    for i in range(101):\n        if c[i] >=2:\n            mex1 = i+1\n            mex2 = i+1\n        else:\n            break\n    while(i < 101):\n        if (c[i]):\n            mex1 = i+1\n        else:\n            break\n        i += 1\n    return (mex1 + mex2)\n\n\n\n\n\n\n\n\n\nfor _ in range(int(input())):\n    print(solve())\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor index in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = [0 for i in range(102)]\n\n    for i in range(n):\n        cnt[arr[i]] += 1\n    first = 0\n    second = 0\n    for i in range(102):\n        if cnt[i] == 0:\n            first = i\n            break\n    for i in range(102):\n        if cnt[i] <= 1:\n            second = i\n            break\n    print(first + second)"
        },
        {
            "language": 3,
            "solution": "def Mex( arr ) :\n\ti, n = 0, len(arr)\n\tcurr = 0\n\twhile i < n :\n\t\tif arr[i] != curr :\n\t\t\treturn curr\n\t\telse :\n\t\t\twhile (i<n) and (arr[i] == curr) :\n\t\t\t\ti += 1\n\t\t\tcurr += 1\n\treturn curr\n\ndef Subset_Mex( n, arr ) :\n\tarr.sort()\n\ti = 0\n\tA, B = [], []\n\twhile i < n :\n\t\tif (i < n-1) and (arr[i] == arr[i+1]) :\n\t\t\tA.append(arr[i])\n\t\t\tB.append(arr[i])\n\t\t\ti += 2\n\t\telse :\n\t\t\tA.append(arr[i])\n\t\t\ti += 1\n\treturn Mex(A) + Mex(B)\n\nif __name__ == '__main__':\n\tt = int( input() )\n\tfor i in range( t ) :\n\t\tn = int( input() )\n\t\tarr = list( map( int, input().split() ) )\n\t\tprint( Subset_Mex( n, arr ) )"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long nxt() {\n  long long res = 0;\n  cin >> res;\n  return res;\n}\nlong long MOD = 1000 * 1000 * 1000 + 7;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  unsigned long long t = 1;\n  cin >> t;\n  for (; t > 0; --t) {\n    long long n = nxt();\n    unordered_map<int, int> m;\n    for (int i = 0; i < n; ++i) {\n      int tmp;\n      cin >> tmp;\n      ++m[tmp];\n    }\n    int res = 0;\n    for (int i = 0; i < 200; ++i) {\n      if (m[i] > 0)\n        --m[i];\n      else {\n        res += i;\n        break;\n      }\n    }\n    for (int i = 0; i < 200; ++i) {\n      if (!m[i]) {\n        res += i;\n        break;\n      }\n    }\n    cout << res << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nans = list()\nfor zxc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    c = -1\n    maxx = -1\n    arr1 = list([i for i in range(202)])\n    arr2 = list(i for i in range(202))\n    for i in arr:\n        if i + arr1[0]>=i+arr2[0]:\n            if i in arr1:\n                arr1.pop(arr1.index(i))\n            else:\n                if i in arr2:\n                    arr2.pop(arr2.index(i))\n        else:\n            if i in arr2:\n                arr2.pop(arr2.index(i))\n            else:\n                if i in arr1:\n                    arr1.pop(arr1.index(i))\n    ans.append(arr1[0]+arr2[0])\nfor z in ans:\n    print(z)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\npublic class Main{\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n        long[] nextArray(long n) {\n            long[] a = new long[(int) n];\n            for (int i = 0; i < n; i++) a[i] = nextLong();\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n    static class FastWriter extends PrintWriter {\n        FastWriter(){\n            super(System.out);\n        }\n        void println(int[] array) {\n            for(int i=0; i<array.length; i++) {\n                print(array[i]+\" \");\n            }\n            println();\n        }\n        void println(long [] array) {\n            for(int i=0; i<array.length; i++) {\n                print(array[i]+\" \");\n            }\n            println();\n        }\n    }\n    static int MOD=998244353;\n    public static void main(String[] args){\n        FastScanner in = new FastScanner();\n        FastWriter out = new FastWriter();\n        int t=in.nextInt();\n        //int t=1;\n        while (t-->0){\n            int n=in.nextInt();\n            int[] ar=in.nextArray(n);\n            HashMap<Integer,Integer> map=new HashMap<>();\n            for (int i = 0; i < n; i++) {\n                map.put(ar[i],map.getOrDefault(ar[i],0)+1);\n            }\n            int ans=0;boolean flag1=false;\n            for (int i = 0; i < 102; i++) {\n                int cnt=map.getOrDefault(i,0);\n                if(cnt==0){\n                    if(flag1){\n                        ans+=i;\n                    }else {\n                        ans+=2*i;\n                    }\n                    break;\n                }else if(cnt==1&&!flag1){\n                    ans+=i;\n                    flag1=true;\n                }\n            }\n            out.println(ans);\n        }\n        out.close();\n    }\n    //Arrays.sort(a, (o1, o2) -> (o1[0] - o2[0]));\n    static int subarray_lessthan_k(int[] A,int n,int k){\n        int s=0,e=0,sum=0,cnt=0;\n        while(e<n){\n            sum+=A[e];\n            while(s<=e&&sum>k){\n                sum-=A[s++];\n            }\n            cnt+=e-s+1;\n            e++;\n        }\n        return cnt;\n    }\n    static int diff(int num1,int num2) {\n        String s1 = String.valueOf(num1);\n        String s2 = String.valueOf(num2);\n        if (s1.length() < s2.length()) {\n            s1 = \"0\" + s1;\n        }else if(s1.length()>s2.length()){\n            s2=\"0\"+s2;\n        }\n        int cnt=0;\n        for (int i = 0; i < s1.length(); i++) {\n            if(s1.charAt(i)!=s2.charAt(i)){\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n    static int totalPrimeFactors(int n) {\n        int cnt=0;\n        while (n%2==0) {\n            cnt++;\n            n /= 2;\n        }\n        int num= (int) Math.sqrt(n);\n        for (int i = 3; i <= num; i+= 2) {\n            while (n%i == 0) {\n                cnt++;\n                n /= i;\n                num=(int)Math.sqrt(n);\n            }\n        }\n        if (n > 2){\n            cnt++;\n        }\n        return cnt;\n    }\n    static char get(int i){\n        return (char)(i+'a');\n    }\n    static boolean distinct(int num){\n        HashSet<Integer> set=new HashSet<>();\n        int len=String.valueOf(num).length();\n        while (num!=0){\n            set.add(num%10);\n            num/=10;\n        }\n        return set.size()==len;\n    }\n    static int maxSubArraySum(int a[],int st,int en) {\n        int max_s = Integer.MIN_VALUE, max_e = 0,ind=0,ind1=1;\n        for (int i = st; i <= en; i++) {\n            max_e+= a[i];\n            if (max_s < max_e){\n                max_s = max_e;\n                ind=ind1;\n            }\n            if (max_e < 0){\n                max_e = 0;\n                ind1=i+1;\n            }\n        }\n        if(st==0){\n            return max_s;\n        }\n        if(ind==1){\n            return a[0]+2*max_s;\n        }else {\n            return 2*max_s+maxSubArraySum(a,0,ind-1);\n        }\n        //return max_s;\n    }\n    static void segmentedSieve(ArrayList<Integer> res,int low, int high) {\n        if(low < 2){\n            low = 2;\n        }\n        ArrayList<Integer> prime = new ArrayList<>();\n        simpleSieve(high, prime);\n        boolean[] mark = new boolean[high - low + 1];\n        for (int i = 0; i < mark.length; i++){\n            mark[i] = true;\n        }\n        for (int i = 0; i < prime.size(); i++) {\n            int loLim = (low / prime.get(i)) * prime.get(i);\n            if (loLim < low){\n                loLim += prime.get(i);\n            }\n            if (loLim == prime.get(i)){\n                loLim += prime.get(i);\n            }\n            for (int j = loLim; j <= high; j += prime.get(i)) {\n                mark[j - low] = false;\n            }\n        }\n        for (int i = low; i <= high; i++) {\n            if (mark[i - low]){\n                res.add(i);\n            }\n        }\n    }\n    static void simpleSieve(int limit, ArrayList<Integer> prime) {\n        int bound = (int)Math.sqrt(limit);\n        boolean[] mark = new boolean[bound + 1];\n        for (int i = 0; i <= bound; i++){\n            mark[i] = true;\n        }\n        for (int i = 2; i * i <= bound; i++) {\n            if (mark[i]) {\n                for (int j = i * i; j <= bound; j += i){\n                    mark[j] = false;\n                }\n            }\n        }\n        for (int i = 2; i <= bound; i++) {\n            if (mark[i]){\n                prime.add(i);\n            }\n        }\n    }\n    static int highestPowerOf2(int n) {\n        if (n < 1){ return 0; }\n        int res = 1;\n        for (int i = 0; i < 8 * Integer.BYTES; i++) {\n            int curr = 1 << i;\n            if (curr > n){ break; }\n            res = curr;\n        }\n        return res;\n    }\n    static int reduceFraction(int x, int y) {\n        int d= gcd(x, y);\n        return x/d+y/d;\n    }\n    static boolean subset(int[] ar,int n,int sum){\n        if(sum==0){\n            return true;\n        }\n        if(n<0||sum<0){\n            return false;\n        }\n        return subset(ar,n-1,sum)||subset(ar,n-1,sum-ar[n]);\n    }\n    static boolean isPrime(int n){\n        if(n<=1) return false;\n        for(int i = 2;i<=Math.sqrt(n);i++){\n            if (n % i == 0) return false;\n        }\n        return true;\n    }\n    static int gcd(int a, int b) {\n        if (b == 0) return a;\n        return gcd(b, a % b);\n    }\n    static long gcd(long a, long b) {\n        if (b == 0) return a;\n        return gcd(b, a % b);\n    }\n    static long lcm(long a, long b) {\n        return (a * b) / gcd(a, b);\n    }\n    static int lcm(int a, int b) {\n        return (a * b) / gcd(a, b);\n    }\n    static boolean isPowerOfTwo(long n) {\n        if(n==0){\n            return false;\n        }\n        while (n%2==0){\n            n/=2;\n        }\n        return n==1;\n    }\n    static boolean isPerfectSquare(int x){\n        if (x >= 0) {\n            int sr = (int)Math.sqrt(x);\n            return ((sr * sr) == x);\n        }\n        return false;\n    }\n    static int lower_bound(int[] arr, int x) {\n        int low_limit = 0, high_limit = arr.length, mid;\n        while (low_limit < high_limit) {\n            mid = (low_limit + high_limit) / 2;\n            if (arr[mid] >= x){\n                high_limit = mid;\n            }else{\n                low_limit = mid + 1;\n            }\n        }\n        return low_limit;\n    }\n    static int upper_bound(int[] arr, int x) {\n        int low_limit = 0, high_limit = arr.length, mid;\n        while (low_limit < high_limit) {\n            mid = (low_limit + high_limit) / 2;\n            if (arr[mid] > x){\n                high_limit = mid;\n            }else{\n                low_limit = mid + 1;\n            }\n        }\n        return low_limit;\n    }\n    static int binarySearch(int[] ar,int n,int num){\n        int low=0,high=n-1;\n        while (low<=high){\n            int mid=(low+high)/2;\n            if(ar[mid]==num){\n                return mid;\n            }else if(ar[mid]>num){\n                high=mid-1;\n            }else {\n                low=mid+1;\n            }\n        }\n        return -1;\n    }\n    static int fib(int n) {\n        long F[][] = new long[][]{{1,1},{1,0}};\n        if (n == 0){\n            return 0;\n        }\n        power(F, n-1);\n        return (int)F[0][0];\n    }\n    static void multiply(long F[][], long M[][]) {\n        long x =  (F[0][0]*M[0][0])%1000000007 + (F[0][1]*M[1][0])%1000000007;\n        long y =  (F[0][0]*M[0][1])%1000000007 + (F[0][1]*M[1][1])%1000000007;\n        long z =  (F[1][0]*M[0][0])%1000000007 + (F[1][1]*M[1][0])%1000000007;\n        long w =  (F[1][0]*M[0][1])%1000000007 + (F[1][1]*M[1][1])%1000000007;\n        F[0][0] = x%1000000007;\n        F[0][1] = y%1000000007;\n        F[1][0] = z%1000000007;\n        F[1][1] = w%1000000007;\n    }\n    static void power(long F[][], int n) {\n        if( n == 0 || n == 1){\n            return;\n        }\n        long M[][] = new long[][]{{1,1},{1,0}};\n        power(F, n/2);\n        multiply(F, F);\n        if (n%2 != 0){\n            multiply(F, M);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import heapq as hq\nfrom heapq import heappop,heappush\nfrom collections import deque,defaultdict,Counter\nfrom sys import stdin,stdout\n\n\ndef inp():\n\treturn int(stdin.readline())\n\n\ndef inlt():\n\treturn list(map(int,stdin.readline().split()))\n\n\ndef insr():\n\treturn list(stdin.readline().strip())\n\n\ndef invr():\n\treturn map(int,stdin.readline().split())\n\n\n\n\ndef subset_sum_count(arr,n,sum):\n\tdp=[[0 for _ in range(sum+1)] for _ in range(n+1)]\n\tfor i in range(n+1):\n\t\tfor j in range(sum+1):\n\t\t\tif j==0:\n\t\t\t\tdp[i][j]=1\n\t\t\telif arr[i-1]<=j:\n\t\t\t\tdp[i][j]=dp[i-1][j-arr[i-1]]+dp[i-1][j]\n\t\t\telse:\n\t\t\t\tdp[i][j]=dp[i-1][j]\n\treturn dp[n][sum]\n\n\ndef binary_search(func,lo,hi,abs_prec=1e-7):\n\t\"\"\" Locate the first value x s.t. func(x) = True within [lo, hi] \"\"\"\n\twhile abs(hi-lo)>abs_prec:\n\t\tmi=lo+(hi-lo)/2\n\t\tif func(mi):\n\t\t\thi=mi\n\t\telse:\n\t\t\tlo=mi\n\t\n\treturn (lo+hi)/2\n\n\ndef ternary_search(func,lo,hi,abs_prec=1e-7):\n\t\"\"\" Find maximum of unimodal function func() within [lo, hi] \"\"\"\n\twhile abs(hi-lo)>abs_prec:\n\t\tlo_third=lo+(hi-lo)/3\n\t\thi_third=hi-(hi-lo)/3\n\t\t\n\t\tif func(lo_third)<func(hi_third):\n\t\t\tlo=lo_third\n\t\telse:\n\t\t\thi=hi_third\n\t\n\treturn (lo+hi)/2\n\n\ndef discrete_binary_search(func,lo,hi):\n\t\"\"\" Locate the first value x s.t. func(x) = True within [lo, hi] \"\"\"\n\twhile lo<hi:\n\t\tmi=lo+(hi-lo)//2\n\t\tif func(mi):\n\t\t\thi=mi\n\t\telse:\n\t\t\tlo=mi+1\n\t\n\treturn lo\n\n\ndef discrete_ternary_search(func,lo,hi):\n\t\"\"\" Find the first maximum of unimodal function func() within [lo, hi] \"\"\"\n\twhile lo<=hi:\n\t\tlo_third=lo+(hi-lo)//3\n\t\thi_third=lo+(hi-lo)//3+(1 if 0<hi-lo<3 else (hi-lo)//3)\n\t\t\n\t\tif func(lo_third)<func(hi_third):\n\t\t\tlo=lo_third+1\n\t\telse:\n\t\t\thi=hi_third-1\n\t\n\treturn lo\n\t\n\treturn -1\n\n\ndef right_rotate(a,s):\n\treturn a[s:]+a[:s]\n\n\ndef dec_to_bin(x):\n\treturn int(bin(x)[2:])\n\n\ndef str_to_integer_list(n):\n\ta=[]\n\tfor i in range(len(n)):\n\t\ta.append(int(n[i]))\n\treturn a\n\n\ndef list_to_str(l):\n\ts=\"\"\n\tfor i in l:\n\t\ts+=str(i)\n\treturn s\n\n\ndef dijkstra(s,N,E):\n\tvisited=set()\n\tdist={}\n\tfor i in range(1,N+1):\n\t\tdist[i]=1<<29\n\tqueue=[(dist[i],i) for i in range(1,N+1)]\n\thq.heappush(queue,(0,s))\n\tdist[s]=0\n\twhile queue:\n\t\td,u=hq.heappop(queue)\n\t\tif u in visited:\n\t\t\tcontinue\n\t\t#Relax all the neighbours of u\n\t\tfor t in E[u]:\n\t\t\tv,r=t\n\t\t\tif dist[v]>d+r:\n\t\t\t\tdist[v]=d+r\n\t\t\t\thq.heappush(queue,(dist[v],v))\n\t\t#Node u has been processed\n\t\tvisited.add(u)\n\treturn dist\n\n\ndef prime_sieve(n):\n\t\"\"\"returns a sieve of primes >= 5 and < n\"\"\"\n\tflag=n%6==2\n\tsieve=bytearray((n//3+flag>>3)+1)\n\tfor i in range(1,int(n**0.5)//3+1):\n\t\tif not (sieve[i>>3]>>(i&7))&1:\n\t\t\tk=(3*i+1)|1\n\t\t\tfor j in range(k*k//3,n//3+flag,2*k):\n\t\t\t\tsieve[j>>3]|=1<<(j&7)\n\t\t\tfor j in range(k*(k-2*(i&1)+4)//3,n//3+flag,2*k):\n\t\t\t\tsieve[j>>3]|=1<<(j&7)\n\treturn sieve\n\n\ndef prime_list(n):\n\t\"\"\"returns a list of primes <= n\"\"\"\n\tres=[]\n\tif n>1:\n\t\tres.append(2)\n\tif n>2:\n\t\tres.append(3)\n\tif n>4:\n\t\tsieve=prime_sieve(n+1)\n\t\tres.extend(3*i+1|1 for i in range(1,(n+1)//3+(n%6==1)) if not (sieve[i>>3]>>(i&7))&1)\n\treturn res\n\n\ndef dijkstra(n,graph,start):\n\t\"\"\" Uses Dijkstra's algortihm to find the shortest path between in a graph. \"\"\"\n\tdist,parents=[float(\"inf\")]*n,[-1]*n\n\tdist[start]=0\n\tqueue=[(0,start)]\n\twhile queue:\n\t\tpath_len,v=heappop(queue)\n\t\tif path_len==dist[v]:\n\t\t\tfor w,edge_len in graph[v]:\n\t\t\t\tif edge_len+path_len<dist[w]:\n\t\t\t\t\tdist[w],parents[w]=edge_len+path_len,v\n\t\t\t\t\theappush(queue,(edge_len+path_len,w))\n\t\n\treturn dist,parents\n\n\ndef path(start,end,parent):\n\tpath=[end]\n\twhile path[-1]!=start:\n\t\tpath.append(parent[path[-1]])\n\tpath.reverse()\n\treturn path\n\n\ndef bfs(graph,start,goal):\n\t\"\"\"\n\tfinds a shortest path in undirected `graph` between `start` and `goal`.\n\tIf no path is found, returns `None`\n\t\"\"\"\n\tif start==goal:\n\t\treturn [start]\n\tvisited={start}\n\tqueue=deque([(start,[])])\n\t\n\twhile queue:\n\t\tcurrent,path=queue.popleft()\n\t\tvisited.add(current)\n\t\tfor neighbor in graph[current]:\n\t\t\tif neighbor==goal:\n\t\t\t\treturn path+[current,neighbor]\n\t\t\tif neighbor in visited:\n\t\t\t\tcontinue\n\t\t\tqueue.append((neighbor,path+[current]))\n\t\t\tvisited.add(neighbor)\n\treturn None  # no path found. not strictly needed\n\n\ndef fillPrefixSum(arr,n,prefixSum):\n\tprefixSum[0]=arr[0]\n\t\n\t# Adding present element\n\t# with previous element\n\tfor i in range(1,n):\n\t\tprefixSum[i]=prefixSum[i-1]+arr[i]\n\n\ndef check(a,ind,d1):\n\tbeg=a[:ind+1]\n\tend=a[ind+1:]\n\td=[]\n\tc=0\n\tfor i in end:\n\t\tif i-d1 in beg:\n\t\t\tc+=1\n\treturn c\n\n\n'''for _ in range(int(input())):\n\tn,m=list(map(int,input().split()))\n\tgraph=defaultdict(list)\n\tdistance=[-1]*(n+1)\n\tvisited=[False]*(n+1)\n\tfor _ in range(m):\n\t\tx,y=list(map(int,input().split()))\n\t\tgraph[x].append(y)\n\t\tgraph[y].append(x)'''\n'''for _ in range(int(input())):\n\tn,m=list(map(int,input().split()))\n\tgraph=[[]for _ in range(n+1)]\n\tdistance=[-1]*(n+1)\n\tvisited=[False]*(n+1)\n\tfor _ in range(m):\n\t\tx,y,w=list(map(int,input().split()))\n\t\tgraph[x].append([y,w])\n\t\tgraph[y].append([x,w])'''\n\nimport os\nimport sys\nfrom io import BytesIO,IOBase\n\n\ndef DecimalToBinary(n):\n\tdef helper(n):\n\t\tif n==0:\n\t\t\treturn ''  # <- empty string\n\t\telse:\n\t\t\tif n%2==1:\n\t\t\t\tbinaryDigit='1'\n\t\t\telse:\n\t\t\t\tbinaryDigit='0'\n\t\t\treturn helper(n//2)+binaryDigit\n\t\n\tif n==0:\n\t\tresult='0'  # <- \"leading zero\" only for `n == 0`\n\telse:\n\t\tresult=helper(n)\n\treturn result\n\n\ndef p(board):\n\tfor i in range(8):\n\t\ts=\"\"\n\t\tfor j in range(8):\n\t\t\ts+=board[i][j]\n\t\tprint(s)\n\n\ndef binaryToDecimal(n):\n\treturn int(n,2)\n\n\ndef decimalToBinary(n):\n\treturn bin(n).replace(\"0b\",\"\")\n\n\ndef solve(a,b):\n\tx=DecimalToBinary(a);\n\ty=DecimalToBinary(b)\n\tz=x+y\n\tl=y+x\n\t\n\tr=binaryToDecimal(z)-binaryToDecimal(l)\n\treturn r\n\n\ndef mostFrequent(arr,n):\n\t# Sort the array\n\tarr.sort()\n\t\n\t# find the max frequency using\n\t# linear traversal\n\tmax_count=1;\n\tres=arr[0];\n\tcurr_count=1\n\t\n\tfor i in range(1,n):\n\t\tif (arr[i]==arr[i-1]):\n\t\t\tcurr_count+=1\n\t\t\n\t\telse:\n\t\t\tif (curr_count>max_count):\n\t\t\t\tmax_count=curr_count\n\t\t\t\tres=arr[i-1]\n\t\t\t\n\t\t\tcurr_count=1\n\t\n\t# If last element is most frequent\n\tif (curr_count>max_count):\n\t\tmax_count=curr_count\n\t\tres=arr[n-1]\n\t\n\treturn res\n\n\nfrom bisect import bisect_right,bisect_left\n\n\ndef lds(arr,n):\n\tlds=[0]*n\n\tmax=0\n\t\n\tfor i in range(n):\n\t\tlds[i]=1\n\t\n\tfor i in range(1,n):\n\t\tfor j in range(i):\n\t\t\tif (arr[i]<arr[j] and\n\t\t\t\t\tlds[i]<lds[j]+1):\n\t\t\t\tlds[i]=lds[j]+1\n\t\n\tfor i in range(n):\n\t\tif (max<lds[i]):\n\t\t\tmax=lds[i]\n\t\n\t# returns the length of the LDS\n\treturn max\n\n\nimport math\n\n\ndef prefix(a):\n\tpre=[]\n\tpre.append(a[0])\n\tfor i in range(1,len(a)):\n\t\tpre.append(pre[i-1]+a[i])\n\treturn pre\ndef solve(n,x,size):\n\tres=10000000\n\tif n==0:\n\t\treturn 0\n\tif size==0:\n\t\treturn 0\n\tfor i in x:\n\t\t\n\t\tres=1+min(res,solve(n-i,x,size-1))\n\t\treturn res\n\n\t\ndef main():\n\tfor _ in range(inp()):\n\t\tn=inp()\n\t\ta=inlt()\n\t\tc=[0 for _ in range(101)]\n\t\tans=0\n\t\tpp=0\n\t\tqq=0\n\t\tfor i in a:\n\t\t\tc[int(i)]+=1\n\t\t\n\t\tfor i in range(101):\n\t\t\tif c[i]>0:\n\t\t\t\tc[i]-=1\n\t\t\telse:\n\t\t\t\tpp=i\n\t\t\t\tbreak\n\t\tfor i in range(101):\n\t\t\tif c[i]>0:\n\t\t\t\tc[i]-=1\n\t\t\telse:\n\t\t\t\tqq=i\n\t\t\t\tbreak\n\t\tprint(pp+qq)\n\t\t\n\t\t\t\t\n\t\t\n\t\t\t\n\t\t\n\t\t\t\n\t\t\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\n\t\n\t\t\n\n\t\n\t\n\t\n\t\n\t\t\n\t\t\n\n# region fastio\nBUFSIZE=8192\n\n\nclass FastIO(IOBase):\n\tnewlines=0\n\t\n\tdef __init__(self,file):\n\t\tself._fd=file.fileno()\n\t\tself.buffer=BytesIO()\n\t\tself.writable=\"x\" in file.mode or \"r\" not in file.mode\n\t\tself.write=self.buffer.write if self.writable else None\n\t\n\tdef read(self):\n\t\twhile True:\n\t\t\tb=os.read(self._fd,max(os.fstat(self._fd).st_size,BUFSIZE))\n\t\t\tif not b:\n\t\t\t\tbreak\n\t\t\tptr=self.buffer.tell()\n\t\t\tself.buffer.seek(0,2),self.buffer.write(b),self.buffer.seek(ptr)\n\t\tself.newlines=0\n\t\treturn self.buffer.read()\n\t\n\tdef readline(self):\n\t\twhile self.newlines==0:\n\t\t\tb=os.read(self._fd,max(os.fstat(self._fd).st_size,BUFSIZE))\n\t\t\tself.newlines=b.count(b\"\\n\")+(not b)\n\t\t\tptr=self.buffer.tell()\n\t\t\tself.buffer.seek(0,2),self.buffer.write(b),self.buffer.seek(ptr)\n\t\tself.newlines-=1\n\t\treturn self.buffer.readline()\n\t\n\tdef flush(self):\n\t\tif self.writable:\n\t\t\tos.write(self._fd,self.buffer.getvalue())\n\t\t\tself.buffer.truncate(0),self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n\tdef __init__(self,file):\n\t\tself.buffer=FastIO(file)\n\t\tself.flush=self.buffer.flush\n\t\tself.writable=self.buffer.writable\n\t\tself.write=lambda s:self.buffer.write(s.encode(\"ascii\"))\n\t\tself.read=lambda:self.buffer.read().decode(\"ascii\")\n\t\tself.readline=lambda:self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin,sys.stdout=IOWrapper(sys.stdin),IOWrapper(sys.stdout)\ninput=lambda:sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__==\"__main__\":\n\tmain()\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class MyClass {\n    public static void main(String args[]) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        while(t-->0){\n            int n=sc.nextInt();\n            int f[]=new int[101];\n            for(int i=0;i<n;i++)f[sc.nextInt()]++;\n            int a=-1,b=-1;\n            for(int i=0;i<101;i++){\n                if(f[i]==0){\n                    if(a==-1)a=i;\n                    b=i;\n                    break;\n                }\n                else if(f[i]==1){\n                    if(a==-1)a=i;\n                }\n            }\n            System.out.println(a+b);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for test in range(int(input())):\n  n = int(input())\n  l = list(map(int,input().split()))\n  l.sort()\n  if(l[0]!=0):\n    print(0)\n  else:\n    mexa = 0\n    j = 0\n    setd = list(set(l))\n    mexb = len(setd)\n    setd.sort()\n    # print(setd)\n    for i in range(len(setd)):\n      if(i!=setd[i]):\n        mexb = i\n        break\n    d = {}\n    for i in l:\n      if(i in d):\n        d[i]+=1\n      else:\n        d[i]=1\n    for i in range(n):\n      if(i not in d or d[i]<2):\n        mexa = i\n        break\n    # print(mexa,mexb)\n    print(mexa+mexb)\n    \n    \n      \n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    i = 0\n    res = 0 \n    cnt = 0 \n    while cnt != 2:\n        if li.count(i) == 0:\n            if cnt == 0:\n                res += (2 * i)\n            else:\n                res += (i)\n            cnt = 2\n        if li.count(i) >= (2 - cnt):\n            i += 1 \n            continue\n        else:\n            cnt += 1\n            res += i \n    print(res)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmt19937 mt_rng(chrono::steady_clock::now().time_since_epoch().count());\nlong long int randint(long long int a, long long int b) {\n  return uniform_int_distribution<long long int>(a, b)(mt_rng);\n}\nlong long int mod(long long int a, long long int b) {\n  long long int ret = a % b;\n  return ret >= 0 ? ret : ret + b;\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  multiset<int> s;\n  for (int i = 0; i < n; i++) {\n    int j;\n    cin >> j;\n    s.insert(j);\n  }\n  int a = INT_MIN, b = INT_MIN;\n  int cnt = 0;\n  for (int i = 0; i < 10000000; i++) {\n    if (s.count(i) > 0) {\n      s.erase(s.find(i));\n      continue;\n    } else {\n      a = i;\n      break;\n    }\n  }\n  for (int i = 0; i < 10000000; i++) {\n    if (s.count(i) > 0) {\n      s.erase(s.find(i));\n      continue;\n    } else {\n      b = i;\n      break;\n    }\n  }\n  cout << a + b << \"\\n\";\n}\nint main() {\n  ios::sync_with_stdio(0);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "\n\nfor _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n\n    d = {}\n    for i in l:\n        d[i] = d.get(i, 0) + 1\n\n    # print(d)\n    a = 0\n    b = 0\n    flag1, flag2 = 1, 1\n    while flag1 or flag2:\n        if a not in d:\n            break\n        else:\n            a += 1\n\n        if flag2:\n            if b not in d or (b <= a and d[b] == 1):\n                flag2 = 0\n            else:\n                b += 1\n\n    # print(a, b)\n    print(a + b)\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    c0 = c1 = 0\n\n    for i in a:\n        if c0 == i:\n            c0 += 1\n            continue\n\n        if c1 == i:\n            c1 += 1\n\n    print(c0 + c1)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class CF1406A {\n    static BufferedReader __in;\n    static PrintWriter __out;\n    static StringTokenizer input;\n\n    public static void main(String[] args) throws IOException {\n        __in = new BufferedReader(new InputStreamReader(System.in));\n        __out = new PrintWriter(new OutputStreamWriter(System.out));\n        \n        int t = ri();\n        while(t --> 0) {\n            int n = ri(), sum = 0;\n            List<Integer> l = new ArrayList<>();\n            r();\n            for(int i = 0; i < n; ++i) {\n                l.add(ni());\n            }\n            for(int i = 0; i <= n + 1; ++i) {\n                if(!l.remove((Integer) i)) {\n                    sum += i;\n                    break;\n                }\n            }\n            for(int i = 0; i <= n + 1; ++i) {\n                if(!l.remove((Integer) i)) {\n                    sum += i;\n                    break;\n                }\n            }\n            prln(sum);\n\n        }\n\n        close();\n    }\n\n    // references\n    // IBIG = 1e9 + 7\n    // IRAND ~= 3e8\n    // IMAX ~= 2e10\n    // LMAX ~= 9e18\n    // constants\n    static final int IBIG = 1000000007;\n    static final int IRAND = 327859546;\n    static final int IMAX = 2147483647;\n    static final int IMIN = -2147483648;\n    static final long LMAX = 9223372036854775807L;\n    static final long LMIN = -9223372036854775808L;\n    // util\n    static int minof(int a, int b, int c) {return min(a, min(b, c));}\n    static int minof(int... x) {return x.length == 1 ? x[0] : x.length == 2 ? min(x[0], x[1]) : min(x[0], minstarting(1, x));}\n    static int minstarting(int offset, int... x) {assert x.length > 2; return offset == x.length - 2 ? min(x[offset], x[offset + 1]) : min(x[offset], minstarting(offset + 1, x));}\n    static long minof(long a, long b, long c) {return min(a, min(b, c));}\n    static long minof(long... x) {return x.length == 1 ? x[0] : x.length == 2 ? min(x[0], x[1]) : min(x[0], minstarting(1, x));}\n    static long minstarting(int offset, long... x) {assert x.length > 2; return offset == x.length - 2 ? min(x[offset], x[offset + 1]) : min(x[offset], minstarting(offset + 1, x));}\n    static int maxof(int a, int b, int c) {return max(a, max(b, c));}\n    static int maxof(int... x) {return x.length == 1 ? x[0] : x.length == 2 ? max(x[0], x[1]) : max(x[0], maxstarting(1, x));}\n    static int maxstarting(int offset, int... x) {assert x.length > 2; return offset == x.length - 2 ? max(x[offset], x[offset + 1]) : max(x[offset], maxstarting(offset + 1, x));}\n    static long maxof(long a, long b, long c) {return max(a, max(b, c));}\n    static long maxof(long... x) {return x.length == 1 ? x[0] : x.length == 2 ? max(x[0], x[1]) : max(x[0], maxstarting(1, x));}\n    static long maxstarting(int offset, long... x) {assert x.length > 2; return offset == x.length - 2 ? max(x[offset], x[offset + 1]) : max(x[offset], maxstarting(offset + 1, x));}\n    static int powi(int a, int b) {if(a == 0) return 0; int ans = 1; while(b > 0) {if((b & 1) > 0) ans *= a; a *= a; b >>= 1;} return ans;}\n    static long powl(long a, int b) {if(a == 0) return 0; long ans = 1; while(b > 0) {if((b & 1) > 0) ans *= a; a *= a; b >>= 1;} return ans;}\n    static int floori(double d) {return (int)d;}\n    static int ceili(double d) {return (int)ceil(d);}\n    static long floorl(double d) {return (long)d;}\n    static long ceill(double d) {return (long)ceil(d);}\n    // input\n    static void r() throws IOException {input = new StringTokenizer(__in.readLine());}\n    static int ri() throws IOException {return Integer.parseInt(__in.readLine());}\n    static long rl() throws IOException {return Long.parseLong(__in.readLine());}\n    static int[] ria(int n) throws IOException {int[] a = new int[n]; input = new StringTokenizer(__in.readLine()); for(int i = 0; i < n; ++i) a[i] = Integer.parseInt(input.nextToken()); return a;}\n    static long[] rla(int n) throws IOException {long[] a = new long[n]; input = new StringTokenizer(__in.readLine()); for(int i = 0; i < n; ++i) a[i] = Long.parseLong(input.nextToken()); return a;}\n    static char[] rcha() throws IOException {return __in.readLine().toCharArray();}\n    static String rline() throws IOException {return __in.readLine();}\n    static int rni() throws IOException {input = new StringTokenizer(__in.readLine()); return Integer.parseInt(input.nextToken());}\n    static int ni() {return Integer.parseInt(input.nextToken());}\n    static long rnl() throws IOException {input = new StringTokenizer(__in.readLine()); return Long.parseLong(input.nextToken());}\n    static long nl() {return Long.parseLong(input.nextToken());}\n    // output\n    static void pr(int i) {__out.print(i);}\n    static void prln(int i) {__out.println(i);}\n    static void pr(long l) {__out.print(l);}\n    static void prln(long l) {__out.println(l);}\n    static void pr(double d) {__out.print(d);}\n    static void prln(double d) {__out.println(d);}\n    static void pr(char c) {__out.print(c);}\n    static void prln(char c) {__out.println(c);}\n    static void pr(char[] s) {__out.print(new String(s));}\n    static void prln(char[] s) {__out.println(new String(s));}\n    static void pr(String s) {__out.print(s);}\n    static void prln(String s) {__out.println(s);}\n    static void pr(Object o) {__out.print(o);}\n    static void prln(Object o) {__out.println(o);}\n    static void prln() {__out.println();}\n    static void pryes() {__out.println(\"yes\");}\n    static void pry() {__out.println(\"Yes\");}\n    static void prY() {__out.println(\"YES\");}\n    static void prno() {__out.println(\"no\");}\n    static void prn() {__out.println(\"No\");}\n    static void prN() {__out.println(\"NO\");}\n    static void pryesno(boolean b) {__out.println(b ? \"yes\" : \"no\");};\n    static void pryn(boolean b) {__out.println(b ? \"Yes\" : \"No\");}\n    static void prYN(boolean b) {__out.println(b ? \"YES\" : \"NO\");}\n    static void prln(int... a) {for(int i = 0, len = a.length - 1; i < len; __out.print(a[i]), __out.print(' '), ++i); __out.println(a[a.length - 1]);}\n    static void prln(long... a) {for(int i = 0, len = a.length - 1; i < len; __out.print(a[i]), __out.print(' '), ++i); __out.println(a[a.length - 1]);}\n    static <T> void prln(Collection<T> c) {int n = c.size() - 1; Iterator<T> iter = c.iterator(); for(int i = 0; i < n; __out.print(iter.next()), __out.print(' '), ++i); __out.println(iter.next());}\n    static void flush() {__out.flush();}\n    static void close() {__out.close();}}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(map(int,input().split()))\n\ndef solve(arr,n):\n    ans = 0\n    res = [0 for i in range(101)]\n    for i in range(n):\n        res[arr[i]] += 1\n    sec = None\n    for i in range(101):\n        if res[i] <= 1 and sec == None:\n            sec = i\n        if res[i] == 0:\n            ans = i\n            break\n    return ans + sec\n    \n            \n    \n\nt = inp()\nwhile t > 0:\n    n = inp()\n    arr = inlt()\n    print(solve(arr,n))\n    t -= 1\n    "
        },
        {
            "language": 3,
            "solution": "t = int(input())\nwhile (t > 0):\n    nr_mex = 2\n    sum = 0\n    nr = []\n    n = int(input())\n    aux = input()\n    for i in range (102):\n        nr.append(0)\n    for i in range(n):\n        val = int(aux.split()[i])\n        nr[val] += 1\n    for i in range(102):\n        if nr[i] < nr_mex:\n            if nr[i] == 0 and nr_mex == 2:\n                sum += i\n                nr_mex -= 1\n            sum += i\n            nr_mex -= 1\n        if nr_mex == 0:\n            break\n    print(sum)\n    t -= 1"
        },
        {
            "language": 3,
            "solution": "def mex(m):\n    for i in range(len(m)):\n        if i not in m:\n            return i\n    return len(m)\n\nt = int(input()) # amount of test cases\n\nres = []\n\nfor i in range(t):\n    s = int(input()) # size of set\n    M = [int(x) for x in input().split()]\n    \n    if len(M) == max(M) + 1 == mex(M):\n        res.append(max(M) + 1)\n        \n    if len(M) > mex(M):\n        A = mex(M)\n        \n        for i in range(A):\n            M.pop(M.index(i))\n        \n        res.append(A + mex(M))\n\nfor e in res:\n    print(e)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as dd\nimport sys\ninput=sys.stdin.readline\nt=int(input())\nwhile t:\n    n=int(input())\n    #n,m=map(int,input().split())\n    l=list(map(int,input().split()))\n    l.sort()\n    ans=0\n    d=dd(int)\n    for i in range(n):\n        d[l[i]]+=1\n    for i in range(102):\n        if(d[i]==1 or d[i]==0):\n            ans=i\n            break\n    for i in range(102):\n        if(not d[i]):\n            ans+=i\n            break\n    print(ans)\n    t-=1"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Subsetmexdemo {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        Scanner sc =new Scanner(System.in);\n        int t = sc.nextInt();\n        for(int i = 0; i < t; i++){\n            int n = sc.nextInt();\n            Integer[] arr = new Integer[n];\n            Set<Integer> set1 = new HashSet<>();\n            Set<Integer> set2 = new HashSet<>();\n            for(int j = 0; j < n; j ++){\n                arr[j] = sc.nextInt();\n                if(!set1.contains(arr[j])){\n                    set1.add(arr[j]);\n                }\n                else{\n                    set2.add(arr[j]);\n                }\n            }\n            Object[] a = set1.toArray();\n            Object[] b = set2.toArray();\n            Arrays.sort(a);\n            Arrays.sort(b);\n            int output = 0, k = 0;\n            \n             \n            for(k = 0; k < a.length; k++){\n                if((int)a[k] != k){\n                    output = k;\n                    break;\n                }\n                \n            }\n            if(a.length == k){\n                output = k;\n            }\n            for(k = 0; k < b.length; k++){\n                if((int)b[k] != k){\n                    output += k;\n                    break;\n                }\n               \n            }\n            if(b.length == k){\n                output += k;\n            }\n            System.out.println(output);\n        }\n        \n    }\n    \n}"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n\tn=int(input())\n\ta=sorted(list(map(int,input().split())))\n\tl=[0,0]\n\tfor i in a:\n\t\tif i==l[0]:\n\t\t\tl[0]+=1\n\t\telif i==l[1]:\n\t\t\tl[1]+=1\n\t\t\n\tprint(sum(l))"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\npublic class Main {\n    // static int mod = 1000000007;\n    static int max;;\n    public static void main(String[] args) throws IOException {\n        PrintWriter out = new PrintWriter(System.out);\n        Reader fs = new Reader();\n        // BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        // StringTokenizer st= new StringTokenizer(br.readLine());\n        int t = fs.nextInt();\n        while (t--!=0) {\n            int n = fs.nextInt();\n            int[] arr = new int[n];\n            int[] count= new int[101];\n            for (int i=0; i<n; i++) {\n                arr[i] = fs.nextInt();\n                count[arr[i]]++;\n            }\n            int ans=0;\n            boolean foundone = false;\n            for (int i=0; i<=100; i++) {\n                // out.println(i+\",\"+count[i]+\",\"+ans);\n                if (count[i]==0) {\n                    ans+=i;\n                    if (!foundone) {\n                        ans+=i;\n                    }\n                    break;\n                }\n                if (count[i]==1) {\n                    if (foundone) {\n                        continue;\n                    }\n                    ans+=i;\n                    foundone=true;\n                }\n            }\n            out.println(ans);\n        }\n        out.close();\n    }\n\n\n\n    static class Reader\n    {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n \n        public Reader()\n        {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n \n        public Reader(String file_name) throws IOException\n        {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n \n        public String readLine() throws IOException\n        {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1)\n            {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n \n        public int nextInt() throws IOException\n        {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do\n            {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n \n            if (neg)\n                return -ret;\n            return ret;\n        }\n \n        public long nextLong() throws IOException\n        {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n \n        public double nextDouble() throws IOException\n        {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n \n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n \n            if (c == '.')\n            {\n                while ((c = read()) >= '0' && c <= '9')\n                {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n \n            if (neg)\n                return -ret;\n            return ret;\n        }\n \n        private void fillBuffer() throws IOException\n        {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n \n        private byte read() throws IOException\n        {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n \n        public void close() throws IOException\n        {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile t:\n    t=t-1\n    n=int(input())\n    a=list(map(int,input().split()))\n    x=[0 for i in range(101)]\n    cnt=0\n    out=0\n    for i in a:\n        x[i]+=1\n    flag=0\n    for i in range(101):\n        if x[i]>=1:\n            x[i]-=1\n            continue\n        if x[i]==0:\n            out+=i\n            flag=1\n        if flag:\n            break\n    flag=0\n    for i in range(101):\n        if x[i]>=1:\n            x[i]-=1\n            continue\n        if x[i]==0:\n            out+=i\n            flag=1\n        if flag:\n            break\n        \n    print(out)\n    \n    \n            \n"
        }
    ]
}