{
    "name": "436_B. Om Nom and Spiders",
    "source": "CODEFORCES",
    "description": "Om Nom really likes candies and doesn't like spiders as they frequently steal candies. One day Om Nom fancied a walk in a park. Unfortunately, the park has some spiders and Om Nom doesn't want to see them at all.\n\n<image>\n\nThe park can be represented as a rectangular n \u00d7 m field. The park has k spiders, each spider at time 0 is at some cell of the field. The spiders move all the time, and each spider always moves in one of the four directions (left, right, down, up). In a unit of time, a spider crawls from his cell to the side-adjacent cell in the corresponding direction. If there is no cell in the given direction, then the spider leaves the park. The spiders do not interfere with each other as they move. Specifically, one cell can have multiple spiders at the same time.\n\nOm Nom isn't yet sure where to start his walk from but he definitely wants:\n\n  * to start walking at time 0 at an upper row cell of the field (it is guaranteed that the cells in this row do not contain any spiders); \n  * to walk by moving down the field towards the lowest row (the walk ends when Om Nom leaves the boundaries of the park). \n\n\n\nWe know that Om Nom moves by jumping. One jump takes one time unit and transports the little monster from his cell to either a side-adjacent cell on the lower row or outside the park boundaries.\n\nEach time Om Nom lands in a cell he sees all the spiders that have come to that cell at this moment of time. Om Nom wants to choose the optimal cell to start the walk from. That's why he wonders: for each possible starting cell, how many spiders will he see during the walk if he starts from this cell? Help him and calculate the required value for each possible starting cell.\n\nInput\n\nThe first line contains three integers n, m, k (2 \u2264 n, m \u2264 2000; 0 \u2264 k \u2264 m(n - 1)). \n\nEach of the next n lines contains m characters \u2014 the description of the park. The characters in the i-th line describe the i-th row of the park field. If the character in the line equals \".\", that means that the corresponding cell of the field is empty; otherwise, the character in the line will equal one of the four characters: \"L\" (meaning that this cell has a spider at time 0, moving left), \"R\" (a spider moving right), \"U\" (a spider moving up), \"D\" (a spider moving down). \n\nIt is guaranteed that the first row doesn't contain any spiders. It is guaranteed that the description of the field contains no extra characters. It is guaranteed that at time 0 the field contains exactly k spiders.\n\nOutput\n\nPrint m integers: the j-th integer must show the number of spiders Om Nom will see if he starts his walk from the j-th cell of the first row. The cells in any row of the field are numbered from left to right.\n\nExamples\n\nInput\n\n3 3 4\n...\nR.L\nR.U\n\n\nOutput\n\n0 2 2 \n\nInput\n\n2 2 2\n..\nRL\n\n\nOutput\n\n1 1 \n\nInput\n\n2 2 2\n..\nLR\n\n\nOutput\n\n0 0 \n\nInput\n\n3 4 8\n....\nRRLL\nUUUU\n\n\nOutput\n\n1 3 3 1 \n\nInput\n\n2 2 2\n..\nUU\n\n\nOutput\n\n0 0 \n\nNote\n\nConsider the first sample. The notes below show how the spider arrangement changes on the field over time:\n    \n    \n      \n    ...        ...        ..U       ...  \n    R.L   ->   .*U   ->   L.R   ->  ...  \n    R.U        .R.        ..R       ...  \n      \n    \n\nCharacter \"*\" represents a cell that contains two spiders at the same time.\n\n  * If Om Nom starts from the first cell of the first row, he won't see any spiders. \n  * If he starts from the second cell, he will see two spiders at time 1. \n  * If he starts from the third cell, he will see two spiders: one at time 1, the other one at time 2. ",
    "difficulty": "B",
    "tags": [
        "implementation",
        "math"
    ],
    "rating": 1400,
    "public_test": [
        {
            "input": "2 2 2\n..\nRL\n",
            "output": "1 1 "
        },
        {
            "input": "3 3 4\n...\nR.L\nR.U\n",
            "output": "0 2 2 "
        },
        {
            "input": "2 2 2\n..\nUU\n",
            "output": "0 0 "
        },
        {
            "input": "3 4 8\n....\nRRLL\nUUUU\n",
            "output": "1 3 3 1 "
        },
        {
            "input": "2 2 2\n..\nLR\n",
            "output": "0 0 "
        }
    ],
    "generated_test": [
        {
            "input": "3 7 26\n.......\nLDUDLLD\nDLRDDLD\n",
            "output": "0 0 0 2 2 0 0\n"
        },
        {
            "input": "4 5 15\n.....\nDRRLR\nULDLD\nDLRQL\n",
            "output": "1 2 2 1 0\n"
        },
        {
            "input": "9 8 30\n........\n.L.LDRR.\nD.LDLR.U\n..RL.L..\nUR.UL...\n.D.....L\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "6 1 4 3 0 3 2 3\n"
        },
        {
            "input": "8 9 34\n.........\n.R.LDR.D.\n....UULU.\nR.D..DL.L\n.R..DLUDU\nR........\n.URU...UU\n.....D.L.\n",
            "output": "1 2 2 3 2 4 2 2 3\n"
        },
        {
            "input": "10 10 47\n..........\n.R.LML.R.L\nR.ULUL.RUL\nRD..RL.L..\nRU.D....LU\n..RRR..DL.\n.DRUUD.ULD\n...D...LDD\n...UUU.U..\nR.....D...\n",
            "output": "1 2 6 5 7 1 0 5 5 4\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n..\n..\n.D\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\n.U\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.D\n..\n..\nUD\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "22 4\n"
        },
        {
            "input": "5 5 10\n.....\nRU.D.\n..DLL\n.D...\nL..LR\n",
            "output": "0 2 1 0 0\n"
        },
        {
            "input": "2 2 1\n..\nUU\n",
            "output": "0 0\n"
        },
        {
            "input": "3 7 26\n.......\nUDLDLLD\nDLRDDLD\n",
            "output": "0 1 0 2 2 0 0\n"
        },
        {
            "input": "4 5 15\n.....\nDRRLR\nDLDLU\nDLRQL\n",
            "output": "0 2 2 1 1\n"
        },
        {
            "input": "9 8 30\n........\n.L.LDRR.\nD.LDLR.U\n..RL.L..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "6 1 3 3 0 3 2 3\n"
        },
        {
            "input": "10 10 47\n..........\n.R.LML.R.L\nR.ULUL.RUL\nRD..RL.L..\nRU.D....LU\n.LD..RRR..\n.DRUUD.ULD\n...D...LDD\n...UUU.U..\nR.....D...\n",
            "output": "1 2 6 4 7 1 0 4 4 3\n"
        },
        {
            "input": "4 5 15\n.....\nDRSLR\nDLDLU\nDLRQL\n",
            "output": "0 2 2 0 1\n"
        },
        {
            "input": "10 10 47\n..........\n.R.LML.R.L\nR.LLUU.RUL\nRD..RL.L..\nRU.D....LU\n.LD..RRR..\n.DRUUD.ULD\n...D...LDD\n...UUU.U..\nR.....D...\n",
            "output": "2 2 5 3 7 2 0 4 4 3\n"
        },
        {
            "input": "9 8 30\n........\n.L.LDRR.\nU.RLDL.D\n..RL/L..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "6 2 2 4 1 3 2 1\n"
        },
        {
            "input": "4 5 15\n.....\nDRSLR\nDLDLU\nLRRDL\n",
            "output": "0 2 2 0 2\n"
        },
        {
            "input": "6 8 28\n........\n.L.LDRR.\nU.RLDL.D\n.-RL.L..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "5 1 2 2 1 2 1 1\n"
        },
        {
            "input": "4 5 15\n.....\nDRRLR\nULDLD\nLRRLD\n",
            "output": "2 1 2 1 1\n"
        },
        {
            "input": "10 8 30\n........\n.L.LDRR.\nD.LDLR.U\n..RL.L..\nUR.UL...\n.D.....L\nR..UDULL\n........\nUD.D...D\n........\n",
            "output": "7 1 4 2 0 3 2 3\n"
        },
        {
            "input": "5 7 19\n.......\nRDLLLRL\nUUR..U.\n.D/DLLL\n..R..UU\n",
            "output": "1 4 2 2 1 3 3\n"
        },
        {
            "input": "8 9 28\n.........\n.R.LDR.D.\n....UULU.\nR.D..DL.L\nUDULD..R.\nR........\n.URU...UU\n.....D.L.\n",
            "output": "2 1 3 3 2 3 1 2 2\n"
        },
        {
            "input": "10 10 0\n..........\n.R.LLL.R.L\nR.ULUL.RUL\nRD..RL.L..\nRU.D....LU\n..RRR..DL.\n.DRUUD.ULD\n...D...LDD\n...UUU.U..\nR.....D...\n",
            "output": "1 2 6 6 7 1 0 5 5 4\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n.-\n..\n.D\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\nU.\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.D\n..\n..\nUD\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "23 3\n"
        },
        {
            "input": "2 100 59\n....................................................................................................\n.R.LL.D...DR..D.L.....DLRD.RL.RL....LD.DL.R..D.L.LLRR.DLRD...R.RLL.RRDL.DLDRRRDL.L..RRDL.RLLD..D.RD.\n",
            "output": "0 0 2 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 1 0 1 1 0 1 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 0 0 1 1 2 0 0 0 1 2 0 0 1 0 0 0 1 1 2 0 1 0 0 0 0 1 2 0 0 1 2 0 0 0 0 0 0 0 1 0\n"
        },
        {
            "input": "2 2 1\n..\nRL\n",
            "output": "1 1\n"
        },
        {
            "input": "3 4 8\n....\nLLRR\nUUUU\n",
            "output": "2 1 1 2\n"
        },
        {
            "input": "4 5 15\n.....\nDRRLR\nUDLLD\nDLRQL\n",
            "output": "2 2 2 1 0\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n..\n..\n.D\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\n.U\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.D\n..\n..\nDU\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "21 5\n"
        },
        {
            "input": "5 5 0\n.....\nRU.D.\n..DLL\n.D...\nRL..L\n",
            "output": "1 2 1 0 1\n"
        },
        {
            "input": "2 7 26\n.......\nUDLDLLD\nDLRDDLD\n",
            "output": "0 1 0 1 1 0 0\n"
        },
        {
            "input": "9 8 30\n........\n.L.LDRR.\nD.LDLR.U\n..L/LR..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "5 2 2 3 0 2 2 3\n"
        },
        {
            "input": "10 10 47\n..........\n.R.LML.R.L\nR.LLUU.RUL\n..L.LR..DR\nRU.D....LU\n.LD..RRR..\n.DRUUD.ULD\n...D...LDD\n...UUU.U..\nR.....C...\n",
            "output": "2 3 4 2 6 2 0 3 5 3\n"
        },
        {
            "input": "4 5 15\n.....\nDRSLR\nULDLD\nLRRDL\n",
            "output": "1 2 2 0 1\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n..\n..\n.D\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\n.U\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.E\n..\n..\nUD\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "22 4\n"
        },
        {
            "input": "2 2 1\n..\nUV\n",
            "output": "0 0\n"
        },
        {
            "input": "9 8 30\n........\n.L.LDRR.\nD.LDLR.U\n..RL/L..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "6 1 3 3 0 3 2 3\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n..\n..\n.D\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\n.U\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.E\n..\n..\nUD\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n..\nU.\n..\n..\n..\nU.\n.-\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "22 4\n"
        },
        {
            "input": "4 5 15\n.....\nDRSLR\nDLDLU\nLDRQL\n",
            "output": "0 2 2 0 1\n"
        },
        {
            "input": "10 10 47\n..........\n.R.LML.R.L\nR.LLUU.RUL\nRD..RL.L..\nRU.D....LU\n.LD..RRR..\n.DRUUD.ULD\n...D...LDD\n...UUU.U..\nR.....C...\n",
            "output": "2 2 5 3 7 2 0 4 4 3\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n..\n..\n.D\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\n.U\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.E\n..\n..\nUD\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n./\nU.\n..\n..\n..\nU.\n.-\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "22 4\n"
        },
        {
            "input": "4 5 15\n.....\nDRSLR\nDLDLU\nLQRDL\n",
            "output": "0 2 2 0 1\n"
        },
        {
            "input": "9 8 30\n........\n.L.LDRR.\nU.RLDL.D\n..RL.L..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "6 2 2 4 1 3 2 1\n"
        },
        {
            "input": "9 8 28\n........\n.L.LDRR.\nU.RLDL.D\n..RL.L..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "6 2 2 4 1 3 2 1\n"
        },
        {
            "input": "9 8 28\n........\n.L.LDRR.\nU.RLDL.D\n.-RL.L..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "6 2 2 4 1 3 2 1\n"
        },
        {
            "input": "9 8 30\n........\n.L-LDRR.\nD.LDLR.U\n..RL.L..\nUR.UL...\n.D.....K\nR..UDULL\n........\nDD.U...D\n........\n",
            "output": "6 1 3 3 0 3 2 3\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n..\n..\n.C\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\n.U\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.E\n..\n..\nUD\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "22 4\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n..\n..\nD.\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\n.U\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.E\n..\n..\nUD\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n..\nU.\n..\n..\n..\nU.\n.-\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "22 4\n"
        },
        {
            "input": "4 5 15\n.....\nDRSLR\nDLDLU\nMDRQL\n",
            "output": "0 2 2 0 1\n"
        },
        {
            "input": "100 2 45\n..\n.D\nU.\n..\nU.\n..\n..\n..\nU.\n..\n..\nD.\nU.\n..\n..\n.D\nDU\n..\nUD\n..\n..\n..\n..\n..\n..\nD.\n.U\n..\n..\nD.\nU.\n..\n..\n..\nU.\n..\n..\n.D\n..\n..\n.D\n..\n..\n.D\n.U\nD.\n..\n.E\n..\n..\nUD\n..\nU.\n..\nU.\n..\nUD\n..\nU.\n./\nU.\n..\n..\n..\nU.\n--\n..\nD.\n..\n..\nU.\n..\nU.\n..\nUU\n..\nU.\n..\nU.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.D\n..\n..\nD.\nU.\n.D\n..\n..\nU.\n.D\nU.\n..\n",
            "output": "22 4\n"
        },
        {
            "input": "4 5 15\n.....\nDRRLR\nDLDLU\nLQRDL\n",
            "output": "0 2 2 1 1\n"
        }
    ],
    "solution": [
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Comparator;\nimport java.io.IOException;\nimport java.util.StringTokenizer;\nimport java.math.*;\nimport java.util.*;\n\npublic class B\n{\n    public static void main(String[]args)\n    {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskX solver = new TaskX();\n        solver.solve(1,in,out);\n        out.close();\n    }\n}\n\nclass TaskX\n{\n    public void solve(int testNumber, InputReader in, PrintWriter out)\n    {\n        int n,m,k;\n        n = in.nextInt();\n        m = in.nextInt();\n        k = in.nextInt();     \n        char mat[][] = new char[n][m];\n        int sum[] = new int[m];\n\n        for(int i=0;i<m;++i) sum[i] = 0;\n\n        for(int i=0;i<n;++i)\n        {\n            String s = in.next();\n            for(int j=0;j<m;++j)\n            {\n                mat[i][j] = s.charAt(j);\n                if( mat[i][j] == 'U' ) if(i%2==0) sum[j]++;\n                if( mat[i][j] == 'L' )\n                {\n                    int pos = j-i;\n                    if( pos>=0 ) sum[pos]++;\n                }\n                if(mat[i][j] == 'R' )\n                {\n                    int pos = j+i;\n                    if( pos<m ) sum[pos]++;\n                }\n                if( mat[i][j]=='D') if( i == 0 ) sum[j]++;\n            }\n        }\n\n        for(int i=0;i<m;++i) out.printf(\"%d \",sum[i]);\n            out.println();\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass InputReader\n{\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n    public InputReader(InputStream stream){\n        reader = new BufferedReader(new InputStreamReader(stream), 32768);\n        tokenizer = null;\n    }\n    public String next(){\n        while (tokenizer == null || !tokenizer.hasMoreTokens()){\n            try{\n                tokenizer = new StringTokenizer(reader.readLine());\n            }\n            catch (IOException e){\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[2345][2345];\nint d[2345][2345];\nint dx[] = {1, 0, 0, -1};\nint dy[] = {0, 1, -1, 0};\nint main() {\n  int n, m, i, j, k;\n  cin >> n >> m >> k;\n  string s = \"ULRD\";\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      cin >> a[i][j];\n    }\n  }\n  for (j = 1; j <= m; j++) {\n    int d = 0;\n    for (i = 1; i <= n; i++) {\n      int t = (i - 1);\n      for (k = 0; k < 4; k++) {\n        int x = i + dx[k] * t;\n        int y = j + dy[k] * t;\n        if (x >= 1 && x <= n && y <= m && y >= 1 && a[x][y] == s[k]) d++;\n      }\n    }\n    cout << d << \" \";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class a {\npublic static void main(String[] args) throws IOException\n{\n    input.init(System.in);\n    PrintWriter out = new PrintWriter(System.out);\n    int n = input.nextInt(), m = input.nextInt(), k = input.nextInt();\n    char[][] data = new char[n][m];\n    for(int i = 0; i<n; i++) data[i] = input.next().toCharArray();\n    int[] res = new int[m];\n    for(int i = 0; i<n; i++)\n        for(int j = 0; j<m; j++)\n        {\n            if(data[i][j] == 'U' && i%2 == 0) res[j]++;\n            if(data[i][j] == 'R' && j+i<m) res[j+i]++;\n            if(data[i][j] == 'L' && i <= j) res[j-i]++;\n        }\n    for(int x: res) out.print(x+\" \");\n    out.close();\n}\npublic static class input {\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n\n    /** call this method to initialize reader for InputStream */\n    static void init(InputStream input) {\n        reader = new BufferedReader(\n                     new InputStreamReader(input) );\n        tokenizer = new StringTokenizer(\"\");\n    }\n\n    /** get next word */\n    static String next() throws IOException {\n        while ( ! tokenizer.hasMoreTokens() ) {\n            //TODO add check for eof if necessary\n            tokenizer = new StringTokenizer(\n                   reader.readLine() );\n        }\n        return tokenizer.nextToken();\n    }\n\n    static int nextInt() throws IOException {\n        return Integer.parseInt( next() );\n    }\n    \n    static double nextDouble() throws IOException {\n        return Double.parseDouble( next() );\n    }\n    static long nextLong() throws IOException {\n        return Long.parseLong( next() );\n    }\n}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class ProblemB {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n, m, k;\n        n = sc.nextInt();\n        m = sc.nextInt();\n        k = sc.nextInt();\n        sc.nextLine();\n        String[] mat = new String[n];\n        for(int i = 0; i < n; ++i) {\n            mat[i] = sc.nextLine();\n        }\n        for(int j = 0; j < m; ++j) {\n            int c = 0;\n            for(int i = 1; i < n; ++i) {\n                if(j - i >= 0 && mat[i].charAt(j - i) == 'R') c++;\n                if(j + i < m && mat[i].charAt(j + i) == 'L') c++;\n                if(2*i < n && mat[2*i].charAt(j) == 'U') c++;\n            }\n            System.out.print(c + \" \");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar mapa[2005][2005];\nint C[2005];\nint main() {\n  cin.sync_with_stdio(0);\n  cin.tie(0);\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    cin >> mapa[i];\n    for (int j = 0; j < m; j++) {\n      if (mapa[i][j] == '.') continue;\n      if (mapa[i][j] == 'D') continue;\n      if (mapa[i][j] == 'U') {\n        if (i % 2 == 0) C[j]++;\n        continue;\n      }\n      int pos = j;\n      if (mapa[i][j] == 'R')\n        pos += i;\n      else\n        pos -= i;\n      if (pos < 0 || pos >= m) continue;\n      C[pos]++;\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    if (i) cout << \" \";\n    cout << C[i];\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\t\tint R = in.nextInt();\n\t\tint C = in.nextInt();\n\t\tint k = in.nextInt();\n\t\tint[] res = new int[C];\n\t\tfor (int r = 0; r < R; r++) {\n\t\t\tchar[] s = in.next().toCharArray();\n\t\t\tfor (int c = 0; c < C; c++) {\n\t\t\t\tif (s[c] == 'R') {\n\t\t\t\t\tif (c + r < C)\n\t\t\t\t\t\t++res[c + r];\n\t\t\t\t} else if (s[c] == 'L') {\n\t\t\t\t\tif (c - r >= 0)\n\t\t\t\t\t\t++res[c - r];\n\t\t\t\t} else if (s[c] == 'U') {\n\t\t\t\t\tres[c] += 1 - r % 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < C; i++) {\n\t\t\tif (i > 0)\n\t\t\t\tout.print(' ');\n\t\t\tout.print(res[i]);\n\t\t}\n\t\tout.println();\n\t}\n}\n\nclass InputReader {\n\tpublic BufferedReader reader;\n\tpublic StringTokenizer tokenizer;\n\n\tpublic InputReader(InputStream stream) {\n\t\treader = new BufferedReader(new InputStreamReader(stream));\n\t}\n\n\tpublic String next() {\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int rows = in.nextInt();\n        int cols = in.nextInt();\n        int garbage = in.nextInt();\n        String[] grid = new String[rows];\n        for (int i = 0; i < rows; i++) {\n            grid[i] = in.nextToken();\n        }\n        for (int startCol = 0; startCol < cols; startCol++) {\n            int curAns = 0;\n            for (int j = 1; j < rows; j++) {\n                if (startCol >= j && grid[j].charAt(startCol - j) == 'R') {\n                    ++curAns;\n                }\n                if (startCol + j < cols && grid[j].charAt(startCol + j) == 'L') {\n                    ++curAns;\n                }\n                if (j + j < rows && grid[j + j].charAt(startCol) == 'U') {\n                    ++curAns;\n                }\n            }\n            if (startCol > 0) {\n                out.print(' ');\n            }\n            out.print(curAns);\n        }\n        out.println();\n    }\n}\n\nclass InputReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public InputReader(InputStream stream) {\n        br = new BufferedReader(new InputStreamReader(stream));\n    }\n\n    public String nextToken() {\n        while (st == null || !st.hasMoreTokens()) {\n            String line = null;\n            try {\n                line = br.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n            if (line == null) {\n                return null;\n            }\n            st = new StringTokenizer(line);\n        }\n        return st.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(nextToken());\n    }\n\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nchar a[2005][2005];\nint main() {\n  int n, m, k;\n  int i, j;\n  int b[2005] = {0};\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 0; i < n; i++) scanf(\"%s\", a[i]);\n  for (i = 1; i < n; i++)\n    for (j = 0; j < m; j++) {\n      if (a[i][j] == 'R' && i + j < m) b[i + j]++;\n      if (a[i][j] == 'L' && j - i >= 0) b[j - i]++;\n      if (a[i][j] == 'U') {\n        if (i % 2 == 0) b[j]++;\n      }\n    }\n  for (i = 0; i < m; i++) printf(\"%d \", b[i]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar g[2222][2222];\nint main() {\n  ios::sync_with_stdio(false);\n  int R, C, K;\n  cin >> R >> C >> K;\n  for (int r = 0; r < R; r++) cin >> g[r];\n  for (int c = 0; c < C; c++) {\n    int res = 0;\n    for (int r = 0; r < R; r++) {\n      if (c - r >= 0 && g[r][c - r] == 'R') res++;\n      if (c + r < C && g[r][c + r] == 'L') res++;\n      if (r + r < R && g[r + r][c] == 'U') res++;\n    }\n    cout << res << ' ';\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar p[2014][2014];\nint ans[2014];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, m, k, i, j;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 0; i < n; ++i) scanf(\"%s\", p[i]);\n  for (i = 0; i < n; ++i) {\n    for (j = 0; j < m; ++j) {\n      switch (p[i][j]) {\n        case 'L':\n          if (j - i >= 0) ++ans[j - i];\n          break;\n        case 'R':\n          if (j + i < m) ++ans[j + i];\n          break;\n        case 'D':\n          break;\n        case 'U':\n          if (((i + 1) & 1) == 1) ++ans[j];\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  printf(\"%d\", ans[0]);\n  for (j = 1; j < m; ++j) printf(\" %d\", ans[j]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1000 * 1000 * 1000;\nconst int nmax = 5000;\nstring s;\nint n, m, k, ans[nmax];\nint main() {\n  cin >> n >> m >> k;\n  getline(cin, s);\n  getline(cin, s);\n  for (int i = 1; i < n; i++) {\n    getline(cin, s);\n    for (int j = 0; j < m; j++) {\n      if (s[j] == 'R') {\n        if (i + j < m) ans[i + j]++;\n      } else if (s[j] == 'L') {\n        if (j - i >= 0) ans[j - i]++;\n      } else if (s[j] == 'U') {\n        if (i % 2 == 0) ans[j]++;\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) cout << ans[i] << \" \";\n}\n"
        },
        {
            "language": 1,
            "solution": "x=raw_input().split(' ')\nn=int(x[0])\nm=int(x[1])\nk=int(x[2])\ni=0\narr=[]\nwhile i<n:\n    y=raw_input()\n    arr.append(y)\n    i=i+1\nj=0\nwhile j<m:\n    ctr=0\n    i=1\n    while i<n:\n        if (j+i)<m and arr[i][j+i]=='L':\n            ctr=ctr+1\n        if (j-i)>=0 and arr[i][j-i]=='R':\n            ctr=ctr+1\n        if (i+i)<n and arr[i+i][j]=='U':\n            ctr=ctr+1\n        i=i+1\n    print ctr,\n    j=j+1\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.Scanner;\n\n/**\n *\n * @author Darkhan\n */\npublic class task2 {\n    public static void main(String[] args){\n        Scanner in = new Scanner (System.in);\n        int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n        int[] res = new int[m];\n        in.nextLine();\n        ArrayList<Pauk> pauki = new ArrayList<>();\n        for (int i=0;i<n;i++){\n            String line = in.nextLine();\n            for (int j=0;j<m;j++){\n                if (line.charAt(j) != '.' && line.charAt(j) != 'D') pauki.add(new Pauk(line.charAt(j),i,j));\n            }\n        }\n        int count;\n        Pauk p;\n        Iterator<Pauk> iter;\n        iter = pauki.iterator();\n        while (iter.hasNext()) {\n            p = iter.next();\n            if (p.t == 'U'){\n                if (p.i%2 == 0) res[p.j]++;\n            }\n            else if (p.t == 'R'){\n                if (p.j+p.i < m) res[p.j+p.i]++;\n            }\n            else if (p.t == 'L'){\n                if (p.j-p.i >= 0) res[p.j-p.i]++;\n            }\n        }\n        for (int i=0;i<m;i++)\n            System.out.print(res[i] + \" \");\n    }\n}\n\nclass Pauk{\n    char t;\n    int i,j;\n    public Pauk(char tt, int ii, int jj){\n        t = tt;\n        i = ii;\n        j = jj;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nconst T& max(const T& a, const T& b, const T& c) {\n  return max(a, max(b, c));\n}\ntemplate <class T>\nconst T& min(const T& a, const T& b, const T& c) {\n  return min(a, min(b, c));\n}\nlong long stoi(string& str) {\n  istringstream second(str);\n  long long i;\n  second >> i;\n  return i;\n}\nstring itos(long long i) {\n  stringstream second;\n  second << i;\n  return second.str();\n}\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }\nlong long poww(long long a, long long b) {\n  long long res = 1;\n  for (int i = 1; i <= b; i++) res *= a;\n  return res;\n}\nlong long sumOfDigs(string s) {\n  long long sum = 0;\n  for (int i = 0; i < s.length(); i++) sum += s[i] - '0';\n  return sum;\n}\nlong long mod = 1000000 + 3;\nint program();\nusing namespace std;\nint cnt[2001];\nchar a[2001][2001];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) cin >> a[i][j];\n  for (int i = 2; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      char c = a[i][j];\n      if (c == 'L' && (j - i + 1 >= 1))\n        cnt[j - i + 1]++;\n      else if (c == 'R' && j + i - 1 <= m)\n        cnt[j + i - 1]++;\n      else if (c == 'U' && (i & 1))\n        cnt[j]++;\n    }\n  }\n  for (int i = 1; i <= m; i++) cout << cnt[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nstruct Spider {\n  char d;\n  int i, j;\n  Spider(char dd, int ii, int jj) {\n    d = dd;\n    i = ii;\n    j = jj;\n  }\n};\nint main() {\n  int n, m, k;\n  std::cin >> n >> m >> k;\n  std::vector<Spider> spiders;\n  std::vector<int> answers(m, 0);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      char c;\n      std::cin >> c;\n      if (c == '.' || c == 'D')\n        continue;\n      else if (c == 'U' && i % 2 == 0)\n        answers[j]++;\n      else if (c == 'R' || c == 'L') {\n        int ind = (c == 'L') ? j - i : j + i;\n        if (ind < m && ind >= 0) answers[ind]++;\n      }\n    }\n  }\n  for_each(answers.begin(), answers.end(),\n           [](const int &a) { std::cout << a << \" \"; });\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long double pie = 3.1415926535;\nusing namespace std;\nlong long fpow(long long n, long long p) {\n  long long m = 1;\n  while (p) {\n    if (p % 2) m *= n;\n    p >>= 1;\n    n *= n;\n  }\n  return m;\n}\nbool br1, br2, br;\nchar ch, ch1, ch2;\nlong long n, k, x, y, z, mini, maxi, l, ind, ini, sum, t, len, r, w, imini, m;\nstring s, s1, s2;\nlong long a[(int)1e5 + 10];\nvoid solve() {\n  cin >> n >> m >> k;\n  for (long long i = 0; i < n; i++)\n    for (long long j = 0; j < m; j++) {\n      cin >> ch;\n      if (ch == 'U' && i % 2 == 0) a[j]++;\n      if (ch == 'L' && j >= i) a[j - i]++;\n      if (ch == 'R' && j + i < m) a[i + j]++;\n    }\n  for (long long i = 0; i < m; i++) cout << a[i] << \" \";\n  cout << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<vector<int>> mass(n, vector<int>(m, 0));\n  string s;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    for (int j = 0; j < m; j++) {\n      if (s[j] == 'R') {\n        if (j + i < m) {\n          mass[i][j + i]++;\n        }\n      }\n      if (s[j] == 'L') {\n        if (j - i >= 0) {\n          mass[i][j - i]++;\n        }\n      }\n      if (s[j] == 'U') {\n        if (i % 2 == 0) {\n          mass[i / 2][j]++;\n        }\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    int ans = 0;\n    for (int j = 0; j < n; j++) {\n      ans += mass[j][i];\n    }\n    cout << ans << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar board[2020][2020];\nint main() {\n  int n, m, k;\n  while (scanf(\"%d%d%d\", &n, &m, &k) == 3) {\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", board[i]);\n    }\n    for (int j = 0; j < m; j++) {\n      if (j > 0) {\n        printf(\" \");\n      }\n      int cnt = 0;\n      for (int i = 0; i < n; i++) {\n        if (2 * i < n && board[2 * i][j] == 'U') {\n          cnt++;\n        }\n        if (board[0][j] == 'D') {\n          cnt++;\n        }\n        if (j - i >= 0 && board[i][j - i] == 'R') {\n          cnt++;\n        }\n        if (j + i < m && board[i][j + i] == 'L') {\n          cnt++;\n        }\n      }\n      printf(\"%d\", cnt);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.Arrays;\n\npublic class ZeptoB{\n    public static void main(String[] args){\n        int n=0, m=0, k=0, kk=0;\n        String[] input=null;\n        boolean first=true, done=false;\n\n        Scanner sc = new Scanner(System.in);\n        while(sc.hasNextLine() & !done){\n            if(first){\n                String[] firstLine = sc.nextLine().split(\" \");\n                n=Integer.parseInt(firstLine[0]);\n                m=Integer.parseInt(firstLine[1]);\n                k=Integer.parseInt(firstLine[2]);\n                first=false;\n                input=new String[n];\n            } else {\n                input[kk]=sc.nextLine();\n                kk++;\n                if(kk==n)\n                    done=true;\n            }\n        }\n        sc.close();\n        \n        ArrayList<int[]> left = new ArrayList<int[]>();\n        ArrayList<int[]> right = new ArrayList<int[]>();\n        ArrayList<int[]> up = new ArrayList<int[]>();\n        \n        for(int i=0; i<n; i++){\n            String line = input[i];\n            for(int j=0; j<m; j++){\n                int[] data = {j,i};\n                char c = line.charAt(j);\n                if(c=='L')\n                    left.add(data);\n                else if(c=='R')\n                    right.add(data);\n                else if(c=='U')\n                    up.add(data);\n            }\n        }\n        \n        int[][] encounters = new int[n][m];\n        \n        for(int[] loc: left){\n            int x = loc[0];\n            int y = loc[1];\n            x=x-y;\n            if(x>=0)\n                encounters[y][x]++;\n        }\n        for(int[] loc: right){\n            int x = loc[0];\n            int y = loc[1];\n            x=x+y;\n            if(x<m)\n                encounters[y][x]++;\n        }\n        for(int[] loc: up){\n            int x = loc[0];\n            int y = loc[1];\n            if((y%2)==0){\n                y=y/2;\n                encounters[y][x]++;\n            }\n        }\n        \n        int i=0, num=0;\n        for(int j=1; j<n; j++){\n            num+=encounters[j][i];\n        }\n        System.out.print(num);\n        \n        for(i=1; i<m; i++){\n            num=0;\n            for(int j=1; j<n; j++){\n                num+=encounters[j][i];\n            }\n            System.out.print(\" \"+num);\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "if __name__ == '__main__':\n    n, m, k = map(int, raw_input().split())\n    field = []\n    memo = [0] * m\n    for i in xrange(n):\n        field.append(list(raw_input()))\n    for i in xrange(1, n):\n        for j in xrange(m):\n            if field[i][j] == 'L':\n                if j - i >= 0:\n                    memo[j - i] += 1\n            elif field[i][j] == 'R':\n                if j + i < m:\n                    memo[j + i] += 1\n            elif field[i][j] == 'U':\n                if i % 2 == 0:\n                    memo[j] += 1\n            elif field[i][j] == 'D':\n                pass\n    print ' '.join(map(str, memo))"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python\nimport re\nimport inspect\nfrom sys import argv, exit\n\ndef rstr():\n    return input()\n\ndef rint():\n    return int(input())\n\ndef rints(splitchar=' '):\n    return [int(i) for i in input().split(splitchar)]\n\ndef varnames(obj, namespace=globals()):\n    return [name for name in namespace if namespace[name] is obj]\n\ndef pvar(var, override=False):\n    prnt(varnames(var), var)\n\ndef prnt(*args, override=False):\n    if '-v' in argv or override:\n        print(*args)\n\nclass Spider():\n    def __init__(self, x, y, d):\n        self.x = x\n        self.y = y\n        self.d = d\n\n    def get_copy(self):\n        return Spider(self.x, self.y, self.d)\n\n    def move(self):\n        if self.d == 'R':\n            self.x += 1\n        elif self.d == 'L':\n            self.x -= 1\n        elif self.d == 'U':\n            self.y -= 1\n        elif self.d == 'D':\n            self.y += 1\n        else:\n            raise Exception('WHAT HAVE YOU DONE', self.d)\n\ndef main(i, n, m, lders, rders, uders):\n    sightings = 0\n    \n    iders = [s for s in uders if s.x == i and s.y % 2 == 0]\n    sightings += len(iders)\n    prnt('id', len(iders))\n   \n    ulders = [s for s in rders if s.y == (i - s.x)]\n    sightings += len(ulders)\n    prnt('uld', len(ulders))\n  \n    urders = [s for s in lders if s.y == (s.x - i)]\n    sightings += len(urders)\n    prnt('urd', len(urders))\n    \n    return str(sightings)\n        \n\nif __name__ == '__main__':\n    (n,m,k) = rints()\n    field = [rstr() for i in range(n)]\n\n    si = [0 for i in range(m)]\n    spiders = []\n    for j,row in enumerate(field):\n        for i,space in enumerate(row):\n            if space == 'R':\n                if i+j < len(si):\n                    si[i+j] += 1\n            if space == 'L':\n                if i-j >= 0:\n                    si[i-j] += 1\n            if space == 'U':\n                if j % 2 == 0:\n                    si[i] += 1\n\n    print(' '.join([str(i) for i in si]))\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n/**\n *\n * @author alanl\n */\npublic class Main{\n    static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n    static StringTokenizer st;\n    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n    public static void main(String[] args) throws IOException{\n        int n = readInt(), m = readInt(), k = readInt();\n        char[][]adj = new char[n][m];\n        for(int i = 0; i<n; i++){\n            String s = readLine();\n            for(int j = 0; j<m; j++){\n                adj[i][j] = s.charAt(j);\n            }\n        }\n        for(int j = 0; j<m; j++){\n            int cnt = 0;\n            for(int i = 0; i<n; i++){\n                if((j-i)>=0 && adj[i][j-i]=='R')cnt++;\n                if((i+j)<m  && adj[i][i+j]=='L')cnt++;\n                if(adj[i][j]=='U'){\n                    if((i&1)==0)cnt++;\n                }\n            }\n            print(cnt+\" \");\n\t}\n\tprintln();\n    }\n    static String next () throws IOException {\n        while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(input.readLine().trim());\n        return st.nextToken();\n    }\n    static long readLong () throws IOException {\n        return Long.parseLong(next());\n    }\n    static int readInt () throws IOException {\n        return Integer.parseInt(next());\n    }\n    static double readDouble () throws IOException {\n        return Double.parseDouble(next());\n    }\n    static char readChar () throws IOException {\n        return next().charAt(0);\n    }\n    static String readLine () throws IOException {\n        return input.readLine().trim();\n    }\n    static void print(Object b) {\n        System.out.print(b);\n    }\n    static void println(Object b) {\n        System.out.println(b);\n    }\n    static void println() {\n        System.out.println();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dp[2005][2005];\nint main() {\n  int i, j;\n  int n, m, k;\n  char temp;\n  cin >> n >> m >> k;\n  char arr[n + 1][m + 1];\n  for (i = 1; i < n + 1; i++) {\n    for (j = 1; j < m + 1; j++) {\n      cin >> temp;\n      arr[i][j] = temp;\n    }\n  }\n  int ind = 0;\n  for (int i = 2; i <= n; i++) {\n    ind++;\n    for (int j = 1; j <= m; j++) {\n      if (j - ind >= 1) {\n        if (arr[i][j - ind] == 'R') dp[i][j]++;\n      }\n      if (j + ind <= m) {\n        if (arr[i][j + ind] == 'L') dp[i][j]++;\n      }\n      if (i - ind >= 1) {\n        if (arr[i - ind][j] == 'D') dp[i][j]++;\n      }\n      if (i + ind <= n) {\n        if (arr[i + ind][j] == 'U') dp[i][j]++;\n      }\n    }\n  }\n  for (int i = 1; i <= m; i++) {\n    int ans = 0;\n    for (int j = 2; j <= n; j++) {\n      ans = ans + dp[j][i];\n    }\n    cout << ans << \" \";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Arrays;\n\npublic final class myApp {\n\npublic static void main (String args []) {\n\n  Scanner in = new Scanner(System.in);\n  int i=0, j=0, omnom_v_pos=0;\n  String s = new String();\n  boolean isFirst = true;\n  char[][] myField = null;\n  int width = 0;\n  int height = 0;\n  int[] arrSpydersMet = null;\n         \n  while(in.hasNextLine()) {\n    s = in.nextLine();\n    \n    if (isFirst) {\n        width = Integer.parseInt(s.split(\" \")[1]);\n        height = Integer.parseInt(s.split(\" \")[0]);\n        arrSpydersMet = new int[width];\n        Arrays.fill(arrSpydersMet, 0);\n        myField = new char[width][height];\n        isFirst = false;   \n    }\n    else {\n        for(i = 0; i < width; i++) {\n           myField[i][j] = s.charAt(i);\n        };\n        j += 1;\n    } \n        \n    \n  }\n\n  \n     // System.out.println(\"--- step 0 ---\");\n    //  for (int p = 0; p<currentField.height; p++) {\n     //       for (int o = 0; o<currentField.width; o++)\n     //           System.out.print(currentField.spidersOnField[o][p]);\n     //       System.out.print(\"\\n\");\n     // }\n          \n      // move omnom down for each column\n      for(i = 0; i < width; i++) {\n          for(omnom_v_pos = 1; omnom_v_pos < height; omnom_v_pos++) {\n              // U\n              arrSpydersMet[i] += ((omnom_v_pos%2==0) && myField[i][(omnom_v_pos)] == 'U') ? 1 : 0; \n              // L\n              arrSpydersMet[i] += ((omnom_v_pos+i) < width && myField[omnom_v_pos+i][omnom_v_pos] == 'L') ? 1 : 0; \n              // R\n              arrSpydersMet[i] += ((i-omnom_v_pos) >= 0 && myField[i-omnom_v_pos][omnom_v_pos] == 'R') ? 1 : 0; \n          } \n      }  \n     \n   for(j = 0; j < width; j++) \n      System.out.print(arrSpydersMet[j] +\" \"); \n  \n\n  \n  \n  return;\n}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, ans[2005];\nchar a[2010][2010];\nvoid load() {\n  scanf(\"%d%d%d\\n\", &n, &m, &k);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", a[i]);\n  }\n}\nvoid solve() {\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      if (a[i][j] == 'L') {\n        if (j - i >= 0) {\n          ans[j - i]++;\n        }\n      }\n      if (a[i][j] == 'R') {\n        if (j + i < m) {\n          ans[j + i]++;\n        }\n      }\n      if (a[i][j] == 'U') {\n        if (i % 2 == 0) {\n          ans[j]++;\n        }\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    if (i > 0) printf(\" \");\n    printf(\"%d\", ans[i]);\n  }\n  printf(\"\\n\");\n}\nint main() {\n  load();\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.math.*;\npublic class B {\n    public static void main(String[] args) throws Exception {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        // Scanner scan = new Scanner(System.in);\n        // PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out)); \n        // int n = Integer.parseInt(bf.readLine());\n        StringTokenizer st = new StringTokenizer(bf.readLine());\n        // int[] a = new int[n]; for(int i=0; i<n; i++) a[i] = Integer.parseInt(st.nextToken());\n        int n = Integer.parseInt(st.nextToken());\n        int m = Integer.parseInt(st.nextToken());\n        int k = Integer.parseInt(st.nextToken());\n        char[][] board = new char[n][m];\n        for(int i=0; i<n; i++) {\n            char[] c = bf.readLine().toCharArray();\n            for(int j=0; j<m; j++) {\n                board[i][j] = c[j];\n            }\n        }\n        int[] counters = new int[m];\n        for(int i=0; i<n; i++) {\n            for(int j=0; j<m; j++) {\n                if(board[i][j] != '.') {\n                    if(board[i][j] == 'R')\n                        if(i+j < m)\n                            counters[i+j]++;\n                    if(board[i][j] == 'L')\n                        if(j-i >= 0)\n                            counters[j-i]++;\n                    if(board[i][j] == 'U')\n                        if(i%2 == 0)\n                            counters[j]++;\n                }\n            }\n        }\n        for(int i=0; i<m; i++) System.out.print(counters[i] + \" \");\n        // int n = scan.nextInt();\n        \n        // out.close(); System.exit(0);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class OmNomAndSpiders {\n    public static void main(String[] args) {\n        InputReader r = new InputReader(System.in);\n        int n = r.nextInt();\n        int m = r.nextInt();\n        int k = r.nextInt();\n        char[][] arr = new char[n][m];\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = r.next().toCharArray();\n        }\n        PrintWriter out = new PrintWriter(System.out);\n        for (int j = 0; j < m; j++) {\n            int seen = 0;\n            for (int i = 1; i < n; i++) {\n                if (j - i >= 0 && arr[i][j - i] == 'R')\n                    seen++;\n                if (j + i < m && arr[i][j + i] == 'L')\n                    seen++;\n                if (i + i < n && arr[i + i][j] == 'U')\n                    seen++;\n            }\n            out.println(seen);\n        }\n        out.close();\n    }\n\n    static class InputReader {\n        private BufferedReader reader;\n        private StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream));\n            tokenizer = null;\n        }\n\n        public InputReader(FileReader stream) {\n            reader = new BufferedReader(stream);\n            tokenizer = null;\n        }\n\n        public String nextLine() {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n                return null;\n            }\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint cnt[2000];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  memset(cnt, 0, sizeof(cnt));\n  char c;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      scanf(\" %c\", &c);\n      if (c == 'U') {\n        if (i % 2 == 0) cnt[j]++;\n      } else if (c == 'R') {\n        if (j + i < m) cnt[j + i]++;\n      } else if (c == 'L') {\n        if (j - i >= 0) cnt[j - i]++;\n      }\n    }\n  }\n  for (int i = 0; i < m; ++i) {\n    printf(\"%d\", cnt[i]);\n    if (i < m - 1) printf(\" \");\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nint spiders[2000];\nint main() {\n  cin >> n >> m >> k;\n  for (int r = 0; r < n; ++r) {\n    for (int c = 0; c < m; ++c) {\n      char t;\n      cin >> t;\n      if (t == 'U') {\n        if (r % 2 == 0) {\n          spiders[c]++;\n        }\n      }\n      if (t == 'R') {\n        int nc = c + r;\n        if (nc < 2000) spiders[nc]++;\n      }\n      if (t == 'L') {\n        int nc = c - r;\n        if (nc >= 0) spiders[nc]++;\n      }\n    }\n  }\n  for (int i = 0; i < m; ++i) {\n    cout << spiders[i];\n    if (i + 1 < m)\n      cout << ' ';\n    else\n      cout << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B\n{\n\tpublic static void main(String[] args) throws IOException\n\t{\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter writer = new PrintWriter(new OutputStreamWriter(System.out));\n\n\t\tStringTokenizer tokenizer = new StringTokenizer(reader.readLine());\n\t\tint n = Integer.parseInt(tokenizer.nextToken());\n\t\tint m = Integer.parseInt(tokenizer.nextToken());\n\t\tint k = Integer.parseInt(tokenizer.nextToken());\n\n\t\tchar [][] map = new char[n][m];\n\t\tfor(int i = 0 ; i < n ; i++)\n\t\t{\n\t\t\tmap[i] = reader.readLine().toCharArray();\n\t\t}\n\n\t\tfor(int c = 0 ; c < m ; c++)\n\t\t{\n\t\t\tint res = 0;\n\t\t\tfor(int r = 0 ; r < n ; r++)\n\t\t\t{\n\t\t\t\tint t = r;\n\n\t\t\t\t//up\n\t\t\t\tif(r-t >= 0)\n\t\t\t\t\tif(map[r-t][c] == 'D')\n\t\t\t\t\t\tres++;\n\n\t\t\t\t//down\n\t\t\t\tif(r+t < n)\n\t\t\t\t\tif(map[r+t][c] == 'U')\n\t\t\t\t\t\tres++;\n\n\t\t\t\t//left\n\t\t\t\tif(c-t >= 0)\n\t\t\t\t\tif(map[r][c-t] == 'R')\n\t\t\t\t\t\tres++;\n\n\t\t\t\t//right\n\t\t\t\tif(c+t < m)\n\t\t\t\t\tif(map[r][c+t] == 'L')\n\t\t\t\t\t\tres++;\n\t\t\t}\n\n\t\t\twriter.print(res);\n\t\t\tif(c == m-1)\n\t\t\t\twriter.println();\n\t\t\telse\n\t\t\t\twriter.print(\" \");\n\t\t}\n\n\t\twriter.flush();\n\t\twriter.close();\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class ZeptoB {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int m = Integer.parseInt(st.nextToken());\n        int k = Integer.parseInt(st.nextToken());\n        String[] map = new String[n];\n        for(int i=0; i<n; i++){\n            map[i] = br.readLine();\n        }\n        for(int j=0; j<m; j++){\n            int total=0;\n            for(int i=1; i<n; i++){\n                int count = (j-i>=0&&map[i].charAt(j-i)=='R'?1:0)\n                           +(j+i<m &&map[i].charAt(j+i)=='L'?1:0)\n                           +(i+i<n &&map[i+i].charAt(j)=='U'?1:0);\n                total+=count;\n            }\n            if(j==m-1) System.out.println(total); else System.out.print(total+\" \");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar board[2222][2222];\nint main(void) {\n  int n = 0;\n  int m = 0;\n  int k = 0;\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", board[i]);\n  for (int c = 0; c < m; c++) {\n    int spider = 0;\n    for (int i = 1; i < n; i++) {\n      spider += (((i + i) >= 0 && (i + i) < n && (c) >= 0 && (c) < m)\n                     ? board[i + i][c]\n                     : '.') == 'U';\n      spider += (((i - i) >= 0 && (i - i) < n && (c) >= 0 && (c) < m)\n                     ? board[i - i][c]\n                     : '.') == 'D';\n      spider += (((i) >= 0 && (i) < n && (c - i) >= 0 && (c - i) < m)\n                     ? board[i][c - i]\n                     : '.') == 'R';\n      spider += (((i) >= 0 && (i) < n && (c + i) >= 0 && (c + i) < m)\n                     ? board[i][c + i]\n                     : '.') == 'L';\n    }\n    printf(\"%d%c\", spider, c == m - 1 ? '\\n' : ' ');\n  }\n  while (getchar() != EOF)\n    ;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 1010;\nconst double eps = 1e-10;\nconst long long MOD = 1e9 + 7;\nchar s[2010];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  int t[2010];\n  memset(t, 0, sizeof(t));\n  for (int i = 0; i < (n); ++i) {\n    scanf(\"%s\", s);\n    for (int j = 0; j < (m); ++j) {\n      if (s[j] == 'R' && i + j < m) t[i + j]++;\n      if (s[j] == 'L' && j - i >= 0) t[j - i]++;\n      if (s[j] == 'U' && i % 2 == 0) t[j]++;\n    }\n  }\n  for (int i = 0; i < (m - 1); ++i) cout << t[i] << ' ';\n  cout << t[m - 1] << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint kkaass = 1;\nchar B[2009][2009];\nint n, m;\nint main() {\n  int i, j, k;\n  while (cin >> n >> m >> k) {\n    for (i = (1); i <= (n); i++)\n      for (j = (1); j <= (m); j++) scanf(\" %c\", &B[i][j]);\n    int ans[2009] = {0};\n    for (i = (2); i <= (n); i++) {\n      for (j = (1); j <= (m); j++) {\n        if (B[i][j] == 'R') {\n          int t = i - 1;\n          if (j + t < 2009) ans[j + t]++;\n        } else if (B[i][j] == 'L') {\n          int t = i - 1;\n          if (j - t >= 0) ans[j - t]++;\n        } else if (B[i][j] == 'U') {\n          int t = i;\n          if (t & 1) ans[j]++;\n        }\n      }\n    }\n    for (i = (1); i <= (m); i++) {\n      if (i == 1)\n        cout << ans[i];\n      else\n        cout << \" \" << ans[i];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nT abs(T a) {\n  return a >= 0 ? a : -a;\n}\ntemplate <class T>\nT gcd(T a, T b) {\n  return b ? gcd(b, a % b) : a;\n}\ntemplate <class T>\nT mod(T a, T b) {\n  T ret = a % b;\n  if (ret < 0) ret += b;\n  return ret;\n}\nlong long mulmod(long long a, long long b, long long c) {\n  if (b == 0LL) return 0LL;\n  long long ret = mulmod(a, b >> 1, c);\n  ret = (ret + ret) % c;\n  if (b & 1LL) ret = (ret + a) % c;\n  return ret;\n}\nlong long powmod(long long a, long long b, long long c) {\n  if (b == 0LL) return 1LL;\n  long long ret = powmod(a, b >> 1, c);\n  ret = ret * ret % c;\n  if (b & 1LL) ret = ret * a % c;\n  return ret;\n}\ntemplate <class T>\ninline void wt(T x) {\n  if (x < 0) putchar('-'), x = -x;\n  if (x < 10)\n    putchar(x + '0');\n  else\n    wt(x / 10), putchar(x % 10 + '0');\n}\ntemplate <class T>\ninline void rd(T& x) {\n  bool f = 0;\n  char ch;\n  for (ch = getchar(); ch <= 32; ch = getchar())\n    ;\n  if (ch == '-') f = 1, ch = getchar();\n  for (x = 0; ch > 32; ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n  if (f) x = -x;\n}\nconst int N = 2005;\nint tt;\nint u, v, w, n, m, k, ans[N];\nstring s[N];\nint main() {\n  rd(n), rd(m), rd(k);\n  for (register int i = 1; i <= n; ++i) cin >> s[i - 1];\n  for (register int i = 0; i <= n - 1; ++i)\n    for (register int j = 0; j < int(s[i].size()); ++j) {\n      char c = s[i][j];\n      if (c == 'U') {\n        if (i % 2 == 0) ans[j]++;\n      } else if (c == 'R') {\n        u = i + j;\n        if (u < m) ans[u]++;\n      } else if (c == 'L') {\n        u = j - i;\n        if (u >= 0) ans[u]++;\n      }\n    }\n  for (register int i = 1; i <= m; ++i) wt(ans[i - 1]), putchar(' ');\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, c, t, cur, k;\nint ans[2002];\nstring s;\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n >> m >> k;\n  cin >> s;\n  for (int i = 0; i < m; i++) ans[i] = 0;\n  for (int i = 1; i < n; i++) {\n    cin >> s;\n    for (int j = 0; j < m; j++) {\n      if (s[j] == 'R')\n        if (i + j < m) ans[i + j]++;\n      if (s[j] == 'L')\n        if (j - i >= 0) ans[j - i]++;\n      if (s[j] == 'U')\n        if (i % 2 == 0) ans[j]++;\n    }\n  }\n  for (int i = 0; i < m; i++) cout << ans[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nint col[3000];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int y = 0; y < n; ++y)\n    for (int x = 0; x < m; ++x) {\n      char c;\n      scanf(\" %c\", &c);\n      if (c == 'U') col[x] += !(y % 2);\n      if (c == 'R' and x + y < m) col[x + y]++;\n      if (c == 'L' and x - y >= 0) col[x - y]++;\n    }\n  for (int i = 0; i < m; ++i) printf(\"%d \", col[i]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint ans[2001];\nchar s[2222];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%s\", s + 1);\n    for (int j = 1; s[j]; j++) {\n      if (s[j] == 'U' && i % 2)\n        ans[j]++;\n      else if (s[j] == 'R' && j + i - 1 <= m)\n        ans[j + i - 1]++;\n      else if (s[j] == 'L' && j - i + 1 >= 1)\n        ans[j - i + 1]++;\n    }\n  }\n  for (int i = 1; i <= m; i++) printf(\"%d \", ans[i]);\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class B {\n    public static void main(String[] args) throws IOException {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        String[] S = in.readLine().split(\" \");\n        int n = Integer.parseInt(S[0]);\n        int m = Integer.parseInt(S[1]);\n        int k = Integer.parseInt(S[2]);\n        int[] cnt = new int[m];\n        for (int i = 0; i < n; i++) {\n            String s = in.readLine();\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) != '.')\n                    switch (s.charAt(j)) {\n                    case 'U':\n                        if (i % 2 == 0)\n                            cnt[j]++;\n                        break;\n                    case 'R':\n                        if (j + i < m)\n                            cnt[j + i]++;\n                        break;\n                    case 'L':\n                        if (j - i >= 0)\n                            cnt[j - i]++;\n                    default:\n                        break;\n                    }\n            }\n        }\n        for (int i = 0; i < m; i++)\n            System.out.print(cnt[i] + \" \");\n        System.out.println();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2010;\nconst int INF = (int)1e9;\nchar ch[N][N];\nint n, m, k;\nint CountSpider(int x, int y, int time) {\n  int ans = 0;\n  if (x - time >= 1 && ch[y][x - time] == 'R') ans++;\n  if (x + time <= m && ch[y][x + time] == 'L') ans++;\n  if (y - time >= 1 && ch[y - time][x] == 'D') ans++;\n  if (y + time <= n && ch[y + time][x] == 'U') ans++;\n  return ans;\n}\nint main() {\n  scanf(\"%d%d%d\\n\", &n, &m, &k);\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= m; ++j) scanf(\"%c\", &ch[i][j]);\n    scanf(\"\\n\");\n  }\n  for (int j = 1; j <= m; ++j) {\n    int time = 0;\n    int ans = 0;\n    for (int i = 1; i <= n; ++i) {\n      ans += CountSpider(j, i, time);\n      time++;\n    }\n    printf(\"%d \", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint const N = 2020;\nchar mp[N][N];\nint ans[N];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < (n); ++i) scanf(\" %s\", mp[i]);\n  for (int i = 0; i < (n); ++i)\n    for (int j = 0; j < (m); ++j)\n      if (mp[i][j] != '.') {\n        if (mp[i][j] == 'R') {\n          int tx = j + i;\n          if (tx < m) ++ans[tx];\n        } else if (mp[i][j] == 'L') {\n          int tx = j - i;\n          if (tx >= 0) ++ans[tx];\n        } else if (mp[i][j] == 'U') {\n          if (i % 2 == 0) ++ans[j];\n        }\n      }\n  for (int i = 0; i < (m); ++i) {\n    if (i == m - 1)\n      printf(\"%d\\n\", ans[i]);\n    else\n      printf(\"%d \", ans[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "# Codeforces 436B\nn, m, k = map(int, raw_input().split())\nseen = [ 0 ] * m\nfor y in xrange(n):\n\tline = raw_input()\n\tif y > 0:\n\t\tfor x in xrange(len(line)):\n\t\t\tif line[x] == 'U' and not y & 1: seen[x] += 1\n\t\t\telif line[x] == 'L' and y <= x: seen[x-y] += 1\n\t\t\telif line[x] == 'R' and y+x < m: seen[x+y] += 1\nfor howmany in seen:\n\tprint howmany,"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class A {\n\n    public static void main(String args[]) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n\n        scanner.nextLine();\n\n        String s[] = new String[n];\n        for (int i = 0; i < n; i++)\n            s[i] = scanner.nextLine();\n\n        int a[] = new int[m];\n\n        for (int j = 0; j < m; j++) {\n            int ans = 0;\n            for (int i = 1; i < n; i++) {\n\n                if (i + i < n && s[i + i].charAt(j) == 'U')\n                    ans++;\n                if (j + i < m && s[i].charAt(j + i) == 'L')\n                    ans++;\n                if (j - i >= 0 && s[i].charAt(j - i) == 'R')\n                    ans++;\n            }\n\n            a[j] = ans;\n        }\n\n        System.out.print(a[0]);\n        for (int i = 1; i < m; i++)\n            System.out.print(\" \" + a[i]);\n\n        System.out.println();\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "import random\n\ndef solve(board):\n\tseen = [0 for i in range(len(board[0]))]\n\n\tfor i in range(len(board)):\n\t\tfor x in range(len(board[i])):\n\t\t\tif board[i][x] != \".\":\n\t\t\t\tif board[i][x] == \"U\":\n\t\t\t\t\tif i % 2 == 0:\n\t\t\t\t\t\tseen[x] += 1\n\t\t\t\tif board[i][x] == \"R\":\n\t\t\t\t\tfuture = x + i\n\t\t\t\t\tif not (future >= len(board[i])):\n\t\t\t\t\t\tseen[future] += 1\n\t\t\t\tif board[i][x] == \"L\":\n\t\t\t\t\tfuture = x - i\n\t\t\t\t\tif not (future < 0):\n\t\t\t\t\t\tseen[future] += 1\n\treturn seen\n\n\n\nn, m, k = map(int, raw_input().split())\n\nboard = [raw_input() for i in range(n)]\n\nprint \" \".join(map(str, solve(board)))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 6000;\nint ans[N];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  char z;\n  for (int y = 0; y < n; y++) {\n    string row;\n    cin >> row;\n    for (int x = 0; x < m; x++) {\n      z = row[x];\n      if (z == 'U') {\n        if (y % 2 == 0) {\n          ans[x]++;\n        }\n      }\n      if (z == 'R' && x + y < m) {\n        ans[x + y]++;\n      }\n      if (z == 'L' && x - y >= 0) {\n        ans[x - y]++;\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    cout << ans[i] << \" \";\n  }\n  getchar();\n  getchar();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class MainB {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        char[][] field = new char[n][m];\n        for (int i = 0; i < n; i++) {\n            String next = in.next();\n            for (int j = 0; j < m; j++) {\n                field[i][j] = next.charAt(j);\n            }\n        }\n\n        for (int j = 0; j < m; j++) {\n            int c = 0;\n            for (int i = 1; i < n; i++) {\n                if (j - i >= 0 && field[i][j - i] == 'R') c++;\n                if (j + i < m && field[i][j + i] == 'L') c++;\n                if (i + i < n && field[i + i][j] == 'U') c++;\n//                if (i + i <= n && field[i+i][j] == 'U') c++;\n            }\n            System.out.print(c);\n            if (j < m - 1) System.out.print(' ');\n        }\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n, m, k = map(int, raw_input().split())\nraw_input()\ns = [0] * m\nfor i in range(1, n):\n    for j, x in enumerate(raw_input()):\n        if x == '.': continue\n        if x == 'L':\n            if j - i >= 0: s[j - i] += 1\n        elif x == 'R':\n            if j + i < m: s[j + i] += 1\n        elif x == 'U' and i & 1 == 0: s[j] += 1\nprint ' '.join(map(str, s))"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\n/**\n * Actual solution is at the top\n * @author shu_mj @ http://shu-mj.com\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tboolean LOCAL = System.getSecurityManager() == null;\n\t\tif (LOCAL) {\n\t\t\ttry {\n\t\t\t\tSystem.setIn(new FileInputStream(\"./../in\"));\n\t\t\t\t// System.setOut(new PrintStream(\"./../out.txt\"));\n\t\t\t} catch (IOException e) {\n\t\t\t\tLOCAL = false;\n\t\t\t}\n\t\t}\n\t\tlong start = System.nanoTime();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tTask solver = new Task(new Scanner(System.in), out);\n\t\tsolver.solve();\n\t\tout.close();\n\t\tif (LOCAL) System.err.printf(\"[Time %.6fs]%n\", (System.nanoTime() - start) * 1e-9);\n\t}\n}\n\nclass Task {\n\tScanner in;\n\tPrintWriter out;\n\t\n\tTask(Scanner in, PrintWriter out) {\n\t\tthis.in = in;\n\t\tthis.out = out;\n\t}\n\n\tvoid solve() {\n\t\twhile (in.hasNext()) \n\t\t\trun();\n\t}\n\tvoid run() {\n        int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n        char[][] css = new char[n][];\n        for (int i = 0; i < n; i++) {\n            css[i] = in.next().toCharArray();\n        }\n        int[] ans = new int[m];\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (css[i][j] != '.') {\n                    if (css[i][j] == 'U') {\n                        if (i % 2 == 0) ans[j]++;\n                    } else if (css[i][j] == 'D') {\n\n                    } else if (css[i][j] == 'L') {\n                        if (j - i >= 0) {\n                            ans[j - i]++;\n                        }\n                    } else { // R\n                        if (i + j < m) {\n                            ans[i + j]++;\n                        }\n                    }\n                }\n//                Algo.debug(i, j, ans[0], ans[1]);\n            }\n        }\n        for (int i = 0; i < m - 1; i++) {\n            out.print(ans[i] + \" \");\n        }\n        out.println(ans[m - 1]);\n\t}\n\t\n}\nclass Scanner {\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tScanner(InputStream in) {\n\t\tbr = new BufferedReader(new InputStreamReader(in));\n\t\teat(\"\");\n\t}\n\n\tprivate void eat(String string) {\n\t\tst = new StringTokenizer(string);\n\t}\n\n\tString nextLine() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tboolean hasNext() {\n\t\twhile (!st.hasMoreTokens()) {\n\t\t\tString s = nextLine();\n\t\t\tif (s == null)\n\t\t\t\treturn false;\n\t\t\teat(s);\n\t\t}\n\t\treturn true;\n\t}\n\n\tString next() {\n\t\thasNext();\n\t\treturn st.nextToken();\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n}\n\nclass Algo {\n\n    public static void debug(Object...os) {\n        System.err.println(Arrays.deepToString(os));\n    }\n    public static void debugTable(Object[] os) {\n        for (Object o : os) debug(o);\n        debug(\"-------------------------------------\");\n    }\n    public static long sum(int[] is) {\n        long res = 0;\n        for (int i = 0; i < is.length; i++) {\n            res += is[i];\n        }\n        return res;\n    }\n    public static long sum(long[] ls) {\n        long res = 0;\n        for (int i = 0; i < ls.length; i++) {\n            res += ls[i];\n        }\n        return res;\n    }\n\n    public static int min(int[] is) {\n        int res = Integer.MAX_VALUE;\n        for (int i = 0; i < is.length; i++) {\n            res = Math.min(res, is[i]);\n        }\n        return res;\n    }\n    public static long min(long[] ls) {\n        long res = Long.MAX_VALUE;\n        for (int i = 0; i < ls.length; i++) {\n            res = Math.min(res, ls[i]);\n        }\n        return res;\n    }\n    public static <T extends Comparable<T>> T min(T[] ts) {\n        T res = null;\n        for (T t : ts) {\n            if (res == null || res.compareTo(t) > 0) {\n                res = t;\n            }\n        }\n        return res;\n    }\n\n    public static int minIndex(int[] is) {\n        int index = -1;\n        for (int i = 0; i < is.length; i++) {\n            if (index == -1 || is[index] > is[i]) {\n                index = i;\n            }\n        }\n        return index;\n    }\n    public static int minIndex(long[] ls) {\n        int index = -1;\n        for (int i = 0; i < ls.length; i++) {\n            if (index == -1 || ls[index] > ls[i]) {\n                index = i;\n            }\n        }\n        return index;\n    }\n    public static <T extends Comparable<T>> int minIndex(T[] ts) {\n        int index = -1;\n        for (int i = 0; i < ts.length; i++) {\n            if (index == -1 || ts[index].compareTo(ts[i]) > 0) {\n                index = i;\n            }\n        }\n        return index;\n    }\n\n    public static int max(int[] is) {\n        int res = Integer.MIN_VALUE;\n        for (int i = 0; i < is.length; i++) {\n            res = Math.max(res, is[i]);\n        }\n        return res;\n    }\n    public static long max(long[] ls) {\n        long res = Long.MIN_VALUE;\n        for (int i = 0; i < ls.length; i++) {\n            res = Math.max(res, ls[i]);\n        }\n        return res;\n    }\n    public static <T extends Comparable<T>> T max(T[] ts) {\n        T res = null;\n        for (T t : ts) {\n            if (res == null || res.compareTo(t) < 0) {\n                res = t;\n            }\n        }\n        return res;\n    }\n\n    public static int maxIndex(int[] is) {\n        int index = -1;\n        for (int i = 0; i < is.length; i++) {\n            if (index == -1 || is[index] < is[i]) {\n                index = i;\n            }\n        }\n        return index;\n    }\n    public static int maxIndex(long[] ls) {\n        int index = -1;\n        for (int i = 0; i < ls.length; i++) {\n            if (index == -1 || ls[index] < ls[i]) {\n                index = i;\n            }\n        }\n        return index;\n    }\n    public static <T extends Comparable<T>> int maxIndex(T[] ts) {\n        int index = -1;\n        for (int i = 0; i < ts.length; i++) {\n            if (index == -1 || ts[index].compareTo(ts[i]) < 0) {\n                index = i;\n            }\n        }\n        return index;\n    }\n\n    public static int log2(int b) {\n        return 31 - Integer.numberOfLeadingZeros(b);\n    }\n    public static int log2(long b) {\n        return 63 - Long.numberOfLeadingZeros(b);\n    }\n\n    public static void swap(char[] cs, int i, int j) {\n        char t = cs[i]; cs[i] = cs[j]; cs[j] = t;\n    }\n    public static void swap(int[] is, int i, int j) {\n        int t = is[i]; is[i] = is[j]; is[j] = t;\n    }\n    public static void swap(long[] ls, int i, int j) {\n        long t = ls[i]; ls[i] = ls[j]; ls[j] = t;\n    }\n    public static<T> void swap(T[] ts, int i, int j) {\n        T t = ts[i]; ts[i] = ts[j]; ts[j] = t;\n    }\n    private static <T> void swap(List<T> tl, int i, int j) {\n        T t = tl.get(i); tl.set(i, tl.get(j)); tl.set(j, t);\n    }\n\n    public static void reverse(int[] is) {\n        reverse(is, 0, is.length);\n    }\n    public static void reverse(long[] ls) {\n        reverse(ls, 0, ls.length);\n    }\n    public static void reverse(char[] cs) {\n        reverse(cs, 0, cs.length);\n    }\n    public static <T> void reverse(T[] ts) { \n        reverse(ts, 0, ts.length); \n    }\n    public static <T> void reverse(List<T> tl) { \n        reverse(tl, 0, tl.size()); \n    }\n\n    public static void reverse(int[] is, int b, int e) {\n        while (b < e) swap(is, b++, --e);\n    }\n    public static void reverse(long[] ls, int b, int e) {\n        while (b < e) swap(ls, b++, --e);\n    }\n    public static void reverse(char[] cs, int b, int e) {\n        while (b < e) swap(cs, b++, --e);\n    }\n    public static<T> void reverse(T[] ts, int b, int e) {\n        while (b < e) swap(ts, b++, --e);\n    }\n    private static <T> void reverse(List<T> tl, int b, int e) {\n        while (b < e) swap(tl, b++, --e);\n    }\n\n    public static boolean nextPermutation(int[] is) {\n        int n = is.length;\n        for (int i = n - 1; i > 0; i--) {\n            if (is[i - 1] < is[i]) {\n                int j = n;\n                while (is[i - 1] >= is[--j]) ;\n                swap(is, i - 1, j);\n                reverse(is, i, n);\n                return true;\n            }\n        }\n        reverse(is, 0, n);\n        return false;\n    }\n    public static boolean nextPermutation(long[] ls) {\n        int n = ls.length;\n        for (int i = n - 1; i > 0; i--) {\n            if (ls[i - 1] < ls[i]) {\n                int j = n;\n                while (ls[i - 1] >= ls[--j]) ;\n                swap(ls, i - 1, j);\n                reverse(ls, i, n);\n                return true;\n            }\n        }\n        reverse(ls, 0, n);\n        return false;\n    }\n    public static boolean nextPermutation(char[] cs) {\n        int n = cs.length;\n        for (int i = n - 1; i > 0; i--) {\n            if (cs[i - 1] < cs[i]) {\n                int j = n;\n                while (cs[i - 1] >= cs[--j]) ;\n                swap(cs, i - 1, j);\n                reverse(cs, i, n);\n                return true;\n            }\n        }\n        reverse(cs, 0, n);\n        return false;\n    }\n    public static <T extends Comparable<T>> boolean nextPermutation(T[] ts) {\n        int n = ts.length;\n        for (int i = n - 1; i > 0; i--) {\n            if (ts[i - 1].compareTo(ts[i]) < 0) {\n                int j = n;\n                while (ts[i - 1].compareTo(ts[--j]) >= 0) ;\n                swap(ts, i - 1, j);\n                reverse(ts, i, n);\n                return true;\n            }\n        }\n        reverse(ts, 0, n);\n        return false;\n    }\n    public static<T extends Comparable<T>> boolean nextPermutation(List<T> tl) {\n        int n = tl.size();\n        for (int i = n - 1; i > 0; i--) {\n            if (tl.get(i - 1).compareTo(tl.get(i)) < 0) {\n                int j = n;\n                while (tl.get(i - 1).compareTo(tl.get(--j)) >= 0) ;\n                swap(tl, i - 1, j);\n                reverse(tl, i, n);\n                return true;\n            }\n        }\n        reverse(tl, 0, n);\n        return false;\n    }\n\n    public static int[] unique(int[] is) {\n        return unique(is, 0, is.length);\n    }\n    public static long[] unique(long[] ls) { \n        return unique(ls, 0, ls.length); \n    }\n    public static char[] unique(char[] cs) { \n        return unique(cs, 0, cs.length);\n    }\n    public static <T extends Comparable<T>> T[] unique(T[] ts) {\n        return unique(ts, 0, ts.length); \n    }\n    \n    public static int[] unique(int[] is, int b, int e) {\n        if (b == e)\n            return new int[0];\n        int count = 1;\n        for (int i = b + 1; i < e; i++) {\n            if (is[i] != is[i - 1])\n                count++;\n        }\n        int[] res = new int[count];\n        res[0] = is[b];\n        int id = 1;\n        for (int i = b + 1; i < e; i++) {\n            if (is[i] != is[i - 1])\n                res[id++] = is[i];\n        }\n        return res;\n    }\n    public static long[] unique(long[] ls, int b, int e) {\n        if (b == e)\n            return new long[0];\n        int cnt = 1;\n        for (int i = b + 1; i < e; i++) {\n            if (ls[i] != ls[i - 1])\n                cnt++;\n        }\n        long[] res = new long[cnt];\n        res[0] = ls[b];\n        int id = 1;\n        for (int i = b + 1; i < e; i++) {\n            if (ls[i] != ls[i - 1])\n                res[id++] = ls[i];\n        }\n        return res;\n    }\n    public static char[] unique(char[] cs, int b, int e) {\n        if (b == e)\n            return new char[0];\n        int cnt = 1;\n        for (int i = b + 1; i < e; i++) {\n            if (cs[i] != cs[i - 1])\n                cnt++;\n        }\n        char[] res = new char[cnt];\n        res[0] = cs[b];\n        int id = 1;\n        for (int i = b + 1; i < e; i++) {\n            if (cs[i] != cs[i - 1])\n                res[id++] = cs[i];\n        }\n        return res;\n    }\n    @SuppressWarnings(\"unchecked\")\n\tpublic static <T extends Comparable<T>> T[] unique(T[] ts, int b, int e) {\n        if (b == e)\n            return (T[]) new Object[0];\n        int cnt = 1;\n        for (int i = b + 1; i < e; i++) {\n            if (ts[i].compareTo(ts[i - 1]) != 0)\n                cnt++;\n        }\n        T[] res = (T[]) new Object[cnt];\n        res[0] = ts[b];\n        int id = 1;\n        for (int i = b + 1; i < e; i++) {\n            if (ts[i].compareTo(ts[i - 1]) != 0)\n                res[id++] = ts[i];\n        }\n        return res;\n    }\n\n    public static int lowerBound(int[] is, int v) {\n        return lowerBound(is, 0, is.length, v);\n    }\n    public static int lowerBound(long[] ls, long v) {\n        return lowerBound(ls, 0, ls.length, v);\n    }\n    public static <T extends Comparable<T>> int lowerBound(T[] is, T v) {\n        return lowerBound(is, 0, is.length, v);\n    }\n    public static <T extends Comparable<T>> int lowerBound(List<T> tl, T v) {\n        return lowerBound(tl, 0, tl.size(), v);\n    }\n\n    public static int lowerBound(int[] is, int l, int r, int v) {\n        while (l < r) {\n            int m = (l + r) >> 1;\n            if (is[m] >= v) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\n    public static int lowerBound(long[] ls, int l, int r, long v) {\n        while (l < r) {\n            int m = (l + r) >> 1;\n            if (ls[m] >= v) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\n    public static<T extends Comparable<T>> int lowerBound(T[] ts, int l, int r, T v) {\n        while (l < r) {\n            int m = (l + r) >> 1;\n            if (ts[m].compareTo(v) >= 0) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\n    public static<T extends Comparable<T>> int lowerBound(List<T> tl, int l, int r, T v) {\n        while (l < r) {\n            int m = (l + r) >> 1;\n            if (tl.get(m).compareTo(v) >= 0) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\n\n    public static int upperBound(int[] is, int v) {\n        return upperBound(is, 0, is.length, v);\n    }\n    public static int upperBound(long[] ls, long v) {\n        return upperBound(ls, 0, ls.length, v);\n    }\n    public static <T extends Comparable<T>> int upperBound(T[] is, T v) {\n        return upperBound(is, 0, is.length, v);\n    }\n    public static <T extends Comparable<T>> int upperBound(List<T> tl, T v) {\n        return upperBound(tl, 0, tl.size(), v);\n    }\n\n    public static int upperBound(int[] is, int l, int r, int v) {\n        while (l < r) {\n            int m = (l + r) >> 1;\n            if (is[m] > v) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\n    public static int upperBound(long[] ls, int l, int r, long v) {\n        while (l < r) {\n            int m = (l + r) >> 1;\n            if (ls[m] > v) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\n    public static<T extends Comparable<T>> int upperBound(T[] ts, int l, int r, T v) {\n        while (l < r) {\n            int m = (l + r) >> 1;\n            if (ts[m].compareTo(v) > 0) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\n    public static<T extends Comparable<T>> int upperBound(List<T> tl, int l, int r, T v) {\n        while (l < r) {\n            int m = (l + r) >> 1;\n            if (tl.get(m).compareTo(v) > 0) r = m;\n            else l = m + 1;\n        }\n        return l;\n    }\n\n    public static int[] unBox(Integer[] Is) {\n        int n = Is.length;\n        int[] is = new int[n];\n        for (int i = 0; i < n; i++) {\n            is[i] = Is[i];\n        }\n        return is;\n    }\n    public static long[] unBox(Long[] Ls) {\n        int n = Ls.length;\n        long[] ls = new long[n];\n        for (int i = 0; i < n; i++) {\n            ls[i] = Ls[i];\n        }\n        return ls;\n    }\n\n    public static Integer[] box(int[] is) {\n        int n = is.length;\n        Integer[] Is = new Integer[n];\n        for (int i = 0; i < n; i++) {\n            Is[i] = is[i];\n        }\n        return Is;\n    }\n    public static Long[] box(long[] ls) {\n        int n = ls.length;\n        Long[] Ls = new Long[n];\n        for (int i = 0; i < n; i++) {\n            Ls[i] = ls[i];\n        }\n        return Ls;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar v[2009][2009];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++)\n    for (int h = 0; h < m; h++) cin >> v[i][h];\n  for (int i = 0; i < m; i++) {\n    int ans = 0;\n    for (int h = 1; h < n; h++) {\n      if (i - h >= 0 && v[h][i - h] == 'R') ans++;\n      if (i + h < m && v[h][i + h] == 'L') ans++;\n      if (h * 2 < n && v[h + h][i] == 'U') ans++;\n    }\n    cout << ans << \" \";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int filas, columnas, n;\n  char c;\n  cin >> filas >> columnas >> n;\n  long long movimientos[columnas + 1];\n  for (int i = 1; i <= columnas; i++) movimientos[i] = 0;\n  int newPos = 0;\n  for (int i = 1; i <= filas; i++) {\n    for (int j = 1; j <= columnas; j++) {\n      cin >> c;\n      if (c != '.') {\n        if (c == 'R') {\n          newPos = j + (i - 1);\n          if (newPos <= columnas) movimientos[newPos]++;\n        } else if (c == 'L') {\n          newPos = j - (i - 1);\n          if (newPos <= columnas && newPos >= 0) movimientos[newPos]++;\n        } else if (c == 'U' && i % 2 != 0) {\n          movimientos[j]++;\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= columnas; i++) {\n    cout << movimientos[i] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2005;\nchar p[maxn][maxn];\nint n, m;\ninline bool check(int x, int y, char c) {\n  if (x < 0 || y < 0 || x >= n || y >= m) return 0;\n  return p[x][y] == c;\n}\nint main() {\n  scanf(\"%d%d%*d\", &n, &m);\n  for (int i = 0; i < n; i++) scanf(\"%s\", p[i]);\n  for (int j = 0; j < m; j++) {\n    int curans = 0;\n    for (int i = 0; i < n; i++) {\n      curans += check(i, j - i, 'R');\n      curans += check(i, j + i, 'L');\n      curans += check(2 * i, j, 'U');\n    }\n    cout << curans << ' ';\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint cnt[2005][2005];\nint ans[2005];\nint n, m, k;\nchar map[2005][2005];\nint d_y[4] = {0, 1, 0, -1}, d_x[4] = {1, 0, -1, 0};\nint get_direction(char d) {\n  if (d == 'R') return 0;\n  if (d == 'D') return 1;\n  if (d == 'L') return 2;\n  return 3;\n}\nvoid process() {\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      if (map[i][j] != '.') {\n        int di = get_direction(map[i][j]);\n        if (di == 0 || di == 2) {\n          int x = j + d_x[di] * (i - 1);\n          if (x > 0 && x <= m) cnt[i][x]++;\n        } else if (di == 3) {\n          if (i & 1) cnt[i / 2 + 1][j]++;\n        }\n      }\n    }\n  }\n  for (int j = 1; j <= m; j++) {\n    for (int i = 1; i <= n; i++) ans[j] += cnt[i][j];\n  }\n  for (int j = 1; j <= m; j++) printf(\"%d \", ans[j]);\n}\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 1; i <= n; i++) scanf(\" %s\", map[i] + 1);\n  process();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[2000][2000];\nint main() {\n  int n, m, k, i, j, cnt;\n  vector<int> v;\n  cin >> n >> m >> k;\n  for (i = 0; i < n; i++) cin >> a[i];\n  for (i = 0; i < m; i++) {\n    cnt = 0;\n    for (j = 0; j < n; j++) {\n      if (i - j >= 0 && a[j][i - j] == 'R') cnt++;\n      if (i + j < m && a[j][i + j] == 'L') cnt++;\n      if (a[j][i] == 'U' && j % 2 == 0) cnt++;\n      if (a[0][0] == 'D') cnt++;\n    }\n    v.push_back(cnt);\n  }\n  for (i = 0; i < v.size(); i++) cout << v[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class T436B {\n    void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        int p;\n\n        int[] counts = new int[m];\n\n        for (int i = 0; i < n; ++i) {\n            String row = nextToken();\n\n            for (int j = 0; j < m; ++j) {\n                char d = row.charAt(j);\n\n                switch (d) {\n                    case 'L':\n                        p = j - i;\n\n                        if (p >= 0) {\n                            counts[p]++;\n                        }\n\n                        break;\n                    case 'R':\n                        p = j + i;\n\n                        if (p < m) {\n                            counts[p]++;\n                        }\n\n                        break;\n                    case 'U':\n                        if (i % 2 == 0) {\n                            counts[j]++;\n                        }\n\n                        break;\n                }\n            }\n        }\n\n        for (int j = 0; j < m; ++j) {\n            if (j != 0) {\n                out.print(\" \");\n            }\n\n            out.print(counts[j]);\n        }\n    }\n\n    void run() throws IOException {\n        reader = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(new OutputStreamWriter(System.out));\n        // reader = new BufferedReader(new FileReader(\"file.in\"));\n        // out = new PrintWriter(new FileWriter(\"file.out\"));\n        tokenizer = null;\n        solve();\n        reader.close();\n        out.flush();\n    }\n\n    public static void main(String[] args) throws IOException {\n        new T436B().run();\n    }\n\n    BufferedReader reader;\n    StringTokenizer tokenizer;\n    PrintWriter out;\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    String nextToken() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, d[2010];\nchar s[2010][2010];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", s[i]);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      if (j + i < m && s[i][j + i] == 'L') ++d[j];\n      if (j - i >= 0 && s[i][j - i] == 'R') ++d[j];\n      if (i + i < n && s[i + i][j] == 'U') ++d[j];\n    }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", d[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class B_Spiders {\n\n    public static void main(String[] args) throws java.io.IOException {\n        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n        String[] params = input.readLine().split(\" \");\n        final int N = Integer.parseInt(params[0]);\n        final int M = Integer.parseInt(params[1]);\n        \n        char[][] park = new char[N][];\n        for (int i = 0 ; i < N ; i++) {\n            park[i] = input.readLine().toCharArray();\n        }\n        \n        StringBuilder sb = new StringBuilder();\n        for (int start = 0 ; start < M ; start++) {\n            int count = 0;\n            for (int i = 0 ; i < N ; i += 2) {\n                if (park[i][start] == 'U') {\n                    count++;\n                }\n            }\n            \n            for (int i = 0 ; i < Math.min(start + 1 , N) ; i++) {\n                if (park[i][start - i] == 'R') {\n                    count++;\n                }\n            }\n            \n            for (int i = 0 ; i < Math.min(M - start , N) ; i++) {\n                if (park[i][start + i] == 'L') {\n                    count++;\n                }\n            }\n            \n            sb.append(count).append(\" \");\n        }\n        System.out.println(sb.toString().trim());\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\n\npublic class B implements Runnable {\n\t\n\tvoid solve() {\n\t\tint n = nextInt(), m = nextInt(), k = nextInt();\n\t\tint[] ans = new int[m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tchar[] c = nextString().toCharArray();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tif (c[j] == 'U' && i % 2 == 0)\n\t\t\t\t\tans[j]++;\n\t\t\t\tif (c[j] == 'L' && j - i >= 0)\n\t\t\t\t\tans[j - i]++;\n\t\t\t\tif (c[j] == 'R' && j + i < m)\n\t\t\t\t\tans[j + i]++;\n\t\t\t}\n\t\t}\n\t\tprintArray(ans);\n\t}\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew B().run();\n\t}\n\t\n\tB() {\n\t\tthis.stream = System.in;\n\t\tthis.writer = new PrintWriter(System.out);\n\t}\n\t\n\tB(String input, String output) throws IOException {\n\t\tFile inputFile = new File(input);\n\t\tinputFile.createNewFile();\n\t\tstream = new FileInputStream(inputFile);\n\t\tFile outputFile = new File(output);\n\t\toutputFile.createNewFile();\n\t\twriter = new PrintWriter(outputFile);\n\t}\n\t\n\tpublic void run() {\n\t\tsolve();\n\t\twriter.close();\n\t}\n\t\n\tvoid halt() {\n\t\twriter.close();\n\t\tSystem.exit(0);\n\t}\n\t\n\tPrintWriter writer;;\n\t\n\tvoid print(Object... objects) {\n\t\tfor (int i = 0; i < objects.length; i++) {\n\t\t\tif (i != 0)\n\t\t\t\twriter.print(' ');\n\t\t\twriter.print(objects[i]);\n\t\t}\n\t}\n\t\n\tvoid println(Object... objects) {\n\t\tprint(objects);\n\t\twriter.println();\n\t}\n\t\n\tvoid printArray(int[] array) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i != 0) writer.print(' ');\n\t\t\twriter.print(array[i]);\n\t\t}\n\t\twriter.println();\n\t}\n\t\n\tvoid printArray(long[] array) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i != 0) writer.print(' ');\n\t\t\twriter.print(array[i]);\n\t\t}\n\t\twriter.println();\n\t}\n\t\n\tvoid printMatrix(int[][] matrix) {\n\t\tfor (int i = 0; i < matrix.length; i++)\n\t\t\tprintArray(matrix[i]);\n\t}\n\t\n\tvoid printMatrix(long[][] matrix) {\n\t\tfor (int i = 0; i < matrix.length; i++)\n\t\t\tprintArray(matrix[i]);\n\t}\n\t\n\t/**\n\t * Pure Egor's code is straight ahead.\n\t */\n\t\n\tInputStream stream;\n\tbyte[] buf = new byte[1024];\n\tint curChar, numChars;\n\t\n\tint nextInt() {\n\t\tint c = next();\n\t\twhile (isWhitespace(c))\n\t\t\tc = next();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = next();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = next();\n\t\t} while (!isWhitespace(c));\n\t\treturn res * sgn;\n\t}\n\t\n\tlong nextLong() {\n\t\tint c = next();\n\t\twhile (isWhitespace(c))\n\t\t\tc = next();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = next();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = next();\n\t\t} while (!isWhitespace(c));\n\t\treturn res * sgn;\n\t}\n\t\n\tdouble nextDouble() {\n\t\tint c = next();\n\t\twhile (isWhitespace(c))\n\t\t\tc = next();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = next();\n\t\t}\n\t\tdouble res = 0;\n\t\twhile (!isWhitespace(c) && c != '.') {\n\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = next();\n\t\t}\n\t\tif (c == '.') {\n\t\t\tc = next();\n\t\t\tdouble m = 1;\n\t\t\twhile (!isWhitespace(c)) {\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tm /= 10;\n\t\t\t\tres += (c - '0') * m;\n\t\t\t\tc = next();\n\t\t\t}\n\t\t}\n\t\treturn res * sgn;\n\t}\n\t\n\tBigInteger nextBigInteger() {\n\t\ttry {\n\t\t\treturn new BigInteger(nextString());\n\t\t} catch (NumberFormatException e) {\n\t\t\tthrow new InputMismatchException();\n\t\t}\n\t}\n\t\n\tint next() {\n\t\tif (numChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\t\n\tString nextString() {\n\t\tint c = next();\n\t\twhile (isWhitespace(c))\n\t\t\tc = next();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tif (Character.isValidCodePoint(c))\n\t\t\t\tres.appendCodePoint(c);\n\t\t\tc = next();\n\t\t} while (!isWhitespace(c));\n\t\treturn res.toString();\n\t}\n\t\n\tString nextLine() {\n\t\tStringBuilder buf = new StringBuilder();\n\t\tint c = next();\n\t\twhile (c != '\\n' && c != -1) {\n\t\t\tif (c != '\\r')\n\t\t\t\tbuf.appendCodePoint(c);\n\t\t\tc = next();\n\t\t}\n\t\treturn buf.toString();\n\t}\n\t\n\tboolean EOF() {\n\t\tint value;\n\t\twhile (isWhitespace(value = peek()) && value != -1)\n\t\t\tnext();\n\t\treturn value == -1;\n\t}\n\t\n\tint peek() {\n\t\tif (numChars == -1)\n\t\t\treturn -1;\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar];\n\t}\n\t\n\tboolean isWhitespace(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.text.DecimalFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\n\n\npublic class Main {\n    \n    /**\n     * @param args\n     */\n     BufferedReader in;\n        PrintWriter out = new PrintWriter(System.out);\n        StringTokenizer tok;\n       \n         String readToken() throws IOException { // reads the token; to read a full line use in.readLine()\n        while (tok == null || !tok.hasMoreTokens()) {\n        tok = new StringTokenizer(in.readLine());\n            \n        }\n        return tok.nextToken(); // sometimes it's better to use nextToken(String) method here\n        }\n         int readInt() throws IOException { // write readDouble(), readLong(), readBigInteger() methods if necessary\n        return Integer.parseInt(readToken());\n        }\n         public String readLine() throws IOException{\n            return in.readLine();\n             \n         }\n         long readLong() throws IOException { // write readDouble(), readLong(), readBigInteger() methods if necessary\n                return Long.parseLong(readToken());\n                }\n         double readDouble() throws IOException { // write readDouble(), readLong(), readBigInteger() methods if necessary\n                return Double.parseDouble(readToken());\n                }\n        public static void main(String[] args) throws IOException\n        {\n           new Main().run();\n        }\n        void run() throws IOException\n        {\n            boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n            out = new PrintWriter(new OutputStreamWriter(System.out));\n            in = new BufferedReader(new InputStreamReader(System.in));\n            if (oj){\n        \n            }\n            else{\n                \n                \n            }\n           solve();\n           out.flush();\n           tok=null;\n        }\n      \n      \n        void solve() throws IOException{\n            int n=readInt();\n            int m=readInt();\n            int k=readInt();\n            int f=0;\n            int[] A=new int[m];\n            for (int i=0;i<n;++i){\n                String ln=readLine();\n                for (int j=0;j<m;++j){\n                    char c=ln.charAt(j);\n                    if (c=='R'){\n                        int mV=i;\n                        int d=j+mV;\n                        if (d<m){\n                            A[d]++;\n                        }\n                        f++;\n                    }else if (c=='L'){\n                        int  mV=i;\n                        int d=j-mV;\n                        if (d>=0){\n                            A[d]++;\n                        }\n                        f++;\n                    }else if (c=='U'){\n                        if (i %2==0){\n                            A[j]++;\n                        }\n                        f++;\n                    }\n                }\n                if (f==k) break;\n            }\n            for (int i=0;i<m;++i){\n                out.print(A[i]+\" \");\n            }\n        }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int N, M, K;\n  while (scanf(\"%d%d%d\", &N, &M, &K) != -1) {\n    int res[2000] = {};\n    char buf[2005];\n    for (int i = 0; i < N; i++) {\n      scanf(\" %s\", buf);\n      for (int j = 0; j < M; j++) {\n        char c = buf[j];\n        if (c == 'R') {\n          int pos = i + j;\n          if (pos < M) res[pos]++;\n        }\n        if (c == 'L') {\n          int pos = j - i;\n          if (pos >= 0) res[pos]++;\n        }\n        if (c == 'U') {\n          if (!(i & 1)) res[j]++;\n        }\n      }\n    }\n    for (int i = 0; i < M; i++) printf(\"%d \", res[i]);\n    puts(\"\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint spider[4000000];\nint ans[20000];\nchar map[20000];\nint main() {\n  memset(ans, 0, sizeof(0));\n  int n, m, i, j;\n  int k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 1; i <= n; i++) {\n    scanf(\"%s\", map);\n    for (j = 0; map[j] != '\\0'; j++) {\n      if (map[j] == 'L')\n        if (j - i + 2 >= 1) ans[j - i + 2]++;\n      if (map[j] == 'R')\n        if (j + i <= m) ans[j + i]++;\n      if (map[j] == 'U')\n        if (i % 2 != 0) ans[j + 1]++;\n    }\n  }\n  for (i = 1; i < m; i++) printf(\"%d \", ans[i]);\n  printf(\"%d\\n\", ans[m]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k, cnt;\n  cin >> n >> m >> k;\n  char park[n][m];\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) cin >> park[i][j];\n  for (int j = 0; j < m; j++) {\n    cnt = 0;\n    for (int i = 0; i < n; i++) {\n      if (j + i < m && park[i][j + i] == 'L') cnt++;\n      if (j - i >= 0 && park[i][j - i] == 'R') cnt++;\n      if (park[i][j] == 'U') cnt += !(i & 1);\n    }\n    cout << cnt << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid RD(int &x) { scanf(\"%d\", &x); }\nvoid RD(unsigned int &x) { scanf(\"%u\", &x); }\nvoid RD(double &x) { scanf(\"%lf\", &x); }\nvoid RD(int &x, int &y) { scanf(\"%d%d\", &x, &y); }\nvoid RD(unsigned int &x, unsigned int &y) { scanf(\"%u%u\", &x, &y); }\nvoid RD(double &x, double &y) { scanf(\"%lf%lf\", &x, &y); }\nvoid RD(int &x, int &y, int &z) { scanf(\"%d%d%d\", &x, &y, &z); }\nvoid RD(unsigned int &x, unsigned int &y, unsigned int &z) {\n  scanf(\"%u%u%u\", &x, &y, &z);\n}\nvoid RD(double &x, double &y, double &z) { scanf(\"%lf%lf%lf\", &x, &y, &z); }\nvoid RD(char &x) { x = getchar(); }\nvoid RD(char *s) { scanf(\"%s\", s); }\nvoid RD(string &s) { cin >> s; }\nvoid PR(int x) { printf(\"%d\\n\", x); }\nvoid PR(int x, int y) { printf(\"%d %d\\n\", x, y); }\nvoid PR(unsigned int x) { printf(\"%u\\n\", x); }\nvoid PR(unsigned long long x) { cout << x << endl; }\nvoid PR(double x) { printf(\"%.4lf\\n\", x); }\nvoid PR(char x) { printf(\"%c\\n\", x); }\nvoid PR(char *x) { printf(\"%s\\n\", x); }\nvoid PR(string x) { cout << x << endl; }\nvoid upMin(int &x, int y) {\n  if (x > y) x = y;\n}\nvoid upMin(long long &x, long long y) {\n  if (x > y) x = y;\n}\nvoid upMin(double &x, double y) {\n  if (x > y) x = y;\n}\nvoid upMax(int &x, int y) {\n  if (x < y) x = y;\n}\nvoid upMax(long long &x, long long y) {\n  if (x < y) x = y;\n}\nvoid upMax(double &x, double y) {\n  if (x < y) x = y;\n}\nint sgn(double x) {\n  if (x > 1e-10) return 1;\n  if (x < -1e-10) return -1;\n  return 0;\n}\nlong long Gcd(long long x, long long y) {\n  if (x < 0) x = -x;\n  if (y < 0) y = -y;\n  if (y == 0) return x;\n  return Gcd(y, x % y);\n}\nlong long Lcm(long long x, long long y) { return x / Gcd(x, y) * y; }\nlong long eular(long long n) {\n  long long ans = n, i;\n  for (i = 2; i * i <= n; i++)\n    if (n % i == 0) {\n      ans -= ans / i;\n      while (n % i == 0) n /= i;\n    }\n  if (n > 1) ans -= ans / n;\n  return ans;\n}\nlong long exGcd(long long a, long long b, long long &x, long long &y) {\n  if (b == 0) {\n    x = 1;\n    y = 0;\n    return a;\n  }\n  long long temp = exGcd(b, a % b, x, y);\n  long long t = x;\n  x = y;\n  y = t - a / b * y;\n  return temp;\n}\nlong long gcdReverse(long long a, long long b) {\n  long long x, y;\n  exGcd(a, b, x, y);\n  x %= b;\n  if (x < 0) x += b;\n  return x;\n}\nlong long myPow(long long a, long long b) {\n  long long ans = 1;\n  while (b) {\n    if (b & 1) ans = ans * a;\n    a = a * a;\n    b >>= 1;\n  }\n  return ans;\n}\nlong long myPow(long long a, long long b, long long mod) {\n  a %= mod;\n  long long ans = 1;\n  while (b) {\n    if (b & 1) ans = ans * a % mod;\n    a = a * a % mod;\n    b >>= 1;\n  }\n  return ans;\n}\nlong long getInt() {\n  long long x = 0, flag = 1;\n  char c = getchar();\n  while (!isdigit(c) && c != '-') c = getchar();\n  if (c == '-') {\n    flag = -1, c = getchar();\n    while (!isdigit(c)) c = getchar();\n  }\n  while (isdigit(c)) {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return x * flag;\n}\nlong long getSqrt(long long t) {\n  long long p = sqrt(1.0 * t);\n  while (p * p > t) p--;\n  while ((p + 1) <= t / (p + 1)) p++;\n  return p;\n}\nstruct point {\n  double x, y;\n  point() {}\n  point(double _x, double _y) {\n    x = _x;\n    y = _y;\n  }\n  void get() { scanf(\"%lf%lf\", &x, &y); }\n  point operator+(point a) { return point(x + a.x, y + a.y); }\n  point operator-(point a) { return point(x - a.x, y - a.y); }\n  point operator*(double t) { return point(x * t, y * t); }\n  double operator*(point a) { return x * a.y - y * a.x; }\n  double operator^(point a) { return x * a.x + y * a.y; }\n  double Len() { return sqrt(x * x + y * y); }\n  point adjustTo(double L) {\n    L /= Len();\n    return point(x * L, y * L);\n  }\n  point operator/(double t) { return point(x / t, y / t); }\n  double rotateAngle(point a) {\n    point p = *this;\n    return atan2(p * a, p ^ a);\n  }\n  int operator==(point a) { return sgn(x - a.x) == 0 && sgn(y - a.y) == 0; }\n  void print() { printf(\"%.4lf %.4lf\\n\", x, y); }\n};\ndouble calPloyArea(point a[], int n) {\n  double ans = 0;\n  int i;\n  for (i = 0; i < n; i++) ans += a[i] * a[(i + 1) % n];\n  return ans;\n}\nint changeToClockwise(point a[], int n) {\n  double s = calPloyArea(a, n);\n  if (sgn(s) >= 0) return 0;\n  int L = 0, R = n - 1;\n  while (L < R) swap(a[L++], a[R--]);\n  return 1;\n}\nint pointOnSeg(point p, point a, point b) {\n  if (sgn((p - a) * (p - b))) return 0;\n  int x = sgn((p.x - a.x) * (p.x - b.x));\n  int y = sgn((p.y - a.y) * (p.y - b.y));\n  return x <= 0 && y <= 0;\n}\nint pointOnRightOfLine(point p, point a, point b) {\n  return sgn((p - a) * (b - a)) > 0;\n}\nint pointOnLine(point p, point a, point b) {\n  return sgn((p - a) * (b - a)) == 0;\n}\nint pointOnLeftOfLine(point p, point a, point b) {\n  return sgn((b - a) * (p - a)) > 0;\n}\nint getRelationOfPointAndPloy(point a[], int n, point p) {\n  a[n] = a[0];\n  int i;\n  double sum = 0;\n  for (i = 0; i < n; i++) {\n    if (pointOnSeg(p, a[i], a[i + 1])) return 0;\n    point aa = a[i] - p;\n    point bb = a[i + 1] - p;\n    sum += aa.rotateAngle(bb);\n  }\n  if (fabs(sum - 2 * acos(-1.0)) < 1e-2) return -1;\n  return 1;\n}\nint isParal(point a, point b, point p, point q) {\n  double aa = (b.x - a.x) * (p.y - q.y);\n  double bb = (b.y - a.y) * (p.x - q.x);\n  return sgn(aa - bb) == 0;\n}\nint lineCrossLine(point a, point b, point p, point q, point &ans) {\n  if (isParal(a, b, p, q)) {\n    if (!pointOnLine(p, a, b)) return 0;\n    return 2;\n  }\n  double s1 = (p - a) * (q - a);\n  double s2 = (q - b) * (p - b);\n  ans = (a * s2 + b * s1) / (s1 + s2);\n  return 1;\n}\nint segCrossSeg(point a, point b, point p, point q, point &ans) {\n  if (isParal(a, b, p, q)) {\n    if (!pointOnLine(p, a, b)) return 0;\n    if (sgn(a.x - b.x) == 0) {\n      if (p.y > q.y) swap(p, q);\n      if (a.y > b.y) swap(a, b);\n      if (sgn(q.y - a.y) == -1 || sgn(b.y - p.y) == -1) return 0;\n      if (q == a || p == b) {\n        if (q == a) ans = q;\n        if (p == b) ans = p;\n        return 1;\n      }\n      return 2;\n    }\n    if (p.x > q.x) swap(p, q);\n    if (a.x > b.x) swap(a, b);\n    if (sgn(q.x - a.x) == -1 || sgn(b.x - p.x) == -1) return 0;\n    if (q == a || p == b) {\n      if (q == a) ans = q;\n      if (p == b) ans = p;\n      return 1;\n    }\n    return 2;\n  }\n  lineCrossLine(a, b, p, q, ans);\n  if (pointOnSeg(ans, a, b) && pointOnSeg(ans, p, q)) return 1;\n  return 0;\n}\nconst long long MM = 1000000000000LL;\nstruct BigInteger {\n  long long a[20];\n  int cnt;\n  BigInteger() {\n    cnt = 1;\n    a[1] = 0;\n  }\n  BigInteger(long long x) {\n    if (x == 0) {\n      cnt = 1;\n      a[1] = 0;\n      return;\n    }\n    cnt = 1;\n    a[1] = x;\n  }\n  void reset() {\n    cnt = 1;\n    a[1] = 0;\n  }\n  BigInteger operator*(int x) {\n    if (x == 0) return BigInteger(0);\n    if (zero()) return BigInteger(0);\n    BigInteger p = *this;\n    int i;\n    for (i = 1; i <= p.cnt; i++) p.a[i] *= x;\n    int t = 0;\n    for (i = 1; i <= p.cnt; i++) {\n      p.a[i] += t;\n      t = p.a[i] / MM;\n      p.a[i] %= MM;\n    }\n    if (t == 0) return p;\n    while (t) p.a[++p.cnt] = t % MM, t /= MM;\n    return p;\n  }\n  int zero() { return cnt == 1 && a[1] == 0; }\n  BigInteger operator+(BigInteger a) {\n    if (a.zero()) return *this;\n    if (zero()) return a;\n    BigInteger p, q;\n    if (a.cnt > cnt)\n      p = a, q = *this;\n    else\n      p = *this, q = a;\n    int i;\n    for (i = 1; i <= q.cnt; i++) p.a[i] += q.a[i];\n    int re = 0;\n    for (i = 1; i <= p.cnt; i++) {\n      p.a[i] += re;\n      re = p.a[i] / MM;\n      p.a[i] %= MM;\n    }\n    if (re) {\n      p.a[++p.cnt] = re;\n    }\n    return p;\n  }\n};\nconst long long inf = (((long long)1) << 61) + 5;\nconst double dinf = 1000000000;\nconst int INF = 1000000005;\nconst int N = 222225;\nstruct SegTree {\n  struct node {\n    int L, R, size;\n    double v;\n  };\n  node a[N << 2];\n  int n;\n  SegTree() {}\n  SegTree(int x) {\n    n = x;\n    build(1, 1, n);\n  }\n  void build(int t, int L, int R) {\n    a[t].L = L;\n    a[t].R = R;\n    if (L == R) {\n      a[t].size = 0;\n      a[t].v = 0;\n      return;\n    }\n    int M = (L + R) >> 1;\n    build(t << 1, L, M);\n    build(t << 1 | 1, M + 1, R);\n    a[t].size = a[t << 1].size + a[t << 1 | 1].size;\n  }\n  int query(int t, double v) {\n    if (a[t].L == a[t].R) return a[t].v > v;\n    if (sgn(a[t << 1].v - v) <= 0) return query(t << 1 | 1, v);\n    return a[t << 1 | 1].size + query(t << 1, v);\n  }\n  void change(int t, int pos, double v) {\n    if (a[t].L == a[t].R) {\n      a[t].size = 1;\n      a[t].v = v;\n      return;\n    }\n    int M = (a[t].L + a[t].R) >> 1;\n    if (pos <= M)\n      change(t << 1, pos, v);\n    else\n      change(t << 1 | 1, pos, v);\n    a[t].v =\n        ((a[t << 1].v) > (a[t << 1 | 1].v) ? (a[t << 1].v) : (a[t << 1 | 1].v));\n    a[t << 1 | 1].size = query(t << 1 | 1, a[t << 1].v);\n    a[t].size = a[t << 1].size + a[t << 1 | 1].size;\n  }\n};\nstruct heapTree {\n  struct heapNode {\n    int L, R, pri, size;\n    long long x, y;\n    heapNode() {}\n    heapNode(long long _x, long long _y) {\n      x = _x;\n      y = _y;\n      if (x < 0) x = -x, y = -y;\n      long long tmp = Gcd(x, y);\n      x /= tmp;\n      y /= tmp;\n    }\n    int operator>=(const heapNode &a) const { return *this == a || *this > a; }\n    int operator<=(const heapNode &a) const { return *this < a || *this == a; }\n    int operator==(const heapNode &a) const { return y * a.x == x * a.y; }\n    int operator<(const heapNode &a) const { return y * a.x < x * a.y; }\n    int operator>(const heapNode &a) const { return y * a.x > x * a.y; }\n  };\n  heapNode a[200005];\n  int e, root;\n  void init() {\n    e = 0;\n    root = -1;\n  }\n  void pushUp(int x) {\n    if (x == -1) return;\n    a[x].size = 1;\n    if (a[x].L != -1) a[x].size += a[a[x].L].size;\n    if (a[x].R != -1) a[x].size += a[a[x].R].size;\n  }\n  void rotL(int &x) {\n    int y = a[x].R;\n    a[x].R = a[y].L;\n    pushUp(x);\n    a[y].L = x;\n    pushUp(y);\n    x = y;\n  }\n  void rotR(int &x) {\n    int y = a[x].L;\n    a[x].L = a[y].R;\n    pushUp(x);\n    a[y].R = x;\n    pushUp(y);\n    x = y;\n  }\n  void insert(int &k, heapNode p) {\n    if (k == -1) {\n      k = ++e;\n      a[k].L = a[k].R = -1;\n      a[k].x = p.x;\n      a[k].y = p.y;\n      a[k].pri = rand();\n    } else if (p < a[k]) {\n      insert(a[k].L, p);\n      if (a[a[k].L].pri > a[k].pri) rotR(k);\n    } else {\n      insert(a[k].R, p);\n      if (a[a[k].R].pri > a[k].pri) rotL(k);\n    }\n    pushUp(k);\n  }\n  void insert(long long x, long long y) { insert(root, heapNode(x, y)); }\n  void del(int &k, heapNode p) {\n    if (k == -1)\n      return;\n    else if (p < a[k])\n      del(a[k].L, p);\n    else if (p > a[k])\n      del(a[k].R, p);\n    else {\n      if (a[k].L == -1 && a[k].R == -1)\n        k = -1;\n      else if (a[k].L == -1)\n        k = a[k].R;\n      else if (a[k].R == -1)\n        k = a[k].L;\n      else {\n        if (a[a[k].L].pri < a[a[k].R].pri) {\n          rotL(k);\n          del(a[k].L, p);\n        } else {\n          rotR(k);\n          del(a[k].R, p);\n        }\n      }\n    }\n    pushUp(k);\n  }\n  void del(long long x, long long y) { del(root, heapNode(x, y)); }\n  int findSmallThan(int k, heapNode p) {\n    if (k == -1) return 0;\n    if (p <= a[k]) return findSmallThan(a[k].L, p);\n    int ans = 1;\n    if (a[k].L != -1) ans += a[a[k].L].size;\n    return ans + findSmallThan(a[k].R, p);\n  }\n  int findSmallThan(long long x) { return findSmallThan(root, heapNode(1, x)); }\n  int findBigThan(int k, heapNode p) {\n    if (k == -1) return 0;\n    if (p >= a[k]) return findBigThan(a[k].R, p);\n    int ans = 1;\n    if (a[k].R != -1) ans += a[a[k].R].size;\n    return ans + findBigThan(a[k].L, p);\n  }\n  int findBigThan(long long x) { return findBigThan(root, heapNode(1, x)); }\n};\nconst int spfaEdgeNum = 5005;\nconst int spfaNodeNum = 2005;\nstruct spfaStruct {\n  struct node {\n    int v, w;\n  };\n  vector<node> g[N];\n  long long dis[N];\n  int inq[N], n;\n  void init(int N) {\n    n = N;\n    int i;\n    for (i = 0; i <= n; i++) g[i].clear(), d[i] = 0;\n  }\n  void add(int u, int v, int w = 1) {\n    node p;\n    p.v = v;\n    p.w = w;\n    g[u].push_back(p);\n    d[v]++;\n  }\n  void spfa(int s) {\n    int i;\n    for (i = 1; i <= n; i++) dis[i] = inf, inq[i] = 0;\n    dis[s] = 0;\n    inq[s] = 1;\n    queue<int> Q;\n    Q.push(s);\n    while (!Q.empty()) {\n      int u = Q.front();\n      Q.pop();\n      inq[u] = 0;\n      for (i = 0; i < g[u].size(); i++) {\n        int v = g[u][i].v;\n        int w = g[u][i].w;\n        if (dis[v] > dis[u] + w) {\n          dis[v] = dis[u] + w;\n          if (!inq[v]) Q.push(v), inq[v] = 1;\n        }\n      }\n    }\n  }\n  long long f[N];\n  int d[N];\n  void DP() {\n    int i;\n    queue<int> Q;\n    for (i = 1; i <= n; i++)\n      if (!d[i]) Q.push(i);\n    while (!Q.empty()) {\n      int u = Q.front();\n      Q.pop();\n      for (i = 0; i < g[u].size(); i++) {\n        int v = g[u][i].v;\n        f[v] += f[u];\n        if (--d[v] == 0) Q.push(v);\n      }\n    }\n  }\n};\nstruct fraction {\n  long long a, b;\n  fraction() {}\n  fraction(long long x) {\n    a = x;\n    b = 1;\n  }\n  fraction(long long x, long long y) {\n    a = x;\n    b = y;\n    deal();\n  }\n  void deal() {\n    if (b < 0) b = -b, a = -a;\n    long long k = Gcd(a, b);\n    if (k < 0) k = -k;\n    a /= k;\n    b /= k;\n  }\n  fraction operator+(fraction p) {\n    fraction ans;\n    ans.b = Lcm(b, p.b);\n    ans.a = ans.b / b * a + ans.b / p.b * p.a;\n    ans.deal();\n    return ans;\n  }\n  fraction operator-(fraction p) {\n    fraction ans;\n    ans.b = Lcm(b, p.b);\n    ans.a = ans.b / b * a - ans.b / p.b * p.a;\n    ans.deal();\n    return ans;\n  }\n  fraction operator*(fraction p) {\n    fraction ans;\n    ans.a = a * p.a;\n    ans.b = b * p.b;\n    ans.deal();\n    return ans;\n  }\n  fraction operator/(fraction p) {\n    fraction ans;\n    ans.a = a * p.b;\n    ans.b = b * p.a;\n    ans.deal();\n    return ans;\n  }\n  int operator<(const fraction &p) const { return a * p.b < b * p.a; }\n  int operator>(const fraction &p) const { return a * p.b > b * p.a; }\n  int operator==(const fraction &p) const { return a * p.b == b * p.a; }\n  int operator!=(const fraction &p) const { return a * p.b != b * p.a; }\n};\nconst int mod = 1000000007;\nconst long long MAX = 1000000000000000000LL;\nconst int M = 3005;\nint a[M][M];\nchar s[M][M];\nint n, m, K;\nint main() {\n  RD(n, m, K);\n  int i, j;\n  for (i = 1; i <= n; i++) RD(s[i] + 1);\n  for (i = 1; i <= n; i++)\n    for (j = 1; j <= m; j++)\n      if (s[i][j] != '.') {\n        char c = s[i][j];\n        if (c == 'R') {\n          int x = j + i - 1;\n          if (x > m) continue;\n          a[i][x]++;\n        } else if (c == 'L') {\n          int x = j - (i - 1);\n          if (x >= 1) a[i][x]++;\n        } else if (c == 'U') {\n          if (i & 1) a[i / 2 + 1][j]++;\n        } else if (c == 'D') {\n        }\n      }\n  for (i = n; i >= 1; i--)\n    for (j = 1; j <= m; j++) {\n      a[i - 1][j] += a[i][j];\n    }\n  for (i = 1; i <= m; i++) {\n    if (i > 1) putchar(' ');\n    printf(\"%d\", a[1][i]);\n  }\n  puts(\"\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint otv[2001];\nchar ch[2001][2001];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      cin >> ch[i][j];\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    for (int I = 1, j = i - 1; j >= 0 && I < n; j--, I++) {\n      if (ch[I][j] == 'R') otv[i]++;\n    }\n    for (int I = 1, j = i + 1; j < m && I < n; j++, I++) {\n      if (ch[I][j] == 'L') otv[i]++;\n    }\n    for (int I = 2, j = i; I < n; I += 2) {\n      if (ch[I][j] == 'U') otv[i]++;\n    }\n    cout << otv[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class b1 {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = in.nextInt();\n\t\tint m = in.nextInt();\n\t\tint k = in.nextInt();\n\t\tint[] count = new int[m];\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tcount[i] = 0;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = in.next();\n\t\t\tfor (int j = 0; j < s.length(); j++) {\n\t\t\t\tswitch (s.charAt(j)) {\n\t\t\t\tcase 'R':\n\t\t\t\t\tif (i + j < m) {\n\t\t\t\t\t\tcount[i + j]++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\tif (j - i >= 0) {\n\t\t\t\t\t\tcount[j - i]++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'U':\n\t\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\t\tcount[j]++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif (n == 1) {\n\t\t\t\t\t\tcount[j]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tout.print(count[i] + \" \");\n\t\t}\n\t\tout.close();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nchar r[2000 + 1];\nint v[2000 + 1];\nint main(void) {\n  int n, m, k;\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", r);\n    for (int j = 0; j < m; j++)\n      if (r[j] == 'U' && i % 2 == 0)\n        v[j]++;\n      else if (r[j] == 'L' && j >= i)\n        v[j - i]++;\n      else if (r[j] == 'R' && j + i < m)\n        v[j + i]++;\n  }\n  for (int j = 0; j < m; j++) printf(\"%d \", v[j]);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nint a[2001];\nchar t;\nint main() {\n  scanf(\"%d%d%d\\n\", &n, &m, &k);\n  for (int i = 1; i <= m; i++) a[i] = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      scanf(\"%c\", &t);\n      if ((t == 'U') and (i > 2) and (i % 2 == 1)) a[j]++;\n      if ((t == 'R') and (i - 1 + j <= m)) a[j + i - 1]++;\n      if ((t == 'L') and (j - i + 1 > 0)) a[j - i + 1]++;\n    }\n    scanf(\"\\n\");\n  }\n  for (int i = 1; i <= m; i++) printf(\"%d%c\", a[i], ' ');\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Zepto {\n\t\n\tstatic BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\n\tpublic static int readInt(StringTokenizer[] st) throws IOException {\n\t\twhile (!st[0].hasMoreTokens()) {\n\t\t\tst[0] = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn Integer.parseInt(st[0].nextToken());\n\t}\n\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tStringTokenizer[] st = new StringTokenizer[]{new StringTokenizer(in.readLine())};\n\t\tint n = readInt(st);\n\t\tint m = readInt(st);\n\t\tint k = readInt(st);\n\t\tint[] ar = new int[m];\n\t\tin.readLine();\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tint a = in.read();\n\t\t\t\tif (a == 10 || a == 13) {\n\t\t\t\t\tj--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif ((char) a == 'D') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif ((char) a == 'U') {\n\t\t\t\t\tar[j] += (i + 1) % 2;\n\t\t\t\t}\n\t\t\t\tif ((char) a == 'L') {\n\t\t\t\t\tif (j - i >= 0) {\n\t\t\t\t\t\tar[j - i]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((char) a == 'R') {\n\t\t\t\t\tif (j + i < m) {\n\t\t\t\t\t\tar[j + i]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tSystem.out.print(ar[i] + \" \");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\npublic class B {\n\tpublic static long time = 0;\n\tpublic static void main(String[] args) throws Exception {\n\t\ttime = System.currentTimeMillis();\n\t\t\n\t\tIN = System.in;\n\t\tOUT = System.out;\n\t\tin = new BufferedReader(new InputStreamReader(IN));\n\t\tout = new PrintWriter(OUT, FLUSH);\n\t\tsolveOne();\n\t\tout.flush();\n\t}\n\t\n\tpublic static void solveOne() throws Exception {\n\t\tint n = nextInt();\n\t\tint m = nextInt();\n\t\tint k = nextInt();\n\t\tchar[][] grid = new char[n][];\n\t\tfor (int i = 0 ; i < n; i++){\n\t\t\tgrid[i] = nextString().toCharArray();\n\t\t}\n\t\tint[] count = new int[m];\n\t\tint[] rightSum = new int[m];\n\t\tfor (int i = 0 ; i < n; i++){\n\t\t\tfor (int j = 0 ; j < m; j++){\n\t\t\t\tchar cur = grid[i][j];\n\t\t\t\tif (cur == 'R'){\n\t\t\t\t\tif (i + j < m){\n\t\t\t\t\t\tcount[i + j]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (cur == 'L'){\n\t\t\t\t\tif (j - i >= 0 && j - i < m){\n\t\t\t\t\t\tcount[j- i ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (cur == 'U' && i % 2 == 0){\n\t\t\t\t\tcount[j]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int e: count) p(e + \" \");\n\t\tpn();\n\t}\n\t\n\t\n\tpublic static void solveTwo() throws Exception {\n\t\t\n\t}\n\t\n\tpublic static void solveThree() throws Exception {\n\t\t\n\t}\n\t\n\tpublic static BufferedReader in;\n\tpublic static StringTokenizer st;\n\tpublic static InputStream IN;\n\tpublic static OutputStream OUT;\n\tpublic static String nextString() throws Exception {\n\t\tfor (;st == null || !st.hasMoreTokens();){\n\t\t\tString k1 = in.readLine();\n\t\t\tif (k1 == null) return null;\n\t\t\tst = new StringTokenizer(k1);\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\tpublic static int nextInt () throws Exception {\n\t\treturn Integer.parseInt(nextString());\n\t}\n\tpublic static long nextLong() throws Exception{\n\t\treturn Long.parseLong(nextString());\n\t}\n\tpublic static double nextDouble() throws Exception{\n\t\treturn Double.parseDouble(nextString());\n\t}\n\tprivate static int[] nextIntArray(int n1) throws Exception {\n\t\tint[] l1 = new int[n1];\n\t\tfor (int i = 0 ;i < n1; i++){\n\t\t\tl1[i] = nextInt();\n\t\t}\n\t\treturn l1;\n\t}\n\tprivate static long[] nextLongArray(int n1) throws Exception {\n\t\tlong[] l1 = new long[n1];\n\t\tfor (int i = 0 ;i < n1; i++){\n\t\t\tl1[i] = nextLong();\n\t\t}\n\t\treturn l1;\n\t}\n\tprivate static int[][] nextIntGrid(int x, int y) throws Exception {\n\t\tint[][] l1 = new int[x][y];\n\t\tfor (int i =0; i < x; i++){\n\t\t\tfor (int j = 0; j < y; j++){\n\t\t\t\tl1[i][j] = nextInt();\n\t\t\t}\n\t\t}\n\t\treturn l1;\n\t}\n\tpublic static void px(Object ... l1){\n\t\tSystem.out.println(Arrays.deepToString(l1));\n\t}\n\tpublic static boolean FLUSH = false;\n\tpublic static PrintWriter out;\n\tpublic static void p(Object ... l1){\n\t\tfor (int i = 0; i < l1.length; i++){\n\t\t\tif (i != 0) out.print(' ');\n\t\t\tout.print(l1[i].toString());\n\t\t}\n\t}\n\tpublic static void pn(Object ... l1){\n\t\tfor (int i = 0; i < l1.length; i++){\n\t\t\tif (i != 0) out.print(' ');\n\t\t\tout.print(l1[i].toString());\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tpublic static void pn(Collection l1){\n\t\tboolean first = true;\n\t\tfor (Object e: l1){\n\t\t\tif (first) first = false;\n\t\t\telse out.print(' ');\n\t\t\tout.print(e.toString());\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tprivate static BigInteger bi(long n1){\n\t\treturn BigInteger.valueOf(n1);\n\t}\n\t\n\tprivate static double usedTime(){\n\t\treturn (System.currentTimeMillis()-time)*0.001;\n\t}\n\tprivate static Random usingRandomGenerator = new Random(System.currentTimeMillis());\n\tprivate static void sort(double[] l1){\n\t\tfor (int i = 0 ;  i< l1.length; i++){\n\t\t\tint q = i + usingRandomGenerator.nextInt(l1.length - i);\n\t\t\tdouble t = l1[i];\n\t\t\tl1[i] = l1[q];\n\t\t\tl1[q] = t;\n\t\t}\n\t\tArrays.sort(l1);\n\t}\n\tprivate static void sort(int[] l1){\n\t\tfor (int i = 0 ;  i< l1.length; i++){\n\t\t\tint q = i + usingRandomGenerator.nextInt(l1.length - i);\n\t\t\tint t = l1[i];\n\t\t\tl1[i] = l1[q];\n\t\t\tl1[q] = t;\n\t\t}\n\t\tArrays.sort(l1);\n\t}\n\tprivate static void sort(long[] l1){\n\t\tfor (int i = 0 ;  i< l1.length; i++){\n\t\t\tint q = i + usingRandomGenerator.nextInt(l1.length - i);\n\t\t\tlong t = l1[i];\n\t\t\tl1[i] = l1[q];\n\t\t\tl1[q] = t;\n\t\t}\n\t\tArrays.sort(l1);\n\t}\n\t\n\t\n\t\n}"
        },
        {
            "language": 3,
            "solution": "Rows, Columns = 0, 0\nSpiders = []\n\ndef ReadInput():\n    global Rows, Columns, Spiders\n    Rows, Columns, spiderCount = map(int, input().split())\n    Spiders = [0 for i in range(0, Columns)]\n    for x in range(0, Rows):\n        line = input()\n        for y in range(0, Columns):\n            if line[y] == 'L':\n                if y - x >= 0:\n                    Spiders[y - x] += 1\n            elif line[y] == 'R':\n                if y + x < Columns:\n                    Spiders[y + x] += 1\n            elif line[y] == 'U':\n                if x % 2 == 0:\n                    Spiders[y] += 1\n\ndef PrintOutput():\n    global Rows, Columns, Spiders\n    for y in range(0, Columns):\n        print(Spiders[y], end = \" \")\n    print(\"\\n\")\n\ndef main():\n    ReadInput()\n    PrintOutput()\n\nmain()"
        },
        {
            "language": 4,
            "solution": "import java.awt.Point;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.LinkedList;\n\n\npublic class Main {\n\n    \n    \n    \n    public static void main(String[] args) throws Exception {\n        \n//      BufferedReader in = new BufferedReader(new FileReader(new File(\"input.txt\")));\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        int n,m;\n        String l[] = in.readLine().split(\" \");\n        n = Integer.parseInt(l[0]);\n        m = Integer.parseInt(l[1]);\n        \n        int ans[] = new int[m];\n        for(int i = 0; i < n; i++) {\n            \n            String s = in.readLine();\n            for(int j = 0;j < m ; j++) {\n                char c = s.charAt(j);\n                if(c == 'U') {\n                    ans[j] += (i+1) % 2;\n                }\n                if(c == 'R' && (j+i) < m) {\n                    ans[j+i]++;\n                }\n                if(c == 'L'&&(j - i) >= 0) {\n                    ans[j-i]++;\n                }\n            }\n        }\n    \n        for(int i = 0; i < m - 1; i++)\n            System.out.print(ans[i]+\" \");\n        System.out.println(ans[m - 1]);\n        in.close();\n    }\n    \n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\nimport java.awt.Point;\n\npublic class Template {\n\n    BufferedReader in;\n    PrintWriter out;\n    StringTokenizer st;\n\n    String next() {\n        while (st == null || !st.hasMoreTokens()) {\n            try {\n                st = new StringTokenizer(in.readLine());\n            } catch (Exception e) {\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    public void run() throws Exception {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        solve();\n        out.flush();\n        out.close();\n        in.close();\n    }\n\n    public void solve() throws Exception {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n\n        int[] ans = new int[m];\n\n        for (int i = 0; i < n; i++) {\n            char[] c = next().toCharArray();\n            for (int j = 0; j < m; j++) {\n                if (c[j] == 'R' && j + i < m) {\n                    ans[j + i]++;\n                }\n\n                if (c[j] == 'L' && j - i >= 0) {\n                    ans[j - i]++;\n                }\n\n                if (c[j] == 'U' && i % 2 == 0) {\n                    ans[j]++;\n                }\n            }\n        }\n\n        for (int j = 0; j < m; j++) {\n            out.print(ans[j] + \" \");\n        }\n        out.println();\n    }\n\n    public static void main(String[] args) throws Exception {\n        new Template().run();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint q[100000];\nint main() {\n  char ch;\n  int n, m, i, j, k;\n  scanf(\"%d %d %d \", &n, &m, &k);\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      scanf(\" %c\", &ch);\n      if (ch == 'R') q[j + (i - 1)]++;\n      if (ch == 'L')\n        if (j >= (i - 1)) q[j - (i - 1)]++;\n      if (ch == 'U' && i % 2) q[j]++;\n      if (ch == 'D' && i == 1) q[j] += m;\n    }\n  }\n  for (i = 1; i <= m; i++) printf(\"%d \", q[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  static char cc[2000][2000 + 1];\n  int n, m, k, i, j, cnt;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 0; i < n; i++) scanf(\"%s\", cc[i]);\n  for (j = 0; j < m; j++) {\n    cnt = 0;\n    for (i = 2; i < n; i += 2)\n      if (cc[i][j] == 'U') cnt++;\n    for (i = 1; i < n && j - i >= 0; i++)\n      if (cc[i][j - i] == 'R') cnt++;\n    for (i = 1; i < n && j + i < m; i++)\n      if (cc[i][j + i] == 'L') cnt++;\n    printf(\"%d \", cnt);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar mas[2010][2010];\nint n, m, k;\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nchar dir[] = {'L', 'R', 'U', 'D'};\nbool norm(int x, int y) { return x >= 0 && y >= 0 && x < n && y < m; }\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j < m; ++j) cin >> mas[i][j];\n  for (int j = 0; j < m; ++j) {\n    int cnt = 0;\n    for (int i = 1; i < n; ++i) {\n      for (int t = 0; t < 4; ++t)\n        if (norm(i + dx[t] * i, j + dy[t] * i)) {\n          if (mas[i + dx[t] * i][j + dy[t] * i] == dir[t]) ++cnt;\n        }\n    }\n    cout << cnt << \" \";\n  }\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.sql.Array;\nimport java.util.*;\nimport java.math.BigInteger;\nimport java.util.Collections.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.math.BigInteger.*;\n\n\npublic class TaskD{\n\n    void run(){\n        Locale.setDefault(Locale.US);\n        boolean my;\n        try {\n            my = System.getProperty(\"MY_LOCAL\") != null;\n        } catch (Exception e) {\n            my = false;\n        }\n        try{\n            err = System.err;\n            if( my ){\n                sc  = new FastScanner(new BufferedReader(new FileReader(\"input.txt\")));\n//                sc  = new FastScanner(new BufferedReader(new FileReader(\"C:\\\\myTest.txt\")));\n                out = new PrintWriter   (new FileWriter(\"output.txt\"));\n            }\n            else {\n                sc = new FastScanner(new BufferedReader(new InputStreamReader(System.in)));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n        }catch(Exception e){\n            MLE();\n        }\n        if( my )\n            tBeg = System.currentTimeMillis();\n        solve();\n        if( my )\n            err.println( \"TIME: \" + (System.currentTimeMillis() - tBeg ) / 1e3 );\n        exit(0);\n    }\n\n    void exit( int val ){\n        err.flush();\n        out.flush();\n        System.exit(val);\n    }\n\n    double tBeg;\n    FastScanner sc;\n    PrintWriter out;\n    PrintStream err;\n\n    class FastScanner{\n\n        StringTokenizer st;\n        BufferedReader br;\n\n        FastScanner( BufferedReader _br ){\n            br = _br;\n        }\n\n        String readLine(){\n            try {\n                return br.readLine();\n            } catch (IOException e) {\n                return null;\n            }\n        }\n\n        String next(){\n            while( st==null || !st.hasMoreElements() )\n                st = new StringTokenizer(readLine());\n            return st.nextToken();\n        }\n\n        int nextInt(){ return Integer.parseInt(next()); }\n        long nextLong(){ return Long.parseLong(next()); }\n        double nextDouble(){ return Double.parseDouble(next()); }\n    }\n\n    void MLE(){\n        int[][] arr = new int[1024*1024][]; for( int i = 0; i < 1024*1024; ++i ) arr[i] = new int[1024*1024];\n    }\n\n    void MLE( boolean doNotMLE ){ if( !doNotMLE ) MLE(); }\n\n    void TLE(){\n        for(;;);\n    }\n\n    public static void main(String[] args) {\n        new TaskD().run();\n//        new Thread( null, new Runnable() {\n//            @Override\n//            public void run() {\n//                new Main().run();\n//            }\n//        }, \"Lolka\", 256_000_000L ).run();\n    }\n\n    ////////////////////////////////////////////////////////////////\n\n\n    int n, m, k;\n\n    char[][] field = new char[2010][2010];\n\n    int qwer(int x, int y, char t)\n    {\n        if (x < 1 || x > m || y < 1 || y > n)\n            return 0;\n        if (field[y][x] == t)\n            return 1;\n        return 0;\n    }\n\n    int ans (int x)\n    {\n        int ans = 0;\n        for (int y = 2; y <= n; ++y)\n        {\n            ans += qwer(x - (y - 1), y, 'R');\n            ans += qwer(x + (y - 1), y, 'L');\n            ans += qwer(x, y + (y - 1), 'U');\n        }\n        return ans;\n    }\n\n    void  solve(){\n        n = sc.nextInt();\n        m = sc.nextInt();\n        k = sc.nextInt();\n\n        for (int i = 1; i <= n; ++i) {\n            field[i] = (\"#\" + sc.next()).toCharArray();\n        }\n\n        for (int x = 1; x <= m; ++x)\n            out.print( \" \" + ans(x) );\n\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring arr[2001];\nint main(int argc, char** argv) {\n  int row, col, n;\n  long counter = 0;\n  cin >> row >> col >> n;\n  for (int i = 0; i < row; i++) cin >> arr[i];\n  for (int i = 0; i < col; i++) {\n    counter = 0;\n    for (int j = 1; j < row; j++) {\n      if (j % 2 == 0 && arr[j][i] == 'U') counter++;\n      if (i - j >= 0 && arr[j][i - j] == 'R') counter++;\n      if (i + j < col && arr[j][i + j] == 'L') counter++;\n    }\n    cout << counter << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2010;\nint n, m, k;\nint co[N];\nchar s[N];\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; ++i) {\n    cin >> s;\n    for (int j = 0; j < m; ++j) {\n      if (s[j] == 'L')\n        if (j - i + 1 >= 0) co[j - i + 1]++;\n      if (s[j] == 'R')\n        if (j + i - 1 < m) co[j + i - 1]++;\n      if (s[j] == 'U')\n        if (i % 2 != 0) co[j]++;\n    }\n    memset(s, 0, sizeof(s));\n  }\n  for (int i = 0; i < m; ++i) cout << co[i] << ' ';\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dx[] = {1, -1, 0, 0};\nlong long dy[] = {0, 0, 1, -1};\nint n, m, k, a, b, c;\nstring s[2001];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  for (int i = 0; i < m; i++) {\n    c = 0;\n    for (int j = 1; j < n; j++) {\n      if (i + j < m && s[j][i + j] == 'L') c++;\n      if (i - j >= 0 && s[j][i - j] == 'R') c++;\n      if (j + j < n && s[2 * j][i] == 'U') c++;\n    }\n    printf(\"%d \", c);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(int argc, char* argv[]) {\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<string> M(n);\n  for (auto& x : M) cin >> x;\n  for (int j = 0; j < m; ++j) {\n    long long cnt = 0;\n    for (int i = 2; i < n; i += 2)\n      if (M[i][j] == 'U') ++cnt;\n    for (int i = 1; j + i < m && i < n; ++i)\n      if (M[i][j + i] == 'L') ++cnt;\n    for (int i = 1; j - i >= 0 && i < n; ++i)\n      if (M[i][j - i] == 'R') ++cnt;\n    cout << cnt << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nenum { MAX = 2010 };\nint result[MAX];\nint main() {\n  int n, m;\n  scanf(\"%d%d%*d\", &n, &m);\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) {\n      char c;\n      scanf(\" %c\", &c);\n      if (c == 'U' && !(i % 2)) result[j]++;\n      if (c == 'R' && j + i < m) result[j + i]++;\n      if (c == 'L' && j - i >= 0) result[j - i]++;\n    }\n  for (int i = 0; i < m; i++) printf(\"%d \", result[i]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint counter[15000];\nchar grid[2015][2050];\nint main() {\n  int n, m, t;\n  scanf(\"%d %d %d\", &n, &m, &t);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", &grid[i]);\n  }\n  for (int j = 0; j < m; j++) {\n    for (int i = 1; i < n; i++) {\n      if (i + i < n && grid[i + i][j] == 'U') counter[j]++;\n      if (j + i < m && grid[i][j + i] == 'L') counter[j]++;\n      if (j - i >= 0 && grid[i][j - i] == 'R') counter[j]++;\n    }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", counter[i]);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nchar s[2010];\nint a[2010][2010];\nint main() {\n  int n, m, k, i, j;\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", s);\n    for (j = 0; j < m; j++) {\n      if (s[j] == 'U')\n        a[i][j] = 1;\n      else if (s[j] == 'R')\n        a[i][j] = 2;\n      else if (s[j] == 'D')\n        a[i][j] = 3;\n      else if (s[j] == 'L')\n        a[i][j] = 4;\n      else\n        a[i][j] = 0;\n    }\n  }\n  for (j = 0; j < m; j++) {\n    int res = 0;\n    for (i = 0; i < n; i++) {\n      int si, sj;\n      si = i + i;\n      sj = j;\n      if (si < n && a[si][sj] == 1) res++;\n      si = i;\n      sj = j - i;\n      if (sj >= 0 && a[si][sj] == 2) res++;\n      si = 0;\n      sj = j;\n      if (a[si][sj] == 3) res++;\n      si = i;\n      sj = j + i;\n      if (sj < m && a[si][sj] == 4) res++;\n    }\n    printf(\"%d \", res);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.Point;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\n\npublic class PBV2 {\n\n\tpublic static void main(String[] args){\n\t\tnew PBV2().go();\n\t}\n\t\n\tprivate void go(){\n\t\tScanner in = new Scanner (System.in);\n\t\tint n = in.nextInt();\n\t\tint m = in.nextInt();\n\t\tint k = in.nextInt();\n\t\t\n\t\tArrayList<Point> l = new ArrayList<Point>();\n\t\tArrayList<Point> r = new ArrayList<Point>();\n\t\tArrayList<Point> u = new ArrayList<Point>();\n\t\tArrayList<Point> d = new ArrayList<Point>();\n\t\t\n\t\tfor(int i=0;i<n;i++){\n\t\t\tString row = in.next();\n\t\t\tint index = 0;\n\t\t\tfor(char c : row.toCharArray()){\n\t\t\t\tif(c=='L'){\n\t\t\t\t\tl.add(new Point(index, i));\n\t\t\t\t} else if(c=='R'){\n\t\t\t\t\tr.add(new Point(index, i));\n\t\t\t\t} else if(c=='U'){\n\t\t\t\t\tu.add(new Point(index, i));\n\t\t\t\t} else if(c=='D'){\n\t\t\t\t\td.add(new Point(index, i));\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint[] result = new int[m];\n\t\tfor(Point p:l){\n\t\t\tif(p.x-p.y>=0 && p.x-p.y<m)\n\t\t\t\tresult[p.x-p.y]++;\n\t\t}\n\t\tfor(Point p:r){\n\t\t\tif(p.x+p.y>=0 && p.x+p.y<m)\n\t\t\t\tresult[p.x+p.y]++;\n\t\t}\n\t\tfor(Point p:u){\n\t\t\tif(p.y%2==0)\n\t\t\t\tresult[p.x]++;\n\t\t}\n\t\t\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i=0;i<m;i++){\n\t\t\tsb.append(result[i]);\n\t\t\tsb.append(' ');\n\t\t}\n\t\tsb.append('\\n');\n\t\tSystem.out.println(sb.toString());\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong Min(long i, long j) { return i < j ? i : j; }\nlong Max(long i, long j) { return i > j ? i : j; }\nstring arr[2005];\nlong cnt[2005];\nint main() {\n  long i, j, k, l, m, n;\n  while (cin >> n >> m >> k) {\n    for (i = 1; i <= n; i++) {\n      cin >> arr[i];\n      arr[i] = \" \" + arr[i];\n    }\n    memset(cnt, 0, sizeof(cnt));\n    for (i = 1; i <= m; i++) {\n      for (j = 2; j <= n; j++) {\n        if (i - j + 1 > 0 && arr[j][i - j + 1] == 'R') cnt[i]++;\n        if (i + j - 1 <= m && arr[j][i + j - 1] == 'L') cnt[i]++;\n      }\n    }\n    for (i = 1; i <= n; i++) {\n      for (j = 1; j <= m; j++) {\n        if (arr[i][j] == 'U' && i % 2) cnt[j]++;\n      }\n    }\n    for (i = 1; i <= m; i++) cout << cnt[i] << \" \";\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[2200][2200];\nint n, m, sum;\nint main() {\n  int i, j;\n  while (scanf(\"%d %d %d\", &n, &m, &sum) != EOF) {\n    for (i = 0; i < n; i++) {\n      getchar();\n      scanf(\"%s\", a[i]);\n    }\n    int ans;\n    for (i = 0; i < m; i++) {\n      ans = 0;\n      for (j = 1; j < n; j++) {\n        if (i - j >= 0 && a[j][i - j] == 'R') ans++;\n        if (i + j < m && a[j][i + j] == 'L') ans++;\n        if (j + j < n && a[j + j][i] == 'U') ans++;\n      }\n      cout << ans;\n      if (i != m - 1) cout << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "public class B {\n\n\tpublic B () {\n\t\tint N = sc.nextInt(), M = sc.nextInt(); sc.nextInt();\n\t\tchar [][] B = sc.nextChars(N);\n\n\t\tint [] T = new int [M];\n\t\tfor (int i : rep(N))\n\t\t\tfor (int j : rep(M))\n\t\t\t\tswitch(B[i][j]) {\n\t\t\t\tcase 'U': if (i%2 == 0) ++T[j]; break;\n\t\t\t\tcase 'R': if (j+i < M) ++T[j+i]; break;\n\t\t\t\tcase 'L': if (j-i >= 0) ++T[j-i]; break;\n\t\t\t\tdefault: break;\n\t\t\t\t}\n\t\texit(T);\n\t}\n\n\tprivate static int [] rep(int N) { return rep(0, N); }\n\tprivate static int [] rep(int S, int T) { if (T <= S) return new int [0]; int [] res = new int [T-S]; for (int i = S; i < T; ++i) res[i-S] = i; return res; }\n\t////////////////////////////////////////////////////////////////////////////////////\n\tprivate final static IOUtils.MyScanner sc = new IOUtils.MyScanner();\n\tprivate static void exit (Object o, Object ... A) { IOUtils.print(o, A); IOUtils.exit(); }\n\tprivate static class IOUtils {\n\t\tpublic static class MyScanner {\n\t\t\tpublic String next() { newLine(); return line[index++]; }\n\t\t\tpublic int nextInt() { return Integer.parseInt(next()); }\n\t\t\tpublic char [] nextChars() { return next ().toCharArray (); }\n\t\t\tpublic char [][] nextChars(int N) {\n\t\t\t\tchar [][] res = new char [N][];\n\t\t\t\tfor (int i = 0; i < N; ++i)\n\t\t\t\t\tres[i] = nextChars();\n\t\t\t\treturn res;\n\t\t\t}\n\t\t\t//////////////////////////////////////////////\n\t\t\tprivate boolean eol() { return index == line.length; }\n\t\t\tprivate String readLine() {\n\t\t\t\ttry {\n\t\t\t\t\treturn r.readLine();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tthrow new Error (e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprivate final java.io.BufferedReader r;\n\t\t\tprivate MyScanner () { this(new java.io.BufferedReader(new java.io.InputStreamReader(System.in))); }\n\t\t\tprivate MyScanner (java.io.BufferedReader r) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.r = r;\n\t\t\t\t\twhile (!r.ready())\n\t\t\t\t\t\tThread.sleep(1);\n\t\t\t\t\tstart();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tthrow new Error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprivate String [] line;\n\t\t\tprivate int index;\n\t\t\tprivate void newLine() {\n\t\t\t\tif (line == null || eol()) {\n\t\t\t\t\tline = split(readLine());\n\t\t\t\t\tindex = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprivate String [] split(String s) { return s.length() > 0 ? s.split(\" \") : new String [0]; }\n\t\t}\n\t\tprivate static String build(Object o, Object ... A) { return buildDelim(\" \", o, A); }\n\t\tprivate static String buildDelim(String delim, Object o, Object ... A) {\n\t\t\tStringBuilder b = new StringBuilder();\n\t\t\tappend(b, o, delim);\n\t\t\tfor (Object p : A)\n\t\t\t\tappend(b, p, delim);\n\t\t\treturn b.substring(delim.length());\n\t\t}\n\t\t//////////////////////////////////////////////////////////////////////////////////\n\t\tprivate static void start() { if (t == 0) t = millis(); }\n\t\tprivate static void append(StringBuilder b, Object o, String delim) {\n\t\t\tif (o.getClass().isArray()) {\n\t\t\t\tint len = java.lang.reflect.Array.getLength(o);\n\t\t\t\tfor (int i = 0; i < len; ++i)\n\t\t\t\t\tappend(b, java.lang.reflect.Array.get(o, i), delim);\n\t\t\t} else if (o instanceof Iterable<?>)\n\t\t\t\tfor (Object p : (Iterable<?>) o)\n\t\t\t\t\tappend(b, p, delim);\n\t\t\telse {\n\t\t\t\tif (o instanceof Double)\n\t\t\t\t\to = new java.text.DecimalFormat(\"#.############\").format(o);\n\t\t\t\tb.append(delim).append(o);\n\t\t\t}\n\t\t}\n\t\tprivate static java.io.PrintWriter pw = new java.io.PrintWriter(System.out);\n\t\tprivate static void print(Object o, Object ... A) { pw.println(build(o, A)); }\n\t\tprivate static void err(Object o, Object ... A) { System.err.println(build(o, A)); }\n\t\tprivate static void exit() {\n\t\t\tIOUtils.pw.close();\n\t\t\tSystem.out.flush();\n\t\t\terr(\"------------------\");\n\t\t\terr(IOUtils.time());\n\t\t\tSystem.exit(0);\n\t\t}\n\t\tprivate static long t;\n\t\tprivate static long millis() { return System.currentTimeMillis(); }\n\t\tprivate static String time() { return \"Time: \" + (millis() - t) / 1000.0; }\n\t}\n\tpublic static void main (String[] args) { new B(); IOUtils.exit(); }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid debug(T a, T b) {\n  ;\n}\ntemplate <class T>\nvoid chmin(T& a, const T& b) {\n  if (a > b) a = b;\n}\ntemplate <class T>\nvoid chmax(T& a, const T& b) {\n  if (a < b) a = b;\n}\nnamespace std {\ntemplate <class S, class T>\nostream& operator<<(ostream& out, const pair<S, T>& a) {\n  out << '(' << a.first << ',' << a.second << ')';\n  return out;\n}\n}  // namespace std\nint n, m, k;\nchar buf[2005][2005];\nint res[2005];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < (n); ++i) scanf(\"%s\", buf[i]);\n  for (int i = 0; i < (m); ++i) {\n    int cnt = 0;\n    for (int j = 1; i - j >= 0 && j < n; ++j)\n      if (buf[j][i - j] == 'R') ++cnt;\n    for (int j = 1; i + j < m && j < n; ++j)\n      if (buf[j][i + j] == 'L') ++cnt;\n    for (int j = 2; j < n; j += 2)\n      if (buf[j][i] == 'U') ++cnt;\n    res[i] = cnt;\n  }\n  for (int i = 0; i < (m); ++i) printf(\"%d%c\", res[i], i == m - 1 ? '\\n' : ' ');\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint k = sc.nextInt();\n\t\t//TreeSet<Integer> ts = new TreeSet<Integer>();\n\t\t//TreeMap<Integer,Integer> tm = new TreeMap<Integer,Integer>();\n\t\t//ArrayList<ArrayList<Integer>> tubes = new ArrayList<ArrayList<Integer>>();\n\t\t//ArrayList<Integer[]> al = new ArrayList<Integer[]>();\n\t\tint[] ans = new int[m];\n\t\tString line;\n\t\tsc.nextLine();\n\t\tint x;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tline = sc.nextLine();\n\t\t\tfor(int t=0; t < m; t++) {\n\t\t\t\tswitch(line.charAt(t)) {\n\t\t\t\tcase '.' :case 'D': continue;\n\t\t\t\tcase 'U' : if(i%2 == 0)ans[t]++;break;\n\t\t\t\tcase 'L' : x = t - i;if(x >= 0 && x < m)ans[x]++;break;\n\t\t\t\tcase 'R' : x = t + i;if(x >= 0 && x < m)ans[x]++;break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i=0; i < m; i++) {\n\t\t\tsb.append(ans[i]+\" \");\n\t\t}\n\t\tSystem.out.println(sb);\n\t\t\n\t}\n\n\n\n\n\n\n\n\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<string> a(n);\n  for (int i = (0); i < (n); ++i) {\n    cin >> a[i];\n  }\n  vector<int> res(m, 0);\n  for (int i = (0); i < (n); ++i) {\n    for (int j = (0); j < (m); ++j) {\n      if (a[i][j] == '.') continue;\n      if (a[i][j] == 'U') {\n        if (i % 2 == 0) res[j]++;\n      }\n      if (a[i][j] == 'D') continue;\n      if (a[i][j] == 'L') {\n        if (j - i >= 0) res[j - i]++;\n      }\n      if (a[i][j] == 'R') {\n        if (j + i < m) res[j + i]++;\n      }\n    }\n  }\n  for (int i = (0); i < (m); ++i) cout << res[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, ans[2222];\nchar c[2222][2222];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) cin >> c[i][j];\n  for (int j = 1; j <= m; j++) {\n    int cnt = 0;\n    for (int i = 1; i <= n; i++) {\n      int cur = i - 1;\n      if (j + cur <= m && c[i][j + cur] == 'L') cnt++;\n      if (j - cur >= 1 && c[i][j - cur] == 'R') cnt++;\n      if (c[i][j] == 'U' && (i - 1) % 2 == 0) cnt++;\n    }\n    ans[j] = cnt;\n  }\n  for (int i = 1; i <= m; i++) cout << ans[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\n\nN, M, K = map(int, stdin.readline().split())\n\nA = [ stdin.readline().strip() for i in xrange(N) ]\n\nS = [0]*M\n\nfor r in xrange(N):\n\tfor c in xrange(M):\n\t\tif A[r][c] == 'U':\n\t\t\tif r%2 == 0: S[c] += 1\n\t\telif A[r][c] == 'R':\n\t\t\tif r+c < M: S[r+c] += 1\n\t\telif A[r][c] == 'L':\n\t\t\tif c-r >= 0: S[c-r] += 1\n\nprint ' '.join(map(str,S))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Zepto_B {\n\n    public void solve() throws Exception {\n        InputReader in = new InputReader();\n\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n\n        int []vert = new int[m];\n\n        for (int i = 0; i < n; i++) {\n            char[] tmp = in.next().toCharArray();\n            for (int j = 0; j < m; j++) {\n                if(tmp[j] == 'U' && (i&1) != 1)\n                    vert[j] ++;\n                else if(tmp[j] == 'R' && i+j < m){\n                    vert[i+j]++;\n                }else if(tmp[j] == 'L' && j-i > -1){\n                    vert[j-i]++;\n                }\n            }\n        }\n\n        StringBuffer ans = new StringBuffer();\n        ans.append(vert[0]);\n        for (int j = 1; j < m; j++) {\n            ans.append(' ');\n            ans.append(vert[j]);\n        }\n        System.out.println(ans);\n    }\n\n    public static void main(String[] args) throws Exception {\n        new Zepto_B().solve();\n    }\n\n    static class InputReader {\n        BufferedReader in;\n        StringTokenizer st;\n\n        public InputReader() throws IOException {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            st = new StringTokenizer(in.readLine());\n\n        }\n\n        public String next() throws IOException {\n\n            while (!st.hasMoreElements())\n                st = new StringTokenizer(in.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws NumberFormatException, IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws NumberFormatException, IOException {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\n\n    public static void main(String[] args) throws IOException {\n        Scanner scan = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = scan.nextInt();\n        int m = scan.nextInt();\n        int k = scan.nextInt();\n        scan.nextLine();\n        int[] rez = new int[m];\n        for (int i = 0; i < m; i++){\n            rez[i] = 0;\n        }\n        for (int i = 0 ; i < n; i++){\n            String line = scan.nextLine();\n            for (int j = 0; j < m; j++){\n                if (line.charAt(j) != '.'){\n                    if (line.charAt(j) == 'D'){\n                        continue;\n                    }\n                    if (line.charAt(j) == 'U'){\n                        if (i % 2 == 0){\n                            rez[j]++;\n                        }\n                        continue;\n                    }\n                    if (line.charAt(j) == 'L'){\n                        if(j - i >= 0){\n                            rez[j - i]++;\n                        }\n                        continue;\n                    }\n                    if (line.charAt(j) == 'R'){\n                        if (j + i < m){\n                            rez[j + i]++;\n                        }\n                        continue;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < m; i++)        {\n            out.print(rez[i] + \" \");\n        }\n        out.flush();\n        scan.close();\n        out.close();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<vector<char>> v;\nchar a[2001][2001];\nint ans[2001];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) cin >> a[i][j];\n  for (int i = 2; i <= n; i++)\n    for (int j = 1; j <= m; j++) {\n      if (j + i - 1 <= m && a[i][j + i - 1] == 'L') ans[j]++;\n      if (j - i + 1 >= 1 && a[i][j - i + 1] == 'R') ans[j]++;\n      if (i + (i - 1) <= n && a[i + i - 1][j] == 'U') ans[j]++;\n    }\n  for (int i = 1; i <= m; i++) cout << ans[i] << \" \";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {2, 1, 1};\nint dy[] = {0, -1, 1};\nchar dc[] = {'U', 'R', 'L'};\nchar mp[2010][2010];\nint main() {\n  int n, m, o;\n  scanf(\"%d%d%d\", &n, &m, &o);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", mp[i]);\n  }\n  for (int z = 0; z < m; z++) {\n    int cnt = 0;\n    for (int k = 0; k < 3; k++) {\n      int x = 0;\n      int y = z;\n      while (1) {\n        x += dx[k];\n        y += dy[k];\n        if (!(x >= 0 && x < n && y >= 0 && y < m)) break;\n        if (mp[x][y] == dc[k]) cnt++;\n      }\n    }\n    if (z == 0)\n      printf(\"%d\", cnt);\n    else\n      printf(\" %d\", cnt);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, m, c = -1, p, maxx = -2e17, minn = 2e17, ans;\ndouble db, xx, yy;\nint x, y, z, l, r;\nchar a[5000][5000];\nstring second, t, sr[10001];\nint main() {\n  cin >> n >> m >> x;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) {\n      cin >> a[i][j];\n    }\n  for (int j = 1; j <= m; j++) {\n    c = 0;\n    z = 0;\n    for (int i = 1; i <= n; i++) {\n      if (a[i + z][j] == 'U' && i + z <= n) c++;\n      if (a[i - z][j] == 'D' && i - z >= 1) c++;\n      if (a[i][j + z] == 'L' && j + z <= m) c++;\n      if (a[i][j - z] == 'R' && j - z >= 1) c++;\n      z++;\n    }\n    cout << c << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.util.Arrays;\nimport java.io.FilterInputStream;\nimport java.util.HashMap;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.TreeSet;\nimport java.io.BufferedInputStream;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Zyflair Griffane\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tJoltyScanner in = new JoltyScanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, JoltyScanner in, PrintWriter out) {\n        int rows = in.nextInt();\n        int cols = in.nextInt();\n        int k = in.nextInt();\n\n        int[] spiders = new int[cols];\n\n        for (int i = 0; i < rows; i++) {\n            char[] arr = in.next().toCharArray();\n            for (int j = 0; j < cols; j++) {\n                if (arr[j] == 'U') {\n                    if (i % 2 == 0) {\n                        spiders[j]++;\n                    }\n                }\n                else if (arr[j] == 'R') {\n                    int col = i + j;\n                    if (col < cols) {\n                        spiders[col]++;\n                    }\n                }\n                else if (arr[j] == 'L') {\n                    if (j >= i) {\n                        spiders[j - i]++;\n                    }\n                }\n            }\n        }\n\n        out.println(IntArrayUtil.toString(spiders));\n    }\n}\n\nclass JoltyScanner {\n    public static final int BUFFER_SIZE = 1 << 16;\n    public static final char NULL_CHAR = (char) -1;\n\n    StringBuilder str = new StringBuilder();\n    byte[] buffer = new byte[BUFFER_SIZE];\n    boolean EOF_FLAG = false;\n    int bufferIdx = 0, size = 0;\n    char c = (char) -1;\n    BufferedInputStream in = new BufferedInputStream(System.in, BUFFER_SIZE);\n    public JoltyScanner(InputStream in) {\n        this.in = new BufferedInputStream(in);\n    }\n    public int nextInt() {\n        long x = nextLong();\n        if (x > Integer.MAX_VALUE || x < Integer.MIN_VALUE) {\n            throw new ArithmeticException(\"Scanned value overflows integer\");\n        }\n        return (int) x;\n    }\n    public long nextLong() {\n        boolean negative = false;\n        if (c == NULL_CHAR) {\n            c = nextChar();\n        }\n        while (!EOF_FLAG && (c < '0' || c > '9')) {\n            if (c == '-') {\n                negative = true;\n            }\n            c = nextChar();\n        }\n        if (EOF_FLAG) {\n            throw new EndOfFileException();\n        }\n        long res = 0;\n        while (c >= '0' && c <= '9') {\n            res = (res << 3) + (res << 1) + c - '0';\n            c = nextChar();\n        }\n        return negative ? -res : res;\n    }\n    public String next() {\n        if (EOF_FLAG) {\n            throw new EndOfFileException();\n        }\n        if (c == NULL_CHAR) {\n            c = nextChar();\n        }\n        while (!EOF_FLAG && Character.isWhitespace(c)) {\n            c = nextChar();\n        }\n        str.setLength(0);\n        while (!EOF_FLAG && !Character.isWhitespace(c)) {\n            str.append(c);\n            c = nextChar();\n        }\n        return str.toString();\n    }\n    public char nextChar() {\n        if (EOF_FLAG) {\n            return NULL_CHAR;\n        }\n        while (bufferIdx == size) {\n            try {\n                size = in.read(buffer);\n                if (size == -1) {\n                    throw new Exception();\n                }\n            }\n            catch (Exception e) {\n                EOF_FLAG = true;\n                return (char) -1;\n            }\n            if (size == -1) {\n                size = BUFFER_SIZE;\n            }\n            bufferIdx = 0;\n        }\n        return (char) buffer[bufferIdx++];\n    }\n    public class EndOfFileException extends RuntimeException {}\n}\n\nclass IntArrayUtil {\n\n    public static String toString(int[] arr) {\n        return toString(arr, \" \");\n    }\n\n    public static String toString(int[] arr, String delimiter) {\n        StringBuilder res = new StringBuilder();\n        for (int i: arr) {\n            res.append(i);\n            res.append(delimiter);\n        }\n        res.setLength(res.length() - delimiter.length());\n        return res.toString();\n    }\n\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ans[10000];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int j = 0; j < n; j++) {\n    string s;\n    cin >> s;\n    for (int i = 0; i < m; i++)\n      if (s[i] == 'U' && j % 2 == 0)\n        ans[i]++;\n      else if (s[i] == 'R' && i + j < m)\n        ans[i + j]++;\n      else if (s[i] == 'L' && i - j >= 0)\n        ans[i - j]++;\n  }\n  for (int i = 0; i < m; i++) cout << ans[i] << ' ';\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar arr[2005][2005];\nchar c;\nint answ[2005];\nint main(void) {\n  cin >> n >> m >> k;\n  for (int i = (0); i < (n); ++i) {\n    scanf(\"%c\", &c);\n    for (int j = (0); j < (m); ++j) {\n      scanf(\"%c\", arr[i] + j);\n    }\n  }\n  for (int i = (1); i < (n); ++i) {\n    for (int j = (0); j < (m); ++j) {\n      if (2 * i < n && arr[2 * i][j] == 'U') ++answ[j];\n      if (i + j < m && arr[i][j + i] == 'L') ++answ[j];\n      if (j - i >= 0 && arr[i][j - i] == 'R') ++answ[j];\n    }\n  }\n  for (int i = (0); i < (m); ++i) printf(\"%d \", answ[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\n\nimport java.util.*;\nimport javafx.util.Pair;\n\npublic class Main\n{   \n   \n    \n    public static void main(String args[])\n    {\n        FastScanner input = new FastScanner();\n        int n = input.nextInt();\n        int m = input.nextInt();\n        int k = input.nextInt();\n        int ans[] = new int[m];\n        char a[][] = new char[n][m];\n        for (int i = 0; i < n; i++) {\n           a[i] = input.next().toCharArray();\n        }\n        for (int i = 0; i <n; i++) {\n            for (int j = 0; j < m; j++) {\n                if(a[i][j]=='U')\n                {\n                    if(i%2==0)\n                        ans[j]++;\n                }\n                else if(a[i][j]=='L')\n                {\n                    if(j-i>=0)\n                    {\n                        ans[j-i]++;\n                    }\n                }\n                else if(a[i][j]=='R')\n                {\n                    if(j+i<m)\n                    {\n                        ans[j+i]++;\n                    }\n                }\n                \n            }\n        }\n        for (int an : ans) {\n            System.out.print(an+\" \");\n        }\n        System.out.println(\"\");\n    }\n\n    \n\n    static class FastScanner\n    {\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next()\n        {\n            while (!st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() throws IOException\n        {\n            return br.readLine();\n        }\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 0, -1, 1};\nint dy[] = {-1, 1, 0, 0};\nchar a[2005][2005];\nint ans[2005];\nint b[2005 * 2005][3];\nint n, m, k;\nint main() {\n  int i, j, t;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 0; i < n; ++i) {\n    scanf(\"%s\", a[i]);\n    for (j = 0; j < m; ++j) {\n      t = -1;\n      if (a[i][j] == 'R')\n        t = j + i;\n      else if (a[i][j] == 'L')\n        t = j - i;\n      else if (a[i][j] == 'U') {\n        if (i % 2 == 0)\n          t = j;\n        else\n          t = -1;\n      }\n      if (t >= 0 && t < m) ++ans[t];\n    }\n  }\n  for (j = 0; j < m; ++j) printf(\"%d \", ans[j]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing l2 = long long;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(NULL);\n  int n, m, k;\n  cin >> n >> m >> k;\n  char s[n][m];\n  vector<int> ans(m, 0);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      cin >> s[i][j];\n      if (s[i][j] == 'L') {\n        if (j >= i) {\n          ans[j - i]++;\n        }\n      } else if (s[i][j] == 'R') {\n        if (i + j < m) {\n          ans[i + j]++;\n        }\n      } else if (s[i][j] == 'U') {\n        if (((i) & (1)) == 0) {\n          ans[j]++;\n        }\n      }\n    }\n  }\n  for (auto i : ans) cout << i << ' ';\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\ninline bool gmin(T &a, T b) {\n  if (a > b) return a = b, true;\n  return false;\n}\ntemplate <class T>\ninline bool gmax(T &a, T b) {\n  if (a < b) return a = b, true;\n  return false;\n}\ntemplate <class T>\nT exgcd(T a, T b, T &first, T &second) {\n  if (!b)\n    return first = (T)1, second = (T)0, a;\n  else {\n    T d = exgcd(b, a % b, second, first);\n    return second -= a / b * first, d;\n  }\n}\nconst int INF = 0x3f3f3f3f;\nconst long long LINF = 0x3f3f3f3f3f3f3f3fll;\nconst double DINF = 1e10;\nconst double EPS = 1e-9;\nconst double PI = 3.14159265358979323846264338327950288;\nconst double TAU = 2.0 * PI;\ninline int sgn(const double &a) { return a > EPS ? 1 : (a < -EPS ? -1 : 0); }\ninline int lowbit(int i) { return i & (-i); }\nstruct Initializer {\n  Initializer() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n  }\n} initializer;\nconst int MAXN = 2005;\nint n, m, k;\nint ans[MAXN];\nchar s[MAXN][MAXN];\nint main() {\n  scanf(\"%d %d %d\", &m, &n, &k);\n  for (int i = 1; i <= m; i++) scanf(\"%s\", s[i] + 1);\n  for (int j = 1; j <= n; j++) {\n    for (int i = 2; i <= m; i++) {\n      if (2 * i - 1 <= m) ans[j] += (s[2 * i - 1][j] == 'U');\n      if (j - i + 1 >= 1) ans[j] += (s[i][j - i + 1] == 'R');\n      if (j + i - 1 <= n) ans[j] += (s[i][j + i - 1] == 'L');\n    }\n  }\n  printf(\"%d\", ans[1]);\n  for (int i = 2; i <= n; i++) printf(\" %d\", ans[i]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar field[2002][2002];\nint main() {\n  int m, n, k;\n  cin >> n >> m >> k;\n  int res[2002] = {0};\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) cin >> field[i][j];\n  for (int i = 1; i < n; i++)\n    for (int j = 0; j < m; j++) {\n      if ((2 * i <= n) && (field[i + i][j] == 'U')) res[j]++;\n      if ((j >= i) && (field[i][j - i] == 'R')) res[j]++;\n      if ((i + j <= m) && (field[i][j + i] == 'L')) res[j]++;\n    }\n  for (int i = 0; i < m; i++) cout << res[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 0, -1, 1};\nint dy[] = {-1, 1, 0, 0};\nint ans[2015];\nint n, m, k;\nchar s[2015][2015];\nint main() {\n  cin >> n >> m >> k;\n  char c[] = \"RLDU\";\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", &s[i]);\n  }\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) {\n      for (int k = 0; k < 4; k++)\n        if (0 < i + (i - 1) * dx[k] && i + (i - 1) * dx[k] <= n &&\n            0 < j + (i - 1) * dy[k] && j + (i - 1) * dy[k] <= m)\n          if (s[i + (i - 1) * dx[k] - 1][j + (i - 1) * dy[k] - 1] == c[k])\n            ans[j]++;\n    }\n  for (int i = 1; i <= m; i++) printf(\"%i \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.Writer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author ilyakor\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int _k = in.nextInt();\n        char[][] a = new char[n][];\n        for (int i = 0; i < n; ++i)\n            a[i] = in.nextToken().toCharArray();\n        int[] d = new int[m];\n        for (int i = 0; i < n; ++i)\n            for (int j = 0; j < m; ++j) {\n                if (a[i][j] == '.') continue;\n                if (a[i][j] == 'L') {\n                    int ny = j - i;\n                    if (ny >= 0) ++d[ny];\n                } else if (a[i][j] == 'R') {\n                    int ny = j + i;\n                    if (ny < m) ++d[ny];\n                } else if (a[i][j] == 'U') {\n                    if (i % 2 == 0) ++d[j];\n                }\n            }\n        for (int i = 0; i < m; ++i)\n            out.print(d[i] + \" \");\n        out.printLine();\n    }\n}\n\nclass InputReader {\n    private InputStream stream;\n    private byte[] buffer = new byte[10000];\n    private int cur;\n    private int count;\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n    public static boolean isSpace(int c) {\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public int read() {\n        if (count == -1) {\n            throw new InputMismatchException();\n        }\n        try {\n            if (cur >= count) {\n                cur = 0;\n                count = stream.read(buffer);\n                if (count <= 0)\n                    return -1;\n            }\n        } catch (IOException e) {\n            throw new InputMismatchException();\n        }\n        return buffer[cur++];\n    }\n\n    public int readSkipSpace() {\n        int c;\n        do {\n            c = read();\n        } while (isSpace(c));\n        return c;\n    }\n\n    public String nextToken() {\n        int c = readSkipSpace();\n        StringBuilder sb = new StringBuilder();\n        while (!isSpace(c)) {\n            sb.append((char) c);\n            c = read();\n        }\n        return sb.toString();\n    }\n\n    public int nextInt() {\n        int sgn = 1;\n        int c = readSkipSpace();\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int res = 0;\n        do {\n            if (c < '0' || c > '9') {\n                throw new InputMismatchException();\n            }\n            res = res * 10 + c - '0';\n            c = read();\n        } while (!isSpace(c));\n        res *= sgn;\n        return res;\n    }\n\n}\n\nclass OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n        this.writer = new PrintWriter(writer);\n    }\n\n    public void print(Object... objects) {\n        for (int i = 0; i < objects.length; i++) {\n            if (i != 0) {\n                writer.print(' ');\n            }\n            writer.print(objects[i]);\n        }\n    }\n\n    public void printLine(Object... objects) {\n        print(objects);\n        writer.println();\n    }\n\n    public void close() {\n        writer.close();\n    }\n\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct spLoc {\n  int c;\n  int r;\n  char type;\n};\nvector<int> soln;\nvector<spLoc> spiders;\nvoid getAns2(int n, int m, int k) {\n  for (int i = 0; i < spiders.size(); i++) {\n    if (spiders[i].type == 'U') {\n      if (spiders[i].r % 2 == 0) soln[spiders[i].c]++;\n    } else if (spiders[i].type == 'L') {\n      if ((spiders[i].c - spiders[i].r) >= 0)\n        soln[spiders[i].c - spiders[i].r]++;\n    } else if (spiders[i].type == 'R') {\n      if (spiders[i].c + spiders[i].r < m) soln[spiders[i].c + spiders[i].r]++;\n    }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", soln[i]);\n}\nint main() {\n  int n, m, k;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &m);\n  scanf(\"%d\", &k);\n  soln.resize(m, 0);\n  char ch;\n  string st;\n  for (int i = 0; i < n; i++) {\n    cin >> st;\n    for (int j = 0; j < m; j++) {\n      ch = st[j];\n      if (ch == 'U') {\n        spLoc s;\n        s.c = j;\n        s.r = i;\n        s.type = 'U';\n        spiders.push_back(s);\n      } else if (ch == 'R') {\n        spLoc s;\n        s.c = j;\n        s.r = i;\n        s.type = 'R';\n        spiders.push_back(s);\n      } else if (ch == 'L') {\n        spLoc s;\n        s.c = j;\n        s.r = i;\n        s.type = 'L';\n        spiders.push_back(s);\n      }\n    }\n  }\n  getAns2(n, m, k);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.*;\n\nimport static java.util.Collections.reverseOrder;\n\n/**\n * Created with IntelliJ IDEA.\n * User: AUtemuratov\n * Date: 07.04.14\n * Time: 15:43\n * To change this template use File | Settings | File Templates.\n */\npublic class Main {\n    static FastReader fr = new FastReader(new BufferedReader(new InputStreamReader(System.in)));\n    static PrintWriter pw = new PrintWriter(System.out);\n    static int n,m,k,ans,cnt,min = Integer.MAX_VALUE,max = Integer.MIN_VALUE;\n    \n    static boolean ok,w;\n    static char c[][] = new char[2222][2222];\n    \n    public static void main(String[] args) throws Exception {\n\n        n = fr.nextInt();\n        m = fr.nextInt();\n        k = fr.nextInt();\n\n        for (int i=0; i<n; i++) {\n            String s = fr.nextToken();\n            for (int j=0; j<m; j++) {\n                c[i][j+1] = s.charAt(j);\n            }\n        }\n        \n        for (int i=1; i<=m; i++) {\n            pw.print(makeOperation(i) + \" \"); \n        }\n        \n        \n        pw.close();\n    }\n\n    private static int makeOperation(int p) {\n        int t = 0;\n        for (int i=1; i<=n; i++) {\n            if (check(p+i,1)) {\n                if (c[i][p+i]=='L') {\n                    t++;\n                }\n            }\n            if (check(p-i,2)) {\n                if (c[i][p-i]=='R') {\n                    t++;\n                }\n            }\n            if (check(i+i,3)) {\n                if (c[i+i][p]=='U') {\n                    t++;\n                }\n            }\n        }\n        return t;\n    }\n\n    private static boolean check(int p,int t) {\n        if (t==1) {\n            if (p>m) return false;\n        } else if (t==2) {\n            if (p<1) return false;\n        } else {\n            if (p>n) return false;\n        }\n        return true;\n    }\n\n}\n\nclass Pair {\n    int l,r;\n    public Pair(int pos, int dif) {\n        this.l = pos;\n        this.r = dif;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        Pair pair = (Pair) o;\n\n        if (l != pair.l) return false;\n        if (r != pair.r) return false;\n\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        int result = l;\n        result = 31 * result + r;\n        return result;\n    }\n}\n\nclass FastReader {\n\n    BufferedReader bf;\n    StringTokenizer tk = null;\n    String DELIM = \" \";\n\n    public FastReader(BufferedReader bf) {\n        this.bf = bf;\n    }\n\n    public String nextToken() throws Exception {\n\n        if(tk==null || !tk.hasMoreTokens()) {\n            tk = new StringTokenizer(bf.readLine(),DELIM);\n        }\n        return tk.nextToken();\n    }\n\n    public int nextInt() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n\n    public int nextLong() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n\n    public int nextDouble() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint abs(int x) {\n  if (x < 0) return -x;\n  return x;\n}\nint addmod(int v1, int v2) {\n  int v3 = v1 + v2;\n  if (v3 >= 1000000007) v3 -= 1000000007;\n  return v3;\n}\nint val[10004];\nstring a[2001];\nint n, m, k;\nint main() {\n  scanf(\"%d\", &n), scanf(\"%d\", &m), scanf(\"%d\", &k);\n  for (int i = (0); i < (n); i++) {\n    cin >> a[i];\n  }\n  int t = 0;\n  for (int i = (0); i < (n); i++) {\n    t++;\n    for (int j = (0); j < (m); j++) {\n      if (t + i < n && a[t + i + 1][j] == 'U') val[j]++;\n      if (i + 1 < n && j + t < m && a[i + 1][j + t] == 'L') val[j]++;\n      if (i + 1 < n && j - t >= 0 && a[i + 1][j - t] == 'R') val[j]++;\n    }\n  }\n  for (int i = (0); i < (m); i++) {\n    cout << (val[i]), cout << (\" \");\n  }\n  cout << (endl);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct node {\n  int x, y, z;\n};\nnode a[5000000];\nint go[4][2] = {-1, 0, 1, 0, 0, -1, 0, 1}, ans[5000];\nint main() {\n  int n, m, k;\n  char ch;\n  int num = 1;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      scanf(\" %c\", &ch);\n      if (ch == 'R') {\n        a[num].x = j;\n        a[num].y = i;\n        a[num].z = 1;\n        num++;\n      }\n      if (ch == 'L') {\n        a[num].x = j;\n        a[num].y = i;\n        a[num].z = 0;\n        num++;\n      }\n      if (ch == 'U') {\n        a[num].x = j;\n        a[num].y = i;\n        a[num].z = 2;\n        num++;\n      }\n      if (ch == 'D') {\n        a[num].x = j;\n        a[num].y = i;\n        a[num].z = 3;\n        num++;\n      }\n    }\n  }\n  for (int j = 1; j <= k; j++) {\n    if (a[j].z == 2) {\n      if (a[j].y % 2) ans[a[j].x]++;\n    }\n    if (a[j].z == 0 || a[j].z == 1) {\n      int t = a[j].y - 1;\n      if (a[j].x + 1 * go[a[j].z][0] * t >= 1 &&\n          a[j].x + 1 * go[a[j].z][0] * t <= m)\n        ans[a[j].x + 1 * go[a[j].z][0] * t]++;\n    }\n  }\n  for (int i = 1; i <= m; i++) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\npublic class B {\n\tFastScanner in = new FastScanner(System.in);\n\tPrintWriter out = new PrintWriter(System.out);\n\n\tint[] vx = {-1, 1, 0};\n\tint[] vy = {0, 0, 1};\n\tchar[] spiderDir = {'R', 'L', 'U'};\n\t\n\tpublic void run() {\n\t\tint n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n\t\t\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmap[i] = in.next().toCharArray();\n\t\t}\n\t\t\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tint res = 0;\n\t\t\tfor (int i = 1; i < n; i++) {\n\t\t\t\tfor (int dir = 0; dir < 3; dir++) {\n\t\t\t\t\tint nx = j + vx[dir] * i, ny = i + vy[dir] * i;\n\t\t\t\t\tif (nx >= 0 && nx < m && ny >= 0 && ny < n && map[ny][nx] == spiderDir[dir]) {\n\t\t\t\t\t\tres++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.print(res + \" \");\n\t\t}\n\t\tout.println();\n\t\tout.close();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew B().run();\n\t}\n\n\tpublic void debug(Object... obj) {\n\t\tSystem.out.println(Arrays.deepToString(obj));\n\t}\n\n\tclass FastScanner {\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic FastScanner(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t\t//stream = new FileInputStream(new File(\"dec.in\"));\n\n\t\t}\n\n\t\tint read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\n\npublic class Spider {\n    \n    static StringTokenizer st;\n    static BufferedReader br;\n    static PrintWriter pw;\n    \n    public static void main(String args[]) throws Exception {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(\n            System.out)));\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        String [] rows = new String [n];\n        int sum=0,sum2=0,count=0,i,j,flag=0;\n        int[] res=new int[m+10];\n        \n        for (i=0;i<n;i++) {\n            rows[i]=next();\n        }\n        for (j=0;j<m;j++) {\n            for (i=0;i<n;i++) {\n                    if (j-i>=0) {\n                        if (rows[i].charAt(j-i)=='R') {\n                            res[j]+=1;\n                        }\n                    }\n                    if (j+i<m) {\n                        if (rows[i].charAt(j+i)=='L') {\n                            res[j]+=1;\n                        }\n                    }\n                    \n                    if (i!=0) {\n                        if (2*i<n)\n                        if (rows[2*i].charAt(j)=='U') {\n                            res[j]+=1;\n                        }\n                    }       \n                \n            }   \n        }\n                \n                \n         \n                \n        for (j=0;j<m;j++)\n            pw.print(res[j]+\" \");\n        \n        pw.close();\n        \n    }\n    \n    private static int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n/*  private static long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }*/\n\n/*  private static double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n*/\n    private static String next() throws IOException {\n        while (st == null || !st.hasMoreTokens())\n            st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nint a[2100];\nstring s;\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i) {\n    cin >> s;\n    for (int j = 0; j < m; ++j) {\n      if (s[j] == 'U') {\n        if (i % 2 == 0) {\n          ++a[j];\n        }\n      }\n      if (s[j] == 'L') {\n        if (j >= i) {\n          ++a[j - i];\n        }\n      }\n      if (s[j] == 'R') {\n        if (j + i < m) {\n          ++a[i + j];\n        }\n      }\n    }\n  }\n  for (int i = 0; i < m; ++i) {\n    cout << a[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, m, k, *out;\nvoid add(int index) {\n  if (index < m && index >= 0) out[index]++;\n}\nint main() {\n  char c;\n  scanf(\"%d %d %d\", &n, &m, &k);\n  out = new int[m];\n  for (int i = 0; i < m; i++) out[i] = 0;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) {\n      scanf(\" %c\", &c);\n      switch (c) {\n        case 'R':\n          add(j + i);\n          break;\n        case 'L':\n          add(j - i);\n          break;\n        case 'U':\n          if (i % 2 == 0) add(j);\n      }\n    }\n  for (int i = 0; i < m; i++) printf(\"%d \", out[i]);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n = 0, m = 0, k;\nvector<string> a;\nint CountSpiders(int j) {\n  int sum = 0;\n  int jR = j, jL = j;\n  for (int i = 1; i < n; ++i) {\n    if (!(i % 2) && a[i][j] == 'U') ++sum;\n    if (jR > 0) {\n      --jR;\n      if (a[i][jR] == 'R') ++sum;\n    }\n    if (jL < m - 1) {\n      ++jL;\n      if (a[i][jL] == 'L') ++sum;\n    }\n  }\n  return sum;\n}\nint main() {\n  cin >> n >> m >> k;\n  cin.ignore(100, '\\n');\n  a.resize(n);\n  for (int i = 0; i < n; ++i) getline(cin, a[i]);\n  for (int j = 0; j < m; ++j) {\n    cout << CountSpiders(j) << \" \";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, res[(1 << 11)];\nchar s[(1 << 11)][(1 << 11)];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) scanf(\"%s\", s[i]);\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) {\n      if (s[i][j] == 'L' && j - i >= 0) res[j - i]++;\n      if (s[i][j] == 'R' && j + i < m) res[j + i]++;\n      if (s[i][j] == 'U' && i % 2 == 0) res[j]++;\n    }\n  for (int i = 0; i < m - 1; i++) printf(\"%d \", res[i]);\n  printf(\"%d\\n\", res[m - 1]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.math.BigDecimal;\nimport java.io.BufferedWriter;\nimport java.util.Locale;\nimport java.util.InputMismatchException;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Jacob Jiang\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        in.skipNext();\n        char[][] park = in.next2DCharArray(n, m);\n        int[] result = new int[m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                work(park[i][j], i, j, n, m, result);\n            }\n        }\n        out.printLine(result);\n    }\n\n    private void work(char c, int i, int j, int n, int m, int[] result) {\n        if (c == 'D' || c == '.') {\n            return;\n        }\n        if (c == 'U') {\n            if (i % 2 == 0) result[j]++;\n            return;\n        }\n        int dir = c == 'R' ? 1 : -1;\n        j += dir * i;\n        if (j < 0 || j >= m)\n            return;\n        result[j]++;\n    }\n}\n\nclass InputReader {\n\n    private InputStream stream;\n    private byte[] buf = new byte[1 << 16];\n    private int curChar;\n    private int numChars;\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n    public int read() {\n        if (numChars == -1)\n            throw new InputMismatchException();\n        if (curChar >= numChars) {\n            curChar = 0;\n            try {\n                numChars = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (numChars <= 0)\n                return -1;\n        }\n        return buf[curChar++];\n    }\n\n    public int nextInt() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int res = 0;\n        do {\n            if (c < '0' || c > '9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c & 15;\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public void skipNext() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        do {\n            c = read();\n        } while (!isSpaceChar(c));\n    }\n\n    public static boolean isSpaceChar(int c) {\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public char nextChar() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        return (char) c;\n    }\n\n    public char[] nextCharArray(int count) {\n        char[] result = new char[count];\n        for (int i = 0; i < count; i++) {\n            result[i] = nextChar();\n        }\n        return result;\n    }\n\n    public char[][] next2DCharArray(int n, int m) {\n        char[][] result = new char[n][];\n        for (int i = 0; i < n; i++) {\n            result[i] = nextCharArray(m);\n        }\n        return result;\n    }\n\n}\n\nclass OutputWriter {\n    private PrintWriter writer;\n\n    public OutputWriter(OutputStream stream) {\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(stream)));\n    }\n\n    public void print(int i) {\n        writer.print(i);\n    }\n\n    public void println() {\n        writer.println();\n    }\n\n    public void print(char c) {\n        writer.print(c);\n    }\n\n    public void close() {\n        writer.close();\n    }\n\n    public void printItems(int[] items) {\n        for (int i = 0; i < items.length; i++) {\n            if (i != 0) {\n                print(' ');\n            }\n            print(items[i]);\n        }\n    }\n\n    public void printLine(int[] items) {\n        printItems(items);\n        println();\n    }\n\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar field[2002][2002];\nint comeaross[2002];\nint main() {\n  int row, col, spider;\n  cin >> row >> col >> spider;\n  while (getchar() != '\\n') continue;\n  for (int i = 0; i < row; ++i) gets(field[i]);\n  memset(comeaross, 0, sizeof(comeaross));\n  for (int i = 0; i < row; ++i) {\n    for (int j = 0; j < col; ++j) {\n      switch (field[i][j]) {\n        case 'U':\n          if (i % 2 == 0) comeaross[j] += 1;\n          break;\n        case 'L':\n          if (j - i < col && j - i >= 0) comeaross[j - i] += 1;\n          break;\n        case 'R':\n          if (j + i < col && j + i >= 0) comeaross[j + i] += 1;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  for (int i = 0; i < col; ++i) {\n    if (i < col - 1)\n      printf(\"%d \", comeaross[i]);\n    else\n      printf(\"%d\\n\", comeaross[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ndouble EPS = 1e-9;\nint INF = 2000000000;\nlong long INFF = 8000000000000000000LL;\ndouble PI = acos(-1);\nint dirx[8] = {-1, 0, 0, 1, -1, -1, 1, 1};\nint diry[8] = {0, 1, -1, 0, -1, 1, -1, 1};\ninline string IntToString(int a) {\n  char x[100];\n  sprintf(x, \"%d\", a);\n  string s = x;\n  return s;\n}\ninline int StringToInt(string a) {\n  char x[100];\n  int res;\n  strcpy(x, a.c_str());\n  sscanf(x, \"%d\", &res);\n  return res;\n}\ninline string GetString(void) {\n  char x[1000005];\n  scanf(\"%s\", x);\n  string s = x;\n  return s;\n}\ninline string uppercase(string s) {\n  int n = (int)s.size();\n  for (int(i) = (0); (i) < (n); ++(i))\n    if (s[i] >= 'a' && s[i] <= 'z') s[i] = s[i] - 'a' + 'A';\n  return s;\n}\ninline string lowercase(string s) {\n  int n = (int)s.size();\n  for (int(i) = (0); (i) < (n); ++(i))\n    if (s[i] >= 'A' && s[i] <= 'Z') s[i] = s[i] - 'A' + 'a';\n  return s;\n}\ninline void OPEN(string s) {\n  freopen((s + \".in\").c_str(), \"r\", stdin);\n  freopen((s + \".out\").c_str(), \"w\", stdout);\n}\nint r, c, k;\nvector<pair<pair<int, int>, int> > kuman;\nstring s;\nchar pos[256];\nint risan[2005];\nbool valid(int x) { return (1 <= x && x <= c); }\nint main() {\n  pos['U'] = 0;\n  pos['R'] = 1;\n  pos['L'] = 2;\n  pos['D'] = 3;\n  scanf(\"%d %d %d\", &r, &c, &k);\n  for (int(i) = (1); (i) <= (r); ++(i)) {\n    s = GetString();\n    for (int(j) = (1); (j) <= (c); ++(j))\n      if (s[j - 1] != '.') {\n        if (s[j - 1] == 'R') {\n          if (valid(j + i - 1)) ++risan[j + i - 1];\n        } else if (s[j - 1] == 'L') {\n          if (valid(j - i + 1)) ++risan[j - i + 1];\n        } else if (s[j - 1] == 'U') {\n          if (i % 2 == 1) ++risan[j];\n        }\n      }\n  }\n  for (int(i) = (1); (i) <= (c); ++(i)) printf(\"%d \", risan[i]);\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n =in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        String field [] = new String[n];\n        for(int i = 0;i<n;i++) {\n           field[i] = in.nextToken();\n        }\n        int count[] = new int[m];\n        for(int j = 0;j<m;j++) {\n            // count up\n            for(int i=1;i<n;i++) {\n                 if(field[i].charAt(j) == 'U' && i%2 ==0)\n                     ++count[j];\n            }\n\n            // count left and right\n            for(int dist = 1;dist<n;dist++) {\n              int curX  = dist;\n              int curY = j-dist;\n              if(curY>=0 && curY<m && field[curX].charAt(curY) == 'R')\n                  ++count[j];\n                curY = j+dist;\n\n                if(curY>=0 && curY<m && field[curX].charAt(curY) == 'L')\n                    ++count[j];\n\n            }\n\n        }\n\n        for(int i=0;i<m;i++) {\n            if(i!=0)\n                out.print(\" \");\n            out.print(count[i]);\n        }\n    }\n}\n\nclass InputReader {\n\n    private InputStream stream;\n    int curCharIndex = 0;\n    int charsInBuf = 0;\n     byte buf[] = new byte[16*1024];\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n\n    public int readChar() {\n\n        if (curCharIndex >= charsInBuf) {\n            curCharIndex = 0;\n            try {\n                charsInBuf = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (charsInBuf <= 0)\n                return -1;\n        }\n        return buf[curCharIndex++];\n    }\n\n\n    public int nextInt() {\n\n        int c;\n        do {\n            c = readChar();\n        }while(isWhitespace(c));\n\n        int sign = 1;\n        if (c == '-') {\n            c = readChar();\n            sign = -1;\n\n        }\n        int res = 0;\n        do {\n            res *= 10;\n            res += c - '0';\n            c = readChar();\n        } while (!isWhitespace(c) && c!=-1);\n        return sign * res;\n    }\n\n\n    public String nextToken() {\n        int c;\n        do {\n            c = readChar();\n        }while(isWhitespace(c));\n\n        StringBuilder res = new StringBuilder();\n        do {\n            res.appendCodePoint(c);\n            c = readChar();\n        } while (!isWhitespace(c) && c!=-1);\n        return res.toString();\n    }\n\n    /*\n    * For the purpose of compatibilty with Chelper Chrome extension\n     */\n\n\n    private boolean isWhitespace(int c) {\n        return  c==' ' || c=='\\n'|| c=='\\r' || c=='\\t';\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2005;\nint N, M, K;\nint grid[MAXN][MAXN] = {};\nint main(void) {\n  scanf(\"%d%d%d\", &N, &M, &K);\n  for (int i = (0); i < (N); ++i)\n    for (int j = (0); j < (M); ++j) {\n      char c;\n      scanf(\" %c\", &c);\n      if (c == '.') continue;\n      if (c == 'L') {\n        if (j >= i) ++grid[i][j - i];\n      }\n      if (c == 'R' && i + j < M) ++grid[i][j + i];\n      if (c == 'U' && i % 2 == 0) ++grid[i / 2][j];\n    }\n  for (int j = (0); j < (M); ++j) {\n    int sum = 0;\n    for (int i = (0); i < (N); ++i) sum += grid[i][j];\n    printf(\"%d%c\", sum, \" \\n\"[j == M - 1]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  char a[2001][2001];\n  int n, m, k, i, j;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", &a[i]);\n  }\n  for (i = 0; i < m; i++) {\n    int ans = 0;\n    for (j = 2; j < n; j = j + 2)\n      if (a[j][i] == 'U') ans += 1;\n    for (j = 1; j < n; j++) {\n      if (i - j >= 0) {\n        if (a[j][i - j] == 'R') ans += 1;\n      } else\n        break;\n    }\n    for (j = 1; j < n; j++) {\n      if (i + j < m) {\n        if (a[j][i + j] == 'L') ans++;\n      } else\n        break;\n    }\n    printf(\"%d \", ans);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid read(int &x) {\n  char ch = getchar();\n  int f = 1;\n  while ((ch != '-') && (ch < '0' || ch > '9')) ch = getchar();\n  if (ch == '-')\n    f = -1, x = 0;\n  else\n    x = ch - 48;\n  ch = getchar();\n  while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();\n  x *= f;\n}\nvoid read(long long &x) {\n  char ch = getchar();\n  int f = 1;\n  while ((ch != '-') && (ch < '0' || ch > '9')) ch = getchar();\n  if (ch == '-')\n    f = -1, x = 0;\n  else\n    x = ch - 48;\n  ch = getchar();\n  while (ch >= '0' && ch <= '9') x = x * 10LL + ch - 48, ch = getchar();\n  x *= f;\n}\nvoid _print(const int &x) {\n  if (x < 10)\n    putchar(48 + x);\n  else\n    _print(x / 10), _print(x % 10);\n}\nvoid _print(const long long &x) {\n  if (x < 10)\n    putchar(48 + x);\n  else\n    _print(x / 10), _print(x % 10);\n}\nvoid print(const int &x) {\n  if (x < 0)\n    putchar('-'), _print(-x);\n  else\n    _print(x);\n}\nvoid print(const long long &x) {\n  if (x < 0)\n    putchar('-'), _print(-x);\n  else\n    _print(x);\n}\nvoid println(const int &x) {\n  print(x);\n  putchar('\\n');\n}\nvoid println(const long long &x) {\n  print(x);\n  putchar('\\n');\n}\nchar str[2005];\nint an[2005] = {0};\nint n, m, k;\nint main() {\n  read(n);\n  read(m);\n  read(k);\n  for (int i = (1); i <= (n); i++) {\n    scanf(\"%s\", str + 1);\n    for (int j = (1); j <= (m); j++) {\n      if (str[j] == 'R')\n        if (1 <= j + i - 1 && j + i - 1 <= m) an[j + i - 1]++;\n      if (str[j] == 'U')\n        if (i & 1) an[j]++;\n      if (str[j] == 'L')\n        if (j - i + 1 >= 1 && j - i + 1 <= m) an[j + 1 - i]++;\n    }\n  }\n  for (int i = (1); i <= (m); i++) printf(\"%d \", an[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i;\n  int j;\n  int k;\n  int n;\n  int m;\n  int z;\n  cin >> n >> m >> z;\n  char a[n][m];\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      cin >> a[i][j];\n    }\n  }\n  for (i = 0; i < m; i++) {\n    k = 0;\n    for (j = 0; j < n; j++) {\n      if ((2 * j < n) && a[2 * j][i] == 'U') {\n        k++;\n      }\n      if (a[0][i] == 'D') {\n        k++;\n      }\n      if ((i + j < m) && a[j][i + j] == 'L') {\n        k++;\n      }\n      if ((i - j >= 0) && a[j][i - j] == 'R') {\n        k++;\n      }\n    }\n    cout << k << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\n/**\n * Created by Vadim\n */\npublic class B1 {\n\n    static int n;\n    static int m;\n\n    public static void main(String[] args) throws IOException {\n\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(reader.readLine());\n        n = Integer.parseInt(st.nextToken());\n        m = Integer.parseInt(st.nextToken());\n        int k = Integer.parseInt(st.nextToken());\n\n        char[][] a= new char[n][m];\n        for (int i = 0; i < n; i++) {\n            String s = reader.readLine();\n            for (int j = 0; j < m; j++) {\n                a[i][j] = s.charAt(j);\n            }\n        }\n        int [] occ = new int[m];\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if(j-i>=0 && a[i][j-i] == 'R') {\n                    occ[j]++;\n                }\n                if(j+i < m && a[i][j+i] == 'L') {\n                    occ[j]++;\n                }\n                if(i+i <n && a[i+i][j] == 'U') {\n                    occ[j]++;\n                }\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            System.out.print(occ[i] + \" \");\n        }\n        System.out.println();\n\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.Locale;\nimport java.util.StringTokenizer;\n\n\n/**\n * User: Igor Kirov\n * Date: 13.06.2014\n */\npublic class B implements Runnable {\n    private void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        int[] res = new int[m];\n        for (int i = 0; i < n; i++) {\n            String s = nextToken();\n            int j = -1;\n            for (char c : s.toCharArray()) {\n                j++;\n\n                if (c == '.') {\n                    continue;\n                }\n\n                if (c == 'L') {\n                    if (j < i) {\n                        continue;\n                    }\n                    res[j - i]++;\n                } else if (c == 'R') {\n                    if (j + i >= m) {\n                        continue;\n                    }\n                    res[i + j]++;\n                } else if (c == 'U') {\n                    if (i % 2 == 0) {\n                        res[j]++;\n                    }\n                } else if (c == 'D') {\n                    continue;\n                }\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            writer.print(res[i] + \" \");\n        }\n        writer.println();\n    }\n\n    public static void main(String[] args) {\n        new Thread(null, new B(), \"\", 64 * 1024 * 1024).start();\n    }\n\n    StringTokenizer tokenizer;\n    BufferedReader reader;\n    PrintWriter writer;\n\n    public void run() {\n        try {\n            try {\n                Locale.setDefault(Locale.US);\n            } catch (Exception ignored) {\n            }\n\n            boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\n            reader = new BufferedReader(oj ? new InputStreamReader(System.in) : new FileReader(\"B.in\"));\n            writer = new PrintWriter(oj ? new OutputStreamWriter(System.out) : new FileWriter(\"B.out\"));\n\n            tokenizer = null;\n\n            solve();\n\n            reader.close();\n            writer.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    private int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    private long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    private BigInteger nextBigInteger() throws IOException {\n        return new BigInteger(nextToken());\n    }\n\n    private double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    private String nextToken() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nconst long long INF = 1000000000;\nchar a[2000][2000];\nsigned main() {\n  long long n, m, k;\n  cin >> n >> m >> k;\n  for (long long i = 0; i < n; i++) {\n    for (long long j = 0; j < m; j++) {\n      cin >> a[i][j];\n    }\n  }\n  for (long long j = 0; j < m; j++) {\n    long long ans = 0;\n    for (long long i = 0; i < n; i++) {\n      if (j - i >= 0 && a[i][j - i] == 'R') ans++;\n      if (j + i < m && a[i][j + i] == 'L') ans++;\n      if (i + i < n && a[i + i][j] == 'U') ans++;\n    }\n    cout << ans << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nchar a[4020][2010];\nlong b[2010];\nint main() {\n  int i, j, t, n, m;\n  long k;\n  while (scanf(\"%d%d%ld\", &n, &m, &k) != EOF) {\n    memset(b, 0, sizeof(b));\n    for (i = 0; i < n; i++) scanf(\"%s\", a[i]);\n    for (t = 0; t < n; t++) {\n      for (j = 0; j < m; j++) {\n        if (a[t + t][j] == 'U' && t + t <= n - 1) b[j]++;\n        if (a[t][j + t] == 'L' && j + t <= m - 1) b[j]++;\n        if (a[t][j - t] == 'R' && j - t >= 0) b[j]++;\n      }\n    }\n    printf(\"%ld\", b[0]);\n    for (j = 1; j < m; j++) printf(\"% ld\", b[j]);\n    printf(\"\\n\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  if (n > 1 && n <= 2000 && m > 1 && m <= 2000 && k >= 0 && k <= m * (n - 1)) {\n    char *park = new char[n * m];\n    int *ans = new int[m];\n    for (int i = 0; i < m; i++) {\n      ans[i] = 0;\n    }\n    for (int r = 0; r < n; r++) {\n      for (int c = 0; c < m; c++) {\n        cin >> park[r * m + c];\n        if (park[r * m + c] == 'U' && r % 2 == 0)\n          ans[c]++;\n        else if (park[r * m + c] == 'R') {\n          if ((r + c) < m) ans[r + c]++;\n        } else if (park[r * m + c] == 'L')\n          if ((c - r) >= 0) ans[c - r]++;\n      }\n    }\n    for (int i = 0; i < m; i++) {\n      cout << ans[i] << \" \";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport java.text.*;\n\n\npublic class Main {\n\t\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t//BufferedReader cin = new BufferedReader(new FileReader(\"te.txt\"));\n\t\t BufferedReader cin = new BufferedReader(new InputStreamReader(System.in));\n\t\n\t\t\n\t\tString line;\n\t\tStringTokenizer st;\n\t\t\n\t\tline = cin.readLine();\n\t\tst = new StringTokenizer(line);\n\t\t\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint k = Integer.parseInt(st.nextToken());\n\t\t\n\t\tint[][] see = new int[n][m];\n\t\tfor(int[]row:see) Arrays.fill(row,0);\n\t\t\n\t\t\n\t\t//st = new StringTokenizer(line);\n\t    char t;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tline = cin.readLine();\n\t\t\tfor(int j=0;j<m;j++){\n\t\t\t\tt=line.charAt(j);\n\t\t\t\tif(t=='U'&&i%2==0) see[i/2][j]++;\n\t\t\t\t//if(t=='D') see\n\t\t\t\tif(t=='L'&&(j-i)>=0) see[i][j-i]++;\n\t\t\t\tif(t=='R'&&(j+i)<m) see[i][j+i]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int j=0;j<m;j++){\n\t\t\tint sum=0;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tsum+=see[i][j];\n\t\t\t}\n\t\t\tif(j!=0)sb.append(' ');\n\t\t\tsb.append(sum);\n\t\t}\n\t\n\t\tSystem.out.println(sb);\n\n\n\t\tcin.close();\n\t}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2005;\nchar mpt[2005][2005];\nint dp[maxn][maxn];\nint col[maxn];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 1; i <= n; i++) scanf(\"%s\", mpt[i] + 1);\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      if (mpt[i][j] == 'L') {\n        int w = i - 1;\n        if (j - w >= 1) dp[i][j - w] += 1;\n      } else if (mpt[i][j] == 'R') {\n        int w = i - 1;\n        if (j + w <= m) dp[i][j + w] += 1;\n      } else if (mpt[i][j] == 'U' && i % 2 == 1) {\n        col[j] += 1;\n      } else if (mpt[i][j] == 'D') {\n        continue;\n      }\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      col[j] += dp[i][j];\n    }\n  }\n  for (int i = 1; i <= m; i++) printf(\"%d \", col[i]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n    BufferedReader br;\n    StringTokenizer in;\n    PrintWriter out;\n\n    public String nextToken() throws IOException {\n        while (in == null || !in.hasMoreTokens()) {\n            in = new StringTokenizer(br.readLine());\n        }\n        return in.nextToken();\n    }\n\n    public int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    public double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    public long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    public static void main(String[] args) throws IOException {\n        new B().run();\n    }\n\n    public void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        int[] d = new int[m];\n\n        for (int i = 0; i < n; i++) {\n            String s = nextToken();\n            for (int j = 0; j < m; j++) {\n                if (s.charAt(j) == 'U') {\n                    if (i % 2 == 0) {\n                        d[j]++;\n                    }\n                }\n                if (s.charAt(j) == 'L') {\n                    if (j - i >= 0) {\n                        d[j - i]++;\n                    }\n                }\n                if (s.charAt(j) == 'R') {\n                    if (i + j < m) {\n                        d[i + j]++;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            out.print(d[i] + \" \");\n        }\n    }\n\n    public void run() {\n        try {\n            br = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n\n            solve();\n\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int R = 1, L = 3, U = 0, D = 2;\nint row[2000];\nvector<pair<pair<int, int>, int> > spider;\nint n, m, k;\nint main() {\n  cin >> n >> m >> k;\n  for (int(i) = 0; (i) < (n); (i)++) {\n    string foo = \"\";\n    cin >> foo;\n    for (int(j) = 0; (j) < (m); (j)++) {\n      if (foo[j] == '.' || foo[j] == 'D') continue;\n      if (foo[j] == 'R')\n        spider.push_back(pair<pair<int, int>, int>(pair<int, int>(i, j), R));\n      else if (foo[j] == 'L')\n        spider.push_back(pair<pair<int, int>, int>(pair<int, int>(i, j), L));\n      else\n        spider.push_back(pair<pair<int, int>, int>(pair<int, int>(i, j), U));\n    }\n  }\n  for (int(i) = 0; (i) < (spider.size()); (i)++) {\n    if (spider[i].second == R) {\n      if (spider[i].first.first + spider[i].first.second < m)\n        row[spider[i].first.first + spider[i].first.second]++;\n    } else if (spider[i].second == U) {\n      if (spider[i].first.first % 2 == 0) row[spider[i].first.second]++;\n    } else {\n      if (spider[i].first.second - spider[i].first.first >= 0)\n        row[spider[i].first.second - spider[i].first.first]++;\n    }\n  }\n  for (int(i) = 0; (i) < (m); (i)++) cout << row[i] << ' ';\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nstring dir = \"LRUD\";\nint n, m, k;\nint in(int x, int y) {\n  if (x >= n || y >= m) return 0;\n  if (x < 0 || y < 0) return 0;\n  return 1;\n}\nchar s[2005][2005];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", s[i]);\n  }\n  for (int i = 0; i < m; i++) {\n    int c = 0;\n    int t = 1;\n    if (s[0][i] != '.') c++;\n    for (int j = 1; j < n; j++) {\n      for (int d = 0; d < 4; d++) {\n        int tx = j + dx[d] * j;\n        int ty = i + dy[d] * j;\n        if (!in(tx, ty)) continue;\n        if (dir[d] != s[tx][ty]) {\n          continue;\n        }\n        c++;\n      }\n      t++;\n    }\n    cout << c << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nclass Spider {\n public:\n  int y;\n  int x;\n  char dir;\n};\nint main(int argv, char** argc) {\n  int n, m, k;\n  cin >> n >> m >> k;\n  Spider spiders[k];\n  int seens[m];\n  memset(seens, 0, sizeof(int) * m);\n  int spideri = 0;\n  for (int i = 0; i < n; i++) {\n    string stat;\n    cin >> stat;\n    for (int i2 = 0; i2 < m; i2++) {\n      if (stat[i2] != '.') {\n        spiders[spideri].y = i;\n        spiders[spideri].x = i2;\n        spiders[spideri].dir = stat[i2];\n        spideri++;\n      }\n    }\n  }\n  for (int i = 0; i < k; i++) {\n    Spider s = spiders[i];\n    if (s.dir == 'R') {\n      int pos = s.x + s.y;\n      if (pos >= 0 && pos < m) {\n        seens[pos] += 1;\n      }\n    }\n    if (s.dir == 'L') {\n      int pos = s.x - s.y;\n      if (pos >= 0 && pos < m) {\n        seens[pos] += 1;\n      }\n    }\n    if (s.dir == 'U') {\n      if (s.y % 2 == 0) {\n        seens[s.x] += 1;\n      }\n    }\n    if (s.dir == 'D') {\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    cout << seens[i] << \" \";\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar tmp[2001];\nstring a[2001];\nint ans[2001];\nvoid init() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 1; i <= n; i++) scanf(\"%s\", &tmp), a[i] = tmp;\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j < m; j++) {\n      if (j - i + 1 >= 0 && a[i][j - i + 1] == 'R') ans[j]++;\n      if (j + i - 1 < m && a[i][j + i - 1] == 'L') ans[j]++;\n      if (i + i - 1 <= n && a[i + i - 1][j] == 'U') ans[j]++;\n    }\n  for (int i = 0; i < m; i++) cout << ans[i] << \" \";\n}\nint main() {\n  init();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3000 + 5;\nint res[maxn];\nchar ch[maxn][maxn];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", ch[i]);\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) {\n      if (ch[i][j] == 'U') {\n        if (i % 2 == 0) res[j]++;\n      } else if (ch[i][j] == 'L') {\n        if (j - i >= 0) res[j - i]++;\n      } else if (ch[i][j] == 'R') {\n        if (j + i < m) res[j + i]++;\n      }\n    }\n  for (int i = 0; i < m; i++) {\n    printf(\"%d\", res[i]);\n    if (i != m - 1)\n      printf(\" \");\n    else\n      printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k, u;\n  int t[2005] = {0};\n  char c;\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      cin >> c;\n      if (c == 'R') {\n        u = i - 1 + j;\n        if (u <= m && u > 0) t[u]++;\n      } else if (c == 'L') {\n        u = j - i + 1;\n        if (u <= m && u > 0) t[u]++;\n      } else if (c == 'U') {\n        if (i % 2 != 0) t[j]++;\n      }\n    }\n  }\n  for (int i = 1; i <= m; i++) cout << t[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nifstream fin(\"in.in\");\nofstream fout(\"out.out\");\nconst int N = 2000 + 10;\nint n, second, k, res[N];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n >> second >> k;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < second; j++) {\n      char cell;\n      cin >> cell;\n      if (cell == 'U')\n        res[j] += !(i & 1);\n      else if (cell == 'R')\n        res[(j + i < second ? j + i : second)]++;\n      else if (cell == 'L')\n        res[(j - i >= 0 ? j - i : second)]++;\n    }\n  for (int i = 0; i < second; i++) cout << res[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2010;\nchar a[maxn][maxn];\nint w[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nchar ch[4] = {'L', 'R', 'U', 'D'};\nint main() {\n  ios::sync_with_stdio(false);\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) cin >> a[i][j];\n  for (int j = 0; j < m; j++) {\n    int cnt = 0;\n    for (int i = 1; i < n; i++)\n      for (int l = 0; l < 4; l++) {\n        int xx = i + w[l][0] * i, yy = j + w[l][1] * i;\n        if (xx < 0 || xx >= n || yy < 0 || yy >= m) continue;\n        if (a[xx][yy] == ch[l]) cnt++;\n      }\n    cout << cnt << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n *\n * @author Mukesh Singh\n *\n */\n\nimport java.io.*;\nimport java.util.*;\nimport java.text.DecimalFormat;\n@SuppressWarnings(\"unchecked\")\npublic class AB {\t\n\t//solve test cases\n\tvoid solve() throws Exception {\n\t\tint n = in.nextInt();\n\t\tint m = in.nextInt() ;\n\t\tint k = in.nextInt() ;\n\t\tString[] ar = new String[n] ;\n\t\tfor(int i = 0 ; i < n ; ++i)\n\t\t\tar[i] = in.nextToken();\n\t\tint[] res = new int[m]; \n\t\tfor(int j = 0 ; j < m ; ++j ){\n\t\t\tfor(int t = 0 ; t < n ; ++t ){\n\t\t\t\tif(2*t < n && ar[2*t].charAt(j) == 'U') ++res[j] ;\n\t\t\t\tif( j-t >= 0 && ar[t].charAt(j-t)=='R') ++res[j] ;\n\t\t\t\tif(j+t < m && ar[t].charAt(j+t) == 'L') ++res[j] ;\n\t\t\t}\n\t\t}\n\t\tfor(int a : res) System.out.print(a+\" \");\n\t\tSystem.out.println();\n\t}\n\t//@ main function\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew AB();\n\t}\n\t\n\tInputReader in;\n\tPrintStream out ;\n\tDecimalFormat df ;\n\tAB() {\n\t\ttry {\n\t\t\tFile defaultInput = new File(\"file.in\");\n\t\t\tif (defaultInput.exists()) \n\t\t\t\tin = new InputReader(\"file.in\");\n\t\t\telse \n\t\t\t\tin = new InputReader();\n\t\t\tdefaultInput = new File(\"file.out\");\n\t\t\tif (defaultInput.exists()) \n\t\t\t\tout = new PrintStream(new FileOutputStream(\"file.out\"));\n\t\t\telse\n\t\t\t\tout = new PrintStream(System.out);\n\t\t\tdf = new DecimalFormat(\"######0.00\");\n\t\t\tsolve();\n\t\t\tout.close();\n\t\t} \n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(261);\n\t\t}\n\t}\n\t\n\tclass InputReader {\n\t\tBufferedReader reader;\n\t\tStringTokenizer tokenizer;\n\t\t\n\t\tInputReader() {\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tInputReader(String fileName) throws FileNotFoundException {\n\t\t\treader = new BufferedReader(new FileReader(new File(fileName)));\n\t\t}\n\t\t\n\t\tString readLine() throws IOException {\n\t\t\treturn reader.readLine();\n\t\t}\n\t\t\n\t\tString nextToken() throws IOException {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens())\n\t\t\t\ttokenizer = new StringTokenizer(readLine());\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\t\t\n\t\tboolean hasMoreTokens() throws IOException {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\tString s = readLine();\n\t\t\t\tif (s == null)\n\t\t\t\t\treturn false;\n\t\t\t\ttokenizer = new StringTokenizer(s);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tint nextInt() throws NumberFormatException, IOException {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\t\t\n\t\tlong nextLong() throws NumberFormatException, IOException {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\t\t\n\t\tdouble nextDouble() throws NumberFormatException, IOException {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\ninline T gcd(T a, T b) {\n  return b == 0 ? a : gcd(b, a % b);\n}\ntemplate <class T>\ninline T lcm(T a, T b) {\n  return (a / gcd(a, b)) * b;\n}\nint main() {\n  int n, m, k;\n  string in[2005];\n  cin >> n >> m >> k;\n  for (int i = 0; i < (n); i++) cin >> in[i];\n  for (int j = 0; j < (m); j++) {\n    int ret = 0;\n    for (int i = 0; i < (n); i++) {\n      if (j + i < m && in[i][j + i] == 'L') ret++;\n      if (i + i < n && in[i + i][j] == 'U') ret++;\n      if (j - i >= 0 && in[i][j - i] == 'R') ret++;\n      if (i - i >= 0 && in[i - i][j] == 'D') ret++;\n    }\n    cout << ret << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, K, nr[2010][2010], sum[2010];\nchar mat[2010][2010];\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  int i, j, t;\n  cin >> n >> m >> K;\n  for (i = 1; i <= n; ++i) cin >> (mat[i] + 1);\n  for (i = 1; i <= n; ++i) {\n    t = i - 1;\n    for (j = 1; j <= m; ++j) {\n      if (j - t > 0 && mat[i][j - t] == 'R') nr[i][j]++;\n      if (j + t <= m && mat[i][j + t] == 'L') nr[i][j]++;\n      if (i - t > 0 && mat[i - t][j] == 'D') nr[i][j]++;\n      if (i + t <= n && mat[i + t][j] == 'U') nr[i][j]++;\n    }\n  }\n  for (i = 1; i <= n; ++i)\n    for (j = 1; j <= m; ++j) sum[j] += nr[i][j];\n  for (j = 1; j <= m; ++j) cout << sum[j] << ' ';\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, m, k;\nlong long res[2009];\nchar c;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> n >> m >> k;\n  for (long long i = (1); i < (n + 1); i++)\n    for (long long j = (1); j < (m + 1); j++) {\n      cin >> c;\n      if (c == 'U' && (i - 1) % 2 == 0) res[j]++;\n      if (c == 'D' && i == 1) res[j]++;\n      if (c == 'R' && i + j - 1 <= m) res[i + j - 1]++;\n      if (c == 'L' && j - i + 1 >= 1) res[j - i + 1]++;\n    }\n  for (long long i = (1); i < (m + 1); i++) cout << res[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 2100;\nint n, m, k;\nchar a[MAX_N][MAX_N];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      cin >> a[i][j];\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    int r = 0;\n    for (int j = 1; j < n; j++) {\n      if (j + j < n && a[j + j][i] == 'U') r++;\n      if (i + j < m && a[j][i + j] == 'L') r++;\n      if (i - j >= 0 && a[j][i - j] == 'R') r++;\n    }\n    cout << r << (i == m - 1 ? '\\n' : ' ');\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, m, k, i, j, dap[2020];\nchar map[2020];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", map);\n    for (j = 0; j < m; j++) {\n      if (map[j] == 'U') {\n        if (i % 2 == 0) dap[j]++;\n      } else if (map[j] == 'L') {\n        if (j - i >= 0) dap[j - i]++;\n      } else if (map[j] == 'R') {\n        if (j + i < m) dap[j + i]++;\n      }\n    }\n  }\n  for (i = 0; i < m; i++) {\n    printf(\"%d \", dap[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class CF436B {\n  private static int[] work(String str, int t) {\n    int[] num = new int[str.length()];\n    for (int i = 0; i < str.length(); i++) {\n      char c = str.charAt(i);\n      if (c == 'U' && t % 2 == 0) {\n        num[i]++;\n      } else if (c == 'L' && i - t >= 0) {\n        num[i - t]++;\n      } else if (c == 'R' && i + t < str.length()) {\n        num[i + t]++;\n      }\n    }\n    return num;\n  }\n\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int m = sc.nextInt();\n    sc.nextLine();\n    sc.nextLine();\n    int[] sum = new int[m];\n    for (int i = 0; i < n - 1; i++) {\n      int[] num = work(sc.nextLine(), i + 1);\n      for (int j = 0; j < m; j++) {\n        sum[j] += num[j];\n      }\n    }\n    for (int j = 0; j < m; j++) {\n      System.out.print(sum[j] + \" \");\n    }\n    sc.close();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def ans():\n    n, m, k = map(int, input().split())\n    a = list([] for i in range(n))\n    s = [0]*m\n    for i in range(n):\n        a[i] = input()\n    for i in range(1,n):\n        for j in range(m):\n            if i < m-j and a[i][j+i] == 'L':\n                s[j]+=1\n            if i <= j and a[i][j-i] == 'R':\n                s[j]+=1\n            if i+i < n and a[i+i][j] == 'U':\n                s[j]+=1\n    print(*s)\nans()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[2005] = {0};\nint main() {\n  int i, j, k, l, m, n;\n  string s[2005];\n  cin >> n >> m >> k;\n  for (i = 0; i < n; i++) {\n    cin >> s[i];\n  }\n  for (i = 1; i < n; i++) {\n    int fr[2005] = {0};\n    for (j = 0; j < m; j++) {\n      if (s[i][j] == 'R' && j + i < m) {\n        fr[j + i]++;\n      } else if (s[i][j] == 'L' && j - i >= 0) {\n        fr[j - i]++;\n      }\n    }\n    for (j = 0; j < m; j++) {\n      arr[j] += fr[j];\n    }\n  }\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      if (s[i][j] == 'U') {\n        if (i % 2 == 0) {\n          arr[j]++;\n        }\n      }\n    }\n  }\n  for (i = 0; i < m; i++) {\n    cout << arr[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, k = map( int, input().split() )\nans = [0] * m\n\nfor i in range( n ):\n    field = input()\n    for j in range( m ):\n        if ( field[j] == 'U' ) and ( i % 2 == 0 ): ans[j] += 1\n        elif ( field[j] == 'L' ) and ( j >= i ): ans[j - i] += 1\n        elif ( field[j] == 'R' ) and ( j + i < m ): ans[j + i] += 1\n\nprint ( ' '.join( map( str, ans ) ) )"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\n\npublic class B436 {\n\n  public static void main(String[] args) {\n    \n    int r, c;\n    long sp;\n    int[] intersect;\n    Scanner s = new Scanner(System.in);\n    r = s.nextInt();\n    c = s.nextInt();\n    sp = s.nextInt();\n    intersect = new int[c];\n    Arrays.fill(intersect, 0);\n\n    for(int i=0; i<r && sp>0; i++){\n      String row = s.next();\n      for(int j=0; j<c; j++){\n        if(row.charAt(j) == 'R' && i+j < c){\n          sp--;\n          intersect[i+j]++;\n        } else if(row.charAt(j) == 'L' && i<=j)\n        { sp--;\n          intersect[j-i]++;\n        } else if(row.charAt(j) == 'U' && i%2 ==0)\n        { sp--;\n          intersect[j]++;\n        } else if(row.charAt(j) != '.')\n          sp--;\n      }\n    }\n\n      System.out.print(intersect[0]);\n      for(int i=1; i<c; i++){\n        System.out.print(\" \");\n        System.out.print(intersect[i]);\n      }\n      System.out.println();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2010;\nint n, m, k;\nbool f[4][N][N];\nint ans[N];\nstring str;\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    cin >> str;\n    for (int j = 0; j < m; j++) {\n      if (str[j] == 'L') f[0][i][j] = 1;\n      if (str[j] == 'U') f[1][i][j] = 1;\n      if (str[j] == 'R') f[2][i][j] = 1;\n      if (str[j] == 'D') f[3][i][j] = 1;\n    }\n  }\n  for (int j = 0; j < m; j++)\n    for (int i = 0; i < n; i++) {\n      if (j - i >= 0 && f[2][i][j - i]) ans[j]++;\n      if (i + i < n && f[1][i + i][j]) ans[j]++;\n      if (j + i < m && f[0][i][j + i]) ans[j]++;\n    }\n  for (int i = 0; i < m; i++) cout << ans[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner cin=new Scanner(System.in);\n\t\tint n=cin.nextInt(),m=cin.nextInt(),k=cin.nextInt();\n\t\tString[] mp=new String[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\tmp[i]=cin.next();\n\t\tint[] ans=new int[m];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tfor(int j=0;j<m;j++)\n\t\t\t{\n\t\t\t\tchar c=mp[i].charAt(j);\n\t\t\t\tif(c=='U')\n\t\t\t\t{\n\t\t\t\t\tif(i%2==0)\n\t\t\t\t\t\tans[j]++;\n\t\t\t\t}\n\t\t\t\telse if(c=='R')\n\t\t\t\t{\n\t\t\t\t\tint t=i+j;\n\t\t\t\t\tif(t<m)\n\t\t\t\t\t\tans[t]++;\n\t\t\t\t}\n\t\t\t\telse if(c=='L')\n\t\t\t\t{\n\t\t\t\t\tint t=j-i;\n\t\t\t\t\tif(t>=0)\n\t\t\t\t\t\tans[t]++;\n\t\t\t\t}\n\t\t\t\telse if(c=='D')\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tStringBuilder RET=new StringBuilder();\n\t\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\tRET.append(ans[i]+\" \");\n\t\t}\n\t\tSystem.out.println(RET);\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double pi = 3.1415926535897932384626433832795l;\ntemplate <typename T>\ninline auto sqr(T x) -> decltype(x * x) {\n  return x * x;\n}\ntemplate <typename T>\ninline T abs(T x) {\n  return x > T() ? x : -x;\n}\ntemplate <typename It>\nostream &outSeq(ostream &out, It begin, It end) {\n  out << \"[\";\n  while (begin != end) {\n    out << *begin;\n    ++begin;\n    if (begin != end) {\n      out << \", \";\n    }\n  }\n  return out << \"]\";\n}\ntemplate <typename T>\nostream &operator<<(ostream &out, vector<T> const &a) {\n  return outSeq(out, (a).begin(), (a).end());\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &out, pair<T1, T2> const &p) {\n  return out << \"(\" << p.first << \", \" << p.second << \")\";\n}\nnamespace aux {\ntemplate <typename Tuple, size_t Size = tuple_size<Tuple>::value>\nstruct print_tuple;\ntemplate <typename Tuple>\nstruct print_tuple<Tuple, 0> {\n  ostream &operator()(ostream &out, Tuple t) { return out; }\n};\ntemplate <typename Tuple, size_t Size>\nstruct print_tuple : private print_tuple<Tuple, Size - 1> {\n  ostream &operator()(ostream &out, Tuple t) {\n    print_tuple<Tuple, Size - 1>::operator()(out, t);\n    if (Size > 1) {\n      out << \", \";\n    }\n    return out << get<Size - 1>(t);\n  }\n};\n}  // namespace aux\ntemplate <typename... Args>\nostream &operator<<(ostream &out, tuple<Args...> const &t) {\n  out << \"(\";\n  aux::print_tuple<tuple<Args...> >()(out, t);\n  return out << \")\";\n}\nvoid showTime() {}\nconst int N = 2000;\nstruct Input {\n  int n, m, k;\n  string s[N];\n  void init(const Input &input) { *this = input; }\n};\nstruct Data : Input {\n  bool read() {\n    if (!(cin >> n >> m >> k)) {\n      return 0;\n    }\n    getline(cin, s[0]);\n    for (int i = 0; i < int(n); ++i) {\n      getline(cin, s[i]);\n    }\n    return 1;\n  }\n  int ans[N];\n  void write() {\n    for (int i = 0; i < int(m); ++i) {\n      if (i) {\n        cout << \" \";\n      }\n      cout << ans[i];\n    }\n    puts(\"\");\n  }\n  virtual void solve() {}\n  virtual void clear() { *this = Data(); }\n};\nstruct Solution : Data {\n  void solve() {\n    memset(ans, 0, sizeof ans);\n    for (int i = 0; i < int(n); ++i) {\n      for (int j = 0; j < int(m); ++j) {\n        if (s[i][j] == 'L') {\n          if (j - i >= 0) {\n            ans[j - i]++;\n          }\n        }\n        if (s[i][j] == 'R') {\n          if (j + i < m) {\n            ans[j + i]++;\n          }\n        }\n        if (s[i][j] == 'U') {\n          if (!(i & 1)) {\n            ans[j]++;\n          }\n        }\n      }\n    }\n  }\n  void clear() { *this = Solution(); }\n};\nSolution sol;\nint main() {\n  sol.read();\n  sol.solve();\n  sol.write();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[2010][2010];\nint main() {\n  int N, M, K, ans;\n  while (scanf(\"%d%d%d\", &N, &M, &K) != EOF) {\n    for (int i = 0; i < N; i++) scanf(\"%s\", a[i]);\n    for (int j = 0; j < M; j++) {\n      ans = 0;\n      for (int i = 1; i < N; i++) {\n        if (j - i >= 0 && a[i][j - i] == 'R') ans++;\n        if (i + i < N && a[2 * i][j] == 'U') ans++;\n        if (j + i < M && a[i][j + i] == 'L') ans++;\n      }\n      if (j != 0) printf(\" \");\n      printf(\"%d\", ans);\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD(1000000007);\nconst int INF((1 << 30) - 1);\nconst int MAXN(2005);\nint n, m;\nchar a[MAXN][MAXN];\nint chk(int i, int j, char x) {\n  if (i < 0 || i >= n || j < 0 || j >= m) return 0;\n  if (a[i][j] == x) return 1;\n  return 0;\n}\nint main() {\n  int k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", a[i]);\n  for (int j = 0; j < m; j++) {\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n      cnt += chk(i + i, j, 'U');\n      cnt += chk(i - i, j, 'D');\n      cnt += chk(i, j + i, 'L');\n      cnt += chk(i, j - i, 'R');\n    }\n    printf(\"%d \", cnt);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<int> v(m, 0);\n  string s;\n  cin >> s;\n  for (int i = 1; i < n; i++) {\n    cin >> s;\n    for (int j = 0; j < m; j++) {\n      if (s[j] == 'D' || s[j] == '.') continue;\n      if (s[j] == 'L') {\n        if (j - i >= 0) v[j - i]++;\n      } else if (s[j] == 'R') {\n        if (i + j < m) v[i + j]++;\n      } else if (s[j] == 'U') {\n        if (i % 2 == 0) v[j]++;\n      }\n    }\n  }\n  for (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n    if (it != v.begin()) cout << \" \";\n    cout << *it;\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\ncin = sys.stdin\ninput = cin.readlines()\n\nn, m, k = [int(val) for val in input[0].split(' ')]\narea = input[1:]\n\nans = [0] * m\nfor i in range(0, n):\n    for j in range(0, m):\n        if area[i][j] == 'U' and (i + 1) % 2 == 1:\n            ans[j] += 1\n        elif area[i][j] == 'L' and j - i >= 0:\n            ans[j-i] += 1\n        elif area[i][j] == 'R' and j + i < m:\n            ans[j+i] += 1\n\nprint(\" \".join([str(val) for val in list(ans)]))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int m, n, k;\n  char c;\n  cin >> n >> m >> k;\n  int i, j;\n  int* num = new int[m];\n  for (i = 0; i < m; i++) num[i] = 0;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      cin >> c;\n      switch (c) {\n        case 'L':\n          if (j >= i) num[j - i]++;\n          break;\n        case 'R':\n          if (i + j < m) num[i + j]++;\n          break;\n        case 'U':\n          if (i % 2 == 0) num[j]++;\n          break;\n        case 'D':\n          break;\n      }\n    }\n  }\n  for (i = 0; i < m - 1; i++) cout << num[i] << \" \";\n  cout << num[m - 1];\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Math.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class B {\n\n\tpublic void solve() throws Exception {\n\t\t\n\t\tint n = nextInt(), m = nextInt(), k = nextInt();\n\t\tint[] sprow = new int[k];\n\t\tint[] spcol = new int[k];\n\t\tchar[] mov = new char[k];\n\t\tint idx = 0;\n\t\tfor (int i=0; i<n; ++i) for (int j=0; j<m; ++j) {\n\t\t\tchar c = nextNonWhitespaceChar();\n\t\t\tif (c != '.') {\n\t\t\t\tsprow[idx] = i;\n\t\t\t\tspcol[idx] = j;\n\t\t\t\tmov[idx++] = c;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tint[] cnt = new int[m];\n\t\tfor (int i=0; i<k; ++i) {\n\t\t\tif (mov[i] == 'L') {\n\t\t\t\tint col = spcol[i] - sprow[i];\n\t\t\t\tif (col >= 0) cnt[col]++;\n\t\t\t}\n\t\t\tif (mov[i] == 'R') {\n\t\t\t\tint col = spcol[i] + sprow[i];\n\t\t\t\tif (col < m) cnt[col]++;\n\t\t\t}\n\t\t\tif (mov[i] == 'U' && sprow[i] % 2 == 0) {\n\t\t\t\tcnt[spcol[i]]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int i=0; i<cnt.length; ++i) print(cnt[i] + \" \");\n\t\t\n\t}\n\n\t\n\n\t////////////////////////////////////////////////////////////////////////////\n\t\n\tboolean showDebug = true;\n\tstatic boolean useFiles = false;\n\tstatic String inFile = \"input.txt\";\n\tstatic String outFile = \"output.txt\";\n\n\tdouble EPS = 1e-7;\n\tint INF = Integer.MAX_VALUE;\n\tlong INFL = Long.MAX_VALUE;\n\tdouble INFD = Double.MAX_VALUE;\n\n\t\n\tint absPos(int num) {\n\t\treturn num<0 ? 0:num;\n\t}\n\tlong absPos(long num) {\n\t\treturn num<0 ? 0:num;\n\t}\n\tdouble absPos(double num) {\n\t\treturn num<0 ? 0:num;\n\t}\n\t\n\tint min(int... nums) {\n\t\tint r = nums[0];\n\t\tfor (int i=1; i<nums.length; ++i)\n\t\t\tif (nums[i]<r) r=nums[i];\n\t\treturn r;\n\t}\n\tint max(int... nums) {\n\t\tint r = nums[0];\n\t\tfor (int i=1; i<nums.length; ++i)\n\t\t\tif (nums[i]>r) r=nums[i];\n\t\treturn r;\n\t}\n\tlong minL(long... nums) {\n\t\tlong r = nums[0];\n\t\tfor (int i=1; i<nums.length; ++i)\n\t\t\tif (nums[i]<r) r=nums[i];\n\t\treturn r;\n\t}\n\tlong maxL(long... nums) {\n\t\tlong r = nums[0];\n\t\tfor (int i=1; i<nums.length; ++i)\n\t\t\tif (nums[i]>r) r=nums[i];\n\t\treturn r;\n\t}\n\tdouble minD(double... nums) {\n\t\tdouble r = nums[0];\n\t\tfor (int i=1; i<nums.length; ++i)\n\t\t\tif (nums[i]<r) r=nums[i];\n\t\treturn r;\n\t}\n\tdouble maxD(double... nums) {\n\t\tdouble r = nums[0];\n\t\tfor (int i=1; i<nums.length; ++i)\n\t\t\tif (nums[i]>r) r=nums[i];\n\t\treturn r;\n\t}\n\t\n\tlong sumArr(int[] arr) {\n\t\tlong res = 0;\n\t\tfor (int i=0; i<arr.length; ++i)\n\t\t\tres+=arr[i];\n\t\treturn res;\n\t}\n\tlong sumArr(long[] arr) {\n\t\tlong res = 0;\n\t\tfor (int i=0; i<arr.length; ++i)\n\t\t\tres+=arr[i];\n\t\treturn res;\n\t}\n\tdouble sumArr(double[] arr) {\n\t\tdouble res = 0;\n\t\tfor (int i=0; i<arr.length; ++i)\n\t\t\tres+=arr[i];\n\t\treturn res;\n\t}\n\n\tlong partsFitCnt(long partSize, long wholeSize) {\n\t\treturn (partSize+wholeSize-1)/partSize;\n\t}\n\n\tboolean odd(long num) {\n\t\treturn (num&1)==1;\n\t}\n\t\n\tboolean hasBit(int num, int pos) {\n\t\treturn (num&(1<<pos))>0;\n\t}\n\n\tboolean isLetter(char c) {\n\t\treturn (c>='a' && c<='z') || (c>='A' && c<='Z');\n\t}\n\tboolean isLowercase(char c) {\n\t\treturn (c>='a' && c<='z');\n\t}\n\tboolean isUppercase(char c) {\n\t\treturn (c>='A' && c<='Z');\n\t}\n\tboolean isDigit(char c) {\n\t\treturn (c>='0' && c<='9');\n\t}\n\t\n\tboolean charIn(String chars, String s) {\n\t\tif (s==null) return false;\n\t\tif (chars==null || chars.equals(\"\")) return true;\n\t\tfor (int i=0; i<s.length(); ++i)\n\t\t\tfor (int j=0; j<chars.length(); ++j)\n\t\t\t\tif (chars.charAt(j)==s.charAt(i)) return true;\n\t\treturn false;\n\t}\n\t\n\tString stringn(String s, int n) {\n\t\tif (n<1 || s==null) return \"\";\n\t\tStringBuilder sb = new StringBuilder(s.length()*n);\n\t\tfor (int i=0; i<n; ++i) sb.append(s);\n\t\treturn sb.toString();\n\t}\n\tString str(Object o) {\n\t\tif (o==null) return \"\";\n\t\treturn o.toString();\n\t}\n\n\n\tlong timer = System.currentTimeMillis();\n\tvoid startTimer() {\n\t\ttimer = System.currentTimeMillis();\n\t}\n\tvoid stopTimer() {\n\t\tSystem.err.println(\"time: \"+(System.currentTimeMillis()-timer)/1000.0);\n\t}\n\n\n\tstatic class InputReader {\n\t\tprivate byte[] buf;\n\t\tprivate int bufPos = 0, bufLim = -1;\n\t\tprivate InputStream stream;\n\t\tpublic InputReader(InputStream stream, int size) {\n\t\t\tbuf = new byte[size];\n\t\t\tthis.stream = stream;\n\t\t}\n\t\tprivate void fillBuf() throws IOException {\n\t\t\tbufLim = stream.read(buf);\n\t\t\tbufPos = 0;\n\t\t}\n\t\tchar read() throws IOException {\n\t\t\tif (bufPos>=bufLim) fillBuf(); \n\t\t\treturn (char)buf[bufPos++];\n\t\t}\n\t\tboolean hasInput() throws IOException {\n\t\t\tif (bufPos>=bufLim) fillBuf();\n\t\t\treturn bufPos<bufLim;\n\t\t}\n\t}\n\t\n\tstatic InputReader inputReader;\n\tstatic BufferedWriter outputWriter;\n\n\tchar nextChar() throws IOException {\n\t\treturn inputReader.read();\n\t}\n\tchar nextNonWhitespaceChar() throws IOException {\n\t\tchar c = inputReader.read();\n\t\twhile (c<=' ') c=inputReader.read();\n\t\treturn c;\n\t}\n\tString nextWord() throws IOException {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tchar c = inputReader.read();\n\t\twhile (c<=' ') c=inputReader.read();\n\t\twhile (c>' ') {\n\t\t\tsb.append(c);\n\t\t\tc = inputReader.read();\n\t\t}\n\t\treturn new String(sb);\n\t}\n\tString nextLine() throws IOException {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tchar c = inputReader.read();\n\t\twhile (c<=' ') c=inputReader.read();\n\t\twhile (c!='\\n' && c!='\\r') {\n\t\t\tsb.append(c);\n\t\t\tc = inputReader.read();\n\t\t}\n\t\treturn new String(sb);\n\t}\n\tint nextInt() throws IOException {\n\t\tint r = 0;\n\t\tchar c = nextNonWhitespaceChar();\n\t\tboolean neg = false;\n\t\tif (c=='-') neg=true;\n\t\telse r=c-48;\n\t\tc = nextChar();\n\t\twhile (c>='0' && c<='9') {\n\t\t\tr*=10;\n\t\t\tr+=c-48;\n\t\t\tc=nextChar();\n\t\t}\n\t\treturn neg ? -r:r;\n\t}\n\tlong nextLong() throws IOException {\n\t\tlong r = 0;\n\t\tchar c = nextNonWhitespaceChar();\n\t\tboolean neg = false;\n\t\tif (c=='-') neg=true;\n\t\telse r = c-48;\n\t\tc = nextChar();\n\t\twhile (c>='0' && c<='9') {\n\t\t\tr*=10L;\n\t\t\tr+=c-48L;\n\t\t\tc=nextChar();\n\t\t}\n\t\treturn neg ? -r:r;\n\t}\n\tdouble nextDouble() throws NumberFormatException, IOException {\n\t\treturn Double.parseDouble(nextWord());\n\t}\n\tint[] nextArr(int size) throws NumberFormatException, IOException {\n\t\tint[] arr = new int[size];\n\t\tfor (int i=0; i<size; ++i)\n\t\t\tarr[i] = nextInt();\n\t\treturn arr;\n\t}\n\tlong[] nextArrL(int size) throws NumberFormatException, IOException {\n\t\tlong[] arr = new long[size];\n\t\tfor (int i=0; i<size; ++i)\n\t\t\tarr[i] = nextLong();\n\t\treturn arr;\n\t}\n\tdouble[] nextArrD(int size) throws NumberFormatException, IOException {\n\t\tdouble[] arr = new double[size];\n\t\tfor (int i=0; i<size; ++i)\n\t\t\tarr[i] = nextDouble();\n\t\treturn arr;\n\t}\n\tString[] nextArrS(int size) throws NumberFormatException, IOException {\n\t\tString[] arr = new String[size];\n\t\tfor (int i=0; i<size; ++i)\n\t\t\tarr[i] = nextWord();\n\t\treturn arr;\n\t}\n\tchar[] nextArrCh(int size) throws IOException {\n\t\tchar[] arr = new char[size];\n\t\tfor (int i=0; i<size; ++i)\n\t\t\tarr[i] = nextNonWhitespaceChar();\n\t\treturn arr;\n\t}\n\tchar[][] nextArrCh(int rows, int columns) throws IOException {\n\t\tchar[][] arr = new char[rows][columns];\n\t\tfor (int i=0; i<rows; ++i)\n\t\t\tfor (int j=0; j<columns; ++j)\n\t\t\t\tarr[i][j] = nextNonWhitespaceChar();\n\t\treturn arr;\n\t}\n\tchar[][] nextArrChBorders(int rows, int columns, char border) throws IOException {\n\t\tchar[][] arr = new char[rows+2][columns+2];\n\t\tfor (int i=1; i<=rows; ++i)\n\t\t\tfor (int j=1; j<=columns; ++j)\n\t\t\t\tarr[i][j] = nextNonWhitespaceChar();\n\t\tfor (int i=0; i<columns+2; ++i) {\n\t\t\tarr[0][i] = border;\n\t\t\tarr[rows+1][i] = border;\n\t\t}\n\t\tfor (int i=0; i<rows+2; ++i) {\n\t\t\tarr[i][0] = border;\n\t\t\tarr[i][columns+1] = border;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tvoid printf(String format, Object... args) throws IOException {\n\t\toutputWriter.write(String.format(format, args));\n\t}\n\tvoid print(Object o) throws IOException {\n\t\toutputWriter.write(o.toString());\n\t}\n\tvoid println(Object o) throws IOException {\n\t\toutputWriter.write(o.toString());\n\t\toutputWriter.newLine();\n\t}\n\tvoid print(Object... o) throws IOException {\n\t\tfor (int i=0; i<o.length; ++i) {\n\t\t\tif (i!=0) outputWriter.write(' ');\n\t\t\toutputWriter.write(o[i].toString());\n\t\t}\n\t}\n\tvoid println(Object... o) throws IOException {\n\t\tprint(o);\n\t\toutputWriter.newLine();\n\t}\n\tvoid printn(Object o, int n) throws IOException {\n\t\tString s = o.toString();\n\t\tfor (int i=0; i<n; ++i) {\n\t\t\toutputWriter.write(s);\n\t\t\tif (i!=n-1) outputWriter.write(' ');\n\t\t}\n\t}\n\tvoid printnln(Object o, int n) throws IOException {\n\t\tprintn(o, n);\n\t\toutputWriter.newLine();\n\t}\n\tvoid printArr(int[] arr) throws IOException {\n\t\tfor (int i=0; i<arr.length; ++i) {\n\t\t\tif (i!=0) outputWriter.write(' ');\n\t\t\toutputWriter.write(Integer.toString(arr[i]));\n\t\t}\n\t}\n\tvoid printArr(long[] arr) throws IOException {\n\t\tfor (int i=0; i<arr.length; ++i) {\n\t\t\tif (i!=0) outputWriter.write(' ');\n\t\t\toutputWriter.write(Long.toString(arr[i]));\n\t\t}\n\t}\n\tvoid printArr(double[] arr) throws IOException {\n\t\tfor (int i=0; i<arr.length; ++i) {\n\t\t\tif (i!=0) outputWriter.write(' ');\n\t\t\toutputWriter.write(Double.toString(arr[i]));\n\t\t}\n\t}\n\tvoid printArr(String[] arr) throws IOException {\n\t\tfor (int i=0; i<arr.length; ++i) {\n\t\t\tif (i!=0) outputWriter.write(' ');\n\t\t\toutputWriter.write(arr[i]);\n\t\t}\n\t}\n\tvoid printlnArr(int[] arr) throws IOException {\n\t\tprintArr(arr);\n\t\toutputWriter.newLine();\n\t}\n\tvoid printlnArr(long[] arr) throws IOException {\n\t\tprintArr(arr);\n\t\toutputWriter.newLine();\n\t}\n\tvoid printlnArr(double[] arr) throws IOException {\n\t\tprintArr(arr);\n\t\toutputWriter.newLine();\n\t}\n\tvoid printlnArr(String[] arr) throws IOException {\n\t\tprintArr(arr);\n\t\toutputWriter.newLine();\n\t}\n\tvoid halt(Object... o) throws IOException {\n\t\tif (o.length!=0) println(o);\n\t\toutputWriter.flush(); outputWriter.close();\n\t\tSystem.exit(0);\n\t}\n\t\n\tvoid debug(Object... o) {\n\t\tif (showDebug) System.err.println(Arrays.deepToString(o));\n\t}\n\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tLocale.setDefault(Locale.US);\n\t\tif (!useFiles) {\n\t\t\tinputReader = new InputReader(System.in, 1<<16);\n\t\t\toutputWriter = new BufferedWriter(new OutputStreamWriter(System.out), 1<<16);\n\t\t} else {\n\t\t\tinputReader = new InputReader(new FileInputStream(new File(inFile)), 1<<16);\n\t\t\toutputWriter = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File(outFile))), 1<<16);\n\t\t}\n\t\tnew B().solve();\n\t\toutputWriter.flush(); outputWriter.close();\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\n\n/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n/**\n * 6\n * 1 0\n * 0 0\n * 0 0\n * 1 1\n * 0 1\n * 1 1\n *\n * @author pttrung\n */\npublic class B {\n\n    public static boolean circle;\n    public static int[] dp;\n    public static int[] x = {0, 0, 1, -1};\n    public static int[] y = {-1, 1, 0, 0};\n\n    public static void main(String[] args) throws FileNotFoundException {\n        PrintWriter out;\n\n        Scanner in = new Scanner();\n        //out = new PrintWriter(new FileOutputStream(new File(\"output.txt\")));\n        out = new PrintWriter(System.out);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        String d = \"LRDU\";\n        \n        int []count = new int[m];\n        for(int i = 0;i < n; i++){\n            String line = in.next();\n            for(int j = 0; j < m; j ++){\n                char c = line.charAt(j);\n                if(d.indexOf(c) >=0){\n                    \n                    int dir = d.indexOf(c);\n                    if( dir <= 1){\n                        int t = i;\n                        int a = i + x[dir]*t;\n                        int b = j + y[dir]*t;\n                       // System.out.println(c + \" \" + b);\n                        if(b >= 0 && b < m){\n                            count[b]++;\n                        }\n                    }else if(dir == 3){\n                        if( i % 2 == 0){\n                            \n                            count[j]++;\n                        }\n                    }\n                    \n                }\n            }\n        }\n        for(int i = 0; i < m; i++){\n            out.print(count[i] + \" \");\n        }\n\n        out.close();\n    }\n\n    public static Line getLine(Point a, Point b) {\n        int c = (a.x - b.x);\n        int d = (a.y - b.y);\n        if (c == 0) {\n            return new Line(1, 0, -a.x);\n        } else if (d == 0) {\n            return new Line(0, 1, -a.y);\n        } else {\n            double rate = (double) (-d) / c;\n\n            double other = ((double) rate * a.x) + a.y;\n            //System.out.println(a + \"|\" + b + \": \" + rate + \" \" + other);\n            return new Line(rate, 1, -other);\n        }\n    }\n\n    public static class Line {\n\n        double a, b, c;\n\n        public Line(double a, double b, double c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n        }\n\n        @Override\n        public int hashCode() {\n            int hash = 7;\n            hash = 47 * hash + (int) (Double.doubleToLongBits(this.a) ^ (Double.doubleToLongBits(this.a) >>> 32));\n            hash = 47 * hash + (int) (Double.doubleToLongBits(this.b) ^ (Double.doubleToLongBits(this.b) >>> 32));\n            hash = 47 * hash + (int) (Double.doubleToLongBits(this.c) ^ (Double.doubleToLongBits(this.c) >>> 32));\n            return hash;\n        }\n\n        @Override\n        public boolean equals(Object obj) {\n            if (obj == null) {\n                return false;\n            }\n            if (getClass() != obj.getClass()) {\n                return false;\n            }\n            final Line other = (Line) obj;\n            if (Double.doubleToLongBits(this.a) != Double.doubleToLongBits(other.a)) {\n                return false;\n            }\n            if (Double.doubleToLongBits(this.b) != Double.doubleToLongBits(other.b)) {\n                return false;\n            }\n            if (Double.doubleToLongBits(this.c) != Double.doubleToLongBits(other.c)) {\n                return false;\n            }\n            return true;\n        }\n\n        @Override\n        public String toString() {\n            return a + \" \" + b + \" \" + c;\n        }\n    }\n\n    static class FT {\n\n        int[] data;\n\n        FT(int n) {\n            data = new int[n];\n        }\n\n        void update(int index, int val) {\n            // System.out.println(\"UPDATE INDEX \" + index);\n            while (index < data.length) {\n                data[index] += val;\n                index += index & (-index);\n\n                //    System.out.println(\"NEXT \" +index);\n            }\n        }\n\n        int get(int index) {\n            //  System.out.println(\"GET INDEX \" + index);\n            int result = 0;\n            while (index > 0) {\n                result += data[index];\n                index -= index & (-index);\n                // System.out.println(\"BACK \" + index);\n            }\n            return result;\n        }\n    }\n\n    public static double dist(Point a, Point b) {\n        double val = (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);\n        return Math.sqrt(val);\n    }\n\n    public static class Point {\n\n        int x, y;\n\n        public Point(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n\n        @Override\n        public String toString() {\n            return x + \" \" + y;\n        }\n    }\n\n    public static boolean nextPer(int[] data) {\n        int i = data.length - 1;\n        while (i > 0 && data[i] < data[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return false;\n        }\n        int j = data.length - 1;\n        while (data[j] < data[i - 1]) {\n            j--;\n        }\n        int temp = data[i - 1];\n        data[i - 1] = data[j];\n        data[j] = temp;\n        Arrays.sort(data, i, data.length);\n        return true;\n    }\n\n    public static long pow(int a, int b) {\n        if (b == 0) {\n            return 1;\n        }\n        if (b == 1) {\n            return a;\n        }\n        long val = pow(a, b / 2);\n        if (b % 2 == 0) {\n            return val * val;\n        } else {\n            return val * val * a;\n        }\n    }\n\n    public static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    public static long lcm(long a, long b) {\n        return a * b / gcd(a, b);\n    }\n\n    static class Scanner {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() throws FileNotFoundException {\n            // System.setOut(new PrintStream(new BufferedOutputStream(System.out), true));\n            br = new BufferedReader(new InputStreamReader(System.in));\n            //  br = new BufferedReader(new FileReader(new File(\"output.txt\")));\n        }\n\n        public String next() {\n\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                    throw new RuntimeException();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            st = null;\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n\n        public boolean endLine() {\n            try {\n                String next = br.readLine();\n                while (next != null && next.trim().isEmpty()) {\n                    next = br.readLine();\n                }\n                if (next == null) {\n                    return true;\n                }\n                st = new StringTokenizer(next);\n                return st.hasMoreTokens();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, m, s;\nchar g[2005][2005];\nint cnt[2005];\nint main() {\n  memset(cnt, 0, sizeof(cnt));\n  scanf(\"%d %d %d\", &n, &m, &s);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", g[i]);\n    for (int j = 0; j < m; j++) {\n      if (g[i][j] == 'R') {\n        if (j + i < m) cnt[j + i]++;\n      } else if (g[i][j] == 'L') {\n        if (j - i >= 0) cnt[j - i]++;\n      } else if (g[i][j] == 'U') {\n        if (~i & 1) cnt[j]++;\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", cnt[i]);\n  puts(\"\");\n}\n"
        },
        {
            "language": 1,
            "solution": "if __name__==\"__main__\":\n    n,m, k = map(int, raw_input().split())\n\n    res = [0]*m\n    c = 0 \n    while c < n:\n        a = raw_input()\n        ac = 0\n        while ac < m:\n            if a[ac] == 'U' and c%2 == 0:\n                res[ac] += 1\n            elif a[ac] == 'R' and ac+c < m:\n                res[ac+c] += 1\n            elif a[ac] == 'L' and ac-c >= 0:\n                res[ac-c] += 1\n            ac += 1\n        c += 1\n\n    sres = [str(x) for x in res]\n    print ' '.join(sres)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class B1 {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sca = new Scanner(System.in);\n\t\tint n = sca.nextInt();\n\t\tint m = sca.nextInt();\n\t\tint k = sca.nextInt();\n\t\tint[] res = new int[m];\n\t\tfor (int i = 0; i < n && k > 0; i++) {\n\t\t\tString t = sca.next();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tswitch(t.charAt(j)) {\n\t\t\t\tcase 'U':\n\t\t\t\t\tif(i%2==0) \n\t\t\t\t\t\tres[j]++;\n\t\t\t\t\tk--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\tif(j-i>=0) \n\t\t\t\t\t\tres[j-i]++;\t\t\n\t\t\t\t\tk--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\tif(m-1-j - i>=0)\n\t\t\t\t\t\tres[j+i]++;\n\t\t\t\t\tk--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tSystem.out.print(res[j] + \" \");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2005;\nint c[maxn][maxn];\nint cs[maxn];\nchar s[maxn];\nvector<pair<int, int> > vc;\nvector<int> dvc;\nconst int U = 0;\nconst int D = 1;\nconst int L = 2;\nconst int R = 3;\ninline int getD(char c) {\n  if (c == 'U') return U;\n  if (c == 'D') return D;\n  if (c == 'L') return L;\n  if (c == 'R') return R;\n  return 0;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  int n, m, k;\n  memset(cs, 0, sizeof(cs));\n  memset(c, 0, sizeof(c));\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 1; i < n + 1; ++i) {\n    scanf(\"%s\", s + 1);\n    for (int j = 1; j < m + 1; ++j) {\n      if (s[j] != '.') {\n        ++c[i][j];\n        vc.push_back(make_pair(i, j));\n        dvc.push_back(getD(s[j]));\n      }\n    }\n  }\n  int sz = ((int)(vc).size());\n  int x, y, d;\n  int t;\n  for (int j = 0; j < sz; ++j) {\n    x = vc[j].first;\n    y = vc[j].second;\n    d = dvc[j];\n    if (d == U) {\n      if (x > 1 && (x & 1)) ++cs[y];\n    } else if (d == L) {\n      t = x - 1;\n      y -= t;\n      if (y > 0 && y <= m) ++cs[y];\n    } else if (d == R) {\n      t = x - 1;\n      y += t;\n      if (y > 0 && y <= m) ++cs[y];\n    }\n  }\n  for (int j = 1; j < m + 1; ++j) printf(\"%d \", cs[j]);\n  putchar('\\n');\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.lang.reflect.*;\n\n\npublic class Main {\n\n\tstatic long CURRENT_TIME_NANO = System.nanoTime();\n\n\tpublic static void main(String[] args) throws Exception {\n\n\t\tint n = next();\n\t\tint m = next();\n\t\tint k = next();\n\n\t\tchar[][] c = new char[n][];\n\t\tfor (int i = 0; i < n; i++) c[i] = nextline().toCharArray();\n\n\t\tint[] count = new int[m];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tif (c[i][j] == 'U') if (i % 2 == 0) count[j]++;\n\t\t\t\tif (c[i][j] == 'L') if (j - i >= 0) count[j - i]++;\n\t\t\t\tif (c[i][j] == 'R') if (j + i < m) count[j + i]++;\n\n\t\t\t}\n\n\t\tfor (int i = 0; i < m; i++) out.print(count[i] + \" \");\n\t\tout.println();\n\n\t\tout.close();\n\t}\n\t\n\tstatic void printtime() {System.out.println((System.nanoTime() - CURRENT_TIME_NANO)*1e-9);}\n\tstatic void nexttime() {printtime(); CURRENT_TIME_NANO = System.nanoTime();}\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\t\n\tstatic BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in));\n\tstatic StringTokenizer in = new StringTokenizer(\"\");\n\n\tstatic String nextToken() throws Exception {\n\t\tif (!in.hasMoreTokens()) in = new StringTokenizer(bufferedreader.readLine());\n\t\treturn in.nextToken();\n\t}\n\n\tstatic int next()  throws Exception {return Integer.parseInt(nextToken());};\n\tstatic int[] next(int n) throws Exception {\n\t\tint[] x = new int[n];\n\t\tfor (int i = 0; i < n; i++) x[i] = next();\n\t\treturn x;\n\t}\n\tstatic int[][] next(int n, int m) throws Exception {\n\t\tint[][] x = new int[n][];\n\t\tfor (int i = 0; i < n; i++) x[i] = next(m);\n\t\treturn x;\n\t}\n\n\tstatic long nextl() throws Exception {return Long.parseLong(nextToken());};\n\tstatic long[] nextl(int n) throws Exception {\n\t\tlong[] x = new long[n];\n\t\tfor (int i = 0; i < n; i++) x[i] = nextl();\n\t\treturn x;\n\t}\n\tstatic long[][] nextl(int n, int m) throws Exception {\n\t\tlong[][] x = new long[n][];\n\t\tfor (int i = 0; i < n; i++) x[i] = nextl(m);\n\t\treturn x;\n\t}\n\n\tstatic double nextd() throws Exception {return Double.parseDouble(nextToken());};\n\tstatic double[] nextd(int n) throws Exception {\n\t\tdouble[] x = new double[n];\n\t\tfor (int i = 0; i < n; i++) x[i] = nextd();\n\t\treturn x;\n\t}\n\tstatic double[][] nextd(int n, int m) throws Exception {\n\t\tdouble[][] x = new double[n][];\n\t\tfor (int i = 0; i < n; i++) x[i] = nextd(m);\n\t\treturn x;\n\t}\n\n\tstatic String nextline() throws Exception {\n\t\tin = new StringTokenizer(\"\");\n\t\treturn bufferedreader.readLine();\n\t}\n\n\tstatic void sout(String s) {System.out.println(s);}\n\tstatic void sout(long x) {System.out.println(x);}\n\tstatic void sout(int[] x) {for (int xx : x) System.out.print(xx + \" \"); System.out.println();}\n\tstatic void sout(long[] x) {for (long xx : x) System.out.print(xx + \" \"); System.out.println();}\n\tstatic void sout(int[][] x) {for (int[] xx : x) sout(xx); System.out.println();}\n\tstatic void sout(long[][] x) {for (long[] xx : x) sout(xx); System.out.println();}\n\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.InputMismatchException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.Reader;\nimport java.io.Writer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Niyaz Nigmatullin\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tFastScanner in = new FastScanner(inputStream);\n\t\tFastPrinter out = new FastPrinter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n\n    static final int[] DX = {1, 0, -1, 0};\n    static final int[] DY = {0, 1, 0, -1};\n    static final char[] DIRS = \"DRUL\".toCharArray();\n\n    public void solve(int testNumber, FastScanner in, FastPrinter out) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        in.nextInt();\n        char[][] c = in.readCharacterFieldTokens(n, m);\n        int[][] count = new int[n][m];\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                for (int dir = 0; dir < 4; dir++) {\n                    int x = i + DX[dir] * i;\n                    int y = j + DY[dir] * i;\n                    if (x < 0 || y < 0 || x >= n || y >= m) continue;\n                    if (c[x][y] == DIRS[dir + 2 & 3]) {\n                        count[i][j]++;\n                    }\n                }\n            }\n        }\n        for (int col = 0; col < m; col++) {\n            int curCount = 0;\n            for (int i = 0; i < n; i++) {\n                curCount += count[i][col];\n            }\n            if (col > 0) out.print(' ');\n            out.print(curCount);\n        }\n        out.println();\n    }\n}\n\nclass FastScanner extends BufferedReader {\n\n    public FastScanner(InputStream is) {\n        super(new InputStreamReader(is));\n    }\n\n    public int read() {\n        try {\n            int ret = super.read();\n//            if (isEOF && ret < 0) {\n//                throw new InputMismatchException();\n//            }\n//            isEOF = ret == -1;\n            return ret;\n        } catch (IOException e) {\n            throw new InputMismatchException();\n        }\n    }\n\n    public String next() {\n        StringBuilder sb = new StringBuilder();\n        int c = read();\n        while (isWhiteSpace(c)) {\n            c = read();\n        }\n        if (c < 0) {\n            return null;\n        }\n        while (c >= 0 && !isWhiteSpace(c)) {\n            sb.appendCodePoint(c);\n            c = read();\n        }\n        return sb.toString();\n    }\n\n    static boolean isWhiteSpace(int c) {\n        return c >= 0 && c <= 32;\n    }\n\n    public int nextInt() {\n        int c = read();\n        while (isWhiteSpace(c)) {\n            c = read();\n        }\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int ret = 0;\n        while (c >= 0 && !isWhiteSpace(c)) {\n            if (c < '0' || c > '9') {\n                throw new NumberFormatException(\"digit expected \" + (char) c\n                        + \" found\");\n            }\n            ret = ret * 10 + c - '0';\n            c = read();\n        }\n        return ret * sgn;\n    }\n\n    public String readLine() {\n        try {\n            return super.readLine();\n        } catch (IOException e) {\n            return null;\n        }\n    }\n\n    public char[][] readCharacterFieldTokens(int n, int m) {\n        char[][] ret = new char[n][];\n        for (int i = 0; i < n; i++) {\n            ret[i] = next().toCharArray();\n            if (ret[i].length != m) {\n                throw new AssertionError(\"length expected \" + m + \", found \" + ret[i].length);\n            }\n        }\n        return ret;\n    }\n\n}\n\nclass FastPrinter extends PrintWriter {\n\n    public FastPrinter(OutputStream out) {\n        super(out);\n    }\n\n    public FastPrinter(Writer out) {\n        super(out);\n    }\n\n\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, p;\nint main() {\n  while (cin >> n >> m >> p) {\n    string line;\n    bool a = true;\n    int ans[m];\n    memset(ans, 0, sizeof(ans));\n    for (int i = 0; i < n; ++i) {\n      getline(cin, line);\n      if (i == 0) {\n        if (a) {\n          i--;\n          a = false;\n        }\n        continue;\n      }\n      for (int j = 0; j < m; ++j) {\n        if (line[j] == '.') continue;\n        if (line[j] == 'R') {\n          if (i + j >= m) continue;\n          ans[j + i]++;\n        }\n        if (line[j] == 'L') {\n          if (j - i < 0) continue;\n          ans[j - i]++;\n        }\n        if (line[j] == 'U') {\n          if (i % 2 == 0) ans[j]++;\n        }\n      }\n    }\n    for (int i = 0; i < m; ++i) {\n      printf(\"%d \", ans[i]);\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class BOmNomAndSpiders {\n\tint n, m, k;\n\tint[] count;\n\n\tpublic void in() {\n\t\tScanner in = new Scanner(System.in);\n\t\tn = in.nextInt();\n\t\tm = in.nextInt();\n\t\tin.nextInt();\n\t\tcount = new int[m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString line = in.next();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tchar ch;\n\t\t\t\tif ((ch = line.charAt(j)) != '.') {\n\t\t\t\t\tswitch (ch) {\n\t\t\t\t\tcase 'U':\n\t\t\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\t\t\tcount[j]++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'D':\n\t\t\t\t\t\t// nothing happen\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tint l = j - i;\n\t\t\t\t\t\tif (l >= 0) {\n\t\t\t\t\t\t\tcount[l]++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tint r = j + i;\n\t\t\t\t\t\tif (r < m) {\n\t\t\t\t\t\t\tcount[r]++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tin.close();\n\t}\n\n\tpublic void run() {\n\t}\n\n\tpublic void out() {\n\t\tStringBuffer sb = new StringBuffer();\n\t\tfor (int c : count) {\n\t\t\tsb.append(c).append(' ');\n\t\t}\n\t\tSystem.out.println(sb.toString().trim());\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tBOmNomAndSpiders runner = new BOmNomAndSpiders();\n\t\trunner.in();\n\t\trunner.run();\n\t\trunner.out();\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "n,m,k=map(int,raw_input().split())\n\nk=[0]*m\n\nfor i in range(n):\n    for (j,x) in enumerate(raw_input()):\n        if x == 'U':\n            if i%2 < 1: k[j]+=1\n        if x == 'L':\n            if i <= j: k[j-i]+=1\n        if x == 'R':\n            if m-j >i: k[i+j]+=1\n\nprint ' '.join(map(str,k))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, m, k, total = 1;\n  if (scanf(\"%d%d%d\", &n, &m, &k)) {\n    int col[5000];\n    memset(col, 0, sizeof(col));\n    while (total <= m * n) {\n      char state;\n      int x, y;\n      if (total % m == 0)\n        x = m, y = total / m;\n      else\n        x = total % m, y = total / m + 1;\n      scanf(\" %c\", &state);\n      if (state == 'L')\n        if (x - y >= 0) col[x - y + 1]++;\n      if (state == 'R')\n        col[y + x - 1]++;\n      else if (state == 'U')\n        if (y % 2 != 0) col[x]++;\n      total++;\n    }\n    for (int i = 1; i <= m; i++) {\n      printf(\"%d\", col[i]);\n      if (i != m) printf(\" \");\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar s[2000][2005];\nint a[2000];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < (int)(n); i++) scanf(\"%s\", s[i]);\n  for (int i = 0; i < (int)(m); i++) a[i] = 0;\n  for (int i = 1; i < n; ++i)\n    for (int j = 0; j < (int)(m); j++) {\n      if (s[i][j] == 'U') {\n        if ((i & 1) == 0) ++a[j];\n      } else if (s[i][j] == 'R') {\n        if (j + i < m) ++a[j + i];\n      } else if (s[i][j] == 'L') {\n        if (j - i >= 0) ++a[j - i];\n      }\n    }\n  for (int i = 0; i < (int)(m); i++) printf(\"%d \", a[i]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "rr=raw_input\nN,M,K = map(int,rr().split())\nA = []\nfor i in xrange(N):\n    A.append(rr())\nans = [0 for i in xrange(M)]\nfor i in xrange(1,N):\n    for j in xrange(M):\n        z = A[i][j]\n        if z == 'U' and i%2==0: ans[j] += 1\n        elif z=='R' and j+i < M: ans[j+i] += 1\n        elif z=='L' and j-i >=0: ans[j-i] += 1\nprint \" \".join(map(str,ans))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar park[2007][2007];\nint res[2007];\nint n, m, k;\nbool check(int x) { return (x >= 0 && x < m); }\nint main() {\n  cin.sync_with_stdio(0);\n  cout.sync_with_stdio(0);\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) cin >> park[i][j];\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) {\n      char c = park[i][j];\n      if (c == 'R')\n        if (check(i + j)) res[i + j]++;\n      if (c == 'L')\n        if (check(j - i)) res[j - i]++;\n      if (c == 'U')\n        if (!(i & 1)) res[j]++;\n    }\n  for (int i = 0; i < m; i++) cout << res[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\n    public void solve() {\n        int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n        char[][] field = new char[n][];\n        for (int i = 0; i < n; i++) {\n            field[i] = in.nextToken().toCharArray();\n        }\n\n        int[] ans = new int[m];\n\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (field[i][j] == '.') {\n                    continue;\n                }\n\n                if (field[i][j] == 'D') {\n                    continue;\n                }\n\n                if (field[i][j] == 'U') {\n                    if (i % 2 == 0) {\n                        ans[j]++;\n                    }\n                }\n\n                if (field[i][j] == 'R') {\n                    if (i + j < m) {\n                        ans[i + j]++;\n                    }\n                }\n                if (field[i][j] == 'L') {\n                    if (j - i >= 0) {\n                        ans[j - i]++;\n                    }\n                }\n            }\n        }\n\n        for (int i = 0; i < m; i++) {\n            out.print(ans[i] + \" \");\n        }\n        out.println();\n    }\n\n    FastScanner in;\n    PrintWriter out;\n\n    public void run() {\n        try {\n            in = new FastScanner();\n            out = new PrintWriter(System.out);\n            solve();\n            out.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public FastScanner(String name) {\n            try {\n                br = new BufferedReader(new FileReader(name));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public String nextToken() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(nextToken());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(nextToken());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(nextToken());\n        }\n    }\n\n    public static void main(String[] args) {\n        new B().run();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n\npublic class Main {\n  public static void main (String[] args) throws IOException {\n    BufferedReader in = new BufferedReader (new InputStreamReader (System.in));\n    PrintWriter out = new PrintWriter (System.out, true);\n    \n    StringTokenizer st = new StringTokenizer (in.readLine());\n    int N = Integer.parseInt(st.nextToken()), M = Integer.parseInt(st.nextToken()), K = Integer.parseInt(st.nextToken());\n    char[][] grid = new char[N][M];\n    for (int i = 0; i < N; i++) grid[i] = in.readLine().toCharArray();\n    \n    int[] ans = new int[M];\n    int[] dx = {-1, 0, 1, 0}, dy = {0, -1, 0, 1};\n    char[] exp = {'D', 'R', 'U', 'L'};\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < M; j++) {\n        for (int k = 0; k < 4; k++) {\n          int nx = i + dx[k] * i, ny = j + dy[k] * i;\n          if (nx < 0 || nx >= N || ny < 0 || ny >= M) continue;\n          if (grid[nx][ny] == exp[k]) ans[j]++;\n        }\n      }\n    }\n    \n    out.print(ans[0]);\n    for (int i = 1; i < M; i++) {\n      out.print(\" \" + ans[i]);\n    }\n    out.println();\n    out.close();\n    System.exit(0);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CF436B {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint k = Integer.parseInt(st.nextToken());\n\t\tchar[][] cc = new char[n][m];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tbr.readLine().getChars(0, m, cc[i], 0);\n\t\tint[] aa = new int[m];\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tchar c = cc[i][j];\n\t\t\t\tif (c == 'U' && i % 2 == 0)\n\t\t\t\t\taa[j]++;\n\t\t\t\telse if (c == 'L' && j - i >= 0)\n\t\t\t\t\taa[j - i]++;\n\t\t\t\telse if (c == 'R' && j + i < m)\n\t\t\t\t\taa[j + i]++;\n\t\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int j = 0; j < m; j++)\n\t\t\tsb.append(aa[j] + \" \");\n\t\tSystem.out.println(sb);\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar s[2010][2010];\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", s + i);\n  for (int i = 0; i < m; i++) {\n    int r = 0;\n    for (int j = 1; j < n; j++) {\n      if (2 * j < n && s[2 * j][i] == 'U') r++;\n      if (i >= j && s[j][i - j] == 'R') r++;\n      if (j + i < m && s[j][i + j] == 'L') r++;\n    }\n    printf(\"%d \", r);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.Reader;\nimport java.io.UnsupportedEncodingException;\nimport java.text.DecimalFormat;\nimport java.util.StringTokenizer;\n\npublic class B {\n    private final static long START_TIME=System.currentTimeMillis();\n    private final static boolean LOG_ENABLED=true;\n    private final static boolean ONLINE_JUDGE = LOG_ENABLED && (System.getProperty(\"ONLINE_JUDGE\") != null);\n    private final static String SYSTEM_ENCODING=\"utf-8\";\n\n\n    private static class Logger{\n        private final PrintWriter logWriter=Util.newPrintWriter(System.err,true);\n        private final DecimalFormat df=new DecimalFormat(\"0.000\");\n        private void message(String type, String message, Object ... params){\n            if(ONLINE_JUDGE){\n                return;\n            }\n            logWriter.printf(\"[\"+type+\"] \"+df.format((System.currentTimeMillis()-START_TIME)/1000.0)+\": \"+message+\"\\r\\n\", params);\n        }\n        public void debug(String message, Object ... params){\n            message(\"DEBUG\", message, params);\n        }\n    }\n\n    private final static class Util{\n        public static PrintWriter newPrintWriter(OutputStream out, boolean autoFlush){\n            try {\n                return new PrintWriter(new OutputStreamWriter(new BufferedOutputStream(out), SYSTEM_ENCODING),autoFlush);\n            } catch (UnsupportedEncodingException e) {\n                throw new IllegalStateException(e);\n            }\n        }\n    }\n\n    public final static class FastScanner{\n        private BufferedReader reader;\n        private StringTokenizer currentTokenizer;\n        public FastScanner(Reader reader) {\n            if(reader instanceof BufferedReader){\n                this.reader=(BufferedReader) reader;\n            }else{\n                this.reader=new BufferedReader(reader);\n            }\n        }\n\n        public String next(){\n            if(currentTokenizer==null || !currentTokenizer.hasMoreTokens()){\n                try {\n                    currentTokenizer=new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new IllegalStateException(e);\n                }\n            }\n\n            return currentTokenizer.nextToken();\n        }\n        public int nextInt(){\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble(){\n            return Double.parseDouble(next());\n        }\n\n    }\n\n    private final static Logger log=new Logger();\n    private final BufferedReader reader;\n    private final FastScanner in;\n    private final PrintWriter out=Util.newPrintWriter(System.out,false);\n\n    public B(BufferedReader reader){\n        this.reader=reader;\n        in=new FastScanner(this.reader);\n    }\n\n    public static void main(String[] args) throws IOException {\n        log.debug(\"Started\");\n        try{\n            new B(new BufferedReader(new InputStreamReader(System.in, SYSTEM_ENCODING))).run();\n        }finally{\n            log.debug(\"Stopped\");\n        }\n    }\n\n    void run(){\n        solve();\n        out.flush(); \n    }\n\n    private void solve(){\n        int n = in.nextInt(); \n        int m = in.nextInt(); \n        int k = in.nextInt();\n        char [][] field=new char[n][m];\n        for(int r=0;r<n;r++){\n            field[r]=in.next().toCharArray();\n        }\n        for(int c=0;c<m;c++){\n            if(c>0){\n                out.print(\" \");\n            }\n            out.print(getCount(c,field, n, m));\n        }\n        out.println();\n    }\n\n    private int getCount(int c, char[][] field,int n, int m) {\n        int result=0;\n        for(int i=0;i<n;i++){\n            if(field[i][c]=='U'&&i%2==0){\n                result++;\n            }\n            int rc = c-i;\n            if(rc>=0 && field[i][rc]=='R'){\n                result++;\n            }\n            int lc = c+i;\n            if(lc<m && field[i][lc]=='L'){\n                result++;\n            }\n        }\n        return result;\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "def solve():\n    answer = [0] * m\n    for i in range(1, n):\n        for j in range(m):\n            if j - i >= 0:\n                if park[i][j - i] == 'R':\n                    answer[j] += 1\n            if j + i < m:\n                if park[i][j + i] == 'L':\n                    answer[j] += 1\n            if 2 * i < n:\n                if park[2 * i][j] == 'U':\n                    answer[j] += 1\n    return answer\n\nn, m, k = tuple(map(int, input().split()))\npark = [input() for i in range(n)]\nprint(' '.join(map(str, solve())))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1000000007;\nconst double PI = acos(-1.0);\nconst double EPS = 1e-10;\nint in() {\n  int r = 0, c;\n  for (c = getchar(); c <= 32; c = getchar())\n    ;\n  if (c == '-') return -in();\n  for (; c > 32; r = (r << 1) + (r << 3) + c - '0', c = getchar())\n    ;\n  return r;\n}\nchar str[3000];\nint mat[2020][2020];\nint col[3000];\nint main() {\n  int n = in();\n  int m = in();\n  int k = in();\n  memset(col, 0, sizeof col);\n  int i, j;\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", str);\n    for (j = 0; j < m; j++) {\n      if (str[j] == 'L')\n        if (j - i >= 0) col[j - i]++;\n      if (str[j] == 'R')\n        if (j + i < m) col[j + i]++;\n      if (str[j] == 'U')\n        if (i % 2 == 0) col[j]++;\n    }\n  }\n  for (i = 0; i < m; i++) cout << col[i] << ' ';\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[2005][2005];\nint main() {\n  int n, m, k;\n  int i, j;\n  int b[2005];\n  memset(b, 0, sizeof b);\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 0; i < n; i++) scanf(\"%s\", a[i]);\n  for (i = 1; i < n; i++)\n    for (j = 0; j < m; j++) {\n      if (a[i][j] == 'R' && i + j < m) b[i + j]++;\n      if (a[i][j] == 'L' && j - i >= 0) b[j - i]++;\n      if (a[i][j] == 'U') {\n        if (i % 2 == 0) b[j]++;\n      }\n    }\n  for (i = 0; i < m; i++) printf(\"%d \", b[i]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2000 + 10;\nint n, m, k;\nchar G[maxn][maxn];\ninline bool check(int x, int y) {\n  if (x > 0 && x < n && y >= 0 && y < m) return 1;\n  return 0;\n}\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", G[i]);\n  for (int j = 0; j < m; j++) {\n    int cnt = 0;\n    for (int i = 1; i < n; i++) {\n      if (check(i, j - i) && G[i][j - i] == 'R') cnt++;\n      if (check(i, j + i) && G[i][j + i] == 'L') cnt++;\n      if (check(i + i, j) && G[i + i][j] == 'U') cnt++;\n    }\n    printf(\"%d \", cnt);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2010;\nchar grid[MAXN][MAXN];\nint N, M, K;\nint l[MAXN];\nint r[MAXN];\nint u[MAXN];\nint main(void) {\n  scanf(\"%d%d%d\", &N, &M, &K);\n  for (int i = 0; i < N; ++i) {\n    scanf(\"%s\", grid[i]);\n    for (int j = 0; j < M; ++j) {\n      if (grid[i][j] == 'U' && (i & 1) == 0) ++u[j];\n      if (grid[i][j] == 'R' && i + j < MAXN - 1) ++r[i + j];\n      if (grid[i][j] == 'L' && j - i >= 0) ++l[j - i];\n    }\n  }\n  for (int i = 0; i < M; ++i) {\n    printf(\"%d \", u[i] + r[i] + l[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n/**\n *\n * @author sousnake\n */\npublic class B {\n    public static void main(String argss[]) throws IOException{\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String s [] =br.readLine().split(\" \");\n        int n = Integer.parseInt(s[0]);\n        int m = Integer.parseInt(s[1]);\n        int k = Integer.parseInt(s[2]);\n        char arr[] []= new char[n][m];\n        for(int i=0;i<n;i++){\n            String ss = br.readLine();\n            for(int j=0;j<m;j++){\n                arr[i][j] = ss.charAt(j);\n            }\n        }\n        int ans[] = new int[m];\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(j==0)\n                    continue;\n                else{\n                    int time=j;\n                    if((j+time<n)&&arr[j+time][i]=='U')\n                        ans[i]++;\n                    if(j-time>=0&&arr[j-time][i]=='D')\n                        ans[i]++;\n                    if(i-time>=0&&arr[j][i-time]=='R')\n                        ans[i]++;\n                    if(i+time<m&&arr[j][i+time]=='L')\n                        ans[i]++;\n                }\n            }\n        }\n        for(int i=0;i<m;i++){\n            if(i==m-1)\n                System.out.print(ans[i]);\n            else System.out.print(ans[i]+\" \");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long INF = 20000000000000005ll;\nconst long long MOD = 1000000007;\nint H, W, A[2005], K;\nint main() {\n  cin >> H >> W >> K;\n  for (int i = (0); i <= (H - 1); i++) {\n    string s;\n    cin >> s;\n    for (int j = (0); j <= (W - 1); j++)\n      if (s[j] == 'U' && i % 2 == 0)\n        A[j]++;\n      else if (s[j] == 'L' && j - i >= 0)\n        A[j - i]++;\n      else if (s[j] == 'R' && j + i < W)\n        A[j + i]++;\n  }\n  for (int i = (0); i <= (W - 1); i++) cout << A[i] << \" \";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.io.PrintStream;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.io.PrintWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author desc\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tScanner in = new Scanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, Scanner in, PrintWriter out) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        in.nextLine();\n        char[][] g = new char[n][m];\n        for (int i = 0; i < n; i++) {\n            g[i] = in.nextLine().trim().toCharArray();\n            System.err.printf(\"%s\\n\", Arrays.toString(g[i]));\n        }\n\n        // column s\n        for (int s = 0; s < m; s++) {\n            int tot = 0;\n            for (int i = 0; i < n; i++) {\n                if ( g[i][s] == 'U' && i % 2 == 0 ) tot++;\n            }\n            for (int i = 1; i < n; i++) {\n                if (s+i < m && g[i][s+i] == 'L') tot++;\n                if (s-i >= 0 && g[i][s-i] == 'R') tot++;\n            }\n\n            out.print(tot + \" \");\n        }\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.util.Comparator;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\nimport java.io.Writer;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Nguyen Trung Hieu - vuondenthanhcong11@yahoo.com\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n        int rowCount = in.readInt();\n        int columnCount = in.readInt();\n        int spiderCount = in.readInt();\n        char[][] table = IOUtils.readTable(in, rowCount, columnCount);\n\n        int[] answer = new int[columnCount];\n\n        for (int i = 0; i < rowCount; i++)\n            for (int j = 0; j < columnCount; j++) {\n                if (table[i][j] == '.')\n                    continue;\n                if (table[i][j] == 'R' && (j + i) < columnCount)\n                    answer[i + j]++;\n                if (table[i][j] == 'L' && (j - i) >= 0)\n                    answer[j - i]++;\n                if (table[i][j] == 'U' && i % 2 == 0)\n                    answer[j]++;\n            }\n\n        out.printLine(answer);\n    }\n}\n\nclass InputReader {\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private SpaceCharFilter filter;\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n    public int read() {\n        if (numChars == -1)\n            throw new InputMismatchException();\n        if (curChar >= numChars) {\n            curChar = 0;\n            try {\n                numChars = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (numChars <= 0)\n                return -1;\n        }\n        return buf[curChar++];\n    }\n\n    public int readInt() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int res = 0;\n        do {\n            if (c < '0' || c > '9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public boolean isSpaceChar(int c) {\n        if (filter != null)\n            return filter.isSpaceChar(c);\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public char readCharacter() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        return (char) c;\n    }\n\n    public interface SpaceCharFilter {\n        public boolean isSpaceChar(int ch);\n    }\n\n}\n\nclass OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n        this.writer = new PrintWriter(writer);\n    }\n\n    public void print(int[] array) {\n        for (int i = 0; i < array.length; i++) {\n            if (i != 0)\n                writer.print(' ');\n            writer.print(array[i]);\n        }\n    }\n\n    public void printLine(int[] array) {\n        print(array);\n        writer.println();\n    }\n\n    public void close() {\n        writer.close();\n    }\n\n}\n\nclass IOUtils {\n\n    public static char[] readCharArray(InputReader in, int size) {\n        char[] array = new char[size];\n        for (int i = 0; i < size; i++)\n            array[i] = in.readCharacter();\n        return array;\n    }\n\n    public static char[][] readTable(InputReader in, int rowCount, int columnCount) {\n        char[][] table = new char[rowCount][];\n        for (int i = 0; i < rowCount; i++)\n            table[i] = readCharArray(in, columnCount);\n        return table;\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid relax(T &a, T b) {\n  a = min(a, b);\n}\ntemplate <class T>\nvoid mrelax(T &a, T b) {\n  a = max(a, b);\n}\nint n, m, k;\nchar p[2010][2010];\nbool check(int x, int y) { return x >= 0 && y >= 0 && x < n && y < m; }\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < (int)n; i++) scanf(\"%s\", p[i]);\n  for (int j = 0; j < (int)m; j++) {\n    int cnt = 0;\n    for (int i = 0; i < (int)n; i++) {\n      if (check(i, j - i) && p[i][j - i] == 'R') ++cnt;\n      if (check(0, j) && p[0][j] == 'D') ++cnt;\n      if (check(i, i + j) && p[i][j + i] == 'L') ++cnt;\n      if (check(i + i, j) && p[i + i][j] == 'U') ++cnt;\n    }\n    printf(\"%d \", cnt);\n  }\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\n\npublic class Main {\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n    \n    \n    static void solve() throws Exception {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        char[][] a = new char[n][m];\n        for (int i = 0; i < n; i++) {\n            a[i] = next().toCharArray();\n        }\n        int[] res = new int[m];\n        for (int j = 0; j < m; j++) {\n            for (int i = 0; i < n; i++) {\n                if (a[0][j] == 'D') {\n                    res[j]++;\n                }\n                if (i+i < n && a[i+i][j] == 'U') {\n                    res[j]++;\n                }\n                if (j-i >= 0 && a[i][j-i] == 'R') {\n                    res[j]++;\n                }\n                if (j+i < m && a[i][j+i] == 'L') {\n                    res[j]++;\n                }\n            }\n        }\n        for (int i = 0; i < m; i++) {\n            out.print(res[i] + \" \");\n        }\n        out.println();\n    }\n        \n    static int gcd(int a, int b) {\n        if (b == 0) {\n            return a;\n        } else {\n            return gcd(b, a % b);\n        }\n    }\n    \n    static int sqr(int x) {\n        return x*x;\n    }\n    \n    static int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    static long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    static double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n\n    static BigInteger nextBigInteger() throws IOException {\n        return new BigInteger(next());\n    }\n    \n    static String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n    \n    static String nextLine() throws IOException {\n        tok = new StringTokenizer(\"\");\n        return in.readLine();\n    }\n\n    static boolean hasNext() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            String s = in.readLine();\n            if (s == null) {\n                return false;\n            }\n            tok = new StringTokenizer(s);\n        }\n        return true;\n    }\n\n    public static void main(String args[]) {\n        try {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(new OutputStreamWriter(System.out));\n            //in = new BufferedReader(new FileReader(\"input.in\"));\n            //out = new PrintWriter(new FileWriter(\"output.out\"));\n            solve();\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            java.lang.System.exit(1);\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Spiders {\n\tpublic static final int [][] step = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}}; // D, R, U, L\n\t\n\tpublic static void main(String[] args) {\n\t\tclass pos {\n\t\t\tpublic int i;\n\t\t\tpublic int j;\n\t\t\tpublic int dir;\n\n\t\t\t\n\t\t\tpublic pos(int i, int j, int dir) {\n\t\t\t\tsuper();\n\t\t\t\tthis.i = i;\n\t\t\t\tthis.j = j;\n\t\t\t\tthis.dir = dir;\n\t\t\t}\n\n\n\t\t\t@Override\n\t\t\tpublic String toString() {\n\t\t\t\treturn \"pos [i=\" + i + \", j=\" + j + \", dir=\" + dir + \"]\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tScanner input = new Scanner(System.in);\n\t\t\n\t\tint n = input.nextInt();\n\t\tint m = input.nextInt();\n\t\tint k = input.nextInt();\n\t\tinput.nextLine();\n\t\t\n\t\t//Map<pos, Integer> spiderPos = new HashMap<pos, Integer>();\n\t\tList<pos> spiderPos = new ArrayList<pos>();\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString line = input.nextLine();\n\t\t\t\n\t\t\tfor (int j = 0; j < line.length(); j++) {\n\t\t\t\tchar c = line.charAt(j);\n\n\t\t\t\tif (c != '.') {\n\t\t\t\t\tint dir = -1;\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'D':\n\t\t\t\t\t\tdir = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'U':\n\t\t\t\t\t\tdir = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tdir = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tspiderPos.add(new pos(i,j, dir));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint [] seeSpiderCount = new int[m];\n//\t\t\n//\t\tfor (int t = 1; t < n; t++) {\n//\t\t\t// update pos\n\t\t\tfor (int i = 0; i < spiderPos.size(); i++) {\n\t\t\t\tpos spider = spiderPos.get(i);\n\t\t\t\t\n\t\t\t\tint dir = spider.dir;\n\t\t\t\t\n//\t\t\t\tspider.i += step[dir][0];\n//\t\t\t\tspider.j += step[dir][1];\n//\t\t\t\t\n//\t\t\t\tif (spider.i == t && spider.j >= 0 && spider.j < m) {\n//\t\t\t\t\tseeSpiderCount[spider.j]++;\n//\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (dir == 1) {\n\t\t\t\t\tif ((spider.j + spider.i) >= 0 && (spider.j + spider.i) < m) {\n\t\t\t\t\t\tseeSpiderCount[spider.j + spider.i]++;\n\t\t\t\t\t}\n\t\t\t\t} else if (dir == 3) {\n\t\t\t\t\tif ((spider.j - spider.i) >= 0 && (spider.j - spider.i) < m) {\n\t\t\t\t\t\tseeSpiderCount[spider.j - spider.i]++;\n\t\t\t\t\t}\n\t\t\t\t} else if (dir == 2 && (spider.i % 2 == 0)) {\n\t\t\t\t\tseeSpiderCount[spider.j]++;\n\t\t\t\t}\n\t\t\t}\n//\t\t}\n\t\t\n\t\tfor (int cnt : seeSpiderCount) {\n\t\t\tSystem.out.print(cnt + \" \");\n\t\t}\n\t\t\n\t\tinput.close();\n\t\t\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ans[5001];\nint t, n, m;\nchar s[5001];\nint main() {\n  int n, m, t;\n  scanf(\"%d%d%d\", &n, &m, &t);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", s);\n    for (int j = 0; j < m; j++)\n      if (s[j] != '.') {\n        if (s[j] == 'D')\n          continue;\n        else if (s[j] == 'U' && (i % 2 == 0))\n          ans[j]++;\n        else if (s[j] == 'L' && j - i >= 0)\n          ans[j - i]++;\n        else if (s[j] == 'R' && j + i < m)\n          ans[i + j]++;\n      }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n     \n    public class Main2 {\n     \n    public static void main(String[] args) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] s = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(s[0]);\n\t\tint m = Integer.parseInt(s[1]);\n\t\tint k = Integer.parseInt(s[2]);\n\t\tString[] str = new String[n];\n\t\tfor(int i = 0 ; i < n ; i++){\n\t\t\tstr[i] = br.readLine();\n\t\t}\n\t\tint[] counted = new int[m];\n\t\tfor(int i = 0 ; i < m ; i++){\n\t\t\tint count = 0;\n\t\t\tfor(int j = 1 ; j < n ; j++){\n\t\t\t\t\n\t\t\t\tif(i-j >= 0 && str[j].charAt(i-j) == 'R'){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(i+j < m && str[j].charAt(i+j) == 'L'){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(j+j < n && str[j+j].charAt(i) == 'U'){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcounted[i] = count;\n\t\t}\n\t\tfor(int i = 0 ; i < counted.length ; i++){\n\t\t\tif(i != counted.length-1){\n\t\t\t\tSystem.out.print(counted[i]+\" \");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(counted[i]);\n\t\t\t}\n\t\t}\n\t}\n    \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nint ans[2005];\nchar mat[2005][2005];\nvoid read() {\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 1; i <= n; i++) scanf(\"%s\", mat[i] + 1);\n  return;\n}\nvoid solve() {\n  int i, j;\n  for (i = 1; i <= n; i++)\n    for (j = 1; j <= m; j++)\n      if (mat[i][j] == 'R') {\n        int t = j + (i - 1);\n        if (t <= m) ans[t]++;\n      } else if (mat[i][j] == 'L') {\n        int t = j - (i - 1);\n        if (t >= 1) ans[t]++;\n      } else if (mat[i][j] == 'U')\n        if (i & 1) ans[j]++;\n  for (i = 1; i <= m; i++) printf(\"%d \", ans[i]);\n  puts(\"\");\n  return;\n}\nint main() {\n  read();\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[2222];\nint n, m, k;\nvector<char> spiders[2222];\nstring ss[2222];\nint main(void) {\n  cin >> n >> m >> k;\n  for (int i = (0); i < (n); i++) cin >> ss[i];\n  for (int i = (0); i < (n); i++) {\n    for (int j = (0); j < (m); j++) {\n      if (i > 0) {\n        if (ss[i][j] == 'U' && i % 2 == 0) a[j]++;\n        if (ss[i][j] == 'D')\n          ;\n        if (ss[i][j] == 'R') {\n          if (j + i < m) a[j + i]++;\n        }\n        if (ss[i][j] == 'L') {\n          if (j - i >= 0) a[j - i]++;\n        }\n      }\n    }\n  }\n  for (int i = (0); i < (m); i++) cout << a[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\n\npublic class OmNomAndSpiders {\n    public static void main(String[] args) throws IOException\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int m = Integer.parseInt(st.nextToken());\n        int k = Integer.parseInt(st.nextToken());\n        int[] ans = new int[m];\n        char[][]a = new char[n][m];\n        for (int i = 0; i < n; i++) {\n            String s = br.readLine();\n            for (int j = 0; j < m; j++) {\n                a[i][j] = s.charAt(j);\n            }\n        }\n        for(int i = 0; i < m; i++) {\n            for(int j = 1; j < n; j++) {\n                if(2*j < n && a[2*j][i]=='U')\n                    ans[i]++;\n                if(i-j>=0&& a[j][i-j]=='R')\n                    ans[i]++;\n                if(i+j<m&& a[j][i+j]=='L')\n                    ans[i]++;\n            }\n            \n        }\n        out.print(ans[0]);\n        for(int i = 1; i < m; i++) {\n            out.print(\" \" + ans[i]);\n        }\n        out.flush();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\n/**\n *\n * @author Mbt\n */\npublic class B {\n\n    public static void main(String[] args) throws IOException {\n        new Solver().solve();\n    }\n}\n\nclass Solver{\n    final int MAXN= 2001;\n    char[][] field= new char[MAXN][];\n    int[] seenSpiders= new int[MAXN]; // seen spiders from each start\n    \n    void solve() throws IOException{\n        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer reader= new StringTokenizer(br.readLine());\n        int n= Integer.parseInt(reader.nextToken());\n        int m= Integer.parseInt(reader.nextToken());\n        int k= Integer.parseInt(reader.nextToken());\n        \n        for (int i = 0; i < n; i++)\n            field[i]= br.readLine().toCharArray();\n        \n        // check all spiders\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < m; j++){\n                if (field[i][j]!='.'){ // there is a spider\n                    switch(field[i][j]){\n                        case 'R':\n                            int diffUntilEndOfRight= m-j-1;\n                            if (i<=diffUntilEndOfRight)\n                                seenSpiders[j+i+1]++;\n                            break;\n                        case 'L':\n                            int diffUntilEndOfLeft= j;\n                            if (i<=diffUntilEndOfLeft)\n                                seenSpiders[j-i+1]++;\n                            break;\n                        case 'U':\n                            if ((i%2)==0)\n                                seenSpiders[j+1]++;\n                            break;\n                    }\n                }\n            }\n        System.out.print(seenSpiders[1]);\n        for (int i = 2; i <= m; i++)\n            System.out.print(\" \" + seenSpiders[i]);    \n    }\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\n\npublic class B {\n\n    \n    static void solve(char[][] f, int k, int[] out) {\n        int n=f.length, m=f[0].length;\n        \n        for (int col=0; col<m; col++) {\n            for (int row=0; row<n; row++) {\n                if(row+row<n&&f[row+row][col]=='U') {\n                    out[col]++;\n                } \n                if(row+col<m&&f[row][row+col]=='L') {\n                    out[col]++;\n                } \n                if(col-row>=0&&f[row][col-row]=='R') {\n                    out[col]++;\n                }\n            }\n        }\n    }\n    \n    static void run_stream(InputStream ins) throws IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String[] nmk=br.readLine().split(\" \");\n        int n=Integer.parseInt(nmk[0]);\n        int m=Integer.parseInt(nmk[1]);\n        int k=Integer.parseInt(nmk[2]);\n        \n        char[][] f=new char[n][];\n        for (int i=0; i<n; i++) {\n            f[i]=br.readLine().toCharArray();\n        }\n        \n        int[] out=new int[m];\n        solve(f, k, out);\n        \n        StringBuilder sb=new StringBuilder();\n        for (int i=0; i<m; i++) {\n            sb.append(out[i]+\" \");\n        }\n        System.out.println(sb.toString());\n    }\n\n    public static void main(String[] args) throws IOException {\n        run_stream(System.in);\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\n/**\n * \u0417\u0430\u0434\u0430\u0447\u0430 \u21162 \u043a\u043e\u043d\u043a\u0443\u0440\u0441 \u0417\u0430\u043f\u0442\u043e\u043b\u0430\u0431 2014\n * Created by Yakunina on 16.03.15.\n */\npublic class Zeptolab_n2 {\n\n    static int ROW = -1;\n    static  int COLUMN = -1;\n    static  int SPIDER = -1;\n    static char[][] FIELD_START = null;\n\n    public static void main(String[] args)\n    {\n        // \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n        Scanner in = new Scanner(System.in);\n        ROW = in.nextInt();\n        COLUMN = in.nextInt();\n        SPIDER = in.nextInt();\n\n        FIELD_START = new char[ROW][COLUMN];\n        for(int i = 0; i < ROW; i++)\n        {\n            String row = in.next(); //type\n            for (int j = 0; j < COLUMN; j++) {\n                FIELD_START[i][j] = row.charAt(j);\n            }\n        }\n\n        // \u043e\u0431\u0449\u0435\u0435 \u0447\u0438\u0441\u043b\u043e \u0448\u0430\u0433\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0434\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c (\u0448\u0430\u0433-\u0432\u044b\u043f\u0440\u044b\u0433\u0438\u0432\u0430\u043d\u0438\u0435 \u0438\u0437 \u043f\u0430\u0440\u043a\u0430 \u043c\u043e\u0436\u043d\u043e \u043d\u0435 \u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0442\u0430\u043c \u043d\u0435\u0442 \u043f\u0430\u0443\u043a\u043e\u0432)\n        int stepsNum = ROW - 1;\n\n        // \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0430\u0443\u043a\u043e\u0432 \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u043b\u043e\u0441\u044c \u043d\u0430 \u043f\u0443\u0442\u0438\n        int[] meetingSpidersNum = new int[COLUMN];\n\n        // \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043c\u043e\u043c\u0435\u043d\u0442\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n        for (int t = 0; t < stepsNum; t++)\n        {\n            // \u043f\u043e \u0432\u0441\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\n            for (int j = 0; j < COLUMN; j++)\n            {\n                // \u043f\u0440\u0438\u0448\u0435\u0434\u0448\u0438\u0435 \u0441\u043f\u0440\u0430\u0432\u0430 L\n                int spiderL = j + (t + 1);\n                if (spiderL < COLUMN)\n                    if (FIELD_START[t + 1][spiderL] == 'L') meetingSpidersNum[j]++;//{meetingSpidersNum[j]++;System.out.println(\"add L (j = \" + j + \")\");}\n\n                // \u043f\u0440\u0438\u0448\u0435\u0434\u0448\u0438\u0435 \u0441\u043b\u0435\u0432\u0430 R\n                int spiderR = j - (t + 1);\n                if (spiderR >= 0)\n                    if (FIELD_START[t + 1][spiderR] == 'R') meetingSpidersNum[j]++;//{meetingSpidersNum[j]++;System.out.println(\"add R (j = \" + j + \")\");}\n\n                // \u043f\u0440\u0438\u0448\u0435\u0434\u0448\u0438\u0435 \u0441\u043d\u0438\u0437\u0443 U\n                int spiderU = t + t;\n                if (spiderU < ROW)\n                    if (FIELD_START[spiderU][j] == 'U') meetingSpidersNum[j]++;//{meetingSpidersNum[j]++;System.out.println(\"add U (j = \" + j + \")\");}\n\n                // \u043f\u0440\u0438\u0448\u0435\u0434\u0448\u0438\u0435 \u0441\u0432\u0435\u0440\u0445\u0443 \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c, \u0442\u0430\u043a \u043a\u0430\u043a \u0441 \u043d\u0438\u043c\u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u043c\u0441\u044f\n\n            }\n\n            /*String s = \"\";\n            for (int i = 0; i < meetingSpidersNum.length; i++)\n            {\n                s+= meetingSpidersNum[i] + \" \";\n            }\n            System.out.println(\"t = \" + t  + \": \" + s);\n            */\n        }\n\n        String s = \"\";\n        for (int i = 0; i < meetingSpidersNum.length; i++)\n        {\n            s+= meetingSpidersNum[i] + \" \";\n        }\n\n\n        System.out.println(s);\n\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nstruct T {\n  int h, m;\n};\nbool fn(T a, T b) { return (a.h < b.h); }\nusing namespace std;\nint main() {\n  int n, m, k, i, j;\n  cin >> n >> m >> k;\n  int ans[m];\n  string map[n];\n  for (i = 0; i < m; i++) ans[i] = 0;\n  for (i = 0; i < n; i++) cin >> map[i];\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      if (map[i][j] == 'U' && i % 2 == 0)\n        ans[j]++;\n      else if (map[i][j] == 'R') {\n        if ((i + j) < m) ans[i + j]++;\n      } else if (map[i][j] == 'L') {\n        if (j >= i) ans[j - i]++;\n      }\n    }\n  }\n  for (i = 0; i < m; i++) cout << ans[i] << \" \";\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar MAP[2001][2001];\nint gb(int n, int m, int x, int y) {\n  int ans = 0;\n  if (x - y >= 0 && MAP[y][x - y] == 'R') ans++;\n  if (x + y < m && MAP[y][x + y] == 'L') ans++;\n  if (y * 2 < n && MAP[y * 2][x] == 'U') ans++;\n  return ans;\n}\nint main() {\n  int n, m, k;\n  int i, j;\n  cin >> n >> m >> k;\n  for (i = 0; i < n; i++) cin >> MAP[i];\n  for (i = 0; i < m; i++) {\n    int ans = 0;\n    for (j = 1; j < n; j++) {\n      ans += gb(n, m, i, j);\n    }\n    cout << ans;\n    if (i < m - 1)\n      cout << ' ';\n    else\n      cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2005;\nchar ma[N][N];\nint main() {\n  std::ios::sync_with_stdio(false);\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      cin >> ma[i][j];\n    }\n  }\n  for (int j = 0; j < m; ++j) {\n    int res = 0;\n    for (int i = 1; i < n; ++i) {\n      if (j - i >= 0) res += (int)(ma[i][j - i] == 'R');\n      if (j + i < m) res += (int)(ma[i][j + i] == 'L');\n      if (i + i < n) res += (int)(ma[2 * i][j] == 'U');\n    }\n    cout << res << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\n\t// split de array\n\tpublic static int[] readInts(String cad) {\n\t\tString read[] = cad.split(\" \");\n\t\tint res[] = new int[read.length];\n\t\tfor (int i = 0; i < read.length; i++) {\n\t\t\tres[i] = Integer.parseInt(read[i]);\n\t\t}\n\t\treturn res;\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tlong inicio = System.currentTimeMillis();\n\t\tStringBuilder out = new StringBuilder();\n\t\tBufferedReader in;\n\t\tFile archivo = new File(\"entrada\");\n\t\tif (archivo.exists())\n\t\t\tin = new BufferedReader(new FileReader(archivo));\n\t\telse\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tint arr[] = readInts(in.readLine());\n\t\tint n = arr[0];\n\t\tint m = arr[1];\n\t\tint k = arr[2];\n\n\t\tchar map[][] = new char[n][];\n\t\tfor (int i = 0; i < map.length; i++) {\n\t\t\tmap[i] = in.readLine().toCharArray();\n\t\t}\n\t\tint cont = 0;\n\t\tfor (int i = 0; i < map[0].length; i++) {\n\t\t\tcont = 0;\n\t\t\tint r = i - 1;\n\t\t\tint f = i + 1;\n\t\t\tfor (int j = 1; j < map.length; j++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tif (f < map[0].length && map[j][f] == 'L') {\n\t\t\t\t\t\tcont++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j + j < map.length && map[j + j][i] == 'U') {\n\t\t\t\t\t\tcont++;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (i == map[0].length - 1) {\n\t\t\t\t\tif (r >= 0 && map[j][r] == 'R') {\n\t\t\t\t\t\tcont++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j + j < map.length && map[j + j][i] == 'U') {\n\t\t\t\t\t\tcont++;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tif (f < map[0].length && map[j][f] == 'L') {\n\t\t\t\t\t\tcont++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (r >= 0 && map[j][r] == 'R') {\n\t\t\t\t\t\tcont++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (j + j < map.length && map[j + j][i] == 'U') {\n\t\t\t\t\t\tcont++;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tr--;\n\t\t\t\tf++;\n\t\t\t}\n\n\t\t\tout.append(cont);\n\t\t\tout.append(\" \");\n\n\t\t}\n\t\tout.deleteCharAt(out.length() - 1);\n\t\tout.append(\"\\n\");\n\t\tSystem.out.print(out);\n\t\tif (archivo.exists())\n\t\t\tSystem.out.println(\"Tiempo transcurrido : \"\n\t\t\t\t\t+ (System.currentTimeMillis() - inicio) + \" milisegundos.\");\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios::sync_with_stdio(0);\n  int N, M, K;\n  cin >> N >> M >> K;\n  vector<string> mat(N);\n  for (int i = 0; i < N; ++i) {\n    cin >> mat[i];\n  }\n  for (int i = 0; i < M; ++i) {\n    int ans = 0;\n    for (int j = 0; j < N; ++j) {\n      const int dy[] = {0, 1, 0, -1};\n      const int dx[] = {1, 0, -1, 0};\n      const string dir = \"LURD\";\n      for (int di = 0; di < 4; ++di) {\n        int ni = i + dx[di] * j;\n        int nj = j + dy[di] * j;\n        if (not(0 <= ni and ni < M and 0 <= nj and nj < N)) continue;\n        ans += mat[nj][ni] == dir[di];\n      }\n    }\n    cout << ans << \" \\n\"[i + 1 == M];\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[2222][2222];\nint a[2222];\nint main() {\n  int i, j, n, m, k;\n  cin >> n >> m >> k;\n  for (i = 0; i < n; i++) cin >> s[i];\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      if (s[i][j] == 'U') {\n        if (i % 2 == 0) a[j]++;\n      } else if (s[i][j] == 'R') {\n        if (i + j < m) a[i + j]++;\n      } else if (s[i][j] == 'L') {\n        if (j - i >= 0) a[j - i]++;\n      }\n    }\n  }\n  for (i = 0; i < m; i++) cout << a[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package codeforces;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class B {\n    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n    PrintWriter writer = new PrintWriter(System.out);\n    StringTokenizer stringTokenizer;\n\n    String next() throws IOException {\n        while (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {\n            stringTokenizer = new StringTokenizer(reader.readLine());\n        }\n        return stringTokenizer.nextToken();\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        int[] ans = new int[m];\n        for(int i = 0; i < n; i++) {\n            char[] row = next().toCharArray();\n            for(int j = 0; j < m; j++) {\n                if(row[j] == 'U' && i % 2 == 0) {\n                    ans[j]++;\n                }\n                if(row[j] == 'L' && j - i >= 0) {\n                    ans[j - i]++;\n                }\n                if(row[j] == 'R' && j + i < m) {\n                    ans[j + i]++;\n                }\n            }\n        }\n        for (int x : ans) {\n            writer.print(x + \" \");\n        }\n        writer.close();\n    }\n\n    public static void main(String[] args) throws IOException {\n        new B().solve();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.text.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out) );\n\tstatic BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\tstatic StringTokenizer st = new StringTokenizer(\"\");\n\tstatic String next() throws Exception {\n\n\t\twhile (!st.hasMoreTokens()) {\n\t\t\tString s = br.readLine();\n\t\t\tif (s == null)\n\t\t\t\treturn null;\n\t\t\tst = new StringTokenizer(s);\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\t\n\tpublic static void main(String[] asda) throws Exception {\n\n\t\tint N = Integer.parseInt( next() );\n\t\tint M = Integer.parseInt( next() );\n\t\tnext();\n\t\t\n\t\tString [] board = new String[N];\n\t\tfor (int i = 0; i < N; i++)\tboard[i] = next();\n\t\t\n\t\tint [] ans = new int [M];\n\t\t\n\t\tfor (int col = 0; col < M; col++)\t{\n\t\t\tint cnt = 0;\n\t\t\tfor (int row = 1; row < N; row++)\t{\n\t\t\t\t\n\t\t\t\tint r, c;\n\t\t\t\t\n\t\t\t\t// viene de abajo?\n\t\t\t\tr = row + row;\n\t\t\t\tif\t( r < N && board[r].charAt(col) == 'U' )\tcnt++;\n\t\t\t\t\n\t\t\t\t// viene de la derecha?\n\t\t\t\tc = col - row;\n\t\t\t\tif\t( c >= 0 && board[row].charAt(c) == 'R' )\tcnt++;\n\t\t\t\t\n\t\t\t\t// viene de la izquierda?\n\t\t\t\tc = col + row;\n\t\t\t\tif\t( c < M && board[row].charAt(c) == 'L' )\tcnt++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tans[col] = cnt;\n\t\t}\n\t\tout.print( ans[0] );\n\t\tfor (int i = 1; i < ans.length; i++)\tout.print(\" \" + ans[i]);\n\t\tout.println();\n\t\t//\n\t\tout.flush();\n\t\tSystem.exit(0);\n\t}\n\t\n}\n\n\n/*\n5 3\n0 2 4\n0 8 3\n0 20 10\n1 3 5\n1 3 1\n\n*/\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\n\npublic class Main extends PrintWriter {\n    BufferedReader in;\n    StringTokenizer stok;\n    final Random rand = new Random(31);\n    final int inf = (int) 1e9;\n    final long linf = (long) 1e18;\n\n    final static String IO = \"_std\";\n\n    void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        int R = 0;\n        int L = 1;\n        int D = 2;\n        int U = 3;\n        int[] dx = new int[] {0, 0, 1, -1};\n        int[] dy = new int[] {1, -1, 0, 0};\n        int[][] c = new int[m][n];\n        int[] ans = new int[m];\n        for (int i = 0; i < n; i++) {\n            char[] s = next().toCharArray();\n            for (int j = 0; j < m; j++) {\n                int dir;\n                switch (s[j]) {\n                    case 'U': dir = U; break;\n                    case 'D': dir = D; break;\n                    case 'R': dir = R; break;\n                    case 'L': dir = L; break;\n                    default: continue;\n                }\n//                int cx = i;\n//                int cy = j;\n//                for (int t = 0; t < n; t++) {\n//                    if (cx == t) {\n//                        c[cy][t]++;\n//                    }\n//                    cx += dx[dir];\n//                    cy += dy[dir];\n//                    if (cx >= n || cx < 0 || cy < 0 || cy >= m) {\n//                        break;\n//                    }\n//                }\n                if (dir == R) {\n                    if (j + i < m) {\n                        ans[i + j]++;\n                    }\n                } else if (dir == L) {\n                    if (j - i >= 0) {\n                        ans[j - i]++;\n                    }\n                } else if (dir == U) {\n                    if (i % 2 == 0) {\n                        ans[j]++;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < m; i++) {\n//            for (int j = 0; j < n; j++) {\n//                ans[i] += c[i][j];\n//            }\n            print(ans[i]);\n            print(\" \");\n        }\n\n    }\n\n    Main() {\n        super(System.out);\n        in = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    Main(String fileIn, String fileOut) throws IOException {\n        super(fileOut);\n        in = new BufferedReader(new FileReader(fileIn));\n    }\n\n    public static void main(String[] args) throws IOException {\n        Main main;\n        if (\"_std\".equals(IO)) {\n            main = new Main();\n        } else if (\"_iotxt\".equals(IO)) {\n            main = new Main(\"input.txt\", \"output.txt\");\n        } else {\n            main = new Main(IO + \".in\", IO + \".out\");\n        }\n        main.solve();\n        main.close();\n    }\n\n    String next() throws IOException {\n        while (stok == null || !stok.hasMoreTokens()) {\n            String s = in.readLine();\n            if (s == null) {\n                return null;\n            }\n            stok = new StringTokenizer(s);\n        }\n        return stok.nextToken();\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n\n    int[] nextIntArray(int len) throws IOException {\n        int[] a = new int[len];\n        for (int i = 0; i < len; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    int[] nextIntArraySorted(int len) throws IOException {\n        int[] a = nextIntArray(len);\n        shuffle(a);\n        Arrays.sort(a);\n        return a;\n    }\n\n    void shuffle(int[] a) {\n        for (int i = 1; i < a.length; i++) {\n            int x = rand.nextInt(i + 1);\n            int _ = a[i];\n            a[i] = a[x];\n            a[x] = _;\n        }\n    }\n\n    void shuffleAndSort(int[] a) {\n        shuffle(a);\n        Arrays.sort(a);\n    }\n\n    boolean nextPermutation(int[] p) {\n        for (int a = p.length - 2; a >= 0; --a) {\n            if (p[a] < p[a + 1])\n                for (int b = p.length - 1; ; --b)\n                    if (p[b] > p[a]) {\n                        int t = p[a];\n                        p[a] = p[b];\n                        p[b] = t;\n                        for (++a, b = p.length - 1; a < b; ++a, --b) {\n                            t = p[a];\n                            p[a] = p[b];\n                            p[b] = t;\n                        }\n                        return true;\n                    }\n        }\n        return false;\n    }\n\n    <T> List<T>[] createAdjacencyList(int n) {\n        List<T>[] res = new List[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = new ArrayList<>();\n        }\n        return res;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ans[2010];\nint main() {\n  int n, m, k;\n  string s;\n  char x;\n  cin >> n >> m >> k;\n  for (int i = 0; i < m; i++) ans[i] = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    for (int j = 0; j < m; j++) {\n      x = s[j];\n      if (x == 'U') {\n        if (i % 2 == 0) ans[j]++;\n      } else if (x == 'R') {\n        if (j + i < m) ans[j + i]++;\n      } else if (x == 'L') {\n        if (j - i >= 0) ans[j - i]++;\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) cout << ans[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:167177216\")\nusing namespace std;\nconst int INF = 1e9;\nconst long double eps = 1e-9;\nconst long long MOD = (long long)(4e6 + 37);\nconst long long INF64 = (long long)(INF) * (long long)(INF);\nconst int ddx[] = {-1, 1, 1, -1};\nconst int ddy[] = {1, 1, -1, -1};\nconst int dx[] = {-1, -1, 0, 1, 1, 1, 0, -1};\nconst int dy[] = {0, 1, 1, 1, 0, -1, -1, -1};\nconst int dx4[] = {-1, 0, 1, 0};\nconst int dy4[] = {0, 1, 0, -1};\nconst int dxh[] = {-1, -1, -1, 1, 1, 1, 1, -1};\nconst int dyh[] = {1, -1, -1, -1, -1, 1, 1, 1};\nconst string dirs[] = {\"RIGHT\", \"UP\", \"LEFT\", \"DOWN\"};\nstring s[2222];\nchar a[2222][2222];\nint n, m, k;\nint up[2222];\nint main() {\n  cin >> n >> m >> k;\n  getline(cin, s[0]);\n  for (int i = 1; i <= n; i++) {\n    getline(cin, s[i]);\n    for (int j = 0; j < m; j++) {\n      a[i][j + 1] = s[i][j];\n      if (s[i][j] == 'U' && i != 2 && i % 2 == 1) up[j + 1]++;\n    }\n  }\n  for (int j = 1; j <= m; j++) {\n    int ans = 0;\n    ans += up[j];\n    int len = 0;\n    for (int i = 2; i <= n; i++) {\n      len++;\n      int l = j - len, r = j + len;\n      if (l >= 1 && a[i][l] == 'R') ans++;\n      if (r <= m && a[i][r] == 'L') ans++;\n    }\n    cout << ans << ' ';\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class B {\n    FastScanner in;\n    PrintWriter out;\n    \n    public void solve() throws IOException {\n    \tint n = in.nextInt();\n    \tint m = in.nextInt();\n    \tint k = in.nextInt();\n    \tchar[][] a = new char[n][];\n    \tint[] ans = new int[m];\n    \tfor (int i = 0; i < n; i++) {\n    \t\ta[i] = in.next().toCharArray();\n    \t}\n    \tfor (int i = 0; i < n; i++) {\n    \t\tfor (int j = 0; j < m; j++) {\n    \t\t\tswitch (a[i][j]) {\n    \t\t\tcase 'U':\n    \t\t\t\tif (i%2 == 0) {\n    \t\t\t\t\tans[j]++;\n    \t\t\t\t}\n    \t\t\t\tbreak;\n    \t\t\tcase 'D':\n    \t\t\t\tbreak;\n    \t\t\tcase 'R':\n    \t\t\t\tif (j+i<m) {\n    \t\t\t\t\tans[j+i]++;\n    \t\t\t\t}\n    \t\t\t\tbreak;\n    \t\t\tcase 'L':\n    \t\t\t\tif (j-i>=0) {\n    \t\t\t\t\tans[j-i]++;\n    \t\t\t\t}\n    \t\t\t\tbreak;\n    \t\t\tdefault:\n    \t\t\t\tcontinue;\n    \t\t\t}\n    \t\t}\n    \t\t\n    \t}\n    \tfor (int i = 0; i < m; i++) {\n\t\t\tout.print(ans[i] + \" \");\n\t\t}\n    }\n\n    public void run() {\n        try {\n            in = new FastScanner(System.in);\n            out = new PrintWriter(System.out);\n\n            solve();\n\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        FastScanner(InputStream f) {\n            try {\n                br = new BufferedReader(new InputStreamReader(f));\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n\n    public static void main(String[] arg) {\n        new B().run();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.LinkedList;\nimport java.util.StringTokenizer;\n\n/**\n *\n * @author RezaM\n */\npublic class Bfinal {\n\n    public static void main(String[] args) throws IOException {\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n\n        int n = Integer.parseInt(st.nextToken());\n        int m = Integer.parseInt(st.nextToken());\n        int k = Integer.parseInt(st.nextToken());\n\n        PrintWriter pr = new PrintWriter(System.out);\n\n        Spider spiders[] = new Spider[k];\n\n        br.readLine();\n        int index = 0;\n        for (int i = 1; i < n; i++) {\n            String string = br.readLine();\n            for (int j = 0; j < m; j++) {\n                if (string.charAt(j) != '.') {\n                    Spider spider = new Spider(i, j, string.charAt(j));\n                    spiders[index] = spider;\n                    index++;\n                }\n            }\n        }\n\n        int result[] = new int[m];\n\n        for (int i = 0; i < spiders.length; i++) {\n\n            Spider spider = spiders[i];\n            switch (spider.ch) {\n                case 'L':\n                    if (spider.y - spider.x >= 0) {\n                        result[spider.y - spider.x]++;\n                    }\n                    break;\n                case 'U':\n                    if (spider.x % 2 == 0) {\n                        result[spider.y]++;\n                    }\n                    break;\n                case 'R':\n                    if (spider.y + spider.x < m) {\n                        result[spider.y + spider.x]++;\n                    }\n                    break;\n\n            }\n        }\n\n        pr.print(result[0]);\n        for (int i = 1; i < m; i++) {\n            pr.print(\" \" + result[i]);\n        }\n        pr.println();\n        pr.close();\n\n    }\n\n}\n\nclass Spider {\n\n    int x;\n    int y;\n    char ch;\n\n    public Spider(int x, int y, char ch) {\n        this.x = x;\n        this.y = y;\n        this.ch = ch;\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n// Note that at the actual CodeForces contest,\n// - must use the default package\n// - can use any class name\npublic class CFZepto14B {\n\n\tvoid solve(int n, int m, int k, char[][] park) {\n\t\tint[] ans = new int[m];\n\t\tfor (int x = 0; x < m; x++) {\n\t\t\tfor (int y = 1; y < n; y++) {\n\t\t\t\tif (0 <= x - y && x - y < m && park[y][x - y] == 'R')\n\t\t\t\t\tans[x]++;\n\t\t\t\tif (x + y < m && park[y][x + y] == 'L')\n\t\t\t\t\tans[x]++;\n\t\t\t\tif (y + y < n && park[y + y][x] == 'U')\n\t\t\t\t\tans[x]++;\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tpw.print(ans[i] + \" \");\n\t\t}\n\t\tpw.println();\n\t}\n\n\tvoid solve(InputStream in, PrintStream out) {\n\t\tbr = new BufferedReader(new InputStreamReader(in));\n\t\tpw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(out)));\n\t\tint n = ni();\n\t\tint m = ni();\n\t\tint k = ni();\n\t\tchar[][] park = nac(n, m);\n\t\tsolve(n, m, k, park);\n\t\tpw.close();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew CFZepto14B().solve(System.in, System.out);\n\t}\n\n\t/*\n\t *  common codes hereinafter\n\t */\n\n\tstatic StringTokenizer st;\n\tstatic BufferedReader br;\n\tstatic PrintWriter pw;\n\n\tString ns() {\n\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tSystem.exit(1);\n\t\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tint ni() {\n\t\treturn Integer.parseInt(ns());\n\t}\n\n\tlong nl() {\n\t\treturn Long.parseLong(ns());\n\t}\n\n\tdouble nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tint[] na(int n) {\n\t\treturn na(n, 0);\n\t}\n\n\tint[] na(int n, int offset) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = ni() - offset;\n\t\t}\n\t\treturn a;\n\t}\n\n\tint[][] na2(int n, int m) {\n\t\treturn na2(n, m, 0);\n\t}\n\n\tint[][] na2(int n, int m, int offset) {\n\t\tint[][] a = new int[n][m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\ta[i][j] = ni() - offset;\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tboolean[][] nab(int n, int m) {\n\t\tboolean[][] a = new boolean[n][m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tchar[] cc = ns().toCharArray();\n\t\t\tfor (int j = 0; j < cc.length; j++) {\n\t\t\t\ta[i][j] = cc[j] == '1';\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tchar[][] nac(int n, int m) {\n\t\tchar[][] a = new char[n][m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = ns().toCharArray();\n\t\t}\n\t\treturn a;\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "n, m, k = map(int, raw_input().split())\nF = []\nfor _ in xrange(n):\n    F.append(raw_input())\nfor j in xrange(m):\n    c = 0\n    for i in xrange(1, n):\n        if F[i][j] == \"U\" and i % 2 == 0:\n            c += 1\n        if 0 <= j - i < m and F[i][j - i] == \"R\":\n            c += 1\n        if 0 <= j + i < m and F[i][j + i] == \"L\":\n            c += 1\n    print c,\n"
        },
        {
            "language": 1,
            "solution": "n,m,k=map(int,raw_input().split())\nans=[0]*m\nfor i in range(n):\n    x=raw_input()\n    for k in range(m):\n        if x[k]=='U' and i%2==0:\n            ans[k]+=1\n        elif x[k]=='L' and k>=i:\n            ans[k-i]+=1\n        elif x[k]=='R' and k+i<m:\n            ans[k+i]+=1\nprint ' '.join(map(str,ans))"
        },
        {
            "language": 1,
            "solution": "s=raw_input().split()\nn=int(s[0])\nm=int(s[1])\nk=int(s[2])\ni=0\nrectangular=[]\nwhile i<n:\n    x =raw_input()\n    rectangular.append(x)\n    i=i+1\nj=0\nwhile j<m:\n    contador=0\n    i=1\n    while i<n:\n        if (j+i)< m and rectangular [i][j+i]==\"L\":\n            contador =contador+1\n        if (j-i)>= 0 and rectangular [i][j-i]==\"R\":\n            contador =contador+1\n        if (i+i)< n and rectangular [i+i][j]==\"U\":\n             contador =contador+1\n        i=i+1\n    print (contador)\n    j=j+1\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k, i, j, kt = 0;\n  cin >> n >> m >> k;\n  string s[2003];\n  for (i = 0; i < n; i++) cin >> s[i];\n  int pos[2003];\n  memset(pos, 0, sizeof(pos));\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      if (s[i][j] != '.') {\n        if (s[i][j] == 'L') {\n          if (j - i >= 0) pos[j - i]++;\n        } else if (s[i][j] == 'R') {\n          if (j + i < m) pos[j + i]++;\n        } else if (s[i][j] == 'U' && i % 2 == 0) {\n          pos[j]++;\n        }\n      }\n    }\n  }\n  for (i = 0; i < m; i++) {\n    cout << pos[i] << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\n\npublic class B {\t\n\tBufferedReader reader;\n    StringTokenizer tokenizer;\n    PrintWriter out;\n    \n\tpublic void solve() throws IOException {\t\t\t\t\n\t\tint N = nextInt();\n        int M = nextInt();\n        int K = nextInt();\n        char[][] map = new char[N][M];\n        for (int i = 0; i < N; i++) {\n            map[i] = reader.readLine().toCharArray();\n        }\n\n        int[] cnt = new int[M];\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < M; j++) {\n                if (map[i][j] == 'R') {\n                    if (j+i < M) cnt[j+i]++;\n                } else if (map[i][j] == 'L') {\n                    if (j-i >= 0) cnt[j-i]++;\n                } else if (map[i][j] == 'U') {\n                    if (i % 2 == 0) {\n                        cnt[j]++;\n                    }\n                }\n            }\n        }\n        for (int j = 0; j < M; j++) {\n            out.print(cnt[j] + \" \");\n        }\n        out.println();\n    }\n\t\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tnew B().run();\n\t}\n\t\n\tpublic void run() {\n        try {\n            reader = new BufferedReader(new InputStreamReader(System.in));\n            tokenizer = null;\n            out = new PrintWriter(System.out);\n            solve();\n            reader.close();\n            out.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    String nextToken() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int height = in.nextInt();\n        int width = in.nextInt();\n        int numSpiders = in.nextInt();\n        int[] res = new int[width];\n        for (int row = 0; row < height; ++row) {\n            String s = in.next();\n            for (int col = 0; col < width; ++col) {\n                char ch = s.charAt(col);\n                if (ch == 'L') {\n                    int nice = col - row;\n                    if (nice >= 0) ++res[nice];\n                } else if (ch == 'R') {\n                    int nice = col + row;\n                    if (nice < width) ++res[nice];\n                } else if (ch == 'U' && row % 2 == 0) {\n                    ++res[col];\n                }\n            }\n        }\n        for (int i = 0; i < width; ++i) {\n            if (i > 0) out.print(\" \");\n            out.print(res[i]);\n        }\n        out.println();\n    }\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream), 32768);\n        tokenizer = null;\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  long n, m, k;\n  cin >> n >> m >> k;\n  vector<vector<char> > matrix(n, vector<char>(m, ' '));\n  for (long long row = 0; row < n; row++) {\n    for (long long col = 0; col < m; col++) {\n      cin >> matrix[row][col];\n    }\n    cout << endl;\n  }\n  for (long long col = 0; col < m; col++) {\n    long long total = 0;\n    for (long row = 1; row < n; row++) {\n      if (row <= col && matrix[row][col - row] == 'R') total++;\n      if ((row + col) < m && matrix[row][col + row] == 'L') total++;\n      if (row % 2 == 0 && matrix[row][col] == 'U') total++;\n    }\n    cout << total << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tpublic static void main(String args[]) throws NumberFormatException,IOException {\n\t\t\n\t\tStdin in = new Stdin();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n=in.readInt();\n\t\tint m=in.readInt();\n\t\tint k=in.readInt();\n\t\tchar[][]cell=new char[n][m];\n\t\tint count[]=new int[m];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tcell[i]=in.readNext().toCharArray();\n\t\t\t\n\t\t}\n\t\tfor(int i=1;i<cell.length;i++){\n\t\t\tfor(int j=0;j<cell[0].length;j++){\n\t\t\t\tif(cell[i][j]=='U'){\n\t\t\t\t\tif(i%2==0){\n\t\t\t\t\t\tcount[j]++;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(cell[i][j]=='L'&&i>0&&j-i>=0){\n\t\t\t\t\t\tcount[j-i]++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(cell[i][j]=='R'&&j<cell[0].length-1&&j+i<cell[0].length)\n\t\t\t\t\t\t\tcount[j+i]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<count.length;i++){\n\t\t\tif(i>0)\n\t\t\t\tout.print(\" \");\n\t\t\tout.print(count[i]);\n\t\t}\n\t\tout.flush();\n\t\tout.close();\n\n\t}\n\n\tprivate static class Stdin {\n\t\tInputStreamReader read;\n\t\tBufferedReader br;\n\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\n\t\tprivate Stdin() {\n\t\t\tread = new InputStreamReader(System.in);\n\t\t\tbr = new BufferedReader(read);\n\n\t\t}\n\n\t\tprivate String readNext() throws IOException {\n\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tprivate int readInt() throws IOException, NumberFormatException {\n\n\t\t\treturn Integer.parseInt(readNext());\n\n\t\t}\n\n\t\tprivate long readLong() throws IOException, NumberFormatException {\n\n\t\t\treturn Long.parseLong(readNext());\n\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing namespace std;\nconst int mod = (int)1e9 + 7;\nconst long double INF = (long double)(1e3);\nconst int N = 2005;\nint n, m, k;\nint a[N];\nvoid upd(int i, int j, int cur) {\n  if (cur == 0) {\n    if (j - i >= 0) a[j - i]++;\n  }\n  if (cur == 1) {\n    if (j + i <= m - 1) a[i + j]++;\n  }\n  if (cur == 2) {\n    if (i % 2 == 0) {\n      a[j]++;\n    }\n  }\n}\nint main() {\n  cin >> n >> m >> k;\n  string s;\n  for (int i = 0; i < n; ++i) {\n    cin >> s;\n    for (int j = 0; j < m; ++j) {\n      if (s[j] == 'L')\n        upd(i, j, 0);\n      else if (s[j] == 'R')\n        upd(i, j, 1);\n      else if (s[j] == 'U')\n        upd(i, j, 2);\n    }\n  }\n  for (int(i) = 0; (i) < (m); ++(i)) printf(\"%d \", a[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.FileReader;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Agostinho Junior (junior94)\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n\tOutputWriter out;\n\tInputReader in;\n\tpublic void solve(int testNumber, InputReader in, OutputWriter out) {\n\t\tthis.in = in; this.out = out;\n\t\tint n = in.readInt();\n\t\tint m = in.readInt();\n\t\tint k = in.readInt();\n\t\tchar[][] grid = new char[n][m];\n\t\tint[] count = new int[m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tgrid[i] = in.readLine().toCharArray();\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tif (j >= i && grid[i][j - i] == 'R') {\n\t\t\t\t\tcount[j]++;\t\n\t\t\t\t}\n\t\t\t\tif (j + i < m && grid[i][j + i] == 'L') {\n\t\t\t\t\tcount[j]++;\n\t\t\t\t}\n\t\t\t\tif (i + i < n && grid[i + i][j] == 'U') {\n\t\t\t\t\tcount[j]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tout.printf(\"%d \", count[i]);\n\t\t}\n\t}\n}\n\nclass OutputWriter {\n\tprivate PrintWriter output;\n\tpublic OutputWriter() {\n\t\tthis(System.out);\n\t}\n\tpublic OutputWriter(OutputStream out) {\n\t\toutput = new PrintWriter(out);\n\t}\n\tpublic OutputWriter(Writer writer) {\n\t\toutput = new PrintWriter(writer);\n\t}\n\n\tpublic void printf(String format, Object... o) {\n\t\toutput.printf(format, o);\n\t}\n\n\tpublic void close() {\n\t\toutput.close();\n\t}\n}\n\nclass InputReader {\n\tprivate BufferedReader input;\n\tprivate StringTokenizer line = new StringTokenizer(\"\");\n\tpublic InputReader() {\n\t\tthis(System.in);\n\t}\n\tpublic InputReader(InputStream in) {\n\t\tinput = new BufferedReader(new InputStreamReader(in));\n\t}\n\tpublic InputReader(String s) {\n\t\ttry {\n\t\t\tinput = new BufferedReader(new FileReader(s));\n\t\t} catch(IOException io) { io.printStackTrace(); System.exit(0);}\n\t}\n\tpublic void fill() {\n\t\ttry {\n\t\t\tif(!line.hasMoreTokens()) line = new StringTokenizer(input.readLine());\n\t\t} catch(IOException io) { io.printStackTrace(); System.exit(0);}\n\t}\n\n\tpublic int readInt() {\n\t\tfill();\n\t\treturn Integer.parseInt(line.nextToken());\n\t}\n\n\tpublic String readLine() {\n\t\tString s = \"\";\n\t\ttry {\n\t\t\ts = input.readLine();\n\t\t} catch(IOException io) {io.printStackTrace(); System.exit(0);}\n\t\treturn s;\n\t}\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Map;\nimport java.util.Scanner;\nimport java.util.HashMap;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author wannabe\n */\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tScanner in = new Scanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic class TaskB {\n\n\t\tpublic void solve(int testNumber, Scanner in, PrintWriter out) {\n\n\t\t\tint n = in.nextInt();\n\t\t\tint m = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tMap<TaskB.Spider, TaskB.Direction> spidersDirections = new HashMap<>();\n\t\t\tMap<String, TaskB.Direction> aliases = new HashMap<>();\n\t\t\taliases.put(\"R\", TaskB.Direction.RIGHT);\n\t\t\taliases.put(\"L\", TaskB.Direction.LEFT);\n\t\t\taliases.put(\"D\", TaskB.Direction.DOWN);\n\t\t\taliases.put(\"U\", TaskB.Direction.UP);\n\n\t\t\tString[][] spiderCounts = new String[n][m];\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tString[] spiders = in.next().split(\"\");\n\t\t\t\tfor (int j = 0; j < spiders.length; j++) {\n\t\t\t\t\tif (!\".\".equals(spiders[j])) {\n\t\t\t\t\t\tspiderCounts[i][j] = spiders[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint[] result = new int[m];\n\n\t\t\tfor (int i = 1; i < n; i++) {\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tif (j + i < spiderCounts[0].length && \"L\".equals(spiderCounts[i][j + i])) {\n\t\t\t\t\t\tresult[j]++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j - i < spiderCounts[0].length && j - i >= 0 && \"R\".equals(spiderCounts[i][j - i])) {\n\t\t\t\t\t\tresult[j]++;\n\t\t\t\t\t}\n\t\t\t\t\tif (2 * i < spiderCounts.length && \"U\".equals(spiderCounts[2 * i][j])) {\n\t\t\t\t\t\tresult[j]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\t\tout.print(result[i] + \" \");\n\t\t\t}\n\t\t}\n\n\t\tpublic static class Spider {\n\n\t\t\tpublic final int x;\n\t\t\tpublic final int y;\n\n\t\t\tpublic Spider(int x, int y) {\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t}\n\n\n\t\t\tpublic boolean equals(Object o) {\n\t\t\t\tif (this == o) return true;\n\t\t\t\tif (o == null || getClass() != o.getClass()) return false;\n\n\t\t\t\tTaskB.Spider point = (TaskB.Spider) o;\n\n\t\t\t\tif (x != point.x) return false;\n\t\t\t\treturn y == point.y;\n\n\t\t\t}\n\n\n\t\t\tpublic int hashCode() {\n\t\t\t\tint result = x;\n\t\t\t\tresult = 31 * result + y;\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t}\n\n\t\tpublic enum Direction {\n\t\t\tRIGHT,\n\t\t\tLEFT,\n\t\t\tUP,\n\t\t\tDOWN,;\n\t\t}\n\n\t}\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n, m, k = map(int, str.split(input()))\nf = tuple(map(lambda _: str.strip(input()), range(n)))\n\nr = []\nfor x in range(m):\n\n    cr = sum(map(lambda y: f[y][x] == \"U\", range(0, n, 2)))\n    for cx in range(max(0, x + 1 - n), x):\n\n        cr += f[x - cx][cx] == \"R\"\n\n    for cx in range(x + 1, min(m, n + x)):\n\n        cr += f[cx - x][cx] == \"L\"\n\n    r.append(cr)\n\nprint(str.join(\" \", map(str, r)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-9;\nconst double pi = acos(-1.0);\nint n, m, k, ans[2111];\nchar a[2111];\nint main() {\n  scanf(\"%d%d%d\\n\", &n, &m, &k);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%s\\n\", a);\n    for (int j = 0; j < m; ++j) {\n      if (a[j] == 'R' && j + i < m) ans[j + i]++;\n      if (a[j] == 'L' && j - i >= 0) ans[j - i]++;\n      if (a[j] == 'U' && i % 2 == 0) ans[j]++;\n    }\n  }\n  for (int i = 0; i < m; ++i) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma comment(linker, \"/STACK:102400000,102400000\")\nchar s[2010][2010];\nint ans[2010];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) scanf(\"%s\", s[i]);\n  memset(ans, 0, sizeof(ans));\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j <= m; j++) {\n      if (s[0][j] == 'D') ans[j]++;\n      if (j >= i && s[i][j - i] == 'R') ans[j]++;\n      if (j + i < m && s[i][j + i] == 'L') ans[j]++;\n      if (i + i < n && s[i + i][j] == 'U') ans[j]++;\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    cout << ans[i];\n    if (i == m - 1)\n      cout << endl;\n    else\n      cout << \" \";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "''' ===============================\n    -- @uthor : Kaleab Asfaw\n    -- Handle : kaleabasfaw2010\n    -- Bio    : High-School Student\n    ==============================='''\n\n# Fast IO\nimport sys\nimport os\nfrom io import BytesIO, IOBase\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file): self._fd = file.fileno(); self.buffer = BytesIO(); self.writable = \"x\" in file.mode or \"r\" not in file.mode; self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b: break\n            ptr = self.buffer.tell(); self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0; return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE)); self.newlines = b.count(b\"\\n\") + (not b); ptr = self.buffer.tell(); self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1; return self.buffer.readline()\n    def flush(self):\n        if self.writable: os.write(self._fd, self.buffer.getvalue()); self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file): self.buffer = FastIO(file); self.flush = self.buffer.flush; self.writable = self.buffer.writable; self.write = lambda s: self.buffer.write(s.encode(\"ascii\")); self.read = lambda: self.buffer.read().decode(\"ascii\"); self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout); input = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# Others\n# from math import floor, ceil, gcd\n# from decimal import Decimal as d\nmod = 10**9+7\ndef lcm(x, y): return (x * y) / (gcd(x, y))\ndef fact(x, mod=mod):\n    ans = 1\n    for i in range(1, x+1): ans = (ans * i) % mod\n    return ans\ndef arr2D(n, m, default=0): return [[default for j in range(m)] for i in range(n)]\ndef arr3D(n, m, r, default=0): return [[[default for k in range(r)] for j in range(m)] for i in range(n)]\ndef sortDictV(x): return {k: v for k, v in sorted(x.items(), key = lambda item : item[1])}\nclass DSU:\n    def __init__(self, length): self.length = length; self.parent = [-1] * self.length  # O(log(n))\n    def getParent(self, node, start):  # O(log(n))\n        if node >= self.length: return False\n        if self.parent[node] < 0:\n            if start != node: self.parent[start] = node\n            return node\n        return self.getParent(self.parent[node], start)\n    def union(self, node1, node2):  # O(log(n))\n        parent1 = self.getParent(node1, node1); parent2 = self.getParent(node2, node2)\n        if parent1 == parent2: return False\n        elif self.parent[parent1] <= self.parent[parent2]: self.parent[parent1] += self.parent[parent2]; self.parent[parent2] = parent1\n        else: self.parent[parent2] += self.parent[parent1]; self.parent[parent1] = parent2\n        return True\n    def getCount(self, node):  return -self.parent[self.getParent(node, node)] # O(log(n))\n\ndef exact(num):\n    if abs(num - round(num)) <= 10**(-9):return round(num)\n    return num\n    \ndef solve(n, m, k, lst):\n    ans = []\n    for j in range(m):\n        cnt = 0\n        for i in range(n):\n            if j - i >= 0:\n                if lst[i][j-i] == \"R\": cnt += 1\n            if j + i < m:\n                if lst[i][j+i] == \"L\": cnt += 1\n            if i - i >= 0:\n                if lst[i-i][j] == \"D\": cnt += 1\n            if i + i < n:\n                if lst[i+i][j] == \"U\": cnt += 1\n        ans.append(cnt)\n    for i in ans: print(i, end=\" \")\n    print()\n\nn, m, k = list(map(int, input().split()))\nlst = []\nfor i in range(n):\n    lst.append(input())\nsolve(n, m, k, lst)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class A {\n\tFastScanner in;\n\tPrintWriter out;\n\n\tpublic void solve() throws IOException {\n\t\tint n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n\t\tchar[][] c = new char[n][m];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tc[i] = in.next().toCharArray();\n\t\tint[] res = new int[m];\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (c[j][i] == 'U') {\n\t\t\t\t\tif (j % 2 == 0)\n\t\t\t\t\t\tres[i]++;\n\t\t\t\t} else if (c[j][i] == 'R') {\n\t\t\t\t\tif (i + j < m)\n\t\t\t\t\t\tres[i + j]++;\n\t\t\t\t} else if (c[j][i] == 'L') {\n\t\t\t\t\tif (i - j >= 0)\n\t\t\t\t\t\tres[i - j]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++)\n\t\t\tout.print(res[i] + \" \");\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new FastScanner();\n\t\t\tout = new PrintWriter(System.out);\n\n\t\t\tsolve();\n\n\t\t\tout.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tFastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n\n\tpublic static void main(String[] arg) {\n\t\tnew A().run();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[2001][2001];\nlong long cont[100004];\nint main() {\n  int n, m, p, i, j, k;\n  cont[0] = 0;\n  scanf(\"%d%d%d\", &n, &m, &p);\n  for (i = 0; i < n; i++) scanf(\"%s\", s[i]);\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      if (s[i][j] == 'U') {\n        if (i % 2 == 0 && j + 1 > 0) cont[1 + j]++;\n      } else if (s[i][j] == 'R' && i + j + 1 > 0) {\n        cont[i + j + 1]++;\n      } else if (s[i][j] == 'L' && j - i + 1 > 0) {\n        cont[j - i + 1]++;\n      }\n    }\n  }\n  for (i = 1; i <= m; i++) printf(\"%I64d \", cont[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main implements Runnable {\n\tchar[][] map;\n        int N, M, K;\n\tpublic void solve() throws IOException {\n             N = nextInt(); M = nextInt(); K = nextInt();\n             map = new char[N][M];\n             \n             for(int i = 0; i < N; i++) map[i] = nextToken().toCharArray();\n             \n             for(int col = 0; col < M; col++){\n                 int count = 0;\n                 for(int row = 0; row < N; row++){\n                     count += spiders(row, col);\n                 }\n                 System.out.print(count + \" \");\n             }\n             System.out.println();\n\t}\n        \n        private int spiders(int r, int c){\n            int t = r;\n            int ret = 0;\n            if(ok(r+t, c) && map[r + t][c] == 'U') ret++;\n            if(ok(r-t, c) && map[r - t][c] == 'D') ret++;\n            if(ok(r, c-t) && map[r][c - t] == 'R') ret++;\n            if(ok(r, c+t) && map[r][c + t] == 'L') ret++;\n            \n            return ret;\n        }\n        private boolean ok(int r, int c){\n            if(r >= 0 && r < N && c >= 0 && c < M) return true;\n            return false;\n        }\n        \n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t//-----------------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n        public void print1Int(int[] a){\n                for(int i = 0; i < a.length; i++)\n                        System.out.print(a[i] + \" \");\n                System.out.println();\n        }\n        \n        public void print2Int(int[][] a){\n                for(int i = 0; i < a.length; i++){\n                        for(int j = 0; j < a[0].length; j++){\n                                System.out.print(a[i][j] + \" \");\n                        }\n                        System.out.println();\n                }\n        }\n        \n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\ttok = null;\n\t\t\tsolve();\n\t\t\tin.close();\n\t\t} catch (IOException e) {\n\t\t\tSystem.exit(0);\n\t\t}\n\t}\n\n\tpublic String nextToken() throws IOException {\n\t\twhile (tok == null || !tok.hasMoreTokens()) {\n\t\t\ttok = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn tok.nextToken();\n\t}\n\n\tpublic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic long nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tpublic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tBufferedReader in;\n\tStringTokenizer tok;\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, m, k;\nint s[2001] = {};\nint main() {\n  int i, j, k;\n  int min;\n  char c[2010];\n  ;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 1; i <= n; i++) {\n    scanf(\"%s\", c);\n    for (j = 0; j <= m - 1; j++) {\n      switch (c[j]) {\n        case 'U':\n          if (i % 2 == 1) s[j + 1]++;\n          break;\n        case 'L':\n          if (j - i + 2 >= 1) s[j - i + 2]++;\n          break;\n        case 'R':\n          if (j + i <= m) s[j + i]++;\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  printf(\"%d\", s[1]);\n  for (i = 2; i <= m; i++) {\n    printf(\" %d\", s[i]);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.LinkedList;\nimport java.util.Map;\nimport java.util.Scanner;\n\nimport javax.imageio.ImageIO;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n\t\t\n\t\tString cpt[] = scan.nextLine().split(\" \");\n\t\tint n = Integer.parseInt(cpt[0]);\n\t\tint m = Integer.parseInt(cpt[1]);\n\t\tint k = Integer.parseInt(cpt[2]);\n\t\t\n\t\tArrayList<Integer> counts = new ArrayList<Integer>(m);\n\t\tfor (int x = 0; x < m; x++) {\n\t\t\tcounts.add(0);\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString l = scan.nextLine();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tchar c = l.charAt(j);\n\t\t\t\tif (c == 'U') {\n\t\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\t\tcounts.set(j, counts.get(j) + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (c == 'R') {\n\t\t\t\t\tif (j + i < m) {\n\t\t\t\t\t\tcounts.set(i + j, counts.get(i + j) + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if (c == 'L') {\n\t\t\t\t\tif (j - i >= 0) {\n\t\t\t\t\t\tcounts.set(j - i, counts.get(j - i) + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int count : counts) {\n\t\t\tsb.append(count + \" \");\n\t\t}\n\t\t\n\t\tSystem.out.println(sb);\n\t}\n\t\n\n//\tpublic static void main(String args[]) {\n//\t\tScanner scan = new Scanner(System.in);\n//\n//\t\tString cpt[] = scan.nextLine().split(\" \");\n//\t\tint n = Integer.parseInt(cpt[0]);\n//\t\tint x = Integer.parseInt(cpt[1]);\n//\t\t\n//\t\tArrayList<Candy> type0 = new ArrayList<Main.Candy>();\n//\t\tArrayList<Candy> type1 = new ArrayList<Main.Candy>();\n//\n//\t\tfor (int i = 0; i < n; i++) {\n//\t\t\tcpt = scan.nextLine().split(\" \");\n//\t\t\t\n//\t\t\tint t = Integer.parseInt(cpt[0]);\n//\t\t\tint h = Integer.parseInt(cpt[1]);\n//\t\t\tint m = Integer.parseInt(cpt[2]);\n//\t\t\t\n//\t\t\tMain.Candy can = new Main.Candy();\n//\t\t\tcan.h = h;\n//\t\t\tcan.m = m;\n//\t\t\t\n//\t\t\tif (t == 0) {\n//\t\t\t\ttype0.add(can);\n//\t\t\t} else {\n//\t\t\t\ttype1.add(can);\n//\t\t\t}\n//\t\t}\n//\t\t\n//\t\tCollections.sort(type0);\n//\t\tCollections.sort(type1);\n//\t\t\n//\t\tint lastType = 2;\n//\t\tint count = 0;\n//\t\t\n//\t\twhile (true) {\n//\t\t\tboolean any = false;\n//\t\t\tCandy eat0 = null;\n//\t\t\tCandy eat1 = null;\n//\t\t\t\n//\t\t\tif (lastType != 0 && type0.size() > 0) {\t\n//\t\t\t\tfor (Candy candy : type0) {\n//\t\t\t\t\tif (candy.h <= x) {\n//\t\t\t\t\t\tif (eat0 == null || eat0 != null && eat0.m < candy.m) {\n//\t\t\t\t\t\t\teat0 = candy;\n//\t\t\t\t\t\t}\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tbreak;\n//\t\t\t\t\t}\n//\t\t\t\t}\n//\t\t\t\t\n//\t\t\t}\n//\t\t\t\n//\t\t\tif (lastType != 1 && type1.size() > 0) {\n//\t\t\t\tfor (Candy candy : type1) {\n//\t\t\t\t\tif (candy.h <= x) {\n//\t\t\t\t\t\tif (eat1 == null || eat1 != null && eat1.m < candy.m) {\n//\t\t\t\t\t\t\teat1 = candy;\n//\t\t\t\t\t\t}\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tbreak;\n//\t\t\t\t\t}\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\t\n//\t\t\tCandy eat = null;\n//\t\t\tswitch (lastType) {\n//\t\t\tcase 0:\n//\t\t\t\teat = eat1;\n//\t\t\t\tbreak;\n//\t\t\tcase 1:\n//\t\t\t\teat = eat0;\n//\t\t\tcase 2:\n//\t\t\t\tif (eat1 == null) {\n//\t\t\t\t\teat = eat0;\n//\t\t\t\t} else if (eat0 == null) {\n//\t\t\t\t\teat = eat1;\n//\t\t\t\t} else if (eat1.m > eat0.m) {\n//\t\t\t\t\teat = eat1;\n//\t\t\t\t} else {\n//\t\t\t\t\teat = eat0;\n//\t\t\t\t}\n//\t\t\t\tbreak;\n//\t\t\t}\n//\t\t\t\n//\t\t\tif (eat != null) {\n//\t\t\t\tcount++;\n//\t\t\t\ttype0.remove(eat);\n//\t\t\t\ttype1.remove(eat);\n//\t\t\t\tx = Math.min(2001, eat.m + x);\n//\t\t\t\tlastType = eat == eat1 ? 1 : 0;\n//\t\t\t} else {\n//\t\t\t\tbreak;\n//\t\t\t}\n//\t\t}\n//\n//\t\tSystem.out.println(count);\t\t\n//\t}\n//\t\n//\tpublic static class Candy implements Comparable<Candy> {\n//\t\tpublic int h;\n//\t\tpublic int m;\n//\t\t\n//\t\tpublic int compareTo(Candy other){\n//\t        return h == other.h ? 0 : (h > other.h ? 1 : -1);\n//\t    }\n//\t}\n}"
        },
        {
            "language": 1,
            "solution": "R=raw_input\nn,m,k=map(int,R().split())\na=[0]*m\nfor i in range(n):\n for j,v in enumerate(R()):\n  if v==\"D\"and i<1:a[j]+=n\n  elif v==\"U\"and i%2<1:a[j]+=1\n  elif v==\"R\"and i+j<m:a[i+j]+=1\n  elif v==\"L\"and j-i>=0:a[j-i]+=1\nfor i in a:print i,"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n\npublic class OmNomAndSpiders\n{\n\tpublic static void main (String[] args) throws IOException\n\t{\n\t\tInputStreamReader a = new InputStreamReader(System.in);\n\t\tBufferedReader buf = new BufferedReader(a);\n\t\tString temp[] = buf.readLine().split(\" \");\n\t\tint n = Integer.parseInt(temp[0]);\n\t\tint m = Integer.parseInt(temp[1]);\n\t\tint k = Integer.parseInt(temp[2]);\n\t\t//int[] x = new int[k];\n\t\t//int[] y = new int[k];\n\t\t//int[] dir = new int[k]; // R = 1, L = 2, U = 3, D = 4\n\t\tint[] out = new int[m];\n\t\tint l = 0;\n\t\tfor (int i=0; i< n ; i++)\n\t\t{\n\t\t\tString u = buf.readLine();\n\t\t\tfor (int j = 0; j < m; j++)\n\t\t\t{\n\t\t\t\tif(u.charAt(j) == 'R' )\n\t\t\t\t{\n\t\t\t\t\tif(i+j < m)\n\t\t\t\t\t\tout[i+j]++;\n\t\t\t\t}\n\t\t\t\telse if(u.charAt(j) == 'L' )\n\t\t\t\t{\n\t\t\t\t\tif(j-i >= 0)\n\t\t\t\t\t\tout[j-i]++;\n\t\t\t\t}\n\t\t\t\telse if(u.charAt(j) == 'U' )\n\t\t\t\t{\n\t\t\t\t\tif(i%2==0)\n\t\t\t\t\t\tout[j]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0; i<m; i++)\n\t\t{\n\t\t\tSystem.out.print(out[i]);\n\t\t\tSystem.out.print(\" \");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.StringTokenizer;\n\n/**\n * Created by Andrew Govorovsky on 15.06.14\n */\npublic final class cf436b {\n\n    public static void main(String[] args) {\n        InputReader inputReader = new InputReader(System.in);\n        PrintWriter outputStreamWriter = new PrintWriter(System.out);\n        TaskB taskB = new TaskB(inputReader, outputStreamWriter);\n        taskB.solve();\n        outputStreamWriter.close();\n    }\n\n\n    static class TaskB {\n\n        private InputReader in;\n        private PrintWriter out;\n\n        public TaskB(InputReader in, PrintWriter out) {\n            this.in = in;\n            this.out = out;\n        }\n\n        public void solve() {\n            int n = in.readInt();\n            int m = in.readInt();\n            int k = in.readInt();\n            int ans[] = new int[m];\n            for (int i = 0; i < n; i++) {\n                char[] map;\n                map = in.nextString().toCharArray();\n                for (int j = 0; j < m; j++) {\n                    if (map[j] == 'U' && (i % 2 == 0)) {\n                        ans[j]++;\n                    }\n                    if (map[j] == 'L' && (j - i >= 0)) {\n                        ans[j - i]++;\n                    }\n                    if (map[j] == 'R' && (i + j < m)) {\n                        ans[i + j]++;\n                    }\n                }\n            }\n            for (int a : ans) {\n                out.print(a + \" \");\n            }\n        }\n    }\n\n    static class InputReader {\n        private BufferedReader bufferedReader;\n        private StringTokenizer stringTokenizer;\n\n        InputReader(InputStream inputStream) {\n            this.bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        public String nextString() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                } catch (IOException | RuntimeException e) {\n\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        public int readInt() {\n            return Integer.parseInt(nextString());\n        }\n\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = ((1 << 30) - 1);\nconst long long linf = ((1ll << 62) - 1);\nconst int N = 2001;\nint n, m, k;\nint l[N][N], r[N][N], u[N][N], d[N][N];\nint cnt[N][N], sum[N];\nint main() {\n  assert(scanf(\"%d%d%d\", &n, &m, &k) == 3);\n  for (int i = 0; i < n; i++) {\n    static char buf[100500];\n    assert(scanf(\"%s\", buf) == 1);\n    for (int j = 0; j < m; j++) {\n      if (buf[j] == 'L')\n        l[i][j]++;\n      else if (buf[j] == 'R')\n        r[i][j]++;\n      else if (buf[j] == 'U')\n        u[i][j]++;\n      else if (buf[j] == 'D')\n        d[i][j]++;\n    }\n  }\n  for (int t = 0; t < n; t++)\n    for (int y = 0; y < m; y++) {\n      if (y - t >= 0) cnt[t][y] += r[t][y - t];\n      if (y + t < m) cnt[t][y] += l[t][y + t];\n      if (2 * t < n) cnt[t][y] += u[2 * t][y];\n    }\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) sum[j] += cnt[i][j];\n  for (int i = 0; i < m; i++) printf(\"%d%c\", sum[i], \" \\n\"[i + 1 == m]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, ans[2111];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) {\n    char c[2111];\n    scanf(\"%s\", &c);\n    for (int j = 0; j < m; j++) {\n      if (c[j] == 'U' && (i % 2 == 0)) ans[j]++;\n      if (c[j] == 'L' && j - i >= 0) ans[j - i]++;\n      if (c[j] == 'R' && j + i < m) ans[j + i]++;\n    }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class B{\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint k = sc.nextInt();\n\n\t\tint ans[] = new int[m + 2*n];\n\n\t\tfor(int y = 0; y < n; y++){\n\t\t\tString s = sc.next();\n\t\t\tfor(int x = 0; x < m; x++){\n\t\t\t\tif(s.charAt(x) == 'L')\n\t\t\t\t\tans[x+n-y]++;\n\t\t\t\telse if(s.charAt(x) == 'R')\n\t\t\t\t\tans[x+n+y]++;\n\t\t\t\telse if(s.charAt(x) =='U' && y%2 == 0)\n\t\t\t\t\tans[x+n]++;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 0; i < m; i++){\n\t\t\tSystem.out.print(ans[i+n]);\n\t\t\tif(i!=m-1)System.out.print(\" \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, m, k;\nchar mp[2222][2222];\nint ans[2222];\nbool valid(int i, int j, char ch) {\n  if (i < 0 || i >= n || j < 0 || j >= m || mp[i][j] != ch) {\n    return false;\n  }\n  return true;\n}\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", mp[i]);\n  }\n  for (int i = 1; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      ans[j] += valid(i, j - i, 'R');\n      ans[j] += valid(i, j + i, 'L');\n      ans[j] += valid(i + i, j, 'U');\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    printf(\"%d \", ans[i]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e+5 + 10;\nconst int INF = 2e+9;\nconst double e = 1e-8;\nint t[2000];\nint m[2000];\nint h[2000];\nbool u[2000];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  char c;\n  int cnt[2000];\n  for (int i = 0; i < m; i++) {\n    cnt[i] = 0;\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      cin >> c;\n      if (c == 'U') {\n        if (i % 2 == 0) {\n          cnt[j]++;\n        }\n      }\n      if (c == 'R') {\n        if ((i + j) < m) {\n          cnt[i + j]++;\n        }\n      }\n      if (c == 'L') {\n        if ((j - i) >= 0) {\n          cnt[j - i]++;\n        }\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    cout << cnt[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/* CodeForces Template v0.23 by Sergey Esipenko */\nimport java.io.*;\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.fill;\nimport static java.util.Arrays.sort;\n\npublic class Main implements Runnable {\n\t/* START OF SOLUTION */\n\t\n\tstatic final Random RANDOM = new Random(7777L);\n\t\n\tstatic final int[] DELTA_ROW = { -1,  0, +1,  0 };\n\tstatic final int[] DELTA_COL = {  0, +1,  0, -1 };\n\tstatic final char[] EXPECTED_DIR = \"URDL\".toCharArray();\n\t\n\tvoid solve() throws IOException  {\n\t\t\n\t\tfinal int rNum = nextInt();\n\t\tfinal int cNum = nextInt();\n\t\tnextInt();\n\t\t\n\t\tfinal char[][] map = new char [rNum][];\n\t\tfor (int r = 0; r < rNum; r++)\n\t\t\tmap[r] = nextToken().toCharArray();\n\t\t\n\t\tfinal int[] answer = new int [cNum];\n\t\t\n\t\tfor (int r = 0; r < rNum; r++) {\n\t\t\tfor (int c = 0; c < cNum; c++) {\n\t\t\t\tfor (int d = 0; d < DELTA_ROW.length; d++) {\n\t\t\t\t\tif (get(map, r - r * DELTA_ROW[d], c - r * DELTA_COL[d]) == EXPECTED_DIR[d]) {\n\t\t\t\t\t\tanswer[c]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tprintArray(answer);\n\t}\n\t\n\tstatic char get(char[][] map, int r, int c) {\n\t\tif (0 <= r && r < map.length && 0 <= c && c < map[r].length)\n\t\t\treturn map[r][c];\n\t\treturn 0;\n\t}\n\n\t/* END OF SOLUTION */\n\t/************************************************************************** \n\t * Entry point\n\t *************************************************************************/\n\t\n\tstatic final Main INSTANCE = new Main();\n\tstatic final boolean WRITE_LOG = true;\n\tstatic final long STACK_SIZE = 1L << 24; // < 0 for default stack size\n\t\n\tstatic long initTime;\n\tstatic boolean localRun = false;\n\t\n\t@SuppressWarnings(\"unused\")\n\tpublic static void main(String[] args) throws IOException {\n\t\ttry {\n\t\t\tinitTime = System.currentTimeMillis();\n\t\t\ttry {\n\t\t\t\tlocalRun = \"true\".equals(System.getProperty(\"LOCAL_RUN_7777\"));\n\t\t\t\tif (localRun && new File(\"input.txt\").exists())\n\t\t\t\t\tSystem.setIn(new FileInputStream(\"input.txt\"));\n\t\t\t} catch (SecurityException e) {\n\t\t\t\t// Can't get property. It seems that solution is running in a secure\n\t\t\t\t// environment\n\t\t\t}\n\t\t\tif (STACK_SIZE < 0L) {\n\t\t\t\tINSTANCE.run();\n\t\t\t} else {\n\t\t\t\tnew Thread(null, INSTANCE, \"Solver\", 1L << 24).start();\n\t\t\t}\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(999);\n\t\t}\n\t}\n\n\t@Override\n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\tout.close();\n\t\t\tin.close();\n\t\t\twriteLog(\"Total time: \"\n\t\t\t\t\t+ (System.currentTimeMillis() - initTime) + \" ms\");\n\t\t\twriteLog(\"Memory status: \" + memoryStatus());\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(999);\n\t\t}\n\t}\n\t\n\t/**************************************************************************\n\t * Input \n\t *************************************************************************/\n\tBufferedReader in;\n\tPrintWriter out;\n\tStringTokenizer st = new StringTokenizer(\"\");\n\t\n\tString nextToken() throws IOException {\n\t\twhile (!st.hasMoreTokens())\n\t\t\tst = new StringTokenizer(in.readLine());\n\t\treturn st.nextToken();\n\t}\n\t\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\t\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\t\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\t\n\tint[] nextIntArray(int size) throws IOException {\n\t\tint[] ret = new int [size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tret[i] = nextInt();\n\t\treturn ret;\n\t}\n\t\n\tlong[] nextLongArray(int size) throws IOException {\n\t\tlong[] ret = new long [size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tret[i] = nextLong();\n\t\treturn ret;\n\t}\n\t\n\tdouble[] nextDoubleArray(int size) throws IOException {\n\t\tdouble[] ret = new double [size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tret[i] = nextDouble();\n\t\treturn ret;\n\t}\n\t\n\tString nextLine() throws IOException {\n\t\tst = new StringTokenizer(\"\");\n\t\treturn in.readLine();\n\t}\n\t\n\tboolean isEof() throws IOException {\n\t\twhile (!st.hasMoreTokens()) {\n\t\t\tString s = in.readLine();\n\t\t\tif (s == null)\n\t\t\t\treturn true;\n\t\t\tst = new StringTokenizer(s);\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t/************************************************************************** \n\t * Output \n\t *************************************************************************/\n\tvoid printRepeat(String s, int count) {\n\t\tfor (int i = 0; i < count; i++)\n\t\t\tout.print(s);\n\t}\n\t\n\tvoid printArray(int[] array) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i > 0) out.print(' ');\n\t\t\tout.print(array[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid printArray(long[] array) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i > 0) out.print(' ');\n\t\t\tout.print(array[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid printArray(double[] array) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i > 0) out.print(' ');\n\t\t\tout.print(array[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid printArray(double[] array, String spec) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i > 0) out.print(' ');\n\t\t\tout.printf(Locale.US, spec, array[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid printArray(Object[] array) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tboolean blank = false;\n\t\tfor (Object x : array) {\n\t\t\tif (blank) out.print(' '); else blank = true;\n\t\t\tout.print(x);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\t@SuppressWarnings(\"rawtypes\")\n\tvoid printCollection(Collection collection) {\n\t\tif (collection == null || collection.isEmpty())\n\t\t\treturn;\n\t\tboolean blank = false;\n\t\tfor (Object x : collection) {\n\t\t\tif (blank) out.print(' '); else blank = true;\n\t\t\tout.print(x);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\t/**************************************************************************\n\t * Utility\n\t *************************************************************************/\n\t\n\tstatic String memoryStatus() {\n\t\treturn (Runtime.getRuntime().totalMemory()\n\t\t\t\t- Runtime.getRuntime().freeMemory() >> 20)\n\t\t\t\t+ \"/\" + (Runtime.getRuntime().totalMemory() >> 20) + \" MB\";\n\t}\n\t\n\tstatic void checkMemory() {\n\t\tSystem.err.println(memoryStatus());\n\t}\n\t\n\tstatic long getRunningTime() {\n\t\treturn System.currentTimeMillis() - initTime;\n\t}\n\t\n\tstatic void chk(boolean f) {\n\t\tif (!f) throw new RuntimeException(\"Assert failed\");\n\t}\n\t\n\tstatic void chk(boolean f, String format, Object ... args) {\n\t\tif (!f) throw new RuntimeException(String.format(format, args));\n\t}\n\t\n\tstatic void writeLog(String format, Object... args) {\n\t\tif (localRun && WRITE_LOG)\n\t\t\tSystem.err.println(String.format(Locale.US, format, args));\n\t}\n\t\n\tstatic void swap(int[] a, int i, int j) {\n\t\tint tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic void swap(long[] a, int i, int j) {\n\t\tlong tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic void swap(double[] a, int i, int j) {\n\t\tdouble tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic void swap(Object[] a, int i, int j) {\n\t\tObject tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic void shuffle(int[] a, int from, int to) {\n\t\tfor (int i = from; i <= to; i++)\n\t\t\tswap(a, i, from + RANDOM.nextInt(i - from + 1));\n\t}\n\t\n\tstatic void shuffle(long[] a, int from, int to) {\n\t\tfor (int i = from; i <= to; i++)\n\t\t\tswap(a, i, from + RANDOM.nextInt(i - from + 1));\n\t}\n\t\n\tstatic void shuffle(double[] a, int from, int to) {\n\t\tfor (int i = from; i <= to; i++)\n\t\t\tswap(a, i, from + RANDOM.nextInt(i - from + 1));\n\t}\n\t\n\tstatic void shuffle(Object[] a, int from, int to) {\n\t\tfor (int i = from; i <= to; i++)\n\t\t\tswap(a, i, from + RANDOM.nextInt(i - from + 1));\n\t}\n\t\n\tstatic void shuffle(int[] a) {\n\t\tif (a == null) return;\n\t\tshuffle(a, 0, a.length - 1);\n\t}\n\t\n\tstatic void shuffle(long[] a) {\n\t\tif (a == null) return;\n\t\tshuffle(a, 0, a.length - 1);\n\t}\n\t\n\tstatic void shuffle(double[] a) {\n\t\tif (a == null) return;\n\t\tshuffle(a, 0, a.length - 1);\n\t}\n\t\n\tstatic void shuffle(Object[] a) {\n\t\tif (a == null) return;\n\t\tshuffle(a, 0, a.length - 1);\n\t}\n\t\n\tstatic long[] getPartialSums(int[] a) {\n\t\tfinal long[] sums = new long [a.length + 1];\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tsums[i + 1] = sums[i] + a[i];\n\t\treturn sums;\n\t}\n\t\n\tstatic long[] getPartialSums(long[] a) {\n\t\tfinal long[] sums = new long [a.length + 1];\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tsums[i + 1] = sums[i] + a[i];\n\t\treturn sums;\n\t}\n\t\n\tstatic int[] getOrderedSet(int[] a) {\n\t\tfinal int[] set = Arrays.copyOf(a, a.length);\n\t\tif (a.length == 0) return set;\n\t\tshuffle(set);\n\t\tsort(set);\n\t\tint k = 1;\n\t\tint prev = set[0];\n\t\tfor (int i = 1; i < a.length; i++) {\n\t\t\tif (prev != set[i]) {\n\t\t\t\tset[k++] = prev = set[i];\n\t\t\t}\n\t\t}\n\t\treturn Arrays.copyOf(set, k);\n\t}\n\t\n\tstatic long[] getOrderedSet(long[] a) {\n\t\tfinal long[] set = Arrays.copyOf(a, a.length);\n\t\tif (a.length == 0) return set;\n\t\tshuffle(set);\n\t\tsort(set);\n\t\tint k = 1;\n\t\tlong prev = set[0];\n\t\tfor (int i = 1; i < a.length; i++) {\n\t\t\tif (prev != set[i]) {\n\t\t\t\tset[k++] = prev = set[i];\n\t\t\t}\n\t\t}\n\t\treturn Arrays.copyOf(set, k);\n\t}\n\t\n\tstatic int gcd(int x, int y) {\n\t\tx = abs(x);\n\t\ty = abs(y);\n\t\twhile (x > 0 && y > 0) {\n\t\t\tif (x > y) {\n\t\t\t\tx %= y;\n\t\t\t} else {\n\t\t\t\ty %= x;\n\t\t\t}\n\t\t}\n\t\treturn x + y;\n\t}\n\t\n\tstatic long gcd(long x, long y) {\n\t\tx = abs(x);\n\t\ty = abs(y);\n\t\twhile (x > 0 && y > 0) {\n\t\t\tif (x > y) {\n\t\t\t\tx %= y;\n\t\t\t} else {\n\t\t\t\ty %= x;\n\t\t\t}\n\t\t}\n\t\treturn x + y;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class C>\nvoid mini(C& a4, C b4) {\n  a4 = min(a4, b4);\n}\ntemplate <class C>\nvoid maxi(C& a4, C b4) {\n  a4 = max(a4, b4);\n}\ntemplate <class T1, class T2>\nostream& operator<<(ostream& out, pair<T1, T2> pair) {\n  return out << \"(\" << pair.first << \", \" << pair.second << \")\";\n}\nconst int N = 2e3 + 5;\nint res[N];\nvoid Deb(int i, int j, int k) {}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(10);\n  double beg = 1.0 * clock() / CLOCKS_PER_SEC;\n  int n, m, sp;\n  cin >> n >> m >> sp;\n  ;\n  for (int i = (1); i <= (n); ++i) {\n    for (int j = (1); j <= (m); ++j) {\n      char c;\n      cin >> c;\n      ;\n      if (c == '.') {\n        continue;\n      }\n      if (c == 'U') {\n        if (i % 2 == 1) {\n          res[j]++;\n          Deb(i, j, j);\n        }\n      } else if (c == 'D') {\n        if (i == 1) {\n          res[j] += n;\n        }\n      } else {\n        int col;\n        if (c == 'R') {\n          col = j + i - 1;\n        } else {\n          col = j - i + 1;\n        }\n        if (col >= 1 && col <= m) {\n          res[col]++;\n          Deb(i, j, col);\n        }\n      }\n    }\n  }\n  for (int i = (1); i <= (m); ++i) {\n    cout << res[i] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar s[2005][2005];\nint ans[2005];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; ++i) scanf(\"%s\", s[i]);\n  for (int i = 1; i < n; ++i)\n    for (int j = 0; j < m; ++j) {\n      if (s[i][j] == 'R' && i + j < m) ans[i + j]++;\n      if (s[i][j] == 'L' && j - i >= 0) ans[j - i]++;\n      if (s[i][j] == 'U' && i % 2 == 0) ans[j]++;\n    }\n  for (int i = 0; i < m; ++i) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Maxn = 2005;\nint n, m, k;\nchar B[Maxn][Maxn];\nint Check(int r, int c, char need) {\n  return 0 <= r && r < n && 0 <= c && c < m && B[r][c] == need;\n}\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", B[i]);\n  for (int j = 0; j < m; j++) {\n    int res = 0;\n    for (int i = 1; i < n; i++)\n      res += Check(i, j - i, 'R') + Check(i, j + i, 'L') + Check(i + i, j, 'U');\n    printf(\"%d%c\", res, j + 1 < m ? ' ' : '\\n');\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2011;\nint a[MAXN][MAXN];\nchar str[MAXN];\nint N, M, K;\nint solve(int c) {\n  int ret = 0;\n  for (int i = 2; i <= N; i++) {\n    int nj;\n    nj = c + (i - 1);\n    if (nj <= M && a[i][nj] == 1) ret++;\n    nj = c - (i - 1);\n    if (nj >= 1 && a[i][nj] == 2) ret++;\n    if (a[i][c] == 3 && i % 2 == 1) ret++;\n  }\n  return ret;\n}\nint main() {\n  while (scanf(\"%d%d%d\", &N, &M, &K) > 0) {\n    for (int i = 1; i <= N; i++) {\n      scanf(\"%s\", str);\n      for (int j = 1; j <= M; j++) {\n        switch (str[j - 1]) {\n          case '.':\n          case 'D':\n            a[i][j] = 0;\n            break;\n          case 'L':\n            a[i][j] = 1;\n            break;\n          case 'R':\n            a[i][j] = 2;\n            break;\n          case 'U':\n            a[i][j] = 3;\n            break;\n        }\n      }\n    }\n    for (int j = 1; j <= M; j++) {\n      if (j != 1) printf(\" \");\n      int nans = solve(j);\n      printf(\"%d\", nans);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<string> a(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  for (int i = 0; i < m; ++i) {\n    int ans = 0;\n    for (int j = 0; j < n; ++j) {\n      if (a[j][i] == 'U' && j % 2 == 0) {\n        ++ans;\n      }\n    }\n    for (int j = 0; j < n && i + j < m; ++j) {\n      if (a[j][i + j] == 'L') {\n        ++ans;\n      }\n    }\n    for (int j = 0; j < n && i - j >= 0; ++j) {\n      if (a[j][i - j] == 'R') {\n        ++ans;\n      }\n    }\n    cout << ans << ' ';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 2000 + 20;\nint res[MAX_N];\nchar _map[MAX_N][MAX_N];\nint n, m, k;\nbool isOK(int i, int j) {\n  if (i < 0 || j < 0 || i >= n || j >= m) return false;\n  return true;\n}\nint main() {\n  memset(res, 0, sizeof(res));\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", _map[i]);\n  for (int i = 0; i < m; i++) {\n    for (int j = 0; j < n; j++) {\n      if (isOK(j, i - j) && _map[j][i - j] == 'R') res[i]++;\n      if (isOK(j, i + j) && _map[j][i + j] == 'L') res[i]++;\n      if (isOK(j << 1, i) && _map[j << 1][i] == 'U') res[i]++;\n    }\n  }\n  printf(\"%d\", res[0]);\n  for (int i = 1; i < m; i++) printf(\" %d\", res[i]);\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class B {\n\n\tpublic static void main(String[] args) {\n\t\tnew B().solve();\n\t}\n\n\tpublic void solve() {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        in.nextLine();\n        char[][] g = new char[n][m];\n        for (int i = 0; i < n; i++) {\n            String s = in.nextLine();\n            for (int j = 0; j < m; j++)\n                g[i][j] = s.charAt(j);\n        }\n        int[] dx = {0, 1, 0, -1};\n        int[] dy = {1, 0, -1, 0};\n        char[] d = {'U', 'L', 'D', 'R'};\n        int[] cnt = new int[m];\n        for (int j = 0; j < m; j++) {\n            for (int i = 1; i < n; i++) {\n                for (int u = 0; u < 4; u++) {\n                    int c = j + dx[u] * i;\n                    int r = i + dy[u] * i;\n                    if (r < n && r >= 0 && c < m && c >= 0 && g[r][c] == d[u])\n                        cnt[j]++;\n                }\n            }\n        }\n        for (int i = 0; i < m; i++)\n            System.out.print(cnt[i] + \" \");\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint mang[111111];\nint m, n, k;\nchar a[2222][2222];\nint main() {\n  scanf(\"%d%d%d\\n\", &m, &n, &k);\n  for (int i = 1; i <= m; i++) {\n    for (int j = 1; j <= n; j++) scanf(\"%c\", &a[i][j]);\n    scanf(\"\\n\");\n  }\n  memset(mang, 0, sizeof(mang));\n  int x;\n  for (int i = 1; i <= m; i++)\n    for (int j = 1; j <= n; j++)\n      if (a[i][j] != '.') {\n        if (a[i][j] == 'D')\n          continue;\n        else if (a[i][j] == 'U') {\n          if (i % 2) mang[j]++;\n        } else if (a[i][j] == 'R') {\n          x = j + (i - 1);\n          if (x <= n) mang[x]++;\n        } else if (a[i][j] == 'L') {\n          x = j - (i - 1);\n          if (x >= 1) mang[x]++;\n        }\n      }\n  for (int i = 1; i <= n; i++) printf(\"%d \", mang[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class B {\n\n    public static void main(String[] args) {\n        try (Scanner scanner = new Scanner(System.in)) {\n            int n = scanner.nextInt();\n            String[] park = new String[n];\n            int m = scanner.nextInt();\n            int k = scanner.nextInt();\n            for (int i = 0; i < n; i++) {\n                park[i] = scanner.next();\n            }\n\n            solve(park);\n        }\n    }\n\n    private static void solve(String[] park) {\n        int n = park.length;\n        int m = park[0].length();\n        int[][] a = new int[m][n];\n        for (int j = 0; j < n; j++) {\n            String s = park[j];\n            for (int i = 0; i < m; i++) {\n                char c = s.charAt(i);\n                if (c == 'L' && i-j >= 0) {\n                    a[i-j][j]++;\n                }\n                if (c == 'R' && i+j < m) {\n                    a[i+j][j]++;\n                }\n                if (c == 'U' && j % 2 == 0) {\n                    a[i][j/2]++;\n                }\n            }\n        }\n\n        int[] sum = new int[m];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                sum[i] += a[i][j];\n            }\n        }\n        for (int i : sum) {\n            System.out.print(i + \" \");\n        }\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "class CodeforcesTask436BSolution:\n    def __init__(self):\n        self.result = ''\n        self.n_m_k = []\n        self.field = []\n\n    def read_input(self):\n        self.n_m_k = [int(x) for x in input().split(\" \")]\n        for x in range(self.n_m_k[0]):\n            self.field.append(input())\n\n    def process_task(self):\n        result_row = [0 for x in range(self.n_m_k[1])]\n        for x in range(self.n_m_k[0]):\n            for y in range(self.n_m_k[1]):\n                # print(x, y)\n                field = self.field[x][y]\n                if field == \"R\":\n                    pos = y + x\n                    if pos < self.n_m_k[1]:\n                        result_row[pos] += 1\n                elif field == \"L\":\n                    pos = y - x\n                    if pos >= 0:\n                        result_row[pos] += 1\n                elif field == \"U\" and not x % 2:\n                    result_row[y] += 1\n        self.result = \" \".join([str(x) for x in result_row])\n\n    def get_result(self):\n        return self.result\n\n\nif __name__ == \"__main__\":\n    Solution = CodeforcesTask436BSolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class OnNomSpiders436B\n{\n    public static void main(String[] args) \n    {\n        // Set up scanner\n        Scanner sc = new Scanner(System.in); \n        // System.out.println(\"Enter n\");   // Rows\n        int n = sc.nextInt();\n        // System.out.println(\"Enter m\");   // Columns\n        int m = sc.nextInt();\n        // System.out.println(\"Enter k\");   // Spiders\n        int k = sc.nextInt();\n        \n        int[] a = new int[m];\n        for (int r=0; r<n; r++)\n        {\n            // System.out.println(\"Enter next row\");\n            String row = sc.next();\n            for (int c=0; c<m; c++)\n            {\n                String ch = row.substring(c,c+1);\n                if (ch.equals(\"U\") && r%2!=1)    // Up will always be hit UNLESS it's ODD (otherwise they pass by)\n                {\n                    a[c]++;\n                }\n                else if (ch.equals(\"L\"))\n                {\n                    int where = c-r;\n                    if (where >= 0)\n                    {\n                        a[where]++;\n                    }\n                }\n                else if (ch.equals(\"R\"))\n                {\n                    int where = c+r;\n                    if (where < m)\n                    {\n                        a[where]++;\n                    }\n                }\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i=0; i<m; i++)\n        {\n            sb.append(a[i] + \" \");\n        }\n        System.out.println(sb);\n    }\n}\n        \n        \n        \n        \n        "
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n// attempt 2\n\npublic class OmnomAndSpiders {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tString nmk = sc.nextLine();\n\n\t\tString[] nmk2 = nmk.split(\"\\\\s\");\n\n\t\tint n = Integer.parseInt(nmk2[0]);\n\t\tint m = Integer.parseInt(nmk2[1]);\n\t\tint k = Integer.parseInt(nmk2[2]);\n\n\t\tchar[][] park = new char[n][m];\n\n\t\tfor (int i = 0; i < n; i++) {\n\n\t\t\tString line = sc.nextLine();\n\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tpark[i][j] = line.charAt(j);\n\t\t\t}\n\n\t\t}\n\n\t\tStringBuilder output = new StringBuilder();\n\n\t\tfor (int i = 0; i < m; i++) {\n\n\t\t\tint spiders = 0;\n\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (j+j < n) {\n\t\t\t\t\tif (park[j+j][i] == 'U') {\n\t\t\t\t\t\tspiders++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i+j < m) {\n\t\t\t\t\tif (park[j][i+j] == 'L') {\n\t\t\t\t\t\tspiders++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i-j >= 0){\n\t\t\t\t\tif (park[j][i-j] == 'R') {\n\t\t\t\t\t\tspiders++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toutput.append(spiders);\n\t\t\toutput.append(\" \");\n\t\t}\n\n\t\tSystem.out.println(output);\n\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "n,m,k=map(int,raw_input().split())\n\nveld=[]\nfor i in range(n):\n    veld.append(list(raw_input().strip()))\n    \n\nfor y in range(m):\n    res,stap=0,0\n    for x in range(1,n):\n        stap+=1\n        \n        if y+stap<m and veld[x][y+stap]=='L':\n            res+=1\n        if y-stap>=0 and veld[x][y-stap]=='R':\n            res+=1        \n        if x+stap<n and veld[stap+x][y]=='U':\n            res+=1 \n    print res,\n       \n        \n\n    \n    \n\n    \n    "
        },
        {
            "language": 4,
            "solution": "/* package whatever; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Ideone\n{\n    public static void main (String[] args) throws java.lang.Exception\n    {\n        Scanner sc =new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n        char a[][] = new char[n][m];\n        for(int i = 0;i<n;i++){\n            String s = sc.next();\n            for(int j = 0;j<m;j++){\n                a[i][j]=s.charAt(j);\n            }\n        }\n        for(int i = 0;i<m;i++){//begin at (i,0)\n            int x = 0;\n            int y = i;\n            int count = 0;\n            while(0<=x&&x<n&&0<=y&&y<m){\n                if(a[x][y]=='L'){\n                    count++;\n                }\n                x++;\n                y++;\n            }\n            x=0;\n            y=i;\n            while(0<=x&&x<n&&0<=y&&y<m){\n                //System.out.println(i + \" \" + a[x][y]);\n                if(a[x][y]=='R'){\n                    count++;\n                }\n                x++;\n                y--;\n            }\n            x=0;\n            y=i;\n            while(0<=x&&x<n&&0<=y&&y<m){\n                if(a[x][y]=='U'){\n                    count++;\n                }\n                x+=2;\n            }\n            System.out.print(count + \" \");\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N, M;\nint cnt[2005];\nchar ss[2005], now;\nint main() {\n  int i, j, tmp;\n  scanf(\"%d %d %d\", &N, &M, &tmp);\n  for (i = 1; i <= N; i++) {\n    scanf(\"%s\", ss);\n    for (j = 1; j <= M; j++) {\n      now = ss[j - 1];\n      if (now == 'U')\n        cnt[j] += (i & 1);\n      else if (now == 'D')\n        cnt[j] += N * (i == 1);\n      else if (now == 'R') {\n        tmp = j + i - 1;\n        if (tmp <= M) cnt[tmp]++;\n      } else if (now == 'L') {\n        tmp = j - i + 1;\n        if (tmp >= 1) cnt[tmp]++;\n      }\n    }\n  }\n  for (i = 1; i <= M; i++) printf(\"%d \", cnt[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nconstexpr int N = 2002;\nstring s[N];\nint ans[N];\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    cin >> s[i];\n  }\n  for (int i = 1; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      if (j >= i && s[i][j - i] == 'R') ans[j]++;\n      if (j + i < m && s[i][j + i] == 'L') ans[j]++;\n      if (i + i < n && s[i + i][j] == 'U') ans[j]++;\n    }\n  }\n  for (int i = 0; i < m; i++) cout << ans[i] << \" \";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.Map.Entry;\nimport java.io.*;\nimport java.awt.Point;\nimport java.math.BigInteger;\n\nimport static java.lang.Math.*;\n\npublic class CodeforcesB implements Runnable {\n\n    final boolean ONLINE_JUDGE = System.getProperty(\"ONLINE_JUDGE\") != null;\n\n    BufferedReader in;\n    PrintWriter out;\n    StringTokenizer tok = new StringTokenizer(\"\");\n\n    void init() throws FileNotFoundException {\n        if (ONLINE_JUDGE) {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n        } else {\n            in = new BufferedReader(new FileReader(\"input.txt\"));\n            out = new PrintWriter(\"output.txt\");\n        }\n    }\n\n    String readString() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            try {\n                tok = new StringTokenizer(in.readLine());\n            } catch (Exception e) {\n                return null;\n            }\n        }\n        return tok.nextToken();\n    }\n\n    int readInt() throws IOException {\n        return Integer.parseInt(readString());\n    }\n\n    long readLong() throws IOException {\n        return Long.parseLong(readString());\n    }\n\n    double readDouble() throws IOException {\n        return Double.parseDouble(readString());\n    }\n\n    public static void main(String[] args) {\n        new Thread(null, new CodeforcesB(), \"\", 128 * (1L << 20)).start();\n    }\n\n    long timeBegin, timeEnd;\n\n    void time() {\n        timeEnd = System.currentTimeMillis();\n        System.err.println(\"Time = \" + (timeEnd - timeBegin));\n    }\n\n    long memoryTotal, memoryFree;\n\n    void memory() {\n        memoryFree = Runtime.getRuntime().freeMemory();\n        System.err.println(\"Memory = \" + ((memoryTotal - memoryFree) >> 10)\n                + \" KB\");\n    }\n\n    void debug(Object... objects) {\n        if (DEBUG) {\n            for (Object o : objects) {\n                System.err.println(o.toString());\n            }\n        }\n    }\n\n    public void run() {\n        try {\n            timeBegin = System.currentTimeMillis();\n            memoryTotal = Runtime.getRuntime().freeMemory();\n            init();\n            solve();\n            out.close();\n            time();\n            memory();\n        } catch (Exception e) {\n            e.printStackTrace(System.err);\n            System.exit(-1);\n        }\n    }\n\n    boolean DEBUG = false;\n\n    void solve() throws IOException {\n\n        int n = readInt();\n        int m = readInt();\n        int k = readInt();\n        \n        int[] ans = new int[m];\n        \n        for (int i=0; i<n; i++) {\n            char[] s = readString().toCharArray();\n            for (int j=0; j<m; j++) {\n                if (s[j] == 'U') {\n                    if (i % 2 == 1) continue;\n                    ans[j]++;\n                }\n                if (s[j] == 'D') continue;\n                if (s[j] == 'R') {\n                    int t = i;\n                    if (j+t<m) ans[j+t]++;\n                }\n                if (s[j] == 'L') {\n                    if (j-i<m && j-i>=0) ans[j-i]++;\n                }\n            }\n        }\n        \n        for (int x : ans) {\n            out.print(x+\" \");\n        }\n        \n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Ww2 {\n\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Scanner sca = new Scanner(System.in);\n        int a = sca.nextInt();\n        int b = sca.nextInt();\n        int sp = sca.nextInt();\n        int ai[][] = new int[a + 1][b + 1];\n        for (int i = 1; i <= a; i++) {\n            String t = sca.next();\n            for (int j = 1; j <= b; j++) {\n                char d = t.charAt(j - 1);\n                if (d == 'L') {\n                    ai[i][j] = 1;\n                } else if (d == 'R') {\n                    ai[i][j] = 2;\n                } else if (d == 'U') {\n                    ai[i][j] = 3;\n                } else {\n                    ai[i][j] = 4;\n                }\n            }\n        }\n        int line[] = new int[b + 1];\n        for (int i = 1; i <= a; i++) {\n            for (int j = 1; j <= b; j++) {\n                if (ai[i][j] == 1) {\n                    // int t=1;\n                    if (j >= i) {\n                        int t = j - i + 1;\n                        line[t]++;\n                    }\n                } else if (ai[i][j] == 2) {\n                    if (j + i-1 <= b) {\n                        line[j + i-1]++;\n                    }\n                } else if (ai[i][j] == 3) {\n                    if(i%2!=0)\n                    line[j]++;\n                }\n            }\n        }\n        for(int i=1;i<=b;i++){\n            System.out.print(line[i]+\" \");\n        }System.out.println();\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "R = lambda:map(int, raw_input().split())\nr, c, k = R()\ng = [raw_input() for i in range(r)]\nfor j in range(c):\n\tcnt = 0\n\tfor i in range(1, r):\n\t\tif i << 1 < r and g[i<<1][j] == 'U': cnt += 1\n\t\tif j + i < c and g[i][j+i] == 'L': cnt += 1\n\t\tif j >= i and g[i][j-i] == 'R': cnt += 1\n\tprint cnt,\nprint\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n  final boolean isFileIO = false; \n  BufferedReader in;\n  PrintWriter out;\n  StringTokenizer st = new StringTokenizer(\"\");\n  String delim = \" \";\n\n  public static void main(String[] args) throws IOException {\n    Main m = new Main();\n    m.initIO();\n    m.solve();\n    m.in.close();\n    m.out.close();\n  }\n\n  public void initIO() throws IOException {\n    if(!isFileIO) {\n      in = new BufferedReader(new InputStreamReader(System.in));\n      out = new PrintWriter(System.out);\n    } else {\n      in = new BufferedReader(new FileReader(\"A-large-practice.in\"));\n      out = new PrintWriter(\"output.txt\"); \n    }\n  }\n  \n  String nextToken() throws IOException {\n    if(!st.hasMoreTokens()) {\n      st = new StringTokenizer(in.readLine());\n    }\n    return st.nextToken(delim);\n  }\n \n  String readLine() throws IOException {\n    return in.readLine();\n  }\n\n  int nextInt() throws IOException {\n   return Integer.parseInt(nextToken());\n  }\n\n  long nextLong() throws IOException {\n    return Long.parseLong(nextToken());\n  }\n\n  double nextDouble() throws IOException {\n    return Double.parseDouble(nextToken());\n  }\n\n\n  void solve() throws IOException {\n    int n, m, k;\n    n = nextInt(); m = nextInt(); k = nextInt();\n    String[] map = new String[n];\n    for(int i = 0; i < n; i++) {\n      map[i] = readLine();\n    }\n    int[] cnt = new int[m];\n    for(int i = 0; i < n; i++) {\n      for(int j = 0; j < m; j++) {\n        char ch = map[i].charAt(j);\n        if(ch == 'U') {\n          if(i % 2 == 0) \n            cnt[j]++;\n        }\n        if(ch == 'R') {\n          if(i + j < m)\n            cnt[i + j]++;\n        }\n        if(ch == 'L') {\n          if(j - i >= 0) {\n            cnt[j - i]++;\n          }\n        }\n      }\n    }\n    for(int i = 0; i < m; i++)\n      out.print(cnt[i] + \" \");\n    out.println();\n  }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def f():\n    n, m, k = map(int, input().split())\n    s = []\n    a = []\n    for i in range(n):\n        s.append(input())\n    for j in range(m):\n        ans = 0\n        for i in range(n):\n            if i + i < n and s[i + i][j] == 'U':\n                ans += 1\n            if j - i >= 0 and s[i][j - i] == 'R':\n                ans += 1\n            if j + i < m and s[i][j + i] == 'L':\n                ans += 1\n        a.append(ans)        \n    print(' '.join(map(str, a)))\nf()\n        \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2007;\nchar a[maxn][maxn];\nint n, m, k;\nint calc(int col) {\n  int res = 0;\n  for (int i = 3; i <= n; i += 2)\n    if (a[i][col] == 'U') ++res;\n  int i = 2, j = col - 1;\n  while (i <= n && j >= 1) {\n    if (a[i][j] == 'R') ++res;\n    ++i;\n    --j;\n  }\n  i = 2;\n  j = col + 1;\n  while (i <= n && j <= m) {\n    if (a[i][j] == 'L') ++res;\n    ++i;\n    ++j;\n  }\n  return res;\n}\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 1, _c = n; i <= _c; i++) scanf(\"%s\", a[i] + 1);\n  for (int i = 1, _c = m; i <= _c; i++) printf(\"%d \", calc(i));\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n    BufferedReader br;\n    StringTokenizer in;\n    PrintWriter out;\n\n    public String nextToken() throws IOException {\n        while (in == null || !in.hasMoreTokens()) {\n            in = new StringTokenizer(br.readLine());\n        }\n        return in.nextToken();\n    }\n\n    public int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    public double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    public long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    public static void main(String[] args) throws IOException {\n        new B().run();\n    }\n\n    public void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        int[] cnt = new int[m];\n        for (int i = 0; i < n; ++i) {\n            char[] s = nextToken().toCharArray();\n            for (int j = 0; j < m; ++j) {\n                if (s[j] == 'U' && i % 2 == 0) {\n                    ++cnt[j];\n                }\n                if (s[j] == 'L' && j - i >= 0) {\n                    ++cnt[j - i];\n                }\n                if (s[j] == 'R' && j + i < m) {\n                    ++cnt[j + i];\n                }\n            }\n        }\n        for (int i = 0; i < m; ++i)\n            out.print(cnt[i] + \" \");\n    }\n\n    public void run() {\n        try {\n            br = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n\n            solve();\n\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,k=[int(x) for x in input().split()]\npark=[input() for i in range(n)]\nanswers=[0]*m\nfor inot in range(n):\n    for j in range(m):\n        if park[inot][j]!='.':\n            i=(j,inot,park[inot][j])\n            if i[2]=='R':\n                if i[0]+i[1]<m:\n                    answers[i[0]+i[1]]+=1\n            elif i[2]=='L':\n                if i[0]-i[1]>=0:\n                    answers[i[0]-i[1]]+=1\n            elif i[2]=='U':\n                if not i[1]&1:\n                    answers[i[0]]+=1\nfor i in answers:\n    print(i,end=' ')"
        },
        {
            "language": 1,
            "solution": "from sys import stdin;\n\ni = [l[:-1] for l in stdin.readlines()]\n\npark = i[1:]\np = [int(a) for a in i[0].split()]\n\nn=p[0]\nm=p[1]\nk=p[2]\n\ns=[0]*m\n\n\nfor i in range(n):\n\tfor j in range(m):\n\t\tc = park[i][j]\n\t\tif(c == \"R\"):\n\t\t\tt = j+i\n\t\t\tif(t<m):\n\t\t\t\ts[t] +=1\n\t\tif(c == \"L\"):\n\t\t\tt = j-i\n\t\t\tif(t>=0):\n\t\t\t\ts[t] +=1\n\t\tif(c == \"U\"):\n\t\t\tif(not (i % 2)):\n\t\t\t\ts[j] +=1\n\nfor a in  s:\n\tprint a,\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Spider\n{\n    public static void main(String []av) {\n        Scanner s = new Scanner();\n        int n = s.nextInt();\n        int m = s.nextInt();\n        int k = s.nextInt();\n        char [][]p = new char[n][];\n        for (int i = 0; i < n; i++) {\n            p[i] = s.readNextLine().toCharArray();\n        }\n        int [] M = new int[m];  // see spider in column j\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                switch (p[i][j]) {\n                    case 'R':\n                        if (i + j < m)\n                            M[i+j] += 1;\n                        break;\n                    case 'L':\n                        if (j - i >= 0)\n                            M[j-i] += 1;\n                        break;\n                    case 'U':\n                        if (i % 2 == 0)\n                            M[j] += 1;\n                        break;\n                    case 'D':\n                        break;\n                }\n            }\n        }\n        StringBuilder o = new StringBuilder();\n        for (int j = 0; j < m; j++) {\n            o.append(Integer.toString(M[j]));\n            if (j < m - 1)\n                o.append(' ');\n        }\n        System.out.println(o.toString());\n    }\n\n    //-----------Scanner class for faster input----------\n    /* Provides similar API as java.util.Scanner but does not\n     * use regular expression engine.  \n     */\n    public static class Scanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner(Reader in) {\n            br = new BufferedReader(in);\n        }\n\n        public Scanner() { this(new InputStreamReader(System.in)); }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() { return Integer.parseInt(next()); }\n        long nextLong() { return Long.parseLong(next()); }\n        double nextDouble() { return Double.parseDouble(next()); }\n\n        // Slightly different from java.util.Scanner.nextLine(),\n        // which returns any remaining characters in current line,\n        // if any.  \n        String readNextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n    //--------------------------------------------------------    \n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, m, k;\n  char s[2002];\n  long long r[2000] = {};\n  std::scanf(\"%d%d%d\\n\", &n, &m, &k);\n  for (int i(0); i < n; ++i) {\n    std::fgets(s, sizeof(s), stdin);\n    for (int j(0); j < m; ++j) {\n      switch (s[j]) {\n        case 'D':\n          r[j] += i == 0;\n          break;\n        case 'U':\n          r[j] += i % 2 == 0;\n          break;\n        case 'R':\n          k = i + j;\n          if (k < m) r[k]++;\n          break;\n        case 'L':\n          k = j - i;\n          if (0 <= k) r[k]++;\n          break;\n      }\n    }\n  }\n  std::ios::sync_with_stdio(false);\n  for (int i(0); i < m; ++i) {\n    if (0 < i) std::cout << ' ';\n    std::cout << r[i];\n  }\n  std::cout << std::endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e3 + 10;\nchar a[maxn][maxn];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, k, x, ans = 0;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) cin >> a[i][j];\n  for (int j = 0; j < m; j++) {\n    ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (2 * i < maxn) {\n        if (a[i + i][j] == 'U') ans++;\n      }\n      if (i + j < maxn) {\n        if (a[i][j + i] == 'L') ans++;\n      }\n      if (j >= i) {\n        if (a[i][j - i] == 'R') ans++;\n      }\n    }\n    cout << ans << \" \";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "I = lambda:map(int,input().split())\nn,m,k = I()\nf = [['.' for _ in range(m)] for _ in range(n)]\nfor i in range(n):\n    s = input()\n    for j in range(len(s)):\n        if s[j] != '.':\n            f[i][j] = s[j]\nans = [0] * m\nfor i in range(n):\n    for j in range(m):\n        if j - i >= 0 and f[i][j - i] == 'R':\n            ans[j] += 1\n        if j + i < m and f[i][j + i] == 'L':\n            ans[j] += 1\n        if f[0][j] == 'D':\n            ans[j] += 1\n        if i + i < n and f[i + i][j] == 'U':\n            ans[j] += 1\nprint (*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class A, class B>\nostream &operator<<(ostream &os, const pair<A, B> &p) {\n  return os << '(' << p.first << \", \" << p.second << ')';\n}\ntemplate <class C>\nvoid operator<<(vector<C> &v, const C &x) {\n  v.push_back(x);\n}\ntemplate <class D>\nvoid operator>>(vector<D> &v, D &x) {\n  assert(!v.empty());\n  x = v.back();\n  v.pop_back();\n}\ntemplate <class E>\nvoid operator<<(set<E> &v, const E &x) {\n  v.insert(x);\n}\ntemplate <class F>\nvoid operator<<(queue<F> &c, const F &v) {\n  v.push(v);\n}\ntemplate <class G>\nvoid operator>>(queue<G> &c, const G &v) {\n  const G r = v.front();\n  v.pop();\n  return r;\n}\nconst int inf = 0x3f3f3f3f;\nconst long long inf64 = 0x3f3f3f3f3f3f3f3fLL;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\nconst int dir[4][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\nconst int maxn = 2020;\nstring s[maxn];\nint ans[maxn];\nint main() {\n  ios_base::sync_with_stdio(false);\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i) {\n    cin >> s[i];\n    for (int j = 0; j < m; ++j) {\n      int t;\n      switch (s[i][j]) {\n        case 'U':\n          if (i % 2 == 0) ans[j]++;\n          break;\n        case 'R':\n          t = i + j;\n          if (t < maxn) ans[t]++;\n          break;\n        case 'L':\n          t = j - i;\n          if (t >= 0) ans[t]++;\n          break;\n      }\n    }\n  }\n  for (int j = 0; j < m; ++j) {\n    cout << ans[j] << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar ar[2005][2005];\nint main() {\n  int n;\n  int m;\n  int k;\n  cin >> n >> m >> k;\n  string s;\n  for (long long i = 0; (i) < (n); ++i) {\n    cin >> ar[i];\n  }\n  int x = 0;\n  while (x < m) {\n    long long ans = 0;\n    long long y = 0;\n    while (y != n - 1) {\n      y++;\n      if (x - y >= 0 && ar[y][x - y] == 'R') ans++;\n      if (x + y < m && ar[y][x + y] == 'L') ans++;\n      if (y + y < n && ar[y + y][x] == 'U') ans++;\n    }\n    cout << ans << \" \";\n    x++;\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nchar tmp[2222];\nint ans[2222];\nint main() {\n  int n, m, i, j, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", tmp);\n    for (j = 0; j < m; j++) {\n      switch (tmp[j]) {\n        case 'R':\n          if (0 <= j + i && j + i < m) ans[j + i]++;\n          break;\n        case 'L':\n          if (0 <= j - i && j - i < m) ans[j - i]++;\n          break;\n        case 'D':\n          break;\n        case 'U':\n          if (i % 2 == 0) ans[j]++;\n          break;\n      }\n    }\n  }\n  for (i = 0; i < m; i++) {\n    printf(\"%d \", ans[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Double.parseDouble;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class B {\n\t\n\tstatic BufferedReader in;\n\tstatic PrintWriter out;\n\tstatic StringTokenizer tok;\n\t\n\tstatic void solve() throws Exception {\n\t\tint n = nextInt();\n\t\tint m = nextInt();\n\t\tnextInt();\n\t\tint ans[] = new int[m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString l = next();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tswitch (l.charAt(j)) {\n\t\t\t\tcase '.':\n\t\t\t\tcase 'D':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\tif (j - i >= 0) {\n\t\t\t\t\t\t++ans[j - i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\tif (j + i < m) {\n\t\t\t\t\t\t++ans[j + i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'U':\n\t\t\t\t\tif ((i & 1) == 0) {\n\t\t\t\t\t\t++ans[j];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new AssertionError();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tout.print(ans[i] + \" \");\n\t\t}\n\t}\n\t\n\tstatic int nextInt() throws IOException {\n\t\treturn parseInt(next());\n\t}\n\n\tstatic long nextLong() throws IOException {\n\t\treturn parseLong(next());\n\t}\n\n\tstatic double nextDouble() throws IOException {\n\t\treturn parseDouble(next());\n\t}\n\n\tstatic String next() throws IOException {\n\t\twhile (tok == null || !tok.hasMoreTokens()) {\n\t\t\ttok = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn tok.nextToken();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout = new PrintWriter(new OutputStreamWriter(System.out));\n\t\t\tsolve();\n\t\t\tin.close();\n\t\t\tout.close();\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t\texit(1);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int M = 2000 + 4, Inf = 1e9 + 10;\nint n, m, k;\nchar f[M][M];\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) cin >> f[i][j];\n  for (int i = 0; i < m; i++) {\n    int ans = 0;\n    for (int y = 2; y < n; y += 2)\n      if (f[y][i] == 'U') ans++;\n    for (int x = i, y = 0; x >= 0 && y < n; y++, x--)\n      if (f[y][x] == 'R') ans++;\n    for (int x = i, y = 0; x < m && y < n; y++, x++)\n      if (f[y][x] == 'L') ans++;\n    cout << ans << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Rubanenko\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        String s = in.next();\n        int[] ans = new int[m + 1];\n        for (int i = 2; i <= n; i++) {\n            s = in.next();\n            for (int j = 1; j <= m; j++) {\n                char q = s.charAt(j - 1);\n                if (q == '.' || q == 'D') continue;\n                if (q == 'U') {\n                    if (i % 2 == 1) ans[j]++;\n                    continue;\n                }\n                if (q == 'R') {\n                    if (i - 1 + j <= m) ans[i - 1 + j]++;\n                    continue;\n                }\n                if (q == 'L') {\n                    if (j - i + 1 >= 1) ans[j - i + 1]++;\n                }\n            }\n        }\n        for (int i = 1; i <= m; i++) {\n            if (i != 1) out.print(' ');\n            out.print(ans[i]);\n        }\n        out.println();\n    }\n}\n\nclass InputReader {\n    private BufferedReader reader;\n    private StringTokenizer tokenizer;\n\n    public InputReader(InputStream inputStream) {\n        reader = new BufferedReader(new InputStreamReader(inputStream));\n    }\n\n    public String nextLine() {\n        String line = null;\n        try {\n            line = reader.readLine();\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n        return line;\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens())\n            tokenizer = new StringTokenizer(nextLine());\n        return tokenizer.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, res[2020] = {0};\nstring s[2020];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  for (int i = 1; i < n; i++)\n    for (int j = 0; j < m; j++) {\n      if (j - i >= 0 && s[i][j - i] == 'R') res[j]++;\n      if (j + i < m && s[i][j + i] == 'L') res[j]++;\n      if (i + i < n && s[i + i][j] == 'U') res[j]++;\n    }\n  for (int i = 0; i < m; i++) cout << res[i] << \" \";\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\npublic class problem {\n    public static void main(String[] args)  {\n        Scanner in = new Scanner(System.in);\n\n        char[][] guard=new char[2001][2001];\n\n        int n=in.nextInt();\n        int m=in.nextInt();\n        int k=in.nextInt();\n        int[] res=new int[m];\n\n\n        String testString = null;\n\n\n        for (int i = 0; i < n; i++) {\n            testString=in.next();\n            for (int j = 0; j < testString.length(); j++) {\n                guard[i][j] = testString.charAt(j);\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (guard[i - i][j] == 'D') {\n                    res[j]++;\n                }\n                if ((i + i <= n) && guard[i + i][j] == 'U') {\n                    res[j]++;\n                }\n                if ((j - i >= 0) && guard[i][j - i] == 'R') {\n                    res[j]++;\n                }\n                if ((j + i <= m) && guard[i][j + i] == 'L') {\n                    res[j]++;\n                }\n            }\n        }\n\n        for (int i = 0; i < m; i++) {\n\n            System.out.print(res[i]+\" \");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename X>\nX gcd(X a, X b) {\n  if (!b)\n    return a;\n  else\n    return gcd(b, a % b);\n}\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  string str[n + 1];\n  for (int i = 0; i < n; i++) cin >> str[i];\n  vector<int> v;\n  for (int i = 0, j = 0; j < m; i++, j++) {\n    int cnt = 0;\n    for (int l = 1, t = 1; l < n; l++, t++) {\n      if (j - t >= 0) {\n        if (str[l][j - t] == 'R') cnt++;\n      }\n      if (j + t < m) {\n        if (str[l][j + t] == 'L') cnt++;\n      }\n      if (l + t < n) {\n        if (str[l + t][j] == 'U') cnt++;\n      }\n      if (l - t >= 0) {\n        if (str[l - t][j] == 'D') cnt++;\n      }\n    }\n    v.push_back(cnt);\n  }\n  for (int i = 0; i < v.size(); i++) {\n    cout << v[i];\n    if (i < v.size() - 1) cout << \" \";\n  }\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintStream;\nimport java.util.StringTokenizer;\n\n/**\n * 436B\n *\n * @author artyom\n */\npublic class OmNomAndSpiders implements Runnable {\n    private BufferedReader in;\n    private PrintStream out;\n    private StringTokenizer tok;\n\n    private void solve() throws IOException {\n        int n = nextInt(), m = nextInt(), useless = nextInt();\n        char[][] matrix = new char[n][];\n        for (int i = 0; i < n; i++) {\n            matrix[i] = nextToken().toCharArray();\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int j = 0, p = m - 1; j < m; j++) {\n            int count = 0;\n            for (int i = 2; i < n; i++) {\n                if (i % 2 == 0 && matrix[i][j] == 'U') {\n                    count++;\n                }\n            }\n            for (int i = 1; i < n; i++) {\n                if (j >= i && matrix[i][j - i] == 'R') {\n                    count++;\n                }\n                if (j < m - i && matrix[i][j + i] == 'L') {\n                    count++;\n                }\n            }\n            sb.append(count);\n            if (j < p) {\n                sb.append(' ');\n            }\n        }\n        out.print(sb);\n    }\n\n    //--------------------------------------------------------------\n    public static void main(String[] args) {\n        new OmNomAndSpiders().run();\n    }\n\n    @Override\n    public void run() {\n        try {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = System.out;\n            tok = null;\n            solve();\n            in.close();\n        } catch (IOException e) {\n            System.exit(0);\n        }\n    }\n\n    private String nextToken() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    private int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    private static PrintWriter out;\n    private static FastReader in;\n\n    private static class FastReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public FastReader(InputStream inputStream) {\n            reader = new BufferedReader(\n                    new InputStreamReader(inputStream), 1 << 16);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                }\n                catch (IOException ex) {\n                    throw new RuntimeException(ex);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public String nextLine() {\n            try {\n                return reader.readLine();\n            }\n            catch (IOException ex) {\n                throw new RuntimeException(ex);\n            }\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n\n    public static void main(String[] args) throws FileNotFoundException {\n        /*in = new Scanner(new File(\"input.txt\"));\n        out = new PrintWriter(new File(\"output.txt\"));*/\n        in = new FastReader(System.in);\n        out = new PrintWriter(System.out);\n\n        int n = in.nextInt(), m = in.nextInt();\n        int k = in.nextInt();\n        int[] ans = new int[m];\n        Arrays.fill(ans, 0);\n        in.nextLine();\n        for (int i = 1; i < n; i++) {\n            String input = in.nextLine();\n            for (int j = 0; j < m; j++) {\n                switch (input.charAt(j)) {\n                    case '.':\n                        break;\n                    case 'R':\n                        if (i + j < m)\n                            ans[j+i]++;\n                        break;\n                    case 'L':\n                        if (j - i >= 0)\n                            ans[j-i]++;\n                        break;\n                    case 'U':\n                        if (i % 2 == 0)\n                            ans[j]++;\n                        break;\n                    case 'D':\n                        break;\n                }\n            }\n        }\n        for (int i : ans)\n            out.print(i + \" \");\n        out.println();\n\n        out.flush();\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "//Author: net12k44\nimport java.io.*;\nimport java.util.*;\n//public\nclass Main{//}\n\nprivate void solve() {\n\tint m = in.nextInt(), n = in.nextInt(), k = in.nextInt();\n\tchar a[][] = new char[m][];\n\tfor(int i = 0; i < m; ++i) a[i] = in.next().toCharArray();\n\t\n\tfor(int j = 0; j < n; ++j){\n\t\tint result = 0;\n\t\tif (a[0][j] != '.') result++;\n\t\tfor(int i = 1; i < m; ++i){\n\t\t\tif (j-i >= 0 && a[i][j-i] == 'R') result++;\n\t\t\tif (j+i < n && a[i][j+i] == 'L') result++;\n\t\t\tif (a[0][j] == 'D') result++;\n\t\t\tif (i+i < m && a[i+i][j] == 'U') result++;\n\t\t}\n\t\tout.print(result+\" \");\n\t}\n\t\n\t\n}\n\t\npublic static void main (String[] args) throws java.lang.Exception {\t\t\n\tlong startTime = System.currentTimeMillis();\n\n\tout = new PrintWriter(System.out);\n\tnew Main().solve();\t\n\t//out.println((String.format(\"%.2f\",(double)(System.currentTimeMillis()-startTime)/1000)));\n\tout.close();\n}\nstatic PrintWriter out;\nstatic class in {\n\tstatic BufferedReader reader = new BufferedReader( new InputStreamReader(System.in) ) ;\n\tstatic StringTokenizer tokenizer = new StringTokenizer(\"\");\t\t\t\t\n\tstatic String next() {\t\t\n\t\twhile ( !tokenizer.hasMoreTokens() )\n\t\t\ttry { tokenizer = new StringTokenizer( reader.readLine() ); }\n\t\t\tcatch (IOException e){\n\t\t\t\tthrow new RuntimeException(e);\t\t\t\n\t\t\t}\t\t\n\t\treturn tokenizer.nextToken();\n\t}\n\tstatic int nextInt() { return Integer.parseInt( next() ); }\t\t\t\n}\n//////////////////////////////////////////////////\n}//"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1000000007;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<int> res(m, 0);\n  string cur;\n  for (__typeof(n) i = (0) - ((0) > (n)); i != (n) - ((0) > (n));\n       i += 1 - 2 * ((0) > (n))) {\n    cin >> cur;\n    for (__typeof(cur.size()) j = (0) - ((0) > (cur.size()));\n         j != (cur.size()) - ((0) > (cur.size()));\n         j += 1 - 2 * ((0) > (cur.size()))) {\n      if (cur[j] == 'U' && (i & 1) == 0)\n        res[j]++;\n      else if (cur[j] == 'R' && (int)j + i < m)\n        res[j + i]++;\n      else if (cur[j] == 'L' && (int)j - (int)i >= 0)\n        res[j - i]++;\n    }\n  }\n  for (__typeof(m) i = (0) - ((0) > (m)); i != (m) - ((0) > (m));\n       i += 1 - 2 * ((0) > (m)))\n    cout << res[i] << \" \\n\"[i == m - 1];\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = acos(-1.0);\nlong long int n, m, k;\nint valid(int i, int j) {\n  if (i >= 0 && i < n && j >= 0 && j < m)\n    return 1;\n  else\n    return 0;\n}\nint main() {\n  cin >> n >> m >> k;\n  char v[2005][2005];\n  string temp = \"\";\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) cin >> v[i][j];\n  }\n  vector<int> a(m, 0);\n  long long int c = 0, t;\n  for (int j = 0; j < m; j++) {\n    c = 0;\n    for (int i = 1; i < n; i++) {\n      t = i;\n      if (valid(i - t, j) && v[i - t][j] == 'D') {\n        c++;\n      }\n      if (valid(i + t, j) && v[i + t][j] == 'U') {\n        c++;\n      }\n      if (valid(i, j - t)) {\n        if (v[i][j - t] == 'R') c++;\n      }\n      if (valid(i, j + t) && v[i][j + t] == 'L') {\n        c++;\n      }\n    }\n    a[j] = c;\n  }\n  for (int i = 0; i < a.size(); i++) cout << a[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, v[2005];\nchar a[2005][2005];\nvoid Citire() {\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++) cin >> (a[i] + 1);\n}\nvoid Rez() {\n  int t, solutie = 0;\n  for (int j = 1; j <= m; j++) {\n    for (int i = 1; i <= n; i++) {\n      t = i - 1;\n      if (i - t >= 1 && a[i - t][j] == 'D') solutie++;\n      if (i + t <= n && a[i + t][j] == 'U') solutie++;\n      if (j - t >= 1 && a[i][j - t] == 'R') solutie++;\n      if (j + t <= m && a[i][j + t] == 'L') solutie++;\n    }\n    v[j] = solutie;\n    solutie = 0;\n  }\n  for (int i = 1; i <= m; i++) cout << v[i] << \" \";\n  cout << \"\\n\";\n}\nint main() {\n  Citire();\n  Rez();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class PrBOmNomAndSpiders {\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew PrBOmNomAndSpiders().run();\n\t}\n\n\tBufferedReader in;\n\tPrintWriter out;\n\tStringTokenizer st;\n\n\tString nextToken() throws IOException {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\tst = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tvoid run() throws IOException {\n\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out, true);\n\t\tsolve();\n\t\tout.flush();\n\t}\n\n\tvoid solve() throws IOException {\n\t\tint n = nextInt();\n\t\tint m = nextInt();\n\t\tint k = nextInt();\n\t\tint[] answer = new int[m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = nextToken();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tchar plan = s.charAt(j);\n\t\t\t\tif (plan == 'U' && i % 2 == 0) {\n\t\t\t\t\tanswer[j]++;\n\t\t\t\t} else if (plan == 'R' && i + j < m) {\n\t\t\t\t\tanswer[i + j]++;\n\t\t\t\t} else if (plan == 'L' && j - i > -1) {\n\t\t\t\t\tanswer[j - i]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tout.print(answer[i] + \" \");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "R=raw_input\nn,m,k=map(int,R().split())\na=[0]*4096\nfor i in range(n):\n  s=R()\n  for j in range(m):\n    if 'L'==s[j]:\n      a[j-i]+=1\n    elif 'R'==s[j]:\n      a[j+i]+=1\n    elif 'U'==s[j] and not i%2:\n      a[j]+=1\nprint ' '.join(map(str,a[:m]))\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.*;\nimport java.awt.event.*;\nimport java.awt.geom.*;\nimport java.io.*;\nimport java.math.*;\nimport java.text.*; \nimport java.util.*;\nimport java.util.regex.*;\n\n/*\n  br = new BufferedReader(new FileReader(\"input.txt\"));\n  pw = new PrintWriter(new BufferedWriter(new FileWriter(\"output.txt\")));\n  br = new BufferedReader(new InputStreamReader(System.in));\n  pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n */\n\n\npublic class Main {\n\tprivate static BufferedReader br;\n\tprivate static StringTokenizer st;\n\tprivate static PrintWriter pw;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tpw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\t//int qq = 1;\n\t\tint qq = Integer.MAX_VALUE;\n\t\t//int qq = readInt();\n\t\tfor(int casenum = 1; casenum <= qq; casenum++) {\n\t\t\tint r = readInt();\n\t\t\tint c = readInt();\n\t\t\tnextToken();\n\t\t\tint[] ret = new int[c];\n\t\t\tfor(int i = 0; i < r; i++) {\n\t\t\t\tString s = nextToken();\n\t\t\t\tfor(int j = 0; j < c; j++) {\n\t\t\t\t\tif(s.charAt(j) == 'D' || s.charAt(j) == '.') continue;\n\t\t\t\t\tif(s.charAt(j) == 'U' && i % 2 == 1) continue;\n\t\t\t\t\tif(s.charAt(j) == 'R') {\n\t\t\t\t\t\tif(i + j < c) {\n\t\t\t\t\t\t\tret[i+j]++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(s.charAt(j) == 'L') {\n\t\t\t\t\t\tif(j-i >= 0) {\n\t\t\t\t\t\t\tret[j-i]++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(s.charAt(j) == 'U') {\n\t\t\t\t\t\tret[j]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int out: ret) {\n\t\t\t\tpw.print(out + \" \");\n\t\t\t}\n\t\t\tpw.println();\n\t\t}\n\t\texitImmediately();\n\t}\n\n\tprivate static void exitImmediately() {\n\t\tpw.close();\n\t\tSystem.exit(0);\n\t}\n\n\tprivate static long readLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tprivate static double readDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tprivate static int readInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tprivate static String nextLine() throws IOException  {\n\t\tif(!br.ready()) {\n\t\t\texitImmediately();\n\t\t}\n\t\tst = null;\n\t\treturn br.readLine();\n\t}\n\n\tprivate static String nextToken() throws IOException  {\n\t\twhile(st == null || !st.hasMoreTokens())  {\n\t\t\tif(!br.ready()) {\n\t\t\t\texitImmediately();\n\t\t\t}\n\t\t\tst = new StringTokenizer(br.readLine().trim());\n\t\t}\n\t\treturn st.nextToken();\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\n@SuppressWarnings(\"unused\")\npublic class Solution {\n    public static void main(String[] args) throws IOException {\n        boolean isDebugMode = Arrays.asList(args).contains(\"DEBUG_MODE\");\n\n        InputStream inputStream;\n        OutputStream outputStream;\n\n        if (isDebugMode) {\n//            inputStream = new ConsoleInputStream();\n            inputStream = new FileInputStream();\n\n//            outputStream = new FileOutputStream();\n            outputStream = new ConsoleOutputStream();\n        } else {\n            inputStream = new ConsoleInputStream();\n            outputStream = new ConsoleOutputStream();\n        }\n\n        inputStream.open();\n        outputStream.open();\n\n        new Solution().run(inputStream, outputStream, isDebugMode);\n\n        outputStream.close();\n        inputStream.close();\n    }\n\n    private InputStream in;\n    private OutputStream out;\n    private boolean isDebugMode;\n    private Timer timer = new Timer();\n\n    private void printInDebug(String s) throws IOException {\n        if (isDebugMode) {\n            out.println(s);\n            out.flush();\n        }\n    }\n\n    private void printTimer(String mark) throws IOException {\n        printInDebug(mark + \": \" + timer.getMillisAndReset() + \" ms.\");\n    }\n\n    private static String formatDouble(double n, int precision) {\n        return String.format(Locale.ENGLISH, \"%.\" + precision + \"f\", n);\n    }\n\n    private void run(InputStream in, OutputStream out, boolean isDebugMode) throws IOException {\n        this.in = in;\n        this.out = out;\n        this.isDebugMode = isDebugMode;\n\n//        int t = in.nextInt();\n//        for (int i = 0; i < t; i++) {\n        solve();\n//            out.flush();\n//        }\n    }\n\n    private void solve() throws IOException {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n\n        char[][] a = new char[n][];\n        for (int i=0;i<n;i++){\n            a[i] = in.nextToken().toCharArray();\n        }\n        for (int j=0;j<m;j++){\n            int ans = 0;\n\n            for (int i=0;i<n;i++) {\n                if (a[0][j]=='D') ans++;\n                if (2*i<n && a[2*i][j]=='U') ans++;\n                if (j+i<m && a[i][j+i]=='L') ans++;\n                if (j-i>=0 && a[i][j-i]=='R') ans++;\n            }\n\n            out.print(ans, ' ');\n        }\n    }\n\n    /*\n     * Template classes\n     * Author: Andrey Siunov\n     * Date: 29.08.2013\n     * Note: all classes are inner, because some testing servers do not run code with several classes\n     */\n\n    private static class SegmentTree {\n        public static interface MergeFunction {\n            int calcValue(int first, int second);\n        }\n\n        public static interface UpdateFunction {\n            int calcValue(int value);\n        }\n\n        private MergeFunction mergeFunction;\n        private int n;\n        private int[] values;\n\n        public SegmentTree(int[] collection, MergeFunction mergeFunction) {\n            this.mergeFunction = mergeFunction;\n            n = collection.length;\n            values = new int[n * 4];\n            build(collection, 1, 0, n - 1);\n        }\n\n        private void build(int[] collection, int v, int tl, int tr) {\n            if (tl == tr) {\n                values[v] = collection[tl];\n            } else {\n                int tm = (tl + tr) >> 1;\n                build(collection, v << 1, tl, tm);\n                build(collection, (v << 1) + 1, tm + 1, tr);\n                values[v] = mergeFunction.calcValue(values[v << 1], values[(v << 1) + 1]);\n            }\n        }\n\n        private UpdateFunction updateFunction;\n\n        public void update(int pos, UpdateFunction updateFunction) {\n            this.updateFunction = updateFunction;\n            update(1, 0, n - 1, pos);\n        }\n\n        public void update(int v, int tl, int tr, int pos) {\n            if (tl == tr) {\n                values[v] = updateFunction.calcValue(values[v]);\n            } else {\n                int tm = (tl + tr) >> 1;\n                if (pos <= tm) {\n                    update(v << 1, tl, tm, pos);\n                } else {\n                    update((v << 1) + 1, tm + 1, tr, pos);\n                }\n                values[v] = mergeFunction.calcValue(values[v << 1], values[(v << 1) + 1]);\n            }\n        }\n\n        public int getValue(int index) {\n            return getValue(index, index);\n        }\n\n        public int getValue(int l, int r) {\n            return getValue(1, 0, n - 1, l, r);\n        }\n\n        private Integer getValue(int v, int tl, int tr, int l, int r) {\n            if (l > r) {\n                return null;\n            }\n            if (l == tl && r == tr) {\n                return values[v];\n            }\n            int tm = (tl + tr) >> 1;\n            Integer leftValue = getValue(v << 1, tl, tm, l, Math.min(r, tm));\n            Integer rightValue = getValue((v << 1) + 1, tm + 1, tr, Math.max(l, tm + 1), r);\n            return leftValue == null ? rightValue :\n                    (rightValue == null ? leftValue : mergeFunction.calcValue(leftValue, rightValue));\n        }\n    }\n\n\n    private static class Pair<K, V> {\n        private K key;\n        private V value;\n\n        Pair(K key, V value) {\n            this.key = key;\n            this.value = value;\n        }\n\n        K getKey() {\n            return key;\n        }\n\n        V getValue() {\n            return value;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n\n            Pair pair = (Pair) o;\n\n            return !(key != null ? !key.equals(pair.key) : pair.key != null) && !(value != null ? !value.equals(pair.value) : pair.value != null);\n        }\n\n        @Override\n        public int hashCode() {\n            int result = key != null ? key.hashCode() : 0;\n            result = 31 * result + (value != null ? value.hashCode() : 0);\n            return result;\n        }\n\n        @Override\n        public String toString() {\n            return \"Pair{\" +\n                    \"key=\" + key +\n                    \", value=\" + value +\n                    '}';\n        }\n    }\n\n    private static class Timer {\n        private long lastTime = 0;\n\n        private Timer() {\n            lastTime = System.currentTimeMillis();\n        }\n\n        public void reset() {\n            lastTime = System.currentTimeMillis();\n        }\n\n        public long getMillisAndReset() {\n            long current = System.currentTimeMillis();\n            long result = current - lastTime;\n            lastTime = current;\n            return result;\n        }\n    }\n\n    // IO template {\n    private static class FileInputStream extends InputStream {\n        private String inputFileName;\n\n        public FileInputStream() throws IOException {\n            this(\"input.txt\");\n        }\n\n        public FileInputStream(String inputFileName) throws IOException {\n            this.inputFileName = inputFileName;\n        }\n\n        @Override\n        protected Reader getReader() throws IOException {\n            return new FileReader(inputFileName);\n        }\n    }\n\n    private static class ConsoleInputStream extends InputStream {\n        @Override\n        protected Reader getReader() throws IOException {\n            return new InputStreamReader(System.in);\n        }\n    }\n\n    private static abstract class InputStream {\n        private static String DELIMITERS = \" \\t\\n\\r\\f\";\n        private BufferedReader in;\n\n        public InputStream open() throws IOException {\n            in = new BufferedReader(getReader());\n            return this;\n        }\n\n        private class Line {\n            private Line(String inputLine) {\n                this.inputLine = inputLine;\n                stringTokenizer = new StringTokenizer(this.inputLine, DELIMITERS);\n                readCharacters = 0;\n            }\n\n            private int readCharacters;\n            private String inputLine = null;\n            private StringTokenizer stringTokenizer = null;\n\n            public String nextToken() {\n                String result = stringTokenizer.nextToken();\n                readCharacters += result.length();\n                return result;\n            }\n\n            boolean hasNextToken() {\n                return stringTokenizer.hasMoreTokens();\n            }\n\n            String getLineRest() {\n                int position = 0;\n                for (int remain = readCharacters; remain > 0; position++) {\n                    if (DELIMITERS.indexOf(inputLine.charAt(position)) < 0) {\n                        remain--;\n                    }\n                }\n                return inputLine.substring(position);\n            }\n        }\n\n        private Line currentLine = null;\n\n        abstract protected Reader getReader() throws IOException;\n\n        /**\n         * Note: may be incorrect behavior if use this method with hasNextToken method\n         */\n        public String nextLine() throws IOException {\n            setInputLine();\n            if (currentLine == null) {\n                return null;\n            }\n            String result = currentLine.getLineRest();\n            currentLine = null;\n            return result;\n        }\n\n        public boolean hasNextLine() throws IOException {\n            setInputLine();\n            return currentLine != null;\n        }\n\n        public String nextToken() throws IOException {\n            return hasNextToken() ? currentLine.nextToken() : null;\n        }\n\n        /**\n         * Note: may be incorrect behavior if use this method with nextLine method\n         */\n        public boolean hasNextToken() throws IOException {\n            while (true) {\n                setInputLine();\n                if (currentLine == null || currentLine.hasNextToken()) {\n                    break;\n                } else {\n                    currentLine = null;\n                }\n            }\n            return currentLine != null;\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.valueOf(this.nextToken());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.valueOf(this.nextToken());\n        }\n\n        public double nextDouble() throws IOException {\n            return Double.valueOf(this.nextToken());\n        }\n\n        public BigInteger nextBigInteger() throws IOException {\n            return new BigInteger(this.nextToken());\n        }\n\n\n        public String[] nextTokensArray(int n) throws IOException {\n            String[] result = new String[n];\n            for (int i = 0; i < n; i++) {\n                result[i] = this.nextToken();\n            }\n            return result;\n        }\n\n        public int[] nextIntArray(int n) throws IOException {\n            int[] result = new int[n];\n            for (int i = 0; i < n; i++) {\n                result[i] = this.nextInt();\n            }\n            return result;\n        }\n\n        public long[] nextLongArray(int n) throws IOException {\n            long[] result = new long[n];\n            for (int i = 0; i < n; i++) {\n                result[i] = this.nextLong();\n            }\n            return result;\n        }\n\n        public void close() throws IOException {\n            currentLine = null;\n            in.close();\n        }\n\n        private void setInputLine() throws IOException {\n            if (currentLine == null) {\n                String line = in.readLine();\n                if (line != null) {\n                    currentLine = new Line(line);\n                }\n            }\n        }\n    }\n\n    private static class FileOutputStream extends OutputStream {\n        private String outputFileName;\n\n        public FileOutputStream() throws IOException {\n            this(\"output.txt\");\n        }\n\n        public FileOutputStream(String outputFileName) throws IOException {\n            this.outputFileName = outputFileName;\n        }\n\n        @Override\n        protected Writer getWriter() throws IOException {\n            return new FileWriter(outputFileName);\n        }\n    }\n\n    private static class ConsoleOutputStream extends OutputStream {\n        @Override\n        protected Writer getWriter() throws IOException {\n            return new OutputStreamWriter(System.out);\n        }\n    }\n\n    private static abstract class OutputStream {\n        private PrintWriter out;\n\n        public OutputStream open() throws IOException {\n            out = new PrintWriter(getWriter());\n            return this;\n        }\n\n        abstract protected Writer getWriter() throws IOException;\n\n        public void print(Object... s) {\n            for (Object token : s) {\n                out.print(token);\n            }\n        }\n\n        public void println(Object... s) {\n            print(s);\n            out.println();\n        }\n\n        public void println() {\n            out.println();\n        }\n\n        public void flush() throws IOException {\n            out.flush();\n        }\n\n        public void close() throws IOException {\n            out.flush();\n            out.close();\n        }\n    }\n    // } IO template\n}"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n/**\n *\n * @author DELL\n */\npublic class Garden_and_spiders {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader x = new BufferedReader(new InputStreamReader(System.in));\n\n        String s = x.readLine();\n        String[] s1 = s.split(\" \");\n        int n = Integer.parseInt(s1[0]);\n        int m = Integer.parseInt(s1[1]);\n        int k = Integer.parseInt(s1[2]);\n        int[] c = new int[m];\n\n        char a[][] = new char[n][m];\n        for (int i = 0; i < n; i++) {\n            s = x.readLine();\n            for (int j = 0; j < m; j++) {\n                a[i][j] = s.charAt(j);\n            }\n        }\n        int t=0;\n        for (int i = 1; i < n; i++) {\n            t++;\n            for (int j = 0; j < m; j++) {\n\n                if (j + t < m) {\n                    if (a[i][j + t] == 'L') {\n                        c[j]++;\n                    }\n                }\n                if (j - t >= 0) {\n                    if (a[i][j-t] == 'R') {\n                        c[j]++;\n                    }\n                }\n                if(i-t>=0){\n                    if (a[ i-t][j] == 'D') {\n                        c[j]++;\n                    }\n                }\n\n                if(i+t<n){\n                    if (a[ i+t][j] == 'U') {\n                        c[j]++;\n                    }\n                }\n            }\n        }\n        for (int q : c) {\n            System.out.print(q + \" \");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar grid[2002][2002];\nint u[2002], r[2002], l[2002], d[2002];\nbool OK(char a) {\n  return (a == 'U' || a == 'D' || a == 'L' || a == 'R' || a == '.');\n}\nint GetAnsFor(int col) {\n  int ret = 0;\n  int i, j;\n  for (i = 1; i <= n; i++) {\n    if (i % 2 == 0) continue;\n    if (grid[i][col] == 'U') {\n      ret++;\n    }\n  }\n  for (i = 1; i <= n; i++) {\n    if (col - i + 1 >= 1) {\n      if (grid[i][col - i + 1] == 'R') {\n        ret++;\n      }\n    }\n    if (col + i - 1 <= m) {\n      if (grid[i][col + i - 1] == 'L') {\n        ret++;\n      }\n    }\n  }\n  return ret;\n}\nint main() {\n  int i, j, ii, jj, ind;\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      scanf(\"%c\", &grid[i][j]);\n      if (!OK(grid[i][j])) {\n        j--;\n        continue;\n      }\n    }\n  }\n  for (i = 1; i <= m; i++) {\n    printf(\"%d\", GetAnsFor(i));\n    if (i == m)\n      printf(\"\\n\");\n    else\n      printf(\" \");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar str[2005][2005], ch[] = {'L', 'R', 'U', 'D'};\nint spider[2005] = {0};\nqueue<pair<int, int> > q[4];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  getchar();\n  for (int i = 0; i < n; i++) gets(str[i]);\n  for (int i = 1; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      for (int k = 0; k < 4; k++)\n        if (str[i][j] == ch[k]) q[k].push(pair<int, int>(i, j));\n    }\n  }\n  for (int i = 0; i < 4; i++) {\n    while (!q[i].empty()) {\n      pair<int, int> f = q[i].front();\n      int x = f.first, y = f.second;\n      q[i].pop();\n      if (i == 0) {\n        if (y - x >= 0) {\n          spider[y - x]++;\n        }\n      }\n      if (i == 1) {\n        if (y + x < m) {\n          spider[y + x]++;\n        }\n      }\n      if (i == 2) {\n        if (x % 2 == 0) spider[y]++;\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) cout << spider[i] << \" \";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class b436 {\n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tint n = input.nextInt();\n\t\tint m = input.nextInt();\n\t\tint k = input.nextInt();\n\n\t\tint[] res = new int[m];\n\n\t\tinput.nextLine();\n\t\tString[] data = new String[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tdata[i] = input.nextLine();\n\t\t}\n\n\t\tString dt;\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tdt = data[i];\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tif (dt.charAt(j) == 'U') {\n\t\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\t\tres[j]++;\n\t\t\t\t\t}\n\t\t\t\t} else if (dt.charAt(j) == 'L') {\n\t\t\t\t\tif (j - i >= 0) {\n\t\t\t\t\t\tres[j - i]++;\n\t\t\t\t\t}\n\t\t\t\t} else if (dt.charAt(j) == 'R') {\n\t\t\t\t\tif (j + i + 1 <= m) {\n\t\t\t\t\t\tres[j + i]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tSystem.out.print(res[i] + \" \");\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Cf436B {\n    int n, m, k;\n    String[] M;\n    int[] C;\n    public static void main(String[] args) {\n        Cf436B cf = new Cf436B();\n        cf.run();\n        cf.print();\n    }\n    public Cf436B() {\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        m = sc.nextInt();\n        k = sc.nextInt();\n        M = new String[n];\n        C = new int[m];\n        for (int i = 0; i < n; ++i)\n            M[i] = sc.next();\n    }\n    public void run() {\n        for (int i = 1; i < n; ++i)\n            for (int j = 0; j < m; ++j)\n                process(i, j);\n    }\n    public void print() {\n        StringBuilder builder = new StringBuilder();\n        builder.append(C[0]);\n        for (int i = 1; i < m; ++i) {\n            builder.append(' ');\n            builder.append(C[i]);\n        }\n        System.out.println(builder.toString());\n    }\n    void process(int i, int j) {\n        char c = M[i].charAt(j);\n        if (c == 'D') {\n            return;\n        } else if (c == 'U') {\n            if ((i & 1) == 0)\n            ++C[j];\n        } else if (c == 'R') {\n            if (j + i < m)\n                ++C[j+i];\n        } else if (c == 'L') {\n            if (j - i >= 0)\n                ++C[j-i];\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[2001];\nchar s[20001];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  gets(s);\n  for (int i = 0; i < n; i++) {\n    gets(s);\n    for (int j = 0; j < m; j++)\n      if (s[j] == 'U' && i % 2 == 0)\n        a[j]++;\n      else if (s[j] == 'L') {\n        int cc = j - i;\n        if (cc >= 0) a[cc]++;\n      } else if (s[j] == 'R') {\n        int cc = j + i;\n        if (cc < m) a[cc]++;\n      }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", a[i]);\n  putchar('\\n');\n  getchar();\n  getchar();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar start[2048][2048];\nstring str;\nint R, C, K;\ninline bool check(int x, int y) {\n  if (x < 0 || x >= C) return false;\n  if (y < 0 || y >= R) return false;\n  return true;\n}\nint solve(int col, int row, int turn) {\n  if (row >= R) return 0;\n  int res = 0;\n  int x, y;\n  x = col;\n  y = row - turn;\n  if (check(x, y) && start[y][x] == 'D') res++;\n  x = col;\n  y = row + turn;\n  if (check(x, y) && start[y][x] == 'U') res++;\n  x = col - turn;\n  y = row;\n  if (check(x, y) && start[y][x] == 'R') res++;\n  x = col + turn;\n  y = row;\n  if (check(x, y) && start[y][x] == 'L') res++;\n  return res + solve(col, row + 1, turn + 1);\n}\nint main() {\n  cin >> R >> C >> K;\n  for (int i = 0; i < R; i++) {\n    cin >> str;\n    for (int j = 0; j < C; j++) start[i][j] = str[j];\n  }\n  for (int i = 0; i < C - 1; i++) cout << solve(i, 0, 0) << \" \";\n  cout << solve(C - 1, 0, 0) << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<pair<char, pair<int, int> > > spiders;\nstring s;\nint n, m, k;\nint a[2002][2002];\nint ans[2002];\nvoid nextT(int T) {}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    for (int j = 0; j < m; j++)\n      if (s[j] != '.') {\n        if (s[j] == 'R') {\n          if (i + j < m) ans[i + j]++;\n        } else if (s[j] == 'L') {\n          if (j - i >= 0) ans[j - i]++;\n        } else if (s[j] == 'U' && i % 2 != 1)\n          ans[j]++;\n      }\n  }\n  for (int i = 0; i < m; i++) cout << ans[i] << \" \";\n  cout << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint tot[2200];\nint main() {\n  int n, m, kk;\n  scanf(\"%d%d%d\\n\", &n, &m, &kk);\n  int i, j, k, x, y, z;\n  char ch;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      ch = getchar();\n      if (ch == 'R') {\n        x = i + j;\n        if (x >= 0 && x < m) tot[x]++;\n      }\n      if (ch == 'L') {\n        x = j - i;\n        if (x >= 0 && x < m) tot[x]++;\n      }\n      if (ch == 'D') {\n      }\n      if (ch == 'U') {\n        tot[j] += (i + 1) % 2;\n      }\n    }\n    ch = getchar();\n  }\n  for (i = 0; i < m; i++) {\n    printf(\"%d \", tot[i]);\n  }\n  printf(\"\\n\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct spider {\n  int y, x;\n  enum spider_type { Left, Right, Up, Down };\n  spider_type type;\n  spider() : y(-1), x(-1), type(Left) {}\n  spider(int y, int x, spider_type t) {\n    this->y = y;\n    this->x = x;\n    this->type = t;\n  }\n};\nint n, m, k;\nclass P436B_Solver {\n public:\n  P436B_Solver() {}\n  void Input(std::istream &is = std::cin) {\n    is >> n >> m >> k;\n    spiders.resize(k);\n    int sc = 0;\n    for (int y = 0; y < n; ++y) {\n      string str;\n      is >> str;\n      for (size_t x = 0; x < str.size(); ++x) {\n        if (str[x] == 'L') {\n          spiders[sc++] = spider(y, x, spider::Left);\n        } else if (str[x] == 'R') {\n          spiders[sc++] = spider(y, x, spider::Right);\n        } else if (str[x] == 'D') {\n          spiders[sc++] = spider(y, x, spider::Down);\n        } else if (str[x] == 'U') {\n          spiders[sc++] = spider(y, x, spider::Up);\n        }\n      }\n    }\n    results.resize(m);\n    for (int i = 0; i < m; ++i) results[i] = 0;\n  }\n  void Solve() {\n    for (int si = 0; si < k; ++si) {\n      spider &s = spiders[si];\n      if (s.type == spider::Down) {\n        continue;\n      } else if (s.type == spider::Up) {\n        if (s.y % 2 == 0) results[s.x]++;\n      } else if (s.type == spider::Left) {\n        int index = s.x - s.y;\n        if (index >= 0 && index < m) results[index]++;\n      } else if (s.type == spider::Right) {\n        int index = s.y + s.x;\n        if (index >= 0 && index < m) results[index]++;\n      }\n    }\n  }\n  void Output(std::ostream &os = cout) {\n    for (int j = 0; j < m; ++j) {\n      os << results[j];\n      if (j != m - 1) os << \" \";\n    }\n  }\n\n private:\n  int n, m, k;\n  std::vector<spider> spiders;\n  std::vector<int> results;\n};\nvoid Test(const std::string &input, const std::string &output) {\n  std::stringstream in;\n  std::stringstream out;\n  in << input;\n  P436B_Solver solver;\n  solver.Input(in);\n  solver.Solve();\n  solver.Output(out);\n  if (out.str() == output)\n    cout << \"Ok\\n\";\n  else\n    cout << \"Fail!\\n\";\n}\nint main() {\n  P436B_Solver solver;\n  solver.Input();\n  solver.Solve();\n  solver.Output();\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\ntest = \"\"\"\n3 4 8\n....\nRRLL\nUUUU\n\"\"\"\n\nraw = sys.stdin.read()\n\ninput = raw.split()\ninput.reverse()\n\nn = int(input.pop())\nm = int(input.pop())\nk = int(input.pop())\n\ninput.reverse()\na = [0]*m\nfor y in xrange(n):\n\tfor x in xrange(m):\n\t\tif y + y < n and input[y + y][x] == 'U':\n\t\t\ta[x] += 1\n\t\tif x - y >= 0 and input[y][x-y] == 'R':\n\t\t\ta[x] += 1\n\t\tif x + y < m and input[y][x+y] == 'L':\n\t\t\ta[x] += 1\nprint ' '.join(map(str,a))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws IOException{\n\t\t\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\t\n\t\t//InputStream inputStream = new FileInputStream(\"input.txt\");\n\t\t//OutputStream outputStream = new FileOutputStream(\"output.txt\");\n\t\t\n\t\tInputReader in = new InputReader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\t\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(in, out);\n\t\t\n\t\tout.close();\n\t}\n\n}\n\nclass TaskB{\n\t\n\tpublic void solve(InputReader in, OutputWriter out){\n\t\t\n\t\tn = in.nextInt();\n\t\tm = in.nextInt();\n\t\tk = in.nextInt();\n\t\ta = new char[n][m];\n\t\tfor(int i=0; i<n; i++)\n\t\t\ta[i] = in.nextLine().toCharArray();\n\t\t\n\t\t\n\t\tfor(int j=0; j<m; j++){\n\t\t\tint cnt=0;\n\t\t\tfor(int i=1; i<n; i++){\n\t\t\t\tif(check(i+i,j,'U')) cnt++;\n\t\t\t\tif(check(i,j+i,'L')) cnt++;\n\t\t\t\tif(check(i,j-i,'R')) cnt++;\n\t\t\t}\n\t\t\tout.write(cnt+\" \");\n\t\t}\n\t\t\n\t}\n\t\n\tint n,m,k;\n\tchar[][] a;\n\t\n\tboolean check(int i, int j,char c){\n\t\treturn i>=0 && i<n && j>=0 && j<m && a[i][j]==c;\n\t}\n\t\n}\n\n\nclass InputReader{\n\t\n\tpublic InputReader(InputStream stream){\n\t\treader = new BufferedReader(new InputStreamReader(stream));\n\t\ttokenizer = null;\n\t}\n\t\n\tpublic String next(){\n\t\twhile(tokenizer==null || !tokenizer.hasMoreTokens()){\n\t\t\ttry {\n\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn tokenizer.nextToken();\n\t}\n\t\n\tpublic String nextLine(){\n\t\ttokenizer = null;\n\t\ttry {\n\t\t\treturn reader.readLine();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\t\n\tpublic int nextInt(){\n\t\treturn Integer.parseInt(next());\n\t}\n\t\n\tpublic long nextLong(){\n\t\treturn Long.parseLong(next());\n\t}\n\t\n\tpublic double nextDouble(){\n\t\treturn Double.parseDouble(next());\n\t}\n\t\n\tpublic int[] nextIntArray(int n){\n\t\tint[] ans = new int[n];\n\t\tfor(int i=0; i<n;i++)\n\t\t\tans[i] = nextInt();\n\t\t\n\t\treturn ans;\n\t}\n\t\n\t\n\tBufferedReader reader;\n\tStringTokenizer tokenizer;\n}\n\nclass OutputWriter{\n\t\n\tpublic OutputWriter(OutputStream stream){\n\t\tout = new PrintWriter(new BufferedWriter(new OutputStreamWriter(stream)));\n\t}\n\t\n\tpublic void write(Object ...o){\n\t\tfor(Object cur : o)\n\t\t\tout.print(cur);\n\t}\n\t\n\tpublic void writeln(Object ...o){\n\t\twrite(o);\n\t\tout.println();\n\t}\n\t\n\tpublic void flush(){\n\t\tout.flush();\n\t}\n\t\n\tpublic void close(){\n\t\tout.close();\n\t}\n\t\n\tPrintWriter out;\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-8;\ninline int max(int a, int b) { return a < b ? b : a; }\ninline int min(int a, int b) { return a > b ? b : a; }\ninline long long max(long long a, long long b) { return a < b ? b : a; }\ninline long long min(long long a, long long b) { return a > b ? b : a; }\nconst int mod = 1e9 + 7;\nconst int N = 1e6 + 10;\nconst long long inf = 1e18;\nlong long fl(long long x, long long y) {\n  if (x >= 0) return x / y;\n  return x / y - (x % y ? 1 : 0);\n}\nlong long cl(long long x, long long y) {\n  if (x >= 0) return (x + y - 1) / y;\n  return x / y;\n}\nlong long power(long long a, long long n) {\n  if (n == 0) {\n    return 1;\n  }\n  long long b = power(a, n / 2);\n  b = b * b % mod;\n  if (n % 2) b = b * a % mod;\n  return b;\n}\nchar mat[2010][2010];\nint A[2010][2010];\nint main() {\n  int n, m, k;\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 0; i < n; ++i) scanf(\"%s\", mat[i]);\n  for (int i = 1; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      if (i + i < n && mat[i + i][j] == 'U') A[i][j]++;\n      if (j - i >= 0 && mat[i][j - i] == 'R') A[i][j]++;\n      if (j + i < m && mat[i][j + i] == 'L') A[i][j]++;\n    }\n  }\n  for (int j = 0; j < m; ++j) {\n    int ans = 0;\n    for (int i = 0; i < n; ++i) ans += A[i][j];\n    printf(\"%d \", ans);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tFastScanner in = new FastScanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n\tpublic void solve(int testNumber, FastScanner in, PrintWriter out) {\n\t\tint height = in.nextInt();\n\t\tint width = in.nextInt();\n\t\tin.nextInt();\n\t\tint[] ans = new int[width];\n\t\tfor (int r = 0; r < height; r++) {\n\t\t\tchar[] s = in.next().toCharArray();\n\t\t\tfor (int c = 0; c < width; c++) {\n\t\t\t\tswitch (s[c]) {\n\t\t\t\t\tcase 'U':\n\t\t\t\t\t\tif (r % 2 == 0) {\n\t\t\t\t\t\t\t++ans[c];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tif (c - r >= 0) {\n\t\t\t\t\t\t\t++ans[c - r];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'R':\n\t\t\t\t\t\tif (c + r < width) {\n\t\t\t\t\t\t\t++ans[c + r];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < width; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\tout.print(\" \");\n\t\t\t}\n\t\t\tout.print(ans[i]);\n\t\t}\n\t\tout.println();\n    }\n}\n\nclass FastScanner {\n\n\tprivate BufferedReader in;\n\tprivate StringTokenizer st;\n\n\tpublic FastScanner(InputStream stream) {\n\t\tin = new BufferedReader(new InputStreamReader(stream));\n\t}\n\n\tpublic String next() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(in.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = int(1e9);\nconst long long INFll = 1ll * INF * INF;\nconst int MOD = 1000000007;\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<string> s(n);\n  for (int i = 0; i < n; ++i) cin >> s[i];\n  for (int j = 0; j < m; ++j) {\n    int k = 0;\n    if (s[0][j] != '.') k++;\n    for (int i = 1; i < n; ++i) {\n      if (s[i - i][j] == 'D') k++;\n      if (j - i >= 0 && s[i][j - i] == 'R') k++;\n      if (j + i < m && s[i][j + i] == 'L') k++;\n      if (i + i < n && s[i + i][j] == 'U') k++;\n    }\n    cout << k << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar Mx[2010][2010];\nint A[2000];\nint main() {\n  int m, n;\n  long long k;\n  int i, j;\n  cin >> n >> m >> k;\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      cin >> Mx[i][j];\n    }\n  }\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      if ((Mx[i][j] == 'U') && (i % 2 == 1)) A[j]++;\n      if ((Mx[i][j] == 'L') && (j - i + 1 > 0)) A[j - i + 1]++;\n      if ((Mx[i][j] == 'R') && (j + i - 1 <= m)) A[j + i - 1]++;\n    }\n  }\n  for (j = 1; j <= m; j++) {\n    cout << A[j] << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class B {\n    public static void main(String[] args) throws IOException {\n        int n = ConsoleIn.nextInt(), m = ConsoleIn.nextInt(), k = ConsoleIn.nextInt();\n\n        int[] count = new int[m];\n        for (int i = 0; i < n; i++) {\n            String s = ConsoleIn.nextString();\n            for (int j = 0; j < s.length(); j++) {\n                switch (s.charAt(j)) {\n                    case 'R': if (j + i < m) count[j + i]++; break;\n                    case 'L': if (j - i >= 0) count[j - i]++; break;\n                    case 'U': if (i % 2 == 0) count[j]++; break;\n                    case 'D': break;\n                }\n            }\n        }\n\n\n        for (int c : count) {\n            System.out.print(c + \" \");\n        }\n\n        System.out.println();\n    }\n\n    static class ConsoleIn {\n        static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        static StringTokenizer tokenizer = new StringTokenizer(\"\");\n\n        public static String nextString() throws IOException {\n            if (!tokenizer.hasMoreTokens()) tokenizer = new StringTokenizer(reader.readLine());\n            return tokenizer.nextToken();\n        }\n\n        public static int nextInt() throws IOException {\n            return Integer.parseInt(nextString());\n        }\n\n        public static long nextLong() throws IOException {\n            return Long.parseLong(nextString());\n        }\n\n        public static float nextFloat() throws IOException {\n            return Float.parseFloat(nextString());\n        }\n\n        public static double nextDouble() throws IOException {\n            return Double.parseDouble(nextString());\n        }\n\n        public static int[] nextIntArray() throws IOException {\n            String[] ss = reader.readLine().split(\" \");\n            int[] a = new int[ss.length];\n            for (int i = 0; i < ss.length; i++) a[i] = Integer.parseInt(ss[i]);\n            return a;\n        }\n\n        public static long[] nextLongArray() throws IOException {\n            String[] ss = reader.readLine().split(\" \");\n            long[] a = new long[ss.length];\n            for (int i = 0; i < ss.length; i++) a[i] = Long.parseLong(ss[i]);\n            return a;\n        }\n\n        public static double[] nextDoubleArray() throws IOException {\n            String[] ss = reader.readLine().split(\" \");\n            double[] a = new double[ss.length];\n            for (int i = 0; i < ss.length; i++) a[i] = Double.parseDouble(ss[i]);\n            return a;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:66777216\")\nusing namespace std;\nconst int N = 2007;\nchar st[N][N];\nint n, m, k;\ninline bool sym(char c) { return c == 'L' || c == 'R' || c == 'U' || c == 'D'; }\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; ++i) scanf(\"%s\", st[i]);\n  for (int j = 0; j < m; ++j) {\n    int cur = 0;\n    for (int i = 0; i < n; ++i) {\n      if (st[i][j] == 'U' && i % 2 == 0) ++cur;\n    }\n    for (int k = 1; k < n; ++k)\n      if (j >= k && st[k][j - k] == 'R') ++cur;\n    for (int k = 1; k < n; ++k)\n      if (j + k < m && st[k][j + k] == 'L') ++cur;\n    printf(\"%d \", cur);\n  }\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma comment(linker, \"/STACK:200000000\")\nconst double EPS = 1E-9;\nconst int INF = 1000000000;\nconst long long INF64 = (long long)1E18;\nconst double PI = 3.1415926535897932384626433832795;\nchar s[2100][2100];\nint ans[2100];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\\n\", &n, &m, &k);\n  for (int i = 0; i < (int)(n); i++) gets(s[i]);\n  for (int i = 0; i < (int)(n); i++)\n    for (int j = 0; j < (int)(m); j++) {\n      if (s[i][j] == '.' || s[i][j] == 'D') continue;\n      if (s[i][j] == 'U') {\n        if (i % 2 == 1) continue;\n        ans[j]++;\n        continue;\n      }\n      int nj;\n      if (s[i][j] == 'L')\n        nj = j - i;\n      else\n        nj = j + i;\n      if (0 <= nj && nj < m) ans[nj]++;\n    }\n  for (int i = 0; i < (int)(m); i++) printf(i ? \" %d\" : \"%d\", ans[i]);\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\tTask solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\ninterface Task {\n\tpublic void solve(int testNumber, InputReader in, OutputWriter out);\n}\n\nclass TaskA implements Task {\n\n\tArrayList<Pair<Integer, Integer>> arr1, arr2, arr;\n\n\tpublic void solve(int testNumber, InputReader in, OutputWriter out) {\n\t\tint n = in.readInt(), x = in.readInt(), i1 = 0, i2 = 0, ret = 0, ret2 = 0, x2 = 0;\n\t\tarr1 = new ArrayList<Pair<Integer, Integer>>();\n\t\tarr2 = new ArrayList<Pair<Integer, Integer>>();\n\t\tarr = new ArrayList<Pair<Integer, Integer>>();\n\t\twhile (n-- > 0) {\n\t\t\tint t = in.readInt(), a = in.readInt(), b = in.readInt();\n\t\t\tif (t == 0)\n\t\t\t\tarr1.add(Pair.makePair(a, -b));\n\t\t\telse\n\t\t\t\tarr2.add(Pair.makePair(a, -b));\n\t\t}\n\t\tCollections.sort(arr1);\n\t\tCollections.sort(arr2);\n\t\tfor (int i = 0; i < arr1.size() && i < arr2.size(); i++) {\n\t\t\tarr.add(arr1.get(i));\n\t\t\tarr.add(arr2.get(i));\n\t\t}\n\t\tif (arr1.size() > arr2.size())\n\t\t\tarr.add(arr1.get(arr2.size()));\n\t\tx2 = x;\n\t\tfor (int i = 0; i < arr.size(); i++) {\n\t\t\tif (arr.get(i).first <= x2) {\n\t\t\t\tret++;\n\t\t\t\tx2 -= arr.get(i).second;\n\t\t\t} else\n\t\t\t\tbreak;\n\t\t}\n\t\tx2 = x;\n\t\tarr.clear();\n\t\tfor (int i = 0; i < arr1.size() && i < arr2.size(); i++) {\n\t\t\tarr.add(arr1.get(i));\n\t\t\tarr.add(arr2.get(i));\n\t\t}\n\t\tif (arr2.size() > arr1.size())\n\t\t\tarr.add(arr2.get(arr1.size()));\n\t\tfor (int i = 0; i < arr.size(); i++) {\n\t\t\tif (arr.get(i).first <= x2) {\n\t\t\t\tret2++;\n\t\t\t\tx2 -= arr.get(i).second;\n\t\t\t} else\n\t\t\t\tbreak;\n\t\t}\n\t\tout.printLine(MiscUtils.max(ret, ret2));\n\t}\n\n}\n\nclass TaskB implements Task {\n\n\tchar[][] tab;\n\tboolean[][] L, R, U, D;\n\tint[] ret;\n\n\tpublic void solve(int testNumber, InputReader in, OutputWriter out) {\n\t\tint n = in.readInt(), m = in.readInt(), k = in.readInt();\n\t\ttab = IOUtils.readTable(in, n, m);\n\t\t// L=new boolean[n][m];\n\t\t// R=new boolean[n][m];\n\t\t// U=new boolean[n][m];\n\t\t// D=new boolean[n][m];\n\t\tret = new int[m];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tif (tab[i][j] == 'U') {\n\t\t\t\t\t// U[i][j]=true;\n\t\t\t\t\tif (i % 2 == 0)\n\t\t\t\t\t\tret[j]++;\n\t\t\t\t}\n\t\t\t\tif (tab[i][j] == 'D') {\n\t\t\t\t\t// D[i][j]=true;\n\t\t\t\t}\n\t\t\t\tif (tab[i][j] == 'L') {\n\t\t\t\t\t// L[i][j]=true;\n\t\t\t\t\tif (j - i < m && j - i >= 0)\n\t\t\t\t\t\tret[j - i]++;\n\t\t\t\t}\n\t\t\t\tif (tab[i][j] == 'R') {\n\t\t\t\t\t// R[i][j]=true;\n\t\t\t\t\tif (j + i < m)\n\t\t\t\t\t\tret[j + i]++;\n\t\t\t\t}\n\t\t\t}\n\t\tout.printLine(ret);\n\t}\n\n}\n\nclass TaskC implements Task {\n\n\tpublic void solve(int testNumber, InputReader in, OutputWriter out) {\n\n\t}\n\n}\n\nclass TaskD implements Task {\n\n\tpublic void solve(int testNumber, InputReader in, OutputWriter out) {\n\n\t}\n\n}\n\nclass TaskE implements Task {\n\n\tpublic void solve(int testNumber, InputReader in, OutputWriter out) {\n\n\t}\n\n}\n\nclass TaskF implements Task {\n\n\tpublic void solve(int testNumber, InputReader in, OutputWriter out) {\n\n\t}\n\n}\n\nclass Hopcroft {\n\tprivate final int NIL = 0;\n\tprivate final int INF = Integer.MAX_VALUE;\n\tprivate ArrayList<Integer>[] Adj;\n\tprivate int[] Pair;\n\tprivate int[] Dist;\n\tprivate int cx, cy;\n\n\t/** Function BFS **/\n\tpublic boolean BFS() {\n\t\tQueue<Integer> queue = new LinkedList<Integer>();\n\t\tfor (int v = 1; v <= cx; ++v)\n\t\t\tif (Pair[v] == NIL) {\n\t\t\t\tDist[v] = 0;\n\t\t\t\tqueue.add(v);\n\t\t\t} else\n\t\t\t\tDist[v] = INF;\n\n\t\tDist[NIL] = INF;\n\n\t\twhile (!queue.isEmpty()) {\n\t\t\tint v = queue.poll();\n\t\t\tif (Dist[v] < Dist[NIL])\n\t\t\t\tfor (int u : Adj[v])\n\t\t\t\t\tif (Dist[Pair[u]] == INF) {\n\t\t\t\t\t\tDist[Pair[u]] = Dist[v] + 1;\n\t\t\t\t\t\tqueue.add(Pair[u]);\n\t\t\t\t\t}\n\t\t}\n\t\treturn Dist[NIL] != INF;\n\t}\n\n\t/** Function DFS **/\n\tpublic boolean DFS(int v) {\n\t\tif (v != NIL) {\n\t\t\tfor (int u : Adj[v])\n\t\t\t\tif (Dist[Pair[u]] == Dist[v] + 1)\n\t\t\t\t\tif (DFS(Pair[u])) {\n\t\t\t\t\t\tPair[u] = v;\n\t\t\t\t\t\tPair[v] = u;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\tDist[v] = INF;\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/** Function to get maximum matching **/\n\tpublic int HopcroftKarp() {\n\t\tPair = new int[cx + cy + 1];\n\t\tDist = new int[cx + cy + 1];\n\t\tint matching = 0;\n\t\twhile (BFS())\n\t\t\tfor (int v = 1; v <= cx; ++v)\n\t\t\t\tif (Pair[v] == NIL)\n\t\t\t\t\tif (DFS(v))\n\t\t\t\t\t\tmatching = matching + 1;\n\t\treturn matching;\n\t}\n\n\t/** Function to make graph with vertices x , y **/\n\tpublic void makeGraph(int[] x, int[] y, int E) {\n\t\tAdj = new ArrayList[cx + cy + 1];\n\t\tfor (int i = 0; i < Adj.length; ++i)\n\t\t\tAdj[i] = new ArrayList<Integer>();\n\t\t/** adding edges **/\n\t\tfor (int i = 0; i < E; ++i)\n\t\t\taddEdge(x[i] + 1, y[i] + 1);\n\t}\n\n\t/** Function to add a edge **/\n\tpublic void addEdge(int u, int v) {\n\t\tAdj[u].add(cx + v);\n\t\tAdj[cx + v].add(u);\n\t}\n\n\t/** Main Method **/\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tSystem.out.println(\"Hopcroft Algorithm Test\\n\");\n\t\t/** Make an object of Hopcroft class **/\n\t\tHopcroft hc = new Hopcroft();\n\n\t\t/** Accept number of edges **/\n\t\tSystem.out.println(\"Enter number of edges\\n\");\n\t\tint E = scan.nextInt();\n\t\tint[] x = new int[E];\n\t\tint[] y = new int[E];\n\t\thc.cx = 0;\n\t\thc.cy = 0;\n\n\t\tSystem.out.println(\"Enter \" + E + \" x, y coordinates \");\n\t\tfor (int i = 0; i < E; i++) {\n\t\t\tx[i] = scan.nextInt();\n\t\t\ty[i] = scan.nextInt();\n\t\t\thc.cx = Math.max(hc.cx, x[i]);\n\t\t\thc.cy = Math.max(hc.cy, y[i]);\n\t\t}\n\t\thc.cx += 1;\n\t\thc.cy += 1;\n\n\t\t/** make graph with vertices **/\n\t\thc.makeGraph(x, y, E);\n\n\t\tSystem.out.println(\"\\nMatches : \" + hc.HopcroftKarp());\n\t}\n}\n\nclass OutputWriter {\n\tprivate final PrintWriter writer;\n\n\tpublic OutputWriter(OutputStream outputStream) {\n\t\twriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(\n\t\t\t\toutputStream)));\n\t}\n\n\tpublic OutputWriter(Writer writer) {\n\t\tthis.writer = new PrintWriter(writer);\n\t}\n\n\tpublic void print(char[] array) {\n\t\twriter.print(array);\n\t}\n\n\tpublic void print(Object... objects) {\n\t\tfor (int i = 0; i < objects.length; i++) {\n\t\t\tif (i != 0)\n\t\t\t\twriter.print(' ');\n\t\t\twriter.print(objects[i]);\n\t\t}\n\t}\n\n\tpublic void print(int[] array) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i != 0)\n\t\t\t\twriter.print(' ');\n\t\t\twriter.print(array[i]);\n\t\t}\n\t}\n\n\tpublic void print(long[] array) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i != 0)\n\t\t\t\twriter.print(' ');\n\t\t\twriter.print(array[i]);\n\t\t}\n\t}\n\n\tpublic void print(Collection<Integer> collection) {\n\t\tboolean first = true;\n\t\tfor (Integer iterator : collection) {\n\t\t\tif (first)\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\twriter.print(' ');\n\t\t\twriter.print(iterator);\n\t\t}\n\t}\n\n\tpublic void printLine(int[] array) {\n\t\tprint(array);\n\t\twriter.println();\n\t}\n\n\tpublic void printLine(long[] array) {\n\t\tprint(array);\n\t\twriter.println();\n\t}\n\n\tpublic void printLine(Collection<Integer> collection) {\n\t\tprint(collection);\n\t\twriter.println();\n\t}\n\n\tpublic void printLine() {\n\t\twriter.println();\n\t}\n\n\tpublic void printLine(Object... objects) {\n\t\tprint(objects);\n\t\twriter.println();\n\t}\n\n\tpublic void print(char i) {\n\t\twriter.print(i);\n\t}\n\n\tpublic void printLine(char i) {\n\t\twriter.println(i);\n\t}\n\n\tpublic void printLine(char[] array) {\n\t\twriter.println(array);\n\t}\n\n\tpublic void printFormat(String format, Object... objects) {\n\t\twriter.printf(format, objects);\n\t}\n\n\tpublic void close() {\n\t\twriter.close();\n\t}\n\n\tpublic void flush() {\n\t\twriter.flush();\n\t}\n\n\tpublic void print(long i) {\n\t\twriter.print(i);\n\t}\n\n\tpublic void printLine(long i) {\n\t\twriter.println(i);\n\t}\n\n\tpublic void print(int i) {\n\t\twriter.print(i);\n\t}\n\n\tpublic void printLine(int i) {\n\t\twriter.println(i);\n\t}\n}\n\nclass InputReader {\n\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[1024];\n\tprivate int curChar;\n\tprivate int numChars;\n\tprivate SpaceCharFilter filter;\n\n\tpublic InputReader(InputStream stream) {\n\t\tthis.stream = stream;\n\t}\n\n\tpublic int read() {\n\t\tif (numChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int peek() {\n\t\tif (numChars == -1)\n\t\t\treturn -1;\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar];\n\t}\n\n\tpublic int readInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic long readLong() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic String readString() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tif (Character.isValidCodePoint(c))\n\t\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn isWhitespace(c);\n\t}\n\n\tpublic static boolean isWhitespace(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tprivate String readLine0() {\n\t\tStringBuilder buf = new StringBuilder();\n\t\tint c = read();\n\t\twhile (c != '\\n' && c != -1) {\n\t\t\tif (c != '\\r')\n\t\t\t\tbuf.appendCodePoint(c);\n\t\t\tc = read();\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\tpublic String readLine() {\n\t\tString s = readLine0();\n\t\twhile (s.trim().length() == 0)\n\t\t\ts = readLine0();\n\t\treturn s;\n\t}\n\n\tpublic String readLine(boolean ignoreEmptyLines) {\n\t\tif (ignoreEmptyLines)\n\t\t\treturn readLine();\n\t\telse\n\t\t\treturn readLine0();\n\t}\n\n\tpublic BigInteger readBigInteger() {\n\t\ttry {\n\t\t\treturn new BigInteger(readString());\n\t\t} catch (NumberFormatException e) {\n\t\t\tthrow new InputMismatchException();\n\t\t}\n\t}\n\n\tpublic char readCharacter() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\treturn (char) c;\n\t}\n\n\tpublic double readDouble() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tdouble res = 0;\n\t\twhile (!isSpaceChar(c) && c != '.') {\n\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\treturn res * Math.pow(10, readInt());\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t}\n\t\tif (c == '.') {\n\t\t\tc = read();\n\t\t\tdouble m = 1;\n\t\t\twhile (!isSpaceChar(c)) {\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * Math.pow(10, readInt());\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tm /= 10;\n\t\t\t\tres += (c - '0') * m;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t}\n\t\treturn res * sgn;\n\t}\n\n\tpublic boolean isExhausted() {\n\t\tint value;\n\t\twhile (isSpaceChar(value = peek()) && value != -1)\n\t\t\tread();\n\t\treturn value == -1;\n\t}\n\n\tpublic String next() {\n\t\treturn readString();\n\t}\n\n\tpublic SpaceCharFilter getFilter() {\n\t\treturn filter;\n\t}\n\n\tpublic void setFilter(SpaceCharFilter filter) {\n\t\tthis.filter = filter;\n\t}\n\n\tpublic interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}\n\nclass IOUtils {\n\tpublic static Pair<Integer, Integer> readIntPair(InputReader in) {\n\t\tint first = in.readInt();\n\t\tint second = in.readInt();\n\t\treturn Pair.makePair(first, second);\n\t}\n\n\tpublic static Pair<Long, Long> readLongPair(InputReader in) {\n\t\tlong first = in.readLong();\n\t\tlong second = in.readLong();\n\t\treturn Pair.makePair(first, second);\n\t}\n\n\tpublic static int[] readIntArray(InputReader in, int size) {\n\t\tint[] array = new int[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tarray[i] = in.readInt();\n\t\treturn array;\n\t}\n\n\tpublic static long[] readLongArray(InputReader in, int size) {\n\t\tlong[] array = new long[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tarray[i] = in.readLong();\n\t\treturn array;\n\t}\n\n\tpublic static double[] readDoubleArray(InputReader in, int size) {\n\t\tdouble[] array = new double[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tarray[i] = in.readDouble();\n\t\treturn array;\n\t}\n\n\tpublic static String[] readStringArray(InputReader in, int size) {\n\t\tString[] array = new String[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tarray[i] = in.readString();\n\t\treturn array;\n\t}\n\n\tpublic static char[] readCharArray(InputReader in, int size) {\n\t\tchar[] array = new char[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tarray[i] = in.readCharacter();\n\t\treturn array;\n\t}\n\n\tpublic static Pair<Integer, Integer>[] readIntPairArray(InputReader in,\n\t\t\tint size) {\n\t\t@SuppressWarnings({ \"unchecked\" })\n\t\tPair<Integer, Integer>[] result = new Pair[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tresult[i] = readIntPair(in);\n\t\treturn result;\n\t}\n\n\tpublic static Pair<Long, Long>[] readLongPairArray(InputReader in, int size) {\n\t\t@SuppressWarnings({ \"unchecked\" })\n\t\tPair<Long, Long>[] result = new Pair[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tresult[i] = readLongPair(in);\n\t\treturn result;\n\t}\n\n\tpublic static void readIntArrays(InputReader in, int[]... arrays) {\n\t\tfor (int i = 0; i < arrays[0].length; i++) {\n\t\t\tfor (int j = 0; j < arrays.length; j++)\n\t\t\t\tarrays[j][i] = in.readInt();\n\t\t}\n\t}\n\n\tpublic static void readLongArrays(InputReader in, long[]... arrays) {\n\t\tfor (int i = 0; i < arrays[0].length; i++) {\n\t\t\tfor (int j = 0; j < arrays.length; j++)\n\t\t\t\tarrays[j][i] = in.readLong();\n\t\t}\n\t}\n\n\tpublic static void readDoubleArrays(InputReader in, double[]... arrays) {\n\t\tfor (int i = 0; i < arrays[0].length; i++) {\n\t\t\tfor (int j = 0; j < arrays.length; j++)\n\t\t\t\tarrays[j][i] = in.readDouble();\n\t\t}\n\t}\n\n\tpublic static char[][] readTable(InputReader in, int rowCount,\n\t\t\tint columnCount) {\n\t\tchar[][] table = new char[rowCount][];\n\t\tfor (int i = 0; i < rowCount; i++)\n\t\t\ttable[i] = readCharArray(in, columnCount);\n\t\treturn table;\n\t}\n\n\tpublic static int[][] readIntTable(InputReader in, int rowCount,\n\t\t\tint columnCount) {\n\t\tint[][] table = new int[rowCount][];\n\t\tfor (int i = 0; i < rowCount; i++)\n\t\t\ttable[i] = readIntArray(in, columnCount);\n\t\treturn table;\n\t}\n\n\tpublic static double[][] readDoubleTable(InputReader in, int rowCount,\n\t\t\tint columnCount) {\n\t\tdouble[][] table = new double[rowCount][];\n\t\tfor (int i = 0; i < rowCount; i++)\n\t\t\ttable[i] = readDoubleArray(in, columnCount);\n\t\treturn table;\n\t}\n\n\tpublic static long[][] readLongTable(InputReader in, int rowCount,\n\t\t\tint columnCount) {\n\t\tlong[][] table = new long[rowCount][];\n\t\tfor (int i = 0; i < rowCount; i++)\n\t\t\ttable[i] = readLongArray(in, columnCount);\n\t\treturn table;\n\t}\n\n\tpublic static String[][] readStringTable(InputReader in, int rowCount,\n\t\t\tint columnCount) {\n\t\tString[][] table = new String[rowCount][];\n\t\tfor (int i = 0; i < rowCount; i++)\n\t\t\ttable[i] = readStringArray(in, columnCount);\n\t\treturn table;\n\t}\n\n\tpublic static String readText(InputReader in) {\n\t\tStringBuilder result = new StringBuilder();\n\t\twhile (true) {\n\t\t\tint character = in.read();\n\t\t\tif (character == '\\r')\n\t\t\t\tcontinue;\n\t\t\tif (character == -1)\n\t\t\t\tbreak;\n\t\t\tresult.append((char) character);\n\t\t}\n\t\treturn result.toString();\n\t}\n\n\tpublic static void readStringArrays(InputReader in, String[]... arrays) {\n\t\tfor (int i = 0; i < arrays[0].length; i++) {\n\t\t\tfor (int j = 0; j < arrays.length; j++)\n\t\t\t\tarrays[j][i] = in.readString();\n\t\t}\n\t}\n\n\tpublic static void printTable(OutputWriter out, char[][] table) {\n\t\tfor (char[] row : table)\n\t\t\tout.printLine(new String(row));\n\t}\n}\n\nclass Pair<U, V> implements Comparable<Pair<U, V>> {\n\tpublic final U first;\n\tpublic final V second;\n\n\tpublic static <U, V> Pair<U, V> makePair(U first, V second) {\n\t\treturn new Pair<U, V>(first, second);\n\t}\n\n\tprivate Pair(U first, V second) {\n\t\tthis.first = first;\n\t\tthis.second = second;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o)\n\t\t\treturn true;\n\t\tif (o == null || getClass() != o.getClass())\n\t\t\treturn false;\n\n\t\tPair<?, ?> pair = (Pair<?, ?>) o;\n\n\t\treturn !(first != null ? !first.equals(pair.first) : pair.first != null)\n\t\t\t\t&& !(second != null ? !second.equals(pair.second)\n\t\t\t\t\t\t: pair.second != null);\n\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\tint result = first != null ? first.hashCode() : 0;\n\t\tresult = 31 * result + (second != null ? second.hashCode() : 0);\n\t\treturn result;\n\t}\n\n\tpublic Pair<V, U> swap() {\n\t\treturn makePair(second, first);\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"(\" + first + \",\" + second + \")\";\n\t}\n\n\t@SuppressWarnings({ \"unchecked\" })\n\tpublic int compareTo(Pair<U, V> o) {\n\t\tint value = ((Comparable<U>) first).compareTo(o.first);\n\t\tif (value != 0)\n\t\t\treturn value;\n\t\treturn ((Comparable<V>) second).compareTo(o.second);\n\t}\n}\n\nclass BidirectionalGraph extends Graph {\n\tpublic int[] transposedEdge;\n\n\tpublic BidirectionalGraph(int vertexCount) {\n\t\tthis(vertexCount, vertexCount);\n\t}\n\n\tpublic BidirectionalGraph(int vertexCount, int edgeCapacity) {\n\t\tsuper(vertexCount, 2 * edgeCapacity);\n\t\ttransposedEdge = new int[2 * edgeCapacity];\n\t}\n\n\tpublic static BidirectionalGraph createGraph(int vertexCount, int[] from,\n\t\t\tint[] to) {\n\t\tBidirectionalGraph graph = new BidirectionalGraph(vertexCount,\n\t\t\t\tfrom.length);\n\t\tfor (int i = 0; i < from.length; i++)\n\t\t\tgraph.addSimpleEdge(from[i], to[i]);\n\t\treturn graph;\n\t}\n\n\tpublic static BidirectionalGraph createWeightedGraph(int vertexCount,\n\t\t\tint[] from, int[] to, long[] weight) {\n\t\tBidirectionalGraph graph = new BidirectionalGraph(vertexCount,\n\t\t\t\tfrom.length);\n\t\tfor (int i = 0; i < from.length; i++)\n\t\t\tgraph.addWeightedEdge(from[i], to[i], weight[i]);\n\t\treturn graph;\n\t}\n\n\tpublic static BidirectionalGraph createFlowGraph(int vertexCount,\n\t\t\tint[] from, int[] to, long[] capacity) {\n\t\tBidirectionalGraph graph = new BidirectionalGraph(vertexCount,\n\t\t\t\tfrom.length * 2);\n\t\tfor (int i = 0; i < from.length; i++)\n\t\t\tgraph.addFlowEdge(from[i], to[i], capacity[i]);\n\t\treturn graph;\n\t}\n\n\tpublic static BidirectionalGraph createFlowWeightedGraph(int vertexCount,\n\t\t\tint[] from, int[] to, long[] weight, long[] capacity) {\n\t\tBidirectionalGraph graph = new BidirectionalGraph(vertexCount,\n\t\t\t\tfrom.length * 2);\n\t\tfor (int i = 0; i < from.length; i++)\n\t\t\tgraph.addFlowWeightedEdge(from[i], to[i], weight[i], capacity[i]);\n\t\treturn graph;\n\t}\n\n\t@Override\n\tpublic int addEdge(int fromID, int toID, long weight, long capacity,\n\t\t\tint reverseEdge) {\n\t\tint lastEdgeCount = edgeCount;\n\t\tsuper.addEdge(fromID, toID, weight, capacity, reverseEdge);\n\t\tsuper.addEdge(toID, fromID, weight, capacity, reverseEdge == -1 ? -1\n\t\t\t\t: reverseEdge + 1);\n\t\tthis.transposedEdge[lastEdgeCount] = lastEdgeCount + 1;\n\t\tthis.transposedEdge[lastEdgeCount + 1] = lastEdgeCount;\n\t\treturn lastEdgeCount;\n\t}\n\n\t@Override\n\tprotected int entriesPerEdge() {\n\t\treturn 2;\n\t}\n\n\t@Override\n\tpublic final int transposed(int id) {\n\t\treturn transposedEdge[id];\n\t}\n\n\t@Override\n\tprotected void ensureEdgeCapacity(int size) {\n\t\tif (size > edgeCapacity()) {\n\t\t\tsuper.ensureEdgeCapacity(size);\n\t\t\ttransposedEdge = resize(transposedEdge, edgeCapacity());\n\t\t}\n\t}\n}\n\nclass Graph {\n\tpublic static final int REMOVED_BIT = 0;\n\n\tprotected int vertexCount;\n\tprotected int edgeCount;\n\n\tprivate int[] firstOutbound;\n\tprivate int[] firstInbound;\n\n\tprivate Edge[] edges;\n\tprivate int[] nextInbound;\n\tprivate int[] nextOutbound;\n\tprivate int[] from;\n\tprivate int[] to;\n\tprivate long[] weight;\n\tprivate long[] capacity;\n\tprivate int[] reverseEdge;\n\tprivate int[] flags;\n\n\tpublic Graph(int vertexCount) {\n\t\tthis(vertexCount, vertexCount);\n\t}\n\n\tpublic Graph(int vertexCount, int edgeCapacity) {\n\t\tthis.vertexCount = vertexCount;\n\t\tfirstOutbound = new int[vertexCount];\n\t\tArrays.fill(firstOutbound, -1);\n\n\t\tfrom = new int[edgeCapacity];\n\t\tto = new int[edgeCapacity];\n\t\tnextOutbound = new int[edgeCapacity];\n\t\tflags = new int[edgeCapacity];\n\t}\n\n\tpublic static Graph createGraph(int vertexCount, int[] from, int[] to) {\n\t\tGraph graph = new Graph(vertexCount, from.length);\n\t\tfor (int i = 0; i < from.length; i++)\n\t\t\tgraph.addSimpleEdge(from[i], to[i]);\n\t\treturn graph;\n\t}\n\n\tpublic static Graph createWeightedGraph(int vertexCount, int[] from,\n\t\t\tint[] to, long[] weight) {\n\t\tGraph graph = new Graph(vertexCount, from.length);\n\t\tfor (int i = 0; i < from.length; i++)\n\t\t\tgraph.addWeightedEdge(from[i], to[i], weight[i]);\n\t\treturn graph;\n\t}\n\n\tpublic static Graph createFlowGraph(int vertexCount, int[] from, int[] to,\n\t\t\tlong[] capacity) {\n\t\tGraph graph = new Graph(vertexCount, from.length * 2);\n\t\tfor (int i = 0; i < from.length; i++)\n\t\t\tgraph.addFlowEdge(from[i], to[i], capacity[i]);\n\t\treturn graph;\n\t}\n\n\tpublic static Graph createFlowWeightedGraph(int vertexCount, int[] from,\n\t\t\tint[] to, long[] weight, long[] capacity) {\n\t\tGraph graph = new Graph(vertexCount, from.length * 2);\n\t\tfor (int i = 0; i < from.length; i++)\n\t\t\tgraph.addFlowWeightedEdge(from[i], to[i], weight[i], capacity[i]);\n\t\treturn graph;\n\t}\n\n\tpublic static Graph createTree(int[] parent) {\n\t\tGraph graph = new Graph(parent.length + 1, parent.length);\n\t\tfor (int i = 0; i < parent.length; i++)\n\t\t\tgraph.addSimpleEdge(parent[i], i + 1);\n\t\treturn graph;\n\t}\n\n\tpublic int addEdge(int fromID, int toID, long weight, long capacity,\n\t\t\tint reverseEdge) {\n\t\tensureEdgeCapacity(edgeCount + 1);\n\t\tif (firstOutbound[fromID] != -1)\n\t\t\tnextOutbound[edgeCount] = firstOutbound[fromID];\n\t\telse\n\t\t\tnextOutbound[edgeCount] = -1;\n\t\tfirstOutbound[fromID] = edgeCount;\n\t\tif (firstInbound != null) {\n\t\t\tif (firstInbound[toID] != -1)\n\t\t\t\tnextInbound[edgeCount] = firstInbound[toID];\n\t\t\telse\n\t\t\t\tnextInbound[edgeCount] = -1;\n\t\t\tfirstInbound[toID] = edgeCount;\n\t\t}\n\t\tthis.from[edgeCount] = fromID;\n\t\tthis.to[edgeCount] = toID;\n\t\tif (capacity != 0) {\n\t\t\tif (this.capacity == null)\n\t\t\t\tthis.capacity = new long[from.length];\n\t\t\tthis.capacity[edgeCount] = capacity;\n\t\t}\n\t\tif (weight != 0) {\n\t\t\tif (this.weight == null)\n\t\t\t\tthis.weight = new long[from.length];\n\t\t\tthis.weight[edgeCount] = weight;\n\t\t}\n\t\tif (reverseEdge != -1) {\n\t\t\tif (this.reverseEdge == null) {\n\t\t\t\tthis.reverseEdge = new int[from.length];\n\t\t\t\tArrays.fill(this.reverseEdge, 0, edgeCount, -1);\n\t\t\t}\n\t\t\tthis.reverseEdge[edgeCount] = reverseEdge;\n\t\t}\n\t\tif (edges != null)\n\t\t\tedges[edgeCount] = createEdge(edgeCount);\n\t\treturn edgeCount++;\n\t}\n\n\tprotected final GraphEdge createEdge(int id) {\n\t\treturn new GraphEdge(id);\n\t}\n\n\tpublic final int addFlowWeightedEdge(int from, int to, long weight,\n\t\t\tlong capacity) {\n\t\tif (capacity == 0) {\n\t\t\treturn addEdge(from, to, weight, 0, -1);\n\t\t} else {\n\t\t\tint lastEdgeCount = edgeCount;\n\t\t\taddEdge(to, from, -weight, 0, lastEdgeCount + entriesPerEdge());\n\t\t\treturn addEdge(from, to, weight, capacity, lastEdgeCount);\n\t\t}\n\t}\n\n\tprotected int entriesPerEdge() {\n\t\treturn 1;\n\t}\n\n\tpublic final int addFlowEdge(int from, int to, long capacity) {\n\t\treturn addFlowWeightedEdge(from, to, 0, capacity);\n\t}\n\n\tpublic final int addWeightedEdge(int from, int to, long weight) {\n\t\treturn addFlowWeightedEdge(from, to, weight, 0);\n\t}\n\n\tpublic final int addSimpleEdge(int from, int to) {\n\t\treturn addWeightedEdge(from, to, 0);\n\t}\n\n\tpublic final int vertexCount() {\n\t\treturn vertexCount;\n\t}\n\n\tpublic final int edgeCount() {\n\t\treturn edgeCount;\n\t}\n\n\tprotected final int edgeCapacity() {\n\t\treturn from.length;\n\t}\n\n\tpublic final Edge edge(int id) {\n\t\tinitEdges();\n\t\treturn edges[id];\n\t}\n\n\tpublic final int firstOutbound(int vertex) {\n\t\tint id = firstOutbound[vertex];\n\t\twhile (id != -1 && isRemoved(id))\n\t\t\tid = nextOutbound[id];\n\t\treturn id;\n\t}\n\n\tpublic final int nextOutbound(int id) {\n\t\tid = nextOutbound[id];\n\t\twhile (id != -1 && isRemoved(id))\n\t\t\tid = nextOutbound[id];\n\t\treturn id;\n\t}\n\n\tpublic final int firstInbound(int vertex) {\n\t\tinitInbound();\n\t\tint id = firstInbound[vertex];\n\t\twhile (id != -1 && isRemoved(id))\n\t\t\tid = nextInbound[id];\n\t\treturn id;\n\t}\n\n\tpublic final int nextInbound(int id) {\n\t\tinitInbound();\n\t\tid = nextInbound[id];\n\t\twhile (id != -1 && isRemoved(id))\n\t\t\tid = nextInbound[id];\n\t\treturn id;\n\t}\n\n\tpublic final int source(int id) {\n\t\treturn from[id];\n\t}\n\n\tpublic final int destination(int id) {\n\t\treturn to[id];\n\t}\n\n\tpublic final long weight(int id) {\n\t\tif (weight == null)\n\t\t\treturn 0;\n\t\treturn weight[id];\n\t}\n\n\tpublic final long capacity(int id) {\n\t\tif (capacity == null)\n\t\t\treturn 0;\n\t\treturn capacity[id];\n\t}\n\n\tpublic final long flow(int id) {\n\t\tif (reverseEdge == null)\n\t\t\treturn 0;\n\t\treturn capacity[reverseEdge[id]];\n\t}\n\n\tpublic final void pushFlow(int id, long flow) {\n\t\tif (flow == 0)\n\t\t\treturn;\n\t\tif (flow > 0) {\n\t\t\tif (capacity(id) < flow)\n\t\t\t\tthrow new IllegalArgumentException(\"Not enough capacity\");\n\t\t} else {\n\t\t\tif (flow(id) < -flow)\n\t\t\t\tthrow new IllegalArgumentException(\"Not enough capacity\");\n\t\t}\n\t\tcapacity[id] -= flow;\n\t\tcapacity[reverseEdge[id]] += flow;\n\t}\n\n\tpublic int transposed(int id) {\n\t\treturn -1;\n\t}\n\n\tpublic final int reverse(int id) {\n\t\tif (reverseEdge == null)\n\t\t\treturn -1;\n\t\treturn reverseEdge[id];\n\t}\n\n\tpublic final void addVertices(int count) {\n\t\tensureVertexCapacity(vertexCount + count);\n\t\tArrays.fill(firstOutbound, vertexCount, vertexCount + count, -1);\n\t\tif (firstInbound != null)\n\t\t\tArrays.fill(firstInbound, vertexCount, vertexCount + count, -1);\n\t\tvertexCount += count;\n\t}\n\n\tprotected final void initEdges() {\n\t\tif (edges == null) {\n\t\t\tedges = new Edge[from.length];\n\t\t\tfor (int i = 0; i < edgeCount; i++)\n\t\t\t\tedges[i] = createEdge(i);\n\t\t}\n\t}\n\n\tpublic final void removeVertex(int vertex) {\n\t\tint id = firstOutbound[vertex];\n\t\twhile (id != -1) {\n\t\t\tremoveEdge(id);\n\t\t\tid = nextOutbound[id];\n\t\t}\n\t\tinitInbound();\n\t\tid = firstInbound[vertex];\n\t\twhile (id != -1) {\n\t\t\tremoveEdge(id);\n\t\t\tid = nextInbound[id];\n\t\t}\n\t}\n\n\tprivate void initInbound() {\n\t\tif (firstInbound == null) {\n\t\t\tfirstInbound = new int[firstOutbound.length];\n\t\t\tArrays.fill(firstInbound, 0, vertexCount, -1);\n\t\t\tnextInbound = new int[from.length];\n\t\t\tfor (int i = 0; i < edgeCount; i++) {\n\t\t\t\tnextInbound[i] = firstInbound[to[i]];\n\t\t\t\tfirstInbound[to[i]] = i;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic final boolean flag(int id, int bit) {\n\t\treturn (flags[id] >> bit & 1) != 0;\n\t}\n\n\tpublic final void setFlag(int id, int bit) {\n\t\tflags[id] |= 1 << bit;\n\t}\n\n\tpublic final void removeFlag(int id, int bit) {\n\t\tflags[id] &= -1 - (1 << bit);\n\t}\n\n\tpublic final void removeEdge(int id) {\n\t\tsetFlag(id, REMOVED_BIT);\n\t}\n\n\tpublic final void restoreEdge(int id) {\n\t\tremoveFlag(id, REMOVED_BIT);\n\t}\n\n\tpublic final boolean isRemoved(int id) {\n\t\treturn flag(id, REMOVED_BIT);\n\t}\n\n\tpublic final Iterable<Edge> outbound(final int id) {\n\t\tinitEdges();\n\t\treturn new Iterable<Edge>() {\n\t\t\tpublic Iterator<Edge> iterator() {\n\t\t\t\treturn new EdgeIterator(id, firstOutbound, nextOutbound);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic final Iterable<Edge> inbound(final int id) {\n\t\tinitEdges();\n\t\tinitInbound();\n\t\treturn new Iterable<Edge>() {\n\t\t\tpublic Iterator<Edge> iterator() {\n\t\t\t\treturn new EdgeIterator(id, firstInbound, nextInbound);\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected void ensureEdgeCapacity(int size) {\n\t\tif (from.length < size) {\n\t\t\tint newSize = Math.max(size, 2 * from.length);\n\t\t\tif (edges != null)\n\t\t\t\tedges = resize(edges, newSize);\n\t\t\tfrom = resize(from, newSize);\n\t\t\tto = resize(to, newSize);\n\t\t\tnextOutbound = resize(nextOutbound, newSize);\n\t\t\tif (nextInbound != null)\n\t\t\t\tnextInbound = resize(nextInbound, newSize);\n\t\t\tif (weight != null)\n\t\t\t\tweight = resize(weight, newSize);\n\t\t\tif (capacity != null)\n\t\t\t\tcapacity = resize(capacity, newSize);\n\t\t\tif (reverseEdge != null)\n\t\t\t\treverseEdge = resize(reverseEdge, newSize);\n\t\t\tflags = resize(flags, newSize);\n\t\t}\n\t}\n\n\tprivate void ensureVertexCapacity(int size) {\n\t\tif (firstOutbound.length < size) {\n\t\t\tint newSize = Math.max(size, 2 * from.length);\n\t\t\tfirstOutbound = resize(firstOutbound, newSize);\n\t\t\tif (firstInbound != null)\n\t\t\t\tfirstInbound = resize(firstInbound, newSize);\n\t\t}\n\t}\n\n\tprotected final int[] resize(int[] array, int size) {\n\t\tint[] newArray = new int[size];\n\t\tSystem.arraycopy(array, 0, newArray, 0, array.length);\n\t\treturn newArray;\n\t}\n\n\tprivate long[] resize(long[] array, int size) {\n\t\tlong[] newArray = new long[size];\n\t\tSystem.arraycopy(array, 0, newArray, 0, array.length);\n\t\treturn newArray;\n\t}\n\n\tprivate Edge[] resize(Edge[] array, int size) {\n\t\tEdge[] newArray = new Edge[size];\n\t\tSystem.arraycopy(array, 0, newArray, 0, array.length);\n\t\treturn newArray;\n\t}\n\n\tpublic final boolean isSparse() {\n\t\treturn vertexCount == 0 || edgeCount * 20 / vertexCount <= vertexCount;\n\t}\n\n\tprotected class GraphEdge implements Edge {\n\t\tprotected int id;\n\n\t\tprotected GraphEdge(int id) {\n\t\t\tthis.id = id;\n\t\t}\n\n\t\tpublic int getSource() {\n\t\t\treturn source(id);\n\t\t}\n\n\t\tpublic int getDestination() {\n\t\t\treturn destination(id);\n\t\t}\n\n\t\tpublic long getWeight() {\n\t\t\treturn weight(id);\n\t\t}\n\n\t\tpublic long getCapacity() {\n\t\t\treturn capacity(id);\n\t\t}\n\n\t\tpublic long getFlow() {\n\t\t\treturn flow(id);\n\t\t}\n\n\t\tpublic void pushFlow(long flow) {\n\t\t\tGraph.this.pushFlow(id, flow);\n\t\t}\n\n\t\tpublic boolean getFlag(int bit) {\n\t\t\treturn flag(id, bit);\n\t\t}\n\n\t\tpublic void setFlag(int bit) {\n\t\t\tGraph.this.setFlag(id, bit);\n\t\t}\n\n\t\tpublic void removeFlag(int bit) {\n\t\t\tGraph.this.removeFlag(id, bit);\n\t\t}\n\n\t\tpublic int getTransposedID() {\n\t\t\treturn transposed(id);\n\t\t}\n\n\t\tpublic Edge getTransposedEdge() {\n\t\t\tint reverseID = getTransposedID();\n\t\t\tif (reverseID == -1)\n\t\t\t\treturn null;\n\t\t\tinitEdges();\n\t\t\treturn edge(reverseID);\n\t\t}\n\n\t\tpublic int getReverseID() {\n\t\t\treturn reverse(id);\n\t\t}\n\n\t\tpublic Edge getReverseEdge() {\n\t\t\tint reverseID = getReverseID();\n\t\t\tif (reverseID == -1)\n\t\t\t\treturn null;\n\t\t\tinitEdges();\n\t\t\treturn edge(reverseID);\n\t\t}\n\n\t\tpublic int getID() {\n\t\t\treturn id;\n\t\t}\n\n\t\tpublic void remove() {\n\t\t\tremoveEdge(id);\n\t\t}\n\n\t\tpublic void restore() {\n\t\t\trestoreEdge(id);\n\t\t}\n\t}\n\n\tpublic class EdgeIterator implements Iterator<Edge> {\n\t\tprivate int edgeID;\n\t\tprivate final int[] next;\n\t\tprivate int lastID = -1;\n\n\t\tpublic EdgeIterator(int id, int[] first, int[] next) {\n\t\t\tthis.next = next;\n\t\t\tedgeID = nextEdge(first[id]);\n\t\t}\n\n\t\tprivate int nextEdge(int id) {\n\t\t\twhile (id != -1 && isRemoved(id))\n\t\t\t\tid = next[id];\n\t\t\treturn id;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\treturn edgeID != -1;\n\t\t}\n\n\t\tpublic Edge next() {\n\t\t\tif (edgeID == -1)\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tlastID = edgeID;\n\t\t\tedgeID = nextEdge(next[lastID]);\n\t\t\treturn edges[lastID];\n\t\t}\n\n\t\tpublic void remove() {\n\t\t\tif (lastID == -1)\n\t\t\t\tthrow new IllegalStateException();\n\t\t\tremoveEdge(lastID);\n\t\t\tlastID = -1;\n\t\t}\n\t}\n\n}\n\ninterface Edge {\n\tpublic int getSource();\n\n\tpublic int getDestination();\n\n\tpublic long getWeight();\n\n\tpublic long getCapacity();\n\n\tpublic long getFlow();\n\n\tpublic void pushFlow(long flow);\n\n\tpublic boolean getFlag(int bit);\n\n\tpublic void setFlag(int bit);\n\n\tpublic void removeFlag(int bit);\n\n\tpublic int getTransposedID();\n\n\tpublic Edge getTransposedEdge();\n\n\tpublic int getReverseID();\n\n\tpublic Edge getReverseEdge();\n\n\tpublic int getID();\n\n\tpublic void remove();\n\n\tpublic void restore();\n}\n\nclass MiscUtils {\n\tpublic static final int[] DX4 = { 1, 0, -1, 0 };\n\tpublic static final int[] DY4 = { 0, -1, 0, 1 };\n\tpublic static final int[] DX8 = { 1, 1, 1, 0, -1, -1, -1, 0 };\n\tpublic static final int[] DY8 = { -1, 0, 1, 1, 1, 0, -1, -1 };\n\tpublic static final int[] DX_KNIGHT = { 2, 1, -1, -2, -2, -1, 1, 2 };\n\tpublic static final int[] DY_KNIGHT = { 1, 2, 2, 1, -1, -2, -2, -1 };\n\n\tprivate static final String[] ROMAN_TOKENS = { \"M\", \"CM\", \"D\", \"CD\", \"C\",\n\t\t\t\"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\" };\n\tprivate static final int[] ROMAN_VALUES = { 1000, 900, 500, 400, 100, 90,\n\t\t\t50, 40, 10, 9, 5, 4, 1 };\n\n\tpublic static long josephProblem(long n, int k) {\n\t\tif (n == 1)\n\t\t\treturn 0;\n\t\tif (k == 1)\n\t\t\treturn n - 1;\n\t\tif (k > n)\n\t\t\treturn (josephProblem(n - 1, k) + k) % n;\n\t\tlong count = n / k;\n\t\tlong result = josephProblem(n - count, k);\n\t\tresult -= n % k;\n\t\tif (result < 0)\n\t\t\tresult += n;\n\t\telse\n\t\t\tresult += result / (k - 1);\n\t\treturn result;\n\t}\n\n\tpublic static boolean isValidCell(int row, int column, int rowCount,\n\t\t\tint columnCount) {\n\t\treturn row >= 0 && row < rowCount && column >= 0\n\t\t\t\t&& column < columnCount;\n\t}\n\n\tpublic static List<Integer> getPath(int[] last, int destination) {\n\t\tList<Integer> path = new ArrayList<Integer>();\n\t\twhile (destination != -1) {\n\t\t\tpath.add(destination);\n\t\t\tdestination = last[destination];\n\t\t}\n\t\tCollections.reverse(path);\n\t\treturn path;\n\t}\n\n\tpublic static List<Integer> getPath(int[][] lastIndex,\n\t\t\tint[][] lastPathNumber, int destination, int pathNumber) {\n\t\tList<Integer> path = new ArrayList<Integer>();\n\t\twhile (destination != -1 || pathNumber != 0) {\n\t\t\tpath.add(destination);\n\t\t\tint nextDestination = lastIndex[destination][pathNumber];\n\t\t\tpathNumber = lastPathNumber[destination][pathNumber];\n\t\t\tdestination = nextDestination;\n\t\t}\n\t\tCollections.reverse(path);\n\t\treturn path;\n\t}\n\n\tpublic static long maximalRectangleSum(long[][] array) {\n\t\tint n = array.length;\n\t\tint m = array[0].length;\n\t\tlong[][] partialSums = new long[n + 1][m + 1];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tlong rowSum = 0;\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\trowSum += array[i][j];\n\t\t\t\tpartialSums[i + 1][j + 1] = partialSums[i][j + 1] + rowSum;\n\t\t\t}\n\t\t}\n\t\tlong result = Long.MIN_VALUE;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tfor (int j = i; j < m; j++) {\n\t\t\t\tlong minPartialSum = 0;\n\t\t\t\tfor (int k = 1; k <= n; k++) {\n\t\t\t\t\tlong current = partialSums[k][j + 1] - partialSums[k][i];\n\t\t\t\t\tresult = Math.max(result, current - minPartialSum);\n\t\t\t\t\tminPartialSum = Math.min(minPartialSum, current);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static int parseIP(String ip) {\n\t\tString[] components = ip.split(\"[.]\");\n\t\tint result = 0;\n\t\tfor (int i = 0; i < 4; i++)\n\t\t\tresult += (1 << (24 - 8 * i)) * Integer.parseInt(components[i]);\n\t\treturn result;\n\t}\n\n\tpublic static String buildIP(int mask) {\n\t\tStringBuilder result = new StringBuilder();\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\tif (i != 0)\n\t\t\t\tresult.append('.');\n\t\t\tresult.append(mask >> (24 - 8 * i) & 255);\n\t\t}\n\t\treturn result.toString();\n\t}\n\n\tpublic static long binarySearch(long from, long to,\n\t\t\tFunction<Long, Boolean> function) {\n\t\twhile (from < to) {\n\t\t\tlong argument = from + (to - from) / 2;\n\t\t\tif (function.value(argument))\n\t\t\t\tto = argument;\n\t\t\telse\n\t\t\t\tfrom = argument + 1;\n\t\t}\n\t\treturn from;\n\t}\n\n\tpublic static <T> boolean equals(T first, T second) {\n\t\treturn first == null && second == null || first != null\n\t\t\t\t&& first.equals(second);\n\t}\n\n\tpublic static boolean isVowel(char ch) {\n\t\tch = Character.toUpperCase(ch);\n\t\treturn ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U'\n\t\t\t\t|| ch == 'Y';\n\t}\n\n\tpublic static boolean isStrictVowel(char ch) {\n\t\tch = Character.toUpperCase(ch);\n\t\treturn ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U';\n\t}\n\n\tpublic static String convertToRoman(int number) {\n\t\tStringBuilder result = new StringBuilder();\n\t\tfor (int i = 0; i < ROMAN_TOKENS.length; i++) {\n\t\t\twhile (number >= ROMAN_VALUES[i]) {\n\t\t\t\tnumber -= ROMAN_VALUES[i];\n\t\t\t\tresult.append(ROMAN_TOKENS[i]);\n\t\t\t}\n\t\t}\n\t\treturn result.toString();\n\t}\n\n\tpublic static int convertFromRoman(String number) {\n\t\tint result = 0;\n\t\tfor (int i = 0; i < ROMAN_TOKENS.length; i++) {\n\t\t\twhile (number.startsWith(ROMAN_TOKENS[i])) {\n\t\t\t\tnumber = number.substring(ROMAN_TOKENS[i].length());\n\t\t\t\tresult += ROMAN_VALUES[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static int distance(int x1, int y1, int x2, int y2) {\n\t\tint dx = x1 - x2;\n\t\tint dy = y1 - y2;\n\t\treturn dx * dx + dy * dy;\n\t}\n\n\tpublic static <T extends Comparable<T>> T min(T first, T second) {\n\t\tif (first.compareTo(second) <= 0)\n\t\t\treturn first;\n\t\treturn second;\n\t}\n\n\tpublic static <T extends Comparable<T>> T max(T first, T second) {\n\t\tif (first.compareTo(second) <= 0)\n\t\t\treturn second;\n\t\treturn first;\n\t}\n\n\tpublic static void decreaseByOne(int[]... arrays) {\n\t\tfor (int[] array : arrays) {\n\t\t\tfor (int i = 0; i < array.length; i++)\n\t\t\t\tarray[i]--;\n\t\t}\n\t}\n\n\tpublic static int[] getIntArray(String s) {\n\t\tString[] tokens = s.split(\" \");\n\t\tint[] result = new int[tokens.length];\n\t\tfor (int i = 0; i < result.length; i++)\n\t\t\tresult[i] = Integer.parseInt(tokens[i]);\n\t\treturn result;\n\t}\n}\n\ninterface Function<A, V> {\n\tpublic abstract V value(A argument);\n}\n\ninterface IntComparator {\n\tpublic static final IntComparator DEFAULT = new IntComparator() {\n\t\tpublic int compare(int first, int second) {\n\t\t\tif (first < second)\n\t\t\t\treturn -1;\n\t\t\tif (first > second)\n\t\t\t\treturn 1;\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\tpublic static final IntComparator REVERSE = new IntComparator() {\n\t\tpublic int compare(int first, int second) {\n\t\t\tif (first < second)\n\t\t\t\treturn 1;\n\t\t\tif (first > second)\n\t\t\t\treturn -1;\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\tpublic int compare(int first, int second);\n}\n\nclass DFSOrder {\n\tpublic final int[] position;\n\tpublic final int[] end;\n\n\tpublic DFSOrder(Graph graph) {\n\t\tthis(graph, 0);\n\t}\n\n\tpublic DFSOrder(Graph graph, int root) {\n\t\tint count = graph.vertexCount();\n\t\tposition = new int[count];\n\t\tend = new int[count];\n\t\tint[] edge = new int[count];\n\t\tint[] stack = new int[count];\n\t\tfor (int i = 0; i < count; i++)\n\t\t\tedge[i] = graph.firstOutbound(i);\n\t\tstack[0] = root;\n\t\tint size = 1;\n\t\tposition[root] = 0;\n\t\tint index = 0;\n\t\twhile (size > 0) {\n\t\t\tint current = stack[size - 1];\n\t\t\tif (edge[current] == -1) {\n\t\t\t\tend[current] = index;\n\t\t\t\tsize--;\n\t\t\t} else {\n\t\t\t\tint next = graph.destination(edge[current]);\n\t\t\t\tedge[current] = graph.nextOutbound(edge[current]);\n\t\t\t\tposition[next] = ++index;\n\t\t\t\tstack[size++] = next;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic DFSOrder(BidirectionalGraph graph) {\n\t\tthis(graph, 0);\n\t}\n\n\tpublic DFSOrder(BidirectionalGraph graph, int root) {\n\t\tint count = graph.vertexCount();\n\t\tposition = new int[count];\n\t\tend = new int[count];\n\t\tint[] edge = new int[count];\n\t\tint[] stack = new int[count];\n\t\tint[] last = new int[count];\n\t\tfor (int i = 0; i < count; i++)\n\t\t\tedge[i] = graph.firstOutbound(i);\n\t\tstack[0] = root;\n\t\tlast[root] = -1;\n\t\tint size = 1;\n\t\tposition[root] = 0;\n\t\tint index = 0;\n\t\twhile (size > 0) {\n\t\t\tint current = stack[size - 1];\n\t\t\tif (edge[current] == -1) {\n\t\t\t\tend[current] = index;\n\t\t\t\tsize--;\n\t\t\t} else {\n\t\t\t\tint next = graph.destination(edge[current]);\n\t\t\t\tif (next == last[current]) {\n\t\t\t\t\tedge[current] = graph.nextOutbound(edge[current]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tedge[current] = graph.nextOutbound(edge[current]);\n\t\t\t\tposition[next] = ++index;\n\t\t\t\tlast[next] = current;\n\t\t\t\tstack[size++] = next;\n\t\t\t}\n\t\t}\n\t}\n}\n\nabstract class IntervalTree {\n\tprotected int size;\n\n\tprotected IntervalTree(int size) {\n\t\tthis(size, true);\n\t}\n\n\tpublic IntervalTree(int size, boolean shouldInit) {\n\t\tthis.size = size;\n\t\tint nodeCount = Math.max(1, Integer.highestOneBit(size) << 2);\n\t\tinitData(size, nodeCount);\n\t\tif (shouldInit)\n\t\t\tinit();\n\t}\n\n\tprotected abstract void initData(int size, int nodeCount);\n\n\tprotected abstract void initAfter(int root, int left, int right, int middle);\n\n\tprotected abstract void initBefore(int root, int left, int right, int middle);\n\n\tprotected abstract void initLeaf(int root, int index);\n\n\tprotected abstract void updatePostProcess(int root, int left, int right,\n\t\t\tint from, int to, long delta, int middle);\n\n\tprotected abstract void updatePreProcess(int root, int left, int right,\n\t\t\tint from, int to, long delta, int middle);\n\n\tprotected abstract void updateFull(int root, int left, int right, int from,\n\t\t\tint to, long delta);\n\n\tprotected abstract long queryPostProcess(int root, int left, int right,\n\t\t\tint from, int to, int middle, long leftResult, long rightResult);\n\n\tprotected abstract void queryPreProcess(int root, int left, int right,\n\t\t\tint from, int to, int middle);\n\n\tprotected abstract long queryFull(int root, int left, int right, int from,\n\t\t\tint to);\n\n\tprotected abstract long emptySegmentResult();\n\n\tpublic void init() {\n\t\tif (size == 0)\n\t\t\treturn;\n\t\tinit(0, 0, size - 1);\n\t}\n\n\tprivate void init(int root, int left, int right) {\n\t\tif (left == right) {\n\t\t\tinitLeaf(root, left);\n\t\t} else {\n\t\t\tint middle = (left + right) >> 1;\n\t\t\tinitBefore(root, left, right, middle);\n\t\t\tinit(2 * root + 1, left, middle);\n\t\t\tinit(2 * root + 2, middle + 1, right);\n\t\t\tinitAfter(root, left, right, middle);\n\t\t}\n\t}\n\n\tpublic void update(int from, int to, long delta) {\n\t\tupdate(0, 0, size - 1, from, to, delta);\n\t}\n\n\tprotected void update(int root, int left, int right, int from, int to,\n\t\t\tlong delta) {\n\t\tif (left > to || right < from)\n\t\t\treturn;\n\t\tif (left >= from && right <= to) {\n\t\t\tupdateFull(root, left, right, from, to, delta);\n\t\t\treturn;\n\t\t}\n\t\tint middle = (left + right) >> 1;\n\t\tupdatePreProcess(root, left, right, from, to, delta, middle);\n\t\tupdate(2 * root + 1, left, middle, from, to, delta);\n\t\tupdate(2 * root + 2, middle + 1, right, from, to, delta);\n\t\tupdatePostProcess(root, left, right, from, to, delta, middle);\n\t}\n\n\tpublic long query(int from, int to) {\n\t\treturn query(0, 0, size - 1, from, to);\n\t}\n\n\tprotected long query(int root, int left, int right, int from, int to) {\n\t\tif (left > to || right < from)\n\t\t\treturn emptySegmentResult();\n\t\tif (left >= from && right <= to)\n\t\t\treturn queryFull(root, left, right, from, to);\n\t\tint middle = (left + right) >> 1;\n\t\tqueryPreProcess(root, left, right, from, to, middle);\n\t\tlong leftResult = query(2 * root + 1, left, middle, from, to);\n\t\tlong rightResult = query(2 * root + 2, middle + 1, right, from, to);\n\t\treturn queryPostProcess(root, left, right, from, to, middle,\n\t\t\t\tleftResult, rightResult);\n\t}\n}\n\nclass LCA {\n\tprivate final long[] order;\n\tprivate final int[] position;\n\tprivate final IntervalTree lcaTree;\n\tprivate final int[] level;\n\n\tpublic LCA(Graph graph) {\n\t\tthis(graph, 0);\n\t}\n\n\tpublic LCA(Graph graph, int root) {\n\t\torder = new long[2 * graph.vertexCount() - 1];\n\t\tposition = new int[graph.vertexCount()];\n\t\tlevel = new int[graph.vertexCount()];\n\t\tint[] index = new int[graph.vertexCount()];\n\t\tfor (int i = 0; i < index.length; i++)\n\t\t\tindex[i] = graph.firstOutbound(i);\n\t\tint[] last = new int[graph.vertexCount()];\n\t\tint[] stack = new int[graph.vertexCount()];\n\t\tstack[0] = root;\n\t\tint size = 1;\n\t\tint j = 0;\n\t\tlast[root] = -1;\n\t\tArrays.fill(position, -1);\n\t\twhile (size > 0) {\n\t\t\tint vertex = stack[--size];\n\t\t\tif (position[vertex] == -1)\n\t\t\t\tposition[vertex] = j;\n\t\t\torder[j++] = vertex;\n\t\t\tif (last[vertex] != -1)\n\t\t\t\tlevel[vertex] = level[last[vertex]] + 1;\n\t\t\twhile (index[vertex] != -1\n\t\t\t\t\t&& last[vertex] == graph.destination(index[vertex]))\n\t\t\t\tindex[vertex] = graph.nextOutbound(index[vertex]);\n\t\t\tif (index[vertex] != -1) {\n\t\t\t\tstack[size++] = vertex;\n\t\t\t\tstack[size++] = graph.destination(index[vertex]);\n\t\t\t\tlast[graph.destination(index[vertex])] = vertex;\n\t\t\t\tindex[vertex] = graph.nextOutbound(index[vertex]);\n\t\t\t}\n\t\t}\n\t\tlcaTree = new ReadOnlyIntervalTree(order) {\n\t\t\t@Override\n\t\t\tprotected long joinValue(long left, long right) {\n\t\t\t\tif (left == -1)\n\t\t\t\t\treturn right;\n\t\t\t\tif (right == -1)\n\t\t\t\t\treturn left;\n\t\t\t\tif (level[((int) left)] < level[((int) right)])\n\t\t\t\t\treturn left;\n\t\t\t\treturn right;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected long neutralValue() {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t};\n\t\tlcaTree.init();\n\t}\n\n\tpublic int getPosition(int vertex) {\n\t\treturn position[vertex];\n\t}\n\n\tpublic int getLCA(int first, int second) {\n\t\treturn (int) lcaTree.query(Math.min(position[first], position[second]),\n\t\t\t\tMath.max(position[first], position[second]));\n\t}\n\n\tpublic int getLevel(int vertex) {\n\t\treturn level[vertex];\n\t}\n\n\tpublic int getPathLength(int first, int second) {\n\t\treturn level[first] + level[second] - 2 * level[getLCA(first, second)];\n\t}\n}\n\nabstract class LongIntervalTree extends IntervalTree {\n\tprotected long[] value;\n\tprotected long[] delta;\n\n\tprotected LongIntervalTree(int size) {\n\t\tthis(size, true);\n\t}\n\n\tpublic LongIntervalTree(int size, boolean shouldInit) {\n\t\tsuper(size, shouldInit);\n\t}\n\n\t@Override\n\tprotected void initData(int size, int nodeCount) {\n\t\tvalue = new long[nodeCount];\n\t\tdelta = new long[nodeCount];\n\t}\n\n\tprotected abstract long joinValue(long left, long right);\n\n\tprotected abstract long joinDelta(long was, long delta);\n\n\tprotected abstract long accumulate(long value, long delta, int length);\n\n\tprotected abstract long neutralValue();\n\n\tprotected abstract long neutralDelta();\n\n\tprotected long initValue(int index) {\n\t\treturn neutralValue();\n\t}\n\n\t@Override\n\tprotected void initAfter(int root, int left, int right, int middle) {\n\t\tvalue[root] = joinValue(value[2 * root + 1], value[2 * root + 2]);\n\t\tdelta[root] = neutralDelta();\n\t}\n\n\t@Override\n\tprotected void initBefore(int root, int left, int right, int middle) {\n\t}\n\n\t@Override\n\tprotected void initLeaf(int root, int index) {\n\t\tvalue[root] = initValue(index);\n\t\tdelta[root] = neutralDelta();\n\t}\n\n\t@Override\n\tprotected void updatePostProcess(int root, int left, int right, int from,\n\t\t\tint to, long delta, int middle) {\n\t\tvalue[root] = joinValue(value[2 * root + 1], value[2 * root + 2]);\n\t}\n\n\t@Override\n\tprotected void updatePreProcess(int root, int left, int right, int from,\n\t\t\tint to, long delta, int middle) {\n\t\tpushDown(root, left, middle, right);\n\t}\n\n\tprotected void pushDown(int root, int left, int middle, int right) {\n\t\tvalue[2 * root + 1] = accumulate(value[2 * root + 1], delta[root],\n\t\t\t\tmiddle - left + 1);\n\t\tvalue[2 * root + 2] = accumulate(value[2 * root + 2], delta[root],\n\t\t\t\tright - middle);\n\t\tdelta[2 * root + 1] = joinDelta(delta[2 * root + 1], delta[root]);\n\t\tdelta[2 * root + 2] = joinDelta(delta[2 * root + 2], delta[root]);\n\t\tdelta[root] = neutralDelta();\n\t}\n\n\t@Override\n\tprotected void updateFull(int root, int left, int right, int from, int to,\n\t\t\tlong delta) {\n\t\tvalue[root] = accumulate(value[root], delta, right - left + 1);\n\t\tthis.delta[root] = joinDelta(this.delta[root], delta);\n\t}\n\n\t@Override\n\tprotected long queryPostProcess(int root, int left, int right, int from,\n\t\t\tint to, int middle, long leftResult, long rightResult) {\n\t\treturn joinValue(leftResult, rightResult);\n\t}\n\n\t@Override\n\tprotected void queryPreProcess(int root, int left, int right, int from,\n\t\t\tint to, int middle) {\n\t\tpushDown(root, left, middle, right);\n\t}\n\n\t@Override\n\tprotected long queryFull(int root, int left, int right, int from, int to) {\n\t\treturn value[root];\n\t}\n\n\t@Override\n\tprotected long emptySegmentResult() {\n\t\treturn neutralValue();\n\t}\n}\n\nclass SumIntervalTree extends LongIntervalTree {\n\tpublic SumIntervalTree(int size) {\n\t\tsuper(size);\n\t}\n\n\t@Override\n\tprotected long joinValue(long left, long right) {\n\t\treturn left + right;\n\t}\n\n\t@Override\n\tprotected long joinDelta(long was, long delta) {\n\t\treturn was + delta;\n\t}\n\n\t@Override\n\tprotected long accumulate(long value, long delta, int length) {\n\t\treturn value + delta * length;\n\t}\n\n\t@Override\n\tprotected long neutralValue() {\n\t\treturn 0;\n\t}\n\n\t@Override\n\tprotected long neutralDelta() {\n\t\treturn 0;\n\t}\n}\n\nabstract class ReadOnlyIntervalTree extends IntervalTree {\n\tprotected long[] value;\n\tprotected long[] array;\n\n\tprotected ReadOnlyIntervalTree(long[] array) {\n\t\tsuper(array.length, false);\n\t\tthis.array = array;\n\t\tinit();\n\t}\n\n\t@Override\n\tprotected void initData(int size, int nodeCount) {\n\t\tvalue = new long[nodeCount];\n\t}\n\n\t@Override\n\tprotected void initAfter(int root, int left, int right, int middle) {\n\t\tvalue[root] = joinValue(value[2 * root + 1], value[2 * root + 2]);\n\t}\n\n\t@Override\n\tprotected void initBefore(int root, int left, int right, int middle) {\n\t}\n\n\t@Override\n\tprotected void initLeaf(int root, int index) {\n\t\tvalue[root] = array[index];\n\t}\n\n\t@Override\n\tprotected void updatePostProcess(int root, int left, int right, int from,\n\t\t\tint to, long delta, int middle) {\n\t\tthrow new UnsupportedOperationException();\n\t}\n\n\t@Override\n\tprotected void updatePreProcess(int root, int left, int right, int from,\n\t\t\tint to, long delta, int middle) {\n\t\tthrow new UnsupportedOperationException();\n\t}\n\n\t@Override\n\tprotected void updateFull(int root, int left, int right, int from, int to,\n\t\t\tlong delta) {\n\t\tthrow new UnsupportedOperationException();\n\t}\n\n\t@Override\n\tprotected long queryPostProcess(int root, int left, int right, int from,\n\t\t\tint to, int middle, long leftResult, long rightResult) {\n\t\treturn joinValue(leftResult, rightResult);\n\t}\n\n\t@Override\n\tprotected void queryPreProcess(int root, int left, int right, int from,\n\t\t\tint to, int middle) {\n\t}\n\n\t@Override\n\tprotected long queryFull(int root, int left, int right, int from, int to) {\n\t\treturn value[root];\n\t}\n\n\t@Override\n\tprotected long emptySegmentResult() {\n\t\treturn neutralValue();\n\t}\n\n\t@Override\n\tpublic void update(int from, int to, long delta) {\n\t\tthrow new UnsupportedOperationException();\n\t}\n\n\t@Override\n\tprotected void update(int root, int left, int right, int from, int to,\n\t\t\tlong delta) {\n\t\tthrow new UnsupportedOperationException();\n\t}\n\n\tprotected abstract long neutralValue();\n\n\tprotected abstract long joinValue(long left, long right);\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\n\npublic class B {\n\t\n\tstatic class Scanner{\n\t\tBufferedReader rd = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer tk;\n\t\tpublic Scanner(){\n\t\t\trd = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\tString next() throws IOException{\n\t\t\twhile(tk == null  || !tk.hasMoreTokens())\n\t\t\t\ttk = new StringTokenizer(rd.readLine());\n\t\t\treturn tk.nextToken();\n\t\t}\n\t\tint nextInt() throws NumberFormatException, IOException{\n\t\t\treturn Integer.valueOf(next());\n\t\t}\n\t\tlong nextLong() throws NumberFormatException, IOException{\n\t\t\treturn Long.valueOf(next());\n\t\t}\n\t\tdouble nextDouble() throws NumberFormatException, IOException{\n\t\t\treturn Double.valueOf(next());\n\t\t}\n\t}\n\t\n\tstatic int N, M, K;\n\tstatic char[][] m;\n\t\n\t\n\tstatic int count(int col){\n\t\tint ret = 0;\n\t\tfor(int i = 1; i < N; i++){\n\t\t\tint left = col - i;\n\t\t\tint right = col + i;\n\t\t\tif (left >= 0 && m[i][left] == 'R')\n\t\t\t\tret++;\n\t\t\tif (right < M && m[i][right] == 'L')\n\t\t\t\tret++;\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\t\n\tpublic static void main(String args[]) throws NumberFormatException, IOException{\n\t\tScanner sc = new Scanner();\n\t\tN = sc.nextInt();\n\t\tM = sc.nextInt();\n\t\tK = sc.nextInt();\n\t\tm = new char[N][];\n\t\tfor(int i = 0; i < N; i++)\n\t\t\tm[i] = sc.next().toCharArray();\n\t\tint[] us = new int[M];\n\t\tArrays.fill(us, 0);\n\t\tfor(int j = 0; j < M; j++){\n\t\t\tint amount = 0;\n\t\t\tfor(int i = 2; i < N; i+=2)\n\t\t\t\tif (m[i][j] == 'U')\n\t\t\t\t\tamount++;\n\t\t\tus[j] = amount;\n\t\t}\n\t\tfor(int j = 0; j < M; j++)\n\t\t\tus[j] += count(j);\n\t\t\n\t\tfor(int i = 0; i < M; i++)\n\t\t\tif(i == 0)\n\t\t\t\tSystem.out.print(us[i]);\n\t\t\telse\n\t\t\t\tSystem.out.print(\" \"+us[i]);\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline bool chkmax(T &a, T b) {\n  return a < b ? a = b, 1 : 0;\n}\ntemplate <typename T>\ninline bool chkmin(T &a, T b) {\n  return b < a ? a = b, 1 : 0;\n}\ntemplate <typename T>\ninline T read() {\n  register char c_;\n  register T _, __;\n  for (_ = 0, __ = 1, c_ = getchar(); !isdigit(c_); c_ = getchar())\n    if (c_ == '-') __ = -1;\n  for (; isdigit(c_); c_ = getchar()) _ = (_ << 1) + (_ << 3) + (c_ ^ 48);\n  return _ * __;\n}\nconst int maxn = 2048;\nint n, m, cnt[maxn];\nchar str[maxn];\nint main() {\n  n = read<int>(), m = read<int>(), read<int>();\n  for (register int i = (1), i_end_ = (n); i <= i_end_; ++i) {\n    scanf(\"%s\", str + 1);\n    for (register int j = (1), j_end_ = (m); j <= j_end_; ++j)\n      if (str[j] == 'U' && (i & 1))\n        ++cnt[j];\n      else if (str[j] == 'L' && j >= i)\n        ++cnt[j - i + 1];\n      else if (str[j] == 'R' && j + i - 1 <= m)\n        ++cnt[j + i - 1];\n  }\n  for (register int i = (1), i_end_ = (m); i <= i_end_; ++i)\n    printf(\"%d \", cnt[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nT gcd(T a, T b) {\n  T r;\n  while (b != 0) {\n    r = a % b;\n    a = b;\n    b = r;\n  }\n  return a;\n}\ntemplate <class T>\nT lcm(T a, T b) {\n  return a / gcd(a, b) * b;\n}\ntemplate <class T>\nint getbit(T s, int i) {\n  return (s >> i) & 1;\n}\ntemplate <class T>\nT onbit(T s, int i) {\n  return s | (T(1) << i);\n}\ntemplate <class T>\nT offbit(T s, int i) {\n  return s & (~(T(1) << i));\n}\nconst double PI = 2 * acos(0.0);\nconst double eps = 1e-9;\nconst int infi = 1e9;\nconst long long Linfi = (long long)1e18;\nconst long long MOD = 1000000007;\nint c1 = 9973;\nstruct nhen {\n  int x, y, direc;\n  nhen() {}\n  nhen(int _x, int _y, int _direc) {\n    x = _x;\n    y = _y;\n    direc = _direc;\n  }\n};\nint n, m, k, cnt = 0;\nstring s[2005];\nnhen P[4000005];\nint ans[2005];\nvoid solve() {\n  for (int i = 1; i <= cnt; i++) {\n    if (P[i].direc == 1) {\n      if (P[i].y + P[i].x - 1 <= m) ans[P[i].x + P[i].y - 1]++;\n    } else if (P[i].direc == 3) {\n      if (P[i].y - P[i].x + 1 >= 1) ans[P[i].y - P[i].x + 1]++;\n    } else if (P[i].direc == 2) {\n      if (P[i].x % 2 == 1) ans[P[i].y]++;\n    } else if (P[i].direc == 4) {\n      if (P[i].x == 1) ans[P[i].y]++;\n    }\n  }\n  for (int i = 1; i <= m; i++) cout << ans[i] << \" \";\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++) {\n    cin >> s[i];\n    s[i] = '0' + s[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      if (s[i][j] == 'R')\n        P[++cnt] = nhen(i, j, 1);\n      else if (s[i][j] == 'L')\n        P[++cnt] = nhen(i, j, 3);\n      else if (s[i][j] == 'U')\n        P[++cnt] = nhen(i, j, 2);\n      else if (s[i][j] == 'D')\n        P[++cnt] = nhen(i, j, 4);\n    }\n  }\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.util.Map.Entry;\n\npublic class B {\n\n\tvoid run() throws IOException {\n\n\t\tint n = ni(), m = ni(), k = ni();\n\t\tnl();\n\t\tint[] ans = new int[m];\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tString line = nl();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tswitch (line.charAt(j)) {\n\t\t\t\tcase 'U':\n\t\t\t\t\tif (i % 2 == 0) {\n\t\t\t\t\t\t++ans[j];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\tif (j >= i) {\n\t\t\t\t\t\t++ans[j - i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\tif (i + j < m) {\n\t\t\t\t\t\t++ans[i + j];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tfor (int a : ans) {\n\t\t\tpw.print(a + \" \");\n\t\t}\n\t}\n\n\tint[] na(int a_len) throws IOException {\n\t\tint[] _a = new int[a_len];\n\t\tfor (int i = 0; i < a_len; i++)\n\t\t\t_a[i] = ni();\n\t\treturn _a;\n\t}\n\n\tString next() throws IOException {\n\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\treturn st.nextToken();\n\t}\n\n\tint ni() throws IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tString nl() throws IOException {\n\t\treturn br.readLine();\n\t}\n\n\tvoid tr(String debug) {\n\t\tif (!OJ)\n\t\t\tpw.println(\" \" + debug);\n\t}\n\n\tstatic PrintWriter pw;\n\tstatic BufferedReader br;\n\tstatic StringTokenizer st;\n\tstatic boolean OJ;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tlong timeout = System.currentTimeMillis();\n\t\tOJ = System.getProperty(\"ONLINE_JUDGE\") != null;\n\t\tpw = new PrintWriter(System.out);\n\t\tbr = new BufferedReader(OJ ? new InputStreamReader(System.in) : new FileReader(new File(\"B.txt\")));\n\n\t\twhile (br.ready())\n\t\t\tnew B().run();\n\t\tif (!OJ) {\n\t\t\tpw.println(\"----------------\");\n\t\t\tpw.println(System.currentTimeMillis() - timeout);\n\t\t}\n\t\tbr.close();\n\t\tpw.close();\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int M = 2e3 + 5;\nchar s[M][M];\nint ans[M];\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  ;\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) {\n      cin >> s[i][j];\n      switch (s[i][j]) {\n        case 'U':\n          if (i & 1) ans[j]++;\n          break;\n        case 'R':\n          if (i + j - 1 <= m) ans[i + j - 1]++;\n          break;\n        case 'L':\n          if (j - i + 1 >= 1) ans[j - i + 1]++;\n          break;\n      }\n    }\n  for (int j = 1; j <= m; j++) cout << ans[j] << ' ';\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gint() {\n  int n;\n  scanf(\"%d\", &n);\n  return n;\n}\nconst int maxn = 1e5 + 10;\nint n, m, k;\nchar s[2005][2005];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) scanf(\"%s\", s[i]);\n  int ans = 0;\n  for (int i = 0; i < m; i++) {\n    ans = 0;\n    for (int j = 1; j < n && i + j < m; j++) {\n      if (s[j][i + j] == 'L') ans++;\n    }\n    for (int j = 1; j < n && (i - j) >= 0; j++)\n      if (s[j][i - j] == 'R') ans++;\n    for (int j = 1; j < n; j++)\n      if (s[j][i] == 'U' && j % 2 == 0) ans++;\n    printf(\"%d \", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nstruct Vec2 {\n  int x;\n  int y;\n};\nVec2 operator*(const Vec2& left, int scalar) {\n  Vec2 result;\n  result.x = left.x * scalar;\n  result.y = left.y * scalar;\n  return result;\n}\nstruct Vec2Hash {\n  int M_;\n  Vec2Hash(int M) : M_(M) {}\n  size_t operator()(const Vec2& vec) const { return M_ * vec.y + vec.x; }\n};\nVec2 operator*(int scalar, const Vec2& right) { return right * scalar; }\nbool operator==(const Vec2& left, const Vec2& right) {\n  return right.x == left.x && right.y == left.y;\n}\nVec2 operator+(const Vec2& left, const Vec2& right) {\n  Vec2 result;\n  result.x = left.x + right.x;\n  result.y = left.y + right.y;\n  return result;\n}\nint spiders_met(const std::unordered_map<Vec2, Vec2, Vec2Hash>& spiders, int N,\n                int j) {\n  int spidersMet = 0;\n  static Vec2 dirs[] = {Vec2{-1, 0}, Vec2{1, 0}, Vec2{0, -1}, Vec2{0, 1}};\n  for (int i = 1; i < N; ++i) {\n    Vec2 testPos = {j, i};\n    for (int k = 0; k < 4; ++k) {\n      Vec2 pos = testPos + dirs[k] * i;\n      auto iter = spiders.find(pos);\n      if (iter != spiders.end() && (iter->second * (-1) == dirs[k])) {\n        ++spidersMet;\n      }\n    }\n  }\n  return spidersMet;\n}\nint main() {\n  int N, M, spiderCount;\n  std::cin >> N;\n  std::cin >> M;\n  std::cin >> spiderCount;\n  std::unordered_map<Vec2, Vec2, Vec2Hash> spiders(spiderCount, Vec2Hash(M));\n  for (int i = 0; i < N; ++i) {\n    for (int j = 0; j < M; ++j) {\n      char dir;\n      std::cin >> dir;\n      Vec2 step;\n      bool hasSpider = true;\n      switch (dir) {\n        case 'R':\n          step = {1, 0};\n          break;\n        case 'L':\n          step = {-1, 0};\n          break;\n        case 'U':\n          step = {0, -1};\n          break;\n        case 'D':\n          step = {0, 1};\n          break;\n        default:\n          hasSpider = false;\n          break;\n      }\n      if (hasSpider) {\n        Vec2 origin = {j, i};\n        spiders[origin] = step;\n      }\n    }\n  }\n  for (int j = 0; j < M; ++j) {\n    std::cout << spiders_met(spiders, N, j) << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int MAXN = 2020;\nint a[MAXN][MAXN], dp[MAXN][MAXN];\nint main() {\n  int n, m, k, i, j, ans;\n  char ch;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  getchar();\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      ch = getchar();\n      if (ch == 'R')\n        a[i][j] = 1;\n      else if (ch == 'L')\n        a[i][j] = 2;\n      else if (ch == 'U')\n        a[i][j] = 3;\n      else if (ch == 'D')\n        a[i][j] = 4;\n      else\n        a[i][j] = 0;\n    }\n    getchar();\n  }\n  memset(dp, 0, sizeof(dp));\n  for (i = n; i >= 2; i--)\n    for (j = 1; j <= m; j++)\n      if ((a[i][j] == 3) && (i % 2 == 1)) dp[(i + 1) / 2][j]++;\n  for (j = 1; j <= m; j++)\n    for (i = 1; i <= n; i++)\n      if ((a[i][j] == 1) && (i + j - 1 > 0) && (i + j - 1 <= m))\n        dp[i][i + j - 1]++;\n  for (j = m; j >= 1; j--)\n    for (i = 1; i <= n; i++)\n      if ((a[i][j] == 2) && (j - i + 1 > 0) && (j - i + 1 <= m))\n        dp[i][j - i + 1]++;\n  for (j = 1; j <= m; j++) {\n    ans = 0;\n    for (i = 1; i <= n; i++) ans += dp[i][j];\n    if (j < m)\n      printf(\"%d \", ans);\n    else\n      printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nunsigned R[2222];\nint main() {\n  unsigned x, y, i, j, k;\n  char c;\n  scanf(\"%u%u%u\", &x, &y, &k);\n  for (i = 0; i < x; i++)\n    for (j = 0; j < y; j++) {\n      while ((c = getchar()) <= ' ')\n        ;\n      if (c == 'U') {\n        if (!(i & 1)) R[j]++;\n      } else if (c == 'L') {\n        k = j - i;\n        if (k < y) R[k]++;\n      } else if (c == 'R') {\n        k = j + i;\n        if (k < y) R[k]++;\n      }\n    }\n  printf(\"%u\", *R);\n  for (j = 0; ++j < y;) printf(\" %u\", R[j]);\n  putchar('\\n');\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class OmNomAndSpiders {\n    public static void main(String[] main) {\n        Scanner in = new Scanner(System.in);\n\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        in.nextLine();\n        int[] out = new int[m];\n        in.nextLine();\n        for(int row = 1; row < n; row++) {\n            String line = in.nextLine();\n            for(int i = 0; i < m; i++) {\n                char ch = line.charAt(i);\n                switch(ch) {\n                    case 'U':\n                        if (row % 2 == 0)\n                            out[i]++;\n                        break;\n                    case 'L':\n                        int col = i - row;\n                        if (col >= 0) {\n                            out[col]++;\n                        }\n                        break;\n                    case 'R':\n                        col = i + row;\n                        if (col < m) {\n                            out[col]++;\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n\n        for(int i : out) {\n            System.out.print(i + \" \");\n        }\n        System.out.println();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e3 + 10;\nint n, m, k, r[N];\nchar g[N][N];\nint main() {\n  cin.sync_with_stdio(0);\n  while (cin >> n >> m >> k) {\n    for (int i = 0; i < n; i++) cin >> g[i];\n    int d[4][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n    char c[] = {'L', 'U', 'R', 'D'};\n    memset(r, 0, sizeof(r));\n    for (int i = 0; i < n; i++)\n      for (int j = 0; j < m; j++)\n        for (int k = 0; k < 4; k++) {\n          int x = i + i * d[k][0];\n          int y = j + i * d[k][1];\n          if (0 <= x && x < n && 0 <= y && y < m && g[x][y] == c[k]) r[j]++;\n        }\n    for (int i = 0; i < m; i++) printf(\"%d%c\", r[i], i < m - 1 ? ' ' : '\\n');\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class RookBishopKing {\n\n    public static void main (String[] args)\n    {       \n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n        int cnt[][] = new int[n][m];\n        sc.nextLine();\n        for (int i=0;i<n;++i){\n            String line = sc.nextLine();\n            //System.out.println(line);\n            for (int j=0;j<m;++j){\n               // System.out.print(line.charAt(j));\n                if (line.charAt(j)=='R'){\n                    if (i+j<m) cnt[i][j+i]++;                   \n                }else if (line.charAt(j)=='L'){\n                    if (j-i>=0) cnt[i][j-i]++;\n                }else if (line.charAt(j)=='U'){\n                    if (i%2 ==0) cnt[i/2][j]++;\n                }\n            }\n        }\n        for (int i=0;i<m;++i){\n            int res = 0;\n            for (int j=1;j<n;++j) res+=cnt[j][i];\n            System.out.print(res + \" \");\n        }\n        sc.close();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar grid[2005][2005];\nchar getGrid(int row, int col) {\n  if (row > -1 && row < n && col > -1 && col < m) {\n    return grid[row][col];\n  } else {\n    return '0';\n  }\n}\nint main() {\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &m);\n  scanf(\"%d\", &k);\n  for (int i = (int)0; i <= (int)n - 1; i++) scanf(\"%s\", grid[i]);\n  for (int c = (int)0; c <= (int)m - 1; c++) {\n    int count = 0;\n    for (int r = (int)1; r <= (int)n - 1; r++) {\n      if (getGrid(r + r, c) == 'U') count++;\n      if (getGrid(r, c + r) == 'L') count++;\n      if (getGrid(r, c - r) == 'R') count++;\n    }\n    printf(\"%d \", count);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n//import java.util.logging.Level;\n//import java.util.logging.Logger;\npublic class Main\n\n{\n     BufferedReader read;\n     BufferedWriter write;\n    public static void main(String args[]) throws Exception\n    {\n        \n      new Main().init(\"1\");\n    }\n    char ch[][];\n    int a1[]={1,0,-1,0},a2[]={0,1,0,-1};\n    int r,c;\n     void init(String name) throws Exception\n    {\n        read= ri();//rf(name+\".txt\");\n        int p[]=ia(read.readLine());\n        r=p[0];c=p[1];int k=p[2];\n        ch=new char[r][];\n        for(int i=0;i<r;i++)ch[i]=read.readLine().toCharArray();\n        System.out.print(get(0));\n        for(int i=1;i<c;i++)System.out.print(\" \"+get(i));\n        System.out.println();\n        \n   }\n     int get(int col)\n    {\n        int ans=0;\n        for(int i=1;i<r;i++)\n        {\n            if(b(i,col-i)&&ch[i][col-i]=='R')ans++;\n            if(b(i,col+i)&&ch[i][col+i]=='L')ans++;\n            if(b(i+i,col)&&ch[i+i][col]=='U')ans++;\n        }\n        return ans;\n        \n     }\n   boolean b(int i,int j)\n    {\n       return i>=0&&i<r&&j>=0&&j<c;\n   }\n\n\n\nint i(String s){return Integer.parseInt(s.trim());}\nlong l(String s){return Long.parseLong(s.trim());}\n int[] ia(String s1){String s[]=s1.trim().split(\" \");int p[]=new int[s.length];for(int i=0;i<s.length;i++)p[i]=Integer.parseInt(s[i]);return p;}\n long[] la(String s)\n {\n     String s1[]=s.split(\" \");\n     long la[]=new long[s1.length];\n     for(int i=0;i<s1.length;i++)la[i]=l(s1[i]);\n     return la;\n }\nstatic BufferedWriter wf(String s) throws Exception{return new BufferedWriter(new FileWriter(new File(s)));}\nstatic BufferedReader rf(String s) throws Exception{return new BufferedReader(new FileReader(new File(s)));}\nstatic BufferedReader ri() throws Exception{return new BufferedReader(new InputStreamReader(System.in));}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n * Author: Sergey Paramonov\n * Date: 13.06.14\n * Time: 19:03\n */\npublic class Zepto_20140613_B {\n\n    Scanner scanner = new Scanner(System.in);\n    BufferedReader buffered = new BufferedReader(new InputStreamReader(System.in));\n    StreamTokenizer input = new StreamTokenizer(buffered);\n\n    static PrintWriter output = new PrintWriter(new BufferedOutputStream(System.out));\n\n    int nextInt() throws Exception {\n        input.nextToken();\n        return (int) input.nval;\n    }\n\n    static void flushAndClose() {\n        output.flush();\n        System.out.flush();\n        output.close();\n    }\n\n    void main() throws Exception {\n        String[] str = buffered.readLine().split(\" \");\n        int n = Integer.valueOf(str[0]);\n        int m = Integer.valueOf(str[1]);\n        int[] a = new int[m];\n        Arrays.fill(a, 0);\n        for (int i=0; i<n; i++) {\n            String s = buffered.readLine();\n            for (int j=0; j<m; j++) {\n                char c = s.charAt(j);\n                if (c == 'L') {\n                    if (j-i >= 0) {\n                        a[j-i]++;\n                    }\n                }\n                if (c == 'R') {\n                    if (j+i < m) {\n                        a[j+i]++;\n                    }\n                }\n\n                if (c == 'U') {\n                    if (i%2 == 0) {\n                        a[j]++;\n                    }\n                }\n            }\n        }\n\n        for (int i=0; i<m; i++) {\n            System.out.print(a[i] + \" \");\n        }\n        System.out.println();\n    }\n\n    public static void main(String[] args) throws Exception {\n        new Zepto_20140613_B().main();\n        flushAndClose();\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, k = map(int, input().split())\nfield = []\ncounts = []\nfor j in range(m):\n  counts.append(0)\nfor i in range(n):\n  row = list(input())\n  field.append(row)\n\nfor i in range(n):\n  for j in range(m):\n    if field[i][j] == \"L\":\n      jth = j - i\n      if jth >= 0:\n        counts[jth] += 1\n    elif field[i][j] == \"R\":\n      jth = i + j\n      if jth < m:\n        counts[jth] += 1\n    elif field[i][j] == \"U\":\n      if i % 2 == 0:\n        counts[j] += 1\n\n#counts = []\n#for j in range(m):\n#  count = 0\n#  for i in range(n):\n#    if newfield[i][j] == \"S\":\n#      count += 1\n#  counts.append(str(count))\n\n#print(field)\n#print(newfield)\nprint(\" \".join(list(map(str, counts))))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n\tpublic static class pair implements Comparable<pair>\n\t{\n\t\tint a;\n\t\tint b;\n\t\tpublic pair(int pa, int pb)\n\t\t{\n\t\t\ta = pa; b= pb;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(pair o) {\n\t\t\tif(this.a < o.a)\n\t\t\t\treturn -1;\n\t\t\tif(this.a > o.a)\n\t\t\t\treturn 1;\n\t\t\treturn Integer.compare(o.b, this.b);\n\t\t}\n\t}\n\n\tpublic static void main (String[] args) throws Exception\n\t{\t\t\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] spl = in.readLine().split(\" \");\n\t\tint n = Integer.parseInt(spl[0]);\n\t\tint m = Integer.parseInt(spl[1]);\n\t\tint k = Integer.parseInt(spl[2]);\n\t\tint[] sL = new int[m+n+1];\n\t\tint[]  sR =  new int[m+n+1];\n\t\tint[]  sU = new int[m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString linea = in.readLine();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tchar ch = linea.charAt(j);\n\t\t\t\tif(ch=='L')\n\t\t\t\t{\n\t\t\t\t\tsL[j-i+n]++;\n\t\t\t\t}\n\t\t\t\tif(ch=='R')\n\t\t\t\t{\n\t\t\t\t\tsR[i+j]++;\n\t\t\t\t}\n\t\t\t\tif(ch=='U')\n\t\t\t\t{\n\t\t\t\t\tif(i%2==0)\n\t\t\t\t\t\tsU[j]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tStringBuffer ans = new StringBuffer();\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tint act = 0;\n\t\t\tact+=sU[j];\n\t\t\tact+=sL[j+n];\n\t\t\tact+=sR[j];\n\t\t\tans.append(act);\n\t\t\tif(j<m-1)\n\t\t\t\tans.append(\" \");\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n, m, k = map( int, input().split() )\n\nans = [0] * m\n\n\n\nfor i in range( n ):\n\n    field = input()\n\n    for j in range( m ):\n\n        if ( field[j] == 'U' ) and ( i % 2 == 0 ): ans[j] += 1\n\n        elif ( field[j] == 'L' ) and ( j >= i ): ans[j - i] += 1\n\n        elif ( field[j] == 'R' ) and ( j + i < m ): ans[j + i] += 1\n\n\n\nprint ( ' '.join( map( str, ans ) ) )\n\n\n\n# Made By Mostafa_Khaled"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int N, M, K;\n  cin >> N >> M >> K;\n  char m[2003][2003];\n  for (int i = 0; i < N; i++) {\n    for (int j = 0; j < M; j++) {\n      cin >> m[i][j];\n    }\n  }\n  for (int j = 0; j < M; j++) {\n    int cnt = 0;\n    for (int i = 0; i < N; i++) {\n      if (j - i >= 0 && m[i][j - i] == 'R') cnt++;\n      if (j + i < M && m[i][j + i] == 'L') cnt++;\n      if (i + i < N && m[i + i][j] == 'U') cnt++;\n    }\n    cout << cnt << \" \";\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint map[2001][2001] = {0};\nint ans[2001] = {0};\nint n, m, k;\nchar ss[2001];\nvoid show() {\n  int i, j;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      printf(\"%d\", map[i][j]);\n    }\n    printf(\"\\n\");\n  }\n}\nint main() {\n  int i, j, k;\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", ss);\n    for (j = 0; j < m; j++) {\n      if (ss[j] == '.') {\n        map[i][j] = 0;\n      } else if (ss[j] == 'L') {\n        map[i][j] = 1;\n      } else if (ss[j] == 'R') {\n        map[i][j] = 2;\n      } else if (ss[j] == 'U') {\n        map[i][j] = 4;\n      } else {\n        map[i][j] = 8;\n      }\n    }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      if (map[i][j] == 1) {\n        if (i <= j) ans[j - i]++;\n      } else if (map[i][j] == 2) {\n        if (i < m - j) ans[i + j]++;\n      } else if (map[i][j] == 4) {\n        if (!(i & 1)) ans[j]++;\n      } else if (map[i][j] == 8) {\n      }\n    }\n  }\n  printf(\"%d\", ans[0]);\n  for (i = 1; i < m; i++) {\n    printf(\" %d\", ans[i]);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2005;\nint res[N];\nint n, m, k;\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  char x = getchar();\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) {\n      x = getchar();\n      switch (x) {\n        case 'D': {\n          if (i == 1) res[j]++;\n          break;\n        }\n        case 'U': {\n          if ((i - 1) % 2 == 0) res[j]++;\n          break;\n        }\n        case 'R': {\n          if (j + i - 1 <= m) res[j + i - 1]++;\n          break;\n        }\n        case 'L': {\n          if (j - i + 1 >= 1) res[j - i + 1]++;\n          break;\n        }\n        default: {\n        }\n      }\n    }\n    x = getchar();\n  }\n  for (int i = 1; i <= m; i++) cout << res[i] << \" \";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, m, k;\nchar field[2009][2009];\nvoid ReadData() {\n  scanf(\"%d %d %d%*c\", &n, &m, &k);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s%*c\", field[i]);\n  }\n}\nint answer[2009];\nvoid Solve() {\n  memset(answer, 0, sizeof(answer));\n  for (int column = 0; column < m; column++) {\n    for (int row = 1; row < n; row++) {\n      int pos = row + row;\n      if (pos < n && field[pos][column] == 'U') {\n        answer[column]++;\n      }\n      pos = column + row;\n      if (pos < m && field[row][pos] == 'L') {\n        answer[column]++;\n      }\n      pos = column - row;\n      if (pos >= 0 && field[row][pos] == 'R') {\n        answer[column]++;\n      }\n    }\n  }\n}\nvoid WriteData() {\n  for (int i = 0; i < m; i++) {\n    printf(\"%d \", answer[i]);\n  }\n  printf(\"\\n\");\n}\nint main() {\n  int QWE = 1;\n  for (int T = 0; T < QWE; T++) {\n    ReadData();\n    Solve();\n    WriteData();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9 + 7;\nvoid solve() {\n  long long n;\n  cin >> n;\n  ;\n  long long m;\n  cin >> m;\n  ;\n  long long k;\n  cin >> k;\n  ;\n  char mat[n][m];\n  for (long long i = 0; i < (long long)n; i++) {\n    for (long long j = 0; j < m; j++) cin >> mat[i][j];\n  }\n  for (long long j = 0; j < m; j++) {\n    long long count = 0;\n    for (long long k = 1; k < n; k++) {\n      if (mat[k][j] == 'U' and (k) % 2 == 0) count++;\n    }\n    long long pos = 1, in = j;\n    while (pos < n and in - pos >= 0) {\n      if (mat[pos][in - pos] == 'R') count++;\n      pos++;\n    }\n    pos = 1;\n    while (pos < n and in + pos < m) {\n      if (mat[pos][in + pos] == 'L') count++;\n      pos++;\n    }\n    cout << count << \" \";\n  }\n  cout << '\\n';\n  ;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct __s {\n  __s() {\n    if (1) {\n      ios_base::Init i;\n      cin.sync_with_stdio(0);\n      cin.tie(0);\n    }\n  }\n  ~__s() {\n    if (!1)\n      fprintf(stderr, \"Execution time: %.3lf s.\\n\",\n              (double)clock() / CLOCKS_PER_SEC);\n    long long n;\n    cin >> n;\n  }\n} __S;\nlong long n, m, k;\nstring s[2222];\nlong long a[2222];\nint main(void) {\n  cin >> n >> m >> k;\n  for (long long i = 0; i < (long long)(n); i++) {\n    cin >> s[i];\n  }\n  for (long long i = 0; i < (long long)(n); i++) {\n    for (long long j = 0; j < (long long)(m); j++) {\n      if (s[i][j] == 'L') {\n        if (j >= i) a[j - i]++;\n      } else if (s[i][j] == 'R') {\n        if (j + i < m) a[j + i]++;\n      } else if (s[i][j] == 'U') {\n        if (i % 2 == 0) a[j]++;\n      }\n    }\n  }\n  for (long long i = 0; i < (long long)(m); i++) {\n    cout << a[i] << \" \";\n  }\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, ans[2020];\nchar park[2020][2020];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  memset(ans, 0, sizeof(ans));\n  for (int i = 0; i < n; i++) {\n    getchar();\n    for (int j = 0; j < m; j++) {\n      scanf(\"%c\", &park[i][j]);\n    }\n  }\n  for (int k = 0; k < m; k++) {\n    for (int pos = 1; pos < n; pos++) {\n      if (0 <= (k - pos) && park[pos][k - pos] == 'R') {\n        ans[k]++;\n      }\n      if ((k + pos) < m && park[pos][k + pos] == 'L') {\n        ans[k]++;\n      }\n      if (2 * pos < n && park[2 * pos][k] == 'U') {\n        ans[k]++;\n      }\n    }\n    printf(\"%d \", ans[k]);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class OmNomandSpiders {\n\n  static BufferedReader in;\n  static PrintWriter out;\n  static StringTokenizer tok;\n\n  static void solve() throws Exception {\n    int n = nextInt(), m = nextInt(), k = nextInt();\n    char[][] c = new char[n][m];\n    for (int i = 0; i < n; i++)\n      c[i] = next().toCharArray();\n    int[] count = new int[m];\n    for (int i = 1; i < n; i++)\n      for (int j = 0; j < m; j++)\n        switch (c[i][j]) {\n          case 'U':\n            if (i % 2 == 0)\n              count[j]++;\n            break;\n          case 'L':\n            if (j - i >= 0)\n              count[j - i]++;\n            break;\n          case 'R':\n            if (j + i < m)\n              count[j + i]++;\n            break;\n          default:\n            break;\n        }\n    for (int j = 0; j < m; j++)\n      out.print(count[j] + \" \");\n  }\n\n  public static void main(String args[]) {\n    try {\n      in = new BufferedReader(new InputStreamReader(System.in));\n      out = new PrintWriter(new OutputStreamWriter(System.out));\n      solve();\n      in.close();\n      out.close();\n    } catch (Throwable e) {\n      e.printStackTrace();\n      System.exit(1);\n    }\n  }\n\n  static int nextInt() throws IOException {\n    return Integer.parseInt(next());\n  }\n\n  static int[] nextIntArray(int len, int start) throws IOException {\n    int[] a = new int[len];\n    for (int i = start; i < len; i++)\n      a[i] = nextInt();\n    return a;\n  }\n\n  static long nextLong() throws IOException {\n    return Long.parseLong(next());\n  }\n\n  static long[] nextLongArray(int len, int start) throws IOException {\n    long[] a = new long[len];\n    for (int i = start; i < len; i++)\n      a[i] = nextLong();\n    return a;\n  }\n\n  static String next() throws IOException {\n    while (tok == null || !tok.hasMoreTokens()) {\n      tok = new StringTokenizer(in.readLine());\n    }\n    return tok.nextToken();\n  }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/stack:16777216\")\nusing namespace std;\nconst double Pi = acos(-1.0);\nconst int INF = 1000000000;\nconst int MOD = 1000000007;\nstring s[2005];\nchar buf[2005];\nint res[2005];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = (0); i < (n); ++i) {\n    scanf(\"%s\", buf);\n    s[i] = buf;\n  }\n  for (int i = (0); i < (n); ++i) {\n    for (int j = (0); j < (m); ++j) {\n      if (s[i][j] == 'U') {\n        if (i % 2 == 0) ++res[j];\n      }\n      if (s[i][j] == 'R') {\n        if (i + j < m) {\n          res[i + j]++;\n        }\n      }\n      if (s[i][j] == 'L') {\n        if (j - i >= 0) {\n          res[j - i]++;\n        }\n      }\n    }\n  }\n  for (int i = (0); i < (m); ++i) {\n    cout << res[i] << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1000000000;\nconst int MOD = 1000000007;\nconst double pi = acos(-1.0);\nint ans[2222];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = (0); i <= (n - 1); ++i) {\n    string s;\n    cin >> s;\n    for (int j = (0); j <= (m - 1); ++j) {\n      if (s[j] == '.') continue;\n      if (s[j] == 'D') continue;\n      if (s[j] == 'L') {\n        if (j >= i) ans[j - i]++;\n      }\n      if (s[j] == 'R') {\n        if (i + j < m) ans[i + j]++;\n      }\n      if (s[j] == 'U') {\n        if (i % 2 == 0) ans[j]++;\n      }\n    }\n  }\n  for (int j = (0); j <= (m - 1); ++j) cout << ans[j] << \" \";\n  cout << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Spider {\n\n\tstatic public class FastScanner {\n\t\tjava.io.BufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\tinit();\n\t\t}\n\n\t\tpublic FastScanner(String name) {\n\t\t\tinit(name);\n\t\t}\n\n\t\tpublic FastScanner(boolean isOnlineJudge) {\n\t\t\tif (!isOnlineJudge || System.getProperty(\"ONLINE_JUDGE\") != null) {\n\t\t\t\tinit();\n\t\t\t} else {\n\t\t\t\tinit(\"input.txt\");\n\t\t\t}\n\t\t}\n\n\t\tprivate void init() {\n\t\t\tbr = new java.io.BufferedReader(new java.io.InputStreamReader(\n\t\t\t\t\tSystem.in));\n\t\t}\n\n\t\tprivate void init(String name) {\n\t\t\ttry {\n\t\t\t\tbr = new java.io.BufferedReader(new java.io.FileReader(name));\n\t\t\t} catch (java.io.FileNotFoundException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic String nextToken() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (java.io.IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\n\t}\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tFastScanner s = new FastScanner();\n//\t\tFastScanner s = new FastScanner(\"input.txt\");\n\t\tint N = s.nextInt();\n\t\tint M = s.nextInt();\n\t\tint K = s.nextInt();\n\t\tchar[][] arr = new char[N][M];\n\t\tint count[] = new int[M];\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tarr[i] = s.nextToken().toCharArray();\n\t\t}\n//\t\t_(arr);\n\t\t\n\t\tfor (int m = 0; m < M; m++) {\n\t\t\tfor (int n = 1; n < N; n++) {\n\t\t\t\tchar ch = arr[n][m];\n//\t\t\t\tif(n > 1 && ch == 'U'){\n//\t\t\t\t\tcount[m]++;\n//\t\t\t\t}else if(ch == 'R' && m + n < M){\n//\t\t\t\t\tcount[m + n]++;\n//\t\t\t\t}else if(ch == 'L' && m - n >= 0){\n//\t\t\t\t\tcount[m - n]++;\n//\t\t\t\t}\n\t\t\t\tswitch(ch){\n\t\t\t\tcase 'U':\n\t\t\t\t\tif(n % 2 == 0) count[m]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'R':\n\t\t\t\t\tif(m + n < M) count[m + n]++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\tif(m - n >= 0) count[m - n]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i : count){\n\t\t\tSystem.out.print(i + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t\t\n\t}\n\t\n\tstatic void _(Object... objs) {\n\t\tSystem.err.println(Arrays.deepToString(objs));\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int _Int() {\n  char Syed_Zafrul_Lipu[1000];\n  scanf(\"%s\", Syed_Zafrul_Lipu);\n  return atoi(Syed_Zafrul_Lipu);\n}\ninline string _String() {\n  char Syed_Zafrul_Lipu[100001];\n  scanf(\"%s\", Syed_Zafrul_Lipu);\n  string s(Syed_Zafrul_Lipu);\n  return s;\n}\nconst int M = 2000 + 10;\nchar ch[M][M];\nint main() {\n  int n = _Int(), a, b, c;\n  int m = _Int();\n  int pre = _Int();\n  for (int i = 0; i < n; i++) scanf(\"%s\", ch[i]);\n  for (int j = 0; j < m; j++) {\n    int ans = 0;\n    for (int i = 0, mv = 0; i < n; i++, mv++) {\n      if ((i + mv) >= 0 && (i + mv < n) && ch[i + mv][j] == 'U') ans++;\n      if ((j + mv) >= 0 && (j + mv < m) && ch[i][j + mv] == 'L') ans++;\n      if ((i - mv) >= 0 && (i - mv < n) && ch[i - mv][j] == 'D') ans++;\n      if ((j - mv) >= 0 && (j - mv < m) && ch[i][j - mv] == 'R') ans++;\n    }\n    printf(\"%d \", ans);\n  }\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.io.Reader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Andrii Baranov\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        String[] park = new String[n];\n        for (int i = 0; i < n; i++) {\n            park[i] = in.next();\n        }\n\n        int[] res = new int[m];\n        for (int i = 0; i < m; i++) {\n            int curRes = 0;\n            for (int j = 0; j < n; j++) {\n                //check left\n                if (i - j >= 0) {\n                    if ('R' == park[j].charAt(i - j)) {\n                        curRes++;\n                    }\n                }\n                //check right\n                if (i + j < m) {\n                    if ('L' == park[j].charAt(i + j)) {\n                        curRes++;\n                    }\n                }\n                //check down\n                if (j + j < n) {\n                    if ('U' == park[j + j].charAt(i)) {\n                        curRes++;\n                    }\n                }\n            }\n            res[i] = curRes;\n        }\n\n        for (int r : res) {\n            out.print(r + \" \");\n        }\n    }\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    private String[] currentArray;\n    int curPointer;\n\n    public InputReader(InputStream inputStream) {\n        reader = new BufferedReader(new InputStreamReader(inputStream));\n    }\n\n    public String next() {\n        try {\n            currentArray = null;\n            return reader.readLine();\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    public int nextInt() {\n        if ((currentArray == null) || (curPointer >= currentArray.length)) {\n            try {\n                currentArray = reader.readLine().split(\" \");\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n            curPointer = 0;\n        }\n        return Integer.parseInt(currentArray[curPointer++]);\n    }\n\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint m = in.nextInt();\n\t\tint k = in.nextInt();\n\t\tchar[][] a = new char[n][m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = in.next();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\ta[i][j] = s.charAt(j);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tint ans = 0;\n\t\t\tfor (int l = 1; l < n; l++) {\n\t\t\t\tif (l * 2 < n && a[l * 2][j] == 'U') {\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\tif (j - l >= 0 && a[l][j - l] == 'R') {\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\tif (j + l < m && a[l][j + l] == 'L') {\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.print(ans + \" \");\n\t\t}\n\t\tSystem.out.print(\"\\n\");\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, m, k, i, j, num = 0;\n  scanf(\"%d %d %d\", &n, &m, &k);\n  getchar();\n  char grid[n][m];\n  int a[m];\n  for (i = 0; i < m; i++) {\n    a[i] = 0;\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      grid[i][j] = getchar();\n    }\n    getchar();\n  }\n  for (i = 0; i < m; i++) {\n    for (j = 1; j < n; j++) {\n      if (i + j < m && grid[j][i + j] == 'L') num++;\n      if (i - j >= 0 && grid[j][i - j] == 'R') num++;\n      if (j + j < n && grid[j + j][i] == 'U') num++;\n    }\n    a[i] = num;\n    num = 0;\n  }\n  for (i = 0; i < m; i++) {\n    printf(\"%d%s\", a[i], (i == m - 1) ? \"\\n\" : \" \");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n    BufferedReader in;\n    PrintWriter out;\n    StringTokenizer st;\n\n    String nextToken() throws IOException {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n    int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n    long nextLong() throws IOException{\n        return Long.parseLong(nextToken());\n    }\n\n    void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        int[] res = new int[m];\n        for (int i = 0; i < n; i++) {\n            String s = nextToken();\n            for (int j = 0; j < m; j++) {\n                char c = s.charAt(j);\n                switch (c) {\n                    case 'D':\n                        break;\n                    case 'U':\n                        if (i % 2 == 0) res[j]++;\n                        break;\n                    case 'L':\n                        if (j - i >= 0) res[j - i]++;\n                        break;\n                    case 'R':\n                        if (j + i < m) res[j + i]++;\n                        break;\n                }\n            }\n        }\n        for (int i : res) out.print(i + \" \");\n    }\n\n    public void run() {\n        try {\n//            in = new BufferedReader(new FileReader(\"input.txt\"));\n//            out = new PrintWriter(\"output.txt\");\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n            Locale.setDefault(Locale.UK);\n            solve();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        } finally {\n            out.close();\n        }\n    }\n\n    public static void main(String Args[]) {\n        new Thread(null, new Main(), \"1\", 1 << 28).start();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class a {\n    public static PrintWriter out;\n    public static void main(String args[]){\n    Scanner in = new Scanner(System.in);\n    out = new PrintWriter(System.out);\n    int n = in.nextInt();\n    int m = in.nextInt();\n    int k = in.nextInt();\n    char[][] a = new char[n][m];\n    in.nextLine();\n    for (int i=0;i<n;i++){\n        String st = in.nextLine();\n        for (int j=0;j<m;j++) {\n            a[i][j] = st.charAt(j);\n        }\n    }\n    int[] ans = new int[m];\n    for (int i=1;i<n;i++) {\n        for (int j=0;j<m;j++){\n            if (j-i>=0 && a[i][j-i] == 'R') ans[j]++;\n            if (j+i<m && a[i][j+i] == 'L') ans[j]++;\n            if(i+i <n && a[i+i][j] == 'U') ans[j]++;\n        }\n    }\n    for (int i=0;i<m;i++){\n        out.print(ans[i] + \" \");\n    }\n    out.close();\n    }   \n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic BufferedReader reader;\n\tstatic StringTokenizer tokenizer;\n\tstatic PrintWriter writer;\n\n\tstatic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tstatic long nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tstatic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tstatic String nextToken() throws IOException {\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t}\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\ttokenizer = null;\n\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\twriter = new PrintWriter(System.out);\n\t\tbanana();\n\t\treader.close();\n\t\twriter.close();\n\t}\n\n\tstatic int[] dx = { 1, 0, -1, 0 };\n\tstatic int[] dy = { 0, -1, 0, 1 };\n\n\tstatic void banana() throws IOException {\n\t\tArrayList<Integer> x = new ArrayList<Integer>();\n\t\tArrayList<Integer> y = new ArrayList<Integer>();\n\t\tArrayList<Integer> dir = new ArrayList<Integer>();\n\t\tint n = nextInt();\n\t\tint m = nextInt();\n\t\tint k = nextInt();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = nextToken();\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tif (s.charAt(j) != '.') {\n\t\t\t\t\tint cd = -1;\n\t\t\t\t\tif (s.charAt(j) == 'D') {\n\t\t\t\t\t\tcd = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (s.charAt(j) == 'L') {\n\t\t\t\t\t\tcd = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (s.charAt(j) == 'U') {\n\t\t\t\t\t\tcd = 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (s.charAt(j) == 'R') {\n\t\t\t\t\t\tcd = 3;\n\t\t\t\t\t}\n\t\t\t\t\tx.add(i);\n\t\t\t\t\ty.add(j);\n\t\t\t\t\tdir.add(cd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tint[] ans = new int[m];\n\n\t\tfor (int t = 0; t < k; t++) {\n\t\t\tint xx = x.get(t);\n\t\t\tint yy = y.get(t);\n\t\t\tint cd = dir.get(t);\n\t\t\tif (cd == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (cd == 1) {\n\t\t\t\tyy -= xx;\n\t\t\t\tif (yy >= 0 && yy < m) {\n\t\t\t\t\tans[yy]++;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (cd == 2) {\n\t\t\t\tif (xx % 2 == 0) {\n\t\t\t\t\tans[yy]++;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (cd == 3) {\n\t\t\t\tyy += xx;\n\t\t\t\tif (yy >= 0 && yy < m) {\n\t\t\t\t\tans[yy]++;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\twriter.print(ans[j] + \" \");\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class P, class Q>\nvoid smin(P &a, Q b) {\n  if (b < a) a = b;\n}\ntemplate <class P, class Q>\nvoid smax(P &a, Q b) {\n  if (b > a) a = b;\n}\ntemplate <class P, class Q>\nbool in(const P &a, const Q &b) {\n  return a.find(b) != a.end();\n}\nconst int MAXN = 2222;\nint n, m, k;\nstring s[MAXN];\nint r[MAXN][MAXN], l[MAXN][MAXN], u[MAXN][MAXN], t[MAXN];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = (0); i < int(n); ++i) cin >> s[i];\n  for (int i = (0); i < int(n); ++i)\n    for (int j = (0); j < int(m); ++j) {\n      if (s[i][j] == 'R') r[i][j]++;\n      if (s[i][j] == 'L') l[i][j]++;\n      if (s[i][j] == 'U') u[i][j]++;\n    }\n  for (int i = (0); i < int(n); ++i)\n    for (int j = (0); j < int(m); ++j) {\n      if (j - i >= 0) t[j] += r[i][j - i];\n      if (j + i < m) t[j] += l[i][j + i];\n      if (i + i < n) t[j] += u[i + i][j];\n    }\n  for (int i = (0); i < int(m); ++i) cout << t[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long br[1000009], i, j, k, l, m, n, sum, cnt, num, cr[1000009];\nchar ar[4000][4000];\nint main() {\n  scanf(\"%lld %lld %lld\", &n, &m, &cnt);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", &ar[i]);\n  }\n  for (j = 0; j < m; j++) {\n    for (i = 2; i < n; i = i + 2) {\n      {\n        if (ar[i][j] == 'U') cr[j]++;\n      }\n    }\n  }\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      if (ar[i][j] == 'L') {\n        if (j - i >= 0) cr[j - i]++;\n      } else if (ar[i][j] == 'R')\n        if (j + i < m) cr[j + i]++;\n    }\n  }\n  for (i = 0; i < m; i++) printf(\"%lld \", cr[i]);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, k = map(int, input().split())\ninput()\ns = [0] * m\nfor i in range(1, n):\n    for j, x in enumerate(input()):\n        if x == 'L':\n            if j - i >= 0: s[j - i] += 1\n        elif x == 'R':\n            if j + i < m: s[j + i] += 1\n        elif x == 'U' and i & 1 == 0: s[j] += 1\nprint(' '.join(map(str, s)))"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class CF436_2{\n    public static void main(String[] args){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n        int[] ans = new int[m];\n        for(int i = 0; i < m; i++)\n            ans[i] = 0;\n        for(int i = 0; i < n; i++){\n            String s = in.next();\n            for(int j = 0; j < m; j++){\n                if(s.charAt(j) == 'R'){\n                    if((i+j) >= 0 && (i+j) < m)\n                        ans[i+j]++;\n                }else if(s.charAt(j) == 'L'){\n                    if((j-i) >= 0 && (j-i) < m)\n                        ans[j-i]++;\n                }else if(s.charAt(j) == 'U'){\n                    if((i & 1) == 0)\n                        ans[j]++;\n                }\n            }\n        }\n        System.out.print(ans[0]);\n        for(int i = 1; i < m; i++)\n            System.out.print(\" \" + ans[i]);\n        System.out.println(\"\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class CFTest142\n{\n\n\tstatic BufferedReader br;\n\n\tpublic static void main(String[] args) {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\n\t\ttry {\n\n\t\t\tint[]arr=readIntArr();\n\t\t\tint n=arr[0];\n\t\t\tint m=arr[1];\n\t\t\tint k=arr[2];\n\t\t\tString[]str=new String[n];\n\t\t\tfor(int i=0;i<n;i++)str[i]=readLine();\n\t\t\tbr.close();\n\t\t\t\n\t\t\tint[]cnt=new int[m];\n\t\t\t\n\t\t\tfor(int i=1;i<n;i++){\n\t\t\t\t\n\t\t\t\tfor(int j=0;j<m;j++){\n\t\t\t\t\tchar c=str[i].charAt(j);\n\t\t\t\t\tif(c=='U'){\n\t\t\t\t\t\tif(i%2==0)cnt[j]++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(c=='L'){\n\t\t\t\t\t\tint diff=j-i;\n\t\t\t\t\t\tif(diff>=0)cnt[diff]++;\n\t\t\t\t\t}else if(c=='R'){\n\t\t\t\t\t\t//System.out.println(\"adding\");\n\t\t\t\t\t\tint add=j+i;\n\t\t\t\t\t\tif(add<m)cnt[add]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.print(cnt[0]);\n\t\t\tfor(int i=1;i<m;i++){\n\t\t\t\tSystem.out.print(\" \"+cnt[i]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\t\n\t\n\n\tstatic public String readLine() throws IOException {\n\t\treturn br.readLine();\n\n\t}\n\n\tstatic public String readString() throws IOException {\n\t\treturn br.readLine();\n\n\t}\n\n\tstatic public long readlong() throws IOException {\n\t\treturn Long.parseLong(br.readLine());\n\t}\n\n\tstatic public int readInt() throws IOException {\n\t\treturn Integer.parseInt(br.readLine());\n\t}\n\n\tstatic public int[] readIntArr() throws IOException {\n\t\tString[] str = br.readLine().split(\" \");\n\t\tint arr[] = new int[str.length];\n\t\tfor (int i = 0; i < arr.length; i++)\n\t\t\tarr[i] = Integer.parseInt(str[i]);\n\t\treturn arr;\n\t}\n\n\tstatic public double[] readDoubleArr() throws IOException {\n\t\tString[] str = br.readLine().split(\" \");\n\t\tdouble arr[] = new double[str.length];\n\t\tfor (int i = 0; i < arr.length; i++)\n\t\t\tarr[i] = Double.parseDouble(str[i]);\n\t\treturn arr;\n\t}\n\n\tstatic public long[] readLongArr() throws IOException {\n\t\tString[] str = br.readLine().split(\" \");\n\t\tlong arr[] = new long[str.length];\n\t\tfor (int i = 0; i < arr.length; i++)\n\t\t\tarr[i] = Long.parseLong(str[i]);\n\t\treturn arr;\n\t}\n\n\tstatic public double readDouble() throws IOException {\n\t\treturn Double.parseDouble(br.readLine());\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class CF {public static void main(String[] args) throws Exception {new Solve();}}\n\nclass Solve { public Solve() throws Exception{solve();}\n    void solve() throws Exception {\n        int n = NI();\n        int m = NI();\n        int k = NI(), t;\n        NS();\n        int[] res = new int[m];\n        for (int i = 1; i < n; i++) {\n            String str = NS();\n            for (int j = 0; j < m; j++)\n                if (str.charAt(j) != '.')\n                    switch (str.charAt(j)) {\n                        case 'L':\n                            t = j - i;\n                            if (t >= 0)\n                                res[t]++;\n                            break;\n                        case 'R':\n                            t = j + i;\n                            if (t < m)\n                                res[t]++;\n                            break;\n                        case 'U':\n                           if (i % 2 == 0)\n                               res[j]++;\n                    }\n        }\n\n        StringBuilder sb = new StringBuilder();\n        for (int i : res)\n            sb.append(i).append(' ');\n        System.out.println(sb);\n    }\n\n\n    final int INF = Integer.MAX_VALUE;\n    final long LINF = Long.MAX_VALUE;\n    void inInt(int[]a,int n)throws Exception{for(int i=0;i<n;i++)a[i]=NI();}\n    void inLong(long[]a,int n)throws Exception{for(int i=0;i<n;i++)a[i]=NL();}\n    BufferedReader stdin=new BufferedReader(new InputStreamReader(System.in));\n    StringTokenizer st=new StringTokenizer(\"\");\n    int min(int i1,int i2){return i1<i2?i1:i2;}\n    long min(long i1,long i2){return i1<i2?i1:i2;}\n    int max(int i1,int i2){return i1>i2?i1:i2;}\n    long max(long i1,long i2){return i1>i2?i1:i2;}\n    String NS()throws Exception{while(!st.hasMoreTokens())st=new StringTokenizer(stdin.readLine());return st.nextToken();}\n    String NLn()throws Exception{return stdin.readLine();}\n    int NI()throws Exception{return Integer.parseInt(NS());}\n    long NL()throws Exception{return Long.parseLong(NS());}\n    double ND()throws Exception{return Double.parseDouble(NS());}\n    int abs(int x){return x<0?-x:x;}\n    long abs(long x){return x<0?-x:x;}\n    int mod(int x,int mod){return(x+mod)%mod;}\n}\nclass ArrayUtils{public static void mergeSort(long[]a){long[]src=a.clone();mergeSortInt(src, a, 0, a.length);}\n    public static void mergeSortInt(long[]src,long[]dest,int low,int high) {\n        int length = high - low;\n        if(length == 1) return;\n        if (length == 2) {\n            if(dest[low] > dest[high-1]){long t = dest[low];dest[low] = dest[high-1];dest[high-1] = t;}\n            return;}\n        int mid=(low+high)>>>1;\n        mergeSortInt(dest,src,low,mid);\n        mergeSortInt(dest,src,mid,high);\n        for(int i=low,p=low,q=mid;i<high;i++)if(q>=high||p<mid&&src[p]<=src[q])dest[i]=src[p++];else dest[i] = src[q++];}}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\ntime_t waktu = clock();\nvoid gettime() {\n  printf(\"\\nTime : %.2lf\", (clock() - waktu) / double(CLOCKS_PER_SEC));\n}\nint comp(int a, int b) { return (a > b); }\nusing namespace std;\nint main() {\n  int hasil[2002] = {}, n, m, k, x, i, j;\n  char data[2002];\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", &data);\n    x = strlen(data);\n    for (j = 0; j < x; j++) {\n      if (data[j] == 'R') {\n        if (i + j < m) {\n          hasil[i + j]++;\n        }\n      } else if (data[j] == 'L') {\n        if (j - i >= 0) {\n          hasil[j - i]++;\n        }\n      } else if (data[j] == 'U') {\n        if (i % 2 == 0) {\n          hasil[j]++;\n        }\n      }\n    }\n  }\n  for (i = 0; i < m; i++) {\n    printf(\"%d \", hasil[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int N = in.nextInt();\n        int M = in.nextInt();\n        int K = in.nextInt();\n        int[] cnt = new int[M];\n        for (int i = 0; i < N; i++) {\n            String s = in.next();\n            for (int j = 0; j < M; j++) {\n                char c = s.charAt(j);\n                if (c == 'R') {\n                    int meet = j + i;\n                    if (meet < M) cnt[meet]++;\n                } else if (c == 'L') {\n                    int meet = j - i;\n                    if (meet >= 0) cnt[meet]++;\n                } else if (c == 'U') {\n                    if (i % 2 == 0) cnt[j]++;\n                }\n            }\n        }\n        for (int i = 0; i < M; i++) {\n            if (i>0) out.print(' ');\n            out.print(cnt[i]);\n        }\n        out.println();\n    }\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        char[][] f = new char[n][m];\n        for (int i = 0; i < n; ++i) {\n            String s = in.nextString();\n            for (int j = 0; j < m; ++j) {\n                f[i][j] = s.charAt(j);\n            }\n        }\n        for (int col = 0; col < m; ++col) {\n            out.print(calc(f, col) + \" \");\n        }\n    }\n\n    int[] dx = new int[] {1, 0, -1, 0};\n    int[] dy = new int[] {0, 1, 0, -1};\n    char[] dc = new char[] {'U', 'L', 'D', 'R'};\n\n    private int calc(char[][] f, int col) {\n        int res = 0;\n        for (int row = 1; row < f.length; ++row) {\n            int x = row;\n            int y = col;\n            for (int k = 0; k < 4; ++k) {\n                int nx = x + dx[k] * row;\n                int ny = y + dy[k] * row;\n                if (valid(nx, ny, f.length, f[0].length)) {\n                    if (f[nx][ny] == dc[k]) {\n                        ++res;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n\n    private boolean valid(int x, int y, int n, int m) {\n        return x >= 0 && x < n && y >= 0 && y < m;\n    }\n}\n\nclass InputReader {\n    private BufferedReader reader;\n    private StringTokenizer stt;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n    }\n\n    public String nextLine() {\n        try {\n            return reader.readLine().trim();\n        } catch (IOException e) {\n            return null;\n        }\n    }\n\n    public String nextString() {\n        while (stt == null || !stt.hasMoreTokens()) {\n            stt = new StringTokenizer(nextLine());\n        }\n        return stt.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(nextString());\n    }\n\n}\n\n"
        },
        {
            "language": 1,
            "solution": "n,m,k = map(int,raw_input().split())\n\ng = []\nfor i in range(n):\n    t = (raw_input())\n    g.append(t)\n\na = []\nfor i in range(m):\n    a.append(0)\n\nfor i in range(1,n):\n    for j in range(m):\n        if g[i][j] == \"U\":\n            if i%2 == 0:\n                a[j] += 1\n        if g[i][j] == \"L\":\n            v = j - i\n            if v >= 0 and v <m:\n                a[v] += 1\n        if g[i][j] == \"R\":\n            v = j + i\n            if v >= 0 and v <m:\n                a[v] += 1\n                \nfor i in a:\n    print i,\n        \n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k, i, j, res, col;\n  cin >> n >> m >> k;\n  char park[n][m];\n  for (i = 0; i < n; i++)\n    for (j = 0; j < m; j++) cin >> park[i][j];\n  for (col = 0; col < m; col++) {\n    res = 0;\n    i = 1;\n    while (i < n && col + i < m) {\n      if (park[i][col + i] == 'L') res++;\n      i++;\n    }\n    i = 1;\n    while (i < n && col - i >= 0) {\n      if (park[i][col - i] == 'R') res++;\n      i++;\n    }\n    i = 2;\n    while (i < n) {\n      if (park[i][col] == 'U' && i % 2 == 0) res++;\n      i++;\n    }\n    cout << res << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedInputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class B {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String[] split = reader.readLine().split(\"\\\\s+\");\n        int n = Integer.parseInt(split[0]);\n        int     m = Integer.parseInt(split[1]);\n        int[] results = new int[m];\n        for (int i = 0; i < n; i++) {\n            String s = reader.readLine();\n            for (int j = 0; j < m; j++) {\n                switch (s.charAt(j)) {\n                    case 'U':\n                        if (i % 2 != 1)\n                            results[j]++;\n                        break;\n                    case 'L':\n                        if (i <= j)\n                            results[j - i]++;\n                        break;\n                    case 'R':\n                        if (i <= m - j - 1)\n                            results[j + i]++;\n                        break;\n                }\n            }\n        }\n        for (int result : results)\n            System.out.print(result + \" \");\n        System.out.println();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[4005][4005];\nvector<long long> rowr[2005];\nvector<long long> rowl[2005];\nvector<long long> col[2005];\nint main() {\n  long long n, m, k, i, j;\n  cin >> n >> m >> k;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      cin >> a[i][j];\n      if (a[i][j] == 'R')\n        rowr[i].push_back(j);\n      else if (a[i][j] == 'L') {\n        rowl[i].push_back(j);\n      } else if (a[i][j] == 'U') {\n        col[j].push_back(i);\n      }\n    }\n  }\n  n--;\n  m--;\n  long long t = 1;\n  long long ans = 0;\n  long long y;\n  for (i = 0; i <= m; i++) {\n    t = 1;\n    ans = 0;\n    for (j = 1; j <= n; j++) {\n      if (i + j <= m)\n        if (a[j][i + j] == 'L') ans++;\n      if (i - j >= 0)\n        if (a[j][i - j] == 'R') ans++;\n      if (j + j <= n)\n        if (a[j + j][i] == 'U') ans++;\n    }\n    cout << ans << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class B436 {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int M = in.nextInt();\n        in.nextInt(); // K\n        int[] answer = new int[M];\n        for (int n=0; n<N; n++) {\n            char[] S = in.next().toCharArray();\n            for (int m=0; m<M; m++) {\n                char c = S[m];\n                if (c == 'L') {\n                    int hit = m-n;\n                    if (hit >= 0) {\n                        answer[hit]++;\n                    }\n                } else if (c == 'R') {\n                    int hit = m+n;\n                    if (hit < M) {\n                        answer[hit]++;\n                    }\n                } else if (c == 'U') {\n                    if (n%2 == 0) {\n                        answer[m]++;\n                    }\n                }\n            }\n        }\n        StringBuilder output = new StringBuilder();\n        for (int a : answer) {\n            output.append(a).append(' ');\n        }\n        System.out.println(output);\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class B {\n\n    public static void main(String[] args) {\n        MyScanner in = new MyScanner();\n\n        int n = in.nextInt();\n        int m = in.nextInt();\n\n        int k = in.nextInt();\n\n        char[][] board = new char[n][];\n\n        for (int i = 0; i < n; i++) {\n            board[i] = in.next().toCharArray();\n        }\n\n        int[] count = new int[m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (board[i][j] == 'U') {\n\n                    if (i % 2 == 0) count[j]++;\n                }\n                if (board[i][j] == 'R') {\n                    if (i + j < m) {\n                        count[i + j]++;\n                    }\n                }\n                if (board[i][j] == 'L') {\n                    if (j - i >= 0) {\n                        count[j - i]++;\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < count.length; i++) {\n            System.out.print(count[i] + \" \");\n        }\n        System.out.println();\n\n    }\n\n    //-----------MyScanner class for faster input----------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n    }\n    //--------------------------------------------------------    \n}\n"
        },
        {
            "language": 4,
            "solution": "/**\n * Created by \ufffd\ufffd\ufffd\ufffd on 31.03.2015.\n */\nimport java.io.*;\nimport java.util.*;\n\npublic class b {\n    public static void main(String args[]){\n        try(Scanner in = new Scanner(System.in);\n            PrintWriter out = new PrintWriter(System.out)){\n            int n = in.nextInt(), m = in.nextInt(), k = in.nextInt();\n            String s;\n            int[] a = new int[2000];\n            in.nextLine();\n            in.nextLine();\n            for (int i = 1; i < n; i++){\n                s = in.nextLine();\n                for(int j = 0; j < m; j++){\n                    if (s.charAt(j) == 'R' && j + i < m) a[j + i]++;\n                    if (s.charAt(j) == 'L' && j - i > -1) a[j - i]++;\n                    if (s.charAt(j) == 'U' && i % 2 == 0) a[j]++;\n                }\n            }\n            for (int i = 0; i < m; i++) out.print(a[i] + \" \");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ans[2010];\nchar a[2010][2010];\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = (0); i < (n); ++i) scanf(\"%s\", a[i]);\n  for (int i = (0); i < (n); ++i) {\n    for (int j = (0); j < (m); ++j) {\n      if ((a[i][j] == 'D') || (a[i][j] == '.')) continue;\n      if (a[i][j] == 'U') {\n        if (i & 1) continue;\n        ans[j]++;\n      }\n      if (a[i][j] == 'R') {\n        if (i + j < m) ans[i + j]++;\n      }\n      if (a[i][j] == 'L') {\n        if (j - i >= 0) ans[j - i]++;\n      }\n    }\n  }\n  for (int i = (0); i < (m); ++i) {\n    if (i) printf(\" \");\n    printf(\"%d\", ans[i]);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class OmNomAndSpiders {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc =  new Scanner(System.in);\n\t\tint row = sc.nextInt();\n\t\tint col = sc.nextInt();\n\t\tint spiderNum = sc.nextInt();\n\t\tchar[][] spiders = new char[row][col];\n\t\tString aLine = sc.next();\n\t\tfor(int i=1;i<row;i++){//not scan the first line\n\t\t\taLine = sc.next();\n\t\t\tfor(int j=0;j<col;j++){\n\t\t\t\tif(aLine.charAt(j) == 'R')\n\t\t\t\t\tspiders[i][j] = 'R';\n\t\t\t\tif(aLine.charAt(j) == 'L')\n\t\t\t\t\tspiders[i][j] = 'L';\n\t\t\t\tif(aLine.charAt(j) == 'U')\n\t\t\t\t\tspiders[i][j] = 'U';\n\t\t\t\tif(aLine.charAt(j) == 'D')\n\t\t\t\t\tspiders[i][j] = 'D';\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t\t\n\t\t//Let us number columns with integers from 0 from left to right and rows from 0 from top to bottom. \n\t\t//In the cell (x,y) at the time t only four spiders can be at this cell:\n\t\t//Spider, which is moving left and started at (x,y+t).\n\t\t//Spider, which is moving right and started at (x,y-t).\n\t\t//Spider, which is moving up and started at (x+t,y).\n\t\t//Spider, which is moving down and started at (x-t,y).\n\t\tfor(int i=0;i<col;i++){\n\t\t\tint nums = 0;\n\t\t\tint time = 1;\n\t\t\tfor(int j=1;j<row;j++){\n\t\t\t\tif(i+time < col && spiders[j][i+time] == 'L')\n\t\t\t\t\tnums ++;\n\t\t\t\tif(i-time >= 0 && spiders[j][i-time] == 'R')\n\t\t\t\t\tnums ++;\n\t\t\t\tif(j-time > 0 && spiders[j-time][i] == 'D')\n\t\t\t\t\tnums ++;\n\t\t\t\tif(j+time < row && spiders[j+time][i] == 'U')\n\t\t\t\t\tnums ++;\n\t\t\t\ttime ++;\n\t\t\t}\n\t\t\tSystem.out.print(nums + \" \");\n\t\t}\t\n\t\t\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n\npublic class A {\n\n\tstatic final double EPS = 1e-9;\n\t\n\tpublic static void main(String[] args) throws IOException \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\n\t\tint n = sc.nextInt(), m = sc.nextInt(), k = sc.nextInt();\n\t\tint[] ans = new int[m];\n\t\tfor(int i = 0; i < n; ++i)\n\t\t{\n\t\t\tchar[] s = sc.next().toCharArray();\n\t\t\tfor(int j = 0; j < m; ++j)\n\t\t\t{\n\t\t\t\tchar c = s[j];\n\t\t\t\tif(c == 'U' && i%2 == 0)\n\t\t\t\t\tans[j]++;\n\t\t\t\telse if(c == 'R' && j + i < m)\n\t\t\t\t\tans[i+j]++;\n\t\t\t\telse if(c == 'L' && j - i >= 0)\n\t\t\t\t\tans[j-i]++;\n\t\t\t}\n\t\t}\n\t\tfor(int x: ans)\n\t\t\tout.print(x + \" \");\n\t\tout.flush();\n\t\tout.close();\n\t}\n\n\tstatic class Scanner \n\t{\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s){\tbr = new BufferedReader(new InputStreamReader(s));}\n\n\t\tpublic Scanner(FileReader r){\tbr = new BufferedReader(r);}\n\n\t\tpublic String next() throws IOException \n\t\t{\n\t\t\twhile (st == null || !st.hasMoreTokens()) \n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {return Integer.parseInt(next());}\n\n\t\tpublic long nextLong() throws IOException {return Long.parseLong(next());}\n\n\t\tpublic String nextLine() throws IOException {return br.readLine();}\n\n\t\tpublic double nextDouble() throws IOException\n\t\t{\n\t\t\tString x = next();\n\t\t\tStringBuilder sb = new StringBuilder(\"0\");\n\t\t\tdouble res = 0, f = 1;\n\t\t\tboolean dec = false, neg = false;\n\t\t\tint start = 0;\n\t\t\tif(x.charAt(0) == '-')\n\t\t\t{\n\t\t\t\tneg = true;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\tfor(int i = start; i < x.length(); i++)\n\t\t\t\tif(x.charAt(i) == '.')\n\t\t\t\t{\n\t\t\t\t\tres = Long.parseLong(sb.toString());\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t\tdec = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsb.append(x.charAt(i));\n\t\t\t\t\tif(dec)\n\t\t\t\t\t\tf *= 10;\n\t\t\t\t}\n\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\treturn res * (neg?-1:1);\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {return br.ready();}\n\n\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.InputStream;\nimport java.util.NoSuchElementException;\nimport java.io.OutputStreamWriter;\nimport java.math.BigInteger;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.io.IOException;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Egor Kulikov (egor@egork.net)\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n\t\tint rowCount = in.readInt();\n\t\tint columnCount = in.readInt();\n\t\tin.readInt();\n\t\tchar[][] map = IOUtils.readTable(in, rowCount, columnCount);\n\t\tint[] answer = new int[columnCount];\n\t\tfor (int i = 0; i < rowCount; i++) {\n\t\t\tfor (int j = 0; j < columnCount; j++) {\n\t\t\t\tif (map[i][j] == 'U') {\n\t\t\t\t\tif ((i & 1) == 0)\n\t\t\t\t\t\tanswer[j]++;\n\t\t\t\t} else if (map[i][j] == 'L') {\n\t\t\t\t\tif (j >= i)\n\t\t\t\t\t\tanswer[j - i]++;\n\t\t\t\t} else if (map[i][j] == 'R') {\n\t\t\t\t\tif (j + i < columnCount)\n\t\t\t\t\t\tanswer[j + i]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout.printLine(answer);\n\t}\n}\n\nclass InputReader {\n\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[1024];\n\tprivate int curChar;\n\tprivate int numChars;\n\tprivate SpaceCharFilter filter;\n\n\tpublic InputReader(InputStream stream) {\n\t\tthis.stream = stream;\n\t}\n\n\tpublic int read() {\n\t\tif (numChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int readInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn isWhitespace(c);\n\t}\n\n\tpublic static boolean isWhitespace(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tpublic char readCharacter() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\treturn (char) c;\n\t}\n\n\tpublic interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}\n\nclass OutputWriter {\n\tprivate final PrintWriter writer;\n\n\tpublic OutputWriter(OutputStream outputStream) {\n\t\twriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n\t}\n\n\tpublic OutputWriter(Writer writer) {\n\t\tthis.writer = new PrintWriter(writer);\n\t}\n\n\tpublic void print(int[] array) {\n        for (int i = 0; i < array.length; i++) {\n            if (i != 0)\n                writer.print(' ');\n            writer.print(array[i]);\n        }\n    }\n\n\tpublic void printLine(int[] array) {\n        print(array);\n        writer.println();\n    }\n\n\tpublic void close() {\n\t\twriter.close();\n\t}\n\n}\n\nclass IOUtils {\n\n\tpublic static char[] readCharArray(InputReader in, int size) {\n\t\tchar[] array = new char[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tarray[i] = in.readCharacter();\n\t\treturn array;\n\t}\n\n\tpublic static char[][] readTable(InputReader in, int rowCount, int columnCount) {\n\t\tchar[][] table = new char[rowCount][];\n\t\tfor (int i = 0; i < rowCount; i++)\n\t\t\ttable[i] = readCharArray(in, columnCount);\n\t\treturn table;\n\t}\n\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author ocozalp\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tScanner in = new Scanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, Scanner in, PrintWriter out) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n\n        ArrayList<Spider> spiders = new ArrayList<Spider>();\n\n        in.nextLine();\n        for(int i = 0; i<n; i++) {\n            String line = in.nextLine();\n            for(int j = 0; j<m; j++) {\n                if(line.charAt(j) != '.') {\n                    char c = line.charAt(j);\n                    Spider s = new Spider();\n                    s.row = i;\n                    s.column = j;\n\n                    if(c == 'U') s.dr = -1;\n                    else if (c == 'L') s.dc = -1;\n                    else if (c == 'R') s.dc = 1;\n                    else s.dr = 1;\n\n                    spiders.add(s);\n                }\n            }\n        }\n\n        int [] results = new int[m];\n\n        for(Spider spider : spiders) {\n            if(spider.dc == 0 && spider.dr == -1 && spider.row % 2 == 0)\n                results[spider.column]++;\n\n            else if(spider.dr == 0 && spider.dc == 1 && (spider.column + spider.row) < m)\n                results[spider.column + spider.row]++;\n\n            else if(spider.dr == 0 && spider.dc == -1 && (spider.column - spider.row) >= 0)\n                results[spider.column - spider.row]++;\n        }\n\n        for (int i = 0; i<m; i++) {\n            out.print(results[i]);\n            out.print(\" \");\n        }\n\n        out.println();\n    }\n\n    private static class Spider {\n        int row;\n        int column;\n        int dr = 0;\n        int dc = 0;\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main\n{\n  public static void main(String[] args)\n  {\n    Scanner cin=new Scanner(System.in);\n    int n=cin.nextInt(),m=cin.nextInt(),k=cin.nextInt();\n    String[] mp=new String[n];\n    for(int i=0;i<n;i++)\n      mp[i]=cin.next();\n    int[] ans=new int[m];\n    for(int i=0;i<n;i++)\n    {\n      for(int j=0;j<m;j++)\n      {\n        char c=mp[i].charAt(j);\n        if(c=='U')\n        {\n          if(i%2==0)\n            ans[j]++;\n        }\n        else if(c=='R')\n        {\n          int t=i+j;\n          if(t<m)\n            ans[t]++;\n        }\n        else if(c=='L')\n        {\n          int t=j-i;\n          if(t>=0)\n            ans[t]++;\n        }\n      }\n    }\n    StringBuilder RET=new StringBuilder();\n    for(int i=0;i<m;i++)\n    {\n      RET.append(ans[i]+\" \");\n    }\n    System.out.println(RET);\n  }\n}\n\t\t\t   \t  \t\t\t \t \t\t \t \t   \t \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar a[2001][2001];\nint ans[2001];\nvoid init() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 1; i <= n; i++) scanf(\"%s\", &a[i][0]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j < m; j++) {\n      if (j - i + 1 >= 0 && a[i][j - i + 1] == 'R') ans[j]++;\n      if (j + i - 1 < m && a[i][j + i - 1] == 'L') ans[j]++;\n      if (i + i - 1 <= n && a[i + i - 1][j] == 'U') ans[j]++;\n    }\n  for (int i = 0; i < m; i++) cout << ans[i] << \" \";\n}\nint main() {\n  init();\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "(n,m,k)=map(int,raw_input().split())\n\ns=[0]*m\nfor i in xrange(n):\n\tr=raw_input()\n\tfor c in xrange(len(r)):\n\t\tif r[c] == \"U\" and i%2==0:\n\t\t\ts[c]+=1\n\t\tif r[c] == \"L\":\n\t\t\tk=c-i;\n\t\t\tif 0 <= k < m:\n\t\t\t\ts[k]+=1\n\t\tif r[c] == \"R\":\n\t\t\tk=c+i;\n\t\t\tif 0 <= k < m:\n\t\t\t\ts[k]+=1\n\nprint(\" \".join(map(str,s)))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar a[2001][2001];\nint ans[2001];\nvoid init() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 1; i <= n; i++) scanf(\"%s\", &a[i]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j < m; j++) {\n      if (j - i + 1 >= 0 && a[i][j - i + 1] == 'R') ans[j]++;\n      if (j + i - 1 < m && a[i][j + i - 1] == 'L') ans[j]++;\n      if (i + i - 1 <= n && a[i + i - 1][j] == 'U') ans[j]++;\n    }\n  for (int i = 0; i < m; i++) cout << ans[i] << \" \";\n}\nint main() {\n  init();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 2005;\nint N, M, K;\nchar row[MAX];\nint ans[MAX];\nint main() {\n  scanf(\"%d%d%d\", &N, &M, &K);\n  for (int i = 1; i <= N; i++) {\n    scanf(\"%s\", row + 1);\n    for (int j = 1; j <= M; j++) {\n      if (row[j] == 'U') {\n        ans[j] += i & 1;\n      }\n      if (row[j] == 'R') {\n        if (j + i - 1 <= M) ans[j + i - 1]++;\n      }\n      if (row[j] == 'L') {\n        if (j - i + 1 > 0) ans[j - i + 1]++;\n      }\n    }\n  }\n  for (int i = 1; i <= M; i++) {\n    if (i > 1) printf(\" \");\n    printf(\"%d\", ans[i]);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Vadim Semenov\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int rows = in.nextInt();\n        int columns = in.nextInt();\n        int spiders = in.nextInt();\n        int[] answer = new int[columns];\n        char[][] table = new char[rows][];\n        for (int i = 0; i < rows; i++)\n            table[i] = in.next().toCharArray();\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                if (table[i][j] == '.' || table[i][j] == 'D') continue;\n                if (table[i][j] == 'U' && (i & 1) == 0) answer[j]++;\n                if (table[i][j] == 'L' && j >= i) answer[j - i]++;\n                if (table[i][j] == 'R' && (columns - j - 1) >= i) answer[j + i]++;\n            }\n        }\n        for (int ans : answer) {\n            out.print(ans);\n            out.print(' ');\n        }\n        out.println();\n    }\n}\n\nclass InputReader {\n    private final BufferedReader reader;\n    private StringTokenizer tokenizer;\n\n    public InputReader(InputStream in) {\n        reader = new BufferedReader(new InputStreamReader(in));\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n    public String readLine() {\n        String line = null;\n        try {\n            line = reader.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return line;\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma comment(linker, \"/STACK:1024000000,1024000000\")\nconst double pi = 2.0 * asin(1.0), eps = 1e-12;\nconst int maxn = 2100, maxm = 1100000, inf = 0x3f3f3f3f;\nchar ch[maxn][maxn];\nint ans[maxn];\nint main() {\n  int n, m, i, j, l, x;\n  while (scanf(\"%d%d%d\", &n, &m, &l) == 3) {\n    memset(ans, 0, sizeof(ans));\n    for (i = 0; i < n; i++) {\n      scanf(\"%s\", ch[i]);\n      for (j = 0; j < m; j++) {\n        if (ch[i][j] == 'U') {\n          if (i % 2 == 0) ans[j]++;\n        } else if (ch[i][j] == 'L') {\n          x = j - i;\n          if (x >= 0) ans[x]++;\n        } else if (ch[i][j] == 'R') {\n          x = j + i;\n          if (x < m) ans[x]++;\n        }\n      }\n    }\n    for (i = 0; i < m; i++) {\n      if (i != 0) printf(\" \");\n      printf(\"%d\", ans[i]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar w[2010][2010];\nint num[2010][2010];\nint ans[2010];\nint n, m, kk;\nint main() {\n  scanf(\"%d %d %d\\n\", &n, &m, &kk);\n  memset(w, 0, sizeof(w));\n  for (int i = 0; i < n; i++) gets(w[i]);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      if (w[i][j] == 'U' && !(i & 1)) num[i / 2][j]++;\n      if (w[i][j] == 'L' && j - i >= 0) num[i][j - i]++;\n      if (w[i][j] == 'R' && j + i < m) num[i][j + i]++;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      ans[j] += num[i][j];\n    }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint wynik[2001];\nint n, m, k;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      char a;\n      cin >> a;\n      if (a == 'U' and i % 2 == 0) wynik[j]++;\n      if (a == 'L' and j - i >= 0) wynik[j - i]++;\n      if (a == 'R' and j + i < m) wynik[j + i]++;\n    }\n  }\n  for (int i = 0; i < m; i++) cout << wynik[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def f():\n    n, m, k = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(input().strip()))\n    res = [0 for i in range(m)]\n    for j in range(m):\n        for i in range(1, n):\n            if j - i >= 0 and a[i][j - i] == 'R':\n                res[j] += 1\n            if j + i < m and a[i][i + j] == 'L':\n                res[j] += 1\n            if i + i < n and a[i + i][j] == 'U':\n                res[j] += 1\n    print(' '.join(list(map(str, res))))\nf()        \n                \n            \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 2e5 + 10;\nconst int mod = 1e9 + 7;\nusing namespace std;\nint n, m, k;\nstring a;\nint b[2020];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    for (int j = 0; j < m; j++) {\n      if (a[j] == 'U' && i % 2 == 0)\n        b[j]++;\n      else if (a[j] == 'L' && j - i >= 0)\n        b[j - i]++;\n      else if (a[j] == 'R' && j + i < m)\n        b[i + j]++;\n    }\n  }\n  for (int i = 0; i < m; i++) cout << b[i] << ' ';\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class B {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tsc = new StringTokenizer(\"\");\n\t\tint n = nxtInt();\n\t\tint m = nxtInt();\n\t\tnxtTok();\n\t\tint[] arr = new int[m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tchar[] ch = nxtCharArr();\n\t\t\tfor (int j = 0; j < ch.length; j++) {\n\t\t\t\tif (ch[j] == 'U' && i % 2 == 0)\n\t\t\t\t\tarr[j]++;\n\t\t\t\telse if (ch[j] == 'L' && j - i > -1)\n\t\t\t\t\tarr[j - i]++;\n\t\t\t\telse if (ch[j] == 'R' && j + i < m)\n\t\t\t\t\tarr[j + i]++;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tout.print(arr[i] + \" \");\n\t\t}\n\t\tbr.close();\n\t\tout.close();\n\t}\n\n\tstatic BufferedReader br;\n\tstatic StringTokenizer sc;\n\tstatic PrintWriter out;\n\n\tstatic String nxtTok() throws IOException {\n\t\twhile (!sc.hasMoreTokens()) {\n\t\t\tString s = br.readLine();\n\t\t\tif (s == null)\n\t\t\t\treturn null;\n\t\t\tsc = new StringTokenizer(s.trim());\n\t\t}\n\t\treturn sc.nextToken();\n\t}\n\n\tstatic int nxtInt() throws IOException {\n\t\treturn Integer.parseInt(nxtTok());\n\t}\n\n\tstatic long nxtLng() throws IOException {\n\t\treturn Long.parseLong(nxtTok());\n\t}\n\n\tstatic double nxtDbl() throws IOException {\n\t\treturn Double.parseDouble(nxtTok());\n\t}\n\n\tstatic int[] nxtIntArr(int n) throws IOException {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nxtInt();\n\t\treturn a;\n\t}\n\n\tstatic long[] nxtLngArr(int n) throws IOException {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nxtLng();\n\t\treturn a;\n\t}\n\n\tstatic char[] nxtCharArr() throws IOException {\n\t\treturn nxtTok().toCharArray();\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\nimport java.io.Writer;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Alex\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n\tint[] forward(char[] input, int time){\n\t\tint[] res = new int[input.length];\n\t\tfor(int i = 0; i < res.length; i++){\n\t\t\tif (input[i] == 'L'){\n\t\t\t\tint resindex = i - time;\n\t\t\t\tif (resindex >= 0) res[resindex]++;\n\t\t\t}\n\t\t\tif(input[i] == 'R'){\n\t\t\t\tint resindex = i + time;\n\t\t\t\tif (resindex < res.length) res[resindex]++;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n    public void solve(int testNumber, InputReader in, OutputWriter out){\n\t    int n = in.ri(), m = in.ri(), k = in.ri();\n\t    char[][] t = IOUtils.readTable(in, n, m);\n\t    int[] res = new int[m];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tint[] cur = forward(t[i], i);\n\t\t\tfor(int j = 0; j < cur.length; j++) res[j] += cur[j];\n\t\t}\n\t    for(int i = 0; i < m; i++) {\n\t\t    for(int j = 0; j < n; j++) {\n\t\t\t    if (t[j][i] == 'U' && j % 2 == 0) res[i]++;\n\t\t    }\n\t    }\n\t    out.print(res);\n    }\n}\n\nclass InputReader {\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[1024];\n\tprivate int curChar;\n\tprivate int numChars;\n\tprivate SpaceCharFilter filter;\n\n\tpublic InputReader(InputStream stream) {\n\t\tthis.stream = stream;\n\t}\n\n\tpublic int read() {\n\t\tif (numChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\tpublic int ri(){\n\t\treturn readInt();\n\t}\n\n\tpublic int readInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\tpublic boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn isWhitespace(c);\n\t}\n\n\tpublic static boolean isWhitespace(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\tpublic char readCharacter() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\treturn (char) c;\n\t}\n\tpublic interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}\n\nclass OutputWriter {\n\tprivate final PrintWriter writer;\n\n\tpublic OutputWriter(OutputStream outputStream) {\n\t\twriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n\t}\n\tpublic void print(int[] array) {\n        for (int i = 0; i < array.length; i++) {\n            if (i != 0)\n                writer.print(' ');\n            writer.print(array[i]);\n        }\n    }\n\tpublic void close() {\n\t\twriter.close();\n\t}\n}\n\nclass IOUtils {\n\tpublic static char[] readCharArray(InputReader in, int size) {\n\t\tchar[] array = new char[size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tarray[i] = in.readCharacter();\n\t\treturn array;\n\t}\n\tpublic static char[][] readTable(InputReader in, int rowCount, int columnCount) {\n\t\tchar[][] table = new char[rowCount][];\n\t\tfor (int i = 0; i < rowCount; i++)\n\t\t\ttable[i] = readCharArray(in, columnCount);\n\t\treturn table;\n\t}\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring grid[2005];\nvector<pair<int, int> > v[4];\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nint main() {\n  int n, m, k;\n  scanf(\"%d%d%d\", &m, &n, &k);\n  for (int i = 0; i < m; i++) {\n    cin >> grid[i];\n    for (int j = 0; j < n; j++) {\n      if (grid[i][j] == 'L')\n        v[0].push_back(pair<int, int>(i, j));\n      else if (grid[i][j] == 'R')\n        v[1].push_back(pair<int, int>(i, j));\n      else if (grid[i][j] == 'U')\n        v[2].push_back(pair<int, int>(i, j));\n      else if (grid[i][j] == 'D')\n        v[3].push_back(pair<int, int>(i, j));\n    }\n  }\n  for (int i = 0; i < 4; i++) sort(v[i].begin(), v[i].end());\n  for (int j = 0; j < n; j++) {\n    if (j) putchar(' ');\n    int cnt = 0;\n    for (int i = 1; i < m; i++) {\n      for (int kk = 0; kk < 4; kk++) {\n        pair<int, int> p(i + i * dx[kk], j + i * dy[kk]);\n        if (p.first < 0 || p.first >= m || p.second < 0 || p.second >= n)\n          continue;\n        if (binary_search(v[kk].begin(), v[kk].end(), p)) {\n          cnt++;\n        }\n      }\n    }\n    printf(\"%d\", cnt);\n  }\n  puts(\"\");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class W23 {\npublic static void main(String [] args){\nScanner in=new Scanner(System.in);\nint n=in.nextInt();\nint m=in.nextInt();\nint k=in.nextInt();\nchar array[][]=new char[n][m];\nchar array1[]=new char[m];\nfor(int i=0;i<n;i++){\narray1=in.next().toCharArray();\nfor(int j=0;j<m;j++){\narray[i][j]=array1[j];\n}\n}\nStringBuilder str=new StringBuilder();\nint cnt=0;\nfor(int i=0;i<m;i++){\nint ptr=0;\nfor(int j=0;j<n;j++){\nif(j%2==0 && array[j][i]=='U')\ncnt++;\n}\n//System.out.println(cnt);\n\nfor(int j=i;j<m;j++){\nif(ptr>n-1)break;\nelse if(array[ptr][j]=='L')\ncnt++;\nptr++;\n}\nptr=Math.min(n-1,i);\n//System.out.println(cnt);\nfor(int j=0;j<i;j++){\nif(ptr+j!=i)continue;\nelse if(array[ptr][j]=='R')\ncnt++;\nptr--;\n}\n//System.out.println(cnt);\nstr.append(cnt + \" \");\ncnt=0;\n}\nSystem.out.print(str);\n}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint num[2010] = {0};\nint main() {\n  long long n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    for (int j = 0; j < m; j++) {\n      if (s[j] == 'R') {\n        if (i + j < m) num[i + j]++;\n      } else if (s[j] == 'L') {\n        if (j - i >= 0) num[j - i]++;\n      } else if (s[j] == 'U') {\n        if (i % 2 == 0) num[j]++;\n      } else if (s[j] == 'D') {\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    cout << num[i] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class OmNomB {\n\n\t/**\n\t * @param args\n\t */\n\tstatic char[][]grid;\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\t\n\t\tint n=sc.nextInt();\n\t\tint m=sc.nextInt();\n\t\t\n\t\tint k=sc.nextInt();\n\t\tgrid=new char[n][m];\n\t\t\n\t\tfor(int i=0;i<n;i++){\n\t\t\tString s=sc.next();\n\t\t\tfor(int j=0;j<m;j++){\n\t\t\t\tgrid[i][j]=s.charAt(j);\n\t\t\t}\n\t\t}\n\t\t\n\t\tStringBuilder sb=new StringBuilder();\n\t\tfor(int i=0;i<m;i++){\n\t\t\tint rslt=0;\n\t\t\tfor(int j=1;j<n;j++){\n\t\t\t\trslt+=check(j,i);\n\t\t\t}\n\t\t\tsb.append(rslt+\" \");\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tSystem.out.println(sb);\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\tprivate static int check(int j, int i) {\n\t\tint n=grid.length;\n\t\tint m=grid[0].length;\n\t\t\n\t\tint rslt=0;\n\t\t//up \n\t\t\n\t\tif(j+j<n){\n\t\t\tif(grid[j+j][i]=='U')\n\t\t\t\trslt++;\n\t\t}\n\t\t\n\t\tif(i+j<m){\n\t\t\tif(grid[j][i+j]=='L')\n\t\t\t\trslt++;\n\t\t}\n\t\t\n\t\tif(i-j>=0){\n\t\t\t\n\t\t\tif(grid[j][i-j]=='R')\n\t\t\t\trslt++;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn rslt;\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class c436B {\n    \n    public static void main(String[] args) {\n\n// 3 3 4\n// ...\n// R.L\n// R.U\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n        Spider[] spider = new Spider[k];\n\n        int s =0;\n        int[] seen = new int[m];\n\n        for (int i=0; i<n; i++) {\n            String line = sc.next();\n            for (int j=0; j<m; j++) {\n                if (line.charAt(j) != '.') {\n                    char move = line.charAt(j);\n                    if (move == 'R') {\n                        if (i+j < m) seen[i+j]++;\n                    }\n                    if (move == 'L') {\n                        if (j-i >= 0) seen[j-i]++;\n                    }\n                    if (move == 'U') {\n                        if (i%2==0) seen[j]++;\n                    }\n  \n                    \n                }\n            }\n        }\n\n\n        \n        for (int i=0; i<m; i++) {   \n            System.out.print(seen[i]+\" \");\n        }\n        \n        \n        \n\n    }\n}\n\nclass Spider {\n    public Spider(int x, int y, char move) {\n        this.x = x;\n        this.y = y;\n        this.move = move;\n        this.out = 0;\n    }\n    public int out;\n    public int x;\n    public int y;\n    public char move;\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct spider {\n  int row, col;\n  spider() : row(0), col(0) {}\n  spider(int row, int col) : row(row), col(col) {}\n  bool operator<(const spider &rhs) const {\n    if (row == rhs.row) return col < rhs.col;\n    return row < rhs.row;\n  }\n};\nconst int MAXN = 2005;\nchar line[MAXN];\nset<spider> row_to_left[MAXN];\nset<spider> row_to_right[MAXN];\nset<spider> col_to_up[MAXN];\nint main() {\n  int R, C, k;\n  scanf(\"%d %d %d\", &R, &C, &k);\n  for (int i = 0; i < R; ++i) {\n    scanf(\"%s\", line);\n    for (int j = 0; j < C; ++j) {\n      if (line[j] == 'L') row_to_left[i].insert(spider(i, j));\n      if (line[j] == 'R') row_to_right[i].insert(spider(i, j));\n      if (line[j] == 'U') col_to_up[j].insert(spider(i, j));\n    }\n  }\n  for (int c = 0; c < C; ++c) {\n    int ans = 0;\n    for (int r = 1; r < R; ++r) {\n      if (row_to_left[r].find(spider(r, c + r)) != row_to_left[r].end()) ans++;\n      if (row_to_right[r].find(spider(r, c - r)) != row_to_right[r].end())\n        ans++;\n      if (col_to_up[c].find(spider(2 * r, c)) != col_to_up[c].end()) ans++;\n    }\n    printf(\"%d \", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package zepto2014;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class B {\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\t\n\tvoid solve()\n\t{\n\t\tint n = ni(), m = ni(), s = ni();\n\t\tchar[][] map = nm(n,m);\n\t\tint[] ret = new int[m];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tfor(int j = 0;j < m;j++){\n\t\t\t\tif(map[i][j] == 'R'){\n\t\t\t\t\t// i,j+i\n\t\t\t\t\tif(j+i < m){\n\t\t\t\t\t\tret[j+i]++;\n\t\t\t\t\t}\n\t\t\t\t}else if(map[i][j] == 'L'){\n\t\t\t\t\t// i,j-i\n\t\t\t\t\tif(j-i >= 0){\n\t\t\t\t\t\tret[j-i]++;\n\t\t\t\t\t}\n\t\t\t\t}else if(map[i][j] == 'U'){\n\t\t\t\t\tif(i % 2 == 0){\n\t\t\t\t\t\tret[j]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0;i < m;i++){\n\t\t\tif(i > 0)out.print(\" \");\n\t\t\tout.print(ret[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid run() throws Exception\n\t{\n\t\tis = oj ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\ttr(System.currentTimeMillis()-s+\"ms\");\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception { new B().run(); }\n\t\n\tprivate byte[] inbuf = new byte[1024];\n\tprivate int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n\tprivate int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate double nd() { return Double.parseDouble(ns()); }\n\tprivate char nc() { return (char)skip(); }\n\t\n\tprivate String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){ // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\tprivate void tr(Object... o) { if(!oj)System.out.println(Arrays.deepToString(o)); }\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\nimport sys\nf = sys.stdin\n\nn, m, k = map(int, f.readline().strip().split())\n\ns = f.readline().strip()\nsp = [0]*m\n\nfor i in range(1, n):\n    s = f.readline().strip()\n    for l in range(m):\n        if s[l]=='U':\n            if i % 2 == 0:\n                sp[l] += 1\n        elif s[l]=='R':\n            mi = l+i \n            if mi<m :\n                sp[mi] += 1\n        elif s[l]=='L':\n            mi = l-i \n            if mi>=0 :\n                sp[mi] += 1\n    #print(i, s, sp)\n\nprint(' '.join([str(it) for it in sp]))"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class pa63 {\npublic static void main(String args[]){\n\tScanner sc=new Scanner(System.in);\n\tint n=sc.nextInt();\n\tint m=sc.nextInt();\n\tint k=sc.nextInt();\n\tint[] no=new int[m];\n\tfor(int i=0;i<n;i++){\n\t\tString str=sc.next();\n\t\t//System.out.println(str);\n\t\tfor(int j=0;j<m;j++){\n\t\t\tchar c=str.charAt(j);\n\t\t\tif(c=='L'){\n\t\t\t\tif(j-i>=0){\n\t\t\t\tno[j-i]++;\n\t\t\t\t}\n\t\t\t}else if(c=='R'){\n\t\t\t\tif(i+j<m){\n\t\t\t\tno[j+i]++;\n\t\t\t\t}\n\t\t\t}else if(c=='U'){\n\t\t\t\tif(i%2==0)\n\t\t\t\tno[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<m;i++){\n\t\tSystem.out.print(no[i]+\" \");\n\t\t\n\t}\n}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k, i, j, count[2002] = {0}, t;\n  char arr[2002][2002];\n  cin >> n >> m >> k;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      cin >> arr[i][j];\n    }\n  }\n  for (t = 1; t < n; t++) {\n    i = t;\n    for (j = 0; j < m; j++) {\n      if (i - t >= 0 && arr[i - t][j] == 'D') count[j]++;\n      if (i + t < n && arr[i + t][j] == 'U') count[j]++;\n      if (j - t >= 0 && arr[i][j - t] == 'R') count[j]++;\n      if (j + t < m && arr[i][j + t] == 'L') count[j]++;\n    }\n  }\n  for (i = 0; i < m; i++) cout << count[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint const LIM = 2100;\nint n, m, k;\nchar g[LIM][LIM];\nint check(int x, int y, int time) {\n  int res = 0;\n  int x1 = x - time, y1 = y;\n  if (x1 >= 0 && x1 < n && y1 >= 0 && y1 < m && g[x1][y1] == 'D') ++res;\n  x1 = x + time;\n  y1 = y;\n  if (x1 >= 0 && x1 < n && y1 >= 0 && y1 < m && g[x1][y1] == 'U') ++res;\n  x1 = x;\n  y1 = y - time;\n  if (x1 >= 0 && x1 < n && y1 >= 0 && y1 < m && g[x1][y1] == 'R') ++res;\n  x1 = x;\n  y1 = y + time;\n  if (x1 >= 0 && x1 < n && y1 >= 0 && y1 < m && g[x1][y1] == 'L') ++res;\n  return res;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      cin >> g[i][j];\n    }\n  }\n  for (int i = 0; i < m; ++i) {\n    int ans = 0;\n    for (int j = 0; j < n; ++j) ans += check(j, i, j);\n    cout << ans << ' ';\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Codeforces\n{\n    public static void main(String args[])throws Exception\n    {\n        BufferedReader bu=new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb=new StringBuilder();\n        String s[]=bu.readLine().split(\" \");\n        int n=Integer.parseInt(s[0]),m=Integer.parseInt(s[1]),k=Integer.parseInt(s[2]);\n        char g[][]=new char[n][m];\n        int i,j,ans[]=new int[m];\n        for(i=0;i<n;i++)\n        {\n            String st=bu.readLine();\n            for(j=0;j<m;j++)\n            {\n                g[i][j]=st.charAt(j);\n                if(g[i][j]=='U' && i%2==0) ans[j]++;\n            }\n        }\n\n        for(i=0;i<m;i++)\n        for(j=0;j<n;j++)\n        {\n            int left=i-j,right=i+j;\n            if(left>=0 && g[j][left]=='R') ans[i]++;\n            if(right<m && g[j][right]=='L') ans[i]++;\n        }\n        for(i=0;i<m;i++)\n        sb.append(ans[i]+\" \");\n        System.out.print(sb);\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint C[4100];\nint main() {\n  int r, c, k;\n  cin >> r >> c >> k;\n  for (int i = 1; i <= r; i++) {\n    for (int j = 1; j <= c; j++) {\n      char tmp;\n      cin >> tmp;\n      if (tmp == '.')\n        continue;\n      else if (tmp == 'D')\n        continue;\n      else if (tmp == 'U') {\n        if (i % 2) C[j]++;\n      } else if (tmp == 'R') {\n        C[j + i - 1]++;\n      } else if (tmp == 'L') {\n        if (j - (i - 1) < 0) {\n          continue;\n        } else {\n          C[j - (i - 1)]++;\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= c; i++) {\n    cout << C[i];\n    if (i != c) cout << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "    import java.io.*;\n    import java.math.BigDecimal;\n    import java.math.RoundingMode;\n    import java.util.*;\n\n    import javax.lang.model.type.IntersectionType;\n    import javax.swing.text.html.CSS;\n    public class codeforces {\n        static class FastReader {\n            BufferedReader br;\n            StringTokenizer st;\n\n            public FastReader() {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n\n            String next() {\n                while (st == null || !st.hasMoreElements()) {\n                    try {\n                        st = new StringTokenizer(br.readLine());\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return st.nextToken();\n            }\n\n            int nextInt() {\n                return Integer.parseInt(next());\n            }\n\n            long nextLong() {\n                return Long.parseLong(next());\n            }\n\n            double nextDouble() {\n                return Double.parseDouble(next());\n            }\n\n            String nextLine() {\n                String str = \"\";\n                try {\n                    str = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return str;\n            }\n        }\n        static class Pair{\n            int a,b;\n            Pair(int a,int b){\n                this.a=a;\n                this.b=b;\n            }\n        }\n       public static void main(String[] args) throws IOException {\n           PrintWriter out = new PrintWriter(System.out);\n           InputReader sc = new InputReader(System.in);\n           int n=sc.nextInt();\n           int m=sc.nextInt();\n           int k=sc.nextInt();\n           char[][] a=new char[n][m];\n           for(int i=0;i<n;i++) {\n               String s = sc.next();\n               for (int j = 0; j < m; j++)\n                   a[i][j] = s.charAt(j);\n           }\n           int[][] arr=new int[n][m];\n           for(int i=0;i<m;i++) {\n               int c = 0;\n               for (int j = 1; j < n; j++) {\n                   if (i != 0 && i - j >= 0) {\n                       if (a[j][i - j] == 'R')\n                           c++;\n                   }\n                   if (i != m - 1 && m - i - j > 0) {\n                       if (a[j][i + j] == 'L')\n                           c++;\n                   }\n                   if (j != n - 1 && 2 * j < n) {\n                       if (a[2 * j][i] == 'U')\n                           c++;\n                   }\n               }\n               System.out.print(c + \" \");\n           }\n\n        }\n\n\n           static class InputReader {\n            private InputStream in;\n            private byte[] buffer = new byte[1024];\n            private int curbuf;\n            private int lenbuf;\n            public InputReader(InputStream in) {\n                this.in = in;\n                this.curbuf = this.lenbuf = 0;\n            }\n            public boolean hasNextByte() {\n                if (curbuf >= lenbuf) {\n                    curbuf = 0;\n                    try {\n                        lenbuf = in.read(buffer);\n                    } catch (IOException e) {\n                        throw new InputMismatchException();\n                    }\n                    if (lenbuf <= 0)\n                        return false;\n                }\n                return true;\n            }\n\n            private int readByte() {\n                if (hasNextByte())\n                    return buffer[curbuf++];\n                else\n                    return -1;\n            }\n\n            private boolean isSpaceChar(int c) {\n                return !(c >= 33 && c <= 126);\n            }\n\n            private void skip() {\n                while (hasNextByte() && isSpaceChar(buffer[curbuf]))\n                    curbuf++;\n            }\n\n            public boolean hasNext() {\n                skip();\n                return hasNextByte();\n            }\n\n            public String next() {\n                if (!hasNext())\n                    throw new NoSuchElementException();\n                StringBuilder sb = new StringBuilder();\n                int b = readByte();\n                while (!isSpaceChar(b)) {\n                    sb.appendCodePoint(b);\n                    b = readByte();\n                }\n                return sb.toString();\n            }\n\n            public int nextInt() {\n                if (!hasNext())\n                    throw new NoSuchElementException();\n                int c = readByte();\n                while (isSpaceChar(c))\n                    c = readByte();\n                boolean minus = false;\n                if (c == '-') {\n                    minus = true;\n                    c = readByte();\n                }\n                int res = 0;\n                do {\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    res = res * 10 + c - '0';\n                    c = readByte();\n                } while (!isSpaceChar(c));\n                return (minus) ? -res : res;\n            }\n\n            public long nextLong() {\n                if (!hasNext())\n                    throw new NoSuchElementException();\n                int c = readByte();\n                while (isSpaceChar(c))\n                    c = readByte();\n                boolean minus = false;\n                if (c == '-') {\n                    minus = true;\n                    c = readByte();\n                }\n                long res = 0;\n                do {\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    res = res * 10 + c - '0';\n                    c = readByte();\n                } while (!isSpaceChar(c));\n                return (minus) ? -res : res;\n            }\n\n            public double nextDouble() {\n                return Double.parseDouble(next());\n            }\n\n            public int[] nextIntArray(int n) {\n                int[] a = new int[n];\n                for (int i = 0; i < n; i++)\n                    a[i] = nextInt();\n                return a;\n            }\n\n            public long[] nextLongArray(int n) {\n                long[] a = new long[n];\n                for (int i = 0; i < n; i++)\n                    a[i] = nextLong();\n                return a;\n            }\n\n            public char[][] nextCharMap(int n, int m) {\n                char[][] map = new char[n][m];\n                for (int i = 0; i < n; i++)\n                    map[i] = next().toCharArray();\n                return map;\n            }\n        }\n    }\n    class SegTree<S> {\n        final int MAX;\n\n        final int N;\n        final java.util.function.BinaryOperator<S> op;\n        final S E;\n\n        final S[] data;\n\n        @SuppressWarnings(\"unchecked\")\n        public SegTree(int n, java.util.function.BinaryOperator<S> op, S e) {\n            this.MAX = n;\n            int k = 1;\n            while (k < n) k <<= 1;\n            this.N = k;\n            this.E = e;\n            this.op = op;\n            this.data = (S[]) new Object[N << 1];\n            java.util.Arrays.fill(data, E);\n        }\n\n        public SegTree(S[] dat, java.util.function.BinaryOperator<S> op, S e) {\n            this(dat.length, op, e);\n            build(dat);\n        }\n\n        private void build(S[] dat) {\n            int l = dat.length;\n            System.arraycopy(dat, 0, data, N, l);\n            for (int i = N - 1; i > 0; i--) {\n                data[i] = op.apply(data[i << 1 | 0], data[i << 1 | 1]);\n            }\n        }\n\n        public void set(int p, S x) {\n            exclusiveRangeCheck(p);\n            data[p += N] = x;\n            p >>= 1;\n            while (p > 0) {\n                data[p] = op.apply(data[p << 1 | 0], data[p << 1 | 1]);\n                p >>= 1;\n            }\n        }\n\n        public S get(int p) {\n            exclusiveRangeCheck(p);\n            return data[p + N];\n        }\n\n        public S prod(int l, int r) {\n            if (l > r) {\n                throw new IllegalArgumentException(\n                        String.format(\"Invalid range: [%d, %d)\", l, r)\n                );\n            }\n            inclusiveRangeCheck(l);\n            inclusiveRangeCheck(r);\n            S sumLeft = E;\n            S sumRight = E;\n            l += N; r += N;\n            while (l < r) {\n                if ((l & 1) == 1) sumLeft = op.apply(sumLeft, data[l++]);\n                if ((r & 1) == 1) sumRight = op.apply(data[--r], sumRight);\n                l >>= 1; r >>= 1;\n            }\n            return op.apply(sumLeft, sumRight);\n        }\n\n        public S allProd() {\n            return data[1];\n        }\n\n        public int maxRight(int l, java.util.function.Predicate<S> f) {\n            inclusiveRangeCheck(l);\n            if (!f.test(E)) {\n                throw new IllegalArgumentException(\"Identity element must satisfy the condition.\");\n            }\n            if (l == MAX) return MAX;\n            l += N;\n            S sum = E;\n            do {\n                l >>= Integer.numberOfTrailingZeros(l);\n                if (!f.test(op.apply(sum, data[l]))) {\n                    while (l < N) {\n                        l = l << 1;\n                        if (f.test(op.apply(sum, data[l]))) {\n                            sum = op.apply(sum, data[l]);\n                            l++;\n                        }\n                    }\n                    return l - N;\n                }\n                sum = op.apply(sum, data[l]);\n                l++;\n            } while ((l & -l) != l);\n            return MAX;\n        }\n\n        public int minLeft(int r, java.util.function.Predicate<S> f) {\n            inclusiveRangeCheck(r);\n            if (!f.test(E)) {\n                throw new IllegalArgumentException(\"Identity element must satisfy the condition.\");\n            }\n            if (r == 0) return 0;\n            r += N;\n            S sum = E;\n            do {\n                r--;\n                while (r > 1 && (r & 1) == 1) r >>= 1;\n                if (!f.test(op.apply(data[r], sum))) {\n                    while (r < N) {\n                        r = r << 1 | 1;\n                        if (f.test(op.apply(data[r], sum))) {\n                            sum = op.apply(data[r], sum);\n                            r--;\n                        }\n                    }\n                    return r + 1 - N;\n                }\n                sum = op.apply(data[r], sum);\n            } while ((r & -r) != r);\n            return 0;\n        }\n\n        private void exclusiveRangeCheck(int p) {\n            if (p < 0 || p >= MAX) {\n                throw new IndexOutOfBoundsException(\n                        String.format(\"Index %d out of bounds for the range [%d, %d).\", p, 0, MAX)\n                );\n            }\n        }\n\n        private void inclusiveRangeCheck(int p) {\n            if (p < 0 || p > MAX) {\n                throw new IndexOutOfBoundsException(\n                        String.format(\"Index %d out of bounds for the range [%d, %d].\", p, 0, MAX)\n                );\n            }\n        }\n    }\n    class MathLib{\n        static long fastPow(long a, long b, long mod) {\n            if(b == 0)\n                return 1L;\n\n            long val = fastPow(a, b/2, mod);\n            if(b % 2 == 0)\n                return val * val % mod;\n            else\n                return val * val % mod * a % mod;\n        }\n        static int LowerBound(int a[], int x) { // x is the target value or key\n            int l=-1,r=a.length;\n            while(l+1<r) {\n                int m=(l+r)>>>1;\n                if(a[m]>=x) r=m;\n                else l=m;\n            }\n            return r;\n        }\n        static int UpperBound(int a[], int x) {// x is the key or target value\n            int l=-1,r=a.length;\n            while(l+1<r) {\n                int m=(l+r)>>>1;\n                if(a[m]<=x) l=m;\n                else r=m;\n            }\n            return l+1;\n        }\n        private static long safe_mod(long x, long m){\n            x %= m;\n            if(x<0) x += m;\n            return x;\n        }\n\n        private static long[] inv_gcd(long a, long b){\n            a = safe_mod(a, b);\n            if(a==0) return new long[]{b,0};\n\n            long s=b, t=a;\n            long m0=0, m1=1;\n            while(t>0){\n                long u = s/t;\n                s -= t*u;\n                m0 -= m1*u;\n                long tmp = s; s = t; t = tmp;\n                tmp = m0; m0 = m1; m1 = tmp;\n            }\n            if(m0<0) m0 += b/s;\n            return new long[]{s,m0};\n        }\n\n        public static long gcd(long a, long b){\n            a = java.lang.Math.abs(a);\n            b = java.lang.Math.abs(b);\n            return inv_gcd(a, b)[0];\n        }\n        public static long lcm(long a, long b){\n            a = java.lang.Math.abs(a);\n            b = java.lang.Math.abs(b);\n            return a / gcd(a,b) * b;\n        }\n\n        public static long pow_mod(long x, long n, int m){\n            assert n >= 0;\n            assert m >= 1;\n            if(m == 1)return 0L;\n            x = safe_mod(x, m);\n            long ans = 1L;\n            while(n > 0){\n                if((n&1) == 1) ans = (ans * x) % m;\n                x = (x*x) % m;\n                n >>>= 1;\n            }\n            return ans;\n        }\n\n        public static long[] crt(long[] r, long[] m){\n            assert(r.length == m.length);\n            int n = r.length;\n\n            long r0=0, m0=1;\n            for(int i=0; i<n; i++){\n                assert(1 <= m[i]);\n                long r1 = safe_mod(r[i], m[i]), m1 = m[i];\n                if(m0 < m1){\n                    long tmp = r0; r0 = r1; r1 = tmp;\n                    tmp = m0; m0 = m1; m1 = tmp;\n                }\n                if(m0%m1 == 0){\n                    if(r0%m1 != r1) return new long[]{0,0};\n                    continue;\n                }\n\n                long[] ig = inv_gcd(m0, m1);\n                long g = ig[0], im = ig[1];\n\n                long u1 = m1/g;\n                if((r1-r0)%g != 0) return new long[]{0,0};\n\n                long x = (r1-r0) / g % u1 * im % u1;\n\n                r0 += x * m0;\n                m0 *= u1;\n                if(r0<0) r0 += m0;\n                //System.err.printf(\"%d %d\\n\", r0, m0);\n            }\n            return new long[]{r0, m0};\n        }\n        public static long floor_sum(long n, long m, long a, long b){\n            long ans = 0;\n            if(a >= m){\n                ans += (n-1) * n * (a/m) / 2;\n                a %= m;\n            }\n            if(b >= m){\n                ans += n * (b/m);\n                b %= m;\n            }\n\n            long y_max = (a*n+b) / m;\n            long x_max = y_max * m - b;\n            if(y_max == 0) return ans;\n            ans += (n - (x_max+a-1)/a) * y_max;\n            ans += floor_sum(y_max, a, m, (a-x_max%a)%a);\n            return ans;\n        }\n\n        public static java.util.ArrayList<Long> divisors(long n){\n            java.util.ArrayList<Long> divisors = new ArrayList<>();\n            java.util.ArrayList<Long> large = new ArrayList<>();\n\n            for(long i=1; i*i<=n; i++) if(n%i==0){\n                divisors.add(i);\n                if(i*i<n) large.add(n/i);\n            }\n            for(int p=large.size()-1; p>=0; p--){\n                divisors.add(large.get(p));\n            }\n            return divisors;\n        }\n    }\n"
        },
        {
            "language": 3,
            "solution": "n,m,k=map(int,input().split())\nseen = [0 for _ in range(m)]\n\nfor i in range(n):\n  S = list(input())\n  for j in range(m):\n    if S[j] == 'U' and not i&1:\n      seen[j]+=1\n    elif S[j] == 'L' and j-i>=0:\n      seen[j-i]+=1\n    elif S[j] == 'R' and j+i<m:\n      seen[j+i]+=1\n\nprint(*seen, sep=\" \")"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Math.*; \n\nimport java.io.*; \nimport java.util.*; \n\npublic class Template {\n\tBufferedReader in; \n\tPrintWriter out;\n\tStringTokenizer st; \n\n\tString next() {\n\t\twhile (st==null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(in.readLine());\n\t\t\t} catch (Exception e) {}\n\t\t}\n\t\treturn st.nextToken(); \n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(next()); \n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n\n\tint n,m,d, ans=0; \n\n\tpublic void run() throws Exception {\n\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tLong start = System.currentTimeMillis();\n\t\tint n = nextInt(); \n\t\tint m = nextInt(); \n\t\tint k = nextInt(); \n\n\n\t\tchar[][] a = new char[n][m];\n\t\tfor (int i=0; i<n; i++) {\n\t\t\tString s = next(); \n\t\t\tfor (int j=0; j<m; j++) a[i][j] = s.charAt(j); \n\t\t}\n\n\t\tfor (int i=0; i<m; i++) {\n\t\t\tint ans=0;\n\t\t\tfor (int j=2; j<n; j+=2) if (a[j][i] == 'U') ans++; \n\n\t\t\tfor (int j=1; j<=i && j<n; j++) if (a[j][i-j] == 'R') ans++;\n\n\t\t\tfor (int j=i+1; j<m && j-i<n; j++) if (a[j-i][j] == 'L') ans++; \n\n\t\t\tout.print(ans + \" \");\n\t\t}\n\n\n\n\n\n\n\t\tLong end = System.currentTimeMillis();\n\n\t\t//System.out.println((end - start) / 1000.0);\n\t\tout.close(); \n\t}\n\t\n\n\tint min3(int a, int b, int c) {\n\t\treturn min(a, min(b,c));\n\t}\n\n\tvoid printNo() {\n\t\tout.println(\"NO\");\n\t\tout.close(); \n\t\tSystem.exit(0);\n\t}\n\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Template().run(); \n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint fin[4005];\nint main() {\n  int i, t, n, x, k, h, m;\n  cin >> n >> m >> k;\n  memset(fin, 0, sizeof(fin));\n  for (__typeof(1) i = 1; i <= n; i++) {\n    for (__typeof(1) j = 1; j <= m; j++) {\n      char c;\n      cin >> c;\n      if (c == 'R') fin[j + i - 1]++;\n      if (c == 'U') {\n        if (i & 1) fin[j]++;\n      }\n      if (c == 'L') {\n        if ((j - (i - 1)) < 0)\n          continue;\n        else\n          fin[j - (i - 1)]++;\n      }\n    }\n  }\n  for (__typeof(1) i = 1; i <= m; i++) {\n    cout << fin[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, tab[1000007];\nchar slowo[1000007];\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &k);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", slowo);\n    for (int j = 0; j < m; j++)\n      if (slowo[j] == 'U') {\n        if ((i & 1) == 0) tab[j]++;\n      } else {\n        if (slowo[j] == 'R') {\n          if (i + j <= m) tab[j + i]++;\n        } else {\n          if (slowo[j] == 'L') {\n            if (j - i >= 0) tab[j - i]++;\n          }\n        }\n      }\n  }\n  for (int i = 0; i < m; i++) printf(\"%d \", tab[i]);\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Test1{\npublic static void main(String args[]){\n    Scanner sc=new Scanner(System.in);\n    int n=sc.nextInt();\n    int m=sc.nextInt();\n    int k=sc.nextInt();\n    int[] no=new int[m];\n    for(int i=0;i<n;i++){\n        String str=sc.next();\n        //System.out.println(str);\n        for(int j=0;j<m;j++){\n            char c=str.charAt(j);\n            if(c=='L'){\n                if(j-i>=0){\n                no[j-i]++;\n                }\n            }else if(c=='R'){\n                if(i+j<m){\n                no[j+i]++;\n                }\n            }else if(c=='U'){\n                if(i%2==0)\n                no[j]++;\n            }\n        }\n    }\n    for(int i=0;i<m;i++){\n        System.out.print(no[i]+\" \");\n        \n    }\n}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.*;\n\n/**\n * Created by Luba on 6/11/2014.\n */\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int k = in.nextInt();\n        in.nextLine();\n        int[] res = new int[m];\n        for(int i = 0; i < n; i++) {\n            char[] line = in.nextLine().toCharArray();\n            for(int o = 0; o < m; o++) {\n                if(line[o]=='L') {\n                    if(o-i >= 0)\n                        ++res[o-i];\n                } else if (line[o]=='R') {\n                    if(o+i<m)\n                        ++res[o+i];\n                } else if (line[o]=='U' && i%2==0) {\n                    ++res[o];\n                } else if (line[o] == 'D' && i==0) {\n                    res[o] += n;\n                }\n            }\n        }\n        out.print(res[0]);\n        for(int i = 1; i < m; i++) {\n            out.print(\" \" + res[i]);\n        }\n        out.close();\n    }\n\n    private static int getMax(int x, ArrayList<Integer> m, ArrayList<Integer> h) {\n        int result = -1;\n        for (int i = 0; i < m.size(); i++) {\n            if (h.get(i) <= x) {\n                if (result < 0)\n                    result = i;\n                else if (m.get(i) > m.get(result))\n                    result = i;\n            }\n        }\n        return result;\n    }\n\n    static class Pair {\n        int h;\n        int m;\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "# Codeforces 436B\nn, m, k = map(int, raw_input().split())\nseen = [ 0 ] * m\nfor y in xrange(n):\n\tline = raw_input()\n\tfor x in xrange(len(line)):\n\t\tif line[x] == 'U' and not y & 1: seen[x] += 1\n\t\telif line[x] == 'L' and y <= x: seen[x-y] += 1\n\t\telif line[x] == 'R' and y+x < m: seen[x+y] += 1\nfor howmany in seen: print howmany,"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, ans;\nchar a[2050][2050];\nint go(int w) {\n  int cnt = 0;\n  for (int i = 2; i <= n; i++) {\n    if (w - i + 1 >= 1)\n      if (a[i][w - i + 1] == 'R') cnt++;\n    if (w + i - 1 <= m)\n      if (a[i][w + i - 1] == 'L') cnt++;\n    if (i + i - 1 <= n)\n      if (a[i + i - 1][w] == 'U') cnt++;\n  }\n  return cnt;\n}\nint main() {\n  char w;\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= m; j++) cin >> a[i][j];\n  }\n  for (int i = 1; i <= m; i++) {\n    ans = go(i);\n    cout << ans;\n    if (i < m) cout << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class B {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int s = sc.nextInt();\n        \n        int jump = 0;\n        int[] start = new int[m];\n        \n        for(int i = 0; i < n; i++){\n            String in = sc.next();\n            \n            for(int j = 0; j < m; j++){\n                if(in.charAt(j) == '.' || in.charAt(j) == 'D'){\n                }\n                else if(in.charAt(j) == 'R' && j+jump < m){\n                    start[j+jump]++;\n                }\n                else if(in.charAt(j) == 'L' && j-jump > -1){\n                    start[j-jump]++;\n                }\n                else if(in.charAt(j) == 'U' && i % 2 == 0){\n                    start[j]++;\n                }\n            }\n            \n            jump++;\n        }\n        \n        String ans = \"\";\n        for(int i = 0; i < m; i++){\n            ans += start[i] + \" \";\n        }\n        \n        System.out.println(ans.trim());\n        \n        sc.close();\n    }\n}\n"
        }
    ]
}