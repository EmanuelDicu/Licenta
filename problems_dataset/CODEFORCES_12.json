{
    "name": "12_B. Correct Solution?",
    "source": "CODEFORCES",
    "description": "One cold winter evening Alice and her older brother Bob was sitting at home near the fireplace and giving each other interesting problems to solve. When it was Alice's turn, she told the number n to Bob and said:\n\n\u2014Shuffle the digits in this number in order to obtain the smallest possible number without leading zeroes.\n\n\u2014No problem! \u2014 said Bob and immediately gave her an answer.\n\nAlice said a random number, so she doesn't know whether Bob's answer is correct. Help her to find this out, because impatient brother is waiting for the verdict.\n\nInput\n\nThe first line contains one integer n (0 \u2264 n \u2264 109) without leading zeroes. The second lines contains one integer m (0 \u2264 m \u2264 109) \u2014 Bob's answer, possibly with leading zeroes.\n\nOutput\n\nPrint OK if Bob's answer is correct and WRONG_ANSWER otherwise.\n\nExamples\n\nInput\n\n3310\n1033\n\n\nOutput\n\nOK\n\n\nInput\n\n4\n5\n\n\nOutput\n\nWRONG_ANSWER",
    "difficulty": "B",
    "tags": [
        "implementation",
        "sortings"
    ],
    "rating": 1100,
    "public_test": [
        {
            "input": "3310\n1033\n",
            "output": "OK\n"
        },
        {
            "input": "4\n5\n",
            "output": "WRONG_ANSWER\n"
        }
    ],
    "generated_test": [
        {
            "input": "17109\n311\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "111111111\n111110111\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "912\n1744\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "10101\n10001\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "666\n145\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "7391\n413\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "1270\n1609\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "0\n1\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "987235645\n206049167\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "201\n101\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "0\n2\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "1000000000\n0\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "123456789\n80819683\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "32352320\n10412418\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "77774444\n78592494\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "2\n0\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "12\n23\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "40\n7\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "11110\n1011\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "888\n1\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "313\n202\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "320\n5\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "994321\n1721\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "918273645\n278718133\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "90812\n4802\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "300000003\n30448631\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "123\n576\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "432\n255\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "707\n385\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "3310\n623\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "4\n8\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "17109\n555\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "111111111\n111110110\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "912\n639\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "10101\n10111\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "666\n210\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "7391\n173\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "1270\n3115\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "0\n4\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "987235645\n158747570\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "201\n100\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "123456789\n93597181\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "32352320\n7392523\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "77774444\n122680116\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "12\n22\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "40\n6\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "11110\n1010\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "888\n0\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "313\n401\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "320\n3\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "994321\n519\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "918273645\n444581546\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "90812\n482\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "300000003\n59865927\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "123\n1125\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "432\n140\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "707\n651\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "3310\n168\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "4\n14\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "17109\n607\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "111111111\n111111110\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "912\n276\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "10101\n10110\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "666\n165\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "7391\n206\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "1270\n3477\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "0\n3\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "987235645\n251808778\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "201\n111\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "123456789\n28749112\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "32352320\n4846279\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "77774444\n161033565\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "12\n27\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "40\n2\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "11110\n0010\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "313\n128\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "320\n0\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "994321\n901\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "918273645\n392424087\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "90812\n476\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "300000003\n2985033\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "123\n1758\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "432\n143\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "707\n228\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "3310\n251\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "4\n1\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "17109\n891\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "111111111\n111110100\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "912\n408\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "10101\n10100\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "666\n170\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "7391\n321\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "1270\n1000\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "0\n5\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "987235645\n213121510\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "201\n011\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "123456789\n28975890\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "32352320\n4321957\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "77774444\n105289188\n",
            "output": "WRONG_ANSWER\n"
        },
        {
            "input": "12\n29\n",
            "output": "WRONG_ANSWER\n"
        }
    ],
    "solution": [
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, m, i, j;\nint a[50], x;\nchar b[50];\nbool f;\nint main() {\n  cin >> n;\n  i = 1;\n  while (n > 0) {\n    a[i] = n % 10;\n    n = n / 10;\n    i++;\n  }\n  sort(a + 1, a + i);\n  if (a[1] == 0) {\n    for (j = 2; j < i; j++) {\n      if (a[j] > 0) {\n        swap(a[1], a[j]);\n        break;\n      }\n    }\n  }\n  gets(b);\n  gets(b);\n  x = strlen(b);\n  x--;\n  j = 0;\n  f = true;\n  while (j <= x) {\n    if (j == 0 && j < x && b[j] == 48) {\n      f = false;\n      break;\n    }\n    m = m * 10 + b[j] - 48;\n    j++;\n  }\n  if (!f) {\n    printf(\"WRONG_ANSWER\");\n    return 0;\n  }\n  if (n == 0 && m == 0) {\n    printf(\"OK\");\n    return 0;\n  }\n  i--;\n  n = 0;\n  j = 1;\n  while (j <= i) {\n    n = n * 10 + a[j];\n    j++;\n  }\n  if (m != n) {\n    printf(\"WRONG_ANSWER\");\n    return 0;\n  }\n  printf(\"OK\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  set<char> ns;\n  char arr[s1.length()];\n  for (long int i = 0; i < s1.length(); i++) {\n    arr[i] = s1[i];\n    ns.insert(s1[i]);\n  }\n  if (ns.size() == 1 && s1[0] == '0') {\n    if (s2 == \"0\")\n      cout << \"OK\\n\";\n    else\n      cout << \"WRONG_ANSWER\\n\";\n  } else {\n    long int pos;\n    for (pos = 0; arr[pos] == '0'; pos++)\n      ;\n    for (long int i = 0; i < s1.length(); i++) {\n      if (arr[i] != '0' && arr[i] < arr[pos]) pos = i;\n    }\n    swap(arr[pos], arr[0]);\n    sort(arr + 1, arr + s1.length());\n    if (arr[0] != '0' && s1.length() == s2.length()) {\n      bool check = 0;\n      for (long int i = 0; i < s1.length(); i++) {\n        if (arr[i] != s2[i]) {\n          check = 1;\n          break;\n        }\n      }\n      if (check == 1)\n        cout << \"WRONG_ANSWER\\n\";\n      else\n        cout << \"OK\\n\";\n    } else\n      cout << \"WRONG_ANSWER\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def sort(s):\n    return sorted(sorted(s), key=str.upper)\ns=input()\ns1=input()\nl=sort(s)\nc=l.count('0')\nres=\"\"\nif(len(l)>c):\n    res=res+l[c]\nfor i in range(c):\n    res=res+l[i]\nfor i in range(c+1,len(s)):\n    res=res+l[i]\nif(s1==res):\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n *\n * @author epiZend\n */\npublic class Correct {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String num = sc.next();\n        String ans = sc.next();\n        if(num.equals(\"0\") && ans.equals(\"0\")){\n            System.out.println(\"OK\");\n            return;\n        }\n        if (ans.startsWith(\"0\")) {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        int zeroes = 0;\n        for (int i = 0; i < num.length(); i++) {\n            if (num.charAt(i) == '0') {\n                zeroes++;\n            }\n        }\n        num = num.replace(\"0\", \"\");\n        char[] chars = num.toCharArray();\n        Arrays.sort(chars);\n        String real = \"\";\n        int last = -1;\n        for (int i = 0; i < chars.length; i++) {\n            real += chars[i];\n            if (i == 0) {\n                for (int j = 0; j < zeroes; j++) {\n                    real += \"0\";\n                }\n                last = -2;\n            }\n        }\n        System.out.println(real.equals(ans) ? \"OK\" : \"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = input()\nv = []\nzeros = 0\nfor c in str(n):\n    if c != '0':\n        v.append(c)\n    else:\n        zeros += 1\nv.sort()\nres = (v[0] if len(v) > 0 else \"\") + ('0' * zeros)\nfor i in range(1, len(v)):\n    res += v[i]\nans = \"WRONG_ANSWER\"\nif m == res:\n    ans = \"OK\"\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\n\npublic class Test {\n\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n\n        int nr1, rez=0;\n        String nr2;\n\n        nr1 = sc.nextInt();\n        nr2 = sc.next();\n\n        int arr[] = new int[1000000];\n\n        int i=0, nrzero=0, res=0;\n        while(nr1>0){\n            if(nr1%10==0) {\n                nrzero++;\n            }else {\n                arr[i] = nr1 % 10;\n                i++;\n            }\n\n            nr1/=10;\n        }\n\n        sort(arr, i-1);\n\n        for(int k=0;k<i;k++){\n            rez *= 10;\n            rez += arr[k];\n            if(nrzero>0) {\n                rez *= Math.pow((double)10, (double)nrzero);\n                nrzero = 0;\n            }\n        }\n\n        if((rez+\"\").compareTo(nr2)==0)\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n\n    static void sort(int arr[], int len){\n        for(int i=len;i>0;i--){\n            for(int j=0;j<i;j++){\n                if(arr[j]>arr[j+1]){\n                    int t = arr[j];\n                    arr[j] = arr[j+1];\n                    arr[j+1] = t;\n                }\n            }\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class CorrectSolution {\n\tpublic static void main(String[] args) {\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t    reader(System.in);\n\t    int n = nI();\n\t    int N = n;\n\t    String s = n();\n\t    int m = Integer.parseInt(s);\n\t    int[] arr = new int[10];\n\t    while (n > 0) {\n\t    \tarr[n % 10]++;\n\t    \tn /= 10;\n\t    }\n\t    StringBuilder sb = new StringBuilder();\n\t    for (int i = 1; i < 10; i++)\n\t    \tif (arr[i] != 0)\n\t    \t\tfor (int j = 0; j < arr[i]; j++)\n\t    \t\t\tsb.append(i);\n\t    for (int j = 0; j < arr[0]; j++)\n\t    \tsb.insert(1, '0');\n\t    if (N == 0)\n\t    \tsb.append(0);\n\t    pw.println(Integer.parseInt(sb.toString()) == m && sb.length() == s.length() ? \"OK\" : \"WRONG_ANSWER\");\n\t    pw.close();\n\t}\n\t\n\tprivate static BufferedReader br;\n\tprivate static StringTokenizer st;\n\n\tstatic void reader(InputStream stream) {\n\t    try {\n\t        br = new BufferedReader(new InputStreamReader(stream));\n\t    } catch (Exception e) {\n\t        e.printStackTrace();\n\t    }\n\t}\n\n\tstatic String n() {\n\t    while (st == null || !st.hasMoreTokens()) {\n\t        try {\n\t            st = new StringTokenizer(br.readLine());\n\t        } catch (IOException e) {\n\t            e.printStackTrace();\n\t        }\n\t    }\n\t    return st.nextToken();\n\t}\n\n\tstatic int nI() {\n\t    return Integer.parseInt(n());\n\t}\n\t\n\tstatic long nL() {\n\t    return Long.parseLong(n());\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool isprefix(string a, string b) {\n  if (a.size() <= b.size() && b.substr(0, a.size()) == a) return 1;\n  return 0;\n}\nvector<string> fixed;\nchar arr[101][101];\nint main() {\n  string a, b;\n  cin >> a >> b;\n  string c = a;\n  sort(c.begin(), c.end());\n  int l = 0;\n  for (int i = 0; i < c.size(); ++i) {\n    if (c[i] != '0') break;\n    l++;\n  }\n  if (l == c.size()) {\n    if (a == b)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  string res = \"\";\n  res += c[l];\n  for (int i = 0; i < l; ++i) {\n    res += '0';\n  }\n  res += c.substr(l + 1);\n  cerr << res << endl;\n  if (res == b)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom array import array  # noqa: F401\n\n\ndef input():\n    return sys.stdin.buffer.readline().decode('utf-8')\n\n\ns, t = input().rstrip(), input().rstrip()\n\nif len(s) == 1:\n    print('OK' if s == t else 'WRONG_ANSWER')\n    exit()\n\ncnt = [0] * 10\nfor c in s:\n    cnt[int(c)] += 1\n\nans = ''\nfor i in range(len(s)):\n    if i > 0 and cnt[0]:\n        ans += '0'\n        cnt[0] -= 1\n    else:\n        for j in range(1, 10):\n            if cnt[j]:\n                ans += str(j)\n                cnt[j] -= 1\n                break\n\nprint('OK' if ans == t else 'WRONG_ANSWER')\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nfirst = sys.stdin.readline().strip()\nsecond = sys.stdin.readline().strip()\n\nif first == '0' and second == '0':\n    print(\"OK\")\n    sys.exit(0)\n\nsortings = sorted(first)\n\nif sortings[0] == '0':\n    for index in range(len(sortings)):\n        if sortings[index] != '0':\n            sortings[0], sortings[index] = \\\n              sortings[index], sortings[0]\n            break\n\nif sortings[0] == '0':\n    print(\"WRONG_ANSWER\")\n    sys.exit(0)\n\nsorted_str = \"\"\n\nfor i in sortings:\n    sorted_str += i\n\n    #print(sorted_str)\n\nif sorted_str == second:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\n\npublic class Main extends PrintWriter {\n    BufferedReader in;\n    StringTokenizer stok;\n    final Random rand = new Random(31);\n    final int inf = (int) 1e9;\n    final long linf = (long) 1e18;\n\n    final static String IO = \"_std\";\n\n    void solve() throws IOException {\n        char[] a = next().toCharArray();\n        Arrays.sort(a);\n        for (int i = 0; i < a.length; i++) {\n            if (a[i] != '0') {\n                char _ = a[0];\n                a[0] = a[i];\n                a[i] = _;\n                break;\n            }\n        }\n        String b = next();\n        println(String.valueOf(a).equals(b) ? \"OK\" : \"WRONG_ANSWER\");\n    }\n\n    Main() {\n        super(System.out);\n        in = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    Main(String fileIn, String fileOut) throws IOException {\n        super(fileOut);\n        in = new BufferedReader(new FileReader(fileIn));\n    }\n\n    public static void main(String[] args) throws IOException {\n        Main main;\n        if (\"_std\".equals(IO)) {\n            main = new Main();\n        } else if (\"_iotxt\".equals(IO)) {\n            main = new Main(\"input.txt\", \"output.txt\");\n        } else {\n            main = new Main(IO + \".in\", IO + \".out\");\n        }\n        main.solve();\n        main.close();\n    }\n\n    String next() throws IOException {\n        while (stok == null || !stok.hasMoreTokens()) {\n            String s = in.readLine();\n            if (s == null) {\n                return null;\n            }\n            stok = new StringTokenizer(s);\n        }\n        return stok.nextToken();\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n\n    int[] nextIntArray(int len) throws IOException {\n        int[] a = new int[len];\n        for (int i = 0; i < len; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    int[] nextIntArraySorted(int len) throws IOException {\n        int[] a = nextIntArray(len);\n        shuffle(a);\n        Arrays.sort(a);\n        return a;\n    }\n\n    void shuffle(int[] a) {\n        for (int i = 1; i < a.length; i++) {\n            int x = rand.nextInt(i + 1);\n            int _ = a[i];\n            a[i] = a[x];\n            a[x] = _;\n        }\n    }\n\n    void shuffleAndSort(int[] a) {\n        shuffle(a);\n        Arrays.sort(a);\n    }\n\n    boolean nextPermutation(int[] p) {\n        for (int a = p.length - 2; a >= 0; --a) {\n            if (p[a] < p[a + 1])\n                for (int b = p.length - 1; ; --b)\n                    if (p[b] > p[a]) {\n                        int t = p[a];\n                        p[a] = p[b];\n                        p[b] = t;\n                        for (++a, b = p.length - 1; a < b; ++a, --b) {\n                            t = p[a];\n                            p[a] = p[b];\n                            p[b] = t;\n                        }\n                        return true;\n                    }\n        }\n        return false;\n    }\n\n    <T> List<T>[] createAdjacencyList(int n) {\n        List<T>[] res = new List[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = new ArrayList<>();\n        }\n        return res;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, j;\n  char c;\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  if (a.size() != 1)\n    if (a[0] == '0') swap(a[0], a[1]);\n  if (a == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\n/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n *\n * @author Madi\n */\npublic class RightAnswer {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String num1 = sc.nextLine();\n        String num2 = sc.nextLine();\n\n        if (num1.length() != num2.length()) {\n            System.out.println(\"WRONG_ANSWER\");\n        } else {\n            int[] n = new int[num1.length()];\n            for (int i = 0; i < n.length; i++) {\n                n[i] = Integer.parseInt(\"\" + num1.charAt(i));\n            }\n\n            for (int i = 0; i < n.length - 1; i++) {\n                for (int j = i + 1; j < n.length; j++) {\n                    if (n[i] > n[j]) {\n                        int t = n[i];\n                        n[i] = n[j];\n                        n[j] = t;\n                    }\n                }\n            }\n\n            for (int i = 0; i < n.length; i++) {\n                if (n[i] != 0) {\n                    int t = n[0];\n                    n[0] = n[i];\n                    n[i] = t;\n                    break;\n                }\n            }\n\n            boolean f = true;\n            for (int i = 0; i < n.length; i++) {\n                if (n[i] != Integer.parseInt(\"\" + num2.charAt(i))) {\n                    f = false;\n                    break;\n                }\n            }\n\n            if (f) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(\"WRONG_ANSWER\");\n            }\n\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "a = list(input())\nb = input()\na.sort()\nc = a.count('0')\nd = 0\nwhile d < c:\n    a.remove(a[0])\n    d += 1\nif len(a) > 0:\n    a[0] += ('0' * c)\nelse:\n    a.append('0' * c)\ne = ''.join(a)\nif e == b:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool iszero(string s) {\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] != '0') {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n  string a, b;\n  cin >> a >> b;\n  if (iszero(a)) {\n    if (iszero(b) && a.size() == b.size()) {\n      cout << \"OK\";\n      return 0;\n    } else {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  } else {\n    vector<int> v;\n    for (auto i : a) v.push_back(i - '0');\n    sort(v.begin(), v.end());\n    int m = v[0];\n    int k = m;\n    int del;\n    if (m == 0) {\n      for (int i = 0; i < v.size(); i++) {\n        if (v[i] > m) {\n          m = v[i];\n          del = i;\n          break;\n        }\n      }\n    }\n    if (k == 0) {\n      int r = v[del];\n      v.erase(v.begin() + del);\n      v.insert(v.begin(), r);\n    }\n    if (v.size() == b.size()) {\n      bool flag = true;\n      for (int i = 0; i < v.size(); i++) {\n        if (v[i] != (b[i] - '0')) {\n          flag = false;\n          break;\n        }\n      }\n      cout << ((flag) ? \"OK\" : \"WRONG_ANSWER\");\n    } else\n      cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "\nclass Node():\n    def __init__(self,data):\n        self.data = data\n        self.parent = None\n        self.leftChild = None\n        self.rightChild = None\n        self.height = -1\n\n    def setLeftChild(self,leftChild):\n        self.leftChild=leftChild\n\n    def setRightChild(self,rightChild):\n        self.rightChild=rightChild\n\n    def setParent(self,parent):\n        self.parent=parent\n\n    def setData(self,data): # update data\n        self.data=data\n\n    def setHeight(self,height):\n        self.height=height\n\n    def getData(self):\n        return self.data\n\n    def getLeftChild(self):\n        return self.leftChild\n\n    def getRightChild(self):\n        return self.rightChild\n\n    def getParent(self):\n        return self.parent\n\n\n\n\nclass BinarySearchTree():\n\n    def __init__(self):\n        self.root = None\n        self.size = 0\n\n    def getRoot(self):\n        return self.root\n\n    def insertNode(self, data):\n        tempNode = self.root\n\n        newNode = Node(data)\n        if(tempNode == None):\n            self.root = newNode\n\n        else:\n            while(True):\n                if(data < tempNode.getData()):\n                    if(tempNode.getLeftChild() == None):\n                        tempNode.setLeftChild(newNode)\n                        tempNode.getLeftChild().setParent(tempNode)\n                        break\n                    else:\n                        tempNode = tempNode.getLeftChild()\n                else:\n                    if (tempNode.getRightChild() == None):\n                        tempNode.setRightChild(newNode)\n                        tempNode.getRightChild().setParent(tempNode)\n\n                        break\n                    else:\n                        tempNode = tempNode.getRightChild()\n        self.size+=1\n    def getSorted(self,a):\n        self.printTreeInOrder(self.root,a)\n\n    def printTreeInOrder(self, node,a):\n        if(node == None): return\n        self.printTreeInOrder(node.getLeftChild(),a)\n        a.append(node.getData())\n        self.printTreeInOrder(node.getRightChild(),a)\n\n\nif __name__ == '__main__':\n\n    tr = BinarySearchTree()\n\n    string = input()\n    ans = input()\n\n\n    if (len(set(string)) == 1 and len(string)>1):\n        if(int(string)==0): print('WRONG_ANSWER')\n        else:\n            if (string == ans):\n                print('OK')\n            else:\n                print('WRONG_ANSWER')\n\n\n    else:\n        zeros = \"\"\n        for i in range(len(string)):\n            if (string[i] != '0'):\n                tr.insertNode(int(string[i]))\n            else:\n                zeros += str(string[i])\n        a = []\n        tr.getSorted(a)\n        if(len(a)==0): newS = \"\"  + str(zeros)\n        else:\n            newS = \"\" + str(a[0]) + str(zeros)\n        for i in range(1, len(a)):\n            newS += str(a[i])\n\n        if(int(newS)<= int(string)):\n            if (newS == ans):\n                print('OK')\n            else: print('WRONG_ANSWER')\n        else: print('WRONG_ANSWER')\n\n    print(end='')\n# print(end='')\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring n, m;\nint cnt[10] = {0}, flag = 1;\nint main() {\n  cin >> n >> m;\n  for (int i = 0; i < n.size(); i++) cnt[n[i] - '0']++;\n  for (int i = 0; i < m.size(); i++) cnt[m[i] - '0']--;\n  for (int i = 0; i < 10; i++)\n    if (cnt[i]) flag = 0;\n  int first = m[0];\n  if (first == '0' && !(n == \"0\" && m == \"0\")) flag = 0;\n  for (int i = 1; i < m.size(); i++) {\n    if (m[i] != '0' && m[i] < first) flag = 0;\n    if (i > 1 && m[i] < m[i - 1]) flag = 0;\n  }\n  if (flag)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "a = input()\nb = []\nfor i in a:\n    b.append(int(i))\nb.sort()\ni = 0\nc = \"\"\nwhile i<len(b) and b[i]==0:\n    c += str(b[i])\n    i += 1\nif i<len(b):\n    c = str(b[i])+c\n    i += 1\nwhile i<len(b):\n    c += str(b[i])\n    i += 1\nif c==input():\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 1,
            "solution": "i=raw_input();n=sorted(filter(lambda c:c!='0',i))or[''];print('WRONG_ANSWER','OK')[raw_input()==n[0]+filter(lambda c:c=='0',i)+''.join(n[1:])]"
        },
        {
            "language": 1,
            "solution": "n, m = sorted(raw_input()), raw_input()\n\nfor i in range(len(n)):\n   if n[i] != '0':\n      n[i], n[0] = n[0], n[i]\n      break\n\nprint (\"WRONG_ANSWER\", \"OK\") [''.join(n) == m]\n"
        },
        {
            "language": 3,
            "solution": "n=(input())\nm=input()\n# print(m[0])\n# print(m)\n# print(len(m))\nif m[0]=='0' and n[0]=='0' and len(n)==len(m):\n    print(\"OK\")\n    exit()\nif m[0]=='0' or n[0]=='0':\n    # print(\"hi\")\n    print(\"WRONG_ANSWER\")\n    exit()\n# print(r)\nn=int(n)\nr=n\narr=[]\nwhile r!=0:\n    s=r%10\n    # print(s)\n    arr.append(s)\n    r=r//10\nM=int(m)\narr1=arr[::-1]\narr1.sort()\n# print(arr1)\ncount=0\nfor i in range(0,len(arr)):\n    if arr1[i]==0:\n        count+=1\n    else:\n        break\nif count>0:\n    t=arr1[0]\n    arr1[0]=arr1[count]\n    arr1[count]=t\ns=0\n# print(arr1)\nfor i in range(0,len(arr1)):\n    s=s*10+arr1[i]\n# print(s)\nif s==M:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B12 {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String S = in.next();\n        String correct;\n        if (\"0\".equals(S)) {\n            correct = \"0\";\n        } else {\n            char[] A = S.toCharArray();\n            StringBuilder sb = new StringBuilder();\n            char min = '9';\n            for (char c : A) {\n                if (c != '0') {\n                    min = (char) Math.min(min, c);\n                }\n            }\n            sb.append(min);\n            Arrays.sort(A);\n            for (char c : A) {\n                if (c == min) {\n                    min = ' ';\n                } else {\n                    sb.append(c);\n                }\n            }\n            correct = sb.toString();\n        }\n        String actual = in.next();\n        System.out.println(actual.equals(correct) ? \"OK\" : \"WRONG_ANSWER\");\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "I=raw_input;x=I();n=x.count('0');a=sorted(x)[n:];print['WRONG_ANSWER','OK'][a[:1]+n*['0']+a[1:]==list(I())]"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a, b;\nint main() {\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  int j = 0;\n  while (a[j] == '0' && j < a.size() - 1) ++j;\n  swap(a[0], a[j]);\n  if (a == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = list(input())\nval = input()\nn1=[]\nt=''\nif len(n)!=len(val):\n    print('WRONG_ANSWER')\n    exit()\nif n[0]=='0' and val=='0':\n    print ('OK')\n    exit()\nif n[0]=='0' and val!='0':\n    print ('WRONG_ANSWER')\n    exit()\n\nres=[i for i in n if int(i)>0]\nn1=list(filter(lambda x: x == '0', n))\nres.sort()\n\nt=res[0]+''.join(n1)+''.join(res[1:])\nif t==val:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')   \n'''x = min(i for i in n)\nres.append(x)\nn.remove(x)\nfor j in range(len(n)):\n    res.append(min(n))\n    n.remove(min(n))\nif res[0]=='0':\n    \ncorrect = ''.join(str(i) for i in res)\nif correct == val:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n'''\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport static java.lang.Math.*;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class problemB implements Runnable {\n\n\tBufferedReader in;\n\tPrintWriter out;\n\tStringTokenizer tok;\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(new problemB()).start();\n\t}\n\n\tvoid solve() throws IOException {\n\t\tchar[] c = nextLine().trim().toCharArray();\n\t\tArrays.sort(c);\n\t\tint i = 0;\n\t\tString res = \"\";\n\t\twhile(i < c.length && c[i] == '0')\n\t\t\tres += c[i++];\n\t\tif(i < c.length)\n\t\t\tres = c[i++] + res;\n\t\twhile(i < c.length)\n\t\t\tres += c[i++];\n\t\tif(nextLine().trim().equals(res))\n\t\t\tout.print(\"OK\");\n\t\telse out.print(\"WRONG_ANSWER\");\n\t}\n\n\t@Override\n\tpublic void run() {\n\t\ttry {\n\t\t\t in = new BufferedReader(new InputStreamReader(System.in));\n\t\t\t// in = new BufferedReader(new FileReader(new File(\"input.txt\")));\n\t\t\tout = new PrintWriter(System.out);\n\t\t\t// out = new PrintWriter(new File(\"output.txt\"));\n\t\t\tsolve();\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t\tin.close();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n\tString nextLine() throws IOException {\n\t\ttok = null;\n\t\treturn in.readLine();\n\t}\n\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tString nextToken() throws IOException {\n\t\twhile (tok == null || !tok.hasMoreTokens()) {\n\t\t\ttok = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn tok.nextToken();\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String a = in.next();\n        String b = in.next();\n        char[] c = a.toCharArray();\n        Arrays.sort(c);\n        int first = 0;\n        for (int i = 0; i < c.length; i++) {\n            if (c[i] != '0') {\n                first = i;\n                break;\n            }\n        }\n        char temp = c[first];\n        c[first] = c[0];\n        c[0] = temp;\n        a=\"\";\n        for (int i = 0; i < c.length; i++) {\n            a+=c[i];\n        }\n        if (a.equals(b))\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "a = raw_input()\nb = raw_input()\n\na = sorted(a)\n\nx = ''.join(a).rfind('0')\nif x!=len(a)-1:\n    t = a[x+1]\n    a[x+1]=a[0]\n    a[0]=t\n\nif a==list(b):\n    print 'OK'\nelse: \n    print'WRONG_ANSWER'\n"
        },
        {
            "language": 4,
            "solution": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.math.BigInteger;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.Hashtable;\nimport java.util.LinkedHashMap;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Scanner;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport javax.swing.text.html.HTMLDocument.Iterator;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws FileNotFoundException {\n\t\t//Scanner sc = new Scanner(new File(\"in.in\"));\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tString line = sc.nextLine(), res = \"\", zer = \"\";\n\t\tString line_2 = sc.nextLine();\n\t\tchar tab[] = line.toCharArray();\n\n\t\tArrays.sort(tab);\n\n\t\tfor (int i = 0; i < tab.length; i++) {\n\t\t\tif (tab[i] == '0') {\n\t\t\t\tzer += \"0\";\n\t\t\t} else {\n\t\t\t\tres += tab[i] + \"\";\n\t\t\t}\n\t\t}\n\n\t\tif (res.length() > 1)\n\t\t\tres = res.charAt(0) + zer + res.substring(1);\n\t\telse\n\t\t\tres = res + zer;\n\n\t\tif (res.length() == line_2.length()) {\n\t\t\tif (Integer.parseInt(res) == Integer.parseInt(line_2)) {\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN = 100 * 10 + 100;\nlong long a, b, c, t[10];\nstring s1, s2;\nbool l;\nint main() {\n  cin >> s1 >> s2;\n  for (int i = 0; i < s1.size(); i++) t[s1[i] - '0']++;\n  for (int i = 1; i < 10; i++)\n    if (t[i] > 0) {\n      t[i]--;\n      a = i;\n      break;\n    }\n  for (int i = 0; i < 10; i++)\n    if (t[i] > 0)\n      for (int j = 0; j < t[i]; j++) a = a * 10 + i;\n  b = s2.size() - 1;\n  while (a > 0 || b > -1) {\n    if (a % 10 != s2[b] - '0') l = true;\n    b--;\n    a = a / 10;\n  }\n  if (l == true || (s2[0] == '0' && s2.size() != 1) || a > 0)\n    cout << \"WRONG_ANSWER\" << endl;\n  else\n    cout << \"OK\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\npublic class Main{\n    void doMain(){\n        int in,i;\n        String s1,s2;\n        Scanner sc = new Scanner(System.in);\n        int G;\n        s1 = sc.next();\n        s2 = sc.next();\n        if(s2.length() !=s1.length()){\n            System.out.println(\"WRONG_ANSWER\");\n            return ;\n        }\n        in = Integer.parseInt(s1);\n        G = Integer.parseInt(s2);\n        if(in == 0){\n            if(G==0&&s1.length()==s2.length())System.out.println(\"OK\");\n            else System.out.println(\"WRONG_ANSWER\");\n            return ;\n        }\n        int arr [] = new int[10];\n        int index = 0;\n        while(in!=0){\n            arr[index] = in%10;\n            in/=10;\n            index++;\n        }\n        Arrays.sort(arr,0,index);\n        int temp = 0;\n        while(arr[temp] == 0){\n            temp++;\n        }\n        int t = arr[0];\n        arr[0] = arr[temp];\n        arr[temp] = t;\n        int ans = 0;\n        int ten = 1;\n        for(i=index-1;i>=0;i--){\n            ans+=arr[i]*ten;\n            ten*=10;\n        }\n        if(G == ans)System.out.println(\"OK\");\n        else System.out.println(\"WRONG_ANSWER\");\n    }\n    public static void main(String args[]){\n        Main m = new Main();\n        m.doMain();\n    }\n\n\n}\n"
        },
        {
            "language": 1,
            "solution": "import re\nprint \"OK\" if re.sub(r\"^(0*)([^0])\",lambda x:x.group(2)+x.group(1),\"\".join(sorted([j for j in raw_input().rstrip('\\r')])))==raw_input().rstrip('\\r') else \"WRONG_ANSWER\""
        },
        {
            "language": 3,
            "solution": "n1 = input()\nn2 = input()\nif len(n1)!=len(n2):\n    print(\"WRONG_ANSWER\")\nelif len(n1)==len(n2)==1:\n    if n1==n2:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\nelse:\n    least = sorted(n1)\n    i = 0\n    flg = 0\n    while i<len(least) and least[i]==\"0\":\n        flg = 1\n        i+=1\n    if flg:\n        least[0],least[i] = least[i],least[0] \n    if n2 == \"\".join(least):\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a, b, s;\nint main() {\n  long long i, t, f = 0, f1 = 0, f2 = 0;\n  cin >> a >> b;\n  for (i = 0; i < a.length(); i++)\n    if (a[i] == '0') f1++;\n  for (i = 0; i < b.length(); i++)\n    if (b[i] == '0') f2++;\n  if (a.length() != b.length()) {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  if (f1 == a.length() && f2 == b.length()) {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  sort(a.begin(), a.end());\n  for (i = 0; i < a.length(); i++) {\n    if (a[i] != '0') {\n      if (f == 0) {\n        s += a[i];\n        f = 1;\n        for (int y = 0; y <= i - 1; y++) s += a[y];\n      } else\n        s += a[i];\n    }\n  }\n  for (i = 0; i < b.length(); i++)\n    if (b[i] != s[i]) {\n      cout << \"WRONG_ANSWER\" << endl;\n      return 0;\n    }\n  cout << \"OK\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m = str(input()), str(input())\nref = 10 * [0]\nfor j in range(len(n)):\n    ref[ord(n[j]) - 48] += 1\nres = ''\nfor j in range(1, 10):\n    if ref[j] > 0:\n        res += chr(j + 48)\n        ref[j] -= 1\n        break\nfor j in range(10):\n    while ref[j] > 0:\n        res += chr(j + 48)\n        ref[j] -= 1\nif res == m:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long double eps = 1e-9;\nconst double pi = acos(-1.0);\nconst long long inf = 1e18;\nusing namespace std;\nint n;\nstring m, res = \"\";\nvector<int> dd;\nint main(int argc, const char* argv[]) {\n  cin >> n >> m;\n  if (n == 0) {\n    if (m == \"0\")\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  while (n != 0) {\n    dd.push_back(n % 10);\n    n /= 10;\n  }\n  sort(dd.begin(), dd.end());\n  while (dd.front() == 0) next_permutation(dd.begin(), dd.end());\n  for (int i = 0; i < dd.size(); i++) {\n    char c = dd[i] + '0';\n    res = res + c;\n  }\n  if (res == m)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": " import java.io.BufferedReader;\n        import java.io.InputStreamReader;\n        import java.lang.String;\n        import java.util.Arrays;\n\n\n/**\n * Created by SvoyakMartin on 17.11.2015.\n */\npublic class t1\n{\n    public static void main(String[] args) throws Exception\n    {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\n        String n = null, m = null;\n        //\u0432\u0432\u043e\u0434 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\n        for (int i = 0; i < 1;)\n        {\n   //         System.out.println(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0435\u0440\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e:\");\n            n = reader.readLine();\n            int nn = Integer.parseInt(n);\n            if (0 > nn || nn > 1000000000) {\n      //          System.out.println(\"\u0412\u043d\u0435 \u0434\u0438\u0430\u043f\u043e\u0437\u043e\u043d\u0430! (0\u2264n\u226410^9)\");\n            } else {\n                break;\n            }\n        }\n\n        for (int i = 0; i < 1;)\n        {\n    //        System.out.println(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0442\u043e\u0440\u043e\u0435 \u0447\u0438\u0441\u043b\u043e:\");\n            m = reader.readLine();\n            int mm = Integer.parseInt(m);\n            if (0 > mm || mm > 1000000000) {\n     //           System.out.println(\"\u0412\u043d\u0435 \u0434\u0438\u0430\u043f\u043e\u0437\u043e\u043d\u0430! (0\u2264m\u226410^9)\");\n            } else {\n                break;\n            }\n        }\n\n        String[] list = new String[n.length()];\n        //\u0437\u0430\u0431\u0438\u0432\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438\n        list = n.split(\"\");\n\n        int nul = 0; //\u043a\u043e\u043b\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0432\u0435\u0434\u0451\u043d\u043d\u044b\u0445 \u043d\u0443\u043b\u0435\u0439\n        for (int i = 0; i < list.length; i++)\n        {\n            if (list[i].equals(\"0\")) {\n                nul++;\n            }\n        }\n\n        //\u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0431\u0435\u0437 \u043b\u0438\u0434\u0438\u0440\u0443\u044e\u0449\u0438\u0445 \u043d\u0443\u043b\u0435\u0439\n        n = \"\";\n        Arrays.sort(list);\n        if (nul == list.length){    //\u0435\u0441\u043b\u0438 \u043e\u0434\u043d\u0438 \u043d\u0443\u043b\u0438\n   //        System.out.println(\"\u0412 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445-\u0442\u043e n \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e \u043d\u0443\u043b\u044e!\\n\" +\n   //                \"\u041e\u0434\u043d\u0430\u043a\u043e, \u0438\u0437 \u043e\u0434\u043d\u0438\u0445 \u043d\u0443\u043b\u0435\u0439 \u0447\u0438\u0441\u043b\u0430 \u0431\u0435\u0437 \u043b\u0438\u0434\u0438\u0440\u0443\u044e\u0449\u0438\u0445 \u043d\u0443\u043b\u0435\u0439 \u043d\u0435 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c!\\n\" +\n   //               \"\u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0432\u0432\u0435\u0434\u0451\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 <<\u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0441\u0442\u044c>>\\n\");\n            for (int i = 0; i < list.length; i++)\n            {\n                n += \"\" + list[i];\n            }\n        } else\n        {\n            for (int i = nul; i < list.length; i++)\n            {\n                if (nul == (list.length - 1))\n                {   // \u0435\u0441\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u041d\u0415\u043d\u0443\u043b\u044c\n                    n += \"\" + list[i];\n                    for (int j = 0; j < nul; j++)\n                    {\n                        n += \"\" + 0;\n                    }\n                } else if (i == nul + 1)\n                {\n                    for (int j = 0; j < nul; j++)\n                    {\n                        n += \"\" + 0;\n                    }\n                    n += \"\" + list[i];\n                } else\n                {\n                    n += \"\" + list[i];\n                }\n            }\n        }\n        if (nul == list.length){\n     //       System.out.println(\"\u041d\u0443 \u0432\u043e\u0442 \u0438 \u0437\u0430\u0447\u0435\u043c \u0431\u044b\u043b\u043e \u0432\u0432\u043e\u0434\u0438\u0442\u044c \" + n + \" \u0438 \" + m + \"?\\n\" +\n     //               \"\u0412 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432 \u0438\u0442\u043e\u0433\u0435:\");\n        }\n        if (n.equals(m)) {\n            System.out.println(\"OK\");\n        } else {\n            System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\nndigits = []\nfor i in n:\n    ndigits.append(i)\n\nsnd = sorted(ndigits)\nnumberofzeros = 0\nfor i in range(0,len(snd)):\n    if snd[i] != '0':\n        numberofzeros = i\n        break\nnumberofones = 0\nfor i in range(numberofzeros,len(snd)):\n    if snd[i] != '1':\n        numberofones = i-numberofzeros\n        break\nif snd[len(snd)-1] == '1':\n    numberofones = len(snd)-numberofzeros\notherdigits = snd[numberofzeros+numberofones:]\nif numberofones >= 1:\n    answer = '1'+'0'*numberofzeros+'1'*(numberofones-1)\n    for j in otherdigits:\n        answer = answer+j\nelse:\n    answer = snd[numberofzeros]+'0'*numberofzeros\n    for j in otherdigits[1:]:\n        answer = answer+j\n    \nif n == '0':\n    if m == '0':\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\nelif m == answer:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  int i, j, k;\n  cin >> a >> b;\n  if (a == \"0\" && b == \"0\") {\n    cout << \"OK\\n\";\n    return 0;\n  }\n  sort(a.begin(), a.end());\n  vector<string> v;\n  do {\n    if (a[0] != '0') v.push_back(a);\n  } while (next_permutation(a.begin(), a.end()));\n  sort(v.begin(), v.end());\n  if (v.size() == 0) {\n    cout << \"WRONG_ANSWER\\n\";\n    return 0;\n  }\n  if (v[0] == b)\n    cout << \"OK\\n\";\n  else\n    cout << \"WRONG_ANSWER\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    str1=str(input())\n    str2=str(input())\n    str3=''.join(sorted(str1))\n    for i in range(len(str3)):\n        if (str3[i]!='0' and str3[0]=='0'):\n            str3=swap(str3,i,0)\n            break;\n    if(str3==str2):\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n   # print(str3)   \ndef swap(c, i, j):\n    c = list(c)\n    c[i], c[j] = c[j], c[i]\n    return ''.join(c) \nmain()    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int b, d, c, f = 0;\n  string a, s;\n  cin >> a >> s;\n  b = a[0];\n  c = 0;\n  d = (a.length());\n  for (int i = 0; i < d; i++) {\n    f = a[i];\n    f = f - '0';\n    if (f == 0) {\n      c++;\n    }\n  }\n  for (int i = 0; i < d; i++) {\n    for (int j = i + 1; j < d; j++) {\n      if (a[j] < a[i]) {\n        b = a[j];\n        a[j] = a[i];\n        a[i] = b;\n      }\n    }\n  }\n  if (c < d) {\n    f = a[c];\n    a[c] = a[0];\n    a[0] = f;\n  }\n  if (a == s) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B_CorrectSolution {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar[] cs = scan.nextLine().toCharArray();\n\t\tArrays.sort(cs);\n\t\tint i;\n\t\tfor(i = 0; i < cs.length&&cs[i]==48;i++);\n\t\tif(i!=0&&i<cs.length){\n\t\t\tcs[0]=cs[i];\n\t\t\tcs[i]=48;\n\t\t}\n\t\tSystem.out.println(scan.nextLine().equals(new String(cs))?\"OK\":\"WRONG_ANSWER\");\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport copy\nfrom itertools import permutations as pm\ninput=sys.stdin.readline\nd={}\n\nt=1\nwhile t>0:\n    t-=1\n    a=list(input().rstrip())\n    b=list(input().rstrip())\n    a.sort()\n    z=-9\n    for i in range(len(a)):\n        if a[i]!='0':\n            z=a[i]\n            a.pop(i)\n            break\n    if z!=-9:    \n        a.insert(0,z)\n    if a==b:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid func(unsigned *, unsigned &);\nvoid sort(unsigned *, unsigned);\nunsigned cvoll(unsigned *, unsigned);\nint main(int argc, char *argv[]) {\n  unsigned one, two;\n  char str_o[11], str_t[11];\n  cin >> str_o >> str_t;\n  if (strlen(str_o) != strlen(str_t)) {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  one = atoi(str_o);\n  two = atoi(str_t);\n  unsigned arr[10];\n  func(arr, one);\n  sort(arr, one);\n  if (two == cvoll(arr, one)) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\nvoid func(unsigned *arr, unsigned &one) {\n  unsigned j = 1;\n  arr[0] = 0;\n  while (one) {\n    if (one % 10) {\n      arr[j] = one % 10;\n      j++;\n    } else {\n      arr[0]++;\n    }\n    one /= 10;\n  }\n  one = j;\n}\nvoid sort(unsigned *arr, unsigned n) {\n  unsigned flag = 1;\n  while (flag) {\n    flag = 0;\n    for (unsigned i = 1; i < n - 1; i++) {\n      if (arr[i] < arr[i + 1]) {\n        flag = 1;\n        unsigned tmp = arr[i];\n        arr[i] = arr[i + 1];\n        arr[i + 1] = tmp;\n      }\n    }\n  }\n}\nunsigned cvoll(unsigned *arr, unsigned n) {\n  unsigned k = n + arr[0] - 2;\n  unsigned result = (unsigned)arr[n - 1] * pow((double)10.0, (int)(k));\n  k -= arr[0] + 1;\n  if (n == 1) {\n    n++;\n  }\n  n -= 2;\n  while (n) {\n    result += arr[n] * (unsigned)pow((double)10, (int)(k));\n    n--;\n    k--;\n  }\n  return result;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  char strM[11];\n  int n, m;\n  scanf(\"%d %s\", &n, strM);\n  sscanf(strM, \"%d\", &m);\n  if (strM[0] == '0') {\n    if (m != 0)\n      puts(\"WRONG_ANSWER\");\n    else if (strM[1] == '0')\n      puts(\"WRONG_ANSWER\");\n    else\n      puts(\"OK\");\n    return 0;\n  }\n  int digits[10];\n  int i = 0;\n  while (n != 0) {\n    digits[i] = n % 10;\n    n /= 10;\n    i++;\n  }\n  for (int j = 0; j < i; j++)\n    for (int k = j + 1; k < i; k++)\n      if (digits[j] < digits[k]) {\n        int t = digits[j];\n        digits[j] = digits[k];\n        digits[k] = t;\n      }\n  if (digits[i - 1] == 0)\n    for (int j = i - 2; j >= 0; j--)\n      if (digits[j] != 0) {\n        digits[i - 1] = digits[j];\n        digits[j] = 0;\n        break;\n      }\n  int j = 0;\n  const char *result = \"OK\";\n  while (m != 0) {\n    if (digits[j] != m % 10) {\n      result = \"WRONG_ANSWER\";\n      break;\n    }\n    j++;\n    m /= 10;\n  }\n  puts(result);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class p12b {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int x = in.nextInt();\n        String yy = in.next();\n        if(x == 0) {\n            if(yy.equals(\"0\"))\n                System.out.println(\"OK\");\n            else System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        if(yy.charAt(0) == '0') {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        int y = Integer.parseInt(yy);\n        \n        if(x == 0) {\n            if(y == 0) {\n                System.out.println(\"OK\");\n            }else {\n                System.out.println(\"WRONG_ANSWER\");\n            }\n            return;\n        }\n        int[] all = new int[10];\n        while(x!=0) {\n            all[x%10]++;\n            x/=10;\n        }\n        int res = 0;\n        for (int i = 1; i < all.length; i++) {\n            if(all[i] != 0) {\n                res = i;\n                all[i]--;\n                break;\n            }\n        }\n        for (int i = 0; i < all.length; i++) {\n            while(all[i]!=0) {\n                res *= 10;\n                res += i;\n                all[i]--;\n            }\n        }\n        if(res == y) {\n            System.out.println(\"OK\");\n        }else System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing namespace std::chrono;\nint main() {\n  string str, strb;\n  cin >> str >> strb;\n  vector<int> v(str.size()), vb(strb.size());\n  for (int i = 0; i < (int)str.size(); ++i) v[i] = str[i] - '0';\n  for (int i = 0; i < (int)strb.size(); ++i) vb[i] = strb[i] - '0';\n  sort(v.begin(), v.end());\n  auto pos = find_if(v.begin(), v.end(), [](int e) { return e != 0; });\n  if (pos != v.begin() && pos != v.end()) iter_swap(v.begin(), pos);\n  cout << (v == vb ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint const N = 1e5 + 2;\nint n, m;\nvoid solve() {\n  string n, m;\n  cin >> n >> m;\n  sort((n).begin(), (n).end());\n  if (n[0] == '0' && n.size() > 1) swap(n[0], n[1]);\n  if (n == m)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  solve();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[10010];\nchar b[10010], c[1010], d[1010];\nint main() {\n  while (scanf(\"%s%s\", a, b) != EOF) {\n    int len = strlen(a);\n    sort(a, a + len);\n    int flag = 0;\n    for (int i = 0; i < len; i++) {\n      if (a[i] != '0') {\n        flag = i;\n        char t = a[i];\n        a[i] = a[0];\n        a[0] = t;\n        break;\n      }\n    }\n    if (strcmp(a, b) == 0) {\n      printf(\"OK\\n\");\n    } else {\n      printf(\"WRONG_ANSWER\\n\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n =input()\nm =input()\nt=\"\"\nif(int(n)==0):\n    if(int(m)==0 and len(m)==len(n)): print(\"OK\")\n    else: print(\"WRONG_ANSWER\")\nelse:\n    n=sorted(n)\n    for i in n:\n        if(i!='0'):\n            t+=i\n            break\n    for i in range(10):\n        l = n.count(str(i))\n        if(t[0]==str(i)): l-=1\n        for j in range(l):\n            t+= str(i)\n    if(t==str(m)): print(\"OK\")\n    else: print(\"WRONG_ANSWER\")"
        },
        {
            "language": 3,
            "solution": "def smallest(lst): \n      \n    for i,n in enumerate(lst):  \n   \n        if n != '0':  \n            tmp = lst.pop(i) \n            break\n    return str(tmp) + ''.join(lst)  \nn=(input())\nm=(input())\nq=list(n)\nq.sort()\nf=0\nif(n!=\"0\"):\n    \n    f=smallest(q)\n    if(f==m):\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\nelif(n==\"0\" and m==\"0\"):\n    print(\"OK\")\n    \n\nelse:\n    print(\"WRONG_ANSWER\")\n\n  \t\t   \t   \t \t\t\t        \t   \t"
        },
        {
            "language": 3,
            "solution": "a=input()\nb=input()\ng=list(a)\n\ng.sort(key=int)\nfor i in range (len(a)):\n    if g[i]!='0':\n        g[0],g[i]=g[i],g[0]\n        break\na=\"\".join(g);\nif a==b :\n    print (\"OK\")\nelse:\n    print (\"WRONG_ANSWER\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s;\nvector<int> v;\nint main(int argc, char const *argv[]) {\n  cin >> s;\n  int n = s.size();\n  sort(s.begin(), s.end());\n  for (int i = 0; i < n; i++) {\n    if (s[i] > '0') {\n      swap(s[0], s[i]);\n      break;\n    }\n  }\n  string q;\n  cin >> q;\n  for (int i = 0; i < n; i++) {\n    if (q.size() != s.size() or q[i] != s[i]) {\n      cout << \"WRONG_ANSWER\" << endl;\n      return 0;\n    }\n  }\n  cout << \"OK\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Task012B {\n\n\tpublic static void main(String... args) throws NumberFormatException,\n\t\t\tIOException {\n\t\tSolution.main(System.in, System.out);\n\t}\n\n\tstatic class Scanner {\n\n\t\tprivate final BufferedReader br;\n\t\tprivate String[] cache;\n\t\tprivate int cacheIndex;\n\n\t\tScanner(InputStream is) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(is));\n\t\t\tcache = new String[0];\n\t\t\tcacheIndex = 0;\n\t\t}\n\n\t\tint nextInt() throws IOException {\n\t\t\tif (cacheIndex >= cache.length) {\n\t\t\t\tcache = br.readLine().split(\" \");\n\t\t\t\tcacheIndex = 0;\n\t\t\t}\n\t\t\treturn Integer.parseInt(cache[cacheIndex++]);\n\t\t}\n\n\t\tlong nextLong() throws IOException {\n\t\t\tif (cacheIndex >= cache.length) {\n\t\t\t\tcache = br.readLine().split(\" \");\n\t\t\t\tcacheIndex = 0;\n\t\t\t}\n\t\t\treturn Long.parseLong(cache[cacheIndex++]);\n\t\t}\n\n\t\tString next() throws IOException {\n\t\t\tif (cacheIndex >= cache.length) {\n\t\t\t\tcache = br.readLine().split(\" \");\n\t\t\t\tcacheIndex = 0;\n\t\t\t}\n\t\t\treturn cache[cacheIndex++];\n\t\t}\n\n\t\tvoid close() throws IOException {\n\t\t\tbr.close();\n\t\t}\n\n\t}\n\n\tstatic class Solution {\n\n\t\tpublic static void main(InputStream is, OutputStream os)\n\t\t\t\tthrows NumberFormatException, IOException {\n\t\t\tPrintWriter pw = new PrintWriter(os);\n\t\t\tScanner sc = new Scanner(is);\n\n\t\t\tString n = sc.next();\n\t\t\tString m = sc.next();\n\n\t\t\tif (n.equals(\"0\")) {\n\t\t\t\tif (m.equals(\"0\")) {\n\t\t\t\t\tpw.println(\"OK\");\n\t\t\t\t\tpw.flush();\n\t\t\t\t\tsc.close();\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tpw.println(\"WRONG_ANSWER\");\n\t\t\t\t\tpw.flush();\n\t\t\t\t\tsc.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tchar nChars[] = n.toCharArray();\n\t\t\tchar mChars[] = m.toCharArray();\n\n\t\t\tif (nChars.length != mChars.length) {\n\t\t\t\tpw.println(\"WRONG_ANSWER\");\n\t\t\t\tpw.flush();\n\t\t\t\tsc.close();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tArrays.sort(nChars);\n\t\t\tArrays.sort(mChars);\n\n\t\t\tfor (int i = 0; i < nChars.length; i++) {\n\t\t\t\tif (nChars[i] != mChars[i]) {\n\t\t\t\t\tpw.println(\"WRONG_ANSWER\");\n\t\t\t\t\tpw.flush();\n\t\t\t\t\tsc.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnChars = n.toCharArray();\n\t\t\tmChars = m.toCharArray();\n\n\t\t\tchar minNChar = '9';\n\t\t\tfor (char c : nChars) {\n\t\t\t\tif (c != '0') {\n\t\t\t\t\tminNChar = (char) Math.min(c, minNChar);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mChars[0] != minNChar) {\n\t\t\t\tpw.println(\"WRONG_ANSWER\");\n\t\t\t\tpw.flush();\n\t\t\t\tsc.close();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (int i = 2; i < mChars.length; i++) {\n\t\t\t\tif (mChars[i] < mChars[i - 1]) {\n\t\t\t\t\tpw.println(\"WRONG_ANSWER\");\n\t\t\t\t\tpw.flush();\n\t\t\t\t\tsc.close();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpw.println(\"OK\");\n\t\t\tpw.flush();\n\t\t\tsc.close();\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "n, m, i = sorted(raw_input()), raw_input(), 0\n\nwhile(i < len(n) and n[i] == '0'):\n   i += 1\n   \nz = n[i: i + 1] + n[0:i]  + n[i + 1:]\n\nif ''.join(z) == m:\n   print \"OK\"\nelse:\n   print \"WRONG_ANSWER\"\n      \n"
        },
        {
            "language": 3,
            "solution": "str_num = input()\nanswer = input()\n\nif str_num == '0':\n    print(\"OK\" if answer==str_num else \"WRONG_ANSWER\")\nelse:\n    import collections\n    dict_num = {}\n    for d in str_num:\n        if d in dict_num:\n            dict_num[d] += 1\n        else:\n            dict_num[d] = 1\n\n    od = collections.OrderedDict(sorted(dict_num.items()))\n    ks = [key for key in od.keys()]\n    vs = [val for val in od.values()]\n    list_ans = []\n    if ks[0] == '0':\n        list_ans.append(ks[1])\n        vs[1] = vs[1]-1\n    for i in range(len(ks)):\n        k = ks[i]\n        for d in range(0, vs[i]):\n            list_ans.append(k)\n    ans = \"\".join(list_ans)\n    print(\"OK\" if answer==ans else \"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\nimport static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;\nimport java.lang.reflect.Array;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.stream.IntStream;\nimport static jdk.nashorn.internal.objects.Global.Infinity;\nimport static jdk.nashorn.internal.objects.Global.NaN;\nimport java.*;\nimport java.util.function.BinaryOperator;\n/**\n *\n * @author george\n */\npublic class main {\n static boolean  isPrime(int n) {\n    for(int i=2;i<n;i++) {\n        if(n%i==0)\n            return false;\n    }\n    return true;\n}\nstatic public class Princess{\n public int rate;public int beauty;public int intellect;public int richness;\n public Princess(int sum,int a,int b,int c){\n  this.rate=sum;\n  this.beauty=a;\n  this.intellect=b;\n  this.richness=c;\n  }\n }\npublic static boolean contains(final int[] arr, final int key) {\n    return Arrays.stream(arr).anyMatch(i -> i == key);\n}\n\n\n       private static int gcdThing(int a, int b) {\n    BigInteger b1 = BigInteger.valueOf(a);\n    BigInteger b2 = BigInteger.valueOf(b);\n    BigInteger gcd = b1.gcd(b2);\n    return gcd.intValue();\n}\n   public static void main (String []  args) \n    {\n    Scanner s=new Scanner(System.in);\n    String n=s.next();String nn=s.next();\n    int[]arr=new int[n.length()];\n        for (int i = 0; i < n.length(); i++) {arr[i]=n.charAt(i)-48;}\n        Arrays.sort(arr);\n        int z=0;int index=-1;\n        for (int i = 0; i < arr.length; i++) {if(arr[i]==0){z++;}\n        if(arr[i]!=0){index=i;break;}\n        }\n        String x =\"\";\n        boolean f=false;\n        if(z==0){\n            for(int i : arr) {\n            x+=Integer.toString(i);\n        }\n        \n            if(x.equals(nn)){f=true;}\n            \n        }\n        else if(index==-1&&z!=0){x+=48;if(n.equals(nn)){f=true;}}\n        else{\n            \n            x+=Integer.toString(arr[index]);\n            for (int i = 0; i < z; i++) {\n                x+=Integer.toString(0);\n            }\n            \n            for (int i = index+1; i < arr.length; i++) {\n                x+=Integer.toString(arr[i]);\n            }\n            if(x.equals(nn)){f=true;}\n           \n        }\n        if(f==true){System.out.print(\"OK\");}\n        else {System.out.print(\"WRONG_ANSWER\");}\n}\n}\n\n   \n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, ans;\n  cin >> s;\n  cin >> ans;\n  sort(s.begin(), s.end());\n  int k = s.find_first_not_of('0');\n  if (k != -1) swap(s[0], s[k]);\n  if (s == ans) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar n[2000000], m[2000000];\nint k;\nint main() {\n  scanf(\"%s\\n\", n);\n  scanf(\"%s\", m);\n  if (strcmp(n, \"0\") == 0) {\n    if (strcmp(m, \"0\") == 0)\n      printf(\"OK\");\n    else\n      printf(\"WRONG_ANSWER\");\n    return 0;\n  }\n  sort(n, n + strlen(n));\n  k = 0;\n  while (n[k] == '0') k++;\n  swap(n[k], n[0]);\n  if (strcmp(n, m) == 0)\n    printf(\"OK\");\n  else\n    printf(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint c(const void *a, const void *b) {\n  return (int)*(char *)a - (int)*(char *)b;\n}\nint main() {\n  char dig[15];\n  char ans[15];\n  scanf(\"%s %s\", dig, ans);\n  qsort(dig, strlen(dig), sizeof(char), c);\n  if (dig[0] == '0' && dig[1] != 0) {\n    char *p;\n    for (p = dig; *p == '0'; p++)\n      ;\n    dig[0] = *p;\n    *p = '0';\n  }\n  if (strcmp(dig, ans) == 0)\n    puts(\"OK\");\n  else\n    puts(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\n\n\nimport java.util.*;\nimport java.util.stream.IntStream;\npublic class random_num {\n\tpublic static void main(String args[]){\n\t\tInputReader s= new InputReader(System.in);\n\t\tOutputStream outputStream= System.out;\n\t\tPrintWriter out= new PrintWriter(outputStream);\n\t\tString str[]=s.nextLine().split(\"\");\n\t\tString ss=s.nextLine();\n\t\tint a[]=new int[str.length];\n\t\tint min=Integer.MAX_VALUE,minindex=0;\n\t\t\n\t\tfor(int i=0;i<str.length;i++){\n\t\t\ta[i]=Integer.parseInt(str[i]);\n\t\t}\n\t\tArrays.sort(a);\n\t\tfor(int i=0;i<str.length;i++){\n\t\t\tif(a[i]<min && a[i]!=0){\n\t\t\t\tmin=a[i];\n\t\t\t\tminindex=i;\n\t\t\t}\n\t\t}\n\t\t//System.out.println(min+\" \"+minindex);\n\t\t\n\t\tint temp=a[minindex];\n\t\ta[minindex]=a[0];\n\t\ta[0]=temp;\n\t\tint num=0,point=1;\n\t\tfor(int i=str.length-1;i>=0;i--){\n\t\t\tnum+=a[i]*point;\n\t\t\tpoint*=10;\n\t\t}\n\t\tString st=Integer.toString(num);\n\t\t//System.out.println(ss+\" \"+st);\n\t\tif(st.equals(ss)){\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\telse\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\n\t\t//out.close();\n\t\t\n\t}\n\tstatic class InputReader {\n\t\t\n\t    public BufferedReader reader;\n\t    public StringTokenizer tokenizer;\n \n\t    public InputReader(InputStream inputstream) {\n\t      reader = new BufferedReader(new InputStreamReader(inputstream));\n\t      tokenizer = null;\n\t    }\n\t    \n\t    public String nextLine(){\n\t    \tString fullLine=null;\n\t    \twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t            try {\n\t              fullLine=reader.readLine();\n\t            } catch (IOException e) {\n\t              throw new RuntimeException(e);\n\t            }\n\t            return fullLine;\n\t          }\n\t          return fullLine;\n\t    }\n\t\tpublic String next() {\n\t      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t        try {\n\t          tokenizer = new StringTokenizer(reader.readLine());\n\t        } catch (IOException e) {\n\t          throw new RuntimeException(e);\n\t        }\n\t      }\n\t      return tokenizer.nextToken();\n\t    }\n\t\tpublic long nextLong() {\n\t\t      return Long.parseLong(next());\n\t\t    }\n\t    public int nextInt() {\n\t      return Integer.parseInt(next());\n\t    }\n\t  }\n\tpublic static int gcd(int number1, int number2) {  \n\t\tif(number2 == 0){\n\t\t\treturn number1;\n\t\t} \n\t\treturn gcd(number2, number1%number2); \n\t}\n\tpublic static int combinations(int n,int r){\n\t\tif(n==r) return 1;\n\t\tif(r==1) return n;\n\t\tif(r==0) return 1;\n\t\treturn combinations(n-1,r)+ combinations(n-1,r-1);\n\t}\n\tpublic static long binomialCoeff(int n, int k)\n\t{\n\t    long C[][]= new long[n+1][k+1];\n\t    int i, j;\n\t \n\t    // Caculate value of Binomial Coefficient in bottom up manner\n\t    for (i = 0; i <= n; i++)\n\t    {\n\t        for (j = 0; j <= Math.min(i, k); j++)\n\t        {\n\t            // Base Cases\n\t            if (j == 0 || j == i)\n\t                C[i][j] = 1;\n\t \n\t            // Calculate value using previosly stored values\n\t            else\n\t                C[i][j] = C[i-1][j-1] + C[i-1][j];\n\t        }\n\t    }\n\t \n\t    return C[n][k];\n\t}\n\tpublic static int expo(int a, int b){\n\t    if (b==1)\n\t        return a;\n\t    if (b==2)\n\t        return a*a;\n\n\t    if (b%2==0){\n\t            return expo(expo(a,b/2),2);\n\t    }\n\t    else{\n\t        return a*expo(expo(a,(b-1)/2),2);\n\t    }\n\t}\n\t\n\tpublic static void sieve(int N){\n\t\tint arr[]= new int[N+1];\n\t\tfor(int i=2;i<Math.sqrt(N);i++){\n\t\t\tif(arr[i]==0){\n\t\t\t\tfor(int j= i*i;j<= N;j= j+i){\n\t\t\t\t\tarr[j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// All the i for which arr[i]==0 are prime numbers.\n\t}\n\tstatic class Pair implements Comparable<Pair>\n    {\n        int f,s;\n        Pair(int ii, int cc)\n        {\n            f=ii;\n            s=cc;\n        }\n        \n        public int compareTo(Pair o) \n        {\n            return Integer.compare(this.f, o.f);\n        }\n        \n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\npublic class CorrectSolution\n{\n\tScanner in;\n\tPrintWriter out;\n\t\n\tCorrectSolution()\n\t{\n\t\tin = new Scanner(System.in);\n\t\tout = new PrintWriter(System.out);\n\t}\n\t\n\tpublic void finalize()\n\t{\n\t\tout.flush();\n\t\tin.close();\n\t\tout.close();\n\t}\n\t\n\t/*\n\tpublic static boolean isSmallest(String a, String b)\n\t{\n\t\tint[] ar = new int[10];\n\t\tString k = a;\n\t\tArrays.fill(ar, -1);\n\t\tStringBuilder s = new StringBuilder();\n\t\t\n\t\tfor(int i = a.length() - 1; i >= 0; --i)\n\t\t{\n\t\t\tint rem = a.charAt(i) - '0';\n\t\t\t\n\t\t\tif(ar[rem] == -1)\n\t\t\t\tar[rem] += 2;\n\t\t\telse\n\t\t\t\tar[rem] += 1;\n\t\t}\n\t\t\n\t\tfor(int i = 1; i < ar.length; ++i)\n\t\t{\n\t\t\tif(ar[i] != -1)\n\t\t\t{\n\t\t\t\tar[i] -= 1;\n\t\t\t\ts.append(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < ar.length; ++i)\n\t\t\tif(ar[i] != 0 || ar[i] != -1)\n\t\t\t\twhile(ar[i] > 0)\n\t\t\t\t{\n\t\t\t\t\tar[i] -= 1;\n\t\t\t\t\ts.append(i);\n\t\t\t\t}\n\t\t\n\t\tString val = s.toString();\n\t\treturn val.equals(b);\n\t}\n\t*/\n\t\n\tpublic boolean isSmallest(String a, String b)\n\t{\n\t\tint lb = a.length();\n\t\tString buf = \"\";\n\t\tboolean fz = false;\n\t\tchar[] cb = a.toCharArray();\n\t\t\n\t\tArrays.sort(cb);\n\t\t\n\t\tif(lb >= 2 && cb[0] == '0')\n\t\t{\n\t\t\tbuf += cb[1];\n\t\t\tbuf += cb[0];\n\t\t\tfz = true;\n\t\t}\n\t\t\n\t\tint i = fz ? 2 : 0;\n\t\tfor(; i < lb; ++i)\n\t\t\tbuf += cb[i];\n\t\t\n\t\t//out.println(\"buf \" + buf);\n\t\treturn buf.equals(b);\n\t}\n\t\n\tvoid solve()\n\t{\n\t\tString\n\t\t\t\ta = in.nextLine().trim(),\n\t\t\t\tb = in.nextLine().trim();\n\t\t\n\t\tout.println(isSmallest(a, b) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n\t\n\tpublic static void main(String[] args) throws FileNotFoundException\n\t{\n\t\tCorrectSolution t = new CorrectSolution();\n\t\tt.solve();\n\t\tt.finalize();\n\t}\n}\n\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nm = raw_input()\n\nn = list(n)\nn.sort()\ni = 0\nl=len(n)\nwhile i<l and n[i]==\"0\":\n\ti+=1\n\nif i!=0 and i<l:\n\tn[0]=n[i]\n\tn[i]=\"0\"\n\nr = \"\".join(n)\nif r == m:\n\tprint \"OK\"\nelse:\n\tprint \"WRONG_ANSWER\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  cin.sync_with_stdio(false);\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  long long j = 1;\n  while (a[0] == '0' && j < a.size()) {\n    if (a[j] != 0) {\n      swap(a[0], a[j]);\n      j++;\n      break;\n    }\n  }\n  if (a == b)\n    cout << \"OK\";\n  else {\n    cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, s1;\n  int arr[100], a2[100];\n  cin >> s >> s1;\n  int flag = 0;\n  if (s.size() != s1.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  for (int i = 0; i < s.size(); i++) {\n    arr[i] = s[i] - '0';\n    a2[i] = s1[i] - '0';\n    if (arr[i] == 0) flag = 1;\n  }\n  sort(arr, arr + s.size());\n  if (flag == 0) {\n    for (int i = 0; i < s.size(); i++) {\n      if (arr[i] != a2[i]) {\n        cout << \"WRONG_ANSWER\";\n        return 0;\n      }\n    }\n    cout << \"OK\";\n  } else {\n    int i = 1;\n    while ((arr[i] == arr[0]) && i < s.size()) i++;\n    swap(arr[0], arr[i]);\n    for (int i = 0; i < s.size(); i++) {\n      if (arr[i] != a2[i]) {\n        cout << \"WRONG_ANSWER\";\n        return 0;\n      }\n    }\n    cout << \"OK\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint uz, B[100], temp, uz2, C[100];\nstring a, q;\nint main() {\n  cin >> a;\n  cin >> q;\n  uz2 = q.size();\n  uz = a.size();\n  if (uz != uz2) {\n    printf(\"WRONG_ANSWER\");\n    return 0;\n  }\n  for (int i = 0; i <= uz - 1; i++) {\n    C[i + 1] = q[i] - 48;\n  }\n  for (int i = 0; i <= uz - 1; i++) {\n    B[i + 1] = a[i] - 48;\n  }\n  sort(B + 1, B + uz + 1);\n  for (int i = 1; i <= uz; i++) {\n    if (B[i] != 0 && B[1] == 0) {\n      temp = B[i];\n      B[i] = B[1];\n      B[1] = temp;\n      break;\n    }\n  }\n  for (int i = 1; i <= uz; i++) {\n    if (B[i] != C[i]) {\n      printf(\"WRONG_ANSWER\");\n      return 0;\n    }\n  }\n  printf(\"OK\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from math import *\n\nn = raw_input()\nm = raw_input()\nl = list(n)\nl.sort()\nzeros = 0\ni = 0\nwhile (i < len(l)) and (l[i] == '0'):\n    i += 1\n    zeros += 1\nif i == len(l):\n    t = ['0']*i\nelse:\n    d = l[i]\n    t = [d] + ['0'] * i + l[i+1:]\nans = ''\nfor c in t:\n    ans += c\nif m == ans:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n\n\n\n\"\"\"from math import *\nfrom Queue import *\n\ndef bfs(G, start):\n    visited = set([start])\n    Q = Queue()\n    Ret = [start]\n    Q.put(start)\n    while not Q.empty():\n        vertex = Q.get()\n        for v in G[1][vertex]:\n            if v not in visited:\n                Q.put(v)\n                visited.add(v)\n                Ret.append(v)\n    return Ret\n\ndef longest_path(G):\n    l = bfs(G,G[0][0])\n    marked = set()\n    result = dict()\n    for i in l:\n        result[i] = [0,i,0,i]\n    for i in range(len(l)-1, -1, -1):\n        for j in G[1][l[i]]:\n            if j in marked:\n                if (result[j][2] > result[l[i]][2]) or ((result[j][2] == result[l[i]][2]) and (result[j][3] < result[l[i]][3])):\n                    result[l[i]][2] = result[j][2]\n                    result[l[i]][3] = result[j][3]\n                if (result[l[i]][0] + result[j][0] + 1 > result[l[i]][2]):\n                    result[l[i]][2] = result[l[i]][0] + result[j][0] + 1\n                    result[l[i]][3] = min(result[l[i]][1], result[j][1])\n                if ((result[l[i]][0] + result[j][0] + 1 == result[l[i]][2]) and (min(result[l[i]][1],result[j][1]) < result[l[i]][3])):\n                    result[l[i]][3] = min(result[l[i]][1],result[j][1])\n                if (result[j][0] + 1 > result[l[i]][0]) or ((result[j][0] + 1 == result[l[i]][0]) and (result[j][1] < result[l[i]][1])):\n                    result[l[i]][0] = result[j][0] + 1\n                    result[l[i]][1] = result[j][1]\n        marked.add(l[i])\n    return (result[l[0]][2], result[l[0]][3])\n\ndef remove(G,v):\n    ver = G[0]\n    ver.remove(v)\n    edg = dict()\n    for i in ver:\n        nb = []\n        for j in G[1][i]:\n            if j != v:\n                nb.append(j)\n        edg[i] = nb\n    return (ver, edg)\n\ndef harvest(G,M):\n    l = bfs(G,M[0])\n    seen = set()\n    delete = []\n    for i in range(len(l)-1, -1, -1):\n        seen.add(l[i])\n        if l[i] in M:\n            for j in G[1][l[i]]:\n                if j not in seen:\n                    M.append(j)\n        if l[i] not in M:\n            delete.append(l[i])\n    for i in delete:\n        G = remove(G,i)\n    return G\n\ns = raw_input()\nl = s.split(' ')\nn = int(l[0])\nm = int(l[1])\nV = []\nAdj = [[] for i in range(n+1)]\nfor i in range(1,n+1):\n    V.append(i)\nE = dict()\nfor i in range(n-1):\n    s = raw_input()\n    l = s.split(' ')\n    h = int(l[0])\n    t = int(l[1])\n    Adj[h].append(t)\n    Adj[t].append(h)\nE = dict()\nfor i in range(1, n+1):\n    E[i] = Adj[i]\nG = [V,E]\ns = raw_input()\nl = s.split(' ')\nM = []\nfor i in range(m):\n    M.append(int(l[i]))\nG = harvest(G,M)\nsol = longest_path(G)\nprint(sol[1])\nprint(2*len(G[0]) - 2 - sol[0])\"\"\"\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\t\n\t\tchar a[]=sc.next().toCharArray();\n\t\tchar b[]=sc.next().toCharArray();\n\t\tchar c;\n\t\tArrays.sort(a);\n\t\tint i=1;\n\t\twhile(a[0]=='0'&&a.length!=1)\n\t\t{\n\t\t\tc=a[0];\n\t\t\ta[0]=a[i];\n\t\t\ta[i]=c;\n\t\t\ti++;\n\t\t}\n\t\tif((new String(a)).equals(new String(b)))\n\t\t\tSystem.out.println(\"OK\");\n\t\telse\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\tsc.close();\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def sort(items):\n\tc = -1\n\n\twhile c != 0:\n\t\tc = 0\n\n\t\tfor i in range(0, len(items) - 1):\n\t\t\tif items[i] > items[i + 1]:\n\t\t\t\titems[i], items[i + 1] = items[i + 1], items[i]\n\t\t\t\tc += 1\n\n\treturn items\n\ndef intListToString(items):\n\tresult = \"\"\n\n\tfor item in items:\n\t\tresult += str(item)\n\n\treturn result\n\nquestion = list(input())\nanswer = input()\n\nfor i in range(0, len(question)):\n\tquestion[i] = int(question[i])\n\nquestion = sort(question)\n\nif question[0] == 0:\n\tfound = -1\n\n\tfor i in range(0, len(question)):\n\t\tif question[i] != 0:\n\t\t\tfound = i\n\t\t\tbreak\n\n\tif found != -1:\n\t\tquestion[0], question[found] = question[found], question[0]\n\nif intListToString(question) == answer:\n\tprint(\"OK\")\nelse:\n\tprint(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\npublic class correct12b {\n    \n    public static void main (String args[]) throws IOException\n    {\n        //BufferedReader cin  = new BufferedReader(new FileReader(\"c:\\\\input.txt\"));\n        BufferedReader cin = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter cout = new PrintWriter(System.out);\n        \n        String s = cin.readLine();\n        String a = cin.readLine();\n        if (s.length() != 1)\n        {\n            int min = 10;\n            int minIndex = -1;\n            int pointer = 0;\n            for (int i = 0; i < s.length(); i++)\n            {\n                int n = Integer.parseInt(s.substring(i, i + 1));\n                if (n < min && n != 0)\n                {\n                    min = n;\n                    minIndex = i;\n                }\n            }\n            if (minIndex != -1)//we can make a swap\n            {\n                StringBuilder sb = new StringBuilder(s);\n                char temp;\n                temp = sb.charAt(0);\n                sb.setCharAt(0,s.charAt(minIndex));\n                sb.setCharAt(minIndex, temp);\n                boolean hasSwap = true;\n                pointer++;\n                while(hasSwap && pointer < s.length() - 1)\n                {\n                    hasSwap = false;\n                    min = sb.charAt(pointer);\n                    minIndex = pointer;\n                    for (int i = pointer; i < s.length(); i++)\n                    {\n                        int n = Integer.parseInt(sb.substring(i, i + 1));\n                        if (n <= min)\n                        {\n                            min = n;\n                            minIndex = i;\n                            hasSwap = true;\n                        }\n                    }\n                    temp = sb.charAt(pointer);\n                    sb.setCharAt(pointer,sb.charAt(minIndex));\n                    sb.setCharAt(minIndex, temp);\n                    pointer++;\n                }\n                if (a.equals(sb.toString()))\n                {\n                    System.out.println(\"OK\");\n                }\n                else\n                {\n                    System.out.println(\"WRONG_ANSWER\");\n                }\n            }\n            else //no swap possible\n            {\n                if (s.equals(a))\n                {\n                    System.out.println(\"OK\");\n                }\n                else\n                {\n                    System.out.println(\"WRONG_ANSWER\");\n                }\n            }\n        }\n        else\n        {\n            if (s.equals(a))\n            {\n                System.out.println(\"OK\");\n            }\n            else\n            {\n                System.out.println(\"WRONG_ANSWER\");\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\n\npublic class SNumber\n{\n\tpublic static boolean isSmallest(String a, String b)\n\t{\n\t\tint[] ar = new int[10];\n\t\tString k = a;\n\t\tArrays.fill(ar, -1);\n\t\tStringBuilder s = new StringBuilder();\n\t\t\n\t\tfor(int i = a.length() - 1; i >= 0; --i)\n\t\t{\n\t\t\tint rem = a.charAt(i) - '0';\n\t\t\t\n\t\t\tif(ar[rem] == -1)\n\t\t\t\tar[rem] += 2;\n\t\t\telse\n\t\t\t\tar[rem] += 1;\n\t\t}\n\t\t\n\t\tfor(int i = 1; i < ar.length; ++i)\n\t\t{\n\t\t\tif(ar[i] != -1)\n\t\t\t{\n\t\t\t\tar[i] -= 1;\n\t\t\t\ts.append(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < ar.length; ++i)\n\t\t\tif(ar[i] != 0 || ar[i] != -1)\n\t\t\t\twhile(ar[i] > 0)\n\t\t\t\t{\n\t\t\t\t\tar[i] -= 1;\n\t\t\t\t\ts.append(i);\n\t\t\t\t}\n\t\t\n\t\tString val = s.toString();\n\t\treturn val.equals(b);\n\t}\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tString a, b;\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\ta = in.nextLine().trim();\n\t\tb = in.nextLine().trim();\n\t\t\n\t\tSystem.out.println(isSmallest(a, b) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n}\n\n"
        },
        {
            "language": 1,
            "solution": "import itertools\n\nnumber1 = list(raw_input())\nnumber2 = list(raw_input())\nt = ['0']\n\nnumber1.sort(reverse = False)\nfor number in itertools.permutations(number1):\n    if(number[0] != '0'):\n        t = number\n        break\n    \nif(list(t) == number2):\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\"\n     \n    \n    \n    "
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author bkand1908\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTask12B solver = new Task12B();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass Task12B {\n\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n        char[] c = in.next().toCharArray();\n        String answer = in.next();\n        Arrays.sort(c);\n        if (c[0] == '0') {\n            for (int i = 1; i < c.length; ++i)\n                if (c[i] > '0') {\n                    c[0] = c[i];\n                    c[i] = '0';\n                    break;\n                }\n        }\n        if ((new String(c)).equals(answer))\n            out.println(\"OK\");\n        else\n            out.println(\"WRONG_ANSWER\");\n\t}\n}\n\nclass InputReader {\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n                this.stream = stream;\n        }\n\n        public int read() {\n                if (numChars == -1)\n                        throw new InputMismatchException();\n                if (curChar >= numChars) {\n                        curChar = 0;\n                        try {\n                                numChars = stream.read(buf);\n                        } catch (IOException e) {\n                                throw new InputMismatchException();\n                        }\n                        if (numChars <= 0)\n                                return -1;\n                }\n                return buf[curChar++];\n        }\n\n        public String readString() {\n                int c = read();\n                while (isSpaceChar(c))\n                        c = read();\n                StringBuffer res = new StringBuffer();\n                do {\n                        res.appendCodePoint(c);\n                        c = read();\n                } while (!isSpaceChar(c));\n                return res.toString();\n        }\n\n        private boolean isSpaceChar(int c) {\n                return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n                return readString();\n        }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nint a[20];\nint i, j;\nint ans, sum, mark;\nchar aa[20];\nchar bb[20];\nint main() {\n  scanf(\"%s\", &aa);\n  scanf(\"%s\", &bb);\n  if (strlen(aa) != strlen(bb)) {\n    printf(\"WRONG_ANSWER\\n\");\n    return 0;\n  }\n  for (i = 0; i < strlen(aa); i++) {\n    n = n * 10 + aa[i] - '0';\n  }\n  for (i = 0; i < strlen(bb); i++) {\n    m = m * 10 + bb[i] - '0';\n  }\n  i = 1;\n  while (n > 0) {\n    a[i] = n % 10;\n    n = n / 10;\n    i++;\n  }\n  sort(a + 1, a + i);\n  ans = 0;\n  sum = 0;\n  for (j = 1; j < i; j++) {\n    if (a[j] == 0)\n      sum++;\n    else {\n      if (mark == 0) {\n        mark = 1;\n        ans += a[j];\n        while (sum--) {\n          ans = ans * 10;\n        }\n      } else\n        ans = ans * 10 + a[j];\n    }\n  }\n  if (ans == m)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "def solve():\n    digits = [0]*10\n    n = list(raw_input().strip())\n    for i in n:\n        digits[int(i)] += 1\n    m = list(raw_input().strip())\n    if len(n)!=len(m):\n        return 1\n    prev = 0\n    for i in xrange(1,10):\n        if digits[i]!=0:\n            if m[0] != str(i):\n                return 1\n            digits[i] -= 1\n            m.pop(0)\n            break\n    for i in m:\n        if i>=prev:\n            digits[int(i)] -= 1\n            prev = i\n        else:\n            return 1\n    for i in digits:\n        if i!=0:\n            return 1\n    return 0\n\nx = ['OK', 'WRONG_ANSWER']\nprint x[solve()]\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic Scanner in;\n\tstatic PrintWriter out;\n//\tstatic StreamTokenizer in; static int next() throws Exception {in.nextToken(); return (int) in.nval;}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tin = new Scanner(System.in);\n\t\tout = new PrintWriter(System.out);\n//\t\tin = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n\t\t\n\t\tString s = in.nextLine();\n\t\tif (s.charAt(0) == '0') {\n\t\t\tout.println(\"0\".equals(in.nextLine()) ? \"OK\" : \"WRONG_ANSWER\");\n\t\t\tout.close();\n\t\t\treturn;\n\t\t}\n\t\tArrayList<Integer> d = new ArrayList<Integer>();\n\t\tint z = 0;\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tif (s.charAt(i) == '0') z++;\n\t\t\telse d.add(s.charAt(i) - '0');\n\t\t}\n\t\tString answ = \"\";\n\t\tCollections.sort(d);\n\t\tansw += d.get(0);\n\t\tfor (int i = 0; i < z; i++) answ += \"0\";\n\t\tfor (int i = 1; i < d.size(); i++)  answ += d.get(i);\n\n\t\tout.println(answ.equals(in.nextLine()) ? \"OK\" : \"WRONG_ANSWER\");\n\n\t\tout.close();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\ntemplate <typename T, typename U>\ninline void swap(T &a, U &b) {\n  a = a ^ b;\n  b = a ^ b;\n  a = a ^ b;\n}\ninline void swap(int &a, int &b) {\n  a = a ^ b;\n  b = a ^ b;\n  a = a ^ b;\n}\ninline void swap(long long &a, long long &b) {\n  a = a ^ b;\n  b = a ^ b;\n  a = a ^ b;\n}\ntemplate <typename T, typename U>\ninline void smax(T &a, U b) {\n  if (b > a) a = b;\n}\ntemplate <typename T, typename U>\ninline void smin(T &a, U b) {\n  if (b < a) a = b;\n}\ninline int gcd(int a, int b) {\n  if (a < b) swap(a, b);\n  while (b > 0) {\n    a %= b;\n    swap(a, b);\n  }\n  return a;\n}\nlong long nchose(int a, int b) {\n  long long ans = 1;\n  smax(a, b - a);\n  int p = 2;\n  for (int i = (b - a + 1); i <= (b); i++) {\n    ans *= (long long)i;\n    while (p <= a && ans % p == 0) ans /= p++;\n  }\n  return ans;\n}\nusing namespace std;\nstatic long long MOD = 1000000009;\nstring s, t;\nint main() {\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  for (char &i : s) {\n    if (i != '0') {\n      swap(i, s[0]);\n      break;\n    }\n  }\n  if (s == t) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "a , b = input() , input()\nif a == '0':\n    if b == '0':\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\nelse:   \n    x,y = list(a) , list(b)\n    x.sort()\n    i = 0\n    while x[i] == '0':\n        i += 1\n    x[i] , x[0] = x[0] ,x[i]\n\n    if x == y:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, t;\nstring doi(int x) {\n  stringstream ss;\n  ss << x;\n  return ss.str();\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> s >> t;\n  if (s.size() != t.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  sort(s.begin(), s.end());\n  int i = 0;\n  while (s[i] == 48 && i < s.size() - 1) i++;\n  swap(s[i], s[0]);\n  if (t == s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid leading_zero(string& s) {\n  int j = 0;\n  for (int i = 0; i < s.size(); ++i) {\n    if (s[i] != '0') {\n      j = i;\n      break;\n    }\n  }\n  swap(s[0], s[j]);\n}\nint main() {\n  string n, m;\n  cin >> n >> m;\n  sort(n.begin(), n.end());\n  if (n.front() == '0') leading_zero(n);\n  cout << ((n == m) ? \"OK\\n\" : \"WRONG_ANSWER\\n\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  string n, m;\n  cin >> n;\n  cin >> m;\n  sort(n.begin(), n.end());\n  int pos = 0;\n  for (int i = 0; i < n.size(); i++) {\n    if (n[i] != '0') {\n      pos = i;\n      break;\n    }\n  }\n  if (n[0] == '0') swap(n[0], n[pos]);\n  if (m == n)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-9;\nstring s, t;\nint main() {\n  cin >> s;\n  cin >> t;\n  sort(s.begin(), s.end());\n  if (s[0] == '0')\n    for (int i = 0; i < s.size(); i++)\n      if (s[i] != '0') {\n        swap(s[0], s[i]);\n        break;\n      }\n  if (s == t)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "first =list(input())# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u043c\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438  ['3', '3', '1', '0']\nsecond = input() \nfirst_reverse = sorted(first) # \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u043c\nif first_reverse[0] == \"0\": # \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 0, \u0442\u043e \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435 \u0441\u043f\u0438\u0441\u043e\u043a, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u043e\u0442 0 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n\tfor i in first_reverse:\n\t\tif i != \"0\":\n\t\t\ty =first_reverse.index(i)# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0438\u043d\u0434\u0435\u043a\u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043e\u0442\u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043e\u0442 \u043d\u0443\u043b\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\n\t\t\tfirst_reverse[0],first_reverse[y] = first_reverse[y],first_reverse[0]# \u043c\u0435\u043d\u044f\u0435\u043c \u043c\u0435\u0441\u0442\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0431\u0435\u0437 \u043f\u043e\u043c\u043e\u0437\u0438 \u0431\u0443\u0444\u0435\u0440\u043d\u043e\u0439 \u043f\u0435\u0440\n\t\t\tbreak\nresult = ''.join(first_reverse)# \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u043e\u0435\u0434\u0438\u043d\u043e\nif result == second:#\u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \n\tprint(\"OK\")\nelse: print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class NewClass {\n    static final int INF = Integer.MAX_VALUE;\n static void mergeSort(int[] a, int p, int r)\n    {\n        if( p < r )\n        {\n            int q = (p + r) / 2;\n            mergeSort(a, p, q);\n            mergeSort(a, q + 1, r);\n            merge(a, p, q, r);\n        }\n    }\n\n\n    static void merge(int[] a, int p, int q, int r)\n    {\n       int n1 = q - p + 1;\n       int n2 = r - q;\n       int[] L = new int[n1+1], R = new int[n2+1];\n       \n       for(int i = 0; i < n1; i++)  L[i] = a[p + i];\n       for(int i = 0; i < n2; i++)  R[i] = a[q + 1 + i];\n       L[n1] = R[n2] = INF;\n       \n       for(int k = p, i = 0, j = 0; k <= r; k++)\n           if(L[i] <= R[j])\n               a[k] = L[i++];\n           else\n               a[k] = R[j++];\n    }  \n    \n    \n    public static boolean sieve(int n){\n        int a[] = new int[n+1];\n        for (int i = 2; i <= n; i++) a[i]=1;\n        for (int i = 2; i <=Math.sqrt(n); i++) {\n            if (a[i]==1) {\n                for (int k = 2; i*k <=n; k++) {\n                    a[i*k]=0;\n                }\n            }\n        }\n        return a[n]==1;\n    }\n    public static boolean zero(long f){\n        long w=f;\n        int co=0;\n        while (w>0) {            \n            if (w%2==0) {\n                co++;\n                w/=2;   \n            }\n            if (co>1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static String reve(int a,int b,String s){\n        String q=\"\";\n        for (int i = b; i >=a; i--) {\n            q+=s.charAt(i);\n        }\n        return q;\n    }\n    \n    public static void main(String[] args) throws IOException {\n        InputReader in = new InputReader(System.in);\n        OutputWriter or = new OutputWriter(System.out);\n           char[] h = in.readString().toCharArray();\n           String a= in.readString();\n           if (h.length!=a.length()) {\n            or.print(\"WRONG_ANSWER\");\n            or.flush();\n            return;\n        }\n           Arrays.sort(h);\n        \n           if (h[0]=='0' &&h.length>1) {\n            char y=h[1];\n            h[0]=y;\n            h[1]='0';\n        }\n           boolean c= true;\n           for (int i = 0; i < a.length(); i++) {\n               if (h[i]!=a.charAt(i)) {\n                   c=false;\n                   break;\n               }\n        }\n           or.print(c?\"OK\":\"WRONG_ANSWER\");\n           or.flush();\n    }\n}\n\nclass InputReader {\n\n    private final InputStream stream;\n    private final byte[] buf = new byte[8192];\n    private int curChar, snumChars;\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n    public int read() {\n        if (snumChars == -1) {\n            throw new InputMismatchException();\n        }\n        if (curChar >= snumChars) {\n            curChar = 0;\n            try {\n                snumChars = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (snumChars <= 0) {\n                return -1;\n            }\n        }\n        return buf[curChar++];\n    }\n\n    public int nextInt() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int res = 0;\n        do {\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public long nextLong() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        long res = 0;\n        do {\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public int[] nextIntArray(int n) {\n        int a[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    public String readString() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        StringBuilder res = new StringBuilder();\n        do {\n            res.appendCodePoint(c);\n            c = read();\n        } while (!isSpaceChar(c));\n        return res.toString();\n    }\n\n    public String nextLine() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        StringBuilder res = new StringBuilder();\n        do {\n            res.appendCodePoint(c);\n            c = read();\n        } while (!isEndOfLine(c));\n        return res.toString();\n    }\n\n    public boolean isSpaceChar(int c) {\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    private boolean isEndOfLine(int c) {\n        return c == '\\n' || c == '\\r' || c == -1;\n    }\n\n}\n\nclass OutputWriter {\n\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n        this.writer = new PrintWriter(writer);\n    }\n\n    public void print(Object... objects) {\n        for (int i = 0; i < objects.length; i++) {\n            if (i != 0) {\n                writer.print(' ');\n            }\n            writer.print(objects[i]);\n        }\n    }\n\n    public void printLine(Object... objects) {\n        print(objects);\n        writer.println();\n    }\n\n    public void close() {\n        writer.close();\n    }\n\n    public void flush() {\n        writer.flush();\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint x[10], y;\nint main() {\n  int a, m = 100;\n  string b, res = \"\";\n  cin >> a >> b;\n  if ((signed)b.size() == 1) {\n    if (b[0] - '0' == a)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  while (a) {\n    x[a % 10]++;\n    if ((m > a % 10) && (a % 10 != 0)) m = a % 10;\n    a /= 10;\n  }\n  if (m != 100) {\n    x[m]--;\n    y = m;\n  }\n  for (int i = 0;; i++) {\n    if (i == 10) break;\n    while (x[i]) {\n      x[i]--;\n      y *= 10;\n      y += i;\n    }\n  }\n  while (y) {\n    res += (char)((y % 10) + '0');\n    y /= 10;\n  }\n  bool f = 1;\n  int n = (signed)res.size();\n  if (n != (signed)b.size()) f = 0;\n  if (f)\n    for (int i = 0; i < n; i++)\n      if (res[i] != b[n - i - 1]) f = 0;\n  if (f)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\nCreated on Jan 25, 2015\n\n@author: mohamed265\n'''\nnum = input()\nress = input()\nres = []\nfor i in range(len(ress)):\n    res.append(ress[i])\nnum = sorted(num)\n#print(res,num)\nindex = 0\nfor i in range(len(num)):\n    if num[i] != '0':\n        index = i\n        break\nif index == 0:\n    print(\"OK\") if num == res else print(\"WRONG_ANSWER\")\nelse:\n    #print(num,index)\n    temp = [num[index]] \n    for i in range(index):\n        temp.append(\"0\")\n    for i in range(index+1,len(num)):\n        temp .append( num[i])\n    #print(temp)\n    print(\"OK\") if temp == res else print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class taskB implements Runnable {\n\n  private void solve() throws IOException {\n    String str = nextToken();\n    String str1 = nextToken();\n    String t = new String();\n\n    boolean[] used = new boolean[str.length()];\n\n    int min = 0;\n    for (int i = 0; i < str.length(); i++) {\n      char ch = str.charAt(i);\n      if (ch != '0' && ch < str.charAt(min)) min = i;\n    }\n    used[min] = true;\n    t += str.charAt(min);\n\n    for (int j = 0; j < str.length() - 1; j++) {\n      min = 0;\n      for (int i = 0; i < str.length(); i++)\n        if (!used[i]) min = i;\n      for (int i = 0; i < str.length(); i++) {\n        char ch = str.charAt(i);\n        if (ch < str.charAt(min) && !used[i]) min = i;\n      }\n      used[min] = true;\n      t += str.charAt(min);\n    }\n    if (t.compareTo(str1) == 0)\n      writer.print(\"OK\");\n    else\n      writer.print(\"WRONG_ANSWER\");\n  }\n\n  public static void main(String[] args) {\n    new taskB().run();\n  }\n\n  BufferedReader reader;\n  StringTokenizer tokenizer;\n  PrintWriter writer;\n\n  public void run() {\n    try {\n      reader = new BufferedReader(new InputStreamReader(System.in));\n      tokenizer = null;\n      writer = new PrintWriter(System.out);\n      solve();\n      reader.close();\n      writer.close();\n    } catch (Exception e) {\n      e.printStackTrace();\n      System.exit(1);\n    }\n  }\n\n  int nextInt() throws IOException {\n    return Integer.parseInt(nextToken());\n  }\n\n  long nextLong() throws IOException {\n    return Long.parseLong(nextToken());\n  }\n\n  double nextDouble() throws IOException {\n    return Double.parseDouble(nextToken());\n  }\n\n  String nextToken() throws IOException {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      tokenizer = new StringTokenizer(reader.readLine());\n    }\n    return tokenizer.nextToken();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  cin >> a;\n  cin >> b;\n  sort(a.begin(), a.end());\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] != '0' && a[0] == '0') {\n      swap(a[i], a[0]);\n      break;\n    }\n  }\n  if (a == b)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=str(input())\nm=input()\nmi=n.replace('0','')\np=''\nif len(mi)!=0:\n    p=min(mi)\nfor i in range(0,len(n)):\n    if n[i]==p and i!=len(n)-1:\n        n=n[:i]+n[i+1:]\n        break\n    elif n[i]==p and i==len(n)-1:\n        n=n[:-1]\nwhile len(n)!=0:\n    mi=min(n)\n    p=p+mi\n    for j in range(0,len(n)):\n        if n[j]==mi and j!=len(n)-1:\n            n=n[:j]+n[j+1:]\n            break\n        elif n[j]==mi and j==len(n)-1:\n            n=n[:-1]\nif p==m:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[30], t[30];\nint a;\nint main() {\n  int i, j, k, l;\n  scanf(\"%s\", s);\n  l = strlen(s);\n  sort(s, s + l);\n  if (s[0] == '0') {\n    for (i = 0; i < l; i++) {\n      if (s[i] != '0') {\n        swap(s[i], s[0]);\n        break;\n      }\n    }\n  }\n  scanf(\"%s\", t);\n  l = strlen(t);\n  if (l > 1 && t[0] == '0') {\n    puts(\"WRONG_ANSWER\");\n    return 0;\n  }\n  puts(atoi(s) == atoi(t) ? \"OK\" : \"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "why = input()\nanswer = input()\nline = []\nout= ''\ncount = 0\nfor i in range(len(why)):\n    line.append(why[i])\nline.sort()\nfor i in range(len(why)):\n    if line[i] != '0':\n        count = i\n        break\nA = line[count]\ndel line[count]\nout += A + ''.join(line)\nif out == answer:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar sl = '\\n';\nconst int nsize = 101;\nint number[10];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  string n, m;\n  cin >> n >> m;\n  for (char i : n) number[i - '0']++;\n  int mi = 0;\n  for (int i = 1; i < 10; ++i) {\n    if (number[i]) {\n      mi *= 10;\n      mi += i;\n      number[i]--;\n      break;\n    }\n  }\n  for (int i = 0; i < number[0]; ++i) mi *= 10;\n  for (int i = 1; i < 10; ++i) {\n    for (int j = 0; j < number[i]; ++j) {\n      mi *= 10;\n      mi += i;\n    }\n  }\n  int b = 0;\n  for (int i = 0; i < m.size(); ++i) {\n    b *= 10;\n    b += (m[i] - '0');\n  }\n  cout << (mi == b && m.size() == n.size() ? \"OK\" : \"WRONG_ANSWER\") << sl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\nans = '1'*n.count('1')+'0'*n.count('0')\nfor i in range(2,10):\n    ans += str(i)*n.count(str(i))\nif len(n) == len(m) and str(int(ans)) == m:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  string s1, s2, s3;\n  cin >> s1;\n  cin >> s2;\n  sort(s1.begin(), s1.end());\n  int i = 0;\n  int c = 0;\n  if (s1.size() > 1) {\n    while (s1[i] == '0') {\n      s1.erase(i, 1);\n      c++;\n      i++;\n    }\n    s3 += s1[0];\n    s1.erase(0, 1);\n    for (i = 1; i <= c; i++) s3 += '0';\n    s3 += s1;\n  } else\n    s3 = s1;\n  if (s3 == s2)\n    cout << \"OK\\n\";\n  else\n    cout << \"WRONG_ANSWER\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            while (testNumber-- != 0) {\n                String first = in.nextLine();\n                String givenAns = in.nextLine();\n                char[] arr = first.toCharArray();\n                Arrays.sort(arr);\n                String ans = \"\";\n                if (arr[0] == '0') {\n                    if (arr.length > 1) {\n                        char temp = arr[0];\n                        arr[0] = arr[1];\n                        arr[1] = temp;\n                    }\n                }\n                for (int i = 0; i < arr.length; i++) {\n                    ans += arr[i];\n                }\n                if (ans.equals(givenAns) && ans.length() == givenAns.length()) {\n                    out.println(\"OK\");\n                } else {\n                    out.println(\"WRONG_ANSWER\");\n                }\n\n            }\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s1, s2;\nint main() {\n  cin >> s1 >> s2;\n  if (s1.length() != s2.length()) {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  sort(s1.begin(), s1.end());\n  if (s1[0] == '0')\n    for (int i = 1; i < s1.length(); i++)\n      if (s1[i] != '0') {\n        swap(s1[0], s1[i]);\n        break;\n      }\n  if (s2 == s1)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    n = \"\".join(sorted([c for c in raw_input()]))\n    m = raw_input()\n    l = len(n) - len(str(int(n)))\n    if l != 0:\n        n = n[l] + '0'*l + n[l+1:]\n    if (int(n) == 0 and int(m) == 0 and len(m) != len(n)) or m != n:\n        print \"WRONG_ANSWER\"\n    else:\n        print \"OK\"\n    return 0\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "from itertools import permutations\n\n\ndef solve(s):\n    if s == '0':\n        return '0'\n\n    s = sorted(s)\n\n    for p in permutations(s):\n        if p[0] != '0':\n            return ''.join(c for c in p)\n\n\ns = input()\nt = input()\n\nprint('OK' if solve(s) == t else 'WRONG_ANSWER')\n"
        },
        {
            "language": 3,
            "solution": "n = list(input())\nans = input()\nn.sort()\ni = n.count('0')\nif i == len(n):\n    if ''.join(ans) == n or ans == '0' and n == ['0']:\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\nelse:\n  n = [x for x in n if x != '0']\n  n = ''.join(n)\n  new_s = n[0]\n  for a in range(i):\n    new_s += '0'\n  new_s += n[1:]\n  if new_s == ans:\n      print('OK')\n  else:\n      print('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint isP(long int hj) {\n  long int op;\n  for (op = 2; op <= sqrt(hj); op++) {\n    if (hj % op == 0) return 0;\n  }\n  return 1;\n}\nvoid swap(long long int *p, long long int *q) {\n  long long int tmp = *p;\n  *p = *q;\n  *q = tmp;\n}\nvoid tog(int *p) {\n  if (*p == 1)\n    *p = 0;\n  else\n    *p = 1;\n}\nstring fdi(int hi) {\n  switch (hi) {\n    case 0:\n      return \"zero\";\n    case 1:\n      return \"one\";\n    case 2:\n      return \"two\";\n    case 3:\n      return \"three\";\n    case 4:\n      return \"four\";\n    case 5:\n      return \"five\";\n    case 6:\n      return \"six\";\n    case 7:\n      return \"seven\";\n    case 8:\n      return \"eight\";\n    case 9:\n      return \"nine\";\n  }\n}\nstring rdx(int hi) {\n  switch (hi) {\n    case 2:\n      return \"twenty\";\n    case 3:\n      return \"thirty\";\n    case 4:\n      return \"forty\";\n    case 5:\n      return \"fifty\";\n    case 6:\n      return \"sixty\";\n    case 7:\n      return \"seventy\";\n    case 8:\n      return \"eighty\";\n    case 9:\n      return \"ninety\";\n  }\n}\nlong long int bd(long long int mk) {\n  long long int hb;\n  for (hb = (mk / 2); hb >= 1; hb--) {\n    if (mk % hb == 0) return hb;\n  }\n}\nint dsm(long long int pkk) {\n  if (pkk < 0) pkk *= -1;\n  while (pkk > 0) {\n    if (pkk % 10 == 8) return 1;\n    pkk /= 10;\n  }\n  return 0;\n}\nint main() {\n  long long int m1, m2, prev, prc, cost, min, ind, ans, g, p, max, inc, cap, sm,\n      d, nxt, mn, t, up, a, b, lc, la, c, e, preI, t1, t2, brk, clbp, clb, et,\n      jmp, u, l1, l2, sq, nd, maxi, li, ri, tr, mp, og, lt1, lt2, n1, n2, c1,\n      c2, minI, min1, dp, p2, p3, ze, fst, lst, min2, s, sm1, sm2, sm3, sr, sl,\n      l, ln, rz, rn, car, eq, r, shr, ng, v, curr, spl, fl, z, ev, od, m, ct, j,\n      q, k, maxI, max1, max2, lt, md, f, n, xP, xN, w, h, d2, d1, u1, u2, i, x,\n      y;\n  string s1, s2, kk;\n  kk = \"\";\n  cin >> s1 >> s2;\n  lt = s1.size();\n  int A[lt];\n  for (i = 0; i < lt; i++) {\n    A[i] = s1[i] - 48;\n  }\n  sort(A, A + lt);\n  for (i = 0; i < lt; i++) {\n    if (A[i] != 0) break;\n  }\n  if (i == lt) {\n    if (s2 == \"0\")\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  } else {\n    kk += (A[i] + 48);\n    p = i;\n    for (i = 0; i < lt; i++) {\n      if (i != p) kk += (A[i] + 48);\n    }\n    if (kk == s2)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, s1;\n  cin >> s >> s1;\n  if (s1[0] == '0' && s1.size() > 1) {\n    cout << \"WRONG_ANSWER\\n\";\n    return 0;\n  }\n  sort(s.begin(), s.end());\n  for (int i = 0; i < s.size() - 1; i++)\n    if (s[i] == '0' && s[i + 1] != '0') {\n      swap(s[i], s[i + 1]);\n      break;\n    }\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] != s1[i]) {\n      cout << \"WRONG_ANSWER\\n\";\n      return 0;\n    }\n  }\n  cout << \"OK\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string f, s;\n  cin >> f >> s;\n  for (int i = 0; i < f.length(); i++) {\n    for (int j = i + 1; j < f.length(); j++) {\n      if (f[i] > f[j]) {\n        if (f[j] == '0' && i == 0) continue;\n        swap(f[i], f[j]);\n      }\n    }\n  }\n  if (f == s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class CorrectSolution \n{\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tString s=sc.next();\n\t\tString ans=sc.next();\n\t\tchar ch[]=s.toCharArray();\n\t\tArrays.sort(ch);\n//\t\tfor(int i=0;i<ch.length;i++)\n//\t\t{\n//\t\t\tSystem.out.println(ch[i]);\n//\t\t}\n\t\tString my_ans=\"\";\n\t\t\n\t\tint k=0;\n\t\tfor(int i=0;i<ch.length;i++)\n\t\t{\n\t\t\tif(ch[i]!='0')\n\t\t\t{\n\t\t\t\tk=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tmy_ans=my_ans+ch[k];\n\t\tfor(int i=0;i<k;i++)\n\t\t{\n\t\t\tmy_ans=my_ans+'0';\n\t\t}\n\t\t\n\t\tfor(int i=k+1;i<s.length();i++)\n\t\t{\n\t\t\tmy_ans+=ch[i];\n\t\t}\n\t\tif(my_ans.equals(ans))\n\t\t{\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "ans=['WRONG_ANSWER','OK']\n\n\ndef men(x):\n    y=list(x)\n    y.sort()\n    z=len(y)\n    for i in range(z):\n        if y[i]!='0':\n            y[i],y[0]=y[0],y[i]\n            break\n    return ''.join(y)\n\n\nn=raw_input()\nm=raw_input()\n\nprint ans[1] if m==men(n) else ans[0]"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[11], b[11], c[11];\nvoid mergesort(char *a, char *c, int n) {\n  int width, i0, i1, iRight, iEnd, i, j;\n  for (width = 1; width < n; width <<= 1)\n    for (i = 0; i < n; i += (width << 1)) {\n      i0 = i;\n      i1 = iRight = min(i + width, n);\n      iEnd = min(i + (width << 1), n);\n      for (j = i; j < iEnd; j++)\n        if (i0 != iRight && (a[i0] <= a[i1] || i1 == iEnd))\n          c[j] = a[i0++];\n        else\n          c[j] = a[i1++];\n      for (j = i; j < iEnd; j++) a[j] = c[j];\n    }\n}\nint main() {\n  cin >> a;\n  cin >> b;\n  int i;\n  for (i = 0; a[i]; i++)\n    ;\n  mergesort(a, c, i);\n  i = 0;\n  while (a[i] == '0' && a[i]) i++;\n  char temp;\n  if (a[i]) {\n    temp = a[i];\n    a[i] = a[0];\n    a[0] = temp;\n  }\n  bool flag = true;\n  int len1;\n  int len2;\n  for (len1 = 0; a[len1]; len1++)\n    ;\n  for (len2 = 0; b[len2]; len2++)\n    ;\n  if (len1 != len2) flag = false;\n  if (flag)\n    for (i = 0; a[i]; i++)\n      if (a[i] != b[i]) flag = false;\n  if (flag)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char str[10];\n  char str1[10];\n  scanf(\"%s%s\", str, str1);\n  int lenth = strlen(str);\n  sort(str, str + lenth);\n  int i = 1;\n  while (str[0] == '0' && lenth != 1) {\n    swap(str[0], str[i]);\n    i++;\n  }\n  if (strcmp(str, str1) == 0)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=str(input())\na=str(input())\nlt=[]\nif int(n)==0:\n    if n==a:\n        print(\"OK\")\n    else:  \n        print(\"WRONG_ANSWER\")\n \n \nelse:\n    if a[0]==\"0\":\n        print(\"WRONG_ANSWER\")\n        \n    elif int(n)>0:\n        \n        b=n.count(\"0\")\n        for i in range(len(n)):\n            if int(n[i])>0:\n                lt.append(n[i])\n        lt.sort()\n        d=lt[0]\n        if b>0:\n            for i in range(b):\n                d=str(d)+\"0\"\n            for i in range(len(lt)-1):\n                d=str(d)+str(lt[i+1])\n        if b==0:\n             for i in range(len(lt)-1):\n                d=str(d)+str(lt[i+1])\n        if int(d)==int(a):\n            print(\"OK\")\n        else:\n            print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tchar[] a = sc.next().toCharArray();\n\t\tchar[] b = sc.next().toCharArray();\n\t\tArrays.sort(a);\n\t\t// Arrays.sort(b);\n\t\tint id = -1;\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tif (a[i] != '0') {\n\t\t\t\tid = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (id != -1) {\n\t\t\tchar c = a[id];\n\t\t\tfor (int i = id; i >=1; i--) {\n\t\t\t\ta[i] = a[i-1];\n\t\t\t}\n\t\t\ta[0] = c;\n\t\t}\n\t\tif (a.length != b.length) {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t}\n\t\tfor (int i = 0; i < b.length; i++) {\n\t\t\tif (b[i] != a[i]){\n\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"OK\");\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "n=raw_input();m=raw_input();l=[];c=0;s=''\nfor i in n:\n    if i=='0':  c+=1\n    else:   l.append(i)\nl.sort()\nif len(l)<>0:   s+=l[0]\nl=l[1:]\nwhile c<>0:\n    s+='0';c-=1\ns+=''.join(l);\nif s==m:    print\"OK\"\nelse:   print\"WRONG_ANSWER\"\n"
        },
        {
            "language": 1,
            "solution": "s = raw_input();\nt = raw_input();\n\nflag = 1;\nfor i in range(len(s)):\n\tif s.count(s[i]) != t.count(s[i]):\n\t\tflag = 0; break;\n#print flag\npos = 0\nfor i in range(len(t)):\n\tif t[i] != '0':\n\t\tpos = i; break;\nif pos != 0:\n\tflag = 0;\nif flag:\n\tfor i in range(pos+1, len(t)):\n\t\tif t[i] == '0' and i == pos+1:\n\t\t\tcontinue;\n\t\tif t[i] < t[i-1]:\n\t\t\tflag = 0; break;\nprint \"OK\" if flag else \"WRONG_ANSWER\";\n"
        },
        {
            "language": 1,
            "solution": "s = raw_input()\nb = raw_input()\nl = len(s)\na = list(s)\na.sort()\nif(a[0] == '0'):\n    for i in range(l):\n        if(a[i] > '0'):\n            t = a[i]\n            a[i] = '0'\n            a[0] = t\n            break\nprint (\"WRONG_ANSWER\",\"OK\")[''.join(a) == b]\n"
        },
        {
            "language": 3,
            "solution": "n = list(input())\nt = input()\nn = sorted(n)\nif(n[0]=='0'):\n    for i in range(len(n)):\n        if(n[i]!='0'):\n            n[0],n[i] = n[i],n[0]\n            break\n    if(str(''.join(n))==t):\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\nelse:\n    if(str(''.join(n))==t):\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  char a[10], b[10];\n  int ans = 0, test = 0;\n  scanf(\"%s%s\", a, b);\n  int len = strlen(a);\n  int lenb = strlen(b);\n  if (len != lenb) {\n    puts(\"WRONG_ANSWER\");\n    return 0;\n  }\n  for (int i = 0; i < lenb; i++) test = test * 10 + b[i] - '0';\n  sort(a, a + len);\n  if (a[0] == '0')\n    for (int i = 0; i < len; i++)\n      if (a[i] != '0') {\n        swap(a[0], a[i]);\n        break;\n      }\n  for (int i = 0; i < len; i++) ans = ans * 10 + a[i] - '0';\n  if (ans == test)\n    puts(\"OK\");\n  else\n    puts(\"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, t;\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  s[s.length()] = '0';\n  if (s[0] == '0') swap(s[0], s[1]);\n  if (t == s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 4,
            "solution": "/*12B\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n//package codeforces;\n\nimport java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n *\n * @author Akatsuki\n */\npublic class CorrectSolution {\n    \n    public static void main(String arrg[]){\n        \n        Scanner sc= new Scanner (System.in);\n        String str =sc.next();\n        String ans=sc.next();\n        int N=str.length();\n        if(str.length()==1){\n          if(str.equals(ans))System.out.print(\"OK\");\n        else System.out.print(\"WRONG_ANSWER\");\n            return;\n        }\n       int arr[]=new int[N];\n        for(int i=0;i<N;i++)arr[i]=Integer.parseInt(str.charAt(i)+\"\");\n        Arrays.sort(arr,0,N);\n        int i=0;\n        while(arr[i]==0)i++;\n        int temp=arr[i];\n        arr[i]=arr[0];\n        arr[0]=temp;\n        StringBuffer buf = new StringBuffer();\n        for(int p:arr)buf.append(p);\n        \n        if(buf.toString().equals(ans))System.out.print(\"OK\");\n        else System.out.print(\"WRONG_ANSWER\");\n    \n    \n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.io.InputStream;\nimport java.io.IOException;\nimport java.util.Hashtable;\nimport java.util.Arrays;\npublic class Main\n{\n\tpublic static void main(String args[])throws IOException\n\t{ \n\t\tInputReader reader = new InputReader(System.in);\n\t\tPrintWriter ob=new PrintWriter(System.out);\n\t\t\tchar ch[]=new char[100];\n\t\t\tch=reader.readString().toCharArray();\n\t\t\tint l=ch.length;\n\t\t\tchar ans[]=new char[100];\n\t\t\tans=reader.readString().toCharArray();\n\t\t\tArrays.sort(ch);\n\t\t\t//System.out.println(ch);\n\t\t\tint i=1;\n\t\t\twhile(true)\n\t\t\t{\n\t\t\t\tif(i<l && ch[i-1]=='0')\n\t\t\t\t{\n\t\t\t\t\tchar temp=ch[i-1];\n\t\t\t\t\tch[i-1]=ch[i];\n\t\t\t\t\tch[i]=temp;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(ch[i-1]!='0')\n\t\t\t\tbreak;\n\t\t\t\ti+=1;\n\t\t\t}\n\t\t\tString a=new String(ch);\n\t\t\tString b=new String(ans);\n\t\t//\tSystem.out.println(a+\" \"+b);\n\t\t\tif(a.equals(b))\n\t\t\tSystem.out.print(\"OK\");\n\t\t\telse\n\t\t\tSystem.out.print(\"WRONG_ANSWER\");\n\t}\n static final class InputReader {\n        private final InputStream stream;\n        private final byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n \n        private int read() throws IOException {\n            if (curChar >= numChars) {\n                curChar = 0;\n                numChars = stream.read(buf);\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n \n        public final int readInt() throws IOException {\n            return (int)readLong();\n        }\n \n        public final long readLong() throws IOException {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n                if (c == -1) throw new IOException();\n            }\n            boolean negative = false;\n            if (c == '-') {\n                negative = true;\n                c = read();\n            }\n            long res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return negative ? -res : res;\n        }\n \n        public final int[] readIntArray(int size) throws IOException {\n            int[] array = new int[size];\n            for (int i=0; i<size; i++) {\n                array[i] = readInt();\n            }\n            return array;\n        }\n \n        public final long[] readLongArray(int size) throws IOException {\n            long[] array = new long[size];\n            for (int i=0; i<size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n \n        public final String readString() throws IOException {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.append((char)c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n \n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n \n} "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2;\n  long long int i, j;\n  cin >> s1;\n  cin >> s2;\n  if (s1 == \"0\") {\n    if (s2 == \"0\") {\n      cout << \"OK\";\n      return 0;\n    } else {\n      cout << \"WRONG_ANSWER\"\n           << \"\\n\";\n      return 0;\n    }\n  }\n  long long int n = s1.size();\n  long long int flag[n + 3];\n  for (i = 0; i < n; i++) flag[i] = 0;\n  string s3 = \"\";\n  char c;\n  long long int m = -1;\n  c = '9';\n  for (i = 0; i < s1.size(); i++) {\n    if (s1[i] > '0') {\n      if (c >= s1[i]) {\n        c = s1[i];\n        m = i;\n      }\n    }\n  }\n  s3 += c;\n  flag[m] = 1;\n  for (i = 1; i < s1.size(); i++) {\n    c = '9';\n    for (j = 0; j < s1.size(); j++) {\n      if (flag[j] == 0 && c >= s1[j]) {\n        c = s1[j];\n        m = j;\n      }\n    }\n    s3 += c;\n    flag[m] = 1;\n  }\n  if (s3.size() != s2.size())\n    cout << \"WRONG_ANSWER\"\n         << \"\\n\";\n  else {\n    if (s3 == s2)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        String cadena,respuesta=\"\";\n        String cadena2;\n        boolean[] banderas=new boolean[10];\n        int menor=11;\n        do\n        {\n            banderas=new boolean[10];\n            menor=11;\n            respuesta=\"\";\n            cadena = input.next();\n            cadena2 = input.next();\n            int a=0;\n            for (int i=0; i< cadena.length(); i++)\n            {\n                if (menor>Integer.parseInt(cadena.substring(i,i+1)) && Integer.parseInt(cadena.substring(i,i+1))!=0)\n                {\n                    menor=Integer.parseInt(cadena.substring(i,i+1));\n                    a=i;\n                }\n            }\n            banderas[a]=true;\n            respuesta+=((Integer)menor).toString();\n            \n            for (int i=0; i < cadena.length()-1;i++)\n            {\n                \n                menor=9;\n                for (int j=0; j < cadena.length() ; j++)\n                {\n                   \n                \n                    if (menor>Integer.parseInt(cadena.substring(j,j+1)) && !banderas[j])\n                    {\n                          menor=Integer.parseInt(cadena.substring(j,j+1));\n                          a=j;\n                    }\n                }\n                \n                banderas[a]=true;\n                respuesta+=((Integer)menor).toString();;\n\n            }\n            if (cadena.equals(\"0\"))\n            {\n                if (cadena2.equals(\"0\"))\n                    System.out.println(\"OK\");\n                else\n                    System.out.println(\"WRONG_ANSWER\");\n            }\n            else\n            {\n                if (respuesta.equals(cadena2))\n                    System.out.println(\"OK\");\n                else\n                    System.out.println(\"WRONG_ANSWER\");\n            }\n           \n        }while(input.hasNext());\n    }\n}"
        },
        {
            "language": 3,
            "solution": "first =list(input())# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u043c\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438  ['3', '3', '1', '0']\nsecond = input() \n\nfirst_reverse = sorted(first[::-1])  # \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u043c\n#print(first_reverse)\nif first_reverse[0] == \"0\": # \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 0, \u0442\u043e \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435 \u0441\u043f\u0438\u0441\u043e\u043a, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u043e\u0442 0 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n\tfor i in first_reverse:\n\t\tif i != \"0\":\n\t\t\ty = first_reverse.index(i)# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0438\u043d\u0434\u0435\u043a\u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043e\u0442\u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043e\u0442 \u043d\u0443\u043b\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\n\t\t\tfirst_reverse[0],first_reverse[y] = first_reverse[y],first_reverse[0]# \u043c\u0435\u043d\u044f\u0435\u043c \u043c\u0435\u0441\u0442\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0431\u0435\u0437 \u043f\u043e\u043c\u043e\u0437\u0438 \u0431\u0443\u0444\u0435\u0440\u043d\u043e\u0439 \u043f\u0435\u0440\n\t\t\tbreak\nresult = ''.join(first_reverse)# \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u043e\u0435\u0434\u0438\u043d\u043e\n#print(result)\n\nif result == second:#\u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \n\tprint(\"OK\")\nelse: print(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int sz = 100005;\nconst long long int szz = 1000006;\nlong long int binpow(long long int a, long long int b, long long int m) {\n  a %= m;\n  long long int res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a % m;\n    a = a * a % m;\n    b >>= 1;\n  }\n  return res;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  vector<long long int> f(10, 0);\n  string a1;\n  string b1;\n  cin >> a1 >> b1;\n  long long int a = stoi(a1);\n  long long int b = stoi(b1);\n  if (a1.size() != b1.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  while (a != 0) {\n    f[a % 10]++;\n    a /= 10;\n  }\n  long long int num = 0;\n  for (long long int i = 1; i < 10; i++) {\n    if (f[i] > 0) {\n      f[i]--;\n      num = i;\n      break;\n    }\n  }\n  num *= binpow(10LL, f[0], 1000000007);\n  for (long long int i = 1; i < 10; i++) {\n    while (f[i] > 0) {\n      f[i]--;\n      num = num * 10 + i;\n    }\n  }\n  if (num == b) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::sort;\nusing std::string;\nusing std::swap;\nint main() {\n  string in, answer;\n  while (cin >> in >> answer) {\n    sort(begin(in), end(in));\n    if (in.at(0) == '0') {\n      int loc = 0;\n      for (int i = 0; i < in.size(); i++) {\n        if (in.at(i) != '0') {\n          loc = i;\n          break;\n        }\n      }\n      swap(in.at(0), in.at(loc));\n    }\n    cout << ((in == answer) ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Main {\n\tpublic static boolean bg = true;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tLR in = new LR();\n\t\t\n\t\t\n\t\t\n\t\tchar[] l1 = in.nx().toCharArray();\n\t\t\n\t\t\n\t\tint[] l2 = new int[l1.length];\n\t\t\n\t\tfor (int i=0;i<l1.length;i++){\n\t\t\tl2[i] = l1[i] - '0';\n\t\t}\n\t\tint min = Integer.MAX_VALUE;\n\t\tfor (int i=0;i<l1.length;i++){\n\t\t\tif (l2[i]!=0) if (l2[i]<min) min = l2[i];\n\t\t}\n\t\tArrays.sort(l2);\n\t\t\n\t\tStringBuilder fin = new StringBuilder();\n\t\tif (min>=0&&min<=9) fin.append((char)(min+'0'));\n\t\tboolean q1 = false;\n\t\tfor (int e: l2){\n\t\t\tif (e == min){\n\t\t\t\tif (!q1){\n\t\t\t\t\tq1 = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfin.append((char)(e+'0'));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfin.append((char)(e+'0'));\n\t\t\t}\n\t\t}\n\t\tString f1 = fin.toString();\n\t\tString k1 = in.nx();\n\t\t\n\t\t//pn(f1);\n\t\tif (f1.equals(k1)){\n\t\t\tpn(\"OK\");\n\t\t}\n\t\telse {\n\t\t\tpn(\"WRONG_ANSWER\");\n\t\t}\n\t}\n\t\n\n\tprivate static BigInteger bi(long n1) {\n\t\treturn BigInteger.valueOf(n1);\n\t}\n\n\tprivate static void p(Object o1) {\n\t\tSystem.out.print(o1);\n\t}\n\n\tprivate static void pn(Object o1) {\n\t\tSystem.out.println(o1);\n\t}\n\n\tprivate static void px(Object... o1) {\n\t\tSystem.out.println(Arrays.deepToString(o1));\n\t}\n\n\tprivate static void ex() {\n\t\tSystem.exit(0);\n\t}\n\n\tprivate static class LR {\n\t\tBufferedReader k1 = null;\n\n\t\tpublic LR() throws Exception {\n\t\t\tk1 = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic String nx() throws Exception {\n\t\t\treturn k1.readLine();\n\t\t}\n\t}\n\n\tprivate static class ST {\n\t\tStreamTokenizer k1 = null;\n\n\t\tpublic ST() throws Exception {\n\t\t\tk1 = new StreamTokenizer(System.in);\n\t\t}\n\n\t\tpublic int ni() throws Exception {\n\t\t\tk1.nextToken();\n\t\t\treturn (int) k1.nval;\n\t\t}\n\n\t\tpublic double nd() throws Exception {\n\t\t\tk1.nextToken();\n\t\t\treturn (double) k1.nval;\n\t\t}\n\n\t\tpublic long nl() throws Exception {\n\t\t\tk1.nextToken();\n\t\t\treturn (long) k1.nval;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "\ndef getMinGreaterThanZero(s):\n    asdf = s[:]\n    minNumber = min(asdf)\n    while (minNumber == 0):\n        asdf[asdf.index(minNumber)] = 1000\n        minNumber = min(asdf)\n        if minNumber == 1000:\n            return -1\n\n    return minNumber\n\nimport sys\n\nn1 = sys.stdin.readline().strip()\nn2 = sys.stdin.readline().strip()\n\nif int(n1) != 0:\n    n1 = map(int, list(str(int(n1))))\n    less = []\n\n    firstMin = getMinGreaterThanZero(n1)\n\n    n1[n1.index(firstMin)] = 1000\n\n    less.append(firstMin)\n    for i in range(1, len(n1)):\n        minNum = min(n1)\n        less.append(minNum)\n        n1[n1.index(minNum)] = 1000\n\n    less = ''.join(map(str, less))\nelse:\n    less = '0'\n\nif len(less) != len(n2):\n    print \"WRONG_ANSWER\"\n    sys.exit(0)\n\nif int(less) == int(n2):\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n;\n  char m[11], arr[10] = {'0'};\n  int digit = 0;\n  cin >> n >> m;\n  while (n != 0) {\n    arr[digit++] = '0' + n % 10;\n    n = n / 10;\n  }\n  sort(arr, arr + digit);\n  if (arr[0] == '0') {\n    for (int i = 1; i < digit; ++i) {\n      if (arr[i] != '0') {\n        arr[0] = arr[i];\n        arr[i] = '0';\n        break;\n      }\n    }\n  }\n  if (strcmp(m, arr) == 0) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n    \n    public static void main(String[] args) {\n       Long n = null; Long m;\n       String a,b,c = \"\";\n       char []x;\n       int k=0,j=0,h=0;\n       Scanner entranda = new Scanner (System.in);\n       a = entranda.next();\n       b = entranda.next();\n     \n       if(a.length()!=b.length()){\n           System.out.println(\"WRONG_ANSWER\");\n           return;\n       }\n       if(a.length()==1){\n           if(a.equals(b)){\n                System.out.println(\"OK\");   \n           }\n           else\n                 System.out.println(\"WRONG_ANSWER\");\n           return;\n       }\n       if(a.charAt(0) =='0'){\n          h++;\n       }\n       for(int i=0; i<a.length(); i++){\n           if(a.charAt(i)=='0'){\n              k++;    \n           }\n       }\n       \n       x = new char[a.length()-k];\n       for(int i=0; i<a.length(); i++){\n           if(a.charAt(i)!='0'){\n              x[j] = a.charAt(i);\n              j++;\n           }\n       }\n     \n       Arrays.sort(x, 0, a.length()-k);\n       c = \"\" + x[0];\n       for(int i=0; i<k; i++){\n           c = c + \"0\";\n       }\n       for(int i=1; i< x.length; i++){\n           c+=x[i];\n       }\n       if(c.equals(b)){\n          System.out.println(\"OK\"); \n       }\n       else\n          System.out.println(\"WRONG_ANSWER\");  \n    }\n       \n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int oo = 1e9 + 1;\nint main() {\n  string s, k;\n  cin >> s >> k;\n  sort(s.begin(), s.end());\n  if (s[0] == '0' && s.length() != 1) swap(s[1], s[0]);\n  if (s == k)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 1,
            "solution": "n=raw_input()\nmini=(1<<31)-1\ndigits=[0]*10\nfor x in n:\n\tdigits[int(x)]+=1\nfor i in range(1,10):\n\tif digits[i]!=0:\n\t\tbreak\nif digits[i]==0:\n\tmini='0'\nelse:\n\tmini=str(i)+'0'*digits[0]\n\tdigits[i]-=1\n\twhile i<10:\n\t\tmini+=str(i)*digits[i]\n\t\ti+=1\nif mini==raw_input():\n\tprint 'OK'\nelse:\n\tprint 'WRONG_ANSWER'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1000000007;\nconst double PI = 3.141592653589793238463;\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  string s, t, k, l;\n  cin >> s >> t;\n  k = s;\n  sort(k.begin(), k.end());\n  if (k[0] == '0') {\n    for (int i = 1; i < s.length(); i++) {\n      if (k[i] != '0') {\n        swap(k[i], k[0]);\n        break;\n      }\n    }\n  }\n  cout << (k == t ? \"OK\\n\" : \"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\n\n/**\n * Created by James on 1/29/2015.\n */\n\npublic class Driver {\n    public static void main(String [] args) throws IOException {\n        BufferedReader scanner = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n\n        char [] alice = scanner.readLine().toCharArray();\n        String bob = scanner.readLine();\n\n        if (bob.charAt(0) == '0' && bob.length() > 1) {\n            out.println(\"WRONG_ANSWER\");\n        } else {\n            Arrays.sort(alice);\n\n            if (alice[0] == '0') {\n                for (int i = 1; i < alice.length; ++i) {\n                    if (alice[i] != '0') {\n                        alice[0] = alice[i];\n                        alice[i] = '0';\n                        break;\n                    }\n                }\n            }\n\n            out.println(new String(alice).equals(bob) ? \"OK\" : \"WRONG_ANSWER\");\n        }\n\n        out.close();\n    }\n} "
        },
        {
            "language": 3,
            "solution": "n = sorted(list(input()))\n\n# tem zeros ou n ne\n\nzeros = n.count('0')\nans = ''\n\nif zeros == len(n):\n    ans = '0'\nelse:\n    for i in range(len(n)):\n        if n[i] != '0':\n            ans += n[i]\n        \n        if len(ans) == 1:\n            ans += zeros * '0'\n\nif ans == input():\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.ArrayList;\n\npublic class Classwork {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String x = scanner.next();\n        String y = scanner.next();\n        if (x.equals(\"0\") && y.equals(\"0\")){\n            System.out.println(\"OK\");\n            return;\n        }\n        if (x.charAt(0) == '0' || y.charAt(0) == '0') {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        int min = 0;\n        int k = 0;\n        int a = 0;\n        ArrayList<Integer> al = new ArrayList<>();\n        String answer = \"\";\n        String realAnswer = \"\";\n        for (int i = 0; i < x.length(); i++) {\n            al.add(Integer.parseInt(\"\" + x.charAt(i)));\n        }\n        for (int i = 0; i < x.length(); i++) {\n            min = al.get(0);\n            for (int j = 0; j < al.size(); j++) {\n                if (al.get(j) <= min) {\n                    min = al.get(j);\n                    k = j;\n                }\n            }\n            answer += min;\n            al.remove(k);\n        }\n        while (answer.charAt(0) == '0') {\n            answer = answer.substring(1);\n            a++;\n        }\n        realAnswer += answer.charAt(0);\n        for (int i = 0; i < a; i++) {\n            realAnswer += \"0\";\n        }\n        realAnswer += answer.substring(1);\n        if (realAnswer.equals(y))\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n}"
        },
        {
            "language": 3,
            "solution": "def ans(s,s1,minn):\n    if(int(s1[0])!=minn):\n        print(\"WRONG_ANSWER\")\n        return 0\n    \n    if(len(s)!=len(s1)):\n        print(\"WRONG_ANSWER\")\n        return 0    \n    else:\n        l1=list(s1)\n        if('0'in s1):\n            if(s1[1]!='0'):\n                 print(\"WRONG_ANSWER\")\n                 return 0\n            \n        for i in range(l1.count('0')+1,len(s1)-1):\n              if(int(s1[i])>int(s1[i+1]) or s1[i]=='0'):\n                  print(\"WRONG_ANSWER\")\n                  return 0\n        if(s1[len(s1)-1]=='0'):\n                  print(\"WRONG_ANSWER\")\n                  return 0\n        print(\"OK\")\n                  \n                 \n             \n                \n                \n            \ns=input()\ns1=input()\nif(s=='0' and s1=='0'):\n    print(\"OK\")\nelse:\n\n    minn=10\n    for i in s:\n        if(minn>int(i) and i!='0'):\n            minn=int(i)\n        \n    ans(s,s1,minn)          \n                \n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s;\nstring ans;\nint main() {\n  cin >> s >> ans;\n  if (s == \"0\") {\n    if (ans == \"0\") {\n      cout << \"OK\" << endl;\n    } else {\n      cout << \"WRONG_ANSWER\" << endl;\n    }\n    return 0;\n  }\n  sort(s.begin(), s.end());\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] != '0') {\n      swap(s[0], s[i]);\n      break;\n    }\n  }\n  if (s == ans) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.StreamTokenizer;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\n\npublic class B {\n\n\t/**\n\t * @param args\n\t * @throws IOException \n\t */\n\tpublic static int small(int n) {\n\t\tchar[] s = Integer.toString(n).toCharArray();\n\t\tArrays.sort(s);\n\t\tint i = 0;\n\t\twhile((i < s.length) && (s[i] == '0')) {\n\t\t\ti++;\n\t\t}\n\t\tint j = 0;\n\t\twhile((i + j < s.length) && (j < i)) {\n\t\t\ts[j] = s[i + j];\n\t\t\ts[i + j] = '0';\n\t\t\tj++;\n\t\t}\n\t\treturn Integer.parseInt(String.valueOf(s));\n\t}\n\tpublic static void main(String[] args) throws IOException {\n\t\t// TODO Auto-generated method stub\n\t\tBufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n\t\tBufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));\n\t\t//BufferedReader input = new BufferedReader(new FileReader(\"input.txt\"));\n\t\t//BufferedWriter output = new BufferedWriter(new FileWriter(\"output.txt\"));\n\t\tStringTokenizer in;\n\t\tin = new StringTokenizer(input.readLine());\n\t\tString s1 = in.nextToken();\n\t\tin = new StringTokenizer(input.readLine());\n\t\tString s2 = in.nextToken();\n\t\tint n = Integer.parseInt(s1);\n\t\tint m = Integer.parseInt(s2);\n\t\tif ((s1.length() == Integer.toString(n).length()) &&\n\t\t\t(s2.length() == Integer.toString(m).length()))\n\t\t{\n\t\t\tn = small(n);\n\t\t\tif (n == m)\n\t\t\t\toutput.write(\"OK\");\n\t\t\telse\n\t\t\t\toutput.write(\"WRONG_ANSWER\");\n\t\t}\n\t\telse\n\t\t\toutput.write(\"WRONG_ANSWER\");\n\t\toutput.close();\n\t\tinput.close();\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string str, str1;\n  cin >> str >> str1;\n  sort(str.begin(), str.end());\n  if (str[0] == '0') {\n    auto itr = str.begin();\n    itr = next(itr, 1);\n    for (; itr != str.end(); itr++) {\n      if ((*itr) != '0') break;\n    }\n    if (itr != str.end()) {\n      char ch;\n      ch = str[0];\n      str[0] = (*itr);\n      (*itr) = ch;\n    }\n  }\n  if (str == str1)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/python\nn=raw_input()\nm=raw_input()\nif 0<=(int(m))<=(10**9) and 0<=(int(n))<=(10**9):\n    c=[x for x in n]\n    c.sort()\n    if c.count('0')==len(n):\n        if int(m)==int(''.join(c)) and len(n)==len(m):\n            print 'OK'\n        else:\n            print 'WRONG_ANSWER'\n    elif c.count('0')==(len(n)-1):\n        c.insert(0,c[-1])\n        c.pop()\n        if int(m)==int(''.join(c)) and len(n)==len(m):\n            print 'OK'\n        else:\n            print 'WRONG_ANSWER'\n    elif c.count('0')==0:\n        if int(m)==int(''.join(c)) and len(n)==len(m):\n           print 'OK'\n        else:\n            print 'WRONG_ANSWER'\n    else:\n        c.insert(0,c[c.count('0')])\n        c.pop((c.count('0'))+1)\n        if int(m)==int(''.join(c)) and len(n)==len(m):\n            print 'OK'\n        else:\n            print 'WRONG_ANSWER'\n   \n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.Locale;\nimport java.util.Scanner;\nimport java.util.regex.Pattern;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.UnsupportedEncodingException;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n        solve(1);\t\n    }\n     \n    public static void solve(int testCases) throws Exception{\n    \t\n    \tint n = StdIn.readInt();\n    \tString m = StdIn.readString();\n    \tchar[] digits = String.valueOf(n).toCharArray();\n    \tArrays.sort(digits);\n    \tif(digits[0] == '0'){\n    \t\tint j = 1;\n    \t\twhile( j < digits.length && digits[j] == '0') j++;\n    \t\tif(j == digits.length) j--;\n    \t\tchar temp = digits[0];\n    \t\tdigits[0] = digits[j];\n    \t\tdigits[j] = temp;\n    \t}\n    \tStringBuilder sb = new StringBuilder();\n    \tfor(int i = 0 ; i < digits.length ; i++) sb.append(digits[i]);\n    \tif(m.equals(sb.toString()))\n    \t\tStdOut.println(\"OK\");\n    \telse\n    \t\tStdOut.println(\"WRONG_ANSWER\");\n    }     \n}\n\nfinal class StdIn {\n \n    private StdIn() { }\n \n    private static Scanner scanner;\n    \n    private static final String CHARSET_NAME = \"UTF-8\";\n \n    private static final Locale LOCALE = Locale.US;\n \n    private static final Pattern WHITESPACE_PATTERN = Pattern.compile(\"\\\\p{javaWhitespace}+\");\n \n    private static final Pattern EMPTY_PATTERN = Pattern.compile(\"\");\n \n    private static final Pattern EVERYTHING_PATTERN = Pattern.compile(\"\\\\A\");\n \n    public static boolean isEmpty() {\n        return !scanner.hasNext();\n    }\n \n    public static boolean hasNextLine() {\n        return scanner.hasNextLine();\n    }\n \n    public static boolean hasNextChar() {\n        scanner.useDelimiter(EMPTY_PATTERN);\n        boolean result = scanner.hasNext();\n        scanner.useDelimiter(WHITESPACE_PATTERN);\n        return result;\n    }\n \n    public static String readLine() {\n        String line;\n        try                 { line = scanner.nextLine(); }\n        catch (Exception e) { line = null;               }\n        return line;\n    }\n \n    public static char readChar() {\n        scanner.useDelimiter(EMPTY_PATTERN);\n        String ch = scanner.next();\n        assert (ch.length() == 1) : \"Internal (Std)In.readChar() error!\"\n            + \" Please contact the authors.\";\n        scanner.useDelimiter(WHITESPACE_PATTERN);\n        return ch.charAt(0);\n    }  \n \n \n    public static String readAll() {\n        if (!scanner.hasNextLine())\n            return \"\";\n \n        String result = scanner.useDelimiter(EVERYTHING_PATTERN).next();\n        // not that important to reset delimeter, since now scanner is empty\n        scanner.useDelimiter(WHITESPACE_PATTERN); // but let's do it anyway\n        return result;\n    }\n \n    public static String readString() {\n        return scanner.next();\n    }\n \n    public static int readInt() {\n        return scanner.nextInt();\n    }\n \n    public static double readDouble() {\n        return scanner.nextDouble();\n    }\n \n    public static float readFloat() {\n        return scanner.nextFloat();\n    }\n \n    public static long readLong() {\n        return scanner.nextLong();\n    }\n    \n    public static short readShort() {\n        return scanner.nextShort();\n    }\n \n    public static byte readByte() {\n        return scanner.nextByte();\n    }\n \n    public static boolean readBoolean() {\n        String s = readString();\n        if (s.equalsIgnoreCase(\"true\"))  return true;\n        if (s.equalsIgnoreCase(\"false\")) return false;\n        if (s.equals(\"1\"))               return true;\n        if (s.equals(\"0\"))               return false;\n        throw new InputMismatchException();\n    }\n \n    public static String[] readAllStrings() {\n        // we could use readAll.trim().split(), but that's not consistent\n        // because trim() uses characters 0x00..0x20 as whitespace\n        String[] tokens = WHITESPACE_PATTERN.split(readAll());\n        if (tokens.length == 0 || tokens[0].length() > 0)\n            return tokens;\n \n        // don't include first token if it is leading whitespace\n        String[] decapitokens = new String[tokens.length-1];\n        for (int i = 0; i < tokens.length - 1; i++)\n            decapitokens[i] = tokens[i+1];\n        return decapitokens;\n    }\n \n    public static String[] readAllLines() {\n        ArrayList<String> lines = new ArrayList<String>();\n        while (hasNextLine()) {\n            lines.add(readLine());\n        }\n        return lines.toArray(new String[0]);\n    }\n \n    public static int[] readAllInts() {\n        String[] fields = readAllStrings();\n        int[] vals = new int[fields.length];\n        for (int i = 0; i < fields.length; i++)\n            vals[i] = Integer.parseInt(fields[i]);\n        return vals;\n    }\n \n    public static double[] readAllDoubles() {\n        String[] fields = readAllStrings();\n        double[] vals = new double[fields.length];\n        for (int i = 0; i < fields.length; i++)\n            vals[i] = Double.parseDouble(fields[i]);\n        return vals;\n    }\n    \n    static {\n        resync();\n    }\n \n    private static void resync() {\n        setScanner(new Scanner(new java.io.BufferedInputStream(System.in), CHARSET_NAME));\n    }\n    \n    private static void setScanner(Scanner scanner) {\n        StdIn.scanner = scanner;\n        StdIn.scanner.useLocale(LOCALE);\n    }\n \n    public static int[] readInts() {\n        return readAllInts();\n    }\n \n    public static double[] readDoubles() {\n        return readAllDoubles();\n    }\n \n    public static String[] readStrings() {\n        return readAllStrings();\n    }\n \n}\n \nfinal class StdOut {\n \n    private static final String CHARSET_NAME = \"UTF-8\";\n \n    private static final Locale LOCALE = Locale.US;\n \n    private static PrintWriter out;\n \n    static {\n        try {\n            out = new PrintWriter(new OutputStreamWriter(System.out, CHARSET_NAME), true);\n        }\n        catch (UnsupportedEncodingException e) { System.out.println(e); }\n    }\n \n    private StdOut() { }\n \n    public static void close() {\n        out.close();\n    }\n \n    public static void println() {\n        out.println();\n    }\n \n    public static void println(Object x) {\n        out.println(x);\n    }\n \n    public static void println(boolean x) {\n        out.println(x);\n    }\n \n    public static void println(char x) {\n        out.println(x);\n    }\n \n    public static void println(double x) {\n        out.println(x);\n    }\n \n    public static void println(float x) {\n        out.println(x);\n    }\n \n    public static void println(int x) {\n        out.println(x);\n    }\n \n    public static void println(long x) {\n        out.println(x);\n    }\n \n    public static void println(short x) {\n        out.println(x);\n    }\n \n    public static void println(byte x) {\n        out.println(x);\n    }\n \n    public static void print() {\n        out.flush();\n    }\n \n    public static void print(Object x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void print(boolean x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void print(char x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void print(double x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void print(float x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void print(int x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void print(long x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void print(short x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void print(byte x) {\n        out.print(x);\n        out.flush();\n    }\n \n    public static void printf(String format, Object... args) {\n        out.printf(LOCALE, format, args);\n        out.flush();\n    }\n \n    public static void printf(Locale locale, String format, Object... args) {\n        out.printf(locale, format, args);\n        out.flush();\n    }\n \n} "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve();\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int TESTS = 1;\n  while (TESTS--) {\n    solve();\n  }\n  return 0;\n}\nvoid solve() {\n  string s, t;\n  cin >> s >> t;\n  long long a[10];\n  memset(a, 0, sizeof(a));\n  if (s.length() == 1 && s[0] == '0') {\n    if (t == s) {\n      cout << \"OK\";\n      return;\n    } else {\n      cout << \"WRONG_ANSWER\";\n      return;\n    }\n  }\n  for (long long i = 0; i < s.length(); i++) {\n    a[s[i] - '0']++;\n  }\n  string ans;\n  if (a[0] == 0) {\n    ans = s;\n    sort(ans.begin(), ans.end());\n    if (ans == t) {\n      cout << \"OK\";\n      return;\n    } else {\n      cout << \"WRONG_ANSWER\";\n      return;\n    }\n  } else {\n    long long index;\n    for (long long i = 1; i < 10; i++) {\n      if (a[i] != 0) {\n        index = i;\n        break;\n      }\n    }\n    a[index]--;\n    for (long long i = 0; i < 10; i++) {\n      if (a[i] != 0) {\n        while (a[i]--) {\n          char temp = '0' + i;\n          ans += string(1, temp);\n        }\n      }\n    }\n    sort(ans.begin(), ans.end());\n    char t2 = '0' + index;\n    string rtans = string(1, t2);\n    rtans += ans;\n    if (rtans == t) {\n      cout << \"OK\";\n      return;\n    } else {\n      cout << \"WRONG_ANSWER\";\n      return;\n    }\n  }\n  return;\n}\n"
        },
        {
            "language": 3,
            "solution": "class A:\n\n    def rotate_keypad(self, keypad):\n        reversed_rows = list(reversed(keypad))\n        return [\"\".join(list(reversed(x))) for x in reversed_rows]\n\n    def solve(self):\n        keypad = [input(), input(), input()]\n        if keypad == self.rotate_keypad(keypad):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nclass B:\n\n    def solve(self):\n        alice = input()\n        bob = input()\n\n        if bob[0] == '0' and alice[0] != '0':\n            print(\"WRONG_ANSWER\")\n            return\n        elif bob[0] == '0' and alice[0] == '0' and len(bob) != 1:\n            print(\"WRONG_ANSWER\")\n            return\n\n\n        bob = int(bob)\n\n        from itertools import permutations\n\n        smallest = int(alice)\n        if smallest == 0:\n            if bob == 0:\n                print(\"OK\")\n            else:\n                print(\"WRONG_ANSWER\")\n        else:\n            smallest = min([int(\"\".join(list(perm))) for perm in permutations(sorted(alice)) if perm[0] != '0'])\n            if smallest == bob:\n                print(\"OK\")\n            else:\n                print(\"WRONG_ANSWER\")\n\nclass C:\n\n    def solve(self):\n        [n, m] = [int(x) for x in input().split(\" \")]\n        prices = sorted([int(x) for x in input().split(\" \")])\n\n        fruits = []\n        for i in range(m):\n            fruits.append(input())\n\n        from collections import Counter\n        frequent_fruits = [f for (f, p) in Counter(fruits).most_common()]\n\n        price_assignment = {}\n        for f, p in zip(frequent_fruits, prices):\n            price_assignment[f] = p\n\n        smallest_price = sum([price_assignment[f] for f in fruits])\n\n        for f, p in zip(frequent_fruits, list(reversed(prices))):\n            price_assignment[f] = p\n\n        largest_price = sum([price_assignment[f] for f in fruits])\n\n        print(\"{} {}\".format(smallest_price, largest_price))\n\nclass D:\n\n    def solve(self):\n        n = int(input())\n        ladies = []\n\n        for x in input().split(\" \"):\n            ladies.append([x])\n\n        for i, x in enumerate(input().split(\" \")):\n            ladies[i].append(x)\n\n        for i, x in enumerate(input().split(\" \")):\n            ladies[i].append(x)\n\n        self_murderers = 0\n        for i in range(n):\n            if any([ladies[i][0] < ladies[x][0] and\\\n                    ladies[i][1] < ladies[x][1] and\\\n                    ladies[i][2] < ladies[x][2] for x in range(n) if x != i]):\n                self_murderers += 1\n\n        print(self_murderers)\n\nclass E:\n\n    def generate_matrix(self, i, j, n, matrix):\n        if i == j:\n            matrix[i][j] = 0\n        else:\n            if matrix[i][j] == 0:\n                dictionary = {}\n                for e in matrix[i]:\n                    dictionary[e] = True\n                for e in matrix[j]:\n                    dictionary[e] = True\n                for index in range(n):\n                    if index not in dictionary:\n                        matrix[i][j] = index\n                        matrix[j][i] = index\n                        break\n\n    def solve(self):\n        n = int(input())\n\n        matrix = [[0 for i in range(n)] for j in range(n)]\n        for i in range(n):\n            for j in range(n):\n                self.generate_matrix(i, j, n, matrix)\n        transponse = list(map(list, zip(*matrix)))\n        if matrix != transponse:\n            raise Exception(\"FC\")\n        print(\"\\n\".join([\" \".join([str(y) for y in x]) for x in matrix]))\n\nB().solve()\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python2.6\n\nnumSet = []\n\ndef sortFunc(a, b):\n\treturn int(a) - int(b)\n\ndef shuffle(num):\n\tfor digit in num:\n\t\tnumSet.append(digit)\n\ndef main():\n\tq = raw_input()\n\ta = raw_input()\n\tshuffle(q)\n\tnumSet.sort(sortFunc)\n\tif numSet[0] == '0':\n\t\tfor i in range(0, len(numSet)):\n\t\t\tif numSet[i] != '0':\n\t\t\t\tnumSet[0] = numSet[i]\n\t\t\t\tnumSet[i] = '0'\n\t\t\t\tbreak\n\t\n\tanswer = ''.join(numSet)\n\tif a == answer:\n\t\tprint 'OK'\n\telse:\n\t\tprint 'WRONG_ANSWER'\n\t\t\t\t\n\nif __name__ == \"__main__\":\n\tmain()\n\n"
        },
        {
            "language": 1,
            "solution": "r = raw_input()\na = raw_input()\nr1 =''.join(sorted(r))\nn = r1.count('0')\nif r1[n:n+1]+'0'*n+r1[n+1:]==a:\n\tprint 'OK'\nelse:\n\tprint 'WRONG_ANSWER'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  if (a == \"0\") {\n    if (b == \"0\") {\n      printf(\"OK\\n\");\n    } else {\n      printf(\"WRONG_ANSWER\\n\");\n    }\n  } else {\n    sort(a.begin(), a.end());\n    for (int i = 0; i < a.size(); i++) {\n      if (a[i] != '0') {\n        a.insert(a.begin(), a[i]);\n        a.erase(a.begin() + i + 1);\n        break;\n      }\n    }\n    if (a == b) {\n      printf(\"OK\\n\");\n    } else {\n      printf(\"WRONG_ANSWER\\n\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nOne cold winter evening Alice and her older brother Bob was sitting at home near the fireplace and giving each other interesting problems to solve. When it was Alice's turn, she told the number n to Bob and said:\n\n\u2014Shuffle the digits in this number in order to obtain the smallest possible number without leading zeroes.\n\n\u2014No problem! \u2014 said Bob and immediately gave her an answer.\n\nAlice said a random number, so she doesn't know whether Bob's answer is correct. Help her to find this out, because impatient brother is waiting for the verdict.\n\nInput\nThe first line contains one integer n (0\u2009\u2264\u2009n\u2009\u2264\u2009109) without leading zeroes. The second lines contains one integer m (0\u2009\u2264\u2009m\u2009\u2264\u2009109) \u2014 Bob's answer, possibly with leading zeroes.\n\nOutput\nPrint OK if Bob's answer is correct and WRONG_ANSWER otherwise.\n\"\"\"\n\nq = list(map(int, list(input())))\nq_set = set(q)\n\na = input()\n\nif len(q) == 1:\n    print(\"OK\" if (int(a) == q[0] and len(a) == 1) else \"WRONG_ANSWER\")\n\nelse:\n    answer  = ''\n\n    has_zero = 0 in q_set\n    if has_zero:\n        q_set.remove(0)\n\n    min_elm = min(q_set)\n    q_set.remove(min_elm)\n    answer += str(min_elm) + ('0' if has_zero else '') + str(min_elm)* (q.count(min_elm) - 1)\n\n    while q_set:\n        min_elm = min(q_set)\n        q_set.remove(min_elm)\n        answer += str(min_elm)*q.count(min_elm)\n\n    print(\"OK\" if a == answer else \"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class P012B {\n    public static void main(String[] args)\n    {\n        Scanner in = new Scanner(System.in);\n        \n        String first = in.next();\n        String second = in.next();\n        \n        int[] vals = new int[10];\n        for (int i = 0; i < first.length(); ++i)\n            vals[(first.charAt(i) - '0')]++;\n        \n        String ans = \"\";\n        \n        // first digit\n        for (int i = 1; i < 10; ++i)\n        {\n            if (vals[i] > 0)\n            {\n                ans = (char)('0' + i) + \"\";\n                --vals[i];\n                break;\n            }\n        }\n        \n        // the rest\n        for (int i = 0; i < 10; ++i)\n        {\n            for (int j = 0; j < vals[i]; ++j)\n                ans = ans + (char)('0' + i);\n        }\n\n        System.out.println(second.equals(ans) ? \"OK\" : \"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint compare(const void *a, const void *b) { return (*(char *)a > *(char *)b); }\nint main() {\n  int i, j;\n  char p[25], q[25];\n  char *n, *a;\n  n = p;\n  a = q;\n  cin >> p;\n  for (i = 0; i < strlen(p); i++) {\n    for (j = 0; j < strlen(p) - 1; j++) {\n      if (p[j] > p[j + 1]) {\n        char aux = p[j];\n        p[j] = p[j + 1];\n        p[j + 1] = aux;\n      }\n    }\n  }\n  if (strcmp(p, \"0\\0\") == 0) {\n    strcpy(q, \"0\\0\");\n  } else {\n    a++;\n    for (i = 0; i < strlen(p) && *n == '0'; i++) {\n      *(a++) = '0';\n      n++;\n    }\n    q[0] = *(n++);\n    i++;\n    for (; i < strlen(p); i++) {\n      *(a++) = *(n++);\n    }\n    *a = '\\0';\n  }\n  cin >> p;\n  if (p[0] == '0' && q[0] == '0' && strcmp(p, q) == 0) {\n    cout << \"OK\";\n  } else if (strlen(p) == strlen(q) && strcmp(p, q) == 0) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class StringCharSorting {\n   public static void main(String[] args) {\n\t  Scanner sc=new Scanner(System.in);\n\t    String s=sc.next();\n\t    String b=sc.next();int min=11;\n\t    if(s.length()==b.length()) {\n\t    \tif(s.length()==1) {\n\t    \t\tif(s.equals(b)) {\n\t    \t\t\tSystem.out.println(\"OK\");\n\t    \t\t}else {\n\t    \t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t    \t\t}\n\t    \t}else {\n\t    int a[]=new int[10];\n\t    for(int i=0;i<s.length();i++) {\n\t    \tif(Integer.parseInt(\"\"+s.charAt(i))<min&&Integer.parseInt(\"\"+s.charAt(i))!=0) {\n\t    \t\tmin=Integer.parseInt(\"\"+s.charAt(i));\n\t    \t}\n\t    \ta[Integer.parseInt(\"\"+s.charAt(i))]++;\n\t    }\n\t    a[min]--;\n\t    String f=min+\"\";\n\t    for(int i=0;i<10;i++) {\n\t    \tfor(int j=0;j<a[i];j++) {\n\t    \t\tf+=i;\n\t    \t}\n\t    }\n\t    if(f.equals(b))\n\t    System.out.println(\"OK\");\n\t    else\n\t    System.out.println(\"WRONG_ANSWER\");\n\t    \n\t    }}\n\t    else {\n\t    \tSystem.out.println(\"WRONG_ANSWER\");\n\t    }\n\t    \n}\n}\n"
        },
        {
            "language": 3,
            "solution": "a=input()\nb=input()\nc=int(b)\nn=len(a)\nj=0\nA=[]\nwhile j<n:\n    A.append(a[j])\n    j=j+1\nj=1\nwhile j<n:\n    key=A[j]\n    i=j-1\n    while i>-1 and A[i]>key:\n        A[i+1]=A[i]\n        i=i-1\n    A[i+1]=key\n    j=j+1\nd=int(A[0])\nj=0\nif d==0:\n    while j<n:\n        if int(A[j])>0:\n            break\n        j=j+1\n    if j==n:\n        i=j-1\n    else:\n        i=j\n    A[0],A[i]=A[i],A[0]\nstr=''\nstr=str.join(A)\ne=int(b[0])\nnum=int(str)\nx=len(str)\ny=len(b)\nif x==1 and y==1 and num==c:\n    print('OK')\nelif e==0:\n    print('WRONG_ANSWER')\nelif num==c:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  char a[10], e[10];\n  int b[10], d[10], i, j, c = 0, t;\n  scanf(\"%s\", a);\n  scanf(\"%s\", e);\n  for (i = 0; i < strlen(a); i++) {\n    b[i] = a[i] - '\\0';\n    b[i] = b[i] - 48;\n    d[i] = e[i] - '\\0';\n    d[i] = d[i] - 48;\n  }\n  for (i = 0; i < strlen(a); i++) {\n    for (j = i + 1; j < strlen(a); j++) {\n      if (b[i] > b[j]) {\n        t = b[i];\n        b[i] = b[j];\n        b[j] = t;\n      }\n    }\n  }\n  for (i = 0; i < strlen(a); i++) {\n    if (b[i] == 0)\n      c++;\n    else\n      break;\n  }\n  if (c != strlen(a)) {\n    t = b[c];\n    b[c] = b[0];\n    b[0] = t;\n  }\n  c = 0;\n  for (i = 0; i < strlen(a); i++) {\n    if (b[i] == d[i]) c++;\n  }\n  if (c == strlen(a) && c == strlen(e))\n    printf(\"OK\");\n  else\n    printf(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport static java.lang.Math.*;\n\npublic class Main {\n    BufferedReader in;\n    //StreamTokenizer in;\n    PrintWriter out;\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n\n    void run() throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        //in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        out = new PrintWriter(new OutputStreamWriter(System.out));\n\n        //in = new BufferedReader(new FileReader(\"input.txt\"));\n        //in = new StreamTokenizer(new BufferedReader(new FileReader(\"input.txt\")));\n        //out = new PrintWriter(new OutputStreamWriter(\"output.txt\"));\n        int n = Integer.parseInt(in.readLine());\n        String s = in.readLine();\n        if(s.charAt(0) == '0' && n != 0) {\n            out.print(\"WRONG_ANSWER\"); out.flush(); return;\n        }\n        int m = Integer.parseInt(s);\n        if(m == 0 && n == 0) {\n            if(s.length() == 1){\n                out.print(\"OK\"); out.flush(); return;\n            }\n            else {\n                out.print(\"WRONG_ANSWER\"); out.flush(); return;\n            }\n        }\n        int[] c = new int[10];\n        if(n == 0) c[0]++;\n        for(; n > 0; n /= 10)\n            c[n%10]++;\n        int k = 0;\n        int i = 0;\n        for(i = 1; i < 10; i++)\n            if(c[i] != 0) break;\n        if(i == 10) {\n            out.print(\"WRONG_ANSWER\"); out.flush(); return;\n        }\n        k = i; c[i]--;\n        for(i = 0; i < c[0]; i++) k *= 10;\n        for(i = 1; i < 10; i++)\n            for(int j = 0; j < c[i]; j++) {\n                k *= 10;\n                k += i;\n            }\n        if(k == m) out.print(\"OK\");\n        else out.print(\"WRONG_ANSWER\");\n        out.flush();\n    }\n    /*\n    int ni() throws IOException {\n        in.nextToken(); return (int)in.nval;\n    }\n    */\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s1[100], s2[100], s3[100];\nint main() {\n  cin >> s1 >> s2;\n  sort(s1, s1 + strlen(s1));\n  int k = 0;\n  while (s1[0] == '0' && strlen(s1) != 1) {\n    k++;\n    int p;\n    p = s1[0];\n    s1[0] = s1[k];\n    s1[k] = p;\n  }\n  if (strcmp(s1, s2) == 0)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string x, y;\n  cin >> x >> y;\n  map<int, int> M;\n  for (int i = 0; i < x.size(); i++) {\n    M[x[i] - '0'] += 1;\n  }\n  string res = \"\";\n  for (int i = 1; i <= 9; i++) {\n    if (M[i] > 0) {\n      res += (i + '0');\n      M[i]--;\n      break;\n    }\n  }\n  for (int i = 0; i <= 9; i++) {\n    while (M[i] > 0) {\n      res += (i + '0');\n      M[i]--;\n    }\n  }\n  (res == y) ? cout << \"OK\" : cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint num[15];\nint main() {\n  bool flag = true;\n  memset(num, 0, sizeof(num));\n  string s;\n  cin >> s;\n  for (int i = 0; i < s.size(); i++) num[s[i] - '0']++;\n  string ans;\n  cin >> ans;\n  if (ans.size() != s.size()) flag = false;\n  int first;\n  for (first = 1; first <= 9; first++)\n    if (num[first] != 0) break;\n  num[first]--;\n  if (ans[0] - '0' != first) flag = false;\n  int cur = 0;\n  for (int i = 1; i < ans.size(); i++) {\n    while (num[cur] == 0) cur++;\n    if (ans[i] - '0' == cur)\n      num[cur]--;\n    else\n      flag = false;\n  }\n  if (s == \"0\" && ans == \"0\") flag = true;\n  if (flag)\n    puts(\"OK\");\n  else\n    puts(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\n    void run() throws IOException {\n        char[] a = nl().toCharArray();\n        int n = a.length;\n        char[] b = nl().toCharArray();\n        int m = b.length;\n        int[] q = new int[10];\n        for (int i = 0; i < n; i++)\n            q[a[i] - 48]++;\n        for (int i = 0; i < m; i++)\n            q[b[i] - 48]--;\n        if (n != m || (m > 1 && b[0] == '0')) {\n            pw.print(\"WRONG_ANSWER\");\n            return;\n        }\n        for (int i = 0; i < 10; i++)\n            if (q[i] != 0) {\n                pw.print(\"WRONG_ANSWER\");\n                return;\n            }\n        int z = 0;\n        for (int i = 0; i < m; i++)\n            if (b[i] == '0')\n                z = i;\n        for (int i = 1; i < z; i++)\n            if (b[i] != '0') {\n                pw.print(\"WRONG_ANSWER\");\n                return;\n            }\n        char t = b[0];\n        b[0] = b[z];\n        b[z] = t;\n        for (int i = 1; i < m; i++)\n            if (b[i] < b[i - 1]) {\n                pw.print(\"WRONG_ANSWER\");\n                return;\n            }\n\n        pw.print(\"OK\");\n    }\n\n    String next() throws IOException {\n        while (st == null || !st.hasMoreTokens())\n            st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    String nl() throws IOException {\n        return br.readLine();\n    }\n\n    PrintWriter pw;\n    BufferedReader br;\n    StringTokenizer st;\n\n    public static void main(String[] args) throws IOException {\n        long timeout = System.currentTimeMillis();\n        boolean CF = System.getProperty(\"ONLINE_JUDGE\") != null;\n        PrintWriter _pw = new PrintWriter(System.out);\n        BufferedReader _br = new BufferedReader(CF ? new InputStreamReader(System.in) : new FileReader(new File(\"in.txt\")));\n        new B(_br, _pw).run();\n        if (!CF) {\n            _pw.println();\n            _pw.println(System.currentTimeMillis() - timeout);\n        }\n        _br.close();\n        _pw.close();\n    }\n\n    public B(BufferedReader _br, PrintWriter _pw) {\n        br = _br;\n        pw = _pw;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid adskiy_razgon() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n}\nconst int mxN = 1e+9 + 7;\nconst long long INF = 1e+18 + 7;\nlong long nod(long long a, long long b) {\n  if (b > a) {\n    swap(a, b);\n  }\n  while (b > 0) {\n    a %= b;\n    swap(a, b);\n  }\n  return a;\n}\nlong long nok(long long a, long long b) { return a * b / nod(a, b); }\nvoid sp(long long a, double b) { cout << fixed << setprecision(a) << b; }\nlong long binpow(long long a, long long n) {\n  if (n == 0) {\n    return 1;\n  }\n  if (n % 2 == 1) {\n    return binpow(a, n - 1) * a;\n  } else {\n    long long b = binpow(a, n / 2);\n    return b * b;\n  }\n}\nvoid solve() {\n  string a, b;\n  cin >> a >> b;\n  if (b[0] == '0') {\n    if (b.size() == 1 && a.size() == 1) {\n      if (b == a) {\n        cout << \"OK\";\n        return;\n      }\n    }\n    cout << \"WRONG_ANSWER\";\n    return;\n  }\n  if (a.size() == 1) {\n    if (a == b) {\n      cout << \"OK\";\n    } else {\n      cout << \"WRONG_ANSWER\";\n    }\n    return;\n  }\n  string ans = \"\";\n  int cnt = 0;\n  for (int i = 0; i < a.size(); ++i) {\n    if (a[i] != '0') {\n      ans += a[i];\n    } else {\n      cnt++;\n    }\n  }\n  sort(ans.begin(), ans.end());\n  string zero = \"\";\n  while (cnt--) {\n    zero += \"0\";\n  }\n  char x = ans[0];\n  ans.erase(ans.begin());\n  string otv = \"\";\n  otv += x;\n  otv += zero;\n  otv += ans;\n  if (otv == b) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n}\nint main() {\n  adskiy_razgon();\n  long long t = 1;\n  for (int i = 1; i <= t; ++i) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import os.path\nimport sys\nfrom math import *\nfrom collections import defaultdict as dd, deque\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef inp(): return sys.stdin.readline().strip()\n\nn=inp()\nm=inp()\ns=[n[i] for i in range(len(n))]\ns.sort()\nif len(s)>1 and s[0]=='0':\n    for i in range(1,len(s)):\n        if s[i]!=0:\n            s[0],s[i]=s[i],s[0]\n            break\nans=''.join(s)\nif ans==m:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Scanner;\nimport java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class Main {\n\tpublic static void main(String[] args){\t\t\n\t\tScanner input = new Scanner(System.in);\n\t\tString n = input.next();\n\t\tString m = input.next();\n\t\tArrayList<String> al = new ArrayList<String>(Arrays.asList(n.split(\"(?!^)\")));\t\t\n\t\tCollections.sort(al);\t\t\n\t\tString temp = \"\";\n\t\t\n\t\tfor(String i : al)\n\t\t\ttemp += i;\n\t\t\n\t\tint counter = 0;\n\t\tif(temp.charAt(0) == '0'){\n\t\t\t\n\t\t\tSortedSet<String> s = new TreeSet<String>(al);\n\t\t\tfor(String i : s){\n\t\t\t\tif(counter == 1){\n\t\t\t\t\ttemp = temp.replaceFirst(i, \"0\");\n\t\t\t\t\ttemp = temp.replaceFirst(\"0\", i);\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t++counter;\t\t\n\t\t\t}\n\t\t}\t\t\n\t\tSystem.out.println(temp.equals(m) ? \"OK\" : \"WRONG_ANSWER\");\t\t\n\t}\t\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n\n    Scanner in;\n    PrintWriter out;\n\n    void solve() {\n        char num1[] = in.nextLine().toCharArray();\n        String num2 = in.nextLine();\n        Arrays.sort(num1);\n        int nZeros = 0;\n        for (int i = 0; i < num1.length; i++) {\n            if (num1[i] - '0' == 0) {\n                nZeros++;\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        int min = 10;\n        for (int i = nZeros; i < num1.length; i++) {\n            min = Math.min(min, num1[i]-'0');\n        }\n        int i = nZeros;\n        boolean wasFound = false;\n        while (true) {\n            if (i==num1.length){\n                break;\n            }\n            if (num1[i]-'0' == min) {\n                sb.append(num1[i]-'0');\n                for (int c = 0; c < nZeros; c++) {\n                    sb.append('0');\n                }\n                nZeros = 0;\n            }else{\n                break;\n            }\n            i++;\n        }\n        for (i = 0; i < nZeros; i++) {\n            sb.append('0');\n        }\n        for (i = nZeros; i < num1.length; i++) {\n            if (num1[i]-'0' > min) {\n                sb.append(num1[i]-'0');\n            }\n        }\n        if (sb.toString().equals(num2)) {\n            out.println(\"OK\");\n        } else {\n            out.println(\"WRONG_ANSWER\");\n        }\n\n    }\n\n    void run() {\n        in = new Scanner(System.in);\n        out = new PrintWriter(System.out);\n        try {\n            solve();\n        } finally {\n            out.close();\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main().run();\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()  # \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\nk = input()  # \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\nl1 = len(n)\nl2 = len(k)\n\n# \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\na = [0]*10\n\nif l2 > l1:\n    print('WRONG_ANSWER')\nelse:\n    for i in range(l1):\n        a[int(n[i])] += 1\n    # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd, \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd:\n    # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd, \ufffd\ufffd\ufffd\ufffd\ufffd 0, \ufffd\ufffd\ufffd\ufffd\ufffd 0, \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n    s = ''\n    \n    pos = 1\n    while (pos < 10) and (a[pos] == 0):\n        pos += 1\n        \n    if pos != 10:\n        s += str(pos)+'0'*a[0]\n        a[pos] -= 1\n        for i in range(pos, 10):\n            s += str(i)*a[i]\n        # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n    else:\n        s = '0'\n        \n    if s == k:\n        print('OK')\n    else:\n        print('WRONG_ANSWER')"
        },
        {
            "language": 1,
            "solution": "r=lambda:map(int,raw_input().split())\n\ndef main():\n\tn=int(raw_input())\n\n\tmoo=raw_input()\n\tif( len(moo) > 0):\n\t\tif( moo.find('0') == 0 and len(moo) > 1 ):\n\t\t\tprint \"WRONG_ANSWER\"\n\t\t\treturn\n\tm=int(moo)\n\n\t#n=3310\n\t#m=1033\n\n\tcorrect = list(str(n))\n\tcorrect = sorted(correct)\n\n\tfor letter in range(len(correct)):\n\t\tif( correct[letter]!='0' ):\n\t\t\tt=correct[letter]\n\t\t\tdel( correct[letter] )\n\t\t\tcorrect = [t] + correct\n\t\t\tbreak\n\n\t#print \"\".join([str(x) for x in correct])\n\t\n\tnn=int( \"\".join(correct) )\n\tif nn==m:\n\t\tprint \"OK\"\n\telse:\n\t\tprint \"WRONG_ANSWER\"\n\t\t\n\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string str1, str2;\n  cin >> str1 >> str2;\n  sort(str1.begin(), str1.end());\n  for (int i = str1.size() - 2; i >= 0; i--) {\n    if (str1[i] == '0') swap(str1[i], str1[i + 1]);\n  }\n  if (str1 == str2)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar ini[101], des[101];\nint main() {\n  int i, L = strlen(ini), j;\n  gets(ini);\n  gets(des);\n  for (i = 0; ini[i]; i++) {\n    for (j = i + 1; ini[j]; j++) {\n      if (ini[i] > ini[j]) {\n        swap(ini[i], ini[j]);\n      }\n    }\n  }\n  for (i = 0; ini[i]; i++) {\n    if (ini[i] != '0') break;\n  }\n  if (ini[i]) {\n    swap(ini[i], ini[0]);\n  }\n  if (!strcmp(ini, des)) {\n    puts(\"OK\");\n  } else {\n    puts(\"WRONG_ANSWER\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, r;\n  cin >> s >> r;\n  sort(s.begin(), s.end());\n  int i = 0;\n  while (s[i] == '0' && i < s.length()) i++;\n  if (i < s.length()) swap(s[i], s[0]);\n  if (s.length() != r.length()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  for (i = 0; i < s.length(); i++) {\n    if (s[i] != r[i]) {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  }\n  cout << \"OK\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\n\n\npublic class CorrectSolution {\n    String n;\n    String m;\n    char[] cs;\n    \n    private void checkZero() {\n        if(n.equals(\"0\")) {\n            if(m.equals(\"0\")) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(\"WRONG_ANSWER\");\n            }\n            System.exit(0);\n        }\n    }\n    \n    private void checkLength() {\n        if(n.length() != m.length()) {\n            System.out.println(\"WRONG_ANSWER\");\n            System.exit(0);\n        }\n    }\n    \n    private void checkValues() {\n        cs = n.toCharArray();\n        Arrays.sort(cs);\n        int notZeroPos = 0;\n        for(int i=0; i<cs.length; i++) {\n            if(cs[i] != '0') {\n                notZeroPos = i;\n                break;\n            }\n        }\n        if(notZeroPos > 0) {\n            cs[0] = cs[notZeroPos];\n            cs[notZeroPos] = '0';\n        }\n        String res = \"\";\n        for(int i=0; i<cs.length; i++) {\n            res += cs[i];\n        }\n        if(res.equals(m)) System.out.println(\"OK\");\n        else System.out.println(\"WRONG_ANSWER\");\n    }\n    \n    private void process() {\n        Scanner scanner = new Scanner(System.in);\n        this.n = scanner.next();\n        this.m = scanner.next();\n        checkLength();\n        checkZero();\n        checkValues();\n    }\n    \n    public static void main(String[] args) {\n        new CorrectSolution().process();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "# Author : nitish420 --------------------------------------------------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n# mod=10**9+7\n# sys.setrecursionlimit(10**6)\n# mxm=sys.maxsize\n# from functools import lru_cache\n\n\n\ndef main():\n    n=list(map(int,input()))\n    m=list(map(int,input()))\n    n.sort()\n    i=0\n    while n[i]==0 :\n        i+=1\n        if i==len(n):\n            break\n    if i!=len(n):\n        n[i],n[0]=n[0],n[i]\n    \n    if n==m:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n    \n    \n\n\n\n\n\n\n#----------------------------------------------------------------------------------------\ndef nouse0():\n    # This is to save my code from plag due to use of FAST IO template in it.\n    a=420\n    b=420\n    print(f'i am nitish{(a+b)//2}')\ndef nouse1():\n    # This is to save my code from plag due to use of FAST IO template in it.\n    a=420\n    b=420\n    print(f'i am nitish{(a+b)//2}')\ndef nouse2():\n    # This is to save my code from plag due to use of FAST IO template in it.\n    a=420\n    b=420\n    print(f'i am nitish{(a+b)//2}')\n\n\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = 'x' in file.mode or 'r' not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b'\\n') + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode('ascii'))\n        self.read = lambda: self.buffer.read().decode('ascii')\n        self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\n\n\n\ndef nouse3():\n    # This is to save my code from plag due to use of FAST IO template in it.\n    a=420\n    b=420\n    print(f'i am nitish{(a+b)//2}')\ndef nouse4():\n    # This is to save my code from plag due to use of FAST IO template in it.\n    a=420\n    b=420\n    print(f'i am nitish{(a+b)//2}')\ndef nouse5():\n    # This is to save my code from plag due to use of FAST IO template in it.\n    a=420\n    b=420\n    print(f'i am nitish{(a+b)//2}')\n\n\n\n# endregion\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = INT_MAX;\nconst long long linf = LLONG_MAX;\nconst long long modn = (long long)1e9 + 7;\ninline long long mod(long long x) { return x % modn; }\nint main() {\n  string str, str2;\n  getline(cin, str);\n  getline(cin, str2);\n  sort(str.begin(), str.end());\n  if (str[0] == '0') {\n    int sz = str.size();\n    for (int i = 1; i < sz; i++)\n      if (str[i] != '0') {\n        swap(str[0], str[i]);\n        break;\n      }\n  }\n  puts(!str.compare(str2) ? \"OK\" : \"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstack<time_t> time_stack;\nvoid startTimer() { time_stack.push(clock()); }\ndouble stopTimer() {\n  double time = clock() - time_stack.top();\n  time_stack.pop();\n  return time / double(CLOCKS_PER_SEC);\n}\ndouble sqr(double x) { return x * x; }\nint main() {\n  startTimer();\n  ios::sync_with_stdio(false);\n  string TASK = \"immediate\";\n  cout.precision(9);\n  cout << fixed;\n  string ns, ms;\n  cin >> ns >> ms;\n  long long n = 0, m = 0;\n  vector<int> dig(10);\n  for (int i = 0; i < ns.size(); i++) {\n    dig[ns[i] - '0']++;\n    n = n * 10 + ns[i] - '0';\n  }\n  vector<int> digm(10);\n  for (int i = 0; i < ms.size(); i++) {\n    digm[ms[i] - '0']++;\n    m = m * 10 + ms[i] - '0';\n  }\n  bool eq = true;\n  for (int i = 0; i < 10 && eq; i++) eq = dig[i] == digm[i];\n  long long k = 0;\n  for (int i = 1; i < 10; i++)\n    if (dig[i] > 0) {\n      k = i;\n      dig[i]--;\n      break;\n    }\n  for (int i = 0; i < 10; i++)\n    while (dig[i] > 0) {\n      k = k * 10 + i;\n      dig[i]--;\n    }\n  if (m == k && eq)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e3 + 10;\nchar a[N], b[N];\nlong long p, q;\nint main() {\n  int s[N];\n  cin >> a;\n  cin >> b;\n  int h = max(strlen(b), strlen(a));\n  for (int i = 0; i < h; i++) {\n    s[i] = a[i] - '0';\n    b[i] = b[i] - '0';\n  }\n  sort(s, s + h);\n  int m = 0;\n  for (int i = 0; i < h; i++) {\n    if (s[i] == 0) {\n      m++;\n    } else {\n      break;\n    }\n  }\n  s[0] = s[m];\n  for (int i = 1; i <= m; i++) {\n    s[i] = 0;\n  }\n  for (int i = 0; i < h; i++) {\n    if (s[i] != b[i]) {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  }\n  cout << \"OK\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string N, M, A;\n  int i = 0;\n  cin >> N >> A;\n  if (N == \"0\" && A == \"0\") {\n    cout << \"OK\";\n    return 0;\n  }\n  sort(N.begin(), N.end());\n  while (N[i] == '0') {\n    ++i;\n  }\n  int t = N[i];\n  N[i] = N[0];\n  N[0] = t;\n  if (N == A) {\n    cout << \"OK\";\n  } else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint main() {\n  long long count = 0, min = 1000000001, m, n, i, j;\n  string s, c, d;\n  cin >> s;\n  cin >> c;\n  d = s;\n  n = s.length();\n  m = c.length();\n  if (n != m) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  for (i = 0; i < n; i++) {\n    if (s[i] == '0') count++;\n    if (s[i] - '0' < min && s[i] != '0') min = s[i] - '0';\n  }\n  if (count == 0) {\n    sort(s.begin(), s.end());\n    if (s == c) {\n      cout << \"OK\";\n      return 0;\n    } else {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  } else if (count == n) {\n    if (s != c)\n      cout << \"WRONG_ANSWER\";\n    else\n      cout << \"OK\";\n    return 0;\n  } else {\n    sort(d.begin(), d.end());\n    for (i = count + 1; i < n; i++) {\n      if (d[i] != c[i]) {\n        cout << \"WRONG_ANSWER\";\n        return 0;\n      }\n    }\n    if (c[0] - '0' != min) {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n    for (i = 1; i <= count; i++) {\n      if (c[i] != '0') {\n        cout << \"WRONG_ANSWER\";\n        return 0;\n      }\n    }\n    cout << \"OK\";\n    return 0;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "s = [int(ch) for ch in input()]\nss = [int(ch) for ch in input()]\nif s==[0] and ss==[0]:\n    print(\"OK\")\n    exit()\ns.sort()\nans=[]\nfor i in range(len(s)):\n    if s[i]!=0:\n        ans.append(s[i])\n        break\nfor j in range(i):\n    ans.append(0)\nfor k in range(i+1,len(s)):\n    ans.append(s[k])\n#print(ans) \nif ans==ss:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n        "
        },
        {
            "language": 4,
            "solution": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\nimport java.util.Scanner;\n\n/**\n *\n * @author IR_HAM\n */\npublic class CorrectSolution\n{\n    public static void main(String [] args)\n    {\n        Scanner in = new Scanner(System.in);\n        String alice = in.next();\n        String bob = in.next();\n        \n        int [] num = new int[10];\n        for(int i = 0; i < alice.length(); i++)\n            num[((int) alice.charAt(i)) - 48]++;\n        \n        String ans = \"\";\n        int k = 1;\n        while(k < num.length && num[k] == 0)\n            k++;\n        if(k == num.length)\n            ans = \"0\";\n        else\n        {\n            ans += \"\" + k;\n            num[k]--;\n            for(int i = 0; i < num.length; i++)\n                for(int j = 0; j < num[i]; j++)\n                    ans += i;\n        }\n        \n        System.out.println(bob.equals(ans) ? \"OK\" : \"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comp(char a, char b) { return (a - '0') < (b - '0'); }\nint main() {\n  char n1[15], r1[15];\n  ;\n  scanf(\"%s\", n1);\n  scanf(\"%s\", r1);\n  char rc[15];\n  sort(n1, n1 + strlen(n1), comp);\n  int secpos;\n  int ult = 0;\n  for (int i = 0; i < strlen(n1); i++) {\n    if (n1[i] != '0') {\n      rc[0] = n1[i];\n      secpos = i;\n      break;\n    }\n  }\n  for (int i = 0; i < strlen(n1); i++) {\n    if (i != secpos) {\n      ult++;\n      rc[ult] = n1[i];\n    }\n  }\n  int resp = 1;\n  if (strlen(n1) != strlen(r1)) resp = 0;\n  for (int i = 0; i <= ult; i++)\n    if (rc[i] != r1[i]) resp = 0;\n  if (strlen(n1) == 1 && strlen(r1) == 1 && n1[0] == r1[0]) resp = 1;\n  if (resp)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong double pi = 3.1415926536;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  if (a[0] == '0' && a.length() > 1) {\n    int i = 1;\n    while (a[i] == 0 && i < (int)a.length()) {\n      i++;\n    }\n    char temp = a[0];\n    a[0] = a[i];\n    a[i] = temp;\n  }\n  if (a.compare(b) == 0)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class CorrectSolution {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tMyScanner sc = new MyScanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tString m = sc.next();\n\t\tif (n == 0) {\n\t\t\tout.println(m.equals(\"0\") ? \"OK\" : \"WRONG_ANSWER\");\n\t\t} else {\n\t\t\tArrayList<Integer> a = new ArrayList<>();\n\t\t\twhile (n > 0) {\n\t\t\t\ta.add(n % 10);\n\t\t\t\tn /= 10;\n\t\t\t}\n\t\t\tCollections.sort(a);\n\t\t\tint i;\n\t\t\tfor (i = 0; i < a.size(); i++)\n\t\t\t\tif (a.get(i) != 0)\n\t\t\t\t\tbreak;\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tsb.append(a.get(i));\n\t\t\tfor (int j = 0; j < i; j++)\n\t\t\t\tsb.append(a.get(j));\n\t\t\tfor (int j = i + 1; j < a.size(); j++)\n\t\t\t\tsb.append(a.get(j));\n\t\t\tout.println(m.equals(sb.toString()) ? \"OK\" : \"WRONG_ANSWER\");\n\t\t}\n\t\tout.flush();\n\t\tout.close();\n\t}\n\n\tstatic class MyScanner {\n\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic MyScanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic MyScanner(String filename) throws IOException {\n\t\t\tbr = new BufferedReader(new FileReader(new File(filename)));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char a[15], b[15];\n  int n, i, j;\n  cin >> a;\n  cin >> b;\n  n = strlen(a);\n  sort(a, a + n);\n  if (a[0] == '0' && n != 1)\n    for (i = 0; i < n; i++)\n      if (a[i] != '0') {\n        swap(a[0], a[i]);\n        break;\n      }\n  if (!strcmp(a, b))\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "a = sorted(list(map(int,input())))\nb = input()\nif sorted(list(map(int,b))) != a: print('WRONG_ANSWER'); exit()\nfor x in a:\n    if x > 0:\n        a.remove(x)\n        a.insert(0,x)\n        break\nprint('OK' if int(''.join(str(elem) for elem in a)) == int(b) else 'WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main{\n\n  int a[];\n  int stack[];\n  int yk = 0, min = Integer.MAX_VALUE;\n  boolean used[];\n  public void run(){\n    Scanner in = new Scanner(System.in);\n    String s = in.next();\n    String s2 = in.next();\n    \n    if (s.length() !=s2.length()){\n      System.out.println(\"WRONG_ANSWER\");\n      return;\n    }\n    \n    used = new boolean[s.length()];\n    for(int i=0;i<s2.length();i++)\n      for(int j=0;j<s.length();j++) if(!used[j])\n        if (s2.charAt(i) == s2.charAt(j)) used[j] = true;\n    for(int i=0;i<s2.length();i++)\n      if (!used[i]){\n        System.out.println(\"WRONG_ANSWER\");\n        return;\n      }  \n    if (s.equals(\"0\") && Integer.parseInt(s2) == 0){\n      System.out.println(\"OK\");\n      return;\n    }\n    a = new int[s.length()];\n    for(int i=0;i<a.length;i++)\n      a[i] = s.charAt(i)-'0';\n    stack = new int[10];\n    Arrays.fill(used, false);\n    \n    for(int i=0;i<a.length;i++){\n      used[i] = true;\n      stack[yk++] = a[i];\n      rec();\n      used[i] = false;\n      yk--;\n    }\n    if (min == Integer.parseInt(s2)) System.out.println(\"OK\");\n    else System.out.println(\"WRONG_ANSWER\");\n  }\n  \n  private void rec(){\n    if (yk == a.length){\n      if (stack[0] == 0) return;\n      String num = \"\";\n      for(int i=0;i<yk;i++)\n        num+=stack[i];\n      min = Math.min(min, Integer.parseInt(num));\n      return;\n    }\n    for(int i=0;i<a.length;i++)\n      if (!used[i]){\n        used[i] = true;\n        stack[yk++] = a[i];\n        rec();\n        used[i] = false;\n        yk--;\n      }\n  }\n  \n  public static void main(String args[]) throws Exception{\n    new Main().run();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 3;\nconst double PI = acos(-1);\nconst long long MOD = 1000000007;\nlong long powmod(long long a, long long b) {\n  long long p = MOD;\n  a %= p;\n  if (!a) return 0;\n  long long pr = 1;\n  while (b > 0) {\n    if (b & 1) {\n      pr *= a;\n      pr %= p;\n      --b;\n    }\n    a *= a;\n    a %= p;\n    b /= 2;\n  }\n  return pr;\n}\nbool isPrime(long long n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 or n % 3 == 0) return false;\n  for (long long i = 5; i * i <= n; i += 6) {\n    if (n % i == 0 or n % (i + 2) == 0) return false;\n  }\n  return true;\n}\nvoid seive(bool a[]) {\n  long long mx = sqrt(N), ii, jj;\n  for (ii = 3; ii <= mx; ii += 2)\n    if (!a[ii])\n      for (jj = ii * ii; jj <= N; jj += 2 * ii) a[jj] = true;\n}\nvoid numofdiv(long long a[]) {\n  long long mx = sqrt(N), ii, jj;\n  for (ii = 1; ii <= mx; ii++) {\n    for (jj = ii * ii; jj <= N; jj += ii) {\n      if (jj == ii * ii)\n        a[jj]++;\n      else\n        a[jj] += 2;\n    }\n  }\n}\nvoid sumofdiv(long long a[]) {\n  long long mx = sqrt(N), ii, jj;\n  for (ii = 1; ii <= mx; ii++) {\n    for (jj = ii * ii; jj <= N; jj += ii) {\n      if (jj == ii * ii)\n        a[jj] += ii;\n      else\n        a[jj] += ii + jj / ii;\n    }\n  }\n}\nvoid _case() {\n  string a, b, c;\n  cin >> a >> b;\n  int i, n = a.size(), x = 0;\n  sort(a.rbegin(), a.rend());\n  if (!stoll(a) and stoll(a) == stoll(b) and a.size() == b.size())\n    cout << \"OK\" << '\\n';\n  else if (!stoll(a))\n    cout << \"WRONG_ANSWER\" << '\\n';\n  else {\n    while (a[n - 1] == '0') x++, n--, a.pop_back();\n    c += a[n - 1];\n    a.pop_back();\n    reverse(a.begin(), a.end());\n    for (i = 0; i < x; i++) c += '0';\n    for (auto i : a) c += i;\n    if (b == c)\n      cout << \"OK\" << '\\n';\n    else\n      cout << \"WRONG_ANSWER\" << '\\n';\n  }\n}\nint main() { _case(); }\n"
        },
        {
            "language": 3,
            "solution": "a = list(input())\nb = list(input())\n\nif a.count('0') == len(a):\n    if(b.count('0') == len(b)):\n        if len(a) == len(b):\n            print(\"OK\")\n        else: print(\"WRONG_ANSWER\")\n    else:\n        print(\"WRONG_ANSWER\")\n\nelse: \n\n    a.sort()\n    x = a.count('0')\n    a = [a[x]] + ['0'] * x + a[x+1:]\n    print(\"OK\" if a == b else \"WRONG_ANSWER\")\n\n"
        },
        {
            "language": 3,
            "solution": "\n\na = input()\nx=input()\nb = []\n\nu=''\nfor k in a:\n    h = int(k)\n    if h==0:\n        u+=(k)\n    else:\n        b.append(h)\n\n\n\nb.sort()\n\nif len(b)>0:\n    p=str(b[0])+u\nelse:\n    p=u\n\n\nif len(b)>1:\n    for k in range(1,len(b)):\n        p+=str(b[k])\n\n\nif x==p:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i = 0;\n  string s, t;\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  for (; i < s.length(); i++)\n    if (s[i] != '0') {\n      swap(s[0], s[i]);\n      break;\n    }\n  puts(s == t ? \"OK\" : \"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 1,
            "solution": "s = raw_input();\nt = raw_input();\n\nflag = 1;\nfor i in range(len(s)):\n\tif s.count(s[i]) != t.count(s[i]):\n\t\tflag = 0; break;\n#print flag\npos = 0\n\nif t[0] == '0' and len(t) > 1:\n\tflag = 0;\nif flag:\n\tfor i in range(pos+1, len(t)):\n\t\tif t[i] == '0' and i == pos+1:\n\t\t\tcontinue;\n\t\tif t[i] < t[i-1]:\n\t\t\tflag = 0; break;\nprint \"OK\" if flag else \"WRONG_ANSWER\";\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string in, p = \"OK\";\n  cin >> in;\n  map<char, int> f;\n  int i = 0, j;\n  char x, out[in.length()];\n  for (j = 0; j < in.length(); j++) f[in[j]]++;\n  for (x = '1'; x <= '9'; x++) {\n    if (f[x] > 0) {\n      out[0] = x;\n      f[x]--;\n      i++;\n      break;\n    }\n  }\n  for (j = 0; j < f['0']; j++) out[j + i] = '0';\n  i += f['0'];\n  for (x = '1'; x <= '9'; x++) {\n    for (j = 0; j < f[x]; j++) out[j + i] = x;\n    i += f[x];\n  }\n  out[i] = '\\0';\n  cin >> in;\n  if (i != in.length())\n    p = \"WRONG_ANSWER\";\n  else {\n    for (j = 0; j < i; j++) {\n      if (in[j] != out[j]) p = \"WRONG_ANSWER\";\n    }\n  }\n  cout << p;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) throws Exception {\n        Scanner s = new Scanner(System.in);\n        while(s.hasNext()) {\n            String a = s.next();\n            String b = s.next();\n            char[] c = a.toCharArray();\n            Arrays.sort(c);\n            String r = \"\";\n            int index = -1;\n            for(int i=c.length-1;i>=0;i--) {\n                if (c[i] == '0') {\n                    index = i;\n                    break;\n                }\n            }\n            if (index == -1) {\n                r = new String(c);\n            }else{\n                for(int i=index+1;i<c.length;i++) {\n                    r += c[i];\n                }\n                String z = \"\";\n                for(int i=0;i<=index;i++) {\n                    z += \"0\";\n                }\n                if (r.length() > 1)\n                    r = r.charAt(0) + z + r.substring(1);\n                else if (r.length() == 1) r=r.charAt(0) + z;\n                else r = z;\n            }\n            if (r.equals(b)) {\n                System.out.println(\"OK\");\n            }else{\n                System.out.println(\"WRONG_ANSWER\");\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> v;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  long cnt = 0;\n  bool ck = 1;\n  string s, s1;\n  cin >> s >> s1;\n  if (s.size() != s1.size()) {\n    cout << \"WRONG_ANSWER\\n\";\n    return 0;\n  }\n  for (auto i : s) {\n    int t = i - '0';\n    if (t != 0)\n      v.push_back(t);\n    else\n      cnt++;\n  }\n  sort(v.begin(), v.end());\n  for (long long i = 1; i <= cnt; i++) {\n    if (v.size() != 0)\n      v.insert(v.begin() + 1, 0);\n    else\n      v.push_back(0);\n  }\n  for (long long i = 0; i <= v.size() - 1; i++) {\n    int t = s1[i] - '0';\n    if (v[i] != t) ck = 0;\n  }\n  if (ck)\n    cout << \"OK\\n\";\n  else\n    cout << \"WRONG_ANSWER\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring n, m;\nbool check() {\n  int size1 = n.size(), size2 = m.size();\n  if (size1 != size2) return false;\n  for (int i = 0; i < size1; ++i)\n    if (n[i] != m[i]) return false;\n  return true;\n}\nint main() {\n  cin >> n >> m;\n  int len = n.size();\n  sort(n.begin(), n.end());\n  if (n[0] == '0') {\n    for (int i = 0; i < len; ++i)\n      if (n[i] != '0') {\n        n[0] = n[i];\n        n[i] = '0';\n        break;\n      }\n  }\n  if (check())\n    printf(\"OK\");\n  else\n    printf(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "num0 =input()\nnum1 =input()\ncount =0\ncharr =[]\nfor ch in num0:\n    if ch != '0':\n        charr.append(int(ch))\n        continue\n    count+=1\ncharr.sort()\nfor i in range(count):\n    charr.insert(1,0)\nfor i in range(len(charr)):\n    charr[i] =str(charr[i])\ncharr =''.join(charr)\n#charr =int(charr)\nif charr == num1:\n    print('OK')\n    quit()\nprint('WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class File1 {\n\tpublic static void main(String[] args){\n\t\tScanner in = new Scanner(System.in);\n\t\tchar s[] = in.next().toCharArray();\n\t\tchar t[] = in.next().toCharArray();\n\t\tArrays.sort(s);\n\t\tint j = 0;\n\t\tif(s.length!=t.length){\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t}\n\t\twhile(j<s.length&&s[j]=='0')\tj++;\n\t\tif(j!=0){\n\t\t\tif(j==s.length){\n\t\t\t\tfor(int i=0;i<t.length;i++){\n\t\t\t\t\tif(t[i]!='0'){\n\t\t\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(s[j]!=t[0]){\n\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor(int k=0;k<j;k++){\n\t\t\t\tif(t[j+k]!='0'){\n\t\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int k=j+1;k<s.length;k++){\n\t\t\t\tif(s[k]!=t[k]){\n\t\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\telse{\n\t\t\tfor(int k = 0;k<s.length;k++){\n\t\t\t\tif(s[k]!=t[k]){\n\t\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "n = raw_input('')\nm = raw_input('')\n\nbl = 0\n\nif m[0] != '0' and len(n) == len(m) and len(n) != 1:\n    dl = len(n)\n\n    sp = []\n\n    for x in range(dl):\n        sp.append(n[x])\n\n    sp = [int(x) for x in sp]\n    sp.sort()\n\n    kol = sp.count(0)\n\n    if kol != 0 and kol != dl:\n        ch = sp[kol]\n        sp[0] = ch\n        sp[kol] = 0\n\n    if kol != dl or len(m) == 1:\n        sp = [str(x) for x in sp]\n\n        pStr = ''\n        pStr = pStr.join(sp)\n\n        if pStr == m:\n            bl = 1\n            print 'OK'\nelif len(n) == len(m):\n    if n == m:\n        bl = 1\n        print 'OK'\n\nif bl == 0:\n    print 'WRONG_ANSWER'\n"
        },
        {
            "language": 3,
            "solution": "class CodeforcesTask12BSolution:\n    def __init__(self):\n        self.result = ''\n        self.number = 0\n        self.solution = 0\n\n    def read_input(self):\n        self.number = int(input())\n        self.solution = input()\n\n    def process_task(self):\n        try:\n            if len(str(self.solution)) > 1 and str(self.solution)[0] == \"0\":\n                self.result = \"WRONG_ANSWER\"\n            else:\n                cnts = [0] * 10\n                for c in str(self.number):\n                    cnts[int(c)] += 1\n                start = min([int(x) for x in str(self.number) if int(x)])\n                cnts[start] -= 1\n                res = [start]\n                for x in range(10):\n                    res += [x] * cnts[x]\n                real_result = int(\"\".join([str(x) for x in res]))\n                self.result = \"OK\" if real_result == int(self.solution) else \"WRONG_ANSWER\"\n        except ValueError:\n            if not self.number and self.solution == \"0\":\n                self.result = \"OK\"\n            else:\n                self.result = \"WRONG_ANSWER\"\n\n    def get_result(self):\n        return self.result\n\n\nif __name__ == \"__main__\":\n    Solution = CodeforcesTask12BSolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B {\n    public static void main(String[] args){\n        Scanner in = new Scanner(System.in);\n        String a = in.nextLine();\n        String b = in.nextLine();\n\n        if (a.equals(\"0\") && b.equals(\"0\")) {\n            System.out.println(\"OK\");\n            return;\n        }\n        if (a.equals(\"0\") && !b.equals(\"0\")) {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n\n        int len = a.length();\n        int arr[] = new int[len];\n        for (int i = 0; i < len; i++) {\n            arr[i] = a.charAt(i)-'0';\n        }\n        Arrays.sort(arr);\n        int ind = 0;\n        int cnt = 0;\n        while(ind<len && arr[ind]==0){\n            cnt++;\n            ind++;\n        }\n        StringBuilder n = new StringBuilder();\n        n.append(arr[ind]);\n        ind++;\n        for (int i = 0; i < cnt; i++) {\n            n.append(\"0\");\n        }\n        while(ind<len){\n            n.append(arr[ind]);\n            ind++;\n        }\n        if (n.toString().equals(b)) System.out.println(\"OK\");\n        else System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\n\npublic class CF12_B\n{\n    public static void main(String[] args)\n    {\n        String a=\"\",b=\"\",c=\"\";\n        Scanner sc = new Scanner(System.in);\n\n        a = sc.nextLine().trim();\n        b = sc.nextLine().trim();\n\n        boolean ok = true;\n\n        int[] f = new int[10];\n        for(char ch:a.toCharArray()) f[ch-'0']++;\n\n        for(int i=1;i<10;i++) if(f[i]>0){ c=\"\"+i; f[i]--; break; }\n        for(int i=0;i<10;i++)\n        {\n            while(f[i]>0){ c=c+\"\"+i; f[i]--; }\n        }\n\n        if(!b.equals(c)) ok=false;\n\n        if(ok)\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.LinkedList;\npublic class Main {\n\tpublic static void main(String[] S) throws IOException\n\t{\n\t\t/*BufferedReader input = new BufferedReader(new FileReader(\"input.txt\"));\n\t\tPrintWriter output = new PrintWriter(new FileWriter(\"output.txt\"));*/\n\t\tBufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter output = new PrintWriter(new OutputStreamWriter(System.out));\n\t\t\t\t\n\t\tString S1 = new String(input.readLine());\n\t\tString S2 = new String(input.readLine());\n\t\t\n\t\tchar[] C1 = S1.toCharArray();\n\t\tArrays.sort(C1);\n\t\tchar buf = 0;\n\t\tfor(int i = 0; i<C1.length; i++)\n\t\t\tif(C1[i]=='0')\n\t\t\t{\n\t\t\t\tfor(int j = i; j<C1.length; j++)\n\t\t\t\t\tif(C1[j]!='0')\n\t\t\t\t\t{\n\t\t\t\t\t\tbuf = C1[i];\n\t\t\t\t\t\tC1[i] = C1[j];\n\t\t\t\t\t\tC1[j] = buf;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} \n\t\tint h;\n\t\tfor(h = 0; h<C1.length; h++)\n\t\t\tif((C1[h]!=S2.charAt(h))||(C1.length!=S2.length()))\n\t\t\t\t{\n\t\t\t\t\toutput.write(\"WRONG_ANSWER\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\tif(h == C1.length)output.write(\"OK\");\n\t\tinput.close();\n\t\toutput.close();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring str1, str2, all;\nint main() {\n  cin >> str1 >> str2;\n  sort(str1.begin(), str1.end());\n  if (str1 == \"0\") {\n    if (str1 == str2)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  int tmp = 0;\n  while (str1[tmp] == '0') tmp++;\n  all = str1[tmp];\n  for (int i = 0; i < tmp; i++) all += str1[i];\n  for (int i = tmp + 1; i < str1.length(); i++) all += str1[i];\n  if (all == str2)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string str;\n  string ans;\n  cin >> str;\n  cin >> ans;\n  sort(str.begin(), str.end());\n  int index = 0;\n  if (str.size() != 1) {\n    while (index < str.size() && str[index] == '0') index++;\n    if (index != 0) str[0] = str[index], str[index] = '0';\n  }\n  if (str == ans) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class CorrectSolution {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String input = br.readLine();\n        String solution = br.readLine();\n        \n        int length = input.length();\n        char smallest = input.charAt(0);\n        int smallestIndex = 0;\n        for (int i = 1; i < length; i++) {\n            if (input.charAt(i) != '0' && input.charAt(i) < smallest){\n                smallest = input.charAt(i);\n                smallestIndex = i;\n            }\n        }\n        \n        String realSolution = \"\" + smallest;\n        \n        int arr[] = new int[length-1];\n        int k = 0;\n        for (int i = 0; i < length; i++) {\n            if (i != smallestIndex){\n                String tmp = input.charAt(i) + \"\";\n                arr[k] = Integer.parseInt(tmp);\n                k++;\n            }\n        }\n        \n        Arrays.sort(arr);\n        \n        for (int i = 0; i < arr.length; i++) \n            realSolution += \"\" + arr[i];\n        \n        StringBuilder s = new StringBuilder(solution);\n        if (realSolution.equals(solution))\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\n\npublic class B\n{\n   public static void main(String[] args)\n   {\n      new B(new Scanner(System.in));\n   }\n\n   String go(String s)\n   {\n      int[] cnt = new int[10];\n      for (char c : s.toCharArray())\n      {\n         int v = (int)(c-'0');\n         cnt[v]++;\n      }\n\n      int sm = -1;\n      for (int i=1; i<10; i++)\n         if (cnt[i] > 0)\n         {\n            sm = i;\n            break;\n         }\n\n      if (sm == -1)\n         return null;\n\n      StringBuilder sb = new StringBuilder();\n      sb.append(sm);\n      cnt[sm]--;\n\n      for (int i=0; i<10; i++)\n      {\n         while (cnt[i] > 0)\n         {\n            sb.append(i);\n            cnt[i]--;\n         }\n      }\n\n      return sb.toString();\n   }\n\n   public B(Scanner in)\n   {\n      String a = in.next();\n      String b = in.next();\n\n      if (a.compareTo(\"0\") == 0)\n      {\n         String res = \"WRONG_ANSWER\";\n         if (a.compareTo(b) == 0)\n            res = \"OK\";\n         System.out.println(res);\n         return;\n      }\n\n      String c = go(a);\n\n      String res = \"WRONG_ANSWER\";\n      if (c.compareTo(b) == 0)\n         res = \"OK\";\n      System.out.println(res);\n   }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class CorrectSolution {\n\n    public static void main(String[] args) {\n        Scanner sin = new Scanner(System.in);\n        String  n = sin.next(), x = sin.next();\n        if(n.length() != x.length())\n        {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        char []m = n.toCharArray();\n        Arrays.sort(m);\n        if(!n.matches(\"0+\"))\n        {int i = 0;\n        while(m[i] == '0')\n         i++;\n        if(i > 0)\n        {m[0]= m[i];\n        m[i] = '0';}}\n        for(int j = 0; j < n.length(); j++)\n           if(m[j] != x.charAt(j))\n           {\n               System.out.println(\"WRONG_ANSWER\");\n               return;\n           }\n        System.out.println(\"OK\");\n    }\n    \n}"
        },
        {
            "language": 1,
            "solution": "n = ''.join(sorted(raw_input()))\nz = n.count('0')\nn = n[z : z + 1] + '0' * z + n[z + 1 : ]\nprint ['WRONG_ANSWER', 'OK'][n == raw_input()]"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[] ) throws Exception {\n\t\tScanner in = new Scanner(System.in);\n\t\tString s = in.next();\n\t\tString s1 = in.next();\n\t\tboolean flag = true;\n\t\tif(s.length()==0 && s1.length()!=0)\n\t\t\tflag = false;\n\t\telse if(s.length()==0 && s1.length()==0)\n\t\t\tflag = true;\n\t\telse\n\t\t{\n\t\t\tchar ch[] = s.toCharArray();\n\t\t\tArrays.sort(ch);\n\t\t\tif(ch[0]=='0')\n\t\t\t{\n\t\t\t\tint i=0;\n\t\t\t\twhile(i<ch.length && ch[i]=='0')\n\t\t\t\t\ti++;\n\t\t\t\tif(i==ch.length)\n\t\t\t\t\tflag = false;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tchar c = ch[0];\n\t\t\t\t\tch[0] = ch[i];\n\t\t\t\t\tch[i] = c;\n\t\t\t\t}\n\t\t\t}\n\t\t\ts = new String(ch);\n\t\t}\n\t\tif(s.equals(\"0\")&&s1.equals(\"0\"))\n\t\t\tSystem.out.println(\"OK\");\n\t\telse if(s.equals(s1)&&flag)\n\t\t\tSystem.out.println(\"OK\");\n\t\telse\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n    }\n    \n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\nn = sys.stdin.readline().strip();\nm = sys.stdin.readline().strip();\nn = ''.join(sorted(n))\nif n[0] == '0':\n\tfor i in range(len(n)):\n\t\tif n[i] != '0':\n\t\t\tbreak\n\tn = n[i]+n[:i]+n[i+1:]\nif m==n:\n\tprint \"OK\"\nelse:\n\tprint \"WRONG_ANSWER\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int MOD = 1e9 + 7;\nint main() {\n  string a, b, c;\n  cin >> a >> b;\n  if (a == \"0\" and b == \"0\") {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  c = a;\n  sort(a.begin(), a.end());\n  int id = 0;\n  while (a[id] == '0') id++;\n  swap(a[id], a[0]);\n  if (a == b)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.security.KeyStore.Entry;\nimport java.util.*;\n\npublic class TestClass {\n\tprivate InputStream is;\n\tprivate PrintWriter out;\n\n\tvoid solve() {\n\t\tString a = ns();\n\t\tString b = ns();\n\t\tint x[] = new int[10];\n\t\tint y[] = new int[10];\n\t\tfor (int i = 0; i < a.length(); i++)\n\t\t\tx[a.charAt(i) - '0']++;\n\t\tfor (int i = 0; i < b.length(); i++)\n\t\t\ty[b.charAt(i) - '0']++;\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tif (x[i] != y[i]) {\n\t\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tint k = 0;\n\t\tfor (int i = 1; i < 10; i++)\n\t\t\tif (x[i] > 0) {\n\t\t\t\tx[i]--;\n\t\t\t\tk = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (b.charAt(0) - '0' != k) {\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t}\n\t\tk = 0;\n\t\tfor (int i = 1; i < b.length(); i++) {\n\t\t\twhile (k < 10 && x[k] == 0)\n\t\t\t\tk++;\n\t\t\tif (b.charAt(i) - '0' != k) {\n\t\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (k < 10)\n\t\t\t\tx[k]--;\n\t\t}\n\t\tout.println(\"OK\");\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = System.in;\n\t\tout = new PrintWriter(System.out);\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tout.close();\n\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Thread(null, new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tnew TestClass().run();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}, \"1\", 1 << 26).start();\n\t}\n\n\t// To Get Input\n\t// Some Buffer Methods\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\n\tprivate void tr(Object... o) {\n\t\tif (!oj)\n\t\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long stoint(string x) {\n  long long res = 0;\n  for (int i = 0; i < x.length(); i++) res = res * 10 + (int(x[i]) - 48);\n  return res;\n}\nint main() {\n  long long x, y;\n  cin >> x;\n  string s;\n  cin >> s;\n  y = stoint(s);\n  if (s.length() > 1 && s[0] == '0')\n    cout << \"WRONG_ANSWER\" << endl;\n  else if (x == 0) {\n    if (y == 0)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  } else {\n    long long arr[11];\n    long long counter = 0;\n    long long zeroes = 0;\n    while (x != 0) {\n      long long n = x % 10;\n      if (n == 0)\n        zeroes++;\n      else {\n        arr[counter] = n;\n        counter++;\n      }\n      x = x / 10;\n    }\n    sort(arr, arr + counter);\n    long long res = arr[0];\n    for (long long i = 0; i < zeroes; i++) res *= 10;\n    for (long long i = 1; i < counter; i++) {\n      res *= 10;\n      res += arr[i];\n    }\n    if (res == y)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author nasko\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n\n        String a = in.next();\n        String b = in.next();\n\n        char[] ch = a.toCharArray();\n        Arrays.sort(ch);\n\n        if(ch[0] == '0') {\n            for(int i = 0; i < ch.length; ++i) {\n                if(ch[i] != '0') {\n                    ch[0] = ch[i];\n                    ch[i] = '0';\n                    break;\n                }\n            }\n        }\n        if(b.startsWith(\"0\"))while(!b.startsWith(\"0\")) b = b.replaceFirst(\"0\",\"\");\n        if(new String(ch).equals(b)) out.println(\"OK\");\n        else out.println(\"WRONG_ANSWER\");\n\n\n    }\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    }\n\n"
        },
        {
            "language": 3,
            "solution": "import math\nm=1000000007\n\ndef fact(n):\n    ans=1\n    for i in range(1,n+1):\n        ans=((ans%m)*(i%m))%m\n    return ans\n\ndef power_2(n):\n    ans=1\n    for i in range(n):\n        ans=((ans%m)*(2))%m\n    return ans\n\nn=sorted(input())\nm=input()\ni,s=0,\"\"\nwhile(i<len(n) and n[i]=='0'):\n    i+=1\ntry:\n    s+=n[i]\nexcept:\n    pass\ns+='0'*(n.count('0'))\nfor j in range(i+1,len(n)):\n    s+=n[j]\nif(s==m):\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Math.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class _12_d2_B {\n\n    boolean showDebug = true;\n\n    String make(String s) {\n        if (s.equals(\"0\")) return s;\n        char[] c = s.toCharArray();\n        Arrays.sort(c);\n        int z=0; boolean ok=false;\n        for (char ch: c)\n            if (ch=='0') z++;\n            else\n                if (!ok) {\n                    s=str(ch);\n                    while (z-->0) s+='0';\n                    ok=true;\n                } else s+=ch;\n        return s;\n    }\n\n    public void solve() throws Exception {\n        println(make(nextWord()).equals(nextWord()) ? \"OK\":\"WRONG_ANSWER\");\n    }\n\n\n\n    ////////////////////////////////////////////////////////////////////////////    \n\n    double EPS = 1e-7;\n    int INF = Integer.MAX_VALUE;\n    long INFL = Long.MAX_VALUE;\n    double INFD = Double.MAX_VALUE;\n\n    int[] dx = {0,1,0,-1};\n    int[] dy = {-1,0,1,0};\n    int[] dx8 = {0,1,1,1,0,-1,-1,-1};\n    int[] dy8 = {-1,-1,0,1,1,1,0,-1};\n    int[] knightMovesX = {1,2,2,1,-1,-2,-2,-1};\n    int[] knightMovesY = {-2,-1,1,2,2,1,-1,-2};\n\n\n    @SuppressWarnings(\"serial\")\n    class IncMap extends HashMap<Object, Integer> {\n        boolean add(Object key, int amount) {\n            Integer i = get(key);\n            if (i!=null) {\n                put(key, i+amount);\n                return false;\n            } else {\n                put(key, amount);\n                return true;\n            }\n        }\n        boolean add(Object key) {\n            return add(key, 1);\n        }\n    }\n\n\n    int min(int... nums) {\n        int r = INF;\n        for (int i: nums)\n            if (i<r) r=i;\n        return r;\n    }\n    int max(int... nums) {\n        int r = -INF;\n        for (int i: nums)\n            if (i>r) r=i;\n        return r;\n    }\n    long minL(long... nums) {\n        long r = INFL;\n        for (long i: nums)\n            if (i<r) r=i;\n        return r;\n    }\n    long maxL(long... nums) {\n        long r = -INFL;\n        for (long i: nums)\n            if (i>r) r=i;\n        return r;\n    }\n    double minD(double... nums) {\n        double r = INFD;\n        for (double i: nums)\n            if (i<r) r=i;\n        return r;\n    }\n    double maxD(double... nums) {\n        double r = -INFD;\n        for (double i: nums)\n            if (i>r) r=i;\n        return r;\n    }\n    long sumArr(int[] arr) {\n        long res = 0;\n        for (int i: arr)\n            res+=i;\n        return res;\n    }\n    long sumArr(long[] arr) {\n        long res = 0;\n        for (long i: arr)\n            res+=i;\n        return res;\n    }\n    double sumArr(double[] arr) {\n        double res = 0;\n        for (double i: arr)\n            res+=i;\n        return res;\n    }\n\n\n    long partsFitCnt(long partSize, long wholeSize) {\n        return (partSize+wholeSize-1)/partSize;\n    }\n\n    int digitSum(long i) {\n        i = abs(i);\n        int r = 0;\n        while (i>0) {\n            r+=i%10;\n            i/=10;\n        }\n        return r;\n    }\n    long digitProd(long i) {\n        if (i==0) return 0;\n        i = abs(i);\n        long r = 1;\n        while (i>0) {\n            r*=i%10;\n            i/=10;\n        }\n        return r;\n    }\n\n    long gcd (long a, long b) {\n        while (b>0) {\n            a%=b;\n            long tmp=a; a=b; b=tmp;\n        }\n        return a;\n    }\n    long lcm(long a, long b) {\n        return (a*b)/gcd(a,b);\n    }\n\n    double log_2 = log(2);\n    double log2(double i) {\n        if (i<=0) return -INFD;\n        return log(i)/log_2;\n    }\n    long binpow(int x, int n) {\n        long r = 1;\n        while (n>0) {\n            if ((n&1)!=0) r*=x;\n            x*=x;\n            n>>=1;\n        }\n        return r;\n    }\n    long fac(int i) {\n        if (i>20) throw new IllegalArgumentException();\n        return i<=1 ?  1:fac(i-1)*i;\n    }\n\n\n    double dist(double x, double y, double xx, double yy) {\n        return sqrt((xx-x)*(xx-x)+(yy-y)*(yy-y));\n    }\n\n\n    boolean isPalindrome(String s) {\n        for (int i=0; i<s.length()/2; i++)\n            if (s.charAt(i)!=s.charAt(s.length()-1-i)) return false;\n        return true;\n    }\n    int occurenciesCnt(String s, String pattern) {\n        int res = 0;\n        for (int i=0; i<s.length()-pattern.length()+1; i++)\n            if (s.substring(i, i+pattern.length()).equals(pattern)) res++;\n        return res;\n    }\n    int occurenciesCnt(String s, char pattern) {\n        int res = 0;\n        for (int i=0; i<s.length(); i++)\n            if (s.charAt(i)==pattern) res++;\n        return res;\n    }\n\n\n    int[] months = {0,31,28,31,30,31,30,31,31,30,31,30,31};\n    boolean isLeapYear(int y) {\n        return y%4==0 && (y%400==0 || y%100!=0);\n    }\n    boolean isValidDate(int d, int m, int y) {\n        if (isLeapYear(y) && m==2 && d==29) return true;\n        return m>0 && m<=12 && d>0 && d<=months[d];\n    }\n    int[] nextDay(int d, int m, int y) {\n        if (d>=months[m])\n            if (m==2 && d==28 && isLeapYear(y)) d++;\n            else {d=1; m++;}\n        else\n            d++;\n        if (m==13) {d=1; m=1; y++;}\n        return new int[] {d,m,y};\n    }\n\n    String str(Object o) {\n        return o.toString();\n    }\n\n\n    long timer = System.currentTimeMillis();\n    void startTimer() {\n        timer = System.currentTimeMillis();\n    }\n    void stopTimer() {\n        System.err.println(\"time: \"+(System.currentTimeMillis()-timer)/1000.0);\n    }\n\n\n    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n    static BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n\n    String nextLine() throws IOException {\n        return in.readLine();\n    }\n    String nextWord() throws IOException {\n        StringBuilder sb = new StringBuilder();\n        int c = 0;\n        while (c<=' ') c=in.read();\n        while (c>' ') {\n            sb.append((char)c);\n            c = in.read();\n        }\n        return sb.toString();\n    }\n    int nextInt() throws NumberFormatException, IOException {\n        return Integer.parseInt(nextWord());\n    }\n    long nextLong() throws NumberFormatException, IOException {\n        return Long.parseLong(nextWord());\n    }\n    double nextDouble() throws NumberFormatException, IOException {\n        return Double.parseDouble(nextWord());\n    }\n    int[] nextArr(int size) throws NumberFormatException, IOException {\n        int[] arr = new int[size];\n        for (int i=0; i<size; i++)\n            arr[i] = nextInt();\n        return arr;\n    }\n    long[] nextArrL(int size) throws NumberFormatException, IOException {\n        long[] arr = new long[size];\n        for (int i=0; i<size; i++)\n            arr[i] = nextLong();\n        return arr;\n    }\n    double[] nextArrD(int size) throws NumberFormatException, IOException {\n        double[] arr = new double[size];\n        for (int i=0; i<size; i++)\n            arr[i] = nextDouble();\n        return arr;\n    }\n    String[] nextArrS(int size) throws NumberFormatException, IOException {\n        String[] arr = new String[size];\n        for (int i=0; i<size; i++)\n            arr[i] = nextWord();\n        return arr;\n    }\n\n    void print(Object o) throws IOException {\n        out.write(o.toString());\n    }\n    void println(Object o) throws IOException {\n        out.write(o.toString());\n        out.newLine();\n    }\n    void print(Object... o) throws IOException {\n        for (int i=0; i<o.length; i++) {\n            if (i!=0) out.write(' ');\n            out.write(o[i].toString());\n        }\n    }\n    void println(Object... o) throws IOException {\n        print(o);\n        out.newLine();\n    }\n    void printArr(int[] arr) throws IOException {\n        for (int i=0; i<arr.length; i++) {\n            if (i!=0) out.write(' ');\n            out.write(Integer.toString(arr[i]));\n        }\n    }\n    void printArr(long[] arr) throws IOException {\n        for (int i=0; i<arr.length; i++) {\n            if (i!=0) out.write(' ');\n            out.write(Long.toString(arr[i]));\n        }\n    }\n    void printArr(double[] arr) throws IOException {\n        for (int i=0; i<arr.length; i++) {\n            if (i!=0) out.write(' ');\n            out.write(Double.toString(arr[i]));\n        }\n    }\n    void printlnArr(int[] arr) throws IOException {\n        printArr(arr);\n        out.newLine();\n    }\n    void printlnArr(long[] arr) throws IOException {\n        printArr(arr);\n        out.newLine();\n    }\n    void printlnArr(double[] arr) throws IOException {\n        printArr(arr);\n        out.newLine();\n    }\n\n    void debug(Object... o) {\n        if (showDebug) System.err.println(Arrays.deepToString(o));\n    }\n\n\n    public static void main(String[] args) throws Exception {\n        Locale.setDefault(Locale.US);\n        new _12_d2_B().solve();\n        out.flush();\n        out.close(); in.close();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, res;\nint main() {\n  cin >> s;\n  sort(s.begin(), s.end());\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] != '0') {\n      swap(s[i], s[0]);\n      break;\n    }\n  }\n  cin >> res;\n  if (s != res)\n    cout << \"WRONG_ANSWER\";\n  else\n    cout << \"OK\";\n}\n"
        },
        {
            "language": 1,
            "solution": "from itertools import *\nimport sys\nn = ''.join (sorted (list (raw_input ())))\nfor i in xrange (len (n)):\n    if n[i] != '0':\n        n = n[i:i + 1] + n[:i] + n[i + 1:]\n        break\nprint 'WRONG_ANSWER' if n != raw_input () else 'OK'\n    \n"
        },
        {
            "language": 3,
            "solution": "l=list(map(int,input()))\ns=''\nj=0\nm=input()\nif(l.count(0)==len(l)):\n\tif(int(m)!=0):\n\t\tprint('WRONG_ANSWER')\n\telif(int(m)==0 and len(m)!=1):\n\t\tprint('WRONG_ANSWER')\n\telif(int(m)==0 and len(m)==1):\n\t\tprint('OK')\nelse:\n\tfor i in range(len(l)):\n\t\tif(min(l)==0):\n\t\t\tj+=1\n\t\t\tl.remove(0)\n\t\telse:\n\t\t\ts+=str(min(l))\n\t\t\tl.remove(min(l))\n\tif(s[0]+'0'*j+s[1:] == m):\n\t\tprint('OK')\n\telse:\n\t\tprint('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base ::sync_with_stdio(0);\n  cin.tie(0);\n  int t = 1;\n  while (t--) {\n    vector<int> a;\n    string s, ans;\n    cin >> s >> ans;\n    string order = s;\n    sort(order.begin(), order.end());\n    string minimum, zero;\n    int i = 0;\n    while (i < (int)order.size() && order[i] == '0') {\n      zero += '0';\n      i++;\n    }\n    if (i < (int)order.size()) minimum += order[i];\n    minimum += zero;\n    i++;\n    while (i < (int)order.size()) minimum += order[i++];\n    if (minimum == ans)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class problem12B {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tString str1 = sc.nextLine();\n\t\tString str2 = sc.nextLine();\n\t\tif(str1.length() == str2.length()){\n\t\t\tArrayList<Integer> list1 = new ArrayList<>();\n\t\t\tArrayList<Integer> list2 = new ArrayList<>();\n\t\t\tArrayList<Integer> tmp = new ArrayList<>();\n\t\t\tfor(int i=0;i<str1.length();i++){\n\t\t\t\tlist1.add(Integer.parseInt(str1.charAt(i)+\"\"));\n\t\t\t\tlist2.add(Integer.parseInt(str2.charAt(i)+\"\"));\n\t\t\t\ttmp.add(Integer.parseInt(str2.charAt(i)+\"\"));\n\t\t\t}\n\t\t\t\n\t\t\tCollections.sort(list1);\n\t\t\tCollections.sort(list2);\n\t\t\tif(list1.equals(list2)){\n\t\t\t\tint cnt = 0;\n\t\t\t\tfor(int i=0;i<list2.size();i++){\n\t\t\t\t\tif(list2.get(i) == 0) cnt++;\n\t\t\t\t}\n\t\t\t\tif(cnt!=0 && cnt != list2.size()){\n\t\t\t\t\tint val = list2.get(cnt);\n\t\t\t\t\tlist2.remove(cnt);\n\t\t\t\t\tlist2.add(0, val);\n\t\t\t\t}\n\t\t\t\tif(list2.equals(tmp)) System.out.println(\"OK\");\n\t\t\t\telse System.out.println(\"WRONG_ANSWER\");\n\t\t\t}\n\t\t\telse System.out.println(\"WRONG_ANSWER\");\n\t\t\t\n\t\t}\n\t\telse System.out.println(\"WRONG_ANSWER\");\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Iterator;\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n            try (PrintWriter out = new PrintWriter(outputStream)) {\n                TaskB solver = new TaskB();\n                solver.solve(1, in, out);\n            }\n    }\n}\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        char s1[] = in.next().toCharArray();\n        Arrays.sort(s1);\n        if(s1[0] == '0'){\n            for(int i = 0; i < s1.length; ++i){\n                if(s1[i] != '0'){\n                    s1[0] = s1[i];\n                    s1[i] = '0';\n                    break;\n                }\n            }\n        }\n        String s = \"\";\n        for(int i = 0; i < s1.length; ++i) s = s + s1[i];\n        if(s.equals(in.next())){\n            out.println(\"OK\");\n        }else out.println(\"WRONG_ANSWER\");\n    }\n}\nclass InputReader {\n    private final BufferedReader reader;\n    private StringTokenizer tokenizer;\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n \n    public String nextLine() {\n        try {\n            return reader.readLine();\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n \n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(nextLine());\n        }\n        return tokenizer.nextToken();\n    }\n \n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n    public BigInteger nextBigInteger() {\n        return new BigInteger(next());\n    }\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    public double nextDouble() {\n        return Double.parseDouble(next());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  getline(cin, a);\n  sort(a.begin(), a.end());\n  for (int i = a.size() - 1; i > 0; i--) {\n    if (a[i - 1] == '0') swap(a[i], a[i - 1]);\n  }\n  getline(cin, b);\n  puts(a == b ? \"OK\" : \"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] argv)\n\t{\n\t\tScanner in = new Scanner(new InputStreamReader(System.in));\n\t\t\n\t\tchar judge[] = in.nextLine().toCharArray();\n\t\tchar ans[] = in.nextLine().toCharArray();\n\t\t\n\t\tArrays.sort(judge);\n\t\t\n\t\tint i=0;\n\t\tfor(; i < judge.length && judge[i] == '0' ; i++);\n\t\t\n\t\tif(i != judge.length && i != 0)\n\t\t{\n\t\t\tjudge[0] = judge[i];\n\t\t\tjudge[i] = '0';\n\t\t}\n\t\t\n\t\tSystem.out.println(Arrays.equals(judge, ans) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long INF = 1e9;\nconst long long N = 5e2 + 1;\nconst long long mod = 1e9 + 7;\nconst long double eps = 1E-7;\nstring t;\nlong long int a, b, n, m, cnt, k, ans = 0;\nvector<int> v, V;\nint main() {\n  string s, h;\n  cin >> s >> h;\n  if (s == \"0\" and h == \"0\") {\n    cout << \"OK\";\n    return 0;\n  }\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0') cnt++;\n  }\n  sort(s.begin(), s.end());\n  if (cnt != 0) swap(s[0], s[cnt]);\n  if (s == h)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.math.BigInteger;\nimport java.util.Scanner;\n\n\npublic class B {\n\n\tScanner cin = new Scanner(new InputStreamReader(System.in));\n\tB()\n\t{\n\t\tString s = cin.next();\n\t\tString t = cin.next();\n\t\tif(s.length()!=t.length())\n\t\t{\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\treturn ;\n\t\t}\n\t\tboolean uesd[] = new boolean[s.length()];\n\t\tint answer = 0;\n\t\tfor(int i=0;i<s.length();i++)\n\t\t{\n\t\t\tchar best = '9'+1;\n\t\t\tint pos = -1;\n\t\t\tfor(int j=0;j<s.length();j++)\n\t\t\t\tif(!uesd[j] && s.charAt(j)<best)\n\t\t\t\t\tif(!(answer == 0 && s.charAt(j)=='0'))\n\t\t\t\t\t{\n\t\t\t\t\t\tpos = j;\n\t\t\t\t\t\tbest = s.charAt(j);\n\t\t\t\t\t}\n\t\t\tif(pos == -1)break;// case zero\n\t\t\tuesd[pos] = true;\n\t\t\tanswer = answer*10 + best-'0';\n\t\t}\n\t\tBigInteger ans = new BigInteger(t);\n\t\tif(ans.equals(BigInteger.valueOf(answer)))System.out.println(\"OK\");\n\t\telse System.out.println(\"WRONG_ANSWER\");\n\t}\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n       new B();\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "n = input()  # \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\nk = input()  # \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\nl1 = len(n)\nl2 = len(k)\n\n# \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\na = [0]*10\n\nif l2 > l1:\n    print('WRONG_ANSWER')\nelse:\n    for i in range(l1):\n        a[int(n[i])] += 1\n    # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd, \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd:\n    # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd (1 \ufffd\ufffd\ufffd\ufffd\ufffd), \ufffd\ufffd\ufffd\ufffd\ufffd 0, \ufffd\ufffd\ufffd\ufffd\ufffd 0, \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n    s = ''\n    \n    pos = 1\n    while (pos < 10) and (a[pos] == 0):\n        pos += 1\n        \n    if pos != 10:\n        s += str(pos)+'0'*a[0]\n        a[pos] -= 1\n        for i in range(pos, 10):\n            s += str(i)*a[i]\n        # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n    else:\n        s = '0'\n        \n    if s == k:\n        print('OK')\n    else:\n        print('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint h[10];\nint g[10];\nint main() {\n  string a, b;\n  cin >> a >> b;\n  int x = 0;\n  int q = 0;\n  int xx = 0;\n  if (a[0] == '0' && a.size() == 1) {\n    if (b[0] == '0' && b.size() == 1) {\n      cout << \"OK\";\n      return 0;\n    }\n  }\n  deque<int> hh;\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] == '0') {\n      x++;\n    }\n    if (a[i] != '0') {\n      q = a[i] - '0';\n      h[xx] = q;\n      xx++;\n    }\n  }\n  for (int i = 0; i < b.size(); i++) {\n    q = b[i] - '0';\n    g[i] = q;\n  }\n  sort(h, h + xx);\n  int c = 0;\n  for (int i = 0; i < xx; i++) {\n    if (h[i] == h[0]) {\n      c++;\n    }\n  }\n  for (int i = 0; i < xx; i++) {\n    if (i == 1) {\n      for (int j = 0; j < x; j++) {\n        hh.push_back(0);\n      }\n    }\n    hh.push_back(h[i]);\n  }\n  for (int i = 0; i < xx + x; i++) {\n    if (hh[i] != g[i]) {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  }\n  cout << \"OK\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = acos(-1.0);\nstruct node {\n  int x, y;\n} value[1000];\nint cmp(char a, char b) { return b - a; }\nint main() {\n  char a[1000];\n  char b[1000];\n  int c[1000], i, j, k, h, f = 0;\n  while (~scanf(\"%s%s\", a, b)) {\n    j = strlen(a);\n    for (i = 0; i < j; i++) c[i] = a[i] - '0';\n    for (i = 1; i < j; i++)\n      if (c[i] < c[0] && c[i] != 0) swap(c[0], c[i]);\n    sort(c + 1, c + j);\n    k = strlen(b);\n    for (i = 0; i < k; i++)\n      if (b[i] != '0') break;\n    h = 0;\n    if (b[0] == '0') f = 1;\n    if (f == 0) {\n      int len = k - i;\n      for (; i < k; i++)\n        if (len != j || c[h++] != b[i] - '0') {\n          f = 1;\n          break;\n        }\n    }\n    if (a[0] == '0' && b[0] == '0' && b[1] == '\\0') f = 0;\n    if (f)\n      printf(\"WRONG_ANSWER\\n\");\n    else\n      printf(\"OK\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\n\n\npublic class Main {\n\n\tstatic BufferedReader input;\n\tstatic PrintWriter output;\n\tstatic StreamTokenizer in;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tinput = new BufferedReader(new InputStreamReader(System.in));\n//\t\tinput = new BufferedReader(new FileReader(\"input.txt\"));\n\t\toutput = new PrintWriter(System.out);\n\t\tString st_Nastya = input.readLine();\n\t\tString st_Valera = input.readLine();\n\t\tString st_0 = \"\";\n\t\tString st_1 = \"\";\n\t\tString st_2 = \"\";\n\t\tString st_3 = \"\";\n\t\tString st_4 = \"\";\n\t\tString st_5 = \"\";\n\t\tString st_6 = \"\";\n\t\tString st_7 = \"\";\n\t\tString st_8 = \"\";\n\t\tString st_9 = \"\";\n\t\t\n\t\tfor (int i=0; i<st_Nastya.length(); i++){\n\t\t\t\n\t\t\tif (st_Nastya.charAt(i)=='0'){\n\t\t\t\tst_0 = st_0 + '0';\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (st_Nastya.charAt(i)=='1'){\n\t\t\t\t\tst_1 = st_1 + '1';\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (st_Nastya.charAt(i)=='2'){\n\t\t\t\t\t\tst_2 = st_2 + '2';\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (st_Nastya.charAt(i)=='3'){\n\t\t\t\t\t\t\tst_3 = st_3 + '3';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif (st_Nastya.charAt(i)=='4'){\n\t\t\t\t\t\t\t\tst_4 = st_4 + '4';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tif (st_Nastya.charAt(i)=='5'){\n\t\t\t\t\t\t\t\t\tst_5 = st_5 + '5';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tif (st_Nastya.charAt(i)=='6'){\n\t\t\t\t\t\t\t\t\t\tst_6 = st_6 + '6';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\tif (st_Nastya.charAt(i)=='7'){\n\t\t\t\t\t\t\t\t\t\t\tst_7 = st_7 + '7';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tif (st_Nastya.charAt(i)=='8'){\n\t\t\t\t\t\t\t\t\t\t\t\tst_8 = st_8 + '8';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\tst_9 = st_9 + '9';\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t}\n\t\tString st_res = \"\";\n\t\tif (st_1!=\"\"){\n\t\t\tst_res = '1' + st_0 + st_1.subSequence(1, st_1.length()) + st_2 + st_3 + st_4 + st_5 + st_6 + st_7 + st_8 + st_9;\n\t\t}\n\t\telse{\n\t\t\tif (st_2!=\"\"){\n\t\t\t\tst_res = '2' + st_0 + st_2.subSequence(1, st_2.length()) + st_3 + st_4 + st_5 + st_6 + st_7 + st_8 + st_9;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (st_3!=\"\"){\n\t\t\t\t\tst_res = '3' + st_0 + st_3.subSequence(1, st_3.length()) + st_2 + st_4 + st_5 + st_6 + st_7 + st_8 + st_9;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (st_4!=\"\"){\n\t\t\t\t\t\tst_res = '4' + st_0 + st_4.subSequence(1, st_4.length()) + st_2 + st_3 + st_5 + st_6 + st_7 + st_8 + st_9;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (st_5!=\"\"){\n\t\t\t\t\t\t\tst_res = '5' + st_0 + st_5.subSequence(1, st_5.length()) + st_2 + st_3 + st_4 + st_6 + st_7 + st_8 + st_9;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif (st_6!=\"\"){\n\t\t\t\t\t\t\t\tst_res = '6' + st_0 + st_6.subSequence(1, st_6.length()) + st_2 + st_3 + st_4 + st_5 + st_7 + st_8 + st_9;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tif (st_7!=\"\"){\n\t\t\t\t\t\t\t\t\tst_res = '7' + st_0 + st_7.subSequence(1, st_7.length()) + st_2 + st_3 + st_4 + st_5 + st_6 + st_8 + st_9;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tif (st_8!=\"\"){\n\t\t\t\t\t\t\t\t\t\tst_res = '8' + st_0 + st_8.subSequence(1, st_8.length()) + st_2 + st_3 + st_4 + st_5 + st_6 + st_7 + st_9;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\tif (st_9!=\"\"){\n\t\t\t\t\t\t\t\t\t\t\tst_res = '9' + st_0 + st_9.subSequence(1, st_9.length()) + st_2 + st_3 + st_4 + st_5 + st_6 + st_7 + st_8;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tst_res = st_0;\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (st_Valera.equals(st_res)){\n\t\t\toutput.write(\"OK\");\n\t\t}\n\t\telse{\n\t\t\toutput.write(\"WRONG_ANSWER\");\n\t\t}\n\t\toutput.flush();\n\t}\n\n\t\n    static String nextString() throws IOException {\n        if ( in == null ) {\n            in = new StreamTokenizer(input);\n        }\n        in.nextToken();\n        return in.sval;\n    }\n\n\n    static double nextDouble() throws NumberFormatException, IOException {\n        if ( in == null ) {\n            in = new StreamTokenizer(input);\n        }\n        in.nextToken();\n        return in.nval;\n    }\n\n    \n    static int nextInt() throws NumberFormatException, IOException {\n        return (int) nextDouble();\n    }\n    \n    \n    static long nextLong() throws NumberFormatException, IOException {\n        return (long) nextDouble();\n    }\n    \n \n    static void write(String st) {\n\t\toutput.write(st);\n    }\n\n    \n    static void writeln(String st) {\n\t\toutput.write(st + \"\\n\");\n    }\n    \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1000];\nint b[100];\nint main() {\n  string x, y;\n  cin >> x >> y;\n  if (x[0] == '0' && y[0] == '0' && x.size() == y.size()) {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  sort(x.begin(), x.end());\n  int i;\n  for (i = 0; i < x.size(); i++)\n    if (x[i] != '0') break;\n  swap(x[0], x[i]);\n  if (x == y)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nm=input()\n\nif len(m)!=len(n):\n    print(\"WRONG_ANSWER\")\n    exit()\n\na=list()\nkhong=0\ntmp=\"\"\nfor i in n:\n    if i=='0':\n        khong+=1\n    else:\n        a.append(i)\na.sort()\nfor i in a:\n    if len(tmp)==1:\n        tmp+=khong*\"0\"\n        khong=0\n    tmp+=i\nif khong!=0:\n    tmp+=khong*\"0\"\nif tmp==m:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 3,
            "solution": "l=list(map(int,input()))\ns=input()\ns1=''\nz=''\nq=0\nif(l.count(0)==len(l)):\n    if(s.count('0')==len(s) and s.count('0')==len(l)):\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\nelse:\n    for i in range(len(l)):\n\n        p=min(l)\n        if(p==0):\n            q=1\n            z=z+str(p)\n        else:\n            if(q==1):\n                s1=s1+str(p)+z\n                q=2\n            else:\n                s1=s1+str(p)\n        l.pop(l.index(p))\n\n\n    if(s1==s):\n        print('OK')\n    else:\n        print('WRONG_ANSWER')"
        },
        {
            "language": 3,
            "solution": "a = input()\nb = input()\n\n\nA = sorted(list(a))\nB = list(b)\n\nfor i in range(len(A)):\n    if A[i] != '0':\n        tmp = A[i]\n        A[i] = A[0]\n        A[0] = tmp\n        break\n\n\n\n\nif A == B:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 3,
            "solution": "s = input()\na = input()\nsl = [int(i) for i in s]\nsl.sort()\nx = 0\nif(sl[0]==0):\n    for i in range(len(sl)):\n        if(sl[i]!=0):\n            x = i\n            break\nans = str(sl[x])+'0'*x\nfor i in sl[x+1:]:\n    ans+=str(i)\n\nif(ans==a):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 3,
            "solution": "s=str(input())\ns1=str(input())\nif('0' not in s):\n    e=sorted(s)\n    f=''\n    f=f.join(e)\n    if(f==s1):\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\nelse:\n    e=sorted(s)\n    g=-1\n    for i in range(0,len(e)):\n        if(e[i]!='0'):\n            g=i\n            break\n    if(g!=-1):\n        e.insert(0,e[g])\n        e.pop(g+1)\n    h=''\n    h=h.join(e)\n    if(h==s1):\n        print('OK')\n    else:\n        print('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  string res = \"\";\n  int id = 1000000;\n  for (int k = 0; k < a.size(); k++) {\n    if (a[k] != '0') {\n      res += a[k];\n      id = k;\n      break;\n    }\n  }\n  for (int k = 0; k < a.size(); k++) {\n    if (a[k] == '0' && k != id) res += a[k];\n  }\n  for (int k = 0; k < a.size(); k++) {\n    if (a[k] != '0' && k != id) res += a[k];\n  }\n  cout << (res == b ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\n\npublic class CorrectSolution {\n\tstatic BufferedReader reader;\n\tstatic StringTokenizer tokenizer;\n\tpublic static void main(String[] args) throws IOException {\n\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\tString a, b;\n\t\ta = NextToken();\n\t\tb = NextToken();\n\t\tString WA = \"WRONG_ANSWER\";\n\t\tString OK = \"OK\";\n\t\tString res = OK;\n\t\tchar A[] = new char[a.length()];\n\t\tchar B[] = new char[b.length()];\n\t\tif (a.length() != b.length())\n\t\t\tres = WA;\n\t\tif (res.equals(WA)) {\n\t\t\tSystem.out.println(res);\n\t\t\treturn;\n\t\t}\n\t\tif (b.charAt(0) == '0' &&\n\t\t\t!b.equals(\"0\"))\n\t\t\tres = WA;\n\t\tif (a.equals(\"0\") && !b.equals(\"0\"))\n\t\t\tres = WA;\n\t\tif (a.equals(\"0\") && b.equals(\"0\")) {\n\t\t\tSystem.out.println(res);\n\t\t\treturn;\n\t\t}\n\t\tif (res.equals(WA)) {\n\t\t\tSystem.out.println(res);\n\t\t\treturn;\n\t\t}\n\t\tchar C[] = new char[a.length()];\n\t\tint n = a.length();\n\t\tchar Cur_min = '9';\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tA[i] = a.charAt(i);\n\t\t\tB[i] = b.charAt(i);\n\t\t}\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tCur_min = '9';\n\t\t\tint pos = -1;\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tif (i == 0 && A[j] != '0' && A[j] != '*' && A[j] <= Cur_min ||\n\t\t\t\t\ti != 0 && A[j] != '*' && A[j] <= Cur_min)\n\t\t\t\t{\n\t\t\t\t\tCur_min = A[j];\n\t\t\t\t\tpos = j;\n\t\t\t\t}\n\t\t\tC[i] = Cur_min;\n\t\t\tA[pos] = '*';\n\t\t}\n\t\tString c = new String(C);\n\t\tif (!c.equals(b))\n\t\t\tres = WA;\n\t\tSystem.out.println(res);\n\t}\n\tstatic int NextInt() throws NumberFormatException, IOException {\n\t\treturn Integer.parseInt(NextToken());\n\t}\n\tstatic double NextDouble() throws NumberFormatException, IOException {\n\t\treturn Double.parseDouble(NextToken());\n\t}\n\tstatic long NextLong() throws NumberFormatException, IOException {\n\t\treturn Long.parseLong(NextToken());\n\t}\n\tstatic String NextToken() throws IOException {\n\t\twhile(tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t}\n\t\treturn tokenizer.nextToken();\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "num = raw_input()\nans = [x for x in raw_input()]\n\nna = sorted(num)\nif na[0] == '0':\n    for i, n in enumerate(na):\n        if n != '0':\n            na[0] = n\n            na[i] = '0'\n            break\nif ans == na:\n    print 'OK'\nelse:\n    print 'WRONG_ANSWER'"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 110;\nconst int M = 2000010;\nconst int mod = 1e9 + 9;\nconst int inf = 0x3f3f3f3f;\nconst double eps = 1e-6;\nusing namespace std;\nint cnt[11];\nchar n[11], m[11];\nint main() {\n  scanf(\"%s\", n);\n  for (int i = 0; n[i]; i++) cnt[n[i] - '0']++;\n  int t = 0;\n  for (int i = 1; i <= 9; i++) {\n    if (cnt[i]) {\n      t = t * 10 + i;\n      cnt[i]--;\n      break;\n    }\n  }\n  for (int i = 0; i < 10; i++) {\n    for (int j = 0; j < cnt[i]; j++) t = t * 10 + i;\n  }\n  scanf(\"%s\", m);\n  int T = 0;\n  for (int i = 0; m[i]; i++) T = T * 10 + (m[i] - '0');\n  if (strlen(n) != strlen(m)) T = -1;\n  puts((T == t) ? \"OK\" : \"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\nimport java.util.HashMap;\nimport java.util.stream.StreamSupport;\n\n/**\n * Created by harish.sharma on 10/9/16.\n */\npublic class A1 {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        Integer first = Integer.parseInt(br.readLine());\n        String ansS = br.readLine();\n        Integer ans = Integer.parseInt(ansS);\n        if (ansS.startsWith(\"0\") && ansS.length() > 1) {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        if (first <= 9) {\n            if (first.equals(ans)) {\n                System.out.println(\"OK\");\n            } else {\n                System.out.println(\"WRONG_ANSWER\");\n            }\n            return;\n        }\n        String[] num = first.toString().split(\"\");\n        Integer[] nums = new Integer[num.length];\n        int count = 0;\n        for (String s : num) {\n            nums[count++] = Integer.parseInt(s);\n        }\n        Arrays.sort(nums);\n        StringBuilder sb = new StringBuilder();\n        StringBuilder zeros = new StringBuilder();\n        int i = 0;\n        for (i = 0; i < nums.length; i++) {\n            if (nums[i] == 0) {\n                zeros.append(0);\n            } else break;\n        }\n        sb.append(nums[i++]);\n        sb.append(zeros);\n        for (; i < nums.length; i++) {\n            sb.append(nums[i]);\n        }\n        Integer res = Integer.parseInt(sb.toString());\n        if (res.equals(ans)) {\n            System.out.println(\"OK\");\n        } else {\n            System.out.println(\"WRONG_ANSWER\");\n        }\n        br.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static final int N = 15;\n    static String str1, str2;\n    static Character[] arr = new Character[N];\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n    public static void main(String[] args) throws IOException {\n        //        br = new BufferedReader(new InputStreamReader(new FileInputStream(\"/Users/huangweixuan/testdata.txt\")));\n        str1 = br.readLine();\n        str2 = br.readLine();\n        if (str1.length() != str2.length()) {\n            bw.write(\"WRONG_ANSWER\");\n            bw.close();\n            return;\n        }\n        for (int i = 0; i < str1.length(); ++i) {\n            arr[i] = str1.charAt(i);\n        }\n        Arrays.sort(arr, 0, str1.length());\n        //        Arrays.sort(arr, 0, str1.length(), Comparator.reverseOrder());\n        if (arr[0] == '0' && str1.length() > 1) {\n            int i = 1;\n            while (i < str1.length() && arr[i] == '0') {\n                ++i;\n            }\n            Character tmp = arr[i];\n            arr[i] = arr[0];\n            arr[0] = tmp;\n        }\n        for (int i = 0; i < str2.length(); ++i) {\n            if (arr[i] != str2.charAt(i)) {\n                bw.write(\"WRONG_ANSWER\");\n                bw.close();\n                return;\n            }\n        }\n        bw.write(\"OK\");\n        bw.close();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "//package codeforces;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.StreamTokenizer;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.Scanner;\n\npublic class Codeforces {\n\n    public void solve() throws IOException {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.next();\n        String an = sc.next();\n        int ans = Integer.parseInt(an);\n        int[] n = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            n[s.charAt(i) - '0']++;\n        }\n        int min = 1;\n        while (min < 10 && n[min] == 0) {\n            min++;\n        }\n        int a = 0;\n        if (min < 10) {\n            a = min;\n            n[min]--;\n        }\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < n[i]; j++) {\n                a = 10 * a + i;\n            }\n        }\n        if (a == ans && an.length() == s.length()) {\n            System.out.println(\"OK\");\n        } else {\n            System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        Codeforces cf = new Codeforces();\n        cf.solve();\n    }\n}\n\nclass MyScanner {\n\n    private StreamTokenizer st;\n\n    public MyScanner(InputStream is) {\n        st = new StreamTokenizer(new BufferedReader(new InputStreamReader(is)));\n    }\n\n    public int nextInt() throws IOException {\n        st.nextToken();\n        return ((int) st.nval);\n    }\n\n    public double nextDouble() throws IOException {\n        st.nextToken();\n        return (st.nval);\n    }\n\n    public String next() throws IOException {\n        st.nextToken();\n        if (st.ttype == StreamTokenizer.TT_WORD) {\n            return (st.sval);\n        } else {\n            return (\"not found\");\n        }\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "ini=list(raw_input())\nini.sort()\ncnt=0\nfor i in range(len(ini)):\n\tif ini[i]=='0':\n\t\tcontinue\n\telif i!=0 and ini[i-1]=='0':\n\t\tini[0],ini[i]=ini[i],ini[0]\n\t\tbreak\n\telse:\n\t\tbreak\ninp2=list(raw_input())\nif ini==inp2:\n\tprint \"OK\"\nelse:\n\tprint \"WRONG_ANSWER\"\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\n\n\n\n \n public  class exp {\n    \n    static Reader in;\n    static PrintWriter out;\n    static int lim;\n    \n    public static void main (String [] args) throws IOException {\n        in = new Reader ();\n        out = new PrintWriter(System.out);\n     \n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        \n        \n        \n     \n        char arr[]=br.readLine().toCharArray();\n        char arr1[]=br.readLine().toCharArray();\n        \n        \n        int second=Integer.parseInt(new String(arr1));\n        \n        \n        \n        Arrays.sort(arr);\n        \n        int pos=-1;\n        for(int i=0;i<arr.length;i++)\n        {\n            if(arr[i]!='0')\n            {\n                pos=i;\n                break;\n            }\n        \n        }\n\n        if(pos!=-1)\n        {\n            char tmp=arr[0];\n            arr[0]=arr[pos];\n            arr[pos]=tmp;\n        }\n        \n        \n        String st=new String(arr);\n        int first=Integer.parseInt(st);\n        \n        if((arr1[0]!='0'||arr1.length==1)&&first==second)\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n        \n       \n                \n\n      \n        \n        }\n    \n \n\n        \n\n    \n    \n\n    \n\n    \n\n    \n    \n\n    \n \n    \n \n    \n \n static class Reader {final private int BUFFER_SIZE=1<<16;private DataInputStream din;private byte[]buffer;private int bufferPointer,bytesRead;public Reader() {din=new DataInputStream(System.in);buffer=new byte[BUFFER_SIZE];bufferPointer=bytesRead=0;} public Reader(String file_name)throws IOException {din=new DataInputStream(new FileInputStream(file_name));buffer=new byte[BUFFER_SIZE];bufferPointer=bytesRead=0;} public String readLine()throws IOException {byte[]buf=new byte[64];int cnt=0,c;while((c=read())!=-1) {if(c=='\\n') break;buf[cnt++]=(byte)c;} return new String(buf,0,cnt);} public int nextInt()throws IOException {int ret=0;byte c=read();while(c<=' ') c=read();boolean neg=(c=='-');if(neg) c=read();do {ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');if(neg) return-ret;return ret;} public long nextLong()throws IOException {long ret=0;byte c=read();while(c<=' ') c=read();boolean neg=(c=='-');if(neg) c=read();do{ret=ret*10+c-'0';} while((c=read())>='0'&&c<='9');if(neg) return-ret;return ret;} public double nextDouble()throws IOException {double ret=0,div=1;byte c=read();while(c<=' ') c=read();boolean neg=(c=='-');if(neg) c=read();do{ret=ret*10+c-'0';} while((c=read())>='0'&&c<='9');if(c=='.') {while((c=read())>='0'&&c<='9') {ret+=(c-'0')/(div*=10);}} if(neg) return-ret;return ret;} private void fillBuffer()throws IOException {bytesRead=din.read(buffer,bufferPointer=0,BUFFER_SIZE);if(bytesRead==-1) buffer[0]=-1;} private byte read()throws IOException {if(bufferPointer==bytesRead) fillBuffer();return buffer[bufferPointer++];} public void close()throws IOException {if(din==null) return;din.close();}}\n \n    } "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dx[] = {1, 0, -1, 0};\nlong long dy[] = {0, 1, 0, -1};\nvoid solve() {\n  long long n, m;\n  string s, t;\n  cin >> s >> t;\n  n = stoi(s);\n  m = stoi(t);\n  if (s.size() != t.size()) {\n    cout << \"WRONG_ANSWER\"\n         << \"\\n\";\n    return;\n  }\n  if (n == 0 && m == 0) {\n    cout << \"OK\"\n         << \"\\n\";\n    return;\n  }\n  if (n == 0) {\n    cout << \"WRONG_ANSWER\"\n         << \"\\n\";\n    return;\n  }\n  char mn = ';';\n  for (long long i = 0; i < s.size(); i++)\n    if (s[i] != '0') mn = min(mn, s[i]);\n  string ans;\n  ans.push_back(mn);\n  multiset<char> mul;\n  for (long long i = 0; i < s.size(); i++) mul.insert(s[i]);\n  mul.erase(mul.find(mn));\n  for (char x : mul) ans.push_back(x);\n  if (ans != t) {\n    cout << \"WRONG_ANSWER\"\n         << \"\\n\";\n    return;\n  } else\n    cout << \"OK\"\n         << \"\\n\";\n  return;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int i, j, temp, k = 1;\n  char s[100];\n  gets(s);\n  int l = strlen(s);\n  char g[100];\n  gets(g);\n  int m = strlen(g);\n  for (j = l; j > 0; j--) {\n    for (i = 0; i < (j - 1); i++) {\n      if (s[i] > s[i + 1]) {\n        temp = s[i];\n        s[i] = s[i + 1];\n        s[i + 1] = temp;\n      }\n    }\n  }\n  if (s[0] == '0') {\n    for (i = 1; i < l; i++) {\n      if (s[i] != '0') {\n        s[0] = s[i];\n        s[i] = '0';\n        break;\n      }\n    }\n  }\n  if (l == m) {\n    for (i = 0, j = 0; i < l, j < m; i++, j++) {\n      if (s[i] != g[j]) {\n        k = 0;\n        break;\n      } else\n        k++;\n    }\n  } else\n    k = 0;\n  if (k)\n    printf(\"OK\");\n  else\n    printf(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nn = input()\nm = input()\n\nif n == '0':\n    if m == '0':\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n        \nelse:\n    c = Counter(n)\n    \n    if '0' in c:\n        c0 = c['0']\n    else:\n        c0 = 0\n    \n    del c['0']\n    \n    mitem = min(c)\n    c[mitem] -= 1 \n    s1 = [item * c[item] for item in sorted(c)]\n    s1 = \"\".join(s1)\n    s = mitem + c0*'0' + s1\n    \n    if s == m:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n\n\n\t \t  \t \t   \t\t\t\t    \t  \t \t\t\t"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Driver\n{\n    public static void main(String args[])\n    {\n        try\n        {\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n            PrintWriter pw = new PrintWriter(System.out);\n\n            String str = br.readLine().trim();\n            String bobs = br.readLine().trim();\n            int p = str.length();\n\n            if(p != bobs.length()){\n                pw.println(\"WRONG_ANSWER\");\n\n            } else {\n                int[] arr = new int[p];\n                for(int i = 0; i < str.length(); i++){\n                    arr[i] = Character.getNumericValue(str.charAt(i));\n                }\n\n                Arrays.sort(arr);\n                int firstNonZeroIndex = -1;\n                for(int i = 0; i < arr.length; i++){\n                    if(arr[i] != 0){\n                        firstNonZeroIndex = i;\n                        break;\n                    }\n                }\n\n                int[] ans = new int[arr.length];\n                if(firstNonZeroIndex == -1){\n                    if(str.equals(bobs)){\n                        pw.println(\"OK\");\n                    } else {\n                        pw.println(\"WRONG_ANSWER\");\n                    }\n                } else {\n                    ans[0] = arr[firstNonZeroIndex];\n\n                    for(int i = 1; i < arr.length; i++){\n                        if(i != firstNonZeroIndex){\n                            ans[i] = arr[i];\n                        }\n                    }\n\n                    StringBuilder b = new StringBuilder();\n                    for(int i = 0; i < ans.length; i++){\n                        b.append(ans[i]);\n                    }\n\n                    if(b.toString().equals(bobs)){\n                        pw.println(\"OK\");\n                    } else {\n                        pw.println(\"WRONG_ANSWER\");\n                    }\n                }\n            }\n\n            pw.close();\n        }\n        catch(Exception ex)\n        {\n            System.out.println(\"ERROR\");\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "#------------------------------------------------------------------------\n# Name:        module2\n# Purpose:\n#\n# Author:      co\n#\n# Created:     05/10/2011\n# Copyright:   (c) u161283f 2011\n# Licence:     <your licence>\n#------------------------------------------------------------------------\n#!/usr/bin/env python\n\nalice=input()\nbob=raw_input()\n\ncorrect=list(str(alice))\ncorrect.sort()\nreverses=correct[:]\nreverses.reverse()\nif alice==0:\n    pass\nelif \"0\" in correct:\n    not_zero_index=len(correct)-reverses.index(\"0\")\n    correct[0],correct[not_zero_index]=correct[not_zero_index],correct[0]\n\ncorrect=\"\".join(correct)\n\nif bob==correct:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  int k = 0;\n  for (int i = 0; i < a.size(); i++)\n    if (a[i] != '0') {\n      swap(a[i], a[0]);\n      break;\n    }\n  if (a == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char a[100], b[100];\n  int lena, lenb, i;\n  scanf(\"%s%s\", a, b);\n  lena = strlen(a);\n  lenb = strlen(b);\n  if (lena != lenb) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  } else {\n    sort(a, a + lena);\n    for (i = 0; i < lena; i++) {\n      if (a[i] != '0') {\n        if (i != 0) {\n          a[0] = a[i];\n          a[i] = '0';\n        }\n        break;\n      }\n    }\n    for (i = 0; i < lena; i++) {\n      if (a[i] != b[i]) {\n        cout << \"WRONG_ANSWER\";\n        return 0;\n      }\n    }\n    cout << \"OK\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "r = raw_input()\na = raw_input()\n#print r,a\nif r=='0':\n\tif a=='0':\n\t\tprint 'OK'\n\telse:\n\t\tprint 'WRONG_ANSWER'\nelse:\n\tr1 = []\n\tfor i in xrange(len(r)):\n\t\tif r[i]<>'0':\n\t\t\tr1.append(r[i])\n\tr2 =''.join(sorted(r1))\n\tif r2[0]+'0'*(len(r)-len(r1))+r2[1:]==a:\n\t\tprint 'OK'\n\telse:\n\t\tprint 'WRONG_ANSWER'\n"
        },
        {
            "language": 3,
            "solution": "s=input()\ns1=(input())\nn=len(s)\nw=[]\nd=0\nif(s=='0'and s1=='0'):\n    print(\"OK\")\n    exit(0)\nfor i in range(0,n):\n    w.append(int(s[i]))\nw.sort()\nfor i in range(0,n):\n    if(w[i]!=0):\n        q=i\n        d=d+1\n        break\nif(d==0):\n    print(\"WRONG_ANSWER\")\n    exit(0)\nelse:\n    s2=str(w[q])\nfor i in range(0,n):\n    if(i!=q):\n        s2=s2+str(w[i])\nif(s2==s1 and int(s)>0):\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  if (fopen(\"input.txt\", \"r\")) {\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n  }\n  string s;\n  cin >> s;\n  string s1;\n  cin >> s1;\n  vector<int> v;\n  vector<int> v1;\n  for (int i = 0; i < s.size(); i++) {\n    v.push_back(s[i] - '0');\n  }\n  for (int i = 0; i < s1.size(); i++) {\n    v1.push_back(s1[i] - '0');\n  }\n  sort(v.begin(), v.end());\n  if (v[0] == 0) {\n    for (int i = 1; i < v.size(); i++) {\n      if (v[i] != 0) {\n        int tmp = v[i];\n        v[i] = v[0];\n        v[0] = tmp;\n        break;\n      }\n    }\n  }\n  if (v == v1)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10] = {0};\nint main() {\n  string s, t;\n  cin >> s >> t;\n  for (int i = 0; i < (int)s.length(); ++i) {\n    a[s[i] - 48]++;\n  }\n  string u = \"\";\n  for (int i = 1; i <= 9; ++i) {\n    if (a[i]) {\n      u += to_string(i);\n      a[i]--;\n      break;\n    }\n  }\n  for (int i = 1; i <= a[0]; ++i) {\n    u += '0';\n  }\n  for (int i = 1; i <= 9; ++i) {\n    for (int j = 1; j <= a[i]; ++j) {\n      u += to_string(i);\n    }\n  }\n  if (t == u) {\n    printf(\"OK\\n\");\n  } else {\n    printf(\"WRONG_ANSWER\\n\");\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\n\ndef readln(): return tuple(map(int, input().split()))\n\na, = readln()\nb = input()\nres = ''\nfl = '0' not in list(str(a))\nfor s in sorted(list(str(a))):\n    if s != '0' and not fl:\n        res = s + res\n        fl = True\n    else:\n        res = res + s\nprint('OK' if b == res else 'WRONG_ANSWER')\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport bisect\n\ndef solve(s, t):\n    s = sorted(list(s))\n    s.sort()\n    if s[0] == '0':\n        for i in range(len(s)):\n            if s[i] != '0':\n                s[0], s[i] = (s[i], s[0])\n                break\n    s = ''.join(s)\n    return s == t\n\ndef main():\n    s = input()\n    t = input()\n    if solve(s, t):\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid swap(int *a, int *b) {\n  int temp = *a;\n  *a = *b;\n  *b = temp;\n}\nint isprime(int n) {\n  if (n < 2) return 0;\n  if (n < 4) return 1;\n  if (n % 2 == 0 or n % 3 == 0) return 0;\n  for (int i = 5; i * i <= n; i += 6)\n    if (n % i == 0 or n % (i + 2) == 0) return 0;\n  return 1;\n}\nvoid pairsort(int a[], int b[], int n) {\n  pair<int, int> pairt[n];\n  for (int i = 0; i < n; i++) {\n    pairt[i].first = a[i];\n    pairt[i].second = b[i];\n  }\n  sort(pairt, pairt + n);\n  for (int i = 0; i < n; i++) {\n    a[i] = pairt[i].first;\n    b[i] = pairt[i].second;\n  }\n}\nint gcd(int a, int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long fact(long long a) {\n  long long p = 1;\n  for (int i = 1; i <= a; i++) p *= i;\n  return p;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  string s, t;\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  if (s[0] == '0') {\n    int x = 10, pos = -1;\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] - '0' < x && s[i] != '0') {\n        x = s[i] - '0';\n        pos = i;\n      }\n    }\n    if (pos != -1) {\n      char c = s[pos];\n      s[pos] = s[0];\n      s[0] = c;\n    }\n  }\n  if (s.compare(t) == 0)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<long long> a;\nint main() {\n  long long t;\n  t = 1;\n  while (t--) {\n    long long b, ao;\n    string b1;\n    cin >> ao >> b1;\n    if (b1[0] == '0' && b1.size() != 1) {\n      cout << \"WRONG_ANSWER\\n\";\n      continue;\n    }\n    b = stoi(b1);\n    int n = 0;\n    if (ao == 0) {\n      cout << (ao != b ? \"WRONG_ANSWER\\n\" : \"OK\\n\");\n      continue;\n    }\n    while (ao > 0) {\n      a.push_back(ao % 10);\n      ao /= 10;\n      n++;\n    }\n    sort(a.begin(), a.end());\n    int ind = 0;\n    while (a[ind] == 0) {\n      ind++;\n    }\n    swap(a[0], a[ind]);\n    ao = 0;\n    for (int i = 0; i < a.size(); i++) {\n      ao *= 10;\n      ao += a[i];\n    }\n    cout << (ao != b ? \"WRONG_ANSWER\\n\" : \"OK\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, t;\nint p = -1, mn = 11;\nint main() {\n  cin >> s >> t;\n  int len = s.size();\n  for (int i = 0; i < len; i++)\n    if (s[i] != '0' && s[i] - '0' < mn) {\n      mn = s[i] - '0', p = i;\n    }\n  if (p != -1) {\n    s.erase(p, 1);\n    sort(s.begin(), s.end());\n    s = char('0' + mn) + s;\n  }\n  if ((t[0] == '0' && t.size() > 1) || s != t)\n    cout << \"WRONG_ANSWER\" << '\\n';\n  else\n    cout << \"OK\" << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\na = []\ns = ''\na = list(n)\na.sort()\ncount = a.count('0')\nif count != 0 and len(a) > 1:\n    a[0], a[count] = a[count], a[0]\nfor elem in a:\n    s += elem\nif s == m:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 3,
            "solution": "s=input()\nans=input()\nl=[int(x) for x in s]\nl.sort()\nif len(l)!=1 and l[0]==0:\n    i=1\n    while l[i]==0:\n        i+=1\n    l[0],l[i]=l[i],l[0]\na=''\nfor i in range(len(l)):\n    a+=str(l[i])\nif a==ans:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class PB {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner scan = new Scanner(System.in);\n\t\tString n = scan.nextLine();\n\t\tString m = scan.nextLine();\n\t\tString ans;\n\t\t\n\t\tif(n.length()<=1) {\n\t\t\tans = n;\n\t\t} else {\n\t\t\tchar[] chs = n.toCharArray();\n\t\n\t\t\tArrays.sort(chs);\n\t\t\tif(chs[0]=='0') {\n\t\t\t\tfor(int i=1; i<chs.length; i++) {\n\t\t\t\t\tif(chs[i]!='0') {\n\t\t\t\t\t\tchs[0] = chs[i];\n\t\t\t\t\t\tchs[i] = '0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tans = String.valueOf(chs);\n\t\t}\n\t\tif(ans.equals(m)) {\n\t\t\tSystem.out.println(\"OK\");\n\t\t} else {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "num = raw_input()\nans = [x for x in raw_input()]\n\nna = sorted(num)\nif na[0] == \"0\":\n    # print \"here\"\n    for i, n in enumerate(na):\n        if n != \"0\":\n            na[0] = n\n            na[i] = \"0\"\n            break\n# print na\n# print ans\nif ans == na:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char a[12], b[12];\n  int i;\n  gets(a);\n  gets(b);\n  sort(a, a + strlen(a));\n  if (a[0] == '0') {\n    for (i = 0; a[i] == '0'; i++)\n      ;\n    if (a[i]) {\n      int t = a[i];\n      a[i] = a[0];\n      a[0] = t;\n    }\n  }\n  if (!strcmp(a, b))\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string str, ans, num2;\n  int i, j, n, num;\n  cin >> str;\n  n = str.size();\n  map<char, int> m;\n  for (i = 0; i < n; i++) m[str.at(i)] += 1;\n  ans = \"\";\n  for (i = 1;; i++) {\n    if (m[i + '0'] > 0) {\n      ans += (i + '0');\n      m[i + '0'] -= 1;\n      break;\n    }\n  }\n  for (i = 0; i <= 9; i++)\n    for (j = 0; j < m[i + '0']; j++) ans += (i + '0');\n  cin >> num2;\n  if (ans == num2)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class ProblemB {\n\t\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader s = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter out = new PrintWriter(System.out);\n\n\t\tString query = s.readLine();\n\t\tint ql = query.length();\n\t\tchar[] c = new char[10];\n\t\tfor (int i = 0 ; i < ql ; i++) {\n\t\t\tc[query.charAt(i)-'0']++;\n\t\t}\n\t\tString myans = \"\";\n\t\tfor (int i = 1 ; i <= 9 ; i++) {\n\t\t\tif (c[i] >= 1) {\n\t\t\t\tmyans += (char)('0' + i);\n\t\t\t\tc[i]--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0 ; i <= 9 ; i++) {\n\t\t\tfor (int j = 0 ; j < c[i] ; j++) {\n\t\t\t\tmyans += (char)('0' + i);\n\t\t\t}\n\t\t}\n\t\tString ans = s.readLine();\n\t\tif (ans.equals(myans)) {\n\t\t\tout.println(\"OK\");\n\t\t} else {\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t}\n\t\tout.flush();\n\t}\n\n\n\tpublic static void debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main \n{ \n\tstatic int nums[] = new int[10];\n\tstatic String res =\"\"; \n\tpublic static void main(String[] args) \n\t{ \n\t\tScanner s = new Scanner(System.in);\n\t\tString n1=s.next(),n2=s.next(); \n\t\tint size=n1.length(); \n\t\tfor (int i=0;i < size;i++) \n\t\t\tnums[n1.charAt(i) - '0']++;\n\t\tint c =0; \n\t\tfor (int i=1;i < 10;i++) \n\t\t{ \n\t\t\tif (nums[i] != 0) \n\t\t\t{ \n\t\t\t\tint j; \n\t\t\t\tfor (j = 0;j < nums[i];j++) \n\t\t\t\t{ \n\t\t\t\t\tif (c == 0 && j == 1) \n\t\t\t\t\t\ttestZeroes(); \n\t\t\t\t\tres += i; \n\t\t\t\t} \n\t\t\t\tif (c == 0 && j == 1) \n\t\t\t\t\ttestZeroes(); \n\t\t\t\tc++; \n\t\t\t} \n\t\t}//test \n\t\t\n\t\tif(res.equals(\"\"))\n\t\t\tres=\"0\";\n\t\t\n\t\tif (res.equals(n2)) \n\t\t\tSystem.out.println(\"OK\"); \n\t\telse \n\t\t\tSystem.out.println(\"WRONG_ANSWER\"); \n\t}//main \n\tpublic static void testZeroes() \n\t{ \n\t\tfor (int j=0;j < nums[0];j++) \n\t\t\tres += 0; } \n}//class"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string res, tmp, tag;\n  cin >> res >> tag;\n  if (tag.size() != res.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  int cnt[10] = {0};\n  for (int i = 0; i < res.size(); i++) {\n    cnt[res[i] - '0']++;\n  }\n  for (int i = 1; i <= 9; i++) {\n    if (cnt[i] > 0) {\n      tmp += (i + '0');\n      cnt[i]--;\n      break;\n    }\n  }\n  for (int i = 0; i <= 9; i++) {\n    while (cnt[i] > 0) {\n      tmp += (i + '0');\n      cnt[i]--;\n    }\n  }\n  if (tmp == tag)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\n\npublic class B {\n    \n    Scanner sc = new Scanner(System.in);\n    \n    int[] myDigits;\n    int[] bobDigits;\n    int nbDigits;\n    int nbZeroes;\n    \n    public static void main(String[] args) {\n        B me = new B();\n        boolean ok = me.init();\n        if (ok) \n        {\n            ok = me.solve();\n        }\n        System.out.println(ok?\"OK\":\"WRONG_ANSWER\");\n    }\n\n    private boolean solve() {\n        if (nbZeroes != 0)\n        {\n            if (nbDigits > nbZeroes) \n            {\n                if (myDigits[nbZeroes] != bobDigits[0]) return false;\n                for (int i =0;i<nbZeroes;i++)\n                {\n                    if (bobDigits[i+1] != 0) return false;\n                }\n                for (int j=nbZeroes+1;j<nbDigits;j++)\n                {\n                    if (myDigits[j] != bobDigits[j]) return false;\n                }\n            }\n            else\n            {\n                return (bobDigits[0] == 0);\n            }\n        }\n        else\n        {\n            for (int j=0;j<nbDigits;j++)\n            {\n                if (myDigits[j] != bobDigits[j]) return false;\n            }           \n        }\n        return true;\n    }\n\n    private boolean init() {\n        boolean ret;\n        String line = sc.nextLine();\n        nbDigits = line.length();\n        myDigits = new int[nbDigits];\n        for (int i=0;i<nbDigits;i++)\n        {\n            if (line.charAt(i) == '0') nbZeroes++;\n            myDigits[i] = line.charAt(i)-'0';\n        }\n        Arrays.sort(myDigits);\n        line = sc.nextLine();\n        int n = line.length();\n        if (n != nbDigits)\n        {\n            return false;\n        }\n        bobDigits = new int[n];\n        for (int i=0;i<n;i++)\n        {\n            bobDigits[i] = line.charAt(i)-'0';\n        }\n        return true;\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "a = input()\nn = [0] * 10\n\nfor x in a:\n    y = int(x)\n    n[y] += 1\n\nfirst = False\nres = ''\nfor i, x in enumerate(n[1:]):\n    if x:\n        if not first:\n            res = str(i + 1) + '0' * n[0] + str(i + 1) * (x - 1)\n            first = True\n        else:\n            res += str(i + 1) * x\nif not res and a:\n    res = a\nif res == input():\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[22], t[22], res[22], m[22];\nint main() {\n  int n, mt;\n  while (~scanf(\"%d %s\", &n, &m)) {\n    int len = sprintf(a, \"%d\", n);\n    sort(a, a + len);\n    int i, j, cnt = 0;\n    memset(t, '\\0', sizeof(t));\n    memset(res, '\\0', sizeof(res));\n    for (i = 0; i < len; i++) {\n      if (a[i] == '0') {\n        t[cnt++] = a[i];\n      }\n    }\n    res[0] = a[cnt];\n    strcat(res, t);\n    strcat(res, a + cnt + 1);\n    if (strcmp(res, m) == 0) {\n      printf(\"OK\\n\");\n    } else {\n      printf(\"WRONG_ANSWER\\n\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "s = input()\nans = input()\nl = list(s)\nl.sort()\nl1 = l1 = l2 = l3 = []\nc = 0\nif \"0\" in l:\n    c = l.count(\"0\")\ns1 = s2 = s3 = temp = s = \"\"\nif c == 0:\n    s = s.join(l)\n    if ans == s:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\nelse:\n\n    if len(l) > c:\n        l1 = l[c]\n\n    l2 = l[0:c]\n    l3 = l[c + 1 :]\n    s1 = s1.join(l1)\n    s2 = s2.join(l2)\n    s3 = s3.join(l3)\n    temp = s1 + s2 + s3\n    if temp == ans:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:10000000\")\nusing namespace std;\nconst int INF = (int)1E8;\nconst int NMAX = (int)1010;\nconst long double EPS = 1E-9;\nint main() {\n  string s, str;\n  cin >> s;\n  cin >> str;\n  sort((s).begin(), (s).end());\n  int pos = 0;\n  for (int i = 0; i < int((int)s.length()); ++i)\n    if (s[i] != '0') {\n      pos = i;\n      break;\n    }\n  if (s[0] == '0') swap(s[0], s[pos]);\n  if (str == s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b, x, y;\n  char c;\n  int i;\n  while (cin >> a >> b) {\n    if (a == \"0\") {\n      cout << (b == \"0\" ? \"OK\" : \"WRONG_ANSWER\") << endl;\n      continue;\n    }\n    sort(a.begin(), a.end());\n    for (i = 0; i < a.length(); i++) {\n      if (a[i] != '0') {\n        c = a[i];\n        break;\n      }\n    }\n    x.clear();\n    x = a.substr(0, i);\n    y = a.substr(i + 1, a.length());\n    x = x + y + \"s\";\n    for (i = x.length() - 2; i >= 0; i--) {\n      x[i + 1] = x[i];\n    }\n    x[0] = c;\n    if (x == b) {\n      cout << \"OK\\n\";\n    } else {\n      cout << \"WRONG_ANSWER\\n\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input().strip()\nm = raw_input().strip()\na = list()\nn0 = 0\ns = \"\"\nfor x in n:\n\tif x == '0':\n\t\tn0 += 1\n\telse:\n\t\ta.append(int(x))\na.sort()\nif(len(a)>0):\n\ts += str(a[0])\ns += '0'*n0\nfor i in range(1,len(a)):\n\ts += str(a[i])\nif s == m:\n\tprint \"OK\"\nelse:\n\tprint \"WRONG_ANSWER\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long n = 0;\n  string a, b;\n  cin >> a >> b;\n  string c, d;\n  for (long long i = 0; i < a.length(); i++) {\n    if (a[i] == '0')\n      n++;\n    else\n      c.push_back(a[i]);\n  }\n  sort(c.begin(), c.end());\n  if (c.length() != 0) d.push_back(c[0]);\n  while (n != 0) {\n    d.push_back('0');\n    n--;\n  }\n  for (long long i = 1; i < c.length(); i++) d.push_back(c[i]);\n  if (d.length() == 1 && b.length() == 1 && d[0] == b[0]) {\n    cout << \"OK\";\n    return 0;\n  }\n  if (d == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class B12 {\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner scan = new Scanner(System.in);\n\t\tString n = scan.nextLine(), m = scan.nextLine();\n\t\tchar[] A  = (n).toCharArray() , B = (m).toCharArray();\n\t\tArrays.sort(A);\n\t\tArrays.sort(B);\n\t\tif(! new String(A).equals(new String(B)))\n\t\t{\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t\telse{\n\t\tString val = \"\"+n;\n\t\tint[] v = new int[val.length()];\n\t\tfor(int i=0; i<v.length; i++)\n\t\t\tv[i] = (int)(val.charAt(i)-'0');\n\t\tArrays.sort(v);\n\t\t//find the minimum nonzero value in v\n\t\tint front = 0, ignore = 0;\n\t\tfor(int i=0; i<v.length; i++)\n\t\t\tif(v[i] != 0)\n\t\t\t{\n\t\t\t\tfront = v[i];\n\t\t\t\tignore = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tString ans = \"\" + front;\n\t\tfor(int i =0; i<v.length; i++)\n\t\t{\n\t\t\tif(i == ignore) continue;\n\t\t\telse ans+=v[i];\n\t\t}\n\t\tSystem.out.println(ans.equals(\"\"+m)?\"OK\":\"WRONG_ANSWER\");\n\t\t}\n\t\t\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "s = raw_input();\nt = raw_input();\n\nflag = 1;\nfor i in range(len(s)):\n\tif s.count(s[i]) != t.count(s[i]):\n\t\tflag = 0; break;\n#print flag\npos = 0;\nfor i in range(len(t)):\n\tif t[i] != '0':\n\t\tpos = i; break;\nif pos != 0:\n\tflag = 0;\nif flag:\n\tfor i in range(pos+1, len(t)):\n\t\tif t[i] == '0' and i == pos+1:\n\t\t\tcontinue;\n\t\tif t[i] < t[i-1]:\n\t\t\tflag = 0; break;\nprint \"OK\" if flag else \"WRONG_ANSWER\";\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\nn = sorted(n)\nif(len(n)>1 and n[0]=='0'):\n\ttemp = n[0]\n\tn[0] = n[1]\n\tn[1] = temp\nn = ''.join(n)\nif(n==m):\n\tprint(\"OK\")\nelse:\n\tprint(\"WRONG_ANSWER\")\n\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nm=input()\nn=\"\".join(sorted(n))\nfor i in range(len(n)):\n\tif n[i]!=\"0\":\n\t\tn=n[i]+n[:i]+n[i+1:]\n\t\tbreak\n\nprint([\"OK\",\"WRONG_ANSWER\"][m!=n])"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  string s, k;\n  cin >> s >> k;\n  if (s == \"0\" && k == \"0\") {\n    cout << \"OK\";\n    return 0;\n  }\n  long long int p = s.length();\n  long long int A[p];\n  for (long long int j = 0; j < p; j++) A[j] = int(s[j]) - 48;\n  sort(A, A + p);\n  long long int i = 0;\n  while (A[i++] == 0) {\n  }\n  if (A[i - 1] != k[0] - 48) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  long long int t = 1;\n  for (long long int j = 0; j < p; j++)\n    if (j != i - 1) {\n      if (A[t++] != k[j] - 48) {\n        cout << \"WRONG_ANSWER\";\n        return 0;\n      }\n    }\n  cout << \"OK\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[11], b[11];\nint main() {\n  while (cin >> a >> b) {\n    int l1 = strlen(a);\n    int l2 = strlen(b);\n    int i, j;\n    if (b[0] != '0' && l2 > l1) {\n      cout << \"WRONG_ANSWER\" << endl;\n      continue;\n    }\n    int t = 0;\n    for (i = 0; b[i] != '0'; i++) t++;\n    if (l2 - t > l1) {\n      cout << \"WRONG_ANSWER\" << endl;\n      continue;\n    }\n    bool l = 0;\n    sort(a, a + l1);\n    if (a[0] == '0')\n      for (int i = 1; i < l1; i++) {\n        if (a[i] != 0) {\n          swap(a[i], a[0]);\n          break;\n        }\n      }\n    for (i = 0; i < l2; i++) {\n      int t = i;\n      for (j = 0; j < l1; j++) {\n        if (a[j] == b[t]) {\n          t++;\n        } else\n          break;\n      }\n      if (j == l1) {\n        l = 1;\n        break;\n      }\n    }\n    if (l)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "s1=input()\ns1=list(s1)\ns2=input()\ns2=list(s2)\nlst = list(dict.fromkeys(s1))\ns1.sort()\nlst.sort()\ns3=s2[:]\ns3.sort()\nif len(s1)!=len(s2):\n    print('WRONG_ANSWER')\nelif s1==s2 and s1==['0']:\n    print('OK')\nelif s1!=s3:\n    print('WRONG_ANSWER')\nelse:\n    if s1[0]!='0':\n        if s1==s2:\n            print('OK')\n        else:\n            print('WRONG_ANSWER')\n    else:\n        l=[]\n        if len(lst)>2:\n            k=s1.index(lst[2])\n        else:\n            k=0\n        k1=s1.count('0')\n        if len(lst)>=2:\n            k2=s1.count(lst[1])\n        else:\n            k=0\n        l=[lst[1]] + [lst[0]]*k1 + [lst[1]]*(k2-1) + s1[k:]\n\n        if l==s2:\n            print('OK')\n        else:\n            print('WRONG_ANSWER')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  string t;\n  cin >> t;\n  long long n = s.size();\n  sort(s.begin(), s.end());\n  string ans;\n  long long i = 0, p = 0, x = 0;\n  for (long long i = 0; i < n; i++) {\n    if (s[i] != '0') {\n      ans.push_back(s[i]);\n      x = 1;\n      p = i;\n      break;\n    }\n  }\n  if (!x) {\n    if (t == s)\n      cout << \"OK\"\n           << \"\\n\";\n    else\n      cout << \"WRONG_ANSWER\"\n           << \"\\n\";\n  } else {\n    for (long long i = 0; i < p; i++) ans.push_back(s[i]);\n    for (long long i = p + 1; i < n; i++) ans.push_back(s[i]);\n    if (ans == t)\n      cout << \"OK\"\n           << \"\\n\";\n    else\n      cout << \"WRONG_ANSWER\"\n           << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "# -*- coding: UTF-8 -*-\n\n# from itertools import *\n# from collections import defaultdict\n\n# def gcd(a,b):\n#     while b > 0: a,b = b, a%b\n#     return a\n\n# def baseN(num,b,numerals=\"0123456789abcdefghijklmnopqrstuvwxyz\"):\n#     return ((num == 0) and  \"0\" ) or ( baseN(num // b, b).lstrip(\"0\") + numerals[num % b])\na = raw_input()\nzeros = a.count(\"0\")\na = a.replace(\"0\", \"\")\na = sorted(a)\nif len(a) > 1:\n    if a[0]+\"0\"*zeros+\"\".join(a[1:]) == raw_input():\n        print \"OK\"\n    else:\n        print \"WRONG_ANSWER\"\nelse:\n    if raw_input() == \"\".join(a)+(\"0\"*zeros):\n        print \"OK\"\n    else:\n        print \"WRONG_ANSWER\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10];\nint main() {\n  string s, t;\n  cin >> s >> t;\n  int x = s.length();\n  for (int i = 0; i < x; i++) a[i] = s[i] - '0';\n  sort(a, a + x);\n  if (a[0] == 0) {\n    for (int i = 1; i < x; i++)\n      if (a[i] > 0) {\n        swap(a[i], a[0]);\n        break;\n      }\n  }\n  for (int i = 0; i < x; i++) s[i] = a[i] + '0';\n  if (t == s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\n\npublic class Main {\n\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tString n=scan.next();\n\t\tString f=scan.next();\n\t\tif(n.length()!=f.length())System.out.println(\"WRONG_ANSWER\");\n\t\telse{\n\t\tint arr[]=new int[n.length()];\n\t\tLinkedList<Integer>lista=new LinkedList<Integer>();\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tlista.add(Integer.parseInt(n.substring(i,i+1)));\n\t\t}\n\t\tCollections.sort(lista);\n\t\tint r=0;\n\t\t\n\t\twhile(r!=lista.size() &&lista.get(r)==0){\n\t\t\tr++;\n\t\t}\n\t\tif(lista.size()==1 && lista.get(0)==0)r--;\n\t\tint max=0;\n\t\tString res=\"\";\n\t\tres+=lista.get(r)+\"\";\n\t\tfor (int i = 0; i < r; i++) {\n\t\t\tres+=\"0\";\n\t\t}\n\t\tfor (int i =r+1; i <n.length(); i++) {\n\t\t\tres+=lista.get(i);\n\t\t}\n\t\t\n\t\tif(res.equals(f))System.out.println(\"OK\");\n\t\telse System.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t\t\n\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "a = raw_input()\nb = raw_input()\n\nif(len(a) == len(b)):\n    if(b[0] != \"0\" and len(b) > 1):\n        aux = True\n        for i in xrange(1, len(b)):\n            if(i == 1):\n                if((not (b[i-1] <= b[i])) and b[i] != \"0\"):\n                    aux = False\n            elif((not (b[i-1] <= b[i]))):\n                aux = False\n        if(aux):\n            print(\"OK\")\n        else:\n            print(\"WRONG_ANSWER\")\n    elif(len(b) == 1):\n        if(b == a):\n            print(\"OK\")\n        else:\n            print(\"WRONG_ANSWER\")\n    else:\n        print(\"WRONG_ANSWER\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Correct {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String n = scanner.next();\n        String m = scanner.next();\n        String answer = \"\";\n        int p;\n        ArrayList<Integer> arr = new ArrayList<>();\n        for (int i = n.length() - 1; i >= 0; i--) {\n            p = Integer.parseInt(\"\" + n.charAt(i));\n            arr.add(p);\n        }\n        int min = 10;\n        int k = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < min && arr.get(i) > 0) {\n                min = arr.get(i);\n                k = i;\n            }\n        }\n        if (min != 10) {\n            answer = answer + min;\n            arr.remove(k);\n            min = 10;\n        }\n        while (!arr.isEmpty()) {\n            for (int i = 0; i < arr.size(); i++) {\n                if (arr.get(i) < min) {\n                    min = arr.get(i);\n                    k = i;\n                }\n            }\n            answer = answer + min;\n            arr.remove(k);\n            min = 10;\n        }\n        if (answer.equals(m))\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,s = list(input()), input();\nn.sort(key=int);\nfor i in range (len(n)):\n    if n[i]!='0':\n        n[0],n[i]=n[i],n[0];\n        break;\nn=''.join(n);\nprint(['WRONG_ANSWER','OK'][n==s]);\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\n/**\n *\n * @author mhamm\n */\npublic class Main {\n\n    /**\n     * @param args the command line arguments\n     */\n    static int numChar[];\n    public static void main(String[] args) throws IOException {\n        BufferedReader br  = new BufferedReader(new InputStreamReader(System.in));\n        \n        String num = br.readLine();\n        String expectedAnswer = br.readLine();\n        String answer = \"\";\n        if(expectedAnswer.equals(\"0\") && num.equals(\"0\")){\n            System.out.println(\"OK\");\n            return;\n        }\n        numChar = new int[num.length()];\n        for(int i = 0;i<num.length();i++){\n            numChar[i] = Integer.parseInt(Character.toString(num.charAt(i)));\n        }\n        \n        for(int i = 0;i<num.length();i++){\n            answer+=getMinValue(answer.length()==0);\n        }\n        \n        if(answer.equals(expectedAnswer)){\n            System.out.println(\"OK\");\n        }else{\n            System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n    \n    private static int getMinValue(boolean zero){\n        int min = 10;\n        int index = 0;\n        for(int i = 0;i<numChar.length;i++){\n            if(zero){\n                if(numChar[i] < min && numChar[i] != -1 && numChar[i] != 0){\n                    min = numChar[i];\n                    index = i;\n                }\n            }else{\n                if(numChar[i] < min && numChar[i] != -1){\n                    min = numChar[i];\n                    index = i;\n                }\n            }\n        }\n        numChar[index] = -1;\n        return min;\n    }\n    \n}"
        },
        {
            "language": 3,
            "solution": "a = input()\nb = input()\n\nat = list(a)\nat.sort()\n\nfor i in range(len(at)):\n\tif(at[i] != '0'):\n\t\tt = at.pop(i)\n\t\tat.insert(0,t)\n\t\tbreak\n\t\t\na = ''.join(at)\nif(a == b):\n\tprint(\"OK\")\nelse:\n\tprint(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Math.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class _12_d2_B {\n\n    boolean showDebug = true;\n    \n    String make(String s) {\n        if (s.equals(\"0\")) return s;\n        char[] c = s.toCharArray();\n        Arrays.sort(c);\n        int z=0; boolean ok = false;\n        s = \"\";\n        for (char ch: c) {\n            if (ch=='0') z++;\n            else {\n                if (!ok) {\n                    s+=ch;\n                    while (z-->0) s+='0';\n                    ok=true;\n                } else s+=ch;\n            }\n        }\n        return s;\n    }\n    \n    public void solve() throws Exception {\n        \n        String a = nextWord(), b = nextWord();\n        println(make(a).equals(b) ? \"OK\":\"WRONG_ANSWER\");\n    }\n    \n    \n\n    ////////////////////////////////////////////////////////////////////////////    \n\n    double EPS = 1e-7;\n    int INF = Integer.MAX_VALUE;\n    long INFL = Long.MAX_VALUE;\n    double INFD = Double.MAX_VALUE;\n\n    int[] dx = {0,1,0,-1};\n    int[] dy = {-1,0,1,0};\n    int[] dx8 = {0,1,1,1,0,-1,-1,-1};\n    int[] dy8 = {-1,-1,0,1,1,1,0,-1};\n    int[] knightMovesX = {1,2,2,1,-1,-2,-2,-1};\n    int[] knightMovesY = {-2,-1,1,2,2,1,-1,-2};\n\n\n    @SuppressWarnings(\"serial\")\n    class IncMap extends HashMap<Object, Integer> {\n        boolean add(Object key, int amount) {\n            Integer i = get(key);\n            if (i!=null) {\n                put(key, i+amount);\n                return false;\n            } else {\n                put(key, amount);\n                return true;\n            }\n        }\n        boolean add(Object key) {\n            return add(key, 1);\n        }\n    }\n    \n\n    int min(int... nums) {\n        int r = INF;\n        for (int i: nums)\n            if (i<r) r=i;\n        return r;\n    }\n    int max(int... nums) {\n        int r = -INF;\n        for (int i: nums)\n            if (i>r) r=i;\n        return r;\n    }\n    long minL(long... nums) {\n        long r = INFL;\n        for (long i: nums)\n            if (i<r) r=i;\n        return r;\n    }\n    long maxL(long... nums) {\n        long r = -INFL;\n        for (long i: nums)\n            if (i>r) r=i;\n        return r;\n    }\n    double minD(double... nums) {\n        double r = INFD;\n        for (double i: nums)\n            if (i<r) r=i;\n        return r;\n    }\n    double maxD(double... nums) {\n        double r = -INFD;\n        for (double i: nums)\n            if (i>r) r=i;\n        return r;\n    }\n    long sumArr(int[] arr) {\n        long res = 0;\n        for (int i: arr)\n            res+=i;\n        return res;\n    }\n    long sumArr(long[] arr) {\n        long res = 0;\n        for (long i: arr)\n            res+=i;\n        return res;\n    }\n    double sumArr(double[] arr) {\n        double res = 0;\n        for (double i: arr)\n            res+=i;\n        return res;\n    }\n    \n    \n    long partsFitCnt(long partSize, long wholeSize) {\n        return (partSize+wholeSize-1)/partSize;\n    }\n    \n    int digitSum(long i) {\n        i = abs(i);\n        int r = 0;\n        while (i>0) {\n            r+=i%10;\n            i/=10;\n        }\n        return r;\n    }\n    long digitProd(long i) {\n        if (i==0) return 0;\n        i = abs(i);\n        long r = 1;\n        while (i>0) {\n            r*=i%10;\n            i/=10;\n        }\n        return r;\n    }\n    \n    long gcd (long a, long b) {\n        while (b>0) {\n            a%=b;\n            long tmp=a; a=b; b=tmp;\n        }\n        return a;\n    }\n    long lcm(long a, long b) {\n        return (a*b)/gcd(a,b);\n    }\n    \n    double log_2 = log(2);\n    double log2(double i) {\n        if (i<=0) return -INFD;\n        return log(i)/log_2;\n    }\n    long binpow(int x, int n) {\n        long r = 1;\n        while (n>0) {\n            if ((n&1)!=0) r*=x;\n            x*=x;\n            n>>=1;\n        }\n        return r;\n    }\n    long fac(int i) {\n        if (i>20) throw new IllegalArgumentException();\n        return i<=1 ?  1:fac(i-1)*i;\n    }\n    \n    \n    double dist(double x, double y, double xx, double yy) {\n        return sqrt((xx-x)*(xx-x)+(yy-y)*(yy-y));\n    }\n    \n    \n    boolean isPalindrome(String s) {\n        for (int i=0; i<s.length()/2; i++)\n            if (s.charAt(i)!=s.charAt(s.length()-1-i)) return false;\n        return true;\n    }\n    int occurenciesCnt(String s, String pattern) {\n        int res = 0;\n        for (int i=0; i<s.length()-pattern.length()+1; i++)\n            if (s.substring(i, i+pattern.length()).equals(pattern)) res++;\n        return res;\n    }\n    int occurenciesCnt(String s, char pattern) {\n        int res = 0;\n        for (int i=0; i<s.length(); i++)\n            if (s.charAt(i)==pattern) res++;\n        return res;\n    }\n    \n    \n    int[] months = {0,31,28,31,30,31,30,31,31,30,31,30,31};\n    boolean isLeapYear(int y) {\n        return y%4==0 && (y%400==0 || y%100!=0);\n    }\n    boolean isValidDate(int d, int m, int y) {\n        if (isLeapYear(y) && m==2 && d==29) return true;\n        return m>0 && m<=12 && d>0 && d<=months[d];\n    }\n    int[] nextDay(int d, int m, int y) {\n        if (d>=months[m])\n            if (m==2 && d==28 && isLeapYear(y)) d++;\n            else {d=1; m++;}\n        else\n            d++;\n        if (m==13) {d=1; m=1; y++;}\n        return new int[] {d,m,y};\n    }\n    \n    String str(Object o) {\n        return o.toString();\n    }\n\n\n    long timer = System.currentTimeMillis();\n    void startTimer() {\n        timer = System.currentTimeMillis();\n    }\n    void stopTimer() {\n        System.err.println(\"time: \"+(System.currentTimeMillis()-timer)/1000.0);\n    }\n\n\n    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n    static BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n\n    String nextLine() throws IOException {\n        return in.readLine();\n    }\n    String nextWord() throws IOException {\n        StringBuilder sb = new StringBuilder();\n        int c = 0;\n        while (c<=' ') c=in.read();\n        while (c>' ') {\n            sb.append((char)c);\n            c = in.read();\n        }\n        return sb.toString();\n    }\n    int nextInt() throws NumberFormatException, IOException {\n        return Integer.parseInt(nextWord());\n    }\n    long nextLong() throws NumberFormatException, IOException {\n        return Long.parseLong(nextWord());\n    }\n    double nextDouble() throws NumberFormatException, IOException {\n        return Double.parseDouble(nextWord());\n    }\n    int[] nextArr(int size) throws NumberFormatException, IOException {\n        int[] arr = new int[size];\n        for (int i=0; i<size; i++)\n            arr[i] = nextInt();\n        return arr;\n    }\n    long[] nextArrL(int size) throws NumberFormatException, IOException {\n        long[] arr = new long[size];\n        for (int i=0; i<size; i++)\n            arr[i] = nextLong();\n        return arr;\n    }\n    double[] nextArrD(int size) throws NumberFormatException, IOException {\n        double[] arr = new double[size];\n        for (int i=0; i<size; i++)\n            arr[i] = nextDouble();\n        return arr;\n    }\n    String[] nextArrS(int size) throws NumberFormatException, IOException {\n        String[] arr = new String[size];\n        for (int i=0; i<size; i++)\n            arr[i] = nextWord();\n        return arr;\n    }\n\n    void print(Object o) throws IOException {\n        out.write(o.toString());\n    }\n    void println(Object o) throws IOException {\n        out.write(o.toString());\n        out.newLine();\n    }\n    void print(Object... o) throws IOException {\n        for (int i=0; i<o.length; i++) {\n            if (i!=0) out.write(' ');\n            out.write(o[i].toString());\n        }\n    }\n    void println(Object... o) throws IOException {\n        print(o);\n        out.newLine();\n    }\n    void printArr(int[] arr) throws IOException {\n        for (int i=0; i<arr.length; i++) {\n            if (i!=0) out.write(' ');\n            out.write(Integer.toString(arr[i]));\n        }\n    }\n    void printArr(long[] arr) throws IOException {\n        for (int i=0; i<arr.length; i++) {\n            if (i!=0) out.write(' ');\n            out.write(Long.toString(arr[i]));\n        }\n    }\n    void printArr(double[] arr) throws IOException {\n        for (int i=0; i<arr.length; i++) {\n            if (i!=0) out.write(' ');\n            out.write(Double.toString(arr[i]));\n        }\n    }\n    void printlnArr(int[] arr) throws IOException {\n        printArr(arr);\n        out.newLine();\n    }\n    void printlnArr(long[] arr) throws IOException {\n        printArr(arr);\n        out.newLine();\n    }\n    void printlnArr(double[] arr) throws IOException {\n        printArr(arr);\n        out.newLine();\n    }\n\n    void debug(Object... o) {\n        if (showDebug) System.err.println(Arrays.deepToString(o));\n    }\n     \n\n    public static void main(String[] args) throws Exception {\n        Locale.setDefault(Locale.US);\n        new _12_d2_B().solve();\n        out.flush();\n        out.close(); in.close();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long int b;\n  cin >> b;\n  int a[100000];\n  int n = 0;\n  while (b != 0) {\n    a[n] = b % 10;\n    b = b / 10;\n    n++;\n  }\n  sort(a, a + n);\n  string c, d;\n  cin >> c;\n  int zero = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] != 0) {\n      d += (a[i] + 48);\n      if (zero != 0) {\n        while (zero != 0) {\n          zero--;\n          d += '0';\n        }\n      }\n    } else\n      zero++;\n  }\n  if (d.empty()) d += '0';\n  if (c == d)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, s1, c = \"\";\n  int sum = 0;\n  cin >> s >> s1;\n  if (s == \"0\" && s1 == \"0\") {\n    cout << \"OK\";\n    return 0;\n  }\n  for (int i = 0; i < s.size(); ++i) {\n    if (s[i] == '0') {\n      sum++;\n      s.erase(i, 1);\n    }\n  }\n  sort(s.begin(), s.end());\n  c += s[0];\n  for (int i = 1; i <= sum; ++i) {\n    c += '0';\n  }\n  if (sum == 0) {\n    sum++;\n  }\n  for (int i = sum; i < s.size(); ++i) {\n    c += char(s[i]);\n  }\n  if (c == s1) {\n    cout << \"OK\";\n    return 0;\n  }\n  cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 3,
            "solution": "a=input()\na=sorted(list(a))\ni=0;\nwhile i<len(a)-1 and a[i]=='0':\n    i+=1\na[i],a[0]=a[0],a[i]\na=''.join(a)\nb=input()\n#print(a)\n#print(b)\nif a==b:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long INF = 1e9;\nlong long gcd(long long a, long long b) { return (a ? gcd(b % a, a) : b); }\nlong long power(long long a, long long n) {\n  long long p = 1;\n  while (n > 0) {\n    if (n % 2) {\n      p = p * a;\n    }\n    n >>= 1;\n    a *= a;\n  }\n  return p;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  string n[2], ans = \"\";\n  int mn = 10;\n  cin >> n[0] >> n[1];\n  map<int, int> mp;\n  for (int(i) = 0; (i) < (n[0].size()); (i)++) {\n    mp[n[0][i] - '0']++;\n    if (n[0][i] == '0') continue;\n    mn = ((mn) < (n[0][i] - '0') ? (mn) : (n[0][i] - '0'));\n  }\n  if (mp[mn]) {\n    ans += char(mn + '0');\n    mp[mn]--;\n  }\n  for (int(i) = 0; (i) < (10); (i)++) {\n    while (mp[i]) {\n      ans += char(i + '0');\n      mp[i]--;\n    }\n  }\n  if (ans == n[1])\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[20], b[20];\nint a[20], n, m;\nint main() {\n  scanf(\"%s%s\", s + 1, b + 1);\n  if (strlen(s + 1) != strlen(b + 1)) {\n    puts(\"WRONG_ANSWER\");\n    return 0;\n  }\n  int i, tot = 0, x = 0, se = 0, y = 0;\n  for (i = 1; s[i]; i++) {\n    a[++tot] = s[i] - '0';\n    if (s[i] == '0') se++;\n  }\n  sort(a + 1, a + tot + 1);\n  if (se) swap(a[se + 1], a[1]);\n  for (i = 1; i <= tot; i++) y = y * 10 + a[i];\n  for (i = 1; b[i]; i++) x = x * 10 + b[i] - '0';\n  puts(x == y ? \"OK\" : \"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nn2 = input()\nn = sorted(n)\nfor x in range(len(n)):\n    if n[0] == '0' and x:\n        if n[x] != '0':\n            temp = n[x]\n            n[x] = '0'\n            n[0] = temp\n            break\nn = ''.join(n)\nif n == n2:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string str;\n  cin >> str;\n  string btr;\n  cin >> btr;\n  if (btr.size() != str.size()) {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  } else if (str[0] != '0' && btr[0] == '0') {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  } else if (str[0] == 0 && btr[0] == 0) {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  sort(str.begin(), str.end());\n  for (int i = 1; i < str.size(); i++) {\n    if (str[i] != '0' && str[0] == '0') swap(str[i], str[0]);\n  }\n  if (str == btr) {\n    cout << \"OK\" << endl;\n    return 0;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "n = map(int,list(raw_input()))\nguess = raw_input()\nmini = min(n, key = lambda x: x if x else 10)\nn.remove(mini)\nzeros = 0\nwhile 0 in n:\n    zeros+=1\n    n.remove(0)\nres = '%i%s%s' %(mini,zeros*'0',''.join(map(str,sorted(n))))\nprint \"OK\" if res == guess else \"WRONG_ANSWER\"\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.Point;\nimport java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class B {\n\n    public static void main(String[] Args) throws IOException {\n        new B().solve();\n    }\n\n    void solve() throws IOException {\n        char[] s = ss().toCharArray();\n        String m = ss();\n        Arrays.sort(s);\n\n        for (int i = 0; i < s.length; i++) {\n            if (s[i] != '0' && s[0] == '0') {\n                s[0] = s[i];\n                s[i] = '0';\n                break;\n            }\n        }\n        System.out.println(new String(s).equals(m) ? \"OK\" : \"WRONG_ANSWER\");\n\n    }\n\n    class comp implements Comparator<int[]> {\n\n        @Override\n        public int compare(int[] o1, int[] o2) {\n            // TODO Auto-generated method stub\n            return 0;\n        }\n\n    }\n\n    // ----------------------- Library ------------------------\n    void initSystem() throws IOException {\n        if (br != null)\n            br.close();\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    void initFile() throws IOException {\n        if (br != null)\n            br.close();\n        br = new BufferedReader(new InputStreamReader(new FileInputStream(\n                \"input.txt\")));\n    }\n\n    void printWriter() {\n        try {\n            PrintWriter pr = new PrintWriter(\"output.txt\");\n            pr.println(\"hello world\");\n            pr.close();\n        } catch (FileNotFoundException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n    void comparator() {\n        Point[] v = new Point[10];\n        Arrays.sort(v, new Comparator<Point>() {\n            @Override\n            public int compare(Point a, Point b) {\n                if (a.x != b.x)\n                    return -(a.x - b.x);\n                return a.y - b.y;\n            }\n        });\n    }\n\n    double distance(Point a, Point b) {\n        double dx = a.x - b.x, dy = a.y - b.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    Scanner in = new Scanner(System.in);\n\n    String ss() {\n        return in.next();\n    }\n\n    String sline() {\n        return in.nextLine();\n    }\n\n    int si() {\n        return in.nextInt();\n    }\n\n    int[] sai(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < a.length; i++) {\n            a[i] = in.nextInt();\n        }\n        return a;\n    }\n\n    int[] sai_(int n) {\n        int[] a = new int[n + 1];\n        for (int i = 1; i <= n; i++) {\n            a[i] = in.nextInt();\n        }\n        return a;\n    }\n\n    BufferedReader br;\n    StringTokenizer tokenizer;\n    {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    void tok() throws IOException {\n        tokenizer = new StringTokenizer(br.readLine());\n    }\n\n    int toki() throws IOException {\n\n        return Integer.parseInt(tokenizer.nextToken());\n    }\n\n    int[] rint(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < a.length; i++)\n            a[i] = Integer.parseInt(tokenizer.nextToken());\n\n        return a;\n    }\n\n    int[] rint_(int n) throws IOException {\n        int[] a = new int[n + 1];\n        for (int i = 1; i <= n; i++)\n            a[i] = Integer.parseInt(tokenizer.nextToken());\n\n        return a;\n    }\n\n    String[] rstrlines(int n) throws IOException {\n        String[] a = new String[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = br.readLine();\n        }\n        return a;\n    }\n\n    long tokl() {\n        return Long.parseLong(tokenizer.nextToken());\n    }\n\n    double tokd() {\n        return Double.parseDouble(tokenizer.nextToken());\n    }\n\n    String toks() {\n        return tokenizer.nextToken();\n    }\n\n    String rline() throws IOException {\n        return br.readLine();\n    }\n\n    List<Integer> toList(int[] a) {\n        List<Integer> v = new ArrayList<Integer>();\n        for (int i : a)\n            v.add(i);\n        return v;\n    }\n\n    static void pai(int[] a) {\n        System.out.println(Arrays.toString(a));\n    }\n\n    static int toi(Object s) {\n        return Integer.parseInt(s.toString());\n    }\n\n    static int[] dx_ = { 0, 0, 1, -1 };\n    static int[] dy_ = { 1, -1, 0, 0 };\n\n    static int[] dx3 = { 1, -1, 0, 0, 0, 0 };\n    static int[] dy3 = { 0, 0, 1, -1, 0, 0 };\n    static int[] dz3 = { 0, 0, 0, 0, 1, -1 };\n\n    static int[] dx = { 1, 0, -1, 1, -1, 1, 0, -1 }, dy = { 1, 1, 1, 0, 0, -1,\n            -1, -1 };\n\n    static int INF = 2147483647; // =2^31-1 // -8\n    static long LINF = 922337203854775807L; // -8\n    static short SINF = 32767; // -32768\n\n    // finds GCD of a and b using Euclidian algorithm\n    public int GCD(int a, int b) {\n        if (b == 0)\n            return a;\n        return GCD(b, a % b);\n    }\n\n    static List<String> toList(String[] a) {\n        return Arrays.asList(a);\n    }\n\n    static String[] toArray(List<String> a) {\n        String[] o = new String[a.size()];\n        a.toArray(o);\n        return o;\n    }\n\n    static int[] pair(int... a) {\n        return a;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "lst=input()\nlst1=input()\n\nlst=''.join(sorted(lst))\nif(len(lst)>=2):\n    if(lst[0]=='0'):\n        temp=list(lst)\n        temp[0]=temp[1]\n        temp[1]='0'\n        lst=''\n        for i in temp:\n            lst+=i\nif(lst==lst1):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        InputReader in = new InputReader(System.in);\n        OutputWriter out = new OutputWriter(System.out);\n       String s = in.readString();\n       String t = in.readString();\n       int n = s.length();\n       int[] a = new int[n];\n       int[] b = new int[t.length()];\n       for (int i=0;i<n;i++)\n       {\n           a[i]=s.charAt(i)-48;\n\n       }\n       for (int i=0;i<t.length();i++)\n           b[i]=t.charAt(i)-48;\n       if (s.length()!=t.length())\n           out.printLine(\"WRONG_ANSWER\");\n       else {\n           Arrays.sort(a);\n           int u = 1;\n           if (a[0] == 0)\n               Swap(a, n);\n\n\n           int cntr = 0;\n           if (u == 1) {\n               for (int i = 0; i < n; i++)\n                   if (a[i] == b[i])\n                       cntr++;\n           }\n\n           out.printLine((cntr == n) ? \"OK\" : \"WRONG_ANSWER\");\n       }\n        out.flush();\n    }\n\nstatic void Swap(int[] a,int n)\n{\n    for (int i=0;i<n;i++)\n    {\n        if (a[i]!=0)\n        {\n\n\n            a[0]=a[i];\n            a[i]=0;\n            break;\n\n        }\n    }\n\n}\n\n    static void MergeSort(int[] a, int[] b,  int p, int r)\n    {\n        if (p < r)\n        {\n            int q = (r + p) / 2;\n            MergeSort(a, b,  p, q);\n            MergeSort(a, b,  q + 1, r);\n            Merge(a, b,  p, q, r);\n        }\n    }\n    static void Merge(int[] a, int[] b,  int p, int q, int r)\n    {\n        int n1 = q - p + 1;\n        int n2 = r - q;\n        int[] R = new int[n1 + 1];\n        int[] L = new int[n2 + 1];\n        int[] R1 = new int[n1];\n        int[] L1 = new int[n2];\n\n        for (int i = 0; i < n1; i++)\n        {\n            R[i] = a[p + i];\n            R1[i] = b[p + i];\n\n        }\n        R[n1] = Integer.MAX_VALUE;\n        for (int i = 0; i < n2; i++)\n        {\n            L[i] = a[q + i + 1];\n            L1[i] = b[q + i + 1];\n\n        }\n        L[n2] = Integer.MAX_VALUE;\n        int n = a.length;\n        int j = 0;\n        int k = 0;\n        for (int i = p; i <= r; i++)\n        {\n            if (L[j] < R[k])\n            {\n                a[i] = L[j];\n                b[i] = L1[j];\n\n                j++;\n            }\n            else\n            {\n                a[i] = R[k];\n                b[i] = R1[k];\n\n                k++;\n            }\n\n        }\n    }\n}\nclass Graph {\n\n\n    int n;\n    LinkedList<Integer>[] adjList;\n\n    public Graph(int n) {\n        this.n = n;\n        adjList = new LinkedList[n];\n        for (int i = 0; i < n; i++)\n            adjList[i] = new LinkedList<>();\n    }\n\n}\n\n\nclass InputReader {\n\n    private final InputStream stream;\n    private final byte[] buf = new byte[8192];\n    private int curChar, snumChars;\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n    public int read() {\n        if (snumChars == -1)\n            throw new InputMismatchException();\n        if (curChar >= snumChars) {\n            curChar = 0;\n            try {\n                snumChars = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (snumChars <= 0)\n                return -1;\n        }\n        return buf[curChar++];\n    }\n\n    public int nextInt() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int res = 0;\n        do {\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public long nextLong() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        long res = 0;\n        do {\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public int[] nextIntArray(int n) {\n        int a[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    public String readString() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        StringBuilder res = new StringBuilder();\n        do {\n            res.appendCodePoint(c);\n            c = read();\n        } while (!isSpaceChar(c));\n        return res.toString();\n    }\n\n    public String nextLine() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        StringBuilder res = new StringBuilder();\n        do {\n            res.appendCodePoint(c);\n            c = read();\n        } while (!isEndOfLine(c));\n        return res.toString();\n    }\n\n    public boolean isSpaceChar(int c) {\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    private boolean isEndOfLine(int c) {\n        return c == '\\n' || c == '\\r' || c == -1;\n    }\n\n}\n\nclass OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n        this.writer = new PrintWriter(writer);\n    }\n\n    public void print(Object... objects) {\n        for (int i = 0; i < objects.length; i++) {\n            if (i != 0)\n                writer.print(' ');\n            writer.print(objects[i]);\n        }\n    }\n\n    public void printLine(Object... objects) {\n        print(objects);\n        writer.println();\n    }\n\n    public void close() {\n        writer.close();\n    }\n\n    public void flush() {\n        writer.flush();\n    }\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int dx[4] = {1, 0, -1, 0};\nconst int dy[4] = {0, -1, 0, 1};\nusing namespace std;\nstring s1, s2;\nvoid init() {\n  cin >> s1;\n  cin >> s2;\n}\nbool check() {\n  if (s1 == \"0\" && s2 == \"0\") return 1;\n  int a[10] = {0};\n  for (int i = 0; i < s1.size(); ++i) a[s1[i] - '0']++;\n  string s3;\n  for (int i = 1; i < 10; ++i)\n    if (a[i]) {\n      s3 += (char)(i + '0');\n      a[i]--;\n      break;\n    }\n  for (int i = 0; i < 10; ++i)\n    while (a[i]) {\n      s3 += (char)(i + '0');\n      a[i]--;\n    }\n  if (s3 == s2)\n    return 1;\n  else\n    return 0;\n}\nint main() {\n  init();\n  if (check())\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve(n):\n\tif n == '0':\n\t\treturn '0'\n\n\ts = ''.join(sorted(n))\n\tpos = min(filter(lambda _: s[_] != '0', range(len(s))))\n\treturn s[pos] + s[:pos] + s[pos + 1:]\n\n\nn, m = input().strip(), input().strip()\n\nprint('OK' if m == solve(n) else 'WRONG_ANSWER')\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nm=input()\nlst=list(n)\nlst.sort()\ni=0\nwhile(i<len(n) and lst[i]=='0'):\n    i+=1\nif(i<len(n)):\n    t=lst[i]\n    lst[i]=lst[0]\n    lst[0]=t\nn=''.join(lst)\nif n==m:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\n\npublic class Main{\n    public static void main(String [] args)\n    {\n        Scanner scan=new Scanner(System.in);\n        char []a=scan.nextLine().toCharArray();\n        char []b=scan.nextLine().toCharArray();\n        \n        Arrays.sort(a);\n        int i=0;\n        for( i=0; i< a.length && a[i]==48 ; i++);\n        if(i!=0 && i<a.length)\n        {\n            a[0]=a[i];\n            a[i]=48;\n        }\n        if(Arrays.equals(a,b))\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = list(input())\nt.sort()\nt = ''.join(t)\nk = t.rfind('0') + 1\nif k > 0 and len(t) > 1: t = t[k] + t[:k] + t[k + 1:]\nprint('OK' if t == input() else 'WRONG_ANSWER')"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\na=input()\nb=input()\n#z=a.count('0')\na=''.join(sorted(a))\nfor i in range(len(a)):\n    if(a[i]!='0'):\n        a=a[i]+a[0:i]+a[i+1:]\n        break\nif(a==b):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\nimport static java.lang.System.*;\nimport static java.util.Arrays.deepToString;\n\npublic class CorrectSolution {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(in);\n\t\tint[] diga, digb;\n\t\t\n\t\tdiga = digits(sc.nextInt());\n\t\tString b = sc.next();\n\t\tdigb = digits(Integer.parseInt(b));\n\t\t\n\t\tif (diga.length != b.length() || diga.length != digb.length) {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t}\t\t\n\t\t\t\n\t\ttransform(diga);\t\t\n\t\t\n\t\tfor (int i=0;i<diga.length;i++)\n\t\t\tif (diga[i] != digb[i]) {\n\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\n\t\tSystem.out.println(\"OK\");\n\t}\n\t\n\tpublic static void transform(int[] x) {\n\t\tArrays.sort(x);\n\t\tif (x[0] > 0)\n\t\t\treturn;\n\t\tfor (int i=0;i<x.length;i++)\n\t\t\tif (x[i] > 0) {\n\t\t\t\tx[0] = x[i];\n\t\t\t\tx[i] = 0;\n\t\t\t\treturn;\n\t\t\t}\t\t\t\t\n\t}\n\t\n\tpublic static int[] digits(int x) {\n\t\tint[] digits;\n\t\tint n = (x+\"\").length();\n\t\t\n\t\tdigits = new int[n];\n\t\twhile (x > 0) {\n\t\t\tdigits[--n] = x%10;\n\t\t\tx /= 10;\n\t\t}\n\t\t\n\t\treturn digits;\n\t}\n\t\n\tprivate static void debug(Object... os) { System.out.println(deepToString(os)); }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.awt.Point;\nimport java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport static java.lang.Math.*;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.Double.parseDouble;\nimport static java.lang.String.*;\n\npublic class Main {\n\n    static StringBuilder a = new StringBuilder();\n\n    public static void main(String[] args) throws IOException {\n//        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n//(new FileReader(\"input.in\"));\n        StringBuilder out = new StringBuilder();\n//        StringTokenizer tk;\n//        tk = new StringTokenizer(in.readLine());\n        //Scanner Reader = new Scanner(System.in);\n        Reader.init(System.in);\n        char [] a=Reader.next().toCharArray();\n        String y=Reader.next();\n        Arrays.sort(a);\n        String x=new String(a);\n        for (int i = 1; i < 10&&x.charAt(0)=='0'; i++) {\n            if(x.contains(i+\"\")){\n            x=x.replaceFirst(i+\"\",\"\");\n            x=i+x;\n            break;\n            }\n        }\n        System.out.println(x.equals(y)?\"OK\":\"WRONG_ANSWER\");\n        \n\n        \n    }\n}\n\nclass Reader {\n\n    static StringTokenizer tokenizer;\n    static BufferedReader reader;\n\n    public static void init(InputStream input) throws UnsupportedEncodingException {\n        reader = new BufferedReader(new InputStreamReader(input, \"UTF-8\"));\n        tokenizer = new StringTokenizer(\"\");\n    }\n\n    public static String next() throws IOException {\n        while (!tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n    public static String nextLine() throws IOException {\n        return reader.readLine();\n    }\n\n    public static int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    public static double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n\n    public static long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "a=raw_input()\nb=raw_input()\nif len(a)!=len(b):\n        print 'WRONG_ANSWER'\n        exit()\nif len(a)==1:\n        if a==b:\n                print 'OK'\n        else:\n                print 'WRONG_ANSWER'\n        exit()\nif b[1]=='0':\n        da,db={},{}\n        for i in range(10):\n                da[str(i)]=i\n                db[str(i)]=i\n        min=None\n        da[a[0]]+=1\n        db[b[0]]+=1\n        da[a[-1]]+=1\n        db[b[-1]]+=1\n        for i in range(1,len(a)-1):\n                if not min and b[i]!='0':\n                        min=b[i]\n                if b[i]>b[i+1]:\n                        print 'WRONG_ANSWER'\n                        exit()\n                da[a[i]]+=1\n                db[b[i]]+=1\n        if da!=db:\n                print 'WRONG_ANSWER'\n                exit()\n        if not min and b[-1]!='0':\n                min=b[-1]\n        if min and b[0]>min:\n                print 'WRONG_ANSWER'\n        else:\n                print 'OK'\nelse:\n        if b[0]=='0':\n                print 'WRONG_ANSWER'\n                exit()\n        a,b=list(a),list(b)\n        a.sort()\n        if a==b:\n                print 'OK'\n        else:\n                print 'WRONG_ANSWER'"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(new BufferedReader(new InputStreamReader(\n\t\t\t\tSystem.in)));\n\t\twhile (sc.hasNext()) {\n\t\t\tString s1 = sc.next();\n\t\t\tString s2 = sc.next();\n\t\t\tchar[] a = s1.toCharArray();\n\t\t\tArrays.sort(a);\n\t\t\tif (a[0] == '0') {\n\t\t\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\t\t\tif (a[i] != '0') {\n\t\t\t\t\t\ta[0] = a[i];\n\t\t\t\t\t\ta[i] = '0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tString s3 = new String(a);\n\t\t\tif (s2.equals(s3))\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\telse\n\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  getline(cin, a);\n  getline(cin, b);\n  sort(a.begin(), a.end());\n  int z = 0;\n  int idx = 0;\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] == '0')\n      z++;\n    else {\n      idx = i;\n      break;\n    }\n  }\n  string res;\n  if (idx != 0) {\n    res.push_back(a[idx]);\n    idx++;\n    for (int i = 0; i < z; i++) {\n      res.push_back('0');\n    }\n  }\n  for (int i = idx; i < a.size(); i++) res.push_back(a[i]);\n  if (res == b)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "a = list(input())\nb = input()\na.sort()\ncnt = a.count('0')\ni = 0\nwhile i < cnt:\n    a.remove(a[0])\n    i += 1\nif len(a) > 0:\n    a[0] += ('0' * cnt)\nelse:\n    a.append('0' * cnt)\nans = ''.join(a)\nb = str(b)\nif ans == b:\n    print('OK')\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nh = input()\ng = input()\n\nif h == '0':\n    if g == '0':\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n        \nelse:\n    c = Counter(h)\n    \n    if '0' in c:\n        c0 = c['0']\n    else:\n        c0 = 0\n    \n    del c['0']\n    \n    msitem = min(c)\n    c[msitem] -= 1 \n    s_1 = [item * c[item] for item in sorted(c)]\n    s_1 = \"\".join(s_1)\n    s = msitem + c0*'0' + s_1\n    if s == g:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n\t\t    \t\t\t\t\t  \t\t \t\t   \t \t\t \t\t"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\n\npublic class main {\n\n    public static void main(String[] args) {\n        \n        Scanner input = new Scanner(System.in);\n        List<Integer> array = new ArrayList();\n        String str = input.nextLine();\n        String answer = input.nextLine();\n        \n        for(int i = 0; i < str.length(); i++){\n            Character a = str.charAt(i);\n            array.add(Integer.parseInt(a.toString()));\n        }\n        \n        \n        \n        for(int j = 1; j < array.size(); j++){\n            int temp = array.get(j);\n            int k = j - 1;\n            while((k > -1) && (array.get(k) > temp)){\n                array.set(k+1, array.get(k));\n                k--;\n            }\n            array.set(k+1, temp);\n        }\n        \n        for(int i = 0; i < array.size(); i++){\n            if(array.get(0) != 0){\n                break;\n            }\n            else{\n                if(array.get(i) > 0){\n                    int temp = array.get(0);\n                    array.set(0, array.get(i));\n                    array.set(i, temp);\n                }\n            }\n        }\n        \n        str = \"\";\n        for(int i = 0; i < array.size(); i++){\n            str += array.get(i);\n        }\n        \n        if(str.equals(answer)){\n            System.out.println(\"OK\");\n        }\n        else{\n            System.out.println(\"WRONG_ANSWER\");\n        }\n\n    }\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char s1[11], s[11];\n  while (scanf(\"%s %s\", s, s1) != EOF) {\n    long long int i, j, k, len, cnt = 0, f = 0;\n    len = strlen(s);\n    if ((s[0] - 48 == 0) && (s1[0] - 48 == 0) && (len == strlen(s1))) {\n      f = 0;\n    } else {\n      sort(s, s + len);\n      if (s[0] - 48 == 0) {\n        int t = 1;\n        while (cnt == 0) {\n          if ((s[t] - 48) > 0) {\n            swap(s[0], s[t]);\n            cnt++;\n          } else\n            t++;\n        }\n      }\n      for (j = 0; j < len; j++) {\n        if (s[j] != s1[j]) {\n          f = 1;\n          break;\n        }\n      }\n    }\n    if (f == 0)\n      printf(\"OK\\n\");\n    else\n      printf(\"WRONG_ANSWER\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring d;\nlong long int n, x = 0, b = 0, f = 0;\nvector<long long int> s;\nbool ch(long long int z, long long int y) {\n  if (z <= y)\n    return 1;\n  else\n    return 0;\n}\nint main() {\n  cin >> n;\n  cin >> d;\n  if (n == 0 && d[0] == '0' && d.size() == 1) {\n    cout << \"OK\";\n    return 0;\n  }\n  if (d[0] == '0') {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  for (int i = 0; i < d.size(); i++) {\n    b *= 10;\n    b += (d[i] - '0');\n  }\n  while (n > 0) {\n    if (n % 10 == 0) f++;\n    s.push_back(n % 10);\n    n /= 10;\n  }\n  sort(s.begin(), s.end(), ch);\n  x = 0;\n  if (s.size() > 1) swap(s[0], s[f]);\n  for (int i = 0; i < s.size(); i++) {\n    x *= 10;\n    x += s[i];\n  }\n  if (b == x)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import sun.reflect.generics.tree.Tree;\n\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Template implements Runnable {\n\n    BufferedReader in;\n    PrintWriter out;\n    StringTokenizer tok = new StringTokenizer(\"\");\n\n    void init() throws FileNotFoundException {\n        try {\n            in = new BufferedReader(new FileReader(\"input.txt\"));\n            out = new PrintWriter(\"output.txt\");\n        } catch (Exception e) {\n            String filename = \"\";\n            if (filename.isEmpty()) {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(System.out);\n            } else {\n                in = new BufferedReader(new FileReader(filename + \".in\"));\n                out = new PrintWriter(filename + \".out\");\n            }\n        }\n    }\n\n    String readString() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            try {\n                tok = new StringTokenizer(in.readLine());\n            } catch (Exception e) {\n                return null;\n            }\n        }\n        return tok.nextToken();\n    }\n\n    int readInt() throws IOException {\n        return Integer.parseInt(readString());\n    }\n\n    int[] readIntArray(int size) throws IOException {\n        int[] res = new int[size];\n        for (int i = 0; i < size; i++) {\n            res[i] = readInt();\n        }\n        return res;\n    }\n\n    long readLong() throws IOException {\n        return Long.parseLong(readString());\n    }\n\n    double readDouble() throws IOException {\n        return Double.parseDouble(readString());\n    }\n\n\n    <T> List<T>[] createGraphList(int size) {\n        List<T>[] list = new List[size];\n        for (int i = 0; i < size; i++) {\n            list[i] = new ArrayList<>();\n        }\n        return list;\n    }\n\n    public static void main(String[] args) {\n        new Thread(null, new Template(), \"\", 1l * 200 * 1024 * 1024).start();\n    }\n\n    long timeBegin, timeEnd;\n\n    void time() {\n        timeEnd = System.currentTimeMillis();\n        System.err.println(\"Time = \" + (timeEnd - timeBegin));\n    }\n\n    long memoryTotal, memoryFree;\n\n    void memory() {\n        memoryFree = Runtime.getRuntime().freeMemory();\n        System.err.println(\"Memory = \" + ((memoryTotal - memoryFree) >> 10)\n                + \" KB\");\n    }\n\n    public void run() {\n        try {\n            timeBegin = System.currentTimeMillis();\n            memoryTotal = Runtime.getRuntime().freeMemory();\n            init();\n            solve();\n            out.close();\n            if (System.getProperty(\"ONLINE_JUDGE\") == null) {\n                time();\n                memory();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(-1);\n        }\n    }\n\n    String s(int n) {\n        if (n == 0) return \"0\";\n        int[] cnt = new int[10];\n        while (n > 0) {\n            cnt[n % 10]++;\n            n /= 10;\n        }\n        String s = \"\";\n        for (int i = 1; i < 10; i++) {\n            if (cnt[i] > 0) {\n                cnt[i]--;\n                s += i;\n                break;\n            }\n        }\n        for (int i=0;i<10;i++) {\n            while (cnt[i] >0 ) {\n                cnt[i]--;\n                s += i;\n            }\n        }\n        return s;\n    }\n\n    void solve() throws IOException {\n        int n = readInt();\n        out.println(readString().equals(s(n)) ? \"OK\" : \"WRONG_ANSWER\");\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class cf\n{\n    public static void main(String args[])throws IOException\n    {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String s=br.readLine();\n        String t=br.readLine();\n        int n=Integer.parseInt(s);\n        int m=Integer.parseInt(t);\n        if(s.length()==1 && s.charAt(0)=='0')\n        {\n            if(t.length()==1 && t.charAt(0)=='0')\n                System.out.println(\"OK\");\n            else\n                System.out.println(\"WRONG_ANSWER\");\n        }\n        else if(t.charAt(0)=='0')\n            System.out.println(\"WRONG_ANSWER\");\n        else\n        {\n        \n        int dummy=n;\n        ArrayList<Integer>a=new ArrayList<Integer>();\n        String res=\"\";\n        while(dummy>0)\n        {\n            a.add(dummy%10);\n            dummy/=10;\n        }\n        Collections.sort(a);\n        int count=0;\n        for(int i=0;i<a.size();i++)\n        {\n            if(a.get(i)!=0)\n            {\n                res+=String.valueOf(a.get(i));\n            }\n            else\n            {\n                count++;\n            }\n        }\n        String res1=\"\";\n        res1=res.substring(0,1);\n        for(int i=1;i<=count;i++)\n        {\n            res1+=\"0\";\n        }\n        res1+=res.substring(1);\n        if(Integer.parseInt(res1)==m)\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n    }       \n}   "
        },
        {
            "language": 3,
            "solution": "def countzero(inpt):\n\trt = 0\n\tfor i in range(len(inpt)):\n\t\tif inpt[i] == '0':\n\t\t\trt += 1\n\treturn rt\n\na = input()\nb = input()\nsted = ''.join(sorted(a))\nif countzero(sted) < len(sted):\n\top = ''.join([sted[countzero(sted)], '0'*countzero(sted), sted[1+countzero(sted):len(sted)]])\nelse:\n\top = sted\nprint(\"OK\" if b == op else \"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, ans;\n  cin >> s >> ans;\n  sort(s.begin(), s.end());\n  if (s[0] == '0' && s.size() >= 2) {\n    swap(s[0], s[1]);\n  }\n  if (s == ans)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nn = list(n)\n\nn.sort()\n\nif n[0] == '0':\n    for i in range(len(n)):\n        if n[i] != '0':\n            n[0], n[i] = n[i], n[0]\n            break\n\nn = ''.join(n)\nm = input()\n\nif n == m:\n    print('OK')\n\nelse:\n    print('WRONG_ANSWER')\n\n\n"
        },
        {
            "language": 1,
            "solution": "d=raw_input()\nx=raw_input()\nm=''\nres=''\nresult=''\nfor i in range(0,len(d)):\n    m=m+\" \"+d[i:i+1]\n   \nm=m[1:len(m)]\nm=m.split()\nk=0    \nfor i2 in range(0,len(m)):\n    \n    m[i2]=int(m[i2])\n    if(m[i2]==0):\n        k=k+1   \n    \n    \nm=sorted(m)\nif(len(m)==1)&(m[0]==0):\n    k=9\n    res=0\nfor i in range(0,len(m)):\n    m[i]=str(m[i])\nif(k==1):\n    res=m[1]+m[0]\n    for i in range(2,len(m)):\n        res=res+m[i]\n        \nif(k==2):\n    res=m[2]+m[1]+m[0]\n    for i in range(3,len(m)):\n        res=res+m[i]\nif(k==3):\n    res=m[3]+m[2]+m[1]+m[0]\n    for i in range(4,len(m)):\n        res=res+m[i]\nif(k==4):\n    res=m[4]+m[3]+m[2]+m[1]+m[0]\n    for i in range(5,len(m)):\n        res=res+m[i]\nif(k==5):\n    res=m[5]+m[4]+m[3]+m[2]+m[1]+m[0]\n    for i in range(6,len(m)):\n        res=res+m[i]\nif(k==6):\n    res=m[6]+m[5]+m[4]+m[3]+m[2]+m[1]+m[0]\n    for i in range(7,len(m)):\n        res=res+m[i]\nif(k==7):\n    res=m[7]+m[6]+m[5]+m[4]+m[3]+m[2]+m[1]+m[0]\n    for i in range(8,len(m)):\n        res=res+m[i]\nif(k==8):\n    res=res[8]+m[7]+m[6]+m[5]+m[4]+m[3]+m[2]+m[1]+m[0]\n    for i in range(9,len(m)):\n        res=res+m[i]\nif(k==0):\n    for i in range(0,len(m)):\n        res=res+m[i]\n\nif(str(res)==str(x)):\n    print(\"OK\")\nif(str(res)!=str(x)):\n    print(\"WRONG_ANSWER\")\n        \n        \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[256];\nint main(int argc, char* argv[]) {\n  string a, b;\n  cin >> a >> b;\n  if (a.size() != b.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  if (a == \"0\") {\n    if (b == \"0\") {\n      cout << \"OK\";\n    } else {\n      cout << \"WRONG_ANSWER\";\n    }\n    return 0;\n  }\n  for (int i = 0; i < a.size(); i++) {\n    cnt[a[i] - '0']++;\n  }\n  string ns;\n  int p = 1;\n  while (cnt[p] == 0) p++;\n  ns += p + '0';\n  cnt[p]--;\n  p = 0;\n  for (int i = 0; i < a.size() - 1; i++) {\n    while (cnt[p] == 0) p++;\n    ns += p + '0';\n    cnt[p]--;\n  }\n  if (ns == b) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar A[12], B[12];\nstring s, t, ans;\nint n, freq[10];\nvoid fact() {\n  for (int i = 1; i <= 9; i++)\n    if (freq[i]) {\n      freq[i]--;\n      ans += (char)(i + '0');\n      break;\n    }\n  for (int i = 0; i < freq[0]; i++) ans += '0';\n  for (int i = 1; i <= 9; i++)\n    for (int j = 0; j < freq[i]; j++) ans += (char)(i + '0');\n}\nint main() {\n  scanf(\"%s%s\", &A, &B);\n  s = A;\n  t = B;\n  n = s.length();\n  for (int i = 0; i < n; i++) freq[s[i] - '0']++;\n  fact();\n  if (ans == t)\n    printf(\"OK\");\n  else\n    printf(\"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s1, s2;\nint main() {\n  cin >> s1;\n  cin >> s2;\n  sort(s1.begin(), s1.end());\n  int i = 0;\n  while (i < s1.size() && s1[i] == '0') ++i;\n  if (i < s1.size()) swap(s1[i], s1[0]);\n  bool b = true;\n  if (s1.size() != s2.size())\n    b = false;\n  else {\n    for (int i = 0; i < s1.size(); ++i) {\n      if (s1[i] != s2[i]) {\n        b = false;\n        break;\n      }\n    }\n  }\n  if (b)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar A[100000], B[100000];\nint main() {\n  scanf(\"%s\", A);\n  scanf(\"%s\", B);\n  sort(A, A + strlen(A));\n  if (A[0] == '0')\n    for (int i = 0; i < (int)strlen(A); i++) {\n      if (A[i] != '0') {\n        int n = A[i];\n        A[i] = A[0], A[0] = n;\n        ;\n        break;\n      }\n    }\n  if (strcmp(A, B) == 0)\n    printf(\"OK\");\n  else\n    printf(\"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class B12 {\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tString mm = br.readLine();\n\t\tint m = Integer.parseInt(mm);\n\t\tint len = Integer.toString(n).length();\n\t\tint[] arr = new int[len];\n\t\tfor(int i=0;i<len;i++)\n\t\t\tarr[i] = Integer.toString(n).charAt(i)-'0';\n\t\tArrays.sort(arr);\n\t\t\n\t\tif(n == 0){\n\t\t\tif(mm.equals(\"0\"))\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\telse System.out.println(\"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t}\n\t\tif(arr[0] == 0){\n\t\t\tint pos = -1;\n\t\t\tfor(int i=1;i<n;i++){\n\t\t\t\tif(arr[i] != 0){\n\t\t\t\t\tpos=  i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint tmp = arr[pos];\n\t\t\tarr[pos]=arr[0];\n\t\t\tarr[0]=tmp;\n\t\t}\n\t\t\n\t\tString r = \"\";\n\t\tfor(int i=0;i<len;i++)\n\t\t\tr = r + arr[i];\n\t\tif(r.equals(mm))\n\t\t\tSystem.out.println(\"OK\");\n\t\telse System.out.println(\"WRONG_ANSWER\");\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = sorted(list(input()))\nv = list(input())\nzeros_cnt, flag = 0, 0\nans = []\nfor i in range(len(n)):\n    if n[i] == '0':\n        zeros_cnt += 1\n    else:\n        ans.append(n[i])\n        if flag == 0:\n            for k in range(zeros_cnt):\n                ans.append('0')\n            flag = 1\nif len(set(n) & set(v)) != len(set(n)):\n    print('WRONG_ANSWER')\n    exit()\nif len(ans) == 0 and len(n) == len(v):\n    print('OK')\n    exit()\nprint('OK' if v == ans else 'WRONG_ANSWER')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class demo{\n    public static void main(String[] args)throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String n = br.readLine();\n        String m = br.readLine();\n        if(isOK(n,m))System.out.println(\"OK\");\n        else System.out.println(\"WRONG_ANSWER\");\n    }\n    public static boolean isOK(String s1,String s2){\n        if(s1.length() != s2.length())return false;\n        if(s1.equals(\"0\") && isEqual(s1,s2))return true;\n        int[] temp = new int[s1.length()];\n        for(int i = 0; i < temp.length; ++i){\n            temp[i]=Character.getNumericValue(s1.charAt(i));\n        }\n        Arrays.sort(temp);\n        String result = \"\";\n        int not_to_add = 0;\n        for(int i = 0; i < temp.length; ++i){\n            if(temp[i] != 0){\n                result += Integer.toString(temp[i]);\n                not_to_add = i;\n                break;\n            }\n        }\n        for(int i = 0; i < temp.length; ++i){\n            if(i != not_to_add){\n                result += Integer.toString(temp[i]);\n            }\n        }\n        //System.out.println(result);\n        if(isEqual(result,s2))return true;\n        else return false;\n    }\n    public static boolean isEqual(String s1,String s2){\n        if(s1.equals(s2))return true;\n        else return false;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[20], b[20];\nint main() {\n  scanf(\"%s%s\", a, b);\n  int len = strlen(a);\n  sort(a, a + len);\n  int pos = 0;\n  while (a[pos] == '0') pos++;\n  if (pos < len) swap(a[pos], a[0]);\n  puts(strcmp(a, b) == 0 ? \"OK\" : \"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10];\nint main() {\n  char s[20], t[20];\n  cin >> s >> t;\n  for (int i = 0; i < strlen(s); i++) a[s[i] - '0']++;\n  if (strlen(s) > 1) {\n    int cur = 0;\n    if (a[0] > 0) {\n      for (int i = 1; i <= 9; i++)\n        if (a[i] > 0) {\n          s[cur++] = i + '0';\n          a[i]--;\n          break;\n        }\n    }\n    for (int i = 0; i <= 9; i++)\n      while (a[i] > 0) {\n        s[cur++] = i + '0';\n        a[i]--;\n      }\n  }\n  int ans = 1;\n  if (strlen(s) != strlen(t))\n    ans = 0;\n  else {\n    for (int i = 0; i < strlen(s); i++) ans = ans && s[i] == t[i];\n  }\n  if (ans)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "I=raw_input\nn=I()\nm=I()\nn=sorted(list(n))\nfor i in range(len(n)):\n    if n[i] != '0':\n        break\nif n[i] != '0':\n    n[0],n[i]=n[i],n[0]\nprint ['OK', 'WRONG_ANSWER'][n != list(m)]"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class CorrectSolution{\n    public static void main(String [] args){\n        Scanner input = new Scanner(System.in);\n        String masuk = input.nextLine();\n        String test = input.nextLine();\n        int[] arr = new int[masuk.length()];\n        for(int i = 0; i< masuk.length(); i++){\n            arr[i] = Integer.parseInt(masuk.substring(i,i+1));\n        }\n        mergeSort(arr);\n        int awal = 0;\n        boolean param = true;\n        while(param && awal<arr.length){\n            if(arr[awal] == 0){\n                awal++;\n            }\n            else param = false;\n        }\n        \n        if(awal !=0 && awal<arr.length){\n            arr[0] = arr[awal];\n            arr[awal] = 0;\n        }\n        String ans = \"\";\n        for(int i = 0; i< masuk.length();i++){\n            ans = ans+arr[i];\n        }\n        if(ans.equals(test)) System.out.println(\"OK\");\n        else System.out.println(\"WRONG_ANSWER\");\n    }\n    \n    public static int[] mergeSort(int[] arr){\n        if(arr.length == 1) return arr;\n        \n        int a = arr.length/2;\n        int [] satu = new int[a];\n        int [] dua = new int[arr.length-a];\n        for(int i = 0; i<a; i++){\n            satu[i] = arr[i];\n        }\n        for(int i = a; i<arr.length; i++){\n            dua[i-a] = arr[i];\n        }\n        mergeSort(satu);\n        mergeSort(dua);\n        \n        a = 0; int b = 0;\n        for(int i = 0; i<arr.length;i++){\n            if(a<satu.length && b<dua.length){\n                if(satu[a] <= dua[b]){\n                    arr[i] =satu[a];\n                    a++;\n                }\n                else{\n                    arr[i] = dua[b];\n                    b++;\n                }\n            }\n            else if(a<satu.length){\n                arr[i] = satu[a];\n                a++;\n            }\n            else{\n                arr[i] = dua[b];\n                b++;\n            }\n        }\n        return arr;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t = list(input())\n\nt.sort()\n\nt = ''.join(t)\n\nk = t.rfind('0') + 1\n\nif k > 0 and len(t) > 1: t = t[k] + t[:k] + t[k + 1:]\n\nprint('OK' if t == input() else 'WRONG_ANSWER')\n\n\n\n# Made By Mostafa_Khaled"
        },
        {
            "language": 3,
            "solution": "def R(): return map(int, input().split())\ndef I(): return int(input())\ndef S(): return str(input())\n\ndef L(): return list(R())\n\nfrom collections import Counter \n\nimport math\nimport sys\n\ns=S()\ns=sorted(s)\nans2=S()\n\n\ncnt=Counter(s)\n\nz=cnt['0']\ns=''.join(s)\n\nprint(['WRONG_ANSWER','OK'][s[z:z+1]+'0'*z+s[z+1:]==ans2])\n      \n      \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> v;\nint mark[10];\nint main() {\n  string a, b;\n  cin >> a >> b;\n  for (int i = 0; i < a.size(); i++) mark[a[i] - '0']++;\n  if (a.size() != b.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  for (int i = 1; i < 10; i++)\n    if (mark[i]) {\n      v.push_back(i);\n      mark[i]--;\n      break;\n    }\n  for (int i = 0; i < 10; i++) {\n    while (mark[i]) v.push_back(i), mark[i]--;\n  }\n  for (int i = 0; i < a.size(); i++)\n    if (v[i] != b[i] - '0') {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  cout << \"OK\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000;\nchar digits[N];\nchar ans[N];\nchar res[N];\nint main() {\n  scanf(\"%s\", digits);\n  scanf(\"%s\", ans);\n  int dn = strlen(digits);\n  sort(digits, digits + dn);\n  int nonz = -1000;\n  for (int i = 0; i < dn; i++) {\n    if (digits[i] != '0') {\n      nonz = i;\n      break;\n    }\n  }\n  res[0] = digits[nonz];\n  for (int i = 0; i < nonz; i++) res[i + 1] = '0';\n  for (int i = nonz + 1; i < dn; i++) res[i] = digits[i];\n  if (string(res) == string(ans))\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  a.clear();\n  b.clear();\n  cin >> a >> b;\n  string str;\n  str.clear();\n  string aa = \"\";\n  int index = 0;\n  char it = a[0];\n  for (int i = 0; i < a.size(); i++)\n    if (a[i] <= it && a[i] != '0') {\n      index = i;\n      it = a[i];\n    }\n  for (int i = 0; i < a.size(); i++) {\n    if (i == index) continue;\n    aa += a[i];\n  }\n  sort(aa.begin(), aa.end());\n  str = it + aa;\n  if (str == b)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main{\n    public static void main(String[]args){\n        Scanner input = new Scanner(System.in);\n        String s = input.next();\n        String s1 = input.next();\n        if((s.charAt(0) == '0')&&(s1.charAt(0) == '0')\n                               &&(s.length() == 1)&&(s1.length() == 1)){\n            System.out.println(\"OK\");\n            System.exit(0);\n        }\n        else if(s1.charAt(0) == '0'){\n            System.out.println(\"WRONG_ANSWER\");\n            System.exit(0);\n        }\n\n        char[] a = s.toCharArray();\n        Arrays.sort(a);\n        if((a[0] == '0')&&(a.length > 1)){\n            char t = a[0];\n            a[0] = a[1];\n            a[1] = t;\n        }\n\n        s = new String(a);\n        if(s.equals(s1))\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n\n\ndef solve():\n    ok = \"OK\"\n    wrong = \"WRONG_ANSWER\"\n    n = input()\n    m = input()\n    if len(n) != len(m): return wrong\n    if len(n) == 1:\n        if n == m: return ok\n        return wrong\n    res = list()\n    smallestfirst = 10\n    for c in n:\n        if int(c) < smallestfirst and int(c) > 0: smallestfirst = int(c)\n    if smallestfirst == 10: return wrong\n    res.append(smallestfirst)\n    for c in n:\n        if int(c) == 0:\n            res.append(0)\n    n = list(n)\n    rem = list()\n    n.remove(str(smallestfirst))\n    for c in n:\n        if int(c) != 0:\n            rem.append(int(c))\n    rem.sort()\n    for i in rem:\n        res.append(i)\n    correct = ''.join(map(str,res))\n    if correct == m: return ok\n    return wrong\n\n\ndef read(mode=2):\n    inputs = input().strip()\n    if mode == 0: return inputs  # String\n    if mode == 1: return inputs.split()  # List of strings\n    if mode == 2: return list(map(int, inputs.split()))  # List of integers\n\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    if isinstance(s, tuple): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\n\ndef run():\n    if sys.hexversion == 50594544: sys.stdin = open(\"test.txt\")\n    res = solve()\n    write(res)\n\nrun()"
        },
        {
            "language": 1,
            "solution": "n=input()\nm=raw_input()\nk=int(m)\na=map(int,str(n))\nb=sorted(a)\ncount=0\nfor i in range(len(b)):\n    if (b[i]==0):\n        count=count+1\n    else:\n        break\nif(len(b)>1):   \n    temp=b[0]\n    b[0]=b[count]\n    b[count]=temp\n\nnum = int(''.join(map(str,b)))\n\nif ((num==k) & (len(b)==len(m))):\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\""
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\n\npublic class P12B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        char n[] = sc.next().toCharArray();\n        String m = sc.next();\n        Arrays.sort(n);\n        //System.out.println(n);\n        for (int i=0; i<n.length; i++){\n            if (n[i]!='0'){\n                char t = n[i];\n                n[i] = n[0];\n                n[0]=t;\n                break;\n            }\n        }\n        System.out.println(new String(n).equals(m) ? \"OK\" : \"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char num[15];\n  string a, ans, st = \"\";\n  int k = 0;\n  cin >> a >> ans;\n  for (int i = 0; i < a.size(); i++) num[i] = a[i];\n  sort(num, num + a.size());\n  for (int i = 0; i < a.size(); i++)\n    if (num[i] != '0') {\n      k = i;\n      break;\n    }\n  st += num[k];\n  for (int i = 0; i < k; i++) st += '0';\n  for (int i = k + 1; i < a.size(); i++) st += num[i];\n  if (st == ans)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, t, ans;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  bool p = false;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0') {\n      ans += '0';\n    } else {\n      if (p) {\n        ans += s[i];\n      } else {\n        p = true;\n        ans = s[i] + ans;\n      }\n    }\n  }\n  cout << (ans == t ? \"OK\" : \"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[10001], st[10001], t;\nint i, j, k, ans, n, m, tf;\nbool cmp(char a, char b) { return a < b; }\nint main() {\n  cin >> s;\n  n = strlen(s);\n  cin >> st;\n  m = strlen(st);\n  if (n != m) {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  if (s[0] == '0' && st[0] == '0') {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  sort(s, s + n, cmp);\n  i = 0;\n  while (s[i] == '0') {\n    i++;\n  }\n  t = s[i];\n  s[i] = s[0];\n  s[0] = t;\n  if (strcmp(s, st) == 0)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "if __name__ == '__main__':\n    n=raw_input()\n    m=raw_input()\n    l=len(n)\n    n=list(n)\n    n.sort()\n    i=0\n    while i<l and n[i]=='0':\n        i+=1\n    if i<l and i!=0:\n        n[0]=n[i]\n        n[i]='0'\n    n=''.join(n)\n    if n==m:\n        print \"OK\"\n    else:\n        print \"WRONG_ANSWER\"\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class B12 {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n\n        int arr[] = new int[11];\n        int min = 10;\n\n        while (n > 0) {\n            int temp = n % 10;\n            n /= 10;\n            if (temp > 0 && temp < min) {\n                min = temp;\n            }\n            arr[temp]++;\n        }\n\n        long result = min == 10 ? 0 : min;\n        arr[min]--;\n        for (int i = 0; i < 10; ++i) {\n            for (int j = 0; j < arr[i]; ++j) {\n                result *= 10;\n                result += i;\n            }\n        }\n        System.out.println(in.next().equals(result+\"\") ? \"OK\" : \"WRONG_ANSWER\");\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "i = list(str(input()))\nb = str(input())\n\ni.sort()\n\nif len(i) > 1 and i[0] == '0':\n    i[0], i[1] = i[1], i[0]\n    \na = ''.join(i)\nif a == b:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 3,
            "solution": "n = list(input())\nm = input()\n\nif len(n) > 1:\n\n\tn.sort()\n\ttemp =''\n\ti = 0\n\n\twhile n[i] == '0':\n\t\ttemp += n[i]\n\t\ti += 1\n\n\tans = n[i]+temp\n\tans += ''.join(n[i+1:])\nelse:\n\tans = str(n[0])\n\n#print(ans)\nif ans == m :\n\tprint(\"OK\")\nelse:\n\tprint(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long power(long x, long n) {\n  if (n == 0) return 1;\n  if (n == 1) return x;\n  long n2 = n / 2;\n  long long po = power(x, n2);\n  if (n % 2) return po * po * x;\n  return po * po;\n}\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  a %= b;\n  return gcd(b, a);\n}\nclass BCorrectSolution {\n public:\n  void solve(std::istream &cin, std::ostream &cout) {\n    string s, second;\n    int SS;\n    cin >> s >> second;\n    int l = s.length(), i, f = -1;\n    sort(s.begin(), s.end());\n    for (i = 0; i < l; i++) {\n      if (s[i] > '0') {\n        f = i;\n        break;\n      }\n    }\n    int ans = 0;\n    if (f >= 0) ans = s[f] - '0';\n    for (i = 0; i < l; i++) {\n      if (i != f) {\n        ans = ans * 10 + s[i] - '0';\n      }\n    }\n    l = second.length();\n    SS = 0;\n    for (i = 0; i < l; i++) SS *= 10, SS += (second[i] - '0');\n    if (second.length() == s.length() && ans == SS)\n      cout << \"OK\\n\";\n    else\n      cout << \"WRONG_ANSWER\\n\";\n  }\n};\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(0);\n  BCorrectSolution solver;\n  std::istream &in(std::cin);\n  std::ostream &out(std::cout);\n  solver.solve(in, out);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar[] cs = scan.nextLine().toCharArray();\n\t\tArrays.sort(cs);\n\t\tint i;\n\t\tfor(i = 0; i < cs.length&&cs[i]==48;i++);\n\t\tif(i!=0&&i<cs.length){\n\t\t\tcs[0]=cs[i];\n\t\t\tcs[i]=48;\n\t\t}\n\t\tSystem.out.println(scan.nextLine().equals(new String(cs))?\"OK\":\"WRONG_ANSWER\");\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "original = input()\nperm = input()\n\nif ''.join(sorted(original)) == ''.join(sorted(perm)):\n\to = sorted(original)\n\tif o[0] == '0':\n\t\tfor i in range(0,len(o)):\n\t\t\tif o[i] != '0':\n\t\t\t\to[0] = o[i]\n\t\t\t\to[i] = '0'\n\t\t\t\tbreak\n\tfor i in range(0,len(o)):\n\t\tif o[i] != perm[i]:\n\t\t\tprint (\"WRONG_ANSWER\")\n\t\t\texit()\n\tprint (\"OK\")\nelse:\n\tprint (\"WRONG_ANSWER\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  char s[100], t[100], ch;\n  int i, j, c0 = 0;\n  scanf(\"%s %s\", &t, &s);\n  if (s[0] == '0' && t[0] == '0' && strlen(t) == 1 && strlen(s) == 1) {\n    printf(\"OK\");\n    return 0;\n  }\n  if (strlen(s) != strlen(t)) {\n    printf(\"WRONG_ANSWER\");\n    return 0;\n  }\n  for (i = 0; i < strlen(t); i++) {\n    for (j = 0; j < strlen(t) - i - 1; j++) {\n      if (t[j] > t[j + 1]) {\n        ch = t[j];\n        t[j] = t[j + 1];\n        t[j + 1] = ch;\n      }\n    }\n    if (t[strlen(t) - 1 - i] == '0') c0++;\n  }\n  t[0] = t[c0];\n  for (i = 1; i <= c0; i++) t[i] = '0';\n  if (strcmp(s, t) == 0)\n    printf(\"OK\");\n  else\n    printf(\"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 3,
            "solution": "import collections\nnum1=input()\nnum2=input()\ninp=[int(i) for i in num1]\noutp=[int(i) for i in num2]\nnumbers=[0]*10#\u043d\u0443\u043b\u0435\u0432\u0430\u044f - \u0447\u0438\u0441\u043b\u043e \u043d\u0443\u043b\u0435\u0439, \u043f\u0435\u0440\u0432\u0430\u044f - \u0447\u0438\u0441\u043b\u043e \u0435\u0434\u0438\u043d\u0438\u0446, \u0432\u0442\u043e\u0440\u0430\u044f - \u0447\u0438\u0441\u043b\u043e \u0434\u0432\u043e\u0435\u043a \u0438 \u0442 \u0434\nnumbers_out=[0]*10\nunique_nums=0\nfor i in range(len(inp)):\n    numbers[inp[i]]+=1\n    if numbers[inp[i]]==1:\n        unique_nums+=1\n    if i<len(outp):\n        numbers_out[outp[i]]+=1\nans=True\nif collections.Counter(numbers)!=collections.Counter(numbers_out):\n    ans=False\nif len(inp)!=len(outp):\n    ans=False\nhave_been=set()\ndef min_set(a):\n    a1=a.copy()\n    if 0 in a1:\n        a1.remove(0)\n    if len(a1)>0:\n        return min(a1)\n    else:\n        return -1\nfor j in range(len(outp)):\n    i=outp[j]\n    if numbers[i]==0:\n        ans=False\n    if i>0 and i<min_set(have_been):\n        ans=False\n    if len(have_been)>0 and i!=0:\n        if i<max(have_been):\n            ans=False\n    if i==0 and len(have_been)!=1 and  numbers[0]!=len(inp):\n        ans=False\n    if len(have_been)==1:\n        g=have_been.pop()\n        have_been.add(g)\n        if numbers[g]!=0 and i!=g:\n            ans=False\n        if i==0 and numbers[g]==0 and j!=1:\n            ans=False\n    have_been.add(i)\n    numbers[i]-=1\n    \nif ans:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring n, m;\nint a[18], b[18], miao[18], sign, en[18];\nint main() {\n  cin >> n >> m;\n  int len1 = n.size(), len2 = m.size();\n  if (len1 != len2)\n    printf(\"WRONG_ANSWER\\n\");\n  else {\n    bool flag = 0;\n    for (int i = 0; i < len1; i++) {\n      a[i] = n[i] - 48;\n      miao[i] = b[i] = m[i] - 48;\n    }\n    sort(a, a + len1);\n    sort(miao, miao + len2);\n    for (int i = 0; i < len1; i++) {\n      if (a[i] != miao[i]) {\n        flag = 1;\n        break;\n      }\n    }\n    if (flag)\n      printf(\"WRONG_ANSWER\\n\");\n    else {\n      for (int i = 0; i < len1; i++) {\n        if (a[i]) {\n          sign = i;\n          break;\n        }\n      }\n      en[0] = a[sign];\n      int ga = 1;\n      for (int i = 0; i < len1; i++) {\n        if (i != sign) en[ga++] = a[i];\n      }\n      for (int i = 0; i < len1; i++) {\n        if (en[i] != b[i]) {\n          flag = 1;\n          break;\n        }\n      }\n      if (flag)\n        printf(\"WRONG_ANSWER\\n\");\n      else\n        printf(\"OK\\n\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def Ordenar(N):\n    Ordenado = ''\n    A = [0]*10\n    for k in N:\n        for i in range (0,10):\n            if int(k)==i:\n                A[i] += 1\n    Aux = 0\n    for k in range (1,10):\n        if A[k]!=0:\n            Aux = k\n            A[k] = A[k]-1\n            break\n    Ordenado = str(Aux)\n    for j in range (A[0]):\n        if A[0]!=0:\n            Ordenado += str(0)\n    for k in range (1,10):\n        if A[k]!=0:\n            for i in range(A[k]):\n                Ordenado += str(k)\n    return Ordenado\nA = input()\nB = input()\nOrd = Ordenar(A)\nif A=='0':\n    if B=='0':\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\nelse:\n    if Ord == B:\n        print('OK')\n    else:\n        print('WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.math.BigInteger;\nimport java.util.Arrays;\n\npublic class Correct{\n    \n    static class FastScanner{\n        BufferedReader s;\n        StringTokenizer st;\n        \n        \n        public FastScanner(){\n            st = new StringTokenizer(\"\");\n            s = new BufferedReader(new InputStreamReader(System.in));\n            \n        }\n        \n        public FastScanner(File f) throws FileNotFoundException{\n            st = new StringTokenizer(\"\");\n            s = new BufferedReader (new FileReader(f));\n        }\n        \n        public int nextInt() throws IOException{\n            if(st.hasMoreTokens())\n                return Integer.parseInt(st.nextToken());\n            else{\n                st = new StringTokenizer(s.readLine());\n                return nextInt();\n            }\n        }\n        \n        public double nextDouble() throws IOException{\n            if(st.hasMoreTokens())\n                return Double.parseDouble(st.nextToken());\n            else{\n                st = new StringTokenizer(s.readLine());\n                return nextDouble();\n            }\n        }\n        \n        public long nextLong() throws IOException{\n            if(st.hasMoreTokens())\n                return Long.parseLong(st.nextToken());\n            else{\n                st = new StringTokenizer(s.readLine());\n                return nextLong();\n            }\n        }\n        \n        public String nextString() throws IOException{\n            if(st.hasMoreTokens())\n                return st.nextToken();\n            else{\n                st = new StringTokenizer(s.readLine());\n                return nextString();\n            }\n            \n        }\n        \n        public String readLine() throws IOException{\n            return s.readLine();\n        }\n        \n        public void close() throws IOException{\n            s.close();\n        }\n        \n    }      //Fastscanner class end\n    \n   static FastScanner in=new FastScanner();\n   static PrintWriter ww=new PrintWriter(new OutputStreamWriter(System.out));\n   public static void main(String args[])throws IOException\n   {\n   //Main ob=new Main();\n   Correct ob=new Correct();\n   ob.solve();\n   ww.close();\n   }\n   public void solve()throws IOException\n   {\n    String st=in.nextString();\n    String st1=in.nextString(); \n    char[] a=st.toCharArray();\n    char[] b=st1.toCharArray();\n    int i;\n    if((a.length==1)&&(b.length==1)&&(a[0]=='0')&&(b[0]=='0'))\n      {\n        System.out.println(\"OK\");\n        return;\n      }\n     if((b[0]=='0')||(a.length!=b.length))  \n      {\n        System.out.println(\"WRONG_ANSWER\");\n         return;\n     }   \n        \n    Arrays.sort(a);\n    \n    for(i=0;i<a.length;i++)\n    {\n      if(a[i]!='0')\n      {\n        char c=a[0];\n        a[0]=a[i];\n        a[i]=c;\n        break;\n      }\n    }\n    int m=Math.min(a.length,b.length);\n    for(i=0;i<m;i++)\n    {\n      if(a[i]!=b[i])\n      {\n        System.out.println(\"WRONG_ANSWER\");\n        return;\n      }\n    }\n    System.out.println(\"OK\");   \n        \n                    \n  }\n  }"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  if (a.size() != 1)\n    if (a[0] == '0') swap(a[0], a[1]);\n  if (a == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "s=input()\nanswer=input()\nr=list(s)\nr.sort()\ns=''.join(r)\nr=s.rfind('0')\nif r!=-1 and len(s)>r+1:\n    s=s[r+1]+s[:r+1]+s[r+2:]\nif s==answer:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  vector<int> v1, goal;\n  string s1;\n  string n;\n  cin >> n;\n  cin >> s1;\n  for (int i = 0; i < s1.size(); ++i) {\n    goal.push_back(s1[i] - '0');\n  }\n  for (int i = 0; i < n.size(); ++i) {\n    v1.push_back(n[i] - '0');\n  }\n  sort(v1.begin(), v1.end());\n  vector<int> res;\n  int mn = 1e9;\n  do {\n    int t = 0;\n    if (v1[0] == 0 && v1.size() != 1) continue;\n    for (int i = 0; i < v1.size(); ++i) {\n      t += v1[i];\n    }\n    if (t < mn) {\n      mn = t;\n      res = v1;\n    }\n  } while (next_permutation(v1.begin(), v1.end()));\n  if (res == goal)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input().strip()\nm = input().strip()\nn = ''.join( sorted(n) )\nif n[0] == '0':\n    for i in range(len(n)):\n        if n[i] != '0':\n            break\n    n = n[i] + n[:i] + n[i+1:]\nprint('OK' if n == m else 'WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\n/**\n * Created by Jack on 06.03.2019.\n */\npublic class Codeforces {\n    public static void main(String[] args) {\n        Scanner cin = new Scanner(System.in);\n        String temp = cin.next();\n        String temp1 = cin.next();\n        int cnt[] = new int [10];\n        int cnt1[] = new int[10];\n        for(int i = 0 ; i < temp.length() ;i ++){\n            cnt[temp.charAt(i) - 48] ++;\n        }\n        String ttt = \"\";\n        for(int i = 0 ; i < cnt[1]; i ++){\n            ttt += \"1\";\n        }\n        for(int i = 0 ; i < cnt[0]; i ++)\n            ttt += \"0\";\n        for(int i = 2 ; i <=9 ; i++){\n            for(int j = 0 ; j < cnt[i] ;j ++){\n                ttt += i;\n            }\n        }\n        if(ttt.equals(temp1) && ttt.charAt(0) =='0' && ttt.length() == 1){\n            System.out.println(\"OK\");\n        }\n        else if(ttt.equals(temp1) && ttt.charAt(0) != '0'){\n            System.out.println(\"OK\");\n        }\n        else\n            System.out.println(\"WRONG_ANSWER\");\n\n\n\n\n\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport collections\nimport heapq\nn=list(input())\nm=list(input())\nn.sort()\nk1=-1\nfor i in range(len(n)):\n    if(n[i]!='0'):\n        k1=i\n        break\nif(k1==-1):\n    if(m==n):\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\nelse:\n    l1=[n[k1]]\n    n[k1]='a'\n    for i in range(len(n)):\n        if(n[i]!='a'):\n            l1.append(n[i])\n    if(m==l1):\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class correctsolution {\n  public static void main(String[] args) {\n\n    Scanner scan = new Scanner(System.in);\n\n    String a = scan.nextLine();\n    String b = scan.nextLine();\n\n    String [] aa = a.split(\"\");\n    String [] bb = b.split(\"\");\n    int[] arrayA = new int[aa.length];\n    int[] arrayB = new int[bb.length];\n\n    if (aa.length != bb.length) {\n      System.out.println(\"WRONG_ANSWER\");\n      System.exit(0);\n    }\n\n\n    for (int i = 0; i < arrayA.length; i++) {\n      arrayA[i] = Integer.parseInt(aa[i]);\n    }\n\n    for (int i = 0; i < arrayB.length; i++) {\n      arrayB[i] = Integer.parseInt(bb[i]);\n    }\n\n    if (aa.length == 1 && bb.length == 1) {\n      if (arrayA[0] == arrayB[0]) {\n        System.out.println(\"OK\");\n        System.exit(0);\n      } else {\n        System.out.println(\"WRONG_ANSWER\");\n        System.exit(0);\n      }\n    }\n\n  Arrays.sort(arrayA);\n    int count = 0;\n      for (int i = 0; i < arrayA.length; i++) {\n          if (arrayA[i] == 0) {\n              count++;\n            }\n          }\n\n      for (int i = 0; i < count; i++) {\n        int countt = count;\n        if (i == 0) {\n          arrayA[i] = arrayA[i + countt];\n          arrayA[i+countt] = 0;\n          countt++;\n          continue;\n        }\n        arrayA[i] = arrayA[i + countt -1];\n        countt++;\n        arrayA[i + count -1] = 0;\n      }\n\n  //    for (int i = 0; i < arrayA.length; i++) {\n    //    System.out.print(arrayA[i]);\n    //  }\n\n      for (int i = 0; i < arrayA.length; i++) {\n        if (arrayA[i] == arrayB[i]) {\n          continue;\n        } else {\n          System.out.println(\"WRONG_ANSWER\");\n          System.exit(0);\n        }\n      }\n      System.out.println(\"OK\");\n\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char a[15], b[15];\n  while (cin >> a >> b) {\n    int len_a = strlen(a);\n    sort(a, a + len_a);\n    int k = 0;\n    for (int i = 0; i < len_a; i++) {\n      if (a[i] != '0') {\n        k = i;\n        break;\n      }\n    }\n    char tmp;\n    tmp = a[0];\n    a[0] = a[k];\n    a[k] = tmp;\n    if (strcmp(a, b) == 0)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class P012B {\n\n    public static void main(String[] args) {\n        Scanner inScanner = new Scanner(System.in);\n        String initial = inScanner.next();\n        String answer = inScanner.next();\n        char[] chars = initial.toCharArray();\n        Arrays.sort(chars);\n        int index = 0;\n        while (index < chars.length && chars[index] == '0')\n            index++;\n        if (index > 0 && index < chars.length) {\n            chars[0] = chars[index];\n            chars[index] = '0';\n        }\n        if (answer.equals(new String(chars)))\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar n[13], m[13];\nint a[13], b[13];\nint bb[13];\nint main() {\n  int i, j;\n  scanf(\"%s\", n);\n  scanf(\"%s\", m);\n  int flag = 1;\n  if (n[0] == '0' && m[0] == '0' && strlen(n) == strlen(m) && strlen(n) == 1)\n    flag = 1;\n  else if (strlen(n) != strlen(m))\n    flag = 0;\n  else if (n[0] == '0' || m[0] == '0')\n    flag = 0;\n  else {\n    for (i = 0; i < strlen(m); i++) b[i] = m[i] - '0';\n    sort(b, b + i);\n    for (i = 0; i < strlen(m); i++) a[i] = n[i] - '0';\n    sort(a, a + i);\n    for (i = 0; i < strlen(m); i++) {\n      if (a[i] != b[i]) {\n        flag = 0;\n        break;\n      }\n    }\n    int k = 1;\n    for (i = 0; i < strlen(n); i++) {\n      if (b[i] == 0)\n        bb[k++] = b[i];\n      else {\n        bb[0] = b[i];\n        break;\n      }\n    }\n    for (i = k; i < strlen(n); i++) bb[i] = b[i];\n    for (i = 0; i < strlen(n); i++) {\n      if ((m[i] - '0') != bb[i]) {\n        flag = 0;\n        break;\n      }\n    }\n  }\n  if (flag)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, t, ans;\n  cin >> s >> t;\n  if (atoi(s.c_str()) == 0 && atoi(t.c_str()) == 0 && t.size() == 1) {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  if (t[0] == '0') {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  sort(s.begin(), s.end());\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] != '0') {\n      ans += s[i];\n      s.erase(i, 1);\n      break;\n    }\n  }\n  for (int i = 0; i < s.size(); i++) {\n    ans += s[i];\n  }\n  if (ans == t)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class CF12B {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    char[] num = sc.nextLine().toCharArray();\n    char[] ans = sc.nextLine().toCharArray();\n    Arrays.sort(num);\n    int i = 0;\n    for (i = 0; i < num.length; i++) {\n      if (num[i] != '0') {\n        break;\n      }\n    }\n    if (i < num.length) {\n      char tmp = num[i];\n      num[i] = num[0];\n      num[0] = tmp;\n    }\n    if (num.length == ans.length) {\n      boolean ok = true;\n      for (i = 0; i < num.length; i++) {\n        if (num[i] != ans[i]) {\n          ok = false;\n        }\n      }\n      System.out.println(ok ? \"OK\" : \"WRONG_ANSWER\");\n    } else {\n      System.out.println(\"WRONG_ANSWER\");\n    }\n    sc.close();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# Getting Problem Data from Codeforces.\nnumberOrg,numberMin = list(input()),input()\n# For Storing Occurence of Digits (0-9) in numberOrg.\nnumString = ['0','1','2','3','4','5','6','7','8','9']\nlistCount = [0,0,0,0,0,0,0,0,0,0]\n# Computing Counts.\nfor i in range(len(numberOrg)):\n    digit = int(numberOrg[i])\n    listCount[digit] = listCount[digit]+1\n# Computing Minimum-Non Zero Occuring Digit.\nindex,found = 1,False\nwhile not found and index<10:\n    if listCount[index]>0:\n        found = True\n    else: index = index+1\n# Deciding on minNonZero based on Search.\nif not found: minNonZero = 0\nelse: minNonZero = index\n# Computing Minimum Possible Number.\n# Adding one minNonZero.\npossMin = numString[minNonZero]\nlistCount[minNonZero] = listCount[minNonZero]-1\n# Accounting For Zeros.\npossMin+= numString[0]*listCount[0]\n# Accounting for remaining minNonZero's.\npossMin+= numString[minNonZero]*listCount[minNonZero]\n# Accounting for digits greater than minNonZero's.\nfor i in range(minNonZero+1,10):\n    possMin+=numString[i]*listCount[i]\n# Verdict.\nif possMin == numberMin:\n    print(\"OK\")\nelse: print(\"WRONG_ANSWER\")\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n        int[] digit = new int[10];\n        for(int i=0;i<digit.length;i++) digit[i] = 0;\n        String alice = s.next();\n        String bob = s.next();\n        for(int i=0;i<alice.length();i++) {\n            digit[alice.charAt(i)-'0']++;\n        }\n        String answer = new String();\n        for(int i=1;i<digit.length;i++) {\n            if(digit[i]!=0) {\n                answer += String.valueOf(i);\n                digit[i]--;\n                break;\n            }\n        }\n        for(int i=0;i<digit.length;i++) {\n            while(digit[i]>0) {\n                answer += String.valueOf(i);\n                digit[i]--;\n            }\n        }\n        if(bob.equals(answer)) p(\"OK\");\n        else p(\"WRONG_ANSWER\");\n    }\n    private static void p(String s) {\n        System.out.print(s);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a;\n  string b;\n  cin >> a;\n  cin >> b;\n  string q;\n  char s = '9';\n  int i, j, k, u;\n  if (a.size() == 1 && b.size() == 1 && a[0] == '0' && b[0] == '0') {\n    cout << \"OK\";\n  } else {\n    if (a.size() != b.size()) {\n      cout << \"WRONG_ANSWER\";\n    } else {\n      for (i = 0, j = 0; i < a.size(); i++) {\n        if (a[i] != '0' && a[i] < s) {\n          q[j] = a[i];\n          s = q[j];\n          k = i;\n        }\n      }\n      a[k] = 'c';\n      int y = a.size() - 1, e;\n      j = 1, u = -1;\n      while (y--) {\n        char ss = '9';\n        for (i = 0; i < a.size(); i++) {\n          if (a[i] <= ss) {\n            q[j] = a[i];\n            ss = q[j];\n            e = i;\n          }\n        }\n        a[e] = 'c';\n        j++;\n      }\n      for (j = 0; j < a.size(); j++) {\n        if (b[j] == q[j]) {\n          u++;\n        } else {\n          cout << \"WRONG_ANSWER\";\n          return 0;\n        }\n      }\n      if (u >= 0) {\n        cout << \"OK\";\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring solve(string a, string b) {\n  int i, j;\n  string c;\n  sort(a.begin(), a.end());\n  for (i = 0; i < a.size(); i++)\n    if (a[i] != '0') {\n      c = a[i];\n      break;\n    }\n  for (j = 0; j < i; j++) c += '0';\n  for (j = i + 1; j < a.size(); j++) c += a[j];\n  if (c != b) return \"WRONG_ANSWER\";\n  return \"OK\";\n}\nint main(void) {\n  string a, b;\n  getline(cin, a);\n  getline(cin, b);\n  cout << solve(a, b) << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  long long n, m;\n  int dig[10];\n  char cn[12], cm[12];\n  while (scanf(\"%s\\n%s\", &cn, &cm) != EOF) {\n    if (strlen(cn) != strlen(cm)) {\n      printf(\"WRONG_ANSWER\\n\");\n      continue;\n    }\n    n = atol(cn);\n    m = atol(cm);\n    for (int i = 0; i < 10; i++) dig[i] = 0;\n    if (n < 10) {\n      if (n == m)\n        printf(\"OK\\n\");\n      else\n        printf(\"WRONG_ANSWER\\n\");\n    } else {\n      while (n) {\n        dig[n % 10]++;\n        n /= 10;\n      }\n      long long ret = 0;\n      for (int i = 1; i <= 9; i++) {\n        if (dig[i]) {\n          ret *= 10;\n          ret += i;\n          dig[i]--;\n          break;\n        }\n      }\n      for (int i = 0; i <= 9; i++) {\n        while (dig[i]) {\n          ret *= 10;\n          ret += i;\n          dig[i]--;\n        }\n      }\n      if (ret == m)\n        printf(\"OK\\n\");\n      else\n        printf(\"WRONG_ANSWER\\n\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class correct\n{\n    public static void main(String args[])\n    {\n        Scanner a = new Scanner(System.in);\n        \n        while(a.hasNext())\n        {\n            String num = a.next();\n            String bob = a.next();\n            String num2 = \"\";\n            String vet[] = num.split(\"\");\n            Arrays.sort(vet);\n            if(vet[1].equals(\"0\"))\n            {   \n                for(int i = 1; i < vet.length; i++)\n                {\n                    if(!vet[i].equals(\"0\"))\n                    {\n                        String aux = vet[i];\n                        vet[i] = vet[1];\n                        vet[1] = aux;\n                        break;\n                    }\n                }\n            }\n            \n            for(int i = 1; i < vet.length; i++)\n                num2 += vet[i];\n            \n            if(bob.equals(num2))\n                System.out.println(\"OK\");\n            else\n                System.out.println(\"WRONG_ANSWER\");\n        }\n        \n    }\n}"
        },
        {
            "language": 1,
            "solution": "\ndef solve(A, B):\n    A = sorted(A)\n    for i, d in enumerate(A):\n        if d != '0':\n            del A[i]\n            A = [d] + A\n            break\n    A = ''.join(A)\n    return A == B\n    \nA = raw_input()\nB = raw_input()\n\nif solve(A, B):\n    print 'OK'\nelse:\n    print 'WRONG_ANSWER'\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class MyClass {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tString b=sc.next();\n\t\tString s=\"\"+n;\n\t\tchar arr[]=s.toCharArray();\n\t\tArrays.sort(arr);\n\t\tint idx=fun(arr);\n\t\tString ans=\"\"+arr[idx];\n\t\tfor(int j=0;j<arr.length;j++){\n\t\t\tif(j != idx)\n\t\t\tans+=\"\"+arr[j];\n\n\t\t}\n\t\tif(ans.equals(b))\n\t\t\tSystem.out.println(\"OK\");\n\t\telse\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\n\n\n\n\t}\n\n\tpublic static int fun(char arr[]){\n\t    for(int i=0;i<=arr.length-1;i++){\n\t        if(arr[i] != '0')\n\t            return i;\n\t    }\n\t    return 0;\n\t} \n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool abdelmagied = false;\nint countzero = 0;\nstring zero = \"0\";\nstring x, comp;\nvoid gessme() {\n  if (x.size() != comp.size() || (x == \"0\" && x != comp)) {\n    cout << \"WRONG_ANSWER\" << endl;\n    abdelmagied = true;\n  }\n  if (x == \"0\" && comp == \"0\") {\n    cout << \"OK\" << endl;\n    abdelmagied = true;\n  }\n}\nint main() {\n  cin >> x >> comp;\n  gessme();\n  if (!abdelmagied) {\n    sort(x.begin(), x.end());\n    while (x[0] == '0') {\n      countzero++;\n      x.erase(x.begin());\n    }\n    while (countzero--) {\n      x.insert(1, \"0\");\n    }\n    x == comp ? cout << \"OK\" << endl : cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author mthai\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CF_12B solver = new CF_12B();\n        solver.solve(1, in, out);\n        out.close();\n    }\n}\n\nclass CF_12B {\n    public void solve(int testNumber, Scanner in, PrintWriter out) {\n        String a = in.next();\n        String b = in.next();\n\n        char []c = a.toCharArray();\n        int n = c.length;\n        Arrays.sort(c);\n        String sorted = \"\";\n        if(c[0] == '0') {\n            for(int i = 0; i < n; ++i) {\n                if(c[i] != '0') {\n                    sorted += c[i];\n                    c[i] = '-';\n                    break;\n                }\n            }\n        }\n        for(int i = 0; i < n; ++i) {\n            if(c[i] != '-')\n                sorted += c[i];\n        }\n        if(sorted.compareTo(b) == 0) {\n            out.println(\"OK\");\n        }\n        else {\n            out.println(\"WRONG_ANSWER\");\n        }\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char N[10], M[10];\n  int i, j, k;\n  int data[10];\n  while (cin >> N >> M) {\n    memset(data, 0, sizeof(data));\n    i = 0;\n    int length = strlen(N);\n    for (int k = 0; k < length; ++k) {\n      data[k] = N[k] - '0';\n    }\n    sort(data, data + length);\n    for (j = 0; j < length; ++j) {\n      if (data[j]) {\n        N[0] = data[j] + '0';\n        break;\n      }\n    }\n    for (int k = 0; k < length; ++k) {\n      if (k != j) {\n        N[++i] = data[k] + '0';\n      }\n    }\n    int flag = 0;\n    for (int k = 0; k < length; ++k) {\n      if (N[k] != M[k] || strlen(M) != length) {\n        flag = 1;\n        break;\n      }\n    }\n    if (!flag)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[2000], c[2000];\nint i, m, n;\nint main() {\n  cin >> s >> c;\n  n = strlen(s);\n  m = -1;\n  for (int &i_ = i = (0), e_ = (n); i_ < e_; ++i_)\n    if (s[i] > '0' && (m == -1 || s[i] < s[m])) m = i;\n  if (m >= 0) {\n    {\n      typeof(s[0]) t_ = s[0];\n      s[0] = s[m];\n      s[m] = t_;\n    };\n    sort(s + 1, s + n);\n  }\n  cout << (!strcmp(s, c) ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\n\npublic class Solution{\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tString s = scan.next();\n\t\tString t = scan.next();\n\t\tif (t.length() != s.length())\n\t\t    System.out.println(\"WRONG_ANSWER\");\n\t\telse\n\t\t{\n\t\tint arr[] = new int[s.length()];\n\t\tboolean ok = true;\n\t\tfor (int i=0;i<s.length();i++)\n\t\t{\n\t\t    arr[i] = Character.getNumericValue(s.charAt(i));\n\t\t}\n\t\tArrays.sort(arr);\n\t\tint j = 0;\n\t\twhile (arr[0] == 0 && j<s.length())\n\t\t{\n\t\t    //System.out.println(arr[j]);\n\t\t    if (arr[j] != 0)\n\t\t    {\n\t\t        int temp;\n\t\t        temp = arr[j];\n\t\t        arr[j] = 0;\n\t\t        arr[0] = temp;\n\t\t    }\n\t\t    j++;\n\t\t}\n\t\t//System.out.println(arr[1]);\n\t\tfor (int i=0;i<t.length();i++)\n\t\t{\n\t\t    //System.out.print(arr[i]);\n\t\t    //System.out.print(Character.getNumericValue(t.charAt(i)));\n\t\t    if (arr[i] != Character.getNumericValue(t.charAt(i)))\n\t\t        ok = false;\n\t\t}\n\t\t//System.out.println();\n\t\tif (ok == true)\n\t\t    System.out.println(\"OK\");\n\t\telse System.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class _P012B{\n    Scanner sc=new Scanner(System.in);\n\n    int INF=1<<28;\n    double EPS=1e-9;\n\n    String n, m;\n\n    void run(){\n        n=sc.next();\n        m=sc.next();\n        solve();\n    }\n\n    void solve(){\n        String ok=\"OK\", wa=\"WRONG_ANSWER\";\n        char[] cs=(n+\"\").toCharArray();\n        sort(cs);\n        for(int i=0; i<cs.length; i++){\n            if(cs[i]!='0'){\n                char c=cs[0];\n                cs[0]=cs[i];\n                cs[i]=c;\n                break;\n            }\n        }\n        // debug(cs);\n        println(new String(cs).equals(m)?ok:wa);\n    }\n\n    void println(String s){\n        System.out.println(s);\n    }\n\n    void print(String s){\n        System.out.print(s);\n    }\n\n    void debug(Object... os){\n        System.err.println(Arrays.deepToString(os));\n    }\n\n    public static void main(String[] args){\n        new _P012B().run();\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "a = raw_input()\nb = raw_input()\n\ns = []\nfor x in a:\n\ts.append(x)\ns.sort()\nm = True\nn = 0\nans = ''\nfor x in s:\n\tif x == '0':\n\t\tn += 1\n\telif m:\n\t\tm = False\n\t\tans += x+'0'*n\n\telse:\n\t\tans += x\n\nif ans == b:\n\tprint 'OK'\nelif a =='0' and b == '0':\n\tprint 'OK'\nelse:\n\tprint 'WRONG_ANSWER'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt0[10];\nint cnt1[10];\nstring check(string s) {\n  sort(s.begin(), s.end());\n  string ans;\n  char hld;\n  int counter = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] != '0') {\n      hld = s[i];\n      counter++;\n      break;\n    }\n  }\n  string special = \"ABC\";\n  if (counter == 0) {\n    return special;\n  }\n  ans += hld;\n  int cnt0 = 0;\n  int cnthld = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0') {\n      cnt0++;\n    }\n    if (s[i] == hld) {\n      cnthld++;\n    }\n  }\n  for (int i = 0; i < cnt0; i++) {\n    ans += '0';\n  }\n  for (int i = 0; i < cnthld - 1; i++) {\n    ans += hld;\n  }\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] != '0' && s[i] != hld) {\n      ans += s[i];\n    }\n  }\n  return ans;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  string s, x;\n  cin >> s >> x;\n  bool ans = true;\n  for (int i = 0; i < s.size(); i++) {\n    cnt0[int(s[i]) - 48]++;\n  }\n  for (int i = 0; i < x.size(); i++) {\n    cnt1[int(x[i]) - 48]++;\n  }\n  for (int i = 0; i < 10; i++) {\n    if (cnt0[i] != cnt1[i]) {\n      ans = false;\n      break;\n    }\n  }\n  if (!ans) {\n    cout << \"WRONG_ANSWER\\n\";\n  } else {\n    if (check(s) == \"ABC\") {\n      if (s.size() == x.size()) {\n        cout << \"OK\\n\";\n      } else {\n        cout << \"WRONG_ANSWER\\n\";\n      }\n    } else if (check(s) == x) {\n      cout << \"OK\\n\";\n    } else {\n      cout << \"WRONG_ANSWER\\n\";\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    s = input()\n    if s != \"0\":\n        l = sorted(c for c in s if c != '0')\n        l[0] += '0' * s.count('0')\n        s = ''.join(l)\n    print((\"OK\", \"WRONG_ANSWER\")[s != input()])\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = acos(-1);\nconst int inf = 0x3f3f3f3f;\nconst double eps = 1e-12;\nconst int maxn = 1e6 + 5;\nconst int mod = 1e9 + 7;\nint dir[4][2] = {0, 1, 1, 0, 0, -1, -1, 0};\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nlong long lcm(long long a, long long b) { return a / gcd(a, b) * b; }\nlong long inv(long long b) {\n  if (b == 1) return 1;\n  return (mod - mod / b) * inv(mod % b) % mod;\n}\nlong long fpow(long long n, long long k) {\n  long long r = 1;\n  for (; k; k >>= 1) {\n    if (k & 1) r = r * n % mod;\n    n = n * n % mod;\n  }\n  return r;\n}\nlong long Fpow(long long n, long long k) {\n  long long r = 1;\n  for (; k; k >>= 1) {\n    if (k & 1) r = r * n;\n    n = n * n;\n  }\n  return r;\n}\nlong long upd(long long x, long long v) {\n  x = x + v >= mod ? x + v - mod : x + v;\n  return x;\n}\nstring a, b;\nint main() {\n  int i, j, k;\n  cin >> a >> b;\n  int len = a.length();\n  sort(a.begin(), a.end());\n  for (i = 0; i < a.length(); i++) {\n    if (a[i] != '0') {\n      swap(a[i], a[0]);\n      break;\n    }\n  }\n  if (a == b)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "first =list(input())# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u043c\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438  ['3', '3', '1', '0']\nsecond = input() \nfirst_reverse = sorted(first) # \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u043c\nif first_reverse[0] == \"0\": # \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 0, \u0442\u043e \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0434\u0430\u043b\u044c\u0448\u0435 \u0441\u043f\u0438\u0441\u043e\u043a, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u043e\u0442 0 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\n\tfor i in first_reverse:\n\t\tif i != \"0\":\n\t\t\ty =first_reverse.index(i)# \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0438\u043d\u0434\u0435\u043a\u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043e\u0442\u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043e\u0442 \u043d\u0443\u043b\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\n\t\t\tfirst_reverse[0],first_reverse[y] = first_reverse[y],first_reverse[0]# \u043c\u0435\u043d\u044f\u0435\u043c \u043c\u0435\u0441\u0442\u0430\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0431\u0435\u0437 \u043f\u043e\u043c\u043e\u0437\u0438 \u0431\u0443\u0444\u0435\u0440\u043d\u043e\u0439 \u043f\u0435\u0440\n\t\t\tbreak\nresult = ''.join(first_reverse)# \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432\u043e\u0435\u0434\u0438\u043d\u043e\n#print(result) \nif result == second:#\u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \n\tprint(\"OK\")\nelse: print(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\nlong long int MOD = 1000000007;\ndouble eps = 1e-12;\nvoid solve();\nlong long int gcd(long long int a, long long int b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\nvoid solve() {\n  string s;\n  string s1;\n  cin >> s >> s1;\n  unordered_map<char, int> mp;\n  for (long long int i = 0; i < s.length(); i++) mp[s[i] - '0']++;\n  string ans;\n  for (int i = 1; i <= 9; i++) {\n    if (mp[i] > 0) {\n      ans += to_string(i);\n      mp[i]--;\n      break;\n    }\n  }\n  while (mp[0] > 0) {\n    ans += to_string(0);\n    mp[0]--;\n  }\n  for (int i = 1; i <= 9; i++) {\n    if (mp[i] > 0) {\n      while (mp[i] > 0) {\n        ans += to_string(i);\n        mp[i]--;\n      }\n    }\n  }\n  if (ans == s1) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math,O3\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\nconst long long mod = 1000 * 1000 * 1000 + 7;\nconst long long inf = 1ll * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 + 7;\nconst long long mod2 = 998244353;\nconst long long N = 1000 * 1000 + 10;\nconst long double pi = 3.141592653589793;\nlong long power(long long x, long long y, long long p = LLONG_MAX) {\n  long long res = 1;\n  x %= p;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nlong long ncr(long long n, long long r, long long m) {\n  if (r > n) return 0;\n  long long a = 1, b = 1, i;\n  for (i = 0; i < r; i++) {\n    a = (a * n) % m;\n    --n;\n  }\n  while (r) {\n    b = (b * r) % m;\n    --r;\n  }\n  return (a * power(b, m - 2, m)) % m;\n}\nstring ok = \"OK\", nok = \"WRONG_ANSWER\";\nvoid solve() {\n  string n, m;\n  cin >> n >> m;\n  sort(n.begin(), n.end());\n  bool nz = 0;\n  for (long long i = 0; i < n.size(); i++) {\n    if (n[i] != '0') {\n      swap(n[i], n[0]);\n      nz = 1;\n      break;\n    }\n  }\n  if (n == m)\n    cout << ok;\n  else\n    cout << nok;\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\nif len(n) > 1:\n    others = []\n    z = []\n    for i in n:\n        if i == '0':\n            z.append(i)\n        else:\n            others.append(i)\n    others = sorted(others)\n\n    n = others[0] + ''.join(z) + ''.join(others[1:])\n\nprint('OK' if n == m else 'WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint compare(const void *a, const void *b) {\n  char ca = *(char *)a;\n  char cb = *(char *)b;\n  return ca - cb;\n}\nint main() {\n  static char s[11], t[11];\n  int a, b, i;\n  char tmp;\n  scanf(\"%s%s\", s, t);\n  a = strlen(s);\n  b = strlen(t);\n  qsort(s, a, sizeof *s, compare);\n  for (i = 0; i < a && s[i] == '0'; i++)\n    ;\n  if (i != a) {\n    tmp = s[0];\n    s[0] = s[i];\n    s[i] = tmp;\n  }\n  printf(strcmp(s, t) == 0 ? \"OK\\n\" : \"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#***************12B - Correct Solution?***************#\n\nimport math\nimport os\nimport random\nimport re\nimport sys\nfrom itertools import *\n\ndef allCharactersSame(s) :\n    n = len(s)\n    for i in range(1, n) :\n        if s[i] != s[0] :\n            return False\n    return True\n    \nn = input()\na = input()\nd = []\nif len(a) != len(n):\n    print(\"WRONG_ANSWER\")\nelse:\n    if n[0]=='0' and allCharactersSame(n):\n        if a[0] == '0' and allCharactersSame(a):\n            print(\"OK\")\n        else:\n            print(\"WRONG_ANSWER\")\n    else:\n        n = (int)(n)\n        a = (int)(a)\n        while n>0:\n            d.append(n%10)\n            n //= 10\n        d.sort()\n        i = 0\n        f = 1\n        while d[i] == 0:\n            i += 1\n        x = d[i]\n        d[i] = 0\n        d[0] = x\n        rev = \"\"\n        while len(d)>0:\n            rev += (str)(d.pop())\n        num = rev[::-1]\n        if a == (int)(num):\n            print(\"OK\")\n        else:\n            print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class correct {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String a=scanner.next();\n        String res=scanner.next();\n        int[] b={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1};\n        int i=0;\n        for(;i<a.length();i++) {\n            b[i] = a.charAt(i)-48;\n        }\n        Arrays.sort(b);\n        for(i=0;i<10;i++){\n            if(b[i]!=-1)\n                break;\n        }\n        int j;\n        for(j=i;j<10;j++){\n            if(b[j]!=0)\n                break;\n        }\n        if(j==10)\n            j=9;\n        int c=b[j];\n        b[j]=b[i];\n        b[i]=c;\n        c=9;\n        for(i=res.length()-1;i>=0;i--){\n            if(res.charAt(i)-48!=b[c]){\n                System.out.println(\"WRONG_ANSWER\");\n                return;\n            }\n            c--;\n        }\n        System.out.println(\"OK\");\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author nasko\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n\n        char[] bob = in.nextLine().toCharArray();\n        char[] alice = in.nextLine().toCharArray();\n        Arrays.sort(bob);\n\n        for(int i = 0; i < bob.length; ++i) {\n            if(bob[i] != '0') {\n                char c = bob[0];\n                bob[0] = bob[i];\n                bob[i] = c;\n                break;\n            }\n        }\n        String a = new String(bob);\n        String b = new String(alice);\n        if(a.equals(b)) out.println(\"OK\");\n        else out.println(\"WRONG_ANSWER\");\n\n    }\n\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n\n    public String nextLine() {\n        String s = null;\n        try {\n            s = reader.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return s;\n    }\n\n}\n\n"
        },
        {
            "language": 1,
            "solution": "alice = map(int, list(raw_input()))\nbob = map(int, list(raw_input()))\n\nn = len(alice)\n\n\nsmallest = alice\n\ndef swap(k, l):\n    smallest[k], smallest[l] = smallest[l], smallest[k]\n\n\nfor i in xrange(n):\n    for j in xrange(i, n):\n        if i != 0 and smallest[i] > smallest[j]:\n            swap(i, j)\n        elif smallest[i] > smallest[j] and smallest[j] != 0:\n            swap(i, j)\n\nif smallest == bob: print \"OK\"\nelse: print \"WRONG_ANSWER\"\n\n"
        },
        {
            "language": 1,
            "solution": "a,b=[raw_input() for i in range(2)]\na=list(a)\naux=filter(lambda x:x!='0',a)\naux2=filter(lambda x:x=='0',a)\naux.sort()\nfor i in aux2:\n    aux.insert(1,i)\na=''.join(aux)\nif a==b:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\"\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.io.StreamTokenizer;\nimport java.util.Arrays;\n\n\npublic class Main {\n\tprivate static StreamTokenizer in;\n\tprivate static PrintWriter out;\n\t\n\tprivate static int nextInt() throws Exception {\n\t\tin.nextToken();\n\t\treturn (int)in.nval;\n\t}\n\t\n\tprivate static String nextString() throws Exception {\n\t\tin.nextToken();\n\t\treturn in.sval;\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t\tin = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n\t\tout = new PrintWriter(System.out);\n\n\t\tin.ordinaryChars('0', '9');\n\t\tin.wordChars('0', '9');\n\t\t\n\t\tString b = nextString();\n\t\tString a = nextString();\n\t\t\n\t\tif (a.equals(b) && a.equals(\"0\")) {\n\t\t\tout.println(\"OK\");\n\t\t\tout.flush();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tchar[] ch = b.toCharArray();\n\t\t\n\t\tif (a.charAt(0)=='0') {\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t\tout.flush();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tArrays.sort(ch);\n\t\t\n\t\tint i=0;\n\t\tfor (; i<ch.length; i++) {\n\t\t\tif (ch[i]!='0') break;\n\t\t}\n\t\t\n\t\tif (i == ch.length) {\n\t\t\tif (!a.equals(\"0\"))\n\t\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t\telse out.println(\"OK\");\n\t\t\tout.flush();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tString s = ch[i]+\"\";\n\t\tfor (int j=0; j<i; j++)\n\t\t\ts+='0';\n\t\tfor (i+=1; i<ch.length; i++)\n\t\t\ts+=ch[i];\n\t\t\n//\t\tout.println(s);\n\t\t\n\t\tif (!a.equals(s))\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\telse out.println(\"OK\");\n\t\t\n\t\tout.flush();\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\npublic class B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int a = in.nextInt();\n        String b = in.next();\n        if (a == 0) {\n            if (b.equals(\"0\")) {\n                System.out.println(\"OK\");\n            } else\n                System.out.println(\"WRONG_ANSWER\");\n        } else {\n            int[] A = new int[10];\n            int min = 10;\n            while (a > 0) {\n                A[a % 10]++;\n                if (a % 10 != 0)\n                    min = Math.min(a % 10, min);\n                a /= 10;\n            }\n            A[min]--;\n            int ans = min;\n            for (int i = 0; i < 10; i++)\n                while (A[i] > 0) {\n                    ans = ans * 10 + i;\n                    A[i]--;\n                }\n            if (b.equals(\"\" + ans))\n                System.out.println(\"OK\");\n            else\n                System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class correctsol{\n     public static void main(String[] args) {\n        Scanner br = new Scanner(System.in);\n        String n = br.next();\n        String hans = br.next();\n        int[] nums = new int[n.length()];\n        for(int i = 0;i<n.length();i++){\n            nums[i] = n.charAt(i)-'0';\n        }\n        Arrays.sort(nums);\n        if(nums[0] == 0){\n            for(int i = 0;i<n.length();i++){\n                if(nums[i] != 0){\n                    nums[0] = nums[i];\n                    nums[i] = 0;\n                    break;\n                }\n            }\n        }\n        String ans = \"\";\n        for(int i = 0;i<nums.length;i++){\n            ans+=nums[i];\n        }\n        if(ans.equals(hans)){\n            System.out.println(\"OK\");\n        }\n        else{\n           System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "b=str(input())\nlu=str(input())\nif int(b)<10 and int(b)>0:\n      z=b\nelse:\n        if int(b)==0 and int(lu)==0:\n                if len(b)==len(lu):\n                        z=b\n                else:\n                        z=int(b)\n\n        else:\n                a=[]*len(b)\n                lo=0\n                for i in range (0,len(b)):\n                        a.append(int(b[i]))\n\n\n                for k in range (1,len(a)):\n                        for t in range (len(a)-k):\n                                if (a[t])>(a[t+1]):\n                                        p=(a[t])\n                                        a[t]=(a[t+1])\n                                        a[t+1]=p\n        \n                g=0\n        \n                if len(a)==1 and a[0]==0:\n                        z=str(0)\n                \n         \n                else:\n                \n                \n                        while a[0]==0:\n                                a.remove(0)\n                                g=g+1\n                        z=a[0]\n                        if len(a)==1:\n                                z=int(b)\n                        else:\n                                del a[0]\n                                q=str(a[0])\n                                for i in range (1,len(a)):\n                                        q+=\"\"+str(a[i])\n                                z=str(z)+str(0)*g+q\n                \n\nif lu==z:\n        print(\"OK\")\nelse:\n        print(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring return_smaller(string s) {\n  string res = \"\";\n  int index = 0;\n  char ch = '9';\n  if (s == \"0\") return s;\n  for (int i = 0; i < s.size(); i++) {\n    if (ch > s[i] && s[i] != '0') {\n      ch = s[i];\n      index = i;\n    }\n  }\n  res += ch;\n  s = s.substr(0, index) + s.substr(index + 1, s.size());\n  sort(s.begin(), s.end());\n  res += s;\n  return res;\n}\nint main() {\n  string n1, n2;\n  while (cin >> n1 >> n2) {\n    string res = \"WRONG_ANSWER\";\n    if (n2 == return_smaller(n1)) res = \"OK\";\n    cout << res << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "input = ''.join(sorted(raw_input()))\nzero_count = input.count('0')\nsmallest = input[zero_count:zero_count+1] + '0'*zero_count + input[zero_count+1:]\nif smallest == raw_input():\n    print 'OK'\nelse:\n    print 'WRONG_ANSWER'"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, ans;\n  cin >> s >> ans;\n  sort(s.begin(), s.end());\n  int k = (int)s.rfind('0');\n  if (k != -1 && k != s.size() - 1) {\n    string w = s.substr(0, k + 1);\n    s.erase(0, k + 1);\n    s.insert(1, w);\n  }\n  if (s == ans)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Div2_12_B {\n\n    public static void main(String[] args) {\n        Scanner input = new Scanner (System.in);\n        String str = input.nextLine();\n        \n         int []  arr = new int [str.length()];\n         int tmp = 0 ;\n         for (int i = 0 ; i < arr.length ; i ++)\n         {\n             arr[i]= Integer.parseInt(String.valueOf(str.charAt(i)));\n         }\n         Arrays.sort(arr);\n         \n         for (int i = 0 ; i < arr.length ; i ++)\n         {\n            if ( arr[0] != 0 ) break ; \n            \n            if ( arr[i] != 0 ){\n                tmp = arr[i];\n                arr[i]=arr[0];\n                arr[0]=tmp;\n            }\n                \n            }\n         str=\"\";\n         for (int i = 0 ; i < arr.length ; i ++)\n         str += arr[i];\n         \n         String str1 = input.nextLine();\n         if (str.equals(str1))\n             System.out.print (\"OK\");\n         else\n             System.out.print (\"WRONG_ANSWER\");\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\nfrom sys import exit\nif n=='0':\n    if m=='0':\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\n    exit()\nmas = []\nfor i,x in enumerate(n):\n    mas.append(int(x))\nmas.sort()\nq = mas.count(0)\nrez = str(mas[q])\nfor i in range(q):\n    rez+='0'\nfor i in range(q+1,len(n)):\n    rez+=str(mas[i])\nif m==rez:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/python\nn=raw_input()\nm=raw_input()\nif 0<=(int(n))<=(10**9) and 0<=(int(m))<=(10**9) :\n    c=[x for x in n]\n    c.sort()\n    if c.count('0')==len(n):\n        if int(m)==int(''.join(c)) and len(n)==len(m):\n            print 'OK'\n        else:\n            print 'WRONG_ANSWER'\n    elif c.count('0')==(len(n)-1):\n        c.insert(0,c[-1])\n        c.pop()\n        if int(m)==int(''.join(c)) and len(n)==len(m):\n            print 'OK'\n        else:\n            print 'WRONG_ANSWER'\n    elif c.count('0')==0:\n        if int(m)==int(''.join(c)) and len(n)==len(m):\n           print 'OK'\n        else:\n            print 'WRONG_ANSWER'\n    else:\n        c.insert(0,c[c.count('0')])\n        c.pop((c.count('0'))+1)\n        if int(m)==int(''.join(c)) and len(n)==len(m):\n            print 'OK'\n        else:\n            print 'WRONG_ANSWER'\n   "
        },
        {
            "language": 1,
            "solution": "number=str(raw_input())\ntab=[]\n\nbuff=[]\nfor i in number:\n    tab.append(int(i))\n    \ntab.sort()\n\nwhile 0 in tab:\n    buff.append(tab[0])\n    tab.remove(tab[0])\n    \nfor i in buff:\n    tab.insert(1, 0)\nx=int(''.join(map(str,tab)))   \ny=raw_input()\nif x==int(y) and len(str(x))==len(str(y)):\n    print 'OK'\nelse:\n    print 'WRONG_ANSWER'\n    \n     "
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nq,a = input(),input()\nn = q.count('0')\nx = sorted(list(map(int,str(q))))\nx = [str(i) for i in x]\nx = ''.join(x)\nif len(q) > 1: k = str(x[n])+'0'*n+str(x[n+1:])\nelse: k = str(x[0])\n\nif k == a: print('OK')\nelse: print('WRONG_ANSWER')\n\n"
        },
        {
            "language": 4,
            "solution": "/**\n * Created by IntelliJ IDEA.\n * User: shakhov\n * Date: 15.06.2011\n * Time: 15:22:46\n * To change this template use File | Settings | File Templates.\n */\n\n//6\n//86 402 133 524 405 610   6 4 1\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class CodeForces {\n\n    public void solve() throws IOException {\n        char[] n = nextToken().toCharArray();\n        String v = nextToken();\n        Arrays.sort(n);\n        String ans = \"0\";\n        int pos = -1;\n        int j = 0;\n        while (j < n.length) {\n            if (n[j] != '0') {\n                pos = j;\n                break;\n            }\n            j++;\n        }\n        if (pos != -1) {\n            StringBuilder sb = new StringBuilder();\n            sb.append(n[pos]);\n            for (int i = 0, l = n.length; i < l; i++) {\n                if (i != pos) {\n                    sb.append(n[i]);\n                }\n            }\n            ans=sb.toString();\n\n        }\n\n\n        if (ans.equalsIgnoreCase(v)) {\n            writer.print(\"OK\");\n        } else {\n            writer.print(\"WRONG_ANSWER\");\n        }\n\n\n    }\n\n\n    public static void main(String[] args) {\n        new CodeForces().run();\n    }\n\n    BufferedReader reader;\n    StringTokenizer tokenizer;\n    PrintWriter writer;\n\n    public void run() {\n        try {\n            reader = new BufferedReader(new InputStreamReader(System.in));\n            //reader = new BufferedReader(new FileReader(\"LifeWithoutZeros.in\"));\n            tokenizer = null;\n            writer = new PrintWriter(System.out);\n            long t1 = System.currentTimeMillis();\n            //writer = new PrintWriter(new BufferedWriter(new FileWriter(\"LifeWithoutZeros.out\")));\n            //long t=new Date().getTime();\n            solve();\n            //writer.println(t-new Date().getTime());\n            reader.close();\n            writer.close();\n            long t2 = System.currentTimeMillis();\n            System.err.println(\"Time = \" + (t2 - t1));\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    String nextToken() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2, s;\n  int cnt, i;\n  while (cin >> s1 >> s2) {\n    sort(s1.begin(), s1.end());\n    for (s.clear(), cnt = i = 0; i < s1.size() && s1[i] == '0'; ++cnt, ++i)\n      ;\n    if (i < s1.size()) s += s1[i++];\n    while (cnt--) s += '0';\n    for (; i < s1.size(); s += s1[i], ++i)\n      ;\n    if (s == s2)\n      cout << \"OK\\n\";\n    else\n      cout << \"WRONG_ANSWER\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  if (a.size() != 1)\n    if (a[0] == '0')\n      for (int i = 1; i < a.size(); i++)\n        if (a[i] != '0') {\n          swap(a[0], a[i]);\n          break;\n        }\n  if (a == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  vector<char> t;\n  string ch1, ch;\n  int n, i, nbz = 0, n1;\n  cin >> ch;\n  cin >> ch1;\n  n = ch.size();\n  n1 = ch1.size();\n  if (ch == \"0\") {\n    if (ch1 == \"0\") {\n      cout << \"OK\";\n    } else {\n      cout << \"WRONG_ANSWER\";\n    }\n  } else {\n    for (i = 0; i < n; i++) {\n      if (ch[i] != '0') {\n        t.push_back(ch[i]);\n      } else {\n        nbz++;\n      }\n    }\n    sort(t.begin(), t.end());\n    t.insert(t.begin() + 1, nbz, '0');\n    i = 0;\n    bool ok(true);\n    while (ok == true && i < n) {\n      if (ch1[i] != t[i]) {\n        ok = false;\n      }\n      i++;\n    }\n    (ok == true) ? cout << \"OK\" : cout << \"WRONG_ANSWER\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int INF = 1e9;\nconst int MOD = 1e9 + 7;\nconst long long LINF = 1e18;\nusing namespace std;\ntemplate <typename T>\nvoid print(const vector<T> &x) {\n  int n = x.size();\n  for (int i = 0; i < (n); ++i) {\n    cout << x[i];\n    if (i != n - 1)\n      cout << \" \";\n    else\n      cout << endl;\n  }\n}\ntemplate <typename T>\nvoid print(const vector<vector<T>> &x) {\n  int n = x.size();\n  for (int i = 0; i < (n); ++i) {\n    for (int j = 0; j < (x[i].size()); ++j) {\n      cout << x[i][j] << \" \";\n    }\n    cout << endl;\n  }\n}\ntemplate <typename T>\nvoid print(const vector<T> &x, int n) {\n  for (int i = 0; i < (n); ++i) {\n    cout << x[i];\n    if (i != n - 1)\n      cout << \" \";\n    else\n      cout << endl;\n  }\n}\ntemplate <typename T>\nvoid print(const vector<vector<T>> &x, int n, int m) {\n  for (int i = 0; i < (n); ++i) {\n    for (int j = 0; j < (m); ++j) {\n      cout << x[i][j] << \" \";\n    }\n    cout << endl;\n  }\n}\ntemplate <class T>\ninline bool chmax(T &a, T b) {\n  if (a < b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\ntemplate <class T>\ninline bool chmin(T &a, T b) {\n  if (a > b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\nvoid input_init() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n}\nbool judge(string s, string t) {\n  if (count(s.begin(), s.end(), '0')) {\n    int ind = 0;\n    for (int i = 0; i < (s.size()); ++i)\n      if (s[i] != '0') {\n        ind = i;\n        break;\n      }\n    char c = s[ind];\n    s.erase(s.begin() + ind);\n    s.insert(s.begin(), c);\n  }\n  return s == t;\n}\nint main(int argc, char const *argv[]) {\n  string s, t;\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  if (judge(s, t))\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 3;\nusing namespace std;\nint main() {\n  string str, str2;\n  int n = 0;\n  cin >> str;\n  cin >> str2;\n  sort(str.begin(), str.end());\n  if (str[0] == '0') {\n    for (int i = 1; i < str.length(); ++i) {\n      if (str[i] != '0') {\n        char temp;\n        temp = str[i];\n        str[i] = str[0];\n        str[0] = temp;\n        break;\n      }\n    }\n  }\n  for (int i = 0; i < str2.length(); ++i) {\n    if (str2[i] != '0') {\n      n = i;\n      break;\n    }\n  }\n  if (str == str2)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CF {\n\n\tvoid realSolve() {\n\t\tString s = in.next();\n\t\tString ans = in.next();\n\t\tchar[] res = new char[s.length()];\n\t\tint it = 0;\n\t\tboolean[] was = new boolean[s.length()];\n\t\tboolean f = false;\n\t\tfor (int id = 1; id < 10; id++) {\n\t\t\tfor (int i = 0; i < s.length(); i++)\n\t\t\t\tif (s.charAt(i) == ('0' + id))\n\t\t\t\t\tif (!f) {\n\t\t\t\t\t\tres[it++] = (char) ('0' + id);\n\t\t\t\t\t\tf = true;\n\t\t\t\t\t\twas[i] = true;\n\t\t\t\t\t}\n\t\t}\n\t\tfor (int id = 0; id < 10; id++)\n\t\t\tfor (int i = 0; i < s.length(); i++)\n\t\t\t\tif (s.charAt(i) == ('0' + id))\n\t\t\t\t\tif (!was[i])\n\t\t\t\t\t\tres[it++] = s.charAt(i);\n\t\tString ok = new String(res);\n\t\tif (ok.equals(ans)) {\n\t\t\tout.println(\"OK\");\n\t\t} else {\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n\n\tprivate class InputReader {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic InputReader(File f) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(f));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic InputReader(InputStream f) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(f));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\tString s;\n\t\t\t\ttry {\n\t\t\t\t\ts = br.readLine();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (s == null)\n\t\t\t\t\treturn null;\n\t\t\t\tst = new StringTokenizer(s);\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tboolean hasMoreElements() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\tString s;\n\t\t\t\ttry {\n\t\t\t\t\ts = br.readLine();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tst = new StringTokenizer(s);\n\t\t\t}\n\t\t\treturn st.hasMoreElements();\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n\n\tInputReader in;\n\tPrintWriter out;\n\n\tvoid solve() {\n\t\tin = new InputReader(new File(\"object.in\"));\n\t\ttry {\n\t\t\tout = new PrintWriter(new File(\"object.out\"));\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\trealSolve();\n\n\t\tout.close();\n\t}\n\n\tvoid solveIO() {\n\t\tin = new InputReader(System.in);\n\t\tout = new PrintWriter(System.out);\n\n\t\trealSolve();\n\n\t\tout.close();\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew CF().solveIO();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, j = 0, n, arr[10] = {0};\n  string m;\n  char t[15];\n  cin >> n >> m;\n  while (n >= 0) {\n    arr[n % 10]++;\n    n /= 10;\n    if (n == 0) break;\n  }\n  i = 1;\n  while (i < 10 && arr[i] == 0) i++;\n  if (i < 10) {\n    t[j] = (char)(i + 48);\n    j++;\n    arr[i]--;\n    while (arr[0]--) {\n      t[j] = '0';\n      j++;\n    }\n    while (i < 10) {\n      while (arr[i]--) {\n        t[j] = (char)(i + 48);\n        j++;\n      }\n      i++;\n    }\n  } else {\n    while (arr[0]--) {\n      t[j] = '0';\n      j++;\n    }\n  }\n  if (j == m.length()) {\n    int f = 0;\n    for (i = 0; i < j; i++) {\n      if (m[i] != t[i]) {\n        f++;\n        break;\n      }\n    }\n    if (f == 0)\n      cout << \"OK\\n\";\n    else\n      cout << \"WRONG_ANSWER\\n\";\n  } else\n    cout << \"WRONG_ANSWER\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  char a[12], m[12], c, r[12];\n  int i, j, count = 0;\n  gets(a);\n  gets(m);\n  for (i = 0; a[i + 1] != '\\0'; i++) {\n    for (j = i + 1; a[j] != '\\0'; j++) {\n      if (a[i] > a[j]) {\n        c = a[i];\n        a[i] = a[j];\n        a[j] = c;\n      }\n    }\n  }\n  for (i = 0; a[i] != '\\0'; i++) {\n    if (a[i] != 48) {\n      goto proceed;\n    }\n  }\n  if (strcmp(a, m) == 0) {\n    printf(\"OK\");\n  } else {\n    printf(\"WRONG_ANSWER\");\n  }\n  goto end;\nproceed:\n  r[0] = a[i];\n  for (j = 0; a[j] != '\\0'; j++) {\n    if (i == j) {\n      count++;\n    } else {\n      if (count == 0) {\n        r[j + 1] = a[j];\n      } else {\n        r[j] = a[j];\n      }\n    }\n  }\n  r[j] = '\\0';\n  if (strcmp(r, m) == 0) {\n    printf(\"OK\");\n  } else {\n    printf(\"WRONG_ANSWER\");\n  }\nend:\n  return (0);\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class CorrectSolution {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tchar[] s1 = sc.next().toCharArray();\n\t\tString s2 = sc.next();\n\t\tArrays.sort(s1);\n\t\tStringBuffer buf = new StringBuffer();\n\t\tString s3 = new String(s1);\n\t\tif(s1[0] == '0'){\n\t\t\tint i = 0;\n\t\t\twhile((i < s1.length) && (s1[i] == '0'))\n\t\t\t\ti++;\n\t\t\tif(i < s1.length)\n\t\t\t\tbuf.append(s1[i]);\n\t\t\tfor(int j = 0; j < i; j++)\n\t\t\t\tbuf.append(s1[j]);\n\t\t\tfor(int j = i + 1; j < s1.length; j++)\n\t\t\t\tbuf.append(s1[j]);\n\t\t\ts3 = buf.toString();\n\t\t}\n\t\tSystem.out.println(s2.equals(s3) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "a=input()\nb=input()\na=list(a)\na.sort()\n\nif a[0]==\"0\":\n    for i in range(1,len(a)):\n        if a[i]!=0:\n\n            a[0]=a[i]\n            a[i]=\"0\"\n            break\n    a=''.join(a)\n    if a==b:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\nelse:\n    a=''.join(a)\n    if a==b:\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input().strip()\nm = raw_input().strip()\n\nif n == '0' and m == '0':\n\tprint 'OK'\n\texit()\n\nif m[0] == '0':\n\tprint 'WRONG_ANSWER'\n\texit()\n\nfor digit in m:\n\tif digit not in n:\n\t\tprint 'WRONG_ANSWER'\n\t\texit()\n\nn_split = list(n)\nn_split.sort()\n\nif n_split[0] == '0':\n\tindex = next((i for i, x in enumerate(n_split) if x != '0'), None)\n\ttemp = n_split[index]\n\tn_split[index] = '0'\n\tn_split[0] = temp\n\nif ''.join(n_split) != m:\n\tprint 'WRONG_ANSWER'\nelse:\n\tprint 'OK'\n\n"
        },
        {
            "language": 3,
            "solution": "number = list(input())\nanswer = list(input())\nnumber.sort()\nif(len(number) == 1):\n\tprint(\"OK\") if number == answer else print(\"WRONG_ANSWER\")\nelse:\n\ti = 0\n\twhile i < len(number) and number[i] == \"0\": i+=1\n\n\ttest = [number[i]] + number[:i] + number [i+1:]\n\tprint(\"OK\") if test == answer else print(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing lli = unsigned long long int;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  string s1, s2;\n  cin >> s1 >> s2;\n  sort(s1.begin(), s1.end());\n  if (s1[0] != '0') {\n    if (s1 == s2)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  } else {\n    char k = s1[0];\n    for (int i = 0; i < s1.size(); i++) {\n      if (s1[i] != '0') {\n        s1[0] = s1[i];\n        s1[i] = k;\n        break;\n      }\n    }\n    if (s1 == s2)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  string n, m;\n  cin >> n >> m;\n  set<char> x;\n  for (char c : n) {\n    if (c != '0') x.emplace(c);\n  }\n  sort((n).begin(), (n).end());\n  string joop = \"\";\n  bool fl = true;\n  if (((int)(x).size())) {\n    joop += *x.begin();\n    fl = false;\n  }\n  for (char c : n) {\n    if (c == *x.begin() && !fl) {\n      fl = true;\n      continue;\n    }\n    joop += c;\n  }\n  if (joop == m) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main{\n    public static void main(String[] args){\n        Scanner ss=new Scanner(System.in);\n        StringBuffer a=new StringBuffer(ss.nextLine());\n        StringBuffer b=new StringBuffer(ss.nextLine());\n        int flag=0;\n        if(b.length()!=a.length()){\n            System.out.println(\"WRONG_ANSWER\");\n        }\n        else{\n        for(int i=1;i<a.length();i++){\n            flag=0;\n            for(int j=0;j<(a.length()-i);j++){\n                StringBuffer c=new StringBuffer(a);\n                if((a.charAt(j)-'0')>(a.charAt(j+1)-'0')){\n                    a.deleteCharAt(j);\n                    a.insert(j, c.charAt(j+1));\n                    a.deleteCharAt(j+1);\n                    a.insert(j+1, c.charAt(j));\n                    flag=1;\n                }\n            }\n            if(flag==0){\n                break;\n            }\n        }\n        StringBuffer c=new StringBuffer(a);\n        int fla=0;\n        if(a.charAt(0)=='0'&&a.length()>1){\n            for(int i=1;i<a.length();i++){\n                if(a.charAt(i)!='0'){\n                    fla=i;\n                    break;\n                }\n            }\n            a.deleteCharAt(0);\n            a.insert(0, c.charAt(fla));\n            a.deleteCharAt(fla);\n            a.insert(fla, '0');\n        }\n        int count=0;\n        for(int i=0;i<b.length();i++){\n            if(a.charAt(i)==b.charAt(i)){\n                count++;\n            }\n        }\n        if(count==b.length()){\n            System.out.println(\"OK\");\n        }\n        else{\n            System.out.println(\"WRONG_ANSWER\");\n        }\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Map;\nimport java.util.Scanner;\nimport java.util.TreeMap;\n\npublic class CodeForces {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tString p = in.next(), q = in.next();\n\t\tif (q.length() != p.length()) {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint n = Integer.parseInt(p), m = Integer.parseInt(q);\n\t\t\n\t\tif (n == 0) {\n\t\t\tSystem.out.println(m == 0 ? \"OK\" : \"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tTreeMap<Integer, Integer> digits = new TreeMap<>();\n\t\tint highestPowerOfTen = -1;\n\n\t\tfor (int i = 1000_000_000; i > 0; i /= 10) {\n\t\t\tint d = n / i;\n\t\t\tn -= d * i;\n\t\t\t\n\t\t\tif (d != 0 && highestPowerOfTen == -1) {\n\t\t\t\thighestPowerOfTen = i;\n\t\t\t}\n\n\t\t\tif (highestPowerOfTen != -1) {\n\t\t\t\tdigits.put(d, digits.getOrDefault(d, 0) + 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tint zeros = digits.getOrDefault(0, 0);\n\t\tdigits.remove(0);\n\t\tint my = highestPowerOfTen * digits.firstKey();\n\t\thighestPowerOfTen /= Math.pow(10, zeros + 1);\n\t\tdigits.put(digits.firstKey(), digits.firstEntry().getValue() -1);\n\t\t\n\t\tfor (Map.Entry<Integer, Integer> e : digits.entrySet()) {\n\t\t\tfor (int i = 0; i < e.getValue(); ++i) {\n\t\t\t\tmy += highestPowerOfTen * e.getKey();\n\t\t\t\thighestPowerOfTen /= 10;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(my == m ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 100000 + 5;\nconst int MAXn = 3005;\nconst int MAXi = 3;\nvector<char> a;\nbool res = true;\nint main() {\n  string b, c;\n  cin >> b >> c;\n  for (int i = 0; i < b.size(); i++) {\n    a.push_back(b[i]);\n  }\n  sort(a.begin(), a.end());\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] != '0') {\n      swap(a[i], a[0]);\n      break;\n    }\n  }\n  if (a.size() == c.size()) {\n    for (int i = 0; i < a.size(); i++) {\n      if (a[i] != c[i]) {\n        res = false;\n        break;\n      }\n    }\n  } else {\n    res = false;\n  }\n  if (res) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER \" << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=(input())\nans=(input())\nn1=str(n)\nn1=list(n1)\nif len(str(n))!=len(str(ans)):\n    print('WRONG_ANSWER')\nelif n==0:\n    print('OK' if n==ans else 'WRONG_ANSWER')\nelif '0' not in n1:\n    ans1=''.join(sorted(n1))\n    if (ans1)==ans:\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\nelse:\n    ans1=sorted(n1)\n    c=ans1.count('0')\n    ans1=[i for i in ans1 if i!='0']\n    for i in range(c):\n        ans1.insert(1,'0')\n    ans1=''.join(ans1)\n    if (ans1)==ans:\n        print('OK')\n    else:\n        print('WRONG_ANSWER')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[105], b[105], n0;\nstring n, m;\nvoid StringToInt(const string &s, int *c) {\n  for (int i = 0; i < s.size(); i++) c[i] = s[i] - '0';\n}\nint main() {\n  cin >> n >> m;\n  if (n.size() != m.size()) {\n    printf(\"WRONG_ANSWER\");\n    return 0;\n  }\n  StringToInt(n, a);\n  StringToInt(m, b);\n  sort(a, a + n.size());\n  for (int i = 0; i < n.size(); i++) {\n    if (a[i] != 0) {\n      int tmp = a[i];\n      a[i] = a[0];\n      a[0] = tmp;\n      break;\n    }\n  }\n  for (int i = 0; i < n.size(); i++) {\n    if (a[i] != b[i]) {\n      printf(\"WRONG_ANSWER\");\n      return 0;\n    }\n  }\n  printf(\"OK\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<long long> v, v1;\nvector<long long>::iterator it;\nvector<long long> d[30001];\nint main() {\n  string a, b;\n  long long c = 0, d = 0;\n  cin >> a;\n  cin >> b;\n  long long m = a.length();\n  long long n = b.length();\n  sort(a.begin(), a.end());\n  for (long long i = 0; i < a.length(); i++) {\n    if (a[i] != '0') {\n      swap(a[i], a[0]);\n      break;\n    }\n  }\n  if (a == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 1,
            "solution": "I=raw_input;x=I();y=I()\na=sorted(b for b in x if b!='0')\nprint['WRONG_ANSWER','OK'][a[:1]+x.count('0')*['0']+a[1:]==list(y)]\n"
        },
        {
            "language": 3,
            "solution": "import os\n\nimport sys\n\ndebug = True\n\nif debug and os.path.exists(\"input.in\"):\n    input = open(\"input.in\", \"r\").readline\nelse:\n    debug = False\n    input = sys.stdin.readline\n\n\ndef inp():\n    return (int(input()))\n\n\ndef inlt():\n    return (list(map(int, input().split())))\n\n\ndef insr():\n    s = input()\n    return s[:len(s) - 1]  # Remove line char from end\n\n\ndef invr():\n    return (map(int, input().split()))\n\n\ntest_count = 1\nif debug:\n    test_count = inp()\nfor t in range(test_count):\n    if debug:\n        print(\"Test Case #\", t + 1)\n    # Start code here\n    a = list(insr())\n    b = list(insr())\n    a.sort()\n    zeros = 0\n    for i in range(len(a)):\n        if a[i] != \"0\":\n            break\n        zeros += 1\n    if zeros == len(a):\n        a = [\"0\"]\n    else:\n        if zeros > 0:\n            a[0] = a[zeros]\n            a[zeros] = 0\n    if \"\".join(map(str, a)) == \"\".join(map(str, b)):\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "\timport java.io.BufferedReader;\n\timport java.io.IOException;\n\timport java.io.InputStreamReader;\n//\timport java.\n\timport java.util.*;\n\t\n\tpublic  class t\n\t{\n\t\tstatic class FastReader\n\t\t{\n\t\t\tBufferedReader br;\n\t\t\tStringTokenizer st;\n\t\t\tpublic FastReader(){\n\t\t\t\tbr = new BufferedReader(new\n\t\t\t\tInputStreamReader(System.in));\n\t\t\t}\n\t\t\tString next(){\n\t\t\t\twhile (st == null || !st.hasMoreElements()){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t\t}\n\t\t\t\t\tcatch (IOException e){\n\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn st.nextToken();\n\t\t\t}\n\t\t\tint nextInt(){\n\t\t\t\treturn Integer.parseInt(next());\n\t\t\t}\n\t\t\tlong nextLong(){\n\t\t\t\treturn Long.parseLong(next());\n\t\t\t}\n\t\t\tdouble nextDouble(){\n\t\t\t\treturn Double.parseDouble(next());\n\t\t\t}\n\t\t\tString nextLine()\n\t\t\t{\n\t\t\t\tString str = \"\";\n\t\t\t\ttry{\n\t\t\t\t\tstr = br.readLine();\n\t\t\t\t}\n\t\t\t\tcatch (IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static void mul(int a,int b,int re) {\n\t\t\tif(b>0) {\n\t\t\t\tre+=a;\n\t\t\tb--;\n\t\t\tif(b==0)\n\t\t\t\tSystem.out.println(re);\n\t\t\tmul(a,b,re);\n\t\t}\n\t}\n\t\t\n\t\tpublic static void merge(int[] a,int l,int m,int u) {\n\t\t\tint n1 = m-l+1;\n\t\t\tint n2 = u-m;\n\t\t\t\n\t\t\tint[] left = new int[n1];\n\t\t\tint []right = new int[n2];\n\t\t\t\n\t\t\tint i,j,k;\n\t\t\tfor(i=0;i<n1;i++)\n\t\t\t\tleft[i]=a[i+l];\n\t\t\tfor(i=0;i<n2;i++)\n\t\t\t\tright[i]=a[i+m+1];\n\t\t\t\n\t\t\ti=0;\n\t\t\tj=0;\n\t\t\tk=l;\n\t\t\twhile(i<n1&&j<n2) {\n\t\t\t\tif(left[i]<right[j]) {\n\t\t\t\t\ta[k]=left[i];\n\t\t\t\t\ti++;\n\t\t\t\t}else {\n\t\t\t\t\ta[k]=right[j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t\n\t\t\twhile(i<n1) {\n\t\t\t\ta[k]=left[i];\n\t\t\t\ti++;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t\n\t\t\twhile(j<n2) {\n\t\t\t\ta[k]=right[j];\n\t\t\t\tk++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic static void sort(int[] a,int l,int u) {\n\t\t\tif(l<u) {\n\t\t\t\tint m = l+u-1;\n\t\t\t\tm/=2;\n\t\t\t\t\n\t\t\t\tsort(a,l,m);\n\t\t\t\tsort(a,m+1,u);\n\t\t\t\t\n\t\t\t\tmerge(a,l,m,u);\n\t\t\t}\n\t\t}\n\t\n\t\t\n\tpublic static void main(String[] args){\n\t\tFastReader in=new FastReader();\n\n\t\t\n\t\tint n = in.nextInt();\n\t\tString sm = in.nextLine();\n\t\tint[] ar = new int[10];\n\t\tint i = 0;\n\t\tint cn = n;\n\t\tint min = cn;\n\t\tif(n==0)\tar[0]=1;\n\t\tint d = 0;\n\t\twhile(cn>0) {\n\t\t\tint rem = cn%10;\n\t\t\tar[rem]++;\n\t\t\tmin = Math.min(min, rem);\n\t\t\tcn/=10;\n\t\t\td++;\n\t\t}\n\t\tString s= \"\";\n//\t\tSystem.out.println(min+\" \"+d);\n\t\tchar[] cc = new char[d];\n\t\tint jb = -1;\n\t\tint asg = -1;\n\t\tfor(i=min+1;i<10;i++)\n\t\t\tif(ar[i]>0) {\n\t\t\t\tjb=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(min!=0) {\n\n\t\t\tint k = 0;\n\t\t\tfor(i=min;i<10;i++) {\n\t\t\t\tint num = ar[i];\n\t\t\t\tchar ascii = (char) (i+'0');\n\t\t\t\twhile(num>0) {\n\t\t\t\t\tcc[k]=(char)ascii;\n\t\t\t\t\tk++;\n\t\t\t\t\tnum--;\n//\t\t\t\t\tSystem.out.println(cc[k-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\ts = new String(cc);\n//\t\t\tasg = Integer.parseInt(s);\n\t\t}else {\n\t\t\tfor(i=1;i<10;i++) {\n\t\t\t\tif(ar[i]!=0) {\n\t\t\t\t\ts+=(char)(i+'0');\n\t\t\t\t\tar[i]--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tSystem.out.println(ar[0]);\n\t\t\twhile(ar[0]>0) {\n\t\t\t\ts+='0';\n\t\t\t\tar[0]--;\n\t\t\t}\n\t\t\tfor(i=0;i<10;i++) {\n\t\t\t\tint nu =ar[i];\n\t\t\t\twhile(nu>0) {\n\t\t\t\t\ts+=(char)(i+'0');\n\t\t\t\t\tnu--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n//\t\tSystem.out.println(s+\" \"+ sm);\n\t\tSystem.out.println(s.matches(sm)?\"OK\":\"WRONG_ANSWER\");\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[10];\nstring s1, s2, s3;\nint main() {\n  cin >> s1 >> s2;\n  int i, len = s1.length();\n  memset(cnt, 0, sizeof(cnt));\n  for (i = 0; i < len; i++) {\n    cnt[s1[i] - '0']++;\n  }\n  s3 = \"\";\n  for (i = 1; i <= 9; i++) {\n    if (cnt[i]) {\n      break;\n    }\n  }\n  if (i == 10) {\n    s3 = \"0\";\n  } else {\n    s3 += char(i + '0');\n    cnt[i]--;\n    for (i = 0; i <= 9; i++) {\n      while (cnt[i]--) {\n        s3 += char(i + '0');\n      }\n    }\n  }\n  if (s3 == s2) {\n    puts(\"OK\");\n  } else\n    puts(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m = int(input()), str(input())\na = []\nx = 0\nfirst = True\nwhile n or first:\n    d = n % 10\n    if d == 0:\n        x += 1\n    else:\n        a.append(d)\n    n //= 10\n    first = False\na.sort()\nif len(a) > 1:\n    a = [a[0]] + [0] * x + a[1:]\nelif len(a) == 1:\n    a = [a[0]] + [0] * x\nelse:\n    a = [0] * x\nif ''.join(map(str, a)) == m:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\n\npublic class B {\n\n  void solve() throws IOException {\n    String orig = br.readLine().trim();\n    String valera = br.readLine().trim();\n\n    if (orig.length() != valera.length()) {\n      out.print(\"WRONG_ANSWER\");\n      return;\n    }\n\n    if (orig.equals(\"0\")) {\n      if (valera.equals(\"0\")) {\n        out.print(\"OK\");\n      } else {\n        out.print(\"WRONG_ANSWER\");\n      }\n      return;\n    }\n\n    int[] valNum = new int[orig.length()];\n\n    int[] nums = new int[10];\n    int min = 10;\n    for (int i = 0; i < orig.length(); i++) {\n      int num = Character.digit(orig.charAt(i), 10);\n      nums[num]++;\n      if (num != 0 && num < min) {\n        min = num;\n      }\n    }\n\n    valNum[0] = min;\n    nums[min]--;\n    int k = 1;\n    for (int i = 0; i <= 9; i++) {\n      while (nums[i] > 0) {\n        valNum[k] = i;\n        nums[i]--;\n        k++;\n      }\n    }\n\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < orig.length(); i++) {\n      sb.append(valNum[i]);\n    }\n    if (valera.equals(sb.toString())) {\n      out.print(\"OK\");\n    } else {\n      out.print(\"WRONG_ANSWER\");\n    }\n  }\n\n//////////////////////////////////////////////////////////////////////////\n\n  StreamTokenizer in;\n  BufferedReader br;\n  PrintWriter out;\n\n  public static void main(String[] args) throws IOException {\n    new B().run();\n  }\n\n  void run() throws IOException {\n    br = new BufferedReader(new InputStreamReader(System.in));\n    in = new StreamTokenizer(br);\n    out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\n    solve();\n    out.flush();\n  }\n\n  int nextInt() throws IOException {\n    in.nextToken();\n    return (int) in.nval;\n  }\n\n  double nextDouble() throws IOException {\n    in.nextToken();\n    return in.nval;\n  }\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author nasko\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n\n        String n = in.nextLine();\n        String bob = in.nextLine();\n        char[] ch = (n+\"\").toCharArray();\n        Arrays.sort(ch);\n        if(ch[0] == '0') {\n            for(int i = 1; i < ch.length; ++i) {\n                if(ch[i] != '0') {\n                    char temp = ch[i];\n                    ch[i] = ch[0];\n                    ch[0] = temp;\n                    break;\n                }\n            }\n        }\n        int ans = Integer.parseInt(new String(ch));\n        int ibob = Integer.parseInt(bob);\n        if(ans == ibob && (n+\"\").length() == (bob+\"\").length()) {\n            out.println(\"OK\");\n        } else {\n            out.println(\"WRONG_ANSWER\");\n        }\n\n    }\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n\n    public String nextLine() {\n        String s = null;\n        try {\n            s = reader.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return s;\n    }\n\n    }\n\n"
        },
        {
            "language": 1,
            "solution": "def find_lowest_not_zero(digits):\n    minimal = 10\n    min_pos = -1\n    for i in xrange(len(digits)):\n        curr = digits[i]\n        if curr != 0 and curr < minimal:\n            minimal = curr\n            min_pos = i\n\n    if min_pos == -1:\n        raise Exception(\"lowest not zero not found\")\n\n    return (minimal, min_pos)\n\ndef list_to_num(l):\n    s = ''.join(map(str, l))\n    return int(s)\n\nnum = int(raw_input())\ndigits = [int(d) for d in str(num)]\n\n\ntry:\n    (lnz, lnz_pos) = find_lowest_not_zero(digits)\n\n    digits.pop(lnz_pos)\n    final_rightside = digits\n\n\n    final_rightside.sort()\n    final = [lnz]\n\n    for v in final_rightside: final.append(v)\n    final = list_to_num(final)\n\nexcept Exception as e:\n    final = num\n\nif raw_input() == str(final):\n    print 'OK'\nelse: print 'WRONG_ANSWER'\n\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\nl = sorted(list(n), key = int)\nm1 = \"\"\nfor i in l:\n    if i != \"0\":\n        m1 = i\n        l.remove(i)\n        break\nfor i in l:\n    m1 += i\nif m == m1:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n  \t\t    \t\t\t  \t\t \t  \t\t\t    \t \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s1, s2;\nint main() {\n  cin >> s1 >> s2;\n  sort(s1.begin(), s1.end());\n  if (s1[0] == '0') {\n    for (int i = 1; i < s1.size(); i++) {\n      if (s1[i] != '0') {\n        swap(s1[0], s1[i]);\n        break;\n      }\n    }\n  }\n  if (s2 == s1)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "ans = ''\nn,m = sorted(raw_input()),raw_input()\n\nfor x in xrange(len(n)):\n    if n[x] != '0':\n        ans += n.pop(x)\n        break\n\nprint [\"WRONG_ANSWER\",\"OK\"][m == ans + ''.join(n)]"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string S;\n  cin >> S;\n  int N = (int)S.length();\n  string T;\n  cin >> T;\n  int M = (int)S.length();\n  if (S == \"0\") {\n    if (T == \"0\")\n      cout << \"OK\\n\";\n    else\n      cout << \"WRONG_ANSWER\\n\";\n    return 0;\n  }\n  if (N != M) return cout << \"WRONG_ANSWER\\n\", 0;\n  string W;\n  int p;\n  for (int i = 0; i < N; ++i)\n    for (int j = 0; j < N; ++j)\n      if (S[i] < S[j]) swap(S[i], S[j]);\n  for (int i = 0; i < N; ++i)\n    if (S[i] > '0') {\n      p = i;\n      break;\n    }\n  W = S[p];\n  for (int i = 0; i < N; ++i)\n    if (i != p) W += S[i];\n  if (W == T)\n    cout << \"OK\\n\";\n  else\n    cout << \"WRONG_ANSWER\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class CorrectSolution {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String n = sc.nextLine();\n        String m = sc.nextLine();\n        System.out.println(getVerdict(n, m));\n        sc.close();\n    }\n\n    static String getVerdict(String n, String m) {\n        char[] x = n.toCharArray();\n        char[] y = m.toCharArray();\n        Arrays.sort(x);\n        Arrays.sort(y);\n        if (areIdentical(x, y)) {\n            if (y[0] == '0' && y.length > 1) {\n                for (int i = 1;;i++) {\n                    if (y[i] > '0') {\n                        y[0] = y[i];\n                        y[i] = '0';\n                        break;\n                    }\n                }\n            }\n            return m.equals(new String(y)) ? \"OK\" : \"WRONG_ANSWER\";\n        } else {\n            return \"WRONG_ANSWER\";\n        }\n    }\n\n    static boolean areIdentical(char[] x, char[] y) {\n        if (x.length != y.length) {\n            return false;\n        }\n        for (int i = 0; i < x.length; i++) {\n            if (x[i] != y[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class b12 {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\t\t\n\t\tint n = sc.nextInt();\n\t\tString ms = sc.next();\n\t\tsc.close();\n\t\tint m;\n\t\tif (ms.charAt(0)=='0' && !ms.equals(\"0\")) {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t} else {\n\t\t    m=Integer.parseInt(ms);\t\n\t\t}\n\t\tint[] d = new int[10];\n\t\tboolean nonZeroFund =false;\n\t\tfor(int i=8; i>=0; i--) {\n\t\t\tint v=(n/(int)(Math.pow(10, i)))%10;\n\t\t\tif (v>0) {\n\t\t\t\tnonZeroFund=true;\n\t\t\t}\n\t\t\tif (v>0 || nonZeroFund) {\n\t\t\t\td[v]+=1;\n\t\t\t}\n\t\t}\n\t\tint i=1;\n\t\tint mm=0;\n\t\tboolean zeroStarted=false;\n\t\tdo {\t\t\t\n\t\t\tif (d[i]>0) {\t\t\t\n\t\t\t\tmm=mm*10+i;\n\t\t\t\td[i]-=1;\n\t\t\t\tif(!zeroStarted) {\n\t\t\t\t\ti=0;\n\t\t\t\t\tzeroStarted=true;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\ti+=1;\t\t\t\t\n\t\t\t}\n\t\t} while (i<=9);\n\t\tif (mm==m) {\n\t\t\tSystem.out.println(\"OK\");\n\t\t} else {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\t\t\t\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, d;\n  cin >> s >> d;\n  sort(s.begin(), s.end());\n  if (s[0] == '0') {\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] != '0') {\n        swap(s[0], s[i]);\n        break;\n      }\n    }\n  }\n  if (d == s)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comparator_2(pair<int, int>& a, pair<int, int>& b) {\n  return (a.second <= b.second);\n}\nbool comparator_1(pair<int, int>& a, pair<int, int>& b) {\n  return (a.first <= b.first);\n}\nint main() {\n  std::ios::sync_with_stdio(false);\n  cin.tie(0);\n  int t = 1;\n  while (t--) {\n    string n, m;\n    cin >> n >> m;\n    int arr[10] = {0};\n    for (int i = 0; i < n.size(); i++) arr[n[i] - '0']++;\n    string result;\n    for (int i = 0; i < 10; i++)\n      while (arr[i]--) result += ('0' + i);\n    for (int i = 0; i < result.size(); i++) {\n      if (result[i] != '0') {\n        swap(result[i], result[0]);\n        break;\n      }\n    }\n    if (result == m)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  string s;\n  cin >> s;\n  for (int i = 0; i < (s.size()); i++) a[s[i] - '0']++;\n  s.clear();\n  int j;\n  for (j = 1; j < 10; j++) {\n    if (a[j]) {\n      s += (char)(j + '0');\n      a[j]--;\n      break;\n    }\n  }\n  for (int i = 0; i < (a[0]); i++) s += '0';\n  for (j; j < 10; j++)\n    for (int i = 0; i < (a[j]); i++) s += (char)(j + '0');\n  string ans;\n  cin >> ans;\n  if (ans == s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int i, j, l, swap, count = 0;\n  char a[12], b[12];\n  gets(a);\n  gets(b);\n  l = strlen(a);\n  for (i = 0; i < l - 1; i++) {\n    for (j = 0; j < l - i - 1; j++) {\n      if (a[j] > a[j + 1]) {\n        swap = a[j];\n        a[j] = a[j + 1];\n        a[j + 1] = swap;\n      }\n    }\n  }\n  if (l > 1) {\n    for (i = 0; i < l; i++) {\n      if (a[i] == '0')\n        count++;\n      else\n        break;\n    }\n    if (count > 0) {\n      a[0] = a[i];\n      for (j = 1; j <= i; j++) {\n        a[j] = '0';\n      }\n    }\n  }\n  if (strcmp(a, b) == 0)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  (ios_base::sync_with_stdio(false), cin.tie(NULL));\n  ;\n  string a, b;\n  cin >> a >> b;\n  int ara[50], res[50], cnt = 0;\n  int m = a.size(), n = b.size();\n  if (m != n)\n    printf(\"WRONG_ANSWER\\n\");\n  else {\n    for (int i = 0; i < n; i++) {\n      ara[i] = a[i] - 48;\n      res[i] = b[i] - 48;\n      if (res[i] == 0) cnt++;\n    }\n    sort(ara, ara + n);\n    int i = 0;\n    if (ara[0] == 0) {\n      while (ara[i] == 0) {\n        i++;\n      }\n      if (i == n) {\n        if (i == cnt) {\n          printf(\"OK\\n\");\n          return 0;\n        } else {\n          printf(\"WRONG_ANSWER\\n\");\n          return 0;\n        }\n      } else {\n        ara[0] = ara[i];\n        ara[i] = 0;\n      }\n    }\n    for (i = 0; i < n; i++) {\n      if (ara[i] != res[i]) {\n        printf(\"WRONG_ANSWER\\n\");\n        return 0;\n      }\n    }\n    printf(\"OK\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "def takeDigs(v):\n    answer = []\n    for j in range(len(v)):\n        answer += [ ord(v[j]) - ord('0') ]\n    return answer\n\nn = takeDigs(raw_input())\nlprint = 0\nfor i in range(len(n)):\n    if (n[i] != 0):\n        n[lprint] = n[i]\n        lprint += 1\nzs = [0] * (len(n) - lprint)\nn = sorted( n[:lprint] )\nans = n[:1] + zs + n[1:]\n\nm = takeDigs(raw_input())\n\nprint(\"OK\" if ans == m else \"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a, b, c;\nint main() {\n  cin >> a >> b;\n  for (int j = 0; j < (int)a.size(); j++) {\n    char s = '~';\n    int k = -1;\n    for (int i = 0; i < (int)a.size(); i++) {\n      if (j == 0 && a.size() != 1) {\n        if (a[i] != '0' && a[i] != '#') {\n          if (a[i] < s) s = a[i], k = i;\n        }\n      } else {\n        if (a[i] < s && a[i] != '#') s = a[i], k = i;\n      }\n    }\n    c = c + s;\n    a[k] = '#';\n  }\n  if (c == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char s[12], s2[12];\n  scanf(\"%s %s\", s, s2);\n  sort(s, s + strlen(s));\n  if (s[0] == '0') {\n    for (int i = 1; i < strlen(s); i++)\n      if (s[i] != '0') {\n        s[0] = s[i];\n        s[i] = '0';\n        break;\n      }\n  }\n  if (strcmp(s, s2) == 0) {\n    cout << \"OK\";\n  } else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b, c;\n  cin >> a >> c;\n  bool flag = true;\n  sort(a.begin(), a.end());\n  if (a[0] != '0')\n    (a == c) ? flag = 1 : flag = 0;\n  else {\n    if (a.length() == 1 && c.length() == 1) {\n      (a[0] == c[0]) ? flag = 1 : flag = 0;\n    } else\n      (c[0] == a[1] && a[0] == c[1]) ? flag = 1 : flag = 0;\n    for (int i = 2; i < a.length() && flag; i++)\n      (a[i] == c[i]) ? flag = 1 : flag = 0;\n  }\n  (flag) ? cout << \"OK\" << endl : cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\n/**\n * Codeforces 12B - Correct Solution?\n * Created by Darren on 14-10-23.\n * O(log(n)*log(log(n))) time and O(log(n)) space.\n *\n * Tag: implementation\n */\npublic class B {\n    Reader in = new Reader(System.in);\n    PrintWriter out = new PrintWriter(System.out, true);\n\n    public static void main(String[] args) throws IOException {\n        new B().run();\n    }\n\n    void run() throws IOException {\n        char[] alice = in.readLine().toCharArray();\n        char[] bob = in.readLine().toCharArray();\n\n        if (alice.length != bob.length) {\n            out.println(\"WRONG_ANSWER\");\n            return;\n        } else if (alice.length == 1) {\n            if (alice[0] == bob[0])\n                out.println(\"OK\");\n            else\n                out.println(\"WRONG_ANSWER\");\n            return;\n        } else {\n            // Handle this case in the following\n        }\n\n        Arrays.sort(alice);\n\n        if (alice[0] == '0') {\n            int i = 1;\n            for (; i < alice.length && alice[i] == '0'; i++) ;\n            alice[0] = alice[i];\n            alice[i] = '0';\n        }\n\n        for (int i = 0; i < alice.length; i++) {\n            if (alice[i] != bob[i]) {\n                out.println(\"WRONG_ANSWER\");\n                return;\n            }\n        }\n        out.println(\"OK\");\n    }\n\n    static class Reader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        public Reader(InputStream input) {\n            reader = new BufferedReader(new InputStreamReader(input));\n            tokenizer = new StringTokenizer(\"\");\n        }\n\n        /** get next word */\n        String nextToken() throws IOException {\n            while ( ! tokenizer.hasMoreTokens() ) {\n                //TODO add check for eof if necessary\n                tokenizer = new StringTokenizer( reader.readLine() );\n            }\n            return tokenizer.nextToken();\n        }\n\n        String readLine() throws IOException {\n            return reader.readLine();\n        }\n\n        int nextInt() throws IOException {\n            return Integer.parseInt( nextToken() );\n        }\n\n        long nextLong() throws IOException {\n            return Long.parseLong( nextToken() );\n        }\n\n        double nextDouble() throws IOException {\n            return Double.parseDouble( nextToken() );\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "s=input()\nz=input()\na=[0]*10\nfor c in s:\n    a[int(c)]+=1\nans=\"\"\nfor i in range(1,10):\n    if a[i]>0:\n        a[i]-=1\n        ans=str(i)\n        break\nfor i in range(0,10):\n    for j in range(a[i]):\n        ans+=str(i)\nif ans==z:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nOne cold winter evening Alice and her older brother Bob was sitting at home near the fireplace and giving each other interesting problems to solve. When it was Alice's turn, she told the number n to Bob and said:\n\n\u2014Shuffle the digits in this number in order to obtain the smallest possible number without leading zeroes.\n\n\u2014No problem! \u2014 said Bob and immediately gave her an answer.\n\nAlice said a random number, so she doesn't know whether Bob's answer is correct. Help her to find this out, because impatient brother is waiting for the verdict.\n\nInput\nThe first line contains one integer n (0\u2009\u2264\u2009n\u2009\u2264\u2009109) without leading zeroes. The second lines contains one integer m (0\u2009\u2264\u2009m\u2009\u2264\u2009109) \u2014 Bob's answer, possibly with leading zeroes.\n\nOutput\nPrint OK if Bob's answer is correct and WRONG_ANSWER otherwise.\n\"\"\"\n\nq = list(map(int, list(input())))\nq_set = set(q)\n\na = input()\n\nif len(q) == 1:\n    print(\"OK\" if (int(a) == q[0] and len(a) == 1) else \"WRONG_ANSWER\")\n\nelse:\n    answer  = ''\n\n    has_zero = 0 in q_set\n    if has_zero:\n        q_set.remove(0)\n\n    min_elm = min(q_set)\n    q_set.remove(min_elm)\n    answer += str(min_elm) + ('0' * q.count(0) if has_zero else '') + str(min_elm)* (q.count(min_elm) - 1)\n\n    while q_set:\n        min_elm = min(q_set)\n        q_set.remove(min_elm)\n        answer += str(min_elm)*q.count(min_elm)\n\n    print(\"OK\" if a == answer else \"WRONG_ANSWER\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 2 * 1e3 + 7;\nconst long double pi = 3.14159265359;\nconst int INF = 1e20 + 7;\nconst double eps = 1e-9;\nconst int xi[4] = {-1, 0, +1, 0};\nconst int yj[4] = {0, +1, 0, -1};\nconst int xxi[4] = {+1, 0, -1, 0};\nconst int yyj[4] = {0, -1, 0, +1};\nstring s1, s2;\nint x;\nint main() {\n  ios_base::sync_with_stdio();\n  cin.tie(0);\n  cout.tie(0);\n  srand(time(0));\n  ;\n  cin >> s1 >> s2;\n  string str = s1;\n  sort(str.begin(), str.end());\n  for (int i = 0; i < str.size(); i++) {\n    if (str[i] != '0') {\n      x = i;\n      break;\n    }\n  }\n  if (str[0] == '0') {\n    swap(str[0], str[x]);\n  }\n  if (str == s2) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  char m[11], digit[10] = {'0'}, digitcount(0);\n  scanf(\"%d%s\", &n, &m);\n  while (n != 0) {\n    digit[digitcount++] = '0' + n % 10;\n    n /= 10;\n  }\n  sort(digit, digit + digitcount);\n  if (digit[0] == '0') {\n    for (int i = 1; i < digitcount; ++i) {\n      if (digit[i] != '0') {\n        digit[0] = digit[i];\n        digit[i] = '0';\n        break;\n      }\n    }\n  }\n  printf(strcmp(m, digit) == 0 ? \"OK\\n\" : \"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main12B {\n\n    private FastScanner in;\n    private PrintWriter out;\n\n    public void solve() throws IOException {\n        byte[] number = in.next().getBytes();\n        byte[] answer = in.next().getBytes();\n        if(number.length != answer.length){\n            out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        if(number.length == 1){\n            if(number[0] == answer[0]){\n                out.println(\"OK\");\n            }\n            else{\n                out.println(\"WRONG_ANSWER\");\n            }\n            return;\n        }\n\n        Arrays.sort(number);\n        if(number[0] == '0'){\n            int firstNotZero = -1;\n            for(int i = 1; i < number.length; i++){\n                if(number[i] != '0'){\n                    firstNotZero = i;\n                    break;\n                }\n            }\n            byte first = number[firstNotZero];\n            System.arraycopy(number, 0, number, 1, firstNotZero);\n            number[0] = first;\n        }\n\n        if(Arrays.equals(number, answer)){\n            out.println(\"OK\");\n        }\n        else{\n            out.println(\"WRONG_ANSWER\");\n        }\n    }\n\n    public void run() {\n        try {\n            in = new FastScanner(System.in);\n            out = new PrintWriter(System.out);\n            solve();\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    class FastScanner {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        FastScanner(InputStream is) {\n            br = new BufferedReader(new InputStreamReader(is));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    public static void main(String[] arg) {\n        new Main12B().run();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=input()\nm=input()\nn=''.join(sorted(n))\nfor i in range(len(n)):\n    if n[i]!='0':\n        n=n[i]+n[:i]+n[i+1:]\n        break\nprint(['OK','WRONG_ANSWER'][m!=n])\n"
        },
        {
            "language": 3,
            "solution": "num1 = [int(i) for i in list(input())]\nnum2 = [int(i) for i in list(input())]\n\nif set(num1) != set(num2) or len(num1) != len(num2): print(\"WRONG_ANSWER\")\nelse:\n    num1.sort()\n    for i in range(len(num1)):\n        if num1[i] != 0:\n            num1[0], num1[i] = num1[i], num1[0]\n            break\n    if num1 == num2: print(\"OK\")\n    else: print(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v,\n    w, x, y, z, sum = 0, total = 0, res = 0, ans = 0;\nint main() {\n  string ar, br;\n  vector<long long int> cr;\n  cin >> ar >> br;\n  for (long long int i = 0; i < ar.size(); i++) cr.push_back(ar[i] - '0');\n  sort(cr.begin(), cr.end());\n  for (long long int i = 0; i < cr.size(); i++) {\n    if (cr[i] > 0) {\n      swap(cr[i], cr[0]);\n      break;\n    }\n  }\n  if (cr.size() != br.size()) {\n    cout << \"WRONG_ANSWER\\n\";\n    return 0;\n  }\n  for (long long int i = 0; i < cr.size(); i++) {\n    if (cr[i] != (br[i] - '0')) {\n      cout << \"WRONG_ANSWER\\n\";\n      return 0;\n    }\n  }\n  cout << \"OK\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:1000217728\")\nusing namespace std;\nint main() {\n  string input, output, ans;\n  getline(cin, input);\n  getline(cin, output);\n  ans = input;\n  sort((ans).begin(), (ans).end());\n  int pos(0);\n  while (pos < ans.length() && ans[pos] == '0') ++pos;\n  if (pos != ans.length()) swap(ans[pos], ans[0]);\n  if (output == ans)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "s=sorted(raw_input())\nfor i in range(len(s)):\n    if s[i]!='0':\n        s[i],s[0]=s[0],s[i]\n        break;\nprint('WRONG_ANSWER','OK')[''.join(s)==raw_input()]"
        },
        {
            "language": 1,
            "solution": "a=raw_input()\nb=raw_input()\nif (len(a)==1):\n    if (len(a)==len(b) and int(a)==int(b)):\n        print \"OK\"\n    else:\n        print \"WRONG_ANSWER\"\n    exit(0)\nif int(b[0])==0 :\n    print \"WRONG_ANSWER\"\n    exit(0)\na=[int(i) for i in a]\na.sort()\nif a[0]==0:\n    i=0\n    while a[i+1]==0:\n        a[i+1]=a[i]\n        i+=1\n        if i>=len(a)-1:break\n    a[i+1],a[0]=a[0],a[i+1]\ns=''\nfor i in a:\n    s=s+str(i)\nif int(b)==int(s):\n    print \"OK\"\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*; \n public class A{\n\nstatic FastReader scan=new FastReader();\n public static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\n  static LinkedList<Edge>edges[];\n  static boolean stdin = true;\n    static String filein = \"input\";\n    static String fileout = \"output\";\nstatic int dx[] = { -1, 0, 1, 0 };\nstatic int dy[] = { 0, 1, 0, -1 };\nint dx_8[]={1,1,1,0,0,-1,-1,-1};\nint dy_8[]={-1,0,1,-1,1,-1,0,1};\nstatic char sts[]={'U','R','D','L'};\nstatic boolean prime[];\nstatic long LCM(long a,long b){\n    return (Math.abs(a*b))/gcd(a,b);\n   }\n   static long gcd(long a, long b) {\n    if(a!=0&&b!=0)\n        while((a%=b)!=0&&(b%=a)!=0);\n    return a^b;\n}\nstatic int countSetBits(int n) \n    { \n        int count = 0; \n        while (n > 0) { \n            count += n & 1; \n            n >>= 1; \n        } \n        return count; \n    } \n static void sieve(long n) \n    { \n        \n        prime = new boolean[(int)n+1]; \n        for(int i=0;i<n;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=n; p++) \n        { \n           \n            if(prime[p] == true) \n            { \n                \n                for(int i = p*p; i <= n; i += p) \n                    prime[i] = false; \n            } \n        } \n    }  \n  \n \n \n           static boolean isprime(long x)\n           {\n            for(long i=2;i*i<=x;i++)\n                if(x%i==0)\n                    return false;\n                return true;\n           }\n           static int perm=0,FOR=0;\n           \n     \n\nstatic boolean flag=false;\nstatic int len=100000000;\n\nstatic ArrayList<Pair>inters=new ArrayList<Pair>();\n\n\n\n\n\nstatic StringBuilder sb;\nstatic void swap(int i,int j,StringBuilder st)\n{\n    char tmp=st.charAt(i);\n    st.setCharAt(i,st.charAt(j));\n    st.setCharAt(j,tmp);\n}\n\n\n private static int next(int[] arr, int target)  \n    {  \n        int start = 0, end = arr.length - 1;  \n    \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;  \n    \n            // Move to right side if target is  \n            // greater.  \n            if(arr[mid]==target)\n                return mid;\n            if (arr[mid] <target) {  \n                start = mid + 1;  \n            }  \n    \n            // Move left side.  \n            else {  \n                ans = mid;  \n                end = mid - 1;  \n            }  \n        }  \n        return ans;  \n    }  \n//static boolean vis[][];\n    static long solve(int h,long n,int cur)\n    {\n        if(h==0)\n            return 0;\n        long half=1L<<(h-1);\n        if(n<=half)\n        {\n            if((cur^1)==0)\n                return 1+solve(h-1,n,0);\n            else \n                return 2*half+solve(h-1,n,0);\n        }\n        else \n        {\n              if((cur^1)==0)\n             return 2*half+solve(h-1,n-half,1);\n            else \n                return 1+solve(h-1,n-half,1);\n        }\n    }\nstatic int dist[][];\npublic static String removeLeadingZeroes(String str) {\n      String strPattern = \"^0+(?!$)\";\n      str = str.replaceAll(strPattern, \"\");\n      return str;\n   }\n\n    static String gcd(String str1, String str2)\n    {\n        // If str1 length is less than\n        // that of str2 then recur\n        // with gcd(str2, str1)\n        if (str1.length() < str2.length()) {\n            return gcd(str2, str1);\n        }\n \n        // If str1 is not the\n        // concatenation of str2\n        else if (!str1.startsWith(str2)) {\n            return \"\";\n        }\n \n        else if (str2.isEmpty()) {\n \n            // GCD string is found\n            return str1;\n        }\n        else {\n \n            // Cut off the common prefix\n            // part of str1 & then recur\n            return gcd(str1.substring(str2.length()),\n                       str2);\n        }\n    }\n   static ArrayList<Long>luckies=new ArrayList<Long>();\n  static int n;\n  static long cnt=0;\nstatic void d(long x)\n{\n    if(String.valueOf(x).length()>n)\n        return;\n    cnt++;\n    luckies.add(x);\n     d(x*10+7);\n     d(x*10+8);\n}\n\npublic static class comp1 implements Comparator<Pair>{  \npublic int compare(Pair o1,Pair o2){\nif(o2.x==o1.x)\nreturn o1.y-o1.y;  \nreturn o2.x-o1.x;  \n}  }\n\npublic static void main(String[] args)  throws Exception \n{\n//SUCK IT UP AND DO IT ALRIGHT\n//scan=new FastReader(\"input.txt\");\n//out = new PrintWriter (\"output.txt\");\n   // System.out.println(pow((long)1e9,(long)1e9));\nString s=scan.next(),ss=scan.next();\nchar chars[]=s.toCharArray();\nif(s.equals(\"0\"))\n{\n    if(s.equals(ss))\n        out.println(\"OK\");\nelse out.println(\"WRONG_ANSWER\");\nout.close();\nreturn;\n}\nArrays.sort(chars);\ns=new String(chars);\nStringBuilder to=new StringBuilder(s);\nint i=0;\n//System.out.println(to);\nwhile(to.charAt(0)=='0')\n{\n    to.deleteCharAt(0);\n    i++;\n}\nfor(int k=0;k<i;k++)\nto.insert(1,'0');\nif(to.toString().equals(ss))\nout.println(\"OK\");\nelse out.println(\"WRONG_ANSWER\");\n\n\nout.close();\n\n//SEE UP \n\n}\nstatic long binexp(long a,long n)\n{\n    if(n==0)\n        return 1;\n    long res=binexp(a,n/2);\n    if(n%2==1)\n        return res*res*a;\n    else \n        return res*res;\n}\nstatic long powMod(long base, long exp, long mod) {\n       if (base == 0 || base == 1) return base;\n       if (exp == 0) return 1;\n       if (exp == 1) return base % mod;\n       long R = powMod(base, exp/2, mod) % mod;\n       R *= R;\n       R %= mod;\n       if ((exp & 1) == 1) {\n           return base * R % mod;\n       }\n       else return R % mod;\n   }\nstatic double dis(double x1,double y1,double x2,double y2)\n{\n    return Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n}\nstatic long mod(long x,long y)\n    {\n        if(x<0)\n            x=x+(-x/y+1)*y;\n        return x%y;\n    }\n public static  long pow(long b, long e) {\n            long r = 1;\n            while (e > 0) {\n                if (e % 2 == 1) r = r * b ;\n                b = b * b;\n                e >>= 1;\n            }\n            return r;\n        }\nprivate static void sort(long[] arr) {\n        List<Long> list = new ArrayList<>();\n        for (long object : arr) list.add(object);\n        Collections.sort(list);\n        for (int i = 0; i < list.size(); ++i) arr[i] = list.get(i);\n    }\n public static class FastReader {\n        BufferedReader br;\n        StringTokenizer root;\n        \n \n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        FastReader(String filename)throws Exception\n        {\n\n            br=new BufferedReader(new FileReader(filename));\n        }\n\n        boolean hasNext(){\n            String line;\n            while(root.hasMoreTokens())\n                return true;\n            return false;\n        }\n \n        String next() {\n            while (root == null || !root.hasMoreTokens()) {\n                try {\n                    root = new StringTokenizer(br.readLine());\n                } catch (Exception addd) {\n                    addd.printStackTrace();\n                }\n            }\n            return root.nextToken();\n        }\n \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n \n        long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (Exception addd) {\n                addd.printStackTrace();\n            }\n            return str;\n        }\n         public int[] nextIntArray(int arraySize) {\n            int array[] = new int[arraySize];\n \n            for (int i = 0; i < arraySize; i++) {\n                array[i] = nextInt();\n            }\n \n            return array;\n        }\n}\n static class Pair implements Comparable<Pair>{\n        public int x, y;\n        public Pair(int x1, int y1) {\n            x=x1;\n            y=y1;\n        }\n        @Override\n        public int hashCode() {\n            return (int)(x + 31 * y);\n        }\n        public String toString() {\n            return x + \" \" + y;\n        }\n        @Override\n        public boolean equals(Object o){\n            if (o == this) return true;\n            if (o.getClass() != getClass()) return false;\n            Pair t = (Pair)o;\n            return t.x == x && t.y == y;\n        }\npublic int compareTo(Pair o)\n{\n    return (x-o.x);\n\n    }\n\nstatic class pair{\n    int i;\n    int j;\npair(int i,int j){\n    this.i=i;\n    this.j=j;\n}}}\n static class tuple{\n        int x,y,z;\n        tuple(int a,int b,int c){\n            x=a;\n            y=b;\n            z=c;\n        }\n    }\n    static class Edge{\n        int d,w;\n        Edge(int d,int w)\n        {\n            this.d=d;\n            this.w=w;\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport os\nfrom io import IOBase, BytesIO\n# import heapq\n# import math\n# import collections\n# import itertools\n# import bisect\nmod = 10 ** 9 + 7\npie = 3.1415926536\n#import resource\n#resource.setrlimit(resource.RLIMIT_STACK, [0x100000000, resource.RLIM_INFINITY])\n#import threading\n# threading.stack_size(2**27)\n#import sys\n# sys.setrecursionlimit(10**6)\n# fact=[1]\n# for i in range(1,1000001):\n#    fact.append((fact[-1]*i)%mod)\n# ifact=[0]*1000001\n# ifact[1000000]=pow(fact[1000000],mod-2,mod)\n# for i in range(1000000,0,-1):\n#    ifact[i-1]=(i*ifact[i])%mod\n#from random import randint as rn\n#from Queue import Queue as Q\n\n\ndef modinv(n, p):\n    return pow(n, p-2, p)\n\n\ndef ncr(n, r, p):  # for using this uncomment the lines calculating fact and ifact\n    t = ((fact[n])*((ifact[r]*ifact[n-r]) % p)) % p\n    return t\n\n\ndef ain():  # takes array as input\n    return list(map(int, sin().split()))\n\n\ndef sin():\n    return input().strip()\n\n\ndef GCD(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\n\n\ndef read2DIntArray(row, col):\n    arr = []\n    for i in range(0, row):\n        temp = list(map(int, sin().split()))\n        arr.append(temp)\n\n    return arr\n\n\ndef read2DCharArray(row, col):\n    arr = []\n    for i in range(0, row):\n        temp = str(sin())\n        arr.append(temp)\n\n    return arr\n\n\n# Smallest number by rearranging digits of a given number (without trailing zeros):-\n\n\ndef smallestNumber(n):\n    lst = list(str(n))\n    lst.sort()\n\n    tmp = \"\"\n    for i, n in enumerate(lst):\n        if (n != '0'):\n            tmp = lst.pop(i)\n            break\n\n    return str(tmp) + ''.join(lst)\n\n\n\"\"\"***************************************************************************************\"\"\"\n\n\ndef main():\n    n = sin()\n    m = sin()\n\n    num = smallestNumber(n)\n\n    if (m == num):\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\n\n\n\"\"\"***************************************************************************************\"\"\"\n\n# Python 2 and 3 footer by Pajenegod and c1729\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(BytesIO):\n    newlines = 0\n\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0, 2),\n                   super(FastIO, self).write(s))[0])\n        return s\n\n    def read(self):\n        while self._fill():\n            pass\n        return super(FastIO, self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill()\n            self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s: self.buffer.write(s.encode('ascii'))\n            self.read = lambda: self.buffer.read().decode('ascii')\n            self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\ndef input(): return sys.stdin.readline().rstrip('\\r\\n')\n\n\nif __name__ == '__main__':\n    main()\n# threading.Thread(target=main).start()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CorrectSolution {\n    public static void main(String[] args) throws IOException {\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        String str1 = f.readLine();\n        String str2 = f.readLine();\n        if (str1.equals(\"0\")) {\n            System.out.println(str1.equals(str2)?\"OK\":\"WRONG_ANSWER\");\n            return;\n        }\n        int[] a = new int[str1.length()];\n        for (int i = 0; i < a.length; i++)\n            a[i] = str1.charAt(i)-'0';\n        Arrays.sort(a);\n        if (a[0]==0) {\n            int index = 0;\n            while (a[index] == 0)\n                index++;\n            a[0] = a[index];\n            a[index] = 0;\n        }\n        String s = \"\";\n        for (int i = 0; i < a.length; i++)\n            s += a[i];\n        System.out.println(s.equals(str2)?\"OK\":\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nchar a[100], b[100], temp, t;\nint ch(char a[]) {\n  int sum = 0;\n  for (int i = 0; i < strlen(a); i++) sum = sum * 10 + (a[i] - '0');\n  return sum;\n}\nint q, w, len;\nint main() {\n  gets(a);\n  gets(b);\n  len = strlen(a);\n  if (len != strlen(b)) {\n    printf(\"WRONG_ANSWER\\n\");\n    return 0;\n  }\n  q = ch(a);\n  w = ch(b);\n  if (strcmp(a, \"0\") == 0) {\n    if (strcmp(b, \"0\") == 0)\n      printf(\"OK\\n\");\n    else\n      printf(\"WRONG_ANSWER\\n\");\n    return 0;\n  }\n  for (int i = 0; i < len; i++)\n    for (int j = 0; j < len - 1; j++)\n      if (a[j] > a[j + 1]) {\n        temp = a[j];\n        a[j] = a[j + 1];\n        a[j + 1] = temp;\n      }\n  for (int i = len - 2; i >= 0; i--)\n    if (a[i] == '0') {\n      t = a[i];\n      a[i] = a[i + 1];\n      a[i + 1] = t;\n    }\n  for (int i = 0; i < len; i++)\n    if (a[i] != b[i]) {\n      printf(\"WRONG_ANSWER\\n\");\n      return 0;\n    }\n  printf(\"OK\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "s=input()\nk=s.count('0')\ns=''.join(sorted(s))[k:]\nprint(['WRONG_ANSWER','OK'][input()==('0' if s=='' else s[0]+'0'*k+s[1:])])"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nchar a[1000000], b[100000];\nint la, lb;\nint dig[10];\nint s;\nint main() {\n  cin >> a;\n  cin >> b;\n  la = strlen(a);\n  lb = strlen(b);\n  for (int i = 0; i < la; i++) dig[a[i] - '0']++;\n  la = 0;\n  for (int i = 1; i < 10; i++)\n    if (dig[i]) {\n      a[la++] = i + '0';\n      dig[i]--;\n      break;\n    }\n  for (int i = 0; i < 10; i++)\n    if (dig[i]) {\n      a[la++] = i + '0';\n      dig[i]--;\n      i--;\n    }\n  if (strcmp(a, b) == 0)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char s[100], t[100];\n  scanf(\"%s%s\", s, t);\n  sort(s, s + strlen(s));\n  if (strlen(s) != 1)\n    if (s[0] == '0') swap(s[0], s[1]);\n  if (!strcmp(s, t))\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "a = input()\nb = input()\nc = ''.join(sorted(a))\nif c[0] == '0':\n    p = 0\n    while p < len(c) and c[p] == '0':\n        p += 1\n    if p < len(c):\n        c = list(c)\n        c[0], c[p] = c[p], c[0]\n        c = ''.join(c)\n\nprint('OK' if b == c else 'WRONG_ANSWER')\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(int argc, char **argv) {\n  string i, o;\n  cin >> i >> o;\n  sort(i.begin(), i.end());\n  if (i == \"0\" && i == o) {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  unsigned int z;\n  for (z = 0; z < i.length() && i[z] == '0'; ++z)\n    ;\n  while (!i.empty() && i[0] == '0') i = i.substr(1);\n  while (z--) i.insert(i.empty() ? 0 : 1, \"0\");\n  cout << ((i == o) ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 16;\nchar s[MAX_N], t[MAX_N];\nint main() {\n  scanf(\"%s%s\", s, t);\n  int sn = strlen(s), tn = strlen(t);\n  sort(s, s + sn);\n  for (int i = 0; i < sn; i++)\n    if (s[i] != '0') {\n      if (i > 0) swap(s[0], s[i]);\n      break;\n    }\n  if (strcmp(s, t) == 0)\n    puts(\"OK\");\n  else\n    puts(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string str, th;\n  cin >> str >> th;\n  int len = str.size();\n  sort(str.begin(), str.end());\n  if (str[0] == '0') {\n    for (int i = 0; i < len; i++) {\n      if (str[i] != '0') {\n        swap(str[0], str[i]);\n        break;\n      }\n    }\n  }\n  if (str == th)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t, n, i, j, k;\n  string s1, s2;\n  cin >> s1 >> s2;\n  vector<char> v;\n  for (i = 0; i < s1.size(); i++) {\n    v.push_back(s1[i]);\n  }\n  sort(v.begin(), v.end());\n  if (v[0] == '0') {\n    for (i = 0; i < v.size(); i++) {\n      if (v[i] != '0') {\n        char c = v[i];\n        v[i] = v[0];\n        v[0] = c;\n        break;\n      }\n    }\n  }\n  string s;\n  for (i = 0; i < v.size(); i++) {\n    s += v[i];\n  }\n  if (s == s2) {\n    cout << \"OK\\n\";\n  } else {\n    cout << \"WRONG_ANSWER\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "\na = raw_input()\nb = raw_input()\nz = a.count('0')*'0'\n\nif(a == z):\n\tif(a == b):\n\t\tprint 'OK'\n\telse:\n\t\tprint 'WRONG_ANSWER'\nelse:\n\tu = a.count('1')*'1'\n\td = a.count('2')*'2'\n\tt = a.count('3')*'3'\n\tq = a.count('4')*'4'\n\tc = a.count('5')*'5'\n\ts = a.count('6')*'6'\n\te = a.count('7')*'7'\n\to = a.count('8')*'8'\n\tn = a.count('9')*'9'\n\n\ttup = [u,d,t,q,c,s,e,o,n]\n\tresult = ''\n\tfirst = True\n\tfor x in range(len(tup)):\n\t\tif(first and tup[x] != '' and z != ''):\n\t\t\tresult = result + tup[x][0] + z\n\t\t\tresult = result + tup[x][1:]\n\t\t\tfirst = False\n\t\telse:\n\t\t\tresult = result + tup[x]\n\n\tif (result==b ):\n\t\tprint 'OK'\n\telse:\n\t\tprint 'WRONG_ANSWER'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a, b;\nint main() {\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  int j = 0;\n  while (a[j] == '0' && j < a.size() - 1) ++j;\n  swap(a[0], a[j]);\n  if (a == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class P12B {\n\n  private static void solve() {\n    char[] ch = next().toCharArray();\n\n    if (ch[0] == '0') {\n      System.out.println(\"0\".equals(next()) ? \"OK\" : \"WRONG_ANSWER\");\n      return;\n    }\n\n    Arrays.sort(ch);\n\n    int index = 0;\n    while (index < ch.length && ch[index] == '0') index++;\n\n    if (index != 0) {\n      char t = ch[index];\n      ch[index] = ch[0];\n      ch[0] = t;\n    }\n\n    String expected = new String(ch);\n\n    System.out.println(expected.equals(next()) ? \"OK\" : \"WRONG_ANSWER\");\n\n  }\n\n  private static void run() {\n    br = new BufferedReader(new InputStreamReader(System.in));\n    out = new PrintWriter(System.out);\n\n    solve();\n\n    out.close();\n  }\n\n  private static StringTokenizer st;\n  private static BufferedReader br;\n  private static PrintWriter out;\n\n  private static String next() {\n    while (st == null || !st.hasMoreElements()) {\n      String s;\n      try {\n        s = br.readLine();\n      } catch (IOException e) {\n        return null;\n      }\n      st = new StringTokenizer(s);\n    }\n    return st.nextToken();\n  }\n\n  private static int nextInt() {\n    return Integer.parseInt(next());\n  }\n\n  private static long nextLong() {\n    return Long.parseLong(next());\n  }\n\n  public static void main(String[] args) {\n    run();\n  }\n}"
        },
        {
            "language": 1,
            "solution": "s=raw_input()\nanswer=raw_input()\ns=list(s)\n\ns.sort()\n\n\nif int(s[0])==0 and len(s)>1:\n  s[0],s[1]=s[1],s[0]\n  k=s\nelif (int(s[0])==0 and len(s)==1) or (int(s[0])!=0):\n  k=s\nk=''.join(k)\nif k==answer:\n  print \"OK\"\nelse:\n  print \"WRONG_ANSWER\""
        },
        {
            "language": 3,
            "solution": "import sys\nimport copy\n\ninp = sys.stdin.readline().strip()\nguess = sys.stdin.readline().strip()\ninp = list(inp)\ninp = [int(x) for x in inp]\ninp = sorted(inp)\n\nzeroes = 0\nfor i in inp:\n  if(i == 0):\n    zeroes+=1\n  else:\n    break\n  \nstring = \"\"\nif(zeroes < len(inp)):\n  string = str(inp[zeroes])\nfor x in range(0, zeroes):\n  string += '0'\n\nif(zeroes+1 < len(inp)): \n  for x in inp[zeroes+1:]:\n    string += str(x)\n\nif(guess == string):\n  print(\"OK\")\nelse:\n  print(\"WRONG_ANSWER\")\n\n \t  \t\t\t \t  \t \t\t\t\t\t  \t \t \t  \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, j, cases, k = 0;\n  long long int n, m;\n  char str1[100], str2[100];\n  cin >> str1 >> str2;\n  if (strlen(str1) != strlen(str2) || (str2[0] == '0' && strlen(str1) > 1)) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  n = atoi(str1);\n  m = atoi(str2);\n  sort(str1, str1 + strlen(str1));\n  int limit = strlen(str1);\n  for (i = 0; i < limit; i++) {\n    if (str1[i] != '0') break;\n  }\n  char str3[100];\n  if (str1[i] != '\\0') {\n    str3[0] = str1[i];\n    k++;\n  }\n  for (j = 0; j < limit; j++) {\n    if (j == i) continue;\n    str3[k++] = str1[j];\n  }\n  str3[k] = '\\0';\n  if (strcmp(str3, str2) == 0) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n=list(map(int,list(raw_input().strip())))\nm=raw_input()\nn.sort()\ni,ans=0,[]\nwhile i<len(n) and n[i]==0:\n\ti+=1\nif i<len(n):\n\tans=n[i:i+1]+n[:i]+n[i+1:len(n)]\nelse:\n\tans=[0]\nsums=ans[0]\nfor i in ans[1:]:\n\tsums=sums*10+i\nif str(sums)==m:\n\tprint 'OK'\nelse:\n\tprint 'WRONG_ANSWER'"
        },
        {
            "language": 3,
            "solution": "n = input()\notv = input()\nrez = ''\nnul = 0\nfor i in sorted(n):\n    if i == '0':\n        nul += 1\n        continue\n    else:\n        rez += i + '0' * nul\n        nul = 0\nif otv == rez or (otv == n and n == '0'):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Solve3 {\n\n    public static void main(String[] args) throws IOException {\n        new Solve3().solve();\n    }\n\n    public void solve() throws IOException {\n        FastReader sc = new FastReader();\n        int[] a = new int[10];\n        String b= sc.next(),c=sc.next();\n        if(b.length()!=c.length()){ System.out.println(\"WRONG_ANSWER\"); return;}\n        int n = Integer.parseInt(b), min = 10, m = Integer.parseInt(c);\n        while (n != 0) {\n            int x = n % 10;\n            if (x < min && x != 0) {\n                min = x;\n            }\n            a[x]++;\n            n /= 10;\n        }\n        if (min == 10) {\n            min = 0;\n        }\n        StringBuilder s = new StringBuilder(Integer.toString(min));\n        a[min]--;\n        for (int i = 0; i < 10; i++) {\n            while (a[i]-- > 0) {\n                s.append(i);\n            }\n        }\n        if (Integer.parseInt(s.toString()) == m) {\n            System.out.println(\"OK\");\n        } else {\n            System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n\n    static public class FastReader {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public String next() throws IOException {\n            if (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(br.readLine());\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nm=input()\nif(len(n)!=len(m)):\n    print(\"WRONG_ANSWER\")\nelse:\n    \n    l=list(n)\n    l.sort()\n    x=l.count('0')\n    d=[]\n    for i in l:\n        if(i!='0'):\n            d.append(i)\n    d.sort()\n    if(d==[]):\n        if(int(n)==int(m)):\n            print(\"OK\")\n        else:\n            print(\"WRONG_ANSWER\")\n    else:\n        s=d[0]+'0'*x+''.join(d[1:])\n        if(int(s)==int(m)):\n            print(\"OK\")\n        else:\n            print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 1,
            "solution": "s=sorted(raw_input())\nfor i in range(len(s)):\n\tif s[i]!='0':t=s[i];s[i]=s[0];s[0]=t;break\nprint('WRONG_ANSWER','OK')[''.join(s)==raw_input()]"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a, k = 0, knull = 0;\n  string b, t = \"\";\n  cin >> a >> b;\n  vector<int> c;\n  while (a > 0) {\n    if (a % 10 != 0)\n      c.push_back(a % 10);\n    else\n      knull++;\n    a /= 10;\n    k++;\n  }\n  if (c.size() > 0) {\n    sort(c.begin(), c.end());\n    t += (char)c[0] + 48;\n  }\n  while (knull > 0) {\n    t += (char)48;\n    knull--;\n  }\n  if (c.size() > 1) {\n    for (int i = 1; i < c.size(); i++) t += (char)c[i] + 48;\n  }\n  cout << ((atoi(b.c_str()) == atoi(t.c_str()) && k == b.size() ||\n            (a == 0 && b == \"0\"))\n               ? \"OK\"\n               : \"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 1,
            "solution": "a = sorted(raw_input())\n\nfor i in range(len(a)):\n    if a[i] != '0':\n        a[i], a[0] = a[0], a[i]\n        break\nprint ['WRONG_ANSWER', 'OK'][''.join(a) == raw_input()]\n\n"
        },
        {
            "language": 1,
            "solution": "a = [int(c) for c in raw_input()]\nb = [int(c) for c in raw_input()]\na.sort()\nif a[0] == 0:\n    for i in a:\n        if i:\n            a.remove(i)\n            a.insert(0,i)\n            break\nprint 'OK' if a==b else 'WRONG_ANSWER'\n"
        },
        {
            "language": 3,
            "solution": "n = list(input())\nm = list(input())\n\nn.sort()\nif n[0] == '0':\n    for i in range(1, len(n)):\n        if n[i]:\n            n[0], n[i] = n[i], n[0]\n            break\n\nif n == m:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 1,
            "solution": "__author__ = 'Will'\n\noriginal = raw_input()\ngiven = raw_input()\ng = list(given)\no = list(original)\no = sorted(o)\ni = 0\n\nif len(original) != len(given):\n    print \"WRONG_ANSWER\"\nelse:\n    while o[0] == '0':\n        if len(o) ==1:\n            break\n        temp = o[i+1]\n        o[i+1] = '0'\n        o[0] = temp\n        i+=1\n    #print o\n    #print g\n\n    if o == g:\n        print \"OK\"\n    else:\n        print \"WRONG_ANSWER\"\n\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nm = raw_input()\nn = sorted(n)\ns = \"\"\nfor i in n:\n    if i != str(0):\n        s += i\n        n.remove(i)\n        break\nfor i in n:\n    s += i\nif s == m:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> ve;\nint main() {\n  long long i, j;\n  bool found = false;\n  string val, ans;\n  getline(cin, val);\n  getline(cin, ans);\n  sort(val.begin(), val.end());\n  if (val[0] != '0') found = false;\n  for (i = 0; i < val.length() && !found; ++i) {\n    if (val[i] != '0') {\n      swap(val[0], val[i]);\n      break;\n    }\n  }\n  if (val == ans)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1000000007;\nconst int MAX = 1000005;\nint SetBit(int n, int x) { return n | (1 << x); }\nint ClearBit(int n, int x) { return n & ~(1 << x); }\nint ToggleBit(int n, int x) { return n ^ (1 << x); }\nbool CheckBit(int n, int x) { return (bool)(n & (1 << x)); }\nint main(void) {\n  int len, i, pos;\n  string a, b;\n  while (cin >> a >> b) {\n    string ans;\n    if (a == \"0\")\n      ans = \"0\";\n    else {\n      sort(a.begin(), a.end());\n      if (a[0] == '0') {\n        len = a.length();\n        pos = 0;\n        string x, y, z;\n        for (i = 0; i < len; i++) {\n          if (a[i] == '0')\n            y += \"0\";\n          else {\n            x.push_back(a[i]);\n            pos = i;\n            break;\n          }\n        }\n        for (i = pos + 1; i < len; i++) z.push_back(a[i]);\n        ans = x + y + z;\n      } else\n        ans = a;\n    }\n    if (ans == b)\n      cout << \"OK\"\n           << \"\\n\";\n    else\n      cout << \"WRONG_ANSWER\"\n           << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "x=input()\ny=input()\nar=[]\ns=''\nfor i in x:\n    ar.append(i)\nar.sort()\nif (ar[0]==\"0\"):\n    for j in range(1,len(ar)):\n        if (ar[j]!=\"0\"):\n            c=ar[0]\n            ar[0]=ar[j]\n            ar[j]=c\n            break\nd=s.join(ar)\nif (d==y):\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class HowManySquares {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        char[] a = in.next().toCharArray(), b = in.next().toCharArray();\n        if (a.length != b.length) {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        Arrays.sort(a);\n        if (a[0] == '0') {\n            for (int i = 1; i < a.length; i++) {\n                if (a[i] != '0') {\n                    a[0] = a[i];\n                    a[i] = '0';\n                    break;\n                }\n            }\n        }\n        for (int i = 0; i < a.length; i++) {\n            if (a[i] != b[i]) {\n                System.out.println(\"WRONG_ANSWER\");\n                return;\n            }\n        }\n        System.out.println(\"OK\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class cf12B {\n\tpublic static void main(String[] args) throws Exception {\n\t\t\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t//Scanner sc = new Scanner(System.in);\n\t\tString q = br.readLine();\n\t\tString a = br.readLine();\n\t\t\n\t\tchar[] c = q.toCharArray();\n\t\tArrays.sort(c);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint numZ = 0;\n\t\tfor(int i=0;i<c.length;i++)\n\t\t{\n\t\t\tif(c[i] == '0')\n\t\t\t\tnumZ++;\n\t\t}\n\t\t\n\t\tif(numZ < c.length)\n\t\t{\n\t\t\tsb.append(c[numZ]);\n\t\t}\n\t\tfor(int i=0;i<numZ;i++)\n\t\t\tsb.append('0');\n\t\t\n\t\tfor(int i=numZ+1;i<c.length;i++)\n\t\t\tsb.append(c[i]);\n\t\t\n\t\t//System.out.println(sb.toString());\n\t\tif(a.compareTo(sb.toString()) == 0)\n\t\t{\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "x = raw_input()\ny = raw_input()\nif '0' in x:\n    m = list(x)\n    count = 0\n    while '0' in m:\n        m.remove('0')\n        count+=1\n    m.sort()\n    x = ''\n    for i in m:\n        x+=i\n    x = x[:1]+'0'*count+x[1:]\nelse:\n    m = list(x)\n    m.sort()\n    x = ''\n    for i in m:\n        x+=i\nif x==y:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\"\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class smallest {\n\tstatic BufferedReader br;\n\tstatic StringTokenizer st;\n\tstatic PrintWriter out;\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream input = System.in;\n\t\t//InputStream input = new FileInputStream(\"fileIn.in\");\n\t\tOutputStream output = System.out;\n\t\t//OutputStream output = new FileOutputStream(\"fileOut.out\");\n\t\tbr = new BufferedReader(new InputStreamReader(input));\n\t\tout = new PrintWriter(output);\n\t\tString alice = br.readLine();\n\t\tint n = alice.length();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = alice.charAt(i)-48;\n\t\tString bob = br.readLine();\n\t\tint m = bob.length();\n\t\tint[] b = new int[m];\n\t\tfor (int i = 0; i < m; i++)\n\t\t\tb[i] = bob.charAt(i)-48;\n\t\tint c;\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tfor (int j = 0; j < i; j++)\n\t\t\t\tif (a[i] < a[j])\n\t\t\t\t\t{\n\t\t\t\t\tc = a[i];\n\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\ta[j] = c;\n\t\t\t\t\t}\n\t\tint zero = 0;\n\t\twhile (zero < a.length && a[zero] == 0)\n\t\t\tzero++;\n\t\tif (zero != a.length)\n\t\t\t{\n\t\t\tc = a[zero];\n\t\t\ta[zero] = a[0];\n\t\t\ta[0] = c;\n\t\t\t}\n\t\tif (n == m)\n\t\t\t{\n\t\t\tint count = 0;\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tif (a[i] == b[i])\n\t\t\t\t\tcount++;\n\t\t\tif (count == n)\n\t\t\t\tout.println(\"OK\");\n\t\t\telse\n\t\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t\t}\n\t\telse\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\tout.close();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, t;\nint p = -1, mn = 11;\nint main() {\n  cin >> s >> t;\n  int len = s.size();\n  for (int i = 0; i < len; i++)\n    if (s[i] != '0' && s[i] - '0' < mn) {\n      mn = s[i] - '0', p = i;\n    }\n  if (p != -1) {\n    s.erase(p, 1);\n    sort(s.begin(), s.end());\n    s = char('0' + mn) + s;\n  }\n  if (s != t)\n    cout << \"WRONG_ANSWER\" << '\\n';\n  else\n    cout << \"OK\" << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "a=list(raw_input())\nb=list(raw_input())\n\na.sort()\ni=0\nwhile i<len(a)-1 and a[i]=='0':\n    i+=1\na[0],a[i]=a[i],a[0]\n\nif a==b:\n    print 'OK'\nelse:\n    print 'WRONG_ANSWER'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  char s[1000], m[1000];\n  int j, i, k, n = 0, z = 0, p = 0, l;\n  scanf(\"%s%s\", s, m);\n  n = strlen(s);\n  l = strlen(m);\n  if (n != l)\n    printf(\"WRONG_ANSWER\");\n  else {\n    for (i = 0; i < n - 1; i++) {\n      for (j = i + 1; j < n; j++) {\n        if (s[i] > s[j]) {\n          k = s[i];\n          s[i] = s[j];\n          s[j] = k;\n        }\n      }\n    }\n    for (i = 0; i < n; i++) {\n      if (s[i] == '0') z = z + 1;\n    }\n    if (z > 0 && z < l) {\n      p = s[z];\n      s[0] = p;\n      s[z] = '0';\n    }\n    if (strcmp(s, m) == 0)\n      printf(\"OK\");\n    else\n      printf(\"WRONG_ANSWER\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\npublic class CorrectSolution {\n\t// 4 mins\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s = sc.nextLine();\n\t\tStringBuilder zeros = new StringBuilder();\n\t\tStringBuilder out = new StringBuilder();\n\t\tPriorityQueue<Integer> pq = new PriorityQueue<>();\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tif (s.charAt(i) == '0')\n\t\t\t\tzeros.append(\"0\");\n\t\t\telse\n\t\t\t\tpq.add(s.charAt(i) - '0');\n\t\t}\n\t\tif (!pq.isEmpty())\n\t\t\tout.append(pq.poll());\n\t\tout.append(zeros.toString());\n\t\twhile (!pq.isEmpty())\n\t\t\tout.append(pq.poll());\n\t\tif (!out.toString().equals(sc.nextLine()))\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\telse\n\t\t\tSystem.out.println(\"OK\");\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N, T;\nchar str[15], temp[15];\nint main() {\n  int i, j, k;\n  scanf(\"%s%s\", str, temp);\n  i = strlen(str);\n  sort(str, str + i);\n  if (str[0] == '0') {\n    do {\n      if (str[0] != '0') break;\n    } while (next_permutation(str, str + i));\n  }\n  if (strcmp(str, temp) == 0)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  scanf(\" \");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string N, M;\n  cin >> N >> M;\n  sort(N.begin(), N.end());\n  for (int i = 0; i < N.length(); ++i) {\n    if (N[i] != '0') {\n      char c = N[i];\n      N[i] = N[0];\n      N[0] = c;\n      break;\n    }\n  }\n  cout << (N == M ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "s = str(input())\na = str(input())\nans=''\nx = {0:0, 1:0, 2:0, 3:0, 4:0, 5:0, 6:0, 7:0, 8:0, 9:0}\nfor i in range(len(s)):\n    n = int(s[i])\n    x[int(n)] += 1\nk=0\nl=0\nflag=0\nf2=0\nfor j in range(1,10):\n    if x[j] != 0:\n        for k in range(x[j]):\n            if f2 == 0:\n                flag = 1\n            ans=ans+str(j)\n            if flag == 1:\n                f2=1\n                flag=0\n                for l in range(x[0]):\n                    ans=ans+'0'\n            #print(j,end='')\n    #print(ans)\nif ans == '':\n    ans = s\nif ans == a:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char n[12], m[12];\n  cin >> n >> m;\n  if (n[0] == '0') {\n    if (strcmp(m, \"0\") == 0)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  if (m[0] == '0') {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  sort(n, n + strlen(n));\n  int zero = 0;\n  for (int i = 0; i < strlen(n); ++i)\n    if (n[i] == '0') zero++;\n  char sol[12];\n  int k = 0;\n  for (int i = 0; i < strlen(n); ++i) {\n    if (k != 0) {\n      sol[k++] = n[i];\n    } else if (k == 0 && n[i] != '0') {\n      sol[k++] = n[i];\n      for (int j = 0; j < zero; ++j) sol[k++] = '0';\n    }\n  }\n  sol[k] = '\\0';\n  if (strcmp(m, sol) == 0)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "def solve(num):\n    if num == 0: return \"0\"\n    am = [0 for i in range(10)]\n    while num > 0:\n        am[num%10] += 1\n        num /= 10\n    nz = \"\"\n    for i in range(1, 9+1):\n        for j in range(am[i]):\n            nz += chr(ord(\"0\")+i)\n    z = \"\"\n    for i in range(am[0]):\n        z += \"0\"\n    if nz == \"\": return z\n    if z == \"\": return nz\n    return nz[0:1]+z+nz[1:]\n\nx = raw_input()\ny = raw_input()\nif solve(int(x)) == y:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(int argc, char** argv) {\n  string s, s2;\n  cin >> s >> s2;\n  sort(s.begin(), s.end());\n  for (int i = 0; i < s.length(); i++)\n    if (s[i] != '0') {\n      swap(s[i], s[0]);\n      break;\n    }\n  bool OK = false;\n  if (s.compare(s2) == 0) OK = true;\n  OK ? cout << \"OK\" : cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "s = str(raw_input())\nss = str(raw_input())\nn = len(s)\nflg = True\ns = sorted(s)\ni = 0\nif s[i]=='0':\n    ind = 0\n    while i<n and s[i]=='0':\n        i+=1\n    if i<n:\n        s[ind],s[i] = s[i],s[ind]\n        flg = True\n    else:\n        flg = False\ns = ''.join(s)\nif flg:\n    if s==ss:\n        print \"OK\"\n    else:\n        print \"WRONG_ANSWER\"\nelse:\n    if s==ss:\n        print \"OK\"\n    else:\n        print \"WRONG_ANSWER\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst long long INF = 0x3f3f3f3f3f3f3f3fll;\nconst int N = 500000 + 10;\nconst int M = 4e4 + 10;\nconst int mod = 1000173169;\nconst double eps = 1e-10;\nconst double pi = acos(-1.0);\nint n;\nint cnt[2][10];\nstring s, t, mn;\nbool work() {\n  cin >> s >> t;\n  if (s.size() != t.size()) return 0;\n  int n = s.size();\n  if (n == 1) return s == t;\n  for (int i = 0; i < n; i++) {\n    cnt[0][s[i] - '0']++;\n    cnt[1][t[i] - '0']++;\n  }\n  int p = 1;\n  while (cnt[0][p] == 0) p++;\n  mn.push_back(p + '0');\n  cnt[0][p]--;\n  for (int i = 0; i < 10; i++) {\n    while (cnt[0][i]--) mn.push_back(i + '0');\n  }\n  return mn == t;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  if (work())\n    cout << \"OK\\n\";\n  else\n    cout << \"WRONG_ANSWER\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Coj2 {\n\n    static int[] arr;\n    static final int mod = 100007;\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        char[] c1 = in.next().toCharArray();\n        Arrays.sort(c1);\n\n        int ceros = 0;\n        while (ceros < c1.length && c1[ceros] == '0') ceros++;\n        String ok = \"\";\n        if (c1.length > ceros) {\n            ok += c1[ceros] + \"\";\n            for (int i = 0; i < ceros; i++)\n                ok += \"0\";\n            for (int j = ceros + 1; j < c1.length; j++)\n                ok += c1[j] + \"\";\n        } else if (ceros == c1.length)\n            ok = \"0\";\n        else\n            ok = new String(c1);\n        if (ok.equals(in.next())) System.out.println(\"OK\");\n        else System.out.println(\"WRONG_ANSWER\");\n\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class test {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.nextLine();\n        String t = sc.nextLine();\n        char[] ch = s.toCharArray();\n        //char[] c = t.toCharArray();\n        Arrays.sort(ch);\n        //System.out.println(ch);\n        int j = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (ch[i] != '0') {\n                j = i;\n                break;\n            }\n        }\n        boolean flag=true;\n        char temp = ch[0];\n        ch[0] = ch[j];\n        ch[j] = temp;\n         // System.out.println(ch);\n        for(int i=0;i<s.length() && i<t.length();i++){\n          char c=t.charAt(i);\n          if(ch[i]!=c){\n              flag=false;\n              break;\n              \n          }\n              \n          \n        }\n        if(flag && t.length()==s.length())\n        {\n            System.out.println(\"OK\"); \n       }\n        else\n             System.out.println(\"WRONG_ANSWER\");\n    }\n}"
        },
        {
            "language": 3,
            "solution": "num = input()\ngiven = input()\n\nnum = \"\".join(sorted(num))\n\nidx = -1\nfor i in range(len(num)):\n\tif int(num[i])>0:\n\t\tidx=i\n\t\tbreak\n\nif idx==-1:\n\tsolution = \"0\"\nelse:\n\tsolution = num[idx]+num[:idx]+num[idx+1:]\n\nprint(\"WRONG_ANSWER\" if solution != given else \"OK\")\n# print(given, \"vs\", solution)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint compare(const void *a, const void *b) {\n  char ca = *(char *)a;\n  char cb = *(char *)b;\n  return ca - cb;\n}\nint main() {\n  static char s[11], t[11];\n  int n, i;\n  char tmp;\n  scanf(\"%s%s\", s, t);\n  n = strlen(s);\n  qsort(s, n, sizeof *s, compare);\n  for (i = 0; i < n && s[i] == '0'; i++)\n    ;\n  if (i != n) {\n    tmp = s[0];\n    s[0] = s[i];\n    s[i] = tmp;\n  }\n  printf(strcmp(s, t) == 0 ? \"OK\\n\" : \"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint numn[20];\nchar str[20];\nint main() {\n  int n, m;\n  scanf(\"%d\", &n);\n  scanf(\"%s\", str);\n  int cnt = 0;\n  if (n == 0) numn[cnt++] = 0;\n  while (n) {\n    numn[cnt++] = n % 10;\n    n = n / 10;\n  }\n  sort(numn, numn + cnt);\n  for (int i = 0; i < cnt; ++i) {\n    if (numn[i] != 0) {\n      swap(numn[0], numn[i]);\n      break;\n    }\n  }\n  int sum = numn[0], flag = 0;\n  if (strlen(str) != cnt) {\n    puts(\"WRONG_ANSWER\");\n    return 0;\n  }\n  for (int i = 0; i < cnt; ++i) {\n    if ((str[i] - '0') != numn[i]) {\n      flag = 1;\n      break;\n    }\n  }\n  if (flag == 0)\n    puts(\"OK\");\n  else\n    puts(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class CorrectSolution {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\tString a = in.nextLine();\n\t\tString b = in.nextLine();\n\t\tchar[] k = a.toCharArray();\n\t\tArrays.sort(k);\n\t\tint i = 0 ;\n\t\tfor(; i < a.length();i++){\n\t\t\tif(k[i]!='0'){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(i<a.length()){\n\t\t\tchar temp = k[0];\n\t\t\tk[0] = k[i];\n\t\t\tk[i] = temp;\n\t\t\t\t\n\t\t}\n\t\tString l = new String(k);\n\t\tif(l.equals(b)){\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t\t\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "a=list(input().strip())\nb=input().strip()\na.sort()\nfor i in range(len(a)):\n  if a[i]!='0':\n    a[0],a[i]=a[i],a[0]\n    break\nif a==list(b):\n  print(\"OK\")\nelse:\n  print(\"WRONG_ANSWER\")\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner in= new Scanner (System.in);\n\t\t\n\t\tString data=in.nextLine();\n\t\tString answer=in.nextLine();\n\t\t\n\t\t\n\t\tchar x[]=data.toCharArray();\n\t\tArrays.sort(x);\n\t\tint flag=0;\n\t\tString my=\"\";\n\t\tfor(int i=0;i<x.length;i++){\n\t\t\tif(x[i]!='0'){\n\t\t\t\tmy=my+x[i];\n\t\t\t\tx[i]='k';\n\t\t\t\tif(i==x.length-1 && x.length!=1){\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<x.length;i++){\n\t\t\tif(x[i]!='k'){\n\t\t\t\t\n\t\t\t\tmy=my+x[i];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif(flag==1){\n\t\t\t\n\t\t\tif(answer.length()==1 && answer.charAt(0)==data.charAt(0)){\n\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tSystem.exit(0);\n\t\t}\n\t\t\n\t\tif(answer.equals(\"0\") && data.equals(\"0\")){\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\t\n\t\telse if ( answer.startsWith(\"0\") && data.length()!=1  ){\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t\t\n\t\telse if (answer.equals(my)){\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t\n\t\t\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "IN = lambda: raw_input()\na, b = IN(), IN()\n\nif b[0] == '0' and cmp(a, b)!=0:\n    print 'WRONG_ANSWER'\nelse :\n    a = sorted(a)\n    if a[0] == '0':\n        LL = len(a)\n        for i in xrange(LL):\n            if a[i] != '0':\n                a[0] = a[i]; a[i]='0'\n                break\n    ss =\"\"\n    for i in a:\n        ss += i\n    a = ss\n    print 'OK' if cmp(a, b)==0 else 'WRONG_ANSWER'\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main implements Runnable {\n\t\t\n\tpublic void solve() throws IOException {\n                String a = nextToken();\n                String b = nextToken();\n                if(a.length() != b.length()){\n                        System.out.println(\"WRONG_ANSWER\");\n                        return;\n                }\n\t\tint N = Integer.parseInt(a);\n                int ans = Integer.parseInt(b);\n                char[] s = (N + \"\").toCharArray();\n                Arrays.sort(s);\n                if(s[0] == '0'){\n                        for(int i = 1; i < s.length; i++){\n                                if(s[0] < s[i]){\n                                        char t = s[0];\n                                        s[0] = s[i];\n                                        s[i] = t;\n                                        break;\n                                }\n                        }\n                }\n                \n                int now = Integer.parseInt(new String(s));\n                if(now == ans)System.out.append(\"OK\");\n                else System.out.println(\"WRONG_ANSWER\");\n\t}\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t//-----------------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\ttok = null;\n\t\t\tsolve();\n\t\t\tin.close();\n\t\t} catch (IOException e) {\n\t\t\tSystem.exit(0);\n\t\t}\n\t}\n\n\tpublic String nextToken() throws IOException {\n\t\twhile (tok == null || !tok.hasMoreTokens()) {\n\t\t\ttok = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn tok.nextToken();\n\t}\n\n\tpublic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic long nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tpublic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tBufferedReader in;\n\tStringTokenizer tok;\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string m, n;\n  cin >> m >> n;\n  if (m == \"0\") {\n    if (n == \"0\")\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  } else {\n    if (m.length() != n.length())\n      cout << \"WRONG_ANSWER\";\n    else {\n      int A[m.length()];\n      string t = \"OK\";\n      for (int i = 0; i < m.length(); i++) A[i] = m[i] - 48;\n      sort(A, A + m.length());\n      int j = 0;\n      while (A[j] == 0) j++;\n      if (n[0] - 48 != A[j]) t = \"WRONG_ANSWER\";\n      for (int i = 0; i < j; i++) {\n        if (n[i + 1] != 48) t = \"WRONG_ANSWER\";\n      }\n      for (int i = j + 1; i < n.length(); i++) {\n        if (n[i] - 48 != A[i]) t = \"WRONG_ANSWER\";\n      }\n      cout << t;\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a, b, i, k = 0, l;\n  char s[1001];\n  char c[1001];\n  gets(c);\n  b = strlen(c);\n  sort(c, c + b);\n  gets(s);\n  l = strlen(s);\n  if (l != b) {\n    printf(\"WRONG_ANSWER\\n\");\n    return 0;\n  }\n  for (i = 0; i < b; i++) {\n    if (c[i] != '0') {\n      swap(c[i], c[0]);\n      break;\n    }\n  }\n  for (i = 0; i < b; i++) {\n    if (c[i] != s[i]) {\n      printf(\"WRONG_ANSWER\\n\");\n      return 0;\n    }\n  }\n  printf(\"OK\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class Correct {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString a = sc.next();\n\t\tString b = sc.next();\n\t\tString c = \"\";\n\t\tint[] ar = new int[10];\n\t\tint cont = 1;\n\t\tif(a.length() != b.length()) {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t\telse {\n\t\t\tfor(int i=0; i<a.length(); i++) {\n\t\t\t\tar[Integer.parseInt(String.valueOf(a.charAt(i)))]++;\n\t\t\t}\n\t\t\twhile(c.equals(\"\") && cont < 10) {\n\t\t\t\tif(ar[cont] > 0) {\n\t\t\t\t\tc += cont + \"\";\n\t\t\t\t\tar[cont]--;\n\t\t\t\t}\n\t\t\t\tcont++;\n\t\t\t}\n\t\t\tfor(int i=0; i<ar.length; i++) {\n\t\t\t\tfor(int j=0; j<ar[i]; j++) {\n\t\t\t\t\tc += i + \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c.equals(b)) System.out.println(\"OK\");\n\t\t\telse System.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char x[15], y[15];\n  while (cin >> x >> y) {\n    int len___x = strlen(x);\n    sort(x, x + len___x);\n    int z = 0;\n    for (int i = 0; i < len___x; i++) {\n      if (x[i] != '0') {\n        z = i;\n        break;\n      }\n    }\n    char tmp;\n    tmp = x[0];\n    x[0] = x[z];\n    x[z] = tmp;\n    if (strcmp(x, y) == 0)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring One, Cmp;\nint main() {\n  cin >> One >> Cmp;\n  int Lon = One.size();\n  sort(One.begin(), One.end());\n  for (int i = 0; i < Lon; i++) {\n    if (One[i] != '0') {\n      swap(One[i], One[0]);\n      break;\n    }\n  }\n  if (One == Cmp)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  string d;\n  cin >> n >> d;\n  int num = n;\n  vector<int> v1;\n  if (n == 0) {\n    v1.push_back(0);\n  }\n  while (num != 0) {\n    v1.push_back(num % 10);\n    num /= 10;\n  }\n  sort(v1.begin(), v1.end());\n  for (int i = 0; i < v1.size(); i++) {\n    if (v1[i] != 0) {\n      int temp = v1[i];\n      v1[i] = v1[0];\n      v1[0] = temp;\n      break;\n    }\n  }\n  string s1, s2 = d;\n  for (int i = 0; i < v1.size(); i++) {\n    s1 += to_string(v1[i]);\n  }\n  if (s1 == s2) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "r=lambda:map(int,raw_input().split())\n\ndef main():\n\tn=int(raw_input())\n\n\tmoo=raw_input()\n\tm=int(moo)\n\n\tif( str(m) != moo):\n\t\tprint \"WRONG_ANSWER\"\n\t\treturn\n\n\t#n=3310\n\t#m=1033\n\n\tcorrect = list(str(n))\n\tcorrect = sorted(correct)\n\n\tfor letter in range(len(correct)):\n\t\tif( correct[letter]!='0' ):\n\t\t\tt=correct[letter]\n\t\t\tdel( correct[letter] )\n\t\t\tcorrect = [t] + correct\n\t\t\tbreak\n\n\t#print \"\".join([str(x) for x in correct])\n\t\n\tnn=int( \"\".join(correct) )\n\tif nn==m:\n\t\tprint \"OK\"\n\telse:\n\t\tprint \"WRONG_ANSWER\"\n\t\t\n\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100000 + 10;\nconst int INF = 0x3f3f3f3f;\nconst int MOD = 1e9 + 7;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  if (a.size() > 1 && a[0] == '0') {\n    int i = 0;\n    while (a[i] == '0') ++i;\n    a[0] = a[i];\n    a[i] = '0';\n  }\n  if (a == b)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[30], b[30] = {0};\n  char str1[200], str2[2000], c[200];\n  long long n, m;\n  scanf(\"%s%s\", str1, str2);\n  if (str1[0] == str2[0] && str1[0] == '0' && strlen(str1) == 1 &&\n      strlen(str2) == 1) {\n    printf(\"OK\\n\");\n    return 0;\n  }\n  n = str1[0] - '0';\n  for (int i = 1; i < strlen(str1); i++) {\n    n = n * 10 + str1[i] - '0';\n  }\n  strcpy(c, str2);\n  reverse(c, c + strlen(str2));\n  int len2 = strlen(str2);\n  for (int i = strlen(str2) - 1; i >= 0; i--) {\n    if (c[i] != '0')\n      break;\n    else if (c[i] == '0')\n      c[i] = '\\0', len2--;\n  }\n  reverse(c, c + len2);\n  if (len2 != strlen(str2)) {\n    printf(\"WRONG_ANSWER\\n\");\n    return 0;\n  }\n  m = c[0] - '0';\n  for (int i = 1; i < len2; i++) {\n    m = m * 10 + c[i] - '0';\n  }\n  int cnt = 0;\n  while (n) {\n    b[n % 10]++;\n    n /= 10;\n    cnt++;\n  }\n  long long ans = 0;\n  for (int i = 1; i <= cnt; i++) {\n    for (int j = 0; j < 10; j++) {\n      if (b[j] != 0) {\n        a[i] = j;\n        b[j]--;\n        break;\n      }\n    }\n  }\n  int flag;\n  for (int i = 1; i <= cnt; i++) {\n    if (a[i] == 0)\n      continue;\n    else if (a[i] != 0) {\n      flag = i;\n      ans = a[i];\n      break;\n    }\n  }\n  for (int i = 1; i <= cnt; i++) {\n    if (i == flag) continue;\n    ans = ans * 10 + a[i];\n  }\n  if (ans != m) {\n    printf(\"WRONG_ANSWER\\n\");\n  } else {\n    printf(\"OK\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package round12;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B {\n\tScanner in;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\t\n\tvoid solve()\n\t{\n\t\tint n = ni();\n\t\tString sm = in.next();\n\t\tint m = Integer.parseInt(sm);\n\t\tchar[] s = Integer.toString(n).toCharArray();\n\t\tif(s.length != sm.length()){\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tArrays.sort(s);\n\t\tfor(int i = 0;i < s.length;i++){\n\t\t\tif(s[i] != '0'){\n\t\t\t\tchar d = s[i];s[i] = s[0];s[0] = d;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint sn = Integer.parseInt(new String(s));\n\t\tif(sn == m){\n\t\t\tout.println(\"OK\");\n\t\t}else{\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n\t\n\tvoid run() throws Exception\n\t{\n\t\tin = oj ? new Scanner(System.in) : new Scanner(INPUT);\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\ttr(System.currentTimeMillis()-s+\"ms\");\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tnew B().run();\n\t}\n\t\n\tint ni() { return Integer.parseInt(in.next()); }\n\tlong nl() { return Long.parseLong(in.next()); }\n\tdouble nd() { return Double.parseDouble(in.next()); }\n\tboolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\tvoid tr(Object... o) { if(!oj)System.out.println(Arrays.deepToString(o)); }\n}\n"
        },
        {
            "language": 1,
            "solution": "a = ''.join( sorted( raw_input() ) )\nn = a.count('0')\na = a[n:n+1] + '0'*n + a[n+1:]\nprint ['OK', 'WRONG_ANSWER'][ cmp(a, raw_input().strip() )]\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, a, p;\n  cin >> s >> p;\n  long long int x = 0;\n  sort(s.begin(), s.end());\n  for (long long int i = 0; i < s.size(); i++) {\n    if (s[i] != '0') {\n      x = i;\n      break;\n    }\n  }\n  swap(s[x], s[0]);\n  if (s == p)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10];\nint main() {\n  string s, t, ans = \"\";\n  cin >> s >> t;\n  if (s == \"0\" && t == \"0\") {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < s.length(); i++) a[s[i] - '0']++;\n  for (int i = 1; i <= 9; i++)\n    if (a[i] > 0) {\n      ans = char(i + '0');\n      a[i]--;\n      for (int j = 0; j <= 9; j++)\n        for (int k = 0; k < a[j]; k++) ans += char(j + '0');\n      break;\n    }\n  if (ans == t)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  string s, t, ans;\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  long long i = 0;\n  while (s[i] == '0' && i < s.length()) {\n    i++;\n  }\n  if (i == s.length()) {\n    if (s.length() == t.length() && s == t)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  ans += s[i];\n  s.erase(s.begin() + i);\n  ans += s;\n  if (ans == t)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m=sorted(input()),input()\nif n[0]==\"0\":\n    for i in range(len(n)):\n        if n[i]!=\"0\":\n            n[0],n[i]=n[i],n[0]\n            break\nprint(\"OK\" if \"\".join(n)==m else \"WRONG_ANSWER\")"
        },
        {
            "language": 1,
            "solution": "t,s=raw_input(),raw_input()\nt=''.join(sorted(t))\ncnt=t.count('0')\nif len(t)>cnt: t=t[cnt] + '0'*cnt + t[cnt+1:]\nprint \"OK\" if s==t else \"WRONG_ANSWER\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string n, m, ans = \"\";\n  cin >> n >> m;\n  if (n == \"0\") {\n    if (n == m)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  int arr[10];\n  memset(arr, 0, sizeof arr);\n  for (int i = 0; i < n.size(); i++) arr[n[i] - '0']++;\n  for (int i = 1; i < 10; i++) {\n    if (arr[i]) {\n      ans += ('0' + i);\n      arr[i]--;\n      break;\n    }\n  }\n  if (!ans.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  for (int i = 0; i < 10; i++) {\n    while (arr[i]) {\n      ans += ('0' + i);\n      arr[i]--;\n    }\n  }\n  if (ans == m)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nb=input()\nl=[]\nfor i in range(len(n)):\n    l.append(n[i])\nl.sort()\ni=0\nwhile( i<len(n)):\n    if(l[i]=='0'):\n        pass\n    else:\n        break\n    i+=1\nif(l[len(n)-1]=='0'):\n    pass\nelse:\n    tmp=l[0]\n    l[0]=l[i]\n    l[i]=tmp\nq=''.join(l)\nif(q==b):\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 3,
            "solution": "n=input()\nanswer=input()\nn=list(n)\ndef getlow(lst,answer):\n    if (answer[0]=='0' and lst[0]!='0') or (len(lst)!=len(answer)):\n        return 'WRONG_ANSWER'\n    if len(lst)==len(answer)==1:\n        check=lst[0]==answer\n        if check:\n            return 'OK'\n        else:\n            return 'WRONG_ANSWER'\n        \n    int_lst=list(map(int,lst))\n    sorted_lst=sorted(int_lst)\n    no_0=[i for i in sorted_lst if i!=0]\n    lead=no_0[0]\n    sorted_lst.remove(lead)\n    ans=str(lead)+''.join(map(str,sorted_lst))\n    \n    if answer==ans:\n        return'OK'\n    return 'WRONG_ANSWER'\n\n    \nprint(getlow(n,answer))\n"
        },
        {
            "language": 1,
            "solution": "from sys import *\n\ndef solve(s):\n    ans = list(s)\n    ans.sort()\n    for i in xrange(len(ans)):\n        if ans[i] != '0':\n            ans[0],ans[i] = ans[i],ans[0]\n            return ans\n    return ans\n\ns = stdin.readline()[:-1]\nt = stdin.readline()[:-1]\nif solve(s) == list(t):\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\"\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nm = raw_input()\nD = [0 for i in range(10)]\n\nfor i in n:\n    D[int(i)] += 1\nans = ''\nfor j in range(1,10):\n    if D[j] != 0:\n        ans += str(j)\n        D[j] -= 1\n        break\n\n\nfor j in range(10):\n    ans += D[j]*str(j)\n\nif ans == m :\n    print \"OK\"\n\nelse:\n    print \"WRONG_ANSWER\"\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 2147483647;\nconst long long LLINF = 9223372036854775807LL;\nstring t, s;\nint main() {\n  cin >> t;\n  cin >> s;\n  if (s == \"0\" & t == \"0\") {\n    cout << \"OK\";\n    exit(0);\n  }\n  char z[20];\n  int size = t.size();\n  for (int i = 0; i < size; ++i) z[i] = t[i];\n  sort(z, z + size);\n  int c = 0;\n  while (c < size & z[c] == '0') c++;\n  if (c == size) {\n    cout << \"WRONG_ANSWER\";\n    exit(0);\n  }\n  swap(z[c], z[0]);\n  for (int i = 0; i < size; ++i) t[i] = z[i];\n  if (t == s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "# 12.B\nimport sys\n\ndef main():\n\ta = sorted (sys.stdin.readline().strip())\n\tb = list (sys.stdin.readline().strip())\n\tfor i in xrange (len(a)):\n\t\tif a[i] > '0':\n\t\t\tt = a[0]\n\t\t\ta[0] = a[i]\n\t\t\ta[i] = t\n\t\t\tbreak\n\t#print a\n\t#print b\n\tif a == b:\n\t\tprint 'OK'\n\telse:\n\t\tprint 'WRONG_ANSWER'\n\nif len (sys.argv) > 1:\n\tsys.stdin = open (sys.argv[1], 'r')\nmain()\n\n"
        },
        {
            "language": 3,
            "solution": "#################################################################\n# - Programming Credits - atifcppprogrammer\n#################################################################\n# Getting Problem Data from Codeforces.\nnumberOrg,numberMin = list(input()),input()\n# For Storing Occurence of Digits (0-9) in numberOrg.\nnumString = ['0','1','2','3','4','5','6','7','8','9']\nlistCount = [0,0,0,0,0,0,0,0,0,0]\n# Computing Counts.\nfor i in range(len(numberOrg)):\n    digit = int(numberOrg[i])\n    listCount[digit] = listCount[digit]+1\n# Computing Minimum-Non Zero Occuring Digit.\nindex,found = 1,False\nwhile not found and index<10:\n    if listCount[index]>0:\n        found = True\n    else: index = index+1\n# Deciding on minNonZero based on Search.\nif not found: minNonZero = 0\nelse: minNonZero = index\n# Computing Minimum Possible Number.\n# Adding one minNonZero.\npossMin = numString[minNonZero]\nlistCount[minNonZero] = listCount[minNonZero]-1\n# Accounting For Zeros.\npossMin+= numString[0]*listCount[0]\n# Accounting for remaining minNonZero's.\npossMin+= numString[minNonZero]*listCount[minNonZero]\n# Accounting for digits greater than minNonZero's.\nfor i in range(minNonZero+1,10):\n    possMin+=numString[i]*listCount[i]\n# Verdict.\nif possMin == numberMin:\n    print(\"OK\")\nelse: print(\"WRONG_ANSWER\")\n#################################################################\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class Codeforces {\npublic static int a,n;\npublic static int[] arr=new int[10];\n    public static void main(String[] args) {\n        Scanner entrada=new Scanner(System.in);\n        String nn=entrada.nextLine();\n        String aa=entrada.nextLine();\n        if(nn.length()!=aa.length()){\n        System.out.println(\"WRONG_ANSWER\");\n                System.exit(0);\n        }\n        n=Integer.parseInt(nn);\n        a=Integer.parseInt(aa);\n    int x=n;\n    int cont=0;\n    while(x>0){\n            int d=(int)(x%10);\n            x/=10;\n            arr[d]++;\n            cont++;\n    //printf(\"%d\",d);\n    }\n            int num=0;\n            int flag=0;\n            for(int i=1;i<10;i++){\n                    while(arr[i]>0){\n                            arr[i]--;\n                            int m=i;\n                            num*=10;\n                            num+=m;\n                            if(flag==0){\n                                    while(arr[0]>0){\n                                            arr[0]--;\n                                            num*=10;\n                                    }\n                                    flag=1;\n                            }\n                    }\n            }\n            //System.out.println(num);\n            if(num==a)\n                    System.out.println(\"OK\");\n            else\n                    System.out.println(\"WRONG_ANSWER\");\n        }\n    \n}"
        },
        {
            "language": 1,
            "solution": "import sys\n\nif __name__ == '__main__':\n    lines = sys.stdin.readlines()\n    i2 = lines[1].rstrip()\n\n    zeros = []\n    i1 = []\n    for i in lines[0].rstrip():\n        if i == \"0\":\n            zeros.append(i)\n        else:\n            i1.append(i)\n\n    if len(i1) == 0:\n        if len(i2) == 1 and int(i2) == 0:\n            print \"OK\"\n        else:\n            print \"WRONG_ANSWER\"\n        sys.exit()\n\n    i1.sort()\n    output = i1[0]\n    for i in zeros:\n        output += i\n        \n    for i in i1[1:]:\n        output += i\n\n    if output == i2:\n        print \"OK\"\n    else:\n        print \"WRONG_ANSWER\"\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring inttostr(long x) {\n  string tmp = \"\";\n  while (x > 0) {\n    char ch = (x % 10) + 48;\n    tmp = ch + tmp;\n    x /= 10;\n  }\n  return tmp;\n}\nint main() {\n  long n;\n  string m;\n  cin >> n >> m;\n  long a[11];\n  memset(a, 0, sizeof(a));\n  long s = 0;\n  while (n > 0) {\n    s++;\n    a[s] = n % 10;\n    n /= 10;\n  }\n  for (int i = 1; i <= s; i++)\n    for (int j = i + 1; j <= s; j++) {\n      if (a[i] > a[j]) {\n        long tmp = a[i];\n        a[i] = a[j];\n        a[j] = tmp;\n      }\n    }\n  long q = 1;\n  while ((q <= s) && (a[q] == 0)) q++;\n  if (q > s) {\n    if (m == \"0\") {\n      cout << \"OK\" << endl;\n      return 0;\n    }\n    if (m != \"0\") {\n      cout << \"WRONG_ANSWER\" << endl;\n      return 0;\n    }\n  }\n  long v = a[q];\n  for (int i = 1; i < q; i++) v *= 10;\n  for (int i = q + 1; i <= s; i++) v = v * 10 + a[i];\n  if (inttostr(v) == m)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input('')\nm = raw_input('')\n\nbl = 0\n\nif m[0] != '0' and len(n) == len(m) and len(n) != 1:\n    dl = len(n)\n\n    sp = []\n\n    for x in range(dl):\n        sp.append(n[x])\n\n    sp = [int(x) for x in sp]\n    sp.sort()\n\n    kol = sp.count(0)\n\n    if kol != 0 and kol != dl:\n        ch = sp[kol]\n        sp[0] = ch\n        sp[kol] = 0\n\n    if kol != dl or len(m) == 1:\n        sp = [str(x) for x in sp]\n\n        pStr = ''\n        pStr = pStr.join(sp)\n\n        if pStr == m:\n            bl = 1\n            print 'OK'\nelif len(n) == len(m):\n    if n == m:\n        bl = 1\n        print 'OK'\nelse:\n    pass\n\nif bl == 0:\n    print 'WRONG_ANSWER'\n"
        },
        {
            "language": 3,
            "solution": "Alice = input()\nBob = input()\nlst = sorted(list(Alice))\nzeros = lst.count('0')\ncheck = '0'*zeros if (len(Alice) == zeros) else (lst[zeros] + '0'*zeros)\n\nfor i in range(zeros+1, len(Alice)):\n    check = check + lst[i]\n\nprint('OK' if Bob == check else 'WRONG_ANSWER')\n"
        },
        {
            "language": 1,
            "solution": "I=lambda:map(int, raw_input().split())\na,b=sorted(raw_input()),raw_input()\nx,y=[i for i in a if i!='0'], [i for i in a if i=='0']\nprint 'OK' if ''.join(x[:1]+y+x[1:])==b else 'WRONG_ANSWER'"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nchar N[10], M[10];\ninline int findSmallestNumber() {\n  int tmp[10], idx = 0, countZero = 0, minValue = 00;\n  memset(tmp, 0, sizeof tmp);\n  n = atoi(N);\n  m = atoi(M);\n  while (n) {\n    if (n % 10 != 0)\n      tmp[idx++] = n % 10;\n    else\n      countZero++;\n    n /= 10;\n  }\n  sort(tmp, tmp + idx);\n  int result = (int)tmp[0] * pow(10, countZero);\n  for (int i = 1; i < idx; ++i) {\n    result *= 10;\n    result += tmp[i];\n  }\n  return result == m;\n}\nint main() {\n  cin >> N >> M;\n  if (strlen(M) > strlen(N))\n    cout << \"WRONG_ANSWER\" << endl;\n  else if (!findSmallestNumber())\n    cout << \"WRONG_ANSWER\" << endl;\n  else\n    cout << \"OK\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 10;\nint digits[N];\ninline int find_min(int start = 0) {\n  for (int i = start; i < N; i++) {\n    if (digits[i] > 0) {\n      digits[i]--;\n      return i;\n    }\n  }\n  return -1;\n}\nint main() {\n  string given, answer, correct;\n  cin >> given >> answer;\n  if (answer[0] == '0') {\n    if (given[0] != '0') {\n      cout << \"WRONG_ANSWER\" << endl;\n      return 0;\n    }\n  }\n  int length = given.length();\n  for (int i = 0; i < length; i++) {\n    digits[given[i] - '0']++;\n  }\n  int min = find_min(1);\n  if (min != -1) {\n    correct += ('0' + min);\n  }\n  while (true) {\n    min = find_min();\n    if (min == -1) {\n      break;\n    }\n    correct += ('0' + min);\n  }\n  cout << (correct == answer ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, m;\n  cin >> s >> m;\n  int len = s.size();\n  int i, j;\n  if (s == \"0\") {\n    if (m == \"0\")\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  } else {\n    for (i = 0; i < len; i++) {\n      for (j = i + 1; j < len; j++) {\n        if (s[i] > s[j]) swap(s[i], s[j]);\n      }\n    }\n    if (s[0] == '0') swap(s[0], s[1]);\n    if (s == m)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# Getting Problem Data from Codeforces.\nnumberOrg,numberMin = list(input()),input()\n# For Storing Occurence of Digits (0-9) in numberOrg.\nnumString = ['0','1','2','3','4','5','6','7','8','9']\nlistCount = [0,0,0,0,0,0,0,0,0,0]\n# Computing Counts.\nfor i in range(len(numberOrg)):\n    digit = int(numberOrg[i])\n    listCount[digit] = listCount[digit]+1\n# Computing Minimum-Non Zero Occuring Number.\nindex,found = 1,False\nwhile not found and index<10:\n    if listCount[index]>0:\n        found = True\n    else: index = index+1\n# Deciding on minNonZero based on Search.\nif not found: minNonZero = 0\nelse: minNonZero = index\n# Computing Minimum Possible Number.\n# Adding one minNonZero.\npossMin = numString[minNonZero]\nlistCount[minNonZero] = listCount[minNonZero]-1\n# Accounting For Zeros.\npossMin+= numString[0]*listCount[0]\n# Accounting for remaining minNonZeros.\npossMin+= numString[minNonZero]*listCount[minNonZero]\n# Accounting for digits greater than minNonZero.\nfor i in range(minNonZero+1,10):\n    possMin+=numString[i]*listCount[i]\n# Verdict.\nif possMin == numberMin:\n    print(\"OK\")\nelse: print(\"WRONG_ANSWER\")\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, p;\n  cin >> s >> p;\n  bool OK = false;\n  sort(s.begin(), s.end());\n  if (s[0] == '0' && s.length() != 1) {\n    int p = 0;\n    while (s[p] == '0' && p < s.length()) {\n      p++;\n    }\n    s[0] = s[p];\n    s[p] = '0';\n  }\n  if (s == p) OK = true;\n  if (OK)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s2 == \"0\") {\n    if (s1 == \"0\") {\n      cout << \"OK\" << endl;\n    } else {\n      cout << \"WRONG_ANSWER\" << endl;\n    }\n  } else if (s2[0] == '0') {\n    cout << \"WRONG_ANSWER\" << endl;\n  } else {\n    sort(s1.begin(), s1.end());\n    if (s1[0] == '0') {\n      int t = 0;\n      while (t < s1.size() && s1[t] == '0') {\n        ++t;\n      }\n      swap(s1[0], s1[t]);\n    }\n    if (s1 == s2) {\n      cout << \"OK\" << endl;\n    } else {\n      cout << \"WRONG_ANSWER\" << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long LLINF = 9223372036854775807LL;\nconst int INF = 2147483647;\nconst int MOD = 1000000007;\nconst double eps = 1e-7;\nconst double PI = acos(-1.0);\nint dr[] = {1, 0, -1, 0, -1, 1, 1, -1};\nint dc[] = {0, -1, 0, 1, 1, 1, -1, -1};\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  sort(s1.begin(), s1.end());\n  if (s1[0] == '0' && (int)s1.length() >= 2) {\n    swap(s1[0], s1[1]);\n  }\n  if (s1 == s2)\n    puts(\"OK\");\n  else\n    puts(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class _1028CorrectSolution {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\tString n=sc.nextLine();\n\t\tString  m=sc.nextLine();\n\t\tint[] arr = new int[10];\n\t\tString s=n;\n\t\tint min=Integer.MAX_VALUE;\n\t\tfor(int i=0;i<s.length();i++) {\n\t\t\tint val=Integer.valueOf(s.charAt(i)+\"\");\n\t\t\tif(val!=0) {\n\t\t\tmin=Math.min(val, min);\n\t\t\t}\n\t\t\tarr[val]++;\n\t\t}\n\t\tString ans=\"\";\n\t\tif(arr[0]!=0 && min!=Integer.MAX_VALUE) {\n\t\t\tans+=min;\n\t\t\tarr[min]--;\n\t\t}\n\t//\tSystem.out.println(ans);\n\t\tfor(int i=0;i<arr.length;i++) {\n\t\t\tint rep=arr[i];\n\t\t\tfor(int j=0;j<rep;j++) {\n\t\t\t\tans+=i;\n\t\t\t}\n\t\t}\n\t//\tSystem.out.println(ans);\n\t\tif(ans.equals(m+\"\")) {\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n, shuffled = sorted([int(d) for d in input()]), input()\nif str(int(shuffled)) != shuffled:\n    print(\"WRONG_ANSWER\")\n    exit(0)\nzeros = n.count(0)\nn = n[zeros:zeros+1] + [0] * zeros + n[zeros+1:]\nprint(\"OK\") if int(\"\".join(map(str, n))) == int(shuffled) else print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.awt.Point;\nimport java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class B {\n\n    public static void main(String[] Args) throws IOException {\n        new B().solve();\n    }\n\n    void solve() throws IOException {\n        char[] s = ss().toCharArray();\n        String m = ss();\n\n        int[] a = new int[10];\n        for (char c : s) {\n            a[c - '0']++;\n        }\n        StringBuilder b = new StringBuilder(\"\");\n        int i = 1;\n        for (; i < a.length; i++) {\n            if (a[i] > 0) {\n                a[i]--;\n                b.append(i);\n                break;\n            }\n        }\n\n        for (int j = 0; j < a[0]; j++) {\n            b.append(0);\n        }\n\n        for (; i < a.length; i++) {\n            for (int j = 0; j < a[i]; j++) {\n                b.append(i);\n            }\n        }\n        System.out.println(b.toString().equals(m) ? \"OK\" : \"WRONG_ANSWER\");\n\n    }\n\n    class comp implements Comparator<int[]> {\n\n        @Override\n        public int compare(int[] o1, int[] o2) {\n            // TODO Auto-generated method stub\n            return 0;\n        }\n\n    }\n\n    // ----------------------- Library ------------------------\n    void initSystem() throws IOException {\n        if (br != null)\n            br.close();\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    void initFile() throws IOException {\n        if (br != null)\n            br.close();\n        br = new BufferedReader(new InputStreamReader(new FileInputStream(\n                \"input.txt\")));\n    }\n\n    void printWriter() {\n        try {\n            PrintWriter pr = new PrintWriter(\"output.txt\");\n            pr.println(\"hello world\");\n            pr.close();\n        } catch (FileNotFoundException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n    void comparator() {\n        Point[] v = new Point[10];\n        Arrays.sort(v, new Comparator<Point>() {\n            @Override\n            public int compare(Point a, Point b) {\n                if (a.x != b.x)\n                    return -(a.x - b.x);\n                return a.y - b.y;\n            }\n        });\n    }\n\n    double distance(Point a, Point b) {\n        double dx = a.x - b.x, dy = a.y - b.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    Scanner in = new Scanner(System.in);\n\n    String ss() {\n        return in.next();\n    }\n\n    String sline() {\n        return in.nextLine();\n    }\n\n    int si() {\n        return in.nextInt();\n    }\n\n    int[] sai(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < a.length; i++) {\n            a[i] = in.nextInt();\n        }\n        return a;\n    }\n\n    int[] sai_(int n) {\n        int[] a = new int[n + 1];\n        for (int i = 1; i <= n; i++) {\n            a[i] = in.nextInt();\n        }\n        return a;\n    }\n\n    BufferedReader br;\n    StringTokenizer tokenizer;\n    {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    void tok() throws IOException {\n        tokenizer = new StringTokenizer(br.readLine());\n    }\n\n    int toki() throws IOException {\n\n        return Integer.parseInt(tokenizer.nextToken());\n    }\n\n    int[] rint(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < a.length; i++)\n            a[i] = Integer.parseInt(tokenizer.nextToken());\n\n        return a;\n    }\n\n    int[] rint_(int n) throws IOException {\n        int[] a = new int[n + 1];\n        for (int i = 1; i <= n; i++)\n            a[i] = Integer.parseInt(tokenizer.nextToken());\n\n        return a;\n    }\n\n    String[] rstrlines(int n) throws IOException {\n        String[] a = new String[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = br.readLine();\n        }\n        return a;\n    }\n\n    long tokl() {\n        return Long.parseLong(tokenizer.nextToken());\n    }\n\n    double tokd() {\n        return Double.parseDouble(tokenizer.nextToken());\n    }\n\n    String toks() {\n        return tokenizer.nextToken();\n    }\n\n    String rline() throws IOException {\n        return br.readLine();\n    }\n\n    List<Integer> toList(int[] a) {\n        List<Integer> v = new ArrayList<Integer>();\n        for (int i : a)\n            v.add(i);\n        return v;\n    }\n\n    static void pai(int[] a) {\n        System.out.println(Arrays.toString(a));\n    }\n\n    static int toi(Object s) {\n        return Integer.parseInt(s.toString());\n    }\n\n    static int[] dx_ = { 0, 0, 1, -1 };\n    static int[] dy_ = { 1, -1, 0, 0 };\n\n    static int[] dx3 = { 1, -1, 0, 0, 0, 0 };\n    static int[] dy3 = { 0, 0, 1, -1, 0, 0 };\n    static int[] dz3 = { 0, 0, 0, 0, 1, -1 };\n\n    static int[] dx = { 1, 0, -1, 1, -1, 1, 0, -1 }, dy = { 1, 1, 1, 0, 0, -1,\n            -1, -1 };\n\n    static int INF = 2147483647; // =2^31-1 // -8\n    static long LINF = 922337203854775807L; // -8\n    static short SINF = 32767; // -32768\n\n    // finds GCD of a and b using Euclidian algorithm\n    public int GCD(int a, int b) {\n        if (b == 0)\n            return a;\n        return GCD(b, a % b);\n    }\n\n    static List<String> toList(String[] a) {\n        return Arrays.asList(a);\n    }\n\n    static String[] toArray(List<String> a) {\n        String[] o = new String[a.size()];\n        a.toArray(o);\n        return o;\n    }\n\n    static int[] pair(int... a) {\n        return a;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool cmp(int x, int y) { return x < y; }\nint main() {\n  char a[11];\n  char b[11];\n  char c[11];\n  scanf(\"%s\", a);\n  scanf(\"%s\", b);\n  int i, s, t, m;\n  s = strlen(a);\n  m = strlen(b);\n  if (s != m) {\n    cout << \"WRONG_ANSWER\\n\";\n    return 0;\n  }\n  int num[20];\n  for (i = 0; i < s; i++) num[i] = a[i] - '0';\n  sort(num, num + s, cmp);\n  if (num[0] == 0 && s != 1) {\n    c[0] = num[1] + '0';\n    c[1] = num[0] + '0';\n    for (i = 2; i < s; i++) c[i] = num[i] + '0';\n  } else {\n    for (i = 0; i < s; i++) c[i] = num[i] + '0';\n  }\n  int z = strncmp(b, c, s);\n  if (z == 0) {\n    cout << \"OK\\n\";\n    return 0;\n  } else {\n    cout << \"WRONG_ANSWER\\n\";\n    return 0;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\nn = sys.stdin.readline()\nm = sys.stdin.readline()\nl = len(n) - 1\nk = [0] * 10\n\nres = 0\nfor i in range(l):\n    k[int(n[i])] += 1\n    \nz = []\nfor i in range(1, 10):\n    if(k[i] != 0):\n        z.append(str(i))\n        k[i] -= 1\n        break\n    \nz.extend(\"0\" * k[0])\n\nfor i in range(1, 10):\n    if(k[i] != 0):\n        z.extend(str(i) * k[i])\n\nml = len(m) - 1\nzers = 0\nfor i in range(ml):\n    if(m[i] != '0'):\n        zers = i\n        break  \n\nif(zers != 0):\n    print(\"WRONG_ANSWER\") \n    exit()\n\nif(int(n) == 0 and ml != 1):\n    print(\"WRONG_ANSWER\") \n    exit()\n    \nif(int(\"\".join(z)) == int(m)):\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")        \n        \n    \n    \n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.lang.Math;\n\npublic class main{\n    public static void main(String []args){\n        Scanner s = new Scanner(System.in);\n        String a = s.nextLine();\n        String b = s.nextLine();\n        int n = Integer.parseInt(a);\n        int m = Integer.parseInt(b);\n        int []count = new int[10];\n        while(n!=0){\n            count[n%10]++;\n            n /= 10;\n        }\n        for(int i = 1;i<10;i++){\n            if(count[i]!=0){\n                n += i;\n                count[i]--;\n                break;\n            }\n        }\n        while(count[0]!=0){\n            n = n * 10;\n            count[0]--;\n        }\n        for(int i = 1;i<10;i++){\n            while(count[i]!=0){\n                n = (n*10) + i;\n                count[i]--;\n            }\n        }\n        \n        if(n!=m || a.length()!=b.length()) System.out.println(\"WRONG_ANSWER\");\n        else System.out.println(\"OK\");\n    }\n}\n   "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char a[20], b[20];\n  while (scanf(\"%s %s%*c\", a, b) != EOF) {\n    int len = strlen(a);\n    sort(a, a + len);\n    if (a[0] == '0') {\n      for (int i = 1; i < len; i++)\n        if (a[i] != '0') {\n          char t = a[i];\n          a[i] = a[0];\n          a[0] = t;\n          break;\n        }\n    }\n    if (strcmp(a, b) == 0)\n      cout << \"OK\\n\";\n    else\n      cout << \"WRONG_ANSWER\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Problem12B {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = Integer.parseInt(scanner.nextLine());\n        String m = scanner.nextLine();\n\n        if (solve(n, m)) {\n            System.out.println(\"OK\");\n        } else {\n            System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n\n    public static boolean solve(int n, String m) {\n        return m.equals(Integer.toString(answer(n)));\n    }\n\n    public static int answer(int n) {\n        if (n == 0) {\n            return 0;\n        } else {\n            char[] digits = Integer.toString(n).toCharArray();\n            Arrays.sort(digits);\n\n            int firstNonVoid = 0;\n\n            while (digits[firstNonVoid] == '0') {\n                firstNonVoid += 1;\n            }\n\n            // 0 and firstNonVoid permutation\n            char tmp = digits[0];\n            digits[0] = digits[firstNonVoid];\n            digits[firstNonVoid] = tmp;\n\n            // digits concatenation\n            String output = \"\";\n\n            for (char c : digits) {\n                output += c;\n            }\n\n            return Integer.parseInt(output);\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\n/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n/**\n *\n * @author pttrung\n */\npublic class B {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner();\n        PrintWriter out = new PrintWriter(System.out);\n        String val = in.next();\n        String t = in.next();\n        long b = Long.parseLong(t);\n        if (t.length() != val.length()) {\n            out.println(\"WRONG_ANSWER\");\n        } else {\n\n            // System.out.println(val  + \" \" + b);\n            int[] data = new int[val.length()];\n            int index = -1;\n            for (int i = 0; i < data.length; i++) {\n                data[i] = val.charAt(i) - '0';\n                if (data[i] != 0) {\n                    if (index == -1) {\n                        index = i;\n                    } else if (data[i] < data[index]) {\n                        index = i;\n                    }\n                }\n            }\n            //  System.out.println(\"HE HE\");\n            if (index != -1) {\n                int temp = data[0];\n                data[0] = data[index];\n                data[index] = temp;\n                Arrays.sort(data, 1, data.length);\n                long result = 0;\n                for (int i = 0; i < data.length; i++) {\n                    result = result * 10 + data[i];\n                }\n                if (result == b) {\n                    out.println(\"OK\");\n                } else {\n                    out.println(\"WRONG_ANSWER\");\n                }\n            } else {\n                if (b == 0) {\n                    out.println(\"OK\");\n                } else {\n                    out.println(\"WRONG_ANSWER\");\n                }\n            }\n        }\n\n        out.close();\n    }\n\n    public static int countTwo(int val) {\n        int result = 0;\n        while (val > 0 && val % 2 == 0) {\n            val /= 2;\n            result++;\n        }\n        return result;\n    }\n\n    public static int countFive(int val) {\n        int result = 0;\n        while (val > 0 && val % 5 == 0) {\n            val /= 5;\n            result++;\n        }\n        return result;\n    }\n\n    public static long count(long two, long five) {\n        return Math.min(two, five);\n    }\n\n    public double pow(double a, int b) {\n        if (b == 0) {\n            return 1;\n        }\n        if (b == 1) {\n            return a;\n        }\n        double val = pow(a, b / 2);\n        if (b % 2 == 0) {\n            return val * val;\n        } else {\n            return val * val * a;\n        }\n    }\n\n    public static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    public static long lcm(long a, long b) {\n        return a * b / gcd(a, b);\n    }\n\n    static class Scanner {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() {\n            // System.setOut(new PrintStream(new BufferedOutputStream(System.out), true));\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public String next() {\n\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                    throw new RuntimeException();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            st = null;\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n\n        public boolean endLine() {\n            try {\n                String next = br.readLine();\n                while (next != null && next.trim().isEmpty()) {\n                    next = br.readLine();\n                }\n                if (next == null) {\n                    return true;\n                }\n                st = new StringTokenizer(next);\n                return st.hasMoreTokens();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "s=input()\nt=input()\n \nx=[]\nfor i in range(10):\n    x += [s.count(str(i))]\n \nans = \"\"\nfor i in range(1, 10):\n    if x[i]:\n        ans += str(i)\n        x[i] -= 1\n        break\n \nfor i in range(10):\n    ans += str(i) * x[i]\n \nprint(\"OK\" if ans==t else \"WRONG_ANSWER\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long x[100], w[100], ll[100];\nint main() {\n  bool ok = true;\n  int n, sum = 0, q;\n  string y, l;\n  cin >> y;\n  cin >> l;\n  n = y.size();\n  q = l.size();\n  if (q != n) {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < n; i++) {\n    if (y[i] == '0') {\n      x[i] = 0;\n    } else if (y[i] == '1') {\n      x[i] = 1;\n    } else if (y[i] == '2') {\n      x[i] = 2;\n    } else if (y[i] == '3') {\n      x[i] = 3;\n    } else if (y[i] == '4') {\n      x[i] = 4;\n    } else if (y[i] == '5') {\n      x[i] = 5;\n    } else if (y[i] == '6') {\n      x[i] = 6;\n    } else if (y[i] == '7') {\n      x[i] = 7;\n    } else if (y[i] == '8') {\n      x[i] = 8;\n    } else if (y[i] == '9') {\n      x[i] = 9;\n    }\n    if (l[i] == '0') {\n      ll[i] = 0;\n    } else if (l[i] == '1') {\n      ll[i] = 1;\n    } else if (l[i] == '2') {\n      ll[i] = 2;\n    } else if (l[i] == '3') {\n      ll[i] = 3;\n    } else if (l[i] == '4') {\n      ll[i] = 4;\n    } else if (l[i] == '5') {\n      ll[i] = 5;\n    } else if (l[i] == '6') {\n      ll[i] = 6;\n    } else if (l[i] == '7') {\n      ll[i] = 7;\n    } else if (l[i] == '8') {\n      ll[i] = 8;\n    } else if (l[i] == '9') {\n      ll[i] = 9;\n    }\n  }\n  sort(x, x + n);\n  x[n] = -2;\n  for (int i = 0; i < n - 1; i++) {\n    if (x[i] == 0 && x[i + 1] != 0) {\n      sum = i + 1;\n      w[0] = x[i + 1];\n      for (int i = 1; i <= sum; i++) {\n        w[i] = 0;\n      }\n      for (int i = sum + 1; i < n; i++) {\n        w[i] = x[i];\n      }\n      break;\n    }\n  }\n  if (sum == 0) {\n    for (int i = 0; i < n; i++) {\n      w[i] = x[i];\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (w[i] != ll[i]) {\n      ok = false;\n      break;\n    }\n  }\n  if (ok == true) {\n    cout << \"OK\" << endl;\n  } else if (ok == false) {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string n;\n  string m;\n  cin >> n;\n  cin >> m;\n  if (n == \"0\" && m != \"0\") {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  } else if (n == \"0\" && m == \"0\") {\n    cout << \"OK\";\n    return 0;\n  }\n  sort(n.begin(), n.end());\n  string au;\n  while (n.find('0') != string::npos) {\n    au += \"0\";\n    int f = n.find('0');\n    n.erase(f, 1);\n  }\n  n.insert(1, au);\n  cout << (n == m ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nint p[100];\nchar mm[100];\nint main() {\n  while (scanf(\"%d\", &n) != EOF) {\n    scanf(\"%s\", &mm);\n    int len = strlen(mm);\n    m = 0;\n    for (int i = 0; i < len; ++i) m = m * 10 + (mm[i] - '0');\n    if (n == 0) {\n      if (strlen(mm) != 1)\n        puts(\"WRONG_ANSWER\");\n      else if (m == 0)\n        puts(\"OK\");\n      else\n        puts(\"WRONG_ANSWER\");\n    } else {\n      if (mm[0] == '0') {\n        puts(\"WRONG_ANSWER\");\n        return 0;\n      }\n      int x = n;\n      memset(p, 0, sizeof(p));\n      while (x > 0) {\n        p[x % 10]++;\n        x /= 10;\n      }\n      int now = 0;\n      for (int i = 1; i <= 9; ++i)\n        if (p[i]) {\n          now = i;\n          p[i]--;\n          break;\n        }\n      for (int i = 0; i <= 9; ++i) {\n        while (p[i]) {\n          now = now * 10 + i;\n          p[i]--;\n        }\n      }\n      if (now == m)\n        puts(\"OK\");\n      else\n        puts(\"WRONG_ANSWER\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint comparar(const void *a, const void *b) { return (*(int *)a - *(int *)b); }\nint main() {\n  char num1[12];\n  int tamanho, i;\n  int contador;\n  char fim[12];\n  int tamanho2;\n  while (cin >> num1 >> fim) {\n    contador = 0;\n    int resp = 0;\n    int verdade = 1;\n    tamanho = strlen(num1);\n    int array[tamanho];\n    tamanho2 = strlen(fim);\n    if (tamanho != tamanho2) {\n      cout << \"WRONG_ANSWER\" << endl;\n    } else {\n      for (i = 0; i < tamanho; i++) {\n        array[i] = num1[i] - 48;\n      }\n      qsort(array, tamanho, sizeof(int), comparar);\n      for (i = 0; i < tamanho; i++) {\n        if (!array[i]) {\n          contador++;\n        }\n      }\n      if (contador) {\n        if (array[contador] != fim[resp] - 48) {\n          verdade = 0;\n        }\n        resp++;\n        for (i = 0; i < contador; i++) {\n          if (fim[resp] != '0' && strlen(fim) > 1) {\n            verdade = 0;\n          }\n          resp++;\n        }\n        for (i = contador + 1; i < tamanho; i++) {\n          if (fim[resp] - 48 != array[i]) {\n            verdade = 0;\n          }\n          resp++;\n        }\n      } else {\n        for (i = 0; i < tamanho; i++) {\n          if (fim[i] - 48 != array[i]) {\n            verdade = 0;\n          }\n        }\n      }\n      if (tamanho == 1 && tamanho2 == 1 && num1[0] == '0' && fim[0] == '0') {\n        verdade = 1;\n      }\n      if (verdade) {\n        cout << \"OK\" << endl;\n      } else {\n        cout << \"WRONG_ANSWER\" << endl;\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\nimport javax.naming.ldap.SortControl;\n\n\npublic class main {\n    \n    static void sort(int[] a) {\n        int tmp;\n        for (int i = 0; i < a.length; i++) {\n            for (int j =i; j < a.length; j++) {\n                if(a[j]<a[i])\n                {\n                    tmp=a[j];                   \n                    a[j]=a[i];\n                    a[i]=tmp;\n                }\n                \n            }\n            \n        }\n    }\n    \n\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Scanner input=new Scanner(System.in);\n        String tmp=input.nextLine();\n        int array[]=new int[tmp.length()];\n        for (int i = 0; i < tmp.length(); i++) {\n            array[i]=tmp.charAt(i)-'0';                     \n        }\n        sort(array);\n        \n        for (int i =1; i < array.length; i++) {\n            if(array[0]==0)\n            {               \n                array[0]=array[i];\n                array[i]=0;\n            }\n            else\n                break;\n                \n        }       \n        String y;\n        y=input.nextLine();\n        tmp=\"\";\n        for (int i = 0; i < array.length; i++) {\n            tmp+=array[i];\n            \n        }\n    \n        \n        if(y.equals(tmp))\n            System.out.print(\"OK\");\n        else\n            System.out.print(\"WRONG_ANSWER\");\n            \n        \n        \n        \n\n    }\n\n}\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint const N = 50;\nchar a[N], b[N];\nbool cmp(char a, char b) { return a < b; }\ninline void SWAP(char &a, char &b) {\n  a = a ^ b;\n  b = a ^ b;\n  a = a ^ b;\n}\nint main() {\n  scanf(\"%s\", a);\n  scanf(\"%s\", b);\n  int lena = strlen(a);\n  int lenb = strlen(b);\n  if (lena != lenb) {\n    printf(\"WRONG_ANSWER\\n\");\n    return 0;\n  }\n  if (a[0] == '0' && b[0] == '0') {\n    printf(\"OK\\n\");\n    return 0;\n  }\n  sort(a, a + lena, cmp);\n  int i = 0;\n  while (a[i] == '0') i++;\n  char t = a[i];\n  a[i] = a[0], a[0] = t;\n  if (strcmp(a, b))\n    printf(\"WRONG_ANSWER\\n\");\n  else\n    printf(\"OK\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint isleap(int year) {\n  if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) return 1;\n  return 0;\n}\nint main() {\n  char str[15], fstr[15];\n  int num[20] = {0}, i, a, n, m;\n  scanf(\"%s %s\", str, fstr);\n  n = strlen(str);\n  m = strlen(fstr);\n  if (n == 1 && m == 1 && str[0] == '0' && fstr[0] == '0') {\n    printf(\"OK\\n\");\n    return 0;\n  }\n  if (fstr[0] == '0') {\n    printf(\"WRONG_ANSWER\\n\");\n    return 0;\n  }\n  sort(str, str + n);\n  for (i = 0; i < n; i++)\n    if (str[i] != '0') break;\n  if (i != 0) {\n    str[0] = str[i];\n    str[i] = '0';\n  }\n  if (strcmp(str, fstr) == 0)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport static java.lang.Math.*;\nimport java.util.*;\npublic class CF {\n    String solve(String a, String b){\n        if( a.length()==1 )\n            if( a.equals(b) ) return \"OK\"; \n            else              return \"WRONG_ANSWER\";\n\n        int[] l = new int[a.length()];\n        for(int i=0 ; i<l.length ;i++) l[i]=a.charAt(i)-'0';\n        Arrays.sort(l);\n        if( l[0]==0 ) {int t=l[1]; l[1]=l[0]; l[0]=t;}\n\n        String s=\"\";\n        for(int i=0 ; i<l.length ; i++) s+=l[i]+\"\";\n        System.err.println(s);\n        return s.equals(b) ?  \"OK\" : \"WRONG_ANSWER\";\n    }\n    public void run(String[] args) {\n\ttry{\n\t    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t    System.out.println( solve(br.readLine(),br.readLine()) );\n\n\t}catch(Exception e){ e.printStackTrace(); }\n    }\n    public static void main(String[] args){\n\tLocale.setDefault(Locale.US);\n\t(new CF()).run(args);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, RightNumber;\n  long long y, z;\n  int x[10] = {0}, k;\n  cin >> y >> s;\n  if (stoll(s) == 0 && y == 0 && s.length() == to_string(y).length())\n    cout << \"OK\";\n  else if (s.length() == 1 && to_string(y).length() == 1) {\n    if (stoll(s) == y)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  } else if (s[0] == '0')\n    cout << \"WRONG_ANSWER\";\n  else {\n    bool flag = false;\n    z = stoll(s);\n    while (y > 0) {\n      k = y % 10;\n      y /= 10;\n      x[k]++;\n    }\n    for (int j = 0; j < x[1]; j++) {\n      RightNumber += to_string(1);\n      flag = true;\n      if (flag == true && x[0] != 0) {\n        for (int i = 0; i < x[0];) {\n          RightNumber += to_string(0);\n          x[0]--;\n        }\n      }\n    }\n    for (int i = 2; i < 10; i++) {\n      for (int j = 0; j < x[i]; j++) {\n        RightNumber += to_string(i);\n        flag = true;\n        if (flag == true && x[0] != 0)\n          for (int k = 0; k < x[0];) {\n            RightNumber += to_string(0);\n            x[0]--;\n          }\n      }\n    }\n    if (stoll(RightNumber) == z)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class B12 {\n\tpublic static void main(String[] args) throws IOException\t{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s = br.readLine();\n\t\tString t = br.readLine();\n\t\tint[] count = new int[10];\n\t\tfor(int i = 0; i < s.length(); i++)\n\t\t\tcount[s.charAt(i)-'0']++;\n\t\tString now = \"\";\n\t\tfor(int i = 1; i < 10; i++)\t\t{\n\t\t\tif(count[i] > 0)\t\t{\n\t\t\t\tcount[i]--;\n\t\t\t\tnow += i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < 10; i++)\t\t{\n\t\t\twhile(count[i] > 0)\t\t\t{\n\t\t\t\tcount[i]--;\n\t\t\t\tnow += i;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(t.equals(now) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input('')\nm = raw_input('')\n\ndl = len(n)\nbl = 0\n\nif m[0] != '0' and dl == len(m) and dl != 1:\n    sp = []\n\n    for x in range(dl):\n        sp.append(n[x])\n\n    sp = [int(x) for x in sp]\n    sp.sort()\n\n    kol = sp.count(0)\n\n    if kol != 0 and kol != dl:\n        ch = sp[kol]\n        sp[0] = ch\n        sp[kol] = 0\n\n    if kol != dl or len(m) == 1:\n        sp = [str(x) for x in sp]\n\n        pStr = ''\n        pStr = pStr.join(sp)\n\n        if pStr == m:\n            bl = 1\n            print 'OK'\nelif dl == len(m):\n    if n == m:\n        bl = 1\n        print 'OK'\nelse:\n    pass\n\nif bl == 0:\n    print 'WRONG_ANSWER'\n"
        },
        {
            "language": 1,
            "solution": "# -*- coding: utf-8 -*-\n\nrev = lambda s:''.join(list(reversed( s )))\ns  = (rev(sorted(raw_input())))\nsa = raw_input()\ntry:\n    r = s.index('0')\n    s = list(s)\n    s[r-1], s[-1] = s[-1], s[r-1]\nexcept ValueError:\n    pass\ns = rev(s)\nif s==sa or (int(s)==0 and sa=='0'):\n    print 'OK'\nelse:\n    print 'WRONG_ANSWER'\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long long int mod = 1000000007;\nconst int INF = 1000000000;\nusing namespace std;\nunsigned long long int pow2(unsigned long long int s) {\n  if (s != 0 && (s & (s - 1)))\n    cout << \"0\";\n  else\n    cout << \"1\";\n}\nunsigned long long int powany(long long int a, long long int b) {\n  unsigned long long int res = 1;\n  a %= mod;\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nunsigned long long int prime(unsigned long long int n) {\n  if (n == 2 || n == 3) return 1;\n  if (n % 2 == 0 || n % 3 == 0) return 0;\n  for (unsigned long long int i = 7; i * i < n; i += 6)\n    if (n % (i) == 0 || n % (i - 2) == 0) return 0;\n  return 1;\n}\nint main() {\n  string s, d;\n  cin >> s;\n  cin >> d;\n  unsigned long long int l1 = s.size();\n  unsigned long long int l2 = d.size();\n  int t = 0;\n  if (l1 != l2) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  if (s[0] - 48 == 0 && d[0] - 48 == 0) {\n    cout << \"OK\";\n    return 0;\n  }\n  unsigned long long int a1[10] = {0}, a2[10] = {0}, k = 0;\n  for (unsigned long long int i = 0; s[i]; ++i) {\n    a1[s[i] - 48]++;\n    a2[d[i] - 48]++;\n  }\n  for (unsigned long long int i = 0; i < 10; ++i) {\n    if (a1[i] != a2[i]) {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  }\n  if (a1[0] == 0) {\n    for (unsigned long long int i = 1; i < 10; ++i) {\n      for (unsigned long long int j = 0; j < a1[i]; ++j) {\n        if ((d[k] - 48) != i) {\n          cout << \"WRONG_ANSWER\";\n          return 0;\n        }\n        k++;\n      }\n    }\n    if (k == l1) cout << \"OK\";\n  } else {\n    k = 0;\n    for (int p = 1; p < 10; ++p) {\n      if (a1[p] != 0) {\n        t = p;\n        a1[p]--;\n        break;\n      }\n    }\n    if (d[k++] - 48 == t) {\n      for (unsigned long long int i = 0; i < 10; ++i) {\n        for (unsigned long long int j = 0; j < a1[i]; ++j) {\n          if (d[k] - 48 != i) {\n            cout << \"WRONG_ANSWER\";\n            return 0;\n          }\n          k++;\n        }\n      }\n      if (k == l1) cout << \"OK\";\n    } else {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "\nn = input()\nm = raw_input()\n\ntab = sorted(list(str(n)))\n\nif sorted(list(m)) != tab:\n    print 'WRONG_ANSWER\\n'\n    tab = []\n\nfor i in range(len(tab)):\n    if tab[i] != '0':\n        if ''.join(list(tab[i])+tab[:i]+tab[i+1:]) == m:\n            print 'OK\\n'\n        else:\n            print 'WRONG_ANSWER\\n'\n        tab = []\n        break\n\nif len(tab):\n    print 'OK\\n'\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nnamespace QoE_Library {\nnamespace QL_Bare_Minimum {\nconst double PI = 3.141592653589793238460;\nconst long double pi = 10000 * acos(-1.0L);\nconst long double E = 2.7182818284590452353;\nconst long double eps = 1e-10;\nconst int DX4[] = {0, 1, 0, -1};\nconst int DY4[] = {1, 0, -1, 0};\nconst int DX8[] = {-1, -1, -1, 0, 0, 1, 1, 1};\nconst int DY8[] = {-1, 0, 1, -1, 1, -1, 0, 1};\nconst int neigh4[][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\nconst int neigh8[][2] = {{-1, 0}, {-1, -1}, {0, -1}, {1, -1},\n                         {1, 0},  {1, 1},   {0, 1},  {-1, 1}};\ntemplate <typename T1>\ninline T1 to_type(string s) {\n  T1 a;\n  istringstream sin(s);\n  sin >> a;\n  return a;\n}\ntemplate <typename T1>\ninline string to_str(T1 a) {\n  ostringstream sout;\n  string s;\n  sout >> a;\n  return sout.str();\n}\ninline void inpS(char *a) { scanf(\"%s\", a); }\ninline int inpLLI(long long int &lld) { return scanf(\"%lld\", &lld); }\ninline int inpULLI(unsigned long long int &ulli) {\n  return scanf(\"%llu\", &ulli);\n}\ninline int inpI() {\n  int n = 0;\n  int ch = getchar();\n  int sign = 1;\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') sign = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9')\n    n = (n << 3) + (n << 1) + ch - '0', ch = getchar();\n  n = n * sign;\n  return n;\n}\ninline void inpI2(int &a, int &b) {\n  a = inpI();\n  b = inpI();\n}\ninline void inpI3(int &a, int &b, int &c) {\n  a = inpI();\n  b = inpI();\n  c = inpI();\n}\ninline double inpD() {\n  double res = 0.0;\n  char c;\n  while (1) {\n    c = getchar();\n    if (c == ' ' || c == '\\n')\n      continue;\n    else\n      break;\n  }\n  res = c - '0';\n  while (1) {\n    c = getchar();\n    if (c >= '0' && c <= '9')\n      res = 10 * res + c - '0';\n    else\n      break;\n  }\n  if (c == '.') {\n    double decimal = 0.0, divi = 1.0;\n    while (1) {\n      c = getchar();\n      if (c >= '0' && c <= '9')\n        decimal += (c - '0') / (divi *= 10.0);\n      else\n        break;\n    }\n    res += decimal;\n  }\n  return res;\n}\ninline void outpD(double N) {\n  char buff[24], sz = 0;\n  int integer = N;\n  int decimal = (N - integer) * 10000000;\n  int tmp = decimal;\n  while (decimal) {\n    buff[sz++] = '0' + decimal % 10;\n    decimal /= 10;\n  }\n  for (int decimal2 = 1000000; decimal2 > tmp; decimal2 /= 10) {\n    buff[sz++] = '0';\n  }\n  buff[sz++] = '.';\n  if (integer == 0) buff[sz++] = '0';\n  while (integer) {\n    buff[sz++] = '0' + integer % 10;\n    integer /= 10;\n  }\n  while (--sz >= 0) putchar(buff[sz]);\n  putchar(10);\n}\ninline int outpULLI(unsigned long long int u) { return printf(\"%llu\\n\", u); }\ninline int outpLLI(long long int lli) { return printf(\"%lld\\n\", lli); }\ninline void outpI(int a) {\n  char c;\n  char snum[20];\n  int i = 0;\n  int sign = 0;\n  if (a < 0) sign = 1;\n  a = abs(a);\n  do {\n    snum[i++] = a % 10 + 48;\n    a = a / 10;\n  } while (a != 0);\n  i = i - 1;\n  if (sign) putchar('-');\n  while (i >= 0) putchar(snum[i--]);\n  putchar('\\n');\n}\ninline void outpI2(int a, int b) {\n  printf(\"%d \", a);\n  outpI(b);\n}\ninline int outpS(char *s) { return printf(\"%s\\n\", s); }\ntemplate <typename T1>\nvoid QL_swap(T1 &x, T1 &y) {\n  T1 tmp;\n  tmp = x;\n  x = y;\n  y = tmp;\n}\ntemplate <typename T1>\nT1 gcd(T1 a, T1 b) {\n  if (!b) return a;\n  return gcd(b, a % b);\n}\nlong double euclideanDist(int x1, int y1, int x2, int y2) {\n  return sqrt((x1 - x2) * (x1 - x2) / 1. + (y1 - y2) * (y1 - y2) / 1.);\n}\n}  // namespace QL_Bare_Minimum\n}  // namespace QoE_Library\nusing namespace QoE_Library::QL_Bare_Minimum;\nint findContEmptySpace(int *a, int m, int v) {\n  for (int i = (0); i < (m - v + 1); i = i + (1)) {\n    if (!a[i]) {\n      int j = i;\n      while (j < i + v) {\n        if (a[j]) break;\n        ++j;\n      }\n      if (j == i + v) return i;\n      i = j;\n    }\n  }\n  return -1;\n}\nvoid defragment(int *a, int m, map<int, pair<int, int> > ls) {\n  for (int i = (0); i < (m); i = i + (1)) {\n    int j = i;\n    while (j < m && !a[j]) ++j;\n    int free = j - i;\n    int s = j;\n    if (free) {\n      map<int, pair<int, int> >::iterator it;\n      for (it = ls.begin(); it != ls.end(); ++it) {\n        if (it->second.first == j) {\n          break;\n        }\n      }\n      if (it != ls.end()) {\n        int s1 = it->second.first;\n        int s2 = it->second.second;\n        for (int k = (s1 - free); k < (s1); k = k + (1)) a[k] = 1;\n        for (int k = (s2 - free); k < (s2); k = k + (1)) a[k] = 0;\n        it->second.first -= free;\n        it->second.second -= free;\n        i = it->second.first;\n      }\n    } else\n      i = j;\n  }\n}\nint main() {\n  int T = 1, n, c;\n  while (T--) {\n    cin >> n;\n    string c;\n    cin >> c;\n    vector<int> v;\n    while (n) {\n      v.push_back(n % 10);\n      ;\n      n /= 10;\n    }\n    if (!v.size()) {\n      v.push_back(0);\n      ;\n    } else {\n      sort(v.begin(), v.end());\n      int i = 0;\n      if (!v[i]) {\n        while (i < v.size() && !v[i]) ++i;\n        swap(v[0], v[i]);\n      }\n    }\n    bool b = c.length() == v.size();\n    if (b) {\n      for (int i = (0); i < (v.size()); i = i + (1)) {\n        if (i == c.length() || c[i] - '0' != v[i]) {\n          b = 0;\n          break;\n        }\n      }\n    }\n    if (b)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  std::string input(\"\"), answer(\"\"), output(\"\");\n  getline(std::cin, input);\n  getline(std::cin, answer);\n  int count[10] = {0};\n  char minNonZero('A');\n  for (int k = 0; k < input.size(); k++) {\n    ++count[input[k] - '0'];\n    if (input[k] > '0' && input[k] < minNonZero) {\n      minNonZero = input[k];\n    }\n  }\n  if (minNonZero == 'A') {\n    output = \"0\";\n  } else {\n    --count[minNonZero - '0'];\n    output += minNonZero;\n    for (int digit = 0; digit < 10; digit++) {\n      while (count[digit]--) {\n        output += ('0' + digit);\n      }\n    }\n  }\n  if (answer == output) {\n    puts(\"OK\");\n  } else {\n    puts(\"WRONG_ANSWER\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "r = lambda: list(raw_input())\na = r()\na.sort()\nfor i in xrange(len(a)):\n    if a[i] != '0': \n        a[0], a[i] = a[i], a[0]\n        break\nprint ['WRONG_ANSWER', 'OK'][a == r()]\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, s1;\n  cin >> s >> s1;\n  sort(s.begin(), s.end());\n  int i;\n  if (s[0] == '0') {\n    i = 1;\n    while (s[i] != '\\0') {\n      if (s[i] != '0') {\n        char c = s[i];\n        s[i] = s[0];\n        s[0] = c;\n        break;\n      }\n      i++;\n    }\n  }\n  if (s == s1)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, res_s;\n  cin >> s >> res_s;\n  sort(s.begin(), s.end());\n  int i, j;\n  string c;\n  for (i = 0; i < s.size(); i++)\n    if (s[i] != '0') {\n      c = s[i];\n      break;\n    }\n  for (j = 0; j < i; j++) c += '0';\n  for (j = i + 1; j < s.size(); j++) c += s[j];\n  if (c == res_s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "a = raw_input()\nb = raw_input()\nx = []\nfor i in a:\n    x.append(i)\nx.sort()\ni = 0\nwhile i<len(x) and x[i] == '0':\n    i+=1\n\nif i != len(x):\n    s = x[i]\n        \n    for j in xrange(0,len(x)):\n        if j!=i:\n            s+=x[j]\nelse:\n    s = \"0\"\n\nif len(b)>1 and b[0] == '0':\n    print \"WRONG_ANSWER\"\nelif int(s) != int(b):\n    print \"WRONG_ANSWER\"\nelse:\n    print \"OK\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool check(string a) {\n  for (int i = 0; i < a.size(); ++i) {\n    if (a[i] == '0')\n      return false;\n    else\n      return true;\n  }\n}\nbool ok(string a, string b) {\n  if (a.size() != b.size()) return false;\n  for (int i = 0; i < a.size(); ++i) {\n    if (a[i] != b[i]) return false;\n  }\n  return true;\n}\nint main() {\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  do {\n    if (check(a)) break;\n  } while (next_permutation(a.begin(), a.end()));\n  printf(\"%s\", (ok(a, b)) ? \"OK\" : \"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n\tpublic void solution() throws IOException {\n\t\tString a = in.next();\n\t\tString b = in.next();\n\t\ta = getNice(a);\n\t\tout.println(a.equals(b) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n\t\n\tprivate String getNice(String a) {\n\t\tint[] cnt = new int[10];\n\t\tfor (char c : a.toCharArray()) {\n\t\t\t++cnt[c - '0'];\n\t\t}\n\t\tString r = \"\";\n\t\tfor (int i = 1; i < cnt.length; ++i) {\n\t\t\tif (cnt[i] > 0) {\n\t\t\t\tr += (char) (i + '0');\n\t\t\t\t--cnt[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < cnt.length; ++i) {\n\t\t\twhile (cnt[i]-- > 0) {\n\t\t\t\tr += (char) (i + '0');\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\tsolution();\n\t\t\tout.close();\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Thread(null, new Main(), \"\", 1 << 28).start();\n\t}\n\t\n\tprivate class Scanner {\n\t\tBufferedReader reader;\n\t\tStringTokenizer tokenizer;\n\t\t\n\t\tpublic Scanner(BufferedReader reader) {\n\t\t\tthis.reader = reader;\n\t\t\tthis.tokenizer = new StringTokenizer(\"\");\n\t\t}\n\t\t\n\t\tpublic boolean hasNext() throws IOException {\n\t\t\twhile (!tokenizer.hasMoreTokens()) {\n\t\t\t\tString next = reader.readLine();\n\t\t\t\tif (next == null) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ttokenizer = new StringTokenizer(next);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tpublic String next() throws IOException {\n\t\t\thasNext();\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\t\t\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n\t\n\tScanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\tPrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string num, ans;\n  cin >> num >> ans;\n  sort(num.begin(), num.end());\n  if (num[0] != '0') {\n    if (num == ans)\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  int i = 0;\n  while (i != num.size()) {\n    if (num[i] != '0') {\n      char c = num[i];\n      num[i] = num[0];\n      num[0] = c;\n      break;\n    }\n    i++;\n  }\n  if (num == ans)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char s[15], r[15];\n  cin >> s >> r;\n  if (strlen(s) != strlen(r)) {\n    cout << \"WRONG_ANSWER\";\n    exit(0);\n  }\n  if (strlen(s) == 1) {\n    if (s[0] == r[0])\n      cout << \"OK\";\n    else\n      cout << \"WRONG_ANSWER\";\n    exit(0);\n  }\n  string alph = \"0123456789\";\n  map<char, int> mp;\n  string ans = \"\";\n  for (int i = 0; s[i]; i++) {\n    mp[s[i]]++;\n  }\n  if (mp['0'] == 0) {\n    for (int i = 1; i <= 9; i++) {\n      for (int j = 0; j < mp[alph[i]]; j++) {\n        ans += alph[i];\n      }\n    }\n  } else {\n    int flag = 0;\n    for (int i = 1; i <= 9; i++) {\n      for (int j = 0; j < mp[alph[i]]; j++) {\n        ans += alph[i];\n        flag = 1;\n        mp[alph[i]]--;\n        break;\n      }\n      if (flag) break;\n    }\n    for (int i = 0; i <= 9; i++) {\n      for (int j = 0; j < mp[alph[i]]; j++) {\n        ans += alph[i];\n      }\n    }\n  }\n  if (r == ans)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn = input()\ncheck = input()\nif (len(n)!=len(check)):\n\tprint('WRONG_ANSWER')\n\tsys.exit()\nif (int(n) == 0):\n\tif int(check) == 0:\n\t\tprint ('OK')\n\telse:\n\t\tprint('WRONG_ANSWER')\n\tsys.exit() \nwynik = ''\nlista = [] \nfor char in n:\n\tlista.append(int(char))\nlista.sort()\nliczba_zer = 0\nmini = 9\nwhile lista[liczba_zer] == 0: \n\tliczba_zer+=1;\nwynik += str(lista[liczba_zer])\nfor i in range(liczba_zer):\n\twynik += str(0)\nfor i in range(liczba_zer+1, len(lista)):\n\twynik += str(lista[i])\n#\tprint(wynik, check)\nif wynik == check: \n\tprint('OK')\nelse:\n\tprint('WRONG_ANSWER')\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 5, MX = 1e9;\nconst long long MOD = 1e9 + 7;\nmap<char, int> mp;\nint main() {\n  string s, t = \"\", ss, ans = \"\";\n  int i = 0;\n  cin >> s >> ss;\n  sort(s.begin(), s.end());\n  while (s[i] == '0') {\n    t += s[i];\n    i++;\n  }\n  if (i < s.size()) ans += s[i];\n  ans += t;\n  for (int j = i + 1; j < s.size(); j++) ans += s[j];\n  if (ans == ss)\n    puts(\"OK\");\n  else\n    puts(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char str1[15], str2[15];\n  while (~scanf(\"%s\", str1)) {\n    scanf(\"%s\", str2);\n    int len = strlen(str1);\n    sort(str1, str1 + len);\n    for (int i = 0; i < len; i++) {\n      if (str1[i] != '0') {\n        swap(str1[0], str1[i]);\n        break;\n      }\n    }\n    if (strcmp(str1, str2) == 0)\n      printf(\"OK\\n\");\n    else\n      printf(\"WRONG_ANSWER\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class sol\n{\npublic static void main(String[] args)\n{\nint i,k=0,j=0;\nString s1,s2,s3=\"\";\nlong a;\nScanner sc=new Scanner(System.in);\ns1=sc.next();\ns2=sc.next();\na=Long.parseLong(s1);\nk=s1.length();\n//System.out.println(k);\nlong[] arr=new long[k];\nfor(i=0;i<k;i++)\n{\nif(a==0)\n  break;\narr[i]=a%10;\na=a/10;\n}\nArrays.sort(arr);\nif(arr[0]==0)\n { for(i=0;i<k;i++)\n     if(arr[i]>0)\n      {\n       arr[0]=arr[i];\n       arr[i]=0;\n       break;}\n  }\nfor(i=0;i<k;i++)\n{\nlong l=arr[i];\ns3+=Long.toString(l);\n}\n//System.out.println(s3);\n//System.out.println(s3.length()+\" \"+s2.length());\nif(s3.equals(s2)&&s3.length()==s2.length())\n  System.out.println(\"OK\");\nelse\n  System.out.println(\"WRONG_ANSWER\");\n\n }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst string OK = \"OK\";\nconst string WA = \"WRONG_ANSWER\";\nstring solve(const string& s) {\n  map<int, int> m;\n  int minn = 100;\n  for (int i = 0; i < int(s.size()); ++i) {\n    m[s[i] - '0']++;\n    if (s[i] - '0' < minn && s[i] != '0') minn = s[i] - '0';\n  }\n  string ret;\n  if (minn < 100) {\n    ret += char('0' + minn);\n    m[minn]--;\n  }\n  for (int i = 0; i < 10; ++i) {\n    while (m[i] > 0) {\n      --m[i];\n      ret += char('0' + i);\n    }\n  }\n  return ret;\n}\nint main() {\n  string orig;\n  cin >> orig;\n  string vec;\n  cin >> vec;\n  string sol = solve(orig);\n  string ret = WA;\n  if (sol == vec) {\n    ret = OK;\n  }\n  cout << ret << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char n[10], ans[10];\n  int l, i;\n  char c;\n  cin >> n >> ans;\n  l = strlen(n);\n  sort(n + 0, n + l);\n  for (i = 0; i < l; i++)\n    if (n[i] != '0' || i + 1 >= l) break;\n  c = n[i];\n  n[i] = n[0];\n  n[0] = c;\n  if (strcmp(n, ans) == 0)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  string s;\n  cin >> s;\n  long long a[20];\n  fill(a, a + 20, 0);\n  for (long long i = 0; i < s.size(); ++i) ++a[s[i] - '0'];\n  string t = \"\";\n  bool flag = false;\n  for (long long i = 1; i < 10; ++i)\n    if (a[i]) {\n      t += char(i + '0');\n      if (flag == false) {\n        flag = true;\n        for (long long j = 0; j < a[0]; ++j) t += '0';\n      }\n      for (long long j = 1; j < a[i]; ++j) t += char(i + '0');\n    }\n  if (flag == false) t += '0';\n  string m;\n  cin >> m;\n  while (m.size() > 1 && m[0] == '0') m.erase(0);\n  if (m == t)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  cout << endl;\n}\nint main() {\n  int t = 1;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String question = in.nextLine();\n        String answer = in.nextLine();\n\n        if(question.length() != answer.length()){\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n\n        char[] qNums = question.toCharArray();\n\n        ArrayList<Integer> nums = new ArrayList<Integer>();\n\n\n        for(int i = 0; i < qNums.length; i++){\n            nums.add(Character.getNumericValue(qNums[i]));\n        }\n        Collections.sort(nums);\n\n        if(nums.get(0) == 0){\n            for(int i = 1; i < nums.size(); i++){\n                if(nums.get(i) != 0){\n                    Collections.swap(nums, 0, i);\n                    break;\n                }\n            }\n        }\n\n        String result = \"\";\n\n        for(int i: nums){\n            result += Integer.toString(i);\n        }\n\n        if(Long.parseLong(result) == Long.parseLong(answer)){\n            System.out.println(\"OK\");\n        }\n        else {\n            System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint countA[10];\nint countB[10];\nint main() {\n  string A, B;\n  cin >> A >> B;\n  sort(A.begin(), A.end());\n  int a = 0, first = 1;\n  for (int i = 0; i < A.size(); i++)\n    if (A[i] != '0') {\n      a = a * 10 + (A[i] - '0');\n      if (first) {\n        for (int j = 0; j < A.size(); j++)\n          if (A[j] == '0') a = a * 10;\n        first = 0;\n      }\n    }\n  ostringstream oss;\n  oss << a;\n  A = oss.str();\n  if (B != A)\n    cout << \"WRONG_ANSWER\" << endl;\n  else\n    cout << \"OK\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "a = raw_input()\nb = raw_input()\ns = list(a)\ns.sort()\nif (s[0]=='0'):\n\tfor i in xrange(len(a)):\n\t\tif (s[i]>'0'):\n\t\t\tt = s[i]\n\t\t\ts[i] = '0'\n\t\t\ts[0] = t\n\t\t\tbreak\nprint (\"WRONG_ANSWER\",\"OK\")[''.join(s) == b]\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, r;\n  char t;\n  cin >> s >> r;\n  if (s == \"0\")\n    if (r == \"0\") {\n      printf(\"OK\\n\");\n      return 0;\n    } else {\n      printf(\"WRONG_ANSWER\\n\");\n      return 0;\n    }\n  sort(s.begin(), s.end());\n  int i = 0;\n  while (s[i] == '0') i++;\n  t = s[0];\n  s[0] = s[i];\n  s[i] = t;\n  if (s == r)\n    printf(\"OK\\n\");\n  else\n    printf(\"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "num = list(raw_input())\nnum2 = raw_input()\nnum.sort()\nans = str()\nfor i in range(len(num)):\n    if num[i] != '0':\n        ans += num[i]\n        del num[i]\n        break\nfor i in range(len(num)):\n    ans += num[i]\n\nprint ['WRONG_ANSWER','OK'][ans == num2]\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.util.regex.*;\n\npublic class Codeforces{\n\t\n\tstatic class MyScanner{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\t\n\t\tMyScanner(FileReader fileReader){\n\t\t\tbr = new BufferedReader(fileReader);\n\t\t}\n\t\t\n\t\tMyScanner(){\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tString nn(){\n\t\t\twhile(st == null || !st.hasMoreElements()){\n\t\t\t\ttry{\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}catch(IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tString nextLine(){\n\t\t\tString s = \"\";\n\t\t\ttry{\n\t\t\t\ts = br.readLine();\n\t\t\t}catch(IOException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\t\t\n\t\tint ni(){\n\t\t\treturn Integer.parseInt(nn());\n\t\t}\n\t\t\n\t\tlong nl(){\n\t\t\treturn Long.parseLong(nn());\n\t\t}\n\t\t\n\t\tdouble nd(){\n\t\t\treturn Double.parseDouble(nn());\n\t\t}\n\t}\n\t\n\tprivate static PrintWriter out;\n\t\n\tpublic static void main(String[] args) throws FileNotFoundException{\n\t\t\n\t\t\n\t\t// Input from file\n\t\t// File inputFile = new File(\"JavaFile.txt\");\n\t\t// File outputFile = new File(\"JavaOutputFile.txt\");\n\t\t// FileReader fileReader = new FileReader(inputFile);\n\t\t// Here it ends\n\t\t\t\n\t\tMyScanner sc = new MyScanner();\n\t\t// MyScanner sc = new MyScanner(fileReader);\n\t\t\n\t\tout = new PrintWriter(new BufferedOutputStream(System.out)); // Output to console\n\t\t// out = new PrintWriter(new PrintStream(outputFile)); // Output to file\n\t\t\n\t\tchar[] m = sc.nn().toCharArray();\n\t\tchar[] n = sc.nn().toCharArray();\n\t\t\n\t\tArrays.sort(m);\n\t\t\n\t\tint index = getIndex(m);\n\t\tchar temp = m[0];\n\t\tm[0] = m[index];\n\t\tm[index] = temp;\n\t\t\n\t\tout.println(Arrays.equals(n, m)? \"OK\": \"WRONG_ANSWER\");\n\t\t\n\t\tout.close();\n\t}\n\t\n\tprivate static int getIndex(char[] m){\n\t\tint k = 0;\n\t\tfor(char c: m){\n\t\t\tif(c > '0') return k;\n\t\t\tk++;\n\t\t}\n\t\treturn 0;\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar c;\nstring a, b;\nint i, j;\nint main() {\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  if (a.size() != 1)\n    if (a[0] == '0') swap(a[0], a[1]);\n  if (a == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0);\n  string n, m;\n  cin >> n >> m;\n  int cn = 0;\n  char mch = 'Z';\n  int cn_m = 0;\n  for (int i = 0; i < (int)(n.size()); i++) {\n    if (n[i] < mch && n[i] != '0')\n      mch = n[i], cn_m = 1;\n    else if (n[i] == mch)\n      cn_m++;\n    if (n[i] == '0') cn++;\n  }\n  sort((n).begin(), (n).end());\n  string nw = \"\";\n  if (mch != 'Z') nw += mch;\n  for (int i = 0; i < (int)(cn); i++) nw += '0';\n  for (int i = cn + 1; i < n.size(); i++) nw += n[i];\n  if (nw == m)\n    cout << \"OK\" << '\\n';\n  else\n    cout << \"WRONG_ANSWER\" << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nans = raw_input()\nst = list(n)\nst.sort()\nmin_val = '9'\nmin_idx = 0\nfor i in range(len(st)):\n    s = st[i]\n    if s < min_val and s != '0':\n        min_val = s\n        min_idx = i\nst[0], st[min_idx] = st[min_idx], st[0]\nmyans = '%s'*len(st) % tuple(st)\nprint 'OK' if myans == ans else 'WRONG_ANSWER'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string n, k;\n  cin >> n;\n  cin >> k;\n  sort(n.begin(), n.end());\n  int i = 0;\n  while (n[i] == '0' && i < n.length()) i++;\n  if (i != n.length()) {\n    char tmp = n[i];\n    n[i] = n[0];\n    n[0] = tmp;\n  }\n  for (i = 0; i < n.length(); i++) {\n    if (n[i] != k[i]) {\n      break;\n    }\n  }\n  if (n.length() != k.length())\n    cout << \"WRONG_ANSWER\";\n  else if (i != n.length())\n    cout << \"WRONG_ANSWER\";\n  else\n    cout << \"OK\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\npublic class Main\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner in = new Scanner(System.in);\n\t\tString a = in.nextLine();\n\t\tString b = in.nextLine();\n\t\tint cnt[] = new int[10];\n\t\tString c = \"\";\n\t\tfor (int i = 0; i < a.length(); i++)\n\t\t\tcnt[a.charAt(i)-'0']++;\n\t\tfor (int i = 1; i <= 9; i++)\n\t\t{\n\t\t\tif (cnt[i] > 0)\n\t\t\t{\n\t\t\t\tcnt[i]--;\n\t\t\t\tc += (char)('0' + i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i<= 9; i++)\n\t\t{\n\t\t\twhile (cnt[i] > 0)\n\t\t\t{\n\t\t\t\tc += (char)('0' + i);\n\t\t\t\tcnt[i]--;\n\t\t\t}\n\t\t}\n\t\tif (c.compareTo(b) == 0)\n\t\t\tSystem.out.println(\"OK\");\n\t\telse\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\tin.close();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, t;\nint main() {\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  for (int i = 0; i < s.size(); i++)\n    if (s[i] != '0') {\n      swap(s[i], s[0]);\n      break;\n    }\n  return cout << (s == t ? \"OK\" : \"WRONG_ANSWER\"), 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nm = raw_input()\na = sorted(n)\n\nif len(n) == 1:\n    res = n == m\nelse:\n    if a[0] == '0':\n        i = 1\n        while a[i] == '0':\n            i += 1\n        a[0], a[i] = a[i], a[0]\n    res = m == ''.join(a)\n\nif res:\n    print 'OK'\nelse:\n    print 'WRONG_ANSWER'"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.io.StreamTokenizer;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Main {\n    private static StreamTokenizer in;\n    private static PrintWriter out;\n    private static BufferedReader inB;\n    \n    private static int nextInt() throws Exception{\n        in.nextToken();\n        return (int)in.nval;\n    }\n    \n    private static String nextString() throws Exception{\n        in.nextToken();\n        return in.sval;\n    }\n    \n    static{\n        inB = new BufferedReader(new InputStreamReader(System.in));\n        in = new StreamTokenizer(inB);\n        out = new PrintWriter(System.out);\n    }\n    \n    public static void main(String[] args)throws Exception{\n        in.ordinaryChars('0', '9');\n        in.wordChars('0', '9');\n        \n        String s = nextString(), s1 = nextString();\n        int n = Integer.parseInt(s), r = Integer.parseInt(s1);\n        \n        if(s.length() != s1.length()) { System.out.println(\"WRONG_ANSWER\"); return; }\n        \n        char[] c = new String(n+\"\").toCharArray();\n        \n        int[] mas = new int[10];\n        for(int i = 0; i<c.length; i++) {\n            mas[c[i] - '0']++;\n        }\n        \n        String ans = \"\";\n        \n        for(int i = 1; i<10; i++)if(mas[i] > 0) {ans+=i; mas[i]--; break;}\n        \n        for(int i = 0; i<10; i++) {\n            while(mas[i]> 0) {\n                ans += i;\n                mas[i]--;\n            }\n        }\n        \n        int ansn = Integer.parseInt(ans);\n        \n        System.out.println(ansn == r ? \"OK\" : \"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, t;\nint main() {\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  if (s[0] == '0')\n    for (int i = 1; i < ((int)s.size()); i++)\n      if (s[i] != '0') {\n        swap(s[i], s[0]);\n        break;\n      }\n  if (s == t)\n    puts(\"OK\");\n  else\n    puts(\"WRONG_ANSWER\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "a = list(raw_input())\nb = list(raw_input())\n\n\nif a[0] == '0' == b[0] and len(b) == 1:\n\tprint \"OK\"\n\nelse:\n\tif b[0] == '0' or a[0] == '0':\n\t\tprint \"WRONG_ANSWER\"\n\t\texit()\n\t\n\t\n\ta.sort()\n\ti = 0\n\twhile(a[i] == '0'):\n\t\ti += 1\n\ta[0], a[i] = a[i], a[0]\n\t\n\tif a == b:\n\t\tprint \"OK\"\n\t\n\telse:\n\t\tprint \"WRONG_ANSWER\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint a[100];\nint main() {\n  int ans = 0, n, i, j, k, r, c = 0;\n  char m[11];\n  scanf(\"%d\", &n);\n  scanf(\"%s\", m);\n  if (n == 0) {\n    if (strlen(m) == 1 && m[0] == '0')\n      printf(\"OK\");\n    else\n      printf(\"WRONG_ANSWER\");\n  } else {\n    while (n > 0) {\n      r = n % 10;\n      a[r]++;\n      n /= 10;\n    }\n    for (i = 1; i <= 9; i++)\n      if (a[i]) break;\n    ans = ans * 10 + i;\n    for (j = 0; j < a[0]; j++) ans = ans * 10;\n    for (j = 0; j < a[i] - 1; j++) ans = ans * 10 + i;\n    for (j = i + 1; j <= 9; j++) {\n      if (a[j]) {\n        for (k = 0; k < a[j]; k++) ans = ans * 10 + j;\n      }\n    }\n    int l;\n    l = strlen(m);\n    for (i = 0; i < l; i++) {\n      if (m[i] != '0') break;\n    }\n    if (i > 0)\n      printf(\"WRONG_ANSWER\");\n    else {\n      int mm = 0;\n      for (i = 0; i < l; i++) {\n        mm = mm * 10 + m[i] - '0';\n      }\n      if (ans == mm)\n        printf(\"OK\");\n      else\n        printf(\"WRONG_ANSWER\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char x[10], y[10];\n  cin >> x;\n  cin >> y;\n  sort(x, x + strlen(x));\n  if (x[0] == '0' && strlen(x) > 1) {\n    x[0] = x[1];\n    x[1] = '0';\n  }\n  if (!strcmp(x, y))\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "# I=raw_input;x=I();a=sorted(b for b in x if'0'!=b)\n# print['WRONG_ANSWER','OK'][a[0]+x.count('0')*['0']+a[1:]==list(I())]\nI=raw_input;x=I();n=x.count('0');a=sorted(x)[n:];print['WRONG_ANSWER','OK'][a[:1]+n*['0']+a[1:]==list(I())]"
        },
        {
            "language": 3,
            "solution": "n, m = input(), input()\nif len(n) > 1:\n    n = ''.join(sorted(n))\n    i = n.rfind('0')\n    if i != -1:\n        n = n[i + 1] + n[:i + 1] + n[i + 2:]\nprint('OK' if n == m else 'WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C_12B {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint a = sc.nextInt();\n\t\tString s = a+\"\";\n\t\tint min = 10;\n\t\tint digit[] = new int[10];\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tint t = s.charAt(i) - 48;\n\t\t\tif(t!=0 && min > t) min = t;\n\t\t\tdigit[t]++;\n\t\t}\n\t\tif(min==10) min = 0;\n\t\tdigit[min] --;\n\t\tString correct = min+\"\";\n\t\tfor (int i = 0; i < digit.length; i++) {\n\t\t\tfor (int j = 0; j < digit[i]; j++) {\n\t\t\t\tcorrect += i;\n\t\t\t}\n\t\t}\n\t\tString b = sc.next();\n\t\tif(correct.equals(b)){\n\t\t\tSystem.out.println(\"OK\");\n\t\t}else{\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nT toDec(string s) {\n  stringstream is(s);\n  T res;\n  is >> res;\n  return res;\n}\ntemplate <class T>\nstring toStr(T n) {\n  string s;\n  stringstream is;\n  is << n;\n  is >> s;\n  return s;\n}\ntemplate <class T>\nbool isPrime(T x) {\n  if (x <= 1) return false;\n  T i;\n  for (i = 2; i * i <= x; i++)\n    if (x % i == 0) return false;\n  return true;\n}\nint main() {\n  string a, b;\n  cin >> a >> b;\n  int fl;\n  sort(a.begin(), a.end());\n  try {\n    fl = 0;\n    if (toDec<int>(a) == 0) {\n      if (((int)a.size()) == ((int)b.size()) && a == b)\n        printf(\"OK\\n\");\n      else\n        throw 1;\n    } else {\n      do {\n        if (a[0] != '0') {\n          if (a != b) throw 1;\n          break;\n        }\n      } while (next_permutation(a.begin(), a.end()));\n      printf(\"OK\\n\");\n    }\n  } catch (int i) {\n    printf(\"WRONG_ANSWER\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class CorrectSolution\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tString n = in.next();\n\t\tString m = in.next();\n\t\t\n\t\tchar[] num = n.toCharArray();\n\t\tArrays.sort(num);\n\t\t\n\t\tint index = 0;\n\t\tfor(int x = 0; x < num.length; x++)\n\t\t{\n\t\t\tif(num[x] != '0')\n\t\t\t{\n\t\t\t\tindex = x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tString result = \"\" + num[index];\n\t\tfor(int y = 0; y < num.length; y++)\n\t\t{\n\t\t\tif(y != index)\n\t\t\t{\n\t\t\t\tresult += num[y];\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(result.equals(m) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.fill;\nimport static java.util.Arrays.binarySearch;\nimport static java.util.Arrays.sort;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Thread(null, new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (new File(\"input.txt\").exists())\n\t\t\t\t\t\t\tSystem.setIn(new FileInputStream(\"input.txt\"));\n\t\t\t\t\t} catch (SecurityException e) {}\n\t\t\t\t\tnew Main().run();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}, \"1\", 1L << 24).start(); \n\t}\n\n\tBufferedReader in;\n\tPrintWriter out;\n\tStringTokenizer st = new StringTokenizer(\"\");\n\t\n\tvoid run() throws IOException {\n\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tchar[] s1 = nextToken().toCharArray();\n\t\tchar[] s2 = nextToken().toCharArray();\n\t\tchar[] s3 = new char [s1.length];\n\n\t\tchar min = 'z';\n\t\tfor (char c : s1)\n\t\t\tif (c != '0')\n\t\t\t\tmin = (char) min(min, c);\n\t\ts3[0] = min == 'z' ? '0' : min;\n\t\tfor (int i = 0; i < s1.length; i++)\n\t\t\tif (s1[i] == min) {\n\t\t\t\ts1[i] = 'z';\n\t\t\t\tbreak;\n\t\t\t}\n\t\tsort(s1);\n\t\tfor (int i = 1; i < s1.length; i++)\n\t\t\ts3[i] = s1[i - 1];\n\t\t\n\t\tboolean ok = (s2.length == s3.length && eq(s2, s3));\n\t\t\n\t\tout.println(ok ? \"OK\" : \"WRONG_ANSWER\");\n\t\t\n\t\tout.close();\n\t}\n\t\n\tboolean eq(char[] a, char[] b) {\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tif (a[i] != b[i])\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tString nextToken() throws IOException {\n\t\twhile (!st.hasMoreTokens()) {\n\t\t\tst = new StringTokenizer(in.readLine());\n\t\t}\n\t\t\n\t\treturn st.nextToken();\n\t}\n\t\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\t\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\t\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\t\n\tString nextLine() throws IOException {\n\t\tst = new StringTokenizer(\"\");\n\t\treturn in.readLine();\n\t}\n\t\n\tboolean EOF() throws IOException {\n\t\twhile (!st.hasMoreTokens()) {\n\t\t\tString s = in.readLine();\n\t\t\t\n\t\t\tif (s == null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\tst = new StringTokenizer(s);\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\nn1 = len(n)\nm1 = len(m)\nm = int(m)\n\nn = list(map(int,sorted(n)))\n\nzero=0\nr=0\nfor i in n:\n    if i==0:\n        zero+=1\n    else:\n        r=r*10+i\n        while zero>0:\n            r = r*10\n            zero -=1\nif r==m and n1==m1:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnum=list(map(int,str(n)))\nans=list(map(int,str(input())))\nnum=sorted(num)\ni=0\nwhile i<len(num) and num[i]==0:\n    i+=1\n    continue\nif num[0]==0 and len(num)>1:\n    num[0]=num[i]\n    num[i]=0\n\nif num==ans:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 1,
            "solution": "r = lambda:raw_input(); a = sorted(list(r())); b = r()\nif (a[0] == '0'):\n    for i in xrange(1, len(a)):\n        if (a[i] != '0'):\n            rep = a[i]\n            a[i] = '0'\n            a[0] = rep\n            break\nprint ['WRONG_ANSWER','OK'][(''.join(x for x in a)) == b]"
        },
        {
            "language": 4,
            "solution": "  import java.util.*;\npublic class NextAnswer {\n\n   public static void main(String [] args){\n            int cnt=0;\n   \t   Scanner in = new Scanner(System.in);\n\n   \t    String str= in.next();\n   \t     String a = in.next();\n\n   \t      if((int)(str.charAt(0)-'0')== 0 && (int)(a.charAt(0)-'0')==0 && str.length()==1 && a.length()==1)\n   \t      \t System.out.print(\"OK\");\n\n            else{\n\n   \t      int array[]=new int[str.length()];\n\n   \t      for(int i=0;i<str.length();i++){\n\n   \t      \t  array[i]=(int)(str.charAt(i)-'0');\n   \t      }\n\n   \t        Arrays.sort(array);\n   \t         str= \"\";\n\n   \t        for(int i=0;i<array.length;i++){\n   \t        \tif(array[i]!=0){\n\n   \t        \t\tcnt=i;\n   \t        \t str= Integer.toString(array[i]);\n   \t        \t\tbreak;\n   \t        \t}\n   \t        }\n\n   \t        for(int i=0;i<array.length;i++){\n\n   \t        \t if(i!=cnt){\n\n   \t        \t \tstr = str+Integer.toString(array[i]);\n   \t        \t }\n   \t        }\n\n\n\n   \t       if(str.equals(a)){\n   \t     \tSystem.out.print(\"OK\");\n                      }\n\n\n   \t         \telse{\n   \t         \t\tSystem.out.print(\"WRONG_ANSWER\");\n   \t         \t}\n   }\n   }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  int i = 0;\n  while (i < (int)a.size() && a[i] == '0') i++;\n  if (i < (int)a.size()) swap(a[0], a[i]);\n  cout << (a == b ? \"OK\" : \"WRONG_ANSWER\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "f=['WRONG_ANSWER','OK']\na=sorted([int(z)for z in list(input())])\nb=[int(z)for z in list(input())]\n# attention: if a = 0, 0, 0...\nif 0 in a:\n    i=a.count(0)\n    if i>=len(a):\n        a=[0]\n    else:\n        a[i],a[0]=a[0],a[i]\nprint(f[a==b])"
        },
        {
            "language": 1,
            "solution": "n = list(raw_input())\nans = raw_input()\nn.sort()\n\ndef correctornot(ans,n):\n    if len(n) == 1 and n[0] != ans:\n        return \"WRONG_ANSWER\"\n    elif len(n) == 1 and n[0] != ans:\n        return \"OK\"\n    elif len(n)>0:\n        if n[0] == \"0\":\n            for i in range(1,len(n)):\n                if int(n[i]) > 0:\n                    n[0],n[i] = n[i],n[0]\n                    break\n        n = \"\".join(n)\n        if ans == n:\n            return \"OK\"\n        else:\n            return \"WRONG_ANSWER\"\n\nprint correctornot(ans,n)\n                    \n                    \n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, m;\n  cin >> s >> m;\n  int k = 0;\n  if (s == \"0\" && m == \"0\") {\n    cout << \"OK\";\n    return 0;\n  }\n  sort(s.begin(), s.end());\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0') k++;\n  }\n  string r = \"\";\n  r += s[k];\n  for (int i = 0; i < k; i++) r += '0';\n  for (int i = k + 1; i < s.size(); i++) r += s[i];\n  if (r == m) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "num = [i for i in raw_input()]\nans = raw_input()\nmy = ''\nif num == ['0']:\n    my = '0'\nelse:\n    num.sort()\n    if num[0] == '0':\n        num[0], num[1] = num[1], num[0]\n    my = ''.join(num)\n    \nif ans == my:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring st, st1;\nint main() {\n  cin >> st >> st1;\n  sort(st.begin(), st.end());\n  if (st[0] == '0')\n    for (int i = 1; i < st.size(); i++)\n      if (st[i] != '0') {\n        swap(st[0], st[i]);\n        break;\n      }\n  if (st == st1)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[11], b[11];\nint main() {\n  scanf(\"%s%s\", a, b);\n  if (strlen(a) != strlen(b)) {\n    cout << \"WRONG_ANSWER\\n\";\n    return 0;\n  }\n  string a0 = a, b0 = b;\n  if (a0 == \"0\" && b0 == \"0\") {\n    cout << \"OK\\n\";\n    return 0;\n  }\n  sort(a, a + strlen(a));\n  int i = 0;\n  for (; a[i] == '0'; i++)\n    ;\n  swap(a[0], a[i]);\n  string A = a, B = b;\n  cout << (A == B ? \"OK\\n\" : \"WRONG_ANSWER\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class S {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        String n=sc.next();\n        String m=sc.next();\n\n        ArrayList<Integer> nl=get_digits(n);\n        ArrayList<Integer> ml=get_digits(m);\n\n\n        if(n.equals(\"0\") && m.equals(\"0\"))\n        {\n            System.out.println(\"OK\");\n            return;\n        }\n        else if(n.equals(\"1000000000\") && m.equals(\"1\"))\n        {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        Collections.sort(nl);\n        if(nl.contains(0))\n        {\n            int index=nl.lastIndexOf(0);\n            if(index==nl.size()-1)\n            {\n                System.out.println(\"WRONG_ANSWER\");\n                return;\n            }\n            else\n            {\n                nl.set(0,nl.get(index+1));\n                nl.set(index+1,0);\n            }\n        }\n\n\n            int flag = 0;\n            for (int i = 0; i < nl.size(); i++) {\n                if (nl.get(i) != ml.get(i)) {\n                    flag = 1;\n                    break;\n                }\n            }\n            if (flag == 1) {\n                System.out.println(\"WRONG_ANSWER\");\n            } else {\n                System.out.println(\"OK\");\n            }\n    }\n\n    public static ArrayList<Integer> get_digits(String k)\n    {\n        ArrayList<Integer> l1=new ArrayList<>();\n        char arr[]=k.toCharArray();\n        for(int i=0;i<k.length();i++)\n        {\n            l1.add(Character.getNumericValue(arr[i]));\n        }\n        return l1;\n    }\n\n\n}\n"
        },
        {
            "language": 4,
            "solution": "function trim(s) {\n\treturn s.replace(/^\\s+|\\s+$/gm, '');\n}\n\nfunction tokenize(s) {\n\treturn trim(s).split(/\\s+/);\n}\n\nfunction tokenizeIntegers(s) {\n\tvar tokens = tokenize(s);\n\tfor (var i = 0; i < tokens.length; i += 1) {\n\t\ttokens[i] = parseInt(tokens[i]);\n\t};\n\treturn tokens;\n}\n\nfunction main() {\n\tvar s = trim(readline()), guess = trim(readline());\n\tif (s == '0') {\n\t\tprint(guess == '0' ? \"OK\" : \"WRONG_ANSWER\");\n\t\treturn;\n\t}\n\n\tvar digits = [];\n\tfor (var i = 0; i < s.length; i += 1) {\n\t\tdigits.push(s[i]);\n\t}\n\tdigits.sort();\n\n\tif (digits[0] == '0') {\n\t\tfor (var i = 1; i < digits.length; i += 1) {\n\t\t\tif (digits[i] != '0') {\n\t\t\t\tdigits[0] = digits[i];\n\t\t\t\tdigits[i] = '0';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar correct = digits.join('');\n\tprint(guess == correct ? \"OK\" : \"WRONG_ANSWER\");\n}\n\nmain();\n"
        },
        {
            "language": 3,
            "solution": "s=[int(n) for n in input()]\nz=[int(n) for n in input()]\nif len(s)==len(z):\n\ts.sort()\n\tm=v=0\n\tif s[0]==0:\n\t\tfor n in range(len(s)):\n\t\t\tif s[n]!=0:\n\t\t\t\ts[0]=s[n]\n\t\t\t\ts[n]=0\n\t\t\t\tbreak\n\t#print(s)\n\tfor n in range(len(s)):\n\t\tm+=s[n]*10**(n)\n\tfor n in range(len(z)):\n\t\tv+=z[n]*10**(n)\n\tif m==v:\n\t\tprint('OK')\n\telse:\n\t\tprint('WRONG_ANSWER')\nelse:\n\tprint('WRONG_ANSWER')\t\t\t"
        },
        {
            "language": 3,
            "solution": "c=[0]*10\nfor x in input():\n    c[ord(x)-ord('0')]+=1\nt=[]\nt.append(c[1]*'1')\nt.append(c[0]*'0')\nfor i in range(2,10):\n    if c[i]==0:\n        continue\n    t.append(c[i]*chr(ord('0')+i))\ns=input()\nif (len(s)==1 and s[0]=='0') or (s[0]!='0' and s==''.join(t)):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Shuffle implements Runnable {\n    private void solve() throws IOException {\n        String s = nextToken();\n        String q = nextToken();\n        \n        char [] a = s.toCharArray();\n        \n        Arrays.sort(a);\n        int i = 0;\n        for (i = 0; i < a.length && a[i] == 48; i++);\n            if (i != 0 && i<a.length){\n                a[0] = a[i];\n                a[i] = 48;\n            }\n        \n        writer.println(q.equals(new String(a))?\"OK\":\"WRONG_ANSWER\");\n    }\n\n    public static void main(String[] args) {\n        new Shuffle().run();\n    }\n\n    BufferedReader reader;\n    StringTokenizer tokenizer;\n    PrintWriter writer;\n\n    public void run() {\n        try {\n            reader = new BufferedReader(new InputStreamReader(System.in));\n            tokenizer = null;\n            writer = new PrintWriter(System.out);\n            solve();\n            reader.close();\n            writer.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    String nextToken() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class WriteAnsw {\n    public static void main(String[] args) throws IOException{\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String n =reader.readLine();\n        ArrayList<String> cif = new ArrayList<>();\n        for(int i=0;i<n.length();i++){\n            cif.add(\"\"+n.charAt(i));\n        }\n        if(n.equals(\"0\")){\n            String c = reader.readLine();\n            String ans = c.equals(n) ? \"OK\" : \"WRONG_ANSWER\";\n            System.out.print(ans);\n            System.exit(0);\n        }\n        String dstr =\"\";\n        int min=10;\n        int j=0;\n        int q=cif.size();\n        for(int i=0;i<q;i++){\n            for(int z=0;z<cif.size();z++) {\n                if (i == 0) {\n                    if (min > Integer.parseInt(cif.get(z)) & Integer.parseInt(cif.get(z)) != 0) {\n                        min = Integer.parseInt(cif.get(z));\n                        j = z;\n                    }\n                    if(z==cif.size()-1) {\n                        dstr = dstr + min;\n                        cif.remove(j);\n                        min =10;\n                    }\n                } else {\n                    if (min > Integer.parseInt(cif.get(z))) {\n                        min = Integer.parseInt(cif.get(z));\n                        j = z;\n                    }\n                    if(z==cif.size()-1&min!=10) {\n                        dstr = dstr + min;\n                        cif.remove(j);\n                        min =10;\n                    }\n                }\n            }\n        }\n        String c =reader.readLine();\n        String ans = c.equals(dstr) ? \"OK\" : \"WRONG_ANSWER\";\n        System.out.println(ans);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f3f3f3f3f;\nlong long power(long long a, long long b) {\n  long long res = 1;\n  while (b != 0) {\n    if (b & 1) {\n      res *= a;\n    }\n    a = (a * a);\n    b = (b / 2);\n  }\n  return res;\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long i, j, k, l, n, m, t;\n  t = 1;\n  while (t--) {\n    int n;\n    char m[11], digit[10] = {'0'}, digitcount(0);\n    scanf(\"%d%s\", &n, &m);\n    while (n != 0) {\n      digit[digitcount++] = '0' + n % 10;\n      n /= 10;\n    }\n    sort(digit, digit + digitcount);\n    if (digit[0] == '0') {\n      for (int i = 1; i < digitcount; ++i) {\n        if (digit[i] != '0') {\n          digit[0] = digit[i];\n          digit[i] = '0';\n          break;\n        }\n      }\n    }\n    printf(strcmp(m, digit) == 0 ? \"OK\\n\" : \"WRONG_ANSWER\\n\");\n    return 0;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "l=list(map(int,list(input())))\nl.sort()\nt=input()\ndef f(l,t):\n\tif len(l)==1 and l[0]==0:\n\t\tif t==\"0\":\n\t\t\treturn \"OK\"\n\t\treturn \"WRONG_ANSWER\"\n\tc=l.count(0)\n\ts=\"\"\n\tw=0\n\tfor i in range(len(l)):\n\t\tif l[i]!=0 and w==0:\n\t\t\t# print(s)\n\t\t\ts+=str(l[i])+\"0\"*c\n\t\t\tw+=1\n\t\t\t# print(s)\n\t\telif l[i]!=0:\n\t\t\ts+=str(l[i])\n\t# print(s)\n\tif t==s:\n\t\treturn \"OK\"\n\treturn \"WRONG_ANSWER\"\nprint(f(l,t))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\n/**\n *\n * @author Prateep\n */\npublic class JavaApplication1 {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        // TODO code application logic here\n        InputStream inputStream = System.in;\n    OutputStream outputStream = System.out;\n    InputReader in = new InputReader(inputStream);\n    PrintWriter out = new PrintWriter(outputStream);\n    TaskB solver = new TaskB();\n    solver.solve(1, in, out);\n    out.close();\n    }\n}\n\nclass TaskB{\n    public void solve(int testNumber, InputReader in, PrintWriter out){\n        String num1=in.next(),num2=in.next();\n        char[] num=num1.toCharArray();\n        char[] test=num2.toCharArray();\n        if(num.length!=test.length){\n            out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        int[] base=new int[num.length];\n        StringBuilder str=new StringBuilder();\n        Map<Integer,Integer> map=new HashMap<>();\n        for(int i=0;i<base.length;i++){\n            base[i]=(int)num[i]-(int)'0';\n            if(!map.containsKey(base[i]))map.put(base[i],1);\n            else map.put(base[i],map.get(base[i])+1);\n        }\n        if(map.size()==1 && map.containsKey(0) && num1.equals(num2)){\n            out.println(\"OK\");\n            return;\n        }\n        else if(map.size()==1 && map.containsKey(0) && !num1.equals(num2)){\n            out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        Arrays.sort(base);\n        int j;\n        for(int i=0;i<base.length;){\n            if(i==0 && base[i]==0){\n                str.append(base[map.get(0)]);\n                for(j=1;j<=map.get(0);j++)\n                    str.append(\"0\");\n                for(j=1;j<map.get(base[map.get(0)]);j++)\n                    str.append(base[map.get(0)]);\n                i+=map.get(0)+map.get(base[map.get(0)]);\n                \n            }\n            else{\n                for(j=1;j<=map.get(base[i]);j++)\n                    str.append(base[i]);\n                i+=map.get(base[i]);\n            }\n        }\n        for(int i=0;i<str.length();i++)\n            if(str.charAt(i)==test[i])continue;\n            else{\n                out.println(\"WRONG_ANSWER\");\n                return;\n            }\n        out.println(\"OK\");\n    }\n    \n}\nclass InputReader {\n    private BufferedReader reader;\n    private StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n    public long nextLong(){\n        return Long.parseLong(next());\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = 3.1415926535;\nconst int dig = 10000;\nint main() {\n  string s, t;\n  cin >> s >> t;\n  string r = s;\n  if (s.size() != t.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  if (s == \"0\" && t == \"0\") {\n    cout << \"OK\";\n    return 0;\n  }\n  sort(r.begin(), r.end());\n  int j = 0;\n  while (j < r.size() && r[j] == '0') j++;\n  if (j == r.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  swap(r[j], r[0]);\n  cout << (r == t ? \"OK\" : \"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class NewClass {\n    public static void main(String args[]){\n        Scanner sc=new Scanner(System.in);\n        String s1=sc.next(),s2=sc.next();\n        if(s1.length()!=s2.length()){\n            System.out.println(\"WRONG_ANSWER\");\n            System.exit(0);\n        }\n        long n=Long.parseLong(s1),ans=Long.parseLong(s2),n1=n,res=0;\n        int arr[]=new int[10];\n        for(;n>0;n/=10){\n            arr[(int)n%10]++;\n        }\n        int min=0;\n        for(int i=1;i<10;i++){\n            if(arr[i]!=0){\n                min=i;\n                break;\n            }\n        }\n        arr[min]--;\n        res=min;\n        for(int i=0;i<10;i++){\n            if(arr[i]==0)\n                continue;\n            for(;arr[i]>0;arr[i]--){\n                res=res*10+i;\n            }\n        }\n        if(res==ans)\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n        \n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint l1, l2, c;\nchar ch, ds1[11], ds2[11], md;\nint main() {\n  while ((ch = getchar()) != '\\n') ds1[l1++] = ch;\n  c = 0;\n  while ((ch = getchar()) != '\\n') ds2[l2++] = ch;\n  c = 0;\n  if (l1 != l2) {\n    puts(\"WRONG_ANSWER\");\n    return 0;\n  }\n  md = '0';\n  for (int i = 0; i < l1; i++) {\n    if (ds1[i] > '0' && md == '0') md = ds1[i];\n    if (ds1[i] > '0' && ds1[i] < md) md = ds1[i];\n  }\n  std::sort(ds1, ds1 + l1);\n  if (md != ds2[0]) {\n    puts(\"WRONG_ANSWER\");\n    return 0;\n  }\n  c = 1;\n  for (int i = 0; i < l1; i++) {\n    if (ds1[i] == md) {\n      md = 0;\n      continue;\n    }\n    if (ds1[i] != ds2[c++]) {\n      puts(\"WRONG_ANSWER\");\n      return 0;\n    }\n  }\n  puts(\"OK\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  char m[11], digit[10] = {'0'}, digitcount(0);\n  scanf(\"%d%s\", &n, &m);\n  while (n != 0) {\n    digit[digitcount++] = '0' + n % 10;\n    n /= 10;\n  }\n  sort(digit, digit + digitcount);\n  if (digit[0] == '0') {\n    for (int i = 1; i < digitcount; ++i) {\n      if (digit[i] != '0') {\n        digit[0] = digit[i];\n        digit[i] = '0';\n        break;\n      }\n    }\n  }\n  if (strcmp(m, digit) == 0)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "a = [0] * 10\nfor k in raw_input():\n    a[int(k)] += 1\ns = \"\"\nfor i in xrange(1, 10):\n    if a[i] != 0:\n        a[i] -= 1\n        s += str(i)\n        break\nfor i in xrange(10):\n    s += str(i) * a[i]\nif s == raw_input():\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\""
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10];\ninline long long unsigned turn(string s) {\n  long long unsigned ans = 0;\n  for (int i = 0; i < (int)s.size(); i++) {\n    ans *= 10;\n    ans += s[i] - '0';\n  }\n  return ans;\n}\nint main() {\n  long long unsigned k, f, t;\n  string s;\n  cin >> k >> s;\n  f = turn(s);\n  if (k == f && !f && s.size() == 1) {\n    cout << \"OK\" << endl;\n    return 0;\n  }\n  if (s[0] == '0') {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  while (k) {\n    a[k % 10]++;\n    k /= 10;\n  }\n  int i = 1;\n  while (!a[i]) i++;\n  t = i;\n  a[i]--;\n  for (i = 0; i < 10; i++)\n    while (a[i]) {\n      t *= 10;\n      t += i;\n      a[i]--;\n    }\n  if (t == f)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nw=input()\nn=str(n)\nt=0\np=[0]*len(n)\nif n=='0':\n    if w=='0':\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\nelse:\n    if '1' in n:\n        t=1\n    else:\n        if '2' in n:\n            t=2\n        else:\n            if '3' in n:\n                t=3\n            else:\n                if '4' in n:\n                    t = 4\n                else:\n                    if '5' in n:\n                        t = 5\n                    else:\n                        if '6' in n:\n                            t = 6\n                        else:\n                            if '7' in n:\n                                t = 7\n                            else:\n                                if '8' in n:\n                                    t = 8\n                                else:\n                                    t=9\n    s=str(t)\n    for i in range (0,10):\n        if i==t:\n            s=s+str(i)*(n.count(str(i))-1)\n        else:\n            s = s + str(i) * (n.count(str(i)))\n    if s==w:\n        print('OK')\n    else:\n        print('WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\n/**\n * Created by vinayr on 8/2/17.\n */\npublic class CorrectSolution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String val = sc.nextLine();\n        String val1 = sc.nextLine();\n        char[] arr = val.toCharArray();\n        Arrays.sort(arr);\n        int i;\n        for (i = 0; i < arr.length && arr[i] == '0'; i++) ;\n            if (i != 0 && i < arr.length) {\n                arr[0] = arr[i];\n                arr[i] = '0';\n            }\n\n        String ans = new String(arr);\n       // System.out.println(ans);\n        if (ans.equals(val1)) {\n            System.out.println(\"OK\");\n        } else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class P012B\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner scan = new Scanner(System.in);\n\t\tchar[] n = scan.next().toCharArray();\n\t\tchar[] m = scan.next().toCharArray();\n\t\tArrays.sort(n);\n\t\tint first = 0;\n\t\tfor (int i = 0; i < n.length; i++)\n\t\t{\n\t\t\tif (n[i] != '0')\n\t\t\t{\n\t\t\t\tfirst = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tString ans = \"\" + n[first];\n\t\tfor (int i = 0; i < n.length; i++)\n\t\t\tif (i != first)\n\t\t\t\tans += n[i];\n\t\tchar[] actual = ans.toCharArray();\n\t\tSystem.out.println(equal(actual, m) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n\n\tprivate static boolean equal(char[] a, char[] b)\n\t{\n\t\tif (a.length != b.length)\n\t\t\treturn false;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tif (a[i] != b[i])\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint numofzeroes(string str) {\n  int res = 0;\n  for (int i = 0; i < str.size(); i++) {\n    if (str[i] == '0') res++;\n  }\n  return res;\n}\nint main() {\n  string str, ans;\n  cin >> str;\n  cin >> ans;\n  if (ans.size() > str.size())\n    cout << \"WRONG_ANSWER\" << endl;\n  else if (str.size() == 1 && ans.size() == 1) {\n    if (str[0] - '0' == ans[0] - '0')\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  } else {\n    vector<char> arr;\n    sort(str.begin(), str.end());\n    for (int i = 0; i < str.size(); i++) {\n      char in = str[i];\n      if (in == '0')\n        continue;\n      else\n        arr.push_back(in);\n    }\n    string str1;\n    str1.push_back(arr[0]);\n    for (int i = 1; i <= numofzeroes(str); i++) str1.push_back('0');\n    for (int i = 1; i < arr.size(); i++) str1.push_back(arr[i]);\n    if (ans == str1)\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "a = input()\nb = input()\n\nif a==\"0\":\n    if b==\"0\":\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")\nelse:\n    cnt = a.count('0')\n    a=sorted(a)\n\n    ans=\"\".join(a[cnt])+'0'*cnt\n    for i in range(cnt+1,len(a)):\n        ans+=a[i]\n     \n    if ans == b:\n        print('OK')\n    else:\n        print(\"WRONG_ANSWER\")"
        },
        {
            "language": 3,
            "solution": "from itertools import permutations\n\ndef f(s):\n\tif s==\"0\":\n\t\treturn \"0\"\n\ts=sorted(s)\n\tfor p in permutations(s):\n\t\tif p[0]!='0':\n\t\t\treturn (''.join(list(p)))\n\t\t\t\t# print(\"OK\")\n\t\t\t\t# break\n\t\t\t# # print()\n\t\t\t# else:\n\t\t\t\t# print()\ns=input()\nt=input()\n\nif f(s)==t:\n\tprint(\"OK\")\nelse:\n\tprint(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class CorrectSolution {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\tchar[] n = in.nextLine().toCharArray();\n\t\tchar[] m = in.nextLine().toCharArray();\n\t\tin.close();\n\t\t\n\t\tArrays.sort(n);\n\t\t\n\t\tint i = 0;\n\t\twhile(i < n.length && n[i]=='0') i++;\n\t\t\t\n\t\tif (n.length > 1 && i > 0){\n\t\t\tn[0] = n[i];\n\t\t\tn[i] = '0';\n\t\t}\n\n\t\tif (Arrays.equals(n, m))\n\t\t\tSystem.out.println(\"OK\");\n\t\telse\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, res_s;\n  cin >> s >> res_s;\n  sort(s.begin(), s.end());\n  int i = 0;\n  while (s[i] == '0' && i < s.length()) i++;\n  if (i < s.length()) swap(s[0], s[i]);\n  if (s == res_s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char num[11], input[11];\n  cin >> num >> input;\n  int len = strlen(num), i;\n  sort(num, num + len);\n  if (num[0] == '0' && strcmp(num, \"0\") != 0) {\n    for (i = 1; num[i] == '0'; ++i)\n      ;\n    num[0] = num[i];\n    num[i] = '0';\n  }\n  if (strcmp(input, num) == 0)\n    cout << \"OK\\n\";\n  else\n    cout << \"WRONG_ANSWER\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Dec 19 16:55:13 2017\n\n@author: \u0442\u0430\u043b\u0433\u0430\u0442\n\"\"\"\ns=sorted(raw_input())\nfor i in range(len(s)):\n    if s[i]!='0':\n        s[i],s[0]=s[0],s[i]\n        break;\nprint('WRONG_ANSWER','OK')[''.join(s)==raw_input()]"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.lang.Math;\npublic class Correctsolution {\n    public static void main(String[] args) throws IOException {\n         BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String brr[]=br.readLine().trim().split(\" \");\n       long x=Long.parseLong(brr[0]);\n       long y=0,s;\n       s=x;\n       int p,q=0;\n       double m;\n        int digit=0,i;\n        int arr[]=new int[10];\n        while(x!=0)\n        {\n                   p=(int) x%10;\n                   arr[p]++;\n                   digit++;\n                   x=x/10;\n         }\n        int indigit=brr[0].length();\n        \n         if(s==0)\n         {\n                y=0;\n          }\n          else\n          {\n                 while(digit!=0)\n                 {\n                     //System.out.println(q);\n                     if(q==0)\n                     {\n                          for(i=1;i<10;i++)\n                          {\n                               if(arr[i]!=0)\n                               {\n                                   m=(double) (digit-1);\n                                   y+=(i*(int)Math.pow(10.0,m));\n                               //   System.out.println(y+\" kkk\");\n                                  digit--;\n                                   q=1;\n                                   arr[i]--;\n                                   break;\n                               }\n                       }\n                     }\n                       else\n                       {\n                           for(i=0;i<10;i++)\n                           {\n                               if(arr[i]!=0)\n                               {\n                                   m=(double) (digit-1);\n                                   y+=(i*(int )Math.pow(10.0,m));\n                       //            System.out.println(y+\" ppp\");\n                                   digit--;\n                                   \n                                   arr[i]--;\n                                   break;\n                               }\n                                   \n                            }\n                       }\n                   }\n               }\n                       brr=br.readLine().trim().split(\" \");\n                       long z=Long.parseLong(brr[0]);\n                       int outdigit=brr[0].length();\n                       \n                       if(z==y&&indigit==outdigit)\n                           System.out.println(\"OK\");\n                       else\n                           System.out.println(\"WRONG_ANSWER\");\n                   }\n                                   \n                       \n                   }\n               \n           \n        \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string cad1, cad2;\n  getline(cin, cad1);\n  getline(cin, cad2);\n  sort(cad1.begin(), cad1.end());\n  int k = 0;\n  char aux;\n  if ((int)cad1.size() > 1) {\n    if (cad1[0] == '0') {\n      aux = cad1[0];\n      cad1[0] = cad1[1];\n      cad1[1] = aux;\n    }\n  }\n  if (cad2 == cad1) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\nfrom itertools import product\n\nfile = sys.stdin\n#file = open(\"test\", \"r\")\np = map(int, list(file.readline().rstrip()))\np.sort()\nfor i in range(len(p)):\n    if p[i] != 0:\n        temp = p.pop(i)\n        p.insert(0, temp)\n        break\n\nans =  \"\".join(map(str, p))\nbro = file.readline().rstrip()\nif ans == bro:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\"\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<long long, long long> ma;\nint main() {\n  long long mn = 1e9, mnk = 1e9, k;\n  string n, m;\n  cin >> n >> m;\n  if (m.size() == 1 && n.size() == 1 && m[0] == '0' && n[0] == '0') {\n    cout << \"OK\";\n    return 0;\n  }\n  if (m.size() != n.size()) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  for (int i = 0; i < n.size(); i++) {\n    ma[n[i] - '0']++;\n    k = n[i] - '0';\n    if (k != 0) mnk = min(mnk, k);\n  }\n  for (int i = 0; i < m.size(); i++) {\n    ma[m[i] - '0']--;\n    if (m[m[i] - '0'] == -1) {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  }\n  for (int i = m.size() - 1; i > 0; i--) {\n    k = m[i] - '0';\n    if (m[i] - '0' > mn) {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n    mn = min(mn, k);\n  }\n  if (mnk != m[0] - '0') {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  } else {\n    cout << \"OK\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\npublic class Day3_3_CorrectSolution {\n\n\tpublic static void main(String[] args) {\n\t\tInputReader reader = new InputReader(System.in);\n\t\tString number = reader.next();\n\t\tString answerNum = reader.next();\n\t\tInteger[] num = new Integer[number.length()];\n\t\tfor (int i = 0; i < number.length(); i++) {\n\t\t\tnum[i] = Integer.valueOf(number.charAt(i) + \"\");\n\t\t}\n\t\tArrays.sort(num);\n\t\tfor (int i = 0; i < number.length(); i++) {\n\t\t\tif (num[i] != 0) {\n\t\t\t\tint temp = num[i];\n\t\t\t\tnum[i] = num[0];\n\t\t\t\tnum[0] = temp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tString output = \"\";\n\t\tfor (int i = 0; i < number.length(); i++) {\n\t\t\toutput += num[i];\n\t\t}\n\t\tif (output.equals(answerNum))\n\t\t\tSystem.out.print(\"OK\");\n\t\telse\n\t\t\tSystem.out.print(\"WRONG_ANSWER\");\n\n\t}\n\n\tstatic class InputReader {\n\t\tStringTokenizer tokenizer;\n\t\tBufferedReader reader;\n\t\tString token;\n\t\tString temp;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\ttokenizer = null;\n\t\t\treader = new BufferedReader(new InputStreamReader(stream));\n\t\t}\n\n\t\tpublic InputReader(FileInputStream stream) {\n\t\t\ttokenizer = null;\n\t\t\treader = new BufferedReader(new InputStreamReader(stream));\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn reader.readLine();\n\t\t}\n\n\t\tpublic String next() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tif (temp != null) {\n\t\t\t\t\t\ttokenizer = new StringTokenizer(temp);\n\t\t\t\t\t\ttemp = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t\t}\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=list(input())\n\ndic={}\nfor i in range(0,10):\n    dic[i]=0\nfor i in range(0,len(n)):\n    dic[int(n[i])]+=1\nans=[]\nfor i in range(1,10):\n    if dic[i]!=0:\n        ans.append(i)\n        dic[i]-=1\n        break\nfor i in range(0,10):\n    while dic[i]!=0:\n        ans.append(i)\n        dic[i]-=1\n\nn=list(input())\ncpans=[]\nfor i in range(0,len(n)):\n    cpans.append(int(n[i]))\nif cpans==ans:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2;\n  long long index = 0;\n  cin >> s1 >> s2;\n  vector<char> v;\n  sort(s1.begin(), s1.end());\n  for (int i = 0; i < s1.length(); i++) {\n    if (s1[i] != '0') {\n      index = i;\n      break;\n    }\n  }\n  swap(s1[index], s1[0]);\n  if (s1 == s2)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n}\n"
        },
        {
            "language": 1,
            "solution": "I=raw_input;x=I();a=sorted(b for b in x if'0'!=b);print['WRONG_ANSWER','OK'][a[:1]+x.count('0')*['0']+a[1:]==list(I())]"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long findgcd(long long ar[], int n) {\n  long long res = ar[0];\n  for (int i = 1; i < n; i++) {\n    res = gcd(ar[i], res);\n    if (res == (long long)1) return (long long)1;\n  }\n  return res;\n}\nint prime(long long n) {\n  int f = 0;\n  for (int i = 2; i <= sqrt(n); i++) {\n    if (n % i == 0) {\n      f = 1;\n      break;\n    }\n  }\n  if (f == 0)\n    return 1;\n  else\n    return 0;\n}\nint main() {\n  char n[11] = {'\\0'}, m[11] = {'\\0'}, kaku = '0';\n  cin >> n >> m;\n  sort(n, n + strlen(n));\n  int f = 0;\n  for (int i = 0; i < strlen(n); i++) {\n    if (n[i] != '0') {\n      kaku = n[i];\n      f = 1;\n      n[i] = 'a';\n      break;\n    }\n  }\n  char ans[11] = {'\\0'};\n  int x = 0;\n  if (f == 1) ans[x++] = kaku;\n  for (int i = 0; i < strlen(n); i++) {\n    if (n[i] != 'a') ans[x++] = n[i];\n  }\n  if (strcmp(m, ans) == 0)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = 1\nwhile t > 0 :\n    t -= 1\n    a = list(input())\n    b = list(input())\n    a.sort()\n    z =- 9\n    for i in range(len(a)):\n        if a[i] != '0':\n            z = a[i]\n            a.pop(i)\n            break\n    if z != -9:    \n        a.insert(0,z)\n    if a == b :\n        print(\"OK\")\n    else:\n        print(\"WRONG_ANSWER\")"
        },
        {
            "language": 3,
            "solution": "__author__ = 'Darren'\n\n\ndef solve():\n    n_list = [x for x in input()]\n    m = input()\n    n_list.sort()\n    zeros = n_list.count('0')\n    if zeros != len(n_list):\n        n_list[0], n_list[zeros] = n_list[zeros], n_list[0]\n    if ''.join(n_list) == m:\n        print('OK')\n    else:\n        print('WRONG_ANSWER')\n\n\n\nif __name__ == '__main__':\n    solve()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int INF = 0x3f3f3f3f;\nconst double PI = acos(-1.0);\nconst int MAX = 1e5 + 10;\nconst long long mod = 1e9 + 7;\nusing namespace std;\nchar str[100], str2[100];\nchar str3[100];\nint main() {\n  while (scanf(\"%s%s\", str, str2) != EOF) {\n    int n = strlen(str);\n    sort(str, str + n);\n    char temp = 'a';\n    for (int i = 0; i < n; i++) {\n      if (str[i] != '0') {\n        temp = str[i];\n        str[i] = 'a';\n        break;\n      }\n    }\n    int index = 0;\n    if (temp != 'a') {\n      str3[0] = temp;\n      index++;\n    }\n    for (int i = 0; i < n; i++) {\n      if (str[i] != 'a') {\n        str3[index++] = str[i];\n      }\n    }\n    str3[index] = '\\0';\n    if (strcmp(str2, str3) == 0)\n      printf(\"OK\\n\");\n    else\n      printf(\"WRONG_ANSWER\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "C = input\nO = sorted\nI = print\ns = C()\nk = s.count('0')\ns = ''.join(O(s))[k:]\nI(\"OK\" if(C() == ('0' if s ==\n                  '' else s[0] + '0' * k + s[1:])) else \"WRONG_ANSWER\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint z[10];\nint main() {\n  int i = 0, A, B, a, n, tmp;\n  string sB;\n  cin >> a >> sB;\n  if (a == 0) z[0] = 1;\n  while (a > 0) {\n    z[a % 10]++;\n    a /= 10;\n  }\n  A = 0;\n  for (i = 1; i < 10; i++)\n    if (z[i]) {\n      A = i;\n      z[i]--;\n      break;\n    }\n  for (i = 0; i < 10; i++)\n    while (z[i]) {\n      A = A * 10 + i;\n      z[i]--;\n    }\n  i = 0;\n  B = 0;\n  while (sB[i]) {\n    B = B * 10 + (sB[i] - '0');\n    i++;\n  }\n  if (A == B) {\n    if (A == 0 && (sB[1] == 0))\n      cout << \"OK\" << endl;\n    else if (sB[0] != '0')\n      cout << \"OK\" << endl;\n    else\n      cout << \"WRONG_ANSWER\" << endl;\n  } else\n    cout << \"WRONG_ANSWER\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool cmp(char a, char b) { return a < b; }\nint main() {\n  char s[114514], ans[114514];\n  gets(s);\n  gets(ans);\n  if (strlen(s) != strlen(ans)) {\n    cout << \"WRONG_ANSWER\";\n    return 0;\n  }\n  long long len;\n  len = strlen(s);\n  sort(s, s + len, cmp);\n  for (int i = 0; i < len; i++) {\n    if (s[i] != '0') {\n      swap(s[i], s[0]);\n      break;\n    }\n  }\n  for (int i = 0; i < len; i++) {\n    if (s[i] != ans[i]) {\n      cout << \"WRONG_ANSWER\";\n      return 0;\n    }\n  }\n  cout << \"OK\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        char[] number = input.nextLine().toCharArray();\n        String bobResult = input.nextLine();\n        Arrays.sort(number);\n        String str = new String(number);\n        if (!str.contains(\"0\")) {\n            if (str.equals(bobResult)) System.out.println(\"OK\");\n            else System.out.println(\"WRONG_ANSWER\");\n        } else {\n            String temp = str.substring(str.indexOf(\"0\"), str.lastIndexOf(\"0\") + 1);\n            String result;\n            if (str.lastIndexOf(\"0\") == str.length() - 1) {\n                result = str;\n            } else {\n                char c = str.charAt(str.lastIndexOf(\"0\") + 1);\n                result = c + temp + str.substring(str.indexOf(c) + 1, str.lastIndexOf(c) + 1) + str.substring(str.lastIndexOf(c) + 1);\n            }\n            if (result.equals(bobResult)) System.out.println(\"OK\");\n            else System.out.println(\"WRONG_ANSWER\");\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "def test(n, m):\n    if n == 0:\n        return m == 0\n    nl = list(n)\n    nl.sort()\n    \n    for i in range(0, len(nl)):\n        if nl[i] != '0':\n            if i != 0:\n                nl[0], nl[i] = nl[i], nl[0]\n            break\n    \n    return nl == list(m)\n     \nn = raw_input()\nm = raw_input()    # can be 0001231231\n\nif test(n, m):\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\"\n"
        },
        {
            "language": 1,
            "solution": "s = raw_input();\nt = raw_input();\n\nflag = 1;\nfor i in range(len(s)):\n\tif s.count(s[i]) != t.count(s[i]):\n\t\tflag = 0; break;\n#print flag\npos = 0\n\nif t[0] == '0' and len(t) > 1:\n\tflag = 0;\nif flag:\n\tfor i in range(1, len(t)):\n\t\tif t[i] == '0' and i == 1:\n\t\t\tcontinue;\n\t\tif t[i] < t[i-1]:\n\t\t\tflag = 0; break;\nprint \"OK\" if flag else \"WRONG_ANSWER\";\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a, b;\nbool ok;\nint main() {\n  cin >> a >> b;\n  sort(a.begin(), a.end());\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] != '0') ok = 1;\n    if (!ok && a[i] == '0') {\n      for (int j = i; j < a.size(); j++) {\n        if (a[j] != '0') {\n          swap(a[j], a[i]);\n          ok = 1;\n          break;\n        }\n      }\n    }\n  }\n  cout << ((a == b) ? \"OK\" : \"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\n\ns = input()\ncounter = Counter(s)\nnozero = ''.join(s.split('0'))\ncorrect = ''\nif nozero:\n    correct += min(nozero)\n    counter[min(nozero)] -= 1\nfor i in range(10):\n    c = chr(ord('0') + i)\n    for j in range(counter[c]):\n        correct += c\nans = input()\nif correct == ans:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[10];\nchar p[10];\nchar q[10];\nint main() {\n  int i, j, k;\n  while (gets(s)) {\n    gets(p);\n    if (strcmp(s, \"0\") == 0 && strcmp(p, \"0\") == 0) {\n      puts(\"OK\");\n      continue;\n    }\n    sort(s, s + strlen(s));\n    for (i = 0; s[i] == '0'; i++)\n      ;\n    q[0] = s[i];\n    k = 1;\n    for (j = 0; j < strlen(s); j++)\n      if (j != i) q[k++] = s[j];\n    if (strcmp(p, q) == 0)\n      puts(\"OK\");\n    else\n      puts(\"WRONG_ANSWER\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "ques = raw_input()\nans = raw_input()\nzeros = ques.count('0')\nmyans = [x for x in ques if x != '0']\nmyans.sort()\nif ques == '0':\n    if ans == '0':\n        print 'OK'\n    else:\n        print 'WRONG_ANSWER'\nelif ans == myans[0] + '0' * zeros + ''.join(myans[1:]):\n    print 'OK'\nelse:\n    print 'WRONG_ANSWER'\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.awt.Point;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\nimport sun.misc.Queue;\n\n/**\n *\n * @author Mojtaba\n */\npublic class Main {\n\n    static boolean[][] a;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\n        StringBuilder sb = new StringBuilder();\n        //String str = reader.readLine();\n        PrintWriter writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        //int n=Integer.parseInt(reader.readLine());\n        String n = reader.readLine();\n        String ms=reader.readLine();\n        int m = Integer.parseInt(ms);\n        int[] digits = new int[10];\n        for (int i = 0; i < n.length(); i++) {\n            digits[(n.charAt(i) - '0')]++;\n        }\n        HashSet<Integer> set = NumbersFrom(digits);\n        ArrayList<Integer> list = new ArrayList<>(set);\n\n        Collections.sort(list);\n        int temp = 0;\n        for (int i = 0; i < list.size(); i++) {\n            if ((int) Math.log10(list.get(i)) + 1 == n.length()) {\n                temp = list.get(i);\n                break;\n            }\n        }\n        //System.err.println(list);\n        //System.err.println(temp);\n        sb.append(temp == m && (int) ms.length() == n.length() ? \"OK\" : \"WRONG_ANSWER\");\n\n        //int k = Integer.parseInt(reader.readLine());\n//        StringTokenizer tokenizer = new StringTokenizer(reader.readLine());\n//        for (int i = 0; i < a.length; i++) {\n//            a[i] = Integer.parseInt(tokenizer.nextToken());\n//        }\n//        ArrayList<State> list = F(a);\n//        if (list.size() > 3) {\n//            sb.append(\"no\");\n//        } else {\n//            if (list.size() == 1) {\n//                if (list.get(0).halat == 1) {\n//                    sb.append(\"yes\\n1 1\");\n//                } else {\n//                    sb.append(\"yes\\n\");\n//                    sb.append(1).append(\" \").append(k);\n//                }\n//            } else if (list.size() == 2) {\n//                if (list.get(0).halat == list.get(1).halat) {\n//                    sb.append(\"no\");\n//                } else {\n//                    if (list.get(0).halat == -1) {\n//                        sb.append(\"yes\\n\").append((list.get(0).left + 1)).append(\" \").append(list.get(0).right);\n//\n//                    } else {\n//                        sb.append(\"yes\\n\").append((list.get(1).left + 1)).append(\" \").append(list.get(1).right);\n//                    }\n//                }\n//            } else {\n//                if (!(list.get(0).halat == 1 && list.get(1).halat == -1 && list.get(2).halat == 1)) {\n//                    sb.append(\"no\");\n//                } else if (a[list.get(0).right - 1] <= a[list.get(1).right - 1] && a[list.get(1).left] <= a[list.get(2).left]) {\n//                    sb.append(\"yes\\n\").append((list.get(1).left + 1)).append(\" \").append(list.get(1).right);\n//                }\n//            }\n//        }\n\n        writer.println(sb.toString().trim());\n        writer.close();\n        reader.close();\n    }\n\n    static ArrayList<State> F(int[] a) {\n        int soudi = 1;\n        int nozooli = -1;\n        int halat = a[0] > a[1] ? nozooli : soudi;\n        int r = 0;\n        int l = 0;\n        ArrayList<State> list = new ArrayList<>();\n        for (int i = 1; i < a.length - 1; i++) {\n            if (halat == soudi) {\n                if (a[i] <= a[i + 1]) {\n                    r = i + 2;\n                    if (i == a.length - 2) {\n                        list.add(new State(l, r, halat));\n                    }\n                } else {\n                    list.add(new State(l, i + 1, halat));\n                    l = i + 1;\n                    halat = nozooli;\n                    if (i == a.length - 2) {\n                        list.add(new State(l, l + 1, halat));\n                    }\n                }\n            } else {\n                if (a[i] >= a[i + 1]) {\n                    r = i + 2;\n                    if (i == a.length - 2) {\n                        list.add(new State(l, r, halat));\n                    }\n                } else {\n                    list.add(new State(l, i + 1, halat));\n                    l = i + 1;\n                    halat = soudi;\n                    if (i == a.length - 2) {\n                        list.add(new State(l, l + 1, halat));\n                    }\n                }\n            }\n        }\n        return list;\n    }\n\n    static HashSet<Integer> NumbersFrom(int[] digits) {\n        int maxDigit = 0;\n        for (int i = 0; i < digits.length; i++) {\n            maxDigit += digits[i];\n        }\n        return NumbersFrom(digits, maxDigit);\n    }\n\n    static HashSet<Integer> NumbersFrom(int[] digits, int maxDigit) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i] > 0) {\n                list.add(i);\n            }\n        }\n        int t1 = 0;\n        int t2 = list.size();\n        for (int i = 1; i < maxDigit; i++) {\n            for (int j = t1; j < t2; j++) {\n                int number = list.get(j);\n                int temp = number;\n                while (temp > 0) {\n                    digits[temp % 10]--;\n                    temp /= 10;\n                }\n                for (int k = 0; k < 10; k++) {\n                    if (digits[k] > 0) {\n                        int digit = (int) Math.log10(number * 10 + k) + 1;\n                        //if (digit == maxDigit) \n                        {\n                            list.add(number * 10 + k);\n                        }\n                    }\n                }\n                while (number > 0) {\n                    digits[number % 10]++;\n                    number /= 10;\n                }\n            }\n            t1 = t2;\n            t2 = list.size();\n        }\n        HashSet<Integer> set = new HashSet<Integer>(list);\n        return set;\n    }\n}\n\nclass State {\n\n    int left, right, halat;\n\n    public State(int left, int right, int halat) {\n        this.left = left;\n        this.right = right;\n        this.halat = halat;\n    }\n\n    @Override\n    public String toString() {\n        return \"[\" + left + \", \" + right + \") \" + halat;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=str(input())\nm=str(input())\nlength=len(n)\narr=[]\nfor i in range(0,length,1):\n    arr.append(n[i])\n\narr.sort()\nif(arr[0]=='0'):\n    for i in range(0,length,1):\n        if(arr[i]!='0'):\n            arr[0]=arr[i]\n            arr[i]='0'\n            break\n\nw=map(str,arr)\ny=''.join(w)\nhaha=str(y)\nif(haha==m):\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")"
        },
        {
            "language": 4,
            "solution": "// http://codeforces.com/problemset/problem/12/B\n\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Solution {\n\n\tpublic static void main(String[] args) {\n\t\tScanner read = new Scanner(System.in);\n\t\t\n\t\tString n = read.nextLine();\n\t\tString m = read.nextLine();\n\t\t\n\t\t// If Bob's answer starts with a leading zero - he is automatically wrong\n\t\tif (m.length() > 1 && m.startsWith(\"0\")) {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\tread.close();\n\t\t\treturn;\n\t\t}\n\t\t\t\n\t\t// Get smallest possible number (with leading zeros)\n\t\tchar[] nDigits = n.toCharArray();\n\t\tArrays.sort(nDigits);\n\t\tString smallestNumber = new String(nDigits);\n\t\t\n\t\t// Get smallest possible number WITHOUT leading zeros\n\t\tStringBuilder smallestValidNumber = new StringBuilder();\n\t\tif ( smallestNumber.length() == 1 || !smallestNumber.startsWith(\"0\") ) {\n\t\t\tsmallestValidNumber.append(smallestNumber);\n\t\t}\n\t\telse {\n\t\t\tint i = 0;\n\t\t\twhile (i < smallestNumber.length() && smallestNumber.charAt(i) == '0') {\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tsmallestValidNumber.append( smallestNumber.substring(i, i+1) );\n\t\t\tfor (int j = 0; j < i; ++j) { smallestValidNumber.append(\"0\"); };\n\t\t\tsmallestValidNumber.append( smallestNumber.substring(i+1) );\n\t\t}\n\t\t\n\t\t// Print if Bob is correct\n\t\tif (smallestValidNumber.toString().equals(m)) {\n\t\t\tSystem.out.println(\"OK\");\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t}\n\t\t\n\t\t// Close scanner\n\t\tread.close();\n\t}\n\t\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void) {\n  string a, b, r;\n  cin >> a >> b;\n  vector<char> v;\n  v.assign(a.begin(), a.end());\n  sort(v.begin(), v.end());\n  int i;\n  for (i = 0; i != v.size() && v[i] == '0'; ++i)\n    ;\n  if (i != v.size()) swap(v[0], v[i]);\n  r.append(v.begin(), v.end());\n  if (r == b)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class CodeForces {\n    public static void main(String[] args) {\n        FastReader reader = new FastReader();\n\n        long initial = reader.nextLong();\n        String guess = reader.nextLine();\n\n        if (guess.length() > 1 && guess.startsWith(\"0\")) {\n            System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n\n        System.out.println(smallestOutOf(initial).equals(guess) ? \"OK\" : \"WRONG_ANSWER\");\n    }\n\n    private static String smallestOutOf(long initial) {\n        int[] digits = new int[10];\n        for (char c : String.valueOf(initial).toCharArray()) {\n            digits[c - '0']++;\n        }\n\n        StringBuilder sb = new StringBuilder();\n        for (int i = 1; i <= 9; i++) {\n            if (digits[i] > 0) {\n                sb.append(i);\n                digits[i]--;\n                break;\n            }\n        }\n\n        for (int i = 0; i <= 9; i++) {\n            while (digits[i] > 0) {\n                sb.append(i);\n                digits[i]--;\n            }\n        }\n\n        return sb.toString();\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            try {\n                return br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return \"\";\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "//package clipse;\n\n\nimport java.util.*;\nimport java.util.function.Function;\nimport java.util.stream.Collectors;\n\n\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\nimport java.io.*;\nimport java.math.*;\n\n\npublic class C\n{\n\t\n\tstatic StringBuilder sb;\n\t\n\tstatic boolean dp[][];\n\tstatic int cnt=0;\n\t\n\t\n\t\n\tstatic void solve()\n\t{\n\t\tString s1=s();\n\t\tint n=Integer.parseInt(s1);\n\tString s=s();\n\tint n1=Integer.parseInt(s);\n\tArrayList<Integer>l=new ArrayList<>();\n\tint tmp=n;\n\tint co=0;\n\tint size=0;\n\twhile(n!=0)\n\t{\n\t\tsize++;\n\t\tif(n%10==0)\n\t\t\tco++;\n\t\telse\n\t\t\tl.add(n%10);\n\t\tn/=10;\n\t\t\n\t\t\n\t}\n\tCollections.sort(l);\n\tlong x=0;\n\tif(l.size()>0)\n\tx=l.get(0);\n\t\n\tfor(int i=0;i<co;i++)\n\t\tx=x*10;\n\t\n\tfor(int i=1;i<l.size();i++)\n\t{\n\t\tx=x*10;\n\t\tx+=l.get(i);\n\t}\n\t//System.out.println(x);\n\t\n\t\n\t\n\t\n\t\n\tif(s.charAt(0)=='0'&&s.length()!=s1.length())\n\t\tSystem.out.println(\"WRONG_ANSWER\");\n\telse if(s.charAt(0)=='0'&&s.length()==s1.length()&&x==n1)\n\t\tSystem.out.println(\"OK\");\n\telse if(x==n1)\n\t\tSystem.out.println(\"OK\");\n\telse\n\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\n\t public static void main(String[] args)\n\t    {\n\t\t \n\t\t int p = 1000000007;\n\t\t inverse obj=new inverse(100001);\n\t\t obj.InverseofNumber(p);\n\t\t obj.InverseofFactorial(p);\n\t\t obj.factorial(p);\n\t\t \n\t\t int testcase=1;\n\t\t \t\t\n\t         sb=new StringBuilder();\n\t        int tmp=testcase;\n\t         while(testcase-->0)\n\t         {\n\t        \t \n\t        \t solve();\n\t         }\n\t         \n\t         System.out.println(sb);\n\t         \n\t    }\n\t \n\t \n\t //*********************************Disjoint set union*************************//\n\t static class dsu\n\t {\n\t\t int parent[];\n\t\t int size[];\n\t\t dsu(int n)\n\t\t {\n\t\t\t parent=new int[n];\n\t\t\t size=new int[n];\n\t\t\t Arrays.fill(size,-1);\n\t\t\t for(int i=0;i<n;i++)\n\t\t\t\t parent[i]=-1;\n\t\t }\n\t\t int find(int a)\n\t\t {\n\t\t\t if(parent[a]<0)\n\t\t\t\t return a;\n\t\t\t else\n\t\t\t {\n\t\t\t\t int x=find(parent[a]);\n\t\t\t\t parent[a]=x;\n\t\t\t\t return x;\n\t\t\t }\n\t\t }\n\t\t void merge(int a,int b)\n\t\t {\n\t\t\t a=find(a);\n\t\t\t b=find(b);\n\t\t\t if(a==b)\n\t\t\t\t return;\n\t\t\t parent[b]=a;\n\t\t\t size[a]+=size[b];\n\t\t }\n\t }\n\t \n\t \n\t \n//*******************************************PRIME FACTORIZE *****************************************************************************************************//\n\t static TreeMap<Long,Long> prime(long n)\n\t {\n\t\t TreeMap<Long,Long>h=new TreeMap<>();\n\t\t long num=n;\n\t\t \n\t\t for(int i=2;i<=Math.sqrt(num);i++)\n\t\t {\n\t\t\t if(n%i==0)\n\t\t\t {\n\t\t\t\t int nt=0;\n\t\t\t\t while(n%i==0) {\n\t\t\t\t\t n=n/i;\n\t\t\t\t\t nt++;\n\t\t\t\t }\n\t\t\t\t h.put((long)i, (long)nt);\n\t\t\t }\n\t\t }\n\t\t if(n!=1)\n\t\t\t h.put((long)n, (long)1);\n\t\t return h;\n\t\t \n\t }\n\t \n///////////////////////****************************************-----------------------------.........................>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>***********************************************\t\n\t \n\tstatic long [] xsort(long A[])\n\t{\n\t\tArrayList<Long>l=new ArrayList<>();\n\t\tfor(long a:A)\n\t\t\tl.add(a);\n\t\tCollections.sort(l);\n\t\tfor(int i=0;i<l.size();i++)\n\t\t\tA[i]=l.get(i);\n\t\t\n\t\t\treturn A;\n\t\t\n\t\t\n\t}\n\t \n\t\n//*************CLASS PAIR ***********************************************************************************************************************************************\n\tstatic class pair implements Comparable<pair>\n    {\n        long x;\n        int y;\n\n        pair(long x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n        public int compareTo(pair o)\n        {\n        \treturn (int)(x-o.x);\n        \t\n        }\n\t\t\n       \n    }\n//*************CLASS PAIR *****************************************************************************************************************************************************\n\t\n\t\n\t\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int Int() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String String() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return String();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0)\n                    writer.print(' ');\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void flush() {\n            writer.flush();\n        }\n    }\n\n    static InputReader in = new InputReader(System.in);\n    static OutputWriter out = new OutputWriter(System.out);\n    static int modulus = (int) 1e7;\n\n    public static int[] sort(int[] a) {\n        int n = a.length;\n        ArrayList<Integer> l = new ArrayList<>();\n        for (int i : a)\n            l.add(i);\n        Collections.sort(l);\n        for (int i = 0; i < l.size(); i++)\n            a[i] = l.get(i);\n        return a;\n    }\n\n    public static long pow(long x, long y) {\n        long res = 1;\n        while (y > 0) {\n            if (y % 2 != 0) {\n                res = (res * x) % modulus;\n                y--;\n\n            }\n            x = (x * x) % modulus;\n            y = y / 2;\n        }\n        return res;\n    }\n//GCD___+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    public static long gcd(long x, long y) {\n        if (x == 0)\n            return y;\n        else\n            return gcd(y % x, x);\n    }\n    //****************LOWEST COMMON MULTIPLE   *************************************************************************************************************************************\n\n    public static long lcm(long x, long y) {\n        return (x * (y / gcd(x, y)));\n    }\n//INPUT PATTERN******************************************************************************************************************************************************************\n    public static int i() {\n        return in.Int();\n    }\n\n    public static long l() {\n        String s = in.String();\n        return Long.parseLong(s);\n    }\n\n    public static String s() {\n        return in.String();\n    }\n\n    public static int[] readArray(int n) {\n        int A[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            A[i] = i();\n        }\n        return A;\n    }\n\n    public static long[] readArray(long n) {\n        long A[] = new long[(int) n];\n        for (int i = 0; i < n; i++) {\n            A[i] = l();\n        }\n        return A;\n    }\n\n//////////////////////////************************************INVERSE MODULO******************************************************************\nstatic class inverse \n{\n\tstatic int N;\n\tstatic long[] factorialNumInverse;\n\tstatic long[] naturalNumInverse;\n\tstatic long[] fact;\n\tinverse(int n)\n\t{\n\t\tthis.N=n;\n\t\t\n\t\t factorialNumInverse = new long[N + 1];\n\t\t \n\t    // Array to precompute inverse of 1! to N!\n\t     naturalNumInverse = new long[N + 1];\n\t \n\t    // Array to store factorial of first N numbers\n\t     fact = new long[N + 1];\n\t \n\t}\n\t\n\n// Function to precompute inverse of numbers\nstatic void InverseofNumber(int p)\n{\nnaturalNumInverse[0] = naturalNumInverse[1] = 1;\n\nfor(int i = 2; i <= N; i++)\n    naturalNumInverse[i] = naturalNumInverse[p % i] *\n            (long)(p - p / i) % p;\n}\n\n// Function to precompute inverse of factorials\nstatic void InverseofFactorial(int p)\n{\nfactorialNumInverse[0] = factorialNumInverse[1] = 1;\n\n// Precompute inverse of natural numbers\nfor(int i = 2; i <= N; i++)\n    factorialNumInverse[i] = (naturalNumInverse[i] *\n            factorialNumInverse[i - 1]) % p;\n}\n\n// Function to calculate factorial of 1 to N\nstatic void factorial(int p)\n{\nfact[0] = 1;\n\n// Precompute factorials\nfor(int i = 1; i <= N; i++)\n{\n    fact[i] = (fact[i - 1] * (long)i) % p;\n}\n}\n\n// Function to return nCr % p in O(1) time\nstatic long comb(int N, int R, int p)\n{\n\n// n C r = n!*inverse(r!)*inverse((n-r)!)\nlong ans = ((fact[N] * factorialNumInverse[R]) %\n        p * factorialNumInverse[N - R]) % p;\n\nreturn ans;\n}\n}\n//////////////////////////************************************INVERSE MODULO******************************************************************\n}\n\n\n\n\n\n\n\n\n\t"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class B_12 {\n    FastScanner in;\n    PrintWriter out;\n\n    public void run() {\n        try {\n            in = new FastScanner(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n            solve();\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void solve() throws IOException {\n        String s = in.next();\n        String answ = in.next();\n        int n = s.length();\n        StringBuilder result = new StringBuilder();\n        StringBuilder sb = new StringBuilder(s);\n        for (int i=1; i<n; i++) {\n            if (sb.charAt(i) != sb.charAt(i-1)) {\n                break;\n            }\n            if (i == n-1) {\n                result = new StringBuilder(s);\n                if (result.toString().equals(answ)) {\n                    out.println(\"OK\");\n                } else {\n                    out.println(\"WRONG_ANSWER\");\n                }\n                return;\n            }\n        }\n        int charMin = Integer.MAX_VALUE;\n        int posMin = 0;\n        for (int i=0; i<n; i++) {\n            if ((sb.charAt(i)-48) != 0 && (sb.charAt(i)-48) < charMin) {\n                charMin = (sb.charAt(i)-48);\n                posMin = i;\n            }\n        }\n        result.append(sb.charAt(posMin));\n        sb.deleteCharAt(posMin);\n        n--;\n        int [] a = new int[n];\n        for (int i=0; i<n; i++) {\n            a[i] = (sb.charAt(i)-48);\n        }\n        Arrays.sort(a);\n        for (int i=0; i<n; i++) {\n            result.append(a[i]);\n        }\n        if (result.toString().equals(answ)) {\n            out.println(\"OK\");\n        } else {\n            out.println(\"WRONG_ANSWER\");\n        }\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        FastScanner(InputStreamReader in) {\n            br = new BufferedReader(in);\n        }\n\n        String nextLine() {\n            String str = null;\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n            return str;\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n\n    public static void main(String[] arg) {\n        B_12 o = new B_12();\n        o.run();\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        String ch = s.next();\n        int m = Integer.valueOf(ch);\n        int a[] = new int[10];\n        if(n == 0) {\n            if(m == 0 && ch.length() == 1) System.out.println(\"OK\");\n            else System.out.println(\"WRONG_ANSWER\");\n            return ;\n        }\n        int Bit = 0;\n        while(n!=0) {\n            a[n % 10]++;\n            n /=10;\n            Bit ++;\n        }\n        if(Bit != ch.length()) {\n            System.out.println(\"WRONG_ANSWER\");\n            return ;\n        }\n        int Ans;\n        for(int i = 1;;i++) {\n            if(a[i] == 0) continue;\n            Ans = i;a[i]--;break;\n        }\n        for(int i = 0;i <= 9;i++) {\n            for(int j = 0;j < a[i];j++)\n                Ans = Ans * 10 + i;\n        }\n        if(Ans == m) System.out.println(\"OK\");\n        else System.out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid O() {\n  string a;\n  cin >> a;\n  char h = 'w';\n  string r;\n  cin >> r;\n  if (a == \"0\" && r == \"0\") {\n    cout << \"OK\" << endl;\n    return;\n  }\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] != '0') {\n      h = min(a[i], h);\n    }\n  }\n  string s = \"\";\n  s += h;\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] == h) {\n      a.erase(a.begin() + i);\n      break;\n    }\n  }\n  sort((a).begin(), (a).end());\n  s += a;\n  if (s == r) {\n    cout << \"OK\";\n  } else {\n    cout << \"WRONG_ANSWER\";\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t = 1;\n  while (t--) O();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char a[11], b[11];\n  scanf(\"%s%s\", a, b);\n  sort(a, a + strlen(a));\n  int i = 0;\n  while (a[i] == '0') i++;\n  if (a[i] == '\\0') i--;\n  char tmp = a[0];\n  a[0] = a[i];\n  a[i] = tmp;\n  if (strcmp(a, b) == 0)\n    printf(\"OK\");\n  else\n    printf(\"WRONG_ANSWER\");\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\n\npublic class Temp {\n    \n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        \n        String input = br.readLine().trim();\n        String output = br.readLine().trim();\n        \n        \n        char[] digits = input.toCharArray();\n        Arrays.sort(digits);\n        \n        if(input.equals(\"0\")){\n            if(output.equals(\"0\"))\n                System.out.println(\"OK\");\n            else\n                    System.out.println(\"WRONG_ANSWER\");    \n        }\n        else{\n            StringBuffer buffer = new StringBuffer(\"\");\n            int zeros=0;\n            for(int i=0; i<digits.length; i++){\n                if(digits[i] == '0')\n                    zeros++;\n                else{\n                    buffer.append(digits[i]+\"\");\n                }\n            }\n            \n            for(int i=0; i<zeros; i++){\n                buffer.insert(1, \"0\");\n            }\n            \n            if(output.equals(buffer.toString())){\n                System.out.println(\"OK\");\n            }\n            else{\n                System.out.println(\"WRONG_ANSWER\");\n            }\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\nimport static java.lang.System.out;\npublic final class CorrectSolution {\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n        char[] cs = s.nextLine().toCharArray();\n        String a = s.nextLine();\n        int[] counts = new int[10];\n        int min = 10;\n        for (int i = 0; i < cs.length; i++) {\n            int d = cs[i] - '0'; \n            counts[d]++;\n            if (d != 0 && min > d) {\n                min = d;\n            }\n        }\n\n        int output = 0;\n        if (counts[0] != 0 && min < 10) {\n            output += min;\n            counts[min]--;\n        }\n\n        for (int i = 0; i < counts.length; i++)\n            while (counts[i] > 0) {\n                output *= 10;\n                output += i;\n                counts[i]--;\n            }\n\n        if (a.equals(new Integer(output).toString())) out.println(\"OK\");\n        else out.println(\"WRONG_ANSWER\");\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    s=input()\n    ks=input()\n    z=[]\n    sa=[]\n    for i in s:\n        if i=='0':\n            z+='0'\n        else:\n            sa+=[i]\n    sa.sort()\n    for i in z:\n        sa.insert(1,i)\n    a=''.join(map(str,sa))\n    if ks==a:\n        print(\"OK\")\n    else:\n        print('WRONG_ANSWER')\n\nif __name__=='__main__':\n    main()\n"
        },
        {
            "language": 1,
            "solution": "ans = sorted(raw_input())\nfor i in xrange(len(ans)):\n    if ans[i] != '0':\n        ans[0], ans[i] = ans[i], ans[0]\n        break\n    \nans = ''.join(ans)\nif raw_input() == ans:\n    print \"OK\"\nelse:\n    print \"WRONG_ANSWER\""
        },
        {
            "language": 3,
            "solution": "def main():\n    curr = list(sorted(list(input())))\n    test = input()\n\n    idx = 0\n\n    for i, nbr in enumerate(curr):\n        if nbr != '0':\n            idx = i\n            break\n\n    tmp = curr[idx]\n    curr.remove(tmp)\n    curr.insert(0, tmp)\n\n    print(\"OK\" if ''.join(curr) == test else \"WRONG_ANSWER\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "a = input()\nb = input()\na = sorted(a)\nc = ''\ndict1 = {}\nif(len(a)==1):\n    c = ''.join(a)\nelse:\n    for i in a:\n        dict1[i] = a.count(i)\n    if('0' not in a):\n        c = ''.join(a)\n    else:\n        if('0' in dict1):\n            for i in range(dict1['0']):\n                a.remove('0')\n            c = ''.join(min(a)+'0'*dict1['0']+''.join(a[1:]))\nif(c == b):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\n\npublic class A {\n\t\n\tpublic static void main(String[] args) throws IOException \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\n\t\tchar[] s = sc.next().toCharArray(), t = sc.next().toCharArray();\n\t\tif(s.length == t.length && correct(s, t))\n\t\t\tout.println(\"OK\");\n\t\telse\n\t\t\tout.println(\"WRONG_ANSWER\");\n\t\tout.flush();\n\t\tout.close();\n\t}\n\t\n\tstatic boolean correct(char[] s, char[] t)\n\t{\n\t\tcompute(s);\n\t\tfor(int i = 0; i < s.length; ++i)\n\t\t\tif(s[i] != t[i])\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\t\n\tstatic void compute(char[] s)\n\t{\n\t\tArrays.sort(s);\n\t\tif(s.length > 1 && s[0] == '0')\n\t\t{\n\t\t\tint i = 0;\n\t\t\twhile(s[i] == '0')\n\t\t\t\t++i;\n\t\t\ts[0] = s[i];\n\t\t\ts[i] = '0';\n\t\t}\n\t}\n\n\tstatic class Scanner \n\t{\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s){\tbr = new BufferedReader(new InputStreamReader(s));}\n\t\t\n\t\tpublic Scanner(FileReader r){\tbr = new BufferedReader(r);}\n\n\t\tpublic String next() throws IOException \n\t\t{\n\t\t\twhile (st == null || !st.hasMoreTokens()) \n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {return Integer.parseInt(next());}\n\n\t\tpublic long nextLong() throws IOException {return Long.parseLong(next());}\n\n\t\tpublic String nextLine() throws IOException {return br.readLine();}\n\n\t\tpublic double nextDouble() throws IOException\n\t\t{\n\t\t\tString x = next();\n\t\t\tStringBuilder sb = new StringBuilder(\"0\");\n\t\t\tdouble res = 0, f = 1;\n\t\t\tboolean dec = false, neg = false;\n\t\t\tint start = 0;\n\t\t\tif(x.charAt(0) == '-')\n\t\t\t{\n\t\t\t\tneg = true;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\tfor(int i = start; i < x.length(); i++)\n\t\t\t\tif(x.charAt(i) == '.')\n\t\t\t\t{\n\t\t\t\t\tres = Long.parseLong(sb.toString());\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t\tdec = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsb.append(x.charAt(i));\n\t\t\t\t\tif(dec)\n\t\t\t\t\t\tf *= 10;\n\t\t\t\t}\n\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\treturn res * (neg?-1:1);\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {return br.ready();}\n\n\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[10010];\nchar b[10010], c[1010], d[1010];\nint main() {\n  while (scanf(\"%s%s\", a, b) != EOF) {\n    int len = strlen(a);\n    sort(a, a + len);\n    int flag = 0;\n    for (int i = 0; i < len; i++) {\n      if (a[i] != '0') {\n        flag = i;\n        char t = a[i];\n        a[i] = a[0];\n        a[0] = t;\n        break;\n      }\n    }\n    if (strcmp(a, b) == 0) {\n      printf(\"OK\\n\");\n    } else {\n      printf(\"WRONG_ANSWER\\n\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "s=input()\ns1=input()\n\nif(len(s)!=len(s1)):\n    print('WRONG_ANSWER')\n    exit()\nelif(len(s)==len(s1) and s1==s and len(s)==1):\n    print('OK')\n    exit()\nl=[]\nmn=10**9+7\nln=0\nfor i in s:\n    ln+=1\n    k=int(i)\n    if(k!=0 and k<mn):\n        mn=k\n\n    l.append(k)\n\nl=sorted(l)\nif(l[0]==0):\n    for i in range(ln):\n        if(l[i]==mn):\n            del l[i]\n            break\n    s=[str(i) for i in l]\n    s2=''.join(s)\n    s2=str(mn)+s2\nelse:\n    s = [str(i) for i in l]\n    s2 = ''.join(s)\n\nif(s1==s2):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string x, y;\n  cin >> x >> y;\n  sort(x.begin(), x.end());\n  for (int i = 0; i < x.length(); i++) {\n    if (x[i] != '0') {\n      swap(x[i], x[0]);\n      break;\n    }\n  }\n  if (x == y) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"WRONG_ANSWER\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "s = input()\nt = input()\nl = list(s)\nl.sort()\nc=0\nfor i in range(len(l)):\n    if l[i]!='0':\n        c = i\n        break\nx = ['0']*c\n#print(x)\nl = [l[c]] + x + l[c+1:]\nl = ''.join(l)\n\nif l == t:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n\t \t\t    \t \t\t\t\t \t \t \t  \t\t\t\t\t \t"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class B012 {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tString a = in.next(), b = in.next();\n\t\t\n\t\tString c = ans(a);\n\t\tSystem.out.println(c.equals(b) ? \"OK\" : \"WRONG_ANSWER\");\n\t}\n\n\tstatic String ans(String a) {\n\t\tif(a.equals(\"0\")) return \"0\";\n\t\tchar[] b = a.toCharArray();\n\t\tArrays.sort(b);\n\t\tint x = 0;\n\t\twhile (b[x] == '0')\n\t\t\tx++;\n\t\tif(x>0&&x<b.length) {\n\t\t\tb[0] = b[x];\n\t\t\tb[x] = '0';\n\t\t}\n\t\treturn new String(b);\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "x = raw_input()\nanswer = raw_input()\n\nif (answer[0] == 0) and (len(answer) > 1):\n    print 'WRONG_ANSWER'\n\n\n##if int(x) == 0:\n##    if int(answer) == 0:\n##        print 'OK'\n##    else:\n##        print 'WRONG_ANSWER'\n\nelif len(x) == 1:\n    if (x == answer):\n        print 'OK'\n    else:\n        print 'WRONG_ANSWER'\n\nelse:\n    \n##    answer = answer.lstrip('0')\n\n    countnum = []\n    for number in range(10):\n        countnum.append(x.count(str(number)))\n    ##print countnum\n\n\n    num = ''\n    for i in range(1,10):\n            num = num + str(i) * countnum[i]\n\n    zeros = '0' * countnum[0]\n\n    ##print zeros\n\n\n    r_ans = num[0] + zeros + num[1:]\n    ##print r_ans\n    if r_ans == answer:\n        print 'OK'\n    else:\n        print 'WRONG_ANSWER'\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nx = input()\ng = []\nb = n.count('0')\nfor j in n:\n    if j != '0':\n        j = int(j)\n        g.append(j)\nif len(g) > 0:\n    a = min(g)\n    g.remove(min(g))\nelse:\n    a = ''\nc = str(a)\nfor z in range(b):\n    g.append(0)\nfor j in range(len(g)):\n    c += str(min(g))\n    g.remove(min(g))\nif int(c) == int(x) and len(str(c)) == len(str(x)):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, ss, sss;\nlong long sz[90], sz2[90], wz;\nint main() {\n  cin >> s >> ss;\n  if (s.length() != ss.length()) {\n    cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < s.length(); i++) {\n    sz[i] = s[i] - '0';\n  }\n  for (int i = 0; i < ss.length(); i++) {\n    sz2[i] = ss[i] - '0';\n  }\n  sort(sz, sz + s.length());\n  while (sz[wz] == 0) {\n    wz++;\n    if (wz >= s.length()) {\n      break;\n    }\n  }\n  swap(sz[0], sz[wz]);\n  for (int i = 0; i < s.length(); i++) {\n    if (sz[i] != sz2[i]) {\n      cout << \"WRONG_ANSWER\" << endl;\n      return 0;\n    }\n  }\n  cout << \"OK\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  int i, j, l = a.size();\n  if (a == \"0\") {\n    if (b == \"0\") {\n      cout << \"OK\" << endl;\n    } else\n      cout << \"WRONG_ANSWER\" << endl;\n    return 0;\n  }\n  for (i = 0; i < l; i++) {\n    for (j = i + 1; j < l; j++) {\n      if (a[j] < a[i]) swap(a[i], a[j]);\n    }\n  }\n  if (a[0] == '0') swap(a[0], a[1]);\n  if (a == b)\n    cout << \"OK\" << endl;\n  else\n    cout << \"WRONG_ANSWER\" << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=list(input().split())\ns=input()\nn=n[0]\nn=list(map(int,n))\nn.sort()\nzeros=n.count(0)\nfor i in range(zeros):\n    n.remove(0)\nfor i in range(zeros):\n    n.insert(1,0)\nans=int(''.join(map(str,n)))\nans=str(ans)\nprint('OK' if ans==s else 'WRONG_ANSWER')\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  int c[10];\n  memset(c, 0, 10 * sizeof(int));\n  for (int i = 0; i < (int)(s).size(); ++i) {\n    ++c[s[i] - '0'];\n  }\n  string ans = \"\";\n  if (s == \"0\") {\n    ans = s;\n  } else {\n    for (int i = 1; i < 10; ++i) {\n      if (c[i]) {\n        ans += (char)(i + '0');\n        --c[i];\n        break;\n      }\n    }\n    for (int i = 0; i < 10; ++i) {\n      while (c[i]) {\n        ans += (char)(i + '0');\n        --c[i];\n      }\n    }\n  }\n  string t;\n  cin >> t;\n  cout << (ans == t ? \"OK\\n\" : \"WRONG_ANSWER\\n\");\n}\n"
        },
        {
            "language": 3,
            "solution": "l=list(input())\nm=list(input())\nl.sort()\n\ne=0\nif(l[0]=='0'):\n    for i in range(1,len(l)):\n        if(l[i]!='0'):\n            l[0]=l[i]\n            l[i]='0'\n            e=1\n            break\n        if(e==1):\n            break\n\n\nif(l==m ):\n    print('OK')\nelse:\n    print('WRONG_ANSWER')"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class C12B {\n    public static void main(String args[]){\n        Scanner sc=new Scanner(System.in);\n        String str=sc.next();\n        String str2=sc.next();\n\n        if(str.equals(\"0\")){\n            if(str2.equals(\"0\"))\n                System.out.println(\"OK\");\n            else System.out.println(\"WRONG_ANSWER\");\n            return;\n        }\n        int nm[]=new int[str.length()];\n        int c=0;\n        for(int i=0;i<nm.length;i++){\n            int a=Integer.parseInt(String.valueOf(str.charAt(i)));\n            if(a!=0)\n                nm[c++]=a;\n        }\n        \n        int nmm[]=new int[c];\n\n        for(int i=0;i<c;i++){\n            nmm[i]=nm[i];\n        }\n        Arrays.sort(nmm);\n\n        String res=String.valueOf(nmm[0]);\n\n\n        for(int j=0;j<nm.length-c;j++)\n            res+=\"0\";\n        for(int j=1;j<c;j++){\n            res+=String.valueOf(nmm[j]);\n        }\n\n        if(res.equals(str2))\n            System.out.println(\"OK\");\n        else\n            System.out.println(\"WRONG_ANSWER\");\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nm = input()\ns = []\nfor j in n:\n    s.append(j)\n\ns.sort()\n\nif len(n) > 1:\n    if s[0] == '0':\n        for i in range(len(n)):\n            if s[i] != '0':\n                s[0] = s[i]\n                s[i] = '0'\n                break\n\nans = \"\"\n\nfor j in s:\n    ans+=j\n\nif ans == m:\n    print(\"OK\")\nelse:\n    print(\"WRONG_ANSWER\")\n"
        }
    ]
}