{
    "name": "1157_C2. Increasing Subsequence (hard version)",
    "source": "CODEFORCES",
    "description": "The only difference between problems C1 and C2 is that all values in input of problem C1 are distinct (this condition may be false for problem C2).\n\nYou are given a sequence a consisting of n integers.\n\nYou are making a sequence of moves. During each move you must take either the leftmost element of the sequence or the rightmost element of the sequence, write it down and remove it from the sequence. Your task is to write down a strictly increasing sequence, and among all such sequences you should take the longest (the length of the sequence is the number of elements in it).\n\nFor example, for the sequence [1, 2, 4, 3, 2] the answer is 4 (you take 1 and the sequence becomes [2, 4, 3, 2], then you take the rightmost element 2 and the sequence becomes [2, 4, 3], then you take 3 and the sequence becomes [2, 4] and then you take 4 and the sequence becomes [2], the obtained increasing sequence is [1, 2, 3, 4]).\n\nInput\n\nThe first line of the input contains one integer n (1 \u2264 n \u2264 2 \u22c5 10^5) \u2014 the number of elements in a.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 2 \u22c5 10^5), where a_i is the i-th element of a.\n\nOutput\n\nIn the first line of the output print k \u2014 the maximum number of elements in a strictly increasing sequence you can obtain.\n\nIn the second line print a string s of length k, where the j-th character of this string s_j should be 'L' if you take the leftmost element during the j-th move and 'R' otherwise. If there are multiple answers, you can print any.\n\nExamples\n\nInput\n\n\n5\n1 2 4 3 2\n\n\nOutput\n\n\n4\nLRRR\n\n\nInput\n\n\n7\n1 3 5 6 5 4 2\n\n\nOutput\n\n\n6\nLRLRRR\n\n\nInput\n\n\n3\n2 2 2\n\n\nOutput\n\n\n1\nR\n\n\nInput\n\n\n4\n1 2 4 3\n\n\nOutput\n\n\n4\nLLRR\n\nNote\n\nThe first example is described in the problem statement.",
    "difficulty": "C",
    "tags": [
        "greedy"
    ],
    "rating": 1700,
    "public_test": [
        {
            "input": "7\n1 3 5 6 5 4 2\n",
            "output": "6\nLRLRRR"
        },
        {
            "input": "5\n1 2 4 3 2\n",
            "output": "4\nLRRR"
        },
        {
            "input": "4\n1 2 4 3\n",
            "output": "4\nLLRR\n"
        },
        {
            "input": "3\n2 2 2\n",
            "output": "1\nR"
        }
    ],
    "generated_test": [
        {
            "input": "20\n2 2 2 1 1 3 1 3 3 1 2 3 3 3 1 2 2 3 1 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "17\n3 3 2 3 2 1 1 2 3 2 2 3 1 3 1 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "18\n2 3 3 3 1 2 2 1 3 1 2 3 1 3 1 2 2 2\n",
            "output": "2\nLL\n"
        },
        {
            "input": "3\n5 1 1\n",
            "output": "2\nRL\n"
        },
        {
            "input": "5\n2 1 3 4 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "5\n3 0 2 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "3\n1 2 3\n",
            "output": "3\nLLR\n"
        },
        {
            "input": "8\n2 4 1 1 1 1 3 3\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "9\n2 1 1 2 2 2 2 1 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "45\n1 3 4 6 8 5 1 5 10 10 8 3 2 7 8 1 9 8 9 1 9 10 10 4 7 8 7 7 7 10 8 8 3 8 1 9 8 5 9 3 6 10 3 1 3\n",
            "output": "5\nLLLLL\n"
        },
        {
            "input": "18\n1 2 3 1 1 4 1 1 2 2 3 2 1 3 3 2 3 1\n",
            "output": "3\nLLL\n"
        },
        {
            "input": "6\n2 3 5 6 5 2\n",
            "output": "4\nLLLL\n"
        },
        {
            "input": "12\n1 1 2 1 2 2 3 3 3 1 6 3\n",
            "output": "3\nLRR\n"
        },
        {
            "input": "3\n3 2 1\n",
            "output": "3\nRRR\n"
        },
        {
            "input": "15\n37504 89177 80071 95721 135743 164345 189260 190810 191657 196168 200000 200000 190810 190018 185437\n",
            "output": "6\nLLRRRR\n"
        },
        {
            "input": "13\n2 4 1 1 1 2 3 2 2 1 3 3 1\n",
            "output": "4\nRLRL\n"
        },
        {
            "input": "8\n3 2 3 1 1 4 2 1\n",
            "output": "4\nRRLR\n"
        },
        {
            "input": "5\n4 5 5 0 1\n",
            "output": "3\nRLL\n"
        },
        {
            "input": "12\n3 3 2 3 2 3 1 2 0 2 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "8\n1 3 3 2 1 0 1 1\n",
            "output": "2\nLL\n"
        },
        {
            "input": "13\n1 1 1 1 2 6 2 3 1 3 2 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "6\n4 4 6 4 1 3\n",
            "output": "2\nRL\n"
        },
        {
            "input": "4\n4 0 3 3\n",
            "output": "2\nRL\n"
        },
        {
            "input": "10\n3 3 2 3 2 0 2 2 2 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "11\n2 3 2 1 2 3 1 3 1 0 2\n",
            "output": "2\nLL\n"
        },
        {
            "input": "19\n2 2 2 2 3 3 2 3 3 2 3 3 3 2 1 2 1 2 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "5\n5 5 5 0 3\n",
            "output": "2\nRL\n"
        },
        {
            "input": "9\n1 2 1 3 2 3 1 2 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "5\n1 6 2 2 3\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "4\n2 3 1 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "4\n2 2 3 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "11\n2 3 3 1 1 1 0 2 3 2 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "15\n1 2 1 1 4 2 2 2 3 3 3 1 1 2 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "10\n1 1 1 3 1 2 3 1 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "15\n3 2 2 2 1 2 2 1 3 3 0 1 2 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "5\n4 4 3 4 4\n",
            "output": "1\nR\n"
        },
        {
            "input": "12\n2 1 3 2 1 1 2 2 3 1 2 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "18\n3 3 1 1 2 3 2 1 1 2 1 2 2 2 2 3 2 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "15\n2 1 3 1 2 1 2 1 3 3 3 2 3 0 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "12\n1 2 2 1 3 2 4 2 2 3 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "3\n2 1 4\n",
            "output": "2\nLR\n"
        },
        {
            "input": "7\n2 1 1 1 1 1 1\n",
            "output": "2\nRL\n"
        },
        {
            "input": "4\n1 3 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n1 2 2 1 3\n",
            "output": "3\nLLR\n"
        },
        {
            "input": "14\n11 3 2 5 7 13 1 13 5 8 1 6 13 11\n",
            "output": "2\nRR\n"
        },
        {
            "input": "14\n2 1 1 1 2 2 2 0 1 2 1 2 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "14\n1 1 3 1 1 2 3 1 3 1 4 3 1 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "13\n1 1 3 2 2 1 1 3 3 1 2 2 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "19\n1 1 3 1 1 1 2 1 1 1 2 1 1 3 1 0 2 2 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "4\n8 2 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "8\n2 2 3 1 2 2 2 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n2 2 4 5 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "17\n1 3 2 3 3 2 1 3 1 3 3 2 2 0 3 2 1\n",
            "output": "3\nRRR\n"
        },
        {
            "input": "18\n1 3 3 2 1 1 2 1 2 3 2 3 2 2 3 2 1 2\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "13\n2 1 3 1 2 6 2 1 1 3 3 1 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "16\n2 1 1 1 2 3 1 1 3 2 6 1 3 3 2 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "4\n3 1 2 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "15\n2 2 1 3 1 0 1 3 2 2 3 3 2 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "5\n1 2 1 4 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n4 0 4 4 2\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n5 1 1 4 4\n",
            "output": "2\nRL\n"
        },
        {
            "input": "5\n4 4 4 5 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "4\n1 1 2 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "18\n1 3 2 2 2 3 2 3 3 1 1 3 0 2 1 2 2 2\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "14\n1 2 3 2 2 2 2 3 3 3 2 3 1 1\n",
            "output": "3\nLLL\n"
        },
        {
            "input": "12\n7 3 5 8 8 4 10 5 4 12 7 2\n",
            "output": "3\nRRR\n"
        },
        {
            "input": "5\n4 3 1 1 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "5\n5 8 2 4 4\n",
            "output": "3\nRLL\n"
        },
        {
            "input": "7\n4 1 3 1 3 1 1\n",
            "output": "2\nRL\n"
        },
        {
            "input": "13\n1 1 2 1 2 3 1 2 3 1 3 1 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "17\n2 2 2 2 3 2 1 1 1 0 3 2 3 1 1 1 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "5\n2 5 1 1 2\n",
            "output": "2\nLL\n"
        },
        {
            "input": "10\n1 2 1 5 6 0 1 2 7 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n5 5 3 6 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "15\n3 1 1 1 1 1 1 1 2 2 1 1 1 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "20\n1 1 2 3 1 1 3 0 2 3 2 1 2 2 1 1 2 2 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n5 2 4 4 2\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "4\n3 2 1 1\n",
            "output": "2\nRL\n"
        },
        {
            "input": "5\n5 3 1 1 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "6\n2 2 3 4 2 4\n",
            "output": "2\nLR\n"
        },
        {
            "input": "17\n3 1 1 2 1 2 3 1 3 1 3 2 1 2 1 1 3\n",
            "output": "1\nR\n"
        },
        {
            "input": "5\n5 1 7 1 4\n",
            "output": "2\nRL\n"
        },
        {
            "input": "12\n2 1 3 1 0 2 2 1 2 2 1 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "16\n1 3 2 3 2 1 1 3 1 1 2 3 2 2 2 2\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "20\n2 2 2 3 3 3 0 1 1 1 2 3 3 3 3 2 1 2 2 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "4\n4 4 2 5\n",
            "output": "2\nLR\n"
        },
        {
            "input": "18\n3 1 2 1 3 0 3 2 2 2 2 1 3 3 3 3 1 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "15\n2 3 1 3 2 3 2 3 1 1 2 3 3 0 1\n",
            "output": "3\nRLL\n"
        },
        {
            "input": "93\n6 6 10 10 9 4 7 10 2 3 4 10 7 2 8 8 4 2 4 4 7 7 3 2 3 1 5 3 7 2 4 9 10 8 10 5 1 6 2 1 10 3 5 6 6 9 3 10 1 10 1 6 2 3 8 7 1 5 4 10 4 3 5 8 8 1 3 8 2 3 10 7 2 4 5 2 6 4 10 4 4 8 5 1 6 3 1 9 5 4 9 4 3\n",
            "output": "4\nRRLR\n"
        },
        {
            "input": "17\n2 1 3 3 2 2 1 3 1 3 1 2 1 2 2 2 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "6\n5 4 7 5 6 5\n",
            "output": "2\nRR\n"
        },
        {
            "input": "19\n1 1 3 3 3 1 3 1 1 2 3 1 3 2 1 3 2 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "20\n2 2 4 3 2 3 3 1 3 2 2 1 3 1 3 2 3 1 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "4\n4 3 1 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "4\n4 3 3 4\n",
            "output": "1\nR\n"
        },
        {
            "input": "17\n2 3 1 3 2 3 2 3 3 3 1 3 2 3 2 2 2\n",
            "output": "2\nLL\n"
        }
    ],
    "solution": [
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C1157 {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        int[] A = new int[N];\n        for (int n=0; n<N; n++) {\n            A[n] = in.nextInt();\n        }\n        StringBuilder output = new StringBuilder();\n        int downIdx = 0;\n        int upIdx = N-1;\n        int last = 0;\n        while (downIdx <= upIdx) {\n            int down = A[downIdx];\n            int up = A[upIdx];\n            if (down > last) {\n                if (up > last) {\n                    if (down < up) {\n                        last = down;\n                        downIdx++;\n                        output.append('L');                        \n                    } else if (down > up) {\n                        last = up;\n                        upIdx--;\n                        output.append('R');                        \n                    } else if (downIdx == upIdx) {\n                        output.append('L');\n                        break;\n                    } else {\n                        int downLength = 1;\n                        while (A[downIdx+1] > A[downIdx]) {\n                            downLength++;\n                            downIdx++;\n                        }\n                        int upLength = 1;\n                        while (A[upIdx-1] > A[upIdx]) {\n                            upLength++;\n                            upIdx--;\n                        }\n                        int length;\n                        char c;\n                        if (downLength > upLength) {\n                            length = downLength;\n                            c = 'L';\n                        } else {\n                            length = upLength;\n                            c = 'R';\n                        }\n                        for (int i=0; i<length; i++) {\n                            output.append(c);\n                        }\n                        break;\n                    }\n                } else {\n                    last = down;\n                    downIdx++;\n                    output.append('L');\n                }\n            } else {\n                if (up > last) {\n                    last = up;\n                    upIdx--;\n                    output.append('R');\n                } else {\n                    break; // both smaller\n                }\n            }\n        }\n        System.out.println(output.length());\n        System.out.println(output);\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int i, c = 0, n, T, cs = 0, k, x, j;\n  T = 1;\n  string s = \"\";\n  while (T--) {\n    cin >> n;\n    long long int a[n];\n    for (i = 0; i < n; i++) cin >> a[i];\n    i = n - 1;\n    j = 0;\n    c = 0;\n    while (i >= j) {\n      if (a[i] == a[j] && i != j) {\n        k = j, cs = c;\n        string p = \"\", q = \"\";\n        while (j < i && a[j] > c) p += 'L', c = a[j], j++;\n        c = cs;\n        while (i > k && a[i] > c) q += 'R', c = a[i], i--;\n        if (p.size() > q.size())\n          s += p;\n        else\n          s += q;\n        break;\n      } else if (a[i] > a[j] && a[j] > c)\n        s += 'L', c = a[j], j++;\n      else if (a[i] > c)\n        s += 'R', c = a[i], i--;\n      else if (a[j] > c)\n        s += 'L', c = a[j], j++;\n      else\n        break;\n    }\n    cout << s.size() << \"\\n\" << s;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package CF_555;\n\nimport java.util.Scanner;\n\npublic class C2 {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = scan.nextInt();\n\t\t}\n\t\tint res = 0;\n\t\tStringBuilder path = new StringBuilder();\n\t\tint last = -1;\n\t\tfor (int i = 0, j = n - 1; i <= j;) {\n\t\t\tif (i == j) {\n\t\t\t\tif (last == -1 || last < a[i]) {\n\t\t\t\t\tlast = a[i];\n\t\t\t\t\tpath.append('L');\n\t\t\t\t\tres++;\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (a[i] < a[j]) {\n\t\t\t\tif (last == -1 || last < a[i]) {\n\t\t\t\t\tlast = a[i];\n\t\t\t\t\tpath.append('L');\n\t\t\t\t\tres++;\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\tif (last < a[j]) {\n\t\t\t\t\t\tlast = a[j];\n\t\t\t\t\t\tpath.append('R');\n\t\t\t\t\t\tres++;\n\t\t\t\t\t\tj--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (a[j] < a[i]) {\n\t\t\t\tif (last == -1 || last < a[j]) {\n\t\t\t\t\tlast = a[j];\n\t\t\t\t\tpath.append('R');\n\t\t\t\t\tres++;\n\t\t\t\t\tj--;\n\t\t\t\t} else {\n\t\t\t\t\tif (last < a[i]) {\n\t\t\t\t\t\tlast = a[i];\n\t\t\t\t\t\tpath.append('L');\n\t\t\t\t\t\tres++;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// go to left\n\t\t\t\tStringBuilder leftPath = new StringBuilder();\n\t\t\t\tint leftLast = last;\n\t\t\t\tint l = i;\n\t\t\t\tint r = j;\n\t\t\t\twhile (l <= r) {\n\t\t\t\t\tif (leftLast == -1 || leftLast < a[l]) {\n\t\t\t\t\t\tleftLast = a[l];\n\t\t\t\t\t\tleftPath.append('L');\n\t\t\t\t\t\tl++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// go to right\n\t\t\t\tStringBuilder rightPath = new StringBuilder();\n\t\t\t\tint rightLast = last;\n\t\t\t\tl = i;\n\t\t\t\tr = j;\n\t\t\t\twhile (l <= r) {\n\t\t\t\t\tif (rightLast == -1 || rightLast < a[r]) {\n\t\t\t\t\t\trightLast = a[r];\n\t\t\t\t\t\trightPath.append('R');\n\t\t\t\t\t\tr--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (leftPath.length() >= rightPath.length()) {\n\t\t\t\t\tpath.append(leftPath);\n\t\t\t\t\tres += leftPath.length();\n\t\t\t\t} else {\n\t\t\t\t\tpath.append(rightPath);\n\t\t\t\t\tres += rightPath.length();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(res + \"\\n\" + path);\n\t\tscan.close();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "\nimport sys\nsys.setrecursionlimit(10**7)\n\nN = int(input())\n\nnumber = list(map(int, input().split()))\n\nseq = []\nans = []\n\nl = 0\nr = N-1\n\ndef correct(ans, l, r, action):\n    for i in range(len(ans)-1, -1, -1):\n        if not ans[i] == 'X':\n            break\n        ans[i] = action\n        if action == 'L':\n            r += 1\n        else:\n            l -= 1\n    return l, r\n\ndef run(number, l, r, seq):\n    ans = []\n    while l <= r:\n        n1 = number[l]\n        n2 = number[r]\n\n        if n1 == n2:\n            if seq and n1 <= seq[-1]:\n                break\n\n            steps = 0\n            last = -1\n            if seq:\n                last = seq[-1]\n            while l+steps <= r-steps and number[l+steps] == number[r-steps] and number[l+steps] > last:\n                seq.append(number[l+steps])\n                ans.append('X')\n                last = number[l+steps]\n                steps += 1\n\n            s1 = run(number, l+steps, r, [seq[-1]])\n            s2 = run(number, l, r-steps, [seq[-1]])\n            if len(s1) > len(s2):\n                return ''.join(ans).replace('X', 'L') + s1\n            else:\n                return ''.join(ans).replace('X', 'R') + s2\n        elif not seq:\n            if n1 < n2:\n                seq.append(n1)\n                ans.append('L')\n                l += 1\n            else:\n                seq.append(n2)\n                ans.append('R')\n                r -= 1\n        else:\n            last = seq[-1]\n            if last < n1 < n2 or n2 <= last < n1:\n                l, r = correct(ans, l, r, 'L')\n                seq.append(n1)\n                ans.append('L')\n                l += 1\n            elif last < n2 < n1 or n1 <= last < n2:\n                l, r = correct(ans, l, r, 'R')\n                seq.append(n2)\n                ans.append('R')\n                r -= 1\n            else:\n                break\n    return ''.join(ans)\n\n# correct(ans, 0, 0, 'R')\n\nans = run(number, 0, N-1, [])\nprint(len(ans))\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nlb = 0\nrb = n - 1\nlast = -1\nans = []\ndef prev(i):\n\tif i > 0:\n\t\treturn arr[i - 1]\n\telse:\n\t\treturn arr[0] - 1\ndef next(i):\n\tif i < n - 1:\n\t\treturn arr[i + 1]\n\telse:\n\t\treturn arr[n - 1] - 1\nwhile lb <= rb :\n    if arr[lb] < arr[rb]:\n        last = arr[lb]\n        ans.append('L')\n        lb += 1\n        if prev(lb) >= arr[lb]:\n            while lb < rb and arr[rb] > next(rb):\n                last = arr[rb]\n                ans.append('R')\n                rb -= 1\n            break\n            # last < arr[lb] !\n    elif arr[rb] < arr[lb]:\n        last = arr[rb]\n        ans.append('R')\n        rb -= 1\n        if next(rb) >= arr[rb]:\n            while lb < rb and arr[lb] > prev(lb):\n                last = arr[lb]\n                ans.append('L')\n                lb += 1\n            break\n            # last < arr[rb] !\n    else:\n        break\n        # if arr[lb] = arr[rb]\n# lb = rb OR arr[lb] = arr[rb] !\nif arr[lb] > last:\n    if lb == rb:\n        ans.append('R')\n    if arr[lb] == arr[rb] and rb > lb:\n        szleft = 0\n        while arr[lb + szleft] < arr[lb + szleft + 1]:\n            szleft += 1\n        szright = 0\n        while arr[rb - szright] < arr[rb - szright - 1]:\n            szright += 1\n        if szleft > szright:\n            ans.extend(['L'] * (szleft + 1))\n        else:\n            ans.extend(['R'] * (szright + 1))\nprint(len(ans))\nprint(''.join(ans))\n"
        },
        {
            "language": 1,
            "solution": "import decimal,math\nfrom collections import Counter,defaultdict\nfrom fractions import gcd\ndecimal.getcontext().prec = 100\ndef divisors(n) : \n\tabc=[]\n\ti = 1\n\twhile i <= math.sqrt(n): \n\t\t  \n\t\tif (n % i == 0) : \n\t\t\t  \n\t\t\tif (n / i == i) : \n\t\t\t\tabc.append(i) \n\t\t\telse : \n\t\t\t\tabc.append(i)\n\t\t\t\tabc.append(n/i)\n\t\ti = i + 1\n\tabc.sort()\t\n\treturn abc[1:-1]\n\nn = int(raw_input())\na=map(int,raw_input().split())\n\nl = 0\nr = len(a) - 1\nlast = 0\nans = []\nwhile l <= r:\n\tif a[l] > last and (a[r] <= last or a[r] > a[l]):\n\t\tlast = a[l]\n\t\tans.append('L')\n\t\tl += 1\n\telif a[r] > last:\n\t\tlast = a[r]\n\t\tans.append('R')\n\t\tr -= 1\n\telse:\n\t\tbreak\ntemp=ans\t\t\nl = 0\nr = len(a) - 1\nlast = 0\nans = []\nwhile l <= r:\n\tif a[l] > last and (a[r] <= last or a[r] >= a[l]):\n\t\tlast = a[l]\n\t\tans.append('L')\n\t\tl += 1\n\telif a[r] > last:\n\t\tlast = a[r]\n\t\tans.append('R')\n\t\tr -= 1\n\telse:\n\t\tbreak\n\nif len(ans) < len(temp):\n\tans = temp\nprint len(ans)\nprint ''.join(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mx = 2e5 + 10;\nint n;\nint a[mx];\nchar ans[mx];\nchar res[2][mx];\nint num;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  int l = 1, r = n;\n  int minn = -1;\n  while (l <= r) {\n    if (a[l] < a[r]) {\n      if (a[l] > minn) {\n        minn = a[l];\n        ans[++num] = 'L';\n        ++l;\n      } else if (a[r] > minn) {\n        minn = a[r];\n        ans[++num] = 'R';\n        --r;\n      } else {\n        printf(\"%d\\n\", num);\n        for (int i = 1; i <= num; ++i) {\n          printf(\"%c\", ans[i]);\n        }\n        return 0;\n      }\n    } else if (a[l] > a[r]) {\n      if (a[r] > minn) {\n        minn = a[r];\n        ans[++num] = 'R';\n        --r;\n      } else if (a[l] > minn) {\n        minn = a[l];\n        ans[++num] = 'L';\n        ++l;\n      } else {\n        printf(\"%d\\n\", num);\n        for (int i = 1; i <= num; ++i) {\n          printf(\"%c\", ans[i]);\n        }\n        return 0;\n      }\n    } else {\n      break;\n    }\n  }\n  if (l == r) {\n    if (a[r] > minn) ans[++num] = 'L';\n    printf(\"%d\\n\", num);\n    for (int i = 1; i <= num; ++i) {\n      printf(\"%c\", ans[i]);\n    }\n  } else {\n    int tp[2], fg = 0;\n    tp[0] = tp[1] = 0;\n    if (a[r] > minn) {\n      res[0][++tp[0]] = 'L';\n      res[1][++tp[1]] = 'R';\n      for (int i = l + 1; i < r; ++i) {\n        if (a[i] > a[i - 1])\n          res[0][++tp[0]] = 'L';\n        else\n          break;\n      }\n      for (int i = r - 1; i > l; --i) {\n        if (a[i] > a[i + 1])\n          res[1][++tp[1]] = 'R';\n        else\n          break;\n      }\n      if (tp[0] > tp[1])\n        fg = 0;\n      else\n        fg = 1;\n    }\n    printf(\"%d\\n\", num + tp[fg]);\n    for (int i = 1; i <= num; ++i) {\n      printf(\"%c\", ans[i]);\n    }\n    for (int i = 1; i <= tp[fg]; ++i) {\n      printf(\"%c\", res[fg][i]);\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ndouble pi = 2 * acos(0.0);\nconst long long int INF = 1e18 + 7;\nlong long gcd(long long int a, long long int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long lcm(long long int a, long long int b) { return (a / gcd(a, b)) * b; }\nlong long int power(long long int x, long long int y, long long int INF) {\n  long long int res = 1;\n  x = x % INF;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % INF;\n    y = y >> 1;\n    x = (x * x) % INF;\n  }\n  return res % INF;\n}\nvoid WetPitch() {\n  long long int n;\n  cin >> n;\n  vector<long long int> v(n);\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n  }\n  long long int right[n];\n  long long int left[n];\n  right[0] = 0;\n  for (int i = 1; i < n; i++) {\n    if (v[i] > v[i - 1]) {\n      right[i] = right[i - 1] + 1;\n    } else {\n      right[i] = 0;\n    }\n  }\n  left[n - 1] = 1;\n  for (int i = n - 2; i >= 0; i--) {\n    if (v[i] < v[i + 1]) {\n      left[i] = left[i + 1] + 1;\n    } else {\n      left[i] = 0;\n    }\n  }\n  long long int i = 0;\n  long long int j = n - 1;\n  string ans = \"\";\n  long long int cnt = 0;\n  long long int prev = -1;\n  while (i <= j) {\n    if (v[i] > prev && v[j] > prev) {\n      if (v[i] > v[j]) {\n        prev = v[j];\n        cnt++;\n        ans += 'R';\n        j--;\n      } else if (v[i] < v[j]) {\n        prev = v[i];\n        cnt++;\n        ans += 'L';\n        i++;\n      } else {\n        long long int x = 1, y = 1;\n        for (int k = i; k < j; k++) {\n          if (v[k] < v[k + 1]) {\n            x++;\n          } else {\n            break;\n          }\n        }\n        for (int k = j; k > i; k--) {\n          if (v[k] < v[k - 1]) {\n            y++;\n          } else {\n            break;\n          }\n        }\n        if (x > y) {\n          for (int k = 1; k <= x; k++) {\n            ans += 'L';\n            cnt++;\n          }\n          break;\n        } else {\n          for (int k = 1; k <= y; k++) {\n            ans += 'R';\n            cnt++;\n          }\n          break;\n        }\n      }\n    } else if (v[i] > prev) {\n      prev = v[i];\n      cnt++;\n      ans += 'L';\n      i++;\n    } else if (v[j] > prev) {\n      prev = v[j];\n      cnt++;\n      ans += 'R';\n      j--;\n    } else {\n      break;\n    }\n  }\n  cout << cnt << '\\n';\n  cout << ans << '\\n';\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int tst;\n  tst = 1;\n  while (tst--) {\n    WetPitch();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nsequencia = [int(i) for i in input().split()]\nres = []\nlastValue = 0\nl = 0\nr = len(sequencia)-1\n\ndecide = 0\nwhile(l<=r):\n\n    if(sequencia[l] < sequencia[r] or decide == 1):\n        \n        if(lastValue<sequencia[l]):\n            res.append(\"L\")\n            lastValue = sequencia[l]\n            l+=1\n        elif(lastValue<sequencia[r]):\n            res.append(\"R\")\n            lastValue = sequencia[r]\n            r-=1\n        else:\n            break\n        \n    elif(sequencia[r] < sequencia[l] or decide == 2):\n        if(lastValue<sequencia[r]):\n            res.append(\"R\")\n            lastValue = sequencia[r]\n            r-=1\n        elif(lastValue<sequencia[l]):\n            res.append(\"L\")\n            lastValue = sequencia[l]\n            l+=1\n        else:\n            break\n    else:\n        qtdL = 0\n        indL = l\n        nValue = lastValue\n        while indL<len(sequencia) and nValue<sequencia[indL]:\n            nValue = sequencia[indL]\n            indL+=1\n            qtdL+=1\n\n        qtdR = 0\n        indR = r\n        nValue = lastValue\n        while indR>=0 and nValue<sequencia[indR]:\n            nValue = sequencia[indR]\n            indR-=1\n            qtdR+=1\n\n        if(qtdL>qtdR):\n            decide = 1\n        else:\n            decide = 2\n\nprint(len(res))\nprint(\"\".join(res))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nuk1 = 0\nuk2 = n - 1\nans = []\nban1 = 0\nban2 = 0\nwhile uk2 - uk1 >= 1:\n    if l[uk2] > l[uk1]:\n        if len(ans) == 0:\n            ans.append([l[uk1], 'L'])\n            uk1 += 1\n        else:\n            if l[uk1] <= ans[-1][0]:\n                ban1 = 1\n                break\n            else:\n                ans.append([l[uk1], 'L'])\n                uk1 += 1\n    elif l[uk2] < l[uk1]:\n        if len(ans) == 0:\n            ans.append([l[uk2], 'R'])\n            uk2 -= 1\n        else:\n            if l[uk2] <= ans[-1][0]:\n                ban2 = 1\n                break\n            else:\n                ans.append([l[uk2], 'R'])\n                uk2 -= 1\n    elif l[uk2] == l[uk1]:\n        break\ncnt1 = 0\ncnt2 = 0\nif uk2 - uk1 == 0:\n    if len(ans) == 0 or l[uk1] > ans[-1][0]:\n        ans.append([l[uk1], 'L'])\n\nif not ban1 and (len(ans) == 0 or l[uk1] > ans[-1][0]):\n    cnt1 = 1\n    for i in range(uk1 + 1, uk2):\n        if l[i] > l[i - 1]:\n            cnt1 += 1\n        else:\n            break\nif not ban2 and (len(ans) == 0  or l[uk2] > ans[-1][0]):\n    cnt2 = 1\n    for i in range(uk2 - 1, uk1, -1):\n        if l[i] > l[i + 1]:\n            cnt2 += 1\n        else:\n            break\n\nif cnt1 >= cnt2:\n    for i in range(uk1, uk1 + cnt1):\n        ans.append([l[i], 'L'])\nelse:\n    for i in range(uk2, uk2 - cnt2, -1):\n        ans.append([l[i], 'R'])\nprint(len(ans))\nfor i in range(len(ans)):\n    print(ans[i][1], end='')"
        },
        {
            "language": 1,
            "solution": "#####################################   \nimport atexit, io, sys, collections, math, heapq, fractions, bisect,copy\nbuffer = io.BytesIO() \nsys.stdout = buffer\n@atexit.register \ndef write(): sys.__stdout__.write(buffer.getvalue())   \n#####################################\n\n\nn = int(raw_input())\nq = collections.deque(map(int, raw_input().split())) \n\ndef g(ans, values, q):\n\tt = [values[-1]] if len(values) else []\n\tfor i in range(len(q)):\n\t\tif len(t) == 0 or q[i] > t[-1]:\n\t\t\tt.append(q[i])\n\t\telse:\n\t\t\tbreak\n\ta = len(t)\n\tt = [values[-1]] if len(values) else []\n\tfor i in range(len(q))[::-1]:\n\t\tif len(t) == 0 or q[i] > t[-1]:\n\t\t\tt.append(q[i])\n\t\telse:\n\t\t\tbreak\n\tb = len(t)\n\n\tif a >= b:\n\t\tif len(values) == 0:\n\t\t\tvalues.append(q.popleft())\n\t\t\tans.append('L')\n\t\twhile(q and q[0] > values[-1]):\n\t\t\tvalues.append(q.popleft())\n\t\t\tans.append('L')\n\telse:\n\n\t\tif len(values) == 0:\n\t\t\tvalues.append(q.pop())\n\t\t\tans.append('R')\n\t\twhile(q and q[-1] > values[-1]):\n\t\t\tvalues.append(q.pop())\n\t\t\tans.append('R') \n\ndef f(q,n):\n\tif n == 1:\n\t\tprint '1'\n\t\tprint 'L'\n\t\treturn \n\n\tvalues = []\n\tans = []\n\tif q[0] < q[-1]:\n\t\t\n\t\tans.append('L')\n\t\tvalues.append(q.popleft())\n\telif q[0] > q[-1]:\n\t\tans.append('R')\n\t\tvalues.append(q.pop())\n\telse:\n\t\tg(ans, values, q)\n\n\twhile(len(q) > 1):\n\n\t\tif values[-1] < min(q[0],q[-1]):\n\t\t\tif q[0] < q[-1]:\n\t\t\t\tans.append('L')\n\t\t\t\tvalues.append(q.popleft())\n\t\t\telif q[0] > q[-1]:\n\t\t\t\tans.append('R')\n\t\t\t\tvalues.append(q.pop())\n\t\t\telif q[0] == q[-1]:\n\t\t\t\tg(ans, values, q)\n\t\t\t\t\n\t\t\t\t\n\t\telif values[-1] < max(q[0],q[-1]):\n\t\t\tif q[0] >= q[-1]:\n\t\t\t\tans.append('L')\n\t\t\t\tvalues.append(q.popleft())\n\t\t\telif q[0] < q[-1]:\n\t\t\t\tans.append('R')\n\t\t\t\tvalues.append(q.pop())\n\t\t\telif q[0] == q[-1]:\n\t\t\t\tg(ans, values, q)\n\t\telse:\n\t\t\tbreak\n\tif q and q[0] > values[-1]:\n\t\tans.append('L')\n\t\tvalues.append(q.popleft())\n\tif q and q[-1] > values[-1]:\n\t\tans.append('R')\n\t\tvalues.append(q.pop())\n\tprint len(ans)\n\tprint  ''.join(ans)\nf(q,n)\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.*;\nimport java.io.*;\nimport java.util.*;\n\npublic class Abc {\n\n    public static void main(String[] args) throws Exception {\n        FastReader sc = new FastReader();\n        int n = sc.nextInt();\n        int a[] = new int[n];\n        for (int i = 0; i < n; i++) a[i] = sc.nextInt();\n        int l = 0, r = n - 1;\n        StringBuilder sb = new StringBuilder();\n        while (true) {\n            if (a[l] == a[r]) {\n                if (sb.length() != 0) {\n                    int i = sb.length() - 1;\n                    if (sb.charAt(i) == 'L') i = l - 1;\n                    else i = r + 1;\n                    if (a[l] <= a[i]) {\n                        break;\n                    }\n                }\n                StringBuilder sbl = new StringBuilder();\n                StringBuilder sbr = new StringBuilder();\n                int x = l;\n                sbl.append('L');\n                x++;\n                while (x < r) {\n                    if (a[x] <= a[x - 1]) break;\n                    sbl.append('L');\n                    x++;\n                }\n                x = r;\n                sbr.append('R');\n                x--;\n                while (x > l) {\n                    if (a[x] <= a[x + 1]) break;\n                    sbr.append('R');\n                    x--;\n                }\n                if (sbl.length() > sbr.length()) {\n                    sb.append(sbl);\n                } else sb.append(sbr);\n                break;\n\n\n            } else {\n                if (sb.length()==0){\n                    if (a[l] < a[r]) {\n                        sb.append('L');\n                        l++;\n                    } else {\n                        sb.append('R');\n                        r--;\n                    }\n                }else {\n                    int i = sb.length() - 1;\n                    if (sb.charAt(i) == 'R') i = r + 1;\n                    else i = l - 1;\n                    if (a[l]>a[i] && a[r]>a[i]){\n                        if (a[l] < a[r]) {\n                            sb.append('L');\n                            l++;\n                        } else {\n                            sb.append('R');\n                            r--;\n                        }\n                    }else if (a[l]>a[i]){\n                        sb.append('L');\n                        l++;\n                    }else if (a[r]>a[i]){\n                        sb.append('R');\n                        r--;\n                    }else break;\n                }\n            }\n        }\n        System.out.println(sb.length());\n        System.out.println(sb);\n\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n//        br = new BufferedReader(new FileReader(new File(\"input.txt\")));\n//        out = new PrintWriter(new File(\"output.txt\"));\n        int nasral = 1;\n        for (int JOPA = 0; JOPA < nasral; JOPA++) {\n            int n = nextInt();\n            int[] a = new int[n];\n            int min = 0;\n            int ind_l = 0;\n            int ind_r = n - 1;\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            ArrayList<Character> ans = new ArrayList<>();\n            while (ind_l <= ind_r) {\n                if (a[ind_l] == a[ind_r]) {\n                    int cntl = 0;\n                    int cntr = 0;\n                    int minr = min;\n                    int indrr = ind_r;\n                    while (indrr >= ind_l) {\n                        if (a[indrr] > minr) {\n                            minr = a[indrr];\n                            indrr--;\n                            cntr++;\n                        } else break;\n                    }\n                    int minl = min;\n                    int indll = ind_l;\n                    while (indll <= ind_r) {\n                        if (a[indll] > minl) {\n                            minl = a[indll];\n                            indll++;\n                            cntl++;\n                        }else break;\n                    }\n                    if(cntl >= cntr){\n                        for (int i = 0; i < cntl; i++) {\n                            ans.add('L');\n                        }\n                    }else {\n                        for (int i = 0; i < cntr; i++) {\n                            ans.add('R');\n                        }\n                    }\n                    break;\n                } else if (a[ind_l] < a[ind_r]) {\n                    if (a[ind_l] > min) {\n                        min = a[ind_l];\n                        ind_l++;\n                        ans.add('L');\n                    } else if (a[ind_r] > min) {\n                        min = a[ind_r];\n                        ind_r--;\n                        ans.add('R');\n                    } else break;\n                } else {\n                    if (a[ind_r] > min) {\n                        min = a[ind_r];\n                        ind_r--;\n                        ans.add('R');\n                    } else if (a[ind_l] > min) {\n                        min = a[ind_l];\n                        ind_l++;\n                        ans.add('L');\n                    } else break;\n                }\n            }\n            out.println(ans.size());\n            for (Character jopa : ans) out.print(jopa);\n        }\n        out.close();\n\n    }\n\n\n    public static StringTokenizer in = new StringTokenizer(\"\");\n    public static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    public static PrintWriter out = new PrintWriter(System.out);\n\n    public static String next() throws IOException {\n        while (!in.hasMoreTokens()) {\n            in = new StringTokenizer(br.readLine());\n        }\n        return in.nextToken();\n    }\n\n    public static Integer nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    public static Long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> v;\n  vector<int>::iterator it;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  vector<int> seq;\n  seq.push_back(-1);\n  string ans;\n  while (1) {\n    if (v.back() <= seq.back() && v[0] <= seq.back()) break;\n    if (v.empty()) break;\n    if (v.size() == 1 && v[0] > seq.back()) {\n      ans += 'R';\n      break;\n    }\n    if (v.back() < v[0] && seq.back() < v.back()) {\n      seq.push_back(v.back());\n      ans += 'R';\n      it = v.end();\n      it--;\n      v.erase(it);\n    } else if (v[0] < v.back() && seq.back() < v[0]) {\n      seq.push_back(v[0]);\n      ans += 'L';\n      v.erase(v.begin());\n    } else if (v[0] == v.back()) {\n      int cnt_lft = 0, cnt_rit = 0;\n      for (int i = 1; v[i] > v[i - 1]; i++) cnt_lft++;\n      for (int i = v.size() - 2; v[i] > v[i + 1]; i--) cnt_rit++;\n      if (cnt_lft > cnt_rit) {\n        ans += 'L';\n        for (int i = 1; v[i] > v[i - 1]; i++) ans += 'L';\n        break;\n      } else {\n        ans += 'R';\n        for (int i = v.size() - 2; v[i] > v[i + 1]; i--) ans += 'R';\n        break;\n      }\n    } else if (v[0] > seq.back()) {\n      seq.push_back(v[0]);\n      ans += 'L';\n      v.erase(v.begin());\n    } else if (v.back() > seq.back()) {\n      seq.push_back(v.back());\n      ans += 'R';\n      it = v.end();\n      it--;\n      v.erase(it);\n    }\n    if (v.back() <= seq.back() && v[0] <= seq.back()) break;\n    if (v.empty()) break;\n    if (v.size() == 1 && v[0] > seq.back()) {\n      ans += 'R';\n      break;\n    }\n  }\n  cout << ans.size() << endl << ans << endl;\n}\n"
        },
        {
            "language": 1,
            "solution": "def solve(ns, pre=-1):\n    res = []\n    l, r = 0, len(ns) - 1\n    while l <= r:\n        if min(ns[l], ns[r]) > pre:\n            if ns[l] < ns[r]:\n                pre = ns[l]\n                res.append('L')\n                l += 1\n            elif ns[l] > ns[r]:\n                pre = ns[r]\n                res.append('R')\n                r -= 1\n            else:\n                t1 = ['L'] + solve(ns[l + 1: r + 1], ns[l])\n                t2 = ['R'] + solve(ns[l: r], ns[r])\n                if len(t1) > len(t2):\n                    res += t1\n                    break\n                else:\n                    res += t2\n                    break\n        elif ns[l] > pre:\n            pre = ns[l]\n            res.append('L')\n            l += 1\n        elif ns[r] > pre:\n            pre = ns[r]\n            res.append('R')\n            r -= 1\n        else:\n            break\n    return res\n\n\nn = int(raw_input())\nns = map(int, raw_input().split())\n\nres = solve(ns)\nprint len(res)\nprint ''.join(res)\n"
        },
        {
            "language": 1,
            "solution": "\nimport sys,os,math\nfrom collections import Counter, defaultdict\n\n\n\n# n, k = map(int, raw_input().split())\n# da = map(int, raw_input().split())\n# db = map(int, raw_input().split())\n\nn = map(int, raw_input().split())[0]\na = map(int, raw_input().split())\ni, j = 0, len(a)-1\nans = []\nans2 = []\nlast = -1\nst = 0\nwhile i<=j:\n    if st != 0 and a[i]!=a[j]:\n        al, ar = 0, 0\n        tmp = last\n        if a[i]>last:\n            while a[i]>last:\n                last = a[i]\n                i += 1\n                al += 1\n        last = tmp\n        if a[j]>last:\n            while a[j]>last:\n                last = a[j]\n                j -= 1\n                ar += 1\n        if al > ar:\n            ans.append('L'*(al+st))\n        else:\n            ans.append('R'*(ar+st))\n        st = 0\n        break\n    if a[i] < a[j]:\n        if a[i] > last:\n            last = a[i]\n            ans.append('L')\n            i += 1\n        elif a[j] > last:\n            last = a[j]\n            ans.append('R')\n            j -= 1\n        else:\n            break\n    elif a[i] > a[j]:\n        if a[j] > last:\n            last = a[j]\n            ans.append('R')\n            j -= 1\n        elif a[i] > last:\n            last = a[i]\n            ans.append('L')\n            i += 1\n        else:\n            break\n    else:\n        if a[i] > last:\n            last = a[i]\n            i += 1\n            j -= 1\n            st += 1\n        else:\n            break\nif st !=0:\n    ans.append('R'*st)\nre = ''.join(ans)\nprint len(re)\nprint re\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nOh, Grantors of Dark Disgrace, \nDo Not Wake Me Again.\n\"\"\"\n\nii = lambda: int(input())\nmi = lambda: map(int, input().split())\nli = lambda: list(mi())\nsi = lambda: input()\n\nn = ii()\nl = li()\n\nk = []\n\n\nd = ''\ni = 0\nj = n-1\nz = 0\no1 = o2 = True\n\nwhile i <= j:\n\n    if l[i] == z and l[j] == z:\n        break\n\n    if i == j and l[i] > z:\n        d += 'L'\n        z = l[i]\n        i += 1\n        o1 = o2 = False\n\n    if o1 and o2:\n\n        if l[i] > z and l[i] < l[j]:\n            d += 'L'\n            z = l[i]\n            i += 1\n        \n        elif l[i] > z and l[i] == l[j]:\n            d += 'L'\n            z = l[i]\n            i += 1\n            o2 = False\n        \n        elif l[i] <= z:\n            o1 = False\n        \n        elif l[j] > z and l[j] < l[i]:\n            d += 'R'\n            z = l[j]\n            j -= 1\n\n        elif l[j] <= z:\n            o2 = False\n    \n    elif o2:\n\n        if l[j] > z:\n            d += 'R'\n            z = l[j]\n            j -= 1\n        \n        elif l[j] <= z:\n            o2 = False\n\n    elif o1:\n\n        if l[i] > z:\n            d += 'L'\n            z = l[i]\n            i += 1\n\n        elif l[i] <= z:\n            o1 = False\n    \n    else:\n        break\n    \n\n    # print(1, i, j, d, z, o1, o2)\nk.append(d)\n\nd = ''\ni = 0\nj = n-1\nz = 0\no1 = o2 = True\n\nwhile i <= j:\n\n    if l[i] == z and l[j] == z:\n        break\n\n    if i == j and l[i] > z:\n        d += 'L'\n        z = l[i]\n        i += 1\n        o1 = o2 = False\n\n    if o1 and o2:\n\n        if l[i] > z and l[i] < l[j]:\n            d += 'L'\n            z = l[i]\n            i += 1\n\n        elif l[i] <= z:\n            o1 = False\n        \n        elif l[j] > z and l[j] < l[i]:\n            d += 'R'\n            z = l[j]\n            j -= 1\n        \n        elif l[j] > z and l[i] == l[j]:\n            d += 'R'\n            z = l[j]\n            j -= 1\n            o1 = False\n\n        elif l[j] <= z:\n            o2 = False\n    \n    elif o2:\n        if l[j] > z:\n            d += 'R'\n            z = l[j]\n            j -= 1\n        \n        elif l[j] <= z:\n            o2 = False\n\n    elif o1:\n\n        if l[i] > z:\n            d += 'L'\n            z = l[i]\n            i += 1\n\n        elif l[i] <= z:\n            o1 = False\n    \n    else:\n        break\n    \n    # print(2, i, j, d, z, o1, o2)\nk.append(d)\n\n# print(k)\nh = max(k, key=len)\nprint(len(h))\nprint(h)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nmoves = ''\nlast = 0\nleft = 0\nright = n - 1\nwhile left <= right and max(a[left], a[right]) > last:\n    if a[left] == a[right] and left != right:\n        l = left + 1\n        r = right -1\n        while a[l] > a[l -1]:\n            l += 1\n        while a[r] > a[r + 1]:\n            r -= 1\n        if l - left >  right - r:\n            last = a[left]\n            moves += 'L'\n            left += 1\n        else:\n            last = a[right]\n            moves += 'R'\n            right -= 1\n    elif a[left] > a[right]:\n        if a[right] > last:\n            last = a[right]\n            moves += 'R'\n            right -= 1\n        else:\n            last = a[left]\n            moves += 'L'\n            left += 1\n    elif a[right] > a[left]:\n        if a[left] > last:\n            last = a[left]\n            moves += 'L'\n            left += 1\n        else:\n            last = a[right]\n            moves += 'R'\n            right -= 1\n    elif a[left] == a[right] and left == right:\n        last = a[right]\n        moves += 'R'\n        right -= 1\n    else:\n        break\n\n\n\n\nprint(len(moves))\nprint(moves)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  for (auto &a : v) cin >> a;\n  int p1 = 0, p2 = n - 1;\n  string ans;\n  int cur = -1;\n  while (true) {\n    if (p2 < p1) break;\n    int l = v[p1], r = v[p2];\n    int mn = min(l, r);\n    int mx = max(l, r);\n    if (l <= cur && r <= cur) {\n      break;\n    } else if (mn <= cur && mx > cur) {\n      if (l == mx) {\n        ans += \"L\";\n        p1++;\n        cur = l;\n      } else {\n        ans += \"R\";\n        p2--;\n        cur = r;\n      }\n    } else {\n      if (l != r) {\n        if (l == mn) {\n          ans += \"L\";\n          p1++;\n          cur = l;\n        } else {\n          ans += \"R\";\n          p2--;\n          cur = r;\n        }\n      } else {\n        int lc = 0;\n        for (int i = p1 + 1; i < p2; i++) {\n          if (v[i] > v[i - 1]) {\n            lc++;\n          } else {\n            break;\n          }\n        }\n        int rc = 0;\n        for (int i = p2 - 1; i > p1; i--) {\n          if (v[i] > v[i + 1]) {\n            rc++;\n          } else {\n            break;\n          }\n        }\n        if (lc > rc) {\n          for (int i = 0; i < lc + 1; i++) ans += \"L\";\n          goto l1;\n        } else {\n          for (int i = 0; i < rc + 1; i++) ans += \"R\";\n          goto l1;\n        }\n      }\n    }\n  }\nl1:;\n  cout << ans.size() << endl;\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class incseq_hard {\n\n\tpublic static void main(String[] args) {\n\t\tScanner input=new Scanner(System.in);\n\t\tint n=input.nextInt();\n\t\tint[] a=new int[n];\n\t\tfor(int i=0;i<n;i++) a[i]=input.nextInt();\n\t\t\n\t\tStringBuilder left=new StringBuilder(\"\");\n\t\tStringBuilder right=new StringBuilder(\"\");\n\t\t\n\t\tint i=0,j=n-1;\n\t\tint prev=-1;\n\t\tint prev1=-1;\n\t\twhile(i<=j) {\n\t\t\tif(a[i]<=prev&&a[j]<=prev) break;\n\t\t\t\n\t\t\tif(a[i]==a[j]) break;\n\t\t\t\n\t\t\tif(a[i]>prev&&(a[i]<a[j]||a[j]<=prev)) {\n\t\t\t\tleft.append(\"L\");\n\t\t\t\tright.append(\"L\");\n\t\t\t\tprev=a[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse if(a[j]>prev&&(a[j]<a[i]||a[i]<=prev)) {\n\t\t\t\tleft.append(\"R\");\n\t\t\t\tright.append(\"R\");\n\t\t\t\tprev=a[j];\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprev1=prev;\n\t\twhile(i<n&&a[i]>prev) {\n\t\t\tleft.append(\"L\");\n\t\t\tprev=a[i];\n\t\t\ti++;\n\t\t}\n\t\t\n\t\twhile(j>=0&&a[j]>prev1) {\n\t\t\tright.append(\"R\");\n\t\t\tprev1=a[j];\n\t\t\tj--;\n\t\t}\n\t\t\n\t\tif(left.length()>right.length()) {\n\t\t\tSystem.out.println(left.length());\n\t\t\tSystem.out.println(String.valueOf(left));\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(right.length());\n\t\t\tSystem.out.println(String.valueOf(right));\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=map(int,raw_input().split())\nb=list(reversed(a))\n\nl=-1\npi,pe=0,n\nans=\"\"\nt=0\nwhile pi!=pe:\n    li=-2\n    if a[-1]==b[-1] and a[-1]>l:\n        a1=a2=\"\"\n        l1=l2=l\n        pi1=pi\n        n1=n2=0\n        while pi1!=pe and b[-1]>l1:\n            l1=b.pop()\n            a1+=\"L\"\n            pi1+=1\n            n1+=1\n        while pi!=pe and a[-1]>l2:\n            l2=a.pop()\n            a2+=\"R\"\n            pe-=1\n            n2+=1\n        ans+= a1 if n1>n2 else a2\n        break\n    elif (l<a[-1]<b[-1]) or (l>=b[-1] and l<a[-1]):\n        li=a.pop()\n        e='R'\n        pe-=1\n    elif l<b[-1]:\n        li=b.pop()\n        e='L'\n        pi+=1\n    else: \n        break\n    if li<=l:\n        break\n    else:\n        ans+=e\n        l=li\n\nprint len(ans)\nprint ans"
        },
        {
            "language": 3,
            "solution": "R = lambda: map(int, input().split())\n\n\ndef isL():\n    k1 = 1\n    while i + k1 <= j and a[i+k1]>a[i+k1-1]:\n        k1 += 1\n    k2 = 1\n    while j - k2 >= i and a[j-k2]>a[j-k2+1]:\n        k2 += 1\n    return k1 >= k2\n\n\nn, a = int(input()), list(R())\nres = []\ni, j = 0, n-1\nv = 0\nwhile i <= j:\n    if a[i] <= v and a[j] <= v:\n        break\n    elif a[i] > v >= a[j]:\n        res.append('L')\n        v = a[i]\n        i += 1\n    elif a[j] > v >= a[i]:\n        res.append('R')\n        v = a[j]\n        j -= 1\n    elif a[i] < a[j]:\n        res.append('L')\n        v = a[i]\n        i += 1\n    elif a[j] < a[i]:\n        res.append('R')\n        v = a[j]\n        j -= 1\n    elif i == j:\n        res.append('L')\n        v = a[i]\n        i += 1\n    elif isL():\n        res.append('L')\n        v = a[i]\n        i += 1\n    else:\n        res.append('R')\n        v = a[j]\n        j -= 1\n\nres = ''.join(res)\nprint(len(res))\nprint(res)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static PrintWriter pw;\n    static Scanner sc;\n    static long ceildiv(long x, long y){ return (x+y-1)/y;}\n    static String solveR(int prev, int j, int[] arr){\n        StringBuilder sb=new StringBuilder();\n        while(j>=0 && arr[j]>prev){\n            prev=arr[j--];\n            sb.append('R');\n        }\n        return sb.toString();\n    }\n    static String solveL(int i, int prev, int[] arr){\n        StringBuilder sb=new StringBuilder();\n        while(i<arr.length && arr[i]>prev){\n            prev=arr[i++];\n            sb.append('L');\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) throws Exception {\n        sc= new Scanner(System.in);\n        pw=new PrintWriter(System.out);\n        int n=sc.nextInt();\n        int[] arr=sc.nextArr(n);\n        StringBuilder sb=new StringBuilder();\n        int prev=0;\n        int i=0, j=n-1;\n        while(i<=j){\n            if(Math.max(arr[i], arr[j])<=prev)\n                break;\n            if(arr[i]>arr[j]){\n                if(arr[j]>prev){\n                    prev=arr[j--];\n                    sb.append('R');\n                }else{\n                    prev=arr[i++];\n                    sb.append('L');\n                }\n            }else if(arr[i]<arr[j]){\n                if(arr[i]>prev){\n                    prev=arr[i++];\n                    sb.append('L');\n                }else{\n                    prev=arr[j--];\n                    sb.append('R');\n                }\n            }else{\n                break;\n            }\n        }\n        String a=solveR(prev, j, arr), b=solveL(i, prev, arr);\n        if(a.length()>=b.length())\n            sb.append(a);\n        else\n            sb.append(b);\n        pw.println(sb.length());\n        pw.println(sb);\n        pw.close();\n    }\n    static void printArr(int[] arr){\n        for(int i=0; i<arr.length-1; i++)\n            pw.print(arr[i]+\" \");\n        pw.println(arr[arr.length-1]);\n    }\n    static void printArr(long[] arr){\n        for(int i=0; i<arr.length-1; i++)\n            pw.print(arr[i]+\" \");\n        pw.println(arr[arr.length-1]);\n    }\n    static void printArr(Integer[] arr){\n        for(int i=0; i<arr.length-1; i++)\n            pw.print(arr[i]+\" \");\n        pw.println(arr[arr.length-1]);\n    }\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public Scanner(FileReader r) {\n            br = new BufferedReader(r);\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextArr(int n) throws IOException {\n            int[] arr = new int[n];\n            for (int i = 0; i < arr.length; i++)\n                arr[i] = nextInt();\n            return arr;\n        }\n        public Integer[] nextsort(int n) throws IOException{\n            Integer[] arr=new Integer[n];\n            for(int i=0; i<n; i++)\n                arr[i]=nextInt();\n            return arr;\n        }\n        public Pair nextPair() throws IOException{\n            return new Pair(nextInt(), nextInt());\n        }\n        public Pair[] nextPairArr(int n, int l) throws IOException{\n            Pair[] arr=new Pair[n];\n            if(l==2){\n                int[] a=nextArr(n), b=nextArr(n);\n                for(int i=0; i<n; i++)\n                    arr[i]=new Pair(a[i], b[i]);\n                return arr;\n            }\n            for(int i=0; i<n; i++)\n                arr[i]=new Pair(nextInt(), nextInt());\n            return arr;\n        }\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n    }\n    static class Pair implements Comparable<Pair>{\n        int x;\n        int y;\n        public Pair(int x, int y) {\n            this.x=x;\n            this.y=y;\n        }\n        public int hashCode() {\n            return this.x*1000+this.y;\n        }\n        public int compareTo(Pair other) {\n            if(this.y!=other.y)\n                return this.y-other.y;\n            return this.x-other.x;\n        }\n        public boolean equals(Object obj) {\n            if (obj == null) {\n                return false;\n            }\n            if (this.getClass() != obj.getClass()) {\n                return false;\n            }\n            Pair p = (Pair) obj;\n            if(this.x==p.x)\n                return this.y==p.y;\n            if(this.x==p.y)\n                return this.y==p.x;\n            else\n                return false;\n        }\n        public boolean equal(Pair p){\n            if(this.x==p.x)\n                return this.y==p.y;\n            if(this.x==p.y)\n                return this.y==p.x;\n            else\n                return false;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nar=list(map(int,input().split()))\nif(n==1):\n\tprint(1)\n\tprint('L')\nelse:\n\tl=0\n\tx=0\n\ty=n-1\n\tans=[]\n\twhile(x<=y):\n\t\tif(x==y and ar[x]>l):\n\t\t\tx+=1\n\t\t\ty-=1\n\t\t\tans.append('L')\n\t\telse:\n\t\t\tif(ar[x]==ar[y] and ar[x]>l):\n\t\t\t\tx1=x+1\n\t\t\t\ty1=y-1\n\t\t\t\tc1=1\n\t\t\t\tfor i in range(x1,y+1):\n\t\t\t\t\tif(ar[i]>ar[i-1]):\n\t\t\t\t\t\tc1+=1\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\t\t\t\tc2=1\n\t\t\t\twhile(y1>x):\n\t\t\t\t\tif(ar[y1]>ar[y1+1]):\n\t\t\t\t\t\tc2+=1\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\t\t\t\t\ty1-=1\n\t\t\t\t# print(c1,c2,x,y)\n\t\t\t\tif(c1>=c2):\n\t\t\t\t\tfor i in range(c1):\n\t\t\t\t\t\tans.append('L')\n\t\t\t\telse:\n\t\t\t\t\tfor i in range(c2):\n\t\t\t\t\t\tans.append('R')\n\t\t\t\tbreak\n\n\t\t\telse:\n\t\t\t\tif(ar[x]>l and ar[y]>l):\n\t\t\t\t\tif(ar[x]>ar[y]):\n\t\t\t\t\t\tans.append('R')\n\t\t\t\t\t\tl=ar[y]\n\t\t\t\t\t\ty-=1\n\t\t\t\t\telse:\n\t\t\t\t\t\tans.append('L')\n\t\t\t\t\t\tl=ar[x]\n\t\t\t\t\t\tx+=1\n\t\t\t\telse:\n\t\t\t\t\tif(ar[x]>l):\n\t\t\t\t\t\tans.append('L')\n\t\t\t\t\t\tl=ar[x]\n\t\t\t\t\t\tx+=1\n\t\t\t\t\telif(ar[y]>l):\n\t\t\t\t\t\tans.append('R')\n\t\t\t\t\t\tl=ar[y]\n\t\t\t\t\t\ty-=1\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\n\tprint(len(ans))\n\tprint(\"\".join(ans))"
        },
        {
            "language": 3,
            "solution": "def binarySearch (arr, l, r, x): \n  \n    # Check base case \n    if r >= l: \n  \n        mid = l + (r - l)/2\n  \n        # If element is present at the middle itself \n        if arr[mid] == x: \n            return mid \n          \n        # If element is smaller than mid, then it  \n        # can only be present in left subarray \n        elif arr[mid] > x: \n            return binarySearch(arr, l, mid-1, x) \n  \n        # Else the element can only be present  \n        # in right subarray \n        else: \n            return binarySearch(arr, mid + 1, r, x) \n  \n    else: \n        return -1\n\nn = int(input().strip())\narr = list(map(int, input().split()))\nseq = [0]\nmoves = []\ni = 0; j = n - 1\nwhile i != j:\n    if arr[i] >= arr[j]:\n        if arr[j] > seq[-1]:\n            seq.append(arr[j])\n            j -= 1\n            moves.append('R')\n        elif arr[i] > seq[-1]:\n            seq.append(arr[i])\n            i += 1\n            moves.append('L')\n        else:\n            break\n\n    else:\n        if arr[i] > seq[-1]:\n            seq.append(arr[i])\n            i += 1\n            moves.append('L')\n        elif arr[j] > seq[-1]:\n            seq.append(arr[j])\n            j -= 1\n            moves.append('R')\n        else:\n            break\nif i == j:\n    if arr[i] > seq[-1]:\n        seq.append(arr[i])\n        moves.append('R')\n#print(sequence)\nseq2 = [0]\nmoves2 = []\n\ni = 0; j = n - 1\nwhile i != j:\n    if arr[i] > arr[j]:\n        if arr[j] > seq2[-1]:\n            seq2.append(arr[j])\n            j -= 1\n            moves2.append('R')\n        elif arr[i] > seq2[-1]:\n            seq2.append(arr[i])\n            i += 1\n            moves2.append('L')\n        else:\n            break\n\n    else:\n        if arr[i] > seq2[-1]:\n            seq2.append(arr[i])\n            i += 1\n            moves2.append('L')\n        elif arr[j] > seq2[-1]:\n            seq2.append(arr[j])\n            j -= 1\n            moves2.append('R')\n        else:\n            break\nif i == j:\n    if arr[i] > seq2[-1]:\n        seq2.append(arr[i])\n        moves2.append('R')\n\n\nif len(seq2) > len(seq):\n    print(len(seq2) - 1)\n    for i in moves2:\n        print(i, end = '')\nelse:\n    print(len(seq) - 1)\n    for i in moves:\n        print(i, end = '')\n\n"
        },
        {
            "language": 3,
            "solution": "if __name__ == '__main__':\n  n = int(input())\n  a = [int(x) for x in input().split(' ')]\n  left = 0\n  right = n - 1\n  curr = 0\n  ans = \"\"\n  while left <= right:\n    if curr < a[left] and curr < a[right]:\n      if a[left] < a[right]:\n        ans += \"L\"\n        curr = a[left]\n        left += 1\n      elif a[left] > a[right]:\n        ans += 'R'\n        curr = a[right]\n        right -= 1\n      else:\n        count_left = left + 1\n        while count_left <= right and a[count_left] > a[count_left - 1]:\n          count_left += 1\n\n        count_right = right - 1\n        while count_right >= left and a[count_right] > a[count_right + 1]:\n          count_right -= 1\n\n        if count_left - left - 1 > right - count_right - 1:\n          ans += \"L\"\n          curr = a[left]\n          left += 1\n        else:\n          ans += 'R'\n          curr = a[right]\n          right -= 1\n    elif curr < a[left]:\n      ans += \"L\"\n      curr = a[left]\n      left += 1\n    elif curr < a[right]:\n      ans += 'R'\n      curr = a[right]\n      right -= 1\n    else:\n      break\n  print(len(ans))\n  print(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\n \nans=\"\"\nl=0\nr=n-1\nlast=-1\nwhile l<=r:\n    if min(a[l], a[r]) <= last:\n        break\n    if a[l] < a[r]:\n        ans+=\"L\"\n        last=a[l]\n        l+=1\n    elif a[l]>a[r]:\n        ans+=\"R\"\n        last=a[r]\n        r-=1\n    else:\n        break\n \nlast1=last\nans1=ans\nl1=l\nwhile l1<=r and a[l1]>last1:\n    ans1+=\"L\"\n    last1=a[l1]\n    l1+=1\n \nlast2=last\nans2=ans\nr2=r\nwhile r2>=l and a[r2]>last2:\n    ans2=ans2+'R'\n    last2=a[r2]\n    r2-=1\n \n \nif len(ans1)>len(ans2):\n    print(len(ans1))\n    print(ans1)\nelse:\n    print(len(ans2))\n    print(ans2)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\ni=0\nj=n-1\nans=''\nprev=0\nwhile(i<j):\n\tif(arr[i]<arr[j]):\n\t\tif(arr[i]>prev):\n\t\t\tans+='L'\n\t\t\tprev=arr[i]\n\t\t\ti+=1\n\t\telif(arr[j]>prev):\n\t\t\tans+='R'\n\t\t\tprev=arr[j]\n\t\t\tj-=1\n\t\telse:\n\t\t\tbreak\n\telif(arr[i]>arr[j]):\n\t\tif(arr[j]>prev):\n\t\t\tans+='R'\n\t\t\tprev=arr[j]\n\t\t\tj-=1\n\t\telif(arr[i]>prev):\n\t\t\tans+='L'\n\t\t\tprev=arr[i]\n\t\t\ti+=1\n\t\telse:\n\t\t\tbreak\n\telse:\n\t\t#print(prev)\n\t\tif(arr[i]<prev):\n\t\t\tbreak\n\t\telse:\n\t\t\tcount1=0\n\t\t\tcount2=0\n\t\t\ttemp=i\n\t\t\ttemprev=prev\n\t\t\twhile(temp<j):\n\t\t\t\tif(arr[temp]>temprev):\n\t\t\t\t\ttemprev=arr[temp]\n\t\t\t\t\tcount1+=1\n\t\t\t\t\ttemp+=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\ttemp=j\n\t\t\ttemprev2=prev\n\t\t\t#print(count1)\n\t\t\twhile(temp>i):\n\t\t\t\t#print(arr[temp],prev)\n\t\t\t\tif(arr[temp]>temprev2):\n\t\t\t\t\ttemprev2=arr[temp]\n\t\t\t\t\tcount2+=1\n\t\t\t\t\ttemp-=1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\t#print(count1,count2)\n\t\t\tif(count1>=count2):\n\t\t\t\tans+='L'*count1\n\t\t\t\ti+=count1\n\t\t\t\tprev=temprev\n\t\t\telif(count2>count1):\n\t\t\t\tans+='R'*count2\n\t\t\t\tj-=count2\n\t\t\t\tprev=temprev2\n\t\t\tbreak\n\n\t#print(ans)\n\t#print(i,j)\nif(i==j and arr[i]>prev):\n\tans+='R'\n\tprev=arr[i]\nprint(len(ans))\nprint(ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\n/**\n * @author gamezovladislav\n */\npublic class TaskC {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n\n        Solver solver = new Solver(in, out);\n        solver.solve();\n\n        in.close();\n        out.close();\n    }\n\n    private static class Solver {\n        private final Scanner in;\n        private final PrintWriter out;\n\n        public Solver(Scanner in, PrintWriter out) {\n            this.in = in;\n            this.out = out;\n        }\n\n        int left, right, last;\n        int[] a;\n        List<Character> list = new ArrayList<>();\n\n        public void solve() {\n            int n = in.nextInt();\n            a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextInt();\n            }\n            left = 0;\n            right = n - 1;\n            last = -1;\n            int leftRightNon = 0;\n            while (left <= right) {\n//                out.println(left + \" \" + right + \" \" + last);\n                leftRightNon = 0;\n                if (a[left] > last) {\n                    leftRightNon |= 1;\n                }\n                if (a[right] > last) {\n                    leftRightNon |= 2;\n                }\n\n                if (leftRightNon == 0) break;\n\n                if (leftRightNon == 1) {\n                    fooLeft();\n                    continue;\n                }\n\n                if (leftRightNon == 2) {\n                    fooRight();\n                    continue;\n                }\n\n                if (a[left] < a[right]) {\n                    fooLeft();\n                } else\n                if (a[left] > a[right]) {\n                    fooRight();\n                } else {\n                    int cntLeft = 0;\n                    int left1 = left;\n                    while (left1 + 1 <= right && a[left1] < a[left1 + 1]) {\n                        left1++;\n                        cntLeft++;\n                    }\n\n                    int cntRight = 0;\n                    int right1 = right;\n                    while (right1 - 1 >= left && a[right1] < a[right1 - 1]) {\n                        right1--;\n                        cntRight++;\n                    }\n\n                    if (cntLeft >= cntRight) {\n                        fooLeft();\n                    } else {\n                        fooRight();\n                    }\n                }\n            }\n\n            out.println(list.size());\n            for (Character c : list) {\n                out.print(c);\n            }\n        }\n\n        private void fooRight() {\n            list.add('R');\n            last = a[right];\n            right--;\n        }\n\n        private void fooLeft() {\n            list.add('L');\n            last = a[left];\n            left++;\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\ninline int read(void) {\n  register int x = 0, f = 1, ch = getchar();\n  while (!isdigit(ch)) {\n    if (ch == '-') f = -f;\n    ch = getchar();\n  }\n  while (isdigit(ch)) {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nconst int maxn = 200005;\nint n, last, tot, a[maxn];\nbool f[maxn];\nint main(void) {\n  n = read();\n  for (register int i = 1; i <= n; ++i) a[i] = read();\n  last = 1 << 31;\n  int left = 1, right = n;\n  while (left <= right) {\n    if (left == right) {\n      if (a[left] > last) f[++tot] = 0;\n      break;\n    } else if (a[left] != a[right])\n      if (a[left] < a[right])\n        if (a[left] > last) {\n          f[++tot] = 0;\n          last = a[left++];\n        } else if (a[right] > last) {\n          f[++tot] = 1;\n          last = a[right--];\n        } else\n          break;\n      else if (a[right] > last) {\n        f[++tot] = 1;\n        last = a[right--];\n      } else if (a[left] > last) {\n        f[++tot] = 0;\n        last = a[left++];\n      } else\n        break;\n    else {\n      int lasta = last, tota = 0, lastb = last, totb = 0;\n      for (register int i = left; i <= right; ++i)\n        if (a[i] > lasta) {\n          lasta = a[i];\n          ++tota;\n        } else\n          break;\n      for (register int i = right; i >= left; --i)\n        if (a[i] > lastb) {\n          lastb = a[i];\n          ++totb;\n        } else\n          break;\n      if (tota > totb) {\n        while (tota--) f[++tot] = 0;\n        break;\n      } else {\n        while (totb--) f[++tot] = 1;\n        break;\n      }\n    }\n  }\n  printf(\"%d\\n\", tot);\n  for (register int i = 1; i <= tot; ++i) printf(\"%c\", f[i] ? 'R' : 'L');\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\n\nn = int(input())\na = [int(x) for x in input().split()]\nq = deque(a)\nlast = -1\nleft = [1] * n\nright = [1] * n\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        left[i] = left[i - 1] + 1\nfor i in range(n - 2, -1, -1):\n    if a[i] < a[i + 1]:\n        right[i] = right[i + 1] + 1\n\nans = []\nle = 0\nri = n - 1\nwhile len(q) > 0:\n    if q[0] <= last and q[-1] <= last:\n        break\n    if (q[0] < q[-1] or q[0] == q[-1] and right[le] > left[ri]) and q[0] > last or q[-1] <= last:\n        ans.append('L')\n        le += 1\n        last = q.popleft()\n    else:\n        ans.append('R')\n        ri -= 1\n        last = q.pop()\n\nprint(len(ans))\nprint(*ans, sep='')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n\npublic class Main {\n\n\tstatic class Task {\n\t\t\n\t\tint NN = 300001;\n\t\tint MOD = 1000000007;\n\t\tint INF = 2000000000;\n\t\tlong INFINITY = 2000000000000000000L;\n\t\t\n\t\tint [] a;\n\t\t\n\t\tpublic void solve(InputReader in, PrintWriter out) {\n\t\t\tint n = in.nextInt();\n\t\t\ta = new int[n];\n\t\t\tfor(int i=0;i<n;++i)\n\t\t\t\ta[i] = in.nextInt();\n\t\t\tStringBuilder s = new StringBuilder();\n\t\t\tint lo = 0, hi = n -1;\n\t\t\tint prev = 0;\n\t\t\twhile(lo <= hi) {\n\t\t\t\tif(a[lo] < a[hi] && a[lo] > prev) {\n\t\t\t\t\ts.append(\"L\");prev = a[lo++];\n\t\t\t\t} else if(a[lo] > a[hi] && a[hi] > prev) {\n\t\t\t\t\ts.append(\"R\");prev = a[hi--];\n\t\t\t\t} else if(a[lo] == a[hi] && a[lo] > prev){\n\t\t\t\t\tint cnt = 1;\n\t\t\t\t\tfor(int i=lo+1;i<hi;++i) {\n\t\t\t\t\t\tif(a[i] <= a[i -1])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t++cnt;\n\t\t\t\t\t}\n\t\t\t\t\tint cnt1 = 1;\n\t\t\t\t\tfor(int i=hi-1;i>lo;--i) {\n\t\t\t\t\t\tif(a[i] <= a[i + 1])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t++cnt1;\n\t\t\t\t\t}\n\t\t\t\t\tif(cnt1 > cnt) {\n\t\t\t\t\t\twhile(cnt1-->0)s.append(\"R\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile(cnt-->0)s.append(\"L\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tif(a[lo] > prev) {\n\t\t\t\t\t\tint cnt = 1;\n\t\t\t\t\t\tfor(int i=lo+1;i<hi;++i) {\n\t\t\t\t\t\t\tif(a[i] <= a[i -1])\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t++cnt;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile(cnt-->0)s.append(\"L\");\n\t\t\t\t\t} else if(a[hi] > prev){\n\t\t\t\t\t\tint cnt1 = 1;\n\t\t\t\t\t\tfor(int i=hi-1;i>lo;--i) {\n\t\t\t\t\t\t\tif(a[i] <= a[i + 1])\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t++cnt1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile(cnt1-->0)s.append(\"R\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t\tout.println(s.length());\n\t\t\tout.println(s.toString());\n\t\t}\n\t\t\n\t}\n\t\n\tstatic void prepareIO(boolean isFileIO) {\n\t\t//long t1 = System.currentTimeMillis();\n\t\tTask solver = new Task();\n\t\t// Standard IO\n\t\tif(!isFileIO) { \n\t\t\tInputStream inputStream = System.in;\n\t        OutputStream outputStream = System.out;\n\t        InputReader in = new InputReader(inputStream);\n\t        PrintWriter out = new PrintWriter(outputStream);\n\t        solver.solve(in, out);\n\t        //out.println(\"time(s): \" + (1.0*(System.currentTimeMillis()-t1))/1000.0);\n\t        out.close();\n\t\t}\n        // File IO\n\t\telse {\n\t\t\tString IPfilePath = System.getProperty(\"user.home\") + \"/Downloads/ip.in\";\n\t        String OPfilePath = System.getProperty(\"user.home\") + \"/Downloads/op.out\";\n\t        InputReader fin = new InputReader(IPfilePath);\n\t        PrintWriter fout = null;\n\t        try {\n\t\t\t\tfout = new PrintWriter(new File(OPfilePath));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t        solver.solve(fin, fout);\n\t        //fout.println(\"time(s): \" + (1.0*(System.currentTimeMillis()-t1))/1000.0);\n\t        fout.close();\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n        prepareIO(false);\n\t}\n\t\n\tstatic class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n        \n        public InputReader(String filePath) {\n        \tFile file = new File(filePath);\n            try {\n\t\t\t\treader = new BufferedReader(new FileReader(file));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n            tokenizer = null;\n        }\n        \n        public String nextLine() {\n        \tString str = \"\";\n        \ttry {\n\t\t\t\tstr = reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n        \treturn str;\n        }\n        \n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n        \treturn Double.parseDouble(next());\n        }\n        \n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=map(int,input().split())\na=list(a)\nl=0\nr=n-1\nans=[]\nla=0\nwhile (l<=r):\n\tif (a[l]<=la and a[r]<=la): break\n\tif (l==r):\n\t\tans.append('L')\n\t\tbreak\n\tif (a[l]==a[r] and a[l]>la):\n\t\tal=1\n\t\tar=1\n\t\tll=l+1\n\t\trr=r-1\n\t\twhile (ll<=r and a[ll]>a[ll-1]): \n\t\t\tll+=1\n\t\t\tal+=1\n\t\twhile (rr>=l and a[rr]>a[rr+1]): \n\t\t\trr-=1\n\t\t\tar+=1\n\t\tif (al>ar):\n\t\t\tans+=(['L']*al)\n\t\telse:\n\t\t\tans+=(['R']*ar)\n\t\tbreak\t\n\telif ((a[r]<=la or a[l]<a[r]) and a[l]>la):\n\t\tans.append('L')\n\t\tla=a[l]\n\t\tl+=1\n\telif ((a[l]<=la or a[r]<a[l]) and a[r]>la):\n\t\tla=a[r]\n\t\tans.append('R')\n\t\tr-=1\n\telse: break\n#print(ans)\nprint(len(ans))\nprint(''.join(ans))\n"
        },
        {
            "language": 3,
            "solution": "'''input\n5\n1 2 4 3 2\n'''\nfrom sys import stdin, stdout, maxsize\nimport math\nfrom copy import deepcopy\nfrom collections import defaultdict\nimport heapq\n\n# main starts\nn = int(stdin.readline().strip())\narr = list(map(int, stdin.readline().split()))\nsequence = [0]\nmoves = []\ni = 0; j = n - 1\nwhile i != j:\n\tif arr[i] >= arr[j]:\n\t\tif arr[j] > sequence[-1]:\n\t\t\tsequence.append(arr[j])\n\t\t\tj -= 1\n\t\t\tmoves.append('R')\n\t\telif arr[i] > sequence[-1]:\n\t\t\tsequence.append(arr[i])\n\t\t\ti += 1\n\t\t\tmoves.append('L')\n\t\telse:\n\t\t\tbreak\n\n\telse:\n\t\tif arr[i] > sequence[-1]:\n\t\t\tsequence.append(arr[i])\n\t\t\ti += 1\n\t\t\tmoves.append('L')\n\t\telif arr[j] > sequence[-1]:\n\t\t\tsequence.append(arr[j])\n\t\t\tj -= 1\n\t\t\tmoves.append('R')\n\t\telse:\n\t\t\tbreak\nif i == j:\n\tif arr[i] > sequence[-1]:\n\t\tsequence.append(arr[i])\n\t\tmoves.append('R')\n#print(sequence)\nsequence2 = [0]\nmoves2 = []\n\ni = 0; j = n - 1\nwhile i != j:\n\tif arr[i] > arr[j]:\n\t\tif arr[j] > sequence2[-1]:\n\t\t\tsequence2.append(arr[j])\n\t\t\tj -= 1\n\t\t\tmoves2.append('R')\n\t\telif arr[i] > sequence2[-1]:\n\t\t\tsequence2.append(arr[i])\n\t\t\ti += 1\n\t\t\tmoves2.append('L')\n\t\telse:\n\t\t\tbreak\n\n\telse:\n\t\tif arr[i] > sequence2[-1]:\n\t\t\tsequence2.append(arr[i])\n\t\t\ti += 1\n\t\t\tmoves2.append('L')\n\t\telif arr[j] > sequence2[-1]:\n\t\t\tsequence2.append(arr[j])\n\t\t\tj -= 1\n\t\t\tmoves2.append('R')\n\t\telse:\n\t\t\tbreak\nif i == j:\n\tif arr[i] > sequence2[-1]:\n\t\tsequence2.append(arr[i])\n\t\tmoves2.append('R')\n\n\nif len(sequence2) > len(sequence):\n\tprint(len(sequence2) - 1)\n\tfor i in moves2:\n\t\tprint(i, end = '')\nelse:\n\tprint(len(sequence) - 1)\n\tfor i in moves:\n\t\tprint(i, end = '')\n\t\t\t"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Main\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\t// your code goes here\n\t\tFastReader sc=new FastReader();\n\t\tint n=sc.I();\n\t\tint d[]=new int[n];\n\t\tfor(int i=0;i<n;i++)\n\t\td[i]=sc.I();\n\t\tint l=0,r=n-1;\n\t\tint e=0,c=0;\n\t\t//String s=\"\";\n\t\tArrayList<Character> s=dp(d,0,l,r);\n\t/*\tif(n==200000)\n\t\t{l=0;\n\t\tr=n-1;\n\t\t    for(int i=s.size()-1;i>=0;i--)\n\t\t{\n\t\t    if(s.get(i)=='R')\n\t\t    System.out.print(d[r--]+\" \");\n\t\t}\n\t\t\tSystem.out.println(d[r]);\n\t\t}*/\n\t\n\t\tSystem.out.println(s.size());\n\t\tfor(int i=s.size()-1;i>=0;i--)\n\t\tSystem.out.print(s.get(i));\n\t }\n\t static ArrayList<Character> dp(int[] d,int e,int l,int r)\n\t {\n\t     ArrayList<Character> a;\n\t     ArrayList<Character> b;\n\t    \n\t     if(l>r||(d[l]<=e&&d[r]<=e))\n\t     return (new ArrayList<>());\n\t     if(d[l]>e&&d[r]>e)\n\t     {\n\t         if(d[l]<d[r])\n\t         {\n\t             a=dp(d,d[l],l+1,r);\n\t             b=new ArrayList<>();\n\t         }\n\t         else if(d[r]<d[l])\n\t         {\n\t             a=new ArrayList<>();\n\t             b=dp(d,d[r],l,r-1);\n\t         }\n\t         else\n\t         {\n\t             a=dp(d,d[l],l+1,r);\n\t             b=dp(d,d[r],l,r-1);\n\t         }\n\t         \n\t     }\n\t     else{\n\t      if(d[l]>e){\n\t      a=dp(d,d[l],l+1,r);\n\t      b=new ArrayList<>();}\n\t      \n\t      else{\n\t      b=dp(d,d[r],l,r-1);\n\t      a=new ArrayList<>();}\n\t      \n\t     }\n\t      if(a.size()>b.size()){\n\t      a.add('L');\n\t      return a;\n\t      }\n\t      else if(a.size()==b.size())\n\t      {\n\t          if(d[l]>e&&d[r]<=e)\n\t          {\n\t               a.add('L');\n\t      return a;\n\t          }\n\t          else\n\t          {\n\t              b.add('R');\n\t      return b; \n\t          }\n\t      }\n\t      else\n\t      {\n\t          b.add('R');\n\t      return b;\n\t      }\n\t }\n\t \n\t  static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int I() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long L() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double D() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n    static int gcd(int a,int b)\n\t\t{\n\t\t    if(a%b==0)\n\t\t    return b;\n\t\t    return gcd(b,a%b);\n\t\t}\n\tstatic float power(float x, int y) \n    { \n        float temp; \n        if( y == 0) \n            return 1; \n        temp = power(x, y/2);  \n          \n        if (y%2 == 0) \n            return temp*temp; \n        else\n        { \n            if(y > 0) \n                return x * temp * temp; \n            else\n                return (temp * temp) / x; \n        } \n    } \n    static long pow(int a,int b)\n    {\n        long result=1;\n        if(b==0)\n        return 1;\n        long x=a;\n        while(b>0)\n        {\n            if(b%2!=0)\n            result*=x;\n            \n            x=x*x;\n            b=b/2;\n        }\n        return result;\n    }\n    \n    static ArrayList<Integer> sieveOfEratosthenes(int n) \n    { \n        ArrayList<Integer> arr=new ArrayList<Integer>();\n        boolean prime[] = new boolean[n+1]; \n        for(int i=2;i<n;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=n; p++) \n        { \n            if(prime[p] == true) \n            { \n                arr.add(p);\n                for(int i = p*p; i <= n; i += p) \n                    prime[i] = false; \n            } \n        } \n        return arr;\n    } \n}"
        },
        {
            "language": 3,
            "solution": "import sys\n\nN = int(input())\nnums = list(map(int, input().split(' ')))\n\nres = []\ncurr = 0\nleft = 0\nright = N - 1\nwhile True:\n    if nums[left] == nums[right] or left > right or (nums[left] <= curr and nums[right] <= curr):\n        break\n    if (nums[left] < nums[right] and nums[left] > curr) or (nums[right] <= curr and nums[left] > nums[right]):\n        res.append('L')\n        curr = nums[left]\n        left += 1\n    elif (nums[left] > nums[right] and nums[right] > curr) or (nums[left] <= curr and nums[right] > nums[left]):\n        res.append('R')\n        curr = nums[right]\n        right -= 1\n    else:\n        break\n\nif nums[left] != nums[right] or left == right:\n    if left == right and nums[left] > curr:\n        res.append('L')\n    print(len(res))\n    print(''.join(res))\n    sys.exit(0)\n\ns = [0, 0]\ntemp_left = left\ntemp_curr = curr\nwhile True:\n    if temp_left >= right:\n        break\n    if nums[temp_left] > temp_curr:\n        s[0] += 1\n        temp_curr = nums[temp_left]\n        temp_left += 1\n    else:\n        break\n\ntemp_right = right\ntemp_curr = curr\nwhile True:\n    if temp_right <= left:\n        break\n    if nums[temp_right] > temp_curr:\n        s[1] += 1\n        temp_curr = nums[temp_right]\n        temp_right -= 1\n    else:\n        break\nif s[0] > s[1]:\n    res.append('L' * s[0])\nelse:\n    res.append('R' * s[1])\n\nres = ''.join(res)\nprint(len(res))\nprint(res)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\n\npublic class Main {\n    public static String solution(ArrayDeque<Integer> arr) {\n        int last = -1;\n        StringBuilder s = new StringBuilder();\n        while (arr.size() > 0) {\n            int first = arr.peekFirst();\n            int l = arr.peekLast();\n            if (first < l) {\n                if (first > last) {\n                    s.append(\"L\");\n                    last = arr.pollFirst();\n\n                } else if (l > last) {\n                    s.append(\"R\");\n                    last = arr.pollLast();\n                } else {\n                    break;\n                }\n            } else if (first > l) {\n                if (l > last) {\n                    s.append(\"R\");\n                    last = arr.pollLast();\n                } else if (first > last) {\n                    s.append(\"L\");\n                    last = arr.pollFirst();\n                } else {\n                    break;\n                }\n            } else {\n                int left = 0;\n                int ll = last;\n                Iterator<Integer> iterator = arr.iterator();\n                while (iterator.hasNext()) {\n                    Integer n = iterator.next();\n                    if (n > ll) {\n                        left += 1;\n                        ll = n;\n                    } else {break;}\n                }\n                int right = 0;\n                ll = last;\n                iterator = arr.descendingIterator();\n                while (iterator.hasNext()) {\n                    Integer n = iterator.next();\n                    if (n > ll) {\n                        right += 1;\n                        ll = n;\n                    } else {\n                        break;\n                    }\n                }\n\n                if (left > right) {\n                    while (left > 0) {\n                        s.append(\"L\");\n                        left -= 1;\n                    }\n                } else {\n                    while (right > 0) {\n                        s.append(\"R\");\n                        right -= 1;\n                    }\n                }\n                break;\n            }\n        }\n\n//        #(???(???(?\n//        (()(())()()\n//        ((??()))()\n//        ((()()))()\n        return s.toString();\n\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        scanner.nextLine();\n        ArrayDeque<Integer> zz = new ArrayDeque<>();\n        while (n-- > 0) {\n            zz.addLast(scanner.nextInt());\n        }\n        String a = solution(zz);\n        System.out.println(a.length());\n        System.out.println(a);\n    }\n}\n\n\n//88ZABCDABCDABC8\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nint n;\nint a[N], now, l, r;\nchar op[N];\nint cntop;\nint main() {\n  scanf(\"%d\", &n);\n  l = 1;\n  r = n;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  while (l <= r) {\n    if (a[l] > now && a[r] > now) {\n      if (a[l] == a[r]) {\n        for (int i = l + 1, j = r - 1;; i++, j--) {\n          if (a[i] <= a[i - 1]) {\n            while (a[r] > now) {\n              op[++cntop] = 'R';\n              now = a[r];\n              r--;\n            }\n            break;\n          } else if (a[j] <= a[j + 1]) {\n            while (a[l] > now) {\n              op[++cntop] = 'L';\n              now = a[l];\n              l++;\n            }\n            break;\n          }\n        }\n      } else if (a[l] < a[r]) {\n        op[++cntop] = 'L';\n        now = a[l];\n        l++;\n      } else {\n        op[++cntop] = 'R';\n        now = a[r];\n        r--;\n      }\n    } else if (a[l] > now) {\n      op[++cntop] = 'L';\n      now = a[l];\n      l++;\n    } else if (a[r] > now) {\n      op[++cntop] = 'R';\n      now = a[r];\n      r--;\n    } else {\n      break;\n    }\n  }\n  printf(\"%d\\n%s\\n\", cntop, op + 1);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = acos(-1.0);\nint a[2 * 100000 + 1];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i += 1) cin >> a[i];\n  int i = 0;\n  int j = n - 1;\n  string moves;\n  int min = -1;\n  while (1) {\n    if (a[i] < a[j] && a[i] > min) {\n      moves += 'L';\n      min = a[i++];\n    } else if (a[j] < a[i] && a[j] > min) {\n      moves += 'R';\n      min = a[j--];\n    } else if (a[i] > min && a[j] <= min) {\n      moves += 'L';\n      min = a[i++];\n    } else if (a[j] > min && a[i] <= min) {\n      moves += 'R';\n      min = a[j--];\n    } else if (i == j && a[j] > min) {\n      moves += 'L';\n      break;\n    } else if (a[i] == a[j] && a[i] > min) {\n      int lmoves = 1;\n      for (int k = i + 1; k <= j; k++) {\n        if (a[k] > a[k - 1])\n          lmoves++;\n        else\n          break;\n      }\n      int rmoves = 1;\n      for (int k = j - 1; k >= i; k--) {\n        if (a[k] > a[k + 1])\n          rmoves++;\n        else\n          break;\n      }\n      if (lmoves > rmoves) {\n        while (lmoves--) moves += 'L';\n      } else\n        while (rmoves--) moves += 'R';\n      break;\n    } else {\n      break;\n    }\n  }\n  cout << moves.size() << \"\\n\" << moves;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3e5 + 10;\nint n, a[maxn], pt1, pt2, q, t, g, numl, numr;\nchar s[maxn];\nvector<char> x;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  int l = 1, r = n, last = 0;\n  for (int i = 1; i <= n; i++) {\n    l = 1 + numl;\n    r = n - numr;\n    if (l == r) {\n      if (a[l] > last) {\n        x.push_back('L');\n        numl++;\n      }\n      break;\n    }\n    if (a[l] < a[r] && a[l] > last) {\n      x.push_back('L');\n      numl++;\n      last = a[l];\n      continue;\n    }\n    if (a[l] > a[r] && a[r] > last) {\n      last = a[r];\n      x.push_back('R');\n      numr++;\n      continue;\n    }\n    if (a[l] <= last && a[r] > last) {\n      last = a[r];\n      x.push_back('R');\n      numr++;\n      continue;\n    }\n    if (a[r] <= last && a[l] > last) {\n      last = a[l];\n      x.push_back('L');\n      numl++;\n      continue;\n    }\n    if (a[l] <= last && a[r] <= last) {\n      break;\n    }\n    if (a[l] == a[r]) {\n      q = l;\n      g = r;\n      while (a[q + 1] > a[q] && q + 1 <= r) {\n        q++;\n      }\n      while (a[g - 1] > a[g] && g - 1 >= l) {\n        g--;\n      }\n      if (q - l > r - g) {\n        for (int j = 0; j <= q - l; j++) x.push_back('L');\n      } else {\n        for (int j = 0; j <= r - g; j++) x.push_back('R');\n      }\n      break;\n    }\n  }\n  printf(\"%d\\n\", x.size());\n  for (char i : x) {\n    printf(\"%c\", i);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from __future__ import division, print_function\n \nimport os\nimport sys\nfrom io import BytesIO, IOBase\nfrom collections import deque\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\nelse:\n    _str = str\n    str = lambda x=b\"\": x if type(x) is bytes else _str(x).encode()\n \n \ndef main():\n    n = int(readline())\n    a = deque(readlist())\n \n    res, seq = [], [0]\n    while a:\n        if len(a) == 1 and a[0] > seq[-1]:\n            seq.append(a.pop())\n            res.append('R')\n        elif a[0] < a[-1] and a[0] > seq[-1]:\n            seq.append(a.popleft())\n            res.append('L')\n        elif a[-1] < a[0] and a[-1] > seq[-1]:\n            seq.append(a.pop())\n            res.append('R')\n        elif a[0] == a[-1] and a[0] > seq[-1]:\n            case_1, case_2 = 1, 1\n            start = a[0]\n            i = 1\n            while i < len(a) and a[i] > start:\n                start = a[i]\n                i += 1\n                case_1 += 1\n            start = a[-1]\n            i = len(a) - 2\n            while i >= 0 and a[i] > start:\n                start = a[i]\n                i -= 1\n                case_2 += 1\n            res += ['L'] * case_1 if case_1 > case_2 else ['R'] * case_2\n            break\n        elif a[0] > seq[-1]:\n            seq.append(a.popleft())\n            res.append('L')\n        elif a[-1] > seq[-1]:\n            seq.append(a.pop())\n            res.append('R')\n        else:\n            break\n \n    print(len(res))\n    print(''.join(res))\n \n \n# region template\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._buffer = BytesIO()\n        self._fd = file.fileno()\n        self._writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self._buffer.write if self._writable else None\n \n    def read(self):\n        if self._buffer.tell():\n            return self._buffer.read()\n        return os.read(self._fd, os.fstat(self._fd).st_size)\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self._buffer.tell()\n            self._buffer.seek(0, 2), self._buffer.write(b), self._buffer.seek(ptr)\n        self.newlines -= 1\n        return self._buffer.readline()\n \n    def flush(self):\n        if self._writable:\n            os.write(self._fd, self._buffer.getvalue())\n            self._buffer.truncate(0), self._buffer.seek(0)\n \n \nclass ostream:\n    def __lshift__(self, a):\n        if a is endl:\n            sys.stdout.write(b\"\\n\")\n            sys.stdout.flush()\n        else:\n            sys.stdout.write(str(a))\n        return self\n \n \ndef print(*args, **kwargs):\n    sep, file = kwargs.pop(\"sep\", b\" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", b\"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nsys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\ncout, endl = ostream(), object()\n \nreadline = sys.stdin.readline\nreadlist = lambda var=int: [var(n) for n in readline().split()]\ninput = lambda: readline().rstrip(b\"\\r\\n\")\n \n# endregion\n \nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nma=0\notv=''\nn-=1 #\u043d\u043e\u043c\u0435\u0440 \u043f\u043e\u0441\u043b\u0435\u0434 \u0438\u043d\u0434\u0435\u043a\u0430 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\nl=0\nr=n\ncr=0\ncl=0\nwhile r>=l:\n    b=a[l]\n    c=a[r]\n    if b==c and r-l>2:\n        cl=l\n        cr=r\n        xa=ma\n        sl=0\n        sr=0\n        while cl<=r and a[cl]>xa:\n            xa=a[cl]\n            cl+=1\n            sl+=1\n        xa=ma\n        while cr>=l and a[cr]>xa:\n            xa=a[cr]\n            cr-=1\n            sr+=1\n        if sl>=sr:\n            otv+='L'*sl\n        else:\n            otv+='R'*sr\n        break\n    if b<c and b>ma:\n        ma=a[l]\n        otv+='L'\n        l+=1\n    elif c>ma:\n        ma=a[r]\n        otv+='R'\n        r-=1\n    elif b>ma:\n        ma=a[l]\n        otv+='L'\n        l+=1\n    else:\n        break\nprint(len(otv))\nprint(otv)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\n@Project : CodeForces\n@File    : 32.py \n@Time    : 2019/4/26 23:43\n@Author  : Koushiro \n\"\"\"\n\nif __name__ == \"__main__\":\n    n = int(input())\n    nums = list(map(int, input().split()))\n    result = []\n    last = -1\n    left = 0\n    right = len(nums) - 1\n    while left <= right:\n        if nums[left] < nums[right]:\n            if nums[left] > last:\n                last = nums[left]\n                left += 1\n                result.append('L')\n            elif nums[right] > last:\n                last = nums[right]\n                right -= 1\n                result.append('R')\n            else:\n                break\n        elif nums[left] > nums[right]:\n            if nums[right] > last:\n                last = nums[right]\n                right -= 1\n                result.append('R')\n            elif nums[left] > last:\n                last = nums[left]\n                left += 1\n                result.append('L')\n            else:\n                break\n        elif nums[left] == nums[right]:\n            l_n = left\n            r_n = right\n            l_c = 0\n            r_c = 0\n            l_last = last\n            r_last = last\n            while l_n <= right:\n                if nums[l_n] > l_last:\n                    l_c += 1\n                    l_last = nums[l_n]\n                    l_n += 1\n                else:\n                    break\n            while r_n >= left:\n                if nums[r_n] > r_last:\n                    r_c += 1\n                    r_last = nums[r_n]\n                    r_n -= 1\n                else:\n                    break\n            if l_c > r_c:\n                for i in range(l_c):\n                    result.append(\"L\")\n            else:\n                for i in range(r_c):\n                    result.append(\"R\")\n            break\n\n    print(len(result))\n    print(\"\".join(result))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  for (int i = 0; i < n; i++) cin >> v[i];\n  int l = 0;\n  int r = n - 1;\n  int lastVal = 0;\n  string res;\n  while (true) {\n    if (l == r) {\n      if (v[l] > lastVal) {\n        res += \"L\";\n      }\n      break;\n    }\n    if (v[l] == v[r]) {\n      int dr = 0, dl = 0;\n      {\n        int lV = lastVal;\n        int _l = l;\n        int _r = r;\n        while (_l <= _r && v[_r] > lastVal) {\n          lastVal = v[_r];\n          _r--;\n        }\n        dr = r - _r;\n        lastVal = lV;\n      }\n      {\n        int _l = l;\n        int _r = r;\n        while (_l <= _r && v[_l] > lastVal) {\n          lastVal = v[_l];\n          _l++;\n        }\n        dl = _l - l;\n      }\n      if (dl >= dr) {\n        for (int i = 0; i < dl; i++) res += \"L\";\n      } else {\n        for (int i = 0; i < dr; i++) res += \"R\";\n      }\n      break;\n    } else if (v[l] > lastVal && v[r] > lastVal) {\n      if (v[l] < v[r]) {\n        res += \"L\";\n        lastVal = v[l];\n        l++;\n      } else {\n        res += \"R\";\n        lastVal = v[r];\n        r--;\n      }\n    } else if (v[l] > lastVal) {\n      res += \"L\";\n      lastVal = v[l];\n      l++;\n    } else if (v[r] > lastVal) {\n      res += \"R\";\n      lastVal = v[r];\n      r--;\n    } else {\n      break;\n    }\n  }\n  cout << res.size() << endl << res << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int x = 0; x < n; x++) {\n    cin >> arr[x];\n  }\n  int i = 0;\n  int j = n - 1;\n  int curr = -1;\n  string ans = \"\";\n  while (1) {\n    if (i == j) {\n      if (arr[i] > curr) {\n        ans.append(\"L\");\n      }\n      break;\n    }\n    if (arr[i] <= curr && arr[j] <= curr) {\n      break;\n    }\n    if (arr[i] > curr && arr[j] > curr) {\n      if (arr[i] < arr[j]) {\n        ans.append(\"L\");\n        curr = arr[i];\n        i += 1;\n      } else if (arr[j] < arr[i]) {\n        ans.append(\"R\");\n        curr = arr[j];\n        j -= 1;\n      } else {\n        int cnt_left = 1;\n        int cnt_right = 1;\n        int i_temp = i;\n        int j_temp = j;\n        while (i_temp < j && arr[i_temp + 1] > arr[i_temp]) {\n          i_temp += 1;\n          cnt_left += 1;\n        }\n        while (i < j_temp && arr[j_temp - 1] > arr[j_temp]) {\n          j_temp -= 1;\n          cnt_right += 1;\n        }\n        if (cnt_left > cnt_right) {\n          ans.append(\"L\");\n          curr = arr[i];\n          i += 1;\n        } else {\n          ans.append(\"R\");\n          curr = arr[j];\n          j -= 1;\n        }\n      }\n    } else {\n      if (arr[i] > curr) {\n        ans.append(\"L\");\n        curr = arr[i];\n        i += 1;\n      } else if (arr[j] > curr) {\n        ans.append(\"R\");\n        curr = arr[j];\n        j -= 1;\n      }\n    }\n  }\n  cout << ans.length() << endl;\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n  static Scanner in = new Scanner(System.in);\n  static PrintWriter out = new PrintWriter(System.out);\n  \n  public static void main(String[] args) {\n    int n = in.nextInt();\n\n    int[] numbers = new int[n];\n    for (int i = 0; i < n; i++) {\n      numbers[i] = in.nextInt();\n    }\n\n    // take right\n    int l_counter = 0;\n    int r_counter = n - 1;\n    int prev = 0;\n    LinkedList<Character> sequenceRightPriority = new LinkedList<>();\n    while (l_counter <= r_counter) {\n      if (prev >= numbers[l_counter] && prev >= numbers[r_counter]) {\n        break;\n      }\n      if (prev >= numbers[l_counter] && prev < numbers[r_counter]) {\n        prev = numbers[r_counter];\n        r_counter--;\n        sequenceRightPriority.add('R');\n        continue;\n      }\n      if (prev >= numbers[r_counter] && prev < numbers[l_counter]) {\n        prev = numbers[l_counter];\n        l_counter++;\n        sequenceRightPriority.add('L');\n        continue;\n      }\n      if (numbers[l_counter] < numbers[r_counter]) {\n        prev = numbers[l_counter];\n        l_counter++;\n        sequenceRightPriority.add('L');\n      } else {\n        prev = numbers[r_counter];\n        r_counter--;\n        sequenceRightPriority.add('R');\n      }\n    }\n    // take left\n    l_counter = 0;\n    r_counter = n - 1;\n    prev = 0;\n    LinkedList<Character> sequenceLeftPriority = new LinkedList<>();\n    while (l_counter <= r_counter) {\n      if (prev >= numbers[l_counter] && prev >= numbers[r_counter]) {\n        break;\n      }\n      if (prev >= numbers[l_counter] && prev < numbers[r_counter]) {\n        prev = numbers[r_counter];\n        r_counter--;\n        sequenceLeftPriority.add('R');\n        continue;\n      }\n      if (prev >= numbers[r_counter] && prev < numbers[l_counter]) {\n        prev = numbers[l_counter];\n        l_counter++;\n        sequenceLeftPriority.add('L');\n        continue;\n      }\n      if (numbers[l_counter] > numbers[r_counter]) {\n        prev = numbers[r_counter];\n        r_counter--;\n        sequenceLeftPriority.add('R');\n      } else {\n        prev = numbers[l_counter];\n        l_counter++;\n        sequenceLeftPriority.add('L');\n      }\n    }\n\n    if (sequenceLeftPriority.size() > sequenceRightPriority.size()) {\n      out.println(sequenceLeftPriority.size());\n      for (Character seq : sequenceLeftPriority) {\n        out.print(seq);\n      }\n    } else {\n      out.println(sequenceRightPriority.size());\n      for (Character seq : sequenceRightPriority) {\n        out.print(seq);\n      }\n    }\n\n    in.close();\n    out.close();\n  }\n}"
        },
        {
            "language": 4,
            "solution": "//package Codeforces.Contest.Div3.R_555.C;\n\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class C2 {\n\n    public void solve(int[] ar) {\n\n        ArrayList<Integer> arrayList = new ArrayList<>();\n        StringBuilder ans = new StringBuilder();\n\n        int left = 0, right = ar.length - 1;\n        while (left <= right) {\n\n            Integer lastAdded = arrayList.size() > 0 ? arrayList.get(arrayList.size() - 1) : 0;\n\n            if (left == right) {\n                if (lastAdded < ar[left]) {\n                    arrayList.add(ar[left]);\n                    ans.append('L');\n                    ++left;\n                }\n                break;\n            }\n\n            if (ar[left] < ar[right]) {\n                if (lastAdded < ar[left]) {\n                   arrayList.add(ar[left]);\n                   ans.append('L');\n                   ++left;\n               }\n               else if (lastAdded < ar[right]) {\n                   arrayList.add(ar[right]);\n                   ans.append('R');\n                   --right;\n               }\n               else\n                   break;\n            }\n            else if (ar[left] > ar[right]) {\n                if (lastAdded < ar[right]) {\n                    arrayList.add(ar[right]);\n                    ans.append('R');\n                    --right;\n                }\n                else if (lastAdded < ar[left]) {\n                    arrayList.add(ar[left]);\n                    ans.append('L');\n                    ++left;\n                }\n                else\n                    break;\n            }\n            else {\n                int lc = 0, rc = 0;\n                for (int i = left; i < right; i++) {\n                    if (ar[i] < ar[i+1])++lc;\n                    else break;\n                }\n                for (int i = right; i > left; i--) {\n                    if (ar[i] < ar[i-1])++rc;\n                    else break;\n                }\n                if (lc >= rc) {\n\n                    if (lastAdded < ar[left]) {\n                        arrayList.add(ar[left]);\n                        ans.append('L');\n                        ++left;\n                    }\n                    else break;\n                }\n                else {\n                    if (lastAdded < ar[right]) {\n                        arrayList.add(ar[right]);\n                        ans.append('R');\n                        --right;\n                    }\n                    else break;\n                }\n            }\n        }\n\n        out.println(ans.length());\n        out.println(ans);\n    }\n\n    public static PrintWriter out;\n    public static void main(String[] args) throws IOException {\n\n        boolean fileInOut = C2.class.getPackage() != null;\n\n        Scanner sc = new Scanner(new BufferedReader(new InputStreamReader(fileInOut ? C2.class.getResourceAsStream(\"in.txt\") : System.in)));\n        out = new PrintWriter(new BufferedOutputStream(fileInOut ? new FileOutputStream(\"out.txt\") : System.out), true);\n\n        int totalTestCase = fileInOut ? sc.nextInt() : 1;\n\n        for (int testCaseNumber = 1; testCaseNumber <= totalTestCase; testCaseNumber++) {\n            int arLength = sc.nextInt();\n            int[] ar = new int[arLength];\n\n            for (int arIndex = 0; arIndex < ar.length; arIndex++) {\n                ar[arIndex] = sc.nextInt();\n            }\n\n            new C2().solve(ar);\n        }\n\n        if (fileInOut) {\n\n            String outputFile = \"out.txt\";\n\n            BufferedReader reader1 = new BufferedReader(new FileReader(C2.class.getResource(\"ans.txt\").getFile()));\n            BufferedReader reader2 = new BufferedReader(new FileReader(outputFile));\n\n            String line1 = reader1.readLine();\n            String line2 = reader2.readLine();\n\n            boolean areEqual = true;\n            int lineNum = 1;\n\n            while (line1 != null || line2 != null) {\n\n                if (line1 == null || line2 == null) {\n\n                    areEqual = false;\n                    break;\n                } else if (!line1.equals(line2)) {\n\n                    areEqual = false;\n                    break;\n                }\n\n                line1 = reader1.readLine();\n                line2 = reader2.readLine();\n\n                lineNum++;\n            }\n\n            if (areEqual) {\n\n                System.out.println(\"All Test Cases Passed !\");\n            } else {\n\n                System.out.println(\"Output differ at line \" + lineNum);\n                System.out.println(\"ans.txt has \" + line1 + \" and out.txt has \" + line2 + \" at line \" + lineNum);\n            }\n\n            reader1.close();\n            reader2.close();\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict, deque, Counter\nfrom sys import stdin, stdout\nfrom heapq import heappush, heappop\nimport math\nimport io\nimport os\nimport math\nimport bisect\n\n#?############################################################\n\n\ndef isPrime(x):\n    for i in range(2, x):\n        if i*i > x:\n            break\n        if (x % i == 0):\n            return False\n    return True\n\n#?############################################################\n\n\ndef ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = (num * (n - i)) % p\n        den = (den * (i + 1)) % p\n    return (num * pow(den, p - 2, p)) % p\n\n\n#?############################################################\n\ndef primeFactors(n):\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n))+1, 2):\n        while n % i == 0:\n            l.append(int(i))\n            n = n / i\n    if n > 2:\n        l.append(n)\n    return list(set(l))\n\n\n#?############################################################\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    if (x == 0):\n        return 0\n    while (y > 0):\n        if ((y & 1) == 1):\n            res = (res * x) % p\n        y = y >> 1\n        x = (x * x) % p\n    return res\n\n#?############################################################\n\n\ndef sieve(n):\n    prime = [True for i in range(n+1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n\n#?############################################################\n\ndef digits(n):\n    c = 0\n    while (n > 0):\n        n //= 10\n        c += 1\n    return c\n\n#?############################################################\n\n\ndef ceil(n, x):\n    if (n % x == 0):\n        return n//x\n    return n//x+1\n\n#?############################################################\n\n\ndef mapin():\n    return map(int, input().split())\n\n#?############################################################\n\ndef solve(l, i, j):\n    ans1 = 0\n    for k in range(i, j):\n        if(l[k+1] > l[k]):\n            ans1+=1\n        else:\n            break\n    \n    ans2 = 0\n    for k in range(j, i, -1):\n        if(l[k] < l[k-1]):\n            ans2+=1\n        else:\n            break\n        \n    \n        \n    if(ans1 > ans2):\n        return [1, ans1]\n    else:\n        return [0, ans2]\n            \n# input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n# python3 15.py<in>op\nn = input()\nn = int(n)\nl = [int(x) for x in input().split()]\nk = []\nans = 0\ni =0\nj = n-1\ntemp = 0\nwhile(i <= j):\n    \n    \n    if(max(l[i] , l[j]) < temp):\n        break\n    else:\n        if(i == j and l[i] > temp):\n            k.append(\"L\")\n            ans+=1\n            break\n        \n        if(l[i] == l[j] and l[i] == temp):\n            break\n        if(l[i] == l[j] and l[i] > temp):\n            \n            a = solve(l, i, j)\n            \n            ans+=a[1]\n            ans+=1\n            if(a[0] == 1):\n                k.append(\"L\")\n                for kk in range(a[1]):\n                    k.append(\"L\")\n                i+= a[1]\n                i+=1\n            else:\n                k.append(\"R\")\n                for kk in range(a[1]):\n                    k.append(\"R\")\n                j-=a[1]\n                j-=1\n            break\n                    \n        if(l[i] < l[j] and l[i] > temp):\n            \n            k.append(\"L\")\n            temp = l[i]\n            i+=1\n        elif(l[i] > l[j] and l[j] > temp):\n            \n            k.append(\"R\")\n            temp = l[j]\n            j-=1\n        elif(l[i] > l[j] and l[i] > temp):\n            \n            k.append(\"L\")\n            temp = l[i]\n            i+=1\n        elif(l[i] < l[j] and l[j] > temp):\n            \n            k.append(\"R\")\n            temp = l[j]\n            j-=1\n        else:\n            break\n        \n        \n        ans+=1\nprint(ans)\nfor i in k:\n    print(i, end = \"\")\nprint(\"\")"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nai=list(map(int,input().split()))\nans=[0]\np=0\ni=0\nj=n-1\nanss=[]\nflag=0\nwhile i<=j:\n    if ai[i]<ai[j]:\n        if ai[i]>ans[-1]:\n            ans.append(ai[i])\n            anss.append(\"L\")\n            i+=1\n        elif ai[j]>ans[-1]:\n            ans.append(ai[j])\n            anss.append(\"R\")\n            j-=1\n        else :break\n\n    elif ai[i]>ai[j]:\n        if ai[j]>ans[-1]:\n            ans.append(ai[j])\n            anss.append(\"R\")\n            j-=1\n        elif ai[i]>ans[-1]:\n            ans.append(ai[i])\n            anss.append(\"L\")\n            i+=1\n        else:break\n    else:\n        p=i\n        flag=1\n        break\nif flag==1:\n    left=[ans[-1]]\n    leftt=[]\n    right=[ans[-1]]\n    rightt=[]\n    while i<=j:\n        if ai[i]>left[-1]:\n            left.append(ai[i])\n            leftt.append(\"L\")\n            i+=1\n        else:break\n    i=p\n    while j>=i:\n        if ai[j]>right[-1]:\n            right.append(ai[j])\n            rightt.append(\"R\")\n            j-=1\n        else:break\n\n    if len(left)>len(right):\n        anss+=leftt\n    else:anss+=rightt\nprint(len(anss))\nprint(\"\".join(anss))"
        },
        {
            "language": 3,
            "solution": "import sys\n\nN = int(input())\nnums = list(map(int, input().split(' ')))\n\nres = []\ncurr = 0\nleft = 0\nright = N - 1\nwhile True:\n    if nums[left] <= curr or nums[right] <= curr or nums[left] == nums[right]:\n        break\n    if (nums[left] < nums[right]):\n        res.append('L')\n        curr = nums[left]\n        left += 1\n    elif (nums[left] > nums[right]):\n        res.append('R')\n        curr = nums[right]\n        right -= 1\n\nif left == right and nums[left] > curr:\n    res.append('L')\n    print(len(res))\n    print(''.join(res))\n    sys.exit(0)\n\ns = [0, 0]\ntemp_left = left\ntemp_curr = curr\nwhile True:\n    if temp_left >= right:\n        break\n    if nums[temp_left] > temp_curr:\n        s[0] += 1\n        temp_curr = nums[temp_left]\n        temp_left += 1\n    else:\n        break\n\ntemp_right = right\ntemp_curr = curr\nwhile True:\n    if temp_right <= left:\n        break\n    if nums[temp_right] > temp_curr:\n        s[1] += 1\n        temp_curr = nums[temp_right]\n        temp_right -= 1\n    else:\n        break\nif s[0] > s[1]:\n    res.append('L' * s[0])\nelse:\n    res.append('R' * s[1])\n\nres = ''.join(res)\nprint(len(res))\nprint(res)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        Scan s = new Scan();\n        int n = s.scanInt();\n        int[] arr = new int[n];\n        for(int i=0;i<arr.length;++i) arr[i] = s.scanInt();\n        solve(arr,n);\n    }\n    \n    private static void solve(int[] arr,int n){\n       int left = 0,right = n-1;\n       StringBuilder res = new StringBuilder(\"\");\n       int len = 0,prev = 0;\n       while(left <= right){\n           if(arr[left] == arr[right] && arr[left] > prev){\n                int cnt1 = 1,cnt2 = 1;\n                for(int j=left+1;j<right;++j){\n                    if(arr[j] > arr[j-1]) cnt1++;\n                    else break;\n                }\n                \n                for(int j=right-1;j>left;--j){\n                    if(arr[j] > arr[j+1]) cnt2++;\n                    else break;\n                }\n                \n                if(cnt1 >= cnt2){\n                   res.append(\"L\");\n                   prev = arr[left++];\n                }else{\n                   res.append(\"R\");\n                    prev = arr[right--];\n                }\n                \n                len++;\n                \n           }else if(arr[left] < arr[right] && arr[left] > prev){\n               res.append(\"L\");\n               prev = arr[left++];\n               len++;\n           }else if(arr[right] > prev){\n               res.append(\"R\");\n               prev = arr[right--];\n               len++;\n           }else if(arr[left] > arr[right] && arr[left] > prev){\n               res.append(\"L\");\n               prev = arr[left++];\n               len++;\n           }else{\n               break;\n           }\n       }\n       \n       System.out.println(len);\n       System.out.println(res.toString());\n       \n    }\n}\n\nclass Scan\n{\n    private byte[] buf=new byte[1024];    //Buffer of Bytes\n    private int index;\n    private InputStream in;\n    private int total;\n    public Scan()\n    {\n        in=System.in;\n    }\n    public int scan()throws IOException    //Scan method used to scan buf\n    {\n        if(total<0)\n        throw new InputMismatchException();\n        if(index>=total)\n        {\n            index=0;\n            total=in.read(buf);\n            if(total<=0)\n            return -1;\n        }\n        return buf[index++];\n    }\n    public int scanInt()throws IOException\n    {\n        int integer=0;\n        int n=scan();\n        while(isWhiteSpace(n))    //Removing starting whitespaces\n        n=scan();\n        int neg=1;\n        if(n=='-')                //If Negative Sign encounters\n        {\n            neg=-1;\n            n=scan();\n        }\n        while(!isWhiteSpace(n))\n        {\n            if(n>='0'&&n<='9')\n            {\n                integer*=10;\n                integer+=n-'0';\n                n=scan();\n            }\n            else throw new InputMismatchException();\n        }\n        return neg*integer;\n    }\n    private boolean isWhiteSpace(int n)\n    {\n        if(n==' '||n=='\\n'||n=='\\r'||n=='\\t'||n==-1)\n        return true;\n        return false;\n    }\n}"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int,raw_input().split())\nflag = False\ncnt = 0\nfront = 0\nback = n-1\ncur = -1\nans = \"\"\nwhile(front < back):\n\tL = a[front]\n\tR = a[back]\n\tif L<R:\n\t\tif L > cur:\n\t\t\tcnt+=1\n\t\t\tcur = a[front]\n\t\t\tfront+=1\n\t\t\tans += \"L\"\n\t\telif R > cur:\n\t\t\tcnt+=1\n\t\t\tcur = a[back]\n\t\t\tback-=1\n\t\t\tans += \"R\"\n\t\telse:\n\t\t\tbreak\n\telif L > R:\n\t\tif R > cur:\n\t\t\tcnt+=1\n\t\t\tcur = a[back]\n\t\t\tback-=1\n\t\t\tans += \"R\"\n\t\telif L > cur:\t\t\t\t\n\t\t\tcnt+=1\n\t\t\tcur = a[front]\n\t\t\tfront+=1\n\t\t\tans += \"L\"\n\t\telse:\n\t\t\tbreak\n\telse:\n\t\tbreak\n\nl = 0\nr = 0\ntemp = cur\nfor i in range(front,back):\n\tif a[i] > temp:\n\t\tl+=1\n\t\ttemp = a[i]\n\telse:\n\t\tbreak\ntemp = cur\nfor i in range(back,front-1,-1):\n\tif a[i] > temp:\n\t\tr+=1\n\t\ttemp = a[i]\n\telse:\n\t\tbreak\nif l > r:\n\tfor i in range(l):\n\t\tcnt+=1\n\t\tans+= \"L\"\nelse:\n\tfor i in range(r):\n\t\tcnt+=1\n\t\tans+= \"R\"\n\nprint cnt\nprint ans\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n;\n        n = scanner.nextInt();\n        int[] mass = new int[n];\n        for(int i = 0; i < n; ++i) {\n            mass[i] = scanner.nextInt();\n        }\n        int l = 0, r = n - 1, mx = 0;\n        StringBuilder sb = new StringBuilder();\n        while(r - l >= 0) {\n            int max = Math.max(mass[l], mass[r]);\n            int min = Math.min(mass[l], mass[r]);\n            if(max <= mx) {\n                break;\n            }\n\n            if(min == max) {\n                //try left\n                int hmx = mx;\n                StringBuilder lsb = new StringBuilder();\n                int hl = l;\n                while(hl <= r && hmx < mass[hl]) {\n                    lsb.append('L');\n                    hmx = mass[hl];\n                    hl++;\n                }\n\n                hmx = mx;\n                //try right\n                StringBuilder rsb = new StringBuilder();\n                int hr = r;\n                while(hr >= l && hmx < mass[hr]) {\n                    rsb.append('R');\n                    hmx = mass[hr];\n                    hr--;\n                }\n\n                String sl = lsb.toString(), sr = rsb.toString();\n                String ans = sb.toString();\n                if(sl.length() > sr.length()) {\n                    System.out.println(ans.length() + sl.length());\n                    System.out.print(ans);\n                    System.out.print(sl);\n                } else {\n                    System.out.println(ans.length() + sr.length());\n                    System.out.print(ans);\n                    System.out.print(sr);\n                }\n                return;\n            }\n\n            if(min > mx) {\n                if(min == mass[l]) {\n                    mx = mass[l];\n                    l++;\n                    sb.append('L');\n                } else {\n                    mx = mass[r];\n                    r--;\n                    sb.append('R');\n                }\n            } else {\n                if(max == mass[l]) {\n                    mx = mass[l];\n                    l++;\n                    sb.append('L');\n                } else {\n                    mx = mass[r];\n                    r--;\n                    sb.append('R');\n                }\n            }\n        }\n        String ans = sb.toString();\n        System.out.println(ans.length());\n        System.out.print(ans);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\n\npublic class Main {\n\t\n\tstatic InputReader in = new InputReader(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tstatic int MOD = 1000000007;\n\tstatic int M = 505;\n\tstatic int oo = (int)1e9;\n\t\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\tint n = in.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i=0; i<n; ++i) {\n\t\t\tarr[i] = in.nextInt();\n\t\t}\n\n\t\tint[] left = new int[n];\n\t\tint[] right = new int[n];\n\t\t\n\t\tleft[0] = 1;\n\t\tfor(int i=1; i < n; ++i) {\n\t\t\tif(arr[i-1] > arr[i])\n\t\t\t\tleft[i] = left[i-1] + 1;\n\t\t\telse\n\t\t\t\tleft[i] = 1;\n\t\t}\n\t\t\n\t\tright[n-1] = 1;\n\t\tfor(int i = n-2; i >= 0; --i) {\n\t\t\tif(arr[i] < arr[i+1])\n\t\t\t\tright[i] = right[i+1] + 1;\n\t\t\telse\n\t\t\t\tright[i] = 1;\n\t\t}\n\t\t\n\t\t\n\t\tint x = 0;\n//\t\tArrayList<Character> ans = new ArrayList<>();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint i = 0, j = n-1;\n\t\twhile(i <= j) {\n\t\t\tint l = arr[i];\n\t\t\tint r = arr[j];\n\t\t\t\n\t\t\tif(l > x && r > x) {\n\t\t\t\tif(l > r) {\n\t\t\t\t\tj--;\n//\t\t\t\t\tans.add('R');\n\t\t\t\t\tsb.append('R');\n\t\t\t\t\tx = r;\n\t\t\t\t}\n\t\t\t\telse if(l < r) {\n\t\t\t\t\ti++;\n//\t\t\t\t\tans.add('L');\n\t\t\t\t\tsb.append('L');\n\t\t\t\t\tx = l;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(right[i] > left[j]) {\n\t\t\t\t\t\ti++;\n//\t\t\t\t\t\tans.add('L');\n\t\t\t\t\t\tsb.append('L');\n\t\t\t\t\t\tx = l;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tj--;\n//\t\t\t\t\t\tans.add('R');\n\t\t\t\t\t\tsb.append('R');\n\t\t\t\t\t\tx = r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(l > x) {\n\t\t\t\ti++;\n//\t\t\t\tans.add('L');\n\t\t\t\tsb.append('L');\n\t\t\t\tx = l;\n\t\t\t}\n\t\t\telse if(r > x) {\n\t\t\t\tj--;\n//\t\t\t\tans.add('R');\n\t\t\t\tsb.append('R');\n\t\t\t\tx = r;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t\t\n\t\t\t\n//\t\t\tif(l > r) {\n//\t\t\t\tif(x >= l)\n//\t\t\t\t\tbreak;\n//\t\t\t\tif(r > x) {\n//\t\t\t\t\tj--;\n//\t\t\t\t\tans.add('R');\n//\t\t\t\t\tx = r;\n//\t\t\t\t}\n//\t\t\t\telse {\n//\t\t\t\t\ti++;\n//\t\t\t\t\tans.add('L');\n//\t\t\t\t\tx = l;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\telse if(l < r) {\n//\t\t\t\tif(x >= r)\n//\t\t\t\t\tbreak;\n//\t\t\t\tif(l > x) {\n//\t\t\t\t\ti++;\n//\t\t\t\t\tans.add('L');\n//\t\t\t\t\tx = l;\n//\t\t\t\t}\n//\t\t\t\telse {\n//\t\t\t\t\tj--;\n//\t\t\t\t\tans.add('R');\n//\t\t\t\t\tx = r;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\telse {\n//\t\t\t\tif(x >= l)\n//\t\t\t\t\tbreak;\n//\t\t\t\tif(right[i] > left[j]) {\n//\t\t\t\t\ti++;\n//\t\t\t\t\tans.add('L');\n//\t\t\t\t\tx = l;\n//\t\t\t\t}\n//\t\t\t\telse {\n//\t\t\t\t\tj--;\n//\t\t\t\t\tans.add('R');\n//\t\t\t\t\tx = r;\n//\t\t\t\t}\n//\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(sb.length());\n\t\tSystem.out.println(sb);\n\t\t\n//\t\tSystem.out.println(ans.size());\n//\t\tfor(char c : ans)\n//\t\t\tSystem.out.print(c);\n\t\t\n\t\tout.close();\n\t}\n\t\n\t\n\t\n\tstatic void shuffle(int[] a) {\n\t\tRandom r = new Random();\n\t\tfor(int i = a.length - 1; i > 0; --i) {\n\t\t\tint si = r.nextInt(i);\n\t\t\tint t = a[si];\n\t\t\ta[si] = a[i];\n\t\t\ta[i] = t;\n\t\t}\n\t}\n\t\n\tstatic int lower_bound(int[] a, int n, int k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\tstatic int lower_bound(long[] a, int n, long k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\t\n\tstatic int gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\tstatic long gcd(long a, long b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\t\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint first, second;\n\n\t\tpublic Pair(int first, int second) {\n\t\t\tsuper();\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.first != o.first ? this.first - o.first : this.second - o.second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + first;\n\t\t\tresult = prime * result + second;\n\t\t\treturn result;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tPair other = (Pair) obj;\n\t\t\tif (first != other.first)\n\t\t\t\treturn false;\n\t\t\tif (second != other.second)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n}\n\n\n\nclass InputReader {\n\n\tprivate final InputStream stream;\n\tprivate final byte[] buf = new byte[8192];\n\tprivate int curChar, snumChars;\n\n\tpublic InputReader(InputStream st) {\n\t\tthis.stream = st;\n\t}\n\n\tpublic int read() {\n\t\tif (snumChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= snumChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (snumChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int nextInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic long nextLong() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic int[] nextIntArray(int n) {\n\t\tint a[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt();\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic String readString() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic String nextLine() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isEndOfLine(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tprivate boolean isEndOfLine(int c) {\n\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class CFP {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int start = 0;\n        int end = scan.nextInt();\n        int[] sequence = new int[end--];\n        for (int i=0; i<sequence.length; i++) {\n            sequence[i] = scan.nextInt();\n        }\n        char[] answer = new char[sequence.length+1];\n        \n        int last = 0;\n        int i;\n        for (i=0; i<sequence.length; i++) {\n            if (sequence[start] < sequence[end]) {\n                if (sequence[start] > last) {\n                    last = sequence[start++];\n                    answer[i] = 'L';\n                } else if (sequence[end] > last) {\n                    last = sequence[end--];\n                    answer[i] = 'R';\n                } else {\n                    break;\n                }\n            } else if (sequence[end] < sequence[start]) {\n                if (sequence[end] > last) {\n                    last = sequence[end--];\n                    answer[i] = 'R';\n                } else if (sequence[start] > last) {\n                    last = sequence[start++];\n                    answer[i] = 'L';\n                } else {\n                    break;\n                }\n            } else {\n                if (sequence[start] > last) {\n                    int left = 1;\n                    int right = 1;\n                    if (start != end) {\n                        while (sequence[start+left] > sequence[start+left-1]) {\n                            left++;\n                        }\n                        while (sequence[end-right] > sequence[end-right+1]) {\n                            right++;\n                        }\n                    }\n                    if (left > right) {\n                        int limit = i+left;\n                        for (; i<limit; i++) {\n                            answer[i] = 'L';\n                        }\n                    } else {\n                        int limit = i+right;\n                        for (; i<limit; i++) {\n                            answer[i] = 'R';\n                        }\n                    }\n                }\n                break;\n            }\n        }\n        System.out.println(i);\n        System.out.println(String.copyValueOf(answer, 0, i));\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid fff(vector<int> &v, int s, int e, string &ss, int &pre) {\n  if (s == e && v[s] > pre) {\n    ss.push_back('L');\n    return;\n  }\n  if (s == e) {\n    return;\n  }\n  if (v[s] < pre && v[e] < pre) {\n    return;\n  }\n  if (v[s] == v[e] && pre == v[s]) {\n    return;\n  }\n  if (v[s] == v[e] && v[s] > pre) {\n    string os = ss;\n    int op = pre;\n    string s1 = \"\";\n    string s2 = \"\";\n    s1.push_back('L');\n    s2.push_back('R');\n    pre = v[s];\n    fff(v, s + 1, e, s1, pre);\n    pre = v[e];\n    fff(v, s, e - 1, s2, pre);\n    if (s1.size() < s2.size()) {\n      ss = ss + s2;\n      return;\n    } else {\n      ss = ss + s1;\n      return;\n    }\n  }\n  int mi = min(v[s], v[e]);\n  if (mi > pre) {\n    if (mi == v[s]) {\n      ss.push_back('L');\n      pre = v[s];\n      fff(v, s + 1, e, ss, pre);\n    } else {\n      ss.push_back('R');\n      pre = v[e];\n      fff(v, s, e - 1, ss, pre);\n    }\n  } else if (mi <= pre) {\n    int ma = max(v[s], v[e]);\n    if (ma > pre) {\n      if (ma == v[s]) {\n        ss.push_back('L');\n        pre = v[s];\n        fff(v, s + 1, e, ss, pre);\n      } else {\n        ss.push_back('R');\n        pre = v[e];\n        fff(v, s, e - 1, ss, pre);\n      }\n    }\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  vector<int> v(n, 0);\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n  }\n  if (n == 1) {\n    cout << \"1\" << endl;\n    cout << \"L\";\n    return 0;\n  }\n  int s = 0, e = n - 1;\n  int pre = 0;\n  if (v[0] != v[n - 1]) {\n    int m = min(v[0], v[n - 1]);\n    string ss = \"\";\n    if (m == v[0]) {\n      pre = v[0];\n      s = 1;\n      ss.push_back('L');\n    } else {\n      e = n - 2;\n      pre = v[n - 1];\n      ss.push_back('R');\n    }\n    fff(v, s, e, ss, pre);\n    cout << ss.size() << endl;\n    cout << ss;\n  } else {\n    string s1 = \"\";\n    string s2 = \"\";\n    s1.push_back('L');\n    s2.push_back('R');\n    pre = v[0];\n    fff(v, s + 1, e, s1, pre);\n    pre = v[n - 1];\n    fff(v, s, e - 1, s2, pre);\n    if (s1.size() < s2.size()) {\n      cout << s2.size() << endl;\n      cout << s2;\n      return 0;\n    } else {\n      cout << s1.size() << endl;\n      cout << s1;\n      return 0;\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\nstart=0\nend=n-1\npos=0\ns=[]\nwhile start<=end:\n    if a[start]==a[end]:\n        if a[start]>pos:\n            counter1=counter2=1\n            for i in range(start+1,end+1):\n                if a[i]>a[i-1]:\n                    counter1+=1\n                else:\n                    break\n                i+=1\n            for i in range(end-1,start-1,-1):\n                if a[i]>a[i+1]:\n                    counter2+=1\n                else:\n                    break\n                i-=1\n            if counter1>counter2:\n                for i in range(counter1):\n                    s.append('L')\n            else:\n                for i in range(counter2):\n                    s.append('R')\n        break                 \n    elif a[start]<a[end] and a[start]>pos:\n        s.append('L')\n        pos=a[start]\n        start+=1\n    elif a[end]>pos:\n        s.append('R')\n        pos=a[end]\n        end-=1\n    elif a[start]>pos:\n        s.append('L')\n        pos=a[start]\n        start+=1\n    else:\n        break\nprint(len(s))\nprint(*s,sep='')\n"
        },
        {
            "language": 3,
            "solution": "def f(lis, x):\n    if lis[0] <= x and lis[-1] <= x:\n        return 0\n    cnt = 1\n    if lis[0] > x:\n        for i in range(1, len(lis)):\n            if lis[i] > lis[i-1]:\n                cnt += 1\n            else: break\n    if lis[-1] > x:\n        for i in range(len(lis)-1, 0, -1):\n            if lis[i-1] > lis[i]:\n                cnt += 1\n            else: break\n    return cnt\nn = int(input())\ns = list(map(int, input().split()))\ni, j = 0, n -1\nres = [[0,'']]\nbo = False\nwhile(i <= n-1 and j >= 0):\n    if s[i] == s[j] and i != j and s[i] > res[-1][0]:\n        bo = True \n        break\n    if max(s[i], s[j]) <= res[-1][0]:\n        break\n    else: \n        if s[i] < s[j]:\n            if s[i] > res[-1][0]:\n                res.append([s[i], 'L'])\n                i += 1\n            else:\n                res.append([s[j], 'R'])\n                j -= 1\n        else: \n            if s[j] > res[-1][0]:\n                res.append([s[j], 'R'])\n                j -= 1\n            else:\n                res.append([s[i], 'L'])\n                i += 1\nif bo:\n    cnt1 = f(s[i+1:j+1], s[i])\n    cnt2 = f(s[i:j], s[j])\n    if cnt1 >= cnt2: \n        for k in range(cnt1 + 1): res.append('L')\n    else: \n        for k in range(cnt2 + 1): res.append('R')\nprint(len(res)-1)\nfor i in res[1:]:\n    print(i[-1], end = '')\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 1e18 + 1LL;\nconst long long mod = 1e9 + 7LL;\nvoid solve();\nvoid ITO();\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ITO();\n  long long t = 1;\n  while (t--) solve();\n  return 0;\n}\nconst long long N = (1e6 + 5);\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long arr[n];\n  for (auto &x : arr) cin >> x;\n  string res;\n  long long last = 0, i = 0, j = n - 1;\n  while (i <= j) {\n    if (arr[i] > last and arr[j] > last) {\n      if (arr[i] < arr[j])\n        res += 'L', last = arr[i++];\n      else if (arr[j] < arr[i])\n        res += 'R', last = arr[j--];\n      else {\n        string frwd = \"L\", bkwd = \"R\";\n        for (long long k = i + 1; k <= j; k++) {\n          if (arr[k] > arr[k - 1])\n            frwd += \"L\";\n          else\n            break;\n        }\n        for (long long k = j - 1; k >= i; k--) {\n          if (arr[k] > arr[k + 1])\n            bkwd += \"R\";\n          else\n            break;\n        }\n        if (frwd.size() > bkwd.size())\n          res += frwd;\n        else\n          res += bkwd;\n        break;\n      }\n    } else if (arr[i] > last)\n      res += 'L', last = arr[i++];\n    else if (arr[j] > last)\n      res += 'R', last = arr[j--];\n    else\n      break;\n  }\n  cout << res.size() << \"\\n\" << res;\n  cout << \"\\n\";\n  return;\n}\nvoid ITO() {}\n"
        },
        {
            "language": 3,
            "solution": "import math\nimport collections\nimport bisect\n \n \n \ndef cint() : return list(map(int, input().split())) \ndef cstr() : return list(map(str, input().split(' '))) \n \n \ndef solve():\n    n = int(input())\n    lst = cint()\n \n    start = 0\n    end = n-1\n \n    ans = ''\n    slen = 0\n    prev = -1\n    while start <= end:\n        # print(start, end)\n        if start==end:\n            if lst[start] > prev:\n                start+=1\n                ans += 'L'\n                slen += 1\n                print(slen)\n                print(ans)\n                return\n            else:\n                start+=1\n        \n        if lst[start]==lst[end]:\n            fcount = 0\n            fstring =''\n            findx = start\n            bcount = 0\n            bindx = end\n            bstring = ''\n\n            prevval = prev\n            while findx <end:\n                if lst[findx] > prevval:\n                    prevval = lst[findx]\n                    fcount+=1\n                    fstring += 'L'\n                    findx+=1\n                else: break\n                \n            prevval = prev\n            while bindx> start:\n                if lst[bindx] > prevval:\n                    prevval = lst[bindx]\n                    bcount+=1\n                    bstring += 'R'\n                    bindx-=1\n                else: break\n\n            \n            if fcount > bcount:\n                slen += fcount\n                ans += fstring\n                print(slen)\n                print(ans)\n                return\n            \n            else:\n                slen += bcount\n                ans += bstring\n                print(slen)\n                print(ans)\n                return\n            \n\n            \n\n\n\n\n \n        if prev == -1:\n            if lst[start] < lst[end]:\n                prev = lst[start]\n                start+=1\n                ans += 'L'\n            elif lst[start] > lst[end]:\n                prev = lst[end]\n                end-=1\n                ans+='R'\n            \n            slen += 1\n            \n            \n        \n        else:\n            if lst[start] < lst[end]:\n                if lst[start] > prev:\n                    prev = lst[start]\n                    start+=1\n                    ans+= 'L'\n                    slen+=1\n \n                elif lst[end] > prev:\n                    prev = lst[end]\n                    end-=1\n                    ans+='R'\n                    slen+=1\n                \n                else:\n                    print(slen)\n                    print(ans)\n                    return\n                    \n \n \n            elif lst[start] > lst[end]:\n                if lst[end] > prev:\n                    prev = lst[end]\n                    end-=1\n                    ans+= 'R'\n                    slen+=1\n \n                elif lst[start] > prev:\n                    prev = lst[start]\n                    start+=1\n                    ans+='L'\n                    slen+=1\n                \n                else:\n                    print(slen)\n                    print(ans)\n                    return\n        \n        \n    print(slen)\n    print(ans)\n \n            \n \n    \n    \n    \n   \n    \n \nif __name__ == \"__main__\":\n    # t = int(input())\n    t = 1\n    while t!=0:\n        solve()\n        t-=1"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n//package Round555;\n\nimport java.util.Scanner;\n\n/**\n *\n * @author dreamer\n */\npublic class C2IncreasingSequence {\n\n    public static void main(String[] args) {\n        int n;\n        int[] arr;\n        Scanner inp = new Scanner(System.in);\n\n        n = inp.nextInt();\n        arr = new int[n];\n\n        for (int i = 0; i < n; i++) {\n            arr[i] = inp.nextInt();\n        }\n\n        StringBuilder s = new StringBuilder();\n        int i = 0, j = n - 1, temp;\n\n        if (arr[i] == arr[j]) {\n            int mi = 1, mj = 1;\n            for (int k = i + 1; k < j && arr[k] > arr[k - 1]; k++) {\n                mi++;\n            }\n            for (int k = j - 1; k > i && arr[k] > arr[k + 1]; k--) {\n                mj++;\n            }\n            if (mi > mj) {\n                while (mi-- > 0) {\n                    s.append(\"L\");\n                }\n            } else {\n                while (mj-- > 0) {\n                    s.append(\"R\");\n                }\n            }\n            System.out.println(s.length());\n            System.out.println(s);\n            return;\n        } else if (arr[i] > arr[j]) {\n            temp = arr[j];\n            j--;\n            s.append(\"R\");\n        } else {\n            temp = arr[i];\n            i++;\n            s.append(\"L\");\n        }\n        while (i <= j) {\n            if (arr[i] == arr[j] && arr[i] > temp) {\n                int mi = 1, mj = 1;\n                for (int k = i + 1; k < j && arr[k] > arr[k - 1]; k++) {\n                    mi++;\n                }\n                for (int k = j - 1; k > i && arr[k] > arr[k + 1]; k--) {\n                    mj++;\n                }\n                if (mi > mj) {\n                    while (mi-- > 0) {\n                        s.append(\"L\");\n                    }\n                } else {\n                    while (mj-- > 0) {\n                        s.append(\"R\");\n                    }\n                }\n                break;\n            } else if (arr[i] < arr[j]) {\n                if (arr[i] > temp) {\n                    temp = arr[i];\n                    i++;\n                    s.append(\"L\");\n                } else if (arr[j] > temp) {\n                    temp = arr[j];\n                    j--;\n                    s.append(\"R\");\n                } else {\n                    break;\n                }\n            } else {\n                if (arr[j] > temp) {\n                    temp = arr[j];\n                    j--;\n                    s.append(\"R\");\n                } else if (arr[i] > temp) {\n                    temp = arr[i];\n                    i++;\n                    s.append(\"L\");\n                } else {\n                    break;\n                }\n            }\n        }\n        System.out.println(s.length());\n        System.out.println(s);\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, ans, k, d, cnt1, cnt2, l, r;\nint a[200050];\nstruct node {\n  int x, b;\n};\nnode s[200050];\nint main() {\n  k = 1;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  l = 1, r = n, s[0].x = 0;\n  d = 0;\n  while ((a[l] > s[d].x || a[r] > s[d].x) && l <= r) {\n    if (a[l] != a[r]) {\n      if (a[l] < a[r] && a[l] > s[d].x || (a[l] > a[r] && a[r] <= s[d].x)) {\n        d++;\n        s[d].x = a[l];\n        s[d].b = 0;\n        ans = d;\n        l++;\n        continue;\n      }\n      if (a[r] > s[d].x) {\n        d++;\n        s[d].x = a[r];\n        s[d].b = 1;\n        ans = d;\n        r--;\n        continue;\n      }\n    }\n    if (a[l] == a[r] && l != r) {\n      k = 0;\n      cnt1 = 0, cnt2 = 0;\n      for (int j = l; j <= r - 1; ++j) {\n        if (a[j + 1] > a[j])\n          cnt1++;\n        else\n          break;\n      }\n      for (int j = r; j >= l + 1; --j) {\n        if (a[j] < a[j - 1])\n          cnt2++;\n        else\n          break;\n      }\n      if (cnt1 >= cnt2) {\n        ans += cnt1 + 1;\n        printf(\"%d\\n\", ans);\n        for (int j = 1; j <= ans - cnt1 - 1; ++j) {\n          if (s[j].b == 0)\n            printf(\"L\");\n          else\n            printf(\"R\");\n        }\n        for (int j = 0; j < cnt1 + 1; ++j) {\n          printf(\"L\");\n        }\n        break;\n      }\n      if (cnt1 < cnt2) {\n        ans += cnt2 + 1;\n        printf(\"%d\\n\", ans);\n        for (int j = 1; j <= ans - cnt2 - 1; ++j) {\n          if (s[j].b == 0)\n            printf(\"L\");\n          else\n            printf(\"R\");\n        }\n        for (int j = 0; j < cnt2 + 1; ++j) {\n          printf(\"R\");\n        }\n        break;\n      }\n    }\n    if (l == r && k == 1) {\n      ans++;\n      s[ans].b = 1;\n      break;\n    }\n  }\n  if (k == 1) {\n    printf(\"%d\\n\", ans);\n    for (int i = 1; i <= ans; ++i) {\n      if (s[i].b == 0)\n        printf(\"L\");\n      else\n        printf(\"R\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\nimport java.math.BigInteger;\n\npublic class C2 {\n\n    public static void main(String[] args) throws Exception {\n        FastScanner scanner = new FastScanner();\n        int n = scanner.nextInt();\n        int[] seq = scanner.nextIntArray();\n\n        int index = 0;\n        char[] lr = new char[n];\n\n        int left = 0;\n        int right = n - 1;\n        int last = -1;\n\n        while (left <= right) {\n            // System.out.println(seq[left] + \" \" + seq[right] + \" \" + left + \" \" + right);\n            if (seq[left] == seq[right] && left != right && seq[left] > last) {\n                // System.out.println(seq[left] + \" \" + seq[right]);\n                int v1, v2;\n                v1 = v2 = 0;\n                for (int i = left + 1; i <= right; i++) {\n                    if (seq[i] > seq[i - 1])\n                        v1++;\n                    else\n                        break;\n                }\n                for (int i = right - 1; i >= left; i--) {\n                    if (seq[i + 1] < seq[i])\n                        v2++;\n                    else\n                        break;\n                }\n                if (v1 > v2) {\n                    lr[index++] = 'L';\n                    for (int i = 0; i < v1; i++) {\n                        lr[index++] = 'L';\n                    }\n                } else {\n                    lr[index++] = 'R';\n                    for (int i = 0; i < v2; i++) {\n                        lr[index++] = 'R';\n                    }\n                }\n                break;\n            }\n            int el;\n            if (min(seq[left], seq[right]) > last) {\n                el = min(seq[left], seq[right]);\n            } else if (max(seq[left], seq[right]) > last){\n                el = max(seq[left], seq[right]);\n            } else\n                break;\n\n            last = el;\n\n            if (el == seq[left]) {\n                left++;\n                lr[index++] = 'L';\n            }\n            else {\n                right--;\n                lr[index++] = 'R';\n            }\n        }\n\n        System.out.println(index);\n        for (int i = 0; i < index; i++) {\n            System.out.print(lr[i]);\n        }\n        System.out.println();\n    }\n\n\n    private static class FastScanner {\n        private BufferedReader br;\n\n        public FastScanner() { br = new BufferedReader(new InputStreamReader(System.in)); }\n        public int[] nextIntArray() throws IOException {\n            String line = br.readLine();\n            String[] strings = line.trim().split(\"\\\\s+\");\n            int[] array = new int[strings.length];\n            for (int i = 0; i < array.length; i++)\n                array[i] = Integer.parseInt(strings[i]);\n            return array;\n        }\n        public int nextInt() throws IOException { return Integer.parseInt(br.readLine()); }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n=sc.nextInt();\n\t\tint []a=new int [n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\ta[i]=sc.nextInt();\n\t\tint i=0,j=n-1;\n\t\tint last=0;\n\t\tArrayList<Character> ans=new ArrayList();\n\t\twhile(i<=j) {\n\t\t\tint min=Math.min(a[i], a[j]);\n\t\t\tif(a[i]==a[j] && min>last) {\n\t\t\t\tint left=1,right=1;\n\t\t\t\tfor(int k=i+1;k<=j && a[k]>a[k-1];k++)\n\t\t\t\t\tleft++;\n\t\t\t\tfor(int k=j-1;k>=i && a[k]>a[k+1];k--)\n\t\t\t\t\tright++;\n\t\t\t\tint max=Math.max(left, right);\n\t\t\t\twhile(max-->0)\n\t\t\t\t\tans.add(left>right?'L':'R');\n\t\t\t\t\t\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(min>last) {\n\t\t\t\tif(a[i]==min) {\n\t\t\t\t\tans.add('L');\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans.add('R');\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\tlast=min;\n\t\t\t}\n\t\t\telse if(a[i]>last )\n\t\t\t{\n\t\t\t\tans.add('L');\n\t\t\t\tlast=a[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse if(a[j]>last) {\n\t\t\t\tans.add('R');\n\t\t\t\tlast=a[j];\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\t\n\t\tout.println(ans.size());\n\t\tfor(char c:ans)\n\t\t\tout.print(c);\n\t\t\n\t\tout.close();\n\n\t}\n\n\tstatic class Scanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tScanner(String fileName) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(fileName));\n\t\t}\n\n\t\tString next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tString nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tint nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() throws NumberFormatException, IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() throws NumberFormatException, IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\n\npublic class Main {\n\t\n\tstatic InputReader in = new InputReader(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tstatic int MOD = 1000000007;\n\tstatic int M = 505;\n\tstatic int oo = (int)1e9;\n\t\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\tint n = in.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i=0; i<n; ++i) {\n\t\t\tarr[i] = in.nextInt();\n\t\t}\n\n\t\tint[] left = new int[n];\n\t\tint[] right = new int[n];\n\t\t\n\t\tleft[0] = 1;\n\t\tfor(int i=1; i < n; ++i) {\n\t\t\tif(arr[i-1] > arr[i])\n\t\t\t\tleft[i] = left[i-1] + 1;\n\t\t\telse\n\t\t\t\tleft[i] = 1;\n\t\t}\n\t\t\n\t\tright[n-1] = 1;\n\t\tfor(int i = n-2; i >= 0; --i) {\n\t\t\tif(arr[i] < arr[i+1])\n\t\t\t\tright[i] = right[i+1] + 1;\n\t\t\telse\n\t\t\t\tright[i] = 1;\n\t\t}\n\t\t\n\t\t\n\t\tint x = 0;\n\t\tArrayList<Character> ans = new ArrayList<>();\n\t\tint i = 0, j = n-1;\n\t\twhile(i <= j) {\n\t\t\tint l = arr[i];\n\t\t\tint r = arr[j];\n\t\t\t\n\t\t\tif(l > x && r > x) {\n\t\t\t\tif(l > r) {\n\t\t\t\t\tj--;\n\t\t\t\t\tans.add('R');\n\t\t\t\t\tx = r;\n\t\t\t\t}\n\t\t\t\telse if(l < r) {\n\t\t\t\t\ti++;\n\t\t\t\t\tans.add('L');\n\t\t\t\t\tx = l;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(right[i] > left[j]) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tans.add('L');\n\t\t\t\t\t\tx = l;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tj--;\n\t\t\t\t\t\tans.add('R');\n\t\t\t\t\t\tx = r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(l > x) {\n\t\t\t\ti++;\n\t\t\t\tans.add('L');\n\t\t\t\tx = l;\n\t\t\t}\n\t\t\telse if(r > x) {\n\t\t\t\tj--;\n\t\t\t\tans.add('R');\n\t\t\t\tx = r;\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t\t\n\t\t\t\n//\t\t\tif(l > r) {\n//\t\t\t\tif(x >= l)\n//\t\t\t\t\tbreak;\n//\t\t\t\tif(r > x) {\n//\t\t\t\t\tj--;\n//\t\t\t\t\tans.add('R');\n//\t\t\t\t\tx = r;\n//\t\t\t\t}\n//\t\t\t\telse {\n//\t\t\t\t\ti++;\n//\t\t\t\t\tans.add('L');\n//\t\t\t\t\tx = l;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\telse if(l < r) {\n//\t\t\t\tif(x >= r)\n//\t\t\t\t\tbreak;\n//\t\t\t\tif(l > x) {\n//\t\t\t\t\ti++;\n//\t\t\t\t\tans.add('L');\n//\t\t\t\t\tx = l;\n//\t\t\t\t}\n//\t\t\t\telse {\n//\t\t\t\t\tj--;\n//\t\t\t\t\tans.add('R');\n//\t\t\t\t\tx = r;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\telse {\n//\t\t\t\tif(x >= l)\n//\t\t\t\t\tbreak;\n//\t\t\t\tif(right[i] > left[j]) {\n//\t\t\t\t\ti++;\n//\t\t\t\t\tans.add('L');\n//\t\t\t\t\tx = l;\n//\t\t\t\t}\n//\t\t\t\telse {\n//\t\t\t\t\tj--;\n//\t\t\t\t\tans.add('R');\n//\t\t\t\t\tx = r;\n//\t\t\t\t}\n//\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans.size());\n\t\tfor(char c : ans)\n\t\t\tSystem.out.print(c);\n\t\t\n\t\tout.close();\n\t}\n\t\n\t\n\t\n\tstatic void shuffle(int[] a) {\n\t\tRandom r = new Random();\n\t\tfor(int i = a.length - 1; i > 0; --i) {\n\t\t\tint si = r.nextInt(i);\n\t\t\tint t = a[si];\n\t\t\ta[si] = a[i];\n\t\t\ta[i] = t;\n\t\t}\n\t}\n\t\n\tstatic int lower_bound(int[] a, int n, int k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\tstatic int lower_bound(long[] a, int n, long k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\t\n\tstatic int gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\tstatic long gcd(long a, long b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\t\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint first, second;\n\n\t\tpublic Pair(int first, int second) {\n\t\t\tsuper();\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.first != o.first ? this.first - o.first : this.second - o.second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + first;\n\t\t\tresult = prime * result + second;\n\t\t\treturn result;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tPair other = (Pair) obj;\n\t\t\tif (first != other.first)\n\t\t\t\treturn false;\n\t\t\tif (second != other.second)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n}\n\n\n\nclass InputReader {\n\n\tprivate final InputStream stream;\n\tprivate final byte[] buf = new byte[8192];\n\tprivate int curChar, snumChars;\n\n\tpublic InputReader(InputStream st) {\n\t\tthis.stream = st;\n\t}\n\n\tpublic int read() {\n\t\tif (snumChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= snumChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (snumChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int nextInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic long nextLong() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic int[] nextIntArray(int n) {\n\t\tint a[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt();\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic String readString() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic String nextLine() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isEndOfLine(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tprivate boolean isEndOfLine(int c) {\n\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "\n\n/**\n * @author egaeus\n * @mail sebegaeusprogram@gmail.com\n * @veredict W.A.\n * @url <https://codeforces.com/problemset/problem/1157/C2>\n * @category greedy\n * @date Marzo, 2019\n **/\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.util.stream.Collectors;\n\nimport static java.lang.Integer.*;\n\npublic class CF1157C2 {\n    public static void main(String args[]) throws Throwable {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        for (String ln; (ln = in.readLine()) != null; ) {\n            int N = parseInt(ln);\n            int A[] = new int[N];\n            int left[] = new int[N];\n            int right[] = new int[N];\n            ArrayList<Character> list = new ArrayList<>(N);\n            StringTokenizer st = new StringTokenizer(in.readLine());\n            for (int i = 0; i < N; i++)\n                A[i] = parseInt(st.nextToken());\n            left[N - 1] = 1;\n            for (int i = N - 2; i >= 0; i--)\n                if (A[i] < A[i + 1])\n                    left[i] = left[i + 1] + 1;\n                else left[i] = 1;\n            right[0] = 1;\n            for (int i = 1; i < N; i++)\n                if (A[i] < A[i - 1])\n                    right[i] = right[i - 1] + 1;\n                else\n                    right[i] = 1;\n            int last = 0;\n            for (int i = 0, j = N - 1; i <= j; ) {\n                if (A[i] > last && (A[j] <= last || A[i] < A[j])) {\n                    list.add('L');\n                    last = A[i++];\n                } else if (A[j] > last && (A[i] <= last || A[i] > A[j])) {\n                    list.add('R');\n                    last = A[j--];\n                } else if (A[i] > last && A[i] == A[j]) {\n                    if (left[i] >= right[j]) {\n                        list.add('L');\n                        last = A[i++];\n                    } else {\n                        list.add('R');\n                        last = A[j--];\n                    }\n                } else break;\n            }\n            System.out.println(list.size());\n            System.out.println(list.stream().map(a -> a + \"\").collect(Collectors.joining(\"\")));\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "N = int(input())\na = list(map(int, input().split()))\npre = -1\nL, R = 0, N - 1\nd = []\nwhile L < N and R >= 0 and L <= R:\n    l = a[L]\n    r = a[R]\n    if pre < l and pre < r:\n        if l > r:\n            d.append('R')\n            pre = a[R]\n            R -= 1\n        elif r > l:\n            d.append('L')\n            pre = a[L]\n            L += 1\n        else:\n            d1 = []\n            d2 = []\n            R1 = R\n            L1 = L\n            pre1 = pre\n            pre2 = pre\n            while L <= R1:\n                if pre1 < a[R1]:\n                    d1.append('R')\n                    pre1 = a[R1]\n                    R1 -= 1\n                else:\n                    break\n            while L1 <= R:\n                if pre2 < a[L1]:\n                    d2.append('L')\n                    pre2 = a[L1]\n                    L1 += 1\n                else:\n                    break\n            if len(d1) > len(d2):\n                d += d1\n                break\n            else:\n                d += d2\n                break\n\n    elif pre < l:\n        d.append('L')\n        pre = a[L]\n        L += 1\n    elif pre < r:\n        d.append('R')\n        pre = a[R]\n        R -= 1\n    else:\n        break\n\nprint(len(d))\nprint(''.join(d))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 7;\nint a[N];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int l = 0, r = n - 1;\n  vector<int> ans;\n  vector<char> ans2;\n  if (a[l] < a[r]) {\n    ans.push_back(a[l]);\n    l++;\n    ans2.push_back('L');\n  } else if (a[r] < a[l]) {\n    ans.push_back(a[r]);\n    r--;\n    ans2.push_back('R');\n  } else {\n    int t1 = 1, t2 = 1;\n    for (int i = 1; i < n; i++) {\n      if (a[i] > a[i - 1])\n        t1++;\n      else\n        break;\n    }\n    for (int i = n - 1; i >= 0; i--)\n      if (a[i - 1] > a[i])\n        t2++;\n      else\n        break;\n    if (t1 >= t2) {\n      cout << t1 << endl;\n      for (int i = 0; i < t1; i++) cout << 'L';\n      cout << endl;\n      return 0;\n    } else {\n      cout << t2 << endl;\n      for (int i = 0; i < t2; i++) cout << 'R';\n      cout << endl;\n      return 0;\n    }\n  }\n  while (ans.size() < n) {\n    if ((a[l] > ans[ans.size() - 1]) && (a[r] > ans[ans.size() - 1])) {\n      if (a[l] < a[r]) {\n        ans.push_back(a[l]);\n        l++;\n        ans2.push_back('L');\n      } else if (a[r] < a[l]) {\n        ans.push_back(a[r]);\n        r--;\n        ans2.push_back('R');\n      } else {\n        int t1 = 1, t2 = 1;\n        for (int i = l; i < n; i++)\n          if (a[i + 1] > a[i])\n            t1++;\n          else\n            break;\n        for (int i = r; i >= 0; i--)\n          if (a[i - 1] > a[i])\n            t2++;\n          else\n            break;\n        if (t1 >= t2) {\n          cout << ans.size() + t1 << endl;\n          for (int i = 0; i < ans2.size(); i++) cout << ans2[i];\n          for (int i = 0; i < t1; i++) cout << 'L';\n          cout << endl;\n          return 0;\n        } else {\n          cout << ans.size() + t2 << endl;\n          for (int i = 0; i < ans2.size(); i++) cout << ans2[i];\n          for (int i = 0; i < t2; i++) cout << 'R';\n          cout << endl;\n          return 0;\n        }\n      }\n    } else if ((a[l] > ans[ans.size() - 1]) && (a[r] <= ans[ans.size() - 1])) {\n      ans.push_back(a[l]);\n      l++;\n      ans2.push_back('L');\n    } else if ((a[l] <= ans[ans.size() - 1]) && (a[r] > ans[ans.size() - 1])) {\n      ans.push_back(a[r]);\n      r--;\n      ans2.push_back('R');\n    } else\n      break;\n  }\n  cout << ans.size() << endl;\n  for (int i = 0; i < ans2.size(); i++) cout << ans2[i];\n  cout << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  vector<int> x(n);\n  for (auto &i : x) scanf(\"%d\", &i);\n  int l = 0, r = n - 1, c = 0;\n  string ans;\n  while (1) {\n    if (l > r) break;\n    if (x[l] > c && x[r] > c) {\n      if (x[l] < x[r]) {\n        ans += 'L';\n        c = x[l++];\n      } else if (x[l] > x[r]) {\n        ans += 'R';\n        c = x[r--];\n      } else {\n        int ansl = 0, ansr = 0;\n        int k = c;\n        for (int i = r; i >= l; --i) {\n          if (x[i] > c) {\n            ++ansl;\n            c = x[i];\n          } else\n            break;\n        }\n        c = k;\n        for (int i = l; i <= r; ++i) {\n          if (x[i] > c) {\n            ++ansr;\n            c = x[i];\n          } else\n            break;\n        }\n        if (ansl > ansr)\n          for (int i = 0; i < ansl; ++i) ans += 'R';\n        else\n          for (int i = 0; i < ansr; ++i) ans += 'L';\n        break;\n      }\n    } else if (x[l] > c) {\n      ans += 'L';\n      c = x[l++];\n    } else if (x[r] > c) {\n      ans += 'R';\n      c = x[r--];\n    } else\n      break;\n  }\n  printf(\"%d\\n\", ans.length());\n  cout << ans << '\\n';\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  list<unsigned int> posled;\n  unsigned int n;\n  unsigned int pred_numb = 0;\n  string res = \"\";\n  unsigned int line_ = 0;\n  cin >> n;\n  for (unsigned int i = 0; i <= n - 1; i++) {\n    unsigned int k;\n    cin >> k;\n    posled.push_back(k);\n  }\n  for (unsigned int i = 0; i <= n - 1; i++) {\n    if (posled.front() < posled.back()) {\n      if (posled.front() > pred_numb) {\n        res += 'L';\n        pred_numb = posled.front();\n        posled.pop_front();\n        line_++;\n      } else {\n        if (posled.back() > pred_numb) {\n          res += 'R';\n          pred_numb = posled.back();\n          posled.pop_back();\n          line_++;\n        }\n      }\n    } else {\n      if (posled.front() > posled.back()) {\n        if (posled.back() > pred_numb) {\n          res += 'R';\n          pred_numb = posled.back();\n          posled.pop_back();\n          line_++;\n        } else {\n          if (posled.front() > pred_numb) {\n            res += 'L';\n            pred_numb = posled.front();\n            posled.pop_front();\n            line_++;\n          }\n        }\n      } else {\n        if (posled.front() > pred_numb) {\n          unsigned int pred_numb_1 = pred_numb;\n          unsigned int pred_numb_2 = pred_numb;\n          list<unsigned int> posled_1 = posled;\n          unsigned int line_1 = 0;\n          unsigned int line_2 = 0;\n          string res_1 = \"\";\n          string res_2 = \"\";\n          while (posled_1.front() > pred_numb_1 && posled_1.empty() == false) {\n            res_1 += 'L';\n            pred_numb_1 = posled_1.front();\n            posled_1.pop_front();\n            line_1++;\n          }\n          while (posled.back() > pred_numb_2 && posled.empty() == false) {\n            res_2 += 'R';\n            pred_numb_2 = posled.back();\n            posled.pop_back();\n            line_2++;\n          }\n          if (line_1 >= line_2) {\n            line_ += line_1;\n            res += res_1;\n            break;\n          } else {\n            line_ += line_2;\n            res += res_2;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  cout << line_ << endl << res;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\n    Auther: ghoshashis545 Ashis Ghosh\n    College: Jalpaiguri Govt Enggineering College\n'''\nfrom os import path\nimport sys\nfrom functools import cmp_to_key as ctk\nfrom collections import deque,defaultdict as dd \nfrom bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil,sqrt,log,gcd\ndef ii():return int(input())\ndef si():return input()\ndef mi():return map(int,input().split())\ndef li():return list(mi())\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\n\ndef bo(i):\n    return ord(i)-ord('a')\n\n\n\ndef solve():\n    \n    \n    \n    \n    # for _ in range(ii()):\n        \n        \n    n=ii()\n    a=li()\n    b=[]\n    l=0\n    r=n-1\n    x=0\n    while(l<=r):\n        if(a[l]<=x and a[r]<=x):\n            break\n        \n        if(a[l]>x and a[r]>x):\n            if(a[l]<a[r]):\n                b.append('L')\n                x=a[l]\n                l+=1\n            elif(l!=r and a[l]==a[r]):\n                a1,b1=0,0\n                x1=x\n                for i in range(l,r):\n                    if(a[i]>x1):\n                        x1=a[i]\n                        a1+=1\n                    else:\n                        break\n                x2=x\n                for i in range(r,l,-1):\n                    if a[i]>x2:\n                        x2=a[i]\n                        b1+=1\n                    else:\n                        break\n                if(a1>b1):\n                    b+=['L']*a1\n                else:\n                    b+=['R']*b1\n                break\n            \n            else:\n                x=a[r]\n                b.append('R')\n                r-=1\n                \n                \n        elif(a[l]>x):\n            x=a[l]\n            b.append('L')\n            l+=1\n        elif(a[r]>x):\n            x=a[r]\n            b.append('R')\n            r-=1\n        else:\n            break\n    print(len(b))\n    print(''.join(b))\n    \n    \n    \n    \n    \n    \n    \n        \nif __name__ ==\"__main__\":\n    \n    solve()\n    \n"
        },
        {
            "language": 4,
            "solution": "// Utilities\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic int N;\n\tstatic Deque<Integer> dq = new ArrayDeque<Integer>();\n\tstatic int max = -1; \n\tstatic Queue<Character> resList = new LinkedList<Character>();\n\tstatic int length = 0;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tN = in.iscan();\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tdq.addLast(in.iscan());\n\t\t}\n\t\twhile (!dq.isEmpty()) {\n\t\t\tif (dq.peekFirst() < dq.peekLast()) {\n\t\t\t\tif (dq.peekFirst() > max) {\n\t\t\t\t\tmax = dq.pollFirst();\n\t\t\t\t\tlength++;\n\t\t\t\t\tresList.add('L');\n\t\t\t\t}\n\t\t\t\telse if (dq.peekLast() > max){\n\t\t\t\t\tmax = dq.pollLast();\n\t\t\t\t\tlength++;\n\t\t\t\t\tresList.add('R');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (dq.peekFirst() > dq.peekLast()){\n\t\t\t\tif (dq.peekLast() > max) {\n\t\t\t\t\tmax = dq.pollLast();\n\t\t\t\t\tlength++;\n\t\t\t\t\tresList.add('R');\n\t\t\t\t}\n\t\t\t\telse if (dq.peekFirst() > max) {\n\t\t\t\t\tmax = dq.pollFirst();\n\t\t\t\t\tlength++;\n\t\t\t\t\tresList.add('L');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { // dq.peekFirst() == dq.peekLast()\n\t\t\t\tif (dq.peekFirst() <= max) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tDeque<Integer> clone = new ArrayDeque<Integer>(dq);\n\t\t\t\tQueue<Integer> q1 = new LinkedList<Integer>();\n\t\t\t\tint last = -1;\n\t\t\t\twhile (!clone.isEmpty()) {\n\t\t\t\t\tif (clone.peekFirst() > last) {\n\t\t\t\t\t\tlast = clone.peekFirst();\n\t\t\t\t\t\tq1.add(clone.pollFirst());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclone = new ArrayDeque<Integer>(dq);\n\t\t\t\tQueue<Integer> q2 = new LinkedList<Integer>();\n\t\t\t\tlast = -1;\n\t\t\t\twhile (!clone.isEmpty()) {\n\t\t\t\t\tif (clone.peekLast() > last) {\n\t\t\t\t\t\tlast = clone.peekLast();\n\t\t\t\t\t\tq2.add(clone.pollLast());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (q1.size() >= q2.size()) {\n\t\t\t\t\tlength += q1.size();\n\t\t\t\t\tfor (int j = 0; j < q1.size(); j++) {\n\t\t\t\t\t\tresList.add('L');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlength += q2.size();\n\t\t\t\t\tfor (int j = 0; j < q2.size(); j++) {\n\t\t\t\t\t\tresList.add('R');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tout.println(length);\n\t\twhile (!resList.isEmpty()) {\n\t\t\tout.print(resList.poll());\n\t\t}\n\t\tout.println();\n\t\tout.close();\n\t} \n\t\n\tstatic INPUT in = new INPUT(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\tprivate static class INPUT {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar, numChars;\n\n\t\tpublic INPUT (InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic INPUT (String file) throws IOException {\n\t\t\tthis.stream = new FileInputStream (file);\n\t\t}\n\n\t\tpublic int cscan () throws IOException {\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\tnumChars = stream.read (buf);\n\t\t\t}\n\t\t\t\n\t\t\tif (numChars == -1)\n\t\t\t\treturn numChars;\n\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int iscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tint res = 0;\n\n\t\t\tdo {\n\t\t\t\tres = (res << 1) + (res << 3);\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic String sscan () throws IOException {\n\t\t\tint c = cscan ();\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tStringBuilder res = new StringBuilder ();\n\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint (c);\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res.toString ();\n\t\t}\n\n\t\tpublic double dscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tdouble res = 0;\n\n\t\t\twhile (!space (c) && c != '.') {\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * UTILITIES.fast_pow (10, iscan ());\n\t\t\t\t\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tif (c == '.') {\n\t\t\t\tc = cscan ();\n\t\t\t\tdouble m = 1;\n\n\t\t\t\twhile (!space (c)) {\n\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\treturn res * UTILITIES.fast_pow (10, iscan ());\n\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = cscan ();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic long lscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tlong res = 0;\n\n\t\t\tdo {\n\t\t\t\tres = (res << 1) + (res << 3);\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic boolean space (int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t}\n\n\tpublic static class UTILITIES {\n\n\t\tstatic final double EPS = 10e-6;\n\n\t\tpublic static int lower_bound (int[] arr, int x) {\n\t\t\tint low = 0, high = arr.length, mid = -1;\n\n\t\t\twhile (low < high) {\n\t\t\t\tmid = (low + high) / 2;\n\n\t\t\t\tif (arr[mid] >= x)\n\t\t\t\t\thigh = mid;\n\t\t\t\telse\n\t\t\t\t\tlow = mid + 1;\n\t\t\t}\n\n\t\t\treturn low;\n\t\t}\n\n\t\tpublic static int upper_bound (int[] arr, int x) {\n\t\t\tint low = 0, high = arr.length, mid = -1;\n\n\t\t\twhile (low < high) {\n\t\t\t\tmid = (low + high) / 2;\n\n\t\t\t\tif (arr[mid] > x)\n\t\t\t\t\thigh = mid;\n\t\t\t\telse\n\t\t\t\t\tlow = mid + 1;\n\t\t\t}\n\n\t\t\treturn low;\n\t\t}\n\n\t\tpublic static int gcd (int a, int b) {\n\t\t\treturn b == 0 ? a : gcd (b, a % b);\n\t\t}\n\n\t\tpublic static int lcm (int a, int b) {\n\t\t\treturn a * b / gcd (a, b);\n\t\t}\n\n\t\tpublic static long fast_pow_mod (long b, long x, int mod) {\n\t\t\tif (x == 0) return 1;\n\t\t\tif (x == 1) return b;\n\t\t\tif (x % 2 == 0) return fast_pow_mod (b * b % mod, x / 2, mod) % mod;\n\n\t\t\treturn b * fast_pow_mod (b * b % mod, x / 2, mod) % mod;\n\t\t}\n\n\t\tpublic static int fast_pow (int b, int x) {\n\t\t\tif (x == 0) return 1;\n\t\t\tif (x == 1) return b;\n\t\t\tif (x % 2 == 0) return fast_pow (b * b, x / 2);\n\n\t\t\treturn b * fast_pow (b * b, x / 2);\n\t\t}\n\n\t\tpublic static long choose (long n, long k) {\n\t\t\tk = Math.min (k, n - k);\n\t\t\tlong val = 1;\n\n\t\t\tfor (int i = 0; i < k; ++i)\n\t\t\t\tval = val * (n - i) / (i + 1);\n\n\t\t\treturn val;\n\t\t}\n\n\t\tpublic static long permute (int n, int k) {\n\t\t\tif (n < k) return 0;\n\t\t\tlong val = 1;\n\n\t\t\tfor (int i = 0; i < k; ++i)\n\t\t\t\tval = (val * (n - i));\n\n\t\t\treturn val;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "# list input\ndef linp(): return list(map(int, input().split()))\n\n\n# map input\ndef minp(): return map(int, input().split())\n\n\n# int input\ndef iinp(): return int(input())\n\n\n# no of testcase\ndef test(): return int(input())\n\n\n# normal input\ndef inp(): return input()\n\ndef fun(l, curr, res):\n    while l:\n        if l[0]> curr and l[-1]>curr:\n            if l[0] < l[-1]:\n                curr = l.pop(0)\n                res+= 'L'\n            elif l[-1] > l[0]:\n                curr = l.pop()\n                res += 'R'\n            else:\n                pass\n        elif l[0]> curr:\n            curr = l.pop(0)\n            res += 'L'\n        elif l[-1] > curr:\n            curr = l.pop()\n            res += 'R'\n        else:\n            break\n    return res\n\n\n\ndef solve():\n    # write your solution for one testcase\n    n = iinp()\n    l = linp()\n    curr = -1\n    res = ''\n    while l:\n        if l[0]> curr and l[-1]>curr:\n            if l[0] < l[-1]:\n                curr = l.pop(0)\n                res+= 'L'\n                n-=1\n            elif l[0] > l[-1]:\n                curr = l.pop()\n                res += 'R'\n                n-=1\n            else:\n                flag = 'L'\n                i, j = 0, n-1\n\n                counti, countj = 0, 0\n                while i < n-1 and j >0:\n                    flag1 = True\n                    if l[i+1] > l[i]:\n                        counti += 1\n                        i+=1\n                        flag1 =False\n                    if l[j-1] > l[j]:\n                        countj += 1\n                        j-=1\n                        flag1 = False\n                    if counti>countj:\n                        flag = 'L'\n                        break\n                    elif countj>counti:\n                        flag = 'R'\n                        break\n                    if flag1:\n                        break\n                # print(flag)\n                if flag == 'L':\n                    curr = l.pop(0)\n                    res += 'L'\n                else:\n                    curr = l.pop()\n                    res += 'R'\n\n        elif l[0]> curr:\n            curr = l.pop(0)\n            res += 'L'\n            n-=1\n        elif l[-1] > curr:\n            curr = l.pop()\n            res += 'R'\n            n-=1\n        else:\n            break\n    print(str(len(res)) + '\\n' + res)\n\n\n\n\n\ndef main():\n    # for _ in range(test()):\n        solve()\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces {\n    public static int a[];\n\n    public static StringBuilder f(int l, int r, int last, StringBuilder ans) {\n        if (l <= r) {\n            if (a[l] < a[r]) {\n                if (a[l] > last) {\n                    ans = f(l + 1, r, a[l], ans.append(\"L\"));\n                } else if (a[r] > last) {\n                    ans = f(l, r - 1, a[r], ans.append(\"R\"));\n                } else {\n                    return ans;\n                }\n            } else if (a[l] > a[r]) {\n                if (a[r] > last) {\n                    ans = f(l, r - 1, a[r], ans.append(\"R\"));\n                } else if (a[l] > last) {\n                    ans = f(l + 1, r, a[l], ans.append(\"L\"));\n                } else {\n                    return ans;\n                }\n            } else {\n                StringBuilder ans1 = new StringBuilder(ans);\n                StringBuilder ans2 = new StringBuilder(ans);\n                if (a[r] > last) ans1 = f(l, r - 1, a[r], ans1.append(\"R\"));\n                if (a[l] > last) ans2 = f(l + 1, r, a[l], ans2.append(\"L\"));\n                if (ans1.length() >= ans2.length()) return ans1;\n                else return ans2;\n            }\n        }\n        return ans;\n    }\n\n\n    public static void main(String[] args) throws IOException {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scan.nextInt();\n        }\n\n        StringBuilder ans = f(0, n - 1, -1, new StringBuilder(\"\"));\n        System.out.println(ans.length());\n        System.out.println(ans);\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Deque;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tprivate static int choose(Deque<Integer> queue) {\n\t\tDeque<Integer> temp = new LinkedList<>(queue);\n\t\tint last = - 1 , result1 = 0 , result2 = 0;\t\t\n\t\twhile (!temp.isEmpty() && temp.peekFirst() > last) {\n\t\t\tlast = temp.pollFirst();\n\t\t\tresult1 ++;\n\t\t}\n\t\ttemp = new LinkedList<>(queue);\n\t\tlast = - 1;\n\t\twhile (!temp.isEmpty() && temp.peekLast() > last) {\t\t\t\n\t\t\tlast = temp.pollLast();\n\t\t\tresult2 ++;\t\t\t\n\t\t}\n\t\tif (result1 > result2) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn 1;\t\t\t\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\t\t\t\t\t\t\t\n\t\tScanner scan = new Scanner(System.in);\n\t\tint i , n = scan.nextInt();\n\t\tDeque<Integer> queue = new LinkedList<>();\n\t\tfor (i = 1;i <= n;i ++) {\n\t\t\tqueue.addLast(scan.nextInt());\t\t\t\n\t\t}\n\t\tint prev = - 1;\t\t\n\t\tStringBuilder builder = new StringBuilder();\n\t\twhile (!queue.isEmpty()) {\n\t\t\tint left = queue.peekFirst() , right = queue.peekLast();\n\t\t\tif (left == right) {\n\t\t\t\tif (left > prev) {\t\t\t\t\n\t\t\t\t\tint d = choose(queue);\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\twhile (!queue.isEmpty() && queue.peekFirst() > prev) {\n\t\t\t\t\t\t\tbuilder.append(\"L\");\n\t\t\t\t\t\t\tprev = queue.pollFirst();\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t} else {\t\t\t\t\n\t\t\t\t\t\twhile (!queue.isEmpty() && queue.peekLast() > prev) {\n\t\t\t\t\t\t\tbuilder.append(\"R\");\n\t\t\t\t\t\t\tprev = queue.pollLast();\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tif (left > prev && right > prev) {\n\t\t\t\t\tif (left < right) {\n\t\t\t\t\t\tbuilder.append(\"L\");\n\t\t\t\t\t\tprev = queue.pollFirst();\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuilder.append(\"R\");\t\t\t\t\t\n\t\t\t\t\t\tprev = queue.pollLast();\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (left > prev) {\n\t\t\t\t\t\tbuilder.append(\"L\");\n\t\t\t\t\t\tprev = queue.pollFirst();\t\t\t\t\t\n\t\t\t\t\t} else if (right > prev) {\n\t\t\t\t\t\tbuilder.append(\"R\");\n\t\t\t\t\t\tprev = queue.pollLast();\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(builder.length());\n\t\tSystem.out.println(builder.toString());\n\t}\n    \n    \t\n}"
        },
        {
            "language": 3,
            "solution": "# AC\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def next(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = sys.stdin.readline().split()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_int(self):\n        return int(self.next())\n\n    def solve(self):\n        n = self.next_int()\n        x = [self.next_int() for _ in range(0, n)]\n        d = 0\n        l = 0\n        r = n - 1\n        rs = []\n        while l <= r:\n            if x[l] <= d and x[r] <= d:\n                break\n            if x[l] <= d:\n                rs.append('R')\n                d = x[r]\n                r -= 1\n            elif x[r] <= d:\n                rs.append('L')\n                d = x[l]\n                l += 1\n            elif x[r] < x[l] or l == r:\n                rs.append('R')\n                d = x[r]\n                r -= 1\n            elif x[l] < x[r]:\n                rs.append('L')\n                d = x[l]\n                l += 1\n            else:\n                ll = l + 1\n                while x[ll] > x[ll - 1]:\n                    ll += 1\n                rr = r - 1\n                while x[rr] > x[rr + 1]:\n                    rr -= 1\n                if ll - l > r - rr:\n                    rs.append('L')\n                    d = x[l]\n                    l += 1\n                else:\n                    rs.append('R')\n                    d = x[r]\n                    r -= 1\n        print(len(rs))\n        print(''.join(rs))\n\n\nif __name__ == '__main__':\n    Main().solve()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nres = []\nend = True\nright = n - 1\nleft = 0\nprev = 0\nallowLeft = True\nallowRight = True\nwhile end:\n    d_r = a[right] - prev\n    if d_r <= 0 or not allowRight:\n        d_r = 300000\n    d_l = a[left] - prev\n    if d_l <= 0 or not allowLeft:\n        d_l = 300000\n    if d_l < d_r and allowLeft:\n        prev = a[left]\n        res.append('L')\n        left += 1\n    elif d_r < d_l and allowRight:\n        prev = a[right]\n        res.append('R')\n        right -= 1\n    elif d_r == d_l:\n        if d_r == 300000:\n            end = False\n        elif left == right:\n            prev = a[right]\n            res.append('R')\n            right -= 1\n        elif left != right:\n            left_edge = True\n            left_2 = left\n            prev_2 = prev\n            while a[left_2] > prev_2:\n                prev_2 = a[left_2]\n                left_2 += 1\n            right_2 = right\n            prev_2 = prev\n            while a[right_2] > prev_2:\n                prev_2 = a[right_2]\n                right_2 -= 1\n            if right - right_2 > left_2 - left:\n                allowLeft = False\n            else:\n                allowRight = False\n    if left > right:\n        end = False\nprint(len(res))\nfor i in res:\n    print(i, end='')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tReader in = new Reader();\n\t\tint n = in.nextInt();\n\t\tint[] a = in.na(n);\n\t\tint l = 0;\n\t\tint r = n - 1;\n\t\tchar[] ans = new char[n+1];\n\t\tint[] ansV = new int[n+1];\n\t\tint idx = 0;\n\t\tboolean done = false;\n\t\twhile (l <= r && !done) {\n\t\t\tif (a[l] == a[r]) {\n\t\t\t\tif(l==r&&(idx == 0 || a[l] > ansV[idx - 1])) {\n\t\t\t\t\tans[idx++] = 'L';\n\t\t\t\t}else if (idx == 0 || a[l] > ansV[idx - 1]) {\n\t\t\t\t\tint rightSub = 0;\n\t\t\t\t\tfor (int i = l + 1; i < r; i++) {\n\t\t\t\t\t\tif (a[i] > a[i - 1]) {\n\t\t\t\t\t\t\trightSub++;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tint leftSub = 0;\n\t\t\t\t\tfor (int i = r - 1; i > l; i--) {\n\t\t\t\t\t\tif (a[i] > a[i + 1]) {\n\t\t\t\t\t\t\tleftSub++;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (leftSub == rightSub && leftSub == 0) {\n\t\t\t\t\t\tans[idx++] = 'L';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (rightSub > leftSub) {\n\t\t\t\t\t\t\tans[idx++] = 'L';\n\t\t\t\t\t\t\tfor (int i = 0; i < rightSub; i++) {\n\t\t\t\t\t\t\t\tans[idx++] = 'L';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tans[idx++] = 'R';\n\t\t\t\t\t\t\tfor (int i = 0; i < leftSub; i++) {\n\t\t\t\t\t\t\t\tans[idx++] = 'R';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdone = true;\n\t\t\t} else if (a[l] < a[r]) {\n\t\t\t\tif (idx == 0 || a[l] > ansV[idx - 1]) {\n\t\t\t\t\tans[idx++] = 'L';\n\t\t\t\t\tansV[idx - 1] = a[l];\n\t\t\t\t\tl++;\n\t\t\t\t} else if (a[r] > ansV[idx - 1]) {\n\t\t\t\t\tans[idx++] = 'R';\n\t\t\t\t\tansV[idx - 1] = a[r];\n\t\t\t\t\tr--;\n\t\t\t\t} else\n\t\t\t\t\tdone = true;\n\t\t\t} else {\n\t\t\t\tif (idx == 0 || a[r] > ansV[idx - 1]) {\n\t\t\t\t\tans[idx++] = 'R';\n\t\t\t\t\tansV[idx - 1] = a[r];\n\t\t\t\t\tr--;\n\t\t\t\t} else if (a[l] > ansV[idx - 1]) {\n\t\t\t\t\tans[idx++] = 'L';\n\t\t\t\t\tansV[idx - 1] = a[l];\n\t\t\t\t\tl++;\n\t\t\t\t} else\n\t\t\t\t\tdone = true;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(idx);\n\t\tfor (int i = 0; i < idx; i++)\n\t\t\tSystem.out.print(ans[i]);\n\t}\n\n\tpublic static class Util {\n\t\tstatic boolean isPrime(int n) {\n\t\t\tif (n <= 1)\n\t\t\t\treturn false;\n\t\t\tif (n <= 3)\n\t\t\t\treturn true;\n\t\t\tif (n % 2 == 0 || n % 3 == 0)\n\t\t\t\treturn false;\n\t\t\tfor (int i = 5; i * i <= n; i = i + 6)\n\t\t\t\tif (n % i == 0 || n % (i + 2) == 0)\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic static int upperBound(int[] a, int v) {\n\t\t\tif (a[0] > v)\n\t\t\t\treturn -1;\n\t\t\tint l = 0, h = a.length - 1;\n\t\t\twhile (l < h) {\n\t\t\t\tint mid = (l + h) / 2;\n\t\t\t\tif (v >= a[mid])\n\t\t\t\t\tl = mid + 1;\n\t\t\t\telse\n\t\t\t\t\th = mid - 1;\n\t\t\t}\n\t\t\tif (v < a[l])\n\t\t\t\treturn l - 1;\n\t\t\treturn l;\n\t\t}\n\n\t\tpublic static int lowerBound(int[] a, int v) {\n\t\t\tif (a[a.length - 1] < v)\n\t\t\t\treturn -1;\n\t\t\tint l = 0, h = a.length - 1;\n\t\t\twhile (l < h) {\n\t\t\t\tint mid = (l + h) / 2;\n\t\t\t\tif (v <= a[mid])\n\t\t\t\t\th = mid - 1;\n\t\t\t\telse\n\t\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t\tif (v > a[l])\n\t\t\t\treturn l + 1;\n\t\t\treturn l;\n\t\t}\n\n\t\tpublic static boolean[] getSieve(int n) {\n\t\t\tboolean[] isPrime = new boolean[n + 1];\n\t\t\tfor (int i = 2; i <= n; i++)\n\t\t\t\tisPrime[i] = true;\n\t\t\tfor (int i = 2; i * i <= n; i++)\n\t\t\t\tif (isPrime[i])\n\t\t\t\t\tfor (int j = i; i * j <= n; j++)\n\t\t\t\t\t\tisPrime[i * j] = false;\n\t\t\treturn isPrime;\n\t\t}\n\n\t\tpublic static int gcd(int a, int b) {\n\t\t\tif (a == 0)\n\t\t\t\treturn b;\n\t\t\treturn gcd(b % a, a);\n\t\t}\n\n\t\tpublic static long modAdd(long a, long b, long mod) {\n\t\t\treturn (a % mod + b % mod) % mod;\n\t\t}\n\n\t\tpublic static long modMul(long a, long b, long mod) {\n\t\t\treturn ((a % mod) * (b % mod)) % mod;\n\t\t}\n\t}\n\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint idx, value;\n\n\t\tpublic Pair(int idx, int value) {\n\t\t\tthis.idx = idx;\n\t\t\tthis.value = value;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.value - o.value;\n\t\t}\n\t}\n\n\tstatic class Graph {\n\t\tprivate ArrayList<Integer> con[];\n\t\tprivate boolean[] visited;\n\n\t\tpublic Graph(int n) {\n\t\t\tcon = new ArrayList[n];\n\t\t\tfor (int i = 0; i < n; ++i)\n\t\t\t\tcon[i] = new ArrayList();\n\t\t\tvisited = new boolean[n];\n\t\t}\n\n\t\tpublic void reset() {\n\t\t\tArrays.fill(visited, false);\n\t\t}\n\n\t\tpublic void addEdge(int v, int w) {\n\t\t\tcon[v].add(w);\n\t\t}\n\n\t\tpublic void dfs(int cur) {\n\t\t\tvisited[cur] = true;\n\t\t\tfor (Integer v : con[cur]) {\n\t\t\t\tif (!visited[v]) {\n\t\t\t\t\tdfs(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic void bfs(int cur) {\n\t\t\tQueue<Integer> q = new LinkedList<>();\n\t\t\tq.add(cur);\n\t\t\tvisited[cur] = true;\n\t\t\twhile (!q.isEmpty()) {\n\t\t\t\tcur = q.poll();\n\t\t\t\tfor (Integer v : con[cur]) {\n\t\t\t\t\tif (!visited[v]) {\n\t\t\t\t\t\tvisited[v] = true;\n\t\t\t\t\t\tq.add(v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic class Reader {\n\t\tstatic BufferedReader br;\n\t\tstatic StringTokenizer st;\n\n\t\tpublic Reader() {\n\t\t\tthis.br = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic int[] na(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nl(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic String[] nS(int n) {\n\t\t\tString[] a = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = next();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tif (st == null || !st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\treadLine();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\treturn Integer.parseInt(st.nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\tif (st == null || !st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\treadLine();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\treturn Double.parseDouble(st.nextToken());\n\t\t}\n\n\t\tpublic Long nextLong() {\n\t\t\tif (st == null || !st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\treadLine();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\treturn Long.parseLong(st.nextToken());\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (st == null || !st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\treadLine();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic static void readLine() {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C1157 {\n    public static void main(String args[]) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int a[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        StringBuffer sb = new StringBuffer(\"\");\n        int cou = 0;\n        int i = 0, j = n - 1, p = 0;\n        while (i <= j) {\n            if (a[i] <= p && a[j] <= p) {\n                break;\n            } else if (a[i] > p && a[j] > p) {\n                int prev = p;\n                // System.out.println(i + \" \" + j + \" \" + a[i] + \" \" + a[j]);\n                if (a[i] == a[j]) {\n                    // System.out.println(\"ho\");\n                    int c1 = 0, c2 = 0;\n                    StringBuffer sb1 = new StringBuffer(\"\");\n                    StringBuffer sb2 = new StringBuffer(\"\");\n                    for (int x = i; x <= j; x++) {\n                        if (a[x] > p) {\n                            p = a[x];\n                            c1++;\n                            sb1.append(\"L\");\n                        } else\n                            break;\n                    }\n                    // System.out.println(c1 + \" \" + sb1);\n                    p = prev;\n                    // System.out.println(p);\n                    for (int x = j; x >= i; x--) {\n                        if (a[x] > p) {\n                            p = a[x];\n                            c2++;\n                            sb2.append(\"R\");\n                        } else\n                            break;\n                    }\n                    // System.out.println(c2 + \" \" + sb2);\n                    if (c1 > c2) {\n                        sb.append(sb1);\n                        cou += c1;\n                    } else {\n                        sb.append(sb2);\n                        cou += c2;\n                    }\n                    break;\n                } else if (a[i] < a[j]) {\n                    sb.append(\"L\");\n                    p = a[i];\n                    i++;\n                    cou++;\n                } else {\n                    sb.append(\"R\");\n                    p = a[j];\n                    j--;\n                    cou++;\n                }\n\n            } else if (a[i] > p) {\n                sb.append(\"L\");\n                p = a[i];\n                i++;\n                cou++;\n            } else if (a[j] > p) {\n                sb.append(\"R\");\n                p = a[j];\n                j--;\n                cou++;\n            }\n        }\n        System.out.println(cou);\n        System.out.println(sb);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\n#input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\nimport math\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    L = 0\n    R = n-1\n    last = 0\n    res = []\n    suffix = ''\n    while L <= R:\n        if a[L] < a[R]:\n            if a[L] > last:\n                res.append('L')\n                last = a[L]\n                L += 1\n            elif a[R] > last:\n                res.append('R')\n                last = a[R]\n                R -= 1\n            else:\n                break\n        elif a[L] > a[R]:\n            if a[R] > last:\n                res.append('R')\n                last = a[R]\n                R -= 1\n            elif a[L] > last:\n                res.append('L')\n                last = a[L]\n                L += 1\n            else:\n                break\n        else:\n            posL = L\n            prevL = last\n            while posL < len(a) and a[posL] > prevL:\n                prevL = a[posL]\n                posL += 1\n            lenL = posL-L\n\n            posR = R\n            prevR = last\n            while a[posR] > prevR:\n                prevR = a[posR]\n                posR -= 1\n            lenR = R-posR\n\n            suffix = ''\n            if lenL > 0 or lenR > 0:\n                if lenL >= lenR:\n                    suffix += 'L'*lenL\n                elif lenR > lenL:\n                    suffix += 'R'*lenR\n            break\n\n    print(len(res)+len(suffix))\n    print(''.join(res) + suffix)\n\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int,input().split()))\nmn,i,j,k,res,yes=3000000,0,n-1,-1,'',0\nwhile mn!=-1:\n    x,y=lst[i],lst[j]\n    #print(x,y,i,j,res)\n    if max(x,y)<=k:\n        mn=-1\n        continue\n    elif i==j:\n        res+='R'\n        break\n    else:\n        if x==y:\n            yes=1\n            break\n        if x>y:\n            if y>k:\n                res+='R'\n                k=y\n                j-=1\n            else:\n                res+='L'\n                k=x\n                i+=1\n        if y>x:\n            if x>k:\n                res+='L'\n                k=x\n                i+=1\n            else:\n                res+='R'\n                k=y\n                j-=1\nif yes==1:\n    schet1 = 0\n    for e in range(i+1,j):\n        if lst[e]<=lst[e-1]:\n            break\n        schet1+=1\n    schet2 = 0\n    for e in range(j-1,i,-1):\n        if lst[e]<=lst[e+1]:\n            break\n        schet2+=1\n    if schet1>schet2:\n        res+='L'*(schet1+1)\n    else:\n        res+='R'*(schet2+1)\nprint(len(res))\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=[int(x) for x in input().split()]\nans=''\ni=0\nj=n-1\nlast=0\nwhile i<=j:\n    #print(ans)\n    if arr[i]>last and arr[j]>last:\n        if arr[i]>arr[j]:\n            ans+='R'\n            last=arr[j]\n            j-=1\n        elif arr[j]>arr[i]:\n            ans+='L'\n            last=arr[i]\n            i+=1\n        else:\n            a1=1\n            a2=1\n            while i+a1<=j and arr[i+a1]>arr[i+a1-1]:\n                a1+=1\n            while j-a2>=i and arr[j-a2+1]<arr[j-a2]:\n                a2+=1\n            #print(a1,a2)\n            if a1>a2:\n                ans+='L'*a1\n                break\n            else:\n                ans+='R'*a2\n                break\n                \n            \n                \n    elif arr[i]>last:\n        ans+='L'\n        last=arr[i]\n        i+=1\n    elif arr[j]>last:\n        ans+='R'\n        last=arr[j]\n        j-=1\n    else:\n        break\nprint(len(ans))\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nlast = -1\ni = 0\nj = n - 1\nans = ''\nwhile i <= j:\n    if max(a[i], a[j]) <= last:\n        break\n    if a[i] == a[j]:\n        start = i\n        k = 0\n        last = a[i]\n        i += 1\n        while i <= j:\n            if a[i] <= last:\n                break\n            else:\n                last = a[i]\n                k += 1\n                i += 1\n        last = a[j]\n        k2 = 0\n        i = start\n        j -= 1\n        while i <= j:\n            if a[j] <= last:\n                break\n            else:\n                last = a[j]\n                k2 += 1\n                j -= 1\n        if k > k2:\n            ans += 'L' * (k + 1)\n        else:\n            ans += 'R' * (k2 + 1)\n        break\n    if a[i] < a[j]:\n        if a[i] > last:\n            ans += 'L'\n            last = a[i]\n            i += 1\n        else:\n            ans += 'R'\n            last = a[j]\n            j -= 1\n    else:\n        if a[j] > last:\n            ans += 'R'\n            last = a[j]\n            j -= 1\n        else:\n            ans += 'L'\n            last = a[i]\n            i += 1\nprint(len(ans))\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = input()\ndata = input()\n\n# n = 15\n# data = \"37504 79054 80071 95721 135743 164345 189260 190810 191657 196168 200000 200000 190810 190018 185437\"\n# n = 11\n# data = \"1 2 3 7 8 10 11 12 17 18 1 1\"\ndata = data.split(' ')\ndef Left_or_Right_Move(data_temp,direct):\n\t#data_temp \t: list of number\n\t#direct\t\t: left of right ('L' or 'R') \n\tstr_temp = direct\n\ti_ = 0\n\tj_ = len(data_temp)-1\n\tif(direct == 'L'): \t#move left to right\n\t\twhile(i_ + 1 < j_) :\n\t\t\tif int(data_temp[i_]) < int(data_temp[i_+1]):\n\t\t\t\tstr_temp += 'L'\n\t\t\t\ti_+=1\n\t\t\telse:\n\t\t\t\treturn str_temp\n\n\telse:\t\t\t\t#move right to left\n\t\twhile(j_-1>0) :\n\t\t\tif int(data_temp[j_]) < int(data_temp[j_-1]):\n\t\t\t\tstr_temp += 'R'\n\t\t\t\tj_-=1\n\t\t\telse:\n\t\t\t\treturn str_temp\n\treturn str_temp\n\ndef find_increase_string():\n\ti = 0\n\tj = int(n)-1\n\tsub_sequence = []\n\tstr_ = \"\"\n\n\tif int(data[0]) > int(data[-1]) :\n\t\ttemp = int(data[-1])\n\t\tidx = -1\n\telif int(data[0]) < int(data[-1]) :\n\t\ttemp = int(data[0])\n\t\tidx = 0\n\telse:\n\t\tl_ = Left_or_Right_Move(data[i:j+1],'L')\n\t\tr_ = Left_or_Right_Move(data[i:j+1],'R')\n\t\tif len(l_)> len(r_):\n\t\t\tstr_ += l_\n\t\telse:\n\t\t\tstr_ += r_\n\t\tprint(len(str_))\n\t\tprint(str_)\n\t\treturn\n\n\tsub_sequence.append(temp)\n\tif(idx == 0):\n\t\tstr_+='L'\n\t\ti += 1\n\telse:\n\t\tstr_+='R'\n\t\tj -= 1\n\n\twhile(i <= j):\n\t\td0 = int(data[i]) \n\t\td1 = int(data[j])\n\t\tif d0 > d1:\n\t\t\tif d1 > sub_sequence[-1]:\n\t\t\t\tsub_sequence.append(d1)\n\t\t\t\tstr_+='R'\n\t\t\t\tj -= 1\n\t\t\telif d0 > sub_sequence[-1] :\n\t\t\t\tsub_sequence.append(d0)\n\t\t\t\tstr_+='L'\n\t\t\t\ti += 1\n\t\t\telse : \n\t\t\t\tbreak\n\t\telif d0 < d1: # data[0] <= data[-1]\n\t\t\tif d0 > sub_sequence[-1]:\n\t\t\t\tsub_sequence.append(d0)\n\t\t\t\tstr_+='L'\n\t\t\t\ti += 1\n\t\t\telif d1 > sub_sequence[-1]:\n\t\t\t\tsub_sequence.append(d1)\n\t\t\t\tstr_+='R'\n\t\t\t\tj -= 1\n\t\t\telse:\tbreak\n\t\telse:\n\t\t\tif(d0 > sub_sequence[-1]):\n\t\t\t\tl_ = Left_or_Right_Move(data[i:j+1],'L')\n\t\t\t\tr_ = Left_or_Right_Move(data[i:j+1],'R')\n\t\t\t\tif len(l_)> len(r_):\n\t\t\t\t\tstr_ += l_\n\t\t\t\telse:\n\t\t\t\t\tstr_ += r_\n\t\t\tbreak\n\tprint(len(str_))\n\tprint(str_)\n\n#l_ = Left_or_Right_Move([1],'R')\n#print(l_)\nfind_increase_string()\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nusing namespace std;\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cerr << '{';\n  __print(x.first);\n  cerr << ',';\n  __print(x.second);\n  cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cerr << '{';\n  for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\nconst long long int MOD = 1e9 + 7;\nconst long long int INF = 1e18;\nconst long long int maxn = 1e6 + 4;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  for (int i = 0; i < n; i++) cin >> v[i];\n  map<int, int> mp;\n  int prev = 0;\n  bool ok = true;\n  int mxans = 0, l1 = 0;\n  for (int i = 0; i < n; i++) {\n    if (mp.count(v[i]) || v[i] <= prev) {\n      ok = false;\n    }\n    mp[v[i]] = i;\n    if (ok) l1++;\n    prev = v[i];\n  }\n  int sufflen = n - 1;\n  map<int, int> temp;\n  prev = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    if (temp[v[i]] || v[i] <= prev) {\n      break;\n    }\n    temp[v[i]] = i + 1;\n    prev = v[i];\n    sufflen--;\n  }\n  int preflen = 0;\n  vector<int> aa(2);\n  mxans = preflen + (mp[v[0]] < sufflen) + n - sufflen - 1;\n  aa[0] = preflen + (mp[v[0]] < sufflen);\n  aa[1] = n - sufflen - 1;\n  for (int i = 0; i < l1; i++) {\n    preflen = i + 1;\n    if (mp[v[i]] > sufflen) {\n      sufflen = mp[v[i]];\n    }\n    if (mxans < preflen + n - sufflen - 1) {\n      mxans = preflen + n - sufflen - 1;\n      aa[0] = preflen;\n      aa[1] = n - sufflen - 1;\n    }\n  }\n  int lst = 0;\n  string s = \"\";\n  int l = 0, r = n - 1;\n  while (l < aa[0] && r >= n - aa[1]) {\n    if (v[l] < lst && v[r] < lst) break;\n    if (v[l] < v[r]) {\n      if (v[l] > lst) {\n        lst = v[l];\n        l++;\n        s += 'L';\n      } else {\n        lst = v[r];\n        r--;\n        s += 'R';\n      }\n    } else {\n      if (v[r] > lst) {\n        lst = v[r];\n        r--;\n        s += 'R';\n      } else {\n        lst = v[l];\n        l++;\n        s += 'L';\n      }\n    }\n  }\n  while (l < aa[0]) {\n    if (v[l] < lst) break;\n    lst = v[l];\n    s += 'L';\n    l++;\n  }\n  while (r >= n - aa[1]) {\n    if (v[r] < lst) break;\n    lst = v[r];\n    s += 'R';\n    r--;\n  }\n  cout << s.size() << '\\n';\n  cout << s;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ninn=0\nex=n-1\npr=0\nsu=0\nll=\"\"\nlol=0\nwhile inn<=ex:\n    #print(l[inn],l[ex])\n    if(inn==ex):\n        if(l[inn]>pr):\n            ll+=\"L\"\n            su+=1\n            break\n    if(l[inn]<=pr and l[ex]<=pr):\n        break\n        \n    if(l[inn]>pr and l[ex]>pr and l[inn]==l[ex]):\n        lol=1\n        j=inn\n        k=ex\n        s1=\"\"\n        cou1=0\n        s2=\"\"\n        cou2=0\n        pr1=pr\n        pr2=pr\n        while (j<ex and l[j]>pr1):\n            pr1=l[j]\n            cou1+=1\n            s1+=\"L\"\n            j+=1\n        while (k>inn and l[k]>pr2):\n            pr2=l[k]\n            cou2+=1\n            s2+=\"R\"\n            k-=1\n        break\n    if(l[inn]>pr and l[ex]<=pr):\n        su+=1\n        ll+=(\"L\")\n        pr=l[inn]\n        inn+=1\n    elif(l[inn]<=pr and l[ex]>pr):\n        su+=1\n        ll+=(\"R\")\n        pr=l[ex]\n        ex-=1\n    elif(l[inn]>pr and l[ex]>pr):\n        if(l[inn]>l[ex]):\n            su+=1\n            pr=l[ex]\n            ex-=1\n            ll+=(\"R\")\n        elif(l[inn]<l[ex]):\n            su+=1\n            pr=l[inn]\n            ll+=(\"L\")\n            inn+=1\nif(lol==1):\n    if(cou1>=cou2):\n        su+=cou1\n        ll+=s1\n    else:\n        su+=cou2\n        ll+=s2\nprint(su)\nprint(ll)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct S {\n  int a, b;\n  S() {}\n  S(int _a, int _b) {\n    a = _a;\n    b = _b;\n  }\n  const bool operator<(const S &o) const { return a < o.a; }\n};\npriority_queue<int, vector<int>, greater<int>> mpq;\nconst int SPACE = 0, NL = 1;\nstring exm;\ninline void showAll(vector<int> &v, int sep) {\n  for (int &here : v) printf(\"%d%c\", here, (sep) ? '\\n' : ' ');\n}\ninline void exf(void) {\n  cout << exm << \"\\n\";\n  exit(0);\n}\ninline vector<int> int_seperation(int N, int d = 10) {\n  vector<int> v;\n  while (N) {\n    v.push_back(N % d);\n    N /= d;\n  }\n  reverse(v.begin(), v.end());\n  return v;\n}\nconst int SIZE = 200009;\nint arr[SIZE];\nint last = 0, n, l, r;\nvector<int> ans;\nvoid r_oper() {\n  last = arr[r];\n  r--;\n  ans.push_back(1);\n}\nvoid l_oper() {\n  last = arr[l];\n  l++;\n  ans.push_back(-1);\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &arr[i]);\n  }\n  l = 1, r = n;\n  for (int i = 1; i <= n; i++) {\n    if (arr[l] > last && arr[r] > last) {\n      if (arr[l] == arr[r]) {\n        int l_cnt = 0, r_cnt = 0;\n        for (int j = l + 1; j <= n; j++) {\n          if (arr[j] > arr[j - 1])\n            l_cnt++;\n          else\n            break;\n        }\n        for (int j = r - 1; j >= 1; j--) {\n          if (arr[j] > arr[j + 1])\n            r_cnt++;\n          else\n            break;\n        }\n        if (l_cnt > r_cnt) {\n          for (int j = 0; j < l_cnt + 1; j++) {\n            l_oper();\n          }\n          break;\n        } else {\n          for (int j = 0; j < r_cnt + 1; j++) {\n            r_oper();\n          }\n          break;\n        }\n      }\n      if (arr[l] > arr[r]) {\n        r_oper();\n      } else\n        l_oper();\n    }\n    if (arr[l] > last && arr[r] <= last)\n      l_oper();\n    else if (arr[r] > last && arr[l] <= last)\n      r_oper();\n  }\n  printf(\"%d\\n\", ans.size());\n  for (int here : ans) {\n    if (here == 1)\n      printf(\"R\");\n    else\n      printf(\"L\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author cunbidun\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C2IncreasingSubsequenceHardVersion solver = new C2IncreasingSubsequenceHardVersion();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C2IncreasingSubsequenceHardVersion {\n        private InputReader in;\n        private PrintWriter out;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            this.in = in;\n            this.out = out;\n            int n = in.nextInt();\n            int[] a = in.nextIntArray(n, 1);\n            int lPos = 1;\n            int rPos = n;\n            ArrayList<Character> ans = new ArrayList<>();\n            int curVal = 0;\n            while (lPos <= rPos) {\n                if (a[lPos] <= curVal && a[rPos] <= curVal) break;\n                if (a[lPos] == a[rPos]) {\n                    int cnt1 = 1;\n                    int cnt2 = 1;\n                    for (int i = lPos + 1; i <= rPos; i++) {\n                        if (a[i] > a[i - 1]) cnt1++;\n                        else break;\n                    }\n                    for (int i = rPos - 1; i >= lPos; i--) {\n                        if (a[i] > a[i + 1]) cnt2++;\n                        else break;\n                    }\n                    if (cnt1 > cnt2) {\n                        for (int i = 1; i <= cnt1; i++) ans.add('L');\n                    } else for (int i = 1; i <= cnt2; i++) ans.add('R');\n                    break;\n                }\n                if (a[lPos] < a[rPos]) {\n                    if (a[lPos] > curVal) {\n                        ans.add('L');\n                        curVal = a[lPos];\n                        lPos++;\n                        continue;\n                    }\n                    curVal = a[rPos];\n                    ans.add('R');\n                    rPos--;\n                } else {\n                    if (a[rPos] > curVal) {\n                        curVal = a[rPos];\n                        ans.add('R');\n                        rPos--;\n                        continue;\n                    }\n                    ans.add('L');\n                    curVal = a[lPos];\n                    lPos++;\n                }\n            }\n            out.println(ans.size());\n            for (char c : ans) out.print(c);\n        }\n\n    }\n\n    static class InputReader extends InputStream {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int[] nextIntArray(int length, int stIndex) {\n            int[] arr = new int[length + stIndex];\n            for (int i = stIndex; i < stIndex + length; i++)\n                arr[i] = nextInt();\n            return arr;\n        }\n\n        private static boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename... Args>\nvoid read(Args &...args) {\n  ((cin >> args), ...);\n}\ntemplate <typename... Args>\nvoid show(Args... args) {\n  ((cout << args << \" \"), ...);\n}\nvoid solve() {\n  int n;\n  read(n);\n  vector<int> v(n);\n  for (auto &it : v) cin >> it;\n  int l = 0, r = n - 1, x = 0;\n  string s;\n  while (l <= r) {\n    if (min(v[l], v[r]) > x) {\n      if (v[l] < v[r]) {\n        s.push_back('L');\n        x = v[l++];\n      } else if (v[r] < v[l]) {\n        s.push_back('R');\n        x = v[r--];\n      } else {\n        int ll = l + 1, rr = r - 1;\n        while (ll < r && v[ll] > v[ll - 1]) ll++;\n        while (rr > l && v[rr] > v[rr + 1]) rr--;\n        if (ll - l > r - rr) {\n          x = ll - l;\n          while (x--) s.push_back('L');\n        } else {\n          x = r - rr;\n          while (x--) s.push_back('R');\n        }\n        break;\n      }\n    } else if (max(v[l], v[r]) > x) {\n      if (v[l] > v[r]) {\n        s.push_back('L');\n        x = v[l++];\n      } else {\n        s.push_back('R');\n        x = v[r--];\n      }\n    } else {\n      break;\n    }\n  }\n  cout << int(s.size()) << '\\n' << s;\n}\nint32_t main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int T = 1;\n  while (T--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T1, class T2>\nvoid pr(const pair<T1, T2>& x);\ntemplate <class T, size_t SZ>\nvoid pr(const array<T, SZ>& x);\ntemplate <class T>\nvoid pr(const vector<T>& x);\ntemplate <class T>\nvoid pr(const set<T>& x);\ntemplate <class T1, class T2>\nvoid pr(const map<T1, T2>& x);\ntemplate <class T>\nvoid pr(const T& x) {\n  cout << x;\n}\ntemplate <class Arg, class... Args>\nvoid pr(const Arg& first, const Args&... rest) {\n  pr(first);\n  pr(rest...);\n}\ntemplate <class T1, class T2>\nvoid pr(const pair<T1, T2>& x) {\n  pr(\"{\", x.first, \", \", x.second, \"}\");\n}\ntemplate <class T>\nvoid prContain(const T& x) {\n  pr(\"{\");\n  bool fst = 1;\n  for (auto& a : x) pr(!fst ? \", \" : \"\", a), fst = 0;\n  pr(\"}\");\n}\ntemplate <class T, size_t SZ>\nvoid pr(const array<T, SZ>& x) {\n  prContain(x);\n}\ntemplate <class T>\nvoid pr(const vector<T>& x) {\n  prContain(x);\n}\ntemplate <class T>\nvoid pr(const set<T>& x) {\n  prContain(x);\n}\ntemplate <class T1, class T2>\nvoid pr(const map<T1, T2>& x) {\n  prContain(x);\n}\nvoid ps() { pr(\"\\n\"); }\ntemplate <class Arg, class... Args>\nvoid ps(const Arg& first, const Args&... rest) {\n  pr(first, \" \");\n  ps(rest...);\n}\ntemplate <typename T>\nint remin(T& a, const T& b) {\n  if (b < a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <typename T>\nint remax(T& a, const T& b) {\n  if (b > a) {\n    a = b;\n    return true;\n  }\n  return false;\n}\nint N, a[200005];\nint main(int argc, const char** argv) {\n  scanf(\"%d\\n\", &N);\n  for (int i = 0; i < N; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  vector<int> ans;\n  string directions;\n  int li = 0, ri = N - 1;\n  ans.push_back(-1E9);\n  for (int i = 0; i < N; ++i) {\n    if (li > ri) {\n      break;\n    }\n    if (ans.back() < a[li] && ans.back() < a[ri]) {\n      if (a[li] == a[ri]) {\n        int l = 0, r = 0;\n        string dir1 = \"\", dir2 = \"\";\n        while (a[li + l] > a[li + l - 1]) {\n          dir1 += \"L\";\n          l++;\n        }\n        while (a[ri - r] > a[ri - r + 1]) {\n          dir2 += \"R\";\n          r++;\n        }\n        if (l > r) {\n          directions += dir1;\n        } else {\n          directions += dir2;\n        }\n        goto end;\n      } else if (a[li] < a[ri]) {\n        directions += \"L\";\n        ans.push_back(a[li]);\n        li++;\n      } else {\n        ans.push_back(a[ri]);\n        directions += \"R\";\n        ri--;\n      }\n    } else if (ans.back() < a[li]) {\n      directions += 'L';\n      ans.push_back(a[li]);\n      li++;\n    } else if (ans.back() < a[ri]) {\n      directions += 'R';\n      ans.push_back(a[ri]);\n      --ri;\n    }\n  }\nend:\n  printf(\"%d\\n%s\\n\", (int)directions.size(), directions.c_str());\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# c2. Increasing Subsequence (hard version)\n\nl = 'L'\nr = 'R'\n\nn = int(input())\na = list(map(int, input().split()))\n\ni=0\nj=n-1\n\nln = 0\ncurr = -1\nst = []\nwhile i<=j:\n    if a[i]<a[j]:\n        if curr < a[i]:\n            st.append(l)\n            curr = a[i]\n            i += 1\n            # ln += 1\n        elif curr < a[j]:\n            st.append(r)\n            curr = a[j]\n            j -= 1\n        else:\n            break\n    elif a[j]<a[i]:\n        if curr < a[j]:\n            st.append(r)\n            curr = a[j]\n            j -= 1\n            # ln += 1\n        elif curr < a[i]:\n            st.append(l)\n            curr = a[i]\n            i += 1\n        else:\n            break\n    else:\n        if curr > a[j]:\n            break\n        ll = 1\n        i_ = i+1\n        while i_<j and a[i_] > a[i_-1]:\n            ll += 1\n            i_ += 1\n        lr = 1\n        j_ = j-1\n        while i<j_ and a[j_+1] < a[j_]:\n            lr += 1\n            j_ -= 1\n        if ll>lr:\n            for ii in range(ll):\n                st.append(l)\n        else:\n            for ii in range(lr):\n                st.append(r)\n        break\n\nprint(len(st))\nprint(''.join(st))"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\npublic class C {\n\n    public void solve() throws IOException {\n        int n = nextInt();\n        Deque<Integer> a = new LinkedList<>();\n        for (int i = 0; i < n; i++) {\n            a.addLast(nextInt());\n        }\n        StringBuilder ans = new StringBuilder();\n        boolean over = false;\n        int last = 0;\n        while (!over) {\n            if (a.peekLast() > last && a.peekFirst() > last && !a.peekFirst().equals(a.peekLast())) {\n                if (a.peekFirst() < a.peekLast()) {\n                    ans.append('L');\n                    last = a.pollFirst();\n                } else if (a.peekLast() < a.peekFirst()) {\n                    ans.append('R');\n                    last = a.pollLast();\n                } else {\n                    ans.append('R');\n                    last = a.pollLast();\n                }\n            } else if (a.peekLast() > last && !a.peekFirst().equals(a.peekLast())) {\n                ans.append('R');\n                last = a.pollLast();\n            } else if (a.peekFirst() > last && !a.peekFirst().equals(a.peekLast())) {\n                ans.append('L');\n                last = a.pollFirst();\n            } else if (a.peekLast().equals(a.peekFirst()) && a.peekLast() > last) {\n                if (a.size() == 1 || a.size() == 2) {\n                    ans.append('R');\n                    last = a.pollLast();\n                } else {\n                    StringBuilder l = new StringBuilder();\n                    StringBuilder r = new StringBuilder();\n                    while(a.size() != 1 && !a.isEmpty() && a.peekLast().equals(a.peekFirst()) && a.peekLast() > last){\n                        a.pollFirst();\n                        last = a.pollLast();\n                        l.append('L');\n                        r.append('R');\n                    }\n                    Deque<Integer> b = (Deque<Integer>) ((LinkedList<Integer>) a).clone();\n                    int rlast = last;\n                    while (!a.isEmpty() && a.peekFirst() > last) {\n                        last = a.pollFirst();\n                        l.append('L');\n                    }\n                    while (!b.isEmpty() && b.peekLast() > rlast) {\n                        rlast = b.pollLast();\n                        r.append('R');\n                    }\n                    if (l.length() > r.length()) {\n                        ans.append(l);\n                    } else {\n                        ans.append(r);\n                    }\n                    over = true;\n                }\n            } else {\n                over = true;\n            }\n\n            if (a.isEmpty()) {\n                over = true;\n            }\n        }\n        System.out.println(ans.length());\n        System.out.println(ans.toString());\n    }\n\n    public void run() {\n        try {\n            br = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n\n            solve();\n\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    BufferedReader br;\n    StringTokenizer in;\n    PrintWriter out;\n\n    public String nextToken() throws IOException {\n        while (in == null || !in.hasMoreTokens()) {\n            in = new StringTokenizer(br.readLine());\n        }\n        return in.nextToken();\n    }\n\n    public int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    public double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    public long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    public int[] nextArr(int n) throws IOException {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = nextInt();\n        }\n        return res;\n    }\n\n    public static void main(String[] args) throws IOException {\n        Locale.setDefault(Locale.US);\n        new C().run();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nl = 0\nr = n-1\nlast = -1\ns = []\nwhile l <= r:\n    if a[l] == a[r]:\n        nl = 0\n        ll = last\n        while l + nl <= r and a[l+nl] > ll:\n            ll = a[l+nl]\n            nl += 1\n        nr = 0\n        lr = last\n        while l <= r-nr and a[r-nr] > lr:\n            lr = a[r-nr]\n            nr += 1\n        if nr > nl:\n            s.extend(nr*['R'])\n        else:\n            s.extend(nl*['L'])\n        break\n            \n    elif a[l] > last and (a[r] > a[l] or a[r] <= last):\n        last = a[l]\n        s.append('L')\n        l += 1\n    elif a[r] > last and (a[l] > a[r] or a[l] <= last):\n        last = a[r]\n        s.append('R')\n        r -= 1\n    else:\n        break\nprint(len(s))\nprint(\"\".join(s))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing std::ios;\nconstexpr int MOD = 1e9 + 7;\nconstexpr int mod = 998244353;\ntemplate <typename T>\nT power(T a, T b) {\n  T r = 1;\n  while (b) {\n    if (b & 1) r *= a;\n    b /= 2;\n    a *= a;\n  }\n  return r;\n}\nconst int mxn = 1e5 + 5;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int tt = 1;\n  while (tt--) {\n    int n;\n    cin >> n;\n    vector<int> a(n), b;\n    for (int &v : a) cin >> v;\n    string s;\n    b.push_back(0);\n    int l = 0, r = n - 1;\n    while (l < r && l < n && r >= 0) {\n      if (a[l] < a[r] && a[l] > b.back()) {\n        b.push_back(a[l]);\n        s.push_back('L');\n        l++;\n      } else if (a[r] < a[l] && a[r] > b.back()) {\n        b.push_back(a[r]);\n        s.push_back('R');\n        r--;\n      } else if (a[l] == a[r]) {\n        int lc = 1, rc = 1, rs = r - 1;\n        for (int i = 1; i + l < n; i++) {\n          if (a[l + i] > a[l + i - 1])\n            lc++;\n          else\n            break;\n        }\n        while (rs >= 0 && a[rs] > a[rs + 1]) {\n          rc++;\n          rs--;\n        }\n        if (rc > lc && a[r] > b.back()) {\n          b.push_back(a[r]);\n          s.push_back('R');\n          r--;\n        } else if (lc >= rc && a[l] > b.back()) {\n          b.push_back(a[l]);\n          s.push_back('L');\n          l++;\n        } else\n          break;\n      } else\n        break;\n    }\n    while (l < n && a[l] > b.back()) {\n      b.push_back(a[l]);\n      s.push_back('L');\n      l++;\n    }\n    while (r >= 0 && a[r] > b.back()) {\n      b.push_back(a[r]);\n      s.push_back('R');\n      r--;\n    }\n    cout << s.size() << '\\n' << s;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.InputMismatchException;\nimport java.util.Set;\n\npublic class Main {\n\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tprivate static final long M = 1000000007L;\n\n\tvoid solve() {\n\t\tStringBuffer sb = new StringBuffer();\n\t\tint n = ni();\n\t\tint a[] = na(n);\n\n\t\tint l = 0;\n\t\tint r = n - 1;\n\n\t\tint pre = -1;\n\t\twhile (l <= r && pre < Math.max(a[l], a[r])) {\n\t\t\tif (a[l] == a[r]) {\n\t\t\t\tint l0 = l+1;\n\t\t\t\tfor (; l0<=r && a[l0]>a[l0-1]; l0++);\n\t\t\t\tint r0 = r-1;\n\t\t\t\tfor (; l<=r0 && a[r0]>a[r0+1]; r0--);\n\t\t\t\tif (l0-l>=r-r0)\n\t\t\t\t\tfor (int i=0; i<l0-l; i++)\n\t\t\t\t\t\tsb.append('L');\n\t\t\t\telse\n\t\t\t\t\tfor (int i=0; i<r-r0; i++)\n\t\t\t\t\t\tsb.append('R');\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (a[l] < a[r] && a[l] > pre || a[r] <= pre) {\n\t\t\t\tsb.append('L');\n\t\t\t\tpre = a[l];\n\t\t\t\tl++;\n\t\t\t} else {\n\t\t\t\tsb.append('R');\n\t\t\t\tpre = a[r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sb.length());\n\t\tSystem.out.println(sb);\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> numbers(n);\n  for (int i = 0; i < n; i++) {\n    cin >> numbers[i];\n  }\n  string r = \"\";\n  int lastEl = -1;\n  int a = 0;\n  int b = n - 1;\n  while (a <= b) {\n    if (a == b) {\n      if (numbers[a] > lastEl) {\n        r += 'L';\n      }\n      break;\n    }\n    if (numbers[a] < numbers[b]) {\n      if (numbers[a] > lastEl) {\n        lastEl = numbers[a];\n        r += 'L';\n        a++;\n      } else if (numbers[b] > lastEl) {\n        lastEl = numbers[b];\n        r += 'R';\n        b--;\n      } else {\n        break;\n      }\n    } else if (numbers[b] < numbers[a]) {\n      if (numbers[b] > lastEl) {\n        lastEl = numbers[b];\n        r += 'R';\n        b--;\n      } else if (numbers[a] > lastEl) {\n        lastEl = numbers[a];\n        r += 'L';\n        a++;\n      } else {\n        break;\n      }\n    } else {\n      if (numbers[a] <= lastEl) {\n        break;\n      }\n      int c1 = 1;\n      int tempA = a + 1;\n      int tempLast = numbers[a];\n      while (tempA < b && numbers[tempA] > tempLast) {\n        tempLast = numbers[tempA];\n        c1++;\n        tempA++;\n      }\n      int c2 = 1;\n      int tempB = b - 1;\n      tempLast = numbers[b];\n      while (tempB > a && numbers[tempB] > tempLast) {\n        tempLast = numbers[tempB];\n        c2++;\n        tempB--;\n      }\n      if (c2 > c1) {\n        for (int i = 0; i < c2; i++) {\n          r += 'R';\n        }\n      } else {\n        for (int i = 0; i < c1; i++) {\n          r += 'L';\n        }\n      }\n      break;\n    }\n  }\n  cout << r.size() << endl << r << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class IncreasingSubsequenceHard {\n\n\t// https://codeforces.com/contest/1157/problem/C2\n\t\t\n\tpublic static void main(String[] args) throws IOException, FileNotFoundException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\t//BufferedReader in = new BufferedReader(new FileReader(\"IncreasingSubsequenceHard\"));\n\n\t\tint n = Integer.parseInt(in.readLine());\n\t\tStringTokenizer st = new StringTokenizer(in.readLine());\n\t\tint[] arr = new int[n];\n\t\tfor (int i=0; i<n; i++) arr[i] = Integer.parseInt(st.nextToken());\n\t\t\n\t\tArrayList<Character> ans = new ArrayList<>();\n\t\tint leftpos=0;\n\t\tint rightpos=n-1;\n\t\tint lastval=0;\n\t\tboolean did_something=true;\n\t\twhile (did_something) {\n\t\t\tdid_something=false;\n\t\t\tif (leftpos > rightpos) break;\n\t\t\tif (arr[leftpos] == arr[rightpos]) break;\n\t\t\tif (arr[leftpos] < arr[rightpos] && arr[leftpos] > lastval) {\n\t\t\t\tlastval = arr[leftpos];\n\t\t\t\tans.add('L');\n\t\t\t\tleftpos++;\n\t\t\t\tdid_something=true;\n\t\t\t}\n\t\t\telse if (arr[leftpos] > arr[rightpos] && arr[rightpos] > lastval) {\n\t\t\t\tlastval = arr[rightpos];\n\t\t\t\tans.add('R');\n\t\t\t\trightpos--;\n\t\t\t\tdid_something=true;\n\t\t\t}\n\t\t\telse if (lastval >= arr[leftpos] && lastval < arr[rightpos]) {\n\t\t\t\tlastval = arr[rightpos];\n\t\t\t\tans.add('R');\n\t\t\t\trightpos--;\n\t\t\t\tdid_something=true;\n\t\t\t}\n\t\t\telse if (lastval >= arr[rightpos] && lastval < arr[leftpos]) {\n\t\t\t\tlastval = arr[leftpos];\n\t\t\t\tans.add('L');\n\t\t\t\tleftpos++;\n\t\t\t\tdid_something=true;\n\t\t\t}\n\t\t}\n\t\tif (leftpos == rightpos && arr[leftpos] > lastval) {\n\t\t\tans.add('L');\n\t\t}\n\t\t\n\t\tif (leftpos<rightpos && arr[leftpos] == arr[rightpos] && arr[leftpos] > lastval) {\n\t\t\tint max=1;\n\t\t\tboolean leftside=true;\n\t\t\tint last = arr[leftpos];\n\t\t\tint leftcount=1;\n\t\t\tfor (int i=leftpos+1; i<rightpos; i++) {\n\t\t\t\tif (arr[i] > last) {\n\t\t\t\t\tleftcount++;\n\t\t\t\t\tlast = arr[i];\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\t\n\t\t\tlast = arr[rightpos];\n\t\t\tint rightcount=1;\n\t\t\tfor (int i=rightpos-1; i>leftpos; i--) {\n\t\t\t\tif (arr[i] > last) {\n\t\t\t\t\trightcount++;\n\t\t\t\t\tlast = arr[i];\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\t\n\t\t\tif (leftcount >= rightcount) {\n\t\t\t\tmax = leftcount;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = rightcount;\n\t\t\t\tleftside = false;\n\t\t\t}\n\t\t\t\n\t\t\tif (leftside) {\n\t\t\t\tfor (int i=0; i<max; i++) {\n\t\t\t\t\tans.add('L');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (int i=0; i<max; i++) {\n\t\t\t\t\tans.add('R');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(ans.size());\n\t\tfor (int i=0; i<ans.size(); i++) {\n\t\t\tSystem.out.print(ans.get(i));\n\t\t}\n\t}\n}\n\n//  \tstatic int ans;\n//\tpublic static void function (int[] arr, int leftpos, int rightpos, int curlength, int lastval) {\n//\t\tans = Math.max(ans, curlength);\n//\t\tif (leftpos > rightpos) return;\n//\t\tif (arr[leftpos] <= lastval && arr[rightpos] <= lastval) {\n//\t\t\treturn;\n//\t\t}\n//\t\tboolean did_something=true;\n//\t\twhile (did_something) {\n//\t\t\tdid_something=false;\n//\t\t\tif (leftpos > rightpos) break;\n//\t\t\tif (arr[leftpos] == arr[rightpos]) break;\n//\t\t\tif (arr[leftpos] < arr[rightpos] && arr[leftpos] > lastval) {\n//\t\t\t\tlastval = arr[leftpos];\n//\t\t\t\tcurlength++;\n//\t\t\t\tleftpos++;\n//\t\t\t\tdid_something=true;\n//\t\t\t}\n//\t\t\telse if (arr[leftpos] > arr[rightpos] && arr[rightpos] > lastval) {\n//\t\t\t\tlastval = arr[rightpos];\n//\t\t\t\tcurlength++;\n//\t\t\t\trightpos--;\n//\t\t\t\tdid_something=true;\n//\t\t\t}\n//\t\t\telse if (lastval >= arr[leftpos] && lastval < arr[rightpos]) {\n//\t\t\t\tlastval = arr[rightpos];\n//\t\t\t\tcurlength++;\n//\t\t\t\trightpos--;\n//\t\t\t\tdid_something=true;\n//\t\t\t}\n//\t\t\telse if (lastval >= arr[rightpos] && lastval < arr[leftpos]) {\n//\t\t\t\tlastval = arr[leftpos];\n//\t\t\t\tcurlength++;\n//\t\t\t\tleftpos++;\n//\t\t\t\tdid_something=true;\n//\t\t\t}\n//\t\t}\n//\t\tif (leftpos == rightpos && arr[leftpos] > lastval) {\n//\t\t\tcurlength++;\n//\t\t\tans = Math.max(ans, curlength);\n//\t\t\treturn;\n//\t\t}\n//\t\tans = Math.max(ans, curlength);\n//\n//\t\tif (arr[leftpos] == arr[rightpos] && arr[leftpos] > lastval) {\n//\t\t\tfunction(arr, leftpos+1, rightpos, curlength+1, arr[leftpos]);\n//\t\t\tfunction(arr, leftpos, rightpos-1, curlength+1, arr[leftpos]);\n//\t\t}\n//\t}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\ni = 0\nj = n-1\nprev = -1\nans = []\nwhile(i<=j):\n    if a[i]<a[j]:\n        if a[i]>prev:\n            ans += 'L'\n            prev = a[i]\n            i += 1\n        elif a[j]>prev:\n            ans += 'R'\n            prev = a[j]\n            j -= 1\n        else:\n            break\n    elif a[i]>a[j]:\n        if a[j]>prev:\n            ans += 'R'\n            prev = a[j]\n            j -= 1\n        elif a[i]>prev:\n            ans += 'L'\n            prev = a[i]\n            i += 1\n        else:\n            break\n    elif a[i]>prev:\n        l = 0\n        for p in range(i+1, j):\n            if a[p]>a[p-1]:\n                l += 1\n            else:\n                break\n        r = 0\n        for p in range(j-1, i, -1):\n            if a[p]>a[p+1]:\n                r += 1\n            else:\n                break\n        if r>l:\n            ans += 'R'\n            prev = a[j]\n            j -= 1\n        else:\n            ans += 'L'\n            prev = a[i]\n            i += 1\n    else:\n        break\nprint(len(ans))\nprint(*ans, sep = \"\")\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tFastReader in = new FastReader();\n\t\tint n = in.nextInt();\n\t\tint[] a = in.nextIntArray(n);\n\t\tStringBuilder ans = new StringBuilder();\n\t\tint last = -1;\n\t\tint l = 0, r = n - 1;\n\t\twhile(l <= r) {\n\t\t\tif(a[l] < a[r]) {\n\t\t\t\tif(a[l] > last) {\n\t\t\t\t\tlast = a[l];\n\t\t\t\t\tans.append(\"L\");\n\t\t\t\t\tl ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(a[r] <= last)\n\t\t\t\t\tbreak;\n\t\t\t\tans.append(\"R\");\n\t\t\t\tlast = a[r];\n\t\t\t\tr --;\n\t\t\t} else if(a[r] < a[l]) {\n\t\t\t\tif(a[r] > last) {\n\t\t\t\t\tlast = a[r];\n\t\t\t\t\tans.append(\"R\");\n\t\t\t\t\tr --;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(a[l] <= last)\n\t\t\t\t\tbreak;\n\t\t\t\tans.append(\"L\");\n\t\t\t\tlast = a[l];\n\t\t\t\tl ++;\n\t\t\t} else {\n\t\t\t\tfinal int LL = l, RR = r;\n\t\t\t\tint lastl = last, lastr = last;\n\t\t\t\tStringBuilder left = new StringBuilder();\n\t\t\t\twhile(l <= RR) {\n\t\t\t\t\tif(a[l] <= lastl)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tlastl = a[l];\n\t\t\t\t\tl ++;\n\t\t\t\t\tleft.append(\"L\");\n\t\t\t\t}\n\t\t\t\tStringBuilder right = new StringBuilder();\n\t\t\t\twhile(LL <= r) {\n\t\t\t\t\tif(a[r] <= lastr)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tlastr = a[r];\n\t\t\t\t\tr --;\n\t\t\t\t\tright.append(\"R\");\n\t\t\t\t}\n\t\t\t\tans.append(left.length() > right.length() ? left : right);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans.length() + \"\\n\" + ans);\n\t}\n}\n\nclass FastReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n    \n    public String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException  e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    public double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    public String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n    \n    public int[] nextIntArray(int n) {\n    \tint[] a = new int[n];\n    \tfor(int i = 0; i < n; i ++)\n    \t\ta[i] = nextInt();\n    \treturn a;\n    }\n    \n    public long[] nextLongArray(int n) {\n    \tlong[] a = new long[n];\n    \tfor(int i = 0; i < n; i ++)\n    \t\ta[i] = nextLong();\n    \treturn a;\n    }\n    \n    public double[] nextDoubleArray(int n) {\n    \tdouble[] a = new double[n];\n    \tfor(int i = 0; i < n; i ++)\n    \t\ta[i] = nextDouble();\n    \treturn a;\n    }\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\n public class Main\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tScanner s=new Scanner(System.in);\n\t\tint n=s.nextInt();\n\t\tint[] a=new int[n];\n\t\tint temp=0;\n\t\tArrayList<Character> c = new ArrayList<Character>();\n\t\tint j=0;\n\t\tint i=0;\n\t\tint k=0;\n\t\tint count=0;\n\t    for(int z=0;z<n;z++)\n\t    {\n\t        a[z]=s.nextInt();\n\t    }\n\t    while(i<n-1-k)\n\t    {\n\t        if(a[i]>temp){\n\t        if(a[i]==a[n-1-k])\n\t        {\n\t            count=1;\n\t           // System.out.println(\"wow\"+a[i]);\n\t            int l1=0;\n\t            int l2=0;\n\t            while(i<(n-1))\n\t            {\n\t                if(a[i+1]>a[i])\n\t                    l1++;\n\t                 else if(a[i]==a[i+1]){\n\t                 break;\n\t                 }\n\t                    else\n\t                    break;\n\t              \n\t                i++;\n\t            }\n\t            while(k<n-1)\n\t            {\n\t                if(a[n-k-1]<a[n-k-2])\n\t                l2++;\n\t                else if(a[n-k-2]==a[n-k-1]){\n\t                 break;\n\t                 }\n\t                else\n\t                break;\n\t                \n\t                 k++;\n\t            }\n\t            // System.out.println(\"one\"+l1);\n\t            // System.out.println(\"two\"+l2);\n\t            if(l1>l2)\n\t            {\n\t                for(int q=0;q<=l1;q++){\n\t                    \n\t          //  System.out.println(\"wow\");\n\t                     c.add('L');\n\t                     j++;\n\t                }\n\t                \n\t            }\n\t            else\n\t            {\n\t                for(int q=0;q<=l2;q++){\n\t                     c.add('R');\n\t                     j++;\n\t                }\n\t            }\n\t            break;\n\t        }\n\t        }\n\t        if(a[i]<a[n-1-k]){\n\t            if(a[i]>temp){\n\t            \n\t          // System.out.println(\"wow1\");\n\t            temp=a[i];\n\t            c.add('L');\n\t            i++;\n\t            j++;\n\t            }\n\t            else if(a[n-1-k]>temp){\n    \t            temp=a[n-k-1];\n    \t            c.add('R');\n    \t            k++;\n    \t            j++;\n\t            }\n\t            else\n\t            break;\n\t        }\n\t        else{\n\t            if(a[n-1-k]>temp){\n    \t            temp=a[n-k-1];\n    \t            c.add('R');\n    \t            k++;\n    \t            j++;\n\t            }\n\t            else if(a[i]>temp)\n\t            {\n\t                \n\t          //  System.out.println(\"wow2\");\n\t                 temp=a[i];\n    \t            c.add('L');\n    \t            i++;\n    \t            j++;\n\t            }\n\t            else\n\t            break;\n\t        }\n\t    }\n\t    if(count==0){\n    if(i==n-k-1&&a[i]>temp){\n        \n\t            //System.out.println(\"wow\");\n        c.add('L');\n        j++;\n    }\n\t    }\n    \n\t    System.out.println(j);\n\t     for(int z=0;z<j;z++){\n\t    System.out.print(c.get(z));\n\t     }\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.BitSet;\nimport java.util.Calendar;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.PriorityQueue;\nimport java.util.SortedSet;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\n/**\n * #\n *\n * @author pttrung\n */\npublic class C1_Round_555_Div3 {\n\n    public static long MOD = 998244353;\n    static long[][][] dp;\n\n    public static void main(String[] args) throws FileNotFoundException {\n        // PrintWriter out = new PrintWriter(new FileOutputStream(new File(\n        // \"output.txt\")));\n        PrintWriter out = new PrintWriter(System.out);\n        Scanner in = new Scanner();\n        int n = in.nextInt();\n        int[] data = new int[n];\n\n        for (int i = 0; i < n; i++) {\n            data[i] = in.nextInt();\n\n        }\n        int st = 0;\n        int ed = n - 1;\n        int last = 0;\n        StringBuilder builder = new StringBuilder();\n        while (st <= ed && (data[st] > last || data[ed] > last)) {\n            if (data[st] < data[ed]) {\n                if (data[st] > last) {\n                    last = data[st++];\n                    builder.append(\"L\");\n                } else {\n                    last = data[ed--];\n                    builder.append(\"R\");\n                }\n            } else if (data[st] > data[ed]) {\n                if (data[ed] > last) {\n                    last = data[ed--];\n                    builder.append(\"R\");\n                } else {\n                    last = data[st++];\n                    builder.append(\"L\");\n                }\n            } else {\n\n                int a = 0;\n                int v = last;\n                for (int i = st; i <= ed; i++) {\n                    if (data[i] > v) {\n                        a++;\n                        v = data[i];\n                    } else {\n                        break;\n                    }\n                }\n                int b = 0;\n                v = last;\n                for (int i = ed; i >= st; i--) {\n                    if (data[i] > v) {\n                        b++;\n                        v = data[i];\n                    } else {\n                        break;\n                    }\n                }\n                //System.out.println(a + \" \" + b);\n                if (a > b) {\n                    for (int i = st; i <= ed; i++) {\n                        if (data[i] > last) {\n                            last = data[i];\n                            builder.append(\"L\");\n                        } else {\n                            break;\n                        }\n                    }\n                } else {\n                    for (int i = ed; i >= st; i--) {\n                        if (data[i] > last) {\n                            last = data[i];\n                            builder.append(\"R\");\n                        }else{\n                            break;\n                        }\n                    }\n                }\n                break;\n            }\n        }\n        out.println(builder.length());\n        out.println(builder.toString());\n\n\n        out.close();\n    }\n\n    static class Node {\n        int l, r;\n        int v, index;\n        Node left, right;\n\n        public Node(int l, int r) {\n            this.l = l;\n            this.r = r;\n        }\n    }\n\n    static void update(int v, int index, Node node) {\n        if (index > node.r || index < node.l) {\n            return;\n        }\n        if (index == node.l && index == node.r) {\n            node.v = v;\n            node.index = index;\n            return;\n        }\n        int mid = (node.r + node.l) / 2;\n        if (node.left == null) {\n            node.left = new Node(node.l, mid);\n            node.right = new Node(mid + 1, node.r);\n        }\n        update(v, index, node.left);\n        update(v, index, node.right);\n        if (node.left.v > node.right.v) {\n            node.v = node.left.v;\n            node.index = node.left.index;\n        } else {\n            node.v = node.right.v;\n            node.index = node.right.index;\n        }\n\n    }\n\n    static Point get(int index, Node node) {\n        if (node.l > index) {\n            return new Point(0, 0);\n        }\n        if (node.r <= index) {\n            return new Point(node.index, node.v);\n        }\n        int mid = (node.r + node.l) / 2;\n        if (node.left == null) {\n            node.left = new Node(node.l, mid);\n            node.right = new Node(mid + 1, node.r);\n        }\n        Point a = get(index, node.left);\n        Point b = get(index, node.right);\n        if (a.y > b.y) {\n            return a;\n        }\n        return b;\n\n    }\n\n\n    public static int[] KMP(String val) {\n        int i = 0;\n        int j = -1;\n        int[] result = new int[val.length() + 1];\n        result[0] = -1;\n        while (i < val.length()) {\n            while (j >= 0 && val.charAt(j) != val.charAt(i)) {\n                j = result[j];\n            }\n            j++;\n            i++;\n            result[i] = j;\n        }\n        return result;\n\n    }\n\n    public static boolean nextPer(int[] data) {\n        int i = data.length - 1;\n        while (i > 0 && data[i] < data[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return false;\n        }\n        int j = data.length - 1;\n        while (data[j] < data[i - 1]) {\n            j--;\n        }\n        int temp = data[i - 1];\n        data[i - 1] = data[j];\n        data[j] = temp;\n        Arrays.sort(data, i, data.length);\n        return true;\n    }\n\n    public static int digit(long n) {\n        int result = 0;\n        while (n > 0) {\n            n /= 10;\n            result++;\n        }\n        return result;\n    }\n\n    public static double dist(long a, long b, long x, long y) {\n        double val = (b - a) * (b - a) + (x - y) * (x - y);\n        val = Math.sqrt(val);\n        double other = x * x + a * a;\n        other = Math.sqrt(other);\n        return val + other;\n\n    }\n\n    public static class Point implements Comparable<Point> {\n\n        int x, y;\n\n        public Point(int start, int end) {\n            this.x = start;\n            this.y = end;\n        }\n\n        @Override\n        public int hashCode() {\n            int hash = 5;\n            hash = 47 * hash + this.x;\n            hash = 47 * hash + this.y;\n            return hash;\n        }\n\n        @Override\n        public boolean equals(Object obj) {\n            if (obj == null) {\n                return false;\n            }\n            if (getClass() != obj.getClass()) {\n                return false;\n            }\n            final Point other = (Point) obj;\n            if (this.x != other.x) {\n                return false;\n            }\n            if (this.y != other.y) {\n                return false;\n            }\n            return true;\n        }\n\n        @Override\n        public int compareTo(Point o) {\n            return Integer.compare(x, o.x);\n        }\n    }\n\n    public static class FT {\n\n        long[] data;\n\n        FT(int n) {\n            data = new long[n];\n        }\n\n        public void update(int index, long value) {\n            while (index < data.length) {\n                data[index] += value;\n                index += (index & (-index));\n            }\n        }\n\n        public long get(int index) {\n            long result = 0;\n            while (index > 0) {\n                result += data[index];\n                index -= (index & (-index));\n            }\n            return result;\n\n        }\n    }\n\n    public static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    public static long pow(long a, long b, long MOD) {\n        if (b == 0) {\n            return 1;\n        }\n        if (b == 1) {\n            return a;\n        }\n        long val = pow(a, b / 2, MOD);\n        if (b % 2 == 0) {\n            return val * val % MOD;\n        } else {\n            return val * (val * a % MOD) % MOD;\n\n        }\n    }\n\n    static class Scanner {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() throws FileNotFoundException {\n            // System.setOut(new PrintStream(new BufferedOutputStream(System.out), true));\n            br = new BufferedReader(new InputStreamReader(System.in));\n            //  br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(\"input.txt\"))));\n        }\n\n        public String next() {\n\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                    throw new RuntimeException();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            st = null;\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n\n        public boolean endLine() {\n            try {\n                String next = br.readLine();\n                while (next != null && next.trim().isEmpty()) {\n                    next = br.readLine();\n                }\n                if (next == null) {\n                    return true;\n                }\n                st = new StringTokenizer(next);\n                return st.hasMoreTokens();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "# Enter your code here. Read input from STDIN. Print output to STDOUT# ===============================================================================================\n# importing some useful libraries.\nfrom __future__ import division, print_function\nfrom fractions import Fraction\nimport sys\nimport os\nfrom io import BytesIO, IOBase\nfrom itertools import *\nimport bisect\nfrom heapq import *\nfrom math import ceil, floor\nfrom copy import *\nfrom collections import deque, defaultdict\nfrom collections import Counter as counter  # Counter(list)  return a dict with {key: count}\nfrom itertools import combinations  # if a = [1,2,3] then print(list(comb(a,2))) -----> [(1, 2), (1, 3), (2, 3)]\nfrom itertools import permutations as permutate\nfrom bisect import bisect_left as bl\nfrom operator import *\n# If the element is already present in the list,\n\n# the left most position where element has to be inserted is returned.\nfrom bisect import bisect_right as br\nfrom bisect import bisect\n\n# If the element is already present in the list,\n# the right most position where element has to be inserted is returned\n\n# ==============================================================================================\n# fast I/O region\n\nBUFSIZE = 8192\nfrom sys import stderr\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n# inp = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ===============================================================================================\n### START ITERATE RECURSION ###\nfrom types import GeneratorType\n\n\ndef iterative(f, stack=[]):\n    def wrapped_func(*args, **kwargs):\n        if stack: return f(*args, **kwargs)\n        to = f(*args, **kwargs)\n        while True:\n            if type(to) is GeneratorType:\n                stack.append(to)\n                to = next(to)\n                continue\n            stack.pop()\n            if not stack: break\n            to = stack[-1].send(to)\n        return to\n\n    return wrapped_func\n\n\n#### END ITERATE RECURSION ####\n###########################\n# Sorted list\nclass SortedList:\n    def __init__(self, iterable=[], _load=200):\n        \"\"\"Initialize sorted list instance.\"\"\"\n        values = sorted(iterable)\n        self._len = _len = len(values)\n        self._load = _load\n        self._lists = _lists = [values[i:i + _load] for i in range(0, _len, _load)]\n        self._list_lens = [len(_list) for _list in _lists]\n        self._mins = [_list[0] for _list in _lists]\n        self._fen_tree = []\n        self._rebuild = True\n\n    def _fen_build(self):\n        \"\"\"Build a fenwick tree instance.\"\"\"\n        self._fen_tree[:] = self._list_lens\n        _fen_tree = self._fen_tree\n        for i in range(len(_fen_tree)):\n            if i | i + 1 < len(_fen_tree):\n                _fen_tree[i | i + 1] += _fen_tree[i]\n        self._rebuild = False\n\n    def _fen_update(self, index, value):\n        \"\"\"Update `fen_tree[index] += value`.\"\"\"\n        if not self._rebuild:\n            _fen_tree = self._fen_tree\n            while index < len(_fen_tree):\n                _fen_tree[index] += value\n                index |= index + 1\n\n    def _fen_query(self, end):\n        \"\"\"Return `sum(_fen_tree[:end])`.\"\"\"\n        if self._rebuild:\n            self._fen_build()\n\n        _fen_tree = self._fen_tree\n        x = 0\n        while end:\n            x += _fen_tree[end - 1]\n            end &= end - 1\n        return x\n\n    def _fen_findkth(self, k):\n        \"\"\"Return a pair of (the largest `idx` such that `sum(_fen_tree[:idx]) <= k`, `k - sum(_fen_tree[:idx])`).\"\"\"\n        _list_lens = self._list_lens\n        if k < _list_lens[0]:\n            return 0, k\n        if k >= self._len - _list_lens[-1]:\n            return len(_list_lens) - 1, k + _list_lens[-1] - self._len\n        if self._rebuild:\n            self._fen_build()\n\n        _fen_tree = self._fen_tree\n        idx = -1\n        for d in reversed(range(len(_fen_tree).bit_length())):\n            right_idx = idx + (1 << d)\n            if right_idx < len(_fen_tree) and k >= _fen_tree[right_idx]:\n                idx = right_idx\n                k -= _fen_tree[idx]\n        return idx + 1, k\n\n    def _delete(self, pos, idx):\n        \"\"\"Delete value at the given `(pos, idx)`.\"\"\"\n        _lists = self._lists\n        _mins = self._mins\n        _list_lens = self._list_lens\n\n        self._len -= 1\n        self._fen_update(pos, -1)\n        del _lists[pos][idx]\n        _list_lens[pos] -= 1\n\n        if _list_lens[pos]:\n            _mins[pos] = _lists[pos][0]\n        else:\n            del _lists[pos]\n            del _list_lens[pos]\n            del _mins[pos]\n            self._rebuild = True\n\n    def _loc_left(self, value):\n        \"\"\"Return an index pair that corresponds to the first position of `value` in the sorted list.\"\"\"\n        if not self._len:\n            return 0, 0\n\n        _lists = self._lists\n        _mins = self._mins\n\n        lo, pos = -1, len(_lists) - 1\n        while lo + 1 < pos:\n            mi = (lo + pos) >> 1\n            if value <= _mins[mi]:\n                pos = mi\n            else:\n                lo = mi\n\n        if pos and value <= _lists[pos - 1][-1]:\n            pos -= 1\n\n        _list = _lists[pos]\n        lo, idx = -1, len(_list)\n        while lo + 1 < idx:\n            mi = (lo + idx) >> 1\n            if value <= _list[mi]:\n                idx = mi\n            else:\n                lo = mi\n\n        return pos, idx\n\n    def _loc_right(self, value):\n        \"\"\"Return an index pair that corresponds to the last position of `value` in the sorted list.\"\"\"\n        if not self._len:\n            return 0, 0\n\n        _lists = self._lists\n        _mins = self._mins\n\n        pos, hi = 0, len(_lists)\n        while pos + 1 < hi:\n            mi = (pos + hi) >> 1\n            if value < _mins[mi]:\n                hi = mi\n            else:\n                pos = mi\n\n        _list = _lists[pos]\n        lo, idx = -1, len(_list)\n        while lo + 1 < idx:\n            mi = (lo + idx) >> 1\n            if value < _list[mi]:\n                idx = mi\n            else:\n                lo = mi\n\n        return pos, idx\n\n    def add(self, value):\n        \"\"\"Add `value` to sorted list.\"\"\"\n        _load = self._load\n        _lists = self._lists\n        _mins = self._mins\n        _list_lens = self._list_lens\n\n        self._len += 1\n        if _lists:\n            pos, idx = self._loc_right(value)\n            self._fen_update(pos, 1)\n            _list = _lists[pos]\n            _list.insert(idx, value)\n            _list_lens[pos] += 1\n            _mins[pos] = _list[0]\n            if _load + _load < len(_list):\n                _lists.insert(pos + 1, _list[_load:])\n                _list_lens.insert(pos + 1, len(_list) - _load)\n                _mins.insert(pos + 1, _list[_load])\n                _list_lens[pos] = _load\n                del _list[_load:]\n                self._rebuild = True\n        else:\n            _lists.append([value])\n            _mins.append(value)\n            _list_lens.append(1)\n            self._rebuild = True\n\n    def discard(self, value):\n        \"\"\"Remove `value` from sorted list if it is a member.\"\"\"\n        _lists = self._lists\n        if _lists:\n            pos, idx = self._loc_right(value)\n            if idx and _lists[pos][idx - 1] == value:\n                self._delete(pos, idx - 1)\n\n    def remove(self, value):\n        \"\"\"Remove `value` from sorted list; `value` must be a member.\"\"\"\n        _len = self._len\n        self.discard(value)\n        if _len == self._len:\n            raise ValueError('{0!r} not in list'.format(value))\n\n    def pop(self, index=-1):\n        \"\"\"Remove and return value at `index` in sorted list.\"\"\"\n        pos, idx = self._fen_findkth(self._len + index if index < 0 else index)\n        value = self._lists[pos][idx]\n        self._delete(pos, idx)\n        return value\n\n    def bisect_left(self, value):\n        \"\"\"Return the first index to insert `value` in the sorted list.\"\"\"\n        pos, idx = self._loc_left(value)\n        return self._fen_query(pos) + idx\n\n    def bisect_right(self, value):\n        \"\"\"Return the last index to insert `value` in the sorted list.\"\"\"\n        pos, idx = self._loc_right(value)\n        return self._fen_query(pos) + idx\n\n    def count(self, value):\n        \"\"\"Return number of occurrences of `value` in the sorted list.\"\"\"\n        return self.bisect_right(value) - self.bisect_left(value)\n\n    def __len__(self):\n        \"\"\"Return the size of the sorted list.\"\"\"\n        return self._len\n\n    def __getitem__(self, index):\n        \"\"\"Lookup value at `index` in sorted list.\"\"\"\n        pos, idx = self._fen_findkth(self._len + index if index < 0 else index)\n        return self._lists[pos][idx]\n\n    def __delitem__(self, index):\n        \"\"\"Remove value at `index` from sorted list.\"\"\"\n        pos, idx = self._fen_findkth(self._len + index if index < 0 else index)\n        self._delete(pos, idx)\n\n    def __contains__(self, value):\n        \"\"\"Return true if `value` is an element of the sorted list.\"\"\"\n        _lists = self._lists\n        if _lists:\n            pos, idx = self._loc_left(value)\n            return idx < len(_lists[pos]) and _lists[pos][idx] == value\n        return False\n\n    def __iter__(self):\n        \"\"\"Return an iterator over the sorted list.\"\"\"\n        return (value for _list in self._lists for value in _list)\n\n    def __reversed__(self):\n        \"\"\"Return a reverse iterator over the sorted list.\"\"\"\n        return (value for _list in reversed(self._lists) for value in reversed(_list))\n\n    def __repr__(self):\n        \"\"\"Return string representation of sorted list.\"\"\"\n        return 'SortedList({0})'.format(list(self))\n\n\n# ===============================================================================================\n# some shortcuts\n\nmod = 1000000007\n\n\ndef testcase(t):\n    for p in range(t):\n        solve()\n\n\ndef pow(x, y, p):\n    res = 1  # Initialize result\n    x = x % p  # Update x if it is more , than or equal to p\n    if (x == 0):\n        return 0\n    while (y > 0):\n        if ((y & 1) == 1):  # If y is odd, multiply, x with result\n            res = (res * x) % p\n\n        y = y >> 1  # y = y/2\n        x = (x * x) % p\n    return res\n\n\nfrom functools import reduce\n\n\ndef factors(n):\n    return set(reduce(list.__add__,\n                      ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\n\n\ndef gcd(a, b):\n    if a == b: return a\n    while b > 0: a, b = b, a % b\n    return a\n\n\n# discrete binary search\n# minimise:\n# def search():\n#     l = 0\n#     r = 10 ** 15\n#\n#     for i in range(200):\n#         if isvalid(l):\n#             return l\n#         if l == r:\n#             return l\n#         m = (l + r) // 2\n#         if isvalid(m) and not isvalid(m - 1):\n#             return m\n#         if isvalid(m):\n#             r = m + 1\n#         else:\n#             l = m\n#     return m\n\n# maximise:\n# def search():\n#     l = 0\n#     r = 10 ** 15\n#\n#     for i in range(200):\n#         # print(l,r)\n#         if isvalid(r):\n#             return r\n#         if l == r:\n#             return l\n#         m = (l + r) // 2\n#         if isvalid(m) and not isvalid(m + 1):\n#             return m\n#         if isvalid(m):\n#             l = m\n#         else:\n#             r = m - 1\n#     return m\n\n\n##############Find sum of product of subsets of size k in a array\n# ar=[0,1,2,3]\n# k=3\n# n=len(ar)-1\n# dp=[0]*(n+1)\n# dp[0]=1\n# for pos in range(1,n+1):\n#     dp[pos]=0\n#     l=max(1,k+pos-n-1)\n#     for j in range(min(pos,k),l-1,-1):\n#         dp[j]=dp[j]+ar[pos]*dp[j-1]\n# print(dp[k])\n\ndef prefix_sum(ar):  # [1,2,3,4]->[1,3,6,10]\n    return list(accumulate(ar))\n\n\ndef suffix_sum(ar):  # [1,2,3,4]->[10,9,7,4]\n    return list(accumulate(ar[::-1]))[::-1]\n\n\ndef N():\n    return int(inp())\n\n\ndx = [0, 0, 1, -1]\ndy = [1, -1, 0, 0]\n\n\ndef YES():\n    print(\"YES\")\n\n\ndef NO():\n    print(\"NO\")\n\n\ndef Yes():\n    print(\"Yes\")\n\n\ndef No():\n    print(\"No\")\n\n\n# =========================================================================================\nfrom collections import defaultdict\n\n\ndef numberOfSetBits(i):\n    i = i - ((i >> 1) & 0x55555555)\n    i = (i & 0x33333333) + ((i >> 2) & 0x33333333)\n    return (((i + (i >> 4) & 0xF0F0F0F) * 0x1010101) & 0xffffffff) >> 24\n\n\nclass MergeFind:\n    def __init__(self, n):\n        self.parent = list(range(n))\n        self.size = [1] * n\n        self.num_sets = n\n        # self.lista = [[_] for _ in range(n)]\n\n    def find(self, a):\n        to_update = []\n        while a != self.parent[a]:\n            to_update.append(a)\n            a = self.parent[a]\n        for b in to_update:\n            self.parent[b] = a\n        return self.parent[a]\n\n    def merge(self, a, b):\n        a = self.find(a)\n        b = self.find(b)\n        if a == b:\n            return\n        if self.size[a] < self.size[b]:\n            a, b = b, a\n        self.num_sets -= 1\n        self.parent[b] = a\n        self.size[a] += self.size[b]\n        # self.lista[a] += self.lista[b]\n        # self.lista[b] = []\n\n    def set_size(self, a):\n        return self.size[self.find(a)]\n\n    def __len__(self):\n        return self.num_sets\n\n\ndef lcm(a, b):\n    return abs((a // gcd(a, b)) * b)\n\n\n#\n# to find factorial and ncr\n# tot = 200005\n# mod = 10**9 + 7\n# fac = [1, 1]\n# finv = [1, 1]\n# inv = [0, 1]\n#\n# for i in range(2, tot + 1):\n#     fac.append((fac[-1] * i) % mod)\n#     inv.append(mod - (inv[mod % i] * (mod // i) % mod))\n#     finv.append(finv[-1] * inv[-1] % mod)\n\n\ndef comb(n, r):\n    if n < r:\n        return 0\n    else:\n        return fac[n] * (finv[r] * finv[n - r] % mod) % mod\n\n\ndef inp(): return sys.stdin.readline().rstrip(\"\\r\\n\")  # for fast input\n\n\ndef out(var): sys.stdout.write(str(var))  # for fast output, always take string\n\n\ndef lis(): return list(map(int, inp().split()))\n\n\ndef stringlis(): return list(map(str, inp().split()))\n\n\ndef sep(): return map(int, inp().split())\n\n\ndef strsep(): return map(str, inp().split())\n\n\ndef fsep(): return map(float, inp().split())\n\n\ndef nextline(): out(\"\\n\")  # as stdout.write always print sring.\n\n\ndef arr1d(n, v):\n    return [v] * n\n\n\ndef arr2d(n, m, v):\n    return [[v] * m for _ in range(n)]\n\n\ndef arr3d(n, m, p, v):\n    return [[[v] * p for _ in range(m)] for i in range(n)]\n\ndef ceil(a,b):\n    return (a+b-1)//b\n\n#co-ordinate compression\n#ma={s:idx for idx,s in enumerate(sorted(set(l+r)))}\n\ndef solve():\n    n=N()\n    ar=deque(lis())\n    ans=[]\n    prev=-1\n    while(1):\n\n        if not ar:\n            break\n        lef=ar[0]\n        right=ar[-1]\n        poss=[]\n        if lef>prev:\n            poss.append(lef)\n        if right>prev:\n            poss.append(right)\n        if not poss:\n            break\n        if len(poss)==1:\n            if lef>right:\n                ans.append(\"L\")\n                prev=lef\n                ar.popleft()\n            if lef<right:\n                ans.append(\"R\")\n                prev=right\n                ar.pop()\n        if len(poss)==2:\n            if lef<right:\n                ans.append(\"L\")\n                prev=lef\n                ar.popleft()\n            if lef>right:\n                ans.append(\"R\")\n                prev=right\n                ar.pop()\n            if lef==right:\n                templef=[]\n                tempright=[]\n                prevlef=prev\n                for i in range(0,len(ar)):\n                    if ar[i]>prevlef:\n                        templef.append(\"L\")\n                        prevlef=ar[i]\n                    else:\n                        break\n                prevright = prev\n                for i in range( len(ar)-1,-1,-1):\n                    if ar[i] > prevright:\n                        tempright.append(\"R\")\n                        prevright = ar[i]\n                    else:\n                        break\n                if len(templef)>=len(tempright):\n                    ans+=templef\n                    break\n                else:\n                    ans+=tempright\n                    break\n    print(len(ans))\n    print(\"\".join(ans))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsolve()\n#testcase(int(inp()))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Ribhav\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C2IncreasingSubsequenceHardVersion solver = new C2IncreasingSubsequenceHardVersion();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C2IncreasingSubsequenceHardVersion {\n        public void solve(int testNumber, FastReader s, PrintWriter out) {\n            int n = s.nextInt(), k = 0;\n            int[] arr = s.nextIntArray(n);\n\n            int[] a = new int[n];\n            a[n - 1] = 1;\n            for (int i = n - 2; i >= 0; i--) {\n                a[i] = 1;\n                if (arr[i] < arr[i + 1]) {\n                    a[i] += a[i + 1];\n                }\n            }\n\n            int[] b = new int[n];\n            b[0] = 1;\n            for (int i = 1; i < n; i++) {\n                b[i] = 1;\n                if (arr[i] < arr[i - 1]) {\n                    b[i] += b[i - 1];\n                }\n            }\n\n            int l = 0, r = n - 1, curr = 0;\n            StringBuilder sb = new StringBuilder();\n            while (true) {\n                if (l < n && r >= 0 && arr[l] > curr && arr[r] > curr) {\n                    if (arr[l] < arr[r]) {\n                        curr = arr[l];\n                        sb.append('L');\n                        l++;\n                    } else if (arr[l] > arr[r]) {\n                        curr = arr[r];\n                        sb.append('R');\n                        r--;\n                    } else {\n                        if (a[l] > b[r]) {\n                            curr = arr[l];\n                            sb.append('L');\n                            l++;\n                        } else {\n                            curr = arr[r];\n                            sb.append('R');\n                            r--;\n                        }\n                    }\n                } else if (l < n && arr[l] > curr) {\n                    curr = arr[l];\n                    sb.append('L');\n                    l++;\n                } else if (r >= 0 && arr[r] > curr) {\n                    curr = arr[r];\n                    sb.append('R');\n                    r--;\n                } else {\n                    break;\n                }\n                k++;\n            }\n\n            out.println(k);\n            out.println(sb);\n//        out.println(ans.length() + \"\\n\" + ans.reverse().toString());\n        }\n\n    }\n\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private FastReader.SpaceCharFilter filter;\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; ++i) array[i] = nextInt();\n            return array;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class test {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tInputReader in = new InputReader(inputStream);\n//\t\t\n//\t\tfor(int i=4;i<=4;i++) {\n//\t\t\tString f = i+\".in\";\n//\t\t\tInputStream uinputStream = new FileInputStream(\"leftout.in\");\n//\t\t\tInputStream uinputStream = new FileInputStream(f);\n//\t\t\tInputReader in = new InputReader(uinputStream);\n//\t\t\tPrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"leftout.out\")));\n\t\t\tTask t = new Task();\n\t\t\tt.solve(in, out);\n\t\t\tout.close();\t\t\t\n//\t\t}\n\t}\n\t\n\tstatic class Task {\t\t\n\t\t\n\t\tpublic void solve(InputReader in, PrintWriter out) throws IOException {\n\t\t\tint n = in.nextInt();\n\t\t\tint arr[] = new int[n];\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tarr[i] = in.nextInt();\t\t\t\t\n\t\t\t}\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint l=0;int r=n-1;int pre=0;\n\t\t\twhile(l<r&&arr[l]!=arr[r]) {\n\t\t\t\tif(arr[l]<arr[r]) {\n\t\t\t\t\tif(arr[l]>pre) {\n\t\t\t\t\t\tsb.append(\"L\");\n\t\t\t\t\t\tpre = arr[l++];\n\t\t\t\t\t}else if(arr[r]>pre) {\n\t\t\t\t\t\tsb.append(\"R\");\n\t\t\t\t\t\tpre = arr[r--];\n\t\t\t\t\t}else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tif(arr[r]>pre) {\n\t\t\t\t\t\tsb.append(\"R\");\n\t\t\t\t\t\tpre = arr[r--];\n\t\t\t\t\t}else if(arr[l]>pre){\n\t\t\t\t\t\tsb.append(\"L\");\n\t\t\t\t\t\tpre = arr[l++];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(l==r) {\n\t\t\t\tif(arr[l]>pre) sb.append(\"R\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint c1=0; int c2=0;\n\t\t\t\tif(arr[l]>pre) {\n\t\t\t\t\tc1++;\t\t\t\t\n\t\t\t\t\tfor(int i=l+1;i<=r;i++) {\n\t\t\t\t\t\tif(arr[i]>arr[i-1]) c1++;\n\t\t\t\t\t\telse break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(arr[r]>pre) {\n\t\t\t\t\tc2++;\t\t\t\t\n\t\t\t\t\tfor(int i=r-1;i>=l;i--) {\n\t\t\t\t\t\tif(arr[i+1]<arr[i]) c2++;\n\t\t\t\t\t\telse break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(c1>=c2) {\n\t\t\t\t\tfor(int i=0;i<c1;i++) sb.append(\"L\");\n\t\t\t\t}else {\n\t\t\t\t\tfor(int i=0;i<c2;i++) sb.append(\"R\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(sb.length());\n\t\t\tout.println(sb.toString());\n\t\t}\n\t}\n\t\n\tclass BIT{\n\t\tint arr[];\n\t\tint n;\n\t\tpublic BIT(int a) {\n\t\t\tn=a;\n\t\t\tarr = new int[n];\n\t\t}\n\t\tint sum(int p) {\n\t\t\tint s=0;\n\t\t\twhile(p>0) {\n\t\t\t\ts+=arr[p];\n\t\t\t\tp-=p&(-p);\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\t\tvoid add(int p, int v) {\n\t\t\twhile(p<n) {\n\t\t\t\tarr[p]+=v;\n\t\t\t\tp+=p&(-p);\n\t\t\t}\n\t\t}\n\t}\n//\tstatic class DSU{\n//\t\tint[] arr;\n//\t\tint[] sz;\n//\t\tpublic DSU(int n) {\n//\t\t\tarr = new int[n];\n//\t\t\tsz = new int[n];\n//\t\t\tfor(int i=0;i<n;i++) arr[i] = i;\n//\t\t\tArrays.fill(sz, 1);\n//\t\t}\n//\t\tpublic int find(int a) {\n//\t\t\tif(arr[a]!=a) arr[a] = find(arr[a]);\n//\t\t\treturn arr[a];\n//\t\t}\n//\t\tpublic void union(int a, int b) {\n//\t\t\tint x = find(a);\n//\t\t\tint y = find(b);\n//\t\t\tif(x==y) return;\n//\t\t\tarr[x] = y;\n//\t\t\tsz[y] += sz[x];\n//\t\t}\n//\t\tpublic int size(int x) {\n//\t\t\treturn sz[find(x)];\n//\t\t}\n//\t}\t\n\tstatic class MinHeap<Key> implements Iterable<Key> {\n\t\tprivate int maxN;\n\t\tprivate int n;\n\t\tprivate int[] pq;\n\t\tprivate int[] qp;\n\t\tprivate Key[] keys;\n\t\tprivate Comparator<Key> comparator;\n\t\t\n\t\tpublic MinHeap(int capacity){\n\t\t\tif (capacity < 0) throw new IllegalArgumentException();\n\t\t\tthis.maxN = capacity;\n\t\t\tn=0;\n\t\t\tpq = new int[maxN+1];\n\t\t\tqp = new int[maxN+1];\n\t\t\tkeys = (Key[]) new Object[capacity+1];\n\t\t\tArrays.fill(qp, -1);\n\t\t}\n\t\t\n\t\tpublic MinHeap(int capacity, Comparator<Key> c){\n\t\t\tif (capacity < 0) throw new IllegalArgumentException();\n\t\t\tthis.maxN = capacity;\n\t\t\tn=0;\n\t\t\tpq = new int[maxN+1];\n\t\t\tqp = new int[maxN+1];\n\t\t\tkeys = (Key[]) new Object[capacity+1];\n\t\t\tArrays.fill(qp, -1);\n\t\t\tcomparator = c;\n\t\t}\t\t\t\n\t\tpublic boolean isEmpty()\t{ return n==0; \t}\n\t\tpublic int size()\t\t\t{ return n;\t\t}\n\t\tpublic boolean contains(int i) {\n\t        if (i < 0 || i >= maxN) throw new IllegalArgumentException();\n\t        return qp[i] != -1;\n\t\t}\t\n\t\tpublic int peekIdx() {\n\t        if (n == 0) throw new NoSuchElementException(\"Priority queue underflow\");\n\t        return pq[1];\t\t\n\t\t}\t\n\t\tpublic Key peek(){\n\t\t\tif(isEmpty()) throw new NoSuchElementException(\"Priority queue underflow\");\n\t\t\treturn keys[pq[1]];\n\t\t}\n\t\tpublic int poll(){\n\t\t\tif(isEmpty()) throw new NoSuchElementException(\"Priority queue underflow\");\n\t\t\tint min = pq[1];\n\t\t\texch(1,n--);\n\t\t\tdown(1);\n\t\t\tassert min==pq[n+1];\n\t\t\tqp[min] = -1;\n\t\t\tkeys[min] = null;\t\t\n\t\t\tpq[n+1] = -1;\n\t\t\treturn min;\n\t\t}\n\t    public void update(int i, Key key) {\n\t        if (i < 0 || i >= maxN) throw new IllegalArgumentException();\n\t        if (!contains(i)) {\n\t        \tthis.add(i, key);\n\t        }else {\n\t        \tkeys[i] = key;\n\t        \tup(qp[i]);\n\t        \tdown(qp[i]);\n\t        }\n\t    }\t\n\t\tprivate void add(int i, Key x){\n\t        if (i < 0 || i >= maxN) throw new IllegalArgumentException();\n\t        if (contains(i)) throw new IllegalArgumentException(\"index is already in the priority queue\");\n\t        n++;\n\t        qp[i] = n;\n\t        pq[n] = i;\n\t        keys[i] = x;\n\t        up(n);\n\t\t}\n\t\tprivate void up(int k){\n\t\t\twhile(k>1&&less(k,k/2)){\n\t\t\t\texch(k,k/2);\n\t\t\t\tk/=2;\n\t\t\t}\n\t\t}\n\t\tprivate void down(int k){\n\t\t\twhile(2*k<=n){\n\t\t\t\tint j=2*k;\n\t\t\t\tif(j<n&&less(j+1,j)) j++;\n\t\t\t\tif(less(k,j)) break;\n\t\t\t\texch(k,j);\n\t\t\t\tk=j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic boolean less(int i, int j){\n\t        if (comparator == null) {\n\t            return ((Comparable<Key>) keys[pq[i]]).compareTo(keys[pq[j]]) < 0;\n\t        }\n\t        else {\n\t            return comparator.compare(keys[pq[i]], keys[pq[j]]) < 0;\n\t        }\n\t\t}\n\n\t\tpublic void exch(int i, int j){\n\t        int swap = pq[i];\n\t        pq[i] = pq[j];\n\t        pq[j] = swap;\n\t        qp[pq[i]] = i;\n\t        qp[pq[j]] = j;\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<Key> iterator() {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\t}  \t\n\n    private static class InputReader\n    {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int zcurChar;\n        private int znumChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n\n        public int read()\n        {\n            if (znumChars == -1)\n                throw new InputMismatchException();\n            if (zcurChar >= znumChars)\n            {\n            \tzcurChar = 0;\n                try\n                {\n                    znumChars = stream.read(buf);\n                } catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                if (znumChars <= 0)\n                    return -1;\n            }\n            return buf[zcurChar++];\n        }\n\n        public int nextInt()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public double nextDouble()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.')\n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.')\n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public long nextLong()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c)\n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next()\n        {\n            return nextString();\n        }\n\n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }    \n\n\tstatic class Dumper {\n\t\tstatic void print_int_arr(int[] arr) {\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print_char_arr(char[] arr) {\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print_double_arr(double[] arr) {\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print_2d_arr(int[][] arr, int x, int y) {\n\t\t\tfor (int i = 0; i < x; i++) {\n\t\t\t\tfor (int j = 0; j < y; j++) {\n\t\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print_2d_arr(boolean[][] arr, int x, int y) {\n\t\t\tfor (int i = 0; i < x; i++) {\n\t\t\t\tfor (int j = 0; j < y; j++) {\n\t\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print(Object o) {\n\t\t\tSystem.out.println(o.toString());\n\t\t}\n\n\t\tstatic void getc() {\n\t\t\tSystem.out.println(\"here\");\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "def getHighAns(a, low, high):\n\tcount = 1\n\tans = ''\n\tans += 'R'\n\tlast = a[high]\n\thigh -= 1\n\twhile(low <= high):\n\t\tif(last < a[high]):\n\t\t\tcount += 1\n\t\t\tans += 'R'\n\t\t\tlast = a[high]\n\t\t\thigh -= 1\n\t\telse:\n\t\t\tbreak\n\treturn count, ans\n\ndef getLowAns(a, low, high):\n\tcount = 1\n\tans = ''\n\tans += 'L'\n\tlast = a[low]\n\tlow += 1\n\twhile(low <= high):\n\t\tif(last < a[low]):\n\t\t\tcount += 1\n\t\t\tans += 'L'\n\t\t\tlast = a[low]\n\t\t\tlow += 1\n\t\telse:\n\t\t\tbreak\n\treturn count, ans\n\nn = int(input())\na = list(map(int, input().split()))\nhigh = n-1\nlow = 0\nlast = 0\nif(a[high] == a[low] and last < a[low]):\n\tcount = 0\n\tans = \"\"\n\tch, ah = getHighAns(a, low, high)\n\tcl, al = getLowAns(a, low, high)\n\tif(ch > cl):\n\t\tcount += ch\n\t\tans += ah\n\t\tprint(count)\n\t\tprint(ans)\n\telse:\n\t\tcount += cl\n\t\tans += al\n\t\tprint(count)\n\t\tprint(ans)\nelse:\n\tlow = 0\n\thigh = n-1\n\tlast = 0\n\tcount = 1\n\tans = \"\"\n\tif(a[low] < a[high]):\n\t\tlast = a[low]\n\t\tans += 'L'\n\t\tlow += 1\n\telse:\n\t\tlast = a[high]\n\t\tans += 'R'\n\t\thigh -= 1\n\twhile(low <= high):\n\t\tif(a[high] == a[low] and last < a[low]):\n\t\t\tch, ah = getHighAns(a, low, high)\n\t\t\tcl, al = getLowAns(a, low, high)\n\t\t\tif(ch > cl):\n\t\t\t\tcount += ch\n\t\t\t\tans += ah\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tcount += cl\n\t\t\t\tans += al\n\t\t\t\tbreak\n\t\telif(last < a[low] < a[high]):\n\t\t\tlast = a[low]\n\t\t\tans += 'L'\n\t\t\tcount += 1\n\t\t\tlow += 1\n\t\telif(last < a[high] < a[low]):\n\t\t\tlast = a[high]\n\t\t\tans += 'R'\n\t\t\tcount += 1\n\t\t\thigh -= 1\n\t\telif(last < a[low]):\n\t\t\tlast = a[low]\n\t\t\tans += 'L'\n\t\t\tcount += 1\n\t\t\tlow += 1\n\t\telif(last < a[high]):\n\t\t\tlast = a[high]\n\t\t\tans += 'R'\n\t\t\tcount += 1\n\t\t\thigh -= 1\n\t\telse:\n\t\t\tbreak\n\tprint(count)\n\tprint(ans)"
        },
        {
            "language": 4,
            "solution": "/*\n    Author: Anthony Ngene\n    Created: 25/09/2020 - 05:25\n*/\n\nimport java.io.*;\nimport java.util.*;\n\npublic class C2 {\n    // checks: 1. edge cases   2. overflow   3. possible errors (e.g 1/0, arr[out])   4. time/space complexity\n    void solver() throws IOException {\n\n        int n = in.intNext();\n        int[] arr = in.nextIntArray(n);\n        int l = 0;\n        int r = n - 1;\n        int prev = 0;\n        int rs = 0;\n        while (l <= r) {\n            boolean both = prev < arr[l] && prev < arr[r];\n            if (both && r != l && arr[r] == arr[l]) {\n//                out.pp(r, l);\n                StringBuilder left = new StringBuilder();\n                int prev2 = prev;\n                while (prev2 < arr[l]) {\n                    left.append('L');\n                    prev2 = arr[l++];\n                }\n                StringBuilder right = new StringBuilder();\n                while (prev < arr[r]) {\n                    right.append('R');\n                    prev = arr[r--];\n                }\n                rs += max(left.length(), right.length());\n//                out.pp(left, right);\n                if (left.length() > right.length())\n                    out.p(left);\n                else\n                    out.p(right);\n                break;\n            } else if ((prev < arr[l] && prev >= arr[r]) || (both && arr[l] < arr[r])) {\n                out.p('L');\n                prev = arr[l++];\n            } else if (prev < arr[r]) {\n                out.p('R');\n                prev = arr[r--];\n            } else\n                break;\n            rs++;\n        }\n        System.out.println(rs);\n\n    }\n\n\n    // Generated Code Below:\n    private static final FastWriter out = new FastWriter();\n    private static FastScanner in;\n    static ArrayList<Integer>[] adj;\n    private static long e97 = (long)1e9 + 7;\n    public static void main(String[] args) throws IOException {\n        in = new FastScanner();\n        new C2().solver();\n        out.close();\n    }\n\n    static class FastWriter {\n        private static final int IO_BUFFERS = 128 * 1024;\n        private final StringBuilder out;\n        public FastWriter() { out = new StringBuilder(IO_BUFFERS); }\n        public FastWriter p(Object object) { out.append(object); return this; }\n        public FastWriter p(String format, Object... args) { out.append(String.format(format, args)); return this; }\n        public FastWriter pp(Object... args) { for (Object ob : args) { out.append(ob).append(\" \");  } out.append(\"\\n\"); return this; }\n        public FastWriter pp(int[] args) { for (int ob : args) { out.append(ob).append(\" \");  } out.append(\"\\n\"); return this; }\n        public FastWriter pp(long[] args) { for (long ob : args) { out.append(ob).append(\" \");  } out.append(\"\\n\"); return this; }\n        public FastWriter pp(char[] args) { for (char ob : args) { out.append(ob).append(\" \");  } out.append(\"\\n\"); return this; }\n        public void println(long[] arr) { for(long e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n        public void println(int[] arr) { for(int e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n        public void println(char[] arr) { for(char e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n        public void println(double[] arr) { for(double e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n        public void println(boolean[] arr) { for(boolean e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n        public <T>void println(T[] arr) { for(T e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n        public void println(long[][] arr) {  for (long[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n        public void println(int[][] arr) {  for (int[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n        public void println(char[][] arr) {  for (char[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n        public void println(double[][] arr) {  for (double[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n        public <T>void println(T[][] arr) {  for (T[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n        public FastWriter println(Object object) { out.append(object).append(\"\\n\"); return this; }\n        public void toFile(String fileName) throws IOException {\n            BufferedWriter writer = new BufferedWriter(new FileWriter(fileName));\n            writer.write(out.toString());\n            writer.close();\n        }\n        public void close() throws IOException { System.out.print(out); }\n    }\n    static class FastScanner {\n        private InputStream sin = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n        public FastScanner(){}\n        public FastScanner(String filename) throws FileNotFoundException {\n            File file = new File(filename);\n            sin = new FileInputStream(file);\n        }\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            }else{\n                ptr = 0;\n                try {\n                    buflen = sin.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n        private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n        public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while(isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n        public long longNext() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while(true){\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                }else if(b == -1 || !isPrintableChar(b) || b == ':'){\n                    return minus ? -n : n;\n                }else{\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n        public int intNext() {\n            long nl = longNext();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n        public double doubleNext() { return Double.parseDouble(next());}\n        public long[] nextLongArray(final int n){\n            final long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = longNext();\n            return a;\n        }\n        public int[] nextIntArray(final int n){\n            final int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = intNext();\n            return a;\n        }\n        public double[] nextDoubleArray(final int n){\n            final double[] a = new double[n];\n            for (int i = 0; i < n; i++)\n                a[i] = doubleNext();\n            return a;\n        }\n        public ArrayList<Integer>[] getAdj(int n) {\n            ArrayList<Integer>[] adj = new ArrayList[n + 1];\n            for (int i = 1; i <= n; i++) adj[i] = new ArrayList<>();\n            return adj;\n        }\n        public ArrayList<Integer>[] adjacencyList(int nodes, int edges) throws IOException {\n            return adjacencyList(nodes, edges, false);\n        }\n        public ArrayList<Integer>[] adjacencyList(int nodes, int edges, boolean isDirected) throws IOException {\n            adj = getAdj(nodes);\n            for (int i = 0; i < edges; i++) {\n                int a = intNext(), b = intNext();\n                adj[a].add(b);\n                if (!isDirected) adj[b].add(a);\n            }\n            return adj;\n        }\n    }\n    static class u {\n        public static int upperBound(long[] array, long obj) {\n            int l = 0, r = array.length - 1;\n            while (r - l >= 0) {\n                int c = (l + r) / 2;\n                if (obj < array[c]) {\n                    r = c - 1;\n                } else {\n                    l = c + 1;\n                }\n            }\n            return l;\n        }\n        public static int upperBound(ArrayList<Long> array, long obj) {\n            int l = 0, r = array.size() - 1;\n            while (r - l >= 0) {\n                int c = (l + r) / 2;\n                if (obj < array.get(c)) {\n                    r = c - 1;\n                } else {\n                    l = c + 1;\n                }\n            }\n            return l;\n        }\n        public static int lowerBound(long[] array, long obj) {\n            int l = 0, r = array.length - 1;\n            while (r - l >= 0) {\n                int c = (l + r) / 2;\n                if (obj <= array[c]) {\n                    r = c - 1;\n                } else {\n                    l = c + 1;\n                }\n            }\n            return l;\n        }\n        public static int lowerBound(ArrayList<Long> array, long obj) {\n            int l = 0, r = array.size() - 1;\n            while (r - l >= 0) {\n                int c = (l + r) / 2;\n                if (obj <= array.get(c)) {\n                    r = c - 1;\n                } else {\n                    l = c + 1;\n                }\n            }\n            return l;\n        }\n        static <T> T[][] deepCopy(T[][] matrix) { return Arrays.stream(matrix).map(el -> el.clone()).toArray($ -> matrix.clone()); }\n        static int[][] deepCopy(int[][] matrix) { return Arrays.stream(matrix).map(int[]::clone).toArray($ -> matrix.clone()); }\n        static long[][] deepCopy(long[][] matrix) { return Arrays.stream(matrix).map(long[]::clone).toArray($ -> matrix.clone()); }\n        private static void sort(int[][] arr){ Arrays.sort(arr, Comparator.comparingDouble(o -> o[0])); }\n        private static void sort(long[][] arr){ Arrays.sort(arr, Comparator.comparingDouble(o -> o[0])); }\n        private static <T>void rSort(T[] arr) { Arrays.sort(arr, Collections.reverseOrder()); }\n        private static void customSort(int[][] arr) {\n            Arrays.sort(arr, new Comparator<int[]>() {\n                public int compare(int[] a, int[] b) {\n                    if (a[0] == b[0]) return Integer.compare(a[1], b[1]);\n                    return Integer.compare(a[0], b[0]);\n                }\n            });\n        }\n        public static int[] swap(int[] arr, int left, int right) {\n            int temp = arr[left];\n            arr[left] = arr[right];\n            arr[right] = temp;\n            return arr;\n        }\n        public static char[] swap(char[] arr, int left, int right) {\n            char temp = arr[left];\n            arr[left] = arr[right];\n            arr[right] = temp;\n            return arr;\n        }\n        public static int[] reverse(int[] arr, int left, int right) {\n            while (left < right) {\n                int temp = arr[left];\n                arr[left++] = arr[right];\n                arr[right--] = temp;\n            }\n            return arr;\n        }\n        public static boolean findNextPermutation(int[] data) {\n            if (data.length <= 1) return false;\n            int last = data.length - 2;\n            while (last >= 0) {\n                if (data[last] < data[last + 1]) break;\n                last--;\n            }\n            if (last < 0) return false;\n            int nextGreater = data.length - 1;\n            for (int i = data.length - 1; i > last; i--) {\n                if (data[i] > data[last]) {\n                    nextGreater = i;\n                    break;\n                }\n            }\n            data = swap(data, nextGreater, last);\n            data = reverse(data, last + 1, data.length - 1);\n            return true;\n        }\n        public static int biSearch(int[] dt, int target){\n            int left=0, right=dt.length-1;\n            int mid=-1;\n            while(left<=right){\n                mid = (right+left)/2;\n                if(dt[mid] == target) return mid;\n                if(dt[mid] < target) left=mid+1;\n                else right=mid-1;\n            }\n            return -1;\n        }\n        public static int biSearchMax(long[] dt, long target){\n            int left=-1, right=dt.length;\n            int mid=-1;\n\n            while((right-left)>1){\n                mid = left + (right-left)/2;\n                if(dt[mid] <= target) left=mid;\n                else right=mid;\n            }\n            return left;\n        }\n        public static int biSearchMaxAL(ArrayList<Integer> dt, long target){\n            int left=-1, right=dt.size();\n            int mid=-1;\n\n            while((right-left)>1){\n                mid = left + (right-left)/2;\n                if(dt.get(mid) <= target) left=mid;\n                else right=mid;\n            }\n            return left;\n        }\n        private static <T>void fill(T[][] ob, T res){for(int i=0;i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n        private static void fill(boolean[][] ob,boolean res){for(int i=0;i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n        private static void fill(int[][] ob, int res){      for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n        private static void fill(long[][] ob, long res){    for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n        private static void fill(char[][] ob, char res){    for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n        private static void fill(double[][] ob, double res){for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n        private static void fill(int[][][] ob,int res){for(int i=0;i<ob.length;i++){for(int j=0;j<ob[0].length;j++){for(int k=0;k<ob[0][0].length;k++){ob[i][j][k]=res;}}}}\n        private static void fill(long[][][] ob,long res){for(int i=0;i<ob.length;i++){for(int j=0;j<ob[0].length;j++){for(int k=0;k<ob[0][0].length;k++){ob[i][j][k]=res;}}}}\n        private static <T>void fill(T[][][] ob,T res){for(int i=0;i<ob.length;i++){for(int j=0;j<ob[0].length;j++){for(int k=0;k<ob[0][0].length;k++){ob[i][j][k]=res;}}}}\n        private static void fill_parent(int[] ob){ for(int i=0; i<ob.length; i++) ob[i]=i; }\n        private static boolean same3(long a, long b, long c){\n            if(a!=b) return false;\n            if(b!=c) return false;\n            if(c!=a) return false;\n            return true;\n        }\n        private static boolean dif3(long a, long b, long c){\n            if(a==b) return false;\n            if(b==c) return false;\n            if(c==a) return false;\n            return true;\n        }\n        private static double hypotenuse(double a, double b){\n            return Math.sqrt(a*a+b*b);\n        }\n        private static long factorial(int n) {\n            long ans=1;\n            for(long i=n; i>0; i--){ ans*=i; }\n            return ans;\n        }\n        private static long facMod(int n, long mod) {\n            long ans=1;\n            for(long i=n; i>0; i--) ans = (ans * i) % mod;\n            return ans;\n        }\n        private static long lcm(long m, long n){\n            long ans = m/gcd(m,n);\n            ans *= n;\n            return ans;\n        }\n        private static long gcd(long m, long n) {\n            if(m < n) return gcd(n, m);\n            if(n == 0) return m;\n            return gcd(n, m % n);\n        }\n        private static boolean isPrime(long a){\n            if(a==1) return false;\n            for(int i=2; i<=Math.sqrt(a); i++){  if(a%i == 0) return false;  }\n            return true;\n        }\n        static long modInverse(long a, long mod) {\n    /* Fermat's little theorem: a^(MOD-1) => 1\n    Therefore (divide both sides by a): a^(MOD-2) => a^(-1) */\n            return binpowMod(a, mod - 2, mod);\n        }\n        static long binpowMod(long a, long b, long mod) {\n            long res = 1;\n            while (b > 0) {\n                if (b % 2 == 1) res = (res * a) % mod;\n                a = (a * a) % mod;\n                b /= 2;\n            }\n            return res;\n        }\n        private static int getDigit2(long num){\n            long cf = 1;    int d=0;\n            while(num >= cf){   d++;    cf = 1<<d;  }\n            return d;\n        }\n        private static int getDigit10(long num){\n            long cf = 1;    int d=0;\n            while(num >= cf){   d++;    cf*=10;     }\n            return d;\n        }\n        private static boolean isInArea(int y, int x, int h, int w){\n            if(y<0) return false;\n            if(x<0) return false;\n            if(y>=h) return false;\n            if(x>=w) return false;\n            return true;\n        }\n        private static ArrayList<Integer> generatePrimes(int n) {\n            int[] lp = new int[n + 1];\n            ArrayList<Integer> pr = new ArrayList<>();\n            for (int i = 2; i <= n; ++i) {\n                if (lp[i] == 0) {\n                    lp[i] = i;\n                    pr.add(i);\n                }\n                for (int j = 0; j < pr.size() && pr.get(j) <= lp[i] && i * pr.get(j) <= n; ++j) {\n                    lp[i * pr.get(j)] = pr.get(j);\n                }\n            }\n            return pr;\n        }\n        static long nPrMod(int n, int r, long MOD) {\n            long res = 1;\n            for (int i = (n - r + 1); i <= n; i++) {\n                res = (res * i) % MOD;\n            }\n            return res;\n        }\n        static long nCr(int n, int r) {\n            if (r > (n - r))\n                r = n - r;\n            long ans = 1;\n            for (int i = 1; i <= r; i++) {\n                ans *= n;\n                ans /= i;\n                n--;\n            }\n            return ans;\n        }\n        static long nCrMod(int n, int r, long MOD) {\n            long rFactorial = nPrMod(r, r, MOD);\n            long first = nPrMod(n, r, MOD);\n            long second = binpowMod(rFactorial, MOD-2, MOD);\n            return  (first * second) % MOD;\n        }\n        static void printBitRepr(int n) {\n            StringBuilder res = new StringBuilder();\n            for (int i = 0; i < 32; i++) {\n                int mask = (1 << i);\n                res.append((mask & n) == 0 ? \"0\" : \"1\");\n            }\n            out.println(res);\n        }\n        static String bitString(int n) {return Integer.toBinaryString(n);}\n        static int setKthBitToOne(int n, int k) { return (n | (1 << k)); } // zero indexed\n        static int setKthBitToZero(int n, int k) { return (n & ~(1 << k)); }\n        static int invertKthBit(int n, int k) { return (n ^ (1 << k)); }\n        static boolean isPowerOfTwo(int n) { return (n & (n - 1)) == 0; }\n        static HashMap<Character, Integer> counts(String word) {\n            HashMap<Character, Integer> counts = new HashMap<>();\n            for (int i = 0; i < word.length(); i++) counts.merge(word.charAt(i), 1, Integer::sum);\n            return counts;\n        }\n        static HashMap<Integer, Integer> counts(int[] arr) {\n            HashMap<Integer, Integer> counts = new HashMap<>();\n            for (int value : arr) counts.merge(value, 1, Integer::sum);\n            return counts;\n        }\n        static HashMap<Long, Integer> counts(long[] arr) {\n            HashMap<Long, Integer> counts = new HashMap<>();\n            for (long l : arr) counts.merge(l, 1, Integer::sum);\n            return counts;\n        }\n        static HashMap<Character, Integer> counts(char[] arr) {\n            HashMap<Character, Integer> counts = new HashMap<>();\n            for (char c : arr) counts.merge(c, 1, Integer::sum);\n            return counts;\n        }\n        static long hash(int x, int y) {\n            return x* 1_000_000_000L +y;\n        }\n        static final Random random = new Random();\n        static void sort(int[] a) {\n            int n = a.length;// shuffle, then sort\n            for (int i = 0; i < n; i++) {\n                int oi = random.nextInt(n), temp = a[oi];\n                a[oi] = a[i];\n                a[i] = temp;\n            }\n            Arrays.sort(a);\n        }\n        static void sort(long[] arr) {\n            shuffleArray(arr);\n            Arrays.sort(arr);\n        }\n        static void shuffleArray(long[] arr) {\n            int n = arr.length;\n            for(int i=0; i<n; ++i){\n                long tmp = arr[i];\n                int randomPos = i + random.nextInt(n-i);\n                arr[i] = arr[randomPos];\n                arr[randomPos] = tmp;\n            }\n        }\n    }\n    static class Tuple implements Comparable<Tuple> {\n        int a;\n        int b;\n        int c;\n        public Tuple(int a, int b) {\n            this.a = a;\n            this.b = b;\n            this.c = 0;\n        }\n        public Tuple(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n        }\n        public int getA() { return a; }\n        public int getB() { return b; }\n        public int getC() { return c; }\n        public int compareTo(Tuple other) {\n            if (this.a == other.a) {\n                if (this.b == other.b) return Long.compare(this.c, other.c);\n                return Long.compare(this.b, other.b);\n            }\n            return Long.compare(this.a, other.a);\n        }\n        @Override\n        public int hashCode() { return Arrays.deepHashCode(new Integer[]{a, b, c}); }\n        @Override\n        public boolean equals(Object o) {\n            if (!(o instanceof Tuple)) return false;\n            Tuple pairo = (Tuple) o;\n            return (this.a == pairo.a && this.b == pairo.b && this.c == pairo.c);\n        }\n        @Override\n        public String toString() { return String.format(\"(%d %d %d)  \", this.a, this.b, this.c); }\n    }\n    private static int abs(int a){  return (a>=0) ? a: -a;  }\n    private static int min(int... ins){ int min = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] < min) min = ins[i]; } return min; }\n    private static int max(int... ins){ int max = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] > max) max = ins[i]; } return max; }\n    private static int sum(int... ins){ int total = 0; for (int v : ins) { total += v; } return total; }\n    private static long abs(long a){    return (a>=0) ? a: -a;  }\n    private static long min(long... ins){ long min = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] < min) min = ins[i]; } return min; }\n    private static long max(long... ins){ long max = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] > max) max = ins[i]; } return max; }\n    private static long sum(long... ins){ long total = 0; for (long v : ins) { total += v; } return total; }\n    private static double abs(double a){    return (a>=0) ? a: -a;  }\n    private static double min(double... ins){ double min = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] < min) min = ins[i]; } return min; }\n    private static double max(double... ins){ double max = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] > max) max = ins[i]; } return max; }\n    private static double sum(double... ins){ double total = 0; for (double v : ins) { total += v; } return total; }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(X ) for X in input().split()]\nif n==1:\n    print(1)\n    \n    \n    print('L')\nelse:    \n    for m in range(1,n):\n        if a[m]<=a[m-1]:\n            break\n    for p in range(n-2,-1,-1) :\n        if a[p]<=a[p+1]:\n            break\n    p=n-1-p\n    \n    if True:\n    \n        i,j=0,n-1\n    \n        an=[]\n        x=[-1]\n        while(i<j and i<n and j>-1  ):\n            if a[i]>a[j] and a[j]>x[-1]:\n                an.append('R')\n                x.append(a[j])\n                p-=1\n                j-=1\n            elif a[j]>a[i] and a[i]>x[-1]:\n    \n                an.append('L')\n                x.append(a[i])\n                m-=1\n                i+=1\n            elif False:\n                pass\n            elif  a[i]>a[j] and a[i]>x[-1]:\n                an.append('L')\n                x.append(a[i])\n                m-=1\n                i+=1\n            elif False:\n                pass\n    \n            elif a[j]>a[i] and a[j]>x[-1]:\n                an.append('R')\n                x.append(a[j])\n                p-=1\n                j-=1\n            elif False:\n                pass\n            elif a[j]==a[i] and x[-1]<a[j]  :\n                if p>m :\n                    an.append('R')\n                    x.append(a[j])\n                    p -= 1\n                    j -= 1\n                else:\n                    an.append('L')\n                    x.append(a[i])\n                    m -= 1\n                    i += 1\n    \n            else:\n    \n    \n                break\n         #   print(p,m,x)\n        if i==j and a[i]>x[-1]:\n            an.append('L')\n        print(len(an))\n        print(''.join(an))\n    \n"
        },
        {
            "language": 3,
            "solution": "\n# -*- coding: utf-8 -*-\n# @Date    : 2019-04-27 15:37:29\n# @Author  : raj lath (oorja.halt@gmail.com)\n# @Link    : link\n# @Version : 1.0.0\n\nimport sys\nsys.setrecursionlimit(10**5+1)\n\ninf     =  int(10 ** 20)\nmax_val =  inf\nmin_val = -inf\n\nRW  = lambda : sys.stdin.readline().strip()\nRI  = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\n\n\n#! Solution by xumouyi\n\ndef solve(p, q, r):\n    ans = \"\"\n    current = r\n    i = p\n    j = q\n    while True:\n        if j < i:\n            break\n        if current < num[i] < num[j] or num[j] <= current < num[i]:\n            ans += \"L\"\n            current = num[i]\n            i += 1\n            continue\n        if current < num[j] < num[i] or num[i] <= current < num[j]:\n            ans += \"R\"\n            current = num[j]\n            j -= 1\n            continue\n        if current < num[i] == num[j]:\n            ans1 = solve(i, j - 1, num[i])\n            ans2 = solve(i + 1, j, num[i])\n            if len(ans1) > len(ans2):\n                ans += \"R\" + ans1\n            else:\n                ans += \"L\" + ans2\n        break\n    return ans\n\nn = int(input())\nnum = [*map(int, input().split())]\nans = solve(0, n - 1, -1)\nprint(len(ans))\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "def count(b, dir, g):\n    n = 0\n    if dir == 'L':\n        while g >= l and a[g] > b:\n            b = a[g]\n            g -= 1\n            n += 1\n    else:\n        while g <= r and a[g] > b:\n            b = a[g]\n            g += 1\n            n += 1\n    return n\n            \nn = int(input())\na = [int(i) for i in input().split()]\nb = 0\ns = ''\nl = 0\nr = n-1\nn1 = 0\n\nwhile l <= r and (a[l] > b or a[r] > b):\n    if a[l] < a[r]:\n        if a[l] > b:\n            b=a[l]\n            n1 += 1\n            l += 1\n            s += 'L'\n        else:\n            b=a[r]\n            n1 += 1\n            r -= 1\n            s += 'R'\n    elif a[r] < a[l]:\n        if a[r] > b:\n            b=a[r]\n            n1 += 1\n            r -= 1\n            s += 'R'\n        else:\n            b=a[l]\n            n1 += 1\n            l += 1\n            s += 'L'\n    else:\n        n2 = count(b, 'L', r)\n        n3 = count(b, 'R', l)\n        if n3 > n2:\n            n1 += n3\n            s += n3*'L'\n            break\n        else:\n            n1 += n2\n            s += n2 * 'R'\n            break\nprint(n1)\nprint(s)\n"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int,raw_input().split())\nc=0\ns=\"\"\nf=False\nt=0\nwhile a[0]!=a[-1]:\n    if a[0]==a[-1]:\n        break\n    if a[0]>t:\n        if a[-1]>t and a[-1]<a[0]:\n            t=a[-1]\n            s+=\"R\"\n            del a[-1]\n        else:\n            t=a[0]\n            s+=\"L\"\n            del a[0]\n    elif a[-1]>t:\n        t=a[-1]\n        s+=\"R\"\n        del a[-1]\n    else:\n        f=True\n        break\nif f==False:\n    x=0\n    q=\"\"\n    z=t\n    i=0\n    l=len(a)\n    while i<l and a[i]>z:\n        z=a[i]\n        i+=1\n    j=-1\n    z=t\n    while j>=-l and a[j]>z:\n        z=a[j]\n        j-=1\n    j=(-j)-1\n    if i>j:\n        q=\"L\"*i\n    else:\n        q=\"R\"*j\n    s+=q\nprint len(s)\nprint s"
        },
        {
            "language": 3,
            "solution": "def f(r1):\n    global r, lastNum, lPos, rPos\n    r.append(r1)\n    if r1 == 'L':\n        lastNum = a[lPos]\n        lPos += 1\n    else:\n        lastNum = a[rPos]\n        rPos -= 1\n\ndef onlyLeft(begin):\n    global a\n    pos = begin\n    while a[pos] < a[pos+1]:\n        pos += 1\n    return pos - begin + 1\n\ndef onlyRight(begin):\n    global a\n    pos = begin\n    while a[pos] < a[pos-1]:\n        pos -= 1\n    return begin - pos + 1\n\n\n        \nn = int(input())\na = list(map(int, input().split()))\nr = []\nlastNum = -1\nlPos = 0\nrPos = n-1\nwhile lPos <= rPos:\n    if a[lPos] <= lastNum and a[rPos] <= lastNum:\n        break\n##    print(lPos, rPos, level, r)\n    if lPos == rPos:\n        if a[lPos] > lastNum:\n            f('L')\n        break\n    if a[lPos] == a[rPos]:\n        r1 = onlyLeft(lPos)\n        r2 = onlyRight(rPos)\n        if r1 > r2:\n            for i in range(r1):\n                r.append('L')\n        else:\n            for i in range(r2):\n                r.append('R')\n        break        \n    if a[lPos] < a[rPos]:\n        if a[lPos] > lastNum:\n            f('L')\n        elif a[rPos] > lastNum:\n            f('R')\n    if a[lPos] > a[rPos]:\n        if a[rPos] > lastNum:\n            f('R')\n        elif a[lPos] > lastNum:\n            f('L')\n\nprint(len(r))\nprint(*r, sep='')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n \npublic class Main {\n\tpublic static void main(String args[]) {new Main().run();}\n\t\n\tScanner in = new Scanner(System.in);\n\tPrintWriter out = new PrintWriter(System.out);\n\tvoid run(){\n\t    work();\n\t    out.flush();\n\t}\n\tlong mod=998244353L;\n\tvoid work() {\n\t    int n=in.nextInt();\n\t    int[] A=new int[n];\n\t    for(int i=0;i<n;i++)A[i]=in.nextInt();\n\t    StringBuilder sb=new StringBuilder();\n\t    for(int l=0,r=n-1,cur=0;l<=r;){\n\t        if(A[l]<=cur&&A[r]<=cur)break;\n\t        if(l==r){\n\t            sb.append(\"L\");\n\t            break;\n\t        }\n\t        if(A[l]<A[r]){\n\t            if(A[l]>cur){\n\t                sb.append(\"L\");\n\t                cur=A[l++];\n\t            }else{\n\t                sb.append(\"R\");\n\t                cur=A[r--];\n\t            }\n\t        }else if(A[l]>A[r]){\n\t            if(A[r]>cur){\n\t                sb.append(\"R\");\n\t                cur=A[r--];\n\t            }else{\n\t                sb.append(\"L\");\n\t                cur=A[l++];\n\t            }\n\t        }else{\n\t            int l1=1;\n\t            int l2=1;\n\t            while(A[l]<A[l+1]){\n\t                l++;\n\t                l1++;\n\t            }\n\t            while(A[r]<A[r-1]){\n\t                r--;\n\t                l2++;\n\t            }\n\t            if(l1>=l2){\n\t                for(int i=0;i<l1;i++){\n\t                    sb.append(\"L\");\n\t                }\n\t            }else{\n\t                for(int i=0;i<l2;i++){\n\t                    sb.append(\"R\");\n\t                }\n\t            }\n\t            break;\n\t        }\n\t    }\n\t    out.println(sb.length());\n\t    out.println(sb.toString());\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class TaskC {\n    private static final String filenameIn = \"input.txt\";\n    private static final String filenameOut = \"output.txt\";\n\n    // THIS IS SOLUTION!!!!!!!\n    // LOOK HERE!\n    // HACK ME PLEASE, if you can!!!\n\n\n    void solve() {\n        int n = nextInt();\n        int[] a = nextIntArray(n);\n        int left = 0;\n        int right = n - 1;\n        List<Character> list = new ArrayList<>(n);\n        int prev = -1;\n\n        while (left <= right) {\n            if (Math.max(a[left], a[right]) <= prev) {\n                break;\n            }\n\n            if (left == right) {\n                list.add('R');\n                break;\n            }\n\n            if (a[left] > prev && (a[left] < a[right] || a[right] < prev)) {\n                prev = a[left];\n                list.add('L');\n                left++;\n                continue;\n            }\n\n            if (a[right] > prev && (a[right] < a[left] || a[left] < prev)) {\n                prev = a[right];\n                list.add('R');\n                right--;\n                continue;\n            }\n\n\n            int dLeft = 0;\n            int prevLeft = prev;\n\n            while (left + dLeft <= right) {\n                if (a[left + dLeft] <= prevLeft) {\n                    break;\n                }\n                prevLeft = a[left + dLeft];\n                dLeft++;\n            }\n\n            int dRight = 0;\n            int prevRight = prev;\n\n            while (right - dRight >= left) {\n                if (a[right - dRight] <= prevRight) {\n                    break;\n                }\n                prevRight = a[right - dRight];\n                dRight++;\n            }\n\n            if (dLeft > dRight) {\n                for (int i = 0; i < dLeft; i++) {\n                    list.add('L');\n                }\n            } else {\n                for (int i = 0; i < dRight; i++) {\n                    list.add('R');\n                }\n            }\n\n            break;\n        }\n\n        System.out.println(list.size());\n        for (char ch : list) {\n            System.out.print(ch);\n        }\n    }\n\n\n    /**\n     * \u0428\u0410\u0411\u041b\u041e\u041d\n     */\n\n    public static void main(String[] args) {\n        new TaskC().run();\n    }\n\n    void init() {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n    }\n\n    void run() {\n        try {\n            long timeStart = System.currentTimeMillis();\n\n            init();\n            solve();\n\n            out.close();\n\n            long timeEnd = System.currentTimeMillis();\n            System.err.println(\"Time = \" + (timeEnd - timeStart));\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(-1);\n        }\n    }\n\n    /**\n     * FAST_SCANNER\n     */\n\n    static final boolean ONLINE_JUDGE = System.getProperty(\"ONLINE_JUDGE\") != null;\n\n    BufferedReader in;\n    PrintWriter out;\n    StringTokenizer st;\n\n    String nextLine() {\n        try {\n            return in.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    private String delimiter = \" \";\n\n    String next() {\n        while (st == null || !st.hasMoreTokens()) {\n            try {\n                st = new StringTokenizer(in.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n        return st.nextToken(delimiter);\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    int[] nextIntArray(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    int[][] nextIntMatrix(int n, int m) {\n        int[][] a = new int[n][m];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextIntArray(m);\n        }\n        return a;\n    }\n\n    int getMaxArray(int[] a) {\n        int max = Integer.MIN_VALUE;\n        for (int x : a) {\n            max = Math.max(max, x);\n        }\n        return max;\n    }\n\n    private void setDelimiter(String delimiter) {\n        this.delimiter = delimiter;\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nLind = 0\nRind = n - 1\nflag = True\nans = list()\nans.append(0)\nans2 = list()\nflag5 = True\nflag6 = True\nwhile flag and Rind >= Lind and flag5 and flag6:\n    if a[Rind] > a[Lind]:\n        if a[Lind] > ans[-1]:\n            ans.append(a[Lind])\n            Lind += 1\n            ans2.append('L')\n        else:\n            flag5 = False\n    elif a[Lind] > a[Rind]:\n        if a[Rind] > ans[-1]:\n            ans.append(a[Rind])\n            Rind -= 1\n            ans2.append('R')\n        else:\n            flag6 = False\n    else:\n        flag = False\n\nif not flag or not flag5 or not flag6:\n    lmax = 0\n    rmax = 0\n    for i in range(Lind, Rind):\n        if a[i] > ans[-1]:\n            if a[i+1] > a[i]:\n                lmax += 1\n            else:\n                lmax += 1\n                break\n        else:\n            break\n    for i in reversed(range(Lind+1, Rind+1)):\n        if a[i] > ans[-1]:\n            if a[i-1] > a[i]:\n                rmax += 1\n            else:\n                rmax += 1\n                break\n        else:\n            break\n    if lmax > rmax:\n        i = Lind\n        while Lind <= Rind:\n            if a[i] > ans[-1]:\n                ans.append(a[i])\n                ans2.append('L')\n                i += 1\n            else:\n                break\n    else:\n        i = Rind\n        while Rind >= Lind:\n            if a[i] > ans[-1]:\n                ans.append(a[i])\n                ans2.append('R')\n                i -= 1\n            else:\n                break\n\n\nprint(len(ans)-1)\nprint(*ans2, end='', sep='')"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    PrintWriter pw = new PrintWriter(System.out);\n \n    public static void main(String[] args) throws IOException {\n        Main m = new Main();\n        m.solve();\n        m.close();\n    }\n \n    void close() throws IOException {\n        pw.flush();\n        pw.close();\n        br.close();\n    }\n    \n    int readInt() throws IOException {\n        return Integer.parseInt(br.readLine());\n    }\n \n    int[] readIntLine() throws IOException {\n        String[] tokens = br.readLine().split(\" \");\n        int[] A = new int[tokens.length];\n        for (int i = 0; i < A.length; i++) A[i] = Integer.parseInt(tokens[i]);\n        return A;\n    }\n \n    long[] readLongLine() throws IOException {\n        String[] tokens = br.readLine().split(\" \");\n        long[] A = new long[tokens.length];\n        for (int i = 0; i < A.length; i++) A[i] = Long.parseLong(tokens[i]);\n        return A;\n    }\n \n    void solve() throws IOException {\n        int n = readInt();\n        int[] A = readIntLine();\n        int l = 0;\n        int r = n - 1;\n        int prev = -1;\n        StringBuilder ans = new StringBuilder();\n        while (l <= r) {\n            if (A[l] > prev && A[r] <= prev) {\n                while (l <= r && A[l] > prev) {\n                    prev = A[l++];\n                    ans.append('L');\n                }\n                pw.println(ans.length());\n                pw.println(ans.toString());\n                return;\n            } else if (A[l] <= prev && A[r] > prev) {\n                while (r >= l && A[r] > prev) {\n                    prev = A[r--];\n                    ans.append('R');\n                }\n                pw.println(ans.length());\n                pw.println(ans.toString());\n                return;\n            } else if (A[l] <= prev && A[r] <= prev) {\n                pw.println(ans.length());\n                pw.println(ans.toString());\n                return;\n            } else {\n                if (A[l] < A[r]) {\n                    prev = A[l++];\n                    ans.append('L');\n                } else if (A[l] > A[r]) {\n                    prev = A[r--];\n                    ans.append('R');\n                } else {\n                    StringBuilder altAns = new StringBuilder(ans);\n                    int altL = l;\n                    int altR = r;\n                    int altPrev = prev;\n\n                    // try the left\n                    while (l <= r && A[l] > prev) {\n                        prev = A[l++];\n                        ans.append('L');\n                    }\n\n                    // try the right\n                    while (altR >= altL && A[altR] > altPrev) {\n                        altPrev = A[altR--];\n                        altAns.append('R');\n                    }\n                    if (altAns.length() > ans.length()) {\n                        pw.println(altAns.length());\n                        pw.println(altAns.toString());\n                    } else {\n                        pw.println(ans.length());\n                        pw.println(ans.toString());\n                    }\n                    return;\n                }\n            }\n        }\n\n        pw.println(ans.length());\n        pw.println(ans.toString());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint arr[200005];\nchar ans[200005];\nusing namespace std;\nint main() {\n  int index = 0;\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  int l = 0, r = n - 1;\n  int k = 0, k1, k2;\n  string res;\n  while (l <= r) {\n    k1 = arr[l] - k;\n    k2 = arr[r] - k;\n    if (k1 < k2 && k1 > 0) {\n      k = arr[l];\n      l++;\n      res += 'L';\n    } else if (k1 == k2) {\n      string res2 = res;\n      int k1 = k;\n      while (arr[l] > k) {\n        res += 'L';\n        k = arr[l];\n        l++;\n      }\n      while (arr[r] > k1) {\n        k1 = arr[r];\n        res2 += 'R';\n        r--;\n      }\n      if (res.length() < res2.length()) {\n        res = res2;\n      }\n      break;\n    } else {\n      if (k2 > 0) {\n        k = arr[r];\n        r--;\n        res += 'R';\n      } else if (k2 <= 0 && k1 > 0) {\n        k = arr[l];\n        l++;\n        res += 'L';\n      } else\n        break;\n    }\n  }\n  cout << res.size() << endl;\n  cout << res << endl;\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 7;\nconst int xinc[] = {0, 0, 1, -1};\nconst int yinc[] = {1, -1, 0, 0};\nconst long double PI = acos(-1.0);\nint n, a[N];\ndeque<int> q;\nstring ans1, ans2;\nvoid solve() {\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i], q.push_back(a[i]);\n  int last = 0;\n  while (!q.empty()) {\n    int frn = q.front();\n    int bck = q.back();\n    if (frn < bck) {\n      if (frn > last) {\n        q.pop_front();\n        ans1 += 'L';\n        ans2 += 'L';\n        last = frn;\n      } else if (bck > last) {\n        q.pop_back();\n        ans1 += 'R';\n        ans2 += 'R';\n        last = bck;\n      } else\n        break;\n    } else if (frn > bck) {\n      if (bck > last) {\n        q.pop_back();\n        ans1 += 'R';\n        ans2 += 'R';\n        last = bck;\n      } else if (frn > last) {\n        q.pop_front();\n        ans1 += 'L';\n        ans2 += 'L';\n        last = frn;\n      } else\n        break;\n    } else {\n      deque<int> q1, q2;\n      q1 = q, q2 = q;\n      int l1 = last, l2 = last;\n      while (!q1.empty() && q1.front() > l1)\n        l1 = q1.front(), q1.pop_front(), ans1 += 'L';\n      while (!q2.empty() && q2.back() > l2)\n        l2 = q2.back(), q2.pop_back(), ans2 += 'R';\n      break;\n    }\n  }\n  if (ans1.size() > ans2.size()) {\n    cout << ans1.size() << '\\n';\n    cout << ans1 << '\\n';\n  } else {\n    cout << ans2.size() << '\\n';\n    cout << ans2 << '\\n';\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  t = 1;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[200005];\nstring s = \"\";\nvoid func(int p, int q, int prev) {\n  int pr = p, ql = q, t = prev;\n  while (pr < q && a[pr] > t) {\n    t = a[pr];\n    pr++;\n  }\n  t = prev;\n  while (ql > p && a[ql] > t) {\n    t = a[ql];\n    ql--;\n  }\n  int d1 = pr - p;\n  int i;\n  int d2 = q - ql;\n  if (d1 >= d2) {\n    for (i = 1; i <= d1; i++) s += \"L\";\n  } else {\n    for (i = 1; i <= d2; i++) s += \"R\";\n  }\n}\nint main() {\n  int n, p, q, i, prev = 0;\n  cin >> n;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  p = 1;\n  q = n;\n  while (p < q) {\n    if (a[p] < a[q]) {\n      if (a[p] > prev) {\n        s += \"L\";\n        prev = a[p];\n        p++;\n      } else if (a[q] > prev) {\n        s += \"R\";\n        prev = a[q];\n        q--;\n      } else\n        break;\n    } else if (a[q] < a[p]) {\n      if (a[q] > prev) {\n        s += \"R\";\n        prev = a[q];\n        q--;\n      } else if (a[p] > prev) {\n        s += \"L\";\n        prev = a[p];\n        p++;\n      } else\n        break;\n    } else {\n      func(p, q, prev);\n      break;\n    }\n  }\n  if (p == q && a[p] > prev) s += \"L\";\n  cout << s.length() << endl;\n  cout << s << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[200005];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int i, j, n, s = 0, k, l, r;\n  string st, p, q;\n  st.clear();\n  p.clear();\n  q.clear();\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  i = 0;\n  j = n - 1;\n  while (i <= j) {\n    if (a[i] == a[j] && a[i] > s) {\n      k = i;\n      l = s;\n      while (a[k] > l) {\n        l = a[k];\n        p.push_back('L');\n        k++;\n      }\n      r = s;\n      k = j;\n      while (a[k] > r) {\n        r = a[k];\n        q.push_back('R');\n        k--;\n      }\n      if (p.size() > q.size()) {\n        st += p;\n      } else {\n        st += q;\n      }\n      break;\n    } else if (a[i] > s && a[j] > s) {\n      if (a[i] < a[j]) {\n        st.push_back('L');\n        s = a[i];\n        i++;\n      } else {\n        st.push_back('R');\n        s = a[j];\n        j--;\n      }\n    } else if (a[i] > s) {\n      st.push_back('L');\n      s = a[i];\n      i++;\n    } else if (a[j] > s) {\n      st.push_back('R');\n      s = a[j];\n      j--;\n    } else {\n      break;\n    }\n  }\n  cout << st.size() << \"\\n\" << st << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C2 {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader inp = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Solver solver = new Solver();\n        solver.solve(inp, out);\n        out.close();\n    }\n\n    private static class Solver {\n        private void solve(InputReader inp, PrintWriter out) {\n            int n = inp.nextInt();\n            int[] a = new int[n];\n            //LinkedList<Integer> a = new LinkedList<>();\n            for (int i = 0; i < n; i++) {\n                int u = inp.nextInt();\n                //a.add(u);\n                a[i] = u;\n            }\n            int[] left = new int[n];\n            for (int i = 0; i < n - 1; i++) {\n                if (a[i] <= a[i+1]) left[i+1] = -1;\n            }\n            for (int i = 1; i < n; i++) {\n                if (left[i] == 0) left[i] = left[i-1] + 1;\n                else if (left[i] == -1) left[i] = 0;\n            }\n            //for (int i: left) out.print(i + \" \");\n            //out.print('\\n');\n\n            int[] right = new int[n];\n            for (int i = 0; i < n - 1; i++) {\n                if (a[i] >= a[i+1]) right[i] = -1;\n            }\n            for (int i = n - 2; i >= 0; i--) {\n                if (right[i] == 0) right[i] = right[i+1] + 1;\n                else if (right[i] == -1) right[i] = 0;\n            }\n            //for (int i: right) out.print(i + \" \");\n            //out.print(\"\\n\");\n\n            int currA = -1;\n            int l = 0, r = n - 1;\n            StringBuilder sb = new StringBuilder();\n            while (r - l >= 0) {\n                if (l == r) {\n                    if (a[l] > currA) {\n                        sb.append('L');\n                    }\n                    break;\n                }\n                //System.out.println(\"---\");\n                //System.out.println(l + \" \" + r);\n                //System.out.println(right[l] + \" \" + left[r]);\n                if (currA < a[l] && currA < a[r]) {\n                    if (a[l] < a[r]) {\n                        currA = a[l++];\n                        sb.append('L');\n                    } else if (a[r] < a[l]){\n                        currA = a[r--];\n                        sb.append('R');\n                    } else if (right[l] >= left[r]) {\n                        currA = a[l++];\n                        sb.append('L');\n                    } else if (left[r] > right[l]) {\n                        currA = a[r--];\n                        sb.append('R');\n                    }\n                } else if (currA < a[l]) {\n                    currA = a[l++];\n                    sb.append('L');\n                } else if (currA < a[r]) {\n                    currA = a[r--];\n                    sb.append('R');\n                } else break;\n            }\n            out.println(sb.toString().length());\n            out.println(sb.toString());\n        }\n    }\n\n    static class InputReader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 10;\nint n;\nint a[N];\nqueue<char> q;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", a + i);\n  int l = 1, r = n, last = -1;\n  for (int i = 1; i = n; i++) {\n    int L = a[l], R = a[r];\n    if (last >= L && last >= R) {\n      printf(\"%d\\n\", q.size());\n      while (!q.empty()) {\n        putchar(q.front());\n        q.pop();\n      }\n      puts(\"\");\n      return 0;\n    }\n    if (L > last && R > last) {\n      if (L == R) {\n        int ans1 = 0, ans2 = 0;\n        for (int j = l; j <= r; j++)\n          if (a[j] > a[j - 1])\n            ans1++;\n          else\n            break;\n        for (int j = r; j >= l; j--)\n          if (a[j] > a[j + 1])\n            ans2++;\n          else\n            break;\n        if (ans1 > ans2)\n          for (int j = 1; j <= ans1; j++) q.push('L');\n        else\n          for (int j = 1; j <= ans2; j++) q.push('R');\n        printf(\"%d\\n\", q.size());\n        while (!q.empty()) {\n          putchar(q.front());\n          q.pop();\n        }\n        puts(\"\");\n        return 0;\n      }\n      if (L > R) {\n        r--;\n        last = R;\n        q.push('R');\n      } else {\n        l++;\n        last = L;\n        q.push('L');\n      }\n    } else if (L > last && R <= last) {\n      l++;\n      last = L;\n      q.push('L');\n    } else {\n      r--;\n      last = R;\n      q.push('R');\n    }\n  }\n  puts(\"0\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nfrom collections import deque\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\nelse:\n    _str = str\n    str = lambda x=b\"\": x if type(x) is bytes else _str(x).encode()\n\n\ndef main():\n    n = int(readline())\n    a = deque(readlist())\n\n    res, seq = [], [0]\n    while a:\n        if len(a) == 1 and a[0] > seq[-1]:\n            seq.append(a.pop())\n            res.append('R')\n        elif a[0] < a[-1] and a[0] > seq[-1]:\n            seq.append(a.popleft())\n            res.append('L')\n        elif a[-1] < a[0] and a[-1] > seq[-1]:\n            seq.append(a.pop())\n            res.append('R')\n        elif a[0] == a[-1] and a[0] > seq[-1]:\n            case_1, case_2 = 1, 1\n            start = a[0]\n            i = 1\n            while i < len(a) and a[i] > start:\n                start = a[i]\n                i += 1\n                case_1 += 1\n            start = a[-1]\n            i = len(a) - 2\n            while i >= 0 and a[i] > start:\n                start = a[i]\n                i -= 1\n                case_2 += 1\n            res += ['L'] * case_1 if case_1 > case_2 else ['R'] * case_2\n            break\n        elif a[0] > seq[-1]:\n            seq.append(a.popleft())\n            res.append('L')\n        elif a[-1] > seq[-1]:\n            seq.append(a.pop())\n            res.append('R')\n        else:\n            break\n\n    print(len(res))\n    print(''.join(res))\n\n\n# region template\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._buffer = BytesIO()\n        self._fd = file.fileno()\n        self._writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self._buffer.write if self._writable else None\n\n    def read(self):\n        if self._buffer.tell():\n            return self._buffer.read()\n        return os.read(self._fd, os.fstat(self._fd).st_size)\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self._buffer.tell()\n            self._buffer.seek(0, 2), self._buffer.write(b), self._buffer.seek(ptr)\n        self.newlines -= 1\n        return self._buffer.readline()\n\n    def flush(self):\n        if self._writable:\n            os.write(self._fd, self._buffer.getvalue())\n            self._buffer.truncate(0), self._buffer.seek(0)\n\n\nclass ostream:\n    def __lshift__(self, a):\n        if a is endl:\n            sys.stdout.write(b\"\\n\")\n            sys.stdout.flush()\n        else:\n            sys.stdout.write(str(a))\n        return self\n\n\ndef print(*args, **kwargs):\n    sep, file = kwargs.pop(\"sep\", b\" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", b\"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nsys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\ncout, endl = ostream(), object()\n\nreadline = sys.stdin.readline\nreadlist = lambda var=int: [var(n) for n in readline().split()]\ninput = lambda: readline().rstrip(b\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nar=list(map(int,input().split()))\nans1=1\nli=[]\nfor i in range(1,200001):\n    li.append(0)\nli[ar[0]-1]='L'\nfor i in range(1,n):\n    if(li[ar[i]-1]==0 and ar[i]>ar[i-1]):\n        ans1+=1\n        li[ar[i]-1]='L'\n    else:\n        pre=-1\n        for j in range(1,n-i+1):\n            if(li[ar[-j]-1]==0 and ar[-j]>pre):\n                li[ar[-j]-1]='R'\n                ans1+=1\n                pre=ar[-j]\n            else:\n                break\n        break\nmain1=[]\nfor i in li:\n    if(i!=0):\n        main1.append(i)\nll=ans1\nar=ar[::-1]\nans1=1\nli=[]\nfor i in range(1,200001):\n    li.append(0)\nli[ar[0]-1]='R'\nfor i in range(1,n):\n    if(li[ar[i]-1]==0 and ar[i]>ar[i-1]):\n        ans1+=1\n        li[ar[i]-1]='R'\n    else:\n        pre=-1\n        for j in range(1,n-i+1):\n            if(li[ar[-j]-1]==0 and ar[-j]>pre):\n                ans1+=1\n                pre=ar[-j]\n                li[ar[-j]-1]='L'\n            else:\n                break\n        break\nmain2=[]\nfor i in li:\n    if(i!=0):\n        main2.append(i)\nif(ll>=ans1):\n    print(ll)\n    print(''.join(main1))\nelse:\n    print(ans1)\n    print(''.join(main2))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 200005;\nint num[maxn], news[maxn];\nint main() {\n  int n;\n  string s(\"\");\n  cin >> n;\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &num[i]);\n  int l = 1, r = n;\n  int ans = 0;\n  int last = 0;\n  while (l <= r) {\n    if (num[l] <= last && num[r] <= last) break;\n    if (num[l] < num[r]) {\n      if (num[l] > last) {\n        ans++;\n        s += \"L\";\n        last = num[l];\n        l++;\n      } else if (num[r] > last) {\n        ans++;\n        s += \"R\";\n        last = num[r];\n        r--;\n      }\n    } else if (num[l] > num[r]) {\n      if (num[r] > last) {\n        ans++;\n        s += \"R\";\n        last = num[r];\n        r--;\n      } else if (num[l] > last) {\n        ans++;\n        s += \"L\";\n        last = num[l];\n        l++;\n      }\n    } else {\n      int x = l, y = r;\n      while (num[x] < num[x + 1] && x < n) x++;\n      while (num[y] < num[y - 1] && y > 1) y--;\n      if ((x - l) > (r - y)) {\n        ans = ans + (x - l) + 1;\n        string tmp((x - l) + 1, 'L');\n        s += tmp;\n        l += (x - l);\n        last = num[x];\n      } else {\n        ans += (r - y) + 1;\n        string tmp((r - y) + 1, 'R');\n        s += tmp;\n        r -= (r - y);\n        last = num[y];\n      }\n    }\n  }\n  printf(\"%d\\n\", ans);\n  printf(\"%s\\n\", &s[0]);\n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=map(int,raw_input().split())\nb=list(reversed(a))\n\nl=-1\npi,pe=0,n\nans=\"\"\nt=0\nwhile pi!=pe:\n    li=-2\n    if a[-1]==b[-1] and a[-1]>l:\n        a1=a2=\"\"\n        l1=l2=l\n        pi1=pi\n        n1=n2=0\n        while pi1!=pe and b[-1]>l1:\n            l1=b.pop()\n            a1+=\"L\"\n            pi1+=1\n            n1+=1\n        while pi!=pe and a[-1]>l2:\n            l2=a.pop()\n            a2+=\"R\"\n            pe-=1\n            n2+=1\n        t+=n1 if n1>n2 else n2\n        ans+= a1 if n1>n2 else a2\n        break\n    elif (l<a[-1]<b[-1]) or (l>=b[-1] and l<a[-1]):\n        li=a.pop()\n        e='R'\n        pe-=1\n    elif l<b[-1]:\n        li=b.pop()\n        e='L'\n        pi+=1\n    if li<l: break\n    t+=1\n    ans+=e\n    l=li\n\nprint t\nprint ans"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input().split()\na = [int(num) for num in s]\ni = 0\nj = n - 1\nlast = 0\nans = ''\ncount = 0\ncount1 = 0\ncount2 = 0\nwhile max(a[i],a[j]) > last and i <= j:\n    if a[i] == a[j]:\n        if i == j:\n            ans += 'L'\n            count += 1\n            break\n        if max(a[i+1],a[j-1]) <= a[i]:\n            ans += 'L'\n            count += 1\n            break\n        i1 = i+1\n        while a[i1] > a[i1-1]:\n            count1 += 1\n            i1 += 1\n        j1 = j-1\n        while a[j1] > a[j1+1]:\n            count2 += 1\n            j1 -= 1\n        if count1 > count2:\n            ans += 'L'*(count1+1)\n            count = count + count1 + 1\n        else:\n            ans += 'R'*(count2+1)\n            count = count + count2 + 1\n        break\n    elif (a[i] > last and a[i] <= a[j]) or a[j] <= last:\n        last = a[i]\n        i += 1\n        ans += 'L'\n        count += 1\n        if i > j:\n            break\n    elif (a[j] > last and a[j] <= a[i]) or a[i] <= last:\n        last = a[j]\n        j -= 1\n        ans += 'R'\n        count += 1\n        if i > j:\n            break\n    else:\n        break\nprint(count)\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\ni,j,b,z,s,s1,s2,b1=0,n-1,0,10**6,'','','',0\nwhile i<=j:\n    if a[i]<=b and a[j]<=b:\n        break\n    if a[i]==z and a[j]==z:\n        break\n    if a[i]==a[j]:\n        b1=b\n        while i<=n-1:\n            if a[i]>b1:\n                b1=a[i]\n                s1+='L'\n                i+=1\n            else:\n                break\n        b1=b\n        while j>=0:\n            if a[j]>b1:\n                b1=a[j]\n                s2+='R'\n                j-=1\n            else:\n                break\n        s+=(s1 if len(s1)>len(s2) else s2)\n        break\n    if a[i]>a[j]:\n        if a[j]>b:\n            b=a[j]\n            j-=1\n            s+='R'\n        else:\n            a[j]=z\n    if a[j]>a[i]:\n        if a[i]>b:\n            b=a[i]\n            i+=1\n            s+='L'\n        else:\n            a[i]=z\nprint(len(s))\nprint(s)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid dbg_out() { cerr << endl; }\ntemplate <typename Head, typename... Tail>\nvoid dbg_out(Head H, Tail... T) {\n  cerr << ' ' << H;\n  dbg_out(T...);\n}\nconst int N = 2 * 1e5 + 10;\nint n, a[N];\nstring maxx(string l, string r) {\n  if (int(l.size()) > int(r.size())) return l;\n  return r;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  string ans = \"\", cur = \"\", s_l, s_r;\n  for (int l = 0, r = n - 1, ant = -1; l <= r;) {\n    18;\n    if (a[l] == a[r] && a[l] > ant) {\n      s_l = s_r = ans;\n      int _l, _r, _ant = ant;\n      _l = l, _r = r;\n      while (_l < r && a[_l] > _ant) {\n        s_l += \"L\";\n        _ant = a[_l];\n        _l++;\n      }\n      _ant = ant;\n      while (l < _r && a[_r] > _ant) {\n        s_r += \"R\";\n        _ant = a[_r];\n        _r--;\n      }\n      cur = maxx(cur, maxx(s_l, s_r));\n    }\n    18;\n    if ((a[l] < a[r] && ant < a[l]) || (ant >= a[r] && ant < a[l])) {\n      ans += \"L\";\n      ant = a[l];\n      l++;\n    } else if (ant < a[r]) {\n      ans += \"R\";\n      ant = a[r];\n      r--;\n    } else\n      break;\n  }\n  ans = maxx(ans, cur);\n  cout << int(ans.size()) << '\\n' << ans << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\nconst double pi = acos(-1);\nbool isVowel(char ch) {\n  if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n    return 1;\n  }\n  return 0;\n}\nbool compare(pair<long long, long long> a, pair<long long, long long> b) {\n  return a.second < b.second;\n}\nbool isPrime(long long n) {\n  if (n % 2 == 0 && n != 2) {\n    return false;\n  }\n  for (long long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nlong long power(long long x, long long y, long long p) {\n  long long res = 1;\n  x = x % p;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nlong long modInverse(long long a, long long p) { return power(a, p - 2, p); }\nlong long modFact(long long n, long long p) {\n  if (p <= n) return 0;\n  long long res = (p - 1);\n  for (long long i = n + 1; i < p; i++) res = (res * modInverse(i, p)) % p;\n  return res;\n}\nlong long binary_exp(long long x, long long n, long long mod) {\n  if (n == 0) {\n    return 1;\n  } else if (n == 1) {\n    return x % mod;\n  } else {\n    long long temp = binary_exp(x, n / 2, mod);\n    temp = (temp * temp) % mod;\n    if (n % 2 == 0) {\n      return temp;\n    } else {\n      return ((x % mod) * temp) % mod;\n    }\n  }\n}\nmap<long long, list<long long>> m;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  while (t--) {\n    long long n;\n    string s = \"\";\n    cin >> n;\n    long long arr[n];\n    for (long long i = 0; i < n; i++) {\n      cin >> arr[i];\n    }\n    long long x = 0, y = n - 1, m = -1;\n    while (x <= y) {\n      if (arr[x] > m && arr[y] <= m) {\n        m = arr[x];\n        s += \"L\";\n        x++;\n      } else if (arr[x] <= m && arr[y] > m) {\n        m = arr[y];\n        s += \"R\";\n        y--;\n      } else if (arr[x] > m && arr[y] > m) {\n        if (arr[x] < arr[y]) {\n          m = arr[x];\n          x++;\n          s += \"L\";\n        } else if (arr[x] == arr[y]) {\n          if (x == y) {\n            s += \"L\";\n            break;\n          }\n          long long a = x, b = y, mx = m;\n          string sa = \"\", sb = \"\";\n          for (long long i = a; i < b; i++) {\n            if (arr[i] > mx) {\n              sa += \"L\";\n              mx = arr[i];\n            } else {\n              break;\n            }\n          }\n          mx = m;\n          for (long long i = b; i > a; i--) {\n            if (arr[i] > mx) {\n              sb += \"R\";\n              mx = arr[i];\n            } else {\n              break;\n            }\n          }\n          if (sa.size() > sb.size()) {\n            s += sa;\n            break;\n          } else {\n            s += sb;\n            break;\n          }\n        } else {\n          m = arr[y];\n          y--;\n          s += \"R\";\n        }\n      } else {\n        break;\n      }\n    }\n    cout << s.length() << endl;\n    cout << s << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.image.AreaAveragingScaleFilter;\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.sql.Array;\nimport java.util.*;\n\nimport java.util.StringTokenizer;\npublic class l{\n    static int l,r;\n    static boolean valid(int x,int y){\n        return x>=l&&x<=r&&y>=l&&y<=r;\n    }\n    public static void main (String[]args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n = sc.nextInt();\n        int[]a = new int[n];\n        for (int i =0;i<n;i++)a[i]=sc.nextInt();\n        StringBuilder sol = new StringBuilder();\n        int ans =0;\n        int last =-10;\n        int i =0;int j =n-1;\n        int c=0;\n        while (i<=j){\n            if (a[i]>last||a[j]>last) {\n                if (a[i]==a[j]){\n                    int maxl=1;\n                    last=a[i];\n                    for (int k=i+1;k<=j;k++){\n                        if (a[k]<=last)break;\n                        maxl++;\n                        last=a[k];\n                    }\n                    int maxr=1;\n                    last=a[j];\n                    for (int k=j-1;k>=i;k--){\n                        if (a[k]<=last)break;\n                        maxr++;\n                        last=a[k];\n                    }\n                    if (maxl>maxr){\n                        ans+=maxl;\n                        while (maxl-->0)sol.append('L');\n                    }\n                    else {\n                        ans+=maxr;\n                        while (maxr-->0)sol.append('R');\n                    }\n                    break;\n                }\n                 else if (a[i]>last && a[j] > last) {\n                    if (a[i] < a[j]) {\n                        sol.append('L');\n                        ans++;\n                        last=a[i];\n                        i++;\n                    }\n                    else {\n                        sol.append('R');\n                        ans++;\n                        last=a[j];\n                        j--;\n                    }\n                }\n                else {\n                    if (a[i]>last){\n                        sol.append('L');\n                        ans++;\n                        last=a[i];\n                        i++;\n                    }\n                    else {\n                        sol.append('R');\n                        ans++;\n                        last=a[j];\n                        j--;\n                    }\n                }\n            }\n            else break;\n        }\n        pw.println(ans);\n        pw.println(sol);\n        pw.flush();\n    }\n    static int gcd(int a ,int b){\n        if (a==0)return b;\n        return gcd(b%a,a);\n    }\n    static class Scanner\n    {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s){\tbr = new BufferedReader(new InputStreamReader(s));}\n\n        public String next() throws IOException\n        {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {return Integer.parseInt(next());}\n\n        public long nextLong() throws IOException {return Long.parseLong(next());}\n\n        public String nextLine() throws IOException {return br.readLine();}\n\n        public double nextDouble() throws IOException\n        {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if(x.charAt(0) == '-')\n            {\n                neg = true;\n                start++;\n            }\n            for(int i = start; i < x.length(); i++)\n                if(x.charAt(i) == '.')\n                {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                }\n                else\n                {\n                    sb.append(x.charAt(i));\n                    if(dec)\n                        f *= 10;\n                }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg?-1:1);\n        }\n\n        public boolean ready() throws IOException {return br.ready();}\n\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "//package com.company;\nimport java.util.*;\npublic class Main {\n\n    public static void main(String[] args) {\n\t// write your code here\n\n        Scanner s=new Scanner(System.in);\n       int n=s.nextInt();\n          int[] a=new int[n];\n          for(int i=0;i<n;i++){\n              a[i]=s.nextInt();\n          }\n          int i=0;int j=n-1;char[] ans=new char[n];int k=0;\n          int pre=-1;\n          while(i<=j){\n              if(a[i]<a[j]&&a[i]>pre){pre=a[i];\n                  ans[k++]='L';i++;}\n                  else if(a[i]<a[j]&&a[j]>pre){\n                  pre=a[j];ans[k++]='R';j--;\n              }\n                  else if(a[i]>a[j]&&a[j]>pre){\n                  ans[k++]='R';\n                  pre=a[j];j--;\n              }\n              else if(a[i]>a[j]&&a[i]>pre){\n                  pre=a[i];ans[k++]='L';i++;\n              }\n              else{int ci=1;int cj=1;\n                  for(int z=i+1;z<n;z++){\n                      if(z==j) break;\n                      if(a[z]>a[z-1]) ci++;\n                      else break;\n                  }for(int  z=j-1;z>=0;z--){\n                      if(z==i) break;\n                      if(a[z]>a[z+1]) cj++;\n                      else break;\n                  }\n\n                  if(ci>cj){\n                      for(int z=i;z<n;z++){\n                         if(z!=0){\n                             if(a[z]<=a[z-1]) break;\n                         }if(z==j+1) break;\n                          ans[k++]='L';\n                      }\n                  }else\n                      for(int z=j;z>=0;z--){\n                     //     System.out.println(a[z]);\n                      if(z!=n-1){\n                          if(a[z]<=a[z+1]) break;\n                      }\n                      if(z==i-1)break;\n                      ans[k++]='R';\n                      }break;\n              }\n          }\n        System.out.println(k);\n          for(int v=0;v<k;v++)\n            System.out.print(ans[v]);\n        }\n    }\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[200009];\nint L[200009];\nint R[200009];\nint n;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = n; i >= 1; i--) {\n    if (a[i] < a[i + 1]) {\n      R[i] = R[i + 1] + 1;\n    } else {\n      R[i] = 1;\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] < a[i - 1]) {\n      L[i] = L[i - 1] + 1;\n    } else {\n      L[i] = 1;\n    }\n  }\n  int i = 1, j = n, ls = 0;\n  vector<char> ans;\n  while (1) {\n    if (i == j) {\n      if (a[i] > ls) ans.push_back('R');\n      break;\n    }\n    if (a[i] < a[j]) {\n      if (a[i] > ls) {\n        ls = a[i];\n        i++;\n        ans.push_back('L');\n      } else if (a[j] > ls) {\n        ls = a[j];\n        j--;\n        ans.push_back('R');\n      } else {\n        break;\n      }\n    } else if (a[j] < a[i]) {\n      if (a[j] > ls) {\n        ls = a[j];\n        j--;\n        ans.push_back('R');\n      } else if (a[i] > ls) {\n        ls = a[i];\n        i++;\n        ans.push_back('L');\n      } else {\n        break;\n      }\n    } else {\n      if (a[i] <= ls) {\n        break;\n      }\n      int LL = L[j];\n      int RR = R[i];\n      char ch = 'L';\n      if (LL >= RR) ch = 'R';\n      int mx = max(LL, RR);\n      if (mx > 0) {\n        for (int i = 0; i < mx; i++) ans.push_back(ch);\n      }\n      break;\n    }\n  }\n  cout << ans.size() << endl;\n  for (int i = 0; i < ans.size(); i++) cout << ans[i];\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C{\n\tpublic static void main(String[] args){\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint[] a= new int[n+1];\n\t\tfor(int i = 0;i<n;++i)\n\t\t\ta[i] = in.nextInt();\n\t\tint l = 0;\n\t\tint r = n-1;\n\t\tint last = -1;\n\t\tint count = 0;\n\t\tStringBuilder str = new StringBuilder();\n\t\twhile(l<=r){\n\t\t\tif(a[l] <= last && a[r] <= last) break;\n\t\t\tif(a[l] == a[r]){\n\t\t\t\tint tl = l+1;\n\t\t\t\twhile(tl<=r && a[tl]>a[tl-1]) tl++;\n\t\t\t\tint tr = r-1;\n\t\t\t\twhile(tr>=l && a[tr]> a[tr+1]) tr--;\n\t\t\t\tif(r - tr > tl - l)\n\t\t\t\t\tfor(int i = tr+1;i<=r;++i){\n\t\t\t\t\t\tstr.append(\"R\");\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\telse for(int i = l;i<tl;++i){\n\t\t\t\t\tstr.append(\"L\");\n\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(a[l] > last && a[l] < a[r] || a[r]<=last){ str.append(\"L\");\n\t\t\t\tlast = a[l];\n\t\t\t\tl++;\n\t\t\t} else{\n\t\t\t\tstr.append(\"R\");\n\t\t\t\tlast = a[r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t\tcount++;\n\t\t}\n\t\tSystem.out.println(count + \"\\n\" + str);\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint checkFront(deque<int> dq, int prev) {\n  int counter = 0;\n  while (!dq.empty() && dq.front() > prev) {\n    counter++;\n    prev = dq.front();\n    dq.pop_front();\n  }\n  return counter;\n}\nint checkBack(deque<int> dq, int prev) {\n  int counter = 0;\n  while (!dq.empty() && dq.back() > prev) {\n    counter++;\n    prev = dq.back();\n    dq.pop_back();\n  }\n  return counter;\n}\nint main() {\n  int t, val, prev = 0;\n  deque<int> dq;\n  string ans;\n  cin >> t;\n  while (t--) {\n    cin >> val;\n    dq.push_back(val);\n  }\n  while (!dq.empty()) {\n    if (dq.size() == 1) {\n      if (dq.front() > prev) ans += 'R';\n      dq.pop_front();\n    } else if (dq.front() <= prev) {\n      int count = checkBack(dq, prev);\n      while (count--) ans += 'R';\n      break;\n    } else if (dq.back() <= prev) {\n      int count = checkFront(dq, prev);\n      while (count--) ans += 'L';\n      break;\n    } else if (min(dq.front(), dq.back()) > prev) {\n      if (dq.front() < dq.back()) {\n        prev = dq.front();\n        dq.pop_front();\n        ans += 'L';\n      } else if (dq.back() < dq.front()) {\n        prev = dq.back();\n        dq.pop_back();\n        ans += 'R';\n      } else if (dq.front() == dq.back()) {\n        int front = checkFront(dq, prev);\n        int back = checkBack(dq, prev);\n        if (front >= back)\n          while (front--) ans += 'L';\n        else\n          while (back--) ans += 'R';\n        break;\n      }\n    }\n  }\n  cout << ans.size() << endl;\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.StringJoiner;\nimport java.util.StringTokenizer;\n\npublic class MainC2 {\n\n    static int N;\n    static int[] A;\n\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner(System.in);\n        N = sc.nextInt();\n        A = sc.nextIntArray(N);\n\n        String ans = solve();\n        System.out.println( ans.length() );\n        System.out.println( ans );\n    }\n\n    static String solve() {\n        int u = 0, v = N-1;\n        StringBuilder b = new StringBuilder();\n        int prev = 0;\n        while( u <= v ) {\n            if( u == v ) {\n                if( prev < A[u] ) {\n                    b.append(\"L\"); // \u3069\u3063\u3061\u3067\u3082\u3088\u3044\n                }\n                break;\n            }\n\n            int fst = A[u];\n            int lst = A[v];\n            // debug(prev, fst, lst);\n\n            if( prev >= fst && prev >= lst ) {\n                break;\n\n            } else if( prev >= fst ) {\n                // fst\u304c\u30c0\u30e1\n                v--;\n                b.append(\"R\");\n                prev = lst;\n\n\n            } else if( prev >= lst ) {\n                // lst\u304c\u30c0\u30e1\n                u++;\n                b.append(\"L\");\n                prev = fst;\n\n            } else if( fst == lst ) {\n                // fst\u3068lst\u304c\u540c\u3058\u306a\u306e\u3067\u53d6\u3063\u3066\u5e78\u305b\u305d\u3046\u306a\u307b\u3046\u3092\u53d6\u308b\n\n                int lc = 0;\n                for (int i = u; i < v; i++) {\n                    if( A[i] < A[i+1] )lc++;\n                    else break;\n                }\n                int rc = 0;\n                for (int i = v; i > u; i--) {\n                    if( A[i] < A[i-1] ) rc++;\n                    else break;\n                }\n                if( lc > rc ) {\n                    u++;\n                    b.append(\"L\");\n                    prev = fst;\n\n                } else {\n                    v--;\n                    b.append(\"R\");\n                    prev = lst;\n                }\n\n            } else {\n                if( fst < lst ) {\n                    u++;\n                    b.append(\"L\");\n                    prev = fst;\n\n                } else {\n                    v--;\n                    b.append(\"R\");\n                    prev = lst;\n                }\n            }\n        }\n        return b.toString();\n    }\n\n    @SuppressWarnings(\"unused\")\n    static class FastScanner {\n        private BufferedReader reader;\n        private StringTokenizer tokenizer;\n\n        FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        int[] nextIntArray(int n, int delta) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt() + delta;\n            return a;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) a[i] = nextLong();\n            return a;\n        }\n    }\n\n    static void writeLines(int[] as) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (int a : as) pw.println(a);\n        pw.flush();\n    }\n\n    static void writeLines(long[] as) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (long a : as) pw.println(a);\n        pw.flush();\n    }\n\n    static void writeSingleLine(int[] as) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (int i = 0; i < as.length; i++) {\n            if (i != 0) pw.print(\" \");\n            pw.print(as[i]);\n        }\n        pw.println();\n        pw.flush();\n    }\n\n    static int max(int... as) {\n        int max = Integer.MIN_VALUE;\n        for (int a : as) max = Math.max(a, max);\n        return max;\n    }\n\n    static int min(int... as) {\n        int min = Integer.MAX_VALUE;\n        for (int a : as) min = Math.min(a, min);\n        return min;\n    }\n\n    static void debug(Object... args) {\n        StringJoiner j = new StringJoiner(\" \");\n        for (Object arg : args) {\n            if (arg == null) j.add(\"null\");\n            else if (arg instanceof int[]) j.add(Arrays.toString((int[]) arg));\n            else if (arg instanceof long[]) j.add(Arrays.toString((long[]) arg));\n            else if (arg instanceof double[]) j.add(Arrays.toString((double[]) arg));\n            else if (arg instanceof Object[]) j.add(Arrays.toString((Object[]) arg));\n            else j.add(arg.toString());\n        }\n        System.err.println(j.toString());\n    }\n\n    static void printSingleLine(int[] array) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (int i = 0; i < array.length; i++) {\n            if (i != 0) pw.print(\" \");\n            pw.print(array[i]);\n        }\n        pw.println();\n        pw.flush();\n    }\n\n    static int lowerBound(int[] array, int value) {\n        int lo = 0, hi = array.length, mid;\n        while (lo < hi) {\n            mid = (hi + lo) / 2;\n            if (array[mid] < value) lo = mid + 1;\n            else hi = mid;\n        }\n        return lo;\n    }\n\n    static int upperBound(int[] array, int value) {\n        int lo = 0, hi = array.length, mid;\n        while (lo < hi) {\n            mid = (hi + lo) / 2;\n            if (array[mid] <= value) lo = mid + 1;\n            else hi = mid;\n        }\n        return lo;\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main{\n\n    static void solve(Scanner in, PrintWriter out){\n        int n = in.nextInt();\n        int[] a = new int[n];\n        for(int i = 0; i < n; i++) a[i] = in.nextInt();\n        \n        int L = 0, R = n-1;\n        int pre = -1;\n        int res = 0;\n        StringBuilder sb = new StringBuilder();\n        while(L <= R && Math.max(a[L], a[R]) > pre ){\n            if(a[L] == a[R]){\n                int r1 = 1, r2 = 1;\n                for(int t = L+1; t < R && a[t] > a[t-1]; t++, r1++);\n                for(int t = R-1; t > L && a[t] > a[t+1]; t--, r2++);\n                if(r1 > r2){\n                    res += r1;\n                    for(int i = 0; i < r1; i++) sb.append(\"L\");\n                }else {\n                    res += r2;\n                    for(int i = 0; i < r2; i++) sb.append(\"R\");\n                }\n                break;\n            }\n            if(a[L] > pre && a[R] > pre){\n                if(a[L] < a[R]){\n                    res++;\n                    sb.append(\"L\");\n                    pre = a[L];\n                    L++;\n                    if(L == n) break;\n                }else {\n                    res++;\n                    sb.append(\"R\");\n                    pre = a[R];\n                    R--;\n                    if(R == -1)break;\n                }\n            }else {\n                if(a[L] > pre){\n                    res++;\n                    sb.append(\"L\");\n                    pre = a[L];\n                    L++;\n                    if(L == n) break;\n                }else {\n                    res++;\n                    sb.append(\"R\");\n                    pre = a[R];\n                    R--;\n                    if(R == -1)break;\n                }\n            }\n        }\n        out.println(res);\n        out.println(sb.toString());\n    }\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(new BufferedInputStream(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n        solve(in, out);\n        out.close();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid aent(long long int *a, long long int n) {\n  for (long long int i = 0; i < n; i++) cin >> a[i];\n}\nstring arrtostr(long long int *a, long long int n) {\n  ostringstream os;\n  for (long long int i = 0; i < n; i++) os << a[i];\n  string str(os.str());\n  return str;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  long long int n;\n  cin >> n;\n  vector<long long int> v;\n  for (long long int i = 0; i < n; i++) {\n    long long int a;\n    cin >> a;\n    v.push_back(a);\n  }\n  long long int s = 0, e = n - 1;\n  string ss = \"\";\n  long long int mi = LLONG_MIN;\n  while (s <= e) {\n    if (s == e) {\n      if (mi < v[s]) ss += \"L\";\n      break;\n    }\n    long long int st = v[s];\n    long long int ed = v[e];\n    if (st < mi && ed < mi) break;\n    if (st == ed) {\n      string s1 = \"L\", s2 = \"R\";\n      int rs = s;\n      if (st < mi) break;\n      int chk = st;\n      while (s + 1 < e) {\n        if (v[s + 1] > chk) {\n          s1 += \"L\";\n          chk = v[s + 1];\n          s++;\n        } else\n          break;\n      }\n      chk = ed;\n      while (e - 1 > rs) {\n        if (v[e - 1] > chk) {\n          s2 += \"R\";\n          chk = v[e - 1];\n          e--;\n        } else\n          break;\n      }\n      if (s1.size() >= s2.size()) {\n        ss += s1;\n      } else\n        ss += s2;\n      cout << ss.size() << \"\\n\";\n      cout << ss;\n      return 0;\n    }\n    if (ed < st) {\n      if (ed > mi) {\n        ss += \"R\";\n        e--;\n        mi = ed;\n      } else {\n        if (st > mi) {\n          ss += \"L\";\n          s++;\n          mi = st;\n        } else\n          break;\n      }\n    } else {\n      if (st > mi) {\n        ss += \"L\";\n        s++;\n        mi = st;\n      } else {\n        if (ed > mi) {\n          ss += \"R\";\n          e--;\n          mi = ed;\n        } else\n          break;\n      }\n    }\n  }\n  cout << ss.size() << \"\\n\";\n  cout << ss;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C2VozrastayushayaPodposledovatelnostUslozhnennayaVersiya solver =\n                new C2VozrastayushayaPodposledovatelnostUslozhnennayaVersiya();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C2VozrastayushayaPodposledovatelnostUslozhnennayaVersiya {\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextInt();\n            }\n            int leftIdx = 0;\n            int rightIdx = n - 1;\n            int cur = Integer.MIN_VALUE;\n            StringBuilder sb = new StringBuilder();\n            while (leftIdx <= rightIdx) {\n\n                if (a[leftIdx] < a[rightIdx]) {\n                    if (cur < a[leftIdx]) {\n                        sb.append('L');\n                        cur = a[leftIdx];\n                        leftIdx++;\n                    } else if (cur < a[rightIdx]) {\n                        sb.append('R');\n                        cur = a[rightIdx];\n                        rightIdx--;\n                    } else {\n                        break;\n                    }\n                } else if (a[leftIdx] > a[rightIdx]) {\n                    if (cur < a[rightIdx]) {\n                        sb.append('R');\n                        cur = a[rightIdx];\n                        rightIdx--;\n                    } else if (cur < a[leftIdx]) {\n                        sb.append('L');\n                        cur = a[leftIdx];\n                        leftIdx++;\n                    } else {\n                        break;\n                    }\n                } else {\n                    if (cur >= a[leftIdx]) {\n                        break;\n                    }\n                    if (leftIdx == rightIdx) {\n                        sb.append('L');\n                        cur = a[leftIdx];\n                        leftIdx++;\n                        continue;\n                    }\n                    int ctFirst = 0;\n                    for (int i = leftIdx + 1; i <= rightIdx; i++) {\n                        if (a[i] > a[i - 1]) {\n                            ctFirst++;\n                        } else {\n                            break;\n                        }\n                    }\n                    int ctSecond = 0;\n                    for (int i = rightIdx - 1; i >= leftIdx; i--) {\n                        if (a[i] > a[i + 1]) {\n                            ctSecond++;\n                        } else {\n                            break;\n                        }\n                    }\n                    int ct = Math.max(ctFirst, ctSecond);\n                    char c = ctFirst > ctSecond ? 'L' : 'R';\n                    for (int i = 0; i <= ct; i++) {\n                        sb.append(c);\n                    }\n                    break;\n                }\n            }\n            out.println(sb.length());\n            out.println(sb);\n        }\n    }\n\n    static class InputReader {\n\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n}\n\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nA = map(int, raw_input().split())\ni, j = 0, n-1\nans = []\nlast = 0\nwhile i <= j:\n\tif i == j or A[i] != A[j]:\n\t\tif A[i] < A[j] and A[i] > last:\n\t\t\tlast = A[i]\n\t\t\tans.append(\"L\")\n\t\t\ti += 1\n\t\telif A[j] > last:\n\t\t\tlast = A[j]\n\t\t\tans.append(\"R\")\n\t\t\tj -= 1\n\t\telif A[i] > last:\n\t\t\tlast = A[i]\n\t\t\tans.append(\"L\")\n\t\t\ti += 1\n\t\telse:\n\t\t\tbreak\n\telse:\n\t\tr = j\n\t\tright = []\n\t\ttmp = last\n\t\twhile i < r and A[r] > last:\n\t\t\tlast = A[r]\n\t\t\tright.append(\"R\")\n\t\t\tr -= 1\n\t\tl = i\n\t\tleft = []\n\t\tlast = tmp\n\t\twhile l < j and A[l] > last:\n\t\t\tlast = A[l]\n\t\t\tleft.append(\"L\")\n\t\t\tl += 1\n\t\tif len(left) > len(right):\n\t\t\tans += left\n\t\telse:\n\t\t\tans += right\n\t\tbreak\nprint len(ans)\nprint \"\".join(ans)"
        },
        {
            "language": 3,
            "solution": "\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nll = [0] * n\nrr = [0] * n\n\nl = 0\nr = 0\n\nwhile l < n:\n    if l >= r:\n        r = l + 1\n        while r < n and a[r] > a[r - 1]:\n            r += 1\n    \n    ll[l] = r - l\n    l += 1\n\nl = n - 1\nr = n - 1\n\nwhile r >= 0:\n    if r <= l:\n        l = r - 1\n        while l >= 0 and a[l] > a[l + 1]:\n            l -= 1\n\n    rr[r] = r - l\n    r -= 1\n\nl = 0\nr = n - 1\npre = -1\nres = []\n\nwhile l <= r:\n    if max(a[l], a[r]) <= pre:\n        break\n\n    get_l = True\n    if a[l] == a[r]:\n        if ll[l] < rr[r]:\n            get_l = False\n    else:\n        if (a[r] < a[l] and a[r] > pre) or (a[l] <= pre):\n            get_l = False\n    \n    if get_l:\n        res.append('L')\n        pre = a[l]\n        l += 1\n    else:\n        res.append('R')\n        pre = a[r]\n        r -= 1\n\nprint(len(res))\nfor i in res:\n    print(i, end='')"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(_) for _ in input().split(\" \")]\ns,left,right,last=\"\",0,n-1,0\nwhile left<=right:\n    min_value=min(a[left],a[right])\n    max_value=max(a[left],a[right])\n    if (min_value==max_value):\n        if min_value>last:\n            l,r=left+1,right-1\n            left_len,right_len=1,1\n            while l<=right:\n                if a[l]>a[l-1]:\n                    l+=1\n                    left_len+=1\n                else:\n                    break\n            while r>=left:\n                if a[r]>a[r+1]:\n                    r-=1\n                    right_len+=1\n                else:\n                    break\n            if left_len>=right_len:\n                s=s+\"L\"*left_len\n            else:\n                s=s+\"R\"*right_len\n        break\n    else:\n        if max_value<=last:\n            break\n        else:\n            if min_value>last:\n                if a[left]==min_value:\n                    s=s+\"L\"\n                    left+=1\n                    last=min_value\n                else:\n                    s=s+\"R\"\n                    right-=1\n                    last=min_value\n            else:\n                if a[left]==max_value:\n                    s=s+\"L\"\n                    left+=1\n                    last=max_value\n                else:\n                    s=s+\"R\"\n                    right-=1\n                    last=max_value\nprint(len(s))\nprint(s)\n                \n                \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1010;\nvoid solve() {\n  int n;\n  cin >> n;\n  int a[n];\n  string s;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  int l = 0, r = n - 1, top = 0;\n  while (l <= r) {\n    vector<pair<int, char>> pair;\n    if (top < a[l]) pair.push_back(make_pair(a[l], 'L'));\n    if (top < a[r]) pair.push_back(make_pair(a[r], 'R'));\n    sort(pair.begin(), pair.end());\n    if (pair.size() == 2 && pair[0].first != pair[1].first) {\n      pair.pop_back();\n    }\n    if (pair.size() == 1) {\n      if (pair[0].second == 'L') {\n        s += 'L';\n        top = a[l];\n        ++l;\n      } else {\n        s += 'R';\n        top = a[r];\n        r--;\n      }\n    } else if (pair.size() == 2) {\n      int cntl = 1, cntr = 1;\n      int m = l, n = r;\n      while (a[m] < a[m + 1] && m < n) {\n        m++;\n        cntl++;\n      }\n      while (a[n] < a[n - 1] && m < n) {\n        n--;\n        cntr++;\n      }\n      if (cntl >= cntr) {\n        s += 'L';\n        top = a[l];\n        ++l;\n      } else {\n        s += 'R';\n        top = a[r];\n        r--;\n      }\n    } else\n      break;\n  }\n  cout << s.length() << endl;\n  cout << s << endl;\n  return;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n\nn=int(input())\ns=[int(x) for x in input().split()]\nptr1=0\nptr2=len(s)-1\nst=''\ncurr=-1\nwhile(ptr1<=ptr2):\n    if(s[ptr1]<s[ptr2] and s[ptr1]>=curr):\n        st+='L'\n        curr=s[ptr1]\n        ptr1+=1\n    elif(s[ptr2]<=s[ptr1] and s[ptr2]>=curr):\n        st+='R'\n        curr=s[ptr2]\n        ptr2-=1\n    elif(s[ptr1]<=s[ptr2] and s[ptr2]>=curr):\n        st+='R'\n        curr=s[ptr2]\n        ptr2-=1\n    elif(s[ptr2]<=s[ptr1] and s[ptr1]>=curr):\n        st+='L'\n        curr=s[ptr1]\n        ptr1+=1\n    else:\n        break\n    #print(st,ptr1,ptr2,curr)\n\nprint(len(st))\nprint(st)\n\"\"\"\n\n\n\nn=int(input())\ns=[int(x) for x in input().split()]\nptr1=0\nptr2=len(s)-1\nst=''\ncurr=-1\nwhile(ptr1<=ptr2):\n    if(ptr1==ptr2):\n        if(s[ptr1]>curr):\n            curr=s[ptr1]\n            ptr1+=1\n            ptr2-=1\n            st+='L'\n        else:\n            break\n    else:\n        if(s[ptr1]<s[ptr2]):\n            if(s[ptr1]>curr):\n                curr=s[ptr1]\n                ptr1+=1\n                st+='L'\n            elif(s[ptr2]>curr):\n                curr=s[ptr2]\n                ptr2-=1\n                st+='R'\n            else:\n                break\n        elif(s[ptr1]>s[ptr2]):\n            if(s[ptr2]>curr):\n                curr=s[ptr2]\n                ptr2-=1\n                st+='R'\n            elif(s[ptr1]>curr):\n                curr=s[ptr1]\n                ptr1+=1\n                st+='L'\n            else:\n                break\n        else:\n            if(s[ptr1]>curr):\n                c1=0\n                lst=curr\n                for i in range(ptr1,ptr2+1):\n                    if(s[i]>lst):\n                        lst=s[i]\n                        c1+=1\n                    else:\n                        break\n                c2=0\n                lst=curr\n                for i in range(ptr2,ptr1-1,-1):\n                    if(s[i]>lst):\n                        lst=s[i]\n                        c2+=1\n                    else:\n                        break\n\n                if(c1>=c2):\n                    curr=s[ptr1]\n                    ptr1+=1\n                    st+='L'\n                else:\n                    curr=s[ptr2]\n                    ptr2-=1\n                    st+='R'\n            else:\n                break\n\n                    \n\n\nprint(len(st))\nprint(st)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class IncreasingSubsequenceHard implements Closeable {\n\n  private InputReader in = new InputReader(System.in);\n  private PrintWriter out = new PrintWriter(System.out);\n\n  public void solve() {\n    int n = in.ni();\n    int[] x = new int[n];\n    for (int i = 0; i < n; i++) {\n      x[i] = in.ni();\n    }\n    List<Integer> left = new ArrayList<>();\n    List<Integer> right = new ArrayList<>();\n    left.add(x[0]);\n    right.add(x[n - 1]);\n    for (int i = 1; i < n; i++) {\n      if (x[i] > x[i - 1]) {\n        left.add(x[i]);\n      } else break;\n    }\n    for (int i = n - 2; i >= 0; i--) {\n      if (x[i] > x[i + 1]) {\n        right.add(x[i]);\n      } else break;\n    }\n    final int oo = Integer.MAX_VALUE;\n    StringBuilder result = new StringBuilder();\n    int i = 0, j = 0;\n    while (i < left.size() || j < right.size()) {\n      int a = i < left.size() ? left.get(i) : oo;\n      int b = j < right.size() ? right.get(j) : oo;\n      if (a < b) {\n        result.append('L');\n        i++;\n      } else if (a > b) {\n        result.append('R');\n        j++;\n      } else {\n        int leftRemaining = left.size() - i; \n        int rightRemaining = right.size() - j;\n        if (leftRemaining > rightRemaining) {\n          result.append('L');\n          while (++i < left.size()) {\n            result.append('L');\n          }\n        } else {\n          result.append('R');\n          while (++j < right.size()) {\n            result.append('R');\n          }\n        }\n        break;\n      }\n    }\n    out.println(result.length());\n    out.println(result.toString());\n  }\n\n  @Override\n  public void close() throws IOException {\n    in.close();\n    out.close();\n  }\n\n  static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n      reader = new BufferedReader(new InputStreamReader(stream), 32768);\n      tokenizer = null;\n    }\n\n    public String next() {\n      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n        try {\n          tokenizer = new StringTokenizer(reader.readLine());\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return tokenizer.nextToken();\n    }\n\n    public int ni() {\n      return Integer.parseInt(next());\n    }\n\n    public long nl() {\n      return Long.parseLong(next());\n    }\n\n    public void close() throws IOException {\n      reader.close();\n    }\n  }\n\n  public static void main(String[] args) throws IOException {\n    try (IncreasingSubsequenceHard instance = new IncreasingSubsequenceHard()) {\n      instance.solve();\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnum = list(map(int,input().split()))\nc = -1\nt=''\nl=0\nr=n-1\ntl=''\ntr=''\nwhile(l<=r):\n    maxA = max(num[l],num[r],c)\n    if maxA == c:\n        break\n    highVlaue  = max(num[l],num[r])\n    next = max(min(num[l],num[r]),c)\n    # print('NEXt:',next,'C:',c,'l',l,'r',r)\n    if num[l]==num[r] and l!=r:\n        c1=c\n        c2 =c\n        tl = t\n        tr = t\n        for i in range(l,r):\n            if num[i]>c1:\n                tl+='L'\n                c1=num[i]\n            else:\n                break\n        for i in range(r,l,-1):\n            if num[i]>c2:\n                tr+='R'\n                c2=num[i]\n            else:break\n        break\n    if next == c:\n        if num[l] == highVlaue:\n            t+='L'\n            l+=1\n        else:\n            t+='R'\n            r-=1\n        c = highVlaue\n    else:\n        if num[l] == next:\n            t+='L'\n            l+=1\n            c=next\n        else:\n            t+='R'\n            c = next\n            r-=1\narr = [[len(t),t],[len(tl),tl],[len(tr),tr]]\narr.sort()\nprint(arr[-1][0])\nprint(arr[-1][1])\n"
        },
        {
            "language": 4,
            "solution": "// Change Of Plans BABY.... Change Of Plans //\nimport java.io.*;\nimport java.util.*;\nimport static java.lang.Math.*;\n\npublic class increasingSubSequence {\n\n    static void MainSolution() {\n        n = ni();\n        int ar[] = new int[n];\n        for (int i = 0; i < n; i++) ar[i] = ni();\n\n        int l = 0, r = n - 1;\n        ArrayList<Integer> ans = new ArrayList<>();\n        ans.add(0);\n        StringBuilder sb = new StringBuilder();\n        while (l <= r) {\n            if (ar[l] < ar[r]) {\n                if (ar[l] > ans.get(ans.size() - 1)) {\n                    ans.add(ar[l]);\n                    l++;\n                    sb.append('L');\n                } else if (ar[r] > ans.get(ans.size() - 1)) {\n                    ans.add(ar[r]);\n                    r--;\n                    sb.append('R');\n                }\n                else break;\n            } else if (ar[r] < ar[l]) {\n                if (ar[r] > ans.get(ans.size() - 1)) {\n                    ans.add(ar[r]);\n                    r--;\n                    sb.append('R');\n                } else if (ar[l] > ans.get(ans.size() - 1)) {\n                    ans.add(ar[l]);\n                    l++;\n                    sb.append('L');\n                }\n                else break;\n            } else if (ar[l] == ar[r] && ar[l] > ans.get(ans.size() - 1)) {\n                int temp1 = 1, temp2 = 1;\n                for (int i = l; i <= r - 1; i++) {\n                    if (ar[i] < ar[i + 1]) temp1++;\n                    else break;\n                }\n                for (int i = r; i > l; i--) {\n                    if (ar[i] < ar[i - 1]) temp2++;\n                    else break;\n                }\n\n                if (temp1 > temp2) {\n                    for (int i = 0; i < temp1; i++) {\n                        sb.append('L');\n                    }\n                } else {\n                    for (int i = 0; i < temp2; i++) {\n                        sb.append('R');\n                    }\n                }\n                break;\n            } else break;\n        }\n        pl(sb.length());\n        pl(sb);\n    }\n\n    /*----------------------------------------------------------------------------------------------------------------*/\n    //THE DON'T CARE ZONE BEGINS HERE...\\\\\n    static int mod9 = 1000000007;\n    static int n, m, l, k, t, mod = 998244353;\n    static AwesomeInput input = new AwesomeInput(System.in);\n    static PrintWriter pw = new PrintWriter(System.out, true);\n\n    static class AwesomeInput {\n        private InputStream letsDoIT;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        private AwesomeInput(InputStream incoming) {\n            this.letsDoIT = incoming;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = letsDoIT.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        private long ForLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        private String ForString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            boolean isSpaceChar(int ch);\n        }\n    }\n\n    // functions to take input//\n    static int ni() {\n        return (int) input.ForLong();\n    }\n\n    static String ns() {\n        return input.ForString();\n    }\n\n    static long nl() {\n        return input.ForLong();\n    }\n\n    static double nd() throws IOException {\n        return Double.parseDouble(new BufferedReader(new InputStreamReader(System.in)).readLine());\n    }\n\n    //functions to give output\n    static void pl() {\n        pw.println();\n    }\n\n    static void p(Object o) {\n        pw.print(o + \" \");\n    }\n\n    static void pws(Object o) {\n        pw.print(o + \"\");\n    }\n\n    static void pl(Object o) {\n        pw.println(o);\n    }\n\n    public static void main(String[] args) {      //threading has been used to increase the stack size.\n\n        new Thread(null, null, \"Vengeance\", 1 << 25)  //the last parameter is stack size desired.\n        {\n            public void run() {\n                try {\n                    double s = System.currentTimeMillis();\n                    MainSolution();\n                    //pl((\"\\nExecution Time : \" + ((double) System.currentTimeMillis() - s) / 1000) + \" s\");\n                    pw.flush();\n                    pw.close();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    System.exit(1);\n                }\n            }\n        }.start();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nn=int(input())\nA=deque(map(int,input().split()))\nans=''\nlast=0\ni=0\nwhile i<n and max(A[0],A[-1])>last:\n    if A[0]==A[-1] and A[0]>last:\n        left,right=A[0],A[-1]\n        size=len(A)\n        ansLeft='L'\n        for i in range(1,size):\n            if A[i]>left:\n                ansLeft+='L'\n                left=A[i]\n            else:\n                break\n        ansRight='R'\n        for i in reversed(range(size-1)):\n            if A[i]>right:\n                ansRight+='R'\n                right=A[i]\n            else:\n                break\n        ans+=ansRight if len(ansRight)>=len(ansLeft) else ansLeft\n        break\n    if A[0]>last and (A[0]<A[-1] or A[-1]<=last):\n        ans+='L'\n        last=A.popleft()\n    else:\n        ans+='R'\n        last=A.pop()\n    i+=1\nprint(len(ans))\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\n\npublic class IncSub {\n\t\n\tstatic class FastReader { \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException  e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t}\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tFastReader sc = new FastReader();\n\t    OutputStream outputstream = System.out;\n\t    PrintWriter out = new PrintWriter(outputstream);\n\t    \n\t    int n = sc.nextInt();\n\t    int[] arr = new int[n];\n\t    for(int i = 0; i < n; i++) {\n\t    \tarr[i] = sc.nextInt();\n\t    }\n\t    /*if(n==1) {\n\t    \tout.println(1);\n\t    \tout.println(\"L\");\n\t    \tout.close();\n\t    \treturn;\n\t    }*/\n\t\tint l = 0;\n\t\tint r = n-1;\n\t\tint left,right,ll=0,rr=n-1;\n\t\tStack<Integer> stkl = new Stack<Integer>();\n\t\tStack<Integer> stkr = new Stack<Integer>();\n\t\tfor(int i = 1; i < n; i++) {\n\t\t\tif(arr[i]>arr[i-1])ll++; //stkl.push(arr[i]);\n\t\t\telse break;\n\t\t}\n\t\tfor(int i = n-2; i >=0; i--) {\n\t\t\tif(arr[i]>arr[i+1])rr--; //stkr.push(arr[i]);\n\t\t\telse break;\n\t\t}\n\t\tfor(int i = ll; i >= 0; i--) {\n\t\t\tstkl.push(arr[i]);\n\t\t}\n\t\tfor(int i = rr; i < n; i++) {\n\t\t\tstkr.push(arr[i]);\n\t\t}\n\t\tboolean stopl = false;\n\t\tboolean stopr = false;\n\t\tArrayList<Character> al = new ArrayList();\n\t\twhile(!stkl.isEmpty() || !stkr.isEmpty()) {\n\t\t\tif(!stkl.isEmpty() && !stkr.isEmpty()) {\n\t\t\t\tleft = stkl.peek();\n\t\t\t\tright = stkr.peek();\n\t\t\t\tif(left==right) {\n\t\t\t\t\tif(stkl.size()>=stkr.size()) {\n\t\t\t\t\t\twhile(!stkl.isEmpty()){\n\t\t\t\t\t\t\tal.add('L');\n\t\t\t\t\t\t\tstkl.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twhile(!stkr.isEmpty()) {\n\t\t\t\t\t\t\tal.add('R');\n\t\t\t\t\t\t\tstkr.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if(left<right) {\n\t\t\t\t\tal.add('L');\n\t\t\t\t\tstkl.pop();\n\t\t\t\t} else {\n\t\t\t\t\tal.add('R');\n\t\t\t\t\tstkr.pop();\n\t\t\t\t}\n\t\t\t} else if(!stkl.isEmpty()) {\n\t\t\t\twhile(!stkl.isEmpty()) {\n\t\t\t\t\tal.add('L');\n\t\t\t\t\tstkl.pop();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile(!stkr.isEmpty()) {\n\t\t\t\t\tal.add('R');\n\t\t\t\t\tstkr.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout.println(al.size());\n\t\tfor(Character ch : al) out.print(ch);\n\t\tout.close();\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\ns = []\nl = 0\nr = n - 1\nm = 0\nL = 1\nR = 1\nwhile l <= r:\n    if a[l] == a[r] and a[l] > m:\n        if l == r:\n            s.append('L')\n            break\n        else:\n            while a[l] < a[l + 1]:\n                l += 1\n                L += 1\n            while a[r] < a[r - 1]:\n                r -= 1\n                R += 1\n            if L >= R:\n                s.append('L' * L)\n                break\n            else:\n                s.append('R' * R)\n                break\n    elif a[l] > m and a[l] < a[r]:\n        m = a[l]\n        l += 1\n        s.append('L')\n    elif a[r] > m:\n        m = a[r]\n        r -= 1\n        s.append('R')\n    elif a[l] > m:\n        m = a[l]\n        l += 1\n        s.append('L')\n    elif a[l] <= m and a[r] <= m:\n        break\nd = ''.join(s)\nprint(len(d))\nprint(d)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n#from collections import deque\n\nn=int(input())\nA=list(map(int,input().split()))\n#B=deque(A)\n\n\nLIST=[1]*n\nLIST_INV=[1]*n\n\nfor i in range(n-2,-1,-1):\n    if A[i]<A[i+1]:\n        LIST[i]=LIST[i+1]+1\n\n\nfor i in range(1,n):\n    if A[i]<A[i-1]:\n        LIST_INV[i]=LIST_INV[i-1]+1\n\nANS=[]\nSCORE=0\ni=0\nj=n-1\nwhile True:\n    if i==j and A[i]>SCORE:\n        ANS.append(\"R\")\n        SCORE=A[i]\n        break\n    \n    if A[i]>A[j] and A[j]>SCORE:\n        ANS.append(\"R\")\n        SCORE=A[j]\n        j-=1\n        \n    elif A[i]<A[j] and A[i]>SCORE:\n        ANS.append(\"L\")\n        SCORE=A[i]\n        i+=1\n        \n    elif A[i]>A[j] and A[j]<=SCORE and A[i]>SCORE:\n        ANS.append(\"L\")\n        SCORE=A[i]\n        i+=1\n        \n    elif A[i]<A[j] and A[i]<=SCORE and A[j]>SCORE:\n        ANS.append(\"R\")\n        SCORE=A[j]\n        j-=1\n\n    elif A[i]==A[j] and A[i]>SCORE:\n        if LIST[i]>LIST_INV[j]:\n            ANS.append(\"L\")\n            SCORE=A[i]\n            i+=1\n        else:\n            ANS.append(\"R\")\n            SCORE=A[j]\n            j-=1\n\n    else:\n        break\nprint(len(ANS))\nprint(\"\".join(ANS))            \n            \n    \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, k, i, j, a[2 * 100010];\nvector<char> ans;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  long long l = 1, r = n, f = -1e18;\n  while (l <= r) {\n    if (f >= a[l] && f >= a[r]) break;\n    if (a[l] <= f && f < a[r]) {\n      ans.push_back('R');\n      f = a[r];\n      r--;\n      continue;\n    }\n    if (a[l] > f && f >= a[r]) {\n      ans.push_back('L');\n      f = a[l];\n      l++;\n      continue;\n    }\n    if (a[l] < a[r]) {\n      ans.push_back('L');\n      f = a[l];\n      l++;\n    } else {\n      if (a[l] > a[r]) {\n        ans.push_back('R');\n        f = a[r];\n        r--;\n      } else {\n        int k1 = 0, k2 = 0;\n        for (int j = l + 1; j <= r; j++) {\n          if (a[j] > a[j - 1])\n            k1++;\n          else\n            break;\n        }\n        for (int j = r - 1; j >= l; j--) {\n          if (a[j] > a[j + 1])\n            k2++;\n          else\n            break;\n        }\n        if (k1 > k2) {\n          ans.push_back('L');\n          for (int j = l + 1; j <= r; j++) {\n            if (a[j] > a[j - 1])\n              ans.push_back('L');\n            else\n              break;\n          }\n        } else {\n          ans.push_back('R');\n          for (int j = r - 1; j >= l; j--) {\n            if (a[j] > a[j + 1])\n              ans.push_back('R');\n            else\n              break;\n          }\n        }\n        break;\n      }\n    }\n  }\n  cout << ans.size() << '\\n';\n  for (int i = 0; i < ans.size(); i++) {\n    cout << ans[i];\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\nimport static java.lang.Math.*;\npublic class Solution{ \n    static InputReader sc;\n    static PrintWriter wc;\n     \n    public static void main(String[] args) {\n        sc=new InputReader(System.in);\n        wc=new PrintWriter(System.out);\n        int n=sc.nextInt();\n        Deque<Integer> q=new LinkedList<Integer>();\n        int i;\n        for(i=0;i<n;i++){\n            q.add(sc.nextInt());\n        }\n        int res=1;\n        StringBuffer s=new StringBuffer();\n        int max;\n        if(q.peek()<q.peekLast()){\n            max=q.peekFirst();\n            q.removeFirst();\n            s.append(\"L\");\n        }\n        else if(q.peek()>q.peekFirst()){\n            max=q.peekLast();\n            q.removeLast();\n            s.append(\"R\");\n        }\n        else{\n            max=-1;\n            res=0;\n        }\n        while(true){\n            if(q.size()==0) break;\n            if(q.peekFirst()>q.peekLast()){\n                if(max<q.peekLast()){\n                    res++;\n                    max=q.peekLast();\n                    s.append(\"R\");\n                    q.removeLast();\n\n                }\n                else{\n                    if(max<q.peekFirst()){\n                        res++;\n                        max=q.peekFirst();\n                        s.append(\"L\");\n                        q.removeFirst();\n                    }\n                    else{\n                        break;\n                    }\n                }\n            }   \n            else if(q.peekFirst()<q.peekLast()){\n                if(max<q.peekFirst()){\n                    res++;\n                    max=q.peekFirst();\n                    s.append(\"L\");\n                    q.removeFirst();\n                }\n                else{\n                    if(max<q.peekLast()){\n                        res++;\n                        max=q.peekLast();\n                        s.append(\"R\");\n                        q.removeLast();\n                    }\n                    else{\n                        break;\n                    }\n                }\n            }\n            else if(max<q.peekFirst()){\n                ArrayList<Integer> al=new ArrayList<>();\n                while(q.size()>0){\n                    al.add(q.peekFirst());\n                    q.removeFirst();\n                }\n                int index=0,l=1,r=1;\n                int len=al.size();\n                int max1=al.get(0);\n                index++;\n                while(index<len&&al.get(index)>max1){\n                    l++;\n                    max1=al.get(index++);\n                }\n                index=len-2;\n                max1=al.get(len-1);\n                while(index>=0&&al.get(index)>max1){\n                    r++;\n                    max1=al.get(index--);\n                }\n                if(l>r){\n                    res+=l;\n                    while(l-->0){\n                        s.append(\"L\");\n                    }\n                    wc.println(res+\"\\n\"+new String(s));\n                    wc.close();\n                    return;\n                }\n                else{\n                    res+=r;\n                    while(r-->0){\n                        s.append(\"R\");\n                    }\n                    wc.println(res+\"\\n\"+new String(s));\n                    wc.close();\n                    return;\n                }\n            }\n            else break;\n        }\n        wc.println(res+\"\\n\"+new String(s));\n        wc.close();\n    }\n    static class InputReader {\n        \n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        \n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n        \n        public int read()\n        {\n            if (numChars==-1) \n                throw new InputMismatchException();\n            \n            if (curChar >= numChars)\n            {\n                curChar = 0;\n                try \n                {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                \n                if(numChars <= 0)               \n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine()\n        {\n            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt()\n        {\n            int c = read();\n            \n            while(isSpaceChar(c)) \n                c = read();\n            \n            int sgn = 1;\n            \n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            \n            int res = 0;\n            do \n            {\n                if(c<'0'||c>'9') \n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c)); \n            \n            return res * sgn;\n        }\n        \n        public long nextLong() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            \n            do \n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n                return res * sgn;\n        }\n        \n        public double nextDouble() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') \n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') \n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) \n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        \n        public String readString() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do \n            {\n                res.appendCodePoint(c);\n                c = read();\n            } \n            while (!isSpaceChar(c));\n            \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) \n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next() \n        {\n            return readString();\n        }\n        \n        public interface SpaceCharFilter \n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }   \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\n/* abhi2601 */\n\npublic class Q1 implements Runnable{\n\n    final static long mod = (long)1e9 + 7;\n\n    class Pair{\n        int l,r;\n        Pair(int l,int r){\n            this.l=l;\n            this.r=r;\n        }\n    }\n\n    public void run(){\n        InputReader sc = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        int n=sc.nextInt();\n        ArrayList<Integer>al=new ArrayList<>();\n        for(int i=0;i<n;i++) al.add(sc.nextInt());\n        int i=0,j=n-1,temp=-1;\n        StringBuilder sb=new StringBuilder();\n        while(i<=j){\n            if(al.get(i)<al.get(j)){\n                if(temp<al.get(i)){\n                    temp=al.get(i);\n                    sb.append('L');\n                    i++;\n                }\n                else if(temp<al.get(j)){\n                    temp=al.get(j);\n                    sb.append('R');\n                    j--;\n                }\n                else break;\n            }\n            else if(al.get(i)>al.get(j)){\n                if(temp<al.get(j)){\n                    temp=al.get(j);\n                    sb.append('R');\n                    j--;\n                }\n                else if(temp<al.get(i)){\n                    temp=al.get(i);\n                    sb.append('L');\n                    i++;\n                }\n                else break;\n            }\n            else{\n                if(al.get(i)<=temp) break;\n                StringBuilder s1=new StringBuilder();\n                s1.append('L');\n                StringBuilder s2=new StringBuilder();\n                s2.append('R');\n                for(int k=i+1;k<j;k++){\n                    if(al.get(k)>al.get(k-1)){\n                        s1.append('L');\n                    }\n                    else break;\n                }\n                for(int k=j-1;k>i;k--){\n                    if(al.get(k)>al.get(k+1)){\n                        s2.append('R');\n                    }\n                    else break;\n                }\n                //w.println(s1+\" \"+s2);\n                if(s1.length()>=s2.length()) sb.append(s1);\n                else sb.append(s2);\n                break;\n            }\n        }\n        w.println(sb.length());\n        w.println(sb);\n        w.close();\n    }\n    //static PrintWriter w;\n    /*File in=new File(\"input.txt\");\n        File out=new File(\"output.txt\");\n        Scanner sc= null;\n        try {\n            sc = new Scanner(in);\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n        try {\n            w=new PrintWriter(out);\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }*/\n    static class InputReader {\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n\n        public int read()\n        {\n            if (numChars==-1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars)\n            {\n                curChar = 0;\n                try\n                {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n\n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine()\n        {\n            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt()\n        {\n            int c = read();\n\n            while(isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do\n            {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.')\n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.')\n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c)\n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next()\n        {\n            return readString();\n        }\n\n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    public static void main(String args[]) throws Exception\n    {\n        new Thread(null, new Q1(),\"q1\",1<<26).start();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1000001];\nint maxl(int l, int r) {\n  for (int i = l + 1; i <= r; i++) {\n    if (a[i] <= a[i - 1]) return (i - l);\n  }\n  return (r - l + 1);\n}\nint maxr(int l, int r) {\n  for (int i = r - 1; i >= l; i--) {\n    if (a[i] <= a[i + 1]) return r - i;\n  }\n  return (r - l + 1);\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  int l = 1;\n  int r = n;\n  string ans = \"\";\n  int last = 0;\n  while (l <= r && (a[l] > last || a[r] > last)) {\n    if (a[l] < a[r]) {\n      if (a[l] > last) {\n        last = a[l];\n        ans += \"L\";\n        l++;\n      } else {\n        last = a[r];\n        ans += \"R\";\n        r--;\n      }\n    } else if (a[l] > a[r]) {\n      if (a[r] > last) {\n        last = a[r];\n        ans += \"R\";\n        r--;\n      } else {\n        last = a[l];\n        ans += \"L\";\n        l++;\n      }\n    } else {\n      int cur1 = maxl(l, r);\n      int cur2 = maxr(l, r);\n      if (cur1 > cur2) {\n        for (int i = 0; i < cur1; i++) ans += \"L\";\n      } else\n        for (int i = 0; i < cur2; i++) ans += \"R\";\n      break;\n    }\n  }\n  cout << ans.size() << endl;\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  string s = \"\";\n  int k = 0;\n  vector<int> a(n, 0);\n  int i = 0, j = n - 1, m = 0;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  while (i <= j) {\n    if (a[i] == a[j] && a[i] > m) {\n      int ko = 1;\n      int l = 1;\n      for (int o = i + 1; o <= j; o++)\n        if (a[o] > a[o - 1])\n          ko++;\n        else\n          break;\n      for (int o = j - 1; o >= i; o--)\n        if (a[o] > a[o + 1])\n          l++;\n        else\n          break;\n      if (l > ko) {\n        for (int o = 0; o < l; o++) s += 'R';\n        k += l;\n      } else {\n        for (int o = 0; o < ko; o++) s += 'L';\n        k += ko;\n      }\n      break;\n    }\n    if (a[i] > m && a[i] < a[j]) {\n      s += 'L';\n      k++;\n      i++;\n      m = a[i - 1];\n    } else if (a[j] > m && a[j] < a[i]) {\n      s += 'R';\n      k++;\n      j--;\n      m = a[j + 1];\n    } else if (a[i] > m) {\n      s += 'L';\n      k++;\n      i++;\n      m = a[i - 1];\n    } else if (a[j] > m) {\n      s += 'R';\n      k++;\n      j--;\n      m = a[j + 1];\n    } else\n      break;\n  }\n  cout << k << endl;\n  cout << s;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[200010], top, p;\nchar mk[200010];\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n;\n  for (int i = 0; i < n; ++i) cin >> a[i];\n  int pos1 = 0, pos2 = n - 1;\n  while (top < n) {\n    if (a[pos1] == a[pos2] && pos1 != pos2) {\n      int l = 0, r = 0;\n      while (a[pos1 + l] < a[pos1 + 1 + l]) l++;\n      while (a[pos2 - r] < a[pos2 - r - 1]) r++;\n      if (l < r)\n        a[pos1] = 0;\n      else\n        a[pos2] = 0;\n    }\n    if (a[pos1] > p && (a[pos1] < a[pos2] || a[pos2] <= p))\n      p = a[pos1++], mk[top++] = 'L';\n    else if (a[pos2] > p)\n      p = a[pos2--], mk[top++] = 'R';\n    else\n      break;\n  }\n  cout << top << endl << mk;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\n \nans = []\nj = 0\nk = n\n \nseq = [0]\n \nif n == 1:\n    print(1)\n    print('L')\n \nelse:\n    while j < k:\n        if l[j] == l[k-1]:\n            break\n        elif l[j] < l[k-1] and l[j] > seq[-1]:\n            seq.append(l[j])\n            j += 1\n            ans.append('L')\n        elif l[k-1] > seq[-1]:\n            seq.append(l[k-1])\n            k -= 1\n            ans.append('R')\n        else:\n            break\n \n \n    one_sec = seq[:]\n    two_sec = seq[:]\n \n    one_ans = ans[:]\n    two_ans = ans[:]\n \n    i = j\n \n    while i < k and one_sec[-1] < l[i]:\n        one_sec.append(l[i])\n        i += 1\n        one_ans.append('L')\n \n    i = k-1\n    while i > j and two_sec[-1] < l[i]:\n        two_sec.append(l[i])\n        i -= 1\n        two_ans.append('R')\n \n    if len(one_ans) > len(two_ans):\n        print(len(one_ans))\n        print(*one_ans,sep='')\n    else:\n        print(len(two_ans))\n        print(*two_ans,sep='')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint v[200005];\nstring solve(int i, int j, int last) {\n  if (i == j && v[i] > last) {\n    return \"L\";\n  } else if (v[i] <= last && v[j] <= last) {\n    return \"\";\n  } else {\n    if (v[i] == v[j]) {\n      string l = solve(i + 1, j, v[i]);\n      string r = solve(i, j - 1, v[j]);\n      if (l.size() >= r.size()) {\n        return \"L\" + l;\n      } else {\n        return \"R\" + r;\n      }\n    } else {\n      if (v[i] > last && (v[i] < v[j] || v[j] <= last)) {\n        return \"L\" + solve(i + 1, j, v[i]);\n      } else {\n        return \"R\" + solve(i, j - 1, v[j]);\n      }\n    }\n  }\n}\nint main(int argc, char const *argv[]) {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> v[i];\n  string res = solve(0, n - 1, 0);\n  cout << res.size() << endl;\n  cout << res << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def side_res(s, res, index, step, step_res):\n    x_res = res[::]\n\n    x_res.append(step_res)\n    prev = s[index]\n    index += step\n\n    while s[index] > prev:\n        x_res.append(step_res)\n        prev = s[index]\n        index += step\n    return x_res\n\n\n_ = input()\ns = list(map(int, input().split()))\nl_index = 0\nr_index = len(s) - 1\nres = []\nprev = 0\nwhile l_index <= r_index:\n    if s[l_index] > prev and s[r_index] > prev:\n        if l_index == r_index:\n            res.append(\"L\")\n            prev = s[l_index]\n            l_index += 1\n        elif s[l_index] == s[r_index]:\n            r_res = side_res(s, res, r_index, -1, \"R\")\n            l_res = side_res(s, res, l_index, 1, \"L\")\n\n            res = l_res if len(l_res) > len(r_res) else r_res\n            break\n        elif s[l_index] < s[r_index]:\n            res.append(\"L\")\n            prev = s[l_index]\n            l_index += 1\n        else:\n            res.append(\"R\")\n            prev = s[r_index]\n            r_index -= 1\n    elif s[l_index] > prev:\n        res.append(\"L\")\n        prev = s[l_index]\n        l_index += 1\n    elif s[r_index] > prev:\n        res.append(\"R\")\n        prev = s[r_index]\n        r_index -= 1\n    else:\n        break\nprint(len(res))\nprint(''.join(res))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nsp = [0]\ns = ''\nl = 0\nr = n - 1\nwhile r - l != -1:\n    if a[l] == a[r] and l != r:\n        sp1 = sp.copy()\n        s1 = s\n        while sp[-1] < a[l]:\n            sp.append(a[l])\n            l += 1\n            s += 'L'\n        while sp1[-1] < a[r]:\n            sp1.append(a[r])\n            r -= 1\n            s1 += 'R'\n        if len(sp) > len(sp1):\n            print(len(sp) - 1)\n            print(s)\n        else:\n            print(len(sp1) - 1)\n            print(s1)\n        exit(0)\n    if a[l] > sp[-1] and a[r] <= sp[-1]:\n        sp.append(a[l])\n        l += 1\n        s += 'L'\n    elif a[r] > sp[-1] and a[l] <= sp[-1]:\n        sp.append(a[r])\n        r -= 1\n        s += 'R'\n    elif a[l] > sp[-1] and a[r] > sp[-1]:\n        if a[l] < a[r]:\n            sp.append(a[l])\n            l += 1\n            s += 'L'\n        else:\n            sp.append(a[r])\n            r -= 1\n            s += 'R'\n    else:\n        break\nprint(len(sp) - 1)\nprint(s)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.PriorityQueue;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tFastScanner sc = new FastScanner();\n\t\tint n = sc.nextInt();\n\t\tint arr[] = sc.readArray(n);\n\t\tString str = \"\";\n\t\tint i=0,j=n-1;\n\t\tint max = 0;\n\t\tStringBuilder res = new StringBuilder(\"\");\n\t\twhile(i<=j) {\n\t\t\tif(arr[i] > max && arr[j] > max) {\n\t\t\t\tif(arr[i] < arr[j]) {\n\t\t\t\t\tres.append(\"L\");\n\t\t\t\t\tmax = arr[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse if(arr[i] > arr[j]) {\n\t\t\t\t\tres.append(\"R\");\n\t\t\t\t\tmax = arr[j];\n\t\t\t\t\tj--;\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tint aa = count1(i,j,arr);\n\t\t\t\t\tint bb = count2(i, j, arr);\n\t\t\t\t\tif(aa > bb) {\n\t\t\t\t\t\tfor(int k=0; k<=aa; k++) {\n\t\t\t\t\t\t\tres.append(\"L\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(int k=0; k<=bb; k++) {\n\t\t\t\t\t\t\tres.append(\"R\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(arr[i] > max) {\n\t\t\t\tres.append(\"L\");\n\t\t\t\tmax = arr[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse if(arr[j] > max) {\n\t\t\t\tres.append(\"R\");\n\t\t\t\tmax = arr[j];\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t\tSystem.out.println(res.length());\n\t\tSystem.out.println(res);\n\n\t}\n\n\tprivate static int count2(int i, int j, int[] arr) {\n\t\tint count = 0;\n\t\tfor(int k=j;k>i;k--) {\n\t\t\tif(arr[k] < arr[k-1])count++;\n\t\t\telse break;\n\t\t}\n\t\treturn count;\n\t}\n\n\tprivate static int count1(int i, int j, int[] arr) {\n\t\tint count = 0;\n\t\tfor(int k=i;k<j;k++) {\n\t\t\tif(arr[k] < arr[k+1])count++;\n\t\t\telse break;\n\t\t}\n\t\treturn count;\n\t}\n\n\tstatic class FastScanner {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] readArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] readArrayLong(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\tstatic int ceil(int x, int y) {\n\t\treturn (x % y == 0 ? x / y : (x / y + 1));\n\t}\n\n\tstatic long ceil(long x, long y) {\n\t\treturn (x % y == 0 ? x / y : (x / y + 1));\n\t}\n\n\tstatic int max(int x, int y) {\n\t\treturn Math.max(x, y);\n\t}\n\n\tstatic int min(int x, int y) {\n\t\treturn Math.min(x, y);\n\t}\n\n\tstatic long max(long x, long y) {\n\t\treturn Math.max(x, y);\n\t}\n\n\tstatic long min(long x, long y) {\n\t\treturn Math.min(x, y);\n\t}\n\n\tstatic int min(int a[]) {\n\t\tint x = 1_000_000_00_9;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tx = min(x, a[i]);\n\t\treturn x;\n\t}\n\n\tstatic int max(int a[]) {\n\t\tint x = -1_000_000_00_9;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tx = max(x, a[i]);\n\t\treturn x;\n\t}\n\n\tstatic long min(long a[]) {\n\t\tlong x = (long) 3e18;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tx = min(x, a[i]);\n\t\treturn x;\n\t}\n\n\tstatic long max(long a[]) {\n\t\tlong x = -(long) 3e18;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tx = max(x, a[i]);\n\t\treturn x;\n\t}\n\n\tstatic int power(int x, int y) {\n\t\tint res = 1;\n\t\twhile (y > 0) {\n\t\t\tif (y % 2 == 1)\n\t\t\t\tres = (res * x);\n\t\t\ty >>= 1;\n\t\t\tx = (x * x);\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic long power(long x, long y) {\n\t\tlong res = 1;\n\t\twhile (y > 0) {\n\t\t\tif (y % 2 == 1)\n\t\t\t\tres = (res * x);\n\t\t\ty >>= 1;\n\t\t\tx = (x * x);\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic void intsort(int[] a) {\n\t\tList<Integer> temp = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ttemp.add(a[i]);\n\t\tCollections.sort(temp);\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = temp.get(i);\n\t}\n\n\tstatic void longsort(long[] a) {\n\t\tList<Long> temp = new ArrayList<Long>();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ttemp.add(a[i]);\n\t\tCollections.sort(temp);\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = temp.get(i);\n\t}\n\n\tstatic void reverseintsort(int[] a) {\n\t\tList<Integer> temp = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ttemp.add(a[i]);\n\t\tCollections.sort(temp);\n\t\tCollections.reverseOrder();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = temp.get(i);\n\t}\n\n\tstatic void reverselongsort(long[] a) {\n\t\tList<Long> temp = new ArrayList<Long>();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ttemp.add(a[i]);\n\t\tCollections.sort(temp);\n\t\tCollections.reverseOrder();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = temp.get(i);\n\t}\n\n\tstatic class longpair implements Comparable<longpair> {\n\t\tlong x, y;\n\n\t\tlongpair(long x, long y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic int compareTo(longpair p) {\n\t\t\treturn Long.compare(this.x, p.x);\n\t\t}\n\t}\n\n\tstatic class intpair implements Comparable<intpair> {\n\t\tint x, y;\n\n\t\tintpair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(intpair o) {\n\t\t\treturn Integer.compare(this.x, o.x);\n\t\t}\n\n\t\t//\t\ta = new pair [n];\n\t\t//\t\ta[i] = new pair(coo,cost);\n\n\t}\n\n\tpublic static int gcd(int a, int b) {\n\t\tBigInteger b1 = BigInteger.valueOf(a);\n\t\tBigInteger b2 = BigInteger.valueOf(b);\n\t\tBigInteger gcd = b1.gcd(b2);\n\t\treturn gcd.intValue();\n\t}\n\n\tpublic static long gcd(long a, long b) {\n\t\tBigInteger b1 = BigInteger.valueOf(a);\n\t\tBigInteger b2 = BigInteger.valueOf(b);\n\t\tBigInteger gcd = b1.gcd(b2);\n\t\treturn gcd.longValue();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long const mod = 998244353;\ninline long long add(long long a, long long b) {\n  return ((a % mod) + (b % mod) + mod) % mod;\n}\ninline long long mul(long long a, long long b) {\n  return (((a % mod) * (b % mod)) % mod + mod) % mod;\n}\ninline long long sub(long long a, long long b) {\n  return ((a % mod) - (b % mod) + mod) % mod;\n}\nlong long power(long long x, long long y, long long m) {\n  if (y == 0) return 1;\n  long long p = power(x, y / 2, m) % m;\n  p = (p * p) % m;\n  return (y % 2 == 0) ? p : (x * p) % m;\n}\nlong long modInv(long long x) { return power(x, mod - 2, mod) % mod; }\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long n;\n  cin >> n;\n  long long a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  long long ans = 0;\n  long long i = 0;\n  long long j = n - 1;\n  long long prev = 0;\n  string second;\n  while (i <= j) {\n    if (a[i] < a[j]) {\n      if (prev < a[i]) {\n        ans++;\n        second.push_back('L');\n        prev = a[i];\n        i++;\n      } else if (prev < a[j]) {\n        ans++;\n        second.push_back('R');\n        prev = a[j];\n        j--;\n      } else {\n        break;\n      }\n    } else if (a[i] > a[j]) {\n      if (prev < a[j]) {\n        ans++;\n        second.push_back('R');\n        prev = a[j];\n        j--;\n      } else if (prev < a[i]) {\n        ans++;\n        second.push_back('L');\n        prev = a[i];\n        i++;\n      } else {\n        break;\n      }\n    } else {\n      if (i == j) {\n        if (a[i] > prev) {\n          ans++;\n          second.push_back('L');\n        }\n        break;\n      }\n      long long ans1 = 0;\n      long long prev2 = prev;\n      string p;\n      for (int k = i; k < j; k++) {\n        if (a[k] > prev2) {\n          prev2 = a[k];\n          ans1++;\n          p.push_back('L');\n        } else {\n          break;\n        }\n      }\n      long long ans2 = 0;\n      prev2 = prev;\n      string q;\n      for (int k = j; k > i; k--) {\n        if (a[k] > prev2) {\n          prev2 = a[k];\n          ans2++;\n          q.push_back('R');\n        } else {\n          break;\n        }\n      }\n      if (ans1 > ans2)\n        second = second + p;\n      else {\n        second = second + q;\n      }\n      ans = ans + max(ans1, ans2);\n      break;\n    }\n  }\n  cout << ans << endl;\n  cout << second << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.FilterInputStream;\nimport java.io.BufferedInputStream;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Jenish\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        ScanReader in = new ScanReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C2IncreasingSubsequenceHardVersion solver = new C2IncreasingSubsequenceHardVersion();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C2IncreasingSubsequenceHardVersion {\n        int[] a;\n\n        public void solve(int testNumber, ScanReader in, PrintWriter out) {\n            int n = in.scanInt();\n            a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = in.scanInt();\n            int ans = 0, l = 0, r = n - 1, pre = 0;\n            StringBuffer s = new StringBuffer(\"\");\n            while (l <= r) {\n\n\n                int u = a[l], v = a[r];\n                if (pre >= u && pre >= v) break;\n                if (pre < u && pre >= v) {\n                    pre = a[l];\n                    l++;\n                    ans++;\n                    s.append('L');\n                    continue;\n                }\n                if (pre >= u && pre < v) {\n                    pre = a[r];\n                    r--;\n                    ans++;\n                    s.append('R');\n                    continue;\n\n                }\n                if (u < v) {\n                    pre = a[l];\n                    l++;\n                    ans++;\n                    s.append('L');\n                    continue;\n                } else if (u > v) {\n                    pre = a[r];\n                    r--;\n                    ans++;\n                    s.append('R');\n                    continue;\n                } else if (u == v) {\n                    if (l == r) {\n                        ans++;\n                        s.append('L');\n                    } else if (process(l, 1) > process(r, -1)) {\n                        ans += process(l, 1);\n                        for (int i = 0; i < process(l, 1); i++) {\n                            s.append('L');\n                        }\n                    } else {\n                        ans += process(r, -1);\n                        for (int i = 0; i < process(r, -1); i++) {\n                            s.append('R');\n                        }\n                    }\n                    break;\n                }\n            }\n            out.println(ans);\n            out.println(s.toString());\n\n        }\n\n        long process(int i, int k) {\n            int cnt = 0;\n            while (true) {\n                cnt++;\n                if (a[i] < a[i + k]) i += k;\n                else break;\n            }\n            return cnt;\n        }\n\n    }\n\n    static class ScanReader {\n        private byte[] buf = new byte[4 * 1024];\n        private int INDEX;\n        private BufferedInputStream in;\n        private int TOTAL;\n\n        public ScanReader(InputStream inputStream) {\n            in = new BufferedInputStream(inputStream);\n        }\n\n        private int scan() {\n            if (INDEX >= TOTAL) {\n                INDEX = 0;\n                try {\n                    TOTAL = in.read(buf);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                if (TOTAL <= 0) return -1;\n            }\n            return buf[INDEX++];\n        }\n\n        public int scanInt() {\n            int I = 0;\n            int n = scan();\n            while (isWhiteSpace(n)) n = scan();\n            int neg = 1;\n            if (n == '-') {\n                neg = -1;\n                n = scan();\n            }\n            while (!isWhiteSpace(n)) {\n                if (n >= '0' && n <= '9') {\n                    I *= 10;\n                    I += n - '0';\n                    n = scan();\n                }\n            }\n            return neg * I;\n        }\n\n        private boolean isWhiteSpace(int n) {\n            if (n == ' ' || n == '\\n' || n == '\\r' || n == '\\t' || n == -1) return true;\n            else return false;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nseq = list(map(int, input().split()))\n\nincSeq = []\nmoves = \"\"\n\nrightCount = 0\nleftCount = 0\nif seq[0] == seq[-1] and len(seq) > 2:\n    for i in range(len(seq)-1, 0, -1):\n        if seq[i] < seq[i-1]:\n            rightCount += 1\n        else:\n            break\n    for i in range(0, len(seq)-1):\n        if seq[i] < seq[i+1]:\n            leftCount += 1\n        else:\n            break\n    if rightCount > leftCount:\n        x = seq.pop()\n        incSeq.append(x)\n        moves += \"R\"\n    else:\n        x = seq.pop(0)\n        incSeq.append(x)\n        moves += \"L\"\nelse:\n    if seq[0] > seq[-1]:\n        x = seq.pop()\n        incSeq.append(x)\n        moves += \"R\"\n    else:\n        x = seq.pop(0)\n        incSeq.append(x)\n        moves += \"L\"\n\nwhile seq and (seq[0] > incSeq[-1] or seq[-1] > incSeq[-1]):\n    if len(seq) == 1:\n        x = seq.pop()\n        incSeq.append(x)\n        moves += \"R\"\n    elif seq[0] == seq[-1] and len(seq) > 1:\n        for i in range(len(seq) - 1, 0, -1):\n            if seq[i] <= seq[i - 1]:\n                rightCount += 1\n            else:\n                break\n        for i in range(0, len(seq) - 1):\n            if seq[i] <= seq[i + 1]:\n                leftCount += 1\n            else:\n                break\n        if rightCount > leftCount:\n            x = seq.pop()\n            incSeq.append(x)\n            moves += \"R\"\n        else:\n            x = seq.pop(0)\n            incSeq.append(x)\n            moves += \"L\"\n    else:\n        if seq[0] > seq[-1] > incSeq[-1]:\n            x = seq.pop()\n            incSeq.append(x)\n            moves += \"R\"\n\n        elif seq[0] > seq[-1] and seq[-1] <= incSeq[-1]:\n            x = seq.pop(0)\n            incSeq.append(x)\n            moves += \"L\"\n\n        elif seq[-1] > seq[0] > incSeq[-1]:\n            x = seq.pop(0)\n            incSeq.append(x)\n            moves += \"L\"\n\n        elif seq[-1] > seq[0] and seq[0] <= incSeq[-1]:\n            x = seq.pop()\n            incSeq.append(x)\n            moves += \"R\"\n\nprint(len(moves))\nprint(moves)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[200005];\n  for (int i = 0; i < n; ++i) cin >> a[i];\n  deque<int> que, dque;\n  for (int i = n - 1; i >= 0; --i) {\n    que.push_front(a[i]);\n    dque.push_front(a[i]);\n  }\n  vector<char> ans;\n  vector<char> ans1, ans2;\n  int last = 0;\n  while (true) {\n    if (que.empty()) break;\n    if (que.front() > que.back()) {\n      if (que.back() > last) {\n        last = que.back();\n        ans.push_back('R');\n        que.pop_back();\n        dque.pop_back();\n      } else if (que.front() > last) {\n        last = que.front();\n        ans.push_back('L');\n        que.pop_front();\n        dque.pop_front();\n      } else\n        break;\n    } else if (que.front() < que.back()) {\n      if (que.front() > last) {\n        last = que.front();\n        ans.push_back('L');\n        que.pop_front();\n        dque.pop_front();\n      } else if (que.back() > last) {\n        last = que.back();\n        ans.push_back('R');\n        que.pop_back();\n        dque.pop_back();\n      } else\n        break;\n    } else {\n      int last1 = last, last2 = last;\n      while (true) {\n        if (que.empty()) break;\n        if (que.front() > last1) {\n          last1 = que.front();\n          que.pop_front();\n          ans1.push_back('L');\n        } else\n          break;\n      }\n      while (true) {\n        if (dque.empty()) break;\n        if (dque.back() > last2) {\n          last2 = dque.back();\n          dque.pop_back();\n          ans2.push_back('R');\n        } else\n          break;\n      }\n      break;\n    }\n  }\n  if (ans1.size() > ans2.size()) {\n    cout << ans.size() + ans1.size() << endl;\n    for (auto it : ans) cout << it;\n    for (auto it : ans1) cout << it;\n  } else {\n    cout << ans.size() + ans2.size() << endl;\n    for (auto it : ans) cout << it;\n    for (auto it : ans2) cout << it;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\npublic class Main {\n    static final long MOD = 1_000_000_007 , INF = 1_000_000_000_000_000L;\n    static final int INf = 1_000_000_000;\n    static FastReader reader;\n    static PrintWriter writer;\n    public static void main(String[] args) {\n        Thread t = new Thread(null, new O(), \"Integer.MAX_VALUE\", 100000000);\n        t.start();\n    }\n    static class O implements Runnable {\n        public void run() {\n            try {\n                magic();\n            }\n            catch (Exception e) {\n                e.printStackTrace();\n                System.exit(1);\n            }\n        }\n    }\n    static class FastReader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public FastReader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public FastReader(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[1000000];\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n') break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ') c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg) return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ') c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg) return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ') c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);\n            if (neg) return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1) buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead) fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null) return;\n            din.close();\n        }\n    }\n\n    static void magic() throws IOException {\n        reader = new FastReader();\n        writer = new PrintWriter(System.out, true);\n        int n = reader.nextInt();\n        LinkedList<Integer> list = new LinkedList<>();\n        for(int i=0;i<n;++i) {\n            list.add(reader.nextInt());\n        }\n        int curr = 0, cnt = 0;\n        StringBuilder ans = new StringBuilder();\n        while(true) {\n            if(list.size()==1) {\n                if(list.getFirst()>curr) {\n                    curr = list.getFirst();\n                    cnt++;\n                    ans.append(\"L\");\n                }\n                break;\n            }\n            if(list.getFirst()>curr && list.getLast()>curr) {\n                if(list.getFirst()<list.getLast()) {\n                    curr = list.pollFirst();\n                    ans.append(\"L\");\n                    cnt++;\n                }\n                else if(list.getLast()<list.getFirst()) {\n                    curr = list.pollLast();\n                    ans.append(\"R\");\n                    cnt++;\n                }\n                else {\n                    int fromright = goFromRight(list);\n                    int fromleft = goFromLeft(list);\n                    if(fromleft>fromright) {\n                        cnt+=fromleft;\n                        for(int i=0;i<fromleft;++i) {\n                            ans.append(\"L\");\n                        }\n                    }\n                    else {\n                        cnt+=fromright;\n                        for(int i=0;i<fromright;++i) {\n                            ans.append(\"R\");\n                        }\n                    }\n                    break;\n                }\n            }\n            else if(list.getFirst()>curr) {\n                curr = list.pollFirst();\n                cnt++;\n                ans.append(\"L\");\n            }\n            else if(list.getLast()>curr) {\n                curr = list.pollLast();\n                cnt++;\n                ans.append(\"R\");\n            }\n            else {\n                break;\n            }\n        }\n        writer.println(cnt);\n        writer.println(ans);\n    }\n    static int goFromRight(LinkedList<Integer> list) {\n        LinkedList<Integer> dup = new LinkedList<>();\n        for(int e : list) {\n            dup.add(e);\n        }\n        int curr = -1, cnt = 0;\n        while (!dup.isEmpty()) {\n            if(dup.getLast()>curr) {\n                curr = dup.pollLast();\n                cnt++;\n            }\n            else {\n                break;\n            }\n        }\n        return cnt;\n    }\n    static int goFromLeft(LinkedList<Integer> list) {\n        LinkedList<Integer> dup = new LinkedList<>();\n        for(int e : list) {\n            dup.add(e);\n        }\n        int curr = -1, cnt = 0;\n        while (!dup.isEmpty()) {\n            if(dup.getFirst()>curr) {\n                curr = dup.pollFirst();\n                cnt++;\n            }\n            else {\n                break;\n            }\n        }\n        return cnt;\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Random;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\npublic class Jetch {\n\tstatic Random random;\n\tprivate static void mySort(int[] s) {\n        for (int i = 0; i < s.length; ++i) {\n            int j = random.nextInt(i + 1);\n            int t = s[i];\n            s[i] = s[j];\n            s[j] = t;\n        }\n        Arrays.sort(s);\n    }\n\t\n\t\n\t\n\n\tpublic static void main(String[] args) {\n\t\trandom = new Random(543534151132L + System.currentTimeMillis());\n\t\tInputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        \n        int nb=in.nextInt();\n        int[] T=new int[nb];\n        for(int i=0;i<nb;i++)T[i]=in.nextInt();\n        \n        int i=0;\n        int j=nb-1;\n        int last=Integer.MIN_VALUE;\n        StringBuffer bf=new StringBuffer();\n        while(i<j && (T[i]>last || T[j]>last)) {\n        \t\tif(T[i]>last && T[j]>last) {\n        \t\t\tif(T[i]<T[j]) {\n        \t\t\t\tbf.append('L');\n        \t\t\t\tlast=T[i];\n        \t\t\t\ti++;\n        \t\t\t}else if(T[i]>T[j]){\n        \t\t\t\tbf.append('R');\n        \t\t\t\tlast=T[j];\n        \t\t\t\tj--;\n        \t\t\t}else {\n        \t\t\t\tif(i+1==j) {\n        \t\t\t\t\tbf.append('R');\n        \t\t\t\t\tlast=T[j];\n        \t\t\t\t\tj--;\n        \t\t\t\t\tbreak;\n        \t\t\t\t}else {\n        \t\t\t\t\tint c1=0;\n        \t\t\t\t\tif(T[i+1]>T[i]) {\n        \t\t\t\t\t\tc1++;\n        \t\t\t\t\t\tfor(int w=i+1;w<j-1;w++) {\n            \t\t\t\t\t\tif(T[w]<T[w+1])c1++;\n            \t\t\t\t\t\telse break;\n            \t\t\t\t\t}\n        \t\t\t\t\t}\n        \t\t\t\t\tint c2=0;\n        \t\t\t\t\tif(T[j-1]>T[j]) {\n        \t\t\t\t\t\tc2++;\n        \t\t\t\t\t\tfor(int w=j-1;w>i+1;w--) {\n            \t\t\t\t\t\tif(T[w]<T[w-1])c2++;\n            \t\t\t\t\t\telse break;\n            \t\t\t\t\t}\n        \t\t\t\t\t}\n        \t\t\t\t\t\n            \t\t\t\tif(c2>c1) {\n            \t\t\t\t\tbf.append('R');\n            \t\t\t\t\tlast=T[j];\n            \t\t\t\t\tj--;\n            \t\t\t\t}else {\n            \t\t\t\t\tbf.append('L');\n            \t\t\t\t\tlast=T[i];\n            \t\t\t\t\ti++;\n            \t\t\t\t}\n        \t\t\t\t}\n        \t\t\t\t\n        \t\t\t}\n        \t\t}else if(T[i]>last) {\n        \t\t\tbf.append('L');\n        \t\t\tlast=T[i];\n        \t\t\ti++;\n        \t\t}else {\n        \t\t\tbf.append('R');\n        \t\t\tlast=T[j];\n        \t\t\tj--;\n        \t\t}\n        }\n        if(i==j && T[i]>last)bf.append('L');\n        \n        out.println(bf.length());\n        out.println(bf);\n        \n        \n        out.close();\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic static int gcd(int a, int b)  \n    { \n        BigInteger b1 = BigInteger.valueOf(a); \n        BigInteger b2 = BigInteger.valueOf(b); \n        BigInteger gcd = b1.gcd(b2); \n            return gcd.intValue(); \n    } \n      \n    public static long gcd(long a, long b)  \n    { \n        BigInteger b1 = BigInteger.valueOf(a); \n        BigInteger b2 = BigInteger.valueOf(b); \n        BigInteger gcd = b1.gcd(b2); \n            return gcd.longValue(); \n    } \n\t\n\tstatic class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n        \n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n        \n        public float nextFloat() {\n            return Float.parseFloat(next());\n        }\n        \n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "class Node:\n\n    def __init__(self, data=None, prev_node=None, next_node=None):\n        self.data = data\n        self.prev = prev_node\n        self.next = next_node\n    def __repr__(self):\n        return str(self.data)\n\n    def __le__(self, other):\n        if isinstance(other, Node):\n            other = other.data\n        return True if self.data <= other else False\n    def __eq__(self, other):\n        if isinstance(other, Node):\n            other = other.data\n        return True if self.data == other else False\n    def __lt__(self, other):\n        if isinstance(other, Node):\n            other = other.data\n        return True if self.data < other else False\n    def __gt__(self, other):\n        if isinstance(other, Node):\n            other = other.data\n        return True if self.data > other else False\n\n    def __ge__(self, other):\n        if isinstance(other, Node):\n            other = other.data\n        return True if self.data >= other else False\n\n    def __ne__(self, other):\n        if isinstance(other, Node):\n            other = other.data\n        return True if self.data != other else False\n    \n\ndef catdog(iterable, reverse=False):\n    new_catdog = CatDog()\n    for item in iterable:\n        if reverse:\n            new_catdog.pushcat(item)\n        else:\n            new_catdog.pushdog(item)\n    return new_catdog\n\ndef change_len(func, val):\n        def wrapped(self, *args, **kwargs):\n            out = func(self, *args, **kwargs)\n            self.len += val\n            return out\n        return wrapped\n\ndef increment_len(func):\n    return change_len(func, 1)\n\ndef decrement_len(func):\n    return change_len(func, -1)\n\nclass CatDog:        \n    def __init__(self, *items, reverse=False):\n        self.cat = None\n        self.dog = None\n        self._cur = None\n        self.len = 0\n        \n        for item in items:\n            if reverse:\n                self.pushcat(item)\n            else:\n                self.pushdog(item)\n                 \n    def __len__(self):\n        return self.len\n            \n    def __iter__(self):\n        self._cur = self.cat\n        return self\n\n    def __next__(self):\n        if self._cur is None:\n            self._cur = self.cat\n            raise StopIteration\n        else:\n            data = self._cur.data\n            self._cur = self._cur.next\n            return data\n\n    def __repr__(self):\n        items = ', '.join(map(str, self))\n        in_brackets = f'[{items}]'\n        return in_brackets\n\n    def showcat(self):\n        return self.cat.data\n\n    def showdog(self):\n        return self.dog.data\n    @increment_len\n    def pushdog(self, data):\n        new = Node(data=data)\n        old = self.dog\n        if old is None:\n            self.dog = new\n            self.cat = new\n        else:\n            self._chain(old, new)\n            self.dog = new\n\n    @increment_len    \n    def pushcat(self, data):\n        new = Node(data=data)\n        old = self.cat\n        if old is None:\n            self.cat = new\n            self.dog = new\n        else:\n            self._chain(new, old)\n            self.cat = new\n\n    @decrement_len\n    def popcat(self):\n        if self.is_empty():\n            raise Exception\n        cat = self.cat\n        if cat.next is not None:\n            cat.next.prev = None\n        else:\n            self.dog = None\n        self.cat = cat.next\n        return cat.data\n\n    @decrement_len\n    def popdog(self):\n        if self.is_empty():\n            raise Exception\n        dog = self.dog\n        if dog.prev is not None:\n            dog.prev.next = None\n        else:\n            self.cat = None\n        self.dog = dog.prev\n        return dog.data\n        \n    def is_empty(self):\n        return False if self.len else True\n\n    def _chain(self, first, second):\n        first.next = second\n        second.prev = first\n        \ndef main():\n    n = int(input())\n    A = catdog(map(int, input().split()))\n    B = ''\n    last = 0\n    cat, dog = A.cat, A.dog\n    while not A.is_empty() and (cat > last or dog > last):        \n        if cat > dog and dog > last:\n            last = A.popdog()\n            B+='R'\n        elif cat < dog and cat > last:\n            last = A.popcat()\n            B+='L'\n        elif cat == dog and cat is not dog:\n            break\n        elif cat > last:\n            last = A.popcat()\n            B+='L'\n        elif dog > last:\n            last = A.popdog()\n            B+='R'\n        cat, dog = A.cat, A.dog\n    else:\n        print(len(B))\n        print(B)\n        return\n\n    cntcat = 1\n    pcat = cat\n    cat = cat.next    \n    while cat is not None and cat > pcat:\n        pcat = cat\n        cat = cat.next\n        cntcat+=1\n    cntdog = 1\n    pdog = dog\n    dog = dog.prev\n    while dog is not None and dog > pdog:\n        pdog = dog\n        dog = dog.prev\n        cntdog+=1\n    if cntcat > cntdog:\n        B += 'L'*cntcat\n    else:\n        B += 'R'*cntdog\n    print(len(B))\n    print(B)\n\nmain()\n\n\n"
        },
        {
            "language": 4,
            "solution": "//package com.karancp;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\n\n\npublic class karan {\n    public static void main(String args[])\n    {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader z = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        task solver =new task();\n        solver.solve(z,out);\n        out.close();\n    }\n    static class task\n    {\n        static int gcd(int a,int b)\n        {\n            if(b==0)return a;\n            else return gcd(b,a%b);\n        }\n        static long max(long a,long b)\n        {\n            return Math.max(a,b);\n        }\n        static long min(long a,long b)\n        {\n            return Math.min(a,b);\n        }\n        static int max(int a,int b)\n        {\n            return Math.max(a,b);\n        }\n        static int min(int a,int b)\n        {\n            return Math.min(a,b);\n        }\n        public static void solve(InputReader z, PrintWriter out)\n        {\n            int n=z.nextInt();\n            int ar[]=new int[n];\n            int i;\n            for(i=0;i<n;i++)ar[i]=z.nextInt();\n            if(n==1)\n            {\n                out.println(\"1\");\n                out.println(\"L\");\n            }\n            else\n            {\n                int pp[]=new int[n+1];\n                int dd[]=new int[n+1];\n                //int dif1[]=new int[n+1]\n                int l=0;\n                int r=-1;\n                for(i=0;i<n-1;i++) {\n                    if (ar[i] <ar[i + 1]) {\n                        r=i;\n                        pp[l]+=1;\n                        pp[r+1]-=1;\n                    }\n                    else {\n                        l=i+1;\n                    }\n                    }\n                l=0;\n                r=n-1;\n               /* for(i=n-1;i>=1;i--)\n                {\n                    if(ar[i]>ar[i-1])\n                    {\n                       //r=i;\n                        l=i;\n                       dd[l]+=1;\n                       dd[r+1]-=1;\n                    }\n                    else\n                    {\n                        r=i-1;\n                    }\n                } */\n               l=1;\n               r=0;\n               int temp[]=new int[n];\n               for(i=0;i<n;i++)\n               {\n                   temp[i]=ar[n-(i+1)];\n               }\n               l=0;\n               r=-1;\n                for(i=0;i<n-1;i++) {\n                    if (temp[i] <temp[i + 1]) {\n                        r=i;\n                        dd[l]+=1;\n                        dd[r+1]-=1;\n                    }\n                    else {\n                        l=i+1;\n                    }\n                }\n\n\n                for(i=1;i<n;i++)\n                {\n                    pp[i]+=pp[i-1];\n                }\n               /* for(i=n-2;i>=0;i--)\n                {\n                    dd[i]+=dd[i+1];\n                } */\n                for(i=1;i<n;i++)\n                {\n                    dd[i]+=dd[i-1];\n                }\n               /* for(i=0;i<n;i++)\n                {\n                    out.print(pp[i]+\" \");\n                }\n                out.println();\n                for(i=0;i<n;i++)\n                {\n                    out.print(dd[i]+\" \");\n                }\n                out.println(); */\n                l=0;\n                r=n-1;\n                int size=0;\n                int last=0;\n                StringBuilder res=new StringBuilder();\n                while(true)\n                {\n                    if(l==r)\n                    {\n                        if(ar[l]>last)\n                        {\n                            size++;\n                            res.append(\"L\");\n                        }\n                        break;\n                    }\n                    else if(ar[l]!=ar[r])\n                    {\n                        if(ar[l]>last&&ar[r]>last)\n                        {\n                            if(ar[l]<ar[r])\n                            {\n                                last=ar[l];\n                                l++;\n                                size++;\n                                res.append(\"L\");\n\n                            }\n                            else\n                            {\n                                last=ar[r];\n                                r--;\n                                size++;\n\n                                res.append(\"R\");\n                            }\n                        }\n                        else if(ar[l]>last)\n                        {\n                            last=ar[l];\n                            l++;\n                            size++;\n\n                            res.append(\"L\");\n                        }\n                        else if(ar[r]>last)\n                        {\n                            last=ar[r];\n                            r--;\n                            size++;\n\n                            res.append(\"R\");\n                            //out.println(\"Ssss\");\n                        }\n                        else\n                        {\n                            //out.println(ar[l]+\" \"+ar[r]+\" \"+last);\n                            break;\n                        }\n                        if(l>r)break;\n                        // out.println(last);\n                    }\n                    else\n                    {\n                        if(ar[l]>last)\n                        {\n                            if(pp[l]>dd[n-(r+1)])\n                            {\n                                size++;\n                                last=ar[l];\n                                l++;\n                                res.append(\"L\");\n                            }\n                            else\n                            {\n                                size++;\n                                last=ar[r];\n                                r--;\n                                res.append(\"R\");\n                            }\n                        }\n                        else break;\n                    }\n                    if(l>r)break;\n                }\n                out.println(size);\n                out.println(res);\n            }\n\n        }\n    }\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nnew = [0]\ns = ''\ni = 0\nj = -1\n\ndef rec(a, i, j):\n    c = func(a, i + 1, j, new + [a[i]], s)\n    d = func(a, i, j - 1, new + [a[j]], s)\n    if c[0] < d[0]:\n        return True\n    else:\n        return False\n\ndef func(a, i, j, new, s):\n    while True:\n        if n - i < -j:\n            return len(new) - 1, s\n            break\n        if a[i] > new[-1] and a[j] > new[-1]:\n            if a[i] == a[j]:\n                if rec(a, i, j):\n                    new.append(a[j])\n                    j -= 1\n                    s += 'R'\n                else:\n                    s += 'L'\n                    new.append(a[i])\n                    i += 1\n            elif a[i] < a[j]:\n                new.append(a[i])\n                s += 'L'\n                i += 1\n            else:\n                new.append(a[j])\n                s += 'R'\n                j -= 1\n        elif a[i] > new[-1] or a[j] > new[-1]:\n            if a[i] > new[-1]:\n                new.append(a[i])\n                s += 'L'\n                i += 1\n            else:\n                new.append(a[j])\n                s += 'R'\n                j -= 1\n        else:\n            return len(new) - 1, s\n            break\n\nfor j in func(a, i, j, new, s):\n    print(j)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;  \npublic class Main \n{\n    PrintWriter out;\n    FastReader sc;\n    long[] m1= {(long)(1e9+7),998244353};\n    long mod=m1[1];\n    long maxlong=Long.MAX_VALUE;\n    long minlong=Long.MIN_VALUE;\n    StringBuilder sb;\n    /******************************************************************************************\n     *****************************************************************************************/\n\tpublic void sol(){\n\t\tint n=ni();\n\t\tint[] ar=new int[n];\n\t\tfor(int i=0;i<n;i++)ar[i]=ni();\n\t\tint i=0,j=n-1,p=0;\n\t\tsb=new StringBuilder();\n\t\twhile(i<j) {\n\t\t\tif(ar[i]<ar[j]&&ar[i]>p) {\n\t\t\t\tp=ar[i];\n\t\t\t\tsb.append(\"L\");\n\t\t\t\ti++;\n\t\t\t}else if(ar[i]>ar[j]&&ar[j]>p) {\n\t\t\t\tp=ar[j];\n\t\t\t\tsb.append(\"R\");\n\t\t\t\tj--;\n\t\t\t}else if(ar[i]>ar[j]&&ar[i]>p) {\n\t\t\t\tp=ar[i];\n\t\t\t\tsb.append(\"L\");\n\t\t\t\ti++;\n\t\t\t}else if(ar[i]<ar[j]&&ar[j]>p) {\n\t\t\t\tp=ar[j];\n\t\t\t\tsb.append(\"R\");\n\t\t\t\tj--;\n\t\t\t}else if(ar[i]==ar[j]) {\n\t\t\t\tint x=p,y=p,i1=i,j1=j;\n\t\t\t\tStringBuilder l=new StringBuilder(),r=new StringBuilder();\n\t\t\t\twhile(i1<j&&ar[i1]>x) {\n\t\t\t\t\tx=ar[i1];\n\t\t\t\t\tl.append(\"L\");\n\t\t\t\t\ti1++;\n\t\t\t\t}while(i<j1&&ar[j1]>y) {\n\t\t\t\t\ty=ar[j1];\n\t\t\t\t\tr.append(\"R\");\n\t\t\t\t\tj1--;\n\t\t\t\t}if(l.length()>r.length()) {\n\t\t\t\t\tsb.append(l);\n\t\t\t\t\tp=x;i=i1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsb.append(r);\n\t\t\t\t\tp=y;j=j1;\n\t\t\t\t}break;\n\t\t\t}\n\t\t\telse break;\n\t\t}if(ar[i]>p)sb.append(\"L\");\n\t\telse if(ar[j]>p)sb.append(\"R\");\n\t\tpl(sb.length());\n\t\tpl(sb);\n\t}\n    public static void main(String[] args) \n\t{ \n\t    Main g=new Main();\n\t\tg.out=new PrintWriter(System.out);\n\t\tg.sc=new FastReader();\n\t\tint t=1;\n// \t\tt=g.ni();\n\t\twhile(t-->0)\n\t\tg.sol();\n\t\tg.out.flush();\n\t}\n\t\n\t/****************************************************************************************\n     *****************************************************************************************/\n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n \n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n \n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n \n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n \n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n \n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n \n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} public int ni(){\n\t      return sc.nextInt();\n\t}public long nl(){\n\t      return sc.nextLong();\n\t}public double nd(){\n\t      return sc.nextDouble();\n\t}public char[] rl(){\n\t      return sc.nextLine().toCharArray();\n\t}public String rl1(){\n\t      return sc.nextLine();\n\t}\n\tpublic void pl(Object s){\n\t      out.println(s);\n\t}public void ex(){\n\t      out.println();\n\t}\n\tpublic void pr(Object s){\n\t      out.print(s);\n\t}public String next(){\n\t      return sc.next();\n\t}public long abs(long x){\n\t      return Math.abs(x);\n\t}\n\tpublic int abs(int x){\n\t      return Math.abs(x);\n\t}\n\tpublic double abs(double x){\n\t      return Math.abs(x);\n\t}public long min(long x,long y){\n            return (long)Math.min(x,y);\n      }\n      public int min(int x,int y){\n            return (int)Math.min(x,y);\n      }\n      public double min(double x,double y){\n            return Math.min(x,y);\n      }public long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}public long lcm(long a, long b) {\n            return (a / gcd(a, b)) * b;\n      }\n       void sort1(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l,Collections.reverseOrder());\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}\n\t void sort(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort(long[] a) {\n\t\tArrayList<Long> l = new ArrayList<>();\n\t\tfor (long i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort1(long[] a) {\n\t\tArrayList<Long> l = new ArrayList<>();\n\t\tfor (long i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l,Collections.reverseOrder());\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}\n\tvoid sort(double[] a) {\n\t\tArrayList<Double> l = new ArrayList<>();\n\t\tfor (double i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}long pow(long a,long b){\n          if(b==0){\n                return 1;\n          }long p=pow(a,b/2);\n          if(b%2==0) return (p*p)%mod;\n          else return (((p*p)%mod)*a)%mod;\n    }\n\t\n\tint  swap(int a,int b){\n\t      return a;\n\t}long  swap(long a,long b){\n\t      return a;\n\t}double  swap(double a,double b){\n\t      return a;\n\t}\n\tboolean isPowerOfTwo (int x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }boolean isPowerOfTwo (long x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }public long max(long x,long y){\n            return (long)Math.max(x,y);\n      }\n      public int max(int x,int y){\n            return (int)Math.max(x,y);\n      }\n      public double max(double x,double y){\n            return Math.max(x,y);\n      }long sqrt(long x){\n            return (long)Math.sqrt(x);\n      }int sqrt(int x){\n            return (int)Math.sqrt(x);\n      }void input(int[] ar,int n){\n            for(int i=0;i<n;i++)ar[i]=ni();\n      }void input(long[] ar,int n){\n            for(int i=0;i<n;i++)ar[i]=nl();\n      }void fill(int[] ar,int k){\n            Arrays.fill(ar,k);\n      }void yes(){\n            pl(\"YES\");\n      }void no(){\n            pl(\"NO\");\n      }\n      long c2(long n) {\n    \t  return (n*(n-1))/2;\n      }\n    long[] sieve(int n) \n    {\n          long[] k=new long[n+1];\n          boolean[] pr=new boolean[n+1];\n          for(int i=1;i<=n;i++){\n                k[i]=i;\n                pr[i]=true;\n          }for(int i=2;i<=n;i++){\n                if(pr[i]){\n                      for(int j=i+i;j<=n;j+=i){\n                            pr[j]=false;\n                            if(k[j]==j){\n                                  k[j]=i;\n                            }\n                      }\n                }\n          }return k;\n    }\n    int strSmall(int[] arr, int target)  \n    {  \n        int start = 0, end = arr.length-1;  \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;   \n            if (arr[mid] >= target) {  \n                end = mid - 1;  \n            }   \n            else {  \n                ans = mid;  \n                start = mid + 1;  \n            }  \n        }  \n        return ans;  \n    } int strSmall(ArrayList<Integer> arr, int target)  \n    {  \n        int start = 0, end = arr.size()-1;  \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;   \n            if (arr.get(mid) > target) {  \n                start = mid + 1; \n                ans=start;\n            }   \n            else {\n                end = mid - 1;  \n            }  \n        }  \n        return ans;  \n    }long mMultiplication(long a,long b) \n    { \n        long res = 0;    \n        a %= mod; \n  \n        while (b > 0)  \n        {  \n            if ((b & 1) > 0)  \n            { \n                res = (res + a) % mod; \n            }  \n            a = (2 * a) % mod; \n  \n            b >>= 1;  \n        } \n        return res; \n    }long nCr(int n, int r ,int p)\n    {\n \n          if (n<r) \n              return 0;\n        if (r == 0)\n            return 1;\n            long[] fac = new long[n + 1];\n        fac[0] = 1;\n \n        for (int i = 1; i <= n; i++)\n            fac[i] = fac[i - 1] * i %p;\n        return (fac[n] * modInverse(fac[r], p)\n                % p * modInverse(fac[n - r], p)\n                % p)\n            % p;\n    }long power(long x, long y, long p)\n    {\n        long res = 1;\n        x = x % p;\n \n        while (y > 0) {\n            if (y % 2 == 1)\n                res = (res * x) % p;\n            y = y >> 1; \n            x = (x * x) % p;\n        }\n \n        return res;\n    }long modInverse(long n, long p)\n    {\n        return power(n, p - 2, p);\n    }\n    \n    int[][] floydWarshall(int graph[][],int INF,int V)\n    {\n        int dist[][] = new int[V][V];\n        int i, j, k;\n        for (i = 0; i < V; i++)\n            for (j = 0; j < V; j++)\n                dist[i][j] = graph[i][j];\n        for (k = 0; k < V; k++)\n        {\n            for (i = 0; i < V; i++)\n            {\n                for (j = 0; j < V; j++)\n                {\n                    if (dist[i][k] + dist[k][j] < dist[i][j])\n                        dist[i][j] = dist[i][k] + dist[k][j];\n                }\n            }\n        }return dist;\n    }\n    class minque {\n\t\tDeque<Long> q;\n\t\tminque(){\n\t\t\tq=new ArrayDeque<Long>();\n\t\t}public void add(long p){\n\t\t\twhile(!q.isEmpty()&&q.peekLast()>p)q.pollLast();\n\t\t\tq.addLast(p);\n\t\t}public void remove(long p) {\n\t\t\tif(!q.isEmpty()&&q.getFirst()==p)q.removeFirst();\n\t\t}public long min() {\n\t\t\treturn q.getFirst();\n\t\t}\n\t}\n      public static class Pair implements Comparable<Pair> {\n\t\tlong x;\n\t\tlong y;\n \n\t\tpublic Pair(long x, long y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\tpublic int compareTo(Pair other) {\n\t\t\tif (this.x == other.x) {\n\t\t\t\treturn Long.compare(this.y, other.y);\n\t\t\t}\n\t\t\treturn Long.compare(this.x, other.x);\n\t\t}\n      }int find(subset[] subsets, int i)\n      {\n          if (subsets[i].parent != i)\n              subsets[i].parent\n                  = find(subsets, subsets[i].parent);\n          return subsets[i].parent;\n      }void Union(subset[] subsets, int x, int y)\n      {\n          int xroot = find(subsets, x);\n          int yroot = find(subsets, y);\n   \n          if (subsets[xroot].rank < subsets[yroot].rank) {\n          \tsubsets[xroot].parent = yroot;\n          }\n          else if (subsets[yroot].rank < subsets[xroot].rank) {\n          \tsubsets[yroot].parent = xroot;\n          }\n          else {\n              subsets[xroot].parent = yroot;\n              subsets[yroot].rank++;\n          }\n      }class subset\n      {\n          int parent;\n          int rank;\n      }\n\t \n} "
        },
        {
            "language": 3,
            "solution": "#------------------------template--------------------------#\nimport os\nimport sys\nfrom math import *\nfrom collections import *\nfrom fractions import *\nfrom bisect import *\nfrom heapq import*\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nALPHA='abcdefghijklmnopqrstuvwxyz'\nM=10**9+7\nEPS=1e-6\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n\n#-------------------------code---------------------------#\n# vsInput()\n\nn=Int()\na=array()\n\nans=[]\nl=0\nr=n-1\nlast=-1\n\nwhile(l<=r):\n    \n    if(a[l]>last and a[r]>last):\n        if(a[l]<a[r]): \n            ans.append('L')\n            last=a[l]\n            l+=1\n        elif(a[r]<a[l]): \n            ans.append('R')\n            last=a[r]\n            r-=1\n        else: break\n    else:\n        if(a[l]>last):\n            last=a[l]\n            ans.append('L')\n            l+=1\n        elif(a[r]>last):\n            last=a[r]\n            ans.append('R')\n            r-=1\n        else:\n            break\n\n# print(l,r,last)\nol=last\nLlen=0\ni=l\nwhile(i<=r and a[i]>last):\n    Llen+=1\n    last=a[i]\n    i+=1\n\nRlen=0\nlast=ol\ni=r\nwhile(i>=l and a[i]>last):\n    Rlen+=1\n    last=a[i]\n    i-=1\n\n\nif(Rlen>=Llen): temp=['R']*Rlen\nelse: temp=['L']*Llen\n\nprint(len(ans)+len(temp))\nprint(*ans,*temp,sep=\"\")\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                \n\n    \n\n\n\n\n\n\n\n\n\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t = 1;\n  while (t--) {\n    long long n;\n    cin >> n;\n    vector<long long> v(n);\n    for (long long i = 0; i < n; i++) cin >> v[i];\n    set<long long> left;\n    set<long long> right;\n    long long prev = -1;\n    for (long long i = 0; i < n; i++) {\n      if (v[i] > prev) {\n        left.insert(v[i]);\n        prev = v[i];\n      } else\n        break;\n    }\n    prev = -1;\n    for (long long i = n - 1; i >= 0; i--) {\n      if (v[i] > prev) {\n        right.insert(v[i]);\n        prev = v[i];\n      } else\n        break;\n    }\n    string res;\n    while (left.size() != 0 or right.size() != 0) {\n      if (left.size() != 0 and right.size() != 0) {\n        long long l = *left.begin();\n        long long r = *right.begin();\n        if (l < r) {\n          res.push_back('L');\n          left.erase(l);\n        } else if (r < l) {\n          res.push_back('R');\n          right.erase(r);\n        } else if (l == r) {\n          if (left.size() >= right.size()) {\n            for (auto it : left) {\n              res.push_back('L');\n            }\n            break;\n          } else if (right.size() >= left.size()) {\n            for (auto it : right) {\n              res.push_back('R');\n            }\n            break;\n          }\n        }\n      } else if (left.size() != 0 and right.size() == 0) {\n        long long l = *left.begin();\n        res.push_back('L');\n        left.erase(l);\n      } else if (right.size() != 0 and left.size() == 0) {\n        long long r = *right.begin();\n        res.push_back('R');\n        right.erase(r);\n      }\n    }\n    cout << res.length() << endl;\n    cout << res << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C2 {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = scan.nextInt();\n\t\t}\n\t\tint res = 0;\n\t\tStringBuilder path = new StringBuilder();\n\t\tint last = -1;\n\t\tfor (int i = 0, j = n - 1; i <= j;) {\n\t\t\tif (i == j) {\n\t\t\t\tif (last == -1 || last < a[i]) {\n\t\t\t\t\tlast = a[i];\n\t\t\t\t\tpath.append('L');\n\t\t\t\t\tres++;\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (a[i] < a[j]) {\n\t\t\t\tif (last == -1 || last < a[i]) {\n\t\t\t\t\tlast = a[i];\n\t\t\t\t\tpath.append('L');\n\t\t\t\t\tres++;\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\tif (last < a[j]) {\n\t\t\t\t\t\tlast = a[j];\n\t\t\t\t\t\tpath.append('R');\n\t\t\t\t\t\tres++;\n\t\t\t\t\t\tj--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (a[j] < a[i]) {\n\t\t\t\tif (last == -1 || last < a[j]) {\n\t\t\t\t\tlast = a[j];\n\t\t\t\t\tpath.append('R');\n\t\t\t\t\tres++;\n\t\t\t\t\tj--;\n\t\t\t\t} else {\n\t\t\t\t\tif (last < a[i]) {\n\t\t\t\t\t\tlast = a[i];\n\t\t\t\t\t\tpath.append('L');\n\t\t\t\t\t\tres++;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// go to left\n\t\t\t\tStringBuilder leftPath = new StringBuilder();\n\t\t\t\tint leftLast = last;\n\t\t\t\tint l = i;\n\t\t\t\tint r = j;\n\t\t\t\twhile (l <= r) {\n\t\t\t\t\tif (leftLast == -1 || leftLast < a[l]) {\n\t\t\t\t\t\tleftLast = a[l];\n\t\t\t\t\t\tleftPath.append('L');\n\t\t\t\t\t\tl++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// go to right\n\t\t\t\tStringBuilder rightPath = new StringBuilder();\n\t\t\t\tint rightLast = last;\n\t\t\t\tl = i;\n\t\t\t\tr = j;\n\t\t\t\twhile (l <= r) {\n\t\t\t\t\tif (rightLast == -1 || rightLast < a[r]) {\n\t\t\t\t\t\trightLast = a[r];\n\t\t\t\t\t\trightPath.append('R');\n\t\t\t\t\t\tr--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (leftPath.length() >= rightPath.length()) {\n\t\t\t\t\tpath.append(leftPath);\n\t\t\t\t\tres += leftPath.length();\n\t\t\t\t} else {\n\t\t\t\t\tpath.append(rightPath);\n\t\t\t\t\tres += rightPath.length();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(res + \"\\n\" + path);\n\t\tscan.close();\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class tr1 {\n\tstatic PrintWriter out;\n\tstatic StringBuilder sb;\n\tstatic int[][] memo;\n\tstatic int n, r;\n\tstatic int[] a;\n\tstatic TreeSet<Integer> ones;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tn = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tQueue<Character> q = new LinkedList<>();\n\t\tQueue<Character> q2 = new LinkedList<>();\n\t\tQueue<Character> q3 = new LinkedList<>();\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = sc.nextInt();\n\t\tint i = 0;\n\t\tint j = n - 1;\n\t\tint last = 0;\n\t\twhile (i <= j) {\n\t\t\tif (a[i] <= last && a[j] <= last)\n\t\t\t\tbreak;\n\t\t\telse if (a[i] < a[j]) {\n\t\t\t\tif(a[i]>last) {\n\t\t\t\tq.add('L');\n\t\t\t\tlast = a[i];\n\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse if(a[j]>last) {\n\t\t\t\t\tq.add('R');\n\t\t\t\t\tlast = a[j];\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (a[i] == a[j] && a[i] > last && i==j) {\n\t\t\t\tq.add('L');\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse if (a[j] < a[i]) {\n\t\t\t\tif(a[j]>last) {\n\t\t\t\tq.add('R');\n\t\t\t\tlast = a[j];\n\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\telse if(a[i]>last) {\n\t\t\t\t\tq.add('L');\n\t\t\t\t\tlast = a[i];\n\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\telse if(a[i]==a[j] && a[i]>last) {\n\t\t\t\tint i2=i;\n\t\t\t\tint j2=j;\n\t\t\t\tint last2=last;\n\t\t\t\tint last3=last;\n\t\t\t//\tSystem.out.println(\"I\");\n\t\t\t\twhile(a[i2]>last2 && i2<j) {\n\t\t\t\t\tq2.add('L');\n\t\t\t\t\tlast2=a[i2];\n\t\t\t\t\ti2++;\n\t\t\t\t}\n\t\t\t\twhile(a[j2]>last3 && j2>i) {\n\t\t\t\t\tq3.add('R');\n\t\t\t\t\tlast3=a[j2];\n\t\t\t\t\tj2--;\n\t\t\t\t}\n\t\t\t//\tout.println(q2+\" \"+q3);\n\t\t\t\tif(q2.size()>q3.size()) {\n\t\t\t\t\tfor(char t:q2)\n\t\t\t\t\t\tq.add(t);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor(char t:q3)\n\t\t\t\t\t\tq.add(t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t\tout.println(q.size());\n\t\tfor(char t:q)\n\t\t\tout.print(t);\n\t\tout.flush();\n\t}\n\n\tstatic int gcd(int a, int b) {\n\t\tif (b == 0) {\n\t\t\treturn a;\n\t\t}\n\t\treturn gcd(b, a % b);\n\t}\n\n\tpublic static class pair {\n\t\tint num;\n\t\tint idx;\n\n\t\tpair(int n, int i) {\n\t\t\tnum = n;\n\t\t\tidx = i;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn num + \" \" + idx;\n\t\t}\n\t}\n\n\tstatic class unionfind {\n\t\tint[] p;\n\t\tint[] size;\n\n\t\tunionfind(int n) {\n\t\t\tp = new int[n];\n\t\t\tsize = new int[n];\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tp[i] = i;\n\t\t\t}\n\t\t\tArrays.fill(size, 1);\n\t\t}\n\n\t\tint findSet(int v) {\n\t\t\tif (v == p[v])\n\t\t\t\treturn v;\n\t\t\treturn p[v] = findSet(p[v]);\n\t\t}\n\n\t\tboolean sameSet(int a, int b) {\n\t\t\ta = findSet(a);\n\t\t\tb = findSet(b);\n\t\t\tif (a == b)\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\t\tint max() {\n\t\t\tint max = 0;\n\t\t\tfor (int i = 0; i < size.length; i++)\n\t\t\t\tif (size[i] > max)\n\t\t\t\t\tmax = size[i];\n\t\t\treturn max;\n\t\t}\n\n\t\tvoid combine(int a, int b) {\n\t\t\ta = findSet(a);\n\t\t\tb = findSet(b);\n\t\t\tif (a == b)\n\t\t\t\treturn;\n\t\t\tif (size[a] > size[b]) {\n\t\t\t\tp[b] = a;\n\t\t\t\tsize[a] += size[b];\n\n\t\t\t} else {\n\t\t\t\tp[a] = b;\n\t\t\t\tsize[b] += size[a];\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic Long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 5;\nint n;\nint a[maxn];\nint mx = 0;\nstring ans = \"\";\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int i = 0, j = n - 1;\n  while (a[i] != a[j]) {\n    if (a[i] < a[j]) {\n      if (a[i] <= mx) break;\n      ans += 'L';\n      mx = max(mx, a[i]);\n      i++;\n    } else {\n      if (a[j] <= mx) break;\n      ans += 'R';\n      mx = max(mx, a[j]);\n      j--;\n    }\n  }\n  int res1 = 0;\n  int res2 = 0;\n  int mx2 = mx;\n  while (a[i] > mx) {\n    mx = max(mx, a[i]);\n    i++;\n    res1++;\n  }\n  while (a[j] > mx2) {\n    mx2 = max(mx2, a[j]);\n    res2++;\n    j--;\n  }\n  if (res2 > res1)\n    for (int i = 0; i < res2; i++) ans += 'R';\n  else\n    for (int i = 0; i < res1; i++) ans += 'L';\n  cout << ans.size() << '\\n' << ans;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\nimport jdk.nashorn.internal.ir.BreakableNode;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner a = new Scanner(System.in);\n    int n = a.nextInt();\n    int[] data = new int[n];\n    for(int i=0; i<n; i++){\n        data[i] = a.nextInt();\n    }\n    int r = n-1;\n    int l = 0;\n    StringBuilder sb = new StringBuilder();\n\n    int currlast = 0;\n    int maxnum =0;\n    while(maxnum<n){\n        if(data[l]<=currlast){\n            while(data[r]>currlast){\n                currlast = data[r];\n                sb.append('R');\n                maxnum++;\n                r--;\n            }\n            break;\n        }else if(data[r]<=currlast){\n            while(data[l]>currlast){\n                currlast = data[l];\n                sb.append('L');\n                maxnum++;\n                l++;\n            }\n            break;\n        }else{\n            if(data[l]<data[r]){\n                currlast = data[l];\n                sb.append('L');\n                l++;\n            }else if(data[l]>data[r]){\n                currlast = data[r];\n                sb.append('R');\n                r--;\n            }else if(l==r){\n                sb.append('L');\n                maxnum++;\n                break;\n            }else{\n                int leftmax = 0;\n                int rightmax = 0;\n                int csave = currlast;\n                while(data[r]>currlast){\n                    currlast = data[r];\n                    rightmax++;\n                    r--;\n                }\n                currlast = csave;\n                while(data[l]>currlast){\n                    currlast = data[l];\n                    leftmax++;\n                    l++;\n                }\n                if(leftmax>rightmax){\n                    maxnum+=leftmax;\n                    for(int i=0; i<leftmax; i++){\n                        sb.append(\"L\");\n                    }\n                }else{\n                    maxnum+=rightmax;\n                    for(int i=0; i<rightmax; i++){\n                        sb.append(\"R\");\n                    }\n                }\n                break;\n            }\n            maxnum++;\n        }\n    }\n    String res = sb.toString();\n    System.out.println(maxnum);\n    System.out.println(res);\n  }\n}"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\n\nimport java.util.*;\nimport java.util.Map.Entry;\n\nimport javax.swing.text.InternationalFormatter;\n\nimport java.math.*;\n\npublic class template {\n\n\tpublic static PrintWriter out;\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tReader scn = new Reader();\n\n\t\tint n = scn.nextInt();\n\t\tint[] a = scn.nextIntArray(n);\n\n\t\tint i = 0, j = a.length - 1;\n\n\t\tint prev = Integer.MIN_VALUE;\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\twhile (i <= j) {\n\n\t\t\tif (a[i] > prev && a[j] > prev) {\n\n\t\t\t\tif (a[i] < a[j]) {\n\t\t\t\t\tsb.append(\"L\");\n\t\t\t\t\tprev = a[i];\n\t\t\t\t\ti++;\n\n\t\t\t\t}\n\n\t\t\t\telse if (a[j] < a[i]) {\n\n\t\t\t\t\tsb.append(\"R\");\n\t\t\t\t\tprev = a[j];\n\t\t\t\t\tj--;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tStringBuilder l = getl(a, i, prev);\n\t\t\t\t\tStringBuilder r = getr(a, j, prev);\n\t\t\t\t\tsb.append(l.length() > r.length() ? l : r);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (a[i] > prev) {\n\t\t\t\tsb.append(\"L\");\n\t\t\t\tprev = a[i];\n\t\t\t\ti++;\n\n\t\t\t}\n\n\t\t\telse if (a[j] > prev) {\n\t\t\t\tsb.append(\"R\");\n\t\t\t\tprev = a[j];\n\t\t\t\tj--;\n\n\t\t\t}\n\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\n\t\tSystem.out.println(sb.length());\n\t\tSystem.out.println(sb);\n\n\t}\n\n\tprivate static StringBuilder getr(int[] a, int idx, int prev) {\n\t\tStringBuilder s = new StringBuilder();\n\t\tint i = idx;\n\t\twhile (i >= 0) {\n\n\t\t\tif (a[i] > prev) {\n\t\t\t\ts.append(\"R\");\n\t\t\t\tprev = a[i];\n\t\t\t\ti--;\n\t\t\t}\n\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\treturn s;\n\t}\n\n\tprivate static StringBuilder getl(int[] a, int idx, int prev) {\n\t\tStringBuilder s = new StringBuilder();\n\t\tint i = idx;\n\t\twhile (i < a.length) {\n\n\t\t\tif (a[i] > prev) {\n\t\t\t\ts.append(\"L\");\n\t\t\t\tprev = a[i];\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\treturn s;\n\t}\n\n\t// _________________________TEMPLATE_____________________________________________________________\n\n\t// private static int gcd(int a, int b) {\n\t// if(a== 0)\n\t// return b;\n\t//\n\t// return gcd(b%a,a);\n\t// }\n\n\t// static class comp implements Comparator<pair> {\n\t//\n\t// @Override\n\t// public int compare(pair o1, pair o2) {\n\t// return o2.b - o1.b;\n\t// }\n\t//\n\t// }\n\n\tstatic class pair implements Comparable<pair> {\n\t\tint min;\n\t\tint max;\n\t\tint ans;\n\n\t\tpair(int a, int b) {\n\t\t\tmin = a;\n\t\t\tmax = b;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(pair o) {\n\n\t\t\treturn (int) (this.min - o.max);\n\n\t\t}\n\t}\n\n\tpublic static class Reader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\n\t\tpublic Reader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic Reader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[100000 + 1]; // line length\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic int[][] nextInt2DArray(int m, int n) throws IOException {\n\t\t\tint[][] arr = new int[m][n];\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\t\tarr[i][j] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Washoum\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        inputClass in = new inputClass(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        C2IncreasingSubsequenceHardVersion solver = new C2IncreasingSubsequenceHardVersion();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class C2IncreasingSubsequenceHardVersion {\n        public void solve(int testNumber, inputClass sc, PrintWriter out) {\n            int n = sc.nextInt();\n            ArrayList<Integer> tab = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                tab.add(sc.nextInt());\n            }\n            StringBuilder ans = new StringBuilder();\n            int l = 0;\n            int r = n - 1;\n            int act = 0;\n            if (tab.get(r).intValue() == tab.get(l)) {\n                int best;\n                int a = 1;\n                for (int i = 0; i < n - 1; i++) {\n                    if (tab.get(i) < tab.get(i + 1)) {\n                        a++;\n                    } else {\n                        break;\n                    }\n                }\n                best = a;\n                a = 1;\n                for (int i = n - 1; i >= 1; i--) {\n                    if (tab.get(i) < tab.get(i - 1)) {\n                        a++;\n                    } else {\n                        break;\n                    }\n                }\n                if (a > best) {\n                    out.println(a);\n                    for (int i = 0; i < a; i++) {\n                        out.print('R');\n                    }\n                } else {\n                    out.println(best);\n                    for (int i = 0; i < best; i++) {\n                        out.print('L');\n                    }\n                }\n                return;\n            } else if (tab.get(l) > tab.get(r)) {\n                ans.append('R');\n                act = tab.get(r);\n                r--;\n            } else {\n                ans.append('L');\n                act = tab.get(l);\n                l++;\n            }\n\n            boolean mezel = true;\n            while (mezel && r - l >= 0) {\n                if (tab.get(l) <= act && tab.get(r) <= act) {\n                    mezel = false;\n                } else if (tab.get(l) > act && tab.get(r) > act) {\n                    if (tab.get(l).intValue() == tab.get(r)) {\n                        int best = 0;\n                        int a = 1;\n                        for (int i = l; i <= r - 1; i++) {\n                            if (tab.get(i) < tab.get(i + 1)) {\n                                a++;\n                            } else {\n                                break;\n                            }\n                        }\n                        best = a;\n                        a = 1;\n                        for (int i = r; i >= l + 1; i--) {\n                            if (tab.get(i) < tab.get(i - 1)) {\n                                a++;\n                            } else {\n                                break;\n                            }\n                        }\n                        if (best == 0 && a == 0) {\n                            best = 1;\n                        }\n                        if (a > best) {\n                            for (int i = 0; i < a; i++) {\n                                ans.append('R');\n                            }\n                        } else {\n                            for (int i = 0; i < best; i++) {\n                                ans.append('L');\n                            }\n                        }\n                        break;\n                    } else if (tab.get(l) < tab.get(r)) {\n                        ans.append('L');\n                        act = tab.get(l);\n                        l++;\n                    } else {\n                        ans.append('R');\n                        act = tab.get(r);\n                        r--;\n                    }\n                } else if (tab.get(l) > act) {\n                    ans.append('L');\n                    act = tab.get(l);\n                    l++;\n                } else {\n                    ans.append('R');\n                    act = tab.get(r);\n                    r--;\n                }\n            }\n\n            out.println(ans.length());\n            out.println(ans);\n\n        }\n\n    }\n\n    static class inputClass {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public inputClass(InputStream in) {\n\n            br = new BufferedReader(new InputStreamReader(in));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n    static boolean use_n_tests = false;\n    static int stack_size = 1 << 27;\n\n    void solve(FastScanner in, PrintWriter out, int testNumber) {\n        int n = in.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < a.length; i++) {\n            a[i] = in.nextInt();\n        }\n\n        int l = 0;\n        int r = n - 1;\n        List<Integer> anss = new ArrayList<>();\n        int prev = -1;\n        while (l <= r) {\n            if (a[l] > prev && a[r] > prev) {\n                if (a[l] < a[r]) {\n                    prev = a[l];\n                    anss.add(1);\n                    l++;\n                } else if (a[r] < a[l]) {\n                    prev = a[r];\n                    anss.add(0);\n                    r--;\n                } else {\n                    int r1 = r;\n                    int cr = 0;\n                    int prev1 = prev;\n                    while (r1 >= 0 && prev1 < a[r1]) {\n                        prev1 = a[r1];\n                        r1--;\n                        cr++;\n                    }\n                    int cl = 0;\n                    int l1 = l;\n                    prev1 = prev;\n                    while (l1 < n && prev1 < a[l1]) {\n                        prev1 = a[l1];\n                        l1++;\n                        cl++;\n                    }\n                    if (cr > cl) {\n                        for (int i = 0; i < cr; i++) {\n                            anss.add(0);\n                        }\n                    } else {\n                        for (int i = 0; i < cl; i++) {\n                            anss.add(1);\n                        }\n                    }\n                    break;\n                }\n            } else if (a[l] > prev) {\n                while (l < a.length && a[l] > prev) {\n                    anss.add(1);\n                    prev = a[l];\n                    l++;\n                }\n                break;\n            } else if (a[r] > prev) {\n                while (r >= 0 && a[r] > prev) {\n                    anss.add(0);\n                    prev = a[r];\n                    r--;\n                }\n                break;\n            }\n        }\n        out.println(anss.size());\n        for (int x : anss) {\n            out.print(x == 1 ? 'L' : 'R');\n        }\n    }\n\n    // ****************************** template code ***********\n\n    class Coeff {\n        long mod;\n        long[][] C;\n        long[] fact;\n        boolean cycleWay = false;\n\n        Coeff(int n, long mod) {\n            this.mod = mod;\n            fact = new long[n + 1];\n            fact[0] = 1;\n            for (int i = 1; i <= n; i++) {\n                fact[i] = i;\n                fact[i] %= mod;\n                fact[i] *= fact[i - 1];\n                fact[i] %= mod;\n            }\n        }\n\n        Coeff(int n, int m, long mod) {\n            // n > m\n            cycleWay = true;\n            this.mod = mod;\n            C = new long[n + 1][m + 1];\n            for (int i = 0; i <= n; i++) {\n                for (int j = 0; j <= Math.min(i, m); j++) {\n                    if (j == 0 || j == i) {\n                        C[i][j] = 1;\n                    } else {\n                        C[i][j] = C[i - 1][j - 1] + C[i - 1][j];\n                        C[i][j] %= mod;\n                    }\n                }\n            }\n        }\n\n        public long C(int n, int m) {\n            if (cycleWay) {\n                return C[n][m];\n            }\n            return fC(n, m);\n        }\n\n        private long fC(int n, int m) {\n            return (fact[n] * inv(fact[n - m] * fact[m] % mod)) % mod;\n        }\n\n        private long inv(long r) {\n            if (r == 1)\n                return 1;\n            return ((mod - mod / r) * inv(mod % r)) % mod;\n        }\n    }\n\n    class Pair {\n        int first;\n        int second;\n\n        public int getFirst() {\n            return first;\n        }\n\n        public int getSecond() {\n            return second;\n        }\n    }\n\n    class MultisetTree<T> {\n        int size = 0;\n\n        TreeMap<T, Integer> mp = new TreeMap<>();\n\n        void add(T x) {\n            mp.merge(x, 1, Integer::sum);\n            size++;\n        }\n\n        void remove(T x) {\n            if (mp.containsKey(x)) {\n                mp.merge(x, -1, Integer::sum);\n                if (mp.get(x) == 0) {\n                    mp.remove(x);\n                }\n                size--;\n            }\n        }\n\n        T greatest() {\n            return mp.lastKey();\n        }\n\n        int size() {\n            return size;\n        }\n\n        int diffSize() {\n            return mp.size();\n        }\n    }\n\n    class Multiset<T> {\n        int size = 0;\n\n        Map<T, Integer> mp = new HashMap<>();\n\n        void add(T x) {\n            mp.merge(x, 1, Integer::sum);\n            size++;\n        }\n\n        void remove(T x) {\n            if (mp.containsKey(x)) {\n                mp.merge(x, -1, Integer::sum);\n                if (mp.get(x) == 0) {\n                    mp.remove(x);\n                }\n                size--;\n            }\n        }\n\n        int size() {\n            return size;\n        }\n\n        int diffSize() {\n            return mp.size();\n        }\n    }\n\n    static class Range {\n        int l, r;\n        int id;\n\n        public int getL() {\n            return l;\n        }\n\n        public int getR() {\n            return r;\n        }\n\n        public Range(int l, int r, int id) {\n            this.l = l;\n            this.r = r;\n            this.id = id;\n        }\n    }\n\n    static class Array {\n        static Range[] readRanges(int n, FastScanner in) {\n            Range[] result = new Range[n];\n            for (int i = 0; i < n; i++) {\n                result[i] = new Range(in.nextInt(), in.nextInt(), i);\n            }\n            return result;\n        }\n\n        static public Integer[] read(int n, FastScanner in) {\n            Integer[] out = new Integer[n];\n            for (int i = 0; i < out.length; i++) {\n                out[i] = in.nextInt();\n            }\n            return out;\n        }\n\n        static public int[] readint(int n, FastScanner in) {\n            int[] out = new int[n];\n            for (int i = 0; i < out.length; i++) {\n                out[i] = in.nextInt();\n            }\n            return out;\n        }\n    }\n\n    class Graph {\n        List<List<Integer>> create(int n) {\n            List<List<Integer>> graph = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                graph.add(new ArrayList<>());\n            }\n            return graph;\n        }\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(InputStream io) {\n            br = new BufferedReader(new InputStreamReader(io));\n        }\n\n        public String line() {\n            String result = \"\";\n            try {\n                result = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return result;\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n    void run_t_tests() {\n        int t = in.nextInt();\n        int i = 0;\n        while (t-- > 0) {\n            solve(in, out, i++);\n        }\n    }\n\n    void run_one() {\n        solve(in, out, -1);\n    }\n\n    @Override\n    public void run() {\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n        if (use_n_tests) {\n            run_t_tests();\n        } else {\n            run_one();\n        }\n        out.close();\n    }\n\n    static FastScanner in;\n    static PrintWriter out;\n\n    public static void main(String[] args) throws InterruptedException {\n        Thread thread = new Thread(null, new Main(), \"\", stack_size);\n        thread.start();\n        thread.join();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9 + 7;\nint a[200005];\nint ans[200005];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  int l = 1, r = n;\n  int tmp = 0;\n  int vew = 0;\n  while (max(a[l], a[r]) > tmp && l <= r) {\n    if (a[l] < a[r] && a[l] > tmp) {\n      ans[vew++] = 0;\n      tmp = a[l];\n      l++;\n      continue;\n    }\n    if (a[l] > a[r] && a[r] > tmp) {\n      ans[vew++] = 1;\n      tmp = a[r];\n      r--;\n      continue;\n    }\n    if (a[l] < a[r] && a[l] <= tmp) {\n      ans[vew++] = 1;\n      tmp = a[r];\n      r--;\n      continue;\n    }\n    if (a[l] > a[r] && a[r] <= tmp) {\n      ans[vew++] = 0;\n      tmp = a[l];\n      l++;\n      continue;\n    }\n    if (a[l] == a[r]) {\n      int num1 = 0;\n      int num2 = 0;\n      for (int i = l; l <= r; i++) {\n        if (a[i] > a[i - 1]) {\n          num1++;\n        } else\n          break;\n      }\n      for (int i = r; i >= l; i--) {\n        if (a[i] > a[i + 1]) {\n          num2++;\n        } else\n          break;\n      }\n      if (num1 > num2) {\n        while (num1--) {\n          ans[vew++] = 0;\n        }\n      } else {\n        while (num2--) {\n          ans[vew++] = 1;\n        }\n      }\n      break;\n    }\n    if (l == r) {\n      if (a[l] > tmp) {\n        ans[vew++] = 0;\n        tmp = a[l];\n        break;\n      } else {\n        break;\n      }\n    }\n  }\n  cout << vew << endl;\n  for (int i = 0; i < vew; i++) {\n    if (ans[i] == 0) {\n      cout << \"L\";\n    } else {\n      cout << \"R\";\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "/**\n * @author cplayer on 2018/6/23.\n * @version 1.0\n */\n\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        try {\n            InputReader in;\n            PrintWriter out;\n            boolean useOutput = false;\n            if (System.getProperty(\"ONLINE_JUDGE\") == null) useOutput = true;\n            if (useOutput) {\n                FileInputStream fin = new FileInputStream(new File(\"src/data.in\"));\n                in = new InputReader(fin);\n                FileOutputStream fout = new FileOutputStream(new File(\"src/data.out\"));\n                out = new PrintWriter(fout);\n            } else {\n                InputStream inputStream = System.in;\n                in = new InputReader(inputStream);\n                OutputStream outputStream = System.out;\n                out = new PrintWriter(outputStream);\n            }\n            Solver solver = new Solver(in, out);\n            solver.solve();\n            out.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    static class Solver {\n\n        private InputReader cin;\n        private PrintWriter cout;\n\n        Solver (InputReader cin, PrintWriter cout) {\n            this.cin = cin; this.cout = cout;\n        }\n\n        public void solve () {\n            try {\n                int n = cin.nextInt();\n                int arr[] = new int[n];\n                int left, right;\n                for (int i = 0; i < n; ++i) {\n                    arr[i] = cin.nextInt();\n                }\n                List<Integer> steps = new LinkedList<>();\n                int curElement = 0;\n                left = 0; right = n - 1;\n                while (left <= right) {\n                    int leftEle = arr[left], rightEle = arr[right];\n                    if (curElement < leftEle && curElement < rightEle) {\n                        if (leftEle == rightEle) {\n                            int leftLen = 1, rightLen = 1;\n                            while (left + leftLen <= right && arr[left + leftLen] > arr[left + leftLen - 1]) leftLen++;\n                            while (right - rightLen >= left && arr[right - rightLen] > arr[right - rightLen + 1]) rightLen++;\n                            if (leftLen > rightLen) {\n                                steps.add(0);\n                                curElement = arr[left];\n                                left++;\n                            } else {\n                                curElement = arr[right];\n                                steps.add(1);\n                                right--;\n                            }\n                        } else if (leftEle < rightEle) {\n                            steps.add(0);\n                            curElement = arr[left];\n                            left++;\n                        } else {\n                            curElement = arr[right];\n                            steps.add(1);\n                            right--;\n                        }\n                    } else if (curElement >= leftEle && curElement < rightEle) {\n                        steps.add(1);\n                        curElement = arr[right];\n                        right--;\n                    } else if (curElement < leftEle && curElement >= rightEle) {\n                        steps.add(0);\n                        curElement = arr[left];\n                        left++;\n                    } else {\n                        break;\n                    }\n                }\n                cout.println(steps.size());\n                StringBuilder sb = new StringBuilder();\n                for (int i : steps) {\n                    char curstep = i == 0 ? 'L' : 'R';\n                    sb.append(curstep);\n                }\n                cout.println(sb.toString());\n            } catch (RuntimeException e) {\n                e.printStackTrace();\n                return;\n            } catch (Exception e) {\n                e.printStackTrace();\n                return;\n            }\n\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream));\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n\n}"
        },
        {
            "language": 1,
            "solution": "import sys,math\nfrom fractions import gcd\nfrom bisect import bisect_left, bisect\nfrom collections import defaultdict\nfrom io import BytesIO\nsys.stdin = BytesIO(sys.stdin.read())\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nn = int(input())\narr = [int(_) for _ in input().split()]\nst = []\nst.append([0,n-1,[],-1])\nbst = 0\nr = []\nwhile len(st):\n    #print(st,r)\n    i,j,res,m = st.pop()\n    while i < j:\n        if (arr[i] > m and arr[j] > arr[i]) or arr[i] > m >= arr[j]:\n            m = arr[i]\n            i += 1\n            res.append('L')\n        elif (arr[i] > arr[j] and arr[j] > m) or arr[j] > m >= arr[i]:\n            m = arr[j]\n            j -= 1\n            res.append('R')\n        elif arr[i] <= m and arr[j] <= m:\n            if bst < len(res):\n                bst = len(res)\n                r = res[:]\n            break\n        elif arr[i] == arr[j] and arr[i] > m:\n            st.append([i+1,j,res[:] + ['L'], arr[i]])\n            st.append([i,j-1,res[:] + ['R'], arr[i]])\n            break\n    else:\n        if arr[i] > m:\n            res.append('L')\n        bst = len(res)\n        r = res[:]\nprint(bst)\nprint(''.join(r))\n\n"
        },
        {
            "language": 1,
            "solution": "# DON'T USE PYTHON FOR RECURSION\n# TRY PYPY\nimport math\nimport operator\nimport sys\nfrom collections import Counter, defaultdict\nfrom math import ceil, floor, pi, sin, sqrt\nfrom sys import exit, stdin, stdout\n\n\ndef main():\n    # stdin = open('.in')\n    n = int(stdin.readline())\n    a = map(int, stdin.readline().strip().split(' '))\n    l = 0\n    r = len(a) - 1\n    last = 0\n    ans = []\n    while l <= r:\n        if a[l] > last and (a[r] <= last or a[r] > a[l]):\n            last = a[l]\n            ans.append('L')\n            l += 1\n        elif a[r] > last:\n            last = a[r]\n            ans.append('R')\n            r -= 1\n        else:\n            break\n\n    ans0 = ans\n\n    l = 0\n    r = len(a) - 1\n    last = 0\n    ans = []\n    while l <= r:\n        if a[l] > last and (a[r] <= last or a[r] >= a[l]):\n            last = a[l]\n            ans.append('L')\n            l += 1\n        elif a[r] > last:\n            last = a[r]\n            ans.append('R')\n            r -= 1\n        else:\n            break\n\n    if len(ans) < len(ans0):\n        ans = ans0\n    print len(ans)\n    print ''.join(ans)\n\n\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring getfrom(long long int start, long long int a[], long long int i,\n               long long int j) {\n  long long int last = start;\n  string ans = \"\";\n  while (i <= j) {\n    if (a[i] == a[j] && i != j) {\n      if (a[i] <= last) {\n        return ans;\n      }\n      last = a[i];\n      string l = getfrom(a[i], a, i + 1, j);\n      string r = getfrom(a[i], a, i, j - 1);\n      if (l.size() > r.size()) {\n        i++;\n        ans += \"L\";\n        ans += l;\n      } else {\n        j--;\n        ans += \"R\";\n        ans += r;\n      }\n      return ans;\n    } else if (a[i] < a[j]) {\n      if (last < a[i]) {\n        last = a[i];\n        i++;\n        ans += \"L\";\n      } else if (last < a[j]) {\n        last = a[j];\n        j--;\n        ans += \"R\";\n      } else {\n        break;\n      }\n    } else {\n      if (last < a[j]) {\n        last = a[j];\n        j--;\n        ans += \"R\";\n      } else if (last < a[i]) {\n        last = a[i];\n        i++;\n        ans += \"L\";\n      } else {\n        break;\n      }\n    }\n  }\n  return ans;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n;\n  cin >> n;\n  long long int a[n];\n  for (long long int i = 0; i < n; i++) cin >> a[i];\n  string ans = getfrom(0, a, 0, n - 1);\n  cout << ans.size() << \"\\n\";\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long mod = 1e9 + 7;\nbool comp(long long a, long long b) { return a < b; }\nlong long fpow(long long a, long long b) {\n  long long res = 1;\n  while (b) {\n    if (b & 1) res = (res * a);\n    a = (a * a);\n    b >>= 1;\n  }\n  return res;\n}\nlong long minm(long long a, long long b) {\n  if (a < b) return a;\n  return b;\n}\nlong long maxm(long long a, long long b) {\n  if (a > b) {\n    return a;\n  } else\n    return b;\n}\nvoid solve() {\n  int n, i, j;\n  cin >> n;\n  int a[n];\n  for (i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  if (n == 2) {\n    if (a[0] < a[1]) {\n      cout << \"2\\nLR\";\n    } else if (a[0] > a[1]) {\n      cout << \"2\\nRL\";\n    } else {\n      cout << \"1\\nL\";\n    }\n    return;\n  }\n  queue<int> q;\n  q.push(-1);\n  vector<char> ans;\n  i = 0;\n  j = n - 1;\n  while (i <= j) {\n    if (i == j) {\n      if (a[i] <= q.back()) {\n        break;\n      }\n      ans.push_back('L');\n      q.push(a[i]);\n      break;\n    }\n    if (a[i] == a[j]) {\n      int xx = q.back();\n      if (xx > a[i]) {\n        break;\n      }\n      q.push(a[i]);\n      int tl = i + 1;\n      int s1 = 0, s2 = 0;\n      bool m1 = 0, m2 = 0;\n      while (tl < j && a[tl] == a[i]) {\n        ++tl;\n      }\n      int tr = j - 1;\n      while (tr > i && a[tr] == a[j]) {\n        --tr;\n      }\n      if (tl >= i + 2 && tr <= j - 2) {\n        ans.push_back('L');\n        q.push(a[i]);\n        break;\n      }\n      if (tl < i + 2) {\n        m1 = 1;\n      }\n      if (tr > j - 2) {\n        m2 = 1;\n      }\n      while (tl < j) {\n        if (a[tl] > a[tl - 1]) {\n          s1++;\n        } else\n          break;\n        ++tl;\n      }\n      while (tr > i) {\n        if (a[tr] > a[tr + 1]) {\n          ++s2;\n        } else\n          break;\n        --tr;\n      }\n      if (m1 && m2) {\n        if (s1 > s2) {\n          ans.push_back('L');\n          q.push(a[i]);\n          ++i;\n        } else {\n          ans.push_back('R');\n          q.push(a[j]);\n          --j;\n        }\n      } else if (m1) {\n        ans.push_back('L');\n        q.push(a[i]);\n        ++i;\n      } else if (m2) {\n        ans.push_back('R');\n        q.push(a[j]);\n        --j;\n      }\n    } else {\n      int curr = q.back();\n      if (a[i] <= curr && a[j] <= curr) {\n        break;\n      }\n      if (a[i] > curr && a[j] > curr) {\n        if (a[i] < a[j]) {\n          ans.push_back('L');\n          q.push(a[i]);\n          ++i;\n        } else {\n          ans.push_back('R');\n          q.push(a[j]);\n          --j;\n        }\n      } else if (a[i] > curr) {\n        ans.push_back('L');\n        q.push(a[i]);\n        ++i;\n      } else if (a[j] > curr) {\n        ans.push_back('R');\n        q.push(a[j]);\n        --j;\n      }\n    }\n  }\n  cout << ans.size() << '\\n';\n  for (auto &x : ans) cout << x;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = (int)1e9 + 7;\nconst int MAX = 1e6;\nint arr[1000000];\nint main() {\n  string ans, ans2;\n  int st, en, i, last, a;\n  cin >> a;\n  for (i = 0; i < a; i++) cin >> arr[i];\n  st = 0, en = a - 1, last = 0;\n  while (st <= en) {\n    if (arr[st] > last && arr[en] > last) {\n      if (arr[st] < arr[en]) {\n        last = arr[st];\n        st++;\n        ans += 'L';\n      } else {\n        last = arr[en];\n        en--;\n        ans += 'R';\n      }\n    } else if (arr[st] > last) {\n      last = arr[st];\n      st++;\n      ans += 'L';\n    } else if (arr[en] > last) {\n      last = arr[en];\n      en--;\n      ans += 'R';\n    } else\n      break;\n  }\n  st = 0, en = a - 1, last = 0;\n  while (st <= en) {\n    if (arr[st] > last && arr[en] > last) {\n      if (arr[en] < arr[st]) {\n        last = arr[en];\n        en--;\n        ans2 += 'R';\n      } else {\n        last = arr[st];\n        st++;\n        ans2 += 'L';\n      }\n    } else if (arr[st] > last) {\n      last = arr[st];\n      st++;\n      ans2 += 'L';\n    } else if (arr[en] > last) {\n      last = arr[en];\n      en--;\n      ans2 += 'R';\n    } else\n      break;\n  }\n  if (ans.length() > ans2.length()) {\n    cout << ans.length() << endl;\n    cout << ans << endl;\n  } else {\n    cout << ans2.length() << endl;\n    cout << ans2 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint v[200005];\nstring solve(int i, int j, int last) {\n  if (i == j && v[i] > last) {\n    return \"L\";\n  } else if (v[i] <= last && v[j] <= last) {\n    return \"\";\n  } else {\n    if (v[i] == v[j]) {\n      string l = solve(i + 1, j, v[i]);\n      string r = solve(i, j - 1, v[j]);\n      if (l.size() >= r.size()) {\n        return \"L\" + l;\n      } else {\n        return \"R\" + r;\n      }\n    } else {\n      if (v[i] > last && (v[i] < v[j] || v[j] <= last)) {\n        return \"L\" + solve(i + 1, j, v[i]);\n      } else {\n        return \"R\" + solve(i, j - 1, v[j]);\n      }\n    }\n  }\n}\nint main(int argc, char const *argv[]) {\n  cout.sync_with_stdio(0);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> v[i];\n  string res = solve(0, n - 1, 0);\n  cout << res.size() << endl;\n  cout << res << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\nm=0\nsol=''\nwhile(len(a)>0):\n    if(a[0]>m and a[-1]>m and a[0]!=a[-1]):\n        if(a[0]<a[-1]):\n            sol+='L'\n            m=a[0]\n            a.pop(0)\n            \n        else:\n            sol+='R'\n            \n            \n            m=a[-1]\n            a.pop(-1)\n    elif(a[0]>m and a[-1]>m and a[0]==a[-1]):\n        k1=1\n        k2=1\n        s2=sol+'L'\n        s3=sol+'R'\n        for i in range(1,len(a)):\n            if(a[i]>a[i-1]):\n                s2+='L'\n            else:\n                break\n        i=len(a)-2\n        while(i>=0):\n            if(a[i]>a[i+1]):\n                s3+='R'\n            else:\n                break\n            i-=1\n        if(len(s2)>len(s3)):\n            print(len(s2))\n            print(s2)\n            exit()\n        else:\n            print(len(s3))\n            print(s3)\n            exit()\n    elif(a[0]>m):\n            sol+='L'\n            \n            m=a[0]\n            a.pop(0)\n    elif(a[-1]>m):\n        sol+='R'\n        \n        m=a[-1]\n        a.pop(-1)\n    else:\n        break\n        \n        \n        \n    \nprint(len(sol))   \nprint(sol)\n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  scanf(\"%lld\", &n);\n  long long a[n + 5];\n  for (long long i = 0; i < n; i++) scanf(\"%lld\", &a[i]);\n  long long l = 0, r = n - 1, left = -1, right = -1;\n  long long seq = 0;\n  string ansL = \"\", ansR = \"\", temp;\n  while (l <= r) {\n    if (a[l] > seq && a[r] > seq) {\n      if (a[l] < a[r]) {\n        ansL += \"L\";\n        ansR += \"L\";\n        seq = a[l];\n        l++;\n      } else if (a[l] > a[r]) {\n        ansL += \"R\";\n        ansR += \"R\";\n        seq = a[r];\n        r--;\n      } else {\n        if (l == r) {\n          ansL += \"R\";\n          ansR += \"R\";\n          seq = a[r];\n          r--;\n        } else {\n          left = l, right = r;\n          break;\n        }\n      }\n    } else if (a[l] > seq) {\n      ansL += \"L\";\n      ansR += \"L\";\n      seq = a[l];\n      l++;\n    } else if (a[r] > seq) {\n      ansL += \"R\";\n      ansR += \"R\";\n      seq = a[r];\n      r--;\n    } else {\n      cout << ansL.size() << endl;\n      cout << ansL;\n      return 0;\n    }\n  }\n  long long seqL = seq, seqR = seq;\n  long long lt = left, rt = right;\n  if (left != -1) {\n    while (left < right) {\n      if (a[left] > seqL) {\n        ansL += \"L\";\n        seqL = a[left];\n        left++;\n      } else\n        break;\n    }\n    while (lt < rt) {\n      if (a[rt] > seqR) {\n        ansR += \"R\";\n        seqR = a[rt];\n        rt--;\n      } else\n        break;\n    }\n    if (ansL.size() > ansR.size()) {\n      cout << ansL.size() << endl;\n      cout << ansL;\n    } else {\n      cout << ansR.size() << endl;\n      cout << ansR;\n    }\n  } else {\n    cout << ansL.size() << endl;\n    cout << ansL;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2 * 1e5 + 5;\ndeque<int> q;\nvector<char> ans, k1, k2, k;\nvoid g_left(int v) {\n  int x = v;\n  deque<int> t = q;\n  x = t.front();\n  t.pop_front();\n  k1.push_back('L');\n  while (t.size() > 0) {\n    int a = t.front(), b = t.back();\n    if (a > x) {\n      k1.push_back('L');\n      x = a;\n      t.pop_front();\n    } else\n      return;\n  }\n  return;\n}\nvoid g_right(int v) {\n  int x = v;\n  deque<int> t = q;\n  x = t.back();\n  t.pop_back();\n  k2.push_back('R');\n  while (t.size() > 0) {\n    int a = t.front(), b = t.back();\n    if (b > x) {\n      k2.push_back('R');\n      x = b;\n      t.pop_back();\n    } else\n      return;\n  }\n  return;\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    int t;\n    cin >> t;\n    q.push_back(t);\n  }\n  int x = -1;\n  while (q.size() > 0) {\n    int a = q.front();\n    int b = q.back();\n    if (a < b && x < a || a > x && b <= x) {\n      ans.push_back('L');\n      x = a;\n      q.pop_front();\n    } else if (b < a && x < b || b > x && a <= x) {\n      ans.push_back('R');\n      x = b;\n      q.pop_back();\n    } else if (a == b && x < a) {\n      g_left(x);\n      g_right(x);\n      if (k1.size() > k2.size()) {\n        for (char i : k1) ans.push_back(i);\n      } else {\n        for (char i : k2) ans.push_back(i);\n      }\n      cout << ans.size() << endl;\n      for (auto i : ans) cout << i;\n      return 0;\n    } else\n      break;\n  }\n  if (q.size() == 1 && x < q.back()) ans.push_back('R');\n  cout << ans.size() << endl;\n  for (int i = 0; i < ans.size(); ++i) {\n    cout << ans[i];\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int n;\n  cin >> n;\n  string ans = \"\";\n  deque<long long int> a;\n  for (long long int i = 0; i < n; i++) {\n    long long int x;\n    cin >> x;\n    a.push_back(x);\n  }\n  long long int y = 0;\n  int f = 0;\n  while (!a.empty()) {\n    if (a.size() >= 2 && (a.front() > y && a.back() > y) &&\n        a.front() != a.back()) {\n      if (a.front() < a.back()) {\n        y = a.front();\n        a.pop_front();\n        ans += 'L';\n      } else {\n        y = a.back();\n        a.pop_back();\n        ans += 'R';\n      }\n    } else if (a.size() >= 2 && a.front() > y && a.front() == a.back()) {\n      f = 1;\n      break;\n    } else if (a.front() > y) {\n      y = a.front();\n      a.pop_front();\n      ans += 'L';\n    } else if (a.back() > y) {\n      y = a.back();\n      a.pop_back();\n      ans += 'R';\n    } else\n      break;\n  }\n  if (f == 1) {\n    deque<long long int> xa, ya;\n    while (!a.empty()) {\n      xa.push_back(a.front());\n      ya.push_back(a.front());\n      a.pop_front();\n    }\n    string ans1 = \"\", ans2 = \"\";\n    long long int y1 = y, y2 = y;\n    while (!xa.empty() && xa.front() > y1) {\n      y1 = xa.front();\n      ans1 += 'L';\n      xa.pop_front();\n    }\n    while (!ya.empty() && ya.back() > y2) {\n      y2 = ya.back();\n      ans2 += 'R';\n      ya.pop_back();\n    }\n    if (ans1.length() >= ans2.length()) {\n      ans += ans1;\n    } else\n      ans += ans2;\n  }\n  cout << ans.length() << endl;\n  cout << ans;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnums=list(map(int,input().split()))\nres=[]\nleft=0\nright=n-1\ncur=-1\nfor i in range(n):\n    l=nums[left]\n    r=nums[right]\n    if l>cur and r>cur:\n        if r>l:\n            res.append('L')\n            left+=1\n            cur=l\n        elif r<l:\n            res.append('R')\n            right-=1\n            cur=r\n        else:\n            rMax=0\n            lMax=0\n            nCur=cur\n            for i in range(left,right+1):\n                if nCur>=nums[i]:\n                    break\n                lMax+=1\n                nCur=nums[i]\n            nCur=cur\n            for i in range(right,left-1,-1):\n                if nCur>=nums[i]:\n                    break\n                rMax+=1\n                nCur=nums[i]\n            if lMax>rMax:\n                while cur<nums[left] and left<=right:\n                    res.append('L')\n                    cur=nums[left]\n                    left+=1\n            else:\n                while cur<nums[right] and left<=right:\n                    res.append('R')\n                    cur=nums[right]\n                    right-=1\n                    \n            break\n    elif l>cur:\n        res.append('L')\n        left+=1\n        cur=l\n    elif r>cur:\n        res.append('R')\n        right-=1\n        cur=r\n    else:\n        break\nprint(len(res))\nfor x in res:\n    print(x,end='')\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nfrom collections import deque\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\nelse:\n    _str = str\n    str = lambda x=b\"\": x if type(x) is bytes else _str(x).encode()\n\n\ndef main():\n    INF = float('inf')\n\n    n = int(readline())\n    a = deque(readlist())\n\n    c1, c2 = 0, 0\n\n    p = 0\n    s = []\n    o = ''\n\n    while a:\n        if (p < a[0]) and (a[0] == a[-1]):\n            tp = p\n            for i in a:\n                if i <= tp:\n                    break\n                c1 += 1\n                tp = i\n\n            tp = p\n            for i in reversed(a):\n                if i <= tp:\n                    break\n                c2 += 1\n                tp = i\n\n            if c1 > c2:\n                o = 'L' * c1\n            else:\n                o = 'R' * c2\n\n            break\n        elif p < a[0] < (a[-1] if p < a[-1] else INF):\n            p = a.popleft()\n            s.append('L')\n        elif p < a[-1]:\n            p = a.pop()\n            s.append('R')\n        else:\n            break\n\n    print(len(s) + max(c1, c2))\n    print(''.join(s), o, sep='')\n\n\n# region template\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._buffer = BytesIO()\n        self._fd = file.fileno()\n        self._writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self._buffer.write if self._writable else None\n\n    def read(self):\n        if self._buffer.tell():\n            return self._buffer.read()\n        return os.read(self._fd, os.fstat(self._fd).st_size)\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self._buffer.tell()\n            self._buffer.seek(0, 2), self._buffer.write(b), self._buffer.seek(ptr)\n        self.newlines -= 1\n        return self._buffer.readline()\n\n    def flush(self):\n        if self._writable:\n            os.write(self._fd, self._buffer.getvalue())\n            self._buffer.truncate(0), self._buffer.seek(0)\n\n\nclass ostream:\n    def __lshift__(self, a):\n        if a is endl:\n            sys.stdout.write(b\"\\n\")\n            sys.stdout.flush()\n        else:\n            sys.stdout.write(str(a))\n        return self\n\n\ndef print(*args, **kwargs):\n    sep, file = kwargs.pop(\"sep\", b\" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", b\"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nsys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\ncout, endl = ostream(), object()\n\nreadline = sys.stdin.readline\nreadlist = lambda var=int: [var(n) for n in readline().split()]\ninput = lambda: readline().rstrip(b\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int INF = 1e9 + 1;\nconst int MOD = 1e9 + 7;\nconst int N = 1e6 + 1;\nusing namespace std;\nint main() {\n  int n, x, y, z;\n  cin >> n;\n  list<int> arr;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    arr.push_back(x);\n  }\n  string str = \"\";\n  int current = 0;\n  while (arr.size()) {\n    x = *arr.begin();\n    y = *arr.rbegin();\n    if (x <= current && y <= current) {\n      break;\n    }\n    if (x < y && x > current) {\n      str += 'L';\n      current = x;\n      arr.pop_front();\n    } else if (y < x && y > current) {\n      str += 'R';\n      current = y;\n      arr.pop_back();\n    } else if (x == y && x > current) {\n      int a = 1, b = 1;\n      list<int>::iterator it;\n      it = arr.begin();\n      it++;\n      while (it != arr.end()) {\n        if (*it > x) {\n          a++;\n          x = *it;\n          it++;\n        } else {\n          break;\n        }\n      }\n      list<int>::reverse_iterator itt;\n      itt = arr.rbegin();\n      itt++;\n      while (b < arr.size()) {\n        if (*itt > y) {\n          b++;\n          y = *itt;\n          itt++;\n        } else {\n          break;\n        }\n      }\n      if (a > b) {\n        while (a--) {\n          str += 'L';\n        }\n      } else {\n        while (b--) {\n          str += 'R';\n        }\n      }\n      break;\n    } else if (y > current) {\n      str += 'R';\n      current = y;\n      arr.pop_back();\n    } else {\n      str += 'L';\n      current = x;\n      arr.pop_front();\n    }\n  }\n  cout << str.size() << endl;\n  cout << str << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 5;\nint a[MAXN];\nvector<bool> lts;\nvector<int> ori;\nvector<int> rev;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  int last = -1;\n  int lt = 1;\n  int rt = n;\n  bool sameFlag = false;\n  while (lt <= rt) {\n    if (a[lt] > last && a[rt] > last) {\n      if (a[lt] < a[rt]) {\n        lts.push_back(true);\n        last = a[lt];\n        ++lt;\n      } else if (a[lt] > a[rt]) {\n        lts.push_back(false);\n        last = a[rt];\n        --rt;\n      } else {\n        sameFlag = true;\n        break;\n      }\n    } else {\n      if (a[lt] > last) {\n        lts.push_back(true);\n        last = a[lt];\n        ++lt;\n      } else if (a[rt] > last) {\n        lts.push_back(false);\n        last = a[rt];\n        --rt;\n      } else {\n        break;\n      }\n    }\n  }\n  if (sameFlag) {\n    ori.assign(a + lt, a + rt + 1);\n    rev = ori;\n    reverse(rev.begin(), rev.end());\n    int ltLast = last;\n    int rtLast = last;\n    int ltCnt = 0;\n    int rtCnt = 0;\n    for (int num : ori) {\n      if (num > ltLast) {\n        ++ltCnt;\n        ltLast = num;\n      } else {\n        break;\n      }\n    }\n    for (int num : rev) {\n      if (num > rtLast) {\n        ++rtCnt;\n        rtLast = num;\n      } else {\n        break;\n      }\n    }\n    if (ltCnt > rtCnt) {\n      lts.insert(lts.end(), ltCnt, true);\n    } else {\n      lts.insert(lts.end(), rtCnt, false);\n    }\n  }\n  printf(\"%u\\n\", lts.size());\n  for (bool k : lts) {\n    if (k) {\n      printf(\"L\");\n    } else {\n      printf(\"R\");\n    }\n  }\n  printf(\"\\n\");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n public class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tFastIO io = new FastIO();\n\t\tint n=io.nextInt();\n\t\tint arr[]=new int[n];\n\t\tfor(int i=0;i<n;i++)arr[i]=io.nextInt();\n\t\tStringBuilder sb=new StringBuilder();\n\t\t\n\t\tint ld[]=new int[n];\n\t\tld[0]=1;\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t    if(arr[i]<arr[i-1])ld[i]=ld[i-1]+1;\n\t\t    else ld[i]=1;\n\t\t}\n\t\tint rd[]=new int[n];\n\t\trd[n-1]=1;\n\t\tfor(int i=n-2;i>=0;i--)\n\t\t{\n\t\t    if(arr[i]<arr[i+1])rd[i]=rd[i+1]+1;\n\t\t    else rd[i]=1;\n\t\t}\n\t\tint i=0,j=n-1,prev=0;\n\t\twhile(i<=j)\n\t\t{\n\t\t    if(arr[i]<=prev&&arr[j]<=prev)break;\n\t\t    if(arr[i]<=prev)\n\t\t    {\n\t\t        sb.append('R');\n\t\t        prev=arr[j];\n\t\t        j--;\n\t\t        continue;\n\t\t    }\n\t\t    if(arr[j]<=prev)\n\t\t    {\n\t\t        sb.append('L');\n\t\t        prev=arr[i];\n\t\t        i++;\n\t\t        continue;\n\t\t    }\n\t\t    if(arr[i]>arr[j])\n\t\t    {\n\t\t       sb.append('R');\n\t\t        prev=arr[j];\n\t\t        j--;\n\t\t        continue; \n\t\t    }\n\t\t    if(arr[j]>arr[i])\n\t\t    {\n\t\t        sb.append('L');\n\t\t        prev=arr[i];\n\t\t        i++;\n\t\t        continue;\n\t\t    }\n\t\t    if(rd[i]>=ld[j])\n\t\t    {\n\t\t        while(rd[i]>0){\n\t\t            sb.append('L');\n\t\t            rd[i]--;\n\t\t        }\n\t\t        break;\n\t\t    }\n\t\t    if(ld[j]>rd[i])\n\t\t    {\n\t\t        while(ld[j]>0){\n\t\t            sb.append('R');\n\t\t            ld[j]--;\n\t\t        }\n\t\t        break;\n\t\t    }\n\t\t}\n\t\t//io.println(i+\" \"+j);\n\t\tio.println(sb.length());\n\t\tio.println(sb.toString());\n\t\tio.close();\n\t}\n}\n \n class FastIO extends PrintWriter {\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[1<<16];\n\tprivate int curChar, numChars;\n \n\t// standard input\n\tpublic FastIO() { this(System.in,System.out); }\n\tpublic FastIO(InputStream i, OutputStream o) {\n\t\tsuper(o);\n\t\tstream = i;\n\t}\n\t// file input\n\tpublic FastIO(String i, String o) throws IOException {\n\t\tsuper(new FileWriter(o));\n\t\tstream = new FileInputStream(i);\n\t}\n \n\t// throws InputMismatchException() if previously detected end of file\n\tprivate int nextByte() {\n\t\tif (numChars == -1) throw new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars == -1) return -1; // end of file\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n \n\tpublic String nextLine() {\n\t\tint c; do { c = nextByte(); } while (c <= '\\n');\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo { res.appendCodePoint(c); c = nextByte(); } while (c > '\\n');\n\t\treturn res.toString();\n\t}\n \n\tpublic String next() {\n\t\tint c; do { c = nextByte(); } while (c <= ' ');\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo { res.appendCodePoint(c); c = nextByte(); } while (c > ' ');\n\t\treturn res.toString();\n\t}\n \n\tpublic int nextInt() { \n\t\tint c; do { c = nextByte(); } while (c <= ' ');\n\t\tint sgn = 1; if (c == '-') { sgn = -1; c = nextByte(); }\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres = 10*res+c-'0';\n\t\t\tc = nextByte();\n\t\t} while (c > ' ');\n\t\treturn res * sgn;\n\t}\n \n  public long nextLong() { \n\t\tint c; do { c = nextByte(); } while (c <= ' ');\n\t\tlong sgn = 1; if (c == '-') { sgn = -1; c = nextByte(); }\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres = 10*res+c-'0';\n\t\t\tc = nextByte();\n\t\t} while (c > ' ');\n\t\treturn res * sgn;\n\t}\n \n\tpublic double nextDouble() { return Double.parseDouble(next()); }\n}"
        },
        {
            "language": 3,
            "solution": "def m(a,x):\n    temp_l = temp_r = x\n    L = R = 0\n    l = len(a)\n    for i in range(l):\n        if temp_l < a[i]:\n            L += 1\n            temp_l = a[i]\n        else:\n            break\n    for i in range(len(a)-1,-1,-1):\n        if temp_r < a[i]:\n            R += 1\n            temp_r = a[i]\n        else:\n            break\n    if R > L:\n        return 'R' * (R+1)\n    return 'L' * (L+1)\nn = int(input())\ns = list(map(int,input().split()))\nt = 0\nans = ''\nl = 0\nr = n-1\nwhile l <= r:\n    if t < s[l] < s[r]:\n        ans += 'L'\n        t = s[l]\n        l += 1\n    elif t < s[r] < s[l]:\n        ans += 'R'\n        t = s[r]\n        r -= 1\n    elif t < s[l] == s[r] and l != r:\n        ans += m(s[l+1:r],s[l]) if r-l-1 >= 2 else ('LL' if s[l+1] > s[l] else 'L')\n        break\n    elif t < s[l]:\n        ans += 'L'\n        t = s[l]\n        l += 1\n    elif t < s[r]:\n        ans += 'R'\n        t = s[r]\n        r -= 1\n    else:\n        break\nprint(len(ans))\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class p1 {\n\n    public static void main(String[] args) {\n\n        Scanner in = new Scanner(System.in);\n\n        int n = in.nextInt();\n\n        int[] array = new int[n];\n\n        for (int i = 0; i < n; i++) {\n            array[i] = in.nextInt();\n        }\n\n        int cur = 0;\n        int l = 0;\n        int r = n-1;\n        int count = 0;\n\n        boolean lflag = false;\n        boolean rflag = false;\n\n        StringBuilder path = new StringBuilder();\n\n        while ((cur < array[l] || cur < array[r]) && r >= l) {\n            int checkval = check(cur, l, r, array);\n            if (l == r) {\n                count++;\n                path.append('L');\n                break;\n            }\n            if (lflag || rflag) {\n                break;\n            }\n            if (checkval == 0) {\n                cur = array[l];\n                l++;\n                path.append('L');\n            } else if (checkval == 1) {\n                cur = array[r];\n                r--;\n                path.append('R');\n            } else {\n                int choose = runSim(cur, l, r, array);\n                if (choose == 0) {\n                    cur = array[l];\n                    l++;\n                    path.append('L');\n                    lflag = true;\n                } else {\n                    cur = array[r];\n                    r--;\n                    path.append('R');\n                    rflag = true;\n                }\n            }\n            count++;\n        }\n\n        if (lflag) {\n            while (cur < array[l] && l < r) {\n                cur = array[l];\n                l++;\n                path.append('L');\n                count++;\n            }\n        } else if (rflag) {\n            while (cur < array[r] && r > l) {\n                cur = array[r];\n                r--;\n                path.append('R');\n                count++;\n            }\n        }\n\n        System.out.println(count);\n        System.out.println(path);\n\n    }\n\n    public static int check(int cur, int l, int r, int[] array) {\n        if (cur < array[l] && cur  < array[r]) {\n            if (array[l] < array[r]) {\n                return 0;\n            } else if (array[r] < array[l]) {\n                return 1;\n            }\n        } else if (cur < array[l]) {\n            return 0;\n        } else if (cur < array[r]) {\n            return 1;\n        }\n        return 2;\n    }\n\n    public static int runSim(int cur, int l, int r, int[] array) {\n        int tl = l, tr = r, tcur = cur;\n        int lcount = 0, rcount = 0;\n        while (tcur < array[tl] && tl < tr) {\n            tcur = array[tl];\n            tl++;\n            lcount++;\n        }\n        tcur = cur;\n        tl = l;\n        tr = r;\n        while (tcur < array[tr] && tr > tl) {\n            tcur = array[tr];\n            tr--;\n            rcount++;\n        }\n        return lcount > rcount ? 0 : 1;\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 10;\nconst int mod = 1e9 + 7;\ndeque<int> q, qt;\nstring a1;\nint main() {\n  int n, a, t = 0;\n  cin >> n;\n  for (int i = 0; i < (n); i++) cin >> a, q.push_back(a);\n  vector<int> v;\n  while (!q.empty()) {\n    if (q.front() > t && q.back() > t) {\n      if (q.front() == q.back()) {\n        int num1 = 0, num2 = 0, t1 = t;\n        for (int i = 0; i < q.size(); i++) qt.push_back(q[i]);\n        while (!qt.empty()) {\n          if (qt.front() > t1)\n            num1++, t1 = qt.front(), qt.pop_front();\n          else\n            break;\n        }\n        qt.clear();\n        for (int i = 0; i < q.size(); i++) qt.push_back(q[i]);\n        t1 = t;\n        while (!qt.empty()) {\n          if (qt.back() > t1)\n            num2++, t1 = qt.back(), qt.pop_back();\n          else\n            break;\n        }\n        qt.clear();\n        if (num1 > num2) {\n          while (num1--) {\n            v.push_back(q.front());\n            a1 += 'L';\n            t = q.front();\n            q.pop_front();\n          }\n        } else {\n          while (num2--) {\n            v.push_back(q.back());\n            a1 += 'R';\n            t = q.back();\n            q.pop_back();\n          }\n        }\n      } else if (q.front() < q.back()) {\n        v.push_back(q.front());\n        a1 += 'L';\n        t = q.front();\n        q.pop_front();\n      } else {\n        v.push_back(q.back());\n        a1 += 'R';\n        t = q.back();\n        q.pop_back();\n      }\n    } else if (q.back() > t) {\n      v.push_back(q.back());\n      a1 += 'R';\n      t = q.back();\n      q.pop_back();\n    } else if (q.front() > t) {\n      v.push_back(q.front());\n      a1 += 'L';\n      t = q.front();\n      q.pop_front();\n    } else\n      break;\n  }\n  cout << v.size() << endl;\n  cout << a1 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Solution {\n\n\n\n    public static void main(String[] args) {\n\n\n\n        int n = fsca.nextInt() ;\n        int a[] = fsca.readArray(n) ;\n        int l=0 , r = n-1 ;\n        StringBuilder sb = new StringBuilder() ;\n        int prev = -1 ;\n\n        while (l <= r){\n            if (prev >= a[l] && prev >= a[r])break;\n            if (a[l] == a[r]){\n                int temp = prev ;\n                //  if (a[l] < prev)break;\n                int ans1 = 0 ;\n                for (int i = l; i <=r ; i++) {\n                    if (a[i] > temp){\n                        ans1++ ;\n                        temp = a[i] ;\n                    }\n                    else break;\n                }\n                temp = prev ;\n                int ans2 = 0 ;\n                for (int i=r ; i>=l ; i--){\n                    if (a[i] > temp){\n                        ans2++ ;\n                        temp = a[i] ;\n                    }\n                    else break;\n                }\n                if (ans1 > ans2){\n                    while (ans1-- > 0)sb.append(\"L\") ;\n                }\n                else {\n                    while (ans2-- > 0)sb.append(\"R\") ;\n                }\n                break;\n            }\n            else if (a[l] < a[r]){\n                if (a[l] > prev && a[l] != prev){\n                    prev = a[l] ;\n                    l++ ;\n                    sb.append(\"L\") ;\n                }\n                else {\n                    prev = a[r] ;\n                    r-- ;\n                    sb.append(\"R\") ;\n                }\n            }\n            else {\n                if (a[r] > prev && a[r] != prev){\n                    prev = a[r] ;\n                    r-- ;\n                    sb.append(\"R\") ;\n                }\n                else {\n                    prev = a[l] ;\n                    l++ ;\n                    sb.append(\"L\") ;\n\n                }\n            }\n        }\n\n        System.out.println(sb.length());\n        System.out.println(sb);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        fop.flush();\n        fop.close();\n    }\n\n\n    /*-----------------------------------------------------------------------------------------------------------------------------------------------*/\n\n   static PrintWriter fop = new PrintWriter(System.out);\n   static FastScanner fsca = new FastScanner();\n\n\n\n    static long gcd(long a, long b) {\n        return (b == 0) ? a : gcd(b, a % b);\n    }\n    static int gcd(int a, int b) {\n        return (b == 0) ? a : gcd(b, a % b);\n    }\n\n\n    //     Arrays.sort() takes o(n^2) time to sort when array is reverse sorted , so always shuffle the array before sorting\n    static final Random random = new Random();\n\n    static void ruffleSort(int[] a) {\n        int n = a.length;\n        for (int i = 0; i < n; i++) {\n            int oi = random.nextInt(n), temp = a[oi];\n            a[oi] = a[i]; a[i] = temp;\n        }\n        Arrays.sort(a);\n    }\n\n    static void ruffleSort(long[] a) {\n        int n = a.length;\n        for (int i = 0; i < n; i++) {\n            int oi = random.nextInt(n);\n            long temp = a[oi];\n            a[oi] = a[i]; a[i] = temp;\n        }\n        Arrays.sort(a);\n    }\n\n    // for fast input :\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreTokens()) try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        // int array input\n        int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        // long array input\n        long[] readLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) a[i] = nextLong();\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main {\n  public static void main(String[] args) {\n    Scanner s = new Scanner(System.in);\n    int n = s.nextInt();\n    int[] a = new int[n];\n    int[] b = new int[200000];\n    for(int i=0;i<n;i++)\n    {\n      a[i] = s.nextInt();\n    }\n    int p = 0;\n    int start = 0;\n    int end = n-1;\n    int r = 0;\n    for(int i=0;i<n;i++)\n    {\n      if(a[start] == a[end])\n      break;\n      int flag=0;\n      if(flag==0&&r<a[start]&&a[start]<a[end])\n      {\n        flag=1;\n        b[p]=0;\n        p++;\n        r=a[start];\n        start++;\n      }\n      if(flag==0&&r>a[start]&&a[start]<a[end]&&r<a[end])\n      {\n        flag=1;\n        b[p]=1;\n        p++;\n        r=a[end];\n        end--;\n      }\n      if(flag==0&&r>a[end]&&a[start]<a[end])\n      {\n        System.out.println(p);\n        for(int j=0;j<p;j++)\n        {\n          if(b[j]==0)\n          System.out.print(\"L\");\n          else\n          System.out.print(\"R\");\n        }\n        return;\n      }\n      if(flag==0&&r<a[end]&&a[start]>a[end])\n      {\n        flag=1;\n        b[p]=1;\n        p++;\n        r=a[end];\n        end--;\n      }\n      if(flag==0&&r<a[start]&&a[start]>a[end]&&r>a[end])\n      {\n        flag=1;\n        b[p]=0;\n        p++;\n        r=a[start];\n        start++;\n      }\n      if(flag==0&&r>a[start]&&a[start]>a[end])\n      {\n        System.out.println(p);\n        for(int j=0;j<p;j++)\n        {\n          if(b[j]==0)\n          System.out.print(\"L\");\n          else\n          System.out.print(\"R\");\n        }\n        return;\n      }\n    }\n    if(start!=end&&a[start]>=r)\n    {\n      int k=0;\n      int l=0;\n      int st=start;\n      int en=end;\n      if(a[start]>r)\n      k++;\n      if(a[end]>r)\n      l++;\n      while(st<end&&a[start]>r)\n      {\n        if(a[st]<a[st+1])\n        {\n          k++;\n          st++;\n        }\n        else\n        break;\n      }\n      while(en>start&&a[end]>r)\n      {\n        if(a[en]<a[en-1])\n        {\n          l++;\n          en--;\n        }\n        else\n        break;\n      }\n      if(l>=k)\n      {\n        System.out.println(p+l);\n        for(int i=0;i<p;i++)\n        {\n          if(b[i]==0)\n          System.out.print(\"L\");\n          else\n          System.out.print(\"R\");\n        }\n        for(int i=0;i<l;i++)\n        {\n          System.out.print(\"R\");\n        }\n        return;\n      }\n      else\n      {\n        System.out.println(p+k);\n        for(int i=0;i<p;i++)\n        {\n          if(b[i]==0)\n          System.out.print(\"L\");\n          else\n          System.out.print(\"R\");\n        }\n        for(int i=0;i<k;i++)\n        {\n          System.out.print(\"L\");\n        }\n        return;\n      }\n    }\n    if(a[start]>r)\n    {\n      b[p]=1;\n      p++;\n    }\n    System.out.println(p);\n    for(int i=0;i<p;i++)\n    {\n      if(b[i]==0)\n      System.out.print(\"L\");\n      else\n      System.out.print(\"R\");\n    }\n  }\n}"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\n\ndef check_l(a, l, r):\n    d = 0\n    last = 0\n    while l <= r and a[l] > last:\n        last = a[l]\n        l += 1\n        d += 1\n    return d\n\ndef check_r(a, l, r):\n    d = 0\n    last = 0\n    while l <= r and a[r] > last:\n        last = a[r]\n        r -= 1\n        d += 1\n    return d\n\ndef main():\n    # skip N\n    input()\n    a = [int(x) for x in input().split(' ')]\n    n = len(a)\n\n    l, r = 0, n - 1\n    res = []\n    \n    last = 0\n    picked = True\n\n    while l <= r and picked:\n        picked = False\n        if last < a[l] and last < a[r]:\n            if a[l] < a[r]:\n                last = a[l]\n                res.append('L')\n                l += 1\n            elif a[l] == a[r]:\n                dl = check_l(a, l, r)\n                dr = check_r(a, l, r)\n                \n                if dl > dr:\n                    res.extend(['L'] * dl)\n                    last = a[l + dl - 1]\n                    l += dl\n                else:\n                    res.extend(['R'] * dr)\n                    last = a[r - dr + 1]\n                    r -= dr\n            else:\n                last = a[r]\n                res.append('R')\n                r -= 1\n            picked = True\n            continue\n        \n        if last < a[l]:\n            last = a[l]\n            res.append('L')\n            l += 1\n            picked = True\n            continue\n        \n        if last < a[r]:\n            last = a[r]\n            res.append('R')\n            r -= 1\n            picked = True\n            continue\n    \n    print(len(res))\n    print(\"\".join(res))\n        \n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = list(map(int, input().strip().split()))\n\ni = 0\nj = n-1\n\nv = -1\nsteps = \"\"\n\nwhile i!=j:\n    if x[i]>x[j]:\n        if x[j]>v:\n            steps += \"R\"\n            v = x[j]\n            j-=1\n        elif x[i]>v:\n            steps += \"L\"\n            v = x[i]\n            i += 1\n        else:\n            break\n    elif x[j]>x[i]:\n        if x[i]>v:\n            steps += \"L\"\n            v = x[i]\n            i += 1\n        elif x[j]>v:\n            steps += \"R\"\n            v = x[j]\n            j -= 1\n        else:\n            break\n    else:\n        if x[i]>v:\n            vk = v\n            k = i\n            stepsL = \"\"\n            while x[k]>vk and j!=k:\n                stepsL += \"L\"\n                vk = x[k]\n                k += 1\n\n            vk = v\n            k = j\n            stepsR = \"\"\n            while x[k]>vk and i!=k:\n                stepsR += \"R\"\n                vk = x[k]\n                k -= 1\n            if len(stepsL)>len(stepsR):\n                steps += stepsL\n            else:\n                steps+=stepsR\n        print(len(steps))\n        print(steps)\n        exit()\n        \n\nif x[i]>v:\n    steps += \"R\"\n    \nprint(len(steps))\nprint(steps)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long Pow(long long x, long long y, long long m) {\n  if (y == 0) return 1;\n  long long p = Pow(x, y / 2, m) % m;\n  p = (p * p) % m;\n  return (y % 2 == 0) ? p : (x * p) % m;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long i, j;\n  long long n;\n  cin >> n;\n  vector<char> s;\n  vector<long long> a(n);\n  for (i = 0; i < n; i++) cin >> a[i];\n  long long x = 0;\n  i = 0;\n  j = n - 1;\n  while (i <= j) {\n    if ((a[j] > x && a[j] < a[i]) || (x >= a[i] && x < a[j])) {\n      x = a[j];\n      s.push_back('R');\n      j--;\n    } else if ((a[i] > x && a[i] < a[j]) || (x >= a[j] && x < a[i])) {\n      x = a[i];\n      s.push_back('L');\n      i++;\n    } else if (x >= a[i] && x >= a[j])\n      break;\n    else if (a[i] == a[j])\n      break;\n  }\n  if (a[i] == a[j]) {\n    long long y = x;\n    long long cntl = 0, cntr = 0;\n    for (long long j1 = j; j1 >= i; j1--) {\n      if (a[j1] > y)\n        y = a[j1], cntr++;\n      else\n        break;\n    }\n    y = x;\n    for (long long i1 = i; i1 <= j; i1++) {\n      if (a[i1] > y)\n        y = a[i1], cntl++;\n      else\n        break;\n    }\n    if (cntr > cntl) {\n      for (long long p = 0; p < cntr; p++) s.push_back('R');\n    } else {\n      for (long long p = 0; p < cntl; p++) s.push_back('L');\n    }\n  }\n  cout << s.size() << \"\\n\";\n  for (i = 0; i < s.size(); i++) cout << s[i];\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename Tp>\ninline void outarr(Tp _begin, Tp _end, const char* _delim = \" \") {\n  for (Tp current = _begin; current != _end; ++current) {\n    std::cout << *current << _delim;\n  }\n  std::cout << '\\n';\n}\nusing ll = long long;\nusing pii = std::pair<int, int>;\nconstexpr int INF = 0x3f3f3f3f;\nconstexpr int MOD = static_cast<const int>(1e9 + 7);\nint arr[200000];\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  std::cin.tie(nullptr);\n  int n;\n  cin >> n;\n  for (int i = 0; i < (n); ++i) {\n    cin >> arr[i];\n  }\n  string ans;\n  for (int last = 0, l = 0, r = n - 1;;) {\n    if (l == r) {\n      if (arr[l] > last) {\n        ans += 'L';\n      }\n      break;\n    }\n    if (arr[l] > last && arr[r] > last) {\n      if (arr[l] > arr[r]) {\n        ans += 'R';\n        last = arr[r--];\n      } else if (arr[r] > arr[l]) {\n        ans += 'L';\n        last = arr[l++];\n      } else {\n        int cntL = 0;\n        int tmp = last;\n        while (arr[l] > last) {\n          last = arr[l++];\n          ++cntL;\n        }\n        int cntR = 0;\n        last = tmp;\n        while (arr[r] > last) {\n          last = arr[r--];\n          ++cntR;\n        }\n        if (cntL > cntR) {\n          ans += string(cntL, 'L');\n        } else {\n          ans += string(cntR, 'R');\n        }\n        break;\n      }\n    } else if (arr[l] > last) {\n      while (arr[l] > last) {\n        ans += 'L';\n        last = arr[l++];\n      }\n      break;\n    } else if (arr[r] > last) {\n      while (arr[r] > last) {\n        ans += 'R';\n        last = arr[r--];\n      }\n      break;\n    } else {\n      break;\n    }\n  }\n  cout << static_cast<int>((ans).size()) << \"\\n\" << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nimport sys\nlewy = 0\nprawy = n - 1\nwynik = 0\nseq = 0\nle = 0\npra = 0\nwynile = 0\nwynipra = 0\nkol = []\nmini = -1000000000000\nwhile True:\n\tif lewy > prawy:\n\t\tbreak\n\tif l[lewy] != l[prawy]:\n\t\tif l[lewy] > l[prawy]:\n\t\t\tif l[prawy] > mini:\n\t\t\t\tmini = l[prawy]\n\t\t\t\tprawy -= 1\n\t\t\t\twynik += 1\n\t\t\t\tkol.append(\"R\")\n\t\t\telse:\n\t\t\t\tif l[lewy] > mini:\n\t\t\t\t\tmini = l[lewy]\n\t\t\t\t\tlewy += 1\n\t\t\t\t\twynik += 1\n\t\t\t\t\tkol.append(\"L\")\n\t\t\t\telse:\n\t\t\t\t\tprint(wynik)\n\t\t\t\t\tfor i in kol:\n\t\t\t\t\t\tprint(i, end = \"\")\n\t\t\t\t\tsys.exit(0)\n\t\telse:\n\t\t\tif l[lewy] > mini:\n\t\t\t\tmini = l[lewy]\n\t\t\t\tlewy += 1\n\t\t\t\twynik += 1\n\t\t\t\tkol.append(\"L\")\n\t\t\telse:\n\t\t\t\tif l[prawy] > mini:\n\t\t\t\t\tmini = l[prawy]\n\t\t\t\t\tprawy -= 1\n\t\t\t\t\twynik += 1\n\t\t\t\t\tkol.append(\"R\")\n\t\t\t\telse:\n\t\t\t\t\tprint(wynik)\n\t\t\t\t\tfor i in kol:\n\t\t\t\t\t\tprint(i, end = \"\")\n\t\t\t\t\tsys.exit(0)\n\telse:\n\t\t\n\t\tif l[lewy] < mini:\n\t\t\tprint(wynik)\n\t\t\tfor i in kol:\n\t\t\t\tprint(i, end = \"\")\n\t\t\tsys.exit(0)\n\t\telse:\n\t\t\tminiclone = mini\n\t\t\tseq1 = 0\n\t\t\tle = 0\n\t\t\twhile True:\n\t\t\t\tif lewy + le <= prawy and l[lewy+le] > mini:\n\t\t\t\t\tmini = l[lewy + le]\n\t\t\t\t\t#print(mini,\"C\")\n\t\t\t\t\tseq1 += 1\n\t\t\t\t\tle += 1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\twynile = wynik + seq1\n\t\t\tseq2 = 0\n\t\t\tle = 0\n\t\t\tmini = miniclone\n\t\t\twhile True:\n\t\t\t\tif prawy - le >= lewy and l[prawy - le] > mini:\n\t\t\t\t\tmini = l[prawy - le]\n\t\t\t\t#\tprint(mini)\n\t\t\t\t\tseq2 += 1\n\t\t\t\t\tle += 1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\t\twynipra = wynik + seq2\n\t\t\tif seq1 > seq2:\n\t\t\t\tkol = kol + [\"L\"] * seq1\n\t\t\telse:\n\t\t\t\tkol = kol + [\"R\"] * seq2\n\t\t\tprint(max(wynile,wynipra))\n\t\t\tfor i in kol:\n\t\t\t\tprint(i, end = \"\")\n\t\t\tsys.exit(0)"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\n\nM = list(map(int, input().split()))\nL = [1] * n\nR = [1] * n\n\nfor i in range(1, len(M)):\n    if M[i] < M[i-1]:\n        R[i] = R[i-1] + 1\n    if M[n - 1 - i] < M[n - i]:\n        L[n-1-i] = L[n-i] + 1\n\n         \n        \n#print(L)\n#print(R)        \nans = []\n\nlast = -1\nl, r = 0, n - 1\n\nwhile r >= l:\n    #print(str(l) + ' ' + str(r), end=': ')\n    #print(last)\n    if M[r] <= last and M[l] <= last:\n        break\n    if M[r] == M[l]:\n       \n        if L[l] > R[r]:\n            ans += [\"L\"]\n            last = M[l]\n            l += 1\n        else:\n            ans += [\"R\"]\n            last = M[r]\n            r -= 1\n    elif M[r] <= last:\n        last = M[l]\n        ans += [\"L\"]\n        l += 1\n    elif M[l] <= last:\n        last = M[r]\n        ans += [\"R\"]\n        r -= 1\n    else:\n        if M[l] < M[r]:\n            last = M[l]\n            ans += [\"L\"]\n            l += 1\n        else:\n            last = M[r]\n            ans += [\"R\"]\n            r -= 1\n\nprint(len(ans))\nprint(\"\".join(ans))\n         "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint d[200010];\nvoid ok() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> d[i];\n  int left = 1;\n  int right = n;\n  int ans = 0;\n  string order = \"\";\n  int pre = 0;\n  while (left <= right) {\n    if (d[left] == d[right]) {\n      int cnt1 = 0;\n      int cnt2 = 0;\n      for (int i = left; i <= right; i++) {\n        if (d[i] > max(d[i - 1], pre)) {\n          cnt1++;\n        } else {\n          break;\n        }\n      }\n      for (int i = right; i >= left; i--) {\n        if (d[i] > max(d[i + 1], pre)) {\n          cnt2++;\n        } else {\n          break;\n        }\n      }\n      if (cnt1 >= cnt2) {\n        ans += cnt1;\n        for (int i = 0; i < cnt1; i++) order += \"L\";\n      } else {\n        ans += cnt2;\n        for (int i = 0; i < cnt2; i++) order += \"R\";\n      }\n      break;\n    }\n    if (d[left] < d[right]) {\n      if (d[left] > pre) {\n        pre = d[left];\n        ans++;\n        order += \"L\";\n        left++;\n      } else if (d[right] > pre) {\n        pre = d[right];\n        ans++;\n        order += \"R\";\n        right--;\n      } else {\n        break;\n      }\n    } else {\n      if (d[right] > pre) {\n        pre = d[right];\n        ans++;\n        order += \"R\";\n        right--;\n      } else if (d[left] > pre) {\n        pre = d[left];\n        ans++;\n        order += \"L\";\n        left++;\n      } else {\n        break;\n      }\n    }\n  }\n  cout << ans << endl;\n  cout << order << endl;\n}\nint main() {\n  ok();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint fw[300009];\nint main() {\n  int n, k1, k;\n  string s;\n  cin >> n;\n  int arr[n + 1], i;\n  for (i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  int st1, st = 0, flag1 = 0;\n  int en1, en = n - 1;\n  int last = 0, len = 0;\n  while (1) {\n    if (arr[st] == arr[en] && arr[st] > last) {\n      if (st == en && arr[st] > last) {\n        fw[len] = fw[len - 1];\n        len++;\n        break;\n      }\n      flag1 = 1;\n      fw[len] = -1;\n      k1 = 0;\n      k = 0;\n      break;\n    } else if (arr[st] > arr[en] && arr[en] > last) {\n      fw[len] = 2;\n      len++;\n      last = arr[en];\n      en--;\n    } else if (arr[st] > arr[en] && arr[st] > last && arr[en] <= last) {\n      fw[len] = 1;\n      len++;\n      last = arr[st];\n      st++;\n    } else if (arr[st] < arr[en] && arr[st] > last) {\n      fw[len] = 1;\n      len++;\n      last = arr[st];\n      st++;\n    } else if (arr[st] < arr[en] && arr[st] <= last && arr[en] > last) {\n      fw[len] = 2;\n      len++;\n      last = arr[en];\n      en--;\n    } else {\n      break;\n    }\n  }\n  for (i = 0; i < len; i++) {\n    if (fw[i] == 1) {\n      s += 'L';\n    }\n    if (fw[i] == 2) {\n      s += 'R';\n    }\n  }\n  if (flag1 == 1) {\n    for (i = st; i <= en; i++) {\n      if (arr[i] >= arr[i + 1]) {\n        break;\n      } else if (arr[i] > last && arr[i] < arr[i + 1]) {\n        k++;\n      }\n    }\n    for (i = en; i >= st; i--) {\n      if (arr[i] >= arr[i - 1]) {\n        break;\n      } else if (arr[i] > last) {\n        k1++;\n      }\n    }\n    if (k > k1) {\n      len += k + 1;\n      for (i = 0; i < k + 1; i++) {\n        s += 'L';\n      }\n    } else if (k1 > k) {\n      len += k1 + 1;\n      for (i = 0; i < k1 + 1; i++) {\n        s += 'R';\n      }\n    } else if (k == k1) {\n      len += k + 1;\n      for (i = 0; i < k + 1; i++) {\n        s += 'L';\n      }\n    }\n  }\n  int ans, flag = 0;\n  cout << len << \"\\n\";\n  if (len == 1)\n    cout << \"R\";\n  else\n    cout << s;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint a[200001];\nchar mov[200001];\nchar mov1[200001];\nint i, j;\nint main() {\n  scanf(\"%d\", &n);\n  int ans = 0;\n  int ans1 = 0;\n  int temp = 0;\n  for (i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  for (i = 1, j = n; ans < n;) {\n    if (a[i] > temp && a[i] < a[j]) {\n      mov[++ans] = 'L';\n      temp = a[i];\n      i++;\n    } else if (a[j] > temp && a[j] <= a[i] || a[j] > temp && a[i] <= temp) {\n      mov[++ans] = 'R';\n      temp = a[j];\n      j--;\n    } else if (a[i] > temp) {\n      mov[++ans] = 'L';\n      temp = a[i];\n      i++;\n    } else\n      break;\n  }\n  temp = 0;\n  for (i = 1, j = n; ans < n;) {\n    if (a[i] > temp && a[i] <= a[j]) {\n      mov1[++ans1] = 'L';\n      temp = a[i];\n      i++;\n    } else if (a[j] > temp && a[j] <= a[i] || a[j] > temp && a[i] <= temp) {\n      mov1[++ans1] = 'R';\n      temp = a[j];\n      j--;\n    } else if (a[i] > temp) {\n      mov1[++ans1] = 'L';\n      temp = a[i];\n      i++;\n    } else\n      break;\n  }\n  if (ans >= ans1) {\n    printf(\"%d\\n\", ans);\n    for (i = 1; i <= ans; i++) cout << mov[i];\n  } else {\n    printf(\"%d\\n\", ans1);\n    for (i = 1; i <= ans1; i++) cout << mov1[i];\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nint n;\nint a[N];\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int cur = 0;\n  string ans;\n  int l = 0, r = n - 1;\n  while (l <= r) {\n    if (max(a[l], a[r]) <= cur) break;\n    if (a[l] <= cur) {\n      ans.push_back('R');\n      cur = a[r--];\n    } else if (a[r] <= cur) {\n      ans.push_back('L');\n      cur = a[l++];\n    } else if (a[l] < a[r]) {\n      ans.push_back('L');\n      cur = a[l++];\n    } else if (a[r] < a[l]) {\n      ans.push_back('R');\n      cur = a[r--];\n    } else {\n      string s1 = \"L\";\n      int p = l;\n      while (p <= r && a[p] < a[p + 1]) {\n        s1.push_back('L');\n        p++;\n      }\n      string s2 = \"R\";\n      p = r;\n      while (p >= l && a[p] < a[p - 1]) {\n        s2.push_back('R');\n        p--;\n      }\n      if (s1.size() > s2.size())\n        ans += s1;\n      else\n        ans += s2;\n      break;\n    }\n  }\n  cout << ans.size() << endl;\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package math_codet;\n\nimport java.io.*;\nimport java.util.*;\n \npublic class lets_do {\n    FastReader in;\n    PrintWriter out;\n    Helper_class h;\n    final long mod = (long)1e9 + 7;\n    final int MAXN = 100005;\n    long INF = (long)1e16;\n    public static void main(String[] args) throws java.lang.Exception{\n        new lets_do().run();\n    }\n    void run() throws Exception{\n        in=new FastReader(System.in);\n        out = new PrintWriter(System.out);\n        h = new Helper_class();\n        int t = 1;\n        while(t-->0)\n            solve();\n        out.flush();\n        out.close();\n    }\n    void solve(){\n        int n = h.ni();\n        int[] arr = new int[n];\n        int i = 0;\n        int lo = 0, hi = n - 1;\n        for(i = 0; i < n; i++)\n            arr[i] = h.ni();\n        int last = 0;\n        StringBuffer str = new StringBuffer();\n        int cnt = 0;\n        while(lo <= hi){\n            int p1 = arr[lo];\n            int p2 = arr[hi];\n            if(p1 <= last && p2 <= last)\n                break;\n            if(p1 == p2){\n            \tint yo1 = 1, yo2 = 1;\n            \tint p = lo, q = hi - 1;\n                while(p <= hi - 1) {\n                \tif(arr[p] < arr[p + 1]) {\n                \t\tyo1++;\n                \t\tp++;\n                \t}\n                \telse\n                \t\tbreak;\n                }\n            \twhile(q >= lo) {\n            \t\tif(arr[q] > arr[q + 1]) {\n            \t\t\tyo2++;\n            \t\t\tq--;\n            \t\t}\n            \t\telse\n            \t\t\tbreak;\n            \t}\n            \t//h.pn(yo1 +\" \"+yo2 +\" \"+p +\" \"+q+\" \" + lo +\" \"+hi);\n                if(yo1 >= yo2) {\n                \tfor(i = 0; i < yo1; i++) {\n                    \tstr.append(\"L\");\n                    }\n                \tcnt += yo1;\n                }\n                else {\n                \tfor(i = 0; i < yo2; i++) {\n                    \tstr.append(\"R\");\n                    }\n                \tcnt += yo2;\n                }\n                break;\n            }\n            cnt++;\n            int min = Math.min(p1, p2);\n            int max = Math.max(p1, p2);\n            if(min > last) {\n                if(min == p1){\n                    str.append('L');\n                    lo++;\n                }\n                else{\n                    str.append('R');\n                    hi--;\n                }\n                last = min;\n            }\n            else {\n                if(max == p1){\n                    str.append('L');\n                    lo++;\n                }\n                else{\n                    str.append('R');\n                    hi--;\n                }\n                last = max;\n            }\n        }\n        h.pn(cnt);\n        h.pn(str);\n        \n    }\n\n\n\n    static final Comparator<Pair> com = new Comparator<Pair>(){\n        public int compare(Pair l1, Pair l2){\n            if(Integer.compare(l1.a, l2.a) != 0)\n                return Integer.compare(l1.a, l2.a);\n            else\n                return Integer.compare(l1.b, l2.b);\n        }\n    };\n\n    class Pair{\n        int a, b;\n        Pair(int p, int q){\n            a = p;\n            b = q;\n        }\n    }\n    class Edge{\n        int u , v;\n        long wt;\n        Edge(int a, int b, long w){\n            u = a;\n            v = b;\n            wt = w;\n        }\n        int other(int x) {\n            return u ^ v ^ x;\n        }\n    }\n    class Helper_class{\n        long gcd(long a, long b){return (b==0)?a:gcd(b,a%b);}\n        int gcd(int a, int b){return (b==0)?a:gcd(b,a%b);}\n        int bitcount(long n){return (n==0)?0:(1+bitcount(n&(n-1)));}\n        void p(Object o){out.print(o);}\n        void pn(Object o){out.println(o);}\n        void pni(Object o){out.println(o);out.flush();}\n        String n(){return in.next();}\n        String nln(){return in.nextLine();}\n        int ni(){return Integer.parseInt(in.next());}\n        long nl(){return Long.parseLong(in.next());}\n        double nd(){return Double.parseDouble(in.next());}\n \n        long mul(long a,long b){\n            if(a>=mod)a%=mod;\n            if(b>=mod)b%=mod;\n            a*=b;\n            if(a>=mod)a%=mod;\n            return a;\n        }\n        long modPow(long a, long p){\n            long o = 1;\n            while(p>0){\n                if((p&1)==1)o = mul(o,a);\n                a = mul(a,a);\n                p>>=1;\n            }\n            return o;\n        }\n        long add(long a, long b){\n            if(a>=mod)a%=mod;\n            if(b>=mod)b%=mod;\n            if(b<0)b+=mod;\n            a+=b;\n            if(a>=mod)a-=mod;\n            return a;\n        }\n    }\n \n    class FastReader{\n        private InputStream stream; \n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n \n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n \n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n \n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n \n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n \n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        public String nextString() {\n            return next();\n        }\n \n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n \n            return res.toString();\n        }\n \n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n \n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n \n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n} "
        },
        {
            "language": 1,
            "solution": "n = int(input())\na = [int(x) for x in list(raw_input().split(' '))]\nres = \"\"\nl, r = 0, n-1\nlst = 0\nwhile l <= r:\n    cur = []\n    if lst < a[l]:\n        cur.append((a[l], 'L'))\n    if lst < a[r]:\n        cur.append((a[r], 'R'))\n    cur.sort()\n    if len(cur) == 2 and cur[0][0] != cur[1][0]:\n        cur.pop()\n    if len(cur) == 1:\n        if cur[0][1] == 'L':\n            res += 'L'\n            lst = a[l]\n            l += 1\n        else:\n            res += 'R'\n            lst = a[r]\n            r -= 1\n    elif len(cur) == 2:\n        cl, cr = 1, 1\n        while l + cl <= r and a[l + cl] > a[l + cl - 1]:\n            cl += 1\n        while r - cr >= l and a[r - cr] > a[r - cr + 1]:\n            cr += 1\n        if cl > cr:\n            res += cl*'L'\n        else:\n            res += cr*'R'\n        break\n    else:\n        break\nprint(len(res))\nprint(res)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class subsq {\n    public static void main( String[] args ) {\n\tScanner in = new Scanner( System.in );\n\tint n = in.nextInt();\n\tint[] a = new int[n];\n\tfor ( int i = 0; i < n; i++ )\n\t    a[i] = in.nextInt();\n\tboolean d = false;\n\tint[] s = new int[n];\n\tint c = 0, l = 0, r = n - 1, sc = 0;\n\twhile ( l <= r && !d ) {\n\t    if ( a[l] > c && ( a[l] < a[r] || a[r] <= c ) ) {\n\t\ts[sc++] = -1;\n\t\tc = a[l++];\n\t    }\n\t    else if ( a[r] > c && ( a[r] < a[l] || a[l] <= c ) ) {\n\t\ts[sc++] = 1;\n\t\tc = a[r--];\n\t    }\n\t    else {\n\t\td = true;\n\t\tif ( a[l] == a[r] && a[l] > c ) {\n\t\t    int lc = c, ld = 0, rc = c, rd = 0;\n\t\t    while ( l + ld <= r && a[l + ld] > lc )\n\t\t\tlc = a[l + ld++];\n\t\t    while ( r - rd >= l && a[r - rd] > rc )\n\t\t\trc = a[r - rd++];\n\t\t    if ( ld > rd )\n\t\t\tfor ( int i = 0; i < ld; i++ )\n\t\t\t    s[sc++] = -1;\n\t\t    else\n\t\t\tfor ( int i = 0; i < rd; i++ )\n\t\t\t    s[sc++] = 1;\n\t\t}\n\t    }\n\t}\n\tSystem.out.println( sc );\n\tfor ( int i = 0; i < n; i++ )\n\t    if ( s[i] == -1 )\n\t\tSystem.out.print( \"L\" );\n\t    else if ( s[i] == 1 )\n\t\tSystem.out.print( \"R\" );\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class IncreasingSubsequence {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] s = new int[n];\n        for (int i = 0; i < n; i++) {\n            s[i] = in.nextInt();\n        }\n\n        int left = 0;\n        int right = n - 1;\n        int prev = -1;\n        int k = 0;\n\n        StringBuilder moves = new StringBuilder();\n        while (left <= right) {\n            int leftVal = s[left];\n            int rightVal = s[right];\n            if (Math.max(leftVal, rightVal) <= prev) {\n                System.out.println(k);\n                System.out.println(moves.toString());\n                return;\n            }\n            else {\n                if (Math.min(leftVal, rightVal) > prev) {\n                    if (s[left] < s[right]) {\n                        left++;\n                        k++;\n                        moves.append('L');\n                        prev = leftVal;\n                    }\n                    else if (s[right] < s[left]){\n                        right--;\n                        k++;\n                        moves.append('R');\n                        prev = rightVal;\n                    }\n                    else {\n                        StringBuilder leftMoves = new StringBuilder(\"L\");\n                        int numLeft = 1;\n                        StringBuilder rightMoves = new StringBuilder(\"R\");\n                        int numRight = 1;\n                        prev = s[left];\n                        while (left + numLeft < s.length && s[left + numLeft] > prev) {\n                            leftMoves.append(\"L\");\n                            prev = s[left + numLeft];\n                            numLeft++;\n                        }\n                        prev = s[right];\n                        while (right - numRight >= 0 && s[right - numRight] > prev) {\n                            rightMoves.append(\"R\");\n                            prev = s[right - numRight];\n                            numRight++;\n                        }\n                        if (numLeft > numRight) {\n                            moves.append(leftMoves);\n                            System.out.println(k + numLeft);\n                            System.out.println(moves);\n                            return;\n                        }\n                        else {\n                            moves.append(rightMoves);\n                            System.out.println(k + numRight);\n                            System.out.println(moves);\n                            return;\n                        }\n\n                    }\n                }\n                else {\n                    if (s[left] > s[right]) {\n                        left++;\n                        k++;\n                        moves.append('L');\n                        prev = leftVal;\n                    }\n                    else if (s[right] > s[left]){\n                        right--;\n                        k++;\n                        moves.append('R');\n                        prev = rightVal;\n                    }\n                }\n            }\n        }\n\n        System.out.println(k);\n        System.out.println(moves.toString());\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\nrange = xrange\ninput = raw_input\n\nn = int(input())\nA = [int(x) for x in input().split()]\n\n\n\n\nl = 0\nr = n\n\nstack = [-1]\nmove = []\nwhile l<r:\n    if A[l] == A[r-1]:\n        break\n    elif A[l]<A[r-1] and A[l]>stack[-1]:\n        stack.append(A[l])\n        l += 1\n        move.append('L')\n    elif A[r-1]>stack[-1]:\n        stack.append(A[r-1])\n        r -= 1\n        move.append('R')\n    else:\n        break\nstack1 = stack[:]\nstack2 = stack[:]\nmove1 = move[:]\nmove2 = move[:]\n\ni = l\nwhile i<r and stack1[-1]<A[i]:\n    stack1.append(A[i])\n    i += 1\n    move1.append('L')\n\ni = r-1\nwhile i>=l and stack2[-1]<A[i]:\n    stack2.append(A[i])\n    i -= 1\n    move2.append('R')\n\n\nif len(move1)>len(move2):\n    print len(move1)\n    print ''.join(move1)\nelse:\n    print len(move2)\n    print ''.join(move2)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.StringTokenizer;\n\npublic class cf2 {\n    public static void main(String[] args) throws Exception{\n        MScanner sc = new MScanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n=sc.nextInt();\n        int[]in=new int[n];\n        for(int i=0;i<n;i++) {\n        \tin[i]=sc.nextInt();\n        }\n        int i=0;int j=n-1;int cur=-1;StringBuilder p=new StringBuilder();\n        while(j>=i) {\n        \tif(cur>=in[i] && cur>=in[j]) {\n        \t\tbreak;\n        \t}\n        \telse {\n        \t\tif(cur>=in[i]) {\n        \t\t\tp.append('R');cur=in[j];j--;\n        \t\t}\n        \t\telse {\n        \t\t\tif(cur>=in[j]) {\n        \t\t\t\tp.append('L');cur=in[i];i++;\n        \t\t\t}\n        \t\t\telse {\n        \t\t\t\tif(in[i]<in[j]) {\n        \t\t\t\t\tp.append('L');cur=in[i];i++;\n        \t\t\t\t}\n        \t\t\t\telse {\n        \t\t\t\t\tif(in[j]<in[i]) {\n        \t\t\t\t\t\tp.append('R');cur=in[j];j--;\n        \t\t\t\t\t}\n        \t\t\t\t\telse {\n        \t\t\t\t\t\tint ansl=1;int ansr=1;\n        \t\t\t\t\t\tfor(int o=i+1;o<j;o++) {\n        \t\t\t\t\t\t\tif(in[o]>in[o-1]) {\n        \t\t\t\t\t\t\t\tansl++;\n        \t\t\t\t\t\t\t}\n        \t\t\t\t\t\t\telse {\n        \t\t\t\t\t\t\t\tbreak;\n        \t\t\t\t\t\t\t}\n        \t\t\t\t\t\t}\n        \t\t\t\t\t\tfor(int o=j-1;o>i;o--) {\n        \t\t\t\t\t\t\tif(in[o]>in[o+1]) {\n        \t\t\t\t\t\t\t\tansr++;\n        \t\t\t\t\t\t\t}\n        \t\t\t\t\t\t\telse {\n        \t\t\t\t\t\t\t\tbreak;\n        \t\t\t\t\t\t\t}\n        \t\t\t\t\t\t}\n        \t\t\t\t\t\tchar side;int times;\n        \t\t\t\t\t\tif(ansl>ansr) {\n        \t\t\t\t\t\t\tside='L';times=ansl;\n        \t\t\t\t\t\t}\n        \t\t\t\t\t\telse {\n        \t\t\t\t\t\t\tside='R';times=ansr;\n        \t\t\t\t\t\t}\n        \t\t\t\t\t\tfor(int o=0;o<times;o++) {\n        \t\t\t\t\t\t\tp.append(side);\n        \t\t\t\t\t\t}\n        \t\t\t\t\t\tbreak;\n        \t\t\t\t\t}\n        \t\t\t\t}        \t\t\t\t\n        \t\t\t}\n        \t\t}\n        \t}\n        \t//System.out.println(cur);\n        }\n        pw.println(p.length());\n        pw.println(p);\n        pw.flush();\n    }\n\n\n    static class MScanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public MScanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if (x.charAt(0) == '-') {\n                neg = true;\n                start++;\n            }\n            for (int i = start; i < x.length(); i++)\n                if (x.charAt(i) == '.') {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                } else {\n                    sb.append(x.charAt(i));\n                    if (dec)\n                        f *= 10;\n                }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg ? -1 : 1);\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class D3 {\n    public static void main(String[] Args){\n        Scanner scan=new Scanner(System.in);\n        int n=scan.nextInt();\n        int[] arr=new int[n];\n        for (int i = 0; i <n ; i++) {\n            arr[i]=scan.nextInt();\n        }\n        StringBuilder s=new StringBuilder();\n        int l=0;\n        int r=n-1;\n        int last=0;\n        while(l<=r){\n            int lDiff=arr[l]-last;\n            int rDiff=arr[r]-last;\n            if(lDiff>0&&rDiff>0){\n                if(lDiff==rDiff&&r-l>2){\n                    int lcount=1;\n                    for(int tl=l+1;tl<=r;tl++){\n                        if(arr[tl]>arr[tl-1]){\n                            lcount++;\n                        }\n                        else{\n                            break;\n                        }\n                    }\n                    int rcount=1;\n                    for(int tr=r-1;tr>=l;tr--){\n                        if(arr[tr]>arr[tr+1]){\n                            rcount++;\n                        }\n                        else{\n                            break;\n                        }\n                    }\n                    if(lcount>rcount){\n                        s.append('L');\n                        last=arr[l];\n                        l++;\n                    }\n                    else{\n                        s.append('R');\n                        last=arr[r];\n                        r--;\n                    }\n                }\n                else if(lDiff<rDiff){\n                    s.append('L');\n                    last=arr[l];\n                    l++;\n                }\n                else{\n                    s.append('R');\n                    last=arr[r];\n                    r--;\n                }\n            }\n            else if(lDiff<=0&&rDiff<=0){\n                break;\n            }\n            else{\n                if(lDiff>0){\n                    s.append('L');\n                    last=arr[l];\n                    l++;\n                }\n                else{\n                    s.append('R');\n                    last=arr[r];\n                    r--;\n                }\n            }\n        }\n        System.out.println(s.length());\n        System.out.println(s);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\ni = 0\nj = n-1\nprev = -1\nans = []\nwhile(i<=j):\n    if a[i]<a[j]:\n        if a[i]>prev:\n            ans += 'L'\n            prev = a[i]\n            i += 1\n        elif a[j]>prev:\n            ans += 'R'\n            prev = a[j]\n            j -= 1\n        else:\n            break\n    elif a[i]>a[j]:\n        if a[j]>prev:\n            ans += 'R'\n            prev = a[j]\n            j -= 1\n        elif a[i]>prev:\n            ans += 'L'\n            prev = a[i]\n            i += 1\n        else:\n            break\n    elif a[i]>prev:\n        l = 0\n        for p in range(i+1, j):\n            if a[p]>a[p-1]:\n                l += 1\n            else:\n                break\n        r = 0\n        for p in range(j-1, i, -1):\n            if a[p]>a[p+1]:\n                r += 1\n            else:\n                break\n        if r>l:\n            ans += 'R'*(r+1)\n            prev = a[j]\n            j -= 1\n        else:\n            ans += 'L'*(l+1)\n            prev = a[i]\n            i += 1\n        break\n    else:\n        break\nprint(len(ans))\nprint(*ans, sep = \"\")\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nsl = list(map(int, input().split()))\nans = \"\"\ncurrent = 0\nfor i in range(n):\n    if(current<sl[0] and current<sl[-1]):\n        #print(sl)\n        if(sl[0] == sl[-1] and i!=(n-1)):\n            l, r = 1, 1\n            for j in range(len(sl)):\n                #print(sl[j], sl[j+1])\n                if(sl[j]<sl[j+1]): l += 1\n                else: break\n            for j in range(len(sl)):\n                #print(sl[-(j+1)], sl[-(j+2)], sl[-(j+1)]>sl[-(j+2)])\n                if(sl[-(j+1)]<sl[-(j+2)]): r += 1\n                else: break\n            #print(l, r)\n            if(l>r): ans += \"L\"*l\n            else: ans += \"R\"*r\n            break\n        elif(current<sl[0] and sl[0] <= sl[-1]):\n            ans += \"L\"\n            current = sl.pop(0)\n        elif(current<sl[-1] and sl[0]>sl[-1]):\n            ans += \"R\"\n            current = sl.pop()\n    elif(current<sl[0] and current>=sl[-1]):\n        ans += \"L\"\n        current = sl.pop(0)\n    elif(current>=sl[0] and current<sl[-1]):\n        ans += \"R\"\n        current = sl.pop()\n    else: break\nprint(len(ans))\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  string res;\n  int l = 0, r = n - 1;\n  int lst = 0;\n  while (l <= r) {\n    vector<pair<int, char>> cur;\n    if (lst < a[l]) cur.push_back(make_pair(a[l], 'L'));\n    if (lst < a[r]) cur.push_back(make_pair(a[r], 'R'));\n    sort(cur.begin(), cur.end());\n    if (int(cur.size()) == 2 && cur[0].first != cur[1].first) {\n      cur.pop_back();\n    }\n    if (int(cur.size()) == 1) {\n      if (cur[0].second == 'L') {\n        res += 'L';\n        lst = a[l];\n        ++l;\n      } else {\n        res += 'R';\n        lst = a[r];\n        --r;\n      }\n    } else if (int(cur.size()) == 2) {\n      int cl = 1, cr = 1;\n      while (l + cl <= r && a[l + cl] > a[l + cl - 1]) ++cl;\n      while (r - cr >= l && a[r - cr] > a[r - cr + 1]) ++cr;\n      if (cl > cr) {\n        res += string(cl, 'L');\n      } else {\n        res += string(cr, 'R');\n      }\n      break;\n    } else {\n      break;\n    }\n  }\n  cout << res.size() << endl << res << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\nimport java.awt.geom.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.lang.Character.*;\nimport static java.lang.Integer.*;\nimport static java.lang.Double.*;\nimport static java.lang.Long.*;\nimport static java.lang.System.*;\nimport static java.util.Arrays.*;\n\npublic class C {\n\t\n\tint m,n;\n\tStringBuilder ret;\n\t\n\tvoid solveProblem() {\n\t\tn = in.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] =  in.nextInt();\n\t\t}\n\t\tint left = 0;\n\t\tint right = n-1;\n\t\tret = new StringBuilder();\n\t\tint last = -1;\n\t\twhile (left<=right) {\n\t\t\tif (a[left] < a[right] && a[left] > last) { \n\t\t\t\tret.append(\"L\");\n\t\t\t\tlast = a[left];\n\t\t\t\tleft ++;\n\t\t\t} else if (a[left] < a[right] && a[right] > last) {\n\t\t\t\tret.append(\"R\");\n\t\t\t\tlast = a[right];\n\t\t\t\tright --;\n\t\t\t} else if (a[left] > a[right] && a[right] > last) { \n\t\t\t\tret.append(\"R\");\n\t\t\t\tlast = a[right];\n\t\t\t\tright --;\n\t\t\t} else if (a[left] > a[right] && a[left] > last) { \n\t\t\t\tret.append(\"L\");\n\t\t\t\tlast = a[left];\n\t\t\t\tleft ++;\n\t\t\t} else {\n\t\t\t\tStringBuilder sl = new StringBuilder();\n\t\t\t\tif (a[left] > last) {\n\t\t\t\tsl.append(\"L\");\n\t\t\t\tint l = left+1, r = right;\n\t\t\t\twhile(l<=r && a[l]>a[l-1]) {\n\t\t\t\t\tsl.append(\"L\");\n\t\t\t\t\tl++;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tStringBuilder sr = new StringBuilder();\n\t\t\t\tif (a[right]>last) {\n\t\t\t\tint l = left;\n\t\t\t\tint r = right-1;\n\t\t\t\tsr.append(\"R\");\n\t\t\t\twhile(l<=r && a[r]>a[r+1]) {\n\t\t\t\t\tsr.append(\"R\");\n\t\t\t\t\tr--;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sl.length() > sr.length()) {\n\t\t\t\t\tret.append(sl);\n\t\t\t\t} else ret.append(sr);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tout.println(ret.length());\n\t\tout.println(ret);\n\t}\n\t\n    Scanner in = new Scanner(System.in);\n    PrintStream out = System.out; \n\t\n\tpublic static void main(String[] args) {\n\t\tC a = new C();\n\t\ta.solveProblem ();\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n    private static Scanner sc;\n    private static Printer pr;\n    private static long aLong=(long)(Math.pow(10,9)+7);\n    private static StringBuilder builder=new StringBuilder();\n    private static void solve() {\n        int n=sc.nextInt();\n        int []array=new int [n];\n        for (int i=0;i<n;i++)\n            array[i]=sc.nextInt();\n        int i=0;\n        int j=n-1;\n        int s=0;\n        boolean b=true;\n        while(i<=j){\n            if (array[i]==array[j]&&s<array[i]&&i!=j){\n                equalNumber(i,j,array);\n            }\n            if ((array[i]<array[j]||array[j]<=s)&&array[i]>s){\n                s=array[i++];\n                builder.append(\"L\");\n            }else if (s<array[j]){\n                s=array[j--];\n                builder.append(\"R\");\n            }else\n                break;\n        }\n        System.out.println(builder.length());\n        System.out.println(builder);\n\n    }\n    public static void equalNumber(int first,int last,int[]array){\n        int i=first+1;\n        while (array[i]>array[i-1])\n            i++;\n        int j=last-1;\n        while (array[j]>array[j+1])\n            j--;\n        if (i-first>last-j)\n            array[last]=0;\n        else\n            array[first]=0;\n    }\n    public boolean isPrime(int n) {\n        if (n <= 1) {\n            return false;\n        }\n        for (int i = 2; i < Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static int val(char c){\n        return c-'0';\n    }\n    public static long gcd(long a,long b) {\n        if (a == 0) return b;\n        return gcd(b % a, a);\n    }\n        private static class Pair implements Comparable<Pair> {\n        long a;\n        long b;\n\n        Pair(long a, long b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(Pair o) {\n            //if (a == o.a) {\n              //  return Long.compare(b, o.b);\n           // }\n            return Long.compare(this.b-this.a,o.b-o.a);\n            //return Long.compare(b,o.b);\n        }\n    }\n\n    public static void main(String[] args) {\n        sc = new Scanner(System.in);\n        pr = new Printer(System.out);\n        solve();\n\n        pr.close();\n       // sc.close();\n    }\n    private static class Scanner {\n        BufferedReader br;\n\n        Scanner (InputStream in) {\n            br = new BufferedReader(new InputStreamReader(in));\n        }\n\n        private boolean isPrintable(int ch) {\n            return ch >= '!' && ch <= '~';\n        }\n\n        private boolean isCRLF(int ch) {\n            return ch == '\\n' || ch == '\\r' || ch == -1;\n        }\n\n        private int nextPrintable() {\n            try {\n                int ch;\n                while (!isPrintable(ch = br.read())) {\n                    if (ch == -1) {\n                        throw new NoSuchElementException();\n                    }\n                }\n\n                return ch;\n            } catch (IOException e) {\n                throw new NoSuchElementException();\n            }\n        }\n\n        String next() {\n            try {\n                int ch = nextPrintable();\n                StringBuilder sb = new StringBuilder();\n                do {\n                    sb.appendCodePoint(ch);\n                } while (isPrintable(ch = br.read()));\n\n                return sb.toString();\n            } catch (IOException e) {\n                throw new NoSuchElementException();\n            }\n        }\n\n        int nextInt() {\n            try {\n                // parseInt from Integer.parseInt()\n                boolean negative = false;\n                int res = 0;\n                int limit = -Integer.MAX_VALUE;\n                int radix = 10;\n\n                int fc = nextPrintable();\n                if (fc < '0') {\n                    if (fc == '-') {\n                        negative = true;\n                        limit = Integer.MIN_VALUE;\n                    } else if (fc != '+') {\n                        throw new NumberFormatException();\n                    }\n                    fc = br.read();\n                }\n                int multmin = limit / radix;\n\n                int ch = fc;\n                do {\n                    int digit = ch - '0';\n                    if (digit < 0 || digit >= radix) {\n                        throw new NumberFormatException();\n                    }\n                    if (res < multmin) {\n                        throw new NumberFormatException();\n                    }\n                    res *= radix;\n                    if (res < limit + digit) {\n                        throw new NumberFormatException();\n                    }\n                    res -= digit;\n\n                } while (isPrintable(ch = br.read()));\n\n                return negative ? res : -res;\n            } catch (IOException e) {\n                throw new NoSuchElementException();\n            }\n        }\n\n        long nextLong() {\n            try {\n                // parseLong from Long.parseLong()\n                boolean negative = false;\n                long res = 0;\n                long limit = -Long.MAX_VALUE;\n                int radix = 10;\n\n                int fc = nextPrintable();\n                if (fc < '0') {\n                    if (fc == '-') {\n                        negative = true;\n                        limit = Long.MIN_VALUE;\n                    } else if (fc != '+') {\n                        throw new NumberFormatException();\n                    }\n                    fc = br.read();\n                }\n                long multmin = limit / radix;\n\n                int ch = fc;\n                do {\n                    int digit = ch - '0';\n                    if (digit < 0 || digit >= radix) {\n                        throw new NumberFormatException();\n                    }\n                    if (res < multmin) {\n                        throw new NumberFormatException();\n                    }\n                    res *= radix;\n                    if (res < limit + digit) {\n                        throw new NumberFormatException();\n                    }\n                    res -= digit;\n\n                } while (isPrintable(ch = br.read()));\n\n                return negative ? res : -res;\n            } catch (IOException e) {\n                throw new NoSuchElementException();\n            }\n        }\n\n        float nextFloat() {\n            return Float.parseFloat(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            try {\n                int ch;\n                while (isCRLF(ch = br.read())) {\n                    if (ch == -1) {\n                        throw new NoSuchElementException();\n                    }\n                }\n                StringBuilder sb = new StringBuilder();\n                do {\n                    sb.appendCodePoint(ch);\n                } while (!isCRLF(ch = br.read()));\n\n                return sb.toString();\n            } catch (IOException e) {\n                throw new NoSuchElementException();\n            }\n        }\n\n        void close() {\n            try {\n                br.close();\n            } catch (IOException e) {\n//\t\t\t\tthrow new NoSuchElementException();\n            }\n        }\n    }\n\n    private static class Printer extends PrintWriter {\n        Printer(PrintStream out) {\n            super(out);\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Objects;\nimport java.util.Random;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\n\npublic class Solution{\n\t\n\n\tpublic static void main(String[] args) {\n\n\t\tFastScanner fs = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\n\t\tint tt = 1;\n\t\twhile(tt-->0) {\n\t\t\t\n\t\t\tint n = fs.nextInt();\n\t\t\tint[] arr = fs.readArray(n);\n\t\t\t\n\t\t\tint i = 0;\n\t\t\tint j = n-1;\n\t\t\t\n\t\t\tArrayList<Character> list = new ArrayList<Character>();\n\t\t\t\n\t\t\tint pre = 0;\n\t\t\twhile(i<=j) {\n\t\t\t\tif(arr[i]<arr[j]) {\n\t\t\t\t\tif(arr[i]>pre) {\n\t\t\t\t\t\tlist.add('L');\n\t\t\t\t\t\tpre = arr[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if(arr[j]>pre) {\n\t\t\t\t\t\tlist.add('R');\n\t\t\t\t\t\tpre = arr[j];\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t\telse if(arr[j]<arr[i]) {\n\t\t\t\t\tif(arr[j]>pre) {\n\t\t\t\t\t\tlist.add('R');\n\t\t\t\t\t\tpre = arr[j];\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t\telse if(arr[i]>pre) {\n\t\t\t\t\t\tlist.add('L');\n\t\t\t\t\t\tpre = arr[i];\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(arr[i]<=pre) break;\n\t\t\t\t\tint temp = pre;\n\t\t\t\t\tint lCount = 0;\n\t\t\t\t\tint rCount = 0;\n\t\t\t\t\t\n\t\t\t\t\tint ind = i;\n\t\t\t\t\twhile(ind <= j && arr[ind]>pre) {\n\t\t\t\t\t\tpre = arr[ind];\n\t\t\t\t\t\tind++;\n\t\t\t\t\t\tlCount++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tind = j;\n\t\t\t\t\tpre = temp;\n\t\t\t\t\twhile(ind>=i && arr[ind]>pre) {\n\t\t\t\t\t\tpre = arr[ind];\n\t\t\t\t\t\tind--;\n\t\t\t\t\t\trCount++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(lCount>rCount) {\n\t\t\t\t\t\tfor(int k=0;k<lCount;k++) list.add('L');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(int k=0;k<rCount;k++) list.add('R');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tout.println(list.size());\n\t\t\tfor(char ch: list) out.print(ch);\n\t\t\tout.println(\"\");\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\tout.close();\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\tstatic final Random random=new Random();\n\t\n\tstatic void ruffleSort(int[] a) {\n\t\tint n=a.length;//shuffle, then sort \n\t\tfor (int i=0; i<n; i++) {\n\t\t\tint oi=random.nextInt(n), temp=a[oi];\n\t\t\ta[oi]=a[i]; a[i]=temp;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\t\n\t\n\tstatic class Pair<F,S>{\n\t\tF first;\n\t\tS second;\n\t\tPair(F first, S second){\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\t}\n\t\n\tstatic class FastScanner{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\n\t\tpublic String next(){\n\t\t\twhile(!st.hasMoreElements()){\n\t\t\t\ttry{\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\t\t\n\t\tpublic int nextInt(){\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic int[] readArray(int n){\n\t\t\tint[] a = new int[n];\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\t\n\t\tpublic char nextChar() {\n\t\t\treturn next().toCharArray()[0];\n\t\t}\n\t}\n\t\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 2e5;\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long a[n];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  long long l = 0, r = n - 1;\n  long long prev = 0;\n  long long ans = 0;\n  string s = \"\";\n  bool f = false, f2 = false;\n  while (l <= r) {\n    if (a[l] <= prev && a[r] <= prev) break;\n    if (a[l] == a[r] && !f && !f2) {\n      long long cnt = 1;\n      for (long long i = l + 1; i < r; i++) {\n        if (a[i] > a[i - 1])\n          cnt++;\n        else\n          break;\n      }\n      long long cnt2 = 1;\n      for (long long i = r - 1; i > l; i--) {\n        if (a[i] > a[i + 1])\n          cnt2++;\n        else\n          break;\n      }\n      if (cnt >= cnt2)\n        f = true;\n      else\n        f2 = true;\n    }\n    if (a[l] > prev && (a[l] < a[r] || f)) {\n      s += 'L';\n      prev = a[l];\n      l++;\n    } else if (a[r] > prev) {\n      s += 'R';\n      prev = a[r];\n      r--;\n    } else if (a[l] > prev) {\n      s += 'L';\n      prev = a[l];\n      l++;\n    } else\n      break;\n  }\n  cout << s.size() << endl;\n  cout << s << endl;\n}\nint32_t main() { solve(); }\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static  OutputWriter out;\n    public static void main(String[] args) throws Exception\n    {\n        Scanner in = new Scanner(System.in);\n        out = new OutputWriter(System.out);\n        int n = in.nextInt();\n        int[]a = new int[n];\n        for (int i =0;i<n;i++)\n            a[i]=in.nextInt();\n        int p0=0;\n        int p1=n-1;\n        List<Character>l = new ArrayList<>();\n        PriorityQueue<Integer> p = new PriorityQueue<>();\n        while (p0<=p1)\n        {\n            if (p.isEmpty()||(a[p0]>-p.peek()&&a[p1]>-p.peek())) {\n                if (a[p0] < a[p1]) {\n                    l.add('L');\n                    p.add(-a[p0]);\n                    p0++;\n                }\n                else if (a[p1]<a[p0]){\n                    l.add('R');\n                    p.add(-a[p1]);\n                    p1--;\n                }\n                else\n                {\n                    int  p2=p0+1;\n                    int p3 = p1-1;\n                    int max0=a[p0];\n                    int max1 = a[p1];\n                    while (p2<=p1&&p3>=p0)\n                    {\n                        if (a[p2]<=max0&&a[p3]>max1)\n                        {\n                            while (p1>=p0)\n                            {\n                                if (p.isEmpty()||a[p1]>-p.peek())\n                                {\n                                    l.add('R');\n                                    p.add(-a[p1]);\n                                    p1--;\n                                }\n                                else\n                                    break;\n\n                            }\n                            p0=n;\n                            p1=-1;\n                            break;\n                        }\n                        else if (a[p2]>max0&&a[p3]<=max1)\n                        {\n                            while (p0<=p1)\n                            {\n                                if (p.isEmpty()||a[p0]>-p.peek())\n                                {\n                                    l.add('L');\n                                    p.add(-a[p0]);\n                                    p0++;\n                                }\n                                else\n                                    break;\n                            }\n                            p0=n;\n                            p1=-1;\n                            break;\n                        }\n                        max0=a[p2];\n                        max1=a[p3];\n                        p2++;\n                        p3--;\n                    }\n                    if (p0!=-1)\n                    {\n\n                        while (p0<=p1)\n                        {\n                            if (p.isEmpty()||a[p1]>-p.peek())\n                            {\n                                l.add('R');\n                                p.add(-a[p1]);\n                                p1--;\n                            }\n                            else\n                                break;\n                        }\n                        p0=n;\n                        p1=-1;\n                        break;\n                    }\n\n                }\n            }\n            else\n            {\n                if (a[p0]>-p.peek())\n                {\n                    l.add('L');\n                    p.add(-a[p0]);\n                    p0++;\n                }\n                else if (a[p1]>-p.peek())\n                {\n                    l.add('R');\n                    p.add(-a[p1]);\n                    p1--;\n                }\n                else\n                    break;\n            }\n        }\n        out.printLine(l.size());\n        for (char item:l\n                ) {\n            out.print(item);\n        }\n        out.flush();\n    }\n\n}\n\nclass Graph {\n\n\n    int n;\n    ArrayList<Integer>[] adjList;\n\n    public Graph(int n) {\n        this.n = n;\n        adjList = new ArrayList[n];\n        for (int i = 0; i < n; i++)\n            adjList[i] = new ArrayList<>();\n    }\n\n}\nclass pair  implements Comparable\n{\n\n    int key;\n    int value;\n\n    public pair(Object key, Object value) {\n\n        this.key = (int)key;\n        this.value=(int)value;\n\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        pair temp =(pair)o;\n        return  key-temp.key;\n    }\n}\nclass Scanner {\n\n    StringTokenizer st;\n    BufferedReader br;\n\n    public Scanner(InputStream s) {\n        br = new BufferedReader(new InputStreamReader(s));\n    }\n\n    public Scanner (FileReader f) {\n        br = new BufferedReader(f);\n    }\n\n    public String next() throws IOException {\n        while (st == null || !st.hasMoreTokens())\n            st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    public int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    public long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    public String nextLine() throws IOException {\n        return br.readLine();\n    }\n\n    public double nextDouble() throws IOException {\n        String x = next();\n        StringBuilder sb = new StringBuilder(\"0\");\n        double res = 0, f = 1;\n        boolean dec = false, neg = false;\n        int start = 0;\n        if (x.charAt(0) == '-') {\n            neg = true;\n            start++;\n        }\n        for (int i = start; i < x.length(); i++)\n            if (x.charAt(i) == '.') {\n                res = Long.parseLong(sb.toString());\n                sb = new StringBuilder(\"0\");\n                dec = true;\n            } else {\n                sb.append(x.charAt(i));\n                if (dec)\n                    f *= 10;\n            }\n        res += Long.parseLong(sb.toString()) / f;\n        return res * (neg ? -1 : 1);\n    }\n\n    public boolean ready() throws IOException {\n        return br.ready();\n    }\n\n    public boolean nextEmpty() throws IOException {\n        String s = nextLine();\n        st = new StringTokenizer(s);\n        return s.isEmpty();\n    }\n}\nclass OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n        this.writer = new PrintWriter(writer);\n    }\n\n    public void print(Object... objects) {\n        for (int i = 0; i < objects.length; i++) {\n            if (i != 0)\n                writer.print(' ');\n            writer.print(objects[i]);\n        }\n    }\n\n\n    public void printLine(Object... objects) {\n        print(objects);\n        writer.println();\n    }\n\n    public void close() {\n        writer.close();\n    }\n\n    public void flush() {\n        writer.flush();\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\nimport java.io.*;\nimport java.math.*;\nimport java.awt.geom.*;\n\nimport static java.lang.Math.*;\n\npublic class Solution implements Runnable {\n\n\tlong mod1 = (long) 1e9 + 7;\n\tint mod2 = 998244353;\n\n\tpublic void solve() throws Exception {\n\t\tint n=sc.nextInt();\n\t\tint arr[]=sc.readArray(n);\n\t\tString result=\"\";\n\t\tint size=0;\n\t\tint l=0,r=n-1;\n\t\tint left[]=new int[n];\n\t\tint right[]=new int[n];\n\t\tint count=1;\n\t\t\n\t\t//right to left\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tleft[i]=count;\n\t\t\tif(i==n-1) break;\n\t\t\tif(arr[i]>arr[i+1]) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tcount=1;\n\t\t//left to right\n\t\tfor(int i=n-1;i>=0;i--) {\n\t\t\tright[i]=count;\n\t\t\tif(i==0) break;\n\t\t\tif(arr[i]>arr[i-1]) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcount=1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tint least = 0;\n\t\tStringBuilder sb=new StringBuilder();\n\t\t\n//\t\tout.println(Arrays.toString(left));\n\t\tcount=0;\n\t\twhile(l<=r) {\n\t\t\tif(arr[l]<=least && arr[r]<=least) {\n//\t\t\t\tout.println(\"fuck\"+\" \"+least+\" \"+l+\" \"+r);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(arr[l]<=least) {\n\t\t\t\tleast = arr[r];\n\t\t\t\tr--;\n\t\t\t\tcount++;\n\t\t\t\tsb.append(\"R\");\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(arr[r]<=least) {\n\t\t\t\tleast = arr[l];\n\t\t\t\tl++;\n\t\t\t\tcount++;\n\t\t\t\tsb.append(\"L\");\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(arr[l]<arr[r]) {\n\t\t\t\tleast = arr[l];\n\t\t\t\tl++;\n\t\t\t\tcount++;\n\t\t\t\tsb.append(\"L\");\n\t\t\t\n\t\t\t}\n\t\t\telse if(arr[l]>arr[r]) {\n\t\t\t\tleast=arr[r];\n\t\t\t\tr--;\n\t\t\t\tcount++;\n\t\t\t\tsb.append(\"R\");\n\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(right[l]>left[r]) {\n\t\t\t\t\tcount+=right[l];\n\t\t\t\t\tfor(int i=0;i<right[l];i++) {\n\t\t\t\t\t\tsb.append(\"L\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcount+=left[r];\n\t\t\t\t\tfor(int i=0;i<left[r];i++) {\n\t\t\t\t\t\tsb.append(\"R\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tout.println(count);\n\t\tout.println(sb);\n\t\t\n\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}\n\n\tstatic void sort(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a)\n\t\t\tl.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = l.get(i);\n\t}\n\n\tstatic long ncr(int n, int r, long p) {\n\t\tif (r > n)\n\t\t\treturn 0l;\n\t\tif (r > n - r)\n\t\t\tr = n - r;\n\n\t\tlong C[] = new long[r + 1];\n\n\t\tC[0] = 1;\n\n\t\tfor (int i = 1; i <= n; i++) {\n\n\t\t\tfor (int j = Math.min(i, r); j > 0; j--)\n\t\t\t\tC[j] = (C[j] + C[j - 1]) % p;\n\t\t}\n\t\treturn C[r] % p;\n\t}\n\n\tvoid sieveOfEratosthenes(boolean prime[], int size) {\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tprime[i] = true;\n\n\t\tfor (int p = 2; p * p < size; p++) {\n\t\t\tif (prime[p] == true) {\n\t\t\t\tfor (int i = p * p; i < size; i += p)\n\t\t\t\t\tprime[i] = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic int LowerBound(int a[], int x) { // smallest index having value >= x; returns 0-based index\n\t\tint l = -1, r = a.length;\n\t\twhile (l + 1 < r) {\n\t\t\tint m = (l + r) >>> 1;\n\t\t\tif (a[m] >= x)\n\t\t\t\tr = m;\n\t\t\telse\n\t\t\t\tl = m;\n\t\t}\n\t\treturn r;\n\t}\n\n\tstatic int UpperBound(int a[], int x) {// biggest index having value <= x; returns 1-based index\n\t\tint l = -1, r = a.length;\n\t\twhile (l + 1 < r) {\n\t\t\tint m = (l + r) >>> 1;\n\t\t\tif (a[m] <= x)\n\t\t\t\tl = m;\n\t\t\telse\n\t\t\t\tr = m;\n\t\t}\n\t\treturn l + 1;\n\t}\n\n\tpublic long power(long x, long y, long p) {\n\t\tlong res = 1;\n\t\t// out.println(x+\" \"+y);\n\t\tx = x % p;\n\t\tif (x == 0)\n\t\t\treturn 0;\n\n\t\twhile (y > 0) {\n\t\t\tif ((y & 1) == 1)\n\t\t\t\tres = (res * x) % p;\n\t\t\ty = y >> 1;\n\t\t\tx = (x * x) % p;\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic Throwable uncaught;\n\n\tBufferedReader in;\n\tFastScanner sc;\n\tPrintWriter out;\n\n\t@Override\n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout = new PrintWriter(System.out);\n\t\t\tsc = new FastScanner(in);\n\t\t\tsolve();\n\t\t} catch (Throwable uncaught) {\n\t\t\tSolution.uncaught = uncaught;\n\t\t} finally {\n\t\t\tout.close();\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws Throwable {\n\t\tThread thread = new Thread(null, new Solution(), \"\", (1 << 26));\n\t\tthread.start();\n\t\tthread.join();\n\t\tif (Solution.uncaught != null) {\n\t\t\tthrow Solution.uncaught;\n\t\t}\n\t}\n\n}\n\nclass FastScanner {\n\n\tBufferedReader in;\n\tStringTokenizer st;\n\n\tpublic FastScanner(BufferedReader in) {\n\t\tthis.in = in;\n\t}\n\n\tpublic String nextToken() throws Exception {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\tst = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic int nextInt() throws Exception {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic int[] readArray(int n) throws Exception {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nextInt();\n\t\treturn a;\n\t}\n\n\tpublic long nextLong() throws Exception {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tpublic double nextDouble() throws Exception {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int power(long long int x, unsigned long long int y) {\n  long long int res = 1;\n  while (y > 0) {\n    if (y & 1) {\n      res = res * x;\n    }\n    y = y >> 1;\n    x = x * x;\n  }\n  return res;\n}\nlong long int powermod(long long int x, unsigned long long int y,\n                       long long int p) {\n  long long int res = 1;\n  x = x % p;\n  while (y > 0) {\n    if (y & 1) {\n      res = (res * x) % p;\n    }\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nint32_t main() {\n  long long int n;\n  cin >> n;\n  vector<long long int> v;\n  for (long long int i = (long long int)(0); i < (long long int)(n); i++) {\n    long long int temp;\n    cin >> temp;\n    v.push_back(temp);\n  }\n  long long int l = 0, r = n - 1;\n  long long int prev = 0;\n  string ans = \"\";\n  while (l <= r) {\n    if (v[l] > prev && v[l] < v[r]) {\n      ans += \"L\";\n      prev = v[l];\n      l++;\n    } else if (v[r] > prev) {\n      ans += \"R\";\n      prev = v[r];\n      r--;\n    } else if (v[l] > prev) {\n      ans += \"L\";\n      prev = v[l];\n      l++;\n    } else\n      break;\n  }\n  l = 0;\n  r = n - 1;\n  string ans2 = \"\";\n  prev = 0;\n  while (l <= r) {\n    if (v[r] > prev && v[r] < v[l]) {\n      ans2 += \"R\";\n      prev = v[r];\n      r--;\n    } else if (v[l] > prev) {\n      ans2 += \"L\";\n      prev = v[l];\n      l++;\n    } else if (v[r] > prev) {\n      ans2 += \"R\";\n      prev = v[r];\n      r--;\n    } else\n      break;\n  }\n  if (ans2.length() > ans.length()) ans = ans2;\n  cout << ans.length() << \"\\n\";\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nlength = 1\nfor i in range(1, n):\n    if a[i] <= a[i-1]: break\n    length += 1\nl = [0] * n\nfor i in range(length):\n    l[i] = length - i - 1\n\nlength = 1\nfor i in range(n-2, -1, -1):\n    if a[i] <= a[i+1]: break\n    length += 1\nr = [0] * n\nfor i in range(n-1, n-1-length, -1):\n    r[i] = length - n + i\n\nres = []\nlo, hi = 0, n-1\nlast = 0\nwhile lo <= hi:\n    if a[lo] <= last and a[hi] <= last: break\n    if a[lo] == a[hi]:\n        if l[lo] >= r[hi]:\n            res.append('L')\n            last = a[lo]\n            lo += 1\n        else:\n            res.append('R')\n            last = a[hi]\n            hi -= 1\n    elif a[lo] < a[hi]:\n        if a[lo] > last:\n            res.append('L')\n            last = a[lo]\n            lo += 1\n        elif a[hi] > last:\n            res.append('R')\n            last = a[hi]\n            hi -= 1\n    else:\n        if a[hi] > last:\n            res.append('R')\n            last = a[hi]\n            hi -= 1\n        elif a[lo] > last:\n            res.append('L')\n            last = a[lo]\n            lo += 1\n\n\nprint(len(res))\nprint(''.join(res))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class ProblemC_2 {\n\n    public static InputStream inputStream = System.in;\n\n    public static OutputStream outputStream = System.out;\n\n    public static void main(String[] args) {\n        MyScanner scanner = new MyScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n\n        int n = scanner.nextInt();\n        LinkedList<Integer> linkedList = new LinkedList<>();\n        for (int i = 0; i < n; i++) {\n            linkedList.add(scanner.nextInt());\n        }\n\n        StringBuilder sb = new StringBuilder();\n        int x = 0;\n        if (linkedList.getFirst() > linkedList.getLast()) {\n            sb.append('R');\n            x = linkedList.removeLast();\n        } else if (linkedList.getFirst() < linkedList.getLast()) {\n            sb.append('L');\n            x = linkedList.removeFirst();\n        } else {\n            sb = getIncreasedList(new ArrayList<>(linkedList));\n            out.println(sb.length());\n            out.println(sb.toString());\n            out.flush();\n            return;\n        }\n\n        for (int i = 1; i < n; i++) {\n            if (linkedList.getFirst() <= x && linkedList.getLast() <= x) {\n                break;\n            }\n            if (linkedList.getFirst().equals(linkedList.getLast())) {\n                sb.append(getIncreasedList(new ArrayList<>(linkedList)));\n                break;\n            }\n\n            if (linkedList.getFirst() > x && linkedList.getLast() <= x) {\n                sb.append('L');\n                x = linkedList.removeFirst();\n            } else if (linkedList.getLast() > x && linkedList.getFirst() <= x) {\n                sb.append('R');\n                x = linkedList.removeLast();\n            } else\n            if (linkedList.getFirst() < linkedList.getLast()) {\n                sb.append('L');\n                x = linkedList.removeFirst();\n            } else {\n                sb.append('R');\n                x = linkedList.removeLast();\n            }\n        }\n\n        out.println(sb.length());\n        out.println(sb.toString());\n\n\n\n\n\n        out.flush();\n    }\n\n    private static StringBuilder getIncreasedList(List<Integer> list) {\n        int x = 1;\n        for (int i = 1; i < list.size(); i++) {\n            if (list.get(i) > list.get(i - 1)) {\n                x++;\n            } else {\n                break;\n            }\n        }\n        int y = 1;\n        for (int i = list.size() - 2; i >= 0; i--) {\n            if (list.get(i) > list.get(i + 1)) {\n                y++;\n            } else {\n                break;\n            }\n        }\n        StringBuilder stringBuilder = new StringBuilder();\n        if (x > y) {\n            for (int i = 0; i < x; i++) {\n                stringBuilder.append('L');\n            }\n        } else {\n            for (int i = 0; i < y; i++) {\n                stringBuilder.append('R');\n            }\n        }\n        return stringBuilder;\n    }\n\n    private static class MyScanner {\n        private BufferedReader bufferedReader;\n        private StringTokenizer stringTokenizer;\n\n        private MyScanner(InputStream inputStream) {\n            bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        private String next() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        private int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        private long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        private double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        private String nextLine() {\n            String str = \"\";\n            try {\n                str = bufferedReader.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    private static class Pair<F, S> {\n\n        private F first;\n\n        private S second;\n\n        public Pair() {}\n\n        public Pair(F first, S second) {\n            this.first = first;\n            this.second = second;\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Div2553 {\n\n    public static void main(String[] args) throws IOException {\n\n        BufferedReader gi = new BufferedReader(new InputStreamReader(System.in));\n\n        String[] s1 = gi.readLine().split(\" \");\n        int n = Integer.parseInt(s1[0]);\n\n        int[] tab = parseArray(gi);\n        int k = 0, l = n - 1;\n        ArrayList<Integer> ar = new ArrayList<>(n);\n        char[] c = new char[n];\n        int j = 0, h = 0, h1,hf;\n\n        int inc_equleft = 0, incequleright = 0;\n        while (l >= k) {\n            if (Math.max(tab[k], tab[l]) <= h) {\n                break;\n            }\n            if (tab[k] == tab[l] && k != l) {\n\n                h1 = h;\n                hf=h;\n                while (k <= incequleright + l && (h < tab[l + incequleright])) {\n                    h = tab[l + incequleright];\n                    incequleright--;\n\n                }\n                while ((inc_equleft + k <= l) && (h1 < tab[inc_equleft + k])) {\n                    h1 = tab[inc_equleft + k];\n                    inc_equleft++;\n\n                }\n                if (Math.abs(incequleright)> inc_equleft) {\n                    while (tab[l] > hf) {\n                        ar.add(tab[l]);\n                        hf = tab[l];\n                        l--;\n                        c[j++] = 'R';\n                    }\n                    break;\n                } else {\n                   \n                    while ((hf < tab[k])) {\n                        ar.add(tab[k]);\n                        hf = tab[k];\n                        k++;\n\n                        c[j] = 'L';\n                        j++;\n                    }\n                    break;\n                }\n\n            } else if (Math.min(tab[k], tab[l]) == tab[l] && (h < tab[l])) {\n                ar.add(tab[l]);\n                h = tab[l];\n                l--;\n                c[j++] = 'R';\n\n            } else if (Math.min(tab[k], tab[l]) == tab[k] && (h < tab[k])) {\n                ar.add(tab[k]);\n                h = tab[k];\n                k++;\n\n                c[j] = 'L';\n                j++;\n            } else if (tab[l] > h) {\n                ar.add(tab[l]);\n                h = tab[l];\n                l--;\n                c[j++] = 'R';\n            } else if ((h < tab[k])) {\n                ar.add(tab[k]);\n                h = tab[k];\n                k++;\n\n                c[j] = 'L';\n                j++;\n            }\n\n        }\n\n        PrintWriter pr = new PrintWriter(System.out);\n        pr.println(j);\n        for (int i = 0; i < j; i++) {\n            pr.print(c[i]);\n        }\n        pr.println();\n        pr.close();\n\n    }\n\n    static int[] parseArray(BufferedReader gi) throws IOException {\n        String[] line = gi.readLine().trim().split(\" \");\n        int[] rez = new int[line.length];\n        for (int k = 0; k < line.length; k++) {\n            rez[k] = Integer.parseInt(line[k]);\n        }\n        return rez;\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    last = -1\n    anz = []\n    stop = False\n    while i != j:\n        if a[i] == a[j]:\n            stop = True\n            break\n        if a[i] < a[j]:\n            if a[i] > last:\n                last = a[i]\n                i += 1\n                anz.append(\"L\") \n            elif a[j] > last:\n                last = a[j]\n                j -= 1\n                anz.append(\"R\")\n            else:\n                break\n        else:\n            if a[j] > last:\n                last = a[j]\n                j -= 1\n                anz.append(\"R\") \n            elif a[i] > last:\n                last = a[i]\n                i += 1\n                anz.append(\"L\")\n            else:\n                break\n    if i == j and a[i] > last:\n        anz.append(\"R\")\n    if stop:\n        l = []\n        r = []\n        i1 = i\n        last1 = last\n        while last1 < a[i] and i != j:\n            last1 = a[i]\n            i += 1\n            l.append(\"L\")\n        while last < a[j] and i1 != j:\n            last = a[j]\n            j -= 1\n            r.append(\"R\")\n        if len(l) > len(r):\n            print(len(anz) + len(l))\n            for elem in anz:\n                print(elem, end=\"\")\n            for elem in l:\n                print(elem, end=\"\")\n        else:\n            print(len(r) + len(anz))\n            for elem in anz:\n                print(elem, end=\"\")\n            for elem in r:\n                print(elem, end=\"\")            \n    else:\n        print(len(anz))\n        for elem in anz:\n            print(elem, end=\"\")\nmain()"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\nup_acc1 = [0]\n\nfor i in range(n-2, -1, -1):\n    up_acc1.append(up_acc1[-1]+1 if a[i]<a[i+1] else 0)\n\nup_acc1.reverse()\nup_acc2 = [0]\n\nfor i in range(1, n):\n    up_acc2.append(up_acc2[-1]+1 if a[i-1]>a[i] else 0)\n\nl_idx, r_idx = 0, n-1\nl = [-1]\nans = []\n\nwhile l_idx<=r_idx:\n    if a[l_idx]>l[-1] and a[r_idx]>l[-1]:\n        if a[l_idx]==a[r_idx]:\n            if up_acc1[l_idx]>=up_acc2[r_idx]:\n                l.append(a[l_idx])\n                ans.append('L')\n                l_idx += 1\n            else:\n                l.append(a[r_idx])\n                ans.append('R')\n                r_idx -= 1\n        elif a[l_idx]<a[r_idx]:\n            l.append(a[l_idx])\n            ans.append('L')\n            l_idx += 1\n        else:\n            l.append(a[r_idx])\n            ans.append('R')\n            r_idx -= 1\n    elif a[l_idx]>l[-1]:\n        l.append(a[l_idx])\n        ans.append('L')\n        l_idx += 1\n    elif a[r_idx]>l[-1]:\n        l.append(a[r_idx])\n        ans.append('R')\n        r_idx -= 1\n    else:\n        break\n\nprint(len(ans))\nprint(''.join(ans))"
        },
        {
            "language": 3,
            "solution": "def solve():\n    N = int(input())\n    lst  = list(map(int, input().split()))\n    ans = \"\"\n\n    if lst.count(lst[0]) == N:\n        print(\"1\")\n        print(\"L\")\n        exit()\n\n    def judge_left(left, rigt, lst): # \u305d\u308c\u305e\u308c\u306eLIS\u306e\u9577\u3055\u3092\u6c42\u3081\u308b\n        left_leng = 1\n        rigt_leng = 1\n        now_l = lst[left]\n        now_r = lst[rigt]\n        N = len(lst)\n        for e,l in enumerate(lst[left+1:], left+1):\n            if e > rigt: break\n            if l > now_l:\n                left_leng += 1\n                now_l = l\n            else: break\n        \n        e = rigt-1\n        l = lst[e]\n        while True:\n            if e < left: break\n            if l > now_r:\n                rigt_leng += 1\n                now_r = l\n            else:\n                break\n\n            e = e - 1\n            l = lst[e]\n        \n        if left_leng < rigt_leng:\n            return \"RIGHT\"\n        else:\n            return \"LEFT\"\n            \n        \n        # while lst[left] == lst[rigt] and left < rigt:\n        #     left += 1\n        #     rigt -= 1\n\n        # if left == rigt:\n        #     return 0\n        # if left > rigt:\n        #     return 0 # 0 \u306f\u3069\u3063\u3061\u3067\u3082\u3044\u3044\n        # if lst[left] < lst[rigt]:\n        #     return \n        \n\n    done = 0\n    left = 0\n    rigt = len(lst) - 1\n    while True:\n        if left <= rigt:\n            l , r = lst[left], lst[rigt]\n            if max(l,r) <= done:\n                left = rigt + 1\n                continue\n            else:\n                if min(l,r) > done:\n                    if l == r :\n                        v_ = judge_left(left,rigt, lst)\n                        if v_ == \"LEFT\":\n                            left += 1\n                            done = l\n                            ans += \"L\"\n                        else:\n                            rigt -= 1\n                            done = r\n                            ans += \"R\"\n                        continue\n                    elif l < r :\n                        left += 1\n                        done = l\n                        ans += \"L\"\n                        continue\n                    elif r < l :\n                        rigt -= 1\n                        done = r\n                        ans += \"R\"\n                else:\n                    if l > r:\n                        left += 1\n                        done = l\n                        ans += \"L\"\n                    elif r > l:\n                        rigt -= 1\n                        done = r\n                        ans += \"R\"\n                    elif r == l:\n                        v_ = judge_left(left,rigt, lst)\n                        if v_ == \"LEFT\":\n                            left += 1\n                            done = l\n                            ans += \"L\"\n                        else:\n                            rigt -= 1\n                            done = r\n                            ans += \"R\"\n                        continue                        \n\n        else:\n            print(len(ans))\n            print(ans)\n            exit()\n        \nif __name__ == \"__main__\":\n    solve()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int sumOfDigits(long long int a) {\n  long long int sum = 0;\n  while (a) {\n    sum += a % 10;\n    a = a / 10;\n  }\n  return sum;\n}\nvector<long long int> getPrimeFactors(long long int n) {\n  vector<long long int> vec;\n  if (n == 0 || n == 1) return vec;\n  while (n % 2 == 0) {\n    vec.push_back(2);\n    n = n / 2;\n  }\n  for (long long int i = 3; i <= sqrtl(n); i = 2 + i) {\n    while (n % i == 0) {\n      n = n / i;\n      vec.push_back(i);\n    }\n  }\n  if (n > 2) vec.push_back(n);\n  return vec;\n}\nvector<vector<long long int> > getNoOfPrimeFactors(long long int n) {\n  vector<long long int> v = getPrimeFactors(n);\n  vector<vector<long long int> > v2(2);\n  if (v.size() == 0) return v2;\n  long long int i, k, j;\n  for (i = 0; i < v.size();) {\n    v2[0].push_back(v[i]);\n    k = 0;\n    j = v[i];\n    while (i < v.size() && v[i] == j) {\n      i++;\n      k++;\n    }\n    v2[1].push_back(k);\n  }\n  return v2;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  long long int n, i, j, k;\n  cin >> n;\n  long long int a[n];\n  for (i = 0; i < n; i++) cin >> a[i];\n  string s;\n  i = 0;\n  j = n - 1;\n  if (a[i] == a[j] && i != j) {\n    string s2, s3;\n    long long int t = k, o = i;\n    while (i < j && a[i] > t) {\n      t = a[i];\n      i++;\n      s2.push_back('L');\n    }\n    i = o;\n    t = k;\n    while (i < j && a[j] > t) {\n      t = a[j];\n      j--;\n      s3.push_back('R');\n    }\n    if (s3.size() > s2.size())\n      s = s3;\n    else\n      s = s2;\n    cout << s.size() << \"\\n\";\n    cout << s;\n  } else {\n    if (a[i] < a[j]) {\n      k = a[i];\n      i++;\n      s.push_back('L');\n    } else {\n      k = a[j];\n      j--;\n      s.push_back('R');\n    }\n    while (i <= j) {\n      if (a[i] > k && a[j] > k) {\n        if (a[i] == a[j] && i != j) {\n          string s2, s3;\n          long long int t = k, o = i;\n          while (i < j && a[i] > t) {\n            t = a[i];\n            i++;\n            s2.push_back('L');\n          }\n          i = o;\n          t = k;\n          while (i < j && a[j] > t) {\n            t = a[j];\n            j--;\n            s3.push_back('R');\n          }\n          if (s3.size() > s2.size())\n            s = s + s3;\n          else\n            s = s + s2;\n          break;\n        } else if (a[i] < a[j]) {\n          k = a[i];\n          i++;\n          s.push_back('L');\n        } else {\n          k = a[j];\n          j--;\n          s.push_back('R');\n        }\n      } else if (a[i] > k) {\n        k = a[i];\n        i++;\n        s.push_back('L');\n      } else if (a[j] > k) {\n        k = a[j];\n        j--;\n        s.push_back('R');\n      } else\n        break;\n    }\n    cout << s.size() << \"\\n\";\n    cout << s;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  cin.tie(0);\n  cout.tie(0);\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n;\n  cin >> n;\n  int max1 = 0, a[n + 1], left = 0, flag = 0, right = n - 1, count1 = 0,\n      flagl = 0, flagr = 0;\n  vector<char> vectl, vectr;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  vector<char> vect;\n  while (left <= right) {\n    if (a[left] == a[right] && max1 < a[left]) {\n      int i = left;\n      while (i < right && a[i] < a[i + 1]) {\n        flagl = 1;\n        vectl.push_back('L');\n        i++;\n      }\n      vectl.push_back('L');\n      i = right;\n      while (i > left && a[i] < a[i - 1]) {\n        flagr = 1;\n        vectr.push_back('R');\n        i--;\n      }\n      vectr.push_back('R');\n      break;\n    } else if (a[left] < a[right] && max1 < a[left]) {\n      vect.push_back('L');\n      max1 = a[left];\n      left++;\n    } else if (a[right] < a[left] && max1 < a[right]) {\n      vect.push_back('R');\n      max1 = a[right];\n      right--;\n    } else if (max1 < a[left]) {\n      vect.push_back('L');\n      max1 = a[left];\n      left++;\n    } else if (max1 < a[right]) {\n      vect.push_back('R');\n      max1 = a[right];\n      right--;\n    } else {\n      break;\n    }\n    count1++;\n  }\n  if (vectl.size() > vectr.size()) {\n    cout << count1 + vectl.size() << endl;\n    for (int i = 0; i < count1; i++) cout << vect[i];\n    for (int i = 0; i < vectl.size(); i++) cout << vectl[i];\n  } else {\n    cout << count1 + vectr.size() << endl;\n    for (int i = 0; i < count1; i++) cout << vect[i];\n    for (int i = 0; i < vectr.size(); i++) cout << vectr[i];\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn=int(sys.stdin.readline())\narr=list(map(int,sys.stdin.readline().split()))\nleft=[0 for _ in range(n)]\nright=[0 for _ in range(n)]\nleft[0]=1\nright[-1]=1\nif n==1:\n    print(1)\n    print('L')\nelse:\n    for i in range(1,n):\n        if arr[i-1]<arr[i]:\n            pass\n        else:\n            break\n    count=1\n    for j in range(i-1,-1,-1):\n        left[j]=count\n        count+=1\n    for i in range(n-2,-1,-1):\n        if arr[i+1]<arr[i]:\n            pass\n        else:\n            break\n    count=1\n    #print(i,'iiii')\n    for j in range(i+1,n):\n        right[j]=count\n        count+=1\n    #print(left,'left')\n    #print(right,'right')\n    ans=[0 for _ in range(n)]\n    l,r=0,n-1\n    i=0\n    a=[0 for _ in range(n)]\n    z=True\n    lim=0\n    last=-float('inf')\n    while l<=r and z:\n        #print(l,'l',r,'r')\n        if arr[l]<arr[r]:\n            if arr[l]>last and left[l]>0:\n                last=arr[l]\n                ans[i]=arr[l]\n                a[i]='L'\n                l+=1\n                lim+=1\n                i+=1\n                continue\n            if arr[r]>last and right[r]>0:\n                last=arr[r]\n                ans[i]=arr[r]\n                a[i]='R'\n                r-=1\n                lim+=1\n                i+=1\n                continue\n            z=False\n        if arr[r]<arr[l]:\n            if arr[r]>last and right[r]>0:\n                last=arr[r]\n                ans[i]=arr[r]\n                a[i]='R'\n                r-=1\n                lim+=1\n                i+=1\n                continue\n            if arr[l]>last and left[l]>0:\n                last=arr[l]\n                a[i]='L'\n                ans[i]=arr[l]\n                l+=1\n                lim+=1\n                i+=1\n                continue\n        z=False\n    if arr[l]==arr[r]:\n        if left[l]>right[r]:\n            c=left[l]\n            #print(c,'c',i,'i',l,'l')\n            while c>0:\n                ans[i]=arr[l]\n                l+=1\n                a[i]='L'\n                lim+=1\n                i+=1\n                c-=1\n        else:\n            c=right[r]\n            #print(c,'c',r,'r')\n            while c>0:\n                ans[i]=arr[r]\n                r-=1\n                lim+=1\n                a[i]='R'\n                i+=1\n                c-=1\n    #print(ans,'ans')\n    print(lim)\n    print(''.join(x for x in a[:lim]))\n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s;\nint main() {\n  int n;\n  cin >> n;\n  int A[n + 10];\n  for (int i = 1; i <= n; i++) cin >> A[i];\n  int temp = -1;\n  int b = 1, e = n;\n  while (b <= e) {\n    if (A[b] < A[e]) {\n      if (A[b] > temp) {\n        temp = A[b];\n        s += \"L\";\n        b++;\n      } else if (A[e] > temp) {\n        temp = A[e];\n        s += \"R\";\n        e--;\n      } else\n        break;\n    } else if (A[b] > A[e]) {\n      if (A[e] > temp) {\n        temp = A[e];\n        s += \"R\";\n        e--;\n      } else if (A[b] > temp) {\n        temp = A[b];\n        s += \"L\";\n        b++;\n      } else\n        break;\n    } else {\n      int l = 0, r = 0;\n      if (A[b] <= temp) break;\n      for (int i = b; i < e; i++) {\n        if (A[i] < A[i + 1])\n          l++;\n        else\n          break;\n      }\n      for (int i = e; i > b; i--) {\n        if (A[i] < A[i - 1])\n          r++;\n        else\n          break;\n      }\n      if (l > r) {\n        temp = A[b];\n        s += \"L\";\n        b++;\n      } else {\n        temp = A[e];\n        s += \"R\";\n        e--;\n      }\n    }\n  }\n  cout << s.size() << endl;\n  cout << s << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class c {\n\tstatic int[] arr;\n\tstatic StringBuilder best;\n\tstatic String[][] memo;\n\tpublic static void main(String[] args) throws IOException {\n\t\tFastScanner sc = new FastScanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tarr = new int[n];\n\t\t\n\t\tfor (int i = 0 ; i < n ; i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tint l = 0, r = n-1;\n\t\tint num = 0;\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint rSide = 0;\n\t\tint lSide = 0;\n\t\tint movement = 0;\n\t\tboolean right = true;\n\t\twhile (r >= l) {\n\t\t\tif (arr[r] < arr[l] && arr[r] > num) {\n\t\t\t\tsb.append(\"R\");\n\t\t\t\tnum = arr[r];\n\t\t\t\tr--;\n\t\t\t} else if (arr[l] < arr[r] && arr[l] > num) {\n\t\t\t\tsb.append(\"L\");\n\t\t\t\tnum = arr[l];\n\t\t\t\tl++;\n\t\t\t} else if (arr[r] > num && arr[l] <= num) {\n\t\t\t\tsb.append(\"R\");\n\t\t\t\tnum = arr[r];\n\t\t\t\tr--;\n\t\t\t} else if (arr[l] > num && arr[r] <= num) {\n\t\t\t\tsb.append(\"L\");\n\t\t\t\tnum = arr[l];\n\t\t\t\tl++;\n\t\t\t} else {\n\t\t\t\tint ogR = r;\n\t\t\t\tint ogL = l;\n\t\t\t\twhile (r >= l && arr[l] == arr[r] && arr[l] > num) {\n\t\t\t\t\tmovement++;\n\t\t\t\t\tnum = arr[l];\n\t\t\t\t\tl++;\n\t\t\t\t\tr--;\n\t\t\t\t}\n\t\t\t\tif (r < l) break;\n\t\t\t\togR -= movement;\n\t\t\t\togL += movement;\n\t\t\t\tint numL = num;\n\t\t\t\tint keepL = ogL-1;\n\t\t\t\twhile (l <= ogR && arr[ogL] > numL) {\n\t\t\t\t\tnumL=arr[ogL];\n\t\t\t\t\togL++;\n\t\t\t\t\tlSide++;\n\t\t\t\t}\n\t\t\t\twhile (ogR >= keepL && arr[ogR] > num) {\n\t\t\t\t\tnum=arr[ogR];\n\t\t\t\t\togR--;\n\t\t\t\t\trSide++;\n\t\t\t\t}\n\t\t\t\tif (lSide > rSide) {\n\t\t\t\t\tright = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (right) {\n\t\t\trSide += movement;\n\t\t\tSystem.out.print((sb.length()+rSide) + \"\\n\" + sb);\n\t\t\twhile (rSide-- > 0) {\n\t\t\t\tSystem.out.print(\"R\");\n\t\t\t}\n\t\t} else {\n\t\t\tlSide+=movement;\n\t\t\tSystem.out.print((sb.length()+lSide) + \"\\n\" + sb);\n\t\t\twhile (lSide-- > 0) {\n\t\t\t\tSystem.out.print(\"L\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println();\n\t}\n\t\t\n\tstatic class FastScanner {\n\t    BufferedReader br;\n\t    StringTokenizer st;\n\t\t\n\t    public FastScanner(InputStream i) {\n\t        br = new BufferedReader(new InputStreamReader(i));\n\t        st = new StringTokenizer(\"\");\n\t    }\n\t\t\t\t\n\t    public String next() throws IOException {\n\t        if(st.hasMoreTokens())\n\t            return st.nextToken();\n\t        else\n\t            st = new StringTokenizer(br.readLine());\n\t        return next();\n\t    }\n\n\t    public int nextInt() throws IOException {\n\t        return Integer.parseInt(next());\n\t    }\n\t    public long nextLong() throws IOException {\n\t        return Long.parseLong(next());\n\t    }\n\t    public double nextDouble() throws IOException {\n\t        return Double.parseDouble(next());\n\t    }\n\t}\n\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = input().split()\n\nfor i in range(n):\n\ta[i] = int(a[i])\n\nans = ''\nl=0\nr=n-1\nlast_num = None\nwhile(l<=r):\n\tif a[r] < a[l]:\n\t\tnum1 = a[r]\n\t\tnum2 = a[l]\n\telif a[r] > a[l]:\n\t\tnum1 = a[l]\n\t\tnum2 = a[r]\n\n\tif a[r] == a[l]:\n\t\tif last_num is not None and last_num >= a[r]:\n\t\t\tbreak\n\t\tmax_gre_l = 0\n\t\ttemp_l = l\n\t\twhile(temp_l < r and temp_l < n-1):\n\t\t\tif a[temp_l] < a[temp_l+1]:\n\t\t\t\tmax_gre_l+=1\n\t\t\t\ttemp_l+=1\n\t\t\telse:\n\t\t\t\tbreak\n\t\tmax_gre_r = 0\n\t\ttemp_r = r\n\t\twhile(temp_r > l and temp_r > 0):\n\t\t\tif a[temp_r] < a[temp_r-1]:\n\t\t\t\tmax_gre_r+=1\n\t\t\t\ttemp_r-=1\n\t\t\telse:\n\t\t\t\tbreak\n\n\t\t# print(last_num, max_gre_l, max_gre_r)\n\t\tlast_num = a[r]\n\t\tif max_gre_r > max_gre_l:\n\t\t\tr-=1\n\t\t\tans+='R'\n\t\telse:\n\t\t\tl+=1\n\t\t\tans+='L'\n\n\telif last_num is None or last_num < num1:\n\t\tlast_num = num1\n\t\tif num1 == a[l]:\n\t\t\tl+=1\n\t\t\tans += 'L'\n\t\telse:\n\t\t\tr-=1\n\t\t\tans += 'R'\n\t\t\t\n\telif last_num is None or last_num < num2:\n\t\tlast_num = num2\n\t\tif num2 == a[l]:\n\t\t\tl+=1\n\t\t\tans += 'L'\n\t\telse:\n\t\t\tr-=1\n\t\t\tans += 'R'\n\telse:\n\t\tbreak\n\nprint(len(ans))\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int arr[200005], l[200005], r[200005];\nvector<long long int> vec;\nmap<char, int> mp;\nvector<char> st;\nlong long int n, m;\nstring s, s1, s2;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int i, j, k, c = INT_MAX, ans = 0, t, z, x, y, curr = -1;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  l[n - 1] = 1;\n  for (i = n - 2; i >= 0; i--) {\n    if (arr[i] < arr[i + 1])\n      l[i] = l[i + 1] + 1;\n    else\n      l[i] = 1;\n  }\n  r[0] = 1;\n  for (i = 1; i < n; i++) {\n    if (arr[i] < arr[i - 1])\n      r[i] = r[i - 1] + 1;\n    else\n      r[i] = 1;\n  }\n  int lf = 0, rt = n - 1;\n  if (arr[lf] < arr[rt]) {\n    curr = arr[lf];\n    st.push_back('L');\n    lf++;\n  } else if (arr[rt] < arr[lf]) {\n    curr = arr[rt];\n    st.push_back('R');\n    rt--;\n  } else {\n    curr = -2;\n    if (l[lf] > r[rt]) {\n      for (i = 0; i < l[lf]; i++) st.push_back('L');\n    } else {\n      for (i = 0; i < r[rt]; i++) st.push_back('R');\n    }\n  }\n  if (curr == -2) {\n    cout << st.size() << endl;\n    for (int i = 0; i < st.size(); i++) cout << st[i];\n    return 0;\n  }\n  while (lf <= rt) {\n    if (arr[lf] < arr[rt]) {\n      if (arr[lf] > curr) {\n        curr = arr[lf];\n        st.push_back('L');\n        lf++;\n      } else if (arr[rt] > curr) {\n        curr = arr[rt];\n        st.push_back('R');\n        rt--;\n      } else\n        break;\n    } else if (arr[rt] < arr[lf]) {\n      if (arr[rt] > curr) {\n        curr = arr[rt];\n        st.push_back('R');\n        rt--;\n      } else if (arr[lf] > curr) {\n        curr = arr[lf];\n        st.push_back('L');\n        lf++;\n      } else\n        break;\n    } else if (lf != rt && arr[lf] == arr[rt] && curr < arr[lf]) {\n      if (l[lf] > r[rt]) {\n        for (i = 0; i < l[lf]; i++) st.push_back('L');\n        break;\n      } else {\n        for (i = 0; i < r[rt]; i++) st.push_back('R');\n        break;\n      }\n    } else if (lf == rt) {\n      if (arr[lf] > curr) {\n        lf++;\n        st.push_back('L');\n        break;\n      } else\n        break;\n    } else\n      break;\n  }\n  cout << st.size() << endl;\n  for (int i = 0; i < st.size(); i++) {\n    cout << st[i];\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def search(l, r, pr):\n\tposl = \"\"\n\tfl = True\n\twhile l <= r:\n\t\tif sp[l] < sp[r]:\n\t\t\tif sp[l] > pr:\n\t\t\t\tpr = sp[l]\n\t\t\t\tl += 1\n\t\t\t\tposl += \"L\"\n\t\t\telif sp[r] > pr:\n\t\t\t\tpr = sp[r]\n\t\t\t\tr -= 1\n\t\t\t\tposl += \"R\"\n\t\t\telse:\n\t\t\t\tfl = False\n\t\telif sp[l] > sp[r]:\n\t\t\tif sp[r] > pr:\n\t\t\t\tpr = sp[r]\n\t\t\t\tr -= 1\n\t\t\t\tposl += \"R\"\n\t\t\telif sp[l] > pr:\n\t\t\t\tpr = sp[l]\n\t\t\t\tl += 1\n\t\t\t\tposl += \"L\"\n\t\t\telse:\n\t\t\t\tfl = False\n\t\telse:\n\t\t\tif sp[l] > pr:\n\t\t\t\tfst = search(l + 1, r, sp[l]) + \"L\"\n\t\t\t\tsec = search(l, r - 1, sp[r]) + \"R\"\n\t\t\t\tif len(sec) > len(fst):\n\t\t\t\t\tposl += sec\n\t\t\t\telse:\n\t\t\t\t\tposl += fst\n\t\t\tfl = False\n\t\tif not fl:\n\t\t\tbreak\n\treturn posl\n\n\n\nn = int(input())\nsp = list(map(int, input().split()))\npr = 0\nposl = \"\"\nl = 0\nr = n - 1\nnew = search(l, r, 0)\nprint(len(new))\nprint(new)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.util.LinkedList;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author mvv\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC2 solver = new TaskC2();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC2 {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = in.nextInt();\n            int[] lCnt = new int[n];\n            int[] rCnt = new int[n];\n            for (int i = 1; i < n; i++)\n                if (a[i] < a[i - 1]) rCnt[i] = rCnt[i - 1] + 1;\n            for (int i = n - 2; i >= 0; i--)\n                if (a[i] < a[i + 1]) lCnt[i] = lCnt[i + 1] + 1;\n            int l = 0;\n            int r = n - 1;\n            int last = 0;\n            LinkedList<Character> res = new LinkedList<>();\n            while (l <= r) {\n                if (a[l] <= last && a[r] <= last) break;\n\n                if (a[l] <= last) {\n                    res.add('R');\n                    last = a[r];\n                    r--;\n\n                    continue;\n                }\n                if (a[r] <= last) {\n                    res.add('L');\n                    last = a[l];\n                    l++;\n                    continue;\n                }\n\n                if (a[l] == a[r]) {\n                    if (a[l] < last) break;\n                    last = a[r];\n                    if (lCnt[l] > rCnt[r]) {\n                        res.add('L');\n\n                        l++;\n                    } else {\n                        res.add('R');\n                        r--;\n                    }\n\n                    continue;\n                }\n\n                if (a[l] < a[r]) {\n                    res.add('L');\n                    last = a[l];\n                    l++;\n                } else {\n                    res.add('R');\n                    last = a[r];\n                    r--;\n                }\n            }\n\n            out.println(res.size());\n            for (Character c : res)\n                out.print(c);\n\n\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring line;\nint n;\nint A[200000];\nvoid bds() {\n  int pr = -1;\n  int i = 0, j = n - 1;\n  while (A[i] != A[j]) {\n    if (A[i] < A[j]) {\n      if (A[i] > pr) {\n        line += 'L';\n        pr = A[i++];\n      } else if (A[j] > pr) {\n        line += 'R';\n        pr = A[j--];\n      } else\n        return;\n    } else {\n      if (A[j] > pr) {\n        line += 'R';\n        pr = A[j--];\n      } else if (A[i] > pr) {\n        line += 'L';\n        pr = A[i++];\n      } else\n        return;\n    }\n  }\n  string le, ri;\n  int l = i;\n  int rl = pr;\n  while (l <= j) {\n    if (pr < A[l]) {\n      le += 'L';\n      pr = A[l++];\n    } else\n      break;\n  }\n  pr = rl;\n  while (i <= j) {\n    if (pr < A[j]) {\n      ri += 'R';\n      pr = A[j--];\n    } else\n      break;\n  }\n  if (le.size() > ri.size())\n    line += le;\n  else\n    line += ri;\n  return;\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; ++i) cin >> A[i];\n  bds();\n  cout << line.size() << '\\n' << line;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "rr = raw_input\nrrm = lambda: map(int, raw_input().split())\nfrom collections import deque\ndef solve(N,A):\n    A = deque(A)\n    cur = 0\n    ans = []\n    while A:\n        if cur < A[0] and cur < A[-1]:\n            if A[0] < A[-1]:\n                cur = A.popleft()\n                ans.append('L')\n            elif A[0] > A[-1]:\n                cur = A.pop()\n                ans.append('R')\n            else:  # could take both\n                c1 = c2 = cur\n                t1 = t2 = 0\n                for i in xrange(len(A)):\n                    if A[i] > c1:\n                        c1 = A[i]\n                        t1 += 1\n                    else:\n                        break\n                for i in xrange(len(A) - 1, -1, -1):\n                    if A[i] > c2:\n                        c2 = A[i]\n                        t2 += 1\n                    else:\n                        break\n                if t1 >= t2:\n                    ans.append('L' *t1)\n                    break\n                else:\n                    ans.append('R' * t2)\n                    break\n                \n        elif cur < A[0]:\n            cur = A.popleft()\n            ans.append('L')\n        elif cur < A[-1]:\n            cur = A.pop()\n            ans.append('R')\n        else:\n            break\n    return \"\".join(ans)\n\nN = int(rr())\nA = rrm()\nans = solve(N,A)\nprint len(ans)\nprint ans\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class A{\n\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int input[]=new int[n];\n        for(int i=0;i<n;i++)\n        {\n            input[i]=sc.nextInt();\n        }\n        B b=new B(input,0,n-1,0,0);\n        b.check();\n        StringBuffer answer=b.answer;\n        \n        \n        System.out.println(answer.length());\n        System.out.println(answer);\n    }\n\n}\n\nclass B{\n    int input[],l,r,count,last;\n    StringBuffer answer;\n    B(int input[],int l,int r,int count,int last){\n        this.input=input;\n        this.l=l;\n        this.r=r;\n        this.count=count;\n        this.last=last;\n        answer=new StringBuffer(\"\");\n    }\n    public String toString()\n    {\n        return \"l=\"+input[l]+\" r=\"+input[r]+\" count=\"+count+\" last=\"+last+\" answer=\"+answer;\n    }\n    void check()\n    {\n        while(count!=input.length)\n        {\n            if(input[l]!=input[r])\n            {\n                // System.out.println(\"here l=\"+input[l]+\" r=\"+input[r]);\n                if(input[l]>last)\n                {\n                    if(input[l]<input[r])\n                    {\n                        answer.append(\"L\");\n                        last=input[l];\n                        l++;\n                    }\n                    else if(input[r]<input[l] && input[r]>last)\n                    {\n                        answer.append(\"R\");\n                        last=input[r];\n                        r--;\n                    }\n                    else{\n                        // if(input[r]==last)\n                        // {\n                        //     B b1=new B(input,l+1,r,count+1,input[l]);\n                        //     B b2=new B(input,l,r-1,count+1,input[r]);\n                        //     b1.check();\n                        //     b2.check();\n                        //     this.answer=b1.answer.length()>=b2.answer.length()?answer.append(\"L\").append(b1.answer):answer.append(\"R\").append(b2.answer);\n                        //     break;\n                        // }\n                        // else{\n                            answer.append(\"L\");\n                            last=input[l];\n                            l++;                            \n                        // }\n\n                    }\n                }\n                else if(input[r]>last)\n                {\n                    if(input[r]<input[l])\n                    {\n                        answer.append(\"R\");\n                        last=input[r];\n                        r--;\n                    }\n                    else if(input[r]>input[l] && input[l]>last)\n                    {\n                        answer.append(\"L\");\n                        last=input[l];\n                        l++;\n                    }\n                    else{\n                        // if(input[r]==last)\n                        // {\n                            // B b1=new B(input,l+1,r,count+1,input[l]);\n                            // B b2=new B(input,l,r-1,count+1,input[r]);\n                            // b1.check();\n                            // b2.check();\n                            // this.answer=b1.answer.length()>=b2.answer.length()?answer.append(\"L\").append(b1.answer):answer.append(\"R\").append(b2.answer);\n                            // break;\n                        // }\n                        // else{\n                            answer.append(\"R\");\n                            last=input[r];\n                            r--;                            \n                        // }\n                    }\n                }\n            }\n            else{\n\t\t\t\tif(input[l]>last)\n\t\t\t\t{\n\t                B b1=new B(input,l+1,r,count+1,input[l]);\n\t                B b2=new B(input,l,r-1,count+1,input[r]);\n\t                b1.check();\n\t                b2.check();\n\t                this.answer=b1.answer.length()>b2.answer.length()?answer.append(\"L\").append(b1.answer):answer.append(\"R\").append(b2.answer);\n\t                break;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tbreak;\n\t\t\t\t}               \n\n            }\n            count++;            \n        }\n        \n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\n\npublic class Main {\n\t\n\tstatic InputReader in = new InputReader(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tstatic int MOD = 1000000007;\n\tstatic int M = 505;\n\tstatic int oo = (int)1e9;\n\t\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\tint n = in.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i=0; i<n; ++i) {\n\t\t\tarr[i] = in.nextInt();\n\t\t}\n\n\t\tint[] left = new int[n];\n\t\tint[] right = new int[n];\n\t\t\n\t\tleft[0] = 1;\n\t\tfor(int i=1; i < n; ++i) {\n\t\t\tif(arr[i-1] > arr[i])\n\t\t\t\tleft[i] = left[i-1] + 1;\n\t\t\telse\n\t\t\t\tleft[i] = 1;\n\t\t}\n\t\t\n\t\tright[n-1] = 1;\n\t\tfor(int i = n-2; i >= 0; --i) {\n\t\t\tif(arr[i] < arr[i+1])\n\t\t\t\tright[i] = right[i+1] + 1;\n\t\t\telse\n\t\t\t\tright[i] = 1;\n\t\t}\n\t\t\n\t\t\n\t\tint x = 0;\n\t\tArrayList<Character> ans = new ArrayList<>();\n\t\tint i = 0, j = n-1;\n\t\twhile(i <= j) {\n\t\t\tint l = arr[i];\n\t\t\tint r = arr[j];\n\t\t\t\n\t\t\tif(l > r) {\n\t\t\t\tif(x >= l)\n\t\t\t\t\tbreak;\n\t\t\t\tif(r > x) {\n\t\t\t\t\tj--;\n\t\t\t\t\tans.add('R');\n\t\t\t\t\tx = r;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ti++;\n\t\t\t\t\tans.add('L');\n\t\t\t\t\tx = l;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(l < r) {\n\t\t\t\tif(x >= r)\n\t\t\t\t\tbreak;\n\t\t\t\tif(l > x) {\n\t\t\t\t\ti++;\n\t\t\t\t\tans.add('L');\n\t\t\t\t\tx = l;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tj--;\n\t\t\t\t\tans.add('R');\n\t\t\t\t\tx = r;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(x >= l)\n\t\t\t\t\tbreak;\n\t\t\t\tif(right[i] > left[j]) {\n\t\t\t\t\ti++;\n\t\t\t\t\tans.add('L');\n\t\t\t\t\tx = l;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tj--;\n\t\t\t\t\tans.add('R');\n\t\t\t\t\tx = r;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n//\t\t\tif(l == r) {\n//\t\t\t\tif(x < l) {\n//\t\t\t\t\ta.pollFirst();\n//\t\t\t\t\tans.add('L');\n//\t\t\t\t\tx = l;\n//\t\t\t\t}\n//\t\t\t\telse\n//\t\t\t\t\tbreak;\n//\t\t\t}\n//\n//\t\t\tif(x < l && l < r || r < x && x < l) {\n//\t\t\t\ta.pollFirst();\n//\t\t\t\tans.add('L');\n//\t\t\t\tx = l;\n//\t\t\t}\n//\t\t\telse if(x < r && r < l || l < x && x < r) {\n//\t\t\t\ta.pollLast();\n//\t\t\t\tans.add('R');\n//\t\t\t\tx = r;\n//\t\t\t}\n//\t\t\telse\n//\t\t\t\tbreak;\n\t\t}\n\t\tSystem.out.println(ans.size());\n\t\tfor(char c : ans)\n\t\t\tSystem.out.print(c);\n\t\t\n\t\tout.close();\n\t}\n\t\n\t\n\t\n\tstatic void shuffle(int[] a) {\n\t\tRandom r = new Random();\n\t\tfor(int i = a.length - 1; i > 0; --i) {\n\t\t\tint si = r.nextInt(i);\n\t\t\tint t = a[si];\n\t\t\ta[si] = a[i];\n\t\t\ta[i] = t;\n\t\t}\n\t}\n\t\n\tstatic int lower_bound(int[] a, int n, int k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\tstatic int lower_bound(long[] a, int n, long k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\t\n\tstatic int gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\tstatic long gcd(long a, long b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\t\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint first, second;\n\n\t\tpublic Pair(int first, int second) {\n\t\t\tsuper();\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.first != o.first ? this.first - o.first : this.second - o.second;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + first;\n\t\t\tresult = prime * result + second;\n\t\t\treturn result;\n\t\t}\n\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tPair other = (Pair) obj;\n\t\t\tif (first != other.first)\n\t\t\t\treturn false;\n\t\t\tif (second != other.second)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n}\n\n\n\nclass InputReader {\n\n\tprivate final InputStream stream;\n\tprivate final byte[] buf = new byte[8192];\n\tprivate int curChar, snumChars;\n\n\tpublic InputReader(InputStream st) {\n\t\tthis.stream = st;\n\t}\n\n\tpublic int read() {\n\t\tif (snumChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= snumChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (snumChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int nextInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic long nextLong() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic int[] nextIntArray(int n) {\n\t\tint a[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt();\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic String readString() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic String nextLine() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isEndOfLine(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tprivate boolean isEndOfLine(int c) {\n\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int, input().split()))\ns=''\nx=0\nl=0\nr=n-1\nwhile (l<=r) and ((a[l]>x) or (a[r]>x)):\n    if a[l]!=a[r]:\n        if (a[l]>x) and (a[l]<a[r]):\n            x=a[l]\n            l+=1\n            s+='L'\n        if (a[r]>x) and (a[r]<a[l]):\n            x=a[r]\n            r-=1\n            s+='R' \n        if (a[r]>x) and (a[l]<=x):\n            x=a[r]\n            r-=1        \n            s+='R'  \n        if (a[r]<=x) and (a[l]>x):\n            x=a[l]\n            l+=1\n            s+='L'\n        \n    else:\n        i=l\n        j=r\n        y=1\n        z=1\n        if l!=r:\n            while a[i]<a[i+1]:\n                y+=1\n                i+=1\n            while a[j]<a[j-1]:\n                z+=1\n                j-=1\n            if y>z:\n                s+='L'*y\n                break\n            else:\n                s+='R'*z\n                break\n        else:\n            if a[r]>x:\n                s+='R'\n                r-=1\n        \n        \nprint(len(s))\nprint(s)\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "from copy import copy as cp\n\n\nn = int(input())\narr = list(map(int, input().split()))\n\nif n==1:\n    print(1)\n    print(\"L\")\nelse:\n    L, R = 0, n-1\n\n    ele = -1\n    st = \"\"\n    flag = None\n    while L<=R:\n        if arr[L]<arr[R] and arr[L]>ele:\n            ele = arr[L]\n            L += 1\n            st+= \"L\"\n        elif arr[R]<arr[L] and arr[R]>ele:\n            ele = arr[R]\n            R -= 1\n            st+= \"R\"\n        elif arr[R]==arr[L] and arr[R]>ele:\n            flag = \"eq\"            \n            break\n        else:\n            m = max(arr[L], arr[R])\n            if m>ele:\n                ele = m\n                if m==arr[L]:\n                    L +=1\n                    st += \"L\"\n                else:\n                    R-=1\n                    st += \"R\"\n            else:\n                break\n    \n    if flag==\"eq\":    \n        left, right = st, st\n        old_ele = ele\n        for i in range(R, L-1, -1):\n            if  arr[i]>ele:\n                right += \"R\"\n                ele = arr[i]\n            else:\n                break\n        for i in range(L, R+1):\n            if arr[i]>old_ele:\n                left += \"L\"\n                old_ele = arr[i]\n            else:\n                break\n        if len(left)>len(st):\n            st = left\n        if len(right)>len(st):\n            st = right\n            \n    print(len(st))\n    print(st)\n            \n"
        },
        {
            "language": 4,
            "solution": "//package competitive;\nimport java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \n//import java.util.Scanner; \nimport java.util.StringTokenizer; \n//import java.util.*;\n  \npublic class C1157_2\n{ \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n  \n    public static void main(String[] args) \n    { \n        FastReader rd=new FastReader(); \n        int n=rd.nextInt(),i,x,k=0,l=0,j;char choice='a';\n        int arr[]=new int[n+2];\n        char ch[]=new char[n];\n        for(i=0;i<n;++i)\n        \t{arr[i]=rd.nextInt();ch[i]=' ';}i=0;j=n-1;\n       x=0;int sz=-1;boolean flag=false;\n        while(i<=j)\n        {\tif(arr[i]<=x && arr[j]<=x)\n        \t\tbreak;\n        \tif(arr[i]>x)\n        \t{\n        \t\n        \t if(arr[i]<arr[j] || arr[j]<=x)//EQUALITY\n             {++i;ch[++sz]='L';x=arr[i-1];}\n        \t else if(arr[i]==arr[j])//max 1 time \n        \t {\tk=i;l=j;//choice=-1;\n        \t \tint cur=x;\t\n        \t \t//System.out.println(\"k\"+k);\n        \t\t while(k<=j)\n        \t\t {\t//flag=true;\n        \t\t\tif(arr[k]>cur)\n        \t\t\t\tcur=arr[k++];\n        \t\t\telse \n        \t\t\t\tbreak;\n        \t\t }cur=x;\n        \t\n        \t\t while(l>=i)\n        \t\t {\n        \t\t\t if(arr[l]>cur)\n         \t\t\t\tcur=arr[l--];\n        \t\t\t else\n        \t\t\t\t break;\n        \t\t }\n        \t\t if(k-i>=j-l)\n        \t\t\t choice='L';\n        \t\t else\n        \t\t\t choice='R';\n        \t\t//System.out.println(\"choice\"+choice);\n        \t\t if(choice=='L')\n        \t\t {\t++i;ch[++sz]='L';x=arr[i-1];flag=true;break;\t\t\t \n        \t\t }\n        \t\t else if(choice=='R')\n        \t\t {\n        \t\t\t --j;ch[++sz]='R';x=arr[j+1];flag=true;break;\n        \t\t }\n        \t\t \n        \t }\n             else if(arr[j]>x)\n             {\n             \t--j;ch[++sz]='R';x=arr[j+1];\n             }\n           \n        \t}\n        \telse if(arr[j]>x)\n        \t{\n        \t\t\n                 \t--j;ch[++sz]='R';x=arr[j+1];\n                 \n        \t}\n        \telse\n        \t\tbreak;\n        \t//System.out.println(i+\"i\"+j+\"j\"+\"X\"+x+\"arr[i] \"+arr[i] +\"arr[j] \"+arr[j]);\n        }\n        while(flag && i<=j)\n        {\n        \t if(choice=='L')\n    \t\t {\tif(arr[i]<=x)\n    \t\t\t \tbreak;\n        \t\t ++i;ch[++sz]='L';x=arr[i-1];\t\t \n    \t\t }\n    \t\t else if(choice=='R')\n    \t\t {\tif(arr[j]<=x)\n    \t\t\t break;\n    \t\t\t --j;ch[++sz]='R';x=arr[j+1];\n    \t\t }\n        }\n        System.out.println(sz+1);\n        //if(sz+1==n)\n          //  ch[n-1]='L';\n        System.out.print(ch);\n    }\n} "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long n;\n  cin >> n;\n  long long a[n];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  long long f[n], b[n];\n  f[n - 1] = 1, b[0] = 1;\n  for (long long i = n - 2; i >= 0; i--) {\n    if (a[i] < a[i + 1]) {\n      f[i] = 1 + f[i + 1];\n    } else {\n      f[i] = 1;\n    }\n  }\n  for (long long i = 1; i < n; i++) {\n    if (a[i] < a[i - 1]) {\n      b[i] = 1 + b[i - 1];\n    } else {\n      b[i] = 1;\n    }\n  }\n  long long i = 0, j = n - 1;\n  string s;\n  long long last = 0;\n  char lastch = 'L';\n  long long lastn = f[i];\n  long long prev = 0;\n  while (i <= j) {\n    if (a[i] > a[j]) {\n      if (a[j] > prev) {\n        prev = a[j];\n        j--;\n        s += \"R\";\n      } else if (a[i] > prev) {\n        prev = a[i];\n        i++;\n        s += \"L\";\n      } else {\n        break;\n      }\n    } else if (a[i] < a[j]) {\n      if (a[i] > prev) {\n        prev = a[i];\n        i++;\n        s += \"L\";\n      } else if (a[j] > prev) {\n        prev = a[j];\n        j--;\n        s += \"R\";\n      } else {\n        break;\n      }\n    } else {\n      if (a[i] > prev) {\n        if ((f[i]) > (b[j])) {\n          prev = a[i];\n          last = 1;\n          lastch = 'L';\n          lastn = f[i];\n          break;\n        } else {\n          prev = a[j];\n          last = 1;\n          lastch = 'R';\n          lastn = b[j];\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n  if (last == 1) {\n    for (long long i = 0; i < lastn; i++) {\n      s += lastch;\n    }\n  }\n  cout << s.length() << '\\n';\n  cout << s;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  ;\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int l = 0, r = n - 1, last = INT_MIN;\n  string s;\n  while (l <= r) {\n    if (a[l] != a[r]) {\n      if (a[l] < a[r] && last < a[l]) {\n        s += 'L';\n        last = a[l];\n        l++;\n      } else if (a[l] > a[r] && last < a[r]) {\n        s += 'R';\n        last = a[r];\n        r--;\n      } else if (last < a[l]) {\n        last = a[l];\n        l++;\n        s += 'L';\n      } else if (last < a[r]) {\n        last = a[r];\n        r--;\n        s += 'R';\n      } else {\n        l++;\n        r--;\n        break;\n      }\n    } else {\n      if (a[l] <= last) {\n        l++;\n        r--;\n        break;\n      }\n      int len1 = 0, len2 = 0;\n      for (int j = l + 1; j < r; j++) {\n        if (a[j] > a[j - 1])\n          len1++;\n        else\n          break;\n      }\n      for (int j = r - 1; j > l; j--) {\n        if (a[j] > a[j + 1])\n          len2++;\n        else\n          break;\n      }\n      last = a[l];\n      if (len1 > len2) {\n        l++;\n        s += 'L';\n      } else {\n        r--;\n        s += 'R';\n      }\n    }\n  }\n  cout << s.length() << endl;\n  cout << s << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.util.stream.*;\n\npublic class ProblemC2 {\n    private static boolean debug = false;\n\n    private static int N;\n    private static int[] A;\n\n    private static void solveProblem(InputStream instr) {\n        Scanner sc = new Scanner(new BufferedReader(new InputStreamReader(instr)));\n        int testCount = 1;\n        if (debug) {\n            testCount = sc.nextInt();\n        }\n        for (int t = 1; t <= testCount; t++) {\n            N = sc.nextInt();\n            A = readInts(sc, N);\n            Object result = solveTestCase();\n            System.out.println(result);\n        }\n    }\n\n    private static Object solveTestCase() {\n        List<Character> steps = new ArrayList<>();\n        int leftIndex = 0;\n        int rightIndex = N - 1;\n        int lastNumber = Integer.MIN_VALUE;\n        while (leftIndex <= rightIndex) {\n            if (leftIndex != rightIndex && A[leftIndex] == A[rightIndex]) {\n                if (A[leftIndex] > lastNumber) {\n                    if (leftIndex == rightIndex) {\n                        steps.add('L');\n                        break;\n                    }\n                    int leftCount = 0;\n                    int localLeft = lastNumber;\n                    int localLeftIndex = leftIndex;\n                    while (A[localLeftIndex] > localLeft) {\n                        leftCount++;\n                        localLeft = A[localLeftIndex];\n                        localLeftIndex++;\n                    }\n\n                    int rightCount = 0;\n                    int localRight = lastNumber;\n                    int localRightIndex = rightIndex;\n                    while (A[localRightIndex] > localRight) {\n                        rightCount++;\n                        localRight = A[localRightIndex];\n                        localRightIndex--;\n                    }\n                    if (leftCount >= rightCount) {\n                        for (int i = 0; i < leftCount; i++) {\n                            steps.add('L');\n                        }\n                    } else {\n                        for (int i = 0; i < rightCount; i++) {\n                            steps.add('R');\n                        }\n                    }\n                    break;\n                } else {\n                    break;\n                }\n            } else {\n                if (A[leftIndex] > lastNumber) {\n                    if (A[rightIndex] > A[leftIndex]) {\n                        steps.add('L');\n                        lastNumber = A[leftIndex];\n                        leftIndex++;\n                    } else {\n                        if (A[rightIndex] > lastNumber) {\n                            steps.add('R');\n                            lastNumber = A[rightIndex];\n                            rightIndex--;\n                        } else {\n                            steps.add('L');\n                            lastNumber = A[leftIndex];\n                            leftIndex++;\n                        }\n                    }\n                } else if (A[rightIndex] > lastNumber) {\n                    steps.add('R');\n                    lastNumber = A[rightIndex];\n                    rightIndex--;\n                } else {\n                    break;\n                }\n            }\n        }\n        char[] chars = new char[steps.size()];\n        for (int i = 0; i < chars.length; i++) {\n            chars[i] = steps.get(i);\n        }\n        return steps.size() + \"\\n\" + new String(chars);\n    }\n\n    private static int[] readInts(Scanner sc, int N) {\n        int[] arr = new int[N];\n        for (int i = 0; i < N; i++) {\n            arr[i] = sc.nextInt();\n        }\n        return arr;\n    }\n\n    private static <T> String joinValues(List<T> list, String delim) {\n        return list.stream().map(T::toString).collect(Collectors.joining(delim));\n    }\n\n    public static void printDebug(Object str) {\n        if (debug) {\n            System.out.println(\"DEBUG: \" + str);\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        if (debug) {\n            solveProblem(new FileInputStream(new File(\"input.in\")));\n        } else {\n            solveProblem(System.in);\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"Codeforces Round #555 (Div. 3)\n\nProblem C. Increasing Subsequence\n\n:author:         Kitchen Tong\n:mail:    kctong529@gmail.com\n\nPlease feel free to contact me if you have any question\nregarding the implementation below.\n\"\"\"\n\n__version__ = '1.0'\n__date__ = '2019-04-26'\n\nimport sys\n\n\ndef rec_solve(a, l, r, last):\n    choices = []\n    while l <= r:\n        if a[l] == a[r] and a[l] > last:\n            sub_ans_1 = rec_solve(a, l+1, r, a[l])\n            sub_ans_2 = rec_solve(a, l, r-1, a[l])\n            if len(sub_ans_1) > len(sub_ans_2):\n                choices.append('L')\n                choices += sub_ans_1\n                return choices\n            else:\n                choices.append('R')\n                choices += sub_ans_2\n                return choices\n        elif a[l] < a[r] and a[l] > last:\n            last = a[l]\n            choices.append('L')\n            l += 1\n        elif a[r] > last:\n            last = a[r]\n            choices.append('R')\n            r -= 1\n        elif a[l] > last:\n            last = a[l]\n            choices.append('L')\n            l += 1\n        else:\n            return choices\n    return choices\n\ndef solve(n, a):\n    return rec_solve(a, 0, n-1, 0)\n\ndef main(argv=None):\n    n = int(input())\n    a = list(map(int, input().split()))\n    choice = solve(n, a)\n    print(len(choice))\n    print(''.join(choice))\n    return 0\n\nif __name__ == \"__main__\":\n    STATUS = main()\n    sys.exit(STATUS)\n\n"
        },
        {
            "language": 3,
            "solution": "def solve(p, q, r):\n    ans = \"\"\n    current = r\n    i = p\n    j = q\n    while True:\n        if j < i:\n            break\n        if current < num[i] < num[j] or num[j] <= current < num[i]:\n            ans += \"L\"\n            current = num[i]\n            i += 1\n            continue\n        if current < num[j] < num[i] or num[i] <= current < num[j]:\n            ans += \"R\"\n            current = num[j]\n            j -= 1\n            continue\n        if current < num[i] == num[j]:\n            ans1 = solve(i, j - 1, num[i])\n            ans2 = solve(i + 1, j, num[i])\n            if len(ans1) > len(ans2):\n                ans += \"R\" + ans1\n            else:\n                ans += \"L\" + ans2\n        break\n    return ans\n\nn = int(input())\nnum = [*map(int, input().split())]\nans = solve(0, n - 1, -1)\nprint(len(ans))\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n\n\ndef main():\n\tn = int(input())\n\tarr = list(map(int,input().split()))\n\tlast = 0\n\ts = ''\n\tl,r = 0,n-1\n\twhile True:\n\t\tif last>max(arr[l],arr[r]) or l>r:\n\t\t\tbreak\n\t\telif (arr[r]<arr[l] and arr[r]>last) or (arr[r]>last>arr[l]):\n\t\t\tlast = arr[r]\n\t\t\tr-=1\n\t\t\ts+='R'\n\t\telif (arr[l]<arr[r] and arr[l]>last) or (arr[l]>last>arr[r]):\n\t\t\tlast = arr[l]\n\t\t\tl+=1\n\t\t\ts+='L'\n\t\telse:\n\t\t\tlt,rt=0,0\n\t\t\tif arr[l]>last:\n\t\t\t\tlt = 1\n\t\t\t\twhile True:\n\t\t\t\t\tif l+lt>r:\n\t\t\t\t\t\tbreak\n\t\t\t\t\tif arr[l+lt]>arr[l+lt-1]:\n\t\t\t\t\t\tpass\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\t\t\t\t\tlt+=1\n\t\t\tif arr[r]>last:\n\t\t\t\trt = 1\n\t\t\t\twhile True:\n\t\t\t\t\tif r-rt<l:\n\t\t\t\t\t\tbreak\n\t\t\t\t\tif arr[r-rt]>arr[r-rt+1]:\n\t\t\t\t\t\tpass\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\t\t\t\t\trt+=1\n\t\t\tif lt>rt:\n\t\t\t\ts+=('L'*lt)\n\t\t\telse:\n\t\t\t\ts+=('R'*rt)\n\t\t\tbreak\n\tprint(len(s))\n\tprint(s)\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long long mod = 1e9 + 7;\nconst int maxn = 1000000;\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  int l = 0;\n  int r = n - 1;\n  string res = \"\";\n  int ans = -1;\n  while (l <= r) {\n    if (res.size() == 0) {\n      if (a[l] < a[r]) {\n        res += 'L';\n        ans = a[l];\n        l++;\n      } else if (a[l] > a[r]) {\n        res += 'R';\n        ans = a[r];\n        r--;\n      } else {\n        int nbl = 0;\n        int nbr = 0;\n        string sl = \"\";\n        string sr = \"\";\n        for (int i = l + 1; i <= r; i++) {\n          if (a[i] > a[i - 1]) {\n            nbl++;\n            sl += 'L';\n          } else {\n            break;\n          }\n        }\n        for (int i = r - 1; i >= l; i--) {\n          if (a[i] > a[i + 1]) {\n            nbr++;\n            sr += 'R';\n          } else {\n            break;\n          }\n        }\n        if (nbl > nbr) {\n          res += sl + 'L';\n        } else {\n          res += sr + 'R';\n        }\n        break;\n      }\n    } else {\n      if ((a[l] <= ans) and (a[r] <= ans)) {\n        break;\n      } else {\n        if ((a[l] > ans) and (a[r] > ans)) {\n          if (a[l] < a[r]) {\n            res += 'L';\n            ans = a[l];\n            l++;\n          } else if (a[l] > a[r]) {\n            res += 'R';\n            ans = a[r];\n            r--;\n          } else {\n            int nbl = 0;\n            int nbr = 0;\n            string sl = \"\";\n            string sr = \"\";\n            for (int i = l + 1; i <= r; i++) {\n              if (a[i] > a[i - 1]) {\n                nbl++;\n                sl += 'L';\n              } else {\n                break;\n              }\n            }\n            for (int i = r - 1; i >= l; i--) {\n              if (a[i] > a[i + 1]) {\n                nbr++;\n                sr += 'R';\n              } else {\n                break;\n              }\n            }\n            if (nbl > nbr) {\n              res += sl + 'L';\n            } else {\n              res += sr + 'R';\n            }\n            break;\n          }\n        } else if (a[r] > ans) {\n          res += 'R';\n          ans = a[r];\n          r--;\n        } else {\n          res += 'L';\n          ans = a[l];\n          l++;\n        }\n      }\n    }\n  }\n  cout << res.size() << endl;\n  cout << res;\n}\n"
        },
        {
            "language": 3,
            "solution": "def calculate(a, choice = None, l=None, r=None):\n    if l is None:\n        l = 0\n        r = len(a)-1\n    latest = 0\n    resp = ''\n    while r>=l:\n        if a[l] > latest:\n            if a[r] <= latest:\n                resp+='L'\n                latest = a[l]\n                l+=1\n            else:\n                if a[l]<a[r]:\n                    resp += 'L'\n                    latest = a[l]\n                    l += 1\n                elif a[l]==a[r]:\n                    if choice=='L':\n                        resp += 'L'\n                        latest = a[l]\n                        l += 1\n                        choice = None\n                    elif choice=='R':\n                        resp += 'R'\n                        latest = a[r]\n                        r -= 1\n                        choice = None\n                    else:\n                        lvar = calculate(a, 'L', l, r)\n                        rvar = calculate(a, 'R', l, r)\n                        if len(lvar)>len(rvar):\n                            return resp + lvar\n                        else:\n                            return resp + rvar\n\n                else:\n                    resp += 'R'\n                    latest = a[r]\n                    r -= 1\n\n        else:\n            if a[r] > latest:\n                resp += 'R'\n                latest = a[r]\n                r -= 1\n            else:\n                break\n    return resp\nn = int(input())\na = [int(i) for i in input().split()]\n# n = 20000\n# a = [int(i) for i in range(1, n+1)]\nres = calculate(a)\nprint(len(res))\nprint(res)\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\n\ndef solve(A):\n    res = []\n    last = 0\n    while A:\n        if max(A[0],A[-1]) <= last:\n            return res\n\n        if A[0] == A[-1]:\n            v = A[0]-1\n            for i,a in enumerate(A):\n                if v < a:\n                    v = a\n                else:\n                    break\n            else:\n                i += 1\n            L = i\n            v = A[-1]-1\n            for i,a in enumerate(reversed(A)):\n                if v < a:\n                    v = a\n                else:\n                    break\n            else:\n                i += 1\n            R = i\n            _,op = max((L, ['L']*L), (R, ['R']*R))\n            res.extend(op)\n            return res\n        \n        v, op = min((v, op) for v,op in ((A[0], 'L'), (A[-1], 'R')) if v > last)\n        last = v\n        res.append(op)\n        if op == 'L':\n            A.popleft()\n        else:\n            A.pop()\n\n\ndef main():\n    input()\n    A = deque(map(int,input().split()))\n\n    res = solve(A)\n    print(len(res))\n    print(*res, sep='')\n\n\nmain()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n \nlast = -1\nresults = []\nruner = [0, n - 1]\nwhile runer[1] >= runer[0] and max(a[runer[0]], a[runer[1]]) > last:\n    if a[runer[0]] == a[runer[1]]:\n        cat1 = [0, 0]\n        bound = [[runer[0], runer[1] + 1, 1], [runer[1], runer[0] - 1, -1]]\n        for j in range(2):\n            lst = last\n            for i in range(*bound[j]):\n                if a[i] <= lst:\n                    break\n                cat1[j] += 1\n                lst = a[i]\n        results.extend(list(\"LR\"[cat1[0] < cat1[1]] * max(cat1)))\n        break\n \n    options = sorted([[a[runer[0]], 0], [a[runer[1]], 1]])\n    for par1 in options:\n        if par1[0] > last:\n            results.append(\"LR\"[par1[1]])\n            runer[par1[1]] += -1 if par1[1] else 1\n            last = par1[0]\n            break\n    else:\n        break\n \nprint(len(results))\nprint(\"\".join(results))"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import defaultdict, Counter, deque\n\n\n\n\ndef primeFactor(n):\n\tif n % 2 == 0:\n\t\treturn 2\n\ti = 3\n\twhile (i ** 2) <= n:\n\t\tif n % i == 0:\n\t\t\treturn i \n\t\ti += 1\n\treturn n\n\n\n\ndef main():\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\n\tstack = []\n\tnums = [0]\n\tl = 0\n\tr = n - 1\n\n\twhile l <= r:\n\t\tif arr[l] == arr[r] and l != r and arr[l] > nums[-1]:\n\t\t\tu1 = [0]\n\t\t\tleft = l\n\t\t\tright = r\n\t\t\twhile left < right and u1[-1] < arr[left]:\n\t\t\t\tu1.append(arr[left])\n\t\t\t\tleft += 1\n\t\t\tu2 = [0]\n\t\t\tleft = l\n\t\t\tright = r\n\t\t\twhile right > left and u2[-1] < arr[right]:\n\t\t\t\tu2.append(arr[right])\n\t\t\t\tright -= 1\n\n\t\t\tif len(u1) > len(u2):\n\t\t\t\tstack += ['L']  * (len(u1) - 1)\n\t\t\telse:\n\t\t\t\tstack += ['R']  * (len(u2) - 1)\n\t\t\tbreak\n\n\t\telif nums[-1] < arr[l] and nums[-1] < arr[r] and l != r:\n\t\t\tif arr[l] < arr[r]:\n\t\t\t\tnums.append(arr[l])\n\t\t\t\tstack.append('L')\n\t\t\t\tl += 1\n\t\t\telse:\n\t\t\t\tnums.append(arr[r])\n\t\t\t\tstack.append('R')\n\t\t\t\tr -= 1\n\n\t\telif nums[-1] < arr[l]:\n\t\t\tnums.append(arr[l])\n\t\t\tstack.append('L')\n\t\t\tl += 1\n\t\telif nums[-1] < arr[r]:\n\t\t\tnums.append(arr[r])\n\t\t\tstack.append('R')\n\t\t\tr -= 1\n\t\telse:\n\t\t\tbreak\n\n\tprint(len(stack))\n\t# print(stack)\n\tprint(''.join(stack))\n\nif __name__ == \"__main__\":\n\t# t = int(input())\n\tt = 1\n\tfor _ in range(t):\n\t\tmain()\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 2e5 + 1;\nint str[MAX];\nchar ans[MAX];\nint main(void) {\n  int n, index = 0;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &str[i]);\n  }\n  int l = 1, r = n, m = -1;\n  while (l <= r) {\n    if (str[l] == str[r] && str[l] > m) {\n      for (int i = l + 1, j = r - 1;; i++, j--) {\n        if (str[i] <= str[i - 1]) {\n          while (str[r] > m) {\n            ans[index] = 'R';\n            m = str[r];\n            index++;\n            r--;\n          }\n          break;\n        } else if (str[j] <= str[j + 1]) {\n          while (str[l] > m) {\n            ans[index] = 'L';\n            m = str[l];\n            index++;\n            l++;\n          }\n          break;\n        }\n      }\n    } else if (str[l] < str[r] && str[l] > m) {\n      ans[index] = 'L';\n      m = str[l];\n      index++;\n      l++;\n    } else if (str[r] < str[l] && str[r] > m) {\n      ans[index] = 'R';\n      m = str[r];\n      index++;\n      r--;\n    } else if (str[l] <= m && str[r] > m) {\n      ans[index] = 'R';\n      m = str[r];\n      index++;\n      r--;\n    } else if (str[l] > m && str[r] <= m) {\n      ans[index] = 'L';\n      m = str[l];\n      index++;\n      l++;\n    } else\n      break;\n  }\n  if (str[l] == str[r] && str[l] > m) {\n    ans[index] = 'L';\n    index++;\n  }\n  printf(\"%d\\n%s\", index, ans);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nn = int(input())\na = deque(int(x) for x in input().split())\nans = []\ntemp = 0\nwhile a:\n    if a[0] > temp:\n        if a[-1] > temp and a[-1] < a[0]:\n            ans.append('R')\n            temp = a[-1]\n            a.pop()\n        elif a[-1] == a[0]:\n            le = a.copy()\n            temp2 = le[0]\n            le.popleft()\n            while le and temp2 < le[0]:\n                temp2 = le[0]\n                le.popleft()\n            ri = a.copy()\n            temp3 = ri[0]\n            ri.pop()\n            while ri and temp3 < ri[-1]:\n                temp3 = ri[-1]\n                ri.pop()\n            if len(a) - len(le) > len(a) - len(ri):\n                ans.append('L')\n                temp = a[0]\n                a.popleft()\n            else:\n                ans.append('R')\n                temp = a[-1]\n                a.pop()\n        else:\n            ans.append('L')\n            temp = a[0]\n            a.popleft()\n    else:\n        if a[-1] > temp:\n            ans.append('R')\n            temp = a[-1]\n            a.pop()\n        else:\n            break\nprint(len(ans))\nprint(''.join(ans))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split(' ')))\n\npl = 0\npr = len(a) - 1\nlast = 0\nop = []\n\nwhile pl <= pr:\n    l = a[pl]\n    r = a[pr]\n    \n    if l <= last and r <= last:\n        break\n    elif l <= last:\n        op.append('R')\n        last = r\n        pr -= 1\n    elif r <= last:\n        op.append('L')\n        last = l\n        pl += 1\n    else:\n        if l < r:\n            op.append('L')\n            last = l\n            pl += 1\n        elif l > r:\n            op.append('R')\n            last = r\n            pr -= 1\n        else:\n            # l == r\n            llen = 1\n            rlen = 1\n            for i in range(pl + 1, pr + 1):\n                if a[i] <= a[i - 1]:\n                    break\n                llen += 1\n            for i in range(pr - 1, pl - 1, -1):\n                if a[i] <= a[i + 1]:\n                    break\n                rlen += 1\n            \n            if llen >= rlen:\n                while llen > 0:\n                    op.append('L')\n                    llen -= 1\n            else:\n                while rlen > 0:\n                    op.append('R')\n                    rlen -= 1\n\n            break\n\nprint(len(op))\nprint(''.join(op))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct comp {\n  bool operator()(int a, int b) { return a > b; }\n};\nint main() {\n  int n, data[200005];\n  string ans = \"\";\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &data[i]);\n  int l = 1, r = n, last = 0;\n  while (l <= r && max(data[l], data[r]) > last) {\n    if (l == r) {\n      ans += \"L\";\n      l++;\n    } else if (data[l] != data[r]) {\n      bool isLValid = (data[l] > last);\n      bool isRValid = (data[r] > last);\n      if (isLValid && (data[l] <= data[r] || !isRValid)) {\n        last = data[l];\n        l++;\n        ans += \"L\";\n      } else {\n        last = data[r];\n        r--;\n        ans += \"R\";\n      }\n    } else {\n      int fromL = 1, fromR = 1;\n      for (int i = l + 1; i <= r; i++) {\n        if (data[i - 1] < data[i])\n          fromL++;\n        else\n          break;\n      }\n      for (int i = r - 1; i >= l; i--) {\n        if (data[i] > data[i + 1])\n          fromR++;\n        else\n          break;\n      }\n      if (fromL >= fromR)\n        for (int i = 1; i <= fromL; i++) ans += \"L\";\n      else\n        for (int i = 1; i <= fromR; i++) ans += \"R\";\n      break;\n    }\n  }\n  cout << ans.size() << endl << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint len  = sc.nextInt();\n\t\tint[] a = new int[len];\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n//\t\tif(len==1) {\n//\t\t\tSystem.out.println(1);\n//\t\t\tSystem.out.println(\"L\");\n//\t\t\treturn;\n//\t\t}\n\t\tint l = 0;\n\t\tint r = len - 1;\n\t\tint p = Math.min(a[l], a[r])-1;\n\t\tint length = 0;\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile((a[l]>p||a[r]>p)&&r>=l) {\n\t\t\tif(a[l]==a[r] && p<a[l] && l!=r)\n\t\t\t{\n\t\t\t\tint i=l+1;\n\t\t\t\twhile(a[i]>a[i-1])\n\t\t\t\t\ti++;\n\t\t\t\tint j = r-1;\n\t\t\t\twhile(a[j]>a[j+1])\n\t\t\t\t\tj--;\n\t\t\t\tif(i-l>r-j)\n\t\t\t\t\ta[r]=0;\n\t\t\t\telse \n\t\t\t\t\ta[l]=0;\n\t\t\t}\n\t\t\tif(a[l]>p&&a[r]>p) {\n\t\t\t\tlength++;\n\t\t\t\tif(a[l]<a[r]) {\n\t\t\t\t\tp = a[l];\n\t\t\t\t\tsb.append(\"L\");\n\t\t\t\t\tl++;\n\t\t\t\t}else {\n\t\t\t\t\tp = a[r];\n\t\t\t\t\tsb.append(\"R\");\n\t\t\t\t\tr--;\n\t\t\t\t}\n\t\t\t}else if(a[l]>p) {\n\t\t\t\tlength++;\n\t\t\t\tp = a[l];\n\t\t\t\tsb.append(\"L\");\n\t\t\t\tl++;\n\t\t\t}else if(a[r]>p){\n\t\t\t\tlength++;\n\t\t\t\tp = a[r];\n\t\t\t\tsb.append(\"R\");\n\t\t\t\tr--;\n\t\t\t}\n\t\t\tif(l>len-1||r<0) break;\n\t\t}\n\t\tSystem.out.println(length);\n\t\tSystem.out.println(sb.toString());\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nimport sys\nfrom collections import deque\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nN = INT()\nA = LIST()\n\nque = deque(A)\ncur = 0\nans = []\nwhile que:\n    if que[0] < que[-1]:\n        if que[0] > cur:\n            cur = que.popleft()\n            ans.append('L')\n            continue\n        elif que[-1] > cur:\n            cur = que.pop()\n            ans.append('R')\n            continue\n        else:\n            break\n    elif que[0] > que[-1]:\n        if que[-1] > cur:\n            cur = que.pop()\n            ans.append('R')\n            continue\n        elif que[0] > cur:\n            cur = que.popleft()\n            ans.append('L')\n            continue\n        else:\n            break\n    else:\n        cnt1 = 0\n        tmp = cur\n        que1 = que.copy()\n        while que1 and que1[0] > tmp:\n            tmp = que1.popleft()\n            cnt1 += 1\n        cnt2 = 0\n        tmp = cur\n        que2 = que.copy()\n        while que2 and que2[-1] > tmp:\n            tmp = que2.pop()\n            cnt2 += 1\n        if cnt1 >= cnt2:\n            ans += 'L' * cnt1\n        else:\n            ans += 'R' * cnt2\n        break\nprint(len(ans))\nprint(''.join(ans))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int f(long long int x, long long int y) {\n  long long int res = 1;\n  x = x % 1000000007;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % 1000000007;\n    y = y >> 1;\n    x = (x * x) % 1000000007;\n  }\n  return res;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int i, j, k, l, m, n, p = 0, q, r, t, ans = 0, x, y;\n  cin >> n;\n  q = n - 1;\n  int a[n], ma = 0;\n  string s = \"\";\n  for (i = 0; i < n; i++) cin >> a[i];\n  while (1) {\n    if (a[p] == a[q] && a[p] > ma) {\n      vector<int> v1, v2;\n      v1.emplace_back(a[p]);\n      v2.emplace_back(a[q]);\n      for (i = p + 1; i < q; i++)\n        if (v1[i - p - 1] < a[i])\n          v1.emplace_back(a[i]);\n        else\n          break;\n      for (i = q - 1; i > p; i--) {\n        if (v2[v2.size() - 1] < a[i])\n          v2.emplace_back(a[i]);\n        else\n          break;\n      }\n      if (v1.size() > v2.size()) {\n        for (i = 0; i < v1.size(); i++) s += 'L';\n      } else {\n        for (i = 0; i < v2.size(); i++) s += 'R';\n      }\n      break;\n    } else if (a[p] > a[q] && a[q] > ma) {\n      s += 'R';\n      ma = a[q];\n      q--;\n    } else if (a[p] > ma) {\n      s += 'L';\n      ma = a[p];\n      p++;\n    } else if (a[q] > ma) {\n      s += 'R';\n      ma = a[q];\n      q--;\n    } else {\n      break;\n    }\n  }\n  cout << s.size() << \"\\n\";\n  cout << s;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nconst int MOD = 1e9 + 7;\nlong long cnt = 1, mini;\nstring s = \"\";\nlong long a[N];\nmap<long long, long long> mp;\nint main() {\n  ios_base ::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long n, lst = 0, k, flag = 0, i = 0, j;\n  cin >> n;\n  j = n - 1;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  long long l = 0, r = n - 1;\n  while (l <= r) {\n    if (a[l] > lst && a[r] > lst) {\n      if (a[l] < a[r]) s += \"L\", lst = a[l], ++l;\n      if (a[r] < a[l]) s += \"R\", lst = a[r], --r;\n      if (a[l] == a[r]) {\n        string ss, sss;\n        l++;\n        lst = a[l - 1];\n        while (lst < a[l]) {\n          ss += \"L\";\n          lst = a[l];\n          l++;\n        }\n        r--;\n        lst = a[r + 1];\n        while (lst < a[r]) {\n          sss += \"R\";\n          lst = a[r];\n          r--;\n        }\n        if (ss.size() > sss.size())\n          s = s + \"L\" + ss;\n        else\n          s = s + \"R\" + sss;\n        break;\n      }\n    } else if (a[l] > lst) {\n      lst = a[l];\n      s += \"L\";\n      ++l;\n    } else if (a[r] > lst) {\n      lst = a[r];\n      s += \"R\";\n      --r;\n    } else\n      break;\n  }\n  cout << s.size() << \"\\n\" << s;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> v;\n  vector<int>::iterator it;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  vector<int> seq;\n  seq.push_back(-1);\n  string ans;\n  while (1) {\n    if (v.back() <= seq.back() && v[0] <= seq.back()) break;\n    if (v.empty()) break;\n    if (v.size() == 1 && v[0] > seq.back()) {\n      ans += 'R';\n      break;\n    }\n    if (v.back() < v[0] && seq.back() < v.back()) {\n      seq.push_back(v.back());\n      ans += 'R';\n      it = v.end();\n      it--;\n      v.erase(it);\n    } else if (v.back() < v[0] && v[0] > seq.back()) {\n      seq.push_back(v[0]);\n      ans += 'L';\n      v.erase(v.begin());\n    } else if (v[0] < v.back() && seq.back() < v[0]) {\n      seq.push_back(v[0]);\n      ans += 'L';\n      v.erase(v.begin());\n    } else if (v[0] < v.back() && v.back() > seq.back()) {\n      seq.push_back(v.back());\n      ans += 'R';\n      it = v.end();\n      it--;\n      v.erase(it);\n    } else if (v[0] == v.back()) {\n      int cnt_lft = 0, cnt_rit = 0;\n      for (int i = 1; v[i] > v[i - 1]; i++) cnt_lft++;\n      for (int i = v.size() - 2; v[i] > v[i + 1]; i--) cnt_rit++;\n      if (cnt_lft > cnt_rit) {\n        ans += 'L';\n        for (int i = 1; v[i] > v[i - 1]; i++) ans += 'L';\n        break;\n      } else {\n        ans += 'R';\n        for (int i = v.size() - 2; v[i] > v[i + 1]; i--) ans += 'R';\n        break;\n      }\n    }\n    if (v.back() <= seq.back() && v[0] <= seq.back()) break;\n    if (v.empty()) break;\n    if (v.size() == 1 && v[0] > seq.back()) {\n      ans += 'R';\n      break;\n    }\n  }\n  cout << ans.size() << endl << ans << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.BigInteger;\nimport java.util.*;\nimport static java.lang.Math.*;\npublic class Main\n{\n    static class Reader\n    {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader()\n        {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException\n        {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException\n        {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1)\n            {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException\n        {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do\n            {\n                ret = ret * 10 + c - '0';\n            }  while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException\n        {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException\n        {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.')\n            {\n                while ((c = read()) >= '0' && c <= '9')\n                {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException\n        {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException\n        {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException\n        {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n    static class Pair implements Comparable<Pair> {\n        int x,y,ind;\n\n        public Pair(int x, int y,int ind) {\n            this.x = x;\n            this.y = y;\n            this.ind=ind;\n        }\n        public int compareTo(Pair o) {\n            if(x!=o.x)\n                return x-o.x;\n            return this.y - o.y;\n        }\n        public int hashCode() {\n            return (int)(1L*1000000000*x + y)%1000000007;\n        }\n        public boolean equals(Object o) {\n            if(o instanceof Pair) {\n                Pair other = (Pair)o;\n                return other.hashCode()==this.hashCode();\n            }\n            else return false;\n        }\n        public String toString(){\n            return x+\" \"+y;\n        }\n    }\n    static Scanner sc = new Scanner(System.in);\n    //static Reader sc = new Reader();\n    static StringBuilder sb = new StringBuilder();\n    static PrintWriter pw = new PrintWriter(System.out,true);\n    public static void main(String[] args) throws IOException {\n        //Code start from here\n        int n = sc.nextInt();\n        LinkedList<Integer> list = new LinkedList<>();\n        for(int i=0;i<n;i++)\n            list.add(sc.nextInt());\n        int first= list.peekFirst(),last = list.peekLast(),prev =0,cnt=0;\n        while(!list.isEmpty()) {\n            if(first==last) {\n                if(first>prev) {\n                    int val1 = left_count(list), val2 = right_count(list);\n                    if (val1 > val2) {\n                        add(val1, \"L\");\n                        cnt+=val1;\n                    }else {\n                        add(val2, \"R\");\n                        cnt += val2;\n                    }\n                }\n                break;\n            }\n            if(first>prev && last>prev) {\n                if(first<last) {\n                    sb.append(\"L\");\n                    prev = list.pollFirst();\n                    first = list.peekFirst();\n                }\n                else if(last<first) {\n                    sb.append(\"R\");\n                    prev = list.pollLast();\n                    last = list.peekLast();\n                }\n                cnt++;\n            }\n            else if(first>prev) {\n                int val = left_count(list);\n                cnt+=val;\n                add(val,\"L\");\n                break;\n            } else if(last>prev) {\n                int val = right_count(list);\n                cnt+=val;\n                add(val,\"R\");\n                break;\n            } else\n                break;\n        }\n        System.out.println(cnt);\n        pw.println(sb);\n        pw.flush();\n        pw.close();\n    }\n    static int right_count(LinkedList<Integer> l) {\n        LinkedList<Integer> local = new LinkedList<>();\n        for(int i : l)\n            local.add(i);\n        int cnt=1,x = local.pollLast();\n        while(!local.isEmpty()) {\n            if(local.peekLast()>x) {\n                cnt++;\n                x= local.pollLast();\n            } else\n                return cnt;\n        }\n        return cnt;\n    }\n    static int left_count(LinkedList<Integer> l) {\n        LinkedList<Integer> local = new LinkedList<>();\n        for(int i : l)\n            local.add(i);\n        int cnt=1,x = local.pollFirst();\n        while(!local.isEmpty()) {\n            if(local.peekFirst()>x) {\n                cnt++;\n                x= local.pollFirst();\n            } else\n                return cnt;\n        }\n        return cnt;\n    }\n    static void add(int val,String str) {\n        while(val-->0)\n            sb.append(str);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nans=[]\na=list(map(int,input().split()))\nl=-0\nr=n-1\nnow=0\nwhile l<=r:\n    #print(l,r,now,a[l],a[r])\n    if a[l]<a[r] and a[l]>now:\n        now=a[l]\n        l+=1\n        ans.append('L')\n    elif a[r]<a[l] and a[r]>now:\n        now=a[r]\n        r-=1\n        ans.append('R')\n    elif a[r]<a[l] and a[l]>now:\n        now=a[l]\n        l+=1\n        ans.append('L')\n    elif a[l]<a[r] and a[r]>now:\n        now=a[r]\n        r-=1\n        ans.append('R')\n    elif a[l]==a[r]:\n        #print(l,r,now)\n        if a[l]<=now:\n            break\n        nowl=now\n        nowr=now\n        pos=l\n        cnt1=0\n        cnt2=0\n        while pos<=r and a[pos]>nowl:\n            nowl=a[pos]\n            pos+=1\n            cnt1+=1\n        pos=r\n        while l<=pos and a[pos]>nowr:\n            nowr=a[pos]\n            pos-=1\n            cnt2+=1\n        if (cnt1>cnt2):\n            for i in range(0,cnt1):\n                ans.append('L')\n        else:\n            for i in range(0,cnt2):\n                ans.append('R')\n        break\n    else:\n        break\nprint(len(ans))\nfor i in ans:\n    print(i,end=\"\")\n\n\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\nfrom collections import *\nfrom copy import copy\n\nrints = lambda: [int(x) for x in stdin.readline().split()]\nn, a, ans, lst = int(input()), deque(rints()), [], 0\n\nwhile a:\n    if a[0] <= lst and a[-1] <= lst:\n        break\n\n    if a[0] > lst and a[-1] > lst:\n        if a[0] < a[-1]:\n            lst = a.popleft()\n            ans.append('L')\n\n        elif a[-1] < a[0]:\n            lst = a.pop()\n            ans.append('R')\n        else:\n            break\n\n    elif a[0] > lst:\n        lst = a.popleft()\n        ans.append('L')\n\n    else:\n        lst = a.pop()\n        ans.append('R')\n\na1, lst1, r, l = copy(a), lst, 0, 0\nwhile a:\n    if a[-1] <= lst:\n        break\n    lst = a.pop()\n    r += 1\n\nwhile a1:\n    if a1[0] <= lst1:\n        break\n    lst1 = a1.popleft()\n    l += 1\n\nans.extend(['R' for _ in range(r)] if r > l else ['L' for _ in range(l)])\n\nprint('%d\\n%s' % (len(ans), ''.join(ans)))\n"
        },
        {
            "language": 4,
            "solution": "// import java.io.*;\n// import java.util.*;\n\n// public class CF1157C {\n//     public static void main(String[] args) throws IOException {\n//         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n//         int n = Integer.parseInt(br.readLine());\n//         StringTokenizer st = new StringTokenizer(br.readLine());\n//         int[] aa = new int[n];\n//         for (int i = 0; i < n; i++)\n//             aa[i] = Integer.parseInt(st.nextToken());\n//         StringBuilder sb = new StringBuilder();\n//         int a = 0;\n//         for (int i = 0, j = n - 1; i <= j; )\n//             if (aa[i] < aa[j]) {\n//                 if (a < aa[i]) {\n//                     sb.append('L');\n//                     a = aa[i++];\n//                 } else if (a < aa[j]) {\n//                     sb.append('R');\n//                     a = aa[j--];\n//                 } else\n//                     break;\n//             } else if (aa[j] < aa[i]) {\n//                 if (a < aa[j]) {\n//                     sb.append('R');\n//                     a = aa[j--];\n//                 } else if (a < aa[i]) {\n//                     sb.append('L');\n//                     a = aa[i++];\n//                 } else\n//                     break;\n//             } else {\n//                 int a_ = a;\n//                 int l = 0;\n//                 for (int h = i; h <= j && a_ < aa[h]; h++) {\n//                     a_ = aa[h];\n//                     l++;\n//                 }\n//                 a_ = a;\n//                 int r = 0;\n//                 for (int h = j; h >= i && a_ < aa[h]; h--) {\n//                     a_ = aa[h];\n//                     r++;\n//                 }\n//                 if (l >= r)\n//                     while (l-- > 0)\n//                         sb.append('L');\n//                 else\n//                     while (r-- > 0)\n//                         sb.append('R');\n//                 break;\n//             }\n//         System.out.println(sb.length());\n//         System.out.println(sb);\n//     }\n// }package Round555;\n\nimport java.util.Scanner;\n\npublic class C2 {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0 ; i < a.length ; i ++) {\n            a[i] = sc.nextInt();\n        }\n        int t=0,count=0;\n        StringBuffer sb = new StringBuffer();\n        for (int l=0,r=a.length-1; l <= r ; ) {\n            if (a[l]>a[r]) {\n                if (t>=a[r]) {\n                    if (t>=a[l]) break;\n                    else {\n                        count++;\n                        t = a[l];\n                        l++;\n                        sb.append('L');\n                    }\n                } else {\n                    count++;\n                    t = a[r];\n                    r--;\n                    sb.append('R');\n                }\n            } else if (a[l]<a[r]){\n                if (t>=a[l]) {\n                    if (t>=a[r]) break;\n                    else {\n                        count++;\n                        t = a[r];\n                        r--;\n                        sb.append('R');\n                    }\n                } else {\n                    count++;\n                    t = a[l];\n                    l++;\n                    sb.append('L');\n                }\n            } else {\n                if (t<a[l]) {\n                    count++;\n                    int t1 = a[l];\n                    int t2 = a[r];\n                    int x = 0,y = 0;\n                    for (int i = l+1 ; i < a.length ; i++) {\n                        if (t1<a[i]) {\n                            t1 = a[i];\n                            x++;\n                        }\n                        else break;\n                    }\n                    for (int i = r-1 ; i>=0; i --) {\n                        if (t2<a[i]) {\n                            t2 = a[i];\n                            y++;\n                        }\n                        else break;\n                    }\n                    if (x>y) {\n                        count+=x;\n                        sb.append('L');\n                        while (x-->0) sb.append('L');\n                    }\n                    else {\n                        count+=y;\n                        sb.append('R');\n                        while (y-->0) sb.append('R');\n                    }\n                }\n                break;\n            }\n        }\n        System.out.println(count);\n        System.out.println(sb.toString());\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\nimport java.lang.*;\n\npublic class Main implements Runnable {\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        public int nextInt() {\n            int c = read();\n\n            while (isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new Main(), \"Main\", 1 << 26).start();\n    }\n\n    static long gcd(long a, long b) {\n        if (b == 0) return a;\n        return gcd(b, a % b);\n    }\n\n    static int gcd(int a, int b) {\n        if (b == 0) return a;\n        return gcd(b, a % b);\n    }\n\n    static long modPow(long a, long p, long m) {\n        if (a == 1) return 1;\n        long ans = 1;\n        while (p > 0) {\n            if (p % 2 == 1) ans = (ans * a) % m;\n            a = (a * a) % m;\n            p >>= 1;\n        }\n        return ans;\n    }\n\n    static long modInv(long a, long m) {\n        return modPow(a, m - 2, m);\n    }\n\n    static long sol_x, sol_y, gcd_a_b;\n\n    static void extendedEuclid(long a, long b) {\n        if (b == 0) {\n            gcd_a_b = a;\n            sol_x = 1;\n            sol_y = 0;\n        } else {\n            extendedEuclid(b, a % b);\n            long temp = sol_x;\n            sol_x = sol_y;\n            sol_y = temp - (a / b) * sol_y;\n        }\n    }\n\n    long modInverse(long a, long prime)\n    {\n        a = a % prime;\n        for (int x=1; x<prime; x++)\n            if ((a*x) % prime == 1)\n                return x;\n\n        return -1;\n    }\n\n    static class Bhavansort {\n        Random random;\n\n        Bhavansort(int a[]) {\n            randomArray(a);\n            sort(a);\n        }\n\n        Bhavansort(long a[]) {\n            randomArray(a);\n            sort(a);\n        }\n\n        static int[] sort(int a[]) {\n            Arrays.sort(a);\n            return a;\n        }\n\n        static long[] sort(long a[]) {\n            Arrays.sort(a);\n            return a;\n        }\n\n        void randomArray(long a[]) {\n            int n = a.length;\n            for (int i = 0; i < n; i++) {\n                int p = random.nextInt(n) % n;\n                long tm = a[i];\n                a[i] = a[p];\n                a[p] = tm;\n            }\n        }\n\n        void randomArray(int a[]) {\n            int n = a.length;\n            for (int i = 0; i < n; i++) {\n                int p = random.nextInt(n) % n;\n                int tm = a[i];\n                a[i] = a[p];\n                a[p] = tm;\n            }\n        }\n    }\n\n\n    public void run() {\n        InputReader sc = new InputReader(System.in);\n        //Scanner sc=new Scanner(System.in);\n        // Random rn=new Random();\n        PrintWriter out = new PrintWriter(System.out);\n\n\n        int n=sc.nextInt();\n        int a[]=new int[n];\n        for (int i = 0; i <n ; i++) {\n            a[i]=sc.nextInt();\n        }\n        if(n==1){\n            out.println(1);\n            out.println(\"L\");\n            out.close();return;\n        }\n        int l=0,r=n-1;\n        ArrayList<Integer> temp=new ArrayList<>();\n        temp.add(Integer.MIN_VALUE);\n        ArrayList<Character> ans=new ArrayList<>();\n        while (l<=r){\n            if(l==r){\n                if(temp.get(temp.size()-1)<a[l]){\n                    temp.add(a[l]);\n                    ans.add('L');\n                    break;\n                }\n                else{\n                    break;\n                }\n            }\n            else{\n                if(a[l]<a[r] && temp.get(temp.size()-1)<a[l]){\n                    temp.add(a[l]);\n                    ans.add('L');\n                    l++;\n                }\n                else if(a[r]<a[l]  && temp.get(temp.size()-1)<a[r]){\n                    temp.add(a[r]);\n                    ans.add('R');\n                    r--;\n                }\n                else{\n                    int t1=0,t2=0,tempL=l,tempR=r;\n                    ArrayList<Integer> jj1=new ArrayList<>();\n                    ArrayList<Integer> jj2=new ArrayList<>();\n                    jj1.add(Integer.MIN_VALUE);\n                    jj2.add(Integer.MIN_VALUE);\n                    while (a[tempL]>jj1.get(jj1.size()-1) && tempL<=r){\n                        if(jj1.size()==1){\n                            if(a[tempL]<=temp.get(temp.size()-1)){\n                                break;\n                            }\n                        }\n                        jj1.add(a[tempL]);\n                        t1++;\n                        tempL++;\n                    }\n\n                    while (a[tempR]>jj2.get(jj2.size()-1) && tempR>=l){\n                        if(jj2.size()==1){\n                            if(a[tempR]<=temp.get(temp.size()-1)){\n                                break;\n                            }\n                        }\n                        jj2.add(a[tempR]);\n                        t2++;\n                        tempR--;\n                    }\n                    if(t1>=t2){\n                        while (t1-->0){\n                            ans.add('L');\n                        }\n                    }\n                    else{\n                        while (t2-->0){\n                            ans.add('R');\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n\n        out.println(ans.size());\n        for(char x:ans){\n            out.print(x);\n        }\n        out.close();\n    }\n\n\n\n}"
        },
        {
            "language": 3,
            "solution": "\n\nn = int(input())\n\na = list(map(int, input().split()))\n\n\np1 = 0\np2 = n - 1\n\nm = 0\ns = \"\"\n\nwhile p1 <= p2:\n\n    if m < a[p1] < a[p2]:\n        s += ('L')\n        m = a[p1]\n        p1 += 1\n\n    elif a[p1] <= m < a[p2]:\n        s += ('R')\n        m = a[p2]\n        p2 -= 1\n    elif m < a[p2] < a[p1]:\n        s += ('R')\n        m = a[p2]\n        p2 -= 1\n    elif a[p2] <= m < a[p1]:\n        s += ('L')\n        m = a[p1]\n        p1 += 1\n\n    elif a[p1] <= m and a[p2] <= m:\n        break\n    elif p1 == p2:\n        s += ('R')\n        p1 += 1\n    elif a[p1] == a[p2] and a[p1] > m:\n\n        sp2 = \"R\"\n        p22 = p2\n\n        while p22 > p1 and a[p22-1] > a[p22]:\n            sp2 += 'R'\n            p22 -= 1\n\n        sp1 = \"L\"\n        p11 = p1\n\n        while p11 < p2 and a[p11+1] > a[p11]:\n            sp1 += \"L\"\n            p11 += 1\n\n        if len(sp2) > len(sp1):\n            s += sp2\n        else:\n            s += sp1\n\n        break\n    else:\n        break\n            \n\n\n\nprint (len(s))\nprint (s)\n\n"
        },
        {
            "language": 3,
            "solution": "def fun(array):\n\tans=''\n\tcount=0\n\tl,r=0,n-1\n\tlast=-1\n\twhile l<=r:\n\t\tif min(array[l],array[r])<=last:\n\t\t\tbreak\n\t\tif array[l]<array[r]:\n\t\t\tlast=array[l]\n\t\t\tans+='L'\n\t\t\tl+=1\n\t\t\tcount+=1\n\n\t\telif array[l]>array[r]:\n\t\t\tlast=array[r]\n\t\t\tans+='R'\n\t\t\tr-=1\n\t\t\tcount+=1\n\t\telse:\n\t\t\tbreak\n\n\tans_1=ans\n\tlast_1=last\n\tl_1=l\n\twhile l_1<=r and array[l_1]>last_1:\n\t\tans_1+='L'\n\t\tlast_1=array[l_1]\n\t\tl_1+=1\n\n\tans_2=ans\n\tlast_2=last\n\tr_2=r\n\twhile r_2>=l and array[r_2]>last_2:\n\t\tans_2+='R'\n\t\tlast_2=array[r_2]\n\t\tr_2-=1\n\n\tif len(ans_1)>len(ans_2):\n\t\tans=ans_1\n\telse:\n\t\tans=ans_2\n\tprint(len(ans))\n\tprint(ans)\n\n\n\nn=int(input())\narray=list(map(int,input().split( )))\nfun(array)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int N;\n  cin >> N;\n  string str_01;\n  deque<int> dq_01, dq_02;\n  deque<int>::iterator It;\n  dq_02.emplace_back(0);\n  for (int i = 0; i < N; i++) {\n    int element;\n    cin >> element;\n    dq_01.push_back(element);\n  }\n  while (!dq_01.empty()) {\n    if (dq_02.back() < *dq_01.begin() || dq_02.back() < *(dq_01.end() - 1)) {\n      if (dq_02.back() < *dq_01.begin() && dq_02.back() < *(dq_01.end() - 1)) {\n        if (*dq_01.begin() < *(dq_01.end() - 1)) {\n          dq_02.push_back(*dq_01.begin());\n          dq_01.pop_front();\n          str_01 += 'L';\n        } else if (*dq_01.begin() > *(dq_01.end() - 1)) {\n          dq_02.push_back(*(dq_01.end() - 1));\n          dq_01.pop_back();\n          str_01 += 'R';\n        } else {\n          if (dq_01.size() > 1) {\n            int pre_01 = *dq_01.begin(), count_01 = 0;\n            for (It = dq_01.begin() + 1; It != dq_01.end(); It++) {\n              if (*It > pre_01) {\n                count_01++;\n                pre_01 = *It;\n              } else {\n                break;\n              }\n            }\n            int pre_02 = *(dq_01.end() - 1), count_02 = 0;\n            for (It = dq_01.end() - 2; It != dq_01.begin(); It--) {\n              if (*It > pre_02) {\n                count_02++;\n                pre_02 = *It;\n              } else {\n                break;\n              }\n            }\n            if (count_01 >= count_02) {\n              dq_02.push_back(*dq_01.begin());\n              dq_01.pop_front();\n              str_01 += 'L';\n            } else {\n              dq_02.push_back(*(dq_01.end() - 1));\n              dq_01.pop_back();\n              str_01 += 'R';\n            }\n          } else {\n            str_01 += 'R';\n            dq_01.pop_back();\n          }\n        }\n      } else {\n        if (dq_02.back() < *(dq_01.begin())) {\n          dq_02.push_back(*dq_01.begin());\n          dq_01.pop_front();\n          str_01 += 'L';\n        } else {\n          dq_02.push_back(*(dq_01.end() - 1));\n          dq_01.pop_back();\n          str_01 += 'R';\n        }\n      }\n    } else {\n      break;\n    }\n  }\n  cout << str_01.size() << \"\\n\" << str_01 << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = (1e5);\nlong long a[N];\nstring L = \"L\";\nstring R = \"R\";\nstring solve(int a[], int c, int l, int r) {\n  string s = \"\";\n  if (c >= a[r] && c >= a[l]) return s;\n  if (l > r) return s;\n  if (c < a[l] && c < a[r]) {\n    if (a[l] < a[r]) {\n      return L + solve(a, a[l], l + 1, r);\n    } else if (a[l] > a[r]) {\n      return R + solve(a, a[r], l, r - 1);\n    } else {\n      string ls = L + solve(a, a[l], l + 1, r);\n      string rs = R + solve(a, a[r], l, r - 1);\n      return (ls.size() > rs.size() ? ls : rs);\n    }\n  } else if (c < a[r]) {\n    return R + solve(a, a[r], l, r - 1);\n  } else if (c < a[l]) {\n    return L + solve(a, a[l], l + 1, r);\n  } else {\n  }\n  return s;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  int i, a[n];\n  for (i = 0; i < n; i++) cin >> a[i];\n  string s = solve(a, -1, 0, n - 1);\n  cout << s.size() << endl;\n  cout << s << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nai = list(map(int,input().split()))\nans = 0\nans2 = \"\"\nnum = 0\nleft = 0\nright = n-1\nflag = 0\nfor i in range(n):\n    if ai[left] <= num:\n        if ai[right] <= num:\n            break\n        num = ai[right]\n        ans += 1\n        right -= 1\n        ans2 += \"R\"\n        continue\n        \n    if ai[right] <= num:\n        if ai[left] <= num:\n            break\n        num = ai[left]\n        ans += 1\n        left += 1\n        ans2 += \"L\"\n        continue\n    if ai[left] > ai[right]:\n        num = ai[right]\n        ans += 1\n        right -= 1\n        ans2 += \"R\"\n    elif ai[left] == ai[right]:\n        if left == right:\n            ans += 1\n            ans2 += \"L\"\n            break\n        flag = 1\n        break\n    else:\n        num = ai[left]\n        ans += 1\n        left += 1\n        ans2 += \"L\"\nif flag == 1:\n    left2 = left\n    temp = 0\n    num2 = num\n    while left2 < right:\n        if ai[left2] > num2:\n            temp += 1\n            num2 = ai[left2]\n        else:\n            break\n        left2 += 1\n    temp2 = 0\n    right2 = right\n    num2 = num\n    while right2 > left:\n        if ai[right2] > num2:\n            temp2 += 1\n            num2 = ai[right2]\n        else:\n            break\n        right2 -= 1\n    if temp >= temp2:\n        ans += temp\n        ans2 += \"L\" * temp\n    else:\n        ans += temp2\n        ans2 += \"R\" * temp2\nprint(ans)\nprint(ans2)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int next_x[8] = {0, 1, -1, 0, 1, 1, -1, -1};\nconst int next_y[8] = {1, 0, 0, -1, 1, -1, -1, 1};\nconst int inf = 2147483640;\nconst long long linf = 1e15;\ntemplate <class T>\nT fast_pow(T x, T k, T m) {\n  T ans = 1;\n  while (k) {\n    if (k % 2 == 1) ans = ans * x % m;\n    k = k / 2;\n    x = x * x % m;\n  }\n  return ans;\n}\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nint exgcd(int a, int b, int &x, int &y) {\n  if (b == 0) {\n    x = 1, y = 0;\n    return a;\n  }\n  int d = exgcd(b, a % b, x, y);\n  int t = x;\n  x = y;\n  y = t - a / b * y;\n  return d;\n}\nbool exgcd_work(int a, int b, int &x, int &y, int c) {\n  int g = exgcd(a, b, x, y);\n  int _a = a / g, _b = b / g;\n  if (c % g != 0) return 0;\n  while (x <= 0) x += _a, y += _b;\n  x *= c / g, y *= c / g;\n  return 1;\n}\ntemplate <class T>\nT muti_gcd(T a[], int n) {\n  T ans = a[1];\n  for (int i = 2; i <= n; i++) ans = gcd(ans, a[i]);\n  return ans;\n}\nlong long lcm(long long a, long long b) { return a / gcd(a, b) * b; }\nvoid init_prime(bool not_prime[], int prime[], int &head, int n) {\n  not_prime[1] = 1;\n  for (int i = 2; i <= n; i++) {\n    if (!not_prime[i]) prime[++head] = i;\n    for (int j = 1; j <= head && (long long)prime[j] * i <= n; j++) {\n      not_prime[prime[j] * i] = 1;\n      if (i % prime[j] == 0) break;\n    }\n  }\n}\nbool is_prime(int x) {\n  int t = sqrt(x);\n  for (int i = 2; i <= t; i++)\n    if (x % i == 0) return 0;\n  return 1;\n}\nint crt(int n, int a[], int m[]) {\n  int d = 1, x, y, ans = 0;\n  for (int i = 1; i <= n; i++) d = d * m[i];\n  for (int i = 1; i <= n; i++) {\n    int M = d / m[i];\n    exgcd(M, m[i], x, y);\n    ans = (ans + M * x * a[i]) % d;\n  }\n  if (ans < 0) ans += d;\n  return ans;\n}\nint get_phi(int n) {\n  int ans = n, t = sqrt(n);\n  for (int i = 2; i <= t; i++) {\n    if (n % i == 0) {\n      ans -= ans / i;\n      while (n % i == 0) n /= i;\n    }\n  }\n  if (n > 1) ans -= ans / n;\n  return ans;\n}\nint init_phi() { return -1; }\nlong long euler(long long a, string b, long long m) {\n  bool flag = 0;\n  long long t = 0, phi_m = get_phi(m);\n  for (string::iterator p = b.begin(); p != b.end(); p++) {\n    t = t * 10 + (*p) - '0';\n    if (t >= phi_m) t %= phi_m, flag = 1;\n  }\n  return flag ? fast_pow(a, t % phi_m + phi_m, m) : fast_pow(a, t, m);\n}\ntemplate <size_t sz, long long MOD>\nstruct mat {\n  int n, m;\n  long long a[sz][sz];\n  mat(int x = 0) { n = m = x, memset(this->a, 0, sizeof(this->a)); }\n  mat(int x, int y) { n = x, m = y, memset(this->a, 0, sizeof(this->a)); }\n  void unit(int x) {\n    n = m = x;\n    memset(a, 0, sizeof(a));\n    for (int i = 1; i <= n; i++) a[i][i] = 1;\n  }\n  long long *operator[](size_t i) { return a[i]; }\n  mat operator*(mat x) {\n    mat res(n, x.m);\n    if (m == x.n) {\n      for (int k = 1; k <= m; k++)\n        for (int i = 1; i <= n; i++)\n          for (int j = 1; j <= x.m; j++)\n            res.a[i][j] = (res.a[i][j] + a[i][k] * x.a[k][j] % MOD) % MOD;\n    }\n    return res;\n  }\n  void operator*=(mat x) { *this = (*this) * x; }\n  void pow(long long k) {\n    mat<sz, MOD> ans(n), x = (*this);\n    ans.unit(ans.n);\n    while (k) {\n      if (k & 1) ans = ans * x;\n      k = k >> 1, x = x * x;\n    }\n    (*this) = ans;\n  }\n  void print(bool flag = 0) {\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= m; j++) printf(\"%lld \", a[i][j]);\n      printf(\"\\n\");\n    }\n    if (flag)\n      for (int i = 1; i <= n; i++) printf(\"-\");\n    if (flag) printf(\"\\n\");\n  }\n  void read() {\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= m; j++) scanf(\"%lld\", &a[i][j]);\n  }\n};\nlong long get_inv(long long x, long long mod) {\n  return fast_pow(x, mod - 2, mod);\n}\ntemplate <size_t sz>\nbool guass(double a[][sz], int n) {\n  double t;\n  int i = 1, to;\n  const double eps = 1e-6;\n  for (int i = 1; i <= n; i++) {\n    for (to = i; to <= n; to++)\n      if (fabs(a[to][i]) > eps) break;\n    if (to > n) continue;\n    if (to != i)\n      for (int j = 1; j <= n + 1; j++) swap(a[to][j], a[i][j]);\n    t = a[i][i];\n    for (int j = 1; j <= n + 1; j++) a[i][j] /= t;\n    for (int j = 1; j <= n; j++) {\n      if (j == i) continue;\n      t = a[j][i];\n      for (int k = 1; k <= n + 1; k++) a[j][k] -= t * a[i][k];\n    }\n  }\n  for (int i = 1; i <= n; i++)\n    if (fabs(a[i][n + 1]) > eps) return 0;\n  return 1;\n}\ntemplate <size_t sz>\nvoid guass(long long a[][sz], int n, int MOD) {\n  long long t;\n  int i = 1, to;\n  for (int i = 1; i <= n; i++) {\n    for (to = i; to <= n; to++)\n      if (a[to][i]) break;\n    if (to > n) continue;\n    if (to != i)\n      for (int j = 1; j <= n + 1; j++) swap(a[to][j], a[i][j]);\n    t = get_inv(a[i][i], MOD);\n    for (int j = 1; j <= n + 1; j++) a[i][j] *= t, a[i][j] %= MOD;\n    for (int j = 1; j <= n; j++) {\n      if (j == i) continue;\n      t = a[j][i];\n      for (int k = 1; k <= n + 1; k++)\n        a[j][k] = ((a[j][k] - t * a[i][k] % MOD) % MOD + MOD) % MOD;\n    }\n  }\n}\nint read() {\n  int t = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    t = t * 10 + ch - '0';\n    ch = getchar();\n  }\n  return t * f;\n}\nextern const int MAXN = 200005;\nextern const int N = 10000000;\nint n, mx = 0;\nint a[MAXN];\nstring ans;\nint work() {\n  n = read();\n  for (int i = 1; i <= n; i++) a[i] = read();\n  int l = 1, r = n;\n  while (l <= r) {\n    if (a[l] > mx && a[r] > mx) {\n      if (a[l] == a[r]) {\n        int tl = l + 1, tr = r - 1;\n        while (a[tl] > a[tl - 1] && tl < r) tl++;\n        while (a[tr] > a[tr + 1] && tr > l) tr--;\n        if (tl - l - 1 > r - tr - 1)\n          ans.push_back('L'), mx = a[l++];\n        else\n          ans.push_back('R'), mx = a[r--];\n      } else {\n        if (a[l] > a[r])\n          ans.push_back('R'), mx = a[r--];\n        else\n          ans.push_back('L'), mx = a[l++];\n      }\n    } else {\n      if (a[l] > mx) ans.push_back('L'), mx = a[l++];\n      if (a[r] > mx) ans.push_back('R'), mx = a[r--];\n    }\n    if (a[l] <= mx && a[r] <= mx) break;\n  }\n  cout << ans.length() << endl;\n  cout << ans << endl;\n  return 1;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  work();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(item) for item in input().split()]\n\ns = []\ni = 0\nj = n - 1\nans = []\nwhile i <= j:\n    if a[i] < a[j]:\n        if not s or s[-1] < a[i]:\n            s.append(a[i])\n            ans.append('L')\n            i += 1\n        elif not s or s[-1] < a[j]:\n            s.append(a[j])\n            ans.append('R')\n            j -= 1\n        else:\n            break\n    elif a[i] > a[j]:\n        if not s or s[-1] < a[j]:\n            ans.append('R')\n            s.append(a[j])\n            j -= 1\n        elif not s or s[-1] < a[i]:\n            s.append(a[i])\n            ans.append('L')\n            i += 1\n        else:\n            break\n    else:\n        p1 = 0\n        p2 = 0\n        cur_last = s[-1] if s else None\n        or_i = i\n        while i <= j and (cur_last is None or a[i] > cur_last):\n            cur_last = a[i]\n            i += 1\n            p1 += 1\n\n        cur_last = s[-1] if s else None\n        while or_i <= j and (cur_last is None or a[j] > cur_last):\n            cur_last = a[j]\n            j -= 1\n            p2 += 1\n        if p1 > p2:\n            ans += list(\"L\" * p1)\n        else:\n            ans += list(\"R\" * p2)\n        break\n\nprint(len(ans))\nprint(''.join(str(x) for x in ans))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int arr[n];\n  for (int i = 0; i < n; i++) scanf(\"%d\", arr + i);\n  int i = 0, j = n - 1, min = 0, c = 0;\n  char str[n + 1];\n  while (i < n && arr[i] > min || j > -1 && arr[j] > min) {\n    if (arr[i] < arr[j] && arr[i] > min || arr[j] <= min) {\n      min = arr[i];\n      i++;\n      str[c] = 'L';\n    } else if (arr[j] < arr[i] && arr[j] > min || arr[i] <= min) {\n      min = arr[j];\n      j--;\n      str[c] = 'R';\n    } else {\n      int c1 = 0, c2 = 0;\n      while (arr[i + c1] < arr[i + c1 + 1]) c1++;\n      while (arr[j - c2] < arr[j - c2 - 1]) c2++;\n      if (c1 > c2) {\n        min = arr[i];\n        i++;\n        str[c] = 'L';\n      } else {\n        min = arr[j];\n        j--;\n        str[c] = 'R';\n      }\n    }\n    c++;\n  }\n  str[c] = 0;\n  printf(\"%d\\n%s\", c, str);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> arr(n);\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  int last = 0;\n  int ans = 0;\n  string s = \"\";\n  int l = 0, r = n - 1;\n  while (1) {\n    int k = INT_MAX;\n    if (arr[l] > last) {\n      k = arr[l];\n    }\n    if (arr[r] > last) {\n      k = min(k, arr[r]);\n    }\n    if (k != arr[l] && k != arr[r]) {\n      break;\n    }\n    ans++;\n    last = k;\n    if (k == arr[r] && k == arr[l]) {\n      int c1 = 0, c2 = 0;\n      for (int i = l + 1; i < r; i++) {\n        if (arr[i] > arr[i - 1]) {\n          c1++;\n        } else {\n          break;\n        }\n      }\n      c1++;\n      c2++;\n      for (int i = r - 1; i > l; i--) {\n        if (arr[i] > arr[i + 1]) {\n          c2++;\n        } else {\n          break;\n        }\n      }\n      ans += max(c1, c2);\n      cout << ans - 1 << endl;\n      cout << s;\n      if (c1 >= c2) {\n        for (int i = 0; i < c1; i++) {\n          cout << \"L\";\n        }\n      } else {\n        for (int i = 0; i < c2; i++) {\n          cout << \"R\";\n        }\n      }\n      return 0;\n    } else if (k == arr[r]) {\n      r--;\n      s += 'R';\n    } else {\n      l++;\n      s += 'L';\n    }\n    if (l > r) {\n      break;\n    }\n  }\n  cout << ans << endl;\n  cout << s;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int l = 0, r = n - 1;\n  string answer = \"\";\n  int cur = INT_MIN;\n  while (l <= r) {\n    if (a[l] > cur && a[r] > cur) {\n      if (a[l] < a[r]) {\n        answer += 'L';\n        cur = a[l];\n        l++;\n      } else if (a[r] < a[l]) {\n        answer += 'R';\n        cur = a[r];\n        r--;\n      } else if (a[l] == a[r]) {\n        if (l == r) {\n          answer += 'L';\n          l++;\n          continue;\n        }\n        int i = l;\n        int curs = cur;\n        while (i < r) {\n          if (a[i] > curs) {\n            curs = a[i];\n            i++;\n          } else\n            break;\n        }\n        i--;\n        int first = i - l + 1;\n        int j = r;\n        curs = cur;\n        while (j > l) {\n          if (a[j] > curs) {\n            curs = a[j];\n            j--;\n          } else\n            break;\n        }\n        j++;\n        int second = r - j + 1;\n        if (first >= second) {\n          while (first--) {\n            answer += 'L';\n          }\n          l = i;\n          cur = a[l];\n        } else {\n          while (second--) {\n            answer += 'R';\n          }\n          r = j;\n          cur = a[r];\n        }\n      }\n    } else if (a[l] > cur) {\n      answer += 'L';\n      cur = a[l];\n      l++;\n    } else if (a[r] > cur) {\n      answer += 'R';\n      cur = a[r];\n      r--;\n    } else\n      break;\n  }\n  cout << answer.size() << \"\\n\";\n  cout << answer << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "###########################################\n#  Author : Uranux   \n#  Created On : Wed Apr 24 2019\n#  File : C.py\n###########################################\n\nfrom math import sqrt\n\ndef input_s():\n    return raw_input()\n\ndef input_i():\n    return int(raw_input())\n\ndef input_2_i():\n    arr = map(int, raw_input().split())\n    return arr[0], arr[1]\n\ndef input_3_i():\n    arr = map(int, raw_input().split())\n    return arr[0], arr[1], arr[2]\n\ndef input_i_array():\n    return map(int, raw_input().split())\n\ndef get_presum(n, arr):\n    presum = [arr[0]]\n    for i in range(1, n):\n        presum.append(presum[i - 1] + arr[i])\n    return presum\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\ndef calc(n, arr):\n    l_pos = 0\n    r_pos = n - 1\n    ans = []\n    cnt_val = 0\n    while l_pos <= r_pos:\n        if cnt_val < arr[l_pos] and cnt_val < arr[r_pos]:\n            if arr[l_pos] < arr[r_pos]:\n                ans.append('L')\n                cnt_val = arr[l_pos]\n                l_pos += 1\n            elif arr[l_pos] > arr[r_pos]:\n                ans.append('R')\n                cnt_val = arr[r_pos]\n                r_pos -= 1\n            else:\n                cnt_ans1 = 0\n                for i in range(l_pos, r_pos):\n                    if arr[i] >= arr[i + 1]:\n                        break\n                    cnt_ans1 += 1\n                cnt_ans2 = 0\n                for i in range(r_pos, l_pos + 1, -1):\n                    if arr[i] >= arr[i - 1]:\n                        break\n                    cnt_ans2 += 1\n\n                if cnt_ans1 > cnt_ans2:\n                    ans.append('L' * (cnt_ans1 + 1))\n                else:\n                    ans.append('R' * (cnt_ans2 + 1))\n\n                break\n\n        elif cnt_val < arr[l_pos]:\n            ans.append('L')\n            cnt_val = arr[l_pos]\n            l_pos += 1\n        elif cnt_val < arr[r_pos]:\n            ans.append('R')\n            cnt_val = arr[r_pos]\n            r_pos -= 1\n        else:\n            break\n\n    return ''.join(ans)          \n\n\n\"\"\"\n5\n1 2 4 3 2\n\"\"\"\n\nn = input_i()\narr = input_i_array()\n\ns = calc(n, arr)\nprint len(s)\nprint s\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 5e3 + 5, mod = 998244353;\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long arr[n];\n  for (long long &x : arr) cin >> x;\n  string ans = \"\";\n  long long l = 0, r = n - 1, last = 0;\n  while (l < r) {\n    if (arr[l] < arr[r]) {\n      if (arr[l] > last) {\n        last = arr[l];\n        l++;\n        ans += 'L';\n      } else if (arr[r] > last) {\n        ans += 'R';\n        last = arr[r];\n        r--;\n      } else\n        break;\n    } else if (arr[r] < arr[l]) {\n      if (arr[r] > last) {\n        ans += 'R';\n        last = arr[r];\n        r--;\n      } else if (arr[l] > last) {\n        last = arr[l];\n        l++;\n        ans += 'L';\n      } else\n        break;\n    } else {\n      long long cnt1 = 0, last1 = last;\n      for (long long i = l; i < r; i++) {\n        if (arr[i] > last1) {\n          cnt1++;\n          last1 = arr[i];\n        } else\n          break;\n      }\n      long long cnt2 = 0, last2 = last;\n      for (long long i = r; i > l; i--) {\n        if (arr[i] > last2) {\n          last2 = arr[i];\n          cnt2++;\n        } else\n          break;\n      }\n      if (cnt1 > cnt2) {\n        string rem(cnt1, 'L');\n        ans += rem;\n      } else {\n        string rem(cnt2, 'R');\n        ans += rem;\n      }\n      break;\n    }\n  }\n  if (l == r and arr[l] > last) ans += 'L';\n  cout << ans.size() << \"\\n\";\n  cout << ans;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n  long long tc = 1;\n  while (tc--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n  int sum = 0;\n  char c = getchar();\n  while (!isdigit(c)) c = getchar();\n  while (isdigit(c)) {\n    sum = (sum << 1) + (sum << 3) + (c ^ 48);\n    c = getchar();\n  }\n  return sum;\n}\nint const maxn = 2e5 + 5;\nint n, cnt, a[maxn], ans[maxn];\nint main() {\n  n = read();\n  for (int i = 1; i <= n; i++) a[i] = read();\n  int l = 1, r = n, last = 0;\n  while (l <= r) {\n    if (a[l] < a[r] && a[l] > last) {\n      ans[++ans[0]] = 'L';\n      last = a[l], l++;\n      cnt++;\n    } else if (a[r] < a[l] && a[r] > last) {\n      ans[++ans[0]] = 'R';\n      last = a[r], r--;\n      cnt++;\n    } else if (a[l] <= last && a[r] > last) {\n      ans[++ans[0]] = 'R';\n      last = a[r], r--;\n      cnt++;\n    } else if (a[r] <= last && a[l] > last) {\n      ans[++ans[0]] = 'L';\n      last = a[l], l++;\n      cnt++;\n    } else if (a[l] == a[r]) {\n      int tlast = last, cntl = 0, cntr = 0;\n      for (int i = l; i <= r; i++)\n        if (a[i] > tlast)\n          cntl++, tlast = a[i];\n        else\n          break;\n      tlast = last;\n      for (int i = r; i >= l; i--)\n        if (a[i] > tlast)\n          cntr++, tlast = a[i];\n        else\n          break;\n      if (cntl > cntr) {\n        cnt += cntl;\n        for (int i = 1; i <= cntl; i++) ans[++ans[0]] = 'L';\n      } else {\n        cnt += cntr;\n        for (int i = 1; i <= cntr; i++) ans[++ans[0]] = 'R';\n      }\n      break;\n    } else\n      break;\n  }\n  printf(\"%d\\n\", cnt);\n  for (int i = 1; i <= cnt; i++) putchar(ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException{\n        //BufferedReader f = new BufferedReader(new FileReader(\"uva.in\"));\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        int n = Integer.parseInt(f.readLine());\n        int[] a = new int[n];\n        StringTokenizer st = new StringTokenizer(f.readLine());\n        for(int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(st.nextToken());\n        }\n        int l = 0;\n        int r = n-1;\n        StringBuilder sb = new StringBuilder();\n        int last = 0;\n        while(l <= r) {\n            if(a[l] <= last && a[r] <= last) {\n                break;\n            }\n            if(a[l] > last && a[r] > last) {\n                if(a[l] < a[r]) {\n                    sb.append('L');\n                    last = a[l++];\n                } else if(a[r] < a[l]) {\n                    sb.append('R');\n                    last = a[r--];\n                } else {\n                    int lL = 1;\n                    int lR = 1;\n                    while(l+lL <= r && a[l+lL] > a[l+lL-1]) {\n                        lL++;\n                    }\n                    while(r-lR >= l && a[r-lR] > a[r-lR+1]) {\n                        lR++;\n                    }\n                    if(lL < lR) {\n                        for(int i = 0; i < lR; i++) {\n                            sb.append('R');\n                        }\n                    } else {\n                        for(int i = 0; i < lL; i++) {\n                            sb.append('L');\n                        }\n                    }\n                    break;\n                }\n            } else if(a[l] > last) {\n                sb.append('L');\n                last = a[l++];\n            } else {\n                sb.append('R');\n                last = a[r--];\n            }\n        }\n        out.println(sb.length());\n        out.println(sb);\n        f.close();\n        out.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class IncreasingSubsequence\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner scan = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = scan.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tarr[i] = scan.nextInt();\n\t\tint[] prl = new int[n];\n\t\tfor(int i = n-2; i >= 0; i--)\n\t\t\tif(arr[i] < arr[i+1]) prl[i] = prl[i+1]+1;\n\t\tint[] prr = new int[n];\n\t\tfor(int i = 1; i < n; i++)\n\t\t\tif(arr[i] < arr[i-1]) prr[i] = prr[i-1]+1;\n\t\tArrayList<Character> ans = new ArrayList<Character>();\n\t\tint last = 0;\n\t\tint left = 0;\n\t\tint right = n-1;\n\t\twhile(left <= right){\n\t\t\tint a = arr[left];\n\t\t\tint b = arr[right];\n\t\t\tif(a <= last && b <= last) break;\n\t\t\tif(a <= last){\n\t\t\t\tans.add('R');\n\t\t\t\tlast = arr[right];\n\t\t\t\tright--;\n\t\t\t}\n\t\t\telse if(b <= last){\n\t\t\t\tans.add('L');\n\t\t\t\tlast = arr[left];\n\t\t\t\tleft++;\n\t\t\t}\n\t\t\telse if(a == b){\n\t\t\t\tif(prl[left] > prr[right]){\n\t\t\t\t\tans.add('L');\n\t\t\t\t\tlast = arr[left];\n\t\t\t\t\tleft++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans.add('R');\n\t\t\t\t\tlast = arr[right];\n\t\t\t\t\tright--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(a < b){\n\t\t\t\t\tans.add('L');\n\t\t\t\t\tlast = arr[left];\n\t\t\t\t\tleft++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans.add('R');\n\t\t\t\t\tlast = arr[right];\n\t\t\t\t\tright--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout.println(ans.size());\n\t\tfor(int i = 0; i < ans.size(); i++) out.print(ans.get(i));\n\t\tout.println();\n\t\tout.flush();\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nn=int(input())\na=deque([int(x) for x in input().split()])\ncur=-1\nans=''\nwhile (cur<a[0] or cur<a[-1]):\n    if a[0]<a[-1]:\n        if cur<a[0]:\n            ans+='L'\n            cur=a[0]\n            a.popleft()\n        else:\n            ans+='R'\n            cur=a[-1]\n            a.pop()\n        \n    elif a[0]>a[-1]:\n        if cur<a[-1]:\n            ans+='R'\n            cur=a[-1]\n            a.pop()\n        else:\n            ans+='L'\n            cur=a[0]\n            a.popleft()\n    elif len(a)==1:\n        ans+='R'\n        cur=a[-1]\n        a.pop()\n    elif a[0]==a[-1]:\n        cur1=cur\n        cur2=cur\n        b=a.copy()\n        c=a.copy()\n        count1=0\n        count2=0\n        while cur1<b[0]:\n            count1+=1\n            cur1=b[0]\n            b.popleft()\n        while cur2<c[-1]:\n            count2+=1\n            cur2=c[-1]\n            c.pop()\n        if count1>count2:\n            for i in range(count1):\n                ans+='L'\n            break\n        else:\n            for i in range(count2):\n                ans+='R'\n            break\n            \n    if len(a)==0:\n        break\n\nprint(len(ans))\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\nimport static java.lang.Math.abs;\n\npublic class Solver {\n    static final long L_INF = (long) 1e18;\n    static final int I_INF = (int) 1e9;\n    public static void main(String[] args) throws IOException, FileNotFoundException {\n        FastScanner in = new FastScanner();\n        PrintWriter out = new PrintWriter(System.out);\n        int n = in.nextInt();\n        Deque<Integer>d = new ArrayDeque<>();\n        for (int i = 0; i < n; i++) {\n            d.add(in.nextInt());\n        }\n        ArrayList<String>answer = new ArrayList<>();\n        int last = 0;\n        while (true){\n            if(d.size() == 1){\n                if(d.poll() > last){\n                    answer.add(\"L\");\n                }\n                break;\n            }\n            int maybe = Math.max(d.getFirst(),d.getLast());\n            if(maybe <= last)break;\n             int f = d.getFirst();\n             int l = d.getLast();\n             if(f == l){\n                 int min_l = 0;\n                 int min_r = 0;\n                 Deque<Integer>chech_l = new ArrayDeque<>();\n                 Deque<Integer>check_r = new ArrayDeque<>();\n                 while (!d.isEmpty()){\n                     int t = d.pollFirst();\n                     chech_l.add(t);\n                     check_r.add(t);\n                 }\n                 int last1 = last;\n                 int last2 = last;\n                 while (chech_l.size() > 0 && chech_l.peekFirst() > last1){\n                     last1 = chech_l.pollFirst();\n                     min_l++;\n                 }\n                 while (check_r.size() > 0 && check_r.peekLast() > last2){\n                     last2 = check_r.pollLast();\n                     min_r++;\n                 }\n                 if(min_l > min_r){\n                     for (int i = 0; i < min_l; i++) {\n                         answer.add(\"L\");\n                     }\n                     break;\n                 }else{\n                     for (int i = 0; i < min_r; i++) {\n                         answer.add(\"R\");\n                     }\n                     break;\n                 }\n             }\n             if(f < l){\n                 if(f > last){\n                     answer.add(\"L\");\n                     last = d.pollFirst();\n                 }\n                 else {\n                     answer.add(\"R\");\n                     last = d.pollLast();\n                 }\n             }else{\n                 if(l > last){\n                     answer.add(\"R\");\n                     last = d.pollLast();\n                 }\n                 else {\n                     answer.add(\"L\");\n                     last = d.pollFirst();\n                 }\n             }\n        }\n        out.println(answer.size());\n        for (int i = 0; i < answer.size(); i++) {\n            out.print(answer.get(i));\n        }\n        out.close();\n    }\n\n    static class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        FastScanner(String s) throws FileNotFoundException {\n            br = new BufferedReader(new FileReader(s));\n        }\n\n        FastScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MOD = 1e18 + 7;\nconst long long N = 6e6 + 5;\nlong long a[N], b[N];\nint main() {\n  long long i, j, k, l = 0;\n  long long n, m, t;\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> a[i];\n  i = 0;\n  j = n - 1;\n  t = min(a[i], a[j]) - 1;\n  string s;\n  while (1) {\n    if (i == j) {\n      if (a[i] > t) b[l++] = a[i], s += \"R\";\n      break;\n    }\n    if (a[i] > a[j]) {\n      if (a[j] > t)\n        b[l++] = a[j], t = a[j], j--, s += 'R';\n      else if (a[i] > t)\n        b[l++] = a[i], t = a[i], i++, s += 'L';\n      else\n        break;\n    } else if (a[i] < a[j]) {\n      if (a[i] > t)\n        b[l++] = a[i], t = a[i], i++, s += \"L\";\n      else if (a[j] > t)\n        b[l++] = a[j], t = a[j], j--, s += \"R\";\n      else\n        break;\n    } else {\n      if (a[i] <= t) break;\n      long long ci = 0, cj = 0;\n      for (k = i + 1; k < j; k++) {\n        if (a[k] > a[k - 1])\n          ci++;\n        else\n          break;\n      }\n      for (k = j - 1; k > i; k--) {\n        if (a[k] > a[k + 1])\n          cj++;\n        else\n          break;\n      }\n      if (ci >= cj) {\n        for (k = i; k <= i + ci; k++) b[l++] = a[k], s += \"L\";\n      } else {\n        for (k = j; k >= j - cj; k--) b[l++] = a[k], s += \"R\";\n      }\n      break;\n    }\n  }\n  cout << l << endl;\n  for (i = 0; i < l; i++) cout << s[i];\n  putchar(10);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse4\")\nusing namespace std;\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cerr << '{';\n  __print(x.first);\n  cerr << ',';\n  __print(x.second);\n  cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cerr << '{';\n  for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\ntemplate <typename T, typename TT>\nostream &operator<<(ostream &os, const pair<T, TT> &t) {\n  return os << t.first << \" \" << t.second;\n}\ntemplate <typename T>\nostream &operator<<(ostream &os, const vector<T> &t) {\n  for (auto &i : t) os << i << \" \";\n  return os;\n}\ntemplate <typename T>\nistream &operator>>(istream &is, vector<T> &v) {\n  for (T &t : v) is >> t;\n  return is;\n}\ntemplate <typename T1, typename T2>\nistream &operator>>(istream &is, vector<pair<T1, T2>> &v) {\n  for (pair<T1, T2> &t : v) is >> t.first >> t.second;\n  return is;\n}\nconst long long mod = 1e9 + 7;\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> v(n);\n  cin >> v;\n  string ans = \"\";\n  long long ls = 0;\n  long long i = 0, j = n - 1;\n  vector<long long> l, r;\n  set<long long> s;\n  while (i < n and v[i] > ls) {\n    l.push_back(v[i]);\n    s.insert(v[i]);\n    ls = v[i++];\n  }\n  ls = 0;\n  while (j >= 0 and v[j] > ls) {\n    r.push_back(v[j]);\n    s.insert(v[j]);\n    ls = v[j--];\n  }\n  reverse(l.begin(), l.end());\n  reverse(r.begin(), r.end());\n  for (auto x : s) {\n    if (l.empty() and r.empty())\n      break;\n    else if (l.empty() and r.back() == x) {\n      r.pop_back();\n      ans += 'R';\n    } else if (r.empty() and l.back() == x) {\n      l.pop_back();\n      ans += 'L';\n    } else if (x == l.back() and x == r.back()) {\n      if (l.size() > r.size()) {\n        l.pop_back();\n        ans += 'L';\n      } else {\n        r.pop_back();\n        ans += 'R';\n      }\n    } else if (x == l.back()) {\n      l.pop_back();\n      ans += 'L';\n    } else if (x == r.back()) {\n      r.pop_back();\n      ans += 'R';\n    }\n  }\n  cout << ans.size() << '\\n';\n  cout << ans << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.lang.*;\nimport java.math.*;\npublic final  class Main  {\n    public static boolean[] prime;\n    public static final class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner() {\n            try {\n                br = new BufferedReader(new InputStreamReader(System.in));\n                st = new StringTokenizer(br.readLine());\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public String next() {\n            if (st.hasMoreTokens()) return st.nextToken();\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public String nextLine() {\n            String line = \"\";\n            if (st.hasMoreTokens()) line = st.nextToken();\n            else try {\n                return br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            while (st.hasMoreTokens()) line += \" \" + st.nextToken();\n            return line;\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n    public static final class MF {\n        public static long gcd(long a, long b) {\n            long var;\n            while (a % b > 0) {\n                var = b;\n                b = a % b;\n                a = var;\n            }\n            return b;\n        }\n\n        public static int nod(long x) {\n            int i = 0;\n            while (x != 0) {\n                i++;\n                x = x / 10;\n            }\n            return i;\n        }\n\n        public static int nob(long x) {\n            return (int) Math.floor(Math.log(x) / Math.log(2)) + 1;\n        }\n\n        public static int[] FastradixSort(int[] f) {\n            int[] to = new int[f.length];\n            {\n                int[] b = new int[65537];\n                for (int i = 0; i < f.length; i++) b[1 + (f[i] & 0xffff)]++;\n                for (int i = 1; i <= 65536; i++) b[i] += b[i - 1];\n                for (int i = 0; i < f.length; i++) to[b[f[i] & 0xffff]++] = f[i];\n                int[] d = f;\n                f = to;\n                to = d;\n            }\n            {\n                int[] b = new int[65537];\n                for (int i = 0; i < f.length; i++) b[1 + (f[i] >>> 16)]++;\n                for (int i = 1; i <= 65536; i++) b[i] += b[i - 1];\n                for (int i = 0; i < f.length; i++) to[b[f[i] >>> 16]++] = f[i];\n                int[] d = f;\n                f = to;\n                to = d;\n            }\n            return f;\n        }\n\n        public static void Primesieve(int n) {\n            for (int i = 0; i < n; i++)\n                prime[i] = true;\n            for (int p = 2; p * p < n; p++) {\n                if (prime[p] == true) {\n                    for (int i = p * p; i < n; i += p)\n                        prime[i] = false;\n                }\n            }\n        }\n    }\n    public static void main(String args[]) {\n        FastScanner sc = new FastScanner();\n        PrintWriter pw = new PrintWriter(System.out);\n        int n,t=0,i=0,j=0;\n        n=sc.nextInt();\n        StringBuilder str=new StringBuilder(\"\");\n        int[] arr=new int[n];\n        for(i=0;i<n;i++)\n            arr[i]=sc.nextInt();\n        int l=0,r=n-1;\n        int[] lrr=new int[n];\n        int[] rrr=new int[n];\n        lrr[0]=1;\n        rrr[n-1]=1;\n        for(i=n-2;i>=0;i--)\n        {\n            if(arr[i+1]>arr[i])\n                rrr[i]=1+rrr[i+1];\n            else\n                rrr[i]=1;\n        }\n        for(i=1;i<n;i++)\n        {\n            if(arr[i-1]>arr[i])\n                lrr[i]=1+lrr[i-1];\n            else\n                lrr[i]=1;\n        }\n        i=0;\n        while(t<n)\n        {\n            if(Math.max(arr[l],arr[r])<=i)\n                break;\n            if(l==r)\n            {\n                str.append(\"L\");\n                t++;\n                break;\n            }\n            if(arr[r]>i&&arr[l]>i)\n            {\n                if((arr[l]<arr[r])){\n                    str.append(\"L\");\n                    i=arr[l];\n                    t++;\n                    l++;\n                }\n                else if(arr[r]<arr[l])\n                {\n                    str.append(\"R\");\n                    i=arr[r];\n                    t++;\n                    r--;\n                }\n                else\n                {\n                    if(lrr[r]>rrr[l])\n                    {\n                        str.append(\"R\");\n                        i=arr[r];\n                        t++;\n                        r--;\n                    }\n                    else\n                    {\n                        str.append(\"L\");\n                        i=arr[l];\n                        t++;\n                        l++;\n                    }\n\n                }\n            }\n            else\n            {\n                if((arr[l]>i)){\n                    str.append(\"L\");\n                    i=arr[l];\n                    t++;\n                    l++;\n                }\n                else\n                {\n                    str.append(\"R\");\n                    i=arr[r];\n                    t++;\n                    r--;\n                }\n            }\n        }\n        pw.println(t+\"\\n\"+str);\n        pw.flush();\n        pw.close();\n    }\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int top = 1e12 + 5;\nconst int maxn = 2e5 + 5;\nchar s[maxn];\nint t[maxn];\nint main() {\n  int n, cnt = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> t[i];\n  }\n  int old = -1;\n  int l = 0, r = n - 1;\n  while (l <= r) {\n    if (t[l] <= old && t[r] <= old) break;\n    if (t[l] == t[r]) {\n      break;\n    } else if (t[l] < t[r]) {\n      if (t[l] > old) {\n        s[cnt++] = 'L';\n        old = t[l++];\n      } else {\n        s[cnt++] = 'R';\n        old = t[r--];\n      }\n    } else {\n      if (t[r] > old) {\n        s[cnt++] = 'R';\n        old = t[r--];\n      } else {\n        s[cnt++] = 'L';\n        old = t[l++];\n      }\n    }\n  }\n  int cnt1 = 0, cnt2 = 0;\n  int told = old;\n  if (t[l] == t[r]) {\n    for (int i = l; i <= r; i++) {\n      if (told >= t[i]) break;\n      cnt1++;\n      told = t[i];\n    }\n    told = old;\n    for (int i = r; i >= l; i--) {\n      if (told >= t[i]) break;\n      cnt2++;\n      told = t[i];\n    }\n  }\n  cout << cnt + max(cnt1, cnt2) << endl;\n  for (int i = 0; i < cnt; i++) cout << s[i];\n  if (cnt1 > cnt2)\n    for (int i = 0; i < cnt1; i++) cout << \"L\";\n  else\n    for (int i = 0; i < cnt2; i++) cout << \"R\";\n  cout << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "length=int(input())\nnumber=[item for item in map(int,input().split(' '))]\nsmallest=min(number)-1\ndef solver(number,smallest,left,right):\n    res=[]\n    if right-left==0:\n        if smallest<number[0]:\n            res.append('L')\n            return res\n    while left<right:\n        if number[left]!=number[right] and smallest<number[left] and smallest<number[right]:\n            if number[left] > number[right]:\n                res.append('R')\n                smallest = number[right]\n                right-=1\n            elif number[left]<number[right]:\n                res.append('L')\n                smallest = number[left]\n                left+=1\n        elif number[left]!=number[right] and smallest>min(number[left],number[right]) and smallest<max(number[left],number[right]):\n            if number[left]>number[right]:\n                res.append('L')\n                smallest=number[left]\n                left+=1\n            elif number[left]<number[right]:\n                res.append('R')\n                smallest=number[right]\n                right-=1\n        elif number[right]==number[left] and smallest<number[left]:\n            test1=solver(number,number[left],left+1,right)\n            test2=solver(number,number[right],left,right-1)\n            if len(test1)>len(test2):\n                res.append('L')\n                res.extend(test1)\n                left+=1\n            else:\n                res.append('R')\n                res.extend(test2)\n                right-=1\n            return res\n        elif smallest==min(number[left],number[right]):\n            if number[left]<number[right]:\n                res.append('R')\n                smallest=number[right]\n                right-=1\n            elif number[right]<number[left]:\n                res.append('L')\n                smallest=number[left]\n                left+=1\n            else: return res\n        else: break\n    if right==left and number[left]>smallest:\n        res.append('R')\n    return res\n\nres=solver(number,smallest,0,length-1)\nprint(len(res),''.join(res),sep='\\n')"
        },
        {
            "language": 3,
            "solution": "def getLens(arr,low,high,last):\n    l1 = 1\n    last1 = last\n    for i in range(low+1,high):\n        if arr[i] > last:\n            last = arr[i]\n            #print(last,l1)\n            l1 += 1\n        else:\n            break\n\n    l2 = 1\n    last = last1\n\n    for i in range(high-1,low,-1):\n        if arr[i] > last:\n            last = arr[i]\n            l2 += 1\n        else:\n            break\n\n    #print(l1,l2,low,high)\n    return l1,l2\n\n\ndef main():\n    n = int(input())\n    arr = list(map(int,input().split()))\n\n    low = 0\n    high = n-1\n    k = 0\n    ans = []\n    last = 0\n    while low < high:\n        if arr[low] < arr[high]:\n            if arr[low] > last:\n                ans.append('L')\n                last = arr[low]\n                low += 1\n            elif arr[high] > last:\n                ans.append('R')\n                last = arr[high]\n                high -= 1\n            else:\n                break\n        elif arr[high] < arr[low]:\n            if arr[high] > last:\n                ans.append('R')\n                last = arr[high]\n                high -= 1\n            elif arr[low] > last:\n                ans.append('L')\n                last = arr[low]\n                low += 1\n            else:\n                break\n        else:\n            if arr[low] <= last:\n                break\n            last = arr[low]\n            l1,l2 = getLens(arr,low,high,last)\n            #print(l1,l2)\n            if l1 >= l2:\n                for i in range(l1):\n                    ans.append('L')\n            else:\n                for i in range(l2):\n                    ans.append('R')\n\n            break\n\n    if low == high:\n        if arr[low] > last:\n            ans.append('L')\n    \n    print(len(ans))\n    for i in ans:\n        print(i,end = '')\n    \n\nmain()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n\tstatic int n;\n\tstatic int[] a;\n\t\n\tpublic static void main(String[] args) {\n\t\tFastReader scan = new FastReader();\n\t\tn = scan.nextInt();\n\t\ta = new int[n];\n\t\tint max = 0;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\ta[i] = scan.nextInt();\n\t\t}\n\t\tint i = 0, j = n - 1;\n\t\tStringBuilder res = new StringBuilder(\"\");\n\t\twhile(i <= j) {\n\t\t\tif(a[i] > max && a[j] > max) {\n\t\t\t\tif(a[i] < a[j]) {\n\t\t\t\t\tres.append(\"L\");\n\t\t\t\t\tmax = a[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse if(a[j] < a[i]){\n\t\t\t\t\tres.append(\"R\");\n\t\t\t\t\tmax = a[j];\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tint aa = checkA(i, j, a);\n\t\t\t\t\tint bb = checkB(i, j, a);\n\t\t\t\t\tif(aa > bb) {\n\t\t\t\t\t\tfor(int l = 0; l <= aa; l++) res.append(\"L\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(int l = 0; l <= bb; l++) res.append(\"R\"); \n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(a[i] > max) {\n\t\t\t\tres.append(\"L\");\n\t\t\t\tmax = a[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse if(a[j] > max) {\n\t\t\t\tres.append(\"R\");\n\t\t\t\tmax = a[j];\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t\tSystem.out.println(res.length());\n\t\tSystem.out.println(res);\n\t}\n\t\n\tstatic int checkA(int i, int j, int[] a) {\n\t\tint count = 0;\n\t\tint max = a[i];\n\t\tfor(int k = i; k < j; k++) {\n\t\t\tif(a[k] < a[k+1]) count++;\n\t\t\telse break;\n\t\t}\n\t\treturn count;\n\t}\n\tstatic int checkB(int i, int j, int[] a) {\n\t\tint count = 0;\n\t\tint max = a[i];\n\t\tfor(int k = j; k > i; k--) {\n\t\t\tif(a[k] < a[k-1]) count++;\n\t\t\telse break;\n\t\t}\n\t\treturn count;\n\t}\n\t\n\tstatic class Path {\n\t\tint len;\n\t\tStringBuilder s;\n\t\t\n\t\tpublic Path(String a, int b) {\t\n\t\t\ts.append(a);\n\t\t\tlen = b;\n\t\t}\n\t}\n\t\n\tstatic class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    }\n\n}"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=map(int,raw_input().split())\nb=list(reversed(a))\n\nl=-1\npi,pe=0,n\nans=\"\"\nt=0\nwhile pi!=pe:\n    li=-2\n    if a!=[] and b!=[]:\n        if a[-1]==b[-1] and a[-1]>l:\n            a1=a2=\"\"\n            l1=l2=l\n            pi1=pi\n            n1=n2=0\n            while pi1!=pe and b[-1]>l1:\n                l1=b.pop()\n                a1+=\"L\"\n                pi1+=1\n                n1+=1\n            while pi!=pe and a[-1]>l2:\n                l2=a.pop()\n                a2+=\"R\"\n                pe-=1\n                n2+=1\n            t+= n1 if n2>n2 else n2\n            ans+= a1 if n1>n2 else a2\n            break\n        elif (l<a[-1]<b[-1]) or (l>=b[-1] and l<a[-1]):\n            li=a.pop()\n            e='R'\n            pe-=1\n        elif l<b[-1]:\n            li=b.pop()\n            e='L'\n            pi+=1\n        else: break\n    if li<=l:\n        break\n    else:\n        t+=1\n        ans+=e\n        l=li\n\nprint len(ans)\nprint ans"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\nimport java.awt.geom.*;\nimport static java.lang.Math.*;\npublic class Main implements Runnable\n{\n    boolean multiiple = false;\n\n    void solve() throws Exception\n    {\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++)\n            a[i] = sc.nextInt();\n        int last = 0;\n        StringBuilder ans = new StringBuilder();\n        int left = 0, right = n - 1;\n\n        while (a[left] > last || a[right] > last && left <= right)\n        {\n            if (left == right)\n            {\n                ans.append('L');\n                break;\n            }\n\n            if (a[left] == a[right])\n            {\n                int h = max(bestLeft(a, left), bestRight(a, right));\n                if (bestLeft(a, left) > bestRight(a, right))\n                    for (int i = 0; i < h; i++)\n                        ans.append('L');\n                else\n                    for (int i = 0; i < h; i++)\n                        ans.append('R');\n\n                break;\n            }\n\n            if ((a[left] < a[right] && a[left] > last) || (a[right] <= last))\n            {\n                last = a[left];\n                ans.append('L');\n                left++;\n            }\n            else\n            {\n                last = a[right];\n                ans.append('R');\n                right--;\n            }\n        }\n\n        String s = ans.toString();\n        System.out.println(s.length());\n        System.out.println(s);\n    }\n\n    int bestLeft(int[] a, int start)\n    {\n        int length = 1;\n        for (; length + start < a.length; length++)\n            if (a[length + start] <= a[length + start - 1])\n                return length;\n        return -1;\n    }\n\n    int bestRight(int[] a, int start)\n    {\n        int length = 1;\n        for (; start - length > 0; length++)\n            if (a[start - length] <= a[start - length + 1])\n                return length;\n        return -1;\n    }\n\n    @Override\n    public void run()\n    {\n        try\n        {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n            sc = new FastScanner(in);\n            if (multiiple)\n            {\n                int q = sc.nextInt();\n                for (int i = 0; i < q; i++)\n                    solve();\n            }\n            else\n                solve();\n        }\n        catch (Throwable uncaught)\n        {\n            Main.uncaught = uncaught;\n        }\n        finally\n        {\n            out.close();\n        }\n    }\n\n    public static void main(String[] args) throws Throwable {\n        Thread thread = new Thread(null, new Main(), \"\", (1 << 26));\n        thread.start();\n        thread.join();\n        if (Main.uncaught != null) {\n            throw Main.uncaught;\n        }\n    }\n\n    static Throwable uncaught;\n    BufferedReader in;\n    FastScanner sc;\n    PrintWriter out;\n}\n\nclass FastScanner\n{\n    BufferedReader in;\n    StringTokenizer st;\n\n    public FastScanner(BufferedReader in)\n    {\n        this.in = in;\n    }\n\n    public String nextToken() throws Exception {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n\n    public int nextInt() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n\n    public long nextLong() throws Exception {\n        return Long.parseLong(nextToken());\n    }\n\n    public double nextDouble() throws Exception {\n        return Double.parseDouble(nextToken());\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "sz=int(input())\nlst=list(map(int,input().split(\" \")))\nl,r,out=0,sz-1,[]\nfor i in range(len(lst)):\n    if not i:\n       if lst[l]<lst[r]:\n          out.append('L')\n          prev=lst[l]\n          l+=1\n         \n       else :\n            out.append('R')\n            prev=lst[r]\n            r-=1\n            \n    else :\n          b=False\n          if l<len(lst) and lst[l]>prev and lst[l]<lst[r]:\n             out.append('L')\n             prev=lst[l]\n             l+=1\n             b=True\n          elif r>=0 and lst[r]>prev:\n               out.append('R')\n               prev=lst[r]\n               r-=1\n               b=True\n          if not b and l<len(lst) and lst[l]>prev :\n             out.append('L')\n             prev=lst[l]\n             l+=1\n# second way\nl,r,out2=0,sz-1,[]\nfor i in range(len(lst)):\n    if not i:\n       if lst[l]<lst[r]:\n          out2.append('L')\n          prev=lst[l]\n          l+=1\n         \n       else :\n            out2.append('R')\n            prev=lst[r]\n            r-=1\n            \n    else :\n          b=False\n          if l<len(lst) and lst[l]>prev and lst[l]<=lst[r]:\n             out2.append('L')\n             prev=lst[l]\n             l+=1\n             b=True\n          elif r>=0 and lst[r]>prev:\n               out2.append('R')\n               prev=lst[r]\n               r-=1\n               b=True\n          if not b and l<len(lst) and lst[l]>prev :\n             out2.append('L')\n             prev=lst[l]\n             l+=1\n \nif(len(out2)>len(out)):out=out2.copy()\n#third way\nl,r,out3=0,sz-1,[]\nfor i in range(len(lst)):\n    if not i:\n       if lst[l]<=lst[r]:\n          out3.append('L')\n          prev=lst[l]\n          l+=1\n         \n       else :\n            out3.append('R')\n            prev=lst[r]\n            r-=1\n            \n    else :\n          b=False\n          if l<len(lst) and lst[l]>prev and lst[l]<=lst[r]:\n             out3.append('L')\n             prev=lst[l]\n             l+=1\n             b=True\n          elif r>=0 and lst[r]>prev:\n               out3.append('R')\n               prev=lst[r]\n               r-=1\n               b=True\n          if not b and l<len(lst) and lst[l]>prev :\n             out3.append('L')\n             prev=lst[l]\n             l+=1\n \nif(len(out3)>len(out)):out=out3.copy()\nl,r,out4=0,sz-1,[]\nfor i in range(len(lst)):\n    if not i:\n       if lst[l]<=lst[r]:\n          out4.append('L')\n          prev=lst[l]\n          l+=1\n         \n       else :\n            out4.append('R')\n            prev=lst[r]\n            r-=1\n            \n    else :\n          b=False\n          if l<len(lst) and lst[l]>prev and lst[l]<lst[r]:\n             out4.append('L')\n             prev=lst[l]\n             l+=1\n             b=True\n          elif r>=0 and lst[r]>prev:\n               out4.append('R')\n               prev=lst[r]\n               r-=1\n               b=True\n          if not b and l<len(lst) and lst[l]>prev :\n             out4.append('L')\n             prev=lst[l]\n             l+=1\nif(len(out4)>len(out)):out=out4.copy()\nprint(len(out))\nprint(*out,sep=\"\")"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.PriorityQueue;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tFastScanner sc = new FastScanner();\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tint max = 0;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tint i = 0, j = n - 1;\n\t\tStringBuilder res = new StringBuilder(\"\");\n\t\twhile(i <= j) {\n\t\t\tif(a[i] > max && a[j] > max) {\n\t\t\t\tif(a[i] < a[j]) {\n\t\t\t\t\tres.append(\"L\");\n\t\t\t\t\tmax = a[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse if(a[j] < a[i]){\n\t\t\t\t\tres.append(\"R\");\n\t\t\t\t\tmax = a[j];\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tint aa = count1(i, j, a);\n\t\t\t\t\tint bb = count2(i, j, a);\n\t\t\t\t\tif(aa > bb) {\n\t\t\t\t\t\tfor(int l = 0; l <= aa; l++) res.append(\"L\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor(int l = 0; l <= bb; l++) res.append(\"R\"); \n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(a[i] > max) {\n\t\t\t\tres.append(\"L\");\n\t\t\t\tmax = a[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse if(a[j] > max) {\n\t\t\t\tres.append(\"R\");\n\t\t\t\tmax = a[j];\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t\tSystem.out.println(res.length());\n\t\tSystem.out.println(res);\n\n\t}\n\n\tprivate static int count2(int i, int j, int[] arr) {\n\t\tint count = 0;\n\t\tfor(int k=j;k>i;k--) {\n\t\t\tif(arr[k] < arr[k-1])count++;\n\t\t\telse break;\n\t\t}\n\t\treturn count;\n\t}\n\n\tprivate static int count1(int i, int j, int[] arr) {\n\t\tint count = 0;\n\t\tfor(int k=i;k<j;k++) {\n\t\t\tif(arr[k] < arr[k+1])count++;\n\t\t\telse break;\n\t\t}\n\t\treturn count;\n\t}\n\n\tstatic class FastScanner {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] readArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] readArrayLong(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\tstatic int ceil(int x, int y) {\n\t\treturn (x % y == 0 ? x / y : (x / y + 1));\n\t}\n\n\tstatic long ceil(long x, long y) {\n\t\treturn (x % y == 0 ? x / y : (x / y + 1));\n\t}\n\n\tstatic int max(int x, int y) {\n\t\treturn Math.max(x, y);\n\t}\n\n\tstatic int min(int x, int y) {\n\t\treturn Math.min(x, y);\n\t}\n\n\tstatic long max(long x, long y) {\n\t\treturn Math.max(x, y);\n\t}\n\n\tstatic long min(long x, long y) {\n\t\treturn Math.min(x, y);\n\t}\n\n\tstatic int min(int a[]) {\n\t\tint x = 1_000_000_00_9;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tx = min(x, a[i]);\n\t\treturn x;\n\t}\n\n\tstatic int max(int a[]) {\n\t\tint x = -1_000_000_00_9;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tx = max(x, a[i]);\n\t\treturn x;\n\t}\n\n\tstatic long min(long a[]) {\n\t\tlong x = (long) 3e18;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tx = min(x, a[i]);\n\t\treturn x;\n\t}\n\n\tstatic long max(long a[]) {\n\t\tlong x = -(long) 3e18;\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\tx = max(x, a[i]);\n\t\treturn x;\n\t}\n\n\tstatic int power(int x, int y) {\n\t\tint res = 1;\n\t\twhile (y > 0) {\n\t\t\tif (y % 2 == 1)\n\t\t\t\tres = (res * x);\n\t\t\ty >>= 1;\n\t\t\tx = (x * x);\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic long power(long x, long y) {\n\t\tlong res = 1;\n\t\twhile (y > 0) {\n\t\t\tif (y % 2 == 1)\n\t\t\t\tres = (res * x);\n\t\t\ty >>= 1;\n\t\t\tx = (x * x);\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic void intsort(int[] a) {\n\t\tList<Integer> temp = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ttemp.add(a[i]);\n\t\tCollections.sort(temp);\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = temp.get(i);\n\t}\n\n\tstatic void longsort(long[] a) {\n\t\tList<Long> temp = new ArrayList<Long>();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ttemp.add(a[i]);\n\t\tCollections.sort(temp);\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = temp.get(i);\n\t}\n\n\tstatic void reverseintsort(int[] a) {\n\t\tList<Integer> temp = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ttemp.add(a[i]);\n\t\tCollections.sort(temp);\n\t\tCollections.reverseOrder();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = temp.get(i);\n\t}\n\n\tstatic void reverselongsort(long[] a) {\n\t\tList<Long> temp = new ArrayList<Long>();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ttemp.add(a[i]);\n\t\tCollections.sort(temp);\n\t\tCollections.reverseOrder();\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = temp.get(i);\n\t}\n\n\tstatic class longpair implements Comparable<longpair> {\n\t\tlong x, y;\n\n\t\tlongpair(long x, long y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic int compareTo(longpair p) {\n\t\t\treturn Long.compare(this.x, p.x);\n\t\t}\n\t}\n\n\tstatic class intpair implements Comparable<intpair> {\n\t\tint x, y;\n\n\t\tintpair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(intpair o) {\n\t\t\treturn Integer.compare(this.x, o.x);\n\t\t}\n\n\t\t//\t\ta = new pair [n];\n\t\t//\t\ta[i] = new pair(coo,cost);\n\n\t}\n\n\tpublic static int gcd(int a, int b) {\n\t\tBigInteger b1 = BigInteger.valueOf(a);\n\t\tBigInteger b2 = BigInteger.valueOf(b);\n\t\tBigInteger gcd = b1.gcd(b2);\n\t\treturn gcd.intValue();\n\t}\n\n\tpublic static long gcd(long a, long b) {\n\t\tBigInteger b1 = BigInteger.valueOf(a);\n\t\tBigInteger b2 = BigInteger.valueOf(b);\n\t\tBigInteger gcd = b1.gcd(b2);\n\t\treturn gcd.longValue();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 10;\nconst int mod = 998244353;\nvector<int> v;\nint pre, cans;\nstring ans;\nvoid check(int l, int r) {\n  int ca = 0, cb = 0, p = pre;\n  for (int i = l; i < r; i++) {\n    if (v[i] > p) {\n      p = v[i];\n      ca++;\n    } else\n      break;\n  }\n  p = pre;\n  for (int i = r; i > l; i--) {\n    if (v[i] > p) {\n      p = v[i];\n      cb++;\n    } else\n      break;\n  }\n  if (ca > cb) {\n    for (int i = 0; i < ca; i++) ans += 'L';\n  } else\n    for (int i = 0; i < cb; i++) ans += 'R';\n  cout << ans.size() << endl << ans << endl;\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  int l = 0, r = n - 1;\n  while (l <= r) {\n    int le = v[l], re = v[r];\n    if (l == r) {\n      if (v[l] > pre) {\n        ans += 'R';\n        r--;\n        pre = re;\n        cans++;\n        break;\n      } else\n        break;\n    }\n    if (!pre) {\n      if (le > re) {\n        ans += 'R';\n        r--;\n        pre = re;\n      } else if (le < re) {\n        ans += 'L';\n        l++;\n        pre = le;\n      } else {\n        check(l, r);\n        return 0;\n      }\n    } else {\n      if (le > re) {\n        if (re > pre) {\n          ans += 'R';\n          r--;\n          pre = re;\n        } else if (le > pre) {\n          ans += 'L';\n          l++;\n          pre = le;\n        } else\n          break;\n      } else if (le < re) {\n        if (le > pre) {\n          ans += 'L';\n          l++;\n          pre = le;\n        } else if (re > pre) {\n          ans += 'R';\n          r--;\n          pre = re;\n        } else\n          break;\n      } else {\n        check(l, r);\n        return 0;\n      }\n    }\n    cans++;\n  }\n  cout << cans << endl << ans << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.awt.*;\n\n// U KNOW THAT IF THIS DAY WILL BE URS THEN NO ONE CAN DEFEAT U HERE................\n//JUst keep faith in ur strengths .................................................. \n\n\n// ASCII = 48 + i ;// 2^28 = 268,435,456  > 2* 10^8 // log 10 base 2 = 3.3219 \n// odd:: (x^2+1)/2 , (x^2-1)/2 ; x>=3// even:: (x^2/4)+1 ,(x^2/4)-1  x >=4 \n// FOR ANY ODD NO N : N,N-1,N-2\n//ALL ARE PAIRWISE COPRIME \n//THEIR COMBINED LCM IS PRODUCT OF ALL THESE NOS\n\n// two consecutive odds are always coprime to each other\n// two consecutive even have always gcd  = 2 ;\n\n// Rectangle r = new Rectangle(int x , int y,int widht,int height) \n//Creates a rect. with bottom left cordinates as (x, y) and top right as ((x+width),(y+height))\n\n//BY DEFAULT Priority Queue is MIN in nature in java\n//to use as max , just push with negative sign and change sign after removal \n\n// We can make a sieve of max size 1e7 .(no time or space issue) \n// In 1e7 starting nos we have about 66*1e4 prime nos \n\n public class Main\n{\n     \n    // static int[] arr = new int[100002] ; \n    // static int[] dp = new int[100002] ;  \n    \n     static PrintWriter out;\n    \n\tstatic class FastReader{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\tpublic FastReader(){\n\t\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout=new PrintWriter(System.out);\n\t\t}\n\t\tString next(){\n\t\t\twhile(st==null || !st.hasMoreElements()){\n\t\t\t\ttry{\n\t\t\t\t\tst= new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt(){\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong(){\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble(){\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tString nextLine(){\n\t\t\tString str = \"\";\n\t\t\ttry{\n\t\t\t\tstr=br.readLine();\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n\n\n////////////////////////////////////////////////////////////////////////////////////\n public static int countDigit(long n) \n    { \n        return (int)Math.floor(Math.log10(n) + 1); \n    } \n\n///////////////////////////////////////////////////////////////////////////////////////// \n \n public static int sumOfDigits(long n)\n {\n  \n  if( n< 0)return -1 ;\n  \n  int sum = 0;\n  \n  while( n > 0)\n  {\n      sum = sum + (int)( n %10) ;\n      \n      n /= 10 ;\n  }\n     \n  return sum ;  \n \n \n \n }\n \n //////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long arraySum(int[] arr , int start , int end)\n{\n    long ans = 0 ;\n    \n    for(int i = start ; i <= end  ; i++)ans += arr[i] ;\n    \n    return ans  ;\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\n\n\n////////////////////////////////////////////////////////////////////////////////\n\npublic static void swapArray(int[] arr , int start , int end)\n{\n    while(start < end)\n    {\n        int temp = arr[start] ;\n        arr[start] = arr[end];\n        arr[end] = temp;\n        start++ ;end-- ;\n    }\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////\n\nstatic long factorial(long a)\n{\n    if(a== 0L || a==1L)return 1L ;\n    \n    return a*factorial(a-1L) ;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\n\npublic static int[][] rotate(int[][] input){\n\nint n =input.length;\nint m = input[0].length ;\nint[][] output = new int [m][n];\n\nfor (int i=0; i<n; i++)\n\tfor (int j=0;j<m; j++)\n\t\toutput [j][n-1-i] = input[i][j];\nreturn output;\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n/////////////////////////////////////////// ////////////////////////////////////////////////   \n\npublic static boolean isPowerOfTwo(long n) \n{ \n    if(n==0) \n    return false; \n  \nif(((n ) & (n-1)) == 0 ) return true ;\nelse return false  ;\n\n} \n\n/////////////////////////////////////////////////////////////////////////////////////\n\n \n/////////////////////////////////////////////////////////////////////////////////// \n\npublic static String reverse(String input)\n{\n  StringBuilder str  = new StringBuilder(\"\") ;\n   \n    for(int i =input.length()-1 ; i >= 0  ; i-- )\n    {\n        str.append(input.charAt(i));\n    }\n    \nreturn str.toString() ;\n}\n///////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\npublic static boolean isPossibleTriangle(int a  ,int b , int c)\n{\n      if( a + b > c && c+b > a && a +c > b)return true  ;\n      else return false  ;\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////\nstatic long xnor(long num1, long num2) {\n\t\tif (num1 < num2) {\n\t\t\tlong temp = num1;\n\t\t\tnum1 = num2;\n\t\t\tnum2 = temp;\n\t\t}\n\t\tnum1 = togglebit(num1);\n\t\treturn num1 ^ num2;\n\t}\n\n\tstatic long togglebit(long n) {\n\t\tif (n == 0)\n\t\t\treturn 1;\n\t\tlong i = n;\n\t\tn |= n >> 1;\n\t\tn |= n >> 2;\n\t\tn |= n >> 4;\n\t\tn |= n >> 8;\n\t\tn |= n >> 16;\n\t\treturn i ^ n;\n\t}\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static int xorOfFirstN(int n)\n{\n \n \n if( n % 4 ==0)return n ;\n \n else if( n % 4 == 1)return 1 ;\n \n else if( n % 4 == 2)return n+1 ;\n \n else return 0 ;\n \n    \n}\n//////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static int gcd(int a, int b )\n{\n\nif(b==0)return a ;\n\nelse return gcd(b,a%b) ; \n\n}\n\n\npublic static long gcd(long a, long b )\n{\n\nif(b==0)return a ;\n\nelse return gcd(b,a%b) ; \n\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n\npublic static int lcm(int a, int b ,int c , int d )\n{\n\nint temp = lcm(a,b , c) ;\n\n\n \n int ans = lcm(temp ,d ) ;\n\nreturn ans  ;\n\n\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\npublic static int lcm(int a, int b ,int c )\n{\n\nint temp = lcm(a,b) ;\n\nint ans =  lcm(temp ,c) ;\n\nreturn ans  ;\n\n\n}\n\n////////////////////////////////////////////////////////////////////////////////////////\n    \npublic static int lcm(int a , int b )\n{\n\nint gc = gcd(a,b);\n\nreturn (a/gc)*b ;\n}\n\n\npublic static long lcm(long a , long b )\n{\n\nlong gc = gcd(a,b);\n\nreturn (a/gc)*b;\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////\nstatic boolean isPrime(long n)\n{\n      if(n==1)\n      {\n            return false  ;\n      }\n      \n      boolean ans =  true  ;\n      \n      for(long i = 2L; i*i <= n ;i++)\n      {\n            if(n% i ==0)\n            {\n                  ans = false  ;break ;\n            }\n      }\n      \n      \n      return ans  ;\n} \n\nstatic boolean isPrime(int n)\n{\n      if(n==1)\n      {\n            return false  ;\n      }\n      \n      boolean ans =  true  ;\n      \n      for(int i = 2; i*i <= n ;i++)\n      {\n            if(n% i ==0)\n            {\n                  ans = false  ;break ;\n            }\n      }\n      \n      \n      return ans  ;\n}      \n\n\n///////////////////////////////////////////////////////////////////////////\n\nstatic int sieve =  1000000 ;\n\n \nstatic boolean[] prime =  new boolean[sieve + 1] ;\n\npublic static void sieveOfEratosthenes() \n    { \n        // FALSE == prime\n        \n        // TRUE ==  COMPOSITE\n        \n        // FALSE== 1\n       \n        \n        // time complexity = 0(NlogLogN)== o(N)\n        \n        // gives prime nos bw 1 to N\n        \n        for(int i = 4; i<= sieve ; i++)\n        {\n            prime[i] = true  ;\n            i++ ;\n        }\n        \n        for(int p = 3; p*p <= sieve; p++) \n        { \n           \n            if(prime[p] == false) \n            { \n                \n                for(int i = p*p; i <= sieve; i += p) \n                    prime[i] = true; \n            } \n            \n            p++ ;\n        } \n          \n       \n       \n    \n    } \n \n///////////////////////////////////////////////////////////////////////////////////\n\n\npublic static void sortD(int[] arr , int s  , int e)\n{\n      sort(arr ,s , e) ;\n      \n      int i =s ; int j = e  ;\n      \n      while( i < j)\n      {\n            int temp = arr[i] ;\n            arr[i] =arr[j] ;\n            arr[j] = temp ;\n            i++ ; j-- ;\n      }\n      \n      \n      \n      return ;\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long countSubarraysSumToK(long[] arr ,long sum )\n    {\n      HashMap<Long,Long> map = new HashMap<>() ;\n       \n      int n = arr.length ;\n       \n      long prefixsum = 0 ;\n       \n      long count = 0L ;\n      for(int i  = 0; i < n ; i++)\n      {\n          prefixsum  = prefixsum +  arr[i] ;\n           \n          if(sum == prefixsum)count = count+1 ;\n           \n          if(map.containsKey(prefixsum -sum))\n          {\n              count = count + map.get(prefixsum -sum) ;\n          }\n          \n          \n          if(map.containsKey(prefixsum ))\n          {\n              map.put(prefixsum , map.get(prefixsum) +1 );\n          }\n          \n          else{\n              map.put(prefixsum , 1L );\n          }\n           \n           \n      }\n        \n        \n        \n      return count  ;  \n        \n    }\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n\n\n// KMP ALGORITHM : TIME COMPL:O(N+M) \n// FINDS THE OCCURENCES OF PATTERN AS A  SUBSTRING IN STRING\n//RETURN THE ARRAYLIST OF INDEXES \n// IF SIZE OF LIST IS ZERO MEANS PATTERN IS NOT PRESENT IN STRING\n\n\npublic static ArrayList<Integer> kmpAlgorithm(String str , String pat)\n     {\n        ArrayList<Integer> list =new ArrayList<>();\n        \n        int n = str.length() ;\n        int m = pat.length() ;\n        \n        String q = pat + \"#\" + str ;\n        \n        int[] lps  =new int[n+m+1] ;\n        \n         longestPefixSuffix(lps, q,(n+m+1)) ;\n         \n         \n         for(int i =m+1 ; i < (n+m+1) ; i++ )\n         {\n             if(lps[i] == m)\n             {\n                 list.add(i-2*m) ;\n             }\n         }\n        \n        return list ; \n         \n        \n    }\n    \n\npublic static void longestPefixSuffix(int[] lps ,String str , int n)\n    {\n        lps[0] =  0 ;\n        \n        for(int i = 1  ; i<= n-1; i++)\n        {\n          int l = lps[i-1] ;\n           \n          while( l > 0 && str.charAt(i) != str.charAt(l))\n          {\n              l = lps[l-1] ;\n          }\n           \n          if(str.charAt(i) == str.charAt(l))\n          {\n              l++ ;\n          }\n            \n           \n          lps[i] = l ; \n        }\n        \n    }\n    \n     \n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n // CALCULATE TOTIENT Fn FOR ALL VALUES FROM 1 TO n\n    // TOTIENT(N) = count of nos less than n and grater than 1 whose gcd with n is 1 \n    // or n and the no  will be coprime in nature\n    //time : O(n*(log(logn)))\n    \n    public static void eulerTotientFunction(int[] arr ,int n )\n    {\n      \n      for(int i = 1; i <= n  ;i++)arr[i] =i  ;\n      \n      \n      for(int i= 2 ; i<= n ;i++)\n      {\n          if(arr[i] == i)\n          {\n              arr[i] =i-1 ;\n              \n              for(int j =2*i ; j<= n  ; j+= i )\n              {\n                  arr[j] = (arr[j]*(i-1))/i ;\n              }\n              \n          }\n      }\n        \n      return  ;  \n        \n    }\n\t\n/////////////////////////////////////////////////////////////////////////////////////////////\npublic static long nCr(int n,int k)\n{\n    long ans=1L;\n    k=k>n-k?n-k:k;\n    int j=1;\n    for(;j<=k;j++,n--)\n    {\n        if(n%j==0)\n        {\n            ans*=n/j;\n        }else\n        if(ans%j==0)\n        {\n            ans=ans/j*n;\n        }else\n        {\n            ans=(ans*n)/j;\n        }\n    }\n    return ans;\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\npublic static ArrayList<Integer> allFactors(int n)\n{   \n      ArrayList<Integer> list = new ArrayList<>() ;\n      \n    for(int i = 1; i*i <= n ;i++)\n    {\n          if( n % i == 0)\n          {\n              if(i*i == n)\n              {\n                    list.add(i) ;\n              }\n              else{\n                    list.add(i) ;\n                    list.add(n/i) ;\n                    \n              }\n          }\n    }\n      \n     return list ; \n      \n      \n}\n\n\npublic static ArrayList<Long> allFactors(long n)\n{   \n      ArrayList<Long> list = new ArrayList<>() ;\n      \n    for(long i = 1L; i*i <= n ;i++)\n    {\n          if( n % i == 0)\n          {\n              if(i*i == n)\n              {\n                    list.add(i) ;\n              }\n              else{\n                    list.add(i) ;\n                    list.add(n/i) ;\n                    \n              }\n          }\n    }\n      \n     return list ; \n      \n      \n}\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  static final int MAXN = 1000001; \n       \n    \n    static int spf[] = new int[MAXN]; \n   \n    static void sieve() \n    { \n        spf[1] = 1; \n        for (int i=2; i<MAXN; i++) \n       \n           \n            spf[i] = i; \n       \n       \n        for (int i=4; i<MAXN; i+=2) \n            spf[i] = 2; \n       \n        for (int i=3; i*i<MAXN; i++) \n        { \n           \n            if (spf[i] == i) \n            { \n               \n                for (int j=i*i; j<MAXN; j+=i) \n       \n                    if (spf[j]==j) \n                        spf[j] = i; \n            } \n        } \n    } \n       \n\n    static ArrayList<Integer> getPrimeFactorization(int x) \n    { \n        ArrayList<Integer> ret = new ArrayList<Integer>(); \n        while (x != 1) \n        { \n            ret.add(spf[x]); \n            x = x / spf[x]; \n        } \n        return ret; \n    } \n       \n //////////////////////////////////////////////////////////////////////////////////////////////////\n //////////////////////////////////////////////////////////////////////////////////////////////////\n   \npublic static void merge(int arr[], int l, int m, int r)\n    {\n        // Find sizes of two subarrays to be merged\n        int n1 = m - l + 1;\n        int n2 = r - m;\n \n        /* Create temp arrays */\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n \n       //Copy data to temp arrays\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n \n \n        /* Merge the temp arrays */\n \n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n \n        // Initial index of merged subarry array\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i] <= R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n \n        /* Copy remaining elements of L[] if any */\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n \n        /* Copy remaining elements of R[] if any */\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n \n    // Main function that sorts arr[l..r] using\n    // merge()\n  public static void sort(int arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            // Find the middle point\n            int m = (l+r)/2;\n \n            // Sort first and second halves\n            sort(arr, l, m);\n            sort(arr , m+1, r);\n \n            // Merge the sorted halves\n            merge(arr, l, m, r);\n        }\n    }\n\npublic static void sort(long arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            // Find the middle point\n            int m = (l+r)/2;\n \n            // Sort first and second halves\n            sort(arr, l, m);\n            sort(arr , m+1, r);\n \n            // Merge the sorted halves\n            merge(arr, l, m, r);\n        }\n    }\n\n\npublic static void merge(long arr[], int l, int m, int r)\n    {\n        // Find sizes of two subarrays to be merged\n        int n1 = m - l + 1;\n        int n2 = r - m;\n \n        /* Create temp arrays */\n        long L[] = new long[n1];\n        long R[] = new long[n2];\n \n        //Copy data to temp arrays\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n \n \n        /* Merge the temp arrays */\n \n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n \n        // Initial index of merged subarry array\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i] <= R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n \n        /* Copy remaining elements of L[] if any */\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n \n        /* Copy remaining elements of R[] if any */\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n \n\n /////////////////////////////////////////////////////////////////////////////////////////\n \n\tpublic static long knapsack(int[] weight,long value[],int maxWeight){\n\n        \n        int n=  value.length ;\n        \n\t\n\t//dp[i] stores the profit with KnapSack capacity \"i\" \n  long []dp = new long[maxWeight+1]; \n      \n    //initially profit with 0 to W KnapSack capacity is 0 \n    Arrays.fill(dp, 0); \n  \n    // iterate through all items \n    for(int i=0; i < n; i++)  \n      \n        //traverse dp array from right to left \n        for(int j = maxWeight; j >= weight[i]; j--) \n            dp[j] = Math.max(dp[j] , value[i] + dp[j - weight[i]]); \n              \n    /*above line finds out maximum of dp[j](excluding ith element value) \n    and val[i] + dp[j-wt[i]] (including ith element value and the \n    profit with \"KnapSack capacity - ith element weight\") */\n    return dp[maxWeight]; \n\t}\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////\n\n\n// to return max sum of any subarray in given array\npublic static long kadanesAlgorithm(long[] arr)\n{\n    \n    if(arr.length == 0)return  0 ;\n    \n      long[] dp = new long[arr.length] ;\n      \n      dp[0] = arr[0] ;\n      long max =  dp[0] ;\n      \n      \n      for(int i = 1; i <  arr.length ; i++)\n      {\n            if(dp[i-1] > 0)\n            {\n                  dp[i] = dp[i-1] + arr[i] ;\n            }\n            else{\n                  dp[i] = arr[i] ;\n            }\n            \n            if(dp[i] >  max)max = dp[i] ;\n            \n      }\n      \n      return max  ;\n      \n}\n/////////////////////////////////////////////////////////////////////////////////////////////\npublic static long kadanesAlgorithm(int[] arr)\n{\n     if(arr.length == 0)return  0 ;\n    \n      long[] dp = new long[arr.length] ;\n      \n      dp[0] = arr[0] ;\n      long max =  dp[0] ;\n      \n      \n      for(int i = 1; i <  arr.length ; i++)\n      {\n            if(dp[i-1] > 0)\n            {\n                  dp[i] = dp[i-1] + arr[i] ;\n            }\n            else{\n                  dp[i] = arr[i] ;\n            }\n            \n            if(dp[i] >  max)max = dp[i] ;\n            \n      }\n      \n      return max  ;\n      \n}\n\n      \n///////////////////////////////////////////////////////////////////////////////////////\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n//////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n//TO GENERATE ALL(DUPLICATE ALSO EXIST) PERMUTATIONS OF A STRING\n\n\n// JUST CALL generatePermutation( str,  start,  end) start :inclusive ,end : exclusive \n\n//Function for swapping the characters at position I with character at position j  \n    public static String swapString(String a, int i, int j) {  \n        char[] b =a.toCharArray();  \n        char ch;  \n        ch = b[i];  \n        b[i] = b[j];  \n        b[j] = ch;  \n        return String.valueOf(b);  \n    }  \n      \n//Function for generating different permutations of the string  \n    public static void generatePermutation(String str, int start, int end)  \n    {  \n        //Prints the permutations  \n        if (start == end-1)  \n            System.out.println(str);  \n        else  \n        {  \n            for (int i = start; i < end; i++)  \n            {  \n                //Swapping the string by fixing a character  \n                str = swapString(str,start,i);  \n                //Recursively calling function generatePermutation() for rest of the characters   \n                generatePermutation(str,start+1,end);  \n                //Backtracking and swapping the characters again.  \n                str = swapString(str,start,i);  \n            }  \n        }  \n    }  \n\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long factMod(long n, long mod) {\n    if (n <= 1) return 1;\n    long ans = 1;\n    for (int i = 1; i <= n; i++) {\n      ans = (ans * i) % mod;\n    }\n    return ans;\n  }\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long power(int a  ,int b)\n    {\n        //time comp : o(logn) \n        \n        long x = (long)(a) ;\n         long n = (long)(b) ;\n        \n        if(n==0)return 1 ;\n        if(n==1)return x;\n        \n        long ans =1L  ;\n       \n      while(n>0)\n      {\n          if(n % 2 ==1)\n          {\n              ans = ans *x ;\n          }\n           \n          n = n/2L ;\n           \n          x =  x*x ;\n           \n      }\n       \n      return ans ;\n    }\n    \n    public static long power(long a  ,long b)\n    {\n        //time comp : o(logn) \n        \n        long x = (a) ;\n         long n = (b) ;\n        \n        if(n==0)return 1L ;\n        if(n==1)return x;\n        \n        long ans =1L  ;\n       \n      while(n>0)\n      {\n          if(n % 2 ==1)\n          {\n              ans = ans *x ;\n          }\n           \n          n = n/2L ;\n           \n          x =  x*x ;\n           \n      }\n       \n      return ans ;\n    }\n\n    \n    \n    \n\n////////////////////////////////////////////////////////////////////////////////////////////////////\npublic static long powerMod(long x, long n, long mod) {\n    //time comp : o(logn)\n    \n    if(n==0)return 1L ;\n        if(n==1)return x;\n        \n    \n    long ans = 1;\n    while (n > 0) {\n      if (n % 2 == 1) ans = (ans * x) % mod;\n      x = (x * x) % mod;\n      n /= 2;\n    }\n    return ans;\n  }\n \n//////////////////////////////////////////////////////////////////////////////////\n\n/////////////////////////////////////////////////////////////////////////////////\n\n/*\nlowerBound - finds largest element equal or less than value paased\nupperBound - finds smallest element equal or more than value passed\n\nif not present return -1;\n\n*/\n\npublic static long lowerBound(long[] arr,long k)\n\t{\n\t\tlong ans=-1;\n\t\t\n\t\tint start=0;\n\t\tint end=arr.length-1;\n\t\t\n\t\twhile(start<=end)\n\t\t{\n\t\t\tint mid=(start+end)/2;\n\t\t\t\n\t\t\tif(arr[mid]<=k)\n\t\t\t{\n\t\t\t\tans=arr[mid];\n\t\t\t\tstart=mid+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tend=mid-1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn ans;\n\t\t\n\t}\n\t\n\tpublic static int lowerBound(int[] arr,int k)\n\t{\n\t\tint ans=-1;\n\t\t\n\t\tint start=0;\n\t\tint end=arr.length-1;\n\t\t\n\t\twhile(start<=end)\n\t\t{\n\t\t\tint mid=(start+end)/2;\n\t\t\t\n\t\t\tif(arr[mid]<=k)\n\t\t\t{\n\t\t\t\tans=arr[mid];\n\t\t\t\tstart=mid+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tend=mid-1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn ans;\n\t\t\n\t}\n\t\n\t\n\tpublic static long upperBound(long[] arr,long k)\n\t{\n\t\tlong ans=-1;\n\t\t\n\t\tint start=0;\n\t\tint end=arr.length-1;\n\t\t\n\t\twhile(start<=end)\n\t\t{\n\t\t\tint mid=(start+end)/2;\n\t\t\t\n\t\t\tif(arr[mid]>=k)\n\t\t\t{\n\t\t\t\tans=arr[mid];\n\t\t\t\tend=mid-1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstart=mid+1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\t\n\t\n\tpublic static int upperBound(int[] arr,int k)\n\t{\n\t\tint ans=-1;\n\t\t\n\t\tint start=0;\n\t\tint end=arr.length-1;\n\t\t\n\t\twhile(start<=end)\n\t\t{\n\t\t\tint mid=(start+end)/2;\n\t\t\t\n\t\t\tif(arr[mid]>=k)\n\t\t\t{\n\t\t\t\tans=arr[mid];\n\t\t\t\tend=mid-1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstart=mid+1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\t\n\n//////////////////////////////////////////////////////////////////////////////////////////\n\npublic static void printArray(int[] arr , int si ,int ei)\n{\n    for(int i = si  ; i  <= ei ; i++)\n    {\n        out.print(arr[i] +\" \") ;\n    }\n    \n}\n\npublic static void printArrayln(int[] arr , int si ,int ei)\n{\n    for(int i = si  ; i  <= ei ; i++)\n    {\n        out.print(arr[i] +\" \") ;\n    }\n    out.println() ;\n}\n\n\npublic static void printLArray(long[] arr , int si , int ei)\n{\n    for(int i = si ; i  <= ei ; i++)\n    {\n        out.print(arr[i] +\" \") ;\n    }\n   \n}\n\n\n\n\npublic static void printLArrayln(long[] arr , int si , int ei)\n{\n    for(int i = si ; i  <= ei ; i++)\n    {\n        out.print(arr[i] +\" \") ;\n    }\n    out.println() ;\n   \n}\n\npublic static void printtwodArray(int[][] ans)\n{\n    for(int i = 0; i< ans.length ; i++)\n    {\n        for(int j  = 0 ; j <  ans[0].length ; j++)out.print(ans[i][j] +\" \");\n        out.println() ;\n    }\n    out.println() ;\n   \n}\n\n  \n   static long modPow(long a, long x, long p) {\n    //calculates a^x mod p in logarithmic time.\n    \n    a = a % p ;\n    \n    if(a == 0)return 0L ;\n    \n    \n    long res = 1L;\n    while(x > 0) {\n        if( x % 2 != 0) {\n            res = (res * a) % p;\n        }\n        a = (a * a) % p;\n        x =x/2;\n    }\n    return res;\n}\n \n \n \n  static long modInverse(long a, long p) {\n    //calculates the modular multiplicative of a mod p.\n    //(assuming p is prime).\n    return modPow(a, p-2, p);\n}\n \n static long[] factorial =  new long[1000001] ;\n \n static void modfac(long mod)\n {\n     factorial[0]=1L ; factorial[1]=1L ;\n     \n     for(int i = 2; i<= 1000000 ;i++)\n     {\n         factorial[i] = factorial[i-1] *(long)(i) ;\n          factorial[i] = factorial[i] % mod ;\n     }\n    \n     \n }\n \n\n \n \n \nstatic long modBinomial(long n, long r, long p) {\n// calculates C(n,r) mod p (assuming p is prime).\n \n  if(n < r) return 0L ; \n \n    long num = factorial[(int)(n)] ;\n    \n    long den = (factorial[(int)(r)]*factorial[(int)(n-r)]) %  p ;\n    \n    \n    long ans  = num*(modInverse(den,p)) ;\n    \n    ans = ans % p ;\n    \n    return ans  ;\n \n    \n}\n \n \n static void update(int val , long[] bit ,int n)\n {\n     for( ; val <= n ; val += (val &(-val)) )\n     {\n         bit[val]++ ;\n     }\n    \n     \n }\n \n \n static long query(int val , long[] bit , int n)\n {\n     long ans = 0L; \n     for( ; val >=1 ; val-=(val&(-val))  )ans += bit[val];\n     \n     return ans ;\n }\n\n\n\nstatic int countSetBits(long n) \n    { \n        int count = 0; \n        while (n > 0) { \n            n = (n) & (n - 1L); \n            count++; \n        } \n        return count; \n    } \n\n\nstatic int abs(int x)\n{\n    if(x < 0)x = -1*x ;\n    \n    return x ;\n}\n\n\nstatic long abs(long x)\n{\n    if(x < 0)x = -1L*x ;\n    \n    return x ;\n\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////\nstatic void p(int val)\n{\n    out.print(val) ;\n}\n\nstatic void p()\n{\n    out.print(\" \") ;\n}\n\nstatic void pln(int val)\n{\n    out.println(val) ;\n}\n\nstatic void pln()\n{\n    out.println() ;\n}\n\n\nstatic void p(long val)\n{\n    out.print(val) ;\n}\n\n\n\nstatic void pln(long val)\n{\n    out.println(val) ;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n\n // calculate total no of nos greater than or equal to key in  sorted array arr\n \nstatic  int bs(int[] arr, int s ,int e  ,int key)\n{\n    if( s> e)return 0 ;\n    \n     int mid = (s+e)/2 ;\n        \n        if(arr[mid] <key)\n        {\n            return bs(arr ,mid+1,e , key) ;\n            \n        }\n        \n        \n        else{\n            \n             return bs(arr ,s ,mid-1, key)  + e-mid+1;\n            \n            \n        }\n}\n \n// static ArrayList<Integer>[] adj ;\n// static int mod= 1000000007 ;\n\n\n \n\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static void solve()\n{\nFastReader scn = new FastReader() ;\n\n//Scanner scn = new Scanner(System.in);\n//int[] store = {2 ,3, 5 , 7  ,11 , 13 , 17 , 19 , 23 , 29 , 31 , 37 } ;\n\n// product of first 11 prime nos is greater than 10 ^ 12;\n//sieve() ;\n//ArrayList<Integer> arr[] = new ArrayList[n] ;\nArrayList<Character> list = new ArrayList<>() ;\n\n// ArrayList<Integer> lista = new ArrayList<>() ;\n// ArrayList<Integer> listb = new ArrayList<>() ;\n//ArrayList<String> lists = new ArrayList<>() ;\n\nHashMap<Integer,Integer> map = new HashMap<>() ;\n//HashMap<Long,Long> map = new HashMap<>() ;\nHashMap<Integer,Integer> mapx  = new HashMap<>() ;\nHashMap<Integer,Integer> mapy  = new HashMap<>() ;\n//HashMap<String,Integer> maps = new HashMap<>() ;\n//HashMap<Integer,Boolean> mapb = new HashMap<>() ;\n//HashMap<Point,Integer> point = new HashMap<>() ; \n\n Set<Integer> set = new HashSet<>() ;\n Set<Integer> setx = new HashSet<>() ;\n Set<Integer> sety = new HashSet<>() ;\n\nStringBuilder sb =new StringBuilder(\"\") ;\n\n//Collections.sort(list);\n\n//if(map.containsKey(arr[i]))map.put(arr[i] , map.get(arr[i]) +1 ) ;\n//else map.put(arr[i],1) ;\n\n// if(map.containsKey(temp))map.put(temp , map.get(temp) +1 ) ;\n// else map.put(temp,1) ;\n\n//int bit  =Integer.bitCount(n);\n// gives total no of set bits in n;\n\n// Arrays.sort(arr, new Comparator<Pair>() {\n// \t\t\t@Override\n// \t\t\tpublic int compare(Pair a, Pair b) {\n// \t\t\t\tif (a.first != b.first) {\n// \t\t\t\t\treturn a.first - b.first; // for increasing order of first\n// \t\t\t\t}\n// \t\t\t\treturn a.second - b.second ; //if first is same then sort on second basis\n// \t\t\t}\n// \t\t});\n\n\nint testcase = 1;\n //testcase = scn.nextInt() ;\nfor(int testcases =1  ; testcases <= testcase ;testcases++)\n{\n    \n //if(map.containsKey(arr[i]))map.put(arr[i],map.get(arr[i])+1) ;else map.put(arr[i],1) ;\n //if(map.containsKey(temp))map.put(temp,map.get(temp)+1) ;else map.put(temp,1) ;\n \n //adj = new ArrayList[n] ;\n\n// for(int i = 0; i< n; i++)\n// {\n//     adj[i] = new ArrayList<Integer>();\n// }\n\n// long n = scn.nextLong() ;\n//String s = scn.next() ;\n\n\nArrayList<Character> temp1 = new ArrayList<>() ;\nArrayList<Character> temp2 = new ArrayList<>() ;\n\nint n= scn.nextInt() ;\nint[] arr= new int[n] ;\nint i = 0 ; \nfor( i=0; i < n;i++)\n{\n    arr[i]= scn.nextInt();\n}\n\ni = 0 ; int j =n-1  ;int ans = 0 ; \n\nint val= 1 ;\n\n ///   i ................j\nwhile(i < j)\n{\n   if(arr[i] <  val && arr[j] < val)\n   {\n       break ;\n   }\n   \n   \n   if(arr[i] <  arr[j] )\n   {\n       if(arr[i] >=  val)\n       {\n       \n       list.add('L');\n       val = arr[i] +1  ;i++ ;\n     }\n     else{\n         \n         list.add('R');\n       val = arr[j] +1  ;j-- ;\n     }\n   \n   }\n   \n   else if(arr[i] > arr[j] ){\n       \n       if(arr[j] >=  val)\n       {\n       \n       list.add('R');\n       val = arr[j] +1  ;j-- ;\n     }\n     else{\n         \n         list.add('L');\n       val = arr[i] +1  ;i++ ;\n     }\n       \n       \n   }\n   \n   else{\n       \n        \n        int val1 = val ;\n        //pln(i);pln(j);\n       \n      for(int k = i ; k < j ; k++)\n      {\n          if(arr[k] >= val1)\n          {\n              temp1.add('L') ;\n              val1 = arr[k]+1 ;\n          }\n          else{\n              break ;\n          }\n      }\n    //   pln(i);pln(j);\n    //   out.println(temp1) ;\n    \n    \n    \n       for(int m = j ; m > i ; m--)\n      {\n          if(arr[m] >= val)\n          {\n              temp2.add('R') ;\n              val = arr[m]+1 ;\n          }else{\n              break ;\n          }\n      }\n      \n      \n      \n    //   pln(i);pln(j);\n    //   out.println(temp2) ;\n       \n     if(temp1.size() > temp2.size() ) \n     {\n         ans = 1; \n     }\n       \n       else {\n           ans =  2 ;\n       }\n       \n       break ;\n   }\n   \n}\n\nif( i== j)\n{\n    if(arr[i] >= val)list.add('L') ;\n}\n\nint s = list.size() ;\nif(ans == 1)s= s+ temp1.size() ;\nelse if(ans  == 2)s= s+ temp2.size() ;\n\nout.println(s ) ;\n\nfor(char x: list)out.print(x) ;\n\nif(ans == 1)\n{\n    for(char x: temp1)out.print(x) ;\n}\n\nelse if(ans == 2){\n    for(char x: temp2)out.print(x) ;\n}\n\n//out.println(ans) ;\n//out.println(ans+\" \"+in) ;\n\n//out.println(\"Case #\" + testcases + \": \"  + ans ) ;\n//out.println(\"@\") ;\nset.clear() ;\nsb.delete(0 , sb.length()) ;\nlist.clear() ;temp1.clear() ;temp2.clear() ;\nmap.clear() ;\nmapx.clear() ;\nmapy.clear() ;\nsetx.clear() ;sety.clear() ;\n\n} // test case  end loop\n\n\nout.flush() ;  \n} // solve fn ends\n\n\npublic static void main (String[] args) throws java.lang.Exception\n{\n  \n\nsolve() ;\n      \n}\n\n\n}\n  \n class Pair \n{\n  int first ;\n  \nint second  ;\n  \n  \n \n    \n      \n@Override\n\tpublic String toString() {\n\t\n\tString ans = \"\" ;\n\tans  += this.first ;\n\tans += \" \";\n\tans += this.second ;\n\t\n\treturn ans  ;\n\t}\n\n\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Increasing_Subsequence {\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tFastReader t = new FastReader();\n\t\tPrintWriter o = new PrintWriter(System.out);\n\t\tint n = t.nextInt();\n\t\tint[] a = new int[n];\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\ta[i] = t.nextInt();\n\n\t\tint l = 0, h = n - 1, cur = 0, flag = 0;\n\n\t\tif (n == 1) {\n\t\t\to.println(1);\n\t\t\to.println('L');\n\t\t\to.close();\n\t\t\treturn;\n\t\t}\n\n\t\tif (a[l] < a[h]) {\n\t\t\tcur = a[l];\n\t\t\tsb.append('L');\n\t\t\tl++;\n\t\t} else if (a[h] < a[l]) {\n\t\t\tcur = a[h];\n\t\t\tsb.append('R');\n\t\t\th--;\n\t\t} else {\n\t\t\tflag = 1;\n\t\t}\n\n\t\twhile (l < h && flag == 0) {\n\t\t\tif (cur < Math.min(a[l], a[h])) {\n\t\t\t\tif (a[l] < a[h]) {\n\t\t\t\t\tsb.append('L');\n\t\t\t\t\tcur = a[l];\n\t\t\t\t\tl++;\n\t\t\t\t} else if (a[h] < a[l]) {\n\t\t\t\t\tsb.append('R');\n\t\t\t\t\tcur = a[h];\n\t\t\t\t\th--;\n\t\t\t\t} else {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (cur < Math.max(a[l], a[h])) {\n\t\t\t\tif (a[l] > a[h]) {\n\t\t\t\t\tsb.append('L');\n\t\t\t\t\tcur = a[l];\n\t\t\t\t\tl++;\n\t\t\t\t} else if (a[h] > a[l]) {\n\t\t\t\t\tsb.append('R');\n\t\t\t\t\tcur = a[h];\n\t\t\t\t\th--;\n\t\t\t\t} else {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (l == h && cur < a[l])\n\t\t\tsb.append('L');\n\n\t\tif (flag == 1) {\n\t\t\tint c1 = 1, c2 = 1;\n\t\t\twhile (a[l] < a[l + 1]) {\n\t\t\t\tl++;\n\t\t\t\tc1++;\n\t\t\t}\n\n\t\t\twhile (a[h] < a[h - 1]) {\n\t\t\t\th--;\n\t\t\t\tc2++;\n\t\t\t}\n\n\t\t\tif (c1 < c2) {\n\t\t\t\twhile (c2-- > 0)\n\t\t\t\t\tsb.append('R');\n\t\t\t} else\n\t\t\t\twhile (c1-- > 0)\n\t\t\t\t\tsb.append('L');\n\n\t\t}\n\n\t\to.println(sb.length());\n\t\to.println(sb);\n\n\t\to.flush();\n\t\to.close();\n\t}\n}\n"
        }
    ]
}