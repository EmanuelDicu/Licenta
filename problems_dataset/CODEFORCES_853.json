{
    "name": "853_D. Michael and Charging Stations",
    "source": "CODEFORCES",
    "description": "Michael has just bought a new electric car for moving across city. Michael does not like to overwork, so each day he drives to only one of two his jobs.\n\nMichael's day starts from charging his electric car for getting to the work and back. He spends 1000 burles on charge if he goes to the first job, and 2000 burles if he goes to the second job.\n\nOn a charging station he uses there is a loyalty program that involves bonus cards. Bonus card may have some non-negative amount of bonus burles. Each time customer is going to buy something for the price of x burles, he is allowed to pay an amount of y (0 \u2264 y \u2264 x) burles that does not exceed the bonus card balance with bonus burles. In this case he pays x - y burles with cash, and the balance on the bonus card is decreased by y bonus burles. \n\nIf customer pays whole price with cash (i.e., y = 0) then 10% of price is returned back to the bonus card. This means that bonus card balance increases by <image> bonus burles. Initially the bonus card balance is equal to 0 bonus burles.\n\nMichael has planned next n days and he knows how much does the charge cost on each of those days. Help Michael determine the minimum amount of burles in cash he has to spend with optimal use of bonus card. Assume that Michael is able to cover any part of the price with cash in any day. It is not necessary to spend all bonus burles at the end of the given period.\n\nInput\n\nThe first line of input contains a single integer n (1 \u2264 n \u2264 300 000), the number of days Michael has planned.\n\nNext line contains n integers a1, a2, ..., an (ai = 1000 or ai = 2000) with ai denoting the charging cost at the day i.\n\nOutput\n\nOutput the minimum amount of burles Michael has to spend.\n\nExamples\n\nInput\n\n3\n1000 2000 1000\n\n\nOutput\n\n3700\n\n\nInput\n\n6\n2000 2000 2000 2000 2000 1000\n\n\nOutput\n\n10000\n\nNote\n\nIn the first sample case the most optimal way for Michael is to pay for the first two days spending 3000 burles and get 300 bonus burles as return. After that he is able to pay only 700 burles for the third days, covering the rest of the price with bonus burles.\n\nIn the second sample case the most optimal way for Michael is to pay the whole price for the first five days, getting 1000 bonus burles as return and being able to use them on the last day without paying anything in cash.",
    "difficulty": "D",
    "tags": [
        "binary search",
        "dp",
        "greedy"
    ],
    "rating": 2400,
    "public_test": [
        {
            "input": "6\n2000 2000 2000 2000 2000 1000\n",
            "output": "10000"
        },
        {
            "input": "3\n1000 2000 1000\n",
            "output": "3700"
        }
    ],
    "generated_test": [
        {
            "input": "12\n2000 1000 2000 2000 2000 1000 2000 2000 2000 2000 2000 1000\n",
            "output": "19100\n"
        }
    ],
    "solution": [
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = (int)1e9 + 7;\nconst int MOD2 = 1007681537;\nconst int INF = (int)1e9;\nconst long long LINF = (long long)1e18;\nconst long double PI = acos((long double)-1);\nconst long double EPS = 1e-9;\ninline long long gcd(long long a, long long b) {\n  long long r;\n  while (b) {\n    r = a % b;\n    a = b;\n    b = r;\n  }\n  return a;\n}\ninline long long lcm(long long a, long long b) { return a / gcd(a, b) * b; }\ninline long long fpow(long long n, long long k, int p = MOD) {\n  long long r = 1;\n  for (; k; k >>= 1) {\n    if (k & 1) r = r * n % p;\n    n = n * n % p;\n  }\n  return r;\n}\ntemplate <class T>\ninline int chkmin(T& a, const T& val) {\n  return val < a ? a = val, 1 : 0;\n}\ntemplate <class T>\ninline int chkmax(T& a, const T& val) {\n  return a < val ? a = val, 1 : 0;\n}\ninline long long isqrt(long long k) {\n  long long r = sqrt(k) + 1;\n  while (r * r > k) r--;\n  return r;\n}\ninline long long icbrt(long long k) {\n  long long r = cbrt(k) + 1;\n  while (r * r * r > k) r--;\n  return r;\n}\ninline void addmod(int& a, int val, int p = MOD) {\n  if ((a = (a + val)) >= p) a -= p;\n}\ninline void submod(int& a, int val, int p = MOD) {\n  if ((a = (a - val)) < 0) a += p;\n}\ninline int mult(int a, int b, int p = MOD) { return (long long)a * b % p; }\ninline int inv(int a, int p = MOD) { return fpow(a, p - 2, p); }\ninline int sign(long double x) { return x < -EPS ? -1 : x > +EPS; }\ninline int sign(long double x, long double y) { return sign(x - y); }\nconst int maxn = 1e6 + 5;\nint n;\nint a[maxn];\nvector<int> pos1;\nvector<int> pos2;\nint mn[maxn << 1];\nint sm[maxn << 1];\nvoid upd(int p, int val) {\n  p += 1 << 19;\n  mn[p] = sm[p] = val;\n  while (p > 1) {\n    p >>= 1;\n    sm[p] = sm[p << 1] + sm[p << 1 | 1];\n    mn[p] = min(mn[p << 1], sm[p << 1] + mn[p << 1 | 1]);\n  }\n}\nint check(int mi) {\n  for (int i = (0); i < (n); i++) {\n    upd(i, -a[i]);\n  }\n  for (int i = (0); i < (int((pos2).size())); i++) {\n    int ix = pos2[i];\n    upd(ix, 200);\n  }\n  int ptr = int((pos2).size()) - 1;\n  for (int x = (0); x < (int((pos1).size()) + 1); x++)\n    if (mi >= 1000 * x) {\n      int y = min(int((pos2).size()), (mi - 1000 * x) / 2000);\n      while (ptr >= y) {\n        int ix = pos2[ptr];\n        upd(ix, -2000);\n        ptr--;\n      }\n      if (x) {\n        int ix = pos1[x - 1];\n        upd(ix, 100);\n      }\n      int rm = mi - 1000 * x - 2000 * y;\n      if ((!x && a[0] == 1000) || (!y && a[0] == 2000)) {\n        upd(0, rm - a[0]);\n      } else {\n        upd(0, rm + a[0] / 10);\n      }\n      if (mn[1] >= 0) {\n        return 1;\n      }\n    }\n  return 0;\n}\nvoid solve() {\n  cin >> n;\n  for (int i = (0); i < (n); i++) {\n    cin >> a[i];\n    if (a[i] == 1000) {\n      pos1.push_back(i);\n    } else {\n      pos2.push_back(i);\n    }\n  }\n  int lo = 0, hi = 600000000;\n  while (lo < hi) {\n    int mi = lo + hi >> 1;\n    if (!check(mi)) {\n      lo = mi + 1;\n    } else {\n      hi = mi;\n    }\n  }\n  cout << (lo + hi >> 1) << \"\\n\";\n}\nint main() {\n  int JUDGE_ONLINE = 1;\n  if (fopen(\"in.txt\", \"r\")) {\n    JUDGE_ONLINE = 0;\n    assert(freopen(\"in.txt\", \"r\", stdin));\n  } else {\n    ios_base::sync_with_stdio(0), cin.tie(0);\n  }\n  solve();\n  if (!JUDGE_ONLINE) {\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[300010];\nlong long dp[300010][42], ans;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  for (int i = 0; i <= n; i++)\n    for (int j = 0; j <= 30; j++) dp[i][j] = 300000000000LL;\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j <= 30; j++) {\n      if (j + a[i] / 1000 <= 30)\n        dp[i + 1][j + a[i] / 1000] =\n            min(dp[i + 1][j + a[i] / 1000], dp[i][j] + a[i]);\n      if (j * 100 >= a[i])\n        dp[i + 1][j - a[i] / 100] = min(dp[i + 1][j - a[i] / 100], dp[i][j]);\n      else\n        dp[i + 1][0] = min(dp[i + 1][0], dp[i][j] + a[i] - j * 100);\n    }\n  ans = dp[n][0];\n  for (int i = 1; i <= 30; i++) ans = min(ans, dp[n][i]);\n  printf(\"%lld\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int maxn = 3e5 + 50;\nconst int inf = 0x3f3f3f3f;\nint n, f[2][312], cur = 0;\ninline void Update(int& x, int y) { x = std::min(x, y); }\nint main(int argc, char* argv[]) {\n  scanf(\"%d\", &n);\n  memset(f[cur], 0x3f, sizeof(f[cur]));\n  f[cur][0] = 0;\n  while (n--) {\n    int x, pre = cur;\n    cur ^= 1;\n    memset(f[cur], 0x3f, sizeof(f[cur]));\n    scanf(\"%d\", &x);\n    for (int i = 0; i < 312; ++i)\n      if (f[pre][i] != inf) {\n        if (i + x / 100 < 312) Update(f[cur][i + x / 100], f[pre][i] + x);\n        int used = std::min(x, i * 10);\n        if (i - used / 10 < 312)\n          Update(f[cur][i - used / 10], f[pre][i] + x - used);\n      }\n  }\n  int ans = inf;\n  for (int i = 0; i < 312; ++i) ans = std::min(ans, f[cur][i]);\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class D {\n\n\tstatic boolean test(int mask, int i) {\n\t\treturn ((mask >> i) & 1) == 1;\n\t}\n\n\tstatic final int INF = Integer.MAX_VALUE / 3;\n\tstatic final int C = 31;\n\n\tint fast(int[] a) {\n\t\tint n = a.length;\n\t\tint[] pref = new int[n + 1];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tpref[i + 1] = pref[i] + a[i];\n\t\t}\n\n\t\tint res = INF;\n\t\tint last1 = -1;\n\n\t\tint[] nxt1 = new int[n + 1];\n\t\tnxt1[n] = -1;\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tif (a[i] == 1) {\n\t\t\t\tnxt1[i] = i;\n\t\t\t} else {\n\t\t\t\tnxt1[i] = nxt1[i + 1];\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i <= n; i++) {\n\t\t\tres = Math.min(res, go(pref[i], pref[n] - pref[i]));\n\t\t\tif (last1 != -1) {\n\t\t\t\tres = Math.min(\n\t\t\t\t\t\tres,\n\t\t\t\t\t\tgo(pref[last1], 1, pref[i] - pref[last1 + 1], pref[n]\n\t\t\t\t\t\t\t\t- pref[i]));\n\t\t\t}\n\t\t\tif (nxt1[i] != -1) {\n\t\t\t\tres = Math.min(\n\t\t\t\t\t\tres,\n\t\t\t\t\t\tgo(pref[i], pref[nxt1[i]] - pref[i], 1, pref[n]\n\t\t\t\t\t\t\t\t- pref[nxt1[i] + 1]));\n\t\t\t}\n\t\t\tif (i != n && a[i] == 1) {\n\t\t\t\tlast1 = i;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tint go(int a, int b) {\n\t\tint spent = 10 * a;\n\t\tint card = a;\n\t\treturn spent + 10 * b - Math.min(10 * b, card);\n\t}\n\n\tint go(int a, int b, int c, int d) {\n\t\tint spent = 10 * a;\n\t\tint card = a;\n\n\t\tint use = Math.min(card, 10 * b);\n\t\tcard -= use;\n\t\tspent += 10 * b - use;\n\n\t\tspent += 10 * c;\n\t\tcard += c;\n\n\t\tuse = Math.min(card, 10 * d);\n\t\tcard -= use;\n\t\tspent += 10 * d - use;\n\t\treturn spent;\n\t}\n\n\tint fastPoly(int[] a) {\n\t\tint[] dp = new int[C];\n\t\tArrays.fill(dp, INF);\n\t\tdp[0] = 0;\n\n\t\tfor (int x : a) {\n\t\t\tint[] nxt = new int[C];\n\t\t\tArrays.fill(nxt, INF);\n\t\t\tfor (int was = 0; was < C; was++) {\n\t\t\t\tif (dp[was] == INF) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// full\n\t\t\t\tif (was + x < C) {\n\t\t\t\t\tnxt[was + x] = Math.min(nxt[was + x], dp[was] + x * 10);\n\t\t\t\t}\n\n\t\t\t\t// ez\n\t\t\t\tint use = Math.min(was, x * 10);\n\t\t\t\tnxt[was - use] = Math.min(nxt[was - use], dp[was] + x * 10\n\t\t\t\t\t\t- use);\n\t\t\t}\n\t\t\tdp = nxt;\n\t\t}\n\t\tint ret = INF;\n\t\tfor (int x : dp) {\n\t\t\tret = Math.min(ret, x);\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\tint slowPoly(int[] a) {\n\t\tint sz = a.length * 2 + 1;\n\t\tint[] dp = new int[sz];\n\t\tArrays.fill(dp, INF);\n\t\tdp[0] = 0;\n\n\t\tfor (int x : a) {\n\t\t\tint[] nxt = new int[sz];\n\t\t\tArrays.fill(nxt, INF);\n\t\t\tfor (int was = 0; was < sz; was++) {\n\t\t\t\tif (dp[was] == INF) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// full\n\t\t\t\tif (was + x < sz) {\n\t\t\t\t\tnxt[was + x] = Math.min(nxt[was + x], dp[was] + x * 10);\n\t\t\t\t}\n\n\t\t\t\t// ez\n\t\t\t\tint use = Math.min(was, x * 10);\n\t\t\t\tnxt[was - use] = Math.min(nxt[was - use], dp[was] + x * 10\n\t\t\t\t\t\t- use);\n\t\t\t}\n\t\t\tdp = nxt;\n\t\t}\n\t\tint ret = INF;\n\t\tfor (int x : dp) {\n\t\t\tret = Math.min(ret, x);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tint slow(int[] a) {\n\t\tint n = a.length;\n\t\tint res = Integer.MAX_VALUE;\n\n\t\tint bestMask = -1;\n\n\t\tint bestFast = Integer.MAX_VALUE;\n\n\t\tfor (int mask = 0; mask < (1 << n); mask++) {\n\t\t\tint card = 0;\n\t\t\tint spent = 0;\n\n\t\t\tboolean ez1 = false;\n\t\t\tboolean ez2 = false;\n\n\t\t\tboolean goodMask = true;\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (test(mask, i)) {\n\t\t\t\t\tspent += a[i] * 10;\n\t\t\t\t\tcard += a[i];\n\t\t\t\t\tif ((a[i] == 1) && ez1) {\n\t\t\t\t\t\tgoodMask = false;\n\t\t\t\t\t}\n\t\t\t\t\tif ((a[i] == 2) && ez2) {\n\t\t\t\t\t\tgoodMask = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (a[i] == 1) {\n\t\t\t\t\t\tez1 = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tez2 = true;\n\t\t\t\t\t}\n\t\t\t\t\tint use = Math.min(card, a[i] * 10);\n\t\t\t\t\tcard -= use;\n\t\t\t\t\tspent += a[i] * 10 - use;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spent < res) {\n\t\t\t\tbestMask = mask;\n\t\t\t}\n\t\t\tif (goodMask) {\n\t\t\t\tbestFast = Math.min(bestFast, spent);\n\t\t\t}\n\t\t\tres = Math.min(res, spent);\n\t\t}\n\t\t// if (bestFast != res) {\n\t\t// System.err.println(Arrays.toString(a));\n\t\t// System.err.println(res);\n\t\t// System.err.println(bestFast);\n\t\t// System.err.println(bestMask);\n\t\t// throw new AssertionError();\n\t\t// }\n\t\tSystem.err.println(Integer.toBinaryString(bestMask));\n\t\treturn res;\n\t}\n\n\tvoid submit() {\n\t\tint n = nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt() / 1000;\n\t\t}\n//\t\tout.println(fast(a) * 100);\n\t\tout.println(fastPoly(a) * 100);\n\t}\n\n\tvoid preCalc() {\n\n\t}\n\n\tvoid stressExp() {\n\t\tfor (int n = 1;; n++) {\n\t\t\tSystem.err.println(n);\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int mask = 0; mask < 1 << n; mask++) {\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\ta[i] = test(mask, i) ? 1 : 2;\n\t\t\t\t}\n\t\t\t\tif (fastPoly(a) != fast(a)) {\n\t\t\t\t\tSystem.err.println(Arrays.toString(a));\n\t\t\t\t\tSystem.err.println(slowPoly(a));\n\t\t\t\t\tSystem.err.println(fast(a));\n\t\t\t\t\tSystem.err.println(slow(a));\n\t\t\t\t\tthrow new AssertionError();\n\t\t\t\t}\n\t\t\t\t// slow(a);\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid stressPoly() {\n\t\tfor (int tst = 1;; tst++) {\n\t\t\tint n = rand(1, 50);\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = rand(1, 2);\n\t\t\t}\n\t\t\tif (slowPoly(a) != fast(a)) {\n\t\t\t\tSystem.err.println(Arrays.toString(a));\n\t\t\t\tSystem.err.println(slowPoly(a));\n\t\t\t\tSystem.err.println(fast(a));\n\t\t\t\tSystem.err.println(slow(a));\n\t\t\t\tthrow new AssertionError();\n\t\t\t}\n\t\t\t// slow(a);\n\t\t\tSystem.err.println(tst);\n\t\t}\n\t}\n\n\tvoid test() {\n\t\tfast(new int[] { 2, 2 });\n\t}\n\n\tD() throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tpreCalc();\n\t\t submit();\n//\t\t stressExp();\n//\t\t stressPoly();\n\t\t// test();\n\t\tout.close();\n\t}\n\n\tstatic final Random rng = new Random();\n\n\tstatic int rand(int l, int r) {\n\t\treturn l + rng.nextInt(r - l + 1);\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew D();\n\t}\n\n\tBufferedReader br;\n\tPrintWriter out;\n\tStringTokenizer st;\n\n\tString nextToken() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tString nextString() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid addmod(int &a, long long b) {\n  a = (a + b);\n  if (a >= 1000000007) a -= 1000000007;\n}\nvoid mulmod(int &a, long long b) { a = (a * b) % 1000000007; }\ntemplate <class T>\nbool domin(T &a, const T &b) {\n  return a > b ? a = b, 1 : 0;\n}\ntemplate <class T>\nbool domax(T &a, const T &b) {\n  return a < b ? a = b, 1 : 0;\n}\nint gi() {\n  int a;\n  scanf(\"%d\", &a);\n  return a;\n}\nlong long gll() {\n  long long a;\n  scanf(\"%lld\", &a);\n  return a;\n}\nint ans[2][34];\nint main() {\n  int v = 1000000007;\n  fill_n(ans[0], 34, v);\n  fill_n(ans[1], 34, v);\n  ans[0][0] = 0;\n  int n = gi(), ix, nx;\n  for (int i = 0; i < n; i++) {\n    int x = gi() / 100;\n    int bo = x / 10;\n    ix = (i & 1);\n    nx = ix ^ 1;\n    fill_n(ans[nx], 34, v);\n    for (int j = 0; j < 34; j++)\n      if (ans[ix][j] < 1000000007) {\n        if (j < x) {\n          domin(ans[nx][j + bo], ans[ix][j] + x);\n          domin(ans[nx][0], ans[ix][j] + x - j);\n        } else if (j < 30) {\n          domin(ans[nx][j - x], ans[ix][j]);\n          domin(ans[nx][j + bo], ans[ix][j] + x);\n        } else {\n          domin(ans[nx][j - x], ans[ix][j]);\n        }\n      }\n  }\n  int fa = 1000000007;\n  for (int i = 0; i < 34; i++) {\n    domin(fa, ans[nx][i]);\n  }\n  cout << fa * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005;\nint a[N];\nint f[45];\nint g[45];\nint n;\nint ans;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), a[i] /= 100;\n  memset(f, 127 / 3, sizeof(f));\n  f[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    memset(g, 127 / 3, sizeof(g));\n    for (int j = 1; j <= a[i]; j++) g[0] = min(f[j] + a[i] - j, g[0]);\n    for (int j = a[i] + 1; j <= 40; j++) g[j - a[i]] = min(g[j - a[i]], f[j]);\n    if (a[i] == 10)\n      for (int j = 1; j <= 40; j++) g[j] = min(g[j], f[j - 1] + 10);\n    if (a[i] == 20)\n      for (int j = 2; j <= 40; j++) g[j] = min(g[j], f[j - 2] + 20);\n    memcpy(f, g, sizeof(g));\n  }\n  ans = 1e9;\n  for (int i = 0; i <= 40; i++) ans = min(ans, f[i]);\n  printf(\"%d\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconstexpr long long mod = 1000000007;\nconst long long INF = mod * mod;\nconst long double eps = 1e-12;\nconst long double pi = acos(-1.0);\nlong long mod_pow(long long a, long long n, long long m = mod) {\n  a %= m;\n  long long res = 1;\n  while (n) {\n    if (n & 1) res = res * a % m;\n    a = a * a % m;\n    n >>= 1;\n  }\n  return res;\n}\nstruct modint {\n  long long n;\n  modint() : n(0) { ; }\n  modint(long long m) : n(m) {\n    if (n >= mod)\n      n %= mod;\n    else if (n < 0)\n      n = (n % mod + mod) % mod;\n  }\n  operator int() { return n; }\n};\nbool operator==(modint a, modint b) { return a.n == b.n; }\nmodint operator+=(modint &a, modint b) {\n  a.n += b.n;\n  if (a.n >= mod) a.n -= mod;\n  return a;\n}\nmodint operator-=(modint &a, modint b) {\n  a.n -= b.n;\n  if (a.n < 0) a.n += mod;\n  return a;\n}\nmodint operator*=(modint &a, modint b) {\n  a.n = ((long long)a.n * b.n) % mod;\n  return a;\n}\nmodint operator+(modint a, modint b) { return a += b; }\nmodint operator-(modint a, modint b) { return a -= b; }\nmodint operator*(modint a, modint b) { return a *= b; }\nmodint operator^(modint a, int n) {\n  if (n == 0) return modint(1);\n  modint res = (a * a) ^ (n / 2);\n  if (n % 2) res = res * a;\n  return res;\n}\nlong long inv(long long a, long long p) {\n  return (a == 1 ? 1 : (1 - p * inv(p % a, a)) / a + p);\n}\nmodint operator/(modint a, modint b) { return a * modint(inv(b, mod)); }\nconst int max_n = 1 << 18;\nmodint fact[max_n], factinv[max_n];\nvoid init_f() {\n  fact[0] = modint(1);\n  for (int i = 0; i < max_n - 1; i++) {\n    fact[i + 1] = fact[i] * modint(i + 1);\n  }\n  factinv[max_n - 1] = modint(1) / fact[max_n - 1];\n  for (int i = max_n - 2; i >= 0; i--) {\n    factinv[i] = factinv[i + 1] * modint(i + 1);\n  }\n}\nmodint comb(int a, int b) {\n  if (a < 0 || b < 0 || a < b) return 0;\n  return fact[a] * factinv[b] * factinv[a - b];\n}\nint dx[4] = {0, 1, 0, -1};\nint dy[4] = {1, 0, -1, 0};\nconst int sz = 50;\nint dp[sz];\nint cop[sz];\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  int sum = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    a[i] /= 100;\n    sum += a[i];\n  }\n  for (int i = 0; i < sz; i++) dp[i] = -mod;\n  dp[0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < sz; j++) cop[j] = -mod;\n    if (a[i] == 10) {\n      for (int j = 0; j < sz; j++) {\n        if (j + 1 < sz) {\n          cop[j + 1] = max(cop[j + 1], dp[j]);\n        }\n        for (int d = 1; d <= 10; d++) {\n          if (j - d >= 0) {\n            cop[j - d] = max(cop[j - d], dp[j] + d);\n          }\n        }\n      }\n    } else {\n      for (int j = 0; j < sz; j++) {\n        if (j + 2 < sz) {\n          cop[j + 2] = max(cop[j + 2], dp[j]);\n        }\n        for (int d = 1; d <= 20; d++) {\n          if (j - d >= 0) {\n            cop[j - d] = max(cop[j - d], dp[j] + d);\n          }\n        }\n      }\n    }\n    for (int j = 0; j < sz; j++) dp[j] = cop[j];\n  }\n  int ma = 0;\n  for (int j = 0; j < sz; j++) ma = max(ma, dp[j]);\n  int ans = sum - ma;\n  ans *= 100;\n  cout << ans << \"\\n\";\n}\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  solve();\n  char nyaa;\n  cin >> nyaa;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T1>\nvoid deb(T1 e1) {\n  cout << e1 << endl;\n}\ntemplate <class T1, class T2>\nvoid deb(T1 e1, T2 e2) {\n  cout << e1 << \" \" << e2 << endl;\n}\ntemplate <class T1, class T2, class T3>\nvoid deb(T1 e1, T2 e2, T3 e3) {\n  cout << e1 << \" \" << e2 << \" \" << e3 << endl;\n}\ntemplate <class T1, class T2, class T3, class T4>\nvoid deb(T1 e1, T2 e2, T3 e3, T4 e4) {\n  cout << e1 << \" \" << e2 << \" \" << e3 << \" \" << e4 << endl;\n}\ntemplate <class T1, class T2, class T3, class T4, class T5>\nvoid deb(T1 e1, T2 e2, T3 e3, T4 e4, T5 e5) {\n  cout << e1 << \" \" << e2 << \" \" << e3 << \" \" << e4 << \" \" << e5 << endl;\n}\ntemplate <class T1, class T2, class T3, class T4, class T5, class T6>\nvoid deb(T1 e1, T2 e2, T3 e3, T4 e4, T5 e5, T6 e6) {\n  cout << e1 << \" \" << e2 << \" \" << e3 << \" \" << e4 << \" \" << e5 << \" \" << e6\n       << endl;\n}\nconst long long int mod = 1000000007ll;\nint arr[300005];\nint n;\nint dp[300005][41];\nint func(int pos, int b) {\n  if (pos == n) return 0;\n  if (b > 40) return mod;\n  int& res = dp[pos][b];\n  if (res != -1) return res;\n  res = func(pos + 1, b + arr[pos] / 10) + arr[pos];\n  res = min(res, func(pos + 1, max(0, b - arr[pos])) + max(0, arr[pos] - b));\n  return res;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &arr[i]);\n    arr[i] /= 100;\n  }\n  memset(dp, -1, sizeof dp);\n  printf(\"%d\\n\", func(0, 0) * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, sum, tot, ans;\nint a[400400];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    sum += a[i] / 1000;\n    tot += (a[i] == 1000);\n  }\n  int temp = sum * 10 / 11;\n  if (sum <= 11) temp = sum - a[n] / 1000;\n  if (!tot && temp % 2 == 1) temp--;\n  cout << sum * 1000 - temp * 100;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, x, f[3500], g[3500], ans = 1e9, maxn = 3000;\nint main() {\n  scanf(\"%d\", &n);\n  memset(f, 127, sizeof(f));\n  f[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    memcpy(g, f, sizeof(f));\n    memset(f, 127, sizeof(f));\n    scanf(\"%d\", &x);\n    for (int j = 0; j <= maxn; j += 100)\n      f[j + x / 10] = min(f[j + x / 10], g[j] + x);\n    for (int j = 0; j <= maxn; j += 100)\n      f[j - min(j, x)] = min(f[j - min(j, x)], g[j] + max(0, x - j));\n  }\n  for (int i = 0; i <= maxn; i += 100) ans = min(ans, f[i]);\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300010;\nconst int M = 31;\nint n;\nint a[N];\nint d[N][M];\nint DP(int i, int bonus) {\n  if (d[i][bonus] != -1) return d[i][bonus];\n  if (i == n) return max(0, a[i] - bonus);\n  if (bonus > M - 1) return N * M;\n  return d[i][bonus] =\n             min(max(0, a[i] - bonus) + DP(i + 1, max(0, bonus - a[i])),\n                 a[i] + DP(i + 1, bonus + (a[i] / 10)));\n}\nint main() {\n  scanf(\"%d\", &n);\n  memset(d, -1, sizeof(d));\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  printf(\"%d\", DP(0, 0) * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 3e5 + 10;\nconst int INF = 1e9;\nint n, a[MAXN], f[35], g[35];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= 31; ++i) g[i] = INF;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n    f[0] = f[1] = INF;\n    for (int j = a[i] / 10; j <= 31; ++j) f[j] = g[j - a[i] / 10] + a[i];\n    for (int j = a[i]; j <= 31; ++j) f[j - a[i]] = min(f[j - a[i]], g[j]);\n    for (int j = 1; j < a[i]; ++j) f[0] = min(f[0], g[j] + a[i] - j);\n    for (int j = 0; j <= 31; ++j) g[j] = f[j];\n  }\n  for (int i = 1; i <= 31; ++i) g[0] = min(g[0], g[i]);\n  printf(\"%d\\n\", g[0] * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300005][45], n, value[300005];\nvoid update(int &x, int y) { x = min(x, y); }\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> value[i];\n    value[i] /= 100;\n  }\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j < 45; j++) a[i][j] = 1e9;\n  a[1][value[1] / 10] = value[1];\n  for (int i = 1; i < n; i++) {\n    int tmp = value[i + 1];\n    for (int j = 0; j < 45; j++) {\n      int used = min(j, tmp);\n      update(a[i + 1][j - used], a[i][j] + tmp - used);\n      update(a[i + 1][j + tmp / 10], a[i][j] + tmp);\n    }\n  }\n  int ans = 1e9;\n  for (int i = 0; i < 45; i++) ans = min(ans, a[n][i]);\n  cout << ans << \"00\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 300010;\nconst int M = 50;\nconst int INF = 0x3f3f3f3f;\nint dp[N][M], a[N];\nint n;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  memset(dp, 0x3f, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 0; j < M; ++j) {\n      if (dp[i - 1][j] == INF) {\n        continue;\n      }\n      if (a[i] / 10 + j < M) {\n        dp[i][j + a[i] / 10] =\n            std::min(dp[i][j + a[i] / 10], dp[i - 1][j] + a[i]);\n      }\n      int x = std::min(a[i], j);\n      dp[i][j - x] = std::min(dp[i][j - x], dp[i - 1][j] + a[i] - x);\n    }\n  }\n  int min = INT_MAX;\n  for (int i = 0; i < M; ++i) {\n    min = std::min(min, dp[n][i]);\n  }\n  return printf(\"%d\\n\", min * 100), 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1e9;\nconst long long INF64 = 1e18;\nconst long long MOD = 1e9 + 7;\nconst long double EPS = 1e-9;\nconst long double Pi = 3.1415926535897932384626433832795;\nconst int N = 3e5 + 17;\nconst int M = 32;\nint dp[N][M];\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < int(n); i++) scanf(\"%d\", &a[i]);\n  for (int i = 0; i < int(N); i++)\n    for (int j = 0; j < int(M); j++) dp[i][j] = INF;\n  dp[0][0] = 0;\n  for (int i = 0; i < int(n); i++) {\n    for (int j = 0; j < int(M); j++) {\n      if (j + a[i] / 1000 < M)\n        dp[i + 1][j + a[i] / 1000] =\n            min(dp[i + 1][j + a[i] / 1000], dp[i][j] + a[i]);\n      dp[i + 1][j - min(j, a[i] / 100)] =\n          min(dp[i + 1][j - min(j, a[i] / 100)],\n              dp[i][j] + a[i] - 100 * min(j, a[i] / 100));\n    }\n  }\n  int ans = INF;\n  for (int i = 0; i < int(M); i++) ans = min(ans, dp[n][i]);\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\ninline bool getmin(T *a, const T &b) {\n  if (b < *a) {\n    *a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T>\ninline bool getmax(T *a, const T &b) {\n  if (b > *a) {\n    *a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T>\ninline void read(T *a) {\n  char c;\n  while (isspace(c = getchar())) {\n  }\n  bool flag = 0;\n  if (c == '-')\n    flag = 1, *a = 0;\n  else\n    *a = c - 48;\n  while (isdigit(c = getchar())) *a = *a * 10 + c - 48;\n  if (flag) *a = -*a;\n}\nconst int mo = 40009;\ntemplate <class T>\nT pow(T a, T b, int c = mo) {\n  T res = 1;\n  for (T i = 1; i <= b; i <<= 1, a = 1LL * a * a % c)\n    if (b & i) res = 1LL * res * a % c;\n  return res;\n}\nconst int N = 310000;\nint f[N][35];\nint a[N], n;\nint main() {\n  cin >> n;\n  for (register int i = (1); i <= (n); ++i) read(a + i);\n  for (register int i = (0); i <= (33); ++i)\n    for (register int j = (0); j <= (n); ++j) f[j][i] = 1e9;\n  f[0][0] = 0;\n  for (register int i = (0); i <= (n - 1); ++i)\n    for (register int j = (0); j <= (33); ++j) {\n      int x = j * 100, y = a[i + 1] / 1000;\n      if (j + y <= 33) getmin(&f[i + 1][j + y], f[i][j] + a[i + 1]);\n      if (x >= a[i + 1]) getmin(&f[i + 1][(x - a[i + 1]) / 100], f[i][j]);\n      if (x < a[i + 1]) getmin(&f[i + 1][0], f[i][j] + a[i + 1] - x);\n    }\n  int ans = 1e9;\n  for (register int i = (0); i <= (33); ++i) getmin(&ans, f[n][i]);\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextInt() / 1000;\n            }\n\n            final int infinity = (int) 1e9;\n            final int K = 30;\n            int[] d = new int[K + 1];\n            int[] nd = new int[K + 1];\n            Arrays.fill(d, infinity);\n            d[0] = 0;\n            for (int x : a) {\n                Arrays.fill(nd, infinity);\n                for (int i = 0; i < d.length; i++) {\n                    // Do not use bonus.\n                    int ni = Math.min(d.length - 1, i + x);\n                    nd[ni] = Math.min(nd[ni], d[i] + 1000 * x);\n                    // Use bonus.\n                    ni = Math.max(0, i - 10 * x);\n                    nd[ni] = Math.min(nd[ni], d[i] + Math.max(0, 1000 * x - 100 * i));\n                }\n                int[] tmp = d;\n                d = nd;\n                nd = tmp;\n            }\n            int ans = infinity;\n            for (int x : d) {\n                ans = Math.min(ans, x);\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class FastScanner {\n        private BufferedReader in;\n        private StringTokenizer st;\n\n        public FastScanner(InputStream stream) {\n            in = new BufferedReader(new InputStreamReader(stream));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(in.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 3e5 + 10;\nusing namespace std;\nint n, A[N];\nint dp[2][50];\nint main() {\n  memset(dp, 0x3f, sizeof(dp));\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &A[i]);\n    A[i] /= 100;\n  }\n  int s = 0, t = 1;\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    int a = A[i] / 10;\n    for (int j = 0; j <= 40; ++j)\n      if (dp[s][j] < dp[0][49]) {\n        if (j + a <= 40) dp[t][j + a] = min(dp[t][j + a], dp[s][j] + A[i]);\n        int b = min(j, A[i]);\n        if (b) dp[t][j - b] = min(dp[t][j - b], dp[s][j] + A[i] - b);\n        dp[s][j] = dp[0][49];\n      }\n    swap(s, t);\n  }\n  int ans = dp[0][49];\n  for (int i = 0; i < 20; ++i) ans = min(ans, dp[s][i]);\n  printf(\"%d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class D {\n\n\tstatic boolean test(int mask, int i) {\n\t\treturn ((mask >> i) & 1) == 1;\n\t}\n\n\tstatic final int INF = Integer.MAX_VALUE / 3;\n\tstatic final int C = 105;\n\n\tint fast(int[] a) {\n\t\tint n = a.length;\n\t\tint[] pref = new int[n + 1];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tpref[i + 1] = pref[i] + a[i];\n\t\t}\n\n\t\tint res = INF;\n\t\tint last1 = -1;\n\n\t\tint[] nxt1 = new int[n + 1];\n\t\tnxt1[n] = -1;\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tif (a[i] == 1) {\n\t\t\t\tnxt1[i] = i;\n\t\t\t} else {\n\t\t\t\tnxt1[i] = nxt1[i + 1];\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i <= n; i++) {\n\t\t\tres = Math.min(res, go(pref[i], pref[n] - pref[i]));\n\t\t\tif (last1 != -1) {\n\t\t\t\tres = Math.min(\n\t\t\t\t\t\tres,\n\t\t\t\t\t\tgo(pref[last1], 1, pref[i] - pref[last1 + 1], pref[n]\n\t\t\t\t\t\t\t\t- pref[i]));\n\t\t\t}\n\t\t\tif (nxt1[i] != -1) {\n\t\t\t\tres = Math.min(\n\t\t\t\t\t\tres,\n\t\t\t\t\t\tgo(pref[i], pref[nxt1[i]] - pref[i], 1, pref[n]\n\t\t\t\t\t\t\t\t- pref[nxt1[i] + 1]));\n\t\t\t}\n\t\t\tif (i != n && a[i] == 1) {\n\t\t\t\tlast1 = i;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tint go(int a, int b) {\n\t\tint spent = 10 * a;\n\t\tint card = a;\n\t\treturn spent + 10 * b - Math.min(10 * b, card);\n\t}\n\n\tint go(int a, int b, int c, int d) {\n\t\tint spent = 10 * a;\n\t\tint card = a;\n\n\t\tint use = Math.min(card, 10 * b);\n\t\tcard -= use;\n\t\tspent += 10 * b - use;\n\n\t\tspent += 10 * c;\n\t\tcard += c;\n\n\t\tuse = Math.min(card, 10 * d);\n\t\tcard -= use;\n\t\tspent += 10 * d - use;\n\t\treturn spent;\n\t}\n\n\tint slowPoly(int[] a) {\n\t\tint sz = a.length * 2 + 1;\n\t\tint[] dp = new int[sz];\n\t\tArrays.fill(dp, INF);\n\t\tdp[0] = 0;\n\n\t\tfor (int x : a) {\n\t\t\tint[] nxt = new int[sz];\n\t\t\tArrays.fill(nxt, INF);\n\t\t\tfor (int was = 0; was < sz; was++) {\n\t\t\t\tif (dp[was] == INF) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// full\n\t\t\t\tif (was + x < sz) {\n\t\t\t\t\tnxt[was + x] = Math.min(nxt[was + x], dp[was] + x * 10);\n\t\t\t\t}\n\n\t\t\t\t// ez\n\t\t\t\tint use = Math.min(was, x * 10);\n\t\t\t\tnxt[was - use] = Math.min(nxt[was - use], dp[was] + x * 10\n\t\t\t\t\t\t- use);\n\t\t\t}\n\t\t\tdp = nxt;\n\t\t}\n\t\tint ret = INF;\n\t\tfor (int x : dp) {\n\t\t\tret = Math.min(ret, x);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tint slow(int[] a) {\n\t\tint n = a.length;\n\t\tint res = Integer.MAX_VALUE;\n\n\t\tint bestMask = -1;\n\n\t\tint bestFast = Integer.MAX_VALUE;\n\n\t\tfor (int mask = 0; mask < (1 << n); mask++) {\n\t\t\tint card = 0;\n\t\t\tint spent = 0;\n\n\t\t\tboolean ez1 = false;\n\t\t\tboolean ez2 = false;\n\n\t\t\tboolean goodMask = true;\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (test(mask, i)) {\n\t\t\t\t\tspent += a[i] * 10;\n\t\t\t\t\tcard += a[i];\n\t\t\t\t\tif ((a[i] == 1) && ez1) {\n\t\t\t\t\t\tgoodMask = false;\n\t\t\t\t\t}\n\t\t\t\t\tif ((a[i] == 2) && ez2) {\n\t\t\t\t\t\tgoodMask = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (a[i] == 1) {\n\t\t\t\t\t\tez1 = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tez2 = true;\n\t\t\t\t\t}\n\t\t\t\t\tint use = Math.min(card, a[i] * 10);\n\t\t\t\t\tcard -= use;\n\t\t\t\t\tspent += a[i] * 10 - use;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spent < res) {\n\t\t\t\tbestMask = mask;\n\t\t\t}\n\t\t\tif (goodMask) {\n\t\t\t\tbestFast = Math.min(bestFast, spent);\n\t\t\t}\n\t\t\tres = Math.min(res, spent);\n\t\t}\n\t\t// if (bestFast != res) {\n\t\t// System.err.println(Arrays.toString(a));\n\t\t// System.err.println(res);\n\t\t// System.err.println(bestFast);\n\t\t// System.err.println(bestMask);\n\t\t// throw new AssertionError();\n\t\t// }\n\t\tSystem.err.println(Integer.toBinaryString(bestMask));\n\t\treturn res;\n\t}\n\n\tvoid submit() {\n\t\tint n = nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt() / 1000;\n\t\t}\n\t\tout.println(fast(a) * 100);\n\t}\n\n\tvoid preCalc() {\n\n\t}\n\n\tvoid stressExp() {\n\t\tfor (int n = 1;; n++) {\n\t\t\tSystem.err.println(n);\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int mask = 0; mask < 1 << n; mask++) {\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\ta[i] = test(mask, i) ? 1 : 2;\n\t\t\t\t}\n\t\t\t\tif (slowPoly(a) != fast(a)) {\n\t\t\t\t\tSystem.err.println(Arrays.toString(a));\n\t\t\t\t\tSystem.err.println(slowPoly(a));\n\t\t\t\t\tSystem.err.println(fast(a));\n\t\t\t\t\tSystem.err.println(slow(a));\n\t\t\t\t\tthrow new AssertionError();\n\t\t\t\t}\n\t\t\t\t// slow(a);\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid stressPoly() {\n\t\tfor (int tst = 1;; tst++) {\n\t\t\tint n = rand(1, 50);\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = rand(1, 2);\n\t\t\t}\n\t\t\tif (slowPoly(a) != fast(a)) {\n\t\t\t\tSystem.err.println(Arrays.toString(a));\n\t\t\t\tSystem.err.println(slowPoly(a));\n\t\t\t\tSystem.err.println(fast(a));\n\t\t\t\tSystem.err.println(slow(a));\n\t\t\t\tthrow new AssertionError();\n\t\t\t}\n\t\t\t// slow(a);\n\t\t\tSystem.err.println(tst);\n\t\t}\n\t}\n\n\tvoid test() {\n\t\tfast(new int[] { 2, 2 });\n\t}\n\n\tD() throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tpreCalc();\n\t\t submit();\n//\t\tstressExp();\n//\t\tstressPoly();\n\t\t// test();\n\t\tout.close();\n\t}\n\n\tstatic final Random rng = new Random();\n\n\tstatic int rand(int l, int r) {\n\t\treturn l + rng.nextInt(r - l + 1);\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew D();\n\t}\n\n\tBufferedReader br;\n\tPrintWriter out;\n\tStringTokenizer st;\n\n\tString nextToken() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tString nextString() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst long long INFF = 0x3f3f3f3f3f3f3f3fll;\nconst int MAX = 3e5 + 5;\nconst int MAXN = 1000000;\nconst int MAX_N = MAX;\nconst long long MOD = 1e9 + 7;\nconst long double pi = acos(-1.0);\nint gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\ntemplate <typename T>\ninline T abs(T a) {\n  return a > 0 ? a : -a;\n}\ntemplate <class T>\ninline void read(T& num) {\n  bool start = false, neg = false;\n  char c;\n  num = 0;\n  while ((c = getchar()) != EOF) {\n    if (c == '-')\n      start = neg = true;\n    else if (c >= '0' && c <= '9') {\n      start = true;\n      num = num * 10 + c - '0';\n    } else if (start)\n      break;\n  }\n  if (neg) num = -num;\n}\ninline long long powMM(long long a, long long b, long long M) {\n  long long ret = 1;\n  a %= M;\n  while (b) {\n    if (b & 1) ret = ret * a % M;\n    b >>= 1;\n    a = a * a % M;\n  }\n  return ret;\n}\nvoid open() {\n  freopen(\"1009.in\", \"r\", stdin);\n  freopen(\"out.txt\", \"w\", stdout);\n}\nint n, dp[2][31], tem, now, pre, an = INF;\nint main() {\n  scanf(\"%d\", &n);\n  memset(dp, 0x3f, sizeof(dp));\n  now = 1;\n  dp[pre][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &tem);\n    ;\n    for (int j = 0; j <= 30; j++) {\n      dp[now][min(30, j + tem / 1000)] =\n          min(dp[now][min(30, j + tem / 1000)], dp[pre][j] + tem);\n      dp[now][j - min(j, tem / 100)] =\n          min(dp[now][j - min(j, tem / 100)],\n              dp[pre][j] + tem - min(j, tem / 100) * 100);\n    }\n    swap(now, pre);\n    memset(dp[now], 0x3f, sizeof(dp[now]));\n  }\n  for (int j = 0; j <= 30; j++) an = min(an, dp[pre][j]);\n  printf(\"%d\\n\", an);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300000 + 10;\nlong long dp[N][40];\nint n;\nlong long a[N];\nint main() {\n  memset(dp, 0x3f3f3f3f, sizeof(dp));\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%I64d\", &a[i]);\n    a[i] /= 100;\n  }\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    int cards = a[i] / 10;\n    for (int j = 0; j <= 31; j++) {\n      if (dp[i - 1][j] < 0x3f3f3f3f) {\n        if (j + cards <= 31)\n          dp[i][j + cards] = min(dp[i][j + cards], dp[i - 1][j] + a[i]);\n        int b = min((long long)j, a[i]);\n        if (b) {\n          dp[i][j - b] = min(dp[i][j - b], dp[i - 1][j] + a[i] - b);\n        }\n      }\n    }\n  }\n  long long ans = 0x3f3f3f3f;\n  for (int i = 0; i < 20; i++) {\n    if (dp[n][i] < ans) ans = dp[n][i];\n  }\n  printf(\"%I64d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300010];\nint dp[300010][70];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  memset(dp, 0x3f3f3f3f, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < 50; j++)\n      if (dp[i][j] != 0x3f3f3f3f) {\n        dp[i + 1][j + a[i + 1] / 1000] =\n            min(dp[i + 1][j + a[i + 1] / 1000], dp[i][j] + a[i + 1]);\n        dp[i + 1][j - min(a[i + 1] / 100, j)] =\n            min(dp[i + 1][j - min(a[i + 1] / 100, j)],\n                dp[i][j] + a[i + 1] - 100 * min(a[i + 1] / 100, j));\n      }\n  }\n  int ans = 0x3f3f3f3f;\n  for (int i = 0; i < 50; i++) {\n    ans = min(ans, dp[n][i]);\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9 + 7;\nconst int maxn = 3e5 + 5;\nint add(int x, int y) {\n  x += y;\n  if (x >= mod) x -= mod;\n  return x;\n}\nint mul(int x, int y) {\n  long long z = 1LL * x * y;\n  return z - z / mod * mod;\n}\nint a[maxn], b[maxn];\nint f[2][55];\nvoid updata(int &x, int y) { x = max(x, y); }\nint main() {\n  int n, i, j, u, v, s;\n  scanf(\"%d\", &n);\n  for (i = 1, s = 0; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i] / 100;\n    a[i] /= 1000;\n    s += a[i];\n  }\n  u = 0;\n  f[0][0] = 1;\n  for (i = 1; i <= n; i++) {\n    v = u ^ 1;\n    memset(f[v], 0, sizeof(f[v]));\n    for (j = 0; j <= 50; j++) {\n      if (f[u][j]) {\n        if (j < b[i])\n          updata(f[v][0], f[u][j] + j);\n        else\n          updata(f[v][j - b[i]], f[u][j] + b[i]);\n        if (j + a[i] <= 50) updata(f[v][j + a[i]], f[u][j]);\n      }\n    }\n    u ^= 1;\n  }\n  int x = 1;\n  for (i = 0; i <= 50; i++) x = max(x, f[u][i]);\n  x--;\n  printf(\"%d\\n\", s * 1000 - x * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 7;\nint n, ans, sa, sb, S;\nint a[N];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++)\n    scanf(\"%d\", &a[i]), sa += a[i] / 1000, sb += (a[i] == 1000);\n  S = sa * 10 / 11;\n  if (sa <= 11) S = sa - a[n] / 1000;\n  if (sb == 0 && (S & 1)) S--;\n  printf(\"%d\\n\", sa * 1000 - S * 100);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n  int x = 0, f = 1;\n  char ch = getchar();\n  while (ch > '9' || ch < '0') ch == '-' && (f = 0) || (ch = getchar());\n  while (ch <= '9' && ch >= '0')\n    x = (x << 3) + (x << 1) + ch - '0', ch = getchar();\n  return f ? x : -x;\n}\nint a[300020], f[2][50];\nint main(int argc, char const *argv[]) {\n  int n = read();\n  for (int i = 1; i <= n; i++) a[i] = read() / 100;\n  int now = 0, pre = 1;\n  memset(f, 63, sizeof f);\n  f[now][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    swap(now, pre);\n    int x = a[i] / 10;\n    memset(f[now], 63, sizeof f[now]);\n    for (int j = 0; j < 40; j++) {\n      if (j + x < 40) f[now][j + x] = f[pre][j] + a[i];\n      int y = min(j, a[i]);\n      if (y) f[now][j - y] = min(f[now][j - y], f[pre][j] + a[i] - y);\n    }\n  }\n  int asuna = 1 << 30;\n  for (int i = 0; i < 30; i++) asuna = min(asuna, f[now][i]);\n  printf(\"%d00\\n\", asuna);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005, INF = 0x3f3f3f3f;\nint dp[N][31], s[N], n;\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  memset(dp, 0x3f, sizeof(dp));\n  cin >> n;\n  for (int i = 1; i <= (n); ++i) cin >> s[i], s[i] /= 100;\n  dp[0][0] = 0;\n  for (int i = 1; i <= (n); ++i) {\n    for (int j = 0; j < (31); ++j)\n      for (int k = 1; k <= (s[i]); ++k)\n        if (j + s[i] < 31)\n          dp[i][j] = min(dp[i][j], dp[i - 1][j + k] + s[i] - k);\n    for (int j = 0; j < (31); ++j)\n      if (j - s[i] / 10 >= 0)\n        dp[i][j] = min(dp[i][j], dp[i - 1][j - s[i] / 10] + s[i]);\n  }\n  int ans = INF;\n  for (int i = 0; i < (31); ++i) ans = min(ans, dp[n][i]);\n  cout << ans * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5e5 + 99, M = 45, inf = 1e9;\nint n, t, a[N], dp[N][M], ans = inf;\nint main() {\n  cin >> n;\n  for (int i = 1; i < n + 1; i++) {\n    cin >> a[i];\n    a[i] /= 1000;\n  }\n  for (int i = 1; i < M; i++) dp[0][i] = inf;\n  for (int i = 1; i < n + 1; i++)\n    for (int j = 0; j < M; j++) {\n      dp[i][j] = inf;\n      if (j >= a[i]) dp[i][j] = dp[i - 1][j - a[i]] + a[i] * 10;\n      for (int l = j + 1; l < M; l++)\n        dp[i][j] = min(dp[i][j], dp[i - 1][l] + max(a[i] * 10 - (l - j), 0));\n      ;\n    }\n  for (int i = 0; i < M; i++) ans = min(ans, dp[n][i]);\n  ;\n  cout << ans * 100ll;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 300100, MAXK = 105, INF = 0x3f3f3f3f;\nint dp[MAX][MAXK];\nint p[MAX], n;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &p[i]);\n  memset(dp, INF, sizeof dp);\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    int st = p[i] / 1000;\n    for (int j = 0; j < MAXK - 2; j++) {\n      dp[i + 1][j + st] = min(dp[i + 1][j + st], dp[i][j] + 10 * st);\n      dp[i + 1][max(0, j - 10 * st)] =\n          min(dp[i + 1][max(0, j - 10 * st)], dp[i][j] + max(0, 10 * st - j));\n    }\n  }\n  int rje = INF;\n  for (int i = 0; i < MAXK; i++) rje = min(rje, dp[n][i]);\n  cout << (long long)rje * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 9;\nconst int INF = 1e9 + 7;\nint a[N], dp[2][49];\ninline int read() {\n  int s = 1, a = 0;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') s = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    a = a * 10 + ch - '0';\n    ch = getchar();\n  }\n  return s * a;\n}\nint main() {\n  int n = read();\n  for (int i = 1; i <= n; i++) a[i] = read() / 100;\n  for (int i = 1; i <= 30; i++) dp[0][i] = INF;\n  for (int i = 1, b = 1; i <= n; i++, b ^= 1) {\n    for (int j = 0; j <= 30; j++) dp[b][j] = INF;\n    for (int j = 0; j <= 30; j++) {\n      dp[b][j + a[i] / 10] = min(dp[b][j + a[i] / 10], dp[b ^ 1][j] + a[i]);\n      dp[b][j - a[i] + max(a[i] - j, 0)] = min(\n          dp[b][j - a[i] + max(a[i] - j, 0)], dp[b ^ 1][j] + max(a[i] - j, 0));\n    }\n  }\n  int res = INF;\n  for (int i = 0; i <= 30; i++) res = min(res, dp[n % 2][i]);\n  return 0 * printf(\"%d00\\n\", res);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nbool umin(T& a, T b) {\n  if (a > b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\ntemplate <class T>\nbool umax(T& a, T b) {\n  if (a < b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\nint dp[300009][205];\nint arr[300009];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", arr + i);\n  for (int i = 0; i <= n; i++)\n    for (int j = 0; j <= 203; j++) dp[i][j] = 1000000007;\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j <= 200; j++)\n      umin(dp[i][j + arr[i] / 1000], dp[i - 1][j] + arr[i]),\n          umin(dp[i][j - min(j, arr[i] / 100)],\n               dp[i - 1][j] + arr[i] - 100 * min(j, arr[i] / 100));\n  int ans = 1000000007;\n  for (int i = 0; i <= 200; i++) umin(ans, dp[n][i]);\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 10;\nint a[N], n, f[N][35];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  memset(f, 0x3f, sizeof f);\n  f[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j <= 31; j++) {\n      if (a[i + 1] / 1000 + j <= 31)\n        f[i + 1][j + a[i + 1] / 1000] =\n            min(f[i + 1][j + a[i + 1] / 1000], f[i][j] + a[i + 1]);\n      if (j >= a[i + 1] / 100)\n        f[i + 1][j - a[i + 1] / 100] =\n            min(f[i + 1][j - a[i + 1] / 100], f[i][j]);\n      else\n        f[i + 1][0] = min(f[i + 1][0], f[i][j] + a[i + 1] - j * 100);\n    }\n  }\n  int ans = 2e9;\n  for (int i = 0; i <= 31; i++) ans = min(ans, f[n][i]);\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class abc {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            int[] a = IOUtils.readIntArray(in, n);\n            int[] last1K = new int[n];\n            int current = -1;\n            for (int i = 0; i < n; i++) {\n                last1K[i] = current;\n                if (a[i] == 1000) {\n                    current = i;\n                }\n            }\n            int[] next1K = new int[n];\n            current = -1;\n            for (int i = n - 1; i >= 0; i--) {\n                next1K[i] = current;\n                if (a[i] == 1000) {\n                    current = i;\n                }\n            }\n            long[] sums = ArrayUtils.partialSums(a);\n            long answer = Long.MAX_VALUE;\n            //System.out.println(answer+1);\n            for (int i = 0; i < n; i++) {\n                //No partial\n                long cost = sums[i + 1];\n                long bonus = cost / 10;\n                long pwb = sums[n] - sums[i + 1];\n                if (bonus >= pwb) {\n                    answer = Math.min(answer, cost);\n                }\n                if (a[i] != 1000 && last1K[i] != -1) {\n                    cost = sums[i + 1] - 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1] + 1000;\n                    if (bonus >= pwb && sums[last1K[i]] >= 10000) {\n                        answer = Math.min(answer, cost);\n                    }\n                }\n                if (next1K[i] != i + 1 && next1K[i] != -1) {\n                    cost = sums[i + 1] + 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1] - 1000;\n                    if (bonus >= pwb && sums[i + 1] / 10 >= (next1K[i] - i - 1) * 2000) {\n                        answer = Math.min(answer, cost);\n                    }\n                }\n                //Partial\n                cost = sums[i];\n                bonus = cost / 10;\n                pwb = sums[n] - sums[i + 1];\n                int partial = i;\n                if (bonus >= pwb) {\n                    long remaining = bonus - pwb;\n                    cost += Math.max(0, a[partial] - remaining);\n                    answer = Math.min(answer, cost);\n                }\n                if (a[i] != 1000 && last1K[i] != -1) {\n                    cost = sums[i + 1] - 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1];\n                    partial = last1K[i];\n                    if (bonus >= pwb) {\n                        long remaining = bonus - pwb;\n                        remaining = Math.min(remaining, sums[partial] / 10);\n                        cost += Math.max(0, a[partial] - remaining);\n                        answer = Math.min(answer, cost);\n                    }\n                    cost = sums[i] - 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1] + 1000;\n                    partial = i;\n                    if (bonus >= pwb && sums[last1K[i]] >= 10000) {\n                        long remaining = bonus - pwb;\n                        cost += Math.max(0, a[partial] - remaining);\n                        answer = Math.min(answer, cost);\n                    }\n                }\n                if (next1K[i] != i + 1 && next1K[i] != -1 && next1K[next1K[i]] != -1) {\n                    cost = sums[i + 1] + 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1] - 2000;\n                    partial = next1K[next1K[i]];\n                    if (bonus >= pwb && sums[i + 1] / 10 >= (next1K[i] - i - 1) * 2000) {\n                        long remaining = bonus - pwb;\n                        cost += Math.max(0, a[partial] - remaining);\n                        answer = Math.min(answer, cost);\n                    }\n                }\n            }\n            out.printLine(answer);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class IOUtils {\n        public static int[] readIntArray(InputReader in, int size) {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = in.readInt();\n            }\n            return array;\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class ArrayUtils {\n        public static long[] partialSums(int[] array) {\n            long[] result = new long[array.length + 1];\n            for (int i = 0; i < array.length; i++) {\n                result[i + 1] = result[i] + array[i];\n            }\n            return result;\n        }\n\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 3e5 + 10;\nusing namespace std;\nint n, A[N];\nint dp[2][35];\nint main() {\n  memset(dp, 0x3f, sizeof(dp));\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &A[i]);\n    A[i] /= 100;\n  }\n  int s = 0, t = 1;\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    int a = A[i] / 10;\n    for (int j = 0; j <= 31; ++j)\n      if (dp[s][j] < dp[0][32]) {\n        if (j + a <= 31) dp[t][j + a] = min(dp[t][j + a], dp[s][j] + A[i]);\n        int b = min(j, A[i]);\n        if (b) dp[t][j - b] = min(dp[t][j - b], dp[s][j] + A[i] - b);\n        dp[s][j] = dp[0][32];\n      }\n    swap(s, t);\n  }\n  int ans = dp[0][32];\n  for (int i = 0; i < 20; ++i) ans = min(ans, dp[s][i]);\n  printf(\"%d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Div1_433D {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter printer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\tint nD = Integer.parseInt(reader.readLine());\n\t\tStringTokenizer inputData = new StringTokenizer(reader.readLine());\n\t\tint[] req = new int[nD];\n\t\tfor (int i = 0; i < nD; i++) {\n\t\t\treq[i] = Integer.parseInt(inputData.nextToken()) / 100;\n\t\t}\n\n\t\tint[][] dp = new int[nD][36];\n\t\tfor (int i = 0; i < nD; i++) {\n\t\t\tArrays.fill(dp[i], Integer.MAX_VALUE);\n\t\t}\n\n\t\tdp[0][req[0] / 10] = req[0];\n\t\tfor (int i = 0; i < nD - 1; i++) {\n\t\t\tfor (int j = 0; j <= 35; j++) {\n\t\t\t\tif (dp[i][j] != Integer.MAX_VALUE) {\n\t\t\t\t\tif (j + req[i + 1] / 10 <= 35) {\n\t\t\t\t\t\tdp[i + 1][j + req[i + 1] / 10] = Math.min(dp[i + 1][j + req[i + 1] / 10],\n\t\t\t\t\t\t\t\tdp[i][j] + req[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tint delta = Math.min(j, req[i + 1]);\n\t\t\t\t\tdp[i + 1][j - delta] = Math.min(dp[i + 1][j - delta], dp[i][j] + req[i + 1] - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tint ans = Integer.MAX_VALUE;\n\t\tfor (int i = 0; i <= 35; i++) {\n\t\t\tans = Math.min(ans, dp[nD - 1][i]);\n\t\t}\n\t\tprinter.println(ans * 100);\n\t\tprinter.close();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T, typename U>\ninline void smin(T &a, U b) {\n  if (a > b) a = b;\n}\ntemplate <typename T, typename U>\ninline void smax(T &a, U b) {\n  if (a < b) a = b;\n}\ntemplate <typename T>\ninline void gn(T &first) {\n  char c, sg = 0;\n  while (c = getchar(), (c > '9' || c < '0') && c != '-')\n    ;\n  for ((c == '-' ? sg = 1, c = getchar() : 0), first = 0; c >= '0' && c <= '9';\n       c = getchar())\n    first = (first << 1) + (first << 3) + c - '0';\n  if (sg) first = -first;\n}\ntemplate <class T, class T1>\ninline void gn(T &first, T1 &second) {\n  gn(first);\n  gn(second);\n}\ntemplate <class T, class T1, class T2>\ninline void gn(T &first, T1 &second, T2 &z) {\n  gn(first);\n  gn(second);\n  gn(z);\n}\ntemplate <typename T>\ninline void print(T first) {\n  if (first < 0) {\n    putchar('-');\n    return print(-first);\n  }\n  if (first < 10) {\n    putchar('0' + first);\n    return;\n  }\n  print(first / 10);\n  putchar(first % 10 + '0');\n}\ntemplate <typename T>\ninline void println(T first) {\n  print(first), putchar('\\n');\n}\ntemplate <typename T>\ninline void printsp(T first) {\n  print(first), putchar(' ');\n}\ntemplate <class T, class T1>\ninline void print(T first, T1 second) {\n  printsp(first), println(second);\n}\ntemplate <class T, class T1, class T2>\ninline void print(T first, T1 second, T2 z) {\n  printsp(first), printsp(second), println(z);\n}\nint power(int a, int b, int m, int ans = 1) {\n  for (; b; b >>= 1, a = 1LL * a * a % m)\n    if (b & 1) ans = 1LL * ans * a % m;\n  return ans;\n}\nint a[300300];\nint dp[300300][50];\nint main() {\n  int n;\n  gn(n);\n  for (int i = 1; i <= n; i++) gn(a[i]);\n  memset(dp, 0x3f, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j < 50; j++) {\n      if (a[i] == 1000) smin(dp[i][j], dp[i - 1][j - 1] + a[i]);\n      if (a[i] == 2000 && j > 1) smin(dp[i][j], dp[i - 1][j - 2] + a[i]);\n    }\n    for (int j = 1; j < 50; j++) {\n      for (int k = min(j, a[i] / 100); k >= 0; k--) {\n        smin(dp[i][j - k], dp[i - 1][j] + a[i] - 100 * k);\n      }\n    }\n  }\n  int ans = 0x3f3f3f3f;\n  for (int i = 0; i < 25; i++) smin(ans, dp[n][i]);\n  println(ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int lim = 45;\nconst int N = 300005;\nconst int INF = 1000000000;\nusing namespace std;\nint n, a[N];\nint f[2][lim];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n  int now = 0;\n  f[now][0] = 0;\n  for (int j = 1; j <= 40; ++j) f[now][j] = INF;\n  for (int i = 0; i < n; ++i) {\n    now ^= 1;\n    for (int j = 0; j <= 40; ++j) f[now][j] = INF;\n    for (int j = 0; j <= 40; ++j) {\n      if (j + a[i + 1] / 1000 <= 40)\n        f[now][j + a[i + 1] / 1000] =\n            min(f[now][j + a[i + 1] / 1000], f[now ^ 1][j] + a[i + 1]);\n      f[now][max(0, j - a[i + 1] / 100)] =\n          min(f[now][max(0, j - a[i + 1] / 100)],\n              f[now ^ 1][j] + max(a[i + 1] - j * 100, 0));\n    }\n  }\n  int res = INF;\n  for (int j = 0; j <= 40; ++j) res = min(res, f[now][j]);\n  printf(\"%d\\n\", res);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int B = 100;\nint n, x;\nint f[B + 1], g[B + 1];\nint main() {\n  scanf(\"%d\", &n);\n  memset(f, 127, sizeof(f));\n  f[0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &x);\n    x /= 100;\n    memcpy(g, f, sizeof(g));\n    memset(f, 127, sizeof(f));\n    for (int j = 0; j <= B; ++j)\n      if (g[j] < 1e9) {\n        int p = min(j + x / 10, B);\n        f[p] = min(f[p], g[j] + x);\n        int t = min(x, j);\n        f[j - t] = min(f[j - t], g[j] + x - t);\n      }\n  }\n  int ans = 1e9;\n  for (int i = 0; i <= B; ++i) ans = min(ans, f[i]);\n  printf(\"%d\\n\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long min(long long a, long long b) {\n  if (a < b) {\n    return a;\n  }\n  return b;\n}\nlong long max(long long a, long long b) {\n  if (a > b) {\n    return a;\n  }\n  return b;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long n;\n  cin >> n;\n  vector<vector<long long> > dp(n + 1, vector<long long>(31, 1e9));\n  dp[0][0] = 0;\n  for (long long i = 0; i < n; i++) {\n    long long a;\n    cin >> a;\n    for (long long j = 0; j <= 30; j++) {\n      dp[i + 1][min(30, j + a / 1000)] =\n          min(dp[i + 1][min(30, j + a / 1000)], dp[i][j] + a);\n    }\n    for (long long j = 0; j <= 30; j++) {\n      dp[i + 1][max(0, j - a / 100)] = min(\n          dp[i + 1][max(0, j - a / 100)], dp[i][j] + a - min(j, a / 100) * 100);\n    }\n  }\n  long long ans = 1e9;\n  for (long long i = 0; i <= 30; i++) {\n    ans = min(ans, dp[n][i]);\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long maxn = 300100;\nlong long n;\nlong long a[maxn];\nlong long p[maxn];\nlong long prv[maxn];\nlong long nex[maxn];\nbool check(long long x) {\n  if (p[n] - x > x / 1000 * 100) return false;\n  long long i = lower_bound(p, p + n + 1, x) - p - 1;\n  long long A = x - p[i];\n  long long B = a[i] - A;\n  if (p[i + 1] == x or p[n] - p[i + 1] <= p[i] / 10 - B) return true;\n  if (a[i] == 2000 and A >= 1000) {\n    long long j = prv[i];\n    if (~j and B <= p[j] / 10) return true;\n    j = nex[i];\n    if (~j and j != n - 1) return true;\n  }\n  return false;\n}\nint32_t main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n;\n  for (long long i = 0; i < n; i++) cin >> a[i];\n  for (long long i = 0; i < n; i++) p[i + 1] = p[i] + a[i];\n  for (long long prv = -1, i = 0; i < n; ::prv[i++] = prv)\n    if (a[i] == 1000) prv = i;\n  for (long long nex = -1, i = n - 1; ~i; ::nex[i--] = nex)\n    if (a[i] == 1000) nex = i;\n  long long l = 0, r = p[n], mid;\n  while (l != r - 1) {\n    mid = (l + r) / 2;\n    check(mid) ? r = mid : l = mid;\n  }\n  cout << r << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[300010], res[300010][55];\nint dp(int id, int cs) {\n  if (id == n) return 0;\n  if (res[id][cs] != -1) return res[id][cs];\n  int tk = min(cs, a[id]);\n  int w = a[id] - tk + dp(id + 1, cs - tk);\n  if (cs < 50) w = min(w, a[id] + dp(id + 1, cs + a[id] / 10));\n  return res[id][cs] = w;\n}\nint main() {\n  memset(res, -1, sizeof(res));\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  printf(\"%d00\\n\", dp(0, 0));\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a[400010];\nint main() {\n  long long n;\n  cin >> n;\n  long long sum = 0, count = 0;\n  for (long long i = 0; i < n; i++) {\n    scanf(\"%lld\", &a[i]);\n    sum += (a[i] / 1000);\n    if (a[i] == 1000) count++;\n  }\n  long long tmp;\n  if (sum <= 11)\n    tmp = sum - a[n - 1] / 1000;\n  else\n    tmp = 10 * sum / 11;\n  if (count == 0) {\n    if (tmp % 2 == 1) tmp--;\n  }\n  printf(\"%lld\\n\", 1ll * 1000 * sum - 1ll * tmp * 100);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int N = 3e5 + 5, N2 = 100, inf = 1e18;\nlong long int ary[N];\nlong long int dp[N][N2 + 1];\nlong long int solve(long long int i, long long int b, long long int n) {\n  if (i == n) {\n    return 0;\n  }\n  if (dp[i][b] == -1) {\n    dp[i][b] = inf;\n    if (b + ary[i] / 10 > N2) {\n      dp[i][b] = solve(i + 1, b - ary[i], n);\n    } else {\n      dp[i][b] = ary[i] + solve(i + 1, b + ary[i] / 10, n);\n      if (b >= ary[i])\n        dp[i][b] = min(dp[i][b], solve(i + 1, b - ary[i], n));\n      else\n        dp[i][b] = min(dp[i][b], solve(i + 1, 0, n) + ary[i] - b);\n    }\n  }\n  return dp[i][b];\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int n;\n  cin >> n;\n  for (long long int i = 0; i < n; ++i) {\n    cin >> ary[i];\n    ary[i] /= 100;\n  }\n  memset(dp, -1, sizeof(dp));\n  cout << solve(0, 0, n) * 100 << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:16777216\")\nusing namespace std;\nconst int INF = 1e9;\nvector<unordered_map<int, int> > fw;\nint n, q;\nint main() {\n  iostream::sync_with_stdio(0);\n  cin.tie(0), cout.tie(0);\n  int n;\n  cin >> n;\n  vector<int> dp[2];\n  const int MX = 500 + 1;\n  for (int i = 0; i < 2; i++) dp[i].resize(MX, 1e9);\n  dp[0][0] = 0;\n  int p = 1;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    x /= 100;\n    int a = x / 10;\n    for (int j = 0; j < MX; j++) {\n      if (j + x / 10 < MX) {\n        dp[p][j + a] = min(dp[p][j + a], dp[p ^ 1][j] + x);\n      }\n      if (j <= x)\n        dp[p][0] = min(dp[p][0], dp[p ^ 1][j] + x - j);\n      else\n        dp[p][j - x] = min(dp[p][j - x], dp[p ^ 1][j] + 0);\n    }\n    p ^= 1;\n    for (int i = 0; i < MX; i++) dp[p][i] = 1e9;\n  }\n  int ans = 1e9;\n  for (int i : dp[p ^ 1]) ans = min(ans, i);\n  cout << ans * 100;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = (int)1e9;\nconst int mod = inf + 7;\nconst double eps = 1e-9;\nconst double pi = acos(-1.0);\nint n, a[300300];\nint dp[33][300300];\nint calc(int bon, int ind) {\n  if (ind == n) return 0;\n  int &res = dp[bon][ind];\n  if (res != -1) return res;\n  res = a[ind] + calc(min(bon + a[ind] / 10, 31), ind + 1);\n  for (int i = 1; i <= bon && i <= a[ind]; i++) {\n    res = min(res, a[ind] - i + calc(bon - i, ind + 1));\n  }\n  return res;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", a + i);\n    a[i] /= 100;\n  }\n  memset(dp, -1, sizeof dp);\n  printf(\"%d\\n\", calc(0, 0) * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline void read(int &x) {\n  char ch;\n  bool flag = false;\n  for (ch = getchar(); !isdigit(ch); ch = getchar())\n    if (ch == '-') flag = true;\n  for (x = 0; isdigit(ch); x = x * 10 + ch - '0', ch = getchar())\n    ;\n  x = flag ? -x : x;\n}\ninline void read(long long &x) {\n  char ch;\n  bool flag = false;\n  for (ch = getchar(); !isdigit(ch); ch = getchar())\n    if (ch == '-') flag = true;\n  for (x = 0; isdigit(ch); x = x * 10 + ch - '0', ch = getchar())\n    ;\n  x = flag ? -x : x;\n}\ninline void write(int x) {\n  static const int maxlen = 100;\n  static char s[maxlen];\n  if (x < 0) {\n    putchar('-');\n    x = -x;\n  }\n  if (!x) {\n    putchar('0');\n    return;\n  }\n  int len = 0;\n  for (; x; x /= 10) s[len++] = x % 10 + '0';\n  for (int i = len - 1; i >= 0; --i) putchar(s[i]);\n}\nconst int MAXN = 410000;\nint a[MAXN];\nint n;\nint main() {\n  read(n);\n  int sum = 0;\n  int ans = 0;\n  int tot = 0;\n  for (int i = 1; i <= n; i++) {\n    read(a[i]);\n    sum += a[i] / 1000;\n    if (a[i] == 1000) tot++;\n  }\n  int tmp = 10 * sum / 11;\n  if (sum <= 11) tmp = sum - a[n] / 1000;\n  if ((!tot) && (tmp % 2 == 1)) tmp--;\n  printf(\"%d\\n\", sum * 1000 - tmp * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MaxN = 3e5 + 35;\nconst int INF = 1e9;\nint a[MaxN];\nint dp[MaxN][51];\ninline void up(int& x, int y) {\n  if (x > y) x = y;\n}\nint n;\nint main() {\n  ios_base ::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> n;\n  for (int i = 1; i <= n; ++i) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n  for (int i = 0; i <= n; ++i)\n    for (int j = 0; j <= 50; ++j) dp[i][j] = INF;\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; ++i)\n    for (int p = 0; p <= 50; ++p)\n      if (dp[i - 1][p] != INF) {\n        if (p + a[i] / 10 <= 50) up(dp[i][p + a[i] / 10], dp[i - 1][p] + a[i]);\n        int mx = min(a[i], p);\n        for (int k = 1; k <= mx; ++k) up(dp[i][p - k], dp[i - 1][p] + a[i] - k);\n      }\n  int ans = INF;\n  for (int i = 0; i <= 50; ++i) ans = min(ans, dp[n][i]);\n  cout << ans << \"00\" << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint read() {\n  char c = getchar();\n  int d = 0, f = 1;\n  for (; c < '0' || c > '9'; c = getchar())\n    if (c == '-') f = -1;\n  for (; c >= '0' && c <= '9'; d = d * 10 + c - 48, c = getchar())\n    ;\n  return d * f;\n}\nconst int N = 300010;\nint n;\nlong long a[N], s[N], la[N], nx[N];\nint main() {\n  n = read();\n  for (int i = 1; i <= n; ++i) a[i] = read();\n  for (int i = 1; i <= n; ++i) s[i] = s[i - 1] + a[i];\n  long long ans = 1e18;\n  for (int i = 0; i <= n; ++i)\n    ans = min(ans, s[i] + max(0LL, s[n] - s[i] - s[i] / 10));\n  for (int i = 1; i <= n; ++i) {\n    la[i] = la[i - 1];\n    if (a[i] == 1000) la[i] = i;\n  }\n  nx[n] = n + 1;\n  for (int i = n - 1; i >= 0; --i) {\n    nx[i] = nx[i + 1];\n    if (a[i] == 1000) nx[i] = i;\n  }\n  for (int i = 1; i <= n; ++i) {\n    int u = la[i];\n    if (a[u] == 1000 && u < i) {\n      long long res = s[u - 1], ss = s[u - 1] / 10;\n      res += max(0LL, a[u] - ss);\n      ss -= min(ss, a[u]);\n      res += s[i] - s[u];\n      ss += (s[i] - s[u]) / 10;\n      res += max(0LL, s[n] - s[i] - ss);\n      ans = min(ans, res);\n    }\n  }\n  for (int i = 0; i <= n - 1; ++i) {\n    int u = nx[i];\n    if (a[u] == 1000 && u > i + 1) {\n      long long res = s[i], ss = s[i] / 10;\n      res += max(0LL, s[u - 1] - s[i] - ss);\n      ss -= min(ss, s[u - 1] - s[i]);\n      res += a[u];\n      ss += a[u] / 10;\n      res += max(0LL, s[n] - s[u] - ss);\n      ans = min(ans, res);\n    }\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nvector<int> v1;\nvector<int> v2;\nint rest[300002 * 4];\nint need[300002 * 4];\nint ar[300002];\ninline void init(int b, int l, int r) {\n  if (l + 1 == r) {\n    need[b] = ar[l];\n    return;\n  }\n  init(b * 2 + 1, l, (l + r) >> 1);\n  init(b * 2 + 2, (l + r) >> 1, r);\n  need[b] = need[b * 2 + 1] + need[b * 2 + 2];\n}\nint sum;\ninline void add(int b, int l, int r, int ll, bool flag) {\n  if (r <= ll || ll < l) {\n    return;\n  }\n  if (l + 1 == r) {\n    if (flag) {\n      sum += ar[l] / 10;\n      rest[b] = ar[l] / 10;\n      need[b] = 0;\n    } else {\n      sum -= ar[l] / 10;\n      need[b] = ar[l];\n      rest[b] = 0;\n    }\n    return;\n  }\n  if (((l + r) >> 1) > ll) {\n    add(b * 2 + 1, l, (l + r) >> 1, ll, flag);\n  } else {\n    add(b * 2 + 2, (l + r) >> 1, r, ll, flag);\n  }\n  int dc = min(need[b * 2 + 2], rest[b * 2 + 1]);\n  need[b] = need[b * 2 + 2] + need[b * 2 + 1] - dc;\n  rest[b] = rest[b * 2 + 2] + rest[b * 2 + 1] - dc;\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    int a;\n    scanf(\"%d\", &a);\n    if (a == 1000) {\n      v1.push_back(i);\n    } else {\n      v2.push_back(i);\n    }\n    ar[i] = a / 100;\n  }\n  init(0, 0, n);\n  int lef = -1;\n  int maxi = 0;\n  for (int i = 0; i < v2.size(); i++) {\n    int be = sum - rest[0];\n    add(0, 0, n, v2[i], true);\n    int go = sum - rest[0];\n    if (be > go) {\n      add(0, 0, n, v2[i], false);\n      break;\n    } else {\n      lef = i;\n    }\n  }\n  maxi = sum - rest[0];\n  for (int i = 0; i < v1.size(); i++) {\n    add(0, 0, n, v1[i], true);\n    while (lef >= 0) {\n      int be = sum - rest[0];\n      add(0, 0, n, v2[lef], false);\n      int go = sum - rest[0];\n      if (be <= go) {\n        lef--;\n      } else {\n        add(0, 0, n, v2[lef], true);\n        break;\n      }\n    }\n    maxi = max(maxi, (int)sum - rest[0]);\n  }\n  long long int ans = 0;\n  for (int i = 0; i < n; i++) {\n    ans += (long long int)(ar[i] * 100);\n  }\n  ans -= (long long int)(maxi)*100LL;\n  printf(\"%lld\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 3e5 + 10;\nvoid setmin(int &a, int b) {\n  if (a > b) {\n    a = b;\n  }\n}\nint N;\nint A[MAXN];\nint dp[MAXN][200];\nint main() {\n  scanf(\"%d\", &N);\n  for (int i = 1; i <= N; i++) {\n    scanf(\"%d\", &A[i]);\n  }\n  memset(dp, 63, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 0; i < N; i++) {\n    int x = A[i + 1];\n    for (int j = 0; j < 200; j++) {\n      int pdp = dp[i][j];\n      if (pdp > 1e9) {\n        continue;\n      }\n      int nj;\n      int bspend = min(j, x / 100);\n      nj = j - bspend;\n      setmin(dp[i + 1][nj], pdp + x - bspend * 100);\n      nj = j + x / 1000;\n      if (nj < 200) {\n        setmin(dp[i + 1][nj], pdp + x);\n      }\n    }\n  }\n  int ans = INT_MAX;\n  for (int j = 0; j < 200; j++) {\n    setmin(ans, dp[N][j]);\n  }\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int read(register int ans = 0, register int sgn = ' ',\n                register int ch = getchar()) {\n  for (; ch < '0' || ch > '9'; sgn = ch, ch = getchar())\n    ;\n  for (; ch >= '0' && ch <= '9'; (ans *= 10) += ch - '0', ch = getchar())\n    ;\n  return sgn - '-' ? ans : -ans;\n}\nint a[300000 + 5], f[300000 + 5][31], n;\nint main() {\n  n = read();\n  for (register int i = 1; i <= n; a[i++] = read())\n    ;\n  memset(f, 0x3f, sizeof f), f[0][0] = 0;\n  for (register int i = 1, j; i <= n; i++)\n    for (j = 0; j <= 30; j++)\n      if (f[i - 1][j] < 0x3f3f3f3f) {\n        if (j + a[i] / 1000 <= 30)\n          f[i][j + a[i] / 1000] =\n              min(f[i][j + a[i] / 1000], f[i - 1][j] + a[i]);\n        if (j >= a[i] / 100)\n          f[i][j - a[i] / 100] = min(f[i][j - a[i] / 100], f[i - 1][j]);\n        else\n          f[i][0] = min(f[i][0], f[i - 1][j] + a[i] - j * 100);\n      }\n  printf(\"%d\\n\", f[n][0]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = (1 << 19);\nconst int MAXV = (50);\nconst int inf = (int)2e9 + 42;\nint n;\nint a[MAXN];\nvoid read() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n}\nint dp[MAXV][2];\nint add[MAXV];\nvoid solve() {\n  add[10] = 1;\n  add[20] = 2;\n  dp[0][0] = 0;\n  for (int i = 1; i < MAXV; i++) dp[i][0] = inf;\n  int prv = 0, cur = 1;\n  for (int i = 1; i <= n; i++) {\n    for (int val = 0; val < MAXV; val++) dp[val][cur] = inf;\n    for (int val = 0; val < MAXV; val++) {\n      if (val + add[a[i]] < MAXV)\n        dp[val + add[a[i]]][cur] = dp[val][prv] + a[i];\n      for (int y = 1; y <= min(a[i], val); y++)\n        dp[val - y][cur] = min(dp[val - y][cur], dp[val][prv] + a[i] - y);\n    }\n    prv ^= 1;\n    cur ^= 1;\n  }\n  int answer = inf;\n  for (int i = 0; i < MAXV; i++) answer = min(answer, dp[i][n & 1]);\n  cout << answer * 100ll << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  read();\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class d implements Runnable {\n    PrintWriter out;\n\n    int n;\n    long[][] memo;\n    int[] arr;\n    \n    public void main() throws Throwable {\n        FastScanner in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n        \n        n = in.nextInt();\n        arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = in.nextInt() / 100;\n        }\n        memo = new long[35][n];\n        for (long[] a : memo) Arrays.fill(a, -1);\n        out.println(go(0, 0) * 100);\n        out.close();\n    }\n    \n    long go(int i, int x) {\n        if (i == n) return 0;\n        if (memo[x][i] != -1) return memo[x][i];\n        if (x >= 31) {\n            return go(i + 1, x - arr[i]);\n        }\n        long ans = arr[i] + go(i + 1, x + arr[i] / 10);\n        if (x >= arr[i]) {\n            ans = Math.min(ans, go(i + 1, x - arr[i]));\n        } else {\n            ans = Math.min(ans, go(i + 1, 0) + arr[i] - x);\n        }\n        return memo[x][i] = ans;\n    }\n\n    \n    \n    \n    \n    \n    \n    \n    public static void main(String[] args) throws Exception {\n        new Thread(null, new d(), \"d\", 1L << 28).start();\n    }\n    public void run() {\n        try {\n           main(); \n        } catch (Throwable t) {\n            t.printStackTrace();\n            System.exit(-1);\n        }\n    }\n    static void sort(int[] arr) {\n        Random rand = new Random();\n        int n = arr.length;\n        for (int i = 1; i < n; i++) {\n            int j = rand.nextInt(i);\n            int tmp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = tmp;\n        }\n        Arrays.sort(arr);\n    }\n    static void sort(long[] arr) {\n        Random rand = new Random();\n        int n = arr.length;\n        for (int i = 1; i < n; i++) {\n            int j = rand.nextInt(i);\n            long tmp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = tmp;\n        }\n        Arrays.sort(arr);\n    }\n    static void sort(double[] arr) {\n        Random rand = new Random();\n        int n = arr.length;\n        for (int i = 1; i < n; i++) {\n            int j = rand.nextInt(i);\n            double tmp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = tmp;\n        }\n        Arrays.sort(arr);\n    }\n    static class FastScanner {\n        BufferedReader br; StringTokenizer st;\n        public FastScanner(InputStream i) {\n            br = new BufferedReader(new InputStreamReader(i));\n            st = new StringTokenizer(\"\");\n        }\n        public String next() throws Exception {\n            while (!st.hasMoreTokens()) {\n                st = new StringTokenizer(br.readLine());\n            }\n            return st.nextToken();\n        }\n        public int nextInt() throws Exception {\n            return Integer.parseInt(next());\n        }\n        public double nextDouble() throws Exception {\n            return Double.parseDouble(next());\n        }\n        public long nextLong() throws Exception {\n            return Long.parseLong(next());\n        }\n        public int[] nextIntArr(int n) throws Exception {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) arr[i] = nextInt();\n            return arr;\n        }\n        public double[] nextDoubleArr(int n) throws Exception {\n            double[] arr = new double[n];\n            for (int i = 0; i < n; i++) arr[i] = nextDouble();\n            return arr;\n        }\n        public long[] nextLongArr(int n) throws Exception {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) arr[i] = nextLong();\n            return arr;\n        }\n        public int[] nextOffsetIntArr(int n) throws Exception {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) arr[i] = nextInt() - 1;\n            return arr;\n        }\n        \n        public int[][] nextIntArr(int n, int m) throws Exception {\n            int[][] arr = new int[n][m];\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < m; j++)\n                    arr[i][j] = nextInt();\n            return arr;\n        }\n        public double[][] nextDoubleArr(int n, int m) throws Exception {\n            double[][] arr = new double[n][m];\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < m; j++)\n                    arr[i][j] = nextDouble();\n            return arr;\n        }\n        public long[][] nextLongArr(int n, int m) throws Exception {\n            long[][] arr = new long[n][m];\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < m; j++)\n                    arr[i][j] = nextLong();\n            return arr;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline long long mod(long long n, long long m) {\n  long long ret = n % m;\n  if (ret < 0) ret += m;\n  return ret;\n}\nlong long gcd(long long a, long long b) {\n  return (b == 0LL ? a : gcd(b, a % b));\n}\nlong long exp(long long a, long long b, long long m) {\n  if (b == 0LL) return 1LL;\n  if (b == 1LL) return mod(a, m);\n  long long k = mod(exp(a, b / 2, m), m);\n  if (b & 1LL) {\n    return mod(a * mod(k * k, m), m);\n  } else\n    return mod(k * k, m);\n}\nint n;\nconst int N = 300100, MX = 100, inf = 1e9;\nint a[N];\nint dp[N][MX + 1];\nint solve(int id, int j) {\n  if (id > n) return 0;\n  if (j >= MX) {\n    return solve(id + 1, j - a[id]);\n  }\n  int& x = dp[id][j];\n  if (x != -1) return x;\n  x = inf;\n  if (j > 0) {\n    int put = min(j, a[id]);\n    x = solve(id + 1, j - put) + a[id] - put;\n  }\n  return x = min(x, solve(id + 1, j + a[id] / 10) + a[id]);\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  memset(dp, -1, sizeof(dp));\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n  cout << 100LL * solve(1, 0) << \"\\n\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Egor Kulikov (egor@egork.net)\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            int[] a = IOUtils.readIntArray(in, n);\n            int[] last1K = new int[n];\n            int current = -1;\n            for (int i = 0; i < n; i++) {\n                last1K[i] = current;\n                if (a[i] == 1000) {\n                    current = i;\n                }\n            }\n            int[] next1K = new int[n];\n            current = -1;\n            for (int i = n - 1; i >= 0; i--) {\n                next1K[i] = current;\n                if (a[i] == 1000) {\n                    current = i;\n                }\n            }\n            long[] sums = ArrayUtils.partialSums(a);\n            long answer = Long.MAX_VALUE;\n            for (int i = 0; i < n; i++) {\n                //No partial\n                long cost = sums[i + 1];\n                long bonus = cost / 10;\n                long pwb = sums[n] - sums[i + 1];\n                if (bonus >= pwb) {\n                    answer = Math.min(answer, cost);\n                }\n                if (a[i] != 1000 && last1K[i] != -1) {\n                    cost = sums[i + 1] - 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1] + 1000;\n                    if (bonus >= pwb && sums[last1K[i]] >= 10000) {\n                        answer = Math.min(answer, cost);\n                    }\n                }\n                if (next1K[i] != i + 1 && next1K[i] != -1) {\n                    cost = sums[i + 1] + 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1] - 1000;\n                    if (bonus >= pwb && sums[i + 1] / 10 >= (next1K[i] - i - 1) * 2000) {\n                        answer = Math.min(answer, cost);\n                    }\n                }\n                //Partial\n                cost = sums[i];\n                bonus = cost / 10;\n                pwb = sums[n] - sums[i + 1];\n                int partial = i;\n                if (bonus >= pwb) {\n                    long remaining = bonus - pwb;\n                    cost += Math.max(0, a[partial] - remaining);\n                    answer = Math.min(answer, cost);\n                }\n                if (a[i] != 1000 && last1K[i] != -1) {\n                    cost = sums[i + 1] - 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1];\n                    partial = last1K[i];\n                    if (bonus >= pwb) {\n                        long remaining = bonus - pwb;\n                        remaining = Math.min(remaining, sums[partial] / 10);\n                        cost += Math.max(0, a[partial] - remaining);\n                        answer = Math.min(answer, cost);\n                    }\n                    cost = sums[i] - 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1] + 1000;\n                    partial = i;\n                    if (bonus >= pwb && sums[last1K[i]] >= 10000) {\n                        long remaining = bonus - pwb;\n                        cost += Math.max(0, a[partial] - remaining);\n                        answer = Math.min(answer, cost);\n                    }\n                }\n                if (next1K[i] != i + 1 && next1K[i] != -1 && next1K[next1K[i]] != -1) {\n                    cost = sums[i + 1] + 1000;\n                    bonus = cost / 10;\n                    pwb = sums[n] - sums[i + 1] - 2000;\n                    partial = next1K[next1K[i]];\n                    if (bonus >= pwb && sums[i + 1] / 10 >= (next1K[i] - i - 1) * 2000) {\n                        long remaining = bonus - pwb;\n                        cost += Math.max(0, a[partial] - remaining);\n                        answer = Math.min(answer, cost);\n                    }\n                }\n/*            long cost = sums[i + 1];\n            long bonus = cost / 10;\n            long payWithBonus = sums[n] - sums[i + 1];\n            int partial = i;\n            if (bonus >= payWithBonus) {\n                long remaining = bonus - payWithBonus;\n                remaining -= a[partial] / 10;\n                if (remaining >= 0) {\n                    cost -= min(a[partial], remaining);\n                }\n                answer = Math.min(answer, cost);\n            }\n            if (a[i] != 1000 && last1K[i] != -1) {\n                cost = sums[i + 1];\n                bonus = cost / 10;\n                payWithBonus = sums[n] - sums[i + 1];\n                partial = last1K[i];\n                if (bonus >= payWithBonus) {\n                    long remaining = bonus - payWithBonus;\n                    remaining -= a[partial] / 10;\n                    if (remaining >= 0) {\n                        cost -= min(a[partial], min(remaining, (sums[partial] - sums[0]) / 10));\n                    }\n                    answer = Math.min(answer, cost);\n                }\n                if (sums[last1K[i]] >= 10000) {\n                    cost = sums[i + 1] - 1000;\n                    bonus = cost / 10;\n                    payWithBonus = sums[n] - sums[i + 1] + 1000;\n                    partial = i;\n                    if (bonus >= payWithBonus) {\n                        long remaining = bonus - payWithBonus;\n                        remaining -= a[partial] / 10;\n                        if (remaining >= 0) {\n                            cost -= min(a[partial], remaining);\n                        }\n                        answer = Math.min(answer, cost);\n                    }\n                    if (last1K[last1K[i]] != -1) {\n                        cost = sums[i + 1] - 1000;\n                        bonus = cost / 10;\n                        payWithBonus = sums[n] - sums[i + 1] + 1000;\n                        partial = last1K[last1K[i]];\n                        if (bonus >= payWithBonus) {\n                            long remaining = bonus - payWithBonus;\n                            remaining -= a[partial] / 10;\n                            if (remaining >= 0) {\n                                cost -= min(a[partial], min(min(remaining, (sums[partial] - sums[0]) / 10),\n                                        sums[last1K[i]] / 10 - 1100));\n                            }\n                            answer = Math.min(answer, cost);\n                        }\n                    }\n                }\n            }\n            if (next1K[i] != -1 && next1K[i] != i + 1) {\n                cost = sums[i + 1] + 1000;\n                bonus = cost / 10;\n                payWithBonus = sums[n] - sums[i + 1] - 1000;\n                partial = next1K[i];\n                if (bonus >= payWithBonus && sums[i + 1] / 10 >= 2000 * (next1K[i] - i - 1)) {\n                    long remaining = bonus - payWithBonus;\n                    remaining -= a[partial] / 10;\n                    if (remaining >= 0) {\n                        cost -= min(a[partial], remaining);\n                    }\n                    answer = Math.min(answer, cost);\n                }\n                if (next1K[next1K[i]] != -1) {\n                    cost = sums[i + 1] + 1000;\n                    bonus = cost / 10;\n                    payWithBonus = sums[n] - sums[i + 1] - 2000;\n                    partial = next1K[next1K[i]];\n                    if (bonus >= payWithBonus && sums[i + 1] / 10 >= 2000 * (next1K[i] - i - 1)) {\n                        long remaining = bonus - payWithBonus;\n                        if (remaining >= 0) {\n                            cost -= min(a[partial], remaining);\n                        }\n                        answer = Math.min(answer, cost);\n                    }\n                }\n            }*/\n            }\n            out.printLine(answer);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class IOUtils {\n        public static int[] readIntArray(InputReader in, int size) {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = in.readInt();\n            }\n            return array;\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(long i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class ArrayUtils {\n        public static long[] partialSums(int[] array) {\n            long[] result = new long[array.length + 1];\n            for (int i = 0; i < array.length; i++) {\n                result[i + 1] = result[i] + array[i];\n            }\n            return result;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing ll = long long;\nusing ld = long double;\nusing namespace std;\nconst int MAXN = 300001;\nconst int DV = 100;\nconst int INF = 1000 * 1000 * 1000;\nint a[MAXN];\nint s = 0;\nint ans = INF;\nint lft(int x) { return s - x - x / 10; }\nvoid tr(int x) {\n  ans = min(ans, x + max(0, lft(x)));\n  if (x + (x / 10) < s) return;\n}\nbool py[MAXN];\nint n;\nbool isok() {\n  int cur = 0, cans = 0;\n  for (int i = 0; i < n; i++) {\n    if (py[i]) {\n      cur += a[i] / 10;\n      cans += a[i];\n    } else {\n      cur -= a[i];\n      if (cur < 0) {\n        cans -= cur, cur = 0;\n      }\n    }\n  }\n  ans = min(ans, cans);\n  return false;\n  return true;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cout.setf(ios::fixed);\n  cout.precision(20);\n  scanf(\"%d\", &n);\n  memset(py, 0, sizeof(py));\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", a + i);\n    a[i] /= DV;\n    s += a[i];\n  }\n  int p = 0, cur = 0;\n  while (lft(cur) > 0) {\n    py[p] = true;\n    cur += a[p++];\n  }\n  p--;\n  tr(cur);\n  tr(cur - a[p]);\n  if (a[p] == 20) {\n    int p2 = p;\n    while ((p2 < n) && (a[p2] == 20)) p2++;\n    if (p2 != n) {\n      py[p] = false;\n      py[p2] = true;\n      if (isok()) tr(cur - 10);\n      py[p] = true;\n      py[p2] = false;\n    }\n    p2 = p;\n    while ((p2 >= 0) && a[p2] == 20) p2--;\n    if (p2 != -1) {\n      py[p2] = false;\n      if (isok()) tr(cur - 10);\n    }\n  }\n  cout << ans * 100 << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int N = 3e5 + 5, N2 = 50, inf = 1e18;\nlong long int ary[N];\nlong long int dp[N][N2 + 1];\nlong long int solve(long long int i, long long int b, long long int n) {\n  if (i == n) {\n    return 0;\n  }\n  if (dp[i][b] == -1) {\n    dp[i][b] = inf;\n    if (b + ary[i] / 10 > N2) {\n      dp[i][b] = solve(i + 1, b - ary[i], n);\n    } else {\n      dp[i][b] = ary[i] + solve(i + 1, b + ary[i] / 10, n);\n      if (b >= ary[i])\n        dp[i][b] = min(dp[i][b], solve(i + 1, b - ary[i], n));\n      else\n        dp[i][b] = min(dp[i][b], solve(i + 1, 0, n) + ary[i] - b);\n    }\n  }\n  return dp[i][b];\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int n;\n  cin >> n;\n  for (long long int i = 0; i < n; ++i) {\n    cin >> ary[i];\n    ary[i] /= 100;\n  }\n  memset(dp, -1, sizeof(dp));\n  cout << solve(0, 0, n) * 100 << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300000 + 10;\nconst int INF = 1e9 + 7;\nconst double EPS = 1e-8;\nint n, a[N];\nint dp[N][102];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), a[i] /= 100;\n  for (int i = 0; i <= n; i++)\n    for (int j = 0; j <= 50; j++) dp[i][j] = INF;\n  dp[0][0] = 0;\n  int ret = INF;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j <= 50; j++) {\n      dp[i][j] = INF;\n      if (j >= a[i] / 10)\n        dp[i][j] = min(dp[i - 1][j - a[i] / 10] + a[i], dp[i][j]);\n      for (int k = 1; k <= a[i]; k++)\n        if (j + k <= 50) dp[i][j] = min(dp[i - 1][j + k] + a[i] - k, dp[i][j]);\n      if (i == n) ret = min(ret, dp[i][j]);\n    }\n  }\n  printf(\"%lld\\n\", (long long)ret * 100L);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int N = 1e9 + 7;\nvoid solve() {\n  long long int n;\n  cin >> n;\n  vector<long long int> a(n + 1);\n  for (long long int i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  vector<vector<long long int> > dp(n + 4, vector<long long int>(64, N));\n  dp[0][0] = 0;\n  for (long long int i = 1; i <= n; i++) {\n    for (long long int j = 0; j <= 30; j++) {\n      dp[i][j + a[i] / 1000] = min(dp[i][j + a[i] / 1000], dp[i - 1][j] + a[i]);\n      dp[i][j - min(j, a[i] / 100)] =\n          min(dp[i][j - min(j, a[i] / 100)],\n              dp[i - 1][j] + a[i] - 100 * min(j, a[i] / 100));\n    }\n  }\n  long long int ans = N;\n  for (long long int j = 0; j <= 30; j++) {\n    ans = min(ans, dp[n][j]);\n  }\n  cout << ans << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005;\nint n, m, ans, two, one, l, r, k, a[N], dp[N][31];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  memset(dp, 127, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j <= 30; j++)\n      if (dp[i][j] <= 2e8) {\n        if (j + a[i + 1] / 10 <= 30)\n          dp[i + 1][j + a[i + 1] / 10] =\n              min(dp[i + 1][j + a[i + 1] / 10], dp[i][j] + a[i + 1]);\n        if (j >= a[i + 1])\n          dp[i + 1][j - a[i + 1]] = min(dp[i + 1][j - a[i + 1]], dp[i][j]);\n        else\n          dp[i + 1][0] = min(dp[i + 1][0], dp[i][j] + (a[i + 1] - j));\n      }\n  }\n  int ans = 2e9;\n  for (int i = 0; i <= 30; i++) {\n    ans = min(ans, dp[n][i]);\n  }\n  printf(\"%d00\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[300001], f[300001][55], ans = 2e9;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  memset(f, 60, sizeof f);\n  f[0][0] = 0;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j <= 50; j++) {\n      f[i + 1][j + a[i + 1] / 1000] =\n          min(f[i + 1][j + a[i + 1] / 1000], f[i][j] + a[i + 1]);\n      f[i + 1][j - min(j, a[i + 1] / 100)] =\n          min(f[i + 1][j - min(j, a[i + 1] / 100)],\n              f[i][j] + a[i + 1] - min(j, a[i + 1] / 100) * 100);\n    }\n  for (int j = 0; j <= 50; j++) ans = min(ans, f[n][j]);\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[303030], sum, s[303030];\nbool ok(int k) {\n  int x = k * 10, y = sum - k * 11, ans = x + y;\n  int xx = x, now = 1;\n  while (xx >= a[now]) {\n    xx -= a[now];\n    now++;\n  }\n  if (!xx) return 1;\n  for (int i = now; i <= n; i++)\n    if (a[i] == 10) {\n      if (y + s[now - 1] / 10 >= s[i - 1] - s[now - 1]) return 1;\n      break;\n    }\n  for (int i = now - 1; i >= 1; i--)\n    if (a[i] == 10) {\n      if (y + s[i - 1] / 10 >= 10) return 1;\n    }\n  return 0;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), a[i] /= 100;\n  s[0] = 0;\n  for (int i = 1; i <= n; i++) s[i] = a[i] + s[i - 1];\n  if (n == 1) {\n    printf(\"%d00\\n\", a[1]);\n    return 0;\n  }\n  sum = s[n];\n  int k = sum / 11;\n  if (ok(k)) {\n    printf(\"%d00\\n\", sum - k);\n    return 0;\n  }\n  if (ok(k - 1)) {\n    printf(\"%d00\\n\", sum - k + 1);\n    return 0;\n  }\n  assert(0);\n  printf(\"%d00\\n\", sum - k + 2);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005;\nint n, a[N];\nlong long s[N];\nint pre[3][N];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    s[i] = s[i - 1] + a[i];\n  }\n  for (int i = 1; i <= n; ++i) {\n    pre[1][i] = pre[1][i - 1];\n    pre[2][i] = pre[2][i - 1];\n    pre[a[i] / 1000][i] = i;\n  }\n  long long res = s[n];\n  for (int i = 1; i <= n; ++i) {\n    long long dis = s[i] / 10;\n    res = min(res, s[n] - min(dis, s[n] - s[i]));\n    int x = pre[1][i];\n    if (x) {\n      assert(a[x] == 1000);\n      long long sum = 0;\n      sum += s[x - 1];\n      dis = sum / 10;\n      long long d = min(dis, (long long)a[x]);\n      sum += a[x] - d;\n      dis -= d;\n      sum += s[i] - s[x];\n      dis += (s[i] - s[x]) / 10;\n      res = min(res, sum + s[n] - s[i] - min(dis, s[n] - s[i]));\n      for (int k = 1; k <= 2; ++k) {\n        int y = pre[k][x - 1];\n        if (y) {\n          long long sum = 0;\n          sum += s[y - 1];\n          dis = sum / 10;\n          long long d = min(dis, (long long)a[y]);\n          sum += a[y] - d;\n          dis -= d;\n          sum += s[x - 1] - s[y];\n          dis += (s[x - 1] - s[y]) / 10;\n          d = min(dis, (long long)a[x]);\n          sum += a[x] - d;\n          dis -= d;\n          sum += s[i] - s[x];\n          dis += (s[i] - s[x]) / 10;\n          res = min(res, sum + s[n] - s[i] - min(dis, s[n] - s[i]));\n        }\n      }\n    }\n    x = pre[2][i];\n    if (x) {\n      assert(a[x] == 2000);\n      long long sum = 0;\n      sum += s[x - 1];\n      dis = sum / 10;\n      long long d = min(dis, (long long)a[x]);\n      sum += a[x] - d;\n      dis -= d;\n      sum += s[i] - s[x];\n      dis += (s[i] - s[x]) / 10;\n      res = min(res, sum + s[n] - s[i] - min(dis, s[n] - s[i]));\n      for (int k = 1; k <= 2; ++k) {\n        int y = pre[k][x - 1];\n        if (y) {\n          long long sum = 0;\n          sum += s[y - 1];\n          dis = sum / 10;\n          long long d = min(dis, (long long)a[y]);\n          sum += a[y] - d;\n          dis -= d;\n          sum += s[x - 1] - s[y];\n          dis += (s[x - 1] - s[y]) / 10;\n          d = min(dis, (long long)a[x]);\n          sum += a[x] - d;\n          dis -= d;\n          sum += s[i] - s[x];\n          dis += (s[i] - s[x]) / 10;\n          res = min(res, sum + s[n] - s[i] - min(dis, s[n] - s[i]));\n        }\n      }\n    }\n  }\n  cout << res << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = acos(-1.0);\nconst double eps = 1e-11;\ntemplate <class T>\nT sqr(const T &x) {\n  return x * x;\n}\ntemplate <class T>\nT lowbit(const T &x) {\n  return (x ^ (x - 1)) & x;\n}\ntemplate <class T>\nint countbit(const T &n) {\n  return (n == 0) ? 0 : (1 + countbit(n & (n - 1)));\n}\ntemplate <class T>\nvoid ckmin(T &a, const T &b) {\n  if (b < a) a = b;\n}\ntemplate <class T>\nvoid ckmax(T &a, const T &b) {\n  if (b > a) a = b;\n}\nconst int maxn = (1 << 20);\nint n;\nint a[maxn];\nint sa[maxn];\nint l[maxn], h[maxn];\nint simulate(int l1, int l2) {\n  int s = 0;\n  int src = min(l1, l2);\n  int dst = max(l1, l2);\n  int c = sa[src + 1];\n  for (int i = src + 1; i <= dst;) {\n    int d = a[i];\n    int z = min(dst + 1 - i, l[i]);\n    if (d == 1 && i <= l1 || d == 2 && i <= l2)\n      c += d * z;\n    else {\n      int w = min(c, d * z * 10);\n      c -= w;\n      s += w;\n    }\n    i += z;\n  }\n  s += min((sa[n] - sa[dst + 1]) * 10, c);\n  return sa[n] * 10 - s;\n}\nint solve() {\n  sa[0];\n  for (int i = 0; i < (n); ++i) sa[i + 1] = sa[i] + a[i];\n  for (int i = n - 1; i >= 0; i--)\n    l[i] = ((i + 1 < n && a[i] == a[i + 1]) ? l[i + 1] + 1 : 1);\n  for (int i = 0; i < (n); ++i)\n    h[i] = ((i - 1 >= 0 && a[i] == a[i - 1]) ? h[i - 1] + 1 : 1);\n  int ret = 1000000000;\n  for (int key = -1; key < n; key++)\n    if (key < 0 || a[key] == 1) {\n      set<int> wset;\n      for (int c = max(0, key), step = 0; c < n && step < 5; step++, c += l[c])\n        wset.insert(c);\n      for (int c = min(n - 1, key), step = 0; step < 5; step++, c -= h[c]) {\n        if (c < 0) {\n          int s = simulate(key, -1);\n          ckmin(ret, s);\n          break;\n        }\n        wset.insert(c);\n      }\n      for (int src : wset) {\n        if (a[src] != 2) continue;\n        int low = src - h[src] + 1;\n        int high = src + l[src] - 1;\n        while (high - low > 5) {\n          int m1 = (low * 2 + high) / 3;\n          int m2 = (low + high * 2) / 3;\n          int s1 = simulate(key, m1);\n          int s2 = simulate(key, m2);\n          ckmin(ret, s1);\n          ckmin(ret, s2);\n          if (s1 < s2)\n            high = m2;\n          else\n            low = m1;\n        }\n        for (int other = low; other <= high; other++) {\n          assert(a[other] == 2);\n          int s = simulate(key, other);\n          ckmin(ret, s);\n        }\n      }\n    }\n  return ret;\n}\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  while (cin >> n) {\n    for (int i = 0; i < (n); ++i) {\n      cin >> a[i];\n      a[i] /= 1000;\n    }\n    int ret = solve();\n    cout << (long long)ret * 100 << endl;\n    break;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3e5 + 10;\nconst int inf = 1e9;\nint n;\nint a[maxn];\nint dp[maxn][31];\ninline void upd(int &x, int y) { x = min(x, y); }\nint main() {\n  cin.tie();\n  ios::sync_with_stdio(0);\n  cin >> n;\n  for (int i = 0; i < n; ++i) cin >> a[i], a[i] /= 100;\n  for (int i = 0; i <= n; ++i)\n    for (int j = 0; j <= 30; ++j) dp[i][j] = inf;\n  dp[0][0] = 0;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j <= 30; ++j) {\n      if (dp[i][j] == inf) continue;\n      upd(dp[i + 1][j + a[i] / 10], dp[i][j] + a[i]);\n      int d = min(j, a[i]);\n      upd(dp[i + 1][j - d], dp[i][j] + a[i] - d);\n    }\n  int ans = inf;\n  for (int j = 0; j <= 30; ++j) ans = min(ans, dp[n][j]);\n  cout << ans * 100 << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint g[500000], h[500000], v[500000];\nint i, k, l, n, s, t, t1, t2, t3, d1, d2;\nint main() {\n  t = 1000000000;\n  scanf(\"%d\", &n);\n  for (i = 1; i <= n; i++) {\n    scanf(\"%d\", &g[i]);\n    g[i] = g[i] / 1000;\n  }\n  for (i = 1; i <= n; i++)\n    if (g[i] == 2) t2++;\n  s = s + t2 / 11 * 20000;\n  for (i = 1; i <= n; i++)\n    if ((g[i] != 2) || (t1 < t2 % 11)) {\n      k++, h[k] = g[i];\n      if (g[i] == 2) t1++;\n    }\n  t1 = 0, t2 = 0;\n  for (i = 1; i <= k; i++)\n    if (h[i] == 1)\n      t1++;\n    else\n      t2++;\n  while (t2) {\n    if (h[k] == 2) {\n      if (t1 + 2 * (t2 - 1) >= 20) {\n        t1 = t1 - (20 - 2 * (t2 - 1)), t2 = 0;\n        s = s + 20000;\n        break;\n      } else {\n        s = s + (t1 + 2 * (t2 - 1)) * 900 + 2000;\n        t1 = t2 = 0;\n        break;\n      }\n    } else {\n      d2 = min(t2, 5);\n      d1 = min(t1 - 1, 10 - 2 * d2);\n      s = s + (d1 + 2 * d2) * 900 + 1000;\n      t1 = d1, t2 = t2 - d2;\n      l = 0, d1 = 0, d2 = 0;\n      for (i = 1; i <= k; i++)\n        if (h[i] == 1) {\n          d1++;\n          if (d1 > t1) l++, v[l] = 1;\n        } else {\n          d2++;\n          if (d2 <= t2) l++, v[l] = 2;\n        }\n      k = l - 1;\n      for (i = 1; i <= k; i++) h[i] = v[i];\n      t1 = 0, t2 = 0;\n      for (i = 1; i <= k; i++)\n        if (h[i] == 1)\n          t1++;\n        else\n          t2++;\n      if (t2) t = 0;\n    }\n  }\n  while (t1 >= 11) t1 = t1 - 11, s = s + 10000;\n  if (t1) s = s + (t1 - 1) * 900 + 1000;\n  if (!t) {\n    t1 = 0, t2 = 0;\n    for (i = 1; i <= n; i++)\n      if (g[i] == 2) t2++;\n    t = t + t2 / 11 * 20000;\n    k = 0;\n    for (i = 1; i <= n; i++) {\n      if (g[i] == 2) {\n        t1++;\n        if (t1 == t2) t3 = i - t1;\n      }\n      if ((g[i] != 2) || (t1 + t2 % 11 > t2)) k++, h[k] = g[i];\n    }\n    t1 = 0, t2 = 0;\n    for (i = 1; i <= k; i++)\n      if (h[i] == 1)\n        t1++;\n      else\n        t2++;\n    if (t2) {\n      d2 = t2;\n      d1 = min(20 - 2 * (d2 - 1), t3);\n      t = t + (d1 + 2 * (d2 - 1)) * 900 + 2000;\n      t1 = t1 - d1;\n    }\n    if (t1) {\n      while (t1 >= 11) t1 = t1 - 11, t = t + 10000;\n      if (t1) t = t + (t1 - 1) * 900 + 1000;\n    }\n  }\n  printf(\"%d\", min(s, t));\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T, typename U>\ninline void chkmax(T& x, U y) {\n  if (x < y) x = y;\n}\ntemplate <typename T, typename U>\ninline void chkmin(T& x, U y) {\n  if (y < x) x = y;\n}\nint dp[2][32];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= 31; i++) dp[0][i] = -1e9;\n  int sum = 0;\n  for (int i = 1; i <= n; i++) {\n    int x;\n    scanf(\"%d\", &x);\n    x /= 100;\n    sum += x;\n    int now = i & 1;\n    for (int j = 0; j <= 31; j++) dp[now][j] = -1e9;\n    for (int j = 0; j <= 31 - x / 10; j++)\n      chkmax(dp[now][j + x / 10], dp[!now][j]);\n    for (int j = 0; j <= 31; j++)\n      chkmax(dp[now][max(j - x, 0)], dp[!now][j] + min(j, x));\n    for (int j = 30; j >= 0; j--) chkmax(dp[now][j], dp[now][j + 1]);\n  }\n  int ans = 0;\n  for (int j = 0; j <= 31; j++) chkmax(ans, dp[n & 1][j]);\n  cout << (sum - ans) * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class P, class Q>\ninline void smin(P &a, Q b) {\n  if (b < a) a = b;\n}\ntemplate <class P, class Q>\ninline void smax(P &a, Q b) {\n  if (a < b) a = b;\n}\nconst int maxn = 300000 + 100;\nint n;\nint a[maxn], sum;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 0, i__n = (int)(n); i < i__n; ++i) cin >> a[i], sum += a[i];\n  int f = sum / 11 / 100;\n  if (sum - a[n - 1] < f * 1000) f--;\n  cout << sum - f * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[303030], sum, s[303030];\nbool ok(int k) {\n  int x = k * 10, y = sum - k * 11, ans = x + y;\n  int xx = x, now = 1;\n  while (xx >= a[now]) {\n    xx -= a[now];\n    now++;\n  }\n  if (!xx) return 1;\n  for (int i = now; i <= n; i++)\n    if (a[i] == 10) {\n      if (y + s[now - 1] / 10 >= s[i - 1] - s[now - 1]) return 1;\n      break;\n    }\n  for (int i = now - 1; i >= 1; i--)\n    if (a[i] == 10) {\n      if (y + s[i - 1] / 10 >= 10) return 1;\n    }\n  return 0;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), a[i] /= 100;\n  s[0] = 0;\n  for (int i = 1; i <= n; i++) s[i] = a[i] + s[i - 1];\n  if (n == 1) {\n    printf(\"%d00\\n\", a[1]);\n    return 0;\n  }\n  sum = s[n];\n  int k = sum / 11;\n  if (ok(k)) {\n    printf(\"%d00\\n\", sum - k);\n    return 0;\n  }\n  printf(\"%d00\\n\", sum - k + 1);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T& x) {\n  x = 0;\n  char c = getchar();\n  while (c < '0' || c > '9') c = getchar();\n  while (c >= '0' && c <= '9') {\n    x *= 10;\n    x += c - '0';\n    c = getchar();\n  }\n}\ninline void reads(string& s) {\n  char c = getchar();\n  while (c < 'a' || c > 'z') c = getchar();\n  while (c >= 'a' && c <= 'z') {\n    s += c;\n    c = getchar();\n  }\n}\nconst string YES = \"YES\";\nconst string NO = \"NO\";\nconst int MAGIC = 100;\nvoid up(int& x, int y) {\n  if (y == -1) return;\n  if (x == -1) x = y;\n  x = min(x, y);\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  int dp[MAGIC];\n  int cur[MAGIC];\n  for (int i = 0; i < MAGIC; i++) dp[i] = -1;\n  dp[0] = 0;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    for (int j = 0; j < MAGIC; j++) cur[j] = -1;\n    for (int j = 0; j < MAGIC; j++) {\n      if (dp[j] == -1) continue;\n      up(cur[max(0, j - x / 100)],\n         (x / 100 - (j - max(0, j - x / 100))) * 100 + dp[j]);\n      if (j + x / 1000 < MAGIC) up(cur[j + x / 1000], dp[j] + x);\n    }\n    for (int j = 0; j < MAGIC; j++) dp[j] = cur[j];\n  }\n  int ans = -1;\n  for (int i = 0; i < MAGIC; i++) up(ans, dp[i]);\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = atan(1) * 4;\nconst long long oo = 1000000000;\nconst int N = 300010;\nint n, a[N], mx = 0;\nbool take[N];\nbool tr() {\n  long long bonus = 0;\n  for (int i = 0; i < n; ++i) {\n    if (take[i]) {\n      bonus += a[i] / 10;\n    } else {\n      bonus -= min(bonus, (long long)a[i]);\n    }\n  }\n  return bonus == 0;\n}\nbool check(int mid) {\n  memset(take, 0, sizeof take);\n  int rem = mx - mid, last = -1, nxt = -1;\n  bool bf = true;\n  for (int i = 0; i < n; ++i) {\n    if (!rem) break;\n    if (rem == 1 && a[i] == 2000 && bf) {\n      bf = 0;\n      for (int j = i; j < n; j++) {\n        if (a[j] == 1000) {\n          nxt = j;\n          break;\n        }\n      }\n      if (last != -1 && nxt != -1 && bf) {\n        take[last] = take[nxt] = 1;\n        if (tr()) return true;\n      }\n      if (last != -1) {\n        take[last] = take[nxt] = 0;\n        take[i] = 1;\n        if (tr()) return true;\n      }\n    }\n    if (a[i] == 1000) last = i;\n    if (rem >= a[i] / 1000) {\n      take[i] = 1;\n      rem -= a[i] / 1000;\n    }\n  }\n  return tr();\n}\nint main() {\n  scanf(\"%d\", &n);\n  bool fn = true;\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n    if (a[i] == 1000) fn = 0;\n    mx += (a[i] / 100);\n  }\n  int best = 1e9;\n  for (int o2 = 1 + fn; o2 <= 2; o2++) {\n    int lo = 0, hi = mx / o2;\n    while (lo <= hi) {\n      int md = (lo + hi) / 2;\n      if (check(md * o2)) {\n        best = min(best, md * o2 * 100);\n        hi = md - 1;\n      } else {\n        lo = md + 1;\n      }\n    }\n  }\n  cout << best << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 300050;\nconst int M = 35;\nconst int inf = 1e9 + 7;\nint dp[N][M], a[N];\nint min(int a, int b) { return a > b ? b : a; }\nint main() {\n  int n, i, j, k;\n  scanf(\"%i\", &n);\n  for (i = 0; i <= n; i++)\n    for (j = 0; j < M; j++) dp[i][j] = inf;\n  dp[0][0] = 0;\n  for (i = 1; i <= n; i++) {\n    scanf(\"%i\", &a[i]);\n    a[i] /= 100;\n    for (j = 0; j < M; j++) {\n      if (j + a[i] / 10 < M)\n        dp[i][j + a[i] / 10] = min(dp[i][j + a[i] / 10], dp[i - 1][j] + a[i]);\n      int l = min(a[i], j);\n      for (k = 1; k <= l; k++) {\n        dp[i][j - k] = min(dp[i][j - k], dp[i - 1][j] + a[i] - k);\n      }\n    }\n  }\n  int ans = inf;\n  for (i = 0; i < M; i++) ans = min(ans, dp[n][i]);\n  printf(\"%i\\n\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline void chmin(int &x, int v) {\n  if (v < x) x = v;\n}\nconst int M = 40;\nint N;\nint A[300000];\nint dp[300001][M + 1];\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> N;\n  for (int i = 0; i < (N); i++) {\n    cin >> A[i];\n    A[i] /= 100;\n  }\n  for (int i = 0; i < (N + 1); i++)\n    for (int j = 0; j < (M + 1); j++) dp[i][j] = 1145141919;\n  dp[0][0] = 0;\n  for (int i = 0; i < (N); i++) {\n    for (int j = 0; j < (M + 1); j++) {\n      if (dp[i][j] == 1145141919) continue;\n      if (j + A[i] / 10 <= M) {\n        chmin(dp[i + 1][j + A[i] / 10], dp[i][j] + A[i]);\n      }\n      int diff = min(j, A[i]);\n      chmin(dp[i + 1][j - diff], dp[i][j] + A[i] - diff);\n    }\n  }\n  int m = 1145141919;\n  for (int i = 0; i < (M + 1); i++) m = min(m, dp[N][i]);\n  cout << m * 100 << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-8;\nconst int INF = (1 << 30) - 1;\nint n;\nint A[300010];\nint dp[300010][41];\nvoid Update(int &A, int B) {\n  if (A == -1)\n    A = B;\n  else if (A > B)\n    A = B;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &A[i]);\n  }\n  memset(dp, -1, sizeof(dp));\n  dp[1][A[1] / 1000] = A[1];\n  for (int i = 2; i <= n; ++i) {\n    for (int j = 0; j < 41; ++j)\n      if (dp[i - 1][j] != -1) {\n        if (j) {\n          int t = j * 100;\n          if (A[i] < t) t = A[i];\n          Update(dp[i][j - t / 100], dp[i - 1][j] + A[i] - t);\n        }\n        if (j + A[i] / 1000 < 41) {\n          Update(dp[i][j + A[i] / 1000], dp[i - 1][j] + A[i]);\n        }\n      }\n  }\n  int ans = -1;\n  for (int i = 0; i < 41; ++i)\n    if (dp[n][i] != -1) {\n      Update(ans, dp[n][i]);\n    }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst ll N = 3e5 + 10;\nconst ll INF = 1e18;\nvoid umax(ll &a, ll b) { a = max(a, b); }\nll n;\nll a[N];\nll dp[N][41];\nsigned main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  cin >> n;\n  for (ll i = 0; i < n; ++i) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n  fill_n(dp[0], 41 * N, -INF);\n  dp[0][0] = 0;\n  for (ll i = 0; i < n; ++i) {\n    for (ll j = 0; j <= 30; ++j) {\n      umax(dp[i + 1][j + a[i] / 10], dp[i][j]);\n      ll w = min(j, a[i]);\n      umax(dp[i + 1][j - w], dp[i][j] + w);\n    }\n  }\n  ll bonus = *max_element(dp[n], dp[n] + 31);\n  cout << 100 * (accumulate(a, a + n, 0LL) - bonus) << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 1;\nint a[N];\nint one;\nint two;\nint n;\nint calc(int cnt1, int cnt2) {\n  int res = 0;\n  int credit = 0;\n  for (int i = 0; i < n; ++i) {\n    if ((a[i] == 1000 && cnt1 > 0) || (a[i] == 2000 && cnt2 > 0)) {\n      credit += a[i] / 10;\n      res += a[i];\n      if (a[i] == 1000) {\n        --cnt1;\n      } else {\n        --cnt2;\n      }\n    } else {\n      res += max(0, a[i] - credit);\n      credit = max(0, credit - a[i]);\n    }\n  }\n  return res;\n}\nint get(int k) {\n  int lo = 0;\n  int hi = two - 1;\n  while (lo <= hi) {\n    int mid = (lo + hi) / 2;\n    if (calc(k, mid) >= calc(k, mid + 1)) {\n      lo = mid + 1;\n    } else {\n      hi = mid - 1;\n    }\n  }\n  return calc(k, lo);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    if (a[i] == 1000) {\n      ++one;\n    } else {\n      ++two;\n    }\n  }\n  int lo = 0;\n  int hi = one - 1;\n  while (lo <= hi) {\n    int mid = (lo + hi) / 2;\n    if (get(mid) >= get(mid + 1)) {\n      lo = mid + 1;\n    } else {\n      hi = mid - 1;\n    }\n  }\n  cout << get(lo) << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T, typename U>\ninline void smin(T &a, U b) {\n  if (a > b) a = b;\n}\ntemplate <typename T, typename U>\ninline void smax(T &a, U b) {\n  if (a < b) a = b;\n}\ntemplate <typename T>\ninline void gn(T &first) {\n  char c, sg = 0;\n  while (c = getchar(), (c > '9' || c < '0') && c != '-')\n    ;\n  for ((c == '-' ? sg = 1, c = getchar() : 0), first = 0; c >= '0' && c <= '9';\n       c = getchar())\n    first = (first << 1) + (first << 3) + c - '0';\n  if (sg) first = -first;\n}\ntemplate <class T, class T1>\ninline void gn(T &first, T1 &second) {\n  gn(first);\n  gn(second);\n}\ntemplate <class T, class T1, class T2>\ninline void gn(T &first, T1 &second, T2 &z) {\n  gn(first);\n  gn(second);\n  gn(z);\n}\ntemplate <typename T>\ninline void print(T first) {\n  if (first < 0) {\n    putchar('-');\n    return print(-first);\n  }\n  if (first < 10) {\n    putchar('0' + first);\n    return;\n  }\n  print(first / 10);\n  putchar(first % 10 + '0');\n}\ntemplate <typename T>\ninline void println(T first) {\n  print(first), putchar('\\n');\n}\ntemplate <typename T>\ninline void printsp(T first) {\n  print(first), putchar(' ');\n}\ntemplate <class T, class T1>\ninline void print(T first, T1 second) {\n  printsp(first), println(second);\n}\ntemplate <class T, class T1, class T2>\ninline void print(T first, T1 second, T2 z) {\n  printsp(first), printsp(second), println(z);\n}\nint power(int a, int b, int m, int ans = 1) {\n  for (; b; b >>= 1, a = 1LL * a * a % m)\n    if (b & 1) ans = 1LL * ans * a % m;\n  return ans;\n}\nint a[300300];\nint dp[300300][50];\nint sum[300300];\nint main() {\n  int n;\n  gn(n);\n  for (int i = 1; i <= n; i++) gn(a[i]), sum[i] = sum[i - 1] + a[i];\n  memset(dp, 0x3f, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j < 50; j++) {\n      if (a[i] == 1000) smin(dp[i][j], dp[i - 1][j - 1] + a[i]);\n      if (a[i] == 2000 && j > 1) smin(dp[i][j], dp[i - 1][j - 2] + a[i]);\n    }\n    for (int j = 1; j < 50; j++) {\n      for (int k = min(j, a[i] / 100); k >= 0; k--) {\n        smin(dp[i][j - k], dp[i - 1][j] + a[i] - 100 * k);\n      }\n    }\n  }\n  int ans = 0x3f3f3f3f;\n  for (int i = 0; i < 25; i++) smin(ans, dp[n][i]);\n  for (int i = 1; i <= n; i++) {\n    smin(ans, sum[n] - min(sum[i], sum[n] - sum[i]) / 10);\n  }\n  println(ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n), la1(n, -1), la2(n, -1);\n  vector<long long> pre(n, 0);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    pre[i] = a[i];\n    if (i) pre[i] += pre[i - 1];\n    if (i) {\n      if (a[i - 1] == 1000) {\n        la1[i] = i - 1;\n        la2[i] = la2[i - 1];\n      } else {\n        la2[i] = i - 1;\n        la1[i] = la1[i - 1];\n      }\n    }\n  }\n  long long ans = pre[n - 1];\n  for (int i = 0; i < n; i++) {\n    long long rem = pre[n - 1] - pre[i];\n    ans = min(ans, pre[i] + max(rem - pre[i] / 10, 0ll));\n    if (a[i] == 1000) {\n      int lax = la1[i];\n      for (int la = lax; la < i; la++) {\n        int mid = i - la - 1;\n        long long pay = ((la >= 0) ? pre[la] : 0);\n        long long crem = 1ll * 2000 * mid;\n        long long bal = max(0ll, pay / 10 - crem);\n        pay += max(0ll, crem - pay / 10);\n        pay += 1000;\n        bal += 100;\n        ans = min(ans, pay + max(rem - bal, 0ll));\n      }\n    } else {\n      int la = la1[i];\n      la--;\n      long long pay = ((la >= 0) ? pre[la] : 0);\n      long long crem = 1000;\n      long long bal = max(0ll, pay / 10 - crem);\n      pay += max(0ll, crem - pay / 10);\n      long long rmid = pre[i] - ((la + 1 >= 0) ? pre[la + 1] : 0);\n      pay += rmid;\n      bal += rmid / 10;\n      ans = min(ans, pay + max(rem - bal, 0ll));\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dp[300005][35], n;\nint ara[600005];\nlong long dp_func(int pos, int ase) {\n  if (pos > n) return 0;\n  if (dp[pos][ase] != -1) return dp[pos][ase];\n  long long ret = 21474836499999;\n  for (int i = 1; i <= ase && (ara[pos] >= i * 100); i++) {\n    ret = min(ret, dp_func(pos + 1, ase - i) + (ara[pos]) - (i * 100));\n  }\n  if (ase < 29) {\n    ret = min(ret, dp_func(pos + 1, ase + (ara[pos] / 1000)) + ara[pos]);\n  }\n  return dp[pos][ase] = ret;\n}\nint main() {\n  int i, j, k, l, m;\n  memset(dp, -1, sizeof dp);\n  scanf(\"%d\", &m);\n  for (i = 1; i <= m; i++) {\n    scanf(\"%d\", &l);\n    if (l == 1000)\n      ara[++n] = l;\n    else {\n      ara[++n] = 2000;\n    }\n  }\n  long long ret = dp_func(1, 0);\n  cout << ret << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3e5 + 10;\nlong long dp[maxn][50];\nint a[maxn];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  memset(dp, 63, sizeof dp);\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < 50; j++) {\n      if (dp[i][j] > 1e18) continue;\n      if (a[i] / 1000 + j < 50)\n        dp[i + 1][j + a[i] / 1000] =\n            min(dp[i + 1][j + a[i] / 1000], dp[i][j] + a[i]);\n      long long mini = min(j * 100, a[i]);\n      dp[i + 1][j - mini / 100] =\n          min(dp[i + 1][j - mini / 100], dp[i][j] + a[i] - mini);\n    }\n  }\n  long long ans = 1e18;\n  for (int i = 0; i < 50; i++) ans = min(ans, dp[n][i]);\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline long long mod(long long n, long long m) {\n  long long ret = n % m;\n  if (ret < 0) ret += m;\n  return ret;\n}\nlong long gcd(long long a, long long b) {\n  return (b == 0LL ? a : gcd(b, a % b));\n}\nlong long exp(long long a, long long b, long long m) {\n  if (b == 0LL) return 1LL;\n  if (b == 1LL) return mod(a, m);\n  long long k = mod(exp(a, b / 2, m), m);\n  if (b & 1LL) {\n    return mod(a * mod(k * k, m), m);\n  } else\n    return mod(k * k, m);\n}\nint n;\nconst int N = 300100, MX = 100, inf = 1e9;\nint a[N];\nint dp[N][MX + 10];\nint solve(int id, int j) {\n  if (id > n) return 0;\n  int& x = dp[id][j];\n  if (x != -1) return x;\n  if (j >= MX) {\n    return x = solve(id + 1, j - a[id]);\n  }\n  x = inf;\n  if (j > 0) {\n    int put = min(j, a[id]);\n    x = solve(id + 1, j - put) + a[id] - put;\n  }\n  return x = min(x, solve(id + 1, j + a[id] / 10) + a[id]);\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  memset(dp, -1, sizeof(dp));\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n  cout << 100LL * solve(1, 0) << \"\\n\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class p853D \n{\n\tstatic final int INF = (int)1e9;\n\tpublic static void main(String[] args) throws IOException \n\t{\n\t\tBufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\tStringTokenizer st;\n\t\tint size = Integer.parseInt(f.readLine());\n\t\tif(size == 1)\n\t\t{\n\t\t\tout.println(f.readLine());\n\t\t\tout.close();\n\t\t\treturn;\n\t\t}\n\t\tst = new StringTokenizer(f.readLine());\n\t\tint[] a = new int[size];\n\t\tfor(int i = 0; i < size; i++)\n\t\t\ta[i] = Integer.parseInt(st.nextToken()) / 100;\n\t\tint[][] dp = new int[a.length + 1][31];\n\t\tfor(int[] temp : dp)\n\t\t\tArrays.fill(temp, INF);\n\t\tdp[0][0] = 0;\n\t\tfor(int r = 1; r <= size; r++)\n\t\t{\n\t\t\tfor(int c = 0; c <= 30; c++)\n\t\t\t{\n\t\t\t\tint bonus = a[r - 1] / 10;\n\t\t\t\tif(c >= bonus)\n\t\t\t\t\tdp[r][c] = Math.min(dp[r][c], dp[r - 1][c - bonus] + a[r - 1]);\n\t\t\t\tfor(int k = 1; k <= Math.min(a[r - 1], 30 - c); k++)\n\t\t\t\t\tdp[r][c] = Math.min(dp[r][c], dp[r - 1][c + k] + a[r - 1] - k);\n\t\t\t}\n\t\t}\n//\t\tfor(int[] temp : dp)\n//\t\t\tSystem.out.println(Arrays.toString(temp));\n\t\tout.println(dp[size][0] * 100);\n\t\tout.close();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst int MAXN = 312345;\nconst int INF = 0x3f3f3f3f;\nint n;\nint a[MAXN];\nint psum[MAXN];\nint rsum(int p, int q) {\n  if (q < p) return 0;\n  return psum[q + 1] - psum[p];\n}\nint sub(int p1, int b1, int p2, int b2) {\n  int cost = p1;\n  int bonus = p1 / 10;\n  int y = min(bonus, b1);\n  bonus -= y;\n  cost += b1 - y;\n  cost += p2;\n  bonus += p2 / 10;\n  y = min(bonus, b2);\n  cost += b2 - y;\n  return cost;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    psum[i + 1] = psum[i] + a[i];\n  }\n  int sol = INF;\n  int last = -1;\n  int next = -1;\n  for (int i = 0; i < n; i++) {\n    if (a[i] == 1000) {\n      last = i;\n    }\n    next = max(next, i);\n    while (next < n and a[next] != 1000) next++;\n    sol = min(sol, sub(rsum(0, i), rsum(i + 1, n - 1), 0, 0));\n    if (last != -1) {\n      sol = min(sol, sub(rsum(0, last - 1), a[last], rsum(last + 1, i),\n                         rsum(i + 1, n - 1)));\n    }\n    if (next < n) {\n      sol = min(sol, sub(rsum(0, i), rsum(i + 1, next - 1), a[next],\n                         rsum(next + 1, n - 1)));\n    }\n  }\n  cout << sol << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3e5 + 10, Max = 50, inf = 1e8;\nint dp[maxn][Max], a[maxn];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 1; i < Max; i++) {\n    dp[0][i] = inf;\n  }\n  for (int i = 1; i <= n; i++) {\n    int x;\n    cin >> x;\n    int x1 = x / 100, x2 = x1 / 10;\n    for (int j = 0; j < Max; j++) {\n      int A = inf, B = inf;\n      if (j >= x2) A = dp[i - 1][j - x2] + x1;\n      if (j + x1 < Max) B = dp[i - 1][j + x1];\n      dp[i][j] = min(A, B);\n    }\n    for (int j = 1; j < x1; j++) {\n      dp[i][0] = min(dp[i][0], dp[i - 1][j] + x1 - j);\n    }\n  }\n  int ans = inf;\n  for (int i = 0; i < Max; i++) {\n    ans = min(ans, dp[n][i]);\n  }\n  return cout << ans * 100 << endl, 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dp[300005][35], a[300005];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  for (int i = 0; i <= n; i++)\n    for (int j = 0; j <= 30; j++) dp[i][j] = 1000000000;\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j <= 30; j++) {\n      dp[i + 1][j + a[i + 1] / 10] =\n          min(dp[i + 1][j + a[i + 1] / 10], dp[i][j] + a[i + 1]);\n      dp[i + 1][j - min(j, a[i + 1])] =\n          min(dp[i + 1][j - min(j, a[i + 1])],\n              dp[i][j] + a[i + 1] - min(j, a[i + 1]));\n    }\n  }\n  int maxx = 1000000000;\n  for (int i = 0; i <= 30; i++) maxx = min(maxx, dp[n][i]);\n  printf(\"%d00\\n\", maxx);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300005];\nint dp[300005][35];\nint main() {\n  ios::sync_with_stdio(false);\n  int n, cur = 0, ans = 0x3f3f3f3f;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 0; i <= n; i++) {\n    for (int j = 0; j <= 30; j++) {\n      dp[i][j] = 0x3f3f3f3f;\n    }\n  }\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j <= 30; j++) {\n      for (int rem = min(30, j + a[i] / 100); rem > j; rem--) {\n        dp[i][j] = min(dp[i][j], a[i] - (rem - j) * 100 + dp[i - 1][rem]);\n      }\n      if (j >= a[i] / 1000) {\n        dp[i][j] = min(dp[i][j], a[i] + dp[i - 1][j - a[i] / 1000]);\n      }\n    }\n  }\n  for (int i = 0; i <= 30; i++) {\n    ans = min(ans, dp[n][i]);\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dp[300010][41];\nint main() {\n  int N, A[300010];\n  scanf(\"%d\", &N);\n  for (int i = 0; i < N; i++) {\n    scanf(\"%d\", A + i);\n  }\n  for (int i = 0; i <= N; i++)\n    for (int j = 0; j <= 40; j++) dp[i][j] = 2000000000000000000LL;\n  dp[0][0] = 0;\n  for (int i = 0; i < N; i++) {\n    for (int j = 0; j <= 40; j++) {\n      int nextj = min(40, j + A[i] / 1000);\n      dp[i + 1][nextj] = min(dp[i + 1][nextj], dp[i][j] + A[i]);\n      for (int k = 1; k <= min(j, A[i] / 100); k++) {\n        dp[i + 1][j - k] = min(dp[i + 1][j - k], dp[i][j] + A[i] - k * 100);\n      }\n    }\n  }\n  long long ans = 2000000000000000000LL;\n  for (int i = 0; i <= 40; i++) {\n    ans = min(ans, dp[N][i]);\n  }\n  printf(\"%lld\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXD = 50;\nint n, a[300005];\nlong long f[300005][MAXD + 5];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; ++i) a[i] /= 100;\n  for (int i = 0; i <= n; ++i)\n    for (int j = 0; j <= MAXD; ++j) f[i][j] = 1e18;\n  f[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 0; j <= MAXD; ++j) {\n      if (f[i - 1][j] == 1e18) continue;\n      if (j >= a[i])\n        f[i][j - a[i]] = min(f[i][j - a[i]], f[i - 1][j]);\n      else\n        f[i][0] = min(f[i][0], f[i - 1][j] + (a[i] - j) * 100);\n      f[i][min(j + a[i] / 10, MAXD)] =\n          min(f[i][min(j + a[i] / 10, MAXD)], f[i - 1][j] + a[i] * 100);\n    }\n  }\n  long long ans = 1e18;\n  for (int i = 0; i <= MAXD; ++i) ans = min(ans, f[n][i]);\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            int[] arr = in.readIntArray(n);\n            int MAXG = 100;\n            int[][] dp = new int[2][MAXG];\n            for (int i = n - 1; i >= 0; i--) {\n                int cur = (i % 2), nxt = 1 - cur;\n                Arrays.fill(dp[cur], 1 << 30);\n                for (int curbonus = 0; curbonus < MAXG; curbonus++) {\n                    // don't use bonus\n                    int bonusgain = arr[i] / 1000;\n                    if (curbonus + bonusgain < MAXG)\n                        dp[cur][curbonus] = dp[nxt][curbonus + bonusgain] + arr[i];\n                    // use bonus, use as much as possible\n                    int bonususe = Math.min(arr[i], curbonus * 100) / 100;\n                    dp[cur][curbonus] = Math.min(dp[cur][curbonus], arr[i] - bonususe * 100 + dp[nxt][curbonus - bonususe]);\n                }\n            }\n\n            out.println(dp[0][0]);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int[] readIntArray(int tokens) {\n            int[] ret = new int[tokens];\n            for (int i = 0; i < tokens; i++) {\n                ret[i] = nextInt();\n            }\n            return ret;\n        }\n\n        public int read() {\n            if (this.numChars == -1) {\n                throw new InputMismatchException();\n            } else {\n                if (this.curChar >= this.numChars) {\n                    this.curChar = 0;\n\n                    try {\n                        this.numChars = this.stream.read(this.buf);\n                    } catch (IOException var2) {\n                        throw new InputMismatchException();\n                    }\n\n                    if (this.numChars <= 0) {\n                        return -1;\n                    }\n                }\n\n                return this.buf[this.curChar++];\n            }\n        }\n\n        public int nextInt() {\n            int c;\n            for (c = this.read(); isSpaceChar(c); c = this.read()) {\n                ;\n            }\n\n            byte sgn = 1;\n            if (c == 45) {\n                sgn = -1;\n                c = this.read();\n            }\n\n            int res = 0;\n\n            while (c >= 48 && c <= 57) {\n                res *= 10;\n                res += c - 48;\n                c = this.read();\n                if (isSpaceChar(c)) {\n                    return res * sgn;\n                }\n            }\n\n            throw new InputMismatchException();\n        }\n\n        public static boolean isSpaceChar(int c) {\n            return c == 32 || c == 10 || c == 13 || c == 9 || c == -1;\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void println(int i) {\n            writer.println(i);\n        }\n\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int max_n = 300033, max_m = 40, inf = 1011111111;\nint n, a[max_n], dp[2][max_m];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  int q1 = 0, q2 = 1;\n  for (int j = 0; j < max_m; ++j) {\n    dp[q1][j] = inf;\n  }\n  dp[q1][0] = 0;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < max_m; ++j) {\n      dp[q2][j] = inf;\n    }\n    for (int j = 0; j < max_m; ++j) {\n      if (dp[q1][j] == inf) {\n        continue;\n      }\n      if (j + a[i] / 10 < max_m) {\n        dp[q2][j + a[i] / 10] = min(dp[q2][j + a[i] / 10], dp[q1][j] + a[i]);\n      }\n      int y = min(j, a[i]);\n      dp[q2][j - y] = min(dp[q2][j - y], dp[q1][j] + a[i] - y);\n    }\n    swap(q1, q2);\n  }\n  int ans = inf;\n  for (int i = 0; i < max_m; ++i) {\n    ans = min(ans, dp[q1][i]);\n  }\n  printf(\"%d\\n\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, sum, counter, a[300010];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    sum += a[i];\n    if (a[i] == 2000) counter++;\n  }\n  int temp = sum * 1 / 11;\n  temp -= (temp % 100);\n  if (sum <= 11000) temp = (sum - a[n]) / 10;\n  if (counter == n) temp -= (temp % 200);\n  cout << sum - temp << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint num[300003], dp[2][45];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; ++i) {\n    cin >> num[i];\n    num[i] /= 100;\n  }\n  int now = 0;\n  memset(dp, 0x3f, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    int a = num[i] / 10;\n    for (int j = 0; j <= 40; j++) {\n      if (dp[now][j] < dp[0][41]) {\n        if (j + a <= 40) {\n          dp[now ^ 1][j + a] = min(dp[now ^ 1][j + a], dp[now][j] + num[i]);\n        }\n        int b = min(j, num[i]);\n        if (b) {\n          dp[now ^ 1][j - b] = min(dp[now ^ 1][j - b], dp[now][j] + num[i] - b);\n        }\n        dp[now][j] = dp[0][41];\n      }\n    }\n    now ^= 1;\n  }\n  int ans = dp[0][41];\n  for (int i = 0; i <= 40; i++) {\n    ans = min(ans, dp[now][i]);\n  }\n  cout << ans << \"00\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "// practice with rainboy\nimport java.io.*;\nimport java.util.*;\n\npublic class CF853D extends PrintWriter {\n\tCF853D() { super(System.out, true); }\n\tScanner sc = new Scanner(System.in);\n\tpublic static void main(String[] $) {\n\t\tCF853D o = new CF853D(); o.main(); o.flush();\n\t}\n\n\tvoid main() {\n\t\tint n = sc.nextInt();\n\t\tint[] aa = new int[n];\n\t\tint[] pp = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tpp[i] = aa[i] = sc.nextInt();\n\t\tfor (int i = 1; i < n; i++)\n\t\t\tpp[i] += pp[i - 1];\n\t\tint[] ip = new int[n];\n\t\tint[] iq = new int[n];\n\t\tfor (int i = 0, i_ = -1; i < n; i++) {\n\t\t\tif (aa[i] == 1000)\n\t\t\t\ti_ = i;\n\t\t\tip[i] = i_;\n\t\t}\n\t\tfor (int i = n - 1, i_ = n; i >= 0; i--) {\n\t\t\tif (aa[i] == 1000)\n\t\t\t\ti_ = i;\n\t\t\tiq[i] = i_;\n\t\t}\n\t\tint ans = n * 2000;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint a, b, x, y;\n\t\t\tx = pp[i];\n\t\t\ta = x;\n\t\t\tb = x / 10;\n\t\t\tx = pp[n - 1] - pp[i]; y = Math.min(x, b);\n\t\t\ta += x - y;\n\t\t\tb -= y;\n\t\t\tans = Math.min(ans, a);\n\t\t\tif (aa[i] == 2000) {\n\t\t\t\tint i_ = ip[i];\n\t\t\t\tif (i_ != -1) {\n\t\t\t\t\tx = i_ == 0 ? 0 : pp[i_ - 1];\n\t\t\t\t\ta = x;\n\t\t\t\t\tb = x / 10;\n\t\t\t\t\tx = aa[i_]; y = Math.min(x, b);\n\t\t\t\t\ta += x - y;\n\t\t\t\t\tb -= y;\n\t\t\t\t\tx = pp[i] - pp[i_];\n\t\t\t\t\ta += x;\n\t\t\t\t\tb += x / 10;\n\t\t\t\t\tx = pp[n - 1] - pp[i]; y = Math.min(x, b);\n\t\t\t\t\ta += x - y;\n\t\t\t\t\tb -= y;\n\t\t\t\t\tans = Math.min(ans, a);\n\t\t\t\t}\n\t\t\t\ti_ = iq[i];\n\t\t\t\tif (i_ != n) {\n\t\t\t\t\tx = pp[i];\n\t\t\t\t\ta = x;\n\t\t\t\t\tb = x / 10;\n\t\t\t\t\tx = pp[i_ - 1] - pp[i]; y = Math.min(x, b);\n\t\t\t\t\ta += x - y;\n\t\t\t\t\tb -= y;\n\t\t\t\t\tx = aa[i_];\n\t\t\t\t\ta += x;\n\t\t\t\t\tb += x / 10;\n\t\t\t\t\tx = pp[n - 1] - pp[i_]; y = Math.min(x, b);\n\t\t\t\t\ta += x - y;\n\t\t\t\t\tb -= y;\n\t\t\t\t\tans = Math.min(ans, a);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintln(ans);\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid addmod(int &a, long long b) {\n  a = (a + b);\n  if (a >= 1000000007) a -= 1000000007;\n}\nvoid mulmod(int &a, long long b) { a = (a * b) % 1000000007; }\ntemplate <class T>\nbool domin(T &a, const T &b) {\n  return a > b ? a = b, 1 : 0;\n}\ntemplate <class T>\nbool domax(T &a, const T &b) {\n  return a < b ? a = b, 1 : 0;\n}\nint gi() {\n  int a;\n  scanf(\"%d\", &a);\n  return a;\n}\nlong long gll() {\n  long long a;\n  scanf(\"%lld\", &a);\n  return a;\n}\nint ans[2][2507];\nint main() {\n  int v = 1000000007;\n  fill_n(ans[0], 2507, v);\n  fill_n(ans[1], 2507, v);\n  ans[0][0] = 0;\n  int n = gi(), ix, nx;\n  for (int i = 0; i < n; i++) {\n    int x = gi() / 100;\n    int bo = x / 10;\n    ix = (i & 1);\n    nx = ix ^ 1;\n    fill_n(ans[nx], 2507, v);\n    for (int j = 0; j < 2500; j++)\n      if (ans[ix][j] < 1000000007) {\n        if (j < x) {\n          domin(ans[nx][j + bo], ans[ix][j] + x);\n          domin(ans[nx][0], ans[ix][j] + x - j);\n        } else if (j < 2000) {\n          domin(ans[nx][j - x], ans[ix][j]);\n          domin(ans[nx][j + bo], ans[ix][j] + x);\n        } else {\n          domin(ans[nx][j - x], ans[ix][j]);\n        }\n      }\n  }\n  int fa = 1000000007;\n  for (int i = 0; i < 2500; i++) {\n    domin(fa, ans[nx][i]);\n  }\n  cout << fa * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1000000001;\nconst long double EPS = 1e-9;\nconst int MOD = 1000000007;\nconst long long LLINF = 1000000000000000001;\nconst int maxn = 400000;\nconst int maxb = 40;\nlong long dp[maxn][maxb];\nlong long v[maxn];\nint n;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> v[i];\n  for (int i = 0; i <= maxb - 1; i++)\n    dp[n][i] = max((long long)0, v[n] - i * 100);\n  for (int i = n - 1; i >= 1; i--)\n    for (int j = 0; j <= maxb - 1; j++) {\n      dp[i][j] = dp[i + 1][j - min(v[i] / 100, (long long)j)] + v[i] -\n                 min(v[i] / 100, (long long)j) * 100;\n      if (j + v[i] / 1000 < maxb)\n        dp[i][j] = min(dp[i][j], dp[i + 1][j + v[i] / 1000] + v[i]);\n    }\n  cout << dp[1][0] << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dp[300100][42];\nint a[300100], n;\nvoid make(int &x, int y) {\n  if (x == -1)\n    x = y;\n  else\n    x = min(x, y);\n}\nint main() {\n  memset(dp, -1, sizeof(dp));\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n  dp[0][0] = 0;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j <= 40; ++j) {\n      if (dp[i][j] == -1) continue;\n      make(dp[i + 1][min(40, j + a[i + 1] / 1000)], dp[i][j] + a[i + 1]);\n      if (j * 100 >= a[i + 1])\n        make(dp[i + 1][j - a[i + 1] / 100], dp[i][j]);\n      else\n        make(dp[i + 1][0], dp[i][j] + a[i + 1] - j * 100);\n    }\n  int ans = -1;\n  for (int i = 0; i <= 40; ++i)\n    if (~dp[n][i]) make(ans, dp[n][i]);\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 7, inf = 1e9 + 7;\nint a[N], dp[2][50], now, n;\nvoid gmin(int &a, int b) {\n  if (a > b) a = b;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", a + i), a[i] /= 100;\n  now = 0;\n  for (int i = 1; i <= 40; ++i) dp[now][i] = inf;\n  for (int i = 1; i <= n; ++i) {\n    now ^= 1;\n    for (int j = 0; j <= 40; ++j) dp[now][j] = inf;\n    for (int j = 0; j <= 40; ++j)\n      if (dp[now ^ 1][j] != inf) {\n        if (j < 35) gmin(dp[now][j + a[i] / 10], dp[now ^ 1][j] + a[i]);\n        int tmp = max(a[i] - j, 0);\n        gmin(dp[now][j - a[i] + tmp], dp[now ^ 1][j] + tmp);\n      }\n  }\n  int ans = inf;\n  for (int i = 0; i <= 19; ++i) gmin(ans, dp[now][i]);\n  printf(\"%d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Rustam Musin (PloadyFree@gmail.com)\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskD {\n        int[] min = new int[1 << 20];\n        int[] sum = new int[1 << 20];\n        int n;\n        int[] a;\n        int[] pos1;\n        int[] pos2;\n\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            n = in.readInt();\n            a = new int[n];\n            int cnt1 = 0, cnt2 = 0;\n            for (int i = 0; i < n; i++) {\n                a[i] = in.readInt();\n                if (a[i] == 1000) {\n                    cnt1++;\n                } else {\n                    cnt2++;\n                }\n            }\n            pos1 = new int[cnt1];\n            pos2 = new int[cnt2];\n            for (int i = 0, j = 0, k = 0; i < n; i++) {\n                if (a[i] == 1000) {\n                    pos1[j++] = i;\n                } else {\n                    pos2[k++] = i;\n                }\n            }\n            int l = -1;\n            int r = 2_000 * 300_000;\n            while (r - l > 1) {\n                int m = (l + r) >> 1;\n                if (check(m)) {\n                    r = m;\n                } else {\n                    l = m;\n                }\n            }\n            out.print(r);\n        }\n\n        void update(int at, int val) {\n            at += 1 << 19;\n            min[at] = sum[at] = val;\n            while ((at >>= 1) >= 1) {\n                sum[at] = sum[at << 1] + sum[at << 1 | 1];\n                min[at] = Math.min(min[at << 1], sum[at << 1] + min[at << 1 | 1]);\n            }\n        }\n\n        boolean check(int have) {\n            for (int i = 0; i < n; i++) {\n                update(i, -a[i]);\n            }\n            for (int i : pos2) {\n                update(i, 200);\n            }\n            int at2 = pos2.length - 1;\n            for (int x = 0; x <= pos1.length; x++) {\n                if (x * 1000 > have) {\n                    break;\n                }\n                int y = (have - x * 1000) / 2000;\n                if (x > 0) {\n                    update(pos1[x - 1], 100);\n                }\n                while (at2 >= y) {\n                    update(pos2[at2--], -2000);\n                }\n                int rem = have - (1000 * x + 2000 * y);\n                if ((a[0] == 1000 && x == 0) || (a[0] == 2000 && y == 0)) {\n                    update(0, rem - a[0]);\n                } else {\n                    update(0, rem + a[0] / 10);\n                }\n                if (min[1] >= 0) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void print(int i) {\n            writer.print(i);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint a[300005];\nint dp[300005][35];\nint solve(int idx, int cur) {\n  if (idx == n) return 0;\n  int &ret = dp[idx][cur];\n  if (~ret) return ret;\n  int x = min(a[idx], cur);\n  ret = solve(idx + 1, cur - x) + a[idx] - x;\n  if (a[idx] / 10 + cur <= 30)\n    ret = min(ret, a[idx] + solve(idx + 1, cur + a[idx] / 10));\n  return ret;\n}\nint main() {\n  memset(dp, -1, sizeof dp);\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", a + i), a[i] /= 100;\n  cout << solve(0, 0) * 100 << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3e5 + 100;\nconst int L = 40;\nconst int oo = 1e9;\nint N, A[maxn];\nint dp[L + 5][maxn];\ninline void change(int &ret, int v) {\n  if (ret > v) ret = v;\n}\nint solve() {\n  for (int i = (0), _i = (L + 1); i <= _i; i++)\n    for (int j = (0), _j = (N); j <= _j; j++) dp[i][j] = oo;\n  dp[0][0] = 0;\n  for (int i = (0), _i = (N - 1); i <= _i; i++)\n    for (int j = (0), _j = (L + 1); j <= _j; j++)\n      if (dp[j][i] != oo) {\n        int cost = A[i + 1];\n        if (j < L) change(dp[j + cost / 10][i + 1], dp[j][i] + cost);\n        for (int k = (1), _k = (min(cost, j)); k <= _k; k++)\n          change(dp[j - k][i + 1], dp[j][i] + cost - k);\n      }\n  int ans = oo;\n  for (int i = (0), _i = (L + 1); i <= _i; i++)\n    if (dp[i][N] != oo) change(ans, dp[i][N]);\n  return ans;\n}\nint main() {\n  for (; scanf(\"%d\", &N) != EOF;) {\n    for (int i = (1), _i = (N); i <= _i; i++) scanf(\"%d\", &A[i]);\n    for (int i = (1), _i = (N); i <= _i; i++) A[i] /= 100;\n    int ans = solve();\n    printf(\"%d\\n\", ans * 100);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC target(\"avx2\")\n#pragma GCC optimization(\"O3\")\n#pragma GCC optimization(\"unroll-loops\")\nusing namespace std;\ntemplate <class T>\nusing vec = std::vector<T>;\nbool __hack = std::ios::sync_with_stdio(false);\nauto __hack1 = cin.tie(nullptr);\nstruct Input {\n  Input(istream &in) : in(&in) {}\n  template <class T>\n  T next() const {\n    T x;\n    *in >> x;\n    return x;\n  }\n  int ni() const { return next<int>(); }\n  template <class T>\n  vec<T> nVec(int n) const {\n    vec<T> v(n);\n    for (int i = 0; i < n; ++i) {\n      v[i] = next<T>();\n    }\n    return v;\n  }\n  vec<int> nvi(int n) const { return nVec<int>(n); }\n  istream *in;\n};\nInput in(cin);\nclass Output {\n private:\n  ostream *out;\n  template <typename T>\n  void printSingle(const T &value) {\n    *out << value;\n  }\n\n public:\n  Output(ostream &out) : out(&out) {}\n  inline void print() {}\n  template <typename T, typename... Ts>\n  inline void print(const T &f, const Ts &...args) {\n    printSingle(f);\n    if (sizeof...(args) != 0) {\n      *out << ' ';\n      print(args...);\n    }\n  }\n  template <typename... Ts>\n  inline void println(const Ts &...args) {\n    print(args...);\n    *out << '\\n';\n  }\n  template <typename... Ts>\n  inline void operator()(const Ts &...args) {\n    println(args...);\n  }\n};\nOutput out(cout);\nnamespace template_util {\nconstexpr int bytecount(uint64_t x) { return x ? 1 + bytecount(x >> 8) : 0; }\ntemplate <int N>\nstruct bytetype {};\ntemplate <uint64_t N>\nstruct minimal_uint : bytetype<bytecount(N)> {};\n}  // namespace template_util\nconst int64_t INF = numeric_limits<int64_t>::max() / 2;\nconst int MAXD = 100;\nvoid solve(istream &inStream, ostream &outStream) {\n  in = Input(inStream);\n  out = Output(outStream);\n  auto n = in.ni();\n  auto a = in.nvi(n);\n  vec<int64_t> dp(MAXD, INF);\n  dp[0] = 0;\n  for (int i = 0; i < (n); ++i) {\n    vec<int64_t> nxt(MAXD, INF);\n    int add = 1;\n    if (a[i] == 2000) add++;\n    for (int j = 0; j < (MAXD); ++j) {\n      if (dp[j] == INF) continue;\n      if (j + add < MAXD) {\n        nxt[j + add] = min(nxt[j + add], dp[j] + a[i]);\n      }\n      int disc = j * 100;\n      if (disc <= a[i]) {\n        nxt[0] = min(nxt[0], dp[j] + a[i] - disc);\n      } else {\n        int left = disc - a[i];\n        left /= 100;\n        nxt[left] = min(nxt[left], dp[j]);\n      }\n    }\n    dp = nxt;\n  }\n  auto res = *min_element(dp.begin(), dp.end());\n  out(res);\n}\nint main() {\n  solve(cin, cout);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005;\nconst int B = 50;\nconst int oo = 1e9;\nint dp[N][B];\nint n, a[N];\nint f(int i, int j) {\n  if (i == n) return 0;\n  if (j >= B) return oo;\n  int &ans = dp[i][j];\n  if (~ans) return ans;\n  ans = f(i + 1, j + a[i]) + a[i] * 10;\n  int nj = j - a[i] * 10;\n  int add = 0;\n  if (nj < 0) {\n    add += abs(nj);\n    nj = 0;\n  }\n  ans = min(ans, f(i + 1, nj) + add);\n  return ans;\n}\nint main() {\n  memset(dp, -1, sizeof dp);\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", a + i), a[i] /= 1000;\n  printf(\"%d\\n\", f(0, 0) * 100);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int KN = 3e5 + 5, KInfL = 0x3f3f3f3f;\nint n, m = 30, c[KN], f[KN][31];\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> n;\n  for (int i = 1; i <= n; ++i) cin >> c[i];\n  memset(f, 0x3f, sizeof f);\n  f[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 0; j <= m; ++j) {\n      if (f[i - 1][j] >= KInfL) continue;\n      if (j + c[i] / 1000 <= m)\n        f[i][j + c[i] / 1000] = min(f[i][j + c[i] / 1000], f[i - 1][j] + c[i]);\n      int now = min(c[i] / 100, j);\n      f[i][j - now] = min(f[i][j - now], f[i - 1][j] + c[i] - now * 100);\n    }\n  }\n  cout << *min_element(f[n], f[n] + m + 1) << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN = 300000 + 13;\nint a[maxN], N;\nlong long f[maxN][40];\nint main() {\n  scanf(\"%d\", &N);\n  for (int i = (1), _ed = (N + 1); i < _ed; i++) scanf(\"%d\", &a[i]);\n  memset(f, 0x3f, sizeof(f));\n  f[0][0] = 0;\n  for (int i = (1), _ed = (N + 1); i < _ed; i++) {\n    int ta = a[i] / 1000;\n    for (int j = (0), _ed = (40); j < _ed; j++) {\n      f[i][j + ta] = min(f[i][j + ta], f[i - 1][j] + a[i]);\n      if (j >= ta * 10)\n        f[i][j - ta * 10] = min(f[i][j - ta * 10], f[i - 1][j]);\n      else\n        f[i][0] = min(f[i][0], f[i - 1][j] + (a[i] - j * 100));\n    }\n  }\n  long long ans = f[N + 1][0];\n  for (int i = (0), _ed = (40); i < _ed; i++) {\n    if (ans > f[N][i]) ans = f[N][i];\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> v;\nint n, count1 = 0, count2 = 0;\nint test(int a, int b) {\n  int x = count1, y = count2;\n  int ans = 0, bon = 0;\n  for (int i = 0; i < n; i++) {\n    if (v[i] == 1000) {\n      if (x > a)\n        ans += 10, bon += 1, x--;\n      else {\n        int aux = min(10, bon);\n        ans += 10 - aux;\n        bon -= aux;\n      }\n    }\n    if (v[i] == 2000) {\n      if (y > b)\n        ans += 20, bon += 2, y--;\n      else {\n        int aux = min(20, bon);\n        ans += 20 - aux;\n        bon -= aux;\n      }\n    }\n  }\n  return ans;\n}\nint binary_search2(int a) {\n  int i = 1, j = count2;\n  while (j - i > 1) {\n    int mid = (i + j) >> 1;\n    int ans1 = test(a, mid);\n    int ans2 = test(a, mid - 1);\n    if (ans1 - ans2 <= 0)\n      i = mid;\n    else\n      j = mid;\n  }\n  int ans = 1e9;\n  for (int l = i - 1; l <= j; l++) ans = min(ans, test(a, l));\n  return ans;\n}\nint binary_search() {\n  int i = 1, j = count1;\n  while (j - i > 1) {\n    int mid = (i + j) >> 1;\n    int ans1 = binary_search2(mid);\n    int ans2 = binary_search2(mid - 1);\n    if (ans1 - ans2 <= 0)\n      i = mid;\n    else\n      j = mid;\n  }\n  int ans = 1e9;\n  for (int l = i - 1; l <= j; l++) ans = min(ans, binary_search2(l));\n  return ans;\n}\nint main() {\n  scanf(\"%d\", &n);\n  v = vector<int>(n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &v[i]);\n    if (v[i] == 1000)\n      count1++;\n    else\n      count2++;\n  }\n  int ans = binary_search();\n  printf(\"%lld\\n\", ans * 100LL);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300010], n;\nint res[300010][110];\nint dp(int id, int cs) {\n  if (id == n) return 0;\n  if (res[id][cs] != -1) return res[id][cs];\n  int tk = min(cs * 100, a[id]);\n  int w = a[id] - tk + dp(id + 1, cs - tk / 100);\n  if (cs < 100) w = min(w, a[id] + dp(id + 1, cs + a[id] / 1000));\n  return res[id][cs] = w;\n}\nint main() {\n  memset(res, -1, sizeof(res));\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  printf(\"%d\\n\", dp(0, 0));\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.BigInteger;\nimport java.util.Map.Entry;\n\nimport static java.lang.Math.*;\n\npublic class D extends PrintWriter {\n\n    int solve(int n, int[] a) {\n        int m = 1 << n;\n\n        int min = 2000 * n;\n\n        for (int mask = 0; mask < m; mask++) {\n            int b = 0;\n            int s = 0;\n\n            for (int i = 0; i < n; i++) {\n                if ((mask & (1 << i)) > 0) {\n                    b += a[i];\n                    s += a[i] / 10;\n                } else {\n                    int p = min(s, a[i]);\n                    int r = a[i] - p;\n\n                    s -= p;\n                    b += r;\n                }\n            }\n\n            if (b < min) {\n                min = b;\n            }\n        }\n\n        for (int mask = 0; mask < m; mask++) {\n            int b = 0;\n            int s = 0;\n\n            for (int i = 0; i < n; i++) {\n                if ((mask & (1 << i)) > 0) {\n                    b += a[i];\n                    s += a[i] / 10;\n                } else {\n                    int p = min(s, a[i]);\n                    int r = a[i] - p;\n\n                    s -= p;\n                    b += r;\n                }\n            }\n\n            if (b == min) {\n                for (int i = 0; i < n; i++) {\n                    if ((mask & (1 << i)) > 0) {\n                        print('1');\n                    } else {\n                        print('0');\n                    }\n                }\n                println();\n            }\n        }\n\n        return min;\n    }\n\n    void test(int n) {\n\n        int m = 1 << n;\n\n        for (int mask = 0; mask < m; mask++) {\n            int[] a = new int[n];\n\n            for (int i = 0; i < n; i++) {\n                if ((mask & (1 << i)) > 0) {\n                    a[i] = 1000;\n                } else {\n                    a[i] = 2000;\n                }\n            }\n\n            println(Arrays.toString(a));\n            println(solve(n, a));\n\n        }\n\n    }\n\n    void run() {\n        int n = nextInt(), m = 32;\n\n        int[] a = nextArray(n);\n\n        int[] x = new int[m], y = new int[m], z;\n\n        for (int i = n - 1; i >= 0; i--) {\n\n            Arrays.fill(y, n * 2000);\n\n            int v = a[i];\n\n            for (int b = 0; b < m; b++) {\n                int u = b * 100;\n\n                if (v <= u) {\n                    int c = (u - v) / 100;\n                    y[b] = x[c];\n                } else {\n                    y[b] = x[0] + v - u;\n                }\n\n                int d = min(b + (v / 1000), m - 1);\n                y[b] = min(y[b], x[d] + v);\n\n            }\n\n         //   for (int b = 0; b < 20; b++) {\n              //  printf(\"%4d \", y[b]);\n        //    }\n          //  println();\n\n            z = y;\n            y = x;\n            x = z;\n        }\n\n        println(x[0]);\n    }\n\n    boolean skip() {\n        while (hasNext()) {\n            next();\n        }\n        return true;\n    }\n\n    int[][] nextMatrix(int n, int m) {\n        int[][] matrix = new int[n][m];\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < m; j++)\n                matrix[i][j] = nextInt();\n        return matrix;\n    }\n\n    String next() {\n        while (!tokenizer.hasMoreTokens())\n            tokenizer = new StringTokenizer(nextLine());\n        return tokenizer.nextToken();\n    }\n\n    boolean hasNext() {\n        while (!tokenizer.hasMoreTokens()) {\n            String line = nextLine();\n            if (line == null) {\n                return false;\n            }\n            tokenizer = new StringTokenizer(line);\n        }\n        return true;\n    }\n\n    int[] nextArray(int n) {\n        int[] array = new int[n];\n        for (int i = 0; i < n; i++) {\n            array[i] = nextInt();\n        }\n        return array;\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n        try {\n            return reader.readLine();\n        } catch (IOException err) {\n            return null;\n        }\n    }\n\n    public D(OutputStream outputStream) {\n        super(outputStream);\n    }\n\n    static BufferedReader reader;\n    static StringTokenizer tokenizer = new StringTokenizer(\"\");\n    static Random rnd = new Random();\n    static boolean OJ;\n\n    public static void main(String[] args) throws IOException {\n        OJ = System.getProperty(\"ONLINE_JUDGE\") != null;\n        D solution = new D(System.out);\n        if (OJ) {\n            reader = new BufferedReader(new InputStreamReader(System.in));\n            solution.run();\n        } else {\n            reader = new BufferedReader(new FileReader(new File(D.class.getName() + \".txt\")));\n            long timeout = System.currentTimeMillis();\n            while (solution.hasNext()) {\n                solution.run();\n                solution.println();\n                solution.println(\"----------------------------------\");\n            }\n            solution.println(\"time: \" + (System.currentTimeMillis() - timeout));\n        }\n        solution.close();\n        reader.close();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tstatic BufferedReader reader;\n\tstatic StringTokenizer tokenizer;\n\tstatic PrintWriter writer;\n\n\tstatic String nextToken() throws IOException {\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t}\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tstatic int nextInt() throws NumberFormatException, IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\twriter = new PrintWriter(System.out);\n\t\tbanana();\n\t\treader.close();\n\t\twriter.close();\n\t}\n\n\tstatic int n;\n\tstatic int[] a;\n\tstatic final int INF = 100000002;\n\tstatic final int MX = 52;\n\n\tstatic void banana() throws NumberFormatException, IOException {\n\t\tint n = nextInt();\n\t\t// long start = System.currentTimeMillis();\n\t\ta = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt() / 100;\n\t\t\t// a[i] = Math.random() < 0.5 ? 10 : 20;\n\t\t}\n\n\t\tint[][] dp = new int[n + 1][MX];\n\t\tfor (int i = 0; i <= n; i++) {\n\t\t\tfor (int j = 0; j < MX; j++) {\n\t\t\t\tdp[i][j] = INF;\n\t\t\t}\n\t\t}\n\t\tdp[0][0] = 0;\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint x = a[i];\n\t\t\tfor (int curr = 0; curr < MX; curr++) {\n\t\t\t\t{\n\t\t\t\t\t// cash only\n\t\t\t\t\tint bonus = x / 10;\n\t\t\t\t\tif (curr + bonus >= MX) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdp[i + 1][curr + bonus] = Math.min(dp[i + 1][curr + bonus], dp[i][curr] + x);\n\t\t\t\t}\n\t\t\t\tint sp = Math.min(curr, x);\n\t\t\t\tfor (; sp > 0; sp--) {\n\t\t\t\t\t// use\n\t\t\t\t\tint left = curr - sp;\n\t\t\t\t\tint cand = dp[i][curr] + (x - sp);\n\t\t\t\t\tif (dp[i + 1][left] > cand) {\n\t\t\t\t\t\tdp[i + 1][left] = cand;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tint ans = INF;\n\t\tfor (int curr = 0; curr < MX; curr++) {\n\t\t\tans = Math.min(ans, dp[n][curr]);\n\t\t}\n\t\twriter.println(ans * 100);\n\t\t// writer.println(System.currentTimeMillis() - start);\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0), cout.tie(0);\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n  vector<vector<int> > dp(n + 1, vector<int>(100, 1000000000));\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < 100; j++) {\n      if (j + a[i] / 10 < 100)\n        dp[i + 1][j + a[i] / 10] =\n            min(dp[i + 1][j + a[i] / 10], dp[i][j] + a[i]);\n      dp[i + 1][max(j - a[i], 0)] =\n          min(dp[i + 1][max(j - a[i], 0)], dp[i][j] + max(a[i] - j, 0));\n    }\n  }\n  cout << *min_element(dp.back().begin(), dp.back().end()) * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[300300], flag[300300];\nint solveSkip(int budget) {\n  int bonus = 0;\n  for (int i = 0; i < n; i++) {\n    if (flag[i]) {\n      if (budget < a[i]) return 0;\n      budget -= a[i];\n      bonus += a[i] / 10;\n    } else if (bonus >= a[i])\n      bonus -= a[i];\n    else if (bonus + budget >= a[i]) {\n      budget -= a[i] - bonus;\n      bonus = 0;\n    } else\n      return 0;\n  }\n  return 1;\n}\nint ok(int _budget) {\n  int bonus = 0, last[2] = {-1, -1}, res = 1, budget = _budget;\n  memset(flag, 0, sizeof flag);\n  for (int i = 0; i < n; i++)\n    if (budget >= a[i]) {\n      budget -= a[i];\n      last[a[i] / 10 - 1] = i;\n      flag[i] = 1;\n      bonus += a[i] / 10;\n    } else if (bonus >= a[i])\n      bonus -= a[i];\n    else if (budget + bonus >= a[i]) {\n      budget -= a[i] - bonus;\n      bonus = 0;\n    } else {\n      res = 0;\n      break;\n    }\n  if (res) return 1;\n  for (int j = 0; j < 2; j++)\n    if (last[j] >= 0) {\n      int target = -1;\n      for (int k = last[j] + 1; k < n; k++)\n        if (a[k] != a[last[j]] && !flag[k]) {\n          target = k;\n          break;\n        }\n      if (target >= 0) {\n        flag[last[j]] = 0;\n        flag[target] = 1;\n        if (solveSkip(_budget)) return 1;\n        flag[last[j]] = 1;\n        flag[target] = 0;\n      }\n    }\n  return 0;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(NULL);\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n  int low = 0, high = n * 20, ans = n;\n  while (low <= high) {\n    int mid = (low + high) / 2;\n    if (ok(mid)) {\n      ans = mid;\n      high = mid - 1;\n    } else\n      low = mid + 1;\n  }\n  cout << ans * 100 << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-8;\nconst double inf = 1e15;\nlong long read() {\n  long long x = 0, f = 1;\n  char ch = getchar();\n  while (!isdigit(ch)) {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (isdigit(ch)) {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nint n, x[300500], all, a, b;\nint solve(int a, int b) {\n  int ans = 0, j = 0;\n  for (int i = 1; i <= n; i++) {\n    if ((a > 0 && x[i] == 1000) || (b > 0 && x[i] == 2000))\n      j += x[i] / 10, ans += x[i];\n    else\n      ans += x[i] - min(x[i], j), j -= min(x[i], j);\n    if (x[i] == 1000)\n      a--;\n    else\n      b--;\n  }\n  return ans;\n}\nint main() {\n  n = read();\n  for (int i = 1; i <= n; i++) {\n    x[i] = read();\n    all += x[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    all -= x[i] / 10 * 11;\n    if (all < 0) break;\n    if (x[i] == 1000)\n      a++;\n    else\n      b++;\n  }\n  int ans = min(solve(a, b), min(solve(a + 1, b), solve(a - 1, b + 1)));\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXD = 40;\nint n, a[300005];\nlong long f[300005][MAXD + 5];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; ++i) a[i] /= 100;\n  for (int i = 0; i <= n; ++i)\n    for (int j = 0; j <= MAXD; ++j) f[i][j] = 1e18;\n  f[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 0; j <= MAXD; ++j) {\n      if (f[i - 1][j] == 1e18) continue;\n      if (j >= a[i])\n        f[i][j - a[i]] = min(f[i][j - a[i]], f[i - 1][j]);\n      else\n        f[i][0] = min(f[i][0], f[i - 1][j] + (a[i] - j) * 100);\n      f[i][min(j + a[i] / 10, MAXD)] =\n          min(f[i][min(j + a[i] / 10, MAXD)], f[i - 1][j] + a[i] * 100);\n    }\n  }\n  long long ans = 1e18;\n  for (int i = 0; i <= MAXD; ++i) ans = min(ans, f[n][i]);\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300005], f[300005][35], n, ans;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]), a[i] /= 100;\n  memset(f, 60, sizeof(f));\n  f[0][0] = 0;\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j <= 31; j++) {\n      if (j + a[i] / 10 <= 31)\n        f[i][j + a[i] / 10] = min(f[i][j + a[i] / 10], f[i - 1][j] + a[i]);\n      f[i][j - min(a[i], j)] =\n          min(f[i][j - min(a[i], j)], f[i - 1][j] + a[i] - min(a[i], j));\n    }\n  ans = 1e9;\n  for (int i = 0; i <= 31; i++) ans = min(ans, f[n][i]);\n  printf(\"%d\", ans * 100);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint a[300010], s[300010];\nint f1[300010];\nint next1[300010], next2[300010];\nint ans = 0;\nint getS(int l, int r) { return s[r] - s[l - 1]; }\nvoid pre_gao() {\n  int last1 = n + 1, last2 = n + 1;\n  for (int i = n; i >= 1; i--) {\n    next1[i] = last1;\n    next2[i] = last2;\n    if (a[i] == 1)\n      last1 = i;\n    else\n      last2 = i;\n  }\n}\nvoid update(int x) {\n  if (x > ans) ans = x;\n}\nvoid gao(int x) {\n  if (getS(x + 1, n) * 10 >= getS(1, x)) update(s[x]);\n  if (next1[x] <= n) {\n    int s1 = s[x], s2 = getS(x + 1, next1[x] - 1);\n    int s3 = max(s1 - 10 * s2, 0);\n    int l = next1[x], r = next2[next1[x]] - 1;\n    while (l < r) {\n      int mid = (l + r + 1) >> 1;\n      if (getS(mid + 1, n) * 10 >= s3 + getS(next1[x], mid))\n        l = mid;\n      else\n        r = mid - 1;\n    }\n    if (getS(l + 1, n) * 10 >= s3 + getS(next1[x], l))\n      update(s1 + getS(next1[x], l));\n  }\n  if (next2[x] <= n) {\n    int s1 = s[x], s2 = getS(x + 1, next2[x] - 1);\n    int s3 = max(s1 - 10 * s2, 0);\n    int l = next2[x], r = next1[next2[x]] - 1;\n    while (l < r) {\n      int mid = (l + r + 1) >> 1;\n      if (getS(mid + 1, n) * 10 >= s3 + getS(next2[x], mid))\n        l = mid;\n      else\n        r = mid - 1;\n    }\n    if (getS(l + 1, n) * 10 >= s3 + getS(next2[x], l))\n      update(s1 + getS(next2[x], l));\n  }\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", a + i);\n    a[i] /= 1000;\n    s[i] = s[i - 1] + a[i];\n  }\n  pre_gao();\n  for (int i = 1; i <= n; i++) gao(i);\n  ans = s[n] * 10 - ans;\n  printf(\"%d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst double PI = acos(-1);\nconst int MAXX = 10005;\nconst int maxInt = 2147483647;\nusing namespace std;\nint a[300010], n;\ninline int read() {\n  int k = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    k = k * 10 + ch - '0';\n    ch = getchar();\n  }\n  return k * f;\n}\nint main() {\n  n = read();\n  int sa = 0, sb = 0;\n  for (int i = 1; i <= n; i++) a[i] = read();\n  for (int i = 1; i <= n; i++) sa += a[i] / 1000, sb += (a[i] == 1000);\n  int S = sa * 10 / 11;\n  if (sa <= 11) S = sa - a[n] / 1000;\n  if (sb == 0 && (S & 1)) S--;\n  printf(\"%d\", sa * 1000 - S * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, A[300010];\nint dp[300010][35];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &A[i]);\n    A[i] /= 100;\n  }\n  for (int i = 0; i <= n; i++)\n    for (int j = 0; j < 35; j++) dp[i][j] = 2147482647;\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    int a = A[i] / 10;\n    for (int j = 0; j <= 30; ++j)\n      if (dp[i - 1][j] < 2147482647) {\n        if (j + a <= 31) dp[i][j + a] = min(dp[i][j + a], dp[i - 1][j] + A[i]);\n        int minx = min(j, A[i]);\n        if (minx != 0)\n          dp[i][j - minx] = min(dp[i][j - minx], dp[i - 1][j] + A[i] - minx);\n      }\n  }\n  int ans = 2147482647;\n  for (int i = 0; i < 20; ++i) ans = min(ans, dp[n][i]);\n  printf(\"%d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXD = 100;\nint n, a[300005];\nlong long f[300005][MAXD + 5];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; ++i) a[i] /= 100;\n  for (int i = 0; i <= n; ++i)\n    for (int j = 0; j <= MAXD; ++j) f[i][j] = 1e18;\n  f[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 0; j <= MAXD; ++j) {\n      if (f[i - 1][j] == 1e18) continue;\n      if (j >= a[i])\n        f[i][j - a[i]] = min(f[i][j - a[i]], f[i - 1][j]);\n      else\n        f[i][0] = min(f[i][0], f[i - 1][j] + (a[i] - j) * 100);\n      f[i][min(j + a[i] / 10, MAXD)] =\n          min(f[i][min(j + a[i] / 10, MAXD)], f[i - 1][j] + a[i] * 100);\n    }\n  }\n  long long ans = 1e18;\n  for (int i = 0; i <= MAXD; ++i) ans = min(ans, f[n][i]);\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1 << 29;\nint main() {\n  int n, dpa[300], dpb[300], t, ans = MAX;\n  scanf(\"%d\", &n);\n  dpa[0] = 0;\n  for (int i = 1; i < 300; i++) dpa[i] = MAX;\n  while (n--) {\n    scanf(\"%d\", &t);\n    for (int i = 0; i < 300; i++) dpb[i] = MAX;\n    if (t == 1000) {\n      for (int i = 0; i <= 30; i++)\n        for (int j = i + 1; j <= 30 && j <= i + 10; j++)\n          dpb[i] = min(dpb[i], dpa[j] + (10 - j + i));\n      for (int i = 1; i <= 30; i++) dpb[i] = min(dpb[i], dpa[i - 1] + 10);\n    } else {\n      for (int i = 0; i <= 30; i++)\n        for (int j = i + 1; j <= 30 && j <= i + 20; j++)\n          dpb[i] = min(dpb[i], dpa[j] + (20 - j + i));\n      for (int i = 2; i <= 30; i++) dpb[i] = min(dpb[i], dpa[i - 2] + 20);\n    }\n    memcpy(dpa, dpb, sizeof(dpa));\n  }\n  for (int i = 0; i <= 30; i++) ans = min(ans, dpa[i]);\n  printf(\"%d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dp[305000][41];\nint a[305000], n;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  memset(dp, 0x3f3f3f3f, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j <= 30; j++) {\n      if (dp[i - 1][j] == 0x3f3f3f3f) continue;\n      if (j >= a[i])\n        dp[i][j - a[i]] = min(dp[i][j - a[i]], dp[i - 1][j]);\n      else\n        dp[i][0] = min(dp[i][0], dp[i - 1][j] + a[i] - j);\n      dp[i][j + a[i] / 10] = min(dp[i][j + a[i] / 10], dp[i - 1][j] + a[i]);\n    }\n  }\n  int ans = 0x3f3f3f3f;\n  for (int i = 0; i <= 30; i++) ans = min(ans, dp[n][i]);\n  printf(\"%lld\\n\", 1ll * ans * 100);\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.util.List;\n import java.util.*;\n public class realfast implements Runnable \n  {\n    private static final int INF = (int) 1e9;\n    long in= 1000000007;\n    long fac[]= new long[1000001];\n    long inv[]=new long[1000001];\n    public  void solve() throws IOException \n    {\n\n       // int t = readInt();\n\n      //  int n = readInt();\n\n        \n             int n= readInt();\n             int arr[]=new int[n+1];\n             for(int i =1;i<=n;i++)\n             {\n                arr[i]= readInt();\n                arr[i]= arr[i]/100;\n             }\n\n             int dp[][]=new int[n+1][31];\n\n             for(int i=0;i<=n;i++)\n             {\n                for(int j =0;j<=30;j++)\n                {\n                    dp[i][j]= 60000000;\n                }\n             }\n             dp[0][0]=0;\n\n             for(int i=1;i<=n;i++)\n             {\n                int c= arr[i]/10;\n                for(int j =0;j<=30;j++)\n                {\n                    int l =j+c;\n                    l=Math.min(l,30);\n\n\n                    dp[i][l]= Math.min(dp[i][l],dp[i-1][j]+arr[i]);\n\n                    if(j>=arr[i])\n                    {\n                        dp[i][j-arr[i]]= Math.min(dp[i][j-arr[i]],dp[i-1][j]);\n                    }\n                    else\n                    {\n                        dp[i][0]= Math.min(dp[i][0],dp[i-1][j]+arr[i]-j);\n                    }\n\n\n                }\n             }\n\n             int cost =100000000;\n\n             for(int i=0;i<=30;i++)\n             {\n                cost =Math.min(cost,dp[n][i]);\n             }\n\n             out.println(cost*100);\n\n\n\n      \n        \n      \n\n    }\n    \n    public int value (int seg[], int left , int right ,int index, int l, int r)\n    {\n            \n            if(left>right)\n            {\n              return -100000000;\n            }\n            if(right<l||left>r)\n                return -100000000;\n            if(left>=l&&right<=r)\n                return seg[index];\n            int mid = left+(right-left)/2;\n            int val = value(seg,left,mid,2*index+1,l,r);\n            int val2 = value(seg,mid+1,right,2*index+2,l,r);\n            return Math.max(val,val2);\n\n    }\n   \n    public int gcd(int a , int b )\n    {\n      if(a<b)\n      {\n        int t =a;\n        a=b;\n        b=t;\n      }\n      if(a%b==0)\n        return b ;\n      return gcd(b,a%b);\n    }\n    public long pow(long n , long p,long m)\n    {\n         if(p==0)\n            return 1;\n        long val = pow(n,p/2,m);;\n        val= (val*val)%m;\n        if(p%2==0)\n            return val;\n        else\n            return (val*n)%m;\n    }\n    \n    \n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    public static void main(String[] args) {\n        new Thread(null, new realfast(), \"\", 128 * (1L << 20)).start();\n    }\n \n    private static final boolean ONLINE_JUDGE = System.getProperty(\"ONLINE_JUDGE\") != null;\n    private BufferedReader reader;\n    private StringTokenizer tokenizer;\n    private PrintWriter out;\n \n    @Override\n    public void run() {\n        try {\n            if (ONLINE_JUDGE || !new File(\"input.txt\").exists()) {\n                reader = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(System.out);\n            } else {\n                reader = new BufferedReader(new FileReader(\"input.txt\"));\n                out = new PrintWriter(\"output.txt\");\n            }\n            solve();\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        } finally {\n            try {\n                reader.close();\n            } catch (IOException e) {\n                // nothing\n            }\n            out.close();\n        }\n    }\n \n    private String readString() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n \n    @SuppressWarnings(\"unused\")\n    private int readInt() throws IOException {\n        return Integer.parseInt(readString());\n    }\n \n    @SuppressWarnings(\"unused\")\n    private long readLong() throws IOException {\n        return Long.parseLong(readString());\n    }\n \n    @SuppressWarnings(\"unused\")\n    private double readDouble() throws IOException {\n        return Double.parseDouble(readString());\n    }\n}\nclass edge implements Comparable<edge>{\n    int u ;\n    int v;\n    \n    edge(int u, int v)\n    {\n       this.u=u;\n       this.v=v;\n    }\n    public int compareTo(edge e)\n    {\n        return this.v-e.v;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dp[300005][35], n;\nint ara[600005];\nlong long dp_func(int pos, int ase) {\n  if (pos > n) return 0;\n  if (dp[pos][ase] != -1) return dp[pos][ase];\n  long long ret = 21474836499999;\n  ret = min(ret, dp_func(pos + 1, max(ase - ara[pos] / 100, 0)) +\n                     max((ara[pos] - (ase * 100)), 0));\n  if (ase < 29) {\n    ret = min(ret, dp_func(pos + 1, ase + (ara[pos] / 1000)) + ara[pos]);\n  }\n  return dp[pos][ase] = ret;\n}\nint main() {\n  int i, j, k, l, m;\n  memset(dp, -1, sizeof dp);\n  scanf(\"%d\", &m);\n  for (i = 1; i <= m; i++) {\n    scanf(\"%d\", &l);\n    if (l == 1000)\n      ara[++n] = l;\n    else {\n      ara[++n] = 2000;\n    }\n  }\n  long long ret = dp_func(1, 0);\n  cout << ret << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long long INF = 4e18L + 1;\nconst int IINF = 2e9 + 1;\nusing namespace std;\ntemplate <class TH>\nvoid _dbg(const char *sdbg, TH h) {\n  cerr << sdbg << '=' << h << endl;\n}\ntemplate <class TH, class... TA>\nvoid _dbg(const char *sdbg, TH h, TA... a) {\n  while (*sdbg != ',') cerr << *sdbg++;\n  cerr << '=' << h << ',';\n  _dbg(sdbg + 1, a...);\n}\nconst int N = 3e5, R = 30;\nlong long dp[N + 1][R + 1];\nint n;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  for (long long i = (long long)0; i < (long long)N + 1; i++) {\n    for (long long j = (long long)0; j < (long long)R + 1; j++) {\n      dp[i][j] = IINF;\n    }\n  }\n  dp[0][0] = 0;\n  cin >> n;\n  for (long long i = (long long)1; i < (long long)n + 1; i++) {\n    long long t1;\n    cin >> t1;\n    t1 /= 100;\n    for (long long j = (long long)0; j < (long long)R + 1; j++) {\n      if (j + t1 / 10 <= R) {\n        dp[i][j + t1 / 10] = min(dp[i][j + t1 / 10], dp[i - 1][j] + t1);\n      }\n      dp[i][j - min(j, t1)] =\n          min(dp[i][j - min(j, t1)], dp[i - 1][j] + t1 - min(j, t1));\n    }\n  }\n  cout << 100 * (*min_element(dp[n], dp[n] + R + 1)) << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long n;\n  cin >> n;\n  int a[n];\n  long long b[n];\n  memset(b, 0, sizeof(b));\n  int t1 = 0;\n  for (long i = 0; i < n; i++) {\n    cin >> a[i];\n    a[i] = a[i] / 1000;\n    if (a[i] == 1) t1 = 1;\n    if (i == 0)\n      b[0] = a[0];\n    else\n      b[i] = b[i - 1] + a[i];\n  }\n  long long k = (b[n - 1] * 10) / 11;\n  k = min(k, b[n - 1] - a[n - 1]);\n  if (t1 == 0 && k % 2 == 1) k = k - 1;\n  long long t = b[n - 1] * 1000 - k * 100;\n  cout << t;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005;\nint n, a[N], sum[N], cnt[N];\nint lf[N], rt[N];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n;\n  for (int i = (1); i <= (n); ++i) cin >> a[i], a[i] /= 1000;\n  for (int i = (1); i <= (n); ++i)\n    sum[i] = sum[i - 1] + a[i], cnt[i] = cnt[i - 1] + a[i] % 2;\n  for (int i = (1); i <= (n); ++i) {\n    if (a[i] == 1)\n      lf[i] = i;\n    else\n      lf[i] = lf[i - 1];\n  }\n  for (int i = n; i >= 1; --i) {\n    if (a[i] == 1)\n      rt[i] = i;\n    else\n      rt[i] = rt[i + 1];\n  }\n  int result = 2e9;\n  for (int s = (0); s <= (3 * n); ++s) {\n    if (sum[n] < s) break;\n    int l = 0, r = n + 1;\n    while (r - l > 1) {\n      int m = (l + r) / 2;\n      if (sum[m] <= s)\n        l = m;\n      else\n        r = m;\n    }\n    if (sum[l] == s) {\n      result = min(result, s * 10 + max((sum[n] - sum[l]) * 10 - s, 0));\n      continue;\n    }\n    if (rt[l + 1] > 0) {\n      int ps = rt[l + 1];\n      int bonus = sum[l];\n      int total = bonus * 10;\n      int here = sum[ps - 1] - sum[l];\n      total += max(here * 10 - bonus, 0);\n      bonus = -min(here * 10 - bonus, 0);\n      total += a[ps] * 10;\n      bonus += a[ps];\n      result = min(result, total + max((sum[n] - sum[ps]) * 10 - bonus, 0));\n    }\n    if (lf[r] > 0) {\n      int ps = lf[r];\n      int bonus = sum[ps - 1];\n      int total = bonus * 10;\n      total += max(a[ps] * 10 - bonus, 0);\n      bonus = -min(a[ps] * 10 - bonus, 0);\n      int here = sum[r] - sum[ps];\n      total += here * 10;\n      bonus += here;\n      result = min(result, total + max((sum[n] - sum[r]) * 10 - bonus, 0));\n    }\n  }\n  result *= 100;\n  cout << result << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:268435456\")\nusing namespace std;\ntemplate <typename T>\ninline T abs(T a) {\n  return ((a < 0) ? -a : a);\n}\ntemplate <typename T>\ninline T sqr(T a) {\n  return a * a;\n}\ntemplate <class T>\nT gcd(T a, T b) {\n  return a ? gcd(b % a, a) : b;\n}\ntemplate <class T>\nT lcm(T a, T b) {\n  return a / gcd(a, b) * b;\n}\ntemplate <class T>\nT sign(T a) {\n  return a > 0 ? 1 : (a < 0 ? -1 : 0);\n}\nconst int dx[] = {-1, 0, 1, 0};\nconst int dy[] = {0, 1, 0, -1};\nconst int dxK[] = {-1, -1, 0, 1, 1, 1, 0, -1};\nconst int dyK[] = {0, 1, 1, 1, 0, -1, -1, -1};\nconst int dxKn[] = {-2, -1, 1, 2, 2, 1, -1, -2};\nconst int dyKn[] = {1, 2, 2, 1, -1, -2, -2, -1};\nconst int N = int(300 * 1000) + 5;\nconst int M = int(10000) + 9;\nconst int LOGN = 21;\nconst int SQN = 350;\nconst int MOD = int(1e9) + 7;\nconst int INF = int(1e9) + 100;\nconst long long INF64 = 2e18;\nconst double PI = double(3.1415926535897932384626433832795);\nconst double e = double(2.7182818284590452353602874713527);\nconst double EPS = 1e-9;\nint n;\nint a[N];\nint dp[N][36];\nint calc(int pos, int s) {\n  int &res = dp[pos][s];\n  if (res != -1) return res;\n  res = INF;\n  if (pos == n) return res = 0;\n  if (s < 33) res = min(res, a[pos] + calc(pos + 1, s + a[pos] / 10));\n  int d = min(s, a[pos]);\n  res = min(res, a[pos] - d + calc(pos + 1, s - d));\n  return res;\n}\nvoid solve() {\n  cin >> n;\n  for (int i = 0; i < (int)(n); ++i) {\n    scanf(\"%d\", a + i);\n    a[i] /= 100;\n  }\n  memset(dp, -1, sizeof dp);\n  cout << 100 * calc(0, 0);\n}\nint main() {\n  srand(time(NULL));\n  cout << setprecision(25) << fixed;\n  cerr << setprecision(25) << fixed;\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 7;\nint data[N];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int cc = 0, sum = 0;\n  for (int i = (1); i < (n + 1); ++i) {\n    scanf(\"%d\", &data[i]);\n    sum += data[i] / 1000;\n    if (data[i] == 1000) cc++;\n  }\n  int tmp = 10 * sum / 11;\n  if (sum <= 11) tmp = sum - data[n] / 1000;\n  if (!cc && (tmp & 1)) tmp--;\n  printf(\"%d\\n\", sum * 1000 - tmp * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n  int a = 0, po = 1;\n  char ch = getchar();\n  while (!isdigit(ch) && ch != '-') ch = getchar();\n  if (ch == '-') po = -1, ch = getchar();\n  while (isdigit(ch)) a = a * 10 + ch - '0', ch = getchar();\n  return a * po;\n}\nint n;\nint x[300010];\nint tot, ans, sum, bon;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    x[i] = read();\n  }\n  for (int i = 1; i <= n; i++) {\n    sum += x[i] / 1000;\n    if (x[i] == 1000) tot++;\n  }\n  bon = sum * 10 / 11;\n  if (sum <= 11) bon = sum - x[n] / 1000;\n  if (bon % 2 != 0 && !tot) bon--;\n  cout << 1000 * sum - 100 * bon;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid desperate_optimization(int precision) {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cout.setf(ios::fixed);\n  cout.setf(ios::showpoint);\n  cout.precision(precision);\n}\nconst int N = 3e5;\nconst int M = 32;\nconst int MAXN = 2e9;\nint dp[M + 5][N + 5];\nint arr[N + 5];\nint n;\nint solve(int duit, int idx) {\n  if (idx == n) return 0;\n  int &res = dp[duit][idx];\n  if (res != -1) return res;\n  res = MAXN;\n  if (duit + arr[idx] / 10 < M)\n    res = min(res, solve(duit + arr[idx] / 10, idx + 1) + arr[idx]);\n  for (int i = 1; i <= min(arr[idx], duit); i++) {\n    res = min(res, solve(duit - i, idx + 1) + arr[idx] - i);\n  }\n  return res;\n}\nvoid hora(int tc) {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    arr[i] /= 100;\n  }\n  memset(dp, -1, sizeof dp);\n  cout << solve(0, 0) * 100 << '\\n';\n}\nint main() {\n  desperate_optimization(10);\n  int ntc = 1;\n  for (int tc = 1; tc <= ntc; tc++) hora(tc);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1123456;\nint x[MAX];\nint n;\nint solve(int a, int b) {\n  int k = 0, j = 0;\n  for (int i = 1; i <= n; i++) {\n    if (x[i] == 1000)\n      a--;\n    else\n      b--;\n    if (x[i] == 1000 && a >= 0 || x[i] == 2000 && b >= 0) {\n      k += x[i], j += x[i] / 10;\n    } else {\n      k += x[i] - min(x[i], j), j -= min(x[i], j);\n    }\n  }\n  return k;\n}\nint main() {\n  scanf(\"%d\", &n);\n  int sum = 0;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", x + i);\n    sum += x[i];\n  }\n  int a = 0, b = 0, ans = sum;\n  for (int i = 1; i <= n; i++) {\n    sum -= x[i] / 10 * 11;\n    if (sum < 0) break;\n    if (x[i] == 1000)\n      a++;\n    else\n      b++;\n  }\n  ans = min(ans, solve(a, b));\n  ans = min(ans, solve(a + 1, b));\n  ans = min(ans, solve(a - 1, b + 1));\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1000000007;\nconst long long linf = 1ll * inf * inf;\nconst int N = 300000 + 7;\nconst int M = 62;\nconst int multipleTest = 0;\nint dp[N][M];\nint n;\nint a[N];\nvoid solve() {\n  cin >> n;\n  for (int i = (0), _b = (N); i < _b; ++i)\n    for (int j = (0), _b = (M); j < _b; ++j) dp[i][j] = inf;\n  dp[0][0] = 0;\n  for (int i = (1), _b = (n + 1); i < _b; ++i) {\n    int u;\n    scanf(\"%d\", &u);\n    u /= 100;\n    for (int j = 0; j < M; ++j) {\n      for (int t = 1, _m = min(u, j); t <= _m; ++t)\n        dp[i][j - t] = min(dp[i][j - t], dp[i - 1][j] + u - t);\n      if (j + u / 10 < M)\n        dp[i][j + u / 10] = min(dp[i][j + u / 10], dp[i - 1][j] + u);\n    }\n  }\n  int res = inf;\n  for (int j = (0), _b = (M); j < _b; ++j) res = min(res, dp[n][j]);\n  cout << res * 100;\n}\nint main() {\n  int Test = 1;\n  if (multipleTest) {\n    cin >> Test;\n  }\n  for (int i = 0; i < Test; ++i) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005;\nint n, m, ans, two, one, l, r, k, a[N], dp[N][205];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &k);\n    a[i] = k / 100;\n    if (a[i] == 20)\n      two++;\n    else\n      one++;\n  }\n  memset(dp, 127, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j <= 200; j++)\n      if (dp[i][j] <= 2e8) {\n        if (j + a[i + 1] / 10 <= 200)\n          dp[i + 1][j + a[i + 1] / 10] =\n              min(dp[i + 1][j + a[i + 1] / 10], dp[i][j] + a[i + 1]);\n        if (j >= a[i + 1])\n          dp[i + 1][j - a[i + 1]] = min(dp[i + 1][j - a[i + 1]], dp[i][j]);\n        else\n          dp[i + 1][0] = min(dp[i + 1][0], dp[i][j] + (a[i + 1] - j));\n      }\n  }\n  int ans = 2e9;\n  for (int i = 0; i <= 200; i++) {\n    ans = min(ans, dp[n][i]);\n  }\n  printf(\"%d00\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t, s, coun, a[300010];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    s += a[i] / 1000;\n    if (a[i] == 1000) {\n      coun++;\n    }\n  }\n  t = s * 10 / 11;\n  if (s <= 11) {\n    t = s - a[n] / 1000;\n  }\n  if (coun == 0 && (t & 1)) {\n    t--;\n  }\n  cout << s * 1000 - t * 100;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = .3e6 + 5;\nconst int X = 600 + 5;\nint n;\nint A[N], C[N];\nint dp[2][X];\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> A[i];\n    A[i] /= 100;\n    C[i] = A[i] / 10;\n  }\n  for (int i = n; i >= 1; i--) {\n    int c = i % 2;\n    int p = 1 - c;\n    for (int j = 0; j < X; j++) {\n      int paid = min(j, A[i]);\n      dp[c][j] = A[i] - paid + dp[p][j - paid];\n      if (j + C[i] < X) {\n        dp[c][j] = min(dp[c][j], A[i] + dp[p][j + C[i]]);\n      }\n    }\n  }\n  cout << dp[1][0] * 100 << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:667177216\")\nusing namespace std;\nconst long long MOD = 1000000000 + 7;\nlong long D[3 * 100000 + 5][45];\nlong long rec(vector<int> &a, int pos, int have) {\n  if (pos == a.size()) return 0;\n  if (D[pos][have] != -1) return D[pos][have];\n  long long mini = 999999999999999999;\n  if (have == 0) {\n    return D[pos][have] = (a[pos] + rec(a, pos + 1, have + a[pos] / 1000));\n  }\n  if (have >= 42) {\n    return D[pos][have] = (a[pos] + rec(a, pos + 1, have - a[pos] / 100));\n  }\n  mini = a[pos] + rec(a, pos + 1, have + a[pos] / 1000);\n  for (int i = 1; i <= min(have, a[pos] / 100); ++i) {\n    mini = min(mini, a[pos] - i * 100 + rec(a, pos + 1, have - i));\n  }\n  return D[pos][have] = mini;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  scanf(\"%d\", &n);\n  vector<int> a(n);\n  for (int(i) = 0; (i) < n; (i)++) scanf(\"%d\", &a[i]);\n  memset(D, -1, sizeof(D));\n  cout << rec(a, 0, 0);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst double eps = 1e-8;\nconst int mod = 1000000007;\nconst double pi = acos(-1.0);\ninline void gn(long long& x) {\n  int sg = 1;\n  char c;\n  while (((c = getchar()) < '0' || c > '9') && c != '-')\n    ;\n  c == '-' ? (sg = -1, x = 0) : (x = c - '0');\n  while ((c = getchar()) >= '0' && c <= '9') x = x * 10 + c - '0';\n  x *= sg;\n}\ninline void gn(int& x) {\n  long long t;\n  gn(t);\n  x = t;\n}\ninline void gn(unsigned long long& x) {\n  long long t;\n  gn(t);\n  x = t;\n}\nlong long gcd(long long a, long long b) { return a ? gcd(b % a, a) : b; }\nlong long powmod(long long a, long long x, long long mod) {\n  long long t = 1ll;\n  while (x) {\n    if (x & 1) t = t * a % mod;\n    a = a * a % mod;\n    x >>= 1;\n  }\n  return t;\n}\nconst int maxn = 3e5 + 5;\nint dp[maxn][55];\nint main() {\n  int n;\n  gn(n);\n  memset(dp, 0x3f, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = (1); i <= (n); i++) {\n    int x;\n    gn(x);\n    x /= 100;\n    int bk = x / 10;\n    for (int j = (0); j <= (50); j++) {\n      if (j >= x)\n        dp[i][j - x] = min(dp[i][j - x], dp[i - 1][j]);\n      else {\n        int nd = x - j;\n        dp[i][0] = min(dp[i][0], dp[i - 1][j] + nd);\n      }\n      int up = min(50, j + bk);\n      dp[i][up] = min(dp[i][up], dp[i - 1][j] + x);\n    }\n  }\n  int ans = inf;\n  for (int i = (0); i <= (50); i++) ans = min(ans, dp[n][i]);\n  cout << ans * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300300;\nconst int INF = 2 * N;\nint a[N];\nbool b[N];\nint n;\nbool evaluate(int x) {\n  int bal = 0;\n  for (int i = 0; i < n; i++) {\n    if (b[i]) {\n      int val = min(bal, a[i]);\n      bal -= val;\n      x -= val;\n    } else {\n      bal += a[i] / 10;\n    }\n  }\n  return x <= 0;\n}\nbool suf(int x) {\n  int oldx = x;\n  for (int i = 0; i < n; i++) b[i] = 0;\n  for (int i = n - 1; x > 0 && i >= 0; i--) {\n    b[i] = 1;\n    x -= a[i];\n  }\n  return evaluate(oldx);\n}\nbool skip1(int x) {\n  int oldx = x;\n  for (int i = 0; i < n; i++) b[i] = 0;\n  for (int i = n - 1; x > 0 && i >= 0; i--) {\n    b[i] = 1;\n    x -= a[i];\n  }\n  int pos = 0;\n  while (pos < n && (a[pos] != 10 || !b[pos])) pos++;\n  if (pos == n) return false;\n  x += a[pos];\n  b[pos] = 0;\n  pos--;\n  while (pos >= 0 && b[pos]) pos--;\n  if (evaluate(oldx)) return true;\n  if (pos >= 0) {\n    b[pos] = 1;\n  }\n  return evaluate(oldx);\n}\nbool take1(int x) {\n  int oldx = x;\n  for (int i = 0; i < n; i++) b[i] = 0;\n  for (int i = n - 1; x > 0 && i >= 0; i--) {\n    if (x <= 20 && a[i] == 20) continue;\n    x -= a[i];\n    b[i] = 1;\n  }\n  return evaluate(oldx);\n}\nbool solve(int x) { return suf(x) || skip1(x) || take1(x); }\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  int l = 0, r = INF;\n  while (r - l > 1) {\n    int x = (l + r) / 2;\n    if (solve(x))\n      l = x;\n    else\n      r = x;\n  }\n  int ans = -l;\n  for (int i = 0; i < n; i++) ans += a[i];\n  printf(\"%d\\n\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1123456;\nint x[MAX];\nint n;\nint solve(int a, int b) {\n  int k = 0, j = 0;\n  for (int i = 1; i <= n; i++) {\n    if (x[i] == 1000)\n      a--;\n    else\n      b--;\n    if (x[i] == 1000 && a >= 0 || x[i] == 2000 && b >= 0) {\n      k += x[i], j += x[i] / 10;\n    } else {\n      k += x[i] - min(x[i], j), j -= min(x[i], j);\n    }\n  }\n  return k;\n}\nint main() {\n  scanf(\"%d\", &n);\n  int sum = 0;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", x + i);\n    sum += x[i];\n  }\n  int a = 0, b = 0, ans = sum;\n  for (int i = 1; i <= n; i++) {\n    sum -= x[i] / 10 * 11;\n    if (sum < 0) break;\n    if (x[i] == 1000)\n      a++;\n    else\n      b++;\n  }\n  ans = min(ans, solve(a, b));\n  ans = min(ans, solve(a + 1, b));\n  ans = min(ans, solve(a, b + 1));\n  ans = min(ans, solve(a - 1, b + 1));\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint Total;\nint Array[400001];\nint Sum, Count;\nint main(void) {\n  register int i;\n  cin >> Total;\n  for (i = 1; i <= Total; i++) {\n    cin >> Array[i];\n    Sum += Array[i] / 1000;\n    Count += (Array[i] == 1000);\n  }\n  register int Tmp;\n  Tmp = Sum * 10 / 11;\n  if (Sum <= 11) {\n    Tmp = Sum - Array[Total] / 1000;\n  }\n  if (!Count && Tmp % 2 == 1) {\n    Tmp--;\n  }\n  cout << Sum * 1000 - Tmp * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint const N = 3e5 + 10;\nint dp[2][40];\nint cost[N];\nint n;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &cost[i]);\n    cost[i] /= 100;\n  }\n  int now = 0;\n  for (int _ = 0; _ <= 30; _++) dp[now][_] = 0x3f3f3f3f;\n  dp[now][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    now ^= 1;\n    for (int _ = 0; _ <= 30; _++) dp[now][_] = 0x3f3f3f3f;\n    for (int j = 0; j <= 30; j++) {\n      for (int k = min(30, j + cost[i]); k > j; k--) {\n        dp[now][j] = min(dp[now][j], dp[now ^ 1][k] + cost[i] - (k - j));\n      }\n      if (j >= cost[i] / 10)\n        dp[now][j] = min(dp[now][j], dp[now ^ 1][j - cost[i] / 10] + cost[i]);\n    }\n  }\n  int ans = 0x3f3f3f3f;\n  for (int i = 0; i <= 30; i++) ans = min(ans, dp[now][i]);\n  printf(\"%d\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline long long mod(long long n, long long m) {\n  long long ret = n % m;\n  if (ret < 0) ret += m;\n  return ret;\n}\nlong long gcd(long long a, long long b) {\n  return (b == 0LL ? a : gcd(b, a % b));\n}\nlong long exp(long long a, long long b, long long m) {\n  if (b == 0LL) return 1LL;\n  if (b == 1LL) return mod(a, m);\n  long long k = mod(exp(a, b / 2, m), m);\n  if (b & 1LL) {\n    return mod(a * mod(k * k, m), m);\n  } else\n    return mod(k * k, m);\n}\nint n;\nconst int N = 300100, MX = 31, inf = 1e9;\nint a[N];\nint dp[N][MX + 10];\nint solve(int id, int j) {\n  if (id > n) return 0;\n  int& x = dp[id][j];\n  if (x != -1) return x;\n  if (j >= MX) {\n    return x = solve(id + 1, j - a[id]);\n  }\n  x = inf;\n  if (j > 0) {\n    int put = min(j, a[id]);\n    x = solve(id + 1, j - put) + a[id] - put;\n  }\n  return x = min(x, solve(id + 1, j + a[id] / 10) + a[id]);\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  memset(dp, -1, sizeof(dp));\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n  cout << 100LL * solve(1, 0) << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1123456;\nint x[MAX];\nint n;\nint solve(int a, int b) {\n  int k = 0, j = 0;\n  for (int i = 1; i <= n; i++) {\n    if (x[i] == 1000)\n      a--;\n    else\n      b--;\n    if (x[i] == 1000 && a >= 0 || x[i] == 2000 && b >= 0) {\n      k += x[i], j += x[i] / 10;\n    } else {\n      k += x[i] - min(x[i], j), j -= min(x[i], j);\n    }\n  }\n  return k;\n}\nint main() {\n  scanf(\"%d\", &n);\n  int sum = 0;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", x + i);\n    sum += x[i];\n  }\n  int a = 0, b = 0, ans = sum;\n  for (int i = 1; i <= n; i++) {\n    sum -= x[i] / 10 * 11;\n    if (sum <= 0) break;\n    if (x[i] == 1000)\n      a++;\n    else\n      b++;\n  }\n  ans = min(ans, solve(a, b));\n  ans = min(ans, solve(a + 1, b));\n  ans = min(ans, solve(a, b + 1));\n  ans = min(ans, solve(a - 1, b + 1));\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint min(int a, int b) { return a < b ? a : b; }\nint max(int a, int b) { return a > b ? a : b; }\nint main() {\n  static int aa[300000], pp[300000], ip[300000], iq[300000];\n  int n, i, i_, ans;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    int a;\n    scanf(\"%d\", &a);\n    pp[i] = aa[i] = a;\n  }\n  for (i = 1; i < n; i++) pp[i] += pp[i - 1];\n  for (i = 0, i_ = -1; i < n; i++) {\n    if (aa[i] == 1000) i_ = i;\n    ip[i] = i_;\n  }\n  for (i = n - 1, i_ = n; i >= 0; i--) {\n    if (aa[i] == 1000) i_ = i;\n    iq[i] = i_;\n  }\n  ans = n * 2000;\n  for (i = 0; i < n; i++) {\n    int a, b, x, y;\n    x = pp[i];\n    a = x;\n    b = x / 10;\n    x = pp[n - 1] - pp[i], y = min(x, b);\n    a += x - y;\n    b -= y;\n    ans = min(ans, a);\n    if (aa[i] == 2000) {\n      i_ = ip[i];\n      if (i_ != -1) {\n        x = i_ == 0 ? 0 : pp[i_ - 1];\n        a = x;\n        b = x / 10;\n        x = aa[i_], y = min(x, b);\n        a += x - y;\n        b -= y;\n        x = pp[i] - pp[i_];\n        a += x;\n        b += x / 10;\n        x = pp[n - 1] - pp[i], y = min(x, b);\n        a += x - y;\n        b -= y;\n        ans = min(ans, a);\n      }\n      i_ = iq[i];\n      if (i_ != n) {\n        x = pp[i];\n        a = x;\n        b = x / 10;\n        x = pp[i_ - 1] - pp[i], y = min(x, b);\n        a += x - y;\n        b -= y;\n        x = aa[i_];\n        a += x;\n        b += x / 10;\n        x = pp[n - 1] - pp[i_], y = min(x, b);\n        a += x - y;\n        b -= y;\n        ans = min(ans, a);\n      }\n    }\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 9.2e18;\nconst int maxn = 300007;\nconst int INF = 2.1e9;\nconst int MOD = 1e9 + 7;\nconst double dif = 1e-7;\nconst double PI = 3.14159265358979323846;\nint n, m, k, sum = 0;\nint a[maxn], pre[maxn];\nbool check(int x) {\n  int d = sum - k, s = 0, flag1 = 0, flag2 = 0;\n  if (d > k / 10) return false;\n  int i;\n  for (i = n; i >= 1; i--) {\n    if (s >= d) break;\n    s += a[i];\n    if (a[i] == 10) flag1 = 1;\n    if (a[i] == 20) flag2 = 1;\n  }\n  if (pre[i] >= d * 10)\n    return true;\n  else if (flag1 && s - d >= 10 && d * 10 - pre[i] <= 10)\n    return true;\n  else if (flag2 && s - d >= 10 && d * 10 - pre[i] <= 10) {\n    for (; i >= 1; i--)\n      if (a[i] == 10) return pre[i - 1] >= 100;\n  }\n  return false;\n}\nint main(void) {\n  while (cin >> n) {\n    pre[0] = 0;\n    for (int i = 1; i <= n; i++) {\n      cin >> a[i];\n      a[i] /= 100;\n      pre[i] = pre[i - 1] + a[i];\n    }\n    sum = pre[n];\n    k = sum / 11 * 10;\n    while (!check(k)) k++;\n    cout << k * 100 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, s, cnt, tmp, a[300001];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++)\n    scanf(\"%d\", &a[i]), s += a[i], cnt += a[i] < 2000;\n  int tmp = s / 1100;\n  if (s <= 11000) tmp = (s - a[n]) / 1000;\n  if (!cnt && tmp & 1) tmp--;\n  return printf(\"%d\\n\", s - tmp * 100), 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXD = 35;\nint n, a[300005];\nlong long f[300005][MAXD + 5];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; ++i) a[i] /= 100;\n  for (int i = 0; i <= n; ++i)\n    for (int j = 0; j <= MAXD; ++j) f[i][j] = 1e18;\n  f[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 0; j <= MAXD; ++j) {\n      if (f[i - 1][j] == 1e18) continue;\n      if (j >= a[i])\n        f[i][j - a[i]] = min(f[i][j - a[i]], f[i - 1][j]);\n      else\n        f[i][0] = min(f[i][0], f[i - 1][j] + (a[i] - j) * 100);\n      f[i][min(j + a[i] / 10, MAXD)] =\n          min(f[i][min(j + a[i] / 10, MAXD)], f[i - 1][j] + a[i] * 100);\n    }\n  }\n  long long ans = 1e18;\n  for (int i = 0; i <= MAXD; ++i) ans = min(ans, f[n][i]);\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\ntemplate <class t, class u>\nvoid chmax(t& first, u second) {\n  if (first < second) first = second;\n}\ntemplate <class t, class u>\nvoid chmin(t& first, u second) {\n  if (second < first) first = second;\n}\ntemplate <class t>\nusing vc = vector<t>;\ntemplate <class t>\nusing vvc = vc<vc<t>>;\nusing pi = pair<ll, ll>;\nusing vi = vc<ll>;\ntemplate <class t, class u>\nostream& operator<<(ostream& os, const pair<t, u>& p) {\n  return os << \"{\" << p.first << \",\" << p.second << \"}\";\n}\ntemplate <class t>\nostream& operator<<(ostream& os, const vc<t>& v) {\n  os << \"{\";\n  for (auto e : v) os << e << \",\";\n  return os << \"}\";\n}\nusing uint = unsigned;\nusing ull = unsigned long long;\ntemplate <class t, size_t n>\nostream& operator<<(ostream& os, const array<t, n>& first) {\n  return os << vc<t>(first.begin(), first.end());\n}\ntemplate <ll i, class T>\nvoid print_tuple(ostream&, const T&) {}\ntemplate <ll i, class T, class H, class... Args>\nvoid print_tuple(ostream& os, const T& t) {\n  if (i) os << \",\";\n  os << get<i>(t);\n  print_tuple<i + 1, T, Args...>(os, t);\n}\ntemplate <class... Args>\nostream& operator<<(ostream& os, const tuple<Args...>& t) {\n  os << \"{\";\n  print_tuple<0, tuple<Args...>, Args...>(os, t);\n  return os << \"}\";\n}\ntemplate <class t>\nvoid print(t x, ll suc = 1) {\n  cout << x;\n  if (suc == 1) cout << \"\\n\";\n  if (suc == 2) cout << \" \";\n}\nll read() {\n  ll i;\n  cin >> i;\n  return i;\n}\nvi readvi(ll n, ll off = 0) {\n  vi v(n);\n  for (ll i = ll(0); i < ll(n); i++) v[i] = read() + off;\n  return v;\n}\ntemplate <class T>\nvoid print(const vector<T>& v, ll suc = 1) {\n  for (ll i = ll(0); i < ll(v.size()); i++)\n    print(v[i], i == ll(v.size()) - 1 ? suc : 2);\n}\nstring readString() {\n  string s;\n  cin >> s;\n  return s;\n}\ntemplate <class T>\nT sq(const T& t) {\n  return t * t;\n}\nvoid yes(bool ex = true) {\n  cout << \"Yes\"\n       << \"\\n\";\n  if (ex) exit(0);\n}\nvoid no(bool ex = true) {\n  cout << \"No\"\n       << \"\\n\";\n  if (ex) exit(0);\n}\nvoid possible(bool ex = true) {\n  cout << \"Possible\"\n       << \"\\n\";\n  if (ex) exit(0);\n}\nvoid impossible(bool ex = true) {\n  cout << \"Impossible\"\n       << \"\\n\";\n  if (ex) exit(0);\n}\nconstexpr ll ten(ll n) { return n == 0 ? 1 : ten(n - 1) * 10; }\nconst ll infLL = LLONG_MAX / 3;\nconst ll inf = infLL;\nll topbit(signed t) { return t == 0 ? -1 : 31 - __builtin_clz(t); }\nll topbit(ll t) { return t == 0 ? -1 : 63 - __builtin_clzll(t); }\nll botbit(signed first) { return first == 0 ? 32 : __builtin_ctz(first); }\nll botbit(ll first) { return first == 0 ? 64 : __builtin_ctzll(first); }\nll popcount(signed t) { return __builtin_popcount(t); }\nll popcount(ll t) { return __builtin_popcountll(t); }\nbool ispow2(ll i) { return i && (i & -i) == i; }\nll mask(ll i) { return (ll(1) << i) - 1; }\nbool inc(ll first, ll second, ll c) { return first <= second && second <= c; }\ntemplate <class t>\nvoid mkuni(vc<t>& v) {\n  sort(v.begin(), v.end());\n  v.erase(unique(v.begin(), v.end()), v.end());\n}\nll rand_int(ll l, ll r) {\n  static mt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count());\n  return uniform_int_distribution<ll>(l, r)(gen);\n}\ntemplate <class t>\nvoid myshuffle(vc<t>& first) {\n  for (ll i = ll(0); i < ll(ll(first.size())); i++)\n    swap(first[i], first[rand_int(0, i)]);\n}\ntemplate <class t>\nll lwb(const vc<t>& v, const t& first) {\n  return lower_bound(v.begin(), v.end(), first) - v.begin();\n}\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  cout << fixed << setprecision(20);\n  ll n;\n  cin >> n;\n  vi first = readvi(n);\n  ll s = 0;\n  for (ll i = ll(0); i < ll(n); i++) {\n    first[i] /= 1000;\n    s += first[i];\n  }\n  ll ans = inf;\n  ll tar = s * 10 / 11;\n  for (ll u = ll(tar - 10); u < ll(tar + 10); u++) {\n    if (inc(0, u, s)) {\n      ll head = 0, cur = 0;\n      while (head < n && cur + first[head] <= u) cur += first[head++];\n      vi c(n);\n      for (ll i = ll(0); i < ll(head); i++) c[i] = 1;\n      auto upd = [&]() {\n        ll sum = 0, bon = 0;\n        for (ll i = ll(0); i < ll(n); i++) {\n          if (c[i]) {\n            sum += first[i] * 10;\n            bon += first[i];\n          } else {\n            ll w = min(first[i] * 10, bon);\n            sum += first[i] * 10 - w;\n            bon -= w;\n          }\n        }\n        chmin(ans, sum);\n      };\n      upd();\n      {\n        for (ll i = ll(head); i < ll(n); i++) {\n          if (first[i] == 1) {\n            c[i] = 1;\n            upd();\n            c[i] = 0;\n            break;\n          }\n        }\n      }\n      if (head < n) {\n        c[head] = 1;\n        for (ll i = ll(head) - 1; i >= ll(0); i--) {\n          if (first[i] == 1) {\n            c[i] = 0;\n            upd();\n            c[i] = 1;\n            break;\n          }\n        }\n      }\n    }\n  }\n  print(ans * 100);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint f(int p1, int r1, int p, int S) {\n  int a = min(p1 / 10, r1);\n  int res = p1 + r1 - a;\n  int rem = p1 / 10 - a;\n  return res + p - p1 + max(0, S - p - r1 - (p - p1) / 10 - rem);\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  vector<int> a(n);\n  vector<int> s(n + 1);\n  vector<int> v;\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n    s[i + 1] = s[i] + a[i];\n    if (a[i] == 1000) v.push_back(i);\n  }\n  int S = s.back();\n  int res = S;\n  for (int i = 0; i < n; ++i) {\n    int p = s[i + 1];\n    res = min(res, p + max(0, S - p - p / 10));\n  }\n  if (!v.empty()) {\n    int s1 = 0;\n    for (int i = 0; i < n; ++i) {\n      if (a[i] == 1000) s1 = s[i];\n      res = min(res, f(s1, 1000, s[i + 1] - 1000, S));\n    }\n    for (int i = 0; i < n; ++i) {\n      int nx = lower_bound(v.begin(), v.end(), i + 1) - v.begin();\n      if (nx < (int)v.size() && s[i + 1] / 10 >= s[v[nx]] - s[i + 1]) {\n        res = min(res, f(s[i + 1], s[v[nx]] - s[i + 1], s[i + 1] + 1000, S));\n      }\n    }\n  }\n  printf(\"%d\\n\", res);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300005];\nint lastone[300005];\nint nextone[300005];\nlong long sum[300005];\nvector<int> vt[3];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    sum[i] = sum[i - 1] + a[i];\n    lastone[i] = (a[i] == 1000) ? i : lastone[i - 1];\n  }\n  for (int i = n; i >= 1; i--) {\n    nextone[i] = (a[i] == 1000) ? i : nextone[i + 1];\n  }\n  long long ans = sum[n];\n  for (int i = 1; i <= n; i++) {\n    long long bonus = sum[i] / 10;\n    long long rem = sum[n] - sum[i];\n    long long res = sum[i] + rem - min(rem, bonus);\n    ans = min(ans, res);\n    if (a[i] == 2000) {\n      int las = lastone[i];\n      if (las) {\n        res = sum[las - 1];\n        bonus = sum[las - 1] / 10;\n        res += a[las] - min(a[las] + 0ll, bonus);\n        bonus -= min(a[las] + 0ll, bonus);\n        bonus += (sum[i] - sum[las]) / 10;\n        res += (sum[i] - sum[las]);\n        rem = sum[n] - sum[i];\n        res += rem - min(rem, bonus);\n        ans = min(ans, res);\n      }\n      las = nextone[i + 1];\n      if (las) {\n        res = sum[i];\n        bonus = sum[i] / 10;\n        res += (sum[las - 1] - sum[i]) - min(sum[las - 1] - sum[i], bonus);\n        bonus -= min(sum[las - 1] - sum[i], bonus);\n        bonus += a[las] / 10;\n        res += a[las];\n        rem = sum[n] - sum[las];\n        res += rem - min(rem, bonus);\n        ans = min(ans, res);\n      }\n    }\n  }\n  printf(\"%lld\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300005];\nint main() {\n  memset(a, 0, sizeof(a));\n  int n = 0, total = 0;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n    total += a[i] / 1000;\n  }\n  int x = total * 10 / 11;\n  x = min(x, total - a[n - 1] / 1000);\n  bool ck = false;\n  for (int i = 0; i < n - 1; ++i) {\n    if (a[i] == 1000) {\n      ck = true;\n      break;\n    }\n  }\n  if (!ck && x % 2 == 1) {\n    --x;\n  }\n  int res = total * 1000 - x * 100;\n  printf(\"%d\", res);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 300000;\nconst int INF = 1000000000;\nconst int MAXV = 40;\nint n;\nint a[MAXN];\nint dp[2][MAXV + 1];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  for (int i = 0; i <= MAXV; i++) dp[0][i] = INF;\n  dp[0][0] = 0;\n  int t = 0;\n  for (int i = 0; i < n; i++, t = 1 - t) {\n    for (int j = 0; j <= MAXV; j++) dp[1 - t][j] = INF;\n    for (int j = 0; j <= MAXV; j++)\n      if (dp[t][j] < INF) {\n        int nj = min(j + a[i] / 1000, MAXV);\n        dp[1 - t][nj] = min(dp[1 - t][nj], dp[t][j] + a[i]);\n        int discount = min(a[i], 100 * j);\n        nj = j - discount / 100;\n        dp[1 - t][nj] = min(dp[1 - t][nj], dp[t][j] + a[i] - discount);\n      }\n  }\n  int res = INF;\n  for (int i = 0; i <= MAXV; i++) res = min(res, dp[t][i]);\n  printf(\"%d\\n\", res);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Imx = 2147483647;\nconst long long Lbig = 2e18;\nconst int mod = 1e9 + 7;\nstruct fastio {\n  char s[100000];\n  int it, len;\n  fastio() { it = len = 0; }\n  inline char get() {\n    if (it < len) return s[it++];\n    it = 0;\n    len = fread(s, 1, 100000, stdin);\n    if (len == 0)\n      return EOF;\n    else\n      return s[it++];\n  }\n  bool notend() {\n    char c = get();\n    while (c == ' ' || c == '\\n') c = get();\n    if (it > 0) it--;\n    return c != EOF;\n  }\n} _buff;\ninline long long getnum() {\n  long long r = 0;\n  bool ng = 0;\n  char c;\n  c = _buff.get();\n  while (c != '-' && (c < '0' || c > '9')) c = _buff.get();\n  if (c == '-') ng = 1, c = _buff.get();\n  while (c >= '0' && c <= '9') r = r * 10 + c - '0', c = _buff.get();\n  return ng ? -r : r;\n}\ntemplate <class T>\ninline void putnum(T x) {\n  if (x < 0) putchar('-'), x = -x;\n  register short a[20] = {}, sz = 0;\n  while (x) a[sz++] = x % 10, x /= 10;\n  if (sz == 0) putchar('0');\n  for (int i = sz - 1; i >= 0; i--) putchar('0' + a[i]);\n}\ninline char getreal() {\n  char c = _buff.get();\n  while (c == ' ' || c == '\\n') c = _buff.get();\n  return c;\n}\nint n, a[300111];\nlong long pre[300111];\nint main() {\n  n = getnum();\n  long long sum = 0;\n  for (int i = 1; i <= n; i++) {\n    a[i] = getnum();\n    sum += a[i];\n    pre[i] = pre[i - 1] + a[i];\n  }\n  pre[n + 1] = pre[n];\n  long long ans = 0;\n  for (int i = 1; i <= n; i++) {\n    ans = max(ans, min(pre[i] / 10, pre[n] - pre[i]));\n  }\n  int ir = 1;\n  for (int i = 1; i <= n; i++) {\n    while (i <= n && a[i] == a[ir]) ir++;\n    long long cur = min(pre[i - 1] / 10, pre[ir - 1] - pre[i - 1]);\n    long long lft = pre[i - 1] - cur * 10;\n    int l = ir, r = n;\n    while (l <= r) {\n      int mid = l + r >> 1;\n      if ((pre[mid] - pre[ir - 1] + lft) / 10 < pre[n] - pre[mid])\n        l = mid + 1;\n      else\n        r = mid - 1;\n    }\n    long long a1 = min((pre[l] - pre[ir - 1] + lft) / 10, pre[n] - pre[l]);\n    long long a2 = min((pre[r] - pre[ir - 1] + lft) / 10, pre[n] - pre[r]);\n    ans = max(ans, max(cur + a1, cur + a2));\n  }\n  cout << sum - ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = -1;\nconst int INF = 1.01e9;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  vector<int> a(n);\n  for (int i = 0; i < (n); i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  vector<int> pref;\n  pref.push_back(0);\n  for (int i = 0; i < (n); i++) {\n    pref.push_back(pref.back() + a[i]);\n  }\n  auto getSum = [&](int l, int r) { return pref[r] - pref[l]; };\n  int answer = pref[n];\n  vector<int> pos;\n  for (int i = 0; i < (n); i++) {\n    if (a[i] == 1000 && pos.size() < 12) {\n      pos.push_back(i);\n    }\n  }\n  pos.push_back(-1);\n  auto solve = [&](int when) {\n    int bonus = 0;\n    int res = 0;\n    for (int i = 0; i < (n); i++) {\n      if (when == i) {\n        int x = min(a[i], bonus);\n        bonus -= x;\n      } else {\n        res += a[i] / 10;\n        bonus += a[i] / 10;\n        if (getSum(i + 1, n) < bonus) {\n          answer = min(answer, pref[n] - (res - (bonus - getSum(i + 1, n))));\n          break;\n        }\n      }\n      answer = min(answer, pref[n] - res);\n    }\n  };\n  for (auto x : pos) {\n    solve(x);\n  }\n  int opt = (pref[n] / 11) / 100 * 100;\n  int cur = n - 1;\n  int curSum = 0;\n  bool sawOne = 0;\n  for (; cur >= 0 && curSum + a[cur] <= opt; cur--) {\n    curSum += a[cur];\n    sawOne |= a[cur] == 1000;\n  }\n  if (sawOne) {\n    answer = min(answer, pref[n] - opt);\n  }\n  cout << answer << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconstexpr int MOD = 1000000007;\ntemplate <typename T, typename U>\nstd::istream& operator>>(std::istream& i, pair<T, U>& p) {\n  i >> p.first >> p.second;\n  return i;\n}\ntemplate <typename T>\nstd::istream& operator>>(std::istream& i, vector<T>& t) {\n  for (auto& v : t) {\n    i >> v;\n  }\n  return i;\n}\ntemplate <typename T>\nstd::ostream& operator<<(std::ostream& o, const vector<T>& t) {\n  for (size_t i = 0; i < t.size(); ++i) {\n    o << t[i] << \" \\n\"[i == t.size() - 1];\n  }\n  return o;\n}\ntemplate <typename T>\nusing minheap = priority_queue<T, vector<T>, greater<T>>;\ntemplate <typename T>\nusing maxheap = priority_queue<T, vector<T>, less<T>>;\nauto fraclt = [](const std::pair<int, int>& a, const std::pair<int, int>& b) {\n  return (long long)a.first * b.second < (long long)b.first * a.second;\n};\nstruct cmpfrac {\n  bool operator()(const std::pair<int, int>& a,\n                  const std::pair<int, int>& b) const {\n    return (long long)a.first * b.second < (long long)b.first * a.second;\n  }\n};\ntemplate <typename T>\nbool in(T a, T b, T c) {\n  return a <= b && b < c;\n}\nunsigned int logceil(long long first) {\n  unsigned int b = 0;\n  while (first) {\n    first >>= 1;\n    ++b;\n  }\n  return b;\n}\nnamespace std {\ntemplate <typename T, typename U>\nstruct hash<pair<T, U>> {\n  hash<T> t;\n  hash<U> u;\n  size_t operator()(const pair<T, U>& p) const {\n    return t(p.first) ^ (u(p.second) << 7);\n  }\n};\n}  // namespace std\ntemplate <typename T, typename F>\nT bsh(T l, T h, const F& f) {\n  T r = -1, m;\n  while (l <= h) {\n    m = (l + h) / 2;\n    if (f(m)) {\n      l = m + 1;\n      r = m;\n    } else {\n      h = m - 1;\n    }\n  }\n  return r;\n}\ntemplate <typename T, typename F>\nT bsl(T l, T h, const F& f) {\n  T r = -1, m;\n  while (l <= h) {\n    m = (l + h) / 2;\n    if (f(m)) {\n      h = m - 1;\n      r = m;\n    } else {\n      l = m + 1;\n    }\n  }\n  return r;\n}\ntemplate <typename T>\nT gcd(T a, T b) {\n  if (a < b) swap(a, b);\n  return b ? gcd(b, a % b) : a;\n}\ntemplate <typename T>\nclass vector2 : public vector<vector<T>> {\n public:\n  vector2() {}\n  vector2(size_t a, size_t b, T t = T())\n      : vector<vector<T>>(a, vector<T>(b, t)) {}\n};\ntemplate <typename T>\nclass vector3 : public vector<vector<vector<T>>> {\n public:\n  vector3() {}\n  vector3(size_t a, size_t b, size_t c, T t = T())\n      : vector<vector<vector<T>>>(a, vector<vector<T>>(b, vector<T>(c, t))) {}\n};\ntemplate <typename T>\nstruct bounded_priority_queue {\n  inline bounded_priority_queue(unsigned int X) : A(X), B(0) {}\n  inline void push(unsigned int L, T V) {\n    B = max(B, L);\n    A[L].push(V);\n  }\n  inline const T& top() const { return A[B].front(); }\n  inline void pop() {\n    A[B].pop();\n    while (B > 0 && A[B].empty()) --B;\n  }\n  inline bool empty() const { return A[B].empty(); }\n  inline void clear() {\n    B = 0;\n    for (auto& a : A) a = queue<T>();\n  }\n\n private:\n  vector<queue<T>> A;\n  unsigned int B;\n};\nconstexpr int mx = 33;\nclass TaskD {\n public:\n  void solve(istream& cin, ostream& cout) {\n    int N;\n    cin >> N;\n    vector<int> D(mx, MOD), E(mx);\n    D[0] = 0;\n    for (int i = 0; i < N; ++i) {\n      fill(E.begin(), E.end(), MOD);\n      int a;\n      cin >> a;\n      int b = a / 1000;\n      int c = a / 100;\n      for (int j = 0; j < mx; ++j) {\n        if (j >= c)\n          E[j - c] = min(E[j - c], D[j]);\n        else\n          E[0] = min(E[0], D[j] + (c - j));\n        if (j + b < mx) E[j + b] = min(E[j + b], D[j] + c);\n      }\n      swap(D, E);\n    }\n    int ans = *min_element(D.begin(), D.end());\n    cout << 100LL * ans << endl;\n  }\n};\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  TaskD solver;\n  std::istream& in(std::cin);\n  std::ostream& out(std::cout);\n  solver.solve(in, out);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3e5 + 100;\nconst int L = 30;\nconst int oo = 1e9;\nint N, A[maxn];\nint dp[L + 5][maxn];\ninline void change(int &ret, int v) {\n  if (ret > v) ret = v;\n}\nint solve() {\n  for (int i = (0), _i = (L + 1); i <= _i; i++)\n    for (int j = (0), _j = (N); j <= _j; j++) dp[i][j] = oo;\n  dp[0][0] = 0;\n  for (int i = (0), _i = (N - 1); i <= _i; i++)\n    for (int j = (0), _j = (L + 1); j <= _j; j++)\n      if (dp[j][i] != oo) {\n        int cost = A[i + 1];\n        if (j < L) change(dp[j + cost / 10][i + 1], dp[j][i] + cost);\n        for (int k = (1), _k = (min(cost, j)); k <= _k; k++)\n          change(dp[j - k][i + 1], dp[j][i] + cost - k);\n      }\n  int ans = oo;\n  for (int i = (0), _i = (L + 1); i <= _i; i++)\n    if (dp[i][N] != oo) change(ans, dp[i][N]);\n  return ans;\n}\nint main() {\n  for (; scanf(\"%d\", &N) != EOF;) {\n    for (int i = (1), _i = (N); i <= _i; i++) scanf(\"%d\", &A[i]);\n    for (int i = (1), _i = (N); i <= _i; i++) A[i] /= 100;\n    int ans = solve();\n    printf(\"%d\\n\", ans * 100);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, ai, summ;\nvector<long long> data;\nvector<long long> sums, nexts, prevs;\nbool checker(long long mid) {\n  long long ww = mid;\n  if (mid * 11 > summ) return false;\n  long long gr;\n  for (long long i = n - 1; i >= 0; i--) {\n    if (data[i] > mid) {\n      gr = i;\n      break;\n    }\n    mid -= data[i];\n  }\n  if (mid == 0) return true;\n  if (data[gr] == 1000) return true;\n  if (data[gr] == 2000 && mid > 1000) return true;\n  if (sums[gr] >= 10 * ww) return true;\n  if (nexts[gr] != n - 1 && nexts[gr] != -1) return true;\n  if (prevs[gr] == -1) return false;\n  long long ind = prevs[gr];\n  if (sums[ind] >= 10 * (mid)) return true;\n  return false;\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> n;\n  summ = 0;\n  sums.push_back(summ);\n  for (long long i = 0; i < n; i++) {\n    cin >> ai;\n    summ += ai;\n    sums.push_back(summ);\n    data.push_back(ai);\n  }\n  if (data[0] == 1000)\n    prevs.push_back(0);\n  else\n    prevs.push_back(-1);\n  for (long long i = 0; i < n; i++) {\n    nexts.push_back(-1);\n  }\n  if (data[n - 1] == 1000)\n    nexts[n - 1] = n - 1;\n  else\n    nexts[n - 1] = -1;\n  for (long long i = 1; i < n; i++) {\n    if (data[i] == 1000)\n      prevs.push_back(i);\n    else\n      prevs.push_back(prevs[i - 1]);\n  }\n  for (long long i = n - 2; i >= 0; i--) {\n    if (data[i] == 1000)\n      nexts[i] = i;\n    else\n      nexts[i] = nexts[i + 1];\n  }\n  long long left = 0;\n  long long right = summ / 100 + 2;\n  while (right - left > 1) {\n    long long mid = (left + right) / 2;\n    bool res = checker(100 * mid);\n    if (res)\n      left = mid;\n    else\n      right = mid;\n  }\n  cout << summ - left * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 7, inf = 1e9 + 7;\nint a[N], dp[2][50], now, n;\nvoid gmin(int &a, int b) {\n  if (a > b) a = b;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", a + i), a[i] /= 100;\n  now = 0;\n  for (int i = 1; i <= 40; ++i) dp[now][i] = inf;\n  for (int i = 1; i <= n; ++i) {\n    now ^= 1;\n    for (int j = 0; j <= 40; ++j) dp[now][j] = inf;\n    for (int j = 0; j <= 40; ++j) {\n      gmin(dp[now][j + a[i] / 10], dp[now ^ 1][j] + a[i]);\n      gmin(dp[now][j - a[i] + max(a[i] - j, 0)],\n           dp[now ^ 1][j] + max(a[i] - j, 0));\n    }\n  }\n  int ans = inf;\n  for (int i = 0; i <= 40; ++i) gmin(ans, dp[now][i]);\n  printf(\"%d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 300000 + 10;\nconst int MAXY = 40;\nint N;\nlong long DP[MAXN][MAXY + 1];\nvoid Work() {\n  scanf(\"%d\", &N);\n  memset(DP, 1, sizeof(DP));\n  DP[0][0] = 0;\n  for (int i = 1; i <= N; i++) {\n    int ai, add;\n    scanf(\"%d\", &ai);\n    ai = ai / 100;\n    add = ai / 10;\n    for (int j = 0; j <= MAXY; j++) {\n      if (j + add <= MAXY)\n        DP[i][j + add] = min(DP[i][j + add], DP[i - 1][j] + ai);\n      int use = min(j, ai);\n      DP[i][j - use] = min(DP[i][j - use], DP[i - 1][j] + ai - use);\n    }\n  }\n  long long Ans = 10000000000000000LL;\n  for (int j = 0; j <= MAXY; j++) Ans = min(Ans, DP[N][j] * 100LL);\n  printf(\"%I64d\\n\", Ans);\n}\nint main() {\n  Work();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  vector<long long> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  long long res = 1LL << 55;\n  vector<long long> psum(n + 1);\n  for (int i = 0; i < n; i++) psum[i + 1] = psum[i] + a[i];\n  for (int i = 0; i <= n; i++) {\n    long long p0 = psum[i];\n    long long p1 = max(0LL, psum[n] - psum[i] - p0 / 10);\n    res = min(res, p0 + p1);\n  }\n  int last = -1;\n  for (int i = 0; i <= n; i++) {\n    long long p0 = ((last == -1) ? 0LL : psum[last]) - psum[0];\n    long long p1 = max(0LL, 1000 - p0 / 10);\n    long long p2 = psum[i] - psum[last + 1];\n    long long p3 =\n        max(0LL, psum[n] - psum[i] - (p0 / 10 - (1000 - p1) + p2 / 10));\n    if (last >= 0) res = min(res, p0 + p1 + p2 + p3);\n    if (i < n && a[i] == 1000) last = i;\n  }\n  vector<int> nex(n + 1, n);\n  for (int i = n - 1; i >= 0; i--) {\n    nex[i] = nex[i + 1];\n    if (a[i] == 1000) nex[i] = i;\n  }\n  for (int i = 0; i <= n; i++) {\n    if (nex[i] == n) break;\n    long long p0 = psum[i];\n    long long p1 = max(0LL, psum[nex[i]] - psum[i] - p0 / 10);\n    long long p2 = 1000;\n    long long p3 =\n        max(0LL, psum[n] - psum[nex[i] + 1] -\n                     (p0 / 10 - (psum[nex[i]] - psum[i] - p1) + p2 / 10));\n    res = min(res, p0 + p1 + p2 + p3);\n  }\n  cout << res << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class P, class Q>\ninline void smin(P &a, Q b) {\n  if (b < a) a = b;\n}\ntemplate <class P, class Q>\ninline void smax(P &a, Q b) {\n  if (a < b) a = b;\n}\nconst int maxn = 300000 + 100;\nint n;\nint a[maxn], s[maxn];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 0, i__n = (int)(n); i < i__n; ++i)\n    cin >> a[i], s[i + 1] = s[i] + a[i];\n  int f = s[n] / 11 / 100;\n  int pos = lower_bound(s, s + n + 1, f * 1000) - s;\n  if (s[pos] > f * 1000 && pos == n) f--;\n  cout << s[n] - f * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint Stv[1 << 8];\ninline int read() {\n  int f = 1, res = 0, ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') res = res * 10 + ch - 48, ch = getchar();\n  return f * res;\n}\nint n, f[2][35];\nint main() {\n  n = read();\n  memset(f, 127, sizeof(f));\n  int INF = f[0][0];\n  f[0][0] = 0;\n  int now, pre;\n  for (int i = 1, _Lim = n; i <= _Lim; i++) {\n    now = i & 1, pre = now ^ 1;\n    memset(f[now], 127, sizeof(f[now]));\n    int val = read() / 100, tik = val / 10;\n    for (int j = 0, _Lim = 30 - tik; j <= _Lim; j++)\n      f[now][j + tik] = min(f[now][j + tik], f[pre][j] + val);\n    for (int j = 0, _Lim = 30; j <= _Lim; j++)\n      f[now][j - min(j, val)] =\n          min(f[now][j - min(j, val)], f[pre][j] + val - min(j, val));\n  }\n  int Ans = INF;\n  for (int i = 0, _Lim = 30; i <= _Lim; i++) Ans = min(Ans, f[now][i]);\n  printf(\"%d\\n\", Ans * 100);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 3e5;\nlong long n, a[N], dp[N][40];\nvoid solveTestCase() {\n  for (long long i = 0; i < N; i++) {\n    for (long long j = 0; j < 40; j++) dp[i][j] = 1e18;\n  }\n  cin >> n;\n  for (long long i = 0; i < n; i++) cin >> a[i];\n  if (a[0] == 1000)\n    dp[0][1] = 1000;\n  else\n    dp[0][2] = 2000;\n  for (long long i = 1; i < n; i++) {\n    if (a[i] == 1000) {\n      for (long long j = 1; j < 40; j++) dp[i][j] = dp[i - 1][j - 1] + 1000;\n      for (long long j = 0; j < 30; j++)\n        dp[i][j] = min(dp[i][j], dp[i - 1][j + 10]);\n      for (long long j = 1; j <= 10; j++)\n        dp[i][0] = min(dp[i][0], dp[i - 1][j] + 1000 - j * 100);\n    } else {\n      for (long long j = 2; j < 40; j++) dp[i][j] = dp[i - 1][j - 2] + 2000;\n      for (long long j = 0; j < 20; j++)\n        dp[i][j] = min(dp[i][j], dp[i - 1][j + 20]);\n      for (long long j = 1; j <= 20; j++)\n        dp[i][0] = min(dp[i][0], dp[i - 1][j] + 2000 - j * 100);\n    }\n  }\n  cout << min({dp[n - 1][0], dp[n - 1][1], dp[n - 1][2]});\n}\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  long long t = 1;\n  while (t--) solveTestCase();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 300005;\nint n;\nlong long a[MAXN], dp[MAXN][35];\ninline void chkmin(long long& x, long long y) {\n  if (y < x) x = y;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (long long i = 0; i < n; i++) {\n    scanf(\"%lld\", &a[i]);\n  }\n  memset(dp, 127 / 2, sizeof(dp));\n  dp[0][0] = 0;\n  for (long long i = 0; i < n; i++) {\n    for (long long j = 0; j <= 30; j++) {\n      chkmin(dp[i + 1][j + a[i] / 1000], dp[i][j] + a[i]);\n      chkmin(dp[i + 1][j - min(j, a[i] / 100)],\n             dp[i][j] + a[i] - 100 * min(j, a[i] / 100));\n    }\n  }\n  long long ans = LLONG_MAX;\n  for (long long j = 0; j <= 30; j++) {\n    ans = min(ans, dp[n][j]);\n  }\n  printf(\"%lld\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar ch;\nint n, a[300002];\nlong long f[300002][41], ans;\ninline void read(int &x) {\n  x = 0;\n  do {\n    ch = getchar();\n  } while (ch < '0' || '9' < ch);\n  do {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  } while ('0' <= ch && ch <= '9');\n}\ninline void read(long long &x) {\n  x = 0;\n  do {\n    ch = getchar();\n  } while (ch < '0' || '9' < ch);\n  do {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  } while ('0' <= ch && ch <= '9');\n}\ninline void updata(long long &x, const long long &y) { x = min(x, y); }\nint main(void) {\n  read(n);\n  for (int i = (1); i <= (n); i++) read(a[i]), a[i] /= 100;\n  memset(f, 0x3f, sizeof(f));\n  f[0][0] = 0;\n  for (int i = 0; i < (n); i++)\n    for (int j = 0; j < (41); j++) {\n      if (j + a[i + 1] / 10 <= 40)\n        updata(f[i + 1][j + a[i + 1] / 10], f[i][j] + a[i + 1]);\n      updata(f[i + 1][max(0, j - a[i + 1])], f[i][j] + max(0, a[i + 1] - j));\n    }\n  ans = 0x3f3f3f3f;\n  for (int i = 0; i < (41); i++) updata(ans, f[n][i]);\n  cout << ans * 100;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 4, M = 31, INF = 1e9;\nint n, a[N], dp[N][M];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i], a[i] /= 100;\n  for (int i = 0; i <= n; i++)\n    for (int j = 0; j < M; j++) dp[i][j] = INF;\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < M; j++) {\n      dp[i + 1][max(j - a[i + 1], 0)] =\n          min(dp[i][j] + max(a[i + 1] - j, 0), dp[i + 1][max(j - a[i + 1], 0)]);\n      if (j + a[i] / 10 < M)\n        dp[i + 1][j + a[i + 1] / 10] =\n            min(dp[i][j] + a[i + 1], dp[i + 1][j + a[i + 1] / 10]);\n    }\n  cout << dp[n][0] * 100;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar ch;\nint n, a[300002];\nlong long f[300002][41], ans;\ninline void read(int &x) {\n  x = 0;\n  do {\n    ch = getchar();\n  } while (ch < '0' || '9' < ch);\n  do {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  } while ('0' <= ch && ch <= '9');\n}\ninline void read(long long &x) {\n  x = 0;\n  do {\n    ch = getchar();\n  } while (ch < '0' || '9' < ch);\n  do {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  } while ('0' <= ch && ch <= '9');\n}\ninline void updata(long long &x, const long long &y) { x = min(x, y); }\nint main(void) {\n  read(n);\n  for (int i = (1); i <= (n); i++) read(a[i]), a[i] /= 100;\n  memset(f, 0x3f, sizeof(f));\n  f[0][0] = 0;\n  for (int i = 0; i < (n); i++)\n    for (int j = 0; j < (41); j++) {\n      if (j + a[i + 1] / 10 <= 40)\n        updata(f[i + 1][j + a[i + 1] / 10], f[i][j] + a[i + 1]);\n      updata(f[i + 1][max(0, j - a[i + 1])], f[i][j] + max(0, a[i + 1] - j));\n    }\n  ans = 0x3f3f3f3f;\n  for (int i = 0; i < (41); i++) updata(ans, f[n][i]);\n  printf(\"%d\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, sum, ans, aans, now;\nint main() {\n  cin >> n;\n  for (int x = 1; x <= n; x++)\n    cin >> now, sum += now / 1000, ans += (now == 1000);\n  if (sum <= 11)\n    aans = sum - now / 1000;\n  else\n    aans = sum * 10 / 11;\n  cout << sum * 1000 - (aans - (!ans && aans % 2 == 1)) * 100 << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N;\nint A[303030];\nsigned long long dp[303030][32];\nvoid solve() {\n  int i, j, k, l, r, x, y;\n  string s;\n  scanf(\"%d\", &N);\n  for (i = 0; i < (N); i++) scanf(\"%d\", &A[i]), A[i] /= 100;\n  for (i = 0; i < (N + 1); i++)\n    for (j = 0; j < (32); j++) dp[i][j] = 1LL << 60;\n  dp[0][0] = 0;\n  for (i = 0; i < (N); i++) {\n    for (j = 0; j < (32); j++)\n      if (dp[i][j] < 1LL << 60) {\n        for (int use = 0; use <= min(j, A[i]); use++) {\n          dp[i + 1][j - use] = min(dp[i + 1][j - use], dp[i][j] + A[i] - use);\n        }\n        if (j < 30)\n          dp[i + 1][j + A[i] / 10] =\n              min(dp[i + 1][j + A[i] / 10], dp[i][j] + A[i]);\n      }\n  }\n  signed long long mi = 1LL << 60;\n  for (i = 0; i < (32); i++) mi = min(mi, dp[N][i] * 100);\n  cout << mi << endl;\n}\nint main(int argc, char** argv) {\n  string s;\n  int i;\n  if (argc == 1) ios::sync_with_stdio(false), cin.tie(0);\n  for (i = 0; i < (argc - 1); i++) s += argv[i + 1], s += '\\n';\n  for (i = 0; i < (s.size()); i++) ungetc(s[s.size() - 1 - i], stdin);\n  cout.tie(0);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 7;\nint n, ans;\nint a[N], f[N][35];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  memset(f, 60, sizeof f);\n  ans = f[0][0];\n  f[0][0] = 0;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j <= 30; j++) {\n      f[i + 1][j + a[i] / 1000] =\n          min(f[i + 1][j + a[i] / 1000], f[i][j] + a[i]);\n      f[i + 1][j - min(j, a[i] / 100)] =\n          min(f[i + 1][j - min(j, a[i] / 100)],\n              f[i][j] + a[i] - 100 * min(a[i] / 100, j));\n    }\n  for (int i = 0; i <= 30; i++) ans = min(ans, f[n][i]);\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[300300];\nint total = 0, cnt1 = 0, cnt2 = 0;\nint before[300300];\ninline int countBonus(int x, int y) {\n  return min(x * 100 + y * 200, (cnt1 - x) * 1000 + (cnt2 - y) * 2000);\n}\nint main() {\n  int maxBonus = 0, current;\n  int l, r, mid1, mid2, b1, b2;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    if (a[i] == 1000) {\n      cnt1++;\n      before[cnt1] = cnt2;\n    } else\n      cnt2++;\n    total += a[i];\n  }\n  for (int i = 0; i <= cnt1; i++) {\n    if (i == cnt1 && a[n] == 1000) continue;\n    l = before[max(i - 1, 0)];\n    r = cnt2 - (a[n] == 2000);\n    while (r - l + 1 >= 4) {\n      mid1 = l + (r - l) / 3;\n      mid2 = l + 2 * (r - l) / 3;\n      b1 = countBonus(i, mid1);\n      b2 = countBonus(i, mid2);\n      if (b1 < b2)\n        l = mid1;\n      else\n        r = mid2;\n    }\n    current = 0;\n    for (int j = l; j <= r; j++) current = max(current, countBonus(i, j));\n    maxBonus = max(maxBonus, current);\n  }\n  printf(\"%d\\n\", total - maxBonus);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 10;\nconst long long inf = 1e18;\nint n;\nint a[N];\nint dp[N];\nint dpn[N];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int i = 0; i <= 30; i++) {\n    dp[i] = int(1e9);\n    dpn[i] = int(1e9);\n  }\n  dp[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j <= 30; j++) {\n      dpn[j + a[i] / 1000] = min(dpn[j + a[i] / 1000], dp[j] + a[i]);\n      int jj = min(a[i] / 100, j);\n      dpn[j - jj] = min(dpn[j - jj], dp[j] + a[i] - jj * 100);\n    }\n    for (int j = 0; j <= 30; j++) {\n      dp[j] = dpn[j];\n      dpn[j] = int(1e9);\n    }\n  }\n  int ans = int(1e9);\n  for (int i = 0; i <= 30; i++) {\n    ans = min(ans, dp[i]);\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXD = 31;\nint n, a[300005];\nlong long f[300005][MAXD + 5];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; ++i) a[i] /= 100;\n  for (int i = 0; i <= n; ++i)\n    for (int j = 0; j <= MAXD; ++j) f[i][j] = 1e18;\n  f[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 0; j <= MAXD; ++j) {\n      if (f[i - 1][j] == 1e18) continue;\n      if (j >= a[i])\n        f[i][j - a[i]] = min(f[i][j - a[i]], f[i - 1][j]);\n      else\n        f[i][0] = min(f[i][0], f[i - 1][j] + (a[i] - j) * 100);\n      f[i][min(j + a[i] / 10, MAXD)] =\n          min(f[i][min(j + a[i] / 10, MAXD)], f[i - 1][j] + a[i] * 100);\n    }\n  }\n  long long ans = 1e18;\n  for (int i = 0; i <= MAXD; ++i) ans = min(ans, f[n][i]);\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n  char ch = getchar();\n  int x = 0, op = 1;\n  while (ch < '0' || '9' < ch) {\n    if (ch == '-') op = -1;\n    ch = getchar();\n  }\n  while ('0' <= ch && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n    int x = 0;\n  }\n  return op * x;\n}\nconst int maxn = 300009;\nint f[maxn][35], a[maxn], n, ans = 2e9;\nvoid update(int &a, int b) {\n  if (b < a) a = b;\n}\nint main() {\n  n = read();\n  for (int i = (1); i <= (n); i++) {\n    a[i] = read();\n    a[i] /= 100;\n  }\n  memset(f, 0x3f, sizeof f);\n  f[0][0] = 0;\n  for (int i = (0); i <= (n); i++)\n    for (int j = (0); j <= (31); j++) {\n      if (j + a[i] / 10 <= 31)\n        update(f[i + 1][j + a[i + 1] / 10], f[i][j] + a[i + 1]);\n      if (j >= a[i + 1])\n        update(f[i + 1][j - a[i + 1]], f[i][j]);\n      else\n        update(f[i + 1][0], f[i][j] + a[i + 1] - j);\n    }\n  for (int i = (0); i <= (31); i++) update(ans, f[n][i]);\n  printf(\"%d00\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename A, typename B>\nbool mini(A &x, const B &y) {\n  if (y < x) {\n    x = y;\n    return true;\n  }\n  return false;\n}\ntemplate <typename A, typename B>\nbool maxi(A &x, const B &y) {\n  if (y > x) {\n    x = y;\n    return true;\n  }\n  return false;\n}\nclass fastio {\n public:\n  fastio() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n  }\n} __fastio;\nlong long a[300500];\nlong long dp[300500][50];\nlong long was[300500][25];\nint main() {\n  long long ans = 0;\n  int n;\n  cin >> n;\n  for (auto i = 0; i < n; i++) cin >> a[i];\n  long long bal = 0;\n  for (auto i = 0; i < n + 1; i++) {\n    for (auto j = 0; j < 50; j++) {\n      dp[i][j] = 1e18;\n    }\n  }\n  dp[0][0] = 0;\n  for (auto i = 0; i < n; i++) {\n    for (auto j = 0; j < 48; j++) {\n      if (j > a[i] / 100) {\n        dp[i + 1][j - a[i] / 100] = min(dp[i + 1][j - a[i] / 100], dp[i][j]);\n      } else {\n        dp[i + 1][0] = min(dp[i + 1][0], dp[i][j] + a[i] - j * 100);\n      }\n      dp[i + 1][j + a[i] / 1000] =\n          min(dp[i + 1][j + a[i] / 1000], dp[i][j] + a[i]);\n    }\n  }\n  ans = 1e18;\n  for (auto j = 0; j < 50; j++) {\n    ans = min(dp[n][j], ans);\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 300005;\nconst long long inf = (1e15);\nlong long f[N][50], n, a[N];\nsigned main() {\n  cin >> n;\n  for (register long long i = (1); i <= (n); ++i) cin >> a[i], a[i] /= 100;\n  memset(f, 0x3f, sizeof(f));\n  f[0][0] = 0;\n  for (register long long i = (1); i <= (n); ++i)\n    for (register long long j = (0); j <= (40); ++j) {\n      if (j + a[i] / 10 <= 40)\n        f[i][j + a[i] / 10] = min(f[i][j + a[i] / 10], f[i - 1][j] + a[i]);\n      f[i][j - min(a[i], j)] =\n          min(f[i][j - min(a[i], j)], f[i - 1][j] + a[i] - min(a[i], j));\n    }\n  long long ans = inf;\n  for (register long long j = (0); j <= (40); ++j) ans = min(ans, f[n][j]);\n  cout << ans * 100ll << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 0, M = 0;\nint read() {\n  char c;\n  int num, f = 1;\n  while (c = getchar(), !isdigit(c))\n    if (c == '-') f = -1;\n  num = c - '0';\n  while (c = getchar(), isdigit(c)) num = num * 10 + c - '0';\n  return num * f;\n}\nint n, f[300009][31];\nvoid up(int &x, int y) { x > y ? x = y : 0; }\nint main() {\n  memset(f, 0x3f, sizeof(f));\n  n = read();\n  int x = read() / 100;\n  f[1][x / 10] = x;\n  for (int i = 1; i < n; i++) {\n    x = read() / 100;\n    for (int j = 0; j <= 30; j++)\n      if (f[i][j] != 0x3f3f3f3f) {\n        if (j + x / 10 <= 30) up(f[i + 1][j + x / 10], f[i][j] + x);\n        if (j >= x)\n          up(f[i + 1][j - x], f[i][j]);\n        else\n          up(f[i + 1][0], f[i][j] + x - j);\n      }\n  }\n  int ans = 0x3f3f3f3f;\n  for (int i = 0; i <= 30; i++) ans = min(ans, f[n][i]);\n  printf(\"%d\\n\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T, class U>\nvoid smin(T &a, U b) {\n  if (a > b) a = b;\n}\nconst long long mod = 1000000007;\nconst int N = 3e5 + 10;\nconst int M = 2e6;\nint n, a[N], dp[N][66];\nint main() {\n  cin >> n;\n  for (int i = 0; i <= n - 1; i++) {\n    scanf(\"%d\", a + i);\n    a[i] /= 100;\n  }\n  memset(dp, 63, sizeof dp);\n  dp[0][0] = 0;\n  for (int i = 0; i < n; ++i)\n    for (int b = 0; b <= 60; ++b) {\n      { smin(dp[i + 1][a[i] / 10 + b], dp[i][b] + a[i]); }\n      {\n        for (int first = 1; first <= min(b, a[i]); ++first)\n          smin(dp[i + 1][b - first], dp[i][b] + a[i] - first);\n      }\n    }\n  int res = mod;\n  for (int b = 0; b <= 60; ++b) smin(res, dp[n][b]);\n  cout << res << \"00\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, tot, tmp, sum, a[5000005];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    if (a[i] == 1000)\n      tot++, sum++;\n    else\n      sum += 2;\n  }\n  int tmp = 10 * sum / 11;\n  if (sum <= 11) tmp = sum - a[n] / 1000;\n  if (!tot && tmp & 1) tmp--;\n  printf(\"%d\\n\", 1000 * sum - tmp * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, sum, tot, ans;\nint a[400400];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", a + i);\n    sum += a[i] / 1000;\n    tot += (a[i] == 1000);\n  }\n  int temp = sum * 10 / 11;\n  if (sum <= 11) temp = sum - a[n] / 1000;\n  if (!tot && temp % 2 == 1) temp--;\n  printf(\"%d\\n\", sum * 1000 - temp * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 3e5 + 5, mod = 1e9 + 7;\nint koszt[31], tmp[31];\nint main() {\n  int a, b, c, d, e, f, g, z, k, n, m, q;\n  scanf(\"%d\", &n);\n  for (a = 1; a <= 30; a++) koszt[a] = 1000000000;\n  while (n--) {\n    scanf(\"%d\", &a);\n    if (a == 1000) {\n      for (b = 0; b <= 30; b++) tmp[b] = 1000000000;\n      for (b = 1; b <= 30; b++) tmp[b] = koszt[b - 1] + 1000;\n      for (b = 0; b <= 30; b++)\n        for (c = b + 1; c <= 30 && c - b <= 10; c++)\n          tmp[b] = min(tmp[b], koszt[c] + 1000 - (c - b) * 100);\n    } else {\n      for (b = 0; b <= 30; b++) tmp[b] = 1000000000;\n      for (b = 2; b <= 30; b++) tmp[b] = koszt[b - 2] + 2000;\n      for (b = 0; b <= 30; b++)\n        for (c = b + 1; c <= 30 && c - b <= 20; c++)\n          tmp[b] = min(tmp[b], koszt[c] + 2000 - (c - b) * 100);\n    }\n    for (b = 0; b <= 30; b++) koszt[b] = tmp[b];\n  }\n  b = koszt[0];\n  for (a = 1; a <= 30; a++) b = min(b, koszt[a]);\n  printf(\"%d\", b);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PushbackInputStream;\nimport java.math.BigDecimal;\n\n/**\n * Created by Administrator on 2017/9/21.\n */\npublic class MichaelAndChargingStations {\n    int totalDay; //The total day number\n    int[] costs; //The cost for each day\n    int[] sumUp; //sumUp[i] = cost[i] + cost[i + 1] + ... + cost[totalDay - 1]\n    int[] remain; //remain[i] = remian[0] + remain[1] + ... + remain[i - 1]\n\n    public static void main(String[] args) {\n        MichaelAndChargingStations solution = new MichaelAndChargingStations();\n        solution.init();\n        int result = solution.solve();\n        System.out.println(result);\n    }\n\n    public void init() {\n        try {\n            AcmInputReader input = new AcmInputReader(System.in);\n\n            totalDay = input.nextInteger();\n            costs = new int[totalDay];\n            for (int i = 0; i < totalDay; i++) {\n                costs[i] = input.nextInteger();\n            }\n\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    public int solve() {\n        remain = new int[totalDay];\n        sumUp = new int[totalDay + 1];\n\n        remain[0] = 0;\n        for (int i = 0, bound = totalDay - 1; i < bound; i++) {\n            remain[i + 1] = remain[i] + costs[i] / 10;\n        }\n        sumUp[totalDay] = 0;\n        for (int i = totalDay - 1; i >= 0; i--) {\n            sumUp[i] = sumUp[i + 1] + costs[i];\n        }\n\n        int maxConsume = 0;\n\n\n        int h1, h2;\n\n        //Try H1 < H2\n        h1 = preIndex(1000, totalDay);\n        h2 = totalDay;\n        while (h1 >= 0) {\n            int allowed = maxAllowedUse(h1, h2);\n            if (allowed < 0) {\n                break;\n            }\n\n            maxConsume = Math.max(maxConsume, allowed + sumUp[h2]);\n\n            h2--;\n            if (h2 == h1) {\n                h1 = preIndex(1000, h1);\n            }\n        }\n\n        //Try H2 < H1\n        int h1before = preIndex(1000, totalDay);\n        h2 = preIndex(2000, totalDay);\n        h1 = totalDay;\n        while (h2 >= 0) {\n            if (h1before > h2) {\n                h1 = h1before;\n                h1before = preIndex(1000, h1before);\n                continue;\n            }\n\n            int allowed;\n            allowed = maxAllowedUseWithInterval(h2, h1);\n            if (allowed < 0) {\n                break;\n            }\n            maxConsume = Math.max(maxConsume, allowed + sumOf(h2 + 1, h1) + sumOf(h1 + 1, totalDay));\n\n            allowed = maxAllowedUseWithInterval(h2, totalDay);\n            if (allowed >= 0) {\n                maxConsume = Math.max(maxConsume, allowed + sumOf(h2 + 1, totalDay));\n            }\n\n            h2 = preIndex(2000, h2);\n        }\n\n        return sumUp[0] - maxConsume;\n    }\n\n    /**\n     * This function calculate a model that from day blockstart, we use enough bonus to feed the cost.\n     * And the day index is the only day before blockStart that use bonus, so how many bonus day index can use?\n     */\n    int maxAllowedUse(int index, int blockStart) {\n        if (blockStart >= totalDay) {\n            return Math.min(remain[index], costs[index]);\n        }\n        return Math.min(Math.min(remain[blockStart] - (sumUp[blockStart] + costs[index] / 10), remain[index]), costs[index]);\n    }\n\n    /**\n     * A simple function to sum up costs[from], cost[from + 1], ... , costs[to -1]\n     */\n    int sumOf(int from, int to) {\n        if (from >= to) {\n            return 0;\n        }\n        return sumUp[from] - sumUp[to];\n    }\n\n    /**\n     * This function solve a problem, that all the day from index except day interval all use bouns, and all the day use bonus feed the cost other than day index.\n     * So how many bonus day index can use?\n     */\n    int maxAllowedUseWithInterval(int index, int interval) {\n        if (interval >= totalDay) {\n            return Math.min(remain[index] - sumUp[index + 1], costs[index]);\n        }\n        return Math.min(Math.min(remain[index], remain[index] + costs[interval] / 10 - sumUp[interval + 1]) - sumOf(index + 1, interval), costs[index]);\n    }\n\n    int preIndex(int val, int cur) {\n        int i;\n        for (i = cur - 1; i >= 0 && costs[i] != val; i--) ;\n        return i;\n    }\n\n    /**\n     * @author dalt\n     * @see java.lang.AutoCloseable\n     * @since java1.7\n     */\n    static class AcmInputReader implements AutoCloseable {\n        private PushbackInputStream in;\n\n        /**\n         * \u521b\u5efa\u8bfb\u53d6\u5668\n         *\n         * @param input \u8f93\u5165\u6d41\n         */\n        public AcmInputReader(InputStream input) {\n            in = new PushbackInputStream(new BufferedInputStream(input));\n        }\n\n        @Override\n        public void close() throws IOException {\n            in.close();\n        }\n\n        private int nextByte() throws IOException {\n            return in.read() & 0xff;\n        }\n\n        /**\n         * \u5982\u679c\u4e0b\u4e00\u4e2a\u5b57\u8282\u4e3ab\uff0c\u5219\u8df3\u8fc7\u8be5\u5b57\u8282\n         *\n         * @param b \u88ab\u8df3\u8fc7\u7684\u5b57\u8282\u503c\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public void skipByte(int b) throws IOException {\n            int c;\n            if ((c = nextByte()) != b) {\n                in.unread(c);\n            }\n        }\n\n        /**\n         * \u5982\u679c\u540e\u7eedk\u4e2a\u5b57\u8282\u5747\u4e3ab\uff0c\u5219\u8df3\u8fc7k\u4e2a\u5b57\u8282\u3002\u8fd9\u91cc{@literal k<times}\n         *\n         * @param b     \u88ab\u8df3\u8fc7\u7684\u5b57\u8282\u503c\n         * @param times \u8df3\u8fc7\u6b21\u6570\uff0c-1\u8868\u793a\u65e0\u7a77\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public void skipByte(int b, int times) throws IOException {\n            int c;\n            while ((c = nextByte()) == b && times > 0) {\n                times--;\n            }\n            if (c != b) {\n                in.unread(c);\n            }\n        }\n\n        /**\n         * \u7c7b\u4f3c\u4e8e{@link #skipByte(int, int)}, \u4f46\u662f\u4f1a\u8df3\u8fc7\u4e2d\u95f4\u51fa\u73b0\u7684\u7a7a\u767d\u5b57\u7b26\u3002\n         *\n         * @param b     \u88ab\u8df3\u8fc7\u7684\u5b57\u8282\u503c\n         * @param times \u8df3\u8fc7\u6b21\u6570\uff0c-1\u8868\u793a\u65e0\u7a77\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public void skipBlankAndByte(int b, int times) throws IOException {\n            int c;\n            skipBlank();\n            while ((c = nextByte()) == b && times > 0) {\n                times--;\n                skipBlank();\n            }\n            if (c != b) {\n                in.unread(c);\n            }\n        }\n\n        /**\n         * \u8bfb\u53d6\u4e0b\u4e00\u5757\u4e0d\u542b\u7a7a\u767d\u5b57\u7b26\u7684\u5b57\u7b26\u5757\n         *\n         * @return \u4e0b\u4e00\u5757\u4e0d\u542b\u7a7a\u767d\u5b57\u7b26\u7684\u5b57\u7b26\u5757\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public String nextBlock() throws IOException {\n            skipBlank();\n            StringBuilder sb = new StringBuilder();\n            int c = nextByte();\n            while (AsciiMarksLazyHolder.asciiMarks[c = nextByte()] != AsciiMarksLazyHolder.BLANK_MARK) {\n                sb.append((char) c);\n            }\n            in.unread(c);\n            return sb.toString();\n        }\n\n        /**\n         * \u8df3\u8fc7\u8f93\u5165\u6d41\u4e2d\u540e\u7eed\u7a7a\u767d\u5b57\u7b26\n         *\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        private void skipBlank() throws IOException {\n            int c;\n            while ((c = nextByte()) <= 32) ;\n            in.unread(c);\n        }\n\n        /**\n         * \u8bfb\u53d6\u4e0b\u4e00\u4e2a\u6574\u6570\uff08\u53ef\u6b63\u53ef\u8d1f\uff09\uff0c\u8fd9\u91cc\u6ca1\u6709\u5bf9\u6ea2\u51fa\u505a\u5224\u65ad\n         *\n         * @return \u4e0b\u4e00\u4e2a\u6574\u6570\u503c\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public int nextInteger() throws IOException {\n            skipBlank();\n            int value = 0;\n            boolean positive = true;\n            int c = nextByte();\n            if (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.SIGN_MARK) {\n                positive = c == '+';\n            } else {\n                value = '0' - c;\n            }\n            c = nextByte();\n            while (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.NUMERAL_MARK) {\n                value = (value << 3) + (value << 1) + '0' - c;\n                c = nextByte();\n            }\n\n            in.unread(c);\n            return positive ? -value : value;\n        }\n\n        /**\n         * \u5224\u65ad\u662f\u5426\u5230\u4e86\u6587\u4ef6\u7ed3\u5c3e\n         *\n         * @return true\u5982\u679c\u5230\u4e86\u6587\u4ef6\u7ed3\u5c3e\uff0c\u5426\u5219false\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public boolean isMeetEOF() throws IOException {\n            int c = nextByte();\n            if (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.EOF) {\n                return true;\n            }\n            in.unread(c);\n            return false;\n        }\n\n        /**\n         * \u5224\u65ad\u662f\u5426\u5728\u8df3\u8fc7\u7a7a\u767d\u5b57\u7b26\u540e\u62b5\u8fbe\u6587\u4ef6\u7ed3\u5c3e\n         *\n         * @return true\u5982\u679c\u5230\u4e86\u6587\u4ef6\u7ed3\u5c3e\uff0c\u5426\u5219false\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public boolean isMeetBlankAndEOF() throws IOException {\n            skipBlank();\n            int c = nextByte();\n            if (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.EOF) {\n                return true;\n            }\n            in.unread(c);\n            return false;\n        }\n\n        /**\n         * \u83b7\u53d6\u4e0b\u4e00\u4e2a\u7528\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5355\u8bcd\n         *\n         * @return \u4e0b\u4e00\u4e2a\u7528\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5355\u8bcd\n         */\n        public String nextWord() throws IOException {\n            StringBuilder sb = new StringBuilder(16);\n            skipBlank();\n            int c;\n            while ((AsciiMarksLazyHolder.asciiMarks[(c = nextByte())] & AsciiMarksLazyHolder.LETTER_MARK) != 0) {\n                sb.append((char) c);\n            }\n            in.unread(c);\n            return sb.toString();\n        }\n\n        /**\n         * \u8bfb\u53d6\u4e0b\u4e00\u4e2a\u957f\u6574\u6570\uff08\u53ef\u6b63\u53ef\u8d1f\uff09\uff0c\u8fd9\u91cc\u6ca1\u6709\u5bf9\u6ea2\u51fa\u505a\u5224\u65ad\n         *\n         * @return \u4e0b\u4e00\u4e2a\u957f\u6574\u6570\u503c\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public long nextLong() throws IOException {\n            skipBlank();\n            long value = 0;\n            boolean positive = true;\n            int c = nextByte();\n            if (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.SIGN_MARK) {\n                positive = c == '+';\n            } else {\n                value = '0' - c;\n            }\n            c = nextByte();\n            while (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.NUMERAL_MARK) {\n                value = (value << 3) + (value << 1) + '0' - c;\n                c = nextByte();\n            }\n            in.unread(c);\n            return positive ? -value : value;\n        }\n\n        /**\n         * \u8bfb\u53d6\u4e0b\u4e00\u4e2a\u6d6e\u70b9\u6570\uff08\u53ef\u6b63\u53ef\u8d1f\uff09\uff0c\u6d6e\u70b9\u6570\u662f\u8fd1\u4f3c\u503c\n         *\n         * @return \u4e0b\u4e00\u4e2a\u6d6e\u70b9\u6570\u503c\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public float nextFloat() throws IOException {\n            return (float) nextDouble();\n        }\n\n        /**\n         * \u8bfb\u53d6\u4e0b\u4e00\u4e2a\u6d6e\u70b9\u6570\uff08\u53ef\u6b63\u53ef\u8d1f\uff09\uff0c\u6d6e\u70b9\u6570\u662f\u8fd1\u4f3c\u503c\n         *\n         * @return \u4e0b\u4e00\u4e2a\u6d6e\u70b9\u6570\u503c\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public double nextDouble() throws IOException {\n            skipBlank();\n            double value = 0;\n            boolean positive = true;\n            int c = nextByte();\n            if (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.SIGN_MARK) {\n                positive = c == '+';\n            } else {\n                value = c - '0';\n            }\n            c = nextByte();\n            while (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.NUMERAL_MARK) {\n                value = value * 10.0 + c - '0';\n                c = nextByte();\n            }\n\n            if (c == '.') {\n                double littlePart = 0;\n                double base = 1;\n                c = nextByte();\n                while (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.NUMERAL_MARK) {\n                    littlePart = littlePart * 10.0 + c - '0';\n                    base *= 10.0;\n                    c = nextByte();\n                }\n                value += littlePart / base;\n            }\n            in.unread(c);\n            return positive ? value : -value;\n        }\n\n        /**\n         * \u8bfb\u53d6\u4e0b\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u6570\u503c\n         *\n         * @return \u4e0b\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u6570\u503c\n         * @throws IOException if \u8f93\u5165\u6d41\u8bfb\u53d6\u9519\u8bef\n         */\n        public BigDecimal nextDecimal() throws IOException {\n            skipBlank();\n            StringBuilder sb = new StringBuilder();\n            sb.append((char) nextByte());\n            int c = nextByte();\n            while (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.NUMERAL_MARK) {\n                sb.append((char) c);\n                c = nextByte();\n            }\n            if (c == '.') {\n                sb.append('.');\n                c = nextByte();\n                while (AsciiMarksLazyHolder.asciiMarks[c] == AsciiMarksLazyHolder.NUMERAL_MARK) {\n                    sb.append((char) c);\n                    c = nextByte();\n                }\n            }\n            in.unread(c);\n            return new BigDecimal(sb.toString());\n        }\n\n        private static class AsciiMarksLazyHolder {\n            public static final byte BLANK_MARK = 1;\n            public static final byte SIGN_MARK = 1 << 1;\n            public static final byte NUMERAL_MARK = 1 << 2;\n            public static final byte UPPERCASE_LETTER_MARK = 1 << 3;\n            public static final byte LOWERCASE_LETTER_MARK = 1 << 4;\n            public static final byte LETTER_MARK = UPPERCASE_LETTER_MARK | LOWERCASE_LETTER_MARK;\n            public static final byte EOF = 1 << 5;\n            public static byte[] asciiMarks = new byte[256];\n\n            static {\n                for (int i = 0; i <= 32; i++) {\n                    asciiMarks[i] = BLANK_MARK;\n                }\n                asciiMarks['+'] = SIGN_MARK;\n                asciiMarks['-'] = SIGN_MARK;\n                for (int i = '0'; i <= '9'; i++) {\n                    asciiMarks[i] = NUMERAL_MARK;\n                }\n                for (int i = 'a'; i <= 'z'; i++) {\n                    asciiMarks[i] = LOWERCASE_LETTER_MARK;\n                }\n                for (int i = 'A'; i <= 'Z'; i++) {\n                    asciiMarks[i] = UPPERCASE_LETTER_MARK;\n                }\n                asciiMarks[0xff] = EOF;\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid debug(T a, T b) {\n  ;\n}\ntemplate <class T>\nvoid chmin(T& a, const T& b) {\n  if (a > b) a = b;\n}\ntemplate <class T>\nvoid chmax(T& a, const T& b) {\n  if (a < b) a = b;\n}\nnamespace std {\ntemplate <class S, class T>\nostream& operator<<(ostream& out, const pair<S, T>& a) {\n  out << '(' << a.first << ',' << a.second << ')';\n  return out;\n}\n}  // namespace std\nconst int INF = 7e8;\nint n;\nint ar[300005];\nint sum[300005];\nvector<int> Tpos, Opos;\nint solve1(int a, int b, int A, int B) {\n  if (B == INF) return INF;\n  if (b == INF) return INF;\n  int Tlen = B - b;\n  int tmp = sum[b] * 1000;\n  int pt = sum[b] * 100;\n  int Trange = Tlen * 2000;\n  tmp += max(0, Trange - pt);\n  pt -= min(Trange, pt);\n  tmp += 1000;\n  pt += 100;\n  int rest = (sum[n] - sum[B + 1]) * 1000;\n  tmp += max(0, rest - pt);\n  return tmp;\n}\nint solve2(int a, int b, int A, int B) {\n  if (a == -1) return INF;\n  if (A == -1) return INF;\n  int Tlen = a - A;\n  int tmp = sum[A] * 1000;\n  int pt = sum[A] * 100;\n  tmp += max(0, 1000 - pt);\n  pt -= min(pt, 1000);\n  int Trange = Tlen * 2000;\n  tmp += Trange;\n  pt += Tlen * 200;\n  int rest = (sum[n] - sum[a + 1]) * 1000;\n  tmp += max(0, rest - pt);\n  return tmp;\n}\nint main() {\n  cin >> n;\n  Opos.push_back(-1);\n  Tpos.push_back(-1);\n  for (int i = 0; i < (n); ++i) {\n    int a;\n    scanf(\"%d\", &a);\n    ar[i] = a / 1000;\n    if (ar[i] == 1)\n      Opos.push_back(i);\n    else\n      Tpos.push_back(i);\n  }\n  Tpos.push_back(INF);\n  Opos.push_back(INF);\n  for (int i = 0; i < (n); ++i) sum[i + 1] = sum[i] + ar[i];\n  int res = INF;\n  for (int i = 0; i < (n + 1); ++i) {\n    int tmp = sum[i] * 1000;\n    int pt = sum[i] * 100;\n    int rest = (sum[n] - sum[i]) * 1000;\n    tmp += max(0, rest - pt);\n    chmin(res, tmp);\n  }\n  int prev = res;\n  for (int i = 0; i < ((int)Tpos.size() - 1); ++i) {\n    int a = Tpos[i], b = Tpos[i + 1];\n    int B = *lower_bound((Opos).begin(), (Opos).end(), b);\n    int A = *(--lower_bound((Opos).begin(), (Opos).end(), a));\n    int X = solve1(a, b, A, B);\n    int Y = solve2(a, b, A, B);\n    chmin(res, X);\n    chmin(res, Y);\n  }\n  cout << res << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 10;\nconst int INF = 0x3f3f3f3f;\nint n, pos1Size = 0, pos2Size = 0;\nint ar[N], pos1[N], pos2[N];\nstruct Node {\n  int S, M;\n  Node() {}\n  Node(int S, int M) : S(S), M(M) {}\n};\nNode st[3 * N];\nvoid Update(int k, int v) {\n  k += (1 << 19);\n  st[k] = Node(v, v);\n  while (k > 1) {\n    k >>= 1;\n    st[k].M = min(st[k << 1].M, st[k << 1].S + st[k << 1 | 1].M);\n    st[k].S = st[k << 1].S + st[k << 1 | 1].S;\n  }\n}\nbool Check(int m) {\n  int p1 = 0, p2 = 0;\n  for (int i = 1; i <= n; ++i) Update(i, -ar[i]);\n  int a = 0;\n  int b = (m - 1000 * a) / 2000;\n  b = min(b, pos2Size);\n  while (p2 + 1 <= b && p2 + 1 <= pos2Size) {\n    Update(pos2[p2 + 1], 200);\n    ++p2;\n  }\n  int cost = (m - 1000 * a - 2000 * b);\n  Update(0, cost);\n  if (st[1].M >= 0) return true;\n  for (int a = 1; a <= pos1Size; ++a) {\n    if (m < 1000 * a) return false;\n    int b = (m - 1000 * a) / 2000;\n    b = min(b, pos2Size);\n    int cost = (m - 1000 * a - 2000 * b);\n    Update(0, cost);\n    while (p1 + 1 <= a && p1 + 1 <= pos1Size) {\n      Update(pos1[p1 + 1], 100);\n      ++p1;\n    }\n    while (p2 > b && p2 > 0) {\n      Update(pos2[p2], -ar[pos2[p2]]);\n      --p2;\n    }\n    if (st[1].M >= 0) return true;\n  }\n  return false;\n}\nvoid Read(int &n) {\n  n = 0;\n  char c;\n  do {\n    c = getchar();\n  } while (!isdigit(c));\n  do {\n    n = n * 10 + c - 48;\n    c = getchar();\n  } while (isdigit(c));\n}\nint main() {\n  Read(n);\n  for (int i = 1; i <= n; ++i) Read(ar[i]);\n  for (int i = 1; i <= n; ++i)\n    if (ar[i] == 1000)\n      pos1[++pos1Size] = i;\n    else\n      pos2[++pos2Size] = i;\n  int l = 1, r = 2000 * N, f = -1;\n  while (l <= r) {\n    int m = (l + r) >> 1;\n    if (Check(m) == true) {\n      f = m;\n      r = m - 1;\n    } else\n      l = m + 1;\n  }\n  printf(\"%d\", f);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid addmod(int &a, long long b) {\n  a = (a + b);\n  if (a >= 1000000007) a -= 1000000007;\n}\nvoid mulmod(int &a, long long b) { a = (a * b) % 1000000007; }\ntemplate <class T>\nbool domin(T &a, const T &b) {\n  return a > b ? a = b, 1 : 0;\n}\ntemplate <class T>\nbool domax(T &a, const T &b) {\n  return a < b ? a = b, 1 : 0;\n}\nint gi() {\n  int a;\n  scanf(\"%d\", &a);\n  return a;\n}\nlong long gll() {\n  long long a;\n  scanf(\"%lld\", &a);\n  return a;\n}\nint ans[2][1007];\nint main() {\n  int v = 1000000007;\n  fill_n(ans[0], 1007, v);\n  fill_n(ans[1], 1007, v);\n  ans[0][0] = 0;\n  int n = gi(), ix, nx;\n  for (int i = 0; i < n; i++) {\n    int x = gi() / 100;\n    int bo = x / 10;\n    ix = (i & 1);\n    nx = ix ^ 1;\n    fill_n(ans[nx], 1007, v);\n    for (int j = 0; j < 1007; j++)\n      if (ans[ix][j] < 1000000007) {\n        if (j < x) {\n          domin(ans[nx][j + bo], ans[ix][j] + x);\n          domin(ans[nx][0], ans[ix][j] + x - j);\n        } else if (j < 1007 - 100) {\n          domin(ans[nx][j - x], ans[ix][j]);\n          domin(ans[nx][j + bo], ans[ix][j] + x);\n        } else {\n          domin(ans[nx][j - x], ans[ix][j]);\n        }\n      }\n  }\n  int fa = 1000000007;\n  for (int i = 0; i < 1007; i++) {\n    domin(fa, ans[nx][i]);\n  }\n  cout << fa * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXC = 305;\nconst int MAXN = 300005;\nconst int INF = 1000000000;\nint A[MAXN], dp[2][MAXC];\nint main(int argc, char const *argv[]) {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &A[i]);\n    A[i] /= 100;\n  }\n  for (int i = 0; i < MAXC; ++i) {\n    dp[0][i] = dp[1][i] = INF;\n  }\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    int curr = i % 2, prev = (i + 1) % 2;\n    for (int j = 0; j < MAXC; ++j) {\n      int nv = j + A[i] / 10;\n      if (nv < MAXC) {\n        dp[curr][nv] = min(dp[curr][nv], dp[prev][j] + A[i]);\n      }\n      int to_sub = min(j, A[i]);\n      nv = j - to_sub;\n      dp[curr][nv] = min(dp[curr][nv], dp[prev][j] + A[i] - to_sub);\n      dp[prev][j] = INF;\n    }\n  }\n  int ans = INF;\n  for (int i = 0; i < MAXC; ++i) {\n    ans = min(ans, dp[n % 2][i]);\n  }\n  printf(\"%d\\n\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nbool chkmax(T &x, T y) {\n  return x < y ? x = y, true : false;\n}\ntemplate <typename T>\nbool chkmin(T &x, T y) {\n  return x > y ? x = y, true : false;\n}\nint readint() {\n  int x = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nint n;\nlong long a[300005], s[300005], lst[300005];\nint main() {\n  n = readint();\n  for (int i = 1; i <= n; i++) a[i] = readint();\n  for (int i = 1; i <= n; i++) s[i] = s[i - 1] + a[i];\n  for (int i = 1; i <= n; i++) {\n    lst[i] = lst[i - 1];\n    if (a[i] == 1000) lst[i] = i;\n  }\n  long long ans = 1ll << 60;\n  for (int i = 1; i <= n; i++) {\n    long long tmp = s[i], now = s[i] / 10;\n    chkmin(ans, tmp + max(0ll, s[n] - s[i] - now));\n    if (a[i] == 1000) {\n      for (int j = i - 1; j >= 1; j--) {\n        if (a[j] != 2000) break;\n        tmp = s[j - 1] + 1000, now = (s[j - 1] + 1000) / 10;\n        if (s[j - 1] / 10 >= 2000ll * (i - j))\n          now -= 2000ll * (i - j);\n        else\n          tmp += 2000ll * (i - j) - s[j - 1] / 10, now -= s[j - 1] / 10;\n        chkmin(ans, tmp + max(0ll, s[n] - s[i] - now));\n      }\n    } else {\n      int pl = lst[i];\n      if (!pl) continue;\n      tmp = s[i] - 1000, now = (s[i] - 1000) / 10;\n      if (s[pl - 1] / 10 >= 1000)\n        now -= 1000;\n      else\n        tmp += 1000 - s[pl - 1] / 10, now -= s[pl - 1] / 10;\n      chkmin(ans, tmp + max(0ll, s[n] - s[i] - now));\n    }\n  }\n  printf(\"%lld\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nconst int MAXN = 300000;\nint n;\nint a[MAXN];\nint dp[MAXN + 1][31];\nvoid upd(int &a, int b) {\n  if (a == -1 || b > a) a = b;\n}\nvoid run() {\n  scanf(\"%d\", &n);\n  for (int i = (0); i < (n); ++i) scanf(\"%d\", &a[i]);\n  int sum = 0;\n  for (int i = (0); i < (n); ++i) sum += a[i];\n  memset(dp, -1, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = (0); i < (n); ++i)\n    for (int j = (0); j <= (30); ++j)\n      if (dp[i][j] != -1) {\n        int x = a[i] / 1000;\n        if (j + x <= 30) upd(dp[i + 1][j + x], dp[i][j]);\n        int d = min(10 * x, j);\n        upd(dp[i + 1][j - d], dp[i][j] + d);\n      }\n  int mx = -1;\n  for (int j = (0); j <= (30); ++j) upd(mx, dp[n][j]);\n  int ret = sum - 100 * mx;\n  printf(\"%d\\n\", ret);\n}\nint main() {\n  run();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline long long read() {\n  char ch = getchar();\n  long long x = 0, f = 1;\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nlong long n, ans = (1ll << 60), f[300005][35];\nint main() {\n  n = read();\n  memset(f, 7, sizeof f);\n  f[0][0] = 0;\n  for (long long i = 0; i <= n - 1; ++i) {\n    long long x = read() / 100;\n    for (long long j = 0; j <= 31; ++j)\n      f[i + 1][j + x / 10] = min(f[i + 1][j + x / 10], f[i][j] + x);\n    for (long long j = 1; j <= 31; ++j)\n      f[i + 1][j - min(x, j)] =\n          min(f[i + 1][j - min(x, j)], f[i][j] + x - min(x, j));\n  }\n  for (long long i = 0; i <= 31; ++i) ans = min(ans, f[n][i]);\n  printf(\"%lld\\n\", ans * 100);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long linf = 1e18 + 5;\nint mod = (int)1e9 + 7;\nconst int logN = 18;\nconst int inf = 1e9 + 9;\nconst int N = 4e5 + 6;\nint dp[N][105], a[N], n;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int x = n; x >= 1; x--) {\n    for (int got = 50; got >= 0; got--) {\n      dp[x][got] = dp[x + 1][got + a[x] / 1000] + a[x];\n      if (got >= a[x] / 100)\n        dp[x][got] = min(dp[x][got], dp[x + 1][got - a[x] / 100]);\n      else\n        dp[x][got] = min(dp[x][got], dp[x + 1][0] + a[x] - got * 100);\n    }\n    for (int got = 51; got <= 100; got++) dp[x][got] = inf;\n  }\n  cout << dp[1][0] << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid getint(int &v) {\n  char ch, fu = 0;\n  for (ch = '*'; (ch < '0' || ch > '9') && ch != '-'; ch = getchar())\n    ;\n  if (ch == '-') fu = 1, ch = getchar();\n  for (v = 0; ch >= '0' && ch <= '9'; ch = getchar()) v = v * 10 + ch - '0';\n  if (fu) v = -v;\n}\nconst int INF = 1e9 + 10;\nint n, a[500010], f[300010][111], ans;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; ++i) getint(a[i]), a[i] /= 100;\n  for (int i = 0; i <= n; ++i)\n    for (int j = 0; j <= 100; ++j) f[i][j] = INF;\n  f[0][0] = 0;\n  for (int i = 0; i <= n - 1; ++i)\n    for (int j = 0; j <= 100; ++j)\n      if (f[i][j] < INF) {\n        f[i + 1][j - min(j, a[i + 1])] =\n            min(f[i + 1][j - min(j, a[i + 1])],\n                f[i][j] + a[i + 1] - min(j, a[i + 1]));\n        f[i + 1][j + a[i + 1] / 10] =\n            min(f[i + 1][j + a[i + 1] / 10], f[i][j] + a[i + 1]);\n      }\n  ans = INF;\n  for (int j = 0; j <= 100; ++j) ans = min(ans, f[n][j]);\n  cout << ans * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e5 + 2;\nint ar[N], num1, num2, n;\nvector<int> pos[2];\nstruct node {\n  int sum, minpre;\n};\nnode it[N << 2];\nvoid tag(int idx, int l, int r) {\n  if (l < r) {\n    it[idx].sum = it[2 * idx].sum + it[2 * idx + 1].sum;\n    it[idx].minpre =\n        min(it[2 * idx].minpre, it[2 * idx].sum + it[2 * idx + 1].minpre);\n  }\n}\nvoid init(int idx, int l, int r) {\n  if (l == r) {\n    it[idx].sum = it[idx].minpre = -ar[l];\n    return;\n  }\n  init(2 * idx, l, (l + r) / 2);\n  init(2 * idx + 1, (l + r) / 2 + 1, r);\n  tag(idx, l, r);\n}\nvoid upd(int idx, int l, int r, int pos1, int val) {\n  if (l > pos1 || r < pos1) {\n    return;\n  }\n  if (l == r) {\n    it[idx].sum = it[idx].minpre = val;\n    return;\n  }\n  upd(2 * idx, l, (l + r) / 2, pos1, val);\n  upd(2 * idx + 1, (l + r) / 2 + 1, r, pos1, val);\n  tag(idx, l, r);\n}\nbool check(int val) {\n  init(1, 1, n);\n  int cnt, sum, now;\n  for (int i = 0; i <= num1; i++) {\n    if (val < i * 1000) {\n      break;\n    }\n    if (i) {\n      upd(1, 1, n, pos[0][i - 1], 100);\n    }\n    if (i == 0) {\n      cnt = min(val / 2000, num2);\n      for (int j = 0; j < cnt; j++) {\n        upd(1, 1, n, pos[1][j], 200);\n      }\n      sum = val - i * 1000 - cnt * 2000;\n      if (sum + it[1].minpre >= 0) {\n        return true;\n      }\n      continue;\n    }\n    now = min((val - i * 1000) / 2000, num2);\n    while (cnt > now) {\n      cnt--;\n      upd(1, 1, n, pos[1][cnt], -2000);\n    }\n    sum = val - i * 1000 - cnt * 2000;\n    if (sum + it[1].minpre >= 0) {\n      return true;\n    }\n  }\n  return false;\n}\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int lef = 0, rig = 6e8, mid, i, j, k, l;\n  cin >> n;\n  num1 = num2 = 0;\n  for (i = 1; i <= n; i++) {\n    cin >> ar[i];\n    if (ar[i] == 1000) {\n      num1++;\n      pos[0].push_back(i);\n    } else {\n      num2++;\n      pos[1].push_back(i);\n    }\n  }\n  while (rig > lef) {\n    mid = (lef + rig) >> 1;\n    if (check(mid)) {\n      rig = mid;\n    } else {\n      lef = mid + 1;\n    }\n  }\n  cout << lef;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005, M = 30;\nint a[N], f[N][M + 5], j, n, i, ans, t;\ninline void up(int& a, int b) {\n  if (!a || a > b) a = b;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (i = 1; i <= n; ++i) scanf(\"%d\", a + i), a[i] /= 100;\n  for (i = 0; i < n; ++i)\n    for (j = 0; j <= M; ++j)\n      if (f[i][j] || (!i && !j)) {\n        up(f[i + 1][j + a[i + 1] / 10], f[i][j] + a[i + 1]);\n        t = min(j, a[i + 1]);\n        up(f[i + 1][j - t], f[i][j] + a[i + 1] - t);\n      }\n  for (i = 0; i <= M; ++i)\n    if (f[n][i]) up(ans, f[n][i]);\n  printf(\"%d\\n\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T, typename U>\ninline void chkmax(T& x, U y) {\n  if (x < y) x = y;\n}\ntemplate <typename T, typename U>\ninline void chkmin(T& x, U y) {\n  if (y < x) x = y;\n}\nint dp[2][60];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= 41; i++) dp[0][i] = -1e9;\n  int sum = 0;\n  for (int i = 1; i <= n; i++) {\n    int x;\n    scanf(\"%d\", &x);\n    x /= 100;\n    sum += x;\n    int now = i & 1;\n    for (int j = 0; j <= 41; j++) dp[now][j] = -1e9;\n    for (int j = 0; j <= 41 - x / 10; j++)\n      chkmax(dp[now][j + x / 10], dp[!now][j]);\n    for (int j = 0; j <= 41; j++)\n      chkmax(dp[now][max(j - x, 0)], dp[!now][j] + min(j, x));\n    for (int j = 40; j >= 0; j--) chkmax(dp[now][j], dp[now][j + 1]);\n  }\n  int ans = 0;\n  for (int j = 0; j <= 41; j++) chkmax(ans, dp[n & 1][j]);\n  cout << (sum - ans) * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 9.2e18;\nconst int maxn = 300007;\nconst int INF = 2.1e9;\nconst int MOD = 1e9 + 7;\nconst double dif = 1e-7;\nconst double PI = 3.14159265358979323846;\nint n, m, k, sum = 0;\nint a[maxn], pre[maxn];\nbool check(int x) {\n  int d = sum - k, s = 0, flag1 = 0, flag2 = 0;\n  if (d > k / 10) return false;\n  int i;\n  for (i = n; i >= 1; i--) {\n    if (s >= d) break;\n    s += a[i];\n    if (a[i] == 10) flag1 = 1;\n    if (a[i] == 20) flag2 = 1;\n  }\n  if (pre[i] >= d * 10)\n    return true;\n  else if (flag1 && s - d >= 10 && d * 10 - pre[i] <= 10)\n    return true;\n  else if (flag2 && d * 10 - pre[i] <= 10) {\n    for (; i >= 1; i--)\n      if (a[i] == 10) return pre[i - 1] >= 100;\n  }\n  return false;\n}\nint main(void) {\n  while (cin >> n) {\n    pre[0] = 0;\n    for (int i = 1; i <= n; i++) {\n      cin >> a[i];\n      a[i] /= 100;\n      pre[i] = pre[i - 1] + a[i];\n    }\n    sum = pre[n];\n    k = sum / 11 * 10;\n    while (!check(k)) k++;\n    cout << k * 100 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005;\nint n, m, ans, two, one, l, r, k, a[N], dp[N][205];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  memset(dp, 127, sizeof(dp));\n  dp[0][0] = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j <= 200; j++)\n      if (dp[i][j] <= 2e8) {\n        if (j + a[i + 1] / 10 <= 200)\n          dp[i + 1][j + a[i + 1] / 10] =\n              min(dp[i + 1][j + a[i + 1] / 10], dp[i][j] + a[i + 1]);\n        if (j >= a[i + 1])\n          dp[i + 1][j - a[i + 1]] = min(dp[i + 1][j - a[i + 1]], dp[i][j]);\n        else\n          dp[i + 1][0] = min(dp[i + 1][0], dp[i][j] + (a[i + 1] - j));\n      }\n  }\n  int ans = 2e9;\n  for (int i = 0; i <= 200; i++) {\n    ans = min(ans, dp[n][i]);\n  }\n  printf(\"%d00\\n\", ans);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n;\nlong long a[300005];\nlong long dp[300005][105];\nint main(void) {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n;\n  for (long long(i) = (1); (i) <= (n); (i)++) cin >> a[i], a[i] /= 100;\n  for (long long(i) = (0); (i) <= (n); (i)++)\n    for (long long(j) = (0); (j) <= (100); (j)++) dp[i][j] = 1e18;\n  dp[0][0] = 0;\n  for (long long(i) = (0); (i) <= (n - 1); (i)++) {\n    for (long long(j) = (0); (j) <= (100); (j)++) {\n      long long x = min(j, a[i + 1]);\n      (dp[i + 1][j - x]) = min((dp[i + 1][j - x]), (dp[i][j] + a[i + 1] - x));\n      if (j + a[i + 1] / 10 <= 100)\n        (dp[i + 1][j + a[i + 1] / 10]) =\n            min((dp[i + 1][j + a[i + 1] / 10]), (dp[i][j] + a[i + 1]));\n    }\n  }\n  long long ans = 1e18;\n  for (long long(i) = (0); (i) <= (100); (i)++) (ans) = min((ans), (dp[n][i]));\n  cout << ans * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1000000007;\nconst long long linf = 1ll * inf * inf;\nconst int N = 300000 + 7;\nconst int M = 32;\nconst int multipleTest = 0;\nint dp[N][M];\nint n;\nint a[N];\nvoid solve() {\n  cin >> n;\n  for (int i = (0), _b = (N); i < _b; ++i)\n    for (int j = (0), _b = (M); j < _b; ++j) dp[i][j] = inf;\n  dp[0][0] = 0;\n  for (int i = (1), _b = (n + 1); i < _b; ++i) {\n    int u;\n    scanf(\"%d\", &u);\n    u /= 100;\n    for (int j = 0; j < M; ++j) {\n      for (int t = 1, _m = min(u, j); t <= _m; ++t)\n        dp[i][j - t] = min(dp[i][j - t], dp[i - 1][j] + u - t);\n      if (j + u / 10 < M)\n        dp[i][j + u / 10] = min(dp[i][j + u / 10], dp[i - 1][j] + u);\n    }\n  }\n  int res = inf;\n  for (int j = (0), _b = (M); j < _b; ++j) res = min(res, dp[n][j]);\n  cout << res * 100;\n}\nint main() {\n  int Test = 1;\n  if (multipleTest) {\n    cin >> Test;\n  }\n  for (int i = 0; i < Test; ++i) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 1e15;\nconst int maxn = 3e5 + 10;\nlong long dp[maxn][55], a[maxn];\nint n;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%I64d\", &a[i]);\n    a[i] /= 100;\n  }\n  for (int i = 0; i <= n; i++)\n    for (int j = 0; j <= 42; j++) dp[i][j] = inf;\n  dp[0][0] = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = a[i] / 10; j <= 40; j++) {\n      dp[i][j] = min(dp[i - 1][j - a[i] / 10] + a[i], dp[i][j]);\n    }\n    for (int j = 0; j <= 40; j++) {\n      for (int k = 1; k <= a[i] && j + k <= 40; k++)\n        dp[i][j] = min(dp[i - 1][j + k] + a[i] - k, dp[i][j]);\n    }\n  }\n  long long ans = inf;\n  for (int i = 0; i <= 20; i++) ans = min(ans, dp[n][i]);\n  cout << ans * 100 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a[300100];\nlong long sum[300100];\nint main() {\n  long long ans = 0;\n  int flag1 = 0, flag2 = 0;\n  memset(a, 0, sizeof(a));\n  memset(sum, 0, sizeof(sum));\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] != 1000) flag1 = 1;\n    if (a[i] != 2000) flag2 = 1;\n  }\n  sum[0] = a[0];\n  for (int i = 1; i < n; i++) {\n    sum[i] = a[i] + sum[i - 1];\n  }\n  if (flag2 == 0) {\n    int temp = sum[n - 1] % 22000;\n    temp /= 2000;\n    int v = sum[n - 1] / 22000;\n    ans = v * 20000 + (temp - 1) * 0.9 * 2000 + 2000;\n  } else if (flag1 == 0) {\n    int temp = sum[n - 1] % 11000;\n    temp /= 1000;\n    int v = sum[n - 1] / 11000;\n    ans = v * 10000 + (temp - 1) * 0.9 * 1000 + 1000;\n  } else {\n    if (sum[n - 1] > 22000) {\n      int v = sum[n - 1] / 1100;\n      ans = sum[n - 1] - v * 100;\n    } else {\n      if (a[n - 1] == 2000 || sum[n - 1] <= 11000)\n        ans = sum[n - 1] - sum[n - 2] / 10;\n      else\n        ans = sum[n - 1] - sum[n - 2] / 10 + 100;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long n;\n  cin >> n;\n  long long a[n + 1];\n  for (long long i = 1; i <= n; i++) {\n    cin >> a[i];\n    a[i] /= 100;\n  }\n  long long dp[n + 1][35];\n  dp[0][0] = 0;\n  for (long long i = 1; i < 35; i++) dp[0][i] = 1000000000000;\n  for (long long i = 1; i <= n; i++) {\n    for (long long j = 0; j < 35; j++) {\n      dp[i][j] = 1000000000000;\n      for (long long k = 1; k <= a[i]; k++) {\n        if ((k + j) >= 35) goto here;\n        dp[i][j] = min(dp[i][j], dp[i - 1][j + k] + a[i] - k);\n      }\n    here:\n      if ((j - a[i] / 10) >= 0)\n        dp[i][j] = min(dp[i][j], dp[i - 1][j - (a[i] / 10)] + a[i]);\n    }\n  }\n  long long ans = 1000000000000;\n  for (long long j = 0; j < 35; j++) ans = min(ans, dp[n][j]);\n  ans *= 100;\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int max_n = 300033, max_m = 41, inf = 1011111111;\nint n, a[max_n], dp[2][max_m];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n    a[i] /= 100;\n  }\n  int q1 = 0, q2 = 1;\n  for (int j = 0; j < max_m; ++j) {\n    dp[q1][j] = inf;\n  }\n  dp[q1][0] = 0;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < max_m; ++j) {\n      dp[q2][j] = inf;\n    }\n    for (int j = 0; j < max_m; ++j) {\n      if (dp[q1][j] == inf) {\n        continue;\n      }\n      if (j + a[i] / 10 < max_m) {\n        dp[q2][j + a[i] / 10] = min(dp[q2][j + a[i] / 10], dp[q1][j] + a[i]);\n      }\n      int y = min(j, a[i]);\n      dp[q2][j - y] = min(dp[q2][j - y], dp[q1][j] + a[i] - y);\n    }\n    swap(q1, q2);\n  }\n  int ans = inf;\n  for (int i = 0; i < max_m; ++i) {\n    ans = min(ans, dp[q1][i]);\n  }\n  printf(\"%d\\n\", ans * 100);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class D {\n\n\tstatic boolean test(int mask, int i) {\n\t\treturn ((mask >> i) & 1) == 1;\n\t}\n\n\tstatic final int INF = Integer.MAX_VALUE / 3;\n\tstatic final int C = 35;\n\n\tint fast(int[] a) {\n\t\tint n = a.length;\n\t\tint[] pref = new int[n + 1];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tpref[i + 1] = pref[i] + a[i];\n\t\t}\n\n\t\tint res = INF;\n\t\tint last1 = -1;\n\n\t\tint[] nxt1 = new int[n + 1];\n\t\tnxt1[n] = -1;\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tif (a[i] == 1) {\n\t\t\t\tnxt1[i] = i;\n\t\t\t} else {\n\t\t\t\tnxt1[i] = nxt1[i + 1];\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i <= n; i++) {\n\t\t\tres = Math.min(res, go(pref[i], pref[n] - pref[i]));\n\t\t\tif (last1 != -1) {\n\t\t\t\tres = Math.min(\n\t\t\t\t\t\tres,\n\t\t\t\t\t\tgo(pref[last1], 1, pref[i] - pref[last1 + 1], pref[n]\n\t\t\t\t\t\t\t\t- pref[i]));\n\t\t\t}\n\t\t\tif (nxt1[i] != -1) {\n\t\t\t\tres = Math.min(\n\t\t\t\t\t\tres,\n\t\t\t\t\t\tgo(pref[i], pref[nxt1[i]] - pref[i], 1, pref[n]\n\t\t\t\t\t\t\t\t- pref[nxt1[i] + 1]));\n\t\t\t}\n\t\t\tif (i != n && a[i] == 1) {\n\t\t\t\tlast1 = i;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n\tint go(int a, int b) {\n\t\tint spent = 10 * a;\n\t\tint card = a;\n\t\treturn spent + 10 * b - Math.min(10 * b, card);\n\t}\n\n\tint go(int a, int b, int c, int d) {\n\t\tint spent = 10 * a;\n\t\tint card = a;\n\n\t\tint use = Math.min(card, 10 * b);\n\t\tcard -= use;\n\t\tspent += 10 * b - use;\n\n\t\tspent += 10 * c;\n\t\tcard += c;\n\n\t\tuse = Math.min(card, 10 * d);\n\t\tcard -= use;\n\t\tspent += 10 * d - use;\n\t\treturn spent;\n\t}\n\n\tint fastPoly(int[] a) {\n\t\tint[] dp = new int[C];\n\t\tArrays.fill(dp, INF);\n\t\tdp[0] = 0;\n\n\t\tfor (int x : a) {\n\t\t\tint[] nxt = new int[C];\n\t\t\tArrays.fill(nxt, INF);\n\t\t\tfor (int was = 0; was < C; was++) {\n\t\t\t\tif (dp[was] == INF) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// full\n\t\t\t\tif (was + x < C) {\n\t\t\t\t\tnxt[was + x] = Math.min(nxt[was + x], dp[was] + x * 10);\n\t\t\t\t}\n\n\t\t\t\t// ez\n\t\t\t\tint use = Math.min(was, x * 10);\n\t\t\t\tnxt[was - use] = Math.min(nxt[was - use], dp[was] + x * 10\n\t\t\t\t\t\t- use);\n\t\t\t}\n\t\t\tdp = nxt;\n\t\t}\n\t\tint ret = INF;\n\t\tfor (int x : dp) {\n\t\t\tret = Math.min(ret, x);\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\tint slowPoly(int[] a) {\n\t\tint sz = a.length * 2 + 1;\n\t\tint[] dp = new int[sz];\n\t\tArrays.fill(dp, INF);\n\t\tdp[0] = 0;\n\n\t\tfor (int x : a) {\n\t\t\tint[] nxt = new int[sz];\n\t\t\tArrays.fill(nxt, INF);\n\t\t\tfor (int was = 0; was < sz; was++) {\n\t\t\t\tif (dp[was] == INF) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// full\n\t\t\t\tif (was + x < sz) {\n\t\t\t\t\tnxt[was + x] = Math.min(nxt[was + x], dp[was] + x * 10);\n\t\t\t\t}\n\n\t\t\t\t// ez\n\t\t\t\tint use = Math.min(was, x * 10);\n\t\t\t\tnxt[was - use] = Math.min(nxt[was - use], dp[was] + x * 10\n\t\t\t\t\t\t- use);\n\t\t\t}\n\t\t\tdp = nxt;\n\t\t}\n\t\tint ret = INF;\n\t\tfor (int x : dp) {\n\t\t\tret = Math.min(ret, x);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tint slow(int[] a) {\n\t\tint n = a.length;\n\t\tint res = Integer.MAX_VALUE;\n\n\t\tint bestMask = -1;\n\n\t\tint bestFast = Integer.MAX_VALUE;\n\n\t\tfor (int mask = 0; mask < (1 << n); mask++) {\n\t\t\tint card = 0;\n\t\t\tint spent = 0;\n\n\t\t\tboolean ez1 = false;\n\t\t\tboolean ez2 = false;\n\n\t\t\tboolean goodMask = true;\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (test(mask, i)) {\n\t\t\t\t\tspent += a[i] * 10;\n\t\t\t\t\tcard += a[i];\n\t\t\t\t\tif ((a[i] == 1) && ez1) {\n\t\t\t\t\t\tgoodMask = false;\n\t\t\t\t\t}\n\t\t\t\t\tif ((a[i] == 2) && ez2) {\n\t\t\t\t\t\tgoodMask = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (a[i] == 1) {\n\t\t\t\t\t\tez1 = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tez2 = true;\n\t\t\t\t\t}\n\t\t\t\t\tint use = Math.min(card, a[i] * 10);\n\t\t\t\t\tcard -= use;\n\t\t\t\t\tspent += a[i] * 10 - use;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spent < res) {\n\t\t\t\tbestMask = mask;\n\t\t\t}\n\t\t\tif (goodMask) {\n\t\t\t\tbestFast = Math.min(bestFast, spent);\n\t\t\t}\n\t\t\tres = Math.min(res, spent);\n\t\t}\n\t\t// if (bestFast != res) {\n\t\t// System.err.println(Arrays.toString(a));\n\t\t// System.err.println(res);\n\t\t// System.err.println(bestFast);\n\t\t// System.err.println(bestMask);\n\t\t// throw new AssertionError();\n\t\t// }\n\t\tSystem.err.println(Integer.toBinaryString(bestMask));\n\t\treturn res;\n\t}\n\n\tvoid submit() {\n\t\tint n = nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt() / 1000;\n\t\t}\n//\t\tout.println(fast(a) * 100);\n\t\tout.println(fastPoly(a) * 100);\n\t}\n\n\tvoid preCalc() {\n\n\t}\n\n\tvoid stressExp() {\n\t\tfor (int n = 1;; n++) {\n\t\t\tSystem.err.println(n);\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int mask = 0; mask < 1 << n; mask++) {\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\ta[i] = test(mask, i) ? 1 : 2;\n\t\t\t\t}\n\t\t\t\tif (fastPoly(a) != fast(a)) {\n\t\t\t\t\tSystem.err.println(Arrays.toString(a));\n\t\t\t\t\tSystem.err.println(slowPoly(a));\n\t\t\t\t\tSystem.err.println(fast(a));\n\t\t\t\t\tSystem.err.println(slow(a));\n\t\t\t\t\tthrow new AssertionError();\n\t\t\t\t}\n\t\t\t\t// slow(a);\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid stressPoly() {\n\t\tfor (int tst = 1;; tst++) {\n\t\t\tint n = rand(1, 50);\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = rand(1, 2);\n\t\t\t}\n\t\t\tif (slowPoly(a) != fast(a)) {\n\t\t\t\tSystem.err.println(Arrays.toString(a));\n\t\t\t\tSystem.err.println(slowPoly(a));\n\t\t\t\tSystem.err.println(fast(a));\n\t\t\t\tSystem.err.println(slow(a));\n\t\t\t\tthrow new AssertionError();\n\t\t\t}\n\t\t\t// slow(a);\n\t\t\tSystem.err.println(tst);\n\t\t}\n\t}\n\n\tvoid test() {\n\t\tfast(new int[] { 2, 2 });\n\t}\n\n\tD() throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tpreCalc();\n\t\t submit();\n//\t\t stressExp();\n//\t\t stressPoly();\n\t\t// test();\n\t\tout.close();\n\t}\n\n\tstatic final Random rng = new Random();\n\n\tstatic int rand(int l, int r) {\n\t\treturn l + rng.nextInt(r - l + 1);\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew D();\n\t}\n\n\tBufferedReader br;\n\tPrintWriter out;\n\tStringTokenizer st;\n\n\tString nextToken() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tString nextString() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}\n"
        }
    ]
}