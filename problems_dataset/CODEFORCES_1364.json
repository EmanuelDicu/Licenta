{
    "name": "1364_C. Ehab and Prefix MEXs",
    "source": "CODEFORCES",
    "description": "Given an array a of length n, find another array, b, of length n such that:\n\n  * for each i (1 \u2264 i \u2264 n) MEX(\\\\{b_1, b_2, \u2026, b_i\\})=a_i. \n\n\n\nThe MEX of a set of integers is the smallest non-negative integer that doesn't belong to this set.\n\nIf such array doesn't exist, determine this.\n\nInput\n\nThe first line contains an integer n (1 \u2264 n \u2264 10^5) \u2014 the length of the array a.\n\nThe second line contains n integers a_1, a_2, \u2026, a_n (0 \u2264 a_i \u2264 i) \u2014 the elements of the array a. It's guaranteed that a_i \u2264 a_{i+1} for 1\u2264 i < n.\n\nOutput\n\nIf there's no such array, print a single line containing -1.\n\nOtherwise, print a single line containing n integers b_1, b_2, \u2026, b_n (0 \u2264 b_i \u2264 10^6)\n\nIf there are multiple answers, print any.\n\nExamples\n\nInput\n\n\n3\n1 2 3\n\n\nOutput\n\n\n0 1 2 \n\nInput\n\n\n4\n0 0 0 2\n\n\nOutput\n\n\n1 3 4 0 \n\nInput\n\n\n3\n1 1 3\n\n\nOutput\n\n\n0 2 1 \n\nNote\n\nIn the second test case, other answers like [1,1,1,0], for example, are valid.",
    "difficulty": "C",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ],
    "rating": 1600,
    "public_test": [
        {
            "input": "3\n1 2 3\n",
            "output": "0 1 2\n"
        },
        {
            "input": "3\n1 1 3\n",
            "output": "0 2 1\n"
        },
        {
            "input": "4\n0 0 0 2\n",
            "output": "1 3 4 0\n"
        }
    ],
    "generated_test": [
        {
            "input": "3\n1 1 1\n",
            "output": "0 2 3 \n"
        },
        {
            "input": "4\n0 0 0 3\n",
            "output": "1 2 4 0 \n"
        },
        {
            "input": "4\n0 0 0 1\n",
            "output": "2 3 4 0 \n"
        },
        {
            "input": "3\n0 2 3\n",
            "output": "1 0 2 \n"
        },
        {
            "input": "7\n0 0 2 2 3 5 6\n",
            "output": "1 4 0 7 2 3 5 \n"
        },
        {
            "input": "3\n0 1 1\n",
            "output": "2 0 3 \n"
        },
        {
            "input": "4\n0 0 1 3\n",
            "output": "2 4 0 1 \n"
        },
        {
            "input": "4\n0 0 1 1\n",
            "output": "2 3 0 4 \n"
        },
        {
            "input": "3\n0 2 2\n",
            "output": "1 0 3 \n"
        },
        {
            "input": "7\n0 0 2 2 3 5 7\n",
            "output": "1 4 0 6 2 3 5 \n"
        },
        {
            "input": "7\n0 0 2 4 5 5 6\n",
            "output": "1 3 0 2 4 7 5 \n"
        },
        {
            "input": "3\n0 1 3\n",
            "output": "2 0 1 \n"
        },
        {
            "input": "3\n1 1 2\n",
            "output": "0 3 1 \n"
        },
        {
            "input": "4\n0 0 0 4\n",
            "output": "1 2 3 0 \n"
        },
        {
            "input": "7\n0 0 0 2 3 5 7\n",
            "output": "1 4 6 0 2 3 5 \n"
        },
        {
            "input": "3\n1 2 2\n",
            "output": "0 1 3 \n"
        },
        {
            "input": "3\n0 1 2\n",
            "output": "3 0 1 \n"
        },
        {
            "input": "3\n0 0 1\n",
            "output": "2 3 0 \n"
        },
        {
            "input": "4\n0 0 0 0\n",
            "output": "1 2 3 4 \n"
        },
        {
            "input": "7\n0 0 2 2 3 3 6\n",
            "output": "1 4 0 5 2 7 3 \n"
        },
        {
            "input": "3\n0 0 3\n",
            "output": "1 2 0 \n"
        },
        {
            "input": "3\n0 0 2\n",
            "output": "1 3 0 \n"
        },
        {
            "input": "7\n0 0 2 3 3 3 6\n",
            "output": "1 4 0 2 5 7 3 \n"
        },
        {
            "input": "3\n0 0 0\n",
            "output": "1 2 3 \n"
        },
        {
            "input": "7\n0 0 2 3 3 4 6\n",
            "output": "1 5 0 2 7 3 4 \n"
        },
        {
            "input": "7\n0 0 2 2 5 5 7\n",
            "output": "1 3 0 4 2 6 5 \n"
        },
        {
            "input": "4\n0 1 1 2\n",
            "output": "3 0 4 1 \n"
        },
        {
            "input": "4\n0 1 1 3\n",
            "output": "2 0 4 1 \n"
        },
        {
            "input": "7\n0 0 2 2 2 3 6\n",
            "output": "1 4 0 5 7 2 3 \n"
        },
        {
            "input": "7\n0 0 3 3 3 3 6\n",
            "output": "1 2 0 4 5 7 3 \n"
        },
        {
            "input": "4\n0 1 1 4\n",
            "output": "2 0 3 1 \n"
        },
        {
            "input": "7\n0 0 2 2 2 3 4\n",
            "output": "1 5 0 6 7 2 3 \n"
        },
        {
            "input": "7\n0 0 2 3 5 5 6\n",
            "output": "1 4 0 2 3 7 5 \n"
        },
        {
            "input": "4\n0 0 2 3\n",
            "output": "1 4 0 2 \n"
        },
        {
            "input": "7\n0 0 1 2 3 5 7\n",
            "output": "4 6 0 1 2 3 5 \n"
        },
        {
            "input": "7\n0 0 2 3 3 5 6\n",
            "output": "1 4 0 2 7 3 5 \n"
        },
        {
            "input": "7\n0 0 2 3 3 4 7\n",
            "output": "1 5 0 2 6 3 4 \n"
        },
        {
            "input": "7\n0 0 0 2 5 5 7\n",
            "output": "1 3 4 0 2 6 5 \n"
        },
        {
            "input": "4\n1 1 1 3\n",
            "output": "0 2 4 1 \n"
        },
        {
            "input": "7\n0 0 2 2 2 2 6\n",
            "output": "1 3 0 4 5 7 2 \n"
        },
        {
            "input": "4\n0 0 1 4\n",
            "output": "2 3 0 1 \n"
        },
        {
            "input": "7\n0 0 1 2 2 5 7\n",
            "output": "3 4 0 1 6 2 5 \n"
        },
        {
            "input": "7\n0 0 0 4 5 5 7\n",
            "output": "1 2 3 0 4 6 5 \n"
        },
        {
            "input": "7\n0 0 0 2 2 2 6\n",
            "output": "1 3 4 0 5 7 2 \n"
        },
        {
            "input": "4\n0 0 2 4\n",
            "output": "1 3 0 2 \n"
        },
        {
            "input": "7\n0 0 1 2 2 4 7\n",
            "output": "3 5 0 1 6 2 4 \n"
        },
        {
            "input": "7\n0 0 0 0 2 2 6\n",
            "output": "1 3 4 5 0 7 2 \n"
        },
        {
            "input": "4\n0 0 2 2\n",
            "output": "1 3 0 4 \n"
        },
        {
            "input": "7\n0 0 0 0 0 2 6\n",
            "output": "1 3 4 5 7 0 2 \n"
        },
        {
            "input": "7\n0 0 2 3 4 5 6\n",
            "output": "1 7 0 2 3 4 5 \n"
        },
        {
            "input": "4\n0 1 1 1\n",
            "output": "2 0 3 4 \n"
        },
        {
            "input": "7\n0 0 2 3 5 5 7\n",
            "output": "1 4 0 2 3 6 5 \n"
        },
        {
            "input": "4\n1 1 1 2\n",
            "output": "0 3 4 1 \n"
        },
        {
            "input": "4\n1 1 1 4\n",
            "output": "0 2 3 1 \n"
        },
        {
            "input": "4\n0 0 3 3\n",
            "output": "1 2 0 4 \n"
        },
        {
            "input": "7\n0 0 1 2 3 5 6\n",
            "output": "4 7 0 1 2 3 5 \n"
        },
        {
            "input": "4\n1 1 2 3\n",
            "output": "0 4 1 2 \n"
        },
        {
            "input": "4\n0 0 1 2\n",
            "output": "3 4 0 1 \n"
        },
        {
            "input": "7\n0 1 1 2 2 4 7\n",
            "output": "3 0 5 1 6 2 4 \n"
        },
        {
            "input": "7\n0 0 2 4 5 5 7\n",
            "output": "1 3 0 2 4 6 5 \n"
        },
        {
            "input": "7\n1 1 1 2 2 4 7\n",
            "output": "0 3 5 1 6 2 4 \n"
        },
        {
            "input": "7\n1 1 1 2 3 4 7\n",
            "output": "0 5 6 1 2 3 4 \n"
        },
        {
            "input": "7\n1 1 1 1 3 4 7\n",
            "output": "0 2 5 6 1 3 4 \n"
        },
        {
            "input": "7\n1 1 1 1 3 5 7\n",
            "output": "0 2 4 6 1 3 5 \n"
        },
        {
            "input": "7\n1 1 1 2 3 5 7\n",
            "output": "0 4 6 1 2 3 5 \n"
        },
        {
            "input": "4\n1 1 1 1\n",
            "output": "0 2 3 4 \n"
        },
        {
            "input": "7\n0 0 0 2 3 5 6\n",
            "output": "1 4 7 0 2 3 5 \n"
        },
        {
            "input": "7\n0 1 2 2 3 5 7\n",
            "output": "4 0 1 6 2 3 5 \n"
        },
        {
            "input": "7\n0 0 2 2 3 6 6\n",
            "output": "1 4 0 5 2 3 7 \n"
        },
        {
            "input": "7\n0 1 1 2 3 5 6\n",
            "output": "4 0 7 1 2 3 5 \n"
        },
        {
            "input": "7\n0 0 0 3 5 5 7\n",
            "output": "1 2 4 0 3 6 5 \n"
        },
        {
            "input": "7\n0 0 0 0 2 2 7\n",
            "output": "1 3 4 5 0 6 2 \n"
        },
        {
            "input": "4\n0 1 3 3\n",
            "output": "2 0 1 4 \n"
        },
        {
            "input": "7\n0 0 1 4 5 5 7\n",
            "output": "2 3 0 1 4 6 5 \n"
        },
        {
            "input": "7\n1 1 1 2 4 5 7\n",
            "output": "0 3 6 1 2 4 5 \n"
        },
        {
            "input": "7\n0 0 0 1 3 5 6\n",
            "output": "2 4 7 0 1 3 5 \n"
        },
        {
            "input": "7\n0 1 1 2 2 5 6\n",
            "output": "3 0 4 1 7 2 5 \n"
        },
        {
            "input": "7\n0 1 1 2 4 5 7\n",
            "output": "3 0 6 1 2 4 5 \n"
        },
        {
            "input": "7\n0 1 1 1 3 5 6\n",
            "output": "2 0 4 7 1 3 5 \n"
        },
        {
            "input": "7\n0 0 2 2 3 4 6\n",
            "output": "1 5 0 7 2 3 4 \n"
        },
        {
            "input": "7\n0 1 3 3 3 3 6\n",
            "output": "2 0 1 4 5 7 3 \n"
        }
    ],
    "solution": [
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nflag=0\nvis=[0]*(10**6+1)\nfor i in range(n):\n    if arr[i]>i+1:\n        flag=1\n    vis[arr[i]]=1\nif flag==1:\n    print(-1)\n    quit()\nb=[-1]*(n)\nfor i in range(1,n):\n    if arr[i-1]!=arr[i]:\n        b[i]=arr[i-1]\nnot_vis=[]\nfor i in range(10**6+1):\n    if vis[i]==0:\n        not_vis.append(i)\nj=0\nfor i in range(n):\n    if b[i]==-1:\n        b[i]=not_vis[j]\n        j+=1\nprint(*b)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int modu(long long int a, long long int b) {\n  long long int ans = 1;\n  while (b > 0) {\n    if (b & 1) ans = (ans * a) % 1000000007;\n    b /= 2;\n    a = (a * a) % 1000000007;\n  }\n  return ans;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n;\n  cin >> n;\n  long long int arr[n + 1];\n  set<long long int> s;\n  for (long long int i = 1; i <= n; i++) {\n    cin >> arr[i];\n    s.insert(arr[i]);\n  }\n  long long int cn = 0;\n  vector<long long int> ans;\n  while (s.find(cn) != s.end()) cn++;\n  ans.push_back(cn);\n  cn++;\n  long long int i = 2;\n  while (i <= n) {\n    if (arr[i] == arr[i - 1]) {\n      while (s.find(cn) != s.end()) cn++;\n      ans.push_back(cn);\n      cn++;\n      i++;\n    } else {\n      ans.push_back(arr[i - 1]);\n      i++;\n    }\n  }\n  for (long long int i = 0; i < ans.size(); i++) cout << ans[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\n        \nmod = pow(10, 9) + 7\nmod2 = 998244353\n        \ndef inp(): return stdin.readline().strip()\ndef iinp(): return int(inp())\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return map(int, inp().split())\ndef smp(): return map(str, inp().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(m, val) for j in range(n)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\n  \ndef isprime(x):\n    if x<=1: return False\n    if x in (2, 3): return True\n    if x%2 == 0: return False\n    for i in range(3, int(sqrt(x))+1, 2):\n        if x%i == 0: return False\n    return True\n \nn = iinp()\narr = lmp()\nchk = l1d(n+1, True)\nansl = l1d(n, -1)\nfor i in range(n-1):\n    if arr[i+1]!=arr[i]:\n        ansl[i+1]=arr[i]\n        chk[arr[i]]=False\nchk[arr[-1]]=False\nj = 0\nfor i in range(n):\n    if ansl[i]==-1:\n        while(not chk[j]): j+=1\n        ansl[i] = j\n        chk[j] =False\nprint(*ansl)"
        },
        {
            "language": 4,
            "solution": "import java.sql.PseudoColumnUsage;\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Solution {\n    static int N = 100005;\n    static int[] arr = new int[N];\n    static int[] brr = new int[N];\n    static boolean[] used = new boolean[N];\n    public static void main(String[] args) throws java.lang.Exception {\n        out = new PrintWriter(new BufferedOutputStream(System.out));\n        sc = new FastReader();\n        int test = 1;\n        for (int t = 0; t < test; t++) {\n            solve();\n        }\n        out.close();\n    }\n\n    private static void solve() {\n        int n = sc.nextInt();\n        for (int i = 1; i <= n; i++) {\n            arr[i] = sc.nextInt();\n        }\n        Arrays.fill(brr, -1);\n        for (int i = 1; i <= n; i++) {\n            if (arr[i] != arr[i - 1]) {\n                brr[i] = arr[i - 1];\n                used[brr[i]] = true;\n            }\n        }\n        used[arr[n]] = true;\n        int min = 0;\n        for (int i = 1; i <= n; i++) {\n            while (used[min]) {\n                min++;\n            }\n            if (brr[i] == -1) {\n                brr[i] = min;\n                used[min] = true;\n            }\n            out.print(brr[i] + \" \");\n        }\n        out.println();\n    }\n\n    public static FastReader sc;\n    public static PrintWriter out;\n    static class FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "import sys\nif sys.subversion[0] == \"PyPy\":\n    import io, atexit\n    sys.stdout = io.BytesIO()\n    atexit.register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n    \n    sys.stdin = io.BytesIO(sys.stdin.read())\n    raw_input = lambda: sys.stdin.readline().rstrip()\n\nRS = raw_input\nRI = lambda : map(int,RS().split())\nRN = lambda : int(RS())\n''' ...................................................................... '''\nimport heapq as hp\n\ndef solve():\n    n = RN()\n    arr = RI()\n\n    for i in xrange(n):\n        if arr[i]>i+1:\n            print -1\n            return\n\n    brr = [-1]*n\n    left = []\n\n    for i in xrange(n-1,0,-1):        \n        x = arr[i-1]\n        y = arr[i]\n\n        for j in xrange(x,y):\n            hp.heappush(left,j)\n\n        if left == []:\n            brr[i] = 10**6\n        else:\n            brr[i] = hp.heappop(left)\n\n    for j in xrange(0,arr[0]):\n        hp.heappush(left,j)\n\n    if left == []:\n        brr[0] = 10**6\n    else:\n        brr[0] = hp.heappop(left)\n\n    if left != []:\n        print -1\n        return\n\n    print ' '.join(map(str,brr))\n\nsolve()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[-1]*(n)\nv=[-1]*(n+1)\nf=0\nv[a[n-1]]=1\nfor i in range(n-1,0,-1):\n    if a[i]>i+1:\n        f=1\n        break\n    if a[i]!=a[i-1]:\n        b[i]=a[i-1]\n        v[a[i-1]]=1\nif f==1:\n    print(-1)\nvi=[]\nfor i in range(len(v)):\n    if v[i]==-1:\n        vi.append(i)\nj=0\nfor i in range(len(b)):\n    if b[i]==-1:\n        b[i]=vi[j]\n        j+=1\nprint(*b)                        \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class C649_PC {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint[] a = new int[n];\n\t\tboolean[] taken = new boolean[1000005];\n\t\tint[] lastoccur = new int[1000005];\n\t\tfor(int i =0;i<n;i++)\n\t\t{\n\t\t\ta[i]=in.nextInt();\n\t\t\tlastoccur[a[i]]=i;\n\t\t\ttaken[a[i]]= true;\n\t\t}\n\t\tint[] ans = new int[n];\n\t\tArrays.fill(ans, -1);\n\t\tfor(int i =0;i<n;i++)\n\t\t{\n\t\t\tif(lastoccur[a[i]]!=n-1)\n\t\t\t{\n\t\t\t\tans[lastoccur[a[i]]+1]=a[i];\n\t\t\t}\n\t\t}\n\t\tint index= 0;\n\t\tfor(int i = 0;i<n;i++)\n\t\t{\n\t\t\tif(ans[i]==-1)\n\t\t\t{\n\t\t\t\twhile(taken[index])\n\t\t\t\t{\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tans[i]= index;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t\ttaken = new boolean[1000005];\n\t\tindex = 0;\n\t\t//System.out.println(Arrays.toString(ans));\n\t\tboolean works = true;\n\t\tfor(int i =0;i<n;i++)\n\t\t{\n\t\t\ttaken[ans[i]]=true;\n\t\t\twhile(taken[index])\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\t//System.out.println(a[i]+\" \"+index);\n\t\t\tif(a[i]!=index)\n\t\t\t{\n\t\t\t\tworks = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!works)\n\t\t\tSystem.out.println(-1);\n\t\telse\n\t\t{\n\t\t\tfor(int i =0;i<n-1;i++)\n\t\t\t\tSystem.out.print(ans[i]+\" \");\n\t\t\tSystem.out.println(ans[n-1]);\n\t\t}\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "# avoiding using queue\ndef main():\n    test = 1\n    for _ in range(test):\n        n = int(input())\n        ara = [int(num) for num in input().split()]\n        mark = [True for _ in range(n + 1)]\n        for num in ara:\n            mark[num] = False\n\n        take_from = []\n        for index in range(n + 1):\n            if mark[index]:\n                take_from.append(index)\n        \n        ans = []\n        ans.append(take_from[0])\n        take_at = 1\n        take_size = len(take_from)\n        for index in range(1, n):\n            if ara[index] != ara[index - 1]:\n                ans.append(ara[index - 1])\n            elif take_at < take_size:\n                ans.append(take_from[take_at])\n                take_at += 1\n            else:\n                ans.append(n + 1)\n        \n        ans = ' '.join(map(str, ans))\n        print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = [-1] * n\nempty = []\nif a[0] > 1:\n    print(-1)\n    exit()\nelif a[0] == 1:\n    b[0] = 0\nelse:\n    empty.append(0)\n\nfor i in range(1, n):\n    if a[i] > i + 1:\n        print(-1)\n        exit()\n    if a[i] == a[i - 1]:\n        empty.append(i)\n    else:\n        b[i] = a[i - 1]\n        k = a[i] - a[i - 1] - 1\n        j = len(empty) - 1\n        while k > 0 and j >= 0:\n            b[empty[j]] = a[i] - k\n            empty.pop()\n            j -= 1\n            k -= 1\n        if k > 0:\n            print(-1)\n            exit()\n\nfor i in range(len(b)):\n    if b[i] == -1:\n        b[i] = 1000000\n\nprint(*b)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nread = lambda: sys.stdin.readline()\n\nn = int(read())\narr = list(map(int, read().split()))\nresult = [-1 for i in range(n)]\nfor i in range(n - 1, 0, -1):\n    if(arr[i] > arr[i - 1]):\n        result[i] = arr[i - 1]\nif(arr[0] == 1):\n    result[0] = 0\nhaves = set([])\nfree = 0\nwhile(free < n and result[free] != -1):\n    free += 1\nimpossible = False\nfor i in range(1, n):\n    if(result[i] == -1):\n        continue\n    haves.add(result[i])\n    for j in range(arr[i - 1], arr[i]):\n        if(not j in haves):\n            if(free > i):\n                impossible = True\n            result[free] = j\n            haves.add(j)\n            free += 1\n            while(free < n and result[free] != -1):\n                free += 1\nfor i in range(n):\n    if(result[i] == -1):\n        result[i] = 100001\nif(impossible):\n    print(-1)\nelse:\n    for i in range(n - 1):\n        print(result[i], end = \" \")\n    print(result[-1])\n            "
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class C_Ehab_and_Prefix_MEXs {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt(), c = 0;\n\t\tint[] n = new int[t + 1];\n\t\tint[] m = new int[100005];\n\t\tint[] o = new int[100005];\n\t\tArrays.fill(m, -1);\n\t\tfor(int i = 1; i <= t; i++) {\n\t\t\tn[i] = sc.nextInt();\n\t\t\tif(i > 1 && n[i] > n[i - 1]) {\n\t\t\t\tm[i] = n[i - 1];\n\t\t\t\to[m[i]] = 1;\n\t\t\t}\n\t\t}\n\t\to[n[t]] = 1;\n\t\tfor(int i = 1; i <= t; i++) {\n\t\t\twhile(o[c] == 1) c++;\n\t\t\tif(m[i] == -1) {\n\t\t\t\tm[i] = c;\n\t\t\t\to[c] = 1;\n\t\t\t}\n\t\t\tSystem.out.print(m[i] + \" \");\n\t\t}\n\t\tsc.close();\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool vis[1000008];\nint link[1000008];\nvoid solve() {\n  int a, k, i, j, n, sum = 0, mx = 0, ind, ct = 1, curr = 0, remain = -1;\n  cin >> n;\n  int D[n + 5];\n  for (i = 0; i < n; i++) {\n    cin >> D[i];\n    vis[D[i]] = 1;\n  }\n  link[D[n - 1]] = D[n - 1];\n  for (i = 0; i < n - 1; i++) {\n    link[D[i]] = D[i + 1];\n  }\n  if (D[0] == 0) {\n    while (vis[++curr])\n      ;\n    cout << curr << \" \";\n    while (vis[++curr])\n      ;\n    remain = 0;\n  } else {\n    cout << 0 << \" \";\n    while (vis[++curr])\n      ;\n  }\n  for (i = 1; i < n; i++) {\n    if (D[i] != D[i - 1]) {\n      cout << D[i - 1] << \" \";\n      if (remain == D[i - 1]) remain = -1;\n      continue;\n    }\n    if (remain != D[i] && remain > -1) {\n      cout << remain << \" \";\n      remain = -1;\n    } else {\n      cout << curr << \" \";\n      while (vis[++curr])\n        ;\n    }\n  }\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t, n, a[100010], b[100010];\nint f[1000010], exist[1000010];\nint main() {\n  for (int i = 0; i < 100010; ++i) {\n    b[i] = -1;\n  }\n  scanf(\"%d \", &n);\n  for (int j = 1; j <= n; ++j) {\n    scanf(\"%d\", &a[j]);\n    exist[a[j]] = j;\n    if (a[j] > j) {\n      puts(\"-1\");\n      return 0;\n    }\n    if (j >= 2 && a[j - 1] < a[j]) {\n      b[j] = a[j - 1];\n      f[b[j]] = 1;\n    }\n  }\n  int num = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (b[i] != -1) continue;\n    while (f[num] != 0) {\n      num++;\n    }\n    if (i <= exist[num]) {\n      b[i] = num + 1;\n    } else {\n      b[i] = num;\n    }\n    f[num] = 1;\n  }\n  for (int i = 1; i <= n; ++i) {\n    printf(\"%d \", b[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int df = (int)(1e6);\nint v[100000 + 5], sol[100000 + 5];\nbool viz[10 * 100000 + 5], fv[10 * 100000 + 5];\nvoid nu() {\n  cout << -1;\n  exit(0);\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  int i, j, z;\n  for (i = 1; i <= n; i++) cin >> v[i];\n  if (v[1] > 1) nu();\n  fill(begin(sol), end(sol), df);\n  for (i = n; i > 1; i--)\n    if (v[i] != v[i - 1]) {\n      sol[i] = v[i - 1];\n      viz[v[i - 1]] = 1;\n    }\n  int M = (*max_element(v + 1, v + n + 1)) - 1;\n  for (i = 1, j = 0; i <= n; i++)\n    if (sol[i] == df) {\n      while (j <= M && viz[j] == 1) j++;\n      if (j > M) continue;\n      sol[i] = j;\n      viz[j] = 1;\n      j++;\n    }\n  int mex = 0;\n  for (i = 1; i <= n; i++) {\n    fv[sol[i]] = 1;\n    if (mex == sol[i]) do {\n        mex++;\n      } while (fv[mex] != 0);\n    if (mex != v[i]) nu();\n  }\n  for (i = 1; i <= n; i++) cout << sol[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# from collections import deque\n# from itertools import combinations\nfrom heapq import *\n# T = int(input().strip())\n\nfor t in range(1):\n    n = int(input().strip())\n    s = list(map(int, input().strip().split()))[:n]\n    res = 1\n    for  i in range(n-1):\n        if (s[i] > i+1) or (s[i+1] < s[i]):\n            res = -1\n    if res == -1:\n        print(-1)\n        break\n\n    used = list(set(s)) + [n+1] * n\n    rest = list(set(range(2 * n)) - set(s))\n\n    heapify(rest)\n    heapify(used)\n\n    startrest = 0\n    res = []\n    for j in s:\n        # print('cur', j, res, used)\n        if j <= used[0]:\n            res.append(heappop(rest))\n        else:\n            res.append(heappop(used))\n            # curmaxx = max(mex, curmax)\n\n    print(*res)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\na = [int(i) for i in sys.stdin.readline().split()]\ns = set(a)\nbs = [0]*n\nat = 0\nfor i in range(n):\n    while at in s:\n        at+=1\n    bs[i] = at\n    at+=1\n\nans = [0]*n\nused = 0\nfor i in range(n):\n    # test if first\n    if i!=0 and a[i]!=a[i-1]:\n        ans[i] = a[i-1]\n    else:\n        ans[i] = bs[used]\n        used+=1\n\nprint(\" \".join([str(i) for i in ans]))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long n;\n  cin >> n;\n  long long arr[n + 5];\n  long long ans[n + 5];\n  long long present[100002];\n  memset(present, 0, sizeof(present));\n  for (long long x = 1; x <= n; x++) {\n    cin >> arr[x];\n    present[arr[x]] = 1;\n  }\n  long long limit = 0;\n  for (long long x = 1; x <= n; x++) {\n    if (x == 1) {\n      if (arr[x] == 1) {\n        ans[x] = 0;\n        present[0] = 1;\n      } else {\n        for (long long y = 1; y <= 100000; y++) {\n          if (present[y] == 0) {\n            ans[x] = y;\n            present[y] = 1;\n            break;\n          }\n        }\n      }\n      continue;\n    }\n    if (arr[x] != arr[x - 1]) {\n      ans[x] = arr[x - 1];\n      present[ans[x]] = 1;\n    } else {\n      for (long long y = ans[x - 1]; y <= 100000; y++) {\n        if (present[y] == 0) {\n          ans[x] = y;\n          present[y] = 1;\n          break;\n        }\n      }\n    }\n  }\n  for (long long x = 1; x <= n; x++) {\n    cout << ans[x] << \" \";\n  }\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid err(istream_iterator<string> it) {}\ntemplate <typename T, typename... Args>\nvoid err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << a << endl;\n  err(++it, args...);\n}\nint main() {\n  long long i, j, n;\n  cin >> n;\n  vector<long long> a(n);\n  for (i = 0; i < n; i++) cin >> a[i];\n  set<long long> st;\n  for (auto in : a) st.insert(in);\n  vector<long long> v1;\n  for (auto in : st) v1.push_back(in);\n  map<long long, long long> m;\n  for (auto in : st) m[in] = 1;\n  vector<long long> v2;\n  for (i = 0; i <= 1000000; i++)\n    if (m[i] == 0) v2.push_back(i);\n  long long p1 = 0, p2 = 0;\n  vector<long long> ans;\n  for (i = 0; i < n; i++) {\n    if (i == 0 || a[i] == a[i - 1])\n      ans.push_back(v2[p2]), p2++;\n    else\n      ans.push_back(v1[p1]), p1++;\n  }\n  for (auto in : ans) cout << in << \" \";\n  cout << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\ndef check(a, b):\n\tn = len(a)\n\tbb = [False]*(n+1)\n\tc = [0]*n\n\tj = 0\n\tz = 0\n\tfor i in a:\n\t\tif i <= n:\n\t\t\tbb[i] = True\n\t\twhile bb[j]:\n\t\t\tj += 1\n\t\tif b[z] != j:\n\t\t\treturn False\n\t\tz += 1\n\treturn True\n\ndef solve():\n\tn = mint()\n\ta = list(mints())\n\tb = [None]*n\n\tc = [False]*(n+1)\n\tfor i in range(1,n):\n\t\tif a[i] != a[i-1]:\n\t\t\tb[i] = a[i-1]\n\t\t\tif a[i-1] <= n:\n\t\t\t\tc[a[i-1]] = True\n\tif a[-1] <= n:\n\t\tc[a[-1]] = True\n\tif a[0] != 0:\n\t\tb[0] = 0\n\t\tc[0] = True\n\t#print(b)\n\t#print(c)\n\tj = 0\n\tfor i in range(n):\n\t\tif b[i] is None:\n\t\t\twhile c[j]:\n\t\t\t\tj += 1\n\t\t\tb[i] = j\n\t\t\tc[j] = True\n\t#print(b)\n\t#print(check(b,a))\n\tif check(b,a):\n\t\tprint(' '.join(map(str,b)))\n\telse:\n\t\tprint(-1)\n\n#for i in range(mint()):\nsolve()\n"
        },
        {
            "language": 4,
            "solution": "/******************************************************************************\n\n                            Online Java Compiler.\n                Code, Compile, Run and Debug java program online.\nWrite your code in this editor and press \"Run\" button to execute it.\n\n******************************************************************************/\n\nimport java.util.*;\nimport java.io.*;\npublic class Main\n{\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        PrintWriter out = new PrintWriter(System.out);\n        int n = Integer.parseInt(st.nextToken());\n        int[] a = new int[n];\n        st = new StringTokenizer(br.readLine());\n        HashSet<Integer> used = new HashSet<Integer>();\n        boolean works = true;\n        for(int i = 0 ; i < n; i++){\n            a[i] = Integer.parseInt(st.nextToken());\n            used.add(a[i]);\n            if(a[i] > i+1)\n                works = false;\n        }\n        if(!works)\n            out.println(-1);\n        else{\n            int[] ans = new int[n];\n            int next = 0;\n            int index = 0;\n            while(index < n){\n                if(index > 0 && a[index] != a[index-1]){\n                    ans[index] = a[index-1];\n                    index++;\n                }\n                else if(used.contains(next))\n                    next++;\n                else{\n                    ans[index] = next;\n                    index++;\n                    next++;\n                }\n            }\n            StringJoiner sj = new StringJoiner(\" \");\n            for(int i = 0; i < n; i++){\n                sj.add(Integer.toString(ans[i]));\n            }\n            out.println(sj);\n        }\n        out.close();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n =  int(input())\na = list(map(int,input().split()))\nk = 0\nb = [0]*n\ns = set(a)\nt = [False for i in range(n)]\nfor i in range(1,n):\n\tif a[i] != a[i-1]:\n\t\tb[i] = a[i-1]\n\t\tt[i] = True\nm = 0\nfor i in range(n):\n\tif not t[i]:\n\t\twhile True:\n\t\t\tif m not in s:\n\t\t\t\tb[i] = m\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tm+=1\n\t\tm+=1\nfor i in b:print(i,end = \" \")"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\n\n\nn = int(input())\na = list(map(int, input().split()))\nINF = 10 ** 6 - 1\n\nans = [INF] * n\nl = 0\nif a[0] == 1:\n    ans[0] = 0\n\nfor i in range(n - 1):\n    if i + 1 < a[i]:\n        print(-1)\n        exit()\n\n    if a[i] < a[i + 1]:\n        if i + 2 < a[i + 1]:\n            print(-1)\n            exit()\n        ans[i + 1] = a[i]\n        min_num = a[i] + 1\n        max_num = a[i + 1] - 1\n        while min_num <= max_num:\n            if ans[l] == INF:\n                ans[l] = min_num\n                min_num += 1\n            l += 1\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\naarr = list(map(int, input().split()))\n\ntovisit = {t : 0 for t in range(aarr[-1] + 1)}\n\nfor k in aarr:\n    tovisit[k] += 1\n\nb = []\ntransit = []\ni = 0\nflag = True\n\nfor t in aarr:\n    if t > i + 1:\n        flag = False\n        print(-1)\n        break\n    if transit:\n        b.append(transit[0])\n        del transit[0]\n        tovisit[t] -= 1\n        if tovisit[t] == 0 and t < i:\n            transit.append(t)\n        continue\n    while i < aarr[-1] + 1 and tovisit[i]:\n        i += 1\n    \n    b.append(i)\n    i += 1\n    tovisit[t] -= 1\n    if tovisit[t] == 0 and t < i:\n        transit.append(t)\n\n\nif flag:\n    print(*b)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nval = set([i for i in range(a[-1])])\nb = [-1] * n\nfor i in range(1, n):\n    if a[i] != a[i - 1]:\n        b[i] = a[i - 1]\n        val.remove(a[i - 1])\nval = list(val)\nind = 0\nfor i in range(n):\n    if b[i] == -1:\n        if ind >= len(val):\n            b[i] = 1000000\n        else:\n            b[i] = val[ind]\n            ind += 1\n\nprint(*b)\n    "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\npublic class demo{\n\n\tpublic static void main(String args[]){\n\t\tFastReader sc = new FastReader();\n\t\tStringBuilder sb=new StringBuilder();\n\t\tint t,i,n;\n\t\tt=1;\n\t\twhile(t-->0){\n            n=sc.nextInt();\n            int a[]=new int[n];\n            int ex[]=new int[n+1];\n            int done[]=new int[n+1];\n            for(i=0;i<n;i++){\n                a[i]=sc.nextInt();\n                ex[a[i]]++;\n            }\n            if(a[0]>=2){\n                sb.append(-1).append('\\n');\n                continue;\n            }\n            int mex[]=new int[n];\n            mex[0]=a[0]==0?1:0;\n            if(n==1){\n                sb.append(mex[0]).append('\\n');\n                continue;\n            }\n            PriorityQueue<node> q=new PriorityQueue<>(new Comparator<node>(){\n                @Override\n                public int compare(node a,node b){\n                    if(a.c==b.c)\n                        return a.num-b.num;\n                    return a.c-b.c;\n                }\n            });\n            for(i=0;i<=n;i++)\n                q.add(new node(i,ex[i]));\n            int flag=1;\n            for(i=0;i<n;i++){\n                node v=q.poll();\n                if(v.c>0){\n                    flag=0;\n                    break;\n                }\n                if(done[v.num]!=1){\n                    mex[i]=v.num;\n                    done[v.num]=1;\n                }\n                ex[a[i]]--;\n                q.add(new node(a[i],ex[a[i]]));\n            }\n            for(i=0;i<n;i++)\n                sb.append(mex[i]).append(' ');\n            sb.append('\\n');\n\n\t\t}\n\t\tsb.deleteCharAt(sb.length()-1);\n\t\tout.println(sb);\n    }\n    static class node{\n        int c,num;\n        public node(int a,int b){\n            num=a;\n            c=b;\n        }\n    }\n\n\tstatic PrintWriter out;\n\tstatic class FastReader{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\tpublic FastReader(){\n\t\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout=new PrintWriter(System.out,true);\n\t\t}\n\t\tString next(){\n\t\t\twhile(st==null || !st.hasMoreElements()){\n\t\t\t\ttry{\n\t\t\t\t\tst= new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt(){\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong(){\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble(){\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tString nextLine(){\n\t\t\tString str = \"\";\n\t\t\ttry{\n\t\t\t\tstr=br.readLine();\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\tpublic static boolean isPrime(int n) {\n\t\tif(n<2) return false;\n\t\tfor(int i=2;i<=(int)Math.sqrt(n);i++) {\n\t\t\tif(n%i==0) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static void print(int a[],int l,int r){\n\t\tint i;\n\t\tfor(i=l;i<=r;i++)\n\t\t\tout.print(a[i]+\" \");\n\t\tout.println();\n\t}\n\n\tpublic static long fastexpo(long x, long y, long p){\n\t\tlong res=1;\n\t\twhile(y > 0){\n\t\t\tif((y & 1)==1)\n\t\t\t\tres= ((res%p)*(x%p))%p;\n\t\t\ty= y >> 1;\t\t\t\n\t\t\tx = ((x%p)*(x%p))%p;\n\t\t}\n\t\treturn res;\n\t}\n\n\tpublic static boolean[] sieve (int n) {\n\t\tboolean primes[]=new boolean[n+1];\n\t\tArrays.fill(primes,true);\n\t\tprimes[0]=primes[1]=false;\n\t\tfor(int i=2;i*i<=n;i++){\n\t\t\tif(primes[i]){\n\t\t\t\tfor(int j=i*i;j<=n;j+=i)\n\t\t\t\t\tprimes[j]=false;\n\t\t\t}\n\t\t}\n\t\treturn primes;\n\t}\n\n\tpublic static long gcd(long a,long b){\n        return (BigInteger.valueOf(a).gcd(BigInteger.valueOf(b))).longValue();\n    }\n\n    public static void merge(long a[],int l,int m,int r){\n        int n1,n2,i,j,k;\n        n1=m-l+1;\n        n2=r-m;\n\n        long L[]=new long[n1];\n        long R[]=new long[n2];\n\n        for(i=0;i<n1;i++)\n            L[i]=a[l+i];\n        for(j=0;j<n2;j++)\n            R[j]=a[m+1+j];\n\n        i=0;j=0;\n\n        k=l;\n        while(i<n1&&j<n2){\n            if(L[i]<=R[j]){\n                a[k]=L[i];\n                i++;\n            }\n            else{\n                a[k]=R[j];\n                j++;\n            }\n            k++;\n        }\n\n        while(i<n1){\n            a[k]=L[i];\n            i++;\n            k++;\n        }\n        while(j<n2){\n            a[k]=R[j];\n            j++;\n            k++;\n        }\n    }\n    public static void sort(long a[],int l,int r){\n        int m;\n        if(l<r){\n            m=(l+r)/2;\n            sort(a,l,m);\n            sort(a,m+1,r);\n            merge(a,l,m,r);\n        }\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double EPS = 1e-9, PI = acosl(-1.);\nconst int INF = 0x3f3f3f3f, MOD = 1e9 + 7, MOD2 = 2e9 + 11;\nconst int N = 1e5 + 5;\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0);\n  int n;\n  cin >> n;\n  int zero = -1;\n  vector<int> v(n + 1);\n  vector<int> ans(n + 1);\n  vector<bool> visited(n + 1, false);\n  v[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> v[i];\n    if (v[i] > v[i - 1]) {\n      ans[i] = v[i - 1];\n      visited[v[i - 1]] = true;\n      if (!ans[i]) zero = i;\n    } else\n      ans[i] = 0;\n  }\n  visited[v[n]] = true;\n  int cont = 0;\n  for (int i = 1; i <= n; i++) {\n    while (visited[cont]) cont++;\n    if (!ans[i] && i != zero) ans[i] = cont, visited[cont] = true;\n  }\n  for (int i = 1; i <= n; i++) {\n    cout << ans[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\n//Mann Shah [ DAIICT ].\n\npublic class Main {\n\tstatic long mod = (long) (1e9+7);\n\tstatic InputReader in;\n    static PrintWriter out;\n    static Debugger deb;  \n    \n    \tpublic static void main(String args[] ) throws NumberFormatException, IOException  {\n\t\t\t\n\t\tin = new InputReader(System.in);\n\t    out = new PrintWriter(System.out);\n\t    deb = new Debugger();\n\t   \n\t    int n = in.nextInt();\n\t    int[] a = in.nextIntArray(n);\n\t    \n\t    TreeSet<Integer> hs = new TreeSet();\n\t    int[] f = new int[n+1];\n\t    for(int i=0;i<n;i++) {\n\t    \t\tf[a[i]]=1;\n\t    \t\ths.add(a[i]);\n\t    }\n\t    int cur=0;\n\t    int[] ans = new int[n];\n\t    for(int i=0;i<n;i++) {\n\t    \t\tif(hs.first() < a[i]) {\n\t    \t\t\tans[i] = hs.first();\n\t    \t\t\ths.remove(hs.first());\n\t    \t\t}\n\t    \t\telse {\n\t    \t\t\twhile(f[cur]==1) {\n\t    \t\t\t\tcur++;\n\t    \t\t\t}\n\t    \t\t\tf[cur]=1;\n\t    \t\t\tans[i] = cur;\n\t    \t\t\tcur++;\n\t    \t\t}\n\t    }\n\t    for(int i=0;i<n;i++) {\n\t    \t\tout.print(ans[i]+\" \");\n\t    }\n\t    \n\t    out.close();\n\t}\n\n\n\n\n/* TC space\n\n\n */\t\n\t\tstatic class InputReader\n\t    {\n\t        private final InputStream stream;\n\t        private final byte[] buf = new byte[8192];\n\t        private int curChar, snumChars;\n\t        private SpaceCharFilter filter;\n\n\t        public InputReader(InputStream stream){\n\t                this.stream = stream;\n\t        }\n\t        public int snext(){\n                if (snumChars == -1) throw new InputMismatchException();\n                if (curChar >= snumChars){\n                        curChar = 0;\n                        try{\n                                snumChars = stream.read(buf);\n                        } catch (IOException e){\n                                throw new InputMismatchException();\n                        }\n                        if (snumChars <= 0)\n                                return -1;\n                }\n                return buf[curChar++];\n\t        }\n\n\t        public int nextInt(){\n\t                int c = snext();\n\t                while (isSpaceChar(c)){\n\t                    c = snext();\n\t                }\n\t                int sgn = 1;\n\t                if (c == '-'){\n                        sgn = -1;\n                        c = snext();\n\t                }\n\t                int res = 0;\n\t                do{\n                        if (c < '0' || c > '9')\n                                throw new InputMismatchException();\n                        res *= 10;\n                        res += c - '0';\n                        c = snext();\n\t                } while (!isSpaceChar(c));\n\t                return res * sgn;\n\t        }\n\n\t        public long nextLong()\n\t        {\n\t                int c = snext();\n\t                while (isSpaceChar(c))\n\t                {\n\t                        c = snext();\n\t                }\n\t                int sgn = 1;\n\t                if (c == '-')\n\t                {\n\t                        sgn = -1;\n\t                        c = snext();\n\t                }\n\t                long res = 0;\n\t                do\n\t                {\n\t                        if (c < '0' || c > '9')\n\t                                throw new InputMismatchException();\n\t                        res *= 10;\n\t                        res += c - '0';\n\t                        c = snext();\n\t                } while (!isSpaceChar(c));\n\t                return res * sgn;\n\t        }\n\n\t        public int[] nextIntArray(int n)\n\t        {\n\t                int a[] = new int[n];\n\t                for (int i = 0; i < n; i++)\n\t                {\n\t                        a[i] = nextInt();\n\t                }\n\t                return a;\n\t        }\n\n\t        public long[] nextLongArray(int n)\n\t        {\n\t                long a[] = new long[n];\n\t                for (int i = 0; i < n; i++)\n\t                {\n\t                        a[i] = nextLong();\n\t                }\n\t                return a;\n\t        }\n\t        \n\t        public ArrayList<Integer> nextArrayList(int n){\n\t        \t\t\tArrayList<Integer> x = new ArrayList<Integer>();\n\t        \t\t\tfor(int i=0;i<n;i++) {\n\t        \t\t\t\tint v = in.nextInt();\n\t        \t\t\t\tx.add(v);\n\t        \t\t\t}\n\t        \t\t\treturn x;\n\t        }\n\n\t        public String readString()\n\t        {\n\t                int c = snext();\n\t                while (isSpaceChar(c))\n\t                {\n\t                        c = snext();\n\t                }\n\t                StringBuilder res = new StringBuilder();\n\t                do\n\t                {\n\t                        res.appendCodePoint(c);\n\t                        c = snext();\n\t                } while (!isSpaceChar(c));\n\t                return res.toString();\n\t        }\n\n\t        public String nextLine()\n\t        {\n\t                int c = snext();\n\t                while (isSpaceChar(c))\n\t                        c = snext();\n\t                StringBuilder res = new StringBuilder();\n\t                do\n\t                {\n\t                        res.appendCodePoint(c);\n\t                        c = snext();\n\t                } while (!isEndOfLine(c));\n\t                return res.toString();\n\t        }\n\n\t        public boolean isSpaceChar(int c)\n\t        {\n\t                if (filter != null)\n\t                        return filter.isSpaceChar(c);\n\t                return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t        }\n\n\t        private boolean isEndOfLine(int c)\n\t        {\n\t                return c == '\\n' || c == '\\r' || c == -1;\n\t        }\n\n\t        public interface SpaceCharFilter\n\t        {\n\t                public boolean isSpaceChar(int ch);\n\t        }\n\n\t    }\n\t\t\n\t\tstatic class Debugger{\n\t\t\tpublic void n(int x) {\n\t\t\t\tout.println(x);\n\t\t\t}\n\t\t\t\n\t\t\tpublic void a(int[] a) {\n\t\t        StringBuilder sb = new StringBuilder();\n\t\t        for(int i=0;i<a.length;i++) {\n\t\t        \t\tsb.append(a[i]+\" \");\n\t\t        }\n\t\t        out.println(sb.toString());\n\t\t\t}\n\t\t}\n\t\n\t\t\n}\n\n\nclass Pair { \n   int x; \n   int y; \n   // Constructor \n   public Pair(int x, int y) \n   { \n       this.x = x; \n       this.y = y; \n   } \n\t@Override\n\tpublic boolean equals(Object o) {\n\t    if (this == o) return true;\n\t    if (!(o instanceof Pair)) return false;\n\t    Pair p = (Pair) o;\n\t    return x == p.x && y == p.y;\n\t}\t\n\t@Override\n\tpublic int hashCode() {\n\t\treturn (\"\"+x+\"-\"+y).hashCode();\n\t}\t\n} \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ns=set(l)\nx=0\ny=1\nfor i in range(n):\n    if l[i]!=x:\n        print(x,end=' ')\n        x=l[i]\n        if y==l[i]:\n            y+=1\n    else:\n        while y in s:\n            y+=1\n        print(y,end=' ')\n        y+=1"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom collections import deque\n\nR = lambda : stdin.readline().strip()\nRL = lambda : list(map(int, R().split(' ')))\n\noutput = lambda x: stdout.write(str(x))\n\nn = int(R())\n\na = RL()\nMX = 10**5+5\n\nif not a[0] in [0, 1]:\n    print(-1)\n    exit()\n\nfor i in range(1,n):\n    if a[i] < a[i-1]:\n        print(-1)\n        exit()\n\n\nans = [0 if a[0] else -1]\n\nrem = []\n\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        rem.extend(list(range(a[i-1]+1,a[i])))\n        ans.append(a[i-1])\n    else:\n        ans.append(-1)\n\ni = 0\nfor j in range(n):\n    if len(rem) <= i and ans[j]==-1:\n        ans[j] = MX\n    elif ans[j] == -1:\n        ans[j] = rem[i]\n        i+=1\n\nprint(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class R649C {\n    public static void main(String[] args) throws Exception {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder out = new StringBuilder();\n        int N=Integer.parseInt(in.readLine());\n        StringTokenizer tok = new StringTokenizer(in.readLine());\n        int[] A=new int[N];\n        for (int i=0; i<N; i++)\n            A[i]=Integer.parseInt(tok.nextToken());\n        int[] ans=new int[N];\n        Arrays.fill(ans,-1);\n        for (int i=0; i<N-1; i++)\n            if (A[i]<A[i+1])\n                ans[i+1]=A[i];\n        boolean[] exists=new boolean[N+1];\n        for (int v:A)\n            exists[v]=true;\n        List<Integer> cools=new ArrayList<>();\n        for (int i=0; i<=N; i++)\n            if (!exists[i])\n                cools.add(i);\n        for (int i=0, id=0; i<N; i++)\n            if (ans[i]==-1) {\n                ans[i]=cools.get(id);\n                id++;\n            }\n        for (int i=0; i<N; i++)\n            out.append(i>0?\" \":\"\").append(ans[i]);\n        System.out.println(out);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint nb[2 * 100005];\nint vals[100005];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  priority_queue<int, vector<int>, greater<int>> prio;\n  for (int i = 0; i < n; i++) {\n    cin >> vals[i];\n    nb[vals[i]]++;\n  }\n  int pos = 0;\n  for (int i = 0; i < n; i++) {\n    while (nb[pos] > 0) pos++;\n    prio.push(pos);\n    pos++;\n  }\n  for (int i = 0; i < n; i++) {\n    int val = prio.top();\n    prio.pop();\n    nb[vals[i]]--;\n    if (nb[vals[i]] == 0) {\n      prio.push(vals[i]);\n    }\n    cout << val;\n    if (i != n - 1) cout << ' ';\n  }\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import print_function, division\nfrom sys import stdin, stdout\nfrom fractions import gcd\nfrom math import *\nfrom collections import *\n\nrstr = lambda: stdin.readline().strip()\nrstrs = lambda: [str(x) for x in stdin.readline().split()]\nrint = lambda: int(stdin.readline())\nrints = lambda: [int(x) for x in stdin.readline().split()]\n\nn, a = int(input()), rints()\na2, dis = deque(), set(a)\nans = [0] * n\n\nfor i in range(a[-1] + 1):\n    if i not in dis:\n        a2.append(i)\n\nfor i in range(n):\n    if i and a[i] != a[i - 1]:\n        ans[i] = a[i - 1]\n    else:\n        if a2:\n            ans[i] = a2.popleft()\n        else:\n            ans[i] = a[-1] + 1\n\nprint(' '.join(map(str, ans)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint read() {\n  int ans = 0, f = 1;\n  char c = getchar();\n  while (c > '9' || c < '0') {\n    if (c == '-') f = -1;\n    c = getchar();\n  }\n  while (c >= '0' && c <= '9') {\n    ans = ans * 10 + c - '0';\n    c = getchar();\n  }\n  return ans * f;\n}\nconst int N = 1e5 + 5;\nint n, a[N], b[N], have, now = 0, pos = 1;\nint main() {\n  memset(b, -1, sizeof(b));\n  n = read();\n  for (int i = 1; i <= n; ++i) a[i] = read();\n  for (int i = 1; i <= n; ++i) {\n    if (a[i] > i) {\n      printf(\"-1\\n\");\n      return 0;\n    }\n    for (int j = now, k = i; j <= a[i] - 1; ++j) {\n      if (b[k] == -1)\n        b[k] = j;\n      else {\n        while (b[pos] != -1) pos++;\n        b[pos] = j;\n      }\n    }\n    now = a[i];\n  }\n  for (int i = 1; i <= n; ++i)\n    if (b[i] == -1)\n      printf(\"%d \", 1000000);\n    else\n      printf(\"%d \", b[i]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\nimport java.io.*;\nimport java.math.BigDecimal;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader inp = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Solver solver = new Solver();\n        solver.solve(inp, out);\n        out.close();\n\n    }\n\n    static class Solver {\n\n        class pair implements Comparable<pair> {\n\n            int i;\n            int cnt;\n\n            public pair(int i, int cnt) {\n                this.i = i;\n                this.cnt = cnt;\n            }\n\n            public int compareTo(pair p) {\n                return Long.compare(this.i, p.i);\n            }\n\n        }\n\n        class Node implements Comparable<Node> {\n            int i;\n            int cnt;\n\n            Node(int i, int cnt) {\n                this.i = i;\n                this.cnt = cnt;\n            }\n\n            public int compareTo(Node n) {\n                if (this.cnt == n.cnt) {\n                    return Integer.compare(this.i, n.i);\n                }\n                return Integer.compare(this.cnt, n.cnt);\n            }\n        }\n\n        public boolean done(int[] sp, int[] par) {\n            int root;\n\n            root = findSet(sp[0], par);\n\n            for (int i = 1; i < sp.length; i++) {\n                if (root != findSet(sp[i], par))\n                    return false;\n            }\n            return true;\n        }\n\n        public int findSet(int i, int[] par) {\n            int x = i;\n            boolean flag = false;\n            while (par[i] >= 0) {\n                flag = true;\n                i = par[i];\n            }\n            if (flag)\n                par[x] = i;\n            return i;\n        }\n\n        public void unionSet(int i, int j, int[] par) {\n            int x = findSet(i, par);\n            int y = findSet(j, par);\n            if (x < y) {\n                par[y] = x;\n            } else {\n                par[x] = y;\n            }\n        }\n\n        public long pow(long a, long b, long MOD) {\n            if (b == 0) {\n                return 1;\n            }\n            if (b == 1) {\n                return a;\n            }\n            long val = pow(a, b / 2, MOD);\n            if (b % 2 == 0) {\n                return val * val % MOD;\n            } else {\n                return val * (val * a % MOD) % MOD;\n\n            }\n\n        }\n\n        public boolean isPrime(int n) {\n            for (int i = 2; i < n; i++) {\n                if (n % i == 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        public void minPrimeFactor(int n, int[] s) {\n            boolean prime[] = new boolean[n + 1];\n            Arrays.fill(prime, true);\n            s[1] = 1;\n            s[2] = 2;\n            for (int i = 4; i <= n; i += 2) {\n                prime[i] = false;\n                s[i] = 2;\n            }\n\n            for (int i = 3; i <= n; i += 2) {\n                if (prime[i]) {\n                    s[i] = i;\n                    for (int j = 2 * i; j <= n; j += i) {\n                        prime[j] = false;\n                        s[j] = i;\n                    }\n                }\n            }\n\n        }\n\n        public void findAllPrime(int n, ArrayList<Node> al, int s[]) {\n            int curr = s[n];\n            int cnt = 1;\n            while (n > 1) {\n                n /= s[n];\n                if (curr == s[n]) {\n                    cnt++;\n                    continue;\n\n                }\n                Node n1 = new Node(curr, cnt);\n                al.add(n1);\n\n                curr = s[n];\n                cnt = 1;\n            }\n        }\n\n        public int binarySearch(int n, int k) {\n            int left = 1;\n            int right = 100000000 + 5;\n            int ans = 0;\n            while (left <= right) {\n                int mid = (left + right) / 2;\n                if (n / mid >= k) {\n                    left = mid + 1;\n                    ans = mid;\n                } else {\n                    right = mid - 1;\n                }\n            }\n\n            return ans;\n        }\n\n        public boolean checkPallindrom(String s) {\n            char ch[] = s.toCharArray();\n\n            for (int i = 0; i < s.length() / 2; i++) {\n                if (ch[i] != ch[s.length() - 1 - i])\n                    return false;\n            }\n            return true;\n        }\n\n        public boolean pallindrom(String s1, String s2) {\n            char ch[] = s1.toCharArray();\n            char ch1[] = s2.toCharArray();\n\n            for (int i = 0; i < s1.length(); i++) {\n                if (ch[i] != ch1[s1.length() - 1 - i]) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        public void remove(ArrayList<Integer>[] al, int x) {\n            for (int i = 0; i < al.length; i++) {\n                for (int j = 0; j < al[i].size(); j++) {\n\n                    if (al[i].get(j) == x)\n                        al[i].remove(j);\n\n                }\n            }\n        }\n\n        public long gcd(long a, long b) {\n            if (a == 0)\n                return b;\n            return gcd(b % a, a);\n        }\n\n        public void printDivisors(long n, ArrayList<Long> al) {\n            // Note that this loop runs till square root\n            for (long i = 1; i * i <= (n); i++) {\n                if (n % i == 0) {\n                    // If divisors are equal, print only one\n                    if (n / i == i) {\n                        al.add(i);\n                    } else // Otherwise print both\n                    {\n                        al.add(i);\n                        al.add(n / i);\n                    }\n\n                }\n            }\n        }\n\n        public static long constructSegment(long seg[], long arr[], int low, int high, int pos) {\n            if (low == high) {\n                seg[pos] = arr[low];\n                return seg[pos];\n            }\n            int mid = (low + high) / 2;\n            long t1 = constructSegment(seg, arr, low, mid, (2 * pos) + 1);\n            long t2 = constructSegment(seg, arr, mid + 1, high, (2 * pos) + 2);\n            seg[pos] = t1 + t2;\n            return seg[pos];\n\n        }\n\n        public static long querySegment(long seg[], int low, int high, int qlow, int qhigh, int pos) {\n\n            if (qlow <= low && qhigh >= high) {\n                return seg[pos];\n            } else if (qlow > high || qhigh < low) {\n                return 0;\n            } else {\n                long ans = 0;\n                int mid = (low + high) / 2;\n                ans += querySegment(seg, low, mid, qlow, qhigh, (2 * pos) + 1);\n                ans += querySegment(seg, mid + 1, high, qlow, qhigh, (2 * pos) + 2);\n                return ans;\n            }\n\n        }\n\n        public static int lcs(char[] X, char[] Y, int m, int n) {\n            if (m == 0 || n == 0)\n                return 0;\n            if (X[m - 1] == Y[n - 1])\n                return 1 + lcs(X, Y, m - 1, n - 1);\n            else\n                return Integer.max(lcs(X, Y, m, n - 1), lcs(X, Y, m - 1, n));\n        }\n\n        public static long recursion(long start, long end, long cnt[], int a, int b) {\n\n            long min = 0;\n            long count = 0;\n            int ans1 = -1;\n            int ans2 = -1;\n            int l = 0;\n            int r = cnt.length - 1;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (cnt[mid] >= start) {\n                    ans1 = mid;\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n\n            l = 0;\n            r = cnt.length - 1;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (cnt[mid] <= end) {\n                    ans2 = mid;\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n\n            if (ans1 == -1 || ans2 == -1 || ans2 < ans1) {\n                // System.out.println(\"min1 \"+min);\n                min = a;\n                return a;\n\n            } else {\n                min = b * (end - start + 1) * (ans2 - ans1 + 1);\n            }\n            if (start == end) {\n                // System.out.println(\"min \"+min);\n                return min;\n            }\n            long mid = (end + start) / 2;\n            min = Long.min(min, recursion(start, mid, cnt, a, b) + recursion(mid + 1, end, cnt, a, b));\n            // System.out.println(\"min \"+min);\n            return min;\n        }\n\n        public int lowerBound(ArrayList<Long> al, long ele) {\n            int l = 0;\n            int r = al.size() - 1;\n            int ans = -1;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (al.get(mid) <= ele) {\n                    ans = mid;\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n\n            }\n            return ans;\n        }\n\n        public int lowerBound(long arr[], long ele) {\n            int l = 0;\n            int r = arr.length - 1;\n            int ans = -1;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (arr[mid] <= ele) {\n                    ans = mid;\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n\n            }\n            return ans;\n        }\n\n        public long dfs_util(ArrayList<Integer>[] al, boolean vis[], int x, long arr[], long val) {\n\n            vis[x] = true;\n\n            long temp = 0;\n            for (int i = 0; i < al[x].size(); i++) {\n\n                if (!vis[al[x].get(i)]) {\n\n                    temp += dfs_util(al, vis, al[x].get(i), arr, val + 1);\n                }\n\n            }\n            arr[x] = val - (temp);\n            return (temp + 1);\n\n        }\n\n        public long[] dfs(ArrayList[] al) {\n            long arr[] = new long[al.length];\n            boolean vis[] = new boolean[al.length];\n            for (int i = 0; i < al.length; i++) {\n                if (!vis[i]) {\n                    dfs_util(al, vis, i, arr, 0);\n                }\n            }\n            return arr;\n\n        }\n\n        public void permute(String s, int l, int r, ArrayList<String> al) {\n            if (l == r) {\n                al.add(s);\n\n            }\n            for (int i = l; i <= r; i++) {\n                String str = swap(s, l, i);\n                permute(str, l + 1, r, al);\n\n            }\n\n        }\n\n        public String swap(String s, int l, int r) {\n            char ch[] = s.toCharArray();\n            char tem = ch[l];\n            ch[l] = ch[r];\n            ch[r] = tem;\n            return String.valueOf(ch);\n        }\n\n        public int[] computeLps(String s) {\n            int ans[] = new int[s.length()];\n            char ch[] = s.toCharArray();\n            int n = s.length();\n            int i = 1;\n            int len = 0;\n            ans[0] = 0;\n            while (i < n) {\n                if (ch[i] == ch[len]) {\n                    len++;\n                    ans[i] = len;\n                    i++;\n                } else {\n                    if (len != 0) {\n                        len = ans[len - 1];\n                    } else {\n                        ans[i] = len;\n                        i++;\n                    }\n                }\n            }\n\n            return ans;\n\n        }\n\n        public int longestPrefixSuffix(String s) {\n            int n = s.length();\n\n            if (n < 2) {\n                return 0;\n            }\n\n            int len = 0;\n            int i = n / 2;\n            while (i < n) {\n                if (s.charAt(i) == s.charAt(len)) {\n                    ++len;\n                    ++i;\n                } else {\n                    if (len == 0) {\n                        ++i;\n                    } else {\n\n                        --len;\n                    }\n                }\n            }\n\n            return len;\n\n        }\n\n        public boolean convertFromBaseToBase(long num, int fromBase, int toBase, HashSet<Integer> hs) {\n            StringBuilder s = new StringBuilder();\n            boolean f = true;\n            int cnt = 0;\n            while (num > 0) {\n                long tem = num % toBase;\n                if (tem == 1) {\n                    if (hs.contains(cnt)) {\n                        f = false;\n                        break;\n                    } else {\n                        hs.add(cnt);\n                    }\n                } else if (tem == 0) {\n\n                } else {\n                    f = false;\n                    break;\n                }\n                num /= toBase;\n                cnt++;\n\n            }\n\n            return f;\n\n        }\n\n        private boolean possible(long arr[], long d, long k) {\n            long tem = 0;\n            for (int i = 0; i < arr.length - 1; i++) {\n                tem += (arr[i + 1] - arr[i]) / (d);\n\n                if ((arr[i + 1] - arr[i]) % d == 0)\n                    tem--;\n\n            }\n            if (tem <= k) {\n                return true;\n            } else\n                return false;\n\n        }\n\n        public void bfsUtil(ArrayList<Integer> a[], int out[]) {\n            boolean vis[] = new boolean[a.length];\n            for (int i = 0; i < a.length; i++) {\n                if (!vis[i]) {\n                    bipartie(a, vis, out, i);\n                }\n            }\n        }\n\n        public int[] bipartie(ArrayList<Integer> arr[], boolean vis[], int color[], int e) {\n\n            Queue<Integer> q = new LinkedList<>();\n            color[e] = 1;\n            q.add(e);\n            while (!q.isEmpty()) {\n                int x = q.remove();\n                if (vis[x]) {\n                    continue;\n                }\n                vis[x] = true;\n                for (int i = 0; i < arr[x].size(); i++) {\n                    if (!vis[arr[x].get(i)]) {\n\n                    } else {\n                        if (color[arr[x].get(i)] == color[x]) {\n                            color[x] = 2;\n                        }\n                    }\n                }\n\n                for (int i = 0; i < arr[x].size(); i++) {\n                    if (!vis[arr[x].get(i)]) {\n                        if (color[x] == 2) {\n                            color[arr[x].get(i)] = 0;\n\n                        } else {\n                            color[arr[x].get(i)] = 1 - color[x];\n\n                        }\n                        q.add(arr[x].get(i));\n                    }\n\n                }\n            }\n            return color;\n        }\n\n        public int dfs1(ArrayList<Integer> al[], int x, boolean arr[], int val, boolean vis[], long ans[]) {\n            vis[x] = true;\n            if (arr[x]) {\n\n                ans[0] += (long) val;\n            }\n            for (int i = 0; i < al[x].size(); i++) {\n\n                if (!vis[al[x].get(i)]) {\n                    int temp = val;\n                    if (!arr[x])\n                        temp++;\n                    dfs1(al, al[x].get(i), arr, temp, vis, ans);\n                }\n\n            }\n            return 0;\n        }\n\n        private void solve(InputReader inp, PrintWriter out1) {\n\n            int n = inp.nextInt();\n            int arr[] = new int[n];\n            int b[] = new int[n];\n            Arrays.fill(b, -1);\n            boolean f = true;\n            TreeSet<Integer> ts = new TreeSet<Integer>();\n            for (int i = 0; i < n; i++) {\n                arr[i] = inp.nextInt();\n                if (i != 0 && arr[i] < arr[i - 1]) {\n                    f = false;\n                }\n                ts.add(arr[i]);\n\n            }\n            // check increasing order/\n            if (!f) {\n                out1.println(-1);\n                return;\n            }\n\n            for (int i = 1; i < arr.length; i++) {\n                if (arr[i] != arr[i - 1]) {\n                    b[i] = arr[i - 1];\n                }\n            }\n            int p = 0;\n            for (int i = 0; i < b.length; i++) {\n                if (b[i] == -1) {\n                    while (ts.contains(p)) {\n                        p++;\n                    }\n                    b[i] = p;\n                    ts.add(p);\n                }\n            }\n\n            for (int i = 0; i < b.length; i++) {\n                out1.print(b[i] + \" \");\n            }\n\n        }\n\n    }\n\n    static class InputReader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n\nclass ele implements Comparable<ele> {\n    int i;\n    int val;\n\n    public ele(int i, int val) {\n        this.i = i;\n        this.val = val;\n\n    }\n\n    @Override\n    public int compareTo(ele e) {\n\n        if ((e.val - e.i) == (this.val - this.i)) {\n            return Integer.compare(this.i, e.i);\n        }\n        return Integer.compare(e.val - e.i, this.val - this.i);\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n \npublic class Solution{\n\tstatic PrintWriter out=new PrintWriter(System.out);\n\tpublic static void main (String[] args) throws IOException{\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\tString[] input=br.readLine().trim().split(\" \");\n\t\t\n\t\n\t\tint n = Integer.parseInt(input[0]);\n\t\tint[] arr = new int[n];\n\t\tinput = br.readLine().trim().split(\" \");\n\t\tfor(int i = 0; i < n ; i++){\n\t\t    arr[i] = Integer.parseInt(input[i]);\n\t\t}\n\t\tprintArray(arr);\n\t\t\n\t\tout.flush();\n\t\tout.close();\n\t}\n\tpublic static void printArray(int[] arr)\n\t{\n\t    int n = arr.length;\n\t    int[] freqArray = new int[2 * n + 1];\n\t    FenwickTree fenTree = new FenwickTree(2 * n);\n\t    for(int i = n - 1; i >= 0; i--){\n\t        freqArray[arr[i]]++;\n\t        if(freqArray[arr[i]] == 1){\n\t            fenTree.update(arr[i] + 1, 1);\n\t        }\n\t    }\n\t    for(int i = 0; i < n; i++){\n\t        int mex = binarySearch(fenTree, 2 * n) - 1;\n\t        out.print(mex + \" \");\n\t        if(freqArray[mex] == 0){\n\t            fenTree.update(mex + 1, 1);\n\t            freqArray[mex] = 1;\n\t        }\n\t        freqArray[arr[i]]--;\n\t        if(freqArray[arr[i]] == 0)\n\t        {\n\t            fenTree.update(arr[i] + 1, -1);\n\t        }\n\t    }\n\t}\n\tpublic static int binarySearch(FenwickTree fenTree, int end)\n\t{\n\t    int start = 1;\n\t    int ans = end;\n\t    while(start <= end){\n\t        int mid = (start + end) / 2;\n\t        int countActual = fenTree.getSum(mid) - fenTree.getSum(start - 1);\n\t        int countExpected = mid - start + 1;\n\t        if(countActual < countExpected)\n\t        {\n\t            ans = mid;\n\t            end = mid -1;\n\t        }\n\t        else{\n\t            start = mid + 1;\n\t        }\n\t    }\n\t    return ans;\n\t}\n}\n\nclass FenwickTree{\n    int[] BIT;\n    int n;\n    \n    public FenwickTree(int n)\n    {\n        this.n = n;\n        BIT = new int[n + 1];\n    }\n    \n    public void update(int index, int increment)\n    {\n        while(index <= n){\n            BIT[index] += increment;\n            index += index & (-index);\n        }\n    }\n    \n    public int getSum(int index)\n    {\n        int sum = 0;\n        while(index > 0)\n        {\n            sum += BIT[index];\n            index -= index & (-index);\n        }\n        return sum;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nn=int(input())\nl=list(map(int,input().split()))\nl1=[]\nd=defaultdict(int)\nfor x in l:\n    d[x]=1\nma=1\nif l[0]==0:\n    while(d[ma]!=0):\n            ma+=1\n    d[ma]=1\n    l1.append(ma)\n    m=0\nelif l[0]==1:\n    l1.append(0)\n    m=1\n    ma=2\nelse:\n    f=1\n    sys.exit(0)\nf=0\nfor x in range(1,n):\n    if l[x]==m:\n        while(d[ma]!=0):\n            ma+=1\n        d[ma]=1\n        l1.append(ma)\n    else:\n        if l[x]>ma+1:\n            f=1\n            break\n        l1.append(m)\n        m=l[x]\n        ma=max(ma,m)\nif f==1:\n    print(-1)\nelse:\n    for x in l1:\n        print(x,end=\" \")\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nlong long mod = 1e9 + 7;\ninline long long pwr(long long base, long long n) {\n  long long ans = 1;\n  while (n > 0) {\n    if (n % 2 == 1) ans = (ans * base) % mod;\n    base = (base * base) % mod;\n    n /= 2;\n  }\n  return ans;\n}\nstruct range {\n  int l, h;\n};\nstruct ab {\n  int time, type;\n};\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  map<int, int> m;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    m[a[i]] = 1;\n  }\n  for (int i = 0; i < n; i++) {\n    if (a[i] > i + 1) {\n      cout << \"-1\\n\";\n      return 0;\n    }\n  }\n  vector<int> ans;\n  int c = 0;\n  for (int i = 0; i < n; i++) {\n    if (i == 0 || a[i] == a[i - 1]) {\n      if (m[c]) {\n        c++;\n        i--;\n      } else {\n        ans.push_back(c);\n        c++;\n      }\n    } else\n      ans.push_back(a[i - 1]);\n  }\n  for (auto i : ans) cout << i << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Main\n{   static class FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public FastReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n \n    public static void main(String[] args)\n    {\n        FastReader sc=new FastReader();\n     \tint t= 1;\n     \twhile(t-->0)\n     \t{\n     \t    int n= sc.nextInt();\n     \t    //int x= sc.nextInt();\n     \t   // int m= sc.nextInt();\n     \t    int a[]= new int[n];\n     \t    int min=0;\n     \t    HashMap<Integer,Integer> h =new HashMap<>();\n     \t   for(int i=0;i<n;i++)\n     \t   {\n     \t       a[i]=sc.nextInt();\n     \t       if(h.containsKey(a[i]))\n     \t       h.put(a[i],h.get(a[i])+1);\n     \t       else\n     \t       h.put(a[i],1);\n     \t   }\n     \t   PriorityQueue<Integer> p= new PriorityQueue<>();\n     \t   for(int i=0;i<2*n;i++)\n     \t   {\n     \t       if(!h.containsKey(i))\n     \t       p.add(i);\n     \t   }\n     \t   HashMap<Integer,Integer> h1= new HashMap<>();\n     \t   int flag=0;\n     \t   int b[]=new int[n];\n     \t   for(int i=0;i<n;i++)\n     \t   {\n     \t       int x= p.poll();\n     \t       b[i]=x;\n     \t       h1.put(x,1);\n     \t       while(h1.containsKey(min))\n     \t       min++;\n     \t       if(min!=a[i])\n     \t       {\n     \t           flag=1;\n     \t           break;\n     \t       }\n     \t       if(h.get(a[i])>1)\n     \t       h.put(a[i],h.get(a[i])-1);\n     \t       else\n     \t       {h.remove(a[i]);\n     \t       p.add(a[i]);}\n     \t   }\n     \t   if(flag==1)\n     \t   System.out.println(\"-1\");\n     \t   else\n     \t   {\n     \t       for(int i=0;i<n;i++)\n     \t       System.out.print(b[i]+\" \");\n     \t   }\n     \t}\n     \t\n\t}\n\tstatic class Pair\n\t{\n\t    int x;\n\t    int y;\n\t    public Pair(int a, int b)\n\t    {\n\t        x=a;\n\t        y=b;\n\t    }\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  vector<int> need(n + 1, 0);\n  for (int i = 0; i < n; i++) {\n    if (a[i] > i + 1) {\n      cout << -1 << endl;\n      return;\n    }\n    need[a[i]]++;\n  }\n  vector<int> ans(n, -1);\n  int MIN = 0, MAX = 0;\n  for (int i = 0; i < n; i++) {\n    while (MAX < n && need[MAX]) {\n      MAX++;\n    }\n    if (need[MIN]) {\n      ans[i] = MAX;\n      if (MAX < n) {\n        MAX++;\n      }\n    } else {\n      ans[i] = MIN;\n      while (!need[MIN] && MIN <= MAX) {\n        MIN++;\n      }\n      MAX = max(MAX, MIN);\n    }\n    need[a[i]]--;\n  }\n  vector<bool> seen(n + 1, 0);\n  for (int i = 0, j = 0; i < n; i++) {\n    seen[ans[i]] = 1;\n    while (j < n && seen[j]) {\n      j++;\n    }\n    if (j != a[i]) {\n      cout << -1 << endl;\n      return;\n    }\n  }\n  for (int& x : ans) {\n    cout << x << \" \";\n  }\n  cout << endl;\n  return;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  srand(chrono::steady_clock::now().time_since_epoch().count());\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nint v[maxn], w[maxn];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &v[i]);\n    w[i] = n + 1;\n  }\n  int k = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = i; j >= 1; --j) {\n      if (k >= v[i]) break;\n      if (w[j] == n + 1) {\n        w[j] = k++;\n      }\n    }\n  }\n  for (int i = 1; i <= n; ++i) {\n    if (i == n)\n      printf(\"%d\\n\", w[n]);\n    else\n      printf(\"%d \", w[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint a[N];\nbool st[N];\nint main() {\n  int n;\n  cin >> n;\n  priority_queue<int, vector<int>, greater<int> > heap;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    st[a[i]] = true;\n  }\n  for (int i = 0; i < 2 * n; i++) {\n    if (!st[i]) heap.push(i);\n  }\n  for (int i = 1; i <= n; i++) {\n    cout << heap.top() << ' ';\n    heap.pop();\n    if (a[i + 1] != a[i]) heap.push(a[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.text.Collator;\nimport java.util.*;\nimport java.util.stream.*;\n\nimport static java.lang.Math.*;\nimport static java.util.stream.Collectors.*;\n\npublic class Main {\n    void solve() {\n        int n = in.nextInt();\n        int[] a = in.nextInts(n);\n        boolean[] has = new boolean[n+1];\n        for (int el : a) {\n            has[el] = true;\n        }\n        int[] b = new int[n];\n        int i1 = 1;\n\n        if (0 != a[0]){\n            b[0] = 0;\n        }else {\n            while (has[i1])i1++;\n            b[0] = i1++;\n        }\n\n        for (int i = 1; i < n; i++) {\n            if (a[i-1] != a[i]){\n                b[i] = a[i-1];\n            }else {\n                while (has[i1])i1++;\n                b[i] = i1++;\n            }\n        }\n        out.println(b);\n    }\n\n    static final boolean MULTI_TEST = false;\n\n    // --------------------------------------------------------------------------------------------------------------\n    // --------------------------------------------------HELPER------------------------------------------------------\n    // --------------------------------------------------------------------------------------------------------------\n\n\n    void solve2() {\n//        init();\n        if (MULTI_TEST) {\n            int t = in.nextInt();\n            for (int i = 0; i < t; i++) {\n                solve();\n            }\n        } else {\n            solve();\n        }\n    }\n\n    // --------------------ALGORITHM-------------------------\n\n    public void sort(int[] arr) {\n        List<Integer> tmp = Arrays.stream(arr).boxed().sorted().collect(Collectors.toList());\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = tmp.get(i);\n        }\n    }\n\n    // --------------------SCANNER-------------------------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner(boolean debug) {\n            if (debug) {\n                try {\n                    br = new BufferedReader(new FileReader(\"input.txt\"));\n                } catch (FileNotFoundException e) {\n                    throw new RuntimeException(e);\n                }\n            } else {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                st = new StringTokenizer(nextLine());\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextInts(int n) {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public long[] nextLongs(int n) {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextLong();\n            }\n            return arr;\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            try {\n                String line = br.readLine();\n                if (line == null) {\n                    throw new RuntimeException(\"empty line\");\n                }\n                return line;\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n\n    // --------------------WRITER-------------------------\n    public static class MyWriter extends PrintWriter {\n\n        public MyWriter(OutputStream out) {\n            super(out);\n        }\n\n        void println(int[] arr) {\n            String line = Arrays.stream(arr).mapToObj(String::valueOf).collect(joining(\" \"));\n            println(line);\n        }\n\n    }\n    // --------------------MAIN-------------------------\n\n    public MyScanner in;\n    public MyWriter out;\n\n    public static void main(String[] args) {\n        Main m = new Main();\n        m.in = new MyScanner(args.length > 0);\n        m.out = new MyWriter(new BufferedOutputStream(System.out));\n        m.solve2();\n        m.out.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import heapq\nn,a,b=int(input()),list(map(int, input().split())),[0]*(200000)\nfor i in range(n): b[a[i]]=1\nhp=[i for i in range(n+1) if not b[i]]\nheapq.heapify(hp)\nfor i in range(n):\n    print(heapq.heappop(hp),end=\" \")\n    if a[i]<a[min(i+1,n-1)]: heapq.heappush(hp,a[i])"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\ndef mex(n, a):\n    if a[0] > 1:\n        print(-1)\n        return\n    unuse = list(range(2*10**5+3,-1,-1))\n    used = set(a)\n    unused = [t for t in unuse if t not in used]\n    ret = []\n    i = 0\n    while i < len(a):\n        if i-1 >= 0 and a[i] != a[i-1]:\n            ret.append(a[i-1])\n            if unused[-1] <= a[i]:\n                print(-1)\n                return\n        else:\n            ret.append(unused.pop())\n        i += 1\n    print(' '.join(map(str, ret)))\n\nmex(n, a)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100100;\nint a[N], b[N], ex[N];\nvoid solve() {\n  int n;\n  cin >> n;\n  memset(b, -1, sizeof(b));\n  for (int i = 1; i <= (int)(n); ++i) {\n    cin >> a[i];\n  }\n  for (int i = 1; i <= (int)(n); ++i) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      ex[b[i]] = 1;\n    }\n  }\n  ex[a[n]] = 1;\n  int m = 0;\n  for (int i = 1; i <= (int)(n); ++i) {\n    while (ex[m]) m++;\n    if (b[i] == -1) {\n      b[i] = m;\n      ex[m] = 1;\n    }\n    cout << b[i] << \" \";\n  }\n  cout << endl;\n}\nint main() {\n  int t;\n  t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().rstrip().split()))\nfreq = dict()\nfor el in a:\n    freq[el] = freq.get(el, 0) + 1\npos = list()\nfor i in range(0, 2*n+2):\n    if i not in freq:\n        pos.append(i)\nres = [0 for i in range(n)]\npunt = 0\nfor i in range(n):\n    if i == 0 or freq[a[i-1]] > 0:\n        res[i] = str(pos[punt])\n        punt += 1\n    else:\n        res[i] = str(a[i-1])\n    freq[a[i]] -= 1\nprint(\" \".join(res))"
        },
        {
            "language": 3,
            "solution": "import os, sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nmod = 10 ** 9 + 7\nfrom math import ceil\nn=int(input())\na=list(map(int,input().split()))\ns=set()\nfor i in range(a[-1]+5):\n    s.add(i)\nfor i in a:\n    if i in s:\n        s.remove(i)\nck=[i for i in s]\nb=[ck[0]]\nj=1\nfor i in range(1,n):\n    if a[i-1]==a[i]:\n        if j<len(ck):\n            b.append(ck[j])\n            j+=1\n        else:\n            b.append(b[-1])\n    else:\n        b.append(a[i-1])\nprint(*b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int inf = 0x3f3f3f3f;\nint b[maxn];\nint a[maxn];\nint ma[maxn];\nint pre[maxn * 10];\nint _find(int x) { return x == pre[x] ? x : pre[x] = _find(pre[x]); }\nvoid _union(int x, int y) {\n  x = _find(x), y = _find(y);\n  if (x < y)\n    pre[x] = y;\n  else\n    pre[y] = x;\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < maxn * 10; ++i) pre[i] = i;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    ma[i] = max(ma[i - 1], a[i]);\n  }\n  int x = 0;\n  for (int i = n; i > 0; --i) {\n    if (a[i] > ma[i - 1])\n      b[i] = ma[i - 1];\n    else\n      b[i] = a[i] + 1;\n    b[i] = _find(b[i]);\n    _union(b[i], b[i] + 1);\n    _union(a[i], a[i] + 1);\n    x = max(x, a[i]);\n  }\n  for (int i = 1; i <= n; ++i) printf(\"%d%c\", b[i], i == n ? '\\n' : ' ');\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import defaultdict as dd\nfrom collections import deque\nfrom fractions import Fraction as f\ndef eprint(*args):\n    print(*args, file=sys.stderr)\nzz=1\nfrom math import *\nimport copy\n#sys.setrecursionlimit(10**6)\nif zz:\n\tinput=sys.stdin.readline\nelse:\t\n\tsys.stdin=open('input.txt', 'r')\n\tsys.stdout=open('all.txt','w')\ndef li():\n\treturn [int(x) for x in input().split()]\ndef fi():\n\treturn int(input())\ndef si():\n\treturn list(input().rstrip())\t\ndef mi():\n\treturn \tmap(int,input().split())\t\ndef gh():\n\tsys.stdout.flush()\ndef bo(i):\n\treturn ord(i)-ord('a')\nfrom copy import *\nfrom bisect import *\t\n\nfrom itertools import permutations \n\n\n\nt=1\n\nwhile t>0:\n\tt-=1\n\tn=fi()\t\n\ta=li()\n\td=[0 for i in range(n)]\n\ts=set([i for i in range(n+1)])\n\tp=s-set(a)\n\ts=list(s)\n\ts.sort()\n\tff={}\n\tmex=0\n\tfor i in range(n):\n\t\tif a[i]>i+1:\n\t\t\tprint(-1)\n\t\t\texit(0)\n\tj=0\n\tm=len(p)\n\tp=list(p)\n\t#print(p)\t\t\n\tfor i in range(n):\n\t\tif i>0 and a[i]!=a[i-1]:\n\t\t\tprint(a[i-1],end=\" \")\n\t\telif j>=m :\n\t\t\tprint(0,end=\" \")\n\t\telse:\n\t\t\tprint(p[j],end=\" \")\n\t\t\tj+=1\t\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  int arr[n];\n  vector<long long> v, have(100005, 0);\n  for (int i = 0; i < n; ++i) {\n    cin >> arr[i];\n    have[arr[i]]++;\n  }\n  int j = 0;\n  vector<long long> not_have;\n  for (int i = 0; i <= n; ++i) {\n    if (!have[i]) not_have.push_back(i);\n  }\n  for (int i = 0; i < n; ++i) {\n    if (!i) {\n      v.push_back(not_have[j++]);\n      continue;\n    }\n    if (arr[i] != arr[i - 1]) {\n      v.push_back(arr[i - 1]);\n      have[arr[i - 1]]++;\n    } else {\n      v.push_back(not_have[j++]);\n    }\n  }\n  for (auto x : v) cout << x << \" \";\n  cout << endl;\n}\nint main() {\n  ios_base ::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cout.precision(35);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys, math\n#import io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n#from bisect import bisect_left as bl, bisect_right as br, insort\n#from heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n#from itertools import permutations,combinations\ndef data(): return sys.stdin.buffer.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var) : sys.stdout.write(' '.join(map(str, var))+'\\n')\ndef out(var) : sys.stdout.write(str(var)+'\\n')\n#sys.setrecursionlimit(100000)\nINF = float('inf')\nmod = 998244353\n#from decimal import Decimal\n\nn=int(data())\na=mdata()\ns=set(a)\nd=dd(int)\nfor i in range(n):\n    d[a[i]]=i\ncnt=0\nans=[]\nk=0\nfor i in range(n):\n    while True:\n        if cnt in s:\n            cnt+=1\n        else:\n            break\n    if k==0:\n        ans.append(cnt)\n        if d[a[i]]==i:\n            ans.append(a[i])\n            k=1\n        cnt+=1\n    else:\n        if d[a[i]]==i:\n            ans.append(a[i])\n        else:\n            k=0\nif len(ans)>n:\n    ans.pop()\nprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "# May the Speedforce be with us...\n'''\nproblem statement achhe se padhna hai\nage se bhi dekhna hai, piche se bhi dekhna hai\n'''\n#from math import gcd,ceil,sin,radians,cos\n#from bisect import insort\n#from collections import defaultdict as dd\ndef lcm(a,b):\n\treturn (a*b)//gcd(a,b)\ndef inin():\n\treturn int(input())\ndef inar():\n\treturn list(map(int,input().split()))\ndef ar(element,size):\n\treturn [element for i in range(size)]\ndef yes():\n\tprint('Yes')\ndef no():\n\tprint('No')\n'''\ndef countDivisibles(A, B, M): #count numbers in the range[A,B] which are divisible by M\n    if (A % M == 0): \n        return ((B // M) - (A // M)) + 1\n    return ((B // M) - (A // M)) \n\t\ndef  countSetBits(n): #count the number of set bits in the binary representation of an integer\n    count = 0\n    while (n): \n        count += n & 1\n        n >>= 1\n    return count\ndef digitsum(num): #return the sum of dogots of a number\n\tsu=0\n\twhile(num):\n\t\tsu+=num%10\n\t\tnum//=10\n\treturn su\n'''\n\nTestcase=1\nfor _ in range(Testcase):\n\tn=inin()\n\ta=inar()\n\ti=1\n\ts=set(a[:])\n\td=[-1 for i in range(n)]\n\twhile(i<n):\n\t\tif a[i]!=a[i-1]:\n\t\t\td[i]=a[i-1]\n\t\ti+=1\n\ta=set([i for i in range(0,100009)])\n\ta=a.difference(s)\n\tfor i in range(n):\n\t\tif d[i]==-1:\n\t\t\td[i]=a.pop()\n\tprint(*d)\n\t\t"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nfrom sys import stdin as cin\n\nlmap = lambda f, v: list(map(f, v))\n\ndef mexarray(a):\n    missing = list(sorted(set(range(1, len(a) + 1)) - set(a), reverse=True))\n    a = [0] + a\n    for i in range(1, len(a)):\n        if a[i] == a[i-1]:\n            yield missing.pop()\n        else:\n            yield a[i-1]\n\n\ndef main():\n    n = lmap(int, next(cin).strip().split())\n    a = lmap(int, next(cin).strip().split())\n    print(\" \".join(map(str, mexarray(a))))\n\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long t, n, a[100010], b[100010];\ndeque<int> x;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = 1; i <= n; i++) {\n    if (a[i] > i) {\n      cout << \"-1\";\n      return 0;\n    }\n  }\n  for (int i = 2; i <= n; i++) {\n    if (a[i] == a[i - 1])\n      continue;\n    else {\n      for (int v = a[i - 1] + 1; v < a[i]; v++) x.push_back(v);\n    }\n  }\n  for (int i = 1; i <= n; i++) x.push_back(a[n] + 1);\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == a[i - 1]) {\n      b[i] = x.front();\n      x.pop_front();\n    } else {\n      b[i] = a[i - 1];\n    }\n  }\n  for (int i = 1; i <= n; i++) cout << b[i] << \" \";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint last[N];\nint a[N];\nint b[N];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  bool ok = 1;\n  int mx = -1;\n  set<int> st;\n  for (int i = 1; i <= n; ++i) {\n    cin >> a[i];\n    if (a[i] < mx || a[i] > i) ok = 0;\n    mx = max(mx, a[i]);\n    last[a[i]] = i;\n    st.insert(i);\n  }\n  if (!ok) {\n    cout << -1;\n    return 0;\n  }\n  for (int i = 0; i < n; ++i) {\n    int t = last[i];\n    if (t == 0) {\n      auto it = st.begin();\n      int id = *it;\n      st.erase(id);\n      b[id] = i;\n    } else {\n      b[t + 1] = i;\n      st.erase(t + 1);\n    }\n  }\n  if (st.size()) {\n    auto it = st.begin();\n    for (; it != st.end(); ++it) {\n      b[*it] = n;\n    }\n  }\n  for (int i = 0; i < n; ++i) {\n    cout << b[i + 1] << ' ';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint read() {\n  int ans = 0, f = 1;\n  char c = getchar();\n  while (c > '9' || c < '0') {\n    if (c == '-') f = -1;\n    c = getchar();\n  }\n  while (c >= '0' && c <= '9') {\n    ans = ans * 10 + c - '0';\n    c = getchar();\n  }\n  return ans * f;\n}\nconst int N = 1e5 + 5;\nint n, a[N], b[N], have, num, now = 1;\nint main() {\n  memset(b, -1, sizeof(b));\n  n = read();\n  for (int i = 1; i <= n; ++i) a[i] = read();\n  for (int i = 1; i <= n; ++i) {\n    if (a[i] > i) {\n      printf(\"-1\\n\");\n      return 0;\n    }\n    for (; num <= a[i] - 1; ++num) {\n      if (b[i] == -1)\n        b[i] = num;\n      else {\n        while (b[now] != -1) now++;\n        b[now] = num;\n      }\n    }\n    num = a[i];\n  }\n  for (int i = 1; i <= n; ++i)\n    if (b[i] == -1)\n      printf(\"%d \", 1000000);\n    else\n      printf(\"%d \", b[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int df = (int)(1e6);\nint v[100000 + 5], sol[100000 + 5], fv[10 * 100000 + 5];\nset<int> todo;\nvoid nu() {\n  cout << -1;\n  exit(0);\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  int i, j, z;\n  for (i = 1; i <= n; i++) cin >> v[i];\n  if (v[1] > 1) nu();\n  for (z = (*max_element(v + 1, v + n + 1)) - 1; z >= 0; z--) todo.insert(z);\n  fill(begin(sol), end(sol), df);\n  for (i = n; i > 1; i--)\n    if (v[i] != v[i - 1]) {\n      sol[i] = v[i - 1];\n      auto it = todo.find(sol[i]);\n      if (it != todo.end()) todo.erase(it);\n    }\n  for (i = 1; i <= n; i++)\n    if (sol[i] == df && !todo.empty()) {\n      sol[i] = *todo.begin();\n      todo.erase(todo.begin());\n    }\n  int mex = 0;\n  for (i = 1; i <= n; i++) {\n    fv[sol[i]]++;\n    if (mex == sol[i]) do {\n        mex++;\n      } while (fv[mex] != 0);\n    if (mex != v[i]) nu();\n  }\n  for (i = 1; i <= n; i++) cout << sol[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\n\ndef inp():\n    return stdin.buffer.readline().rstrip().decode(\"utf8\")\n\n\ndef itg():\n    return int(stdin.buffer.readline())\n\n\ndef mpint():\n    return map(int, stdin.buffer.readline().split())\n\n\n# ############################## import\n# ############################## main\n# for case in range(1, itg()+1):\ndef main():\n    n = itg()\n    arr = tuple(mpint())\n    have_ans = all([(arr[i] <= arr[i+1] and arr[i] <= i+1) for i in range(n-1)])\n    if not have_ans:\n        return [-1]\n    aa = set(arr)\n    bb = sorted(set(range(n+7)) - aa, reverse=True)\n    aa = sorted(aa, reverse=True)\n    ans = [bb.pop()]\n    for i in range(1, n):\n        if arr[i-1] != arr[i]:\n            ans.append(aa.pop())\n        else:\n            ans.append(bb.pop())\n    return ans\n\nprint(*main())\n# Please check!\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[-1]*n\nuse=[False]*(n+1)\n\nfor i in range(1,n):\n    if a[i]!=a[i-1]:\n        b[i]=a[i-1]\n        use[a[i-1]]=True\n        \nuse[a[n-1]]=True      \nind=0    \ni=0\nwhile ind<n:\n    if b[ind]==-1:\n        while use[i]==True:\n            i+=1\n        b[ind]=i\n        use[i]=True\n        ind+=1\n    else:\n        ind+=1\nprint(*b)"
        },
        {
            "language": 3,
            "solution": "import heapq\n\nn = int(input())\n*arr, = map(int, input().split())\n\nfirst = {}\nlast = {}\n\nfor i in range(n):\n    last[arr[i]] = i\n\nbig_number = max(arr) + 1\n\nb = [-1] * n\n\nused = set()\nfor i in range(n):\n    if i == 0 or arr[i] != arr[i - 1]:\n        last_idx = last[arr[i]]\n        if last_idx != n - 1:\n            b[last_idx + 1] = arr[i]\n            used.add(arr[i])\nused.add(arr[-1])\n\nmax_val = max(arr) + 1\nl = arr[-1] - 1\n\nl = 0\n\nfor i in range(n):\n    if b[i] == -1:\n        while l in used:\n            l += 1\n        b[i] = l\n        l += 1\n\n\nprint(*b)\n"
        },
        {
            "language": 3,
            "solution": "import time,math,bisect,sys\nfrom sys import stdin,stdout\nfrom collections import deque\nfrom fractions import Fraction\nfrom collections import Counter\npi=3.14159265358979323846264338327950\ndef II(): # to take integer input\n    return int(stdin.readline())\ndef IO(): # to take string input\n    return stdin.readline()\ndef IP(): # to take tuple as input\n    return map(int,stdin.readline().split())\ndef L(): # to take list as input\n    return list(map(int,stdin.readline().split()))\ndef P(x): # to print integer,list,string etc..\n    return stdout.write(str(x)+\"\\n\")\ndef PI(x,y): # to print tuple separatedly\n    return stdout.write(str(x)+\" \"+str(y)+\"\\n\")\ndef lcm(a,b): # to calculate lcm\n    return (a*b)//gcd(a,b)\ndef gcd(a,b): # to calculate gcd\n    if a==0:\n        return b\n    elif b==0:\n        return a\n    if a>b:\n        return gcd(a%b,b)\n    else:\n        return gcd(a,b%a)\ndef readTree(): # to read tree\n    v=int(input())\n    adj=[set() for i in range(v+1)]\n    for i in range(v-1):\n        u1,u2=In()\n        adj[u1].add(u2)\n        adj[u2].add(u1)\n    return adj,v\ndef bfs(adj,v): # a schema of bfs\n    visited=[False]*(v+1)\n    q=deque()\n    while q:\n        pass\ndef sieve():\n    li=[True]*1000001\n    li[0],li[1]=False,False\n    for i in range(2,len(li),1):\n        if li[i]==True:\n            for j in range(i*i,len(li),i):\n                li[j]=False\n    prime=[]\n    for i in range(1000001):\n        if li[i]==True:\n            prime.append(i)\n    return prime\ndef setBit(n):\n    count=0\n    while n!=0:\n        n=n&(n-1)\n        count+=1\n    return count\n#####################################################################################\ndef solve():\n    n=II()\n    a=L()\n    b=[-1]*n\n    visited=[0]*(10**6+1)\n    visited[a[0]]=1\n    for i in range(1,n):\n        if a[i]!=a[i-1]:\n            b[i]=a[i-1]\n        visited[a[i]]=1\n    #print(b)\n    avail=[]\n    for i in range(10**6+1):\n        if visited[i]==0:\n            avail.append(i)\n    k=0\n    for i in range(n):\n        if b[i]==-1:\n            b[i]=avail[k]\n            k+=1\n    print(*b)\n\nsolve()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic final class CodeForces648C {\n    public static void main(String args[]){\n        FastReader sc=new FastReader(); \n        PrintWriter out = new PrintWriter(System.out);\n        int n =sc.nextInt();\n        int a[] = new int[n];\n        int f[] = new int[1000001];\n        for(int j=0;j<n;j++){\n            a[j] = sc.nextInt();\n            f[a[j]] = 1;\n        }\n        \n        \n        for(int j=0;j<n;j++){\n            if(a[j]>j+1){\n                System.out.println(\"-1\");\n                System.exit(0);\n            }\n        }\n        \n        int max = a[n-1];\n        int b[] = new int[n+1];\n        int c[] = new int[n+1];\n        int fLen = f.length;\n        int k=0,t=0;\n        for(int j=0;j<=n;j++){\n            if(f[j]==0){\n                b[k++]=j;\n            }\n            else{\n                c[t++]=j;\n            }\n        }\n        \n        int z=0,m=0;\n        \n        StringBuilder ans = new StringBuilder();\n        ans.append(b[z++]+\" \");\n        for(int j=1;j<n;j++){\n            if(a[j]!=a[j-1]){\n                ans.append(a[j-1]+\" \");\n            }\n            else{\n                ans.append(b[z++]+\" \");\n            }\n        }\n        System.out.println(ans);\n        out.flush();\n        out.close();\n    }\n    \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                \n            } \n            return str; \n        } \n    } \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.InputMismatchException;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Set;\n\npublic class C {\n\n    public void solve() {\n        InputReader in = new InputReader(System.in);\n        OutputWriter out = new OutputWriter(System.out);\n        int n = in.readInt();\n        int a[] = IOUtils.readIntegerArray(in, n);\n        int b[] = new int[n + 1];\n        LinkedList<Integer> ll = new LinkedList<>();\n        for (int i = 0; i < n; i++) {\n            if ( a[i] > i + 1 ) {\n                out.printLine(-1);\n                out.flush();\n                System.exit(0);\n            }\n        }\n        int now = 0;\n        for (int j = 0; j < n; j++) {\n            ll.addLast(j);\n            if ( a[j] > now ) {\n                while (now < a[j]) {\n                    b[ll.getLast()] = now++;\n                    ll.removeLast();\n                }\n            }\n        }\n        for (Integer index : ll) {\n            b[index] = 100000;\n        }\n        for (int j = 0; j < n; j++) {\n            out.print(b[j] + \" \");\n        }\n        out.flush();\n    }\n\n    public static void main(String[] args) {\n        C solver = new C();\n        solver.solve();\n    }\n\n    static class InputReader {\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if ( numChars == -1 )\n                throw new InputMismatchException();\n            if ( curChar >= numChars ) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if ( numChars <= 0 )\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if ( c == '-' ) {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if ( c < '0' || c > '9' )\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if ( c == '-' ) {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if ( c < '0' || c > '9' )\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if ( filter != null )\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if ( i != 0 )\n                    writer.print(' ');\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void flush() {\n            writer.flush();\n        }\n\n    }\n\n    static class IOUtils {\n\n        public static int[] readIntegerArray(InputReader in, int size) {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = in.readInt();\n            }\n            return array;\n        }\n\n        public static long[] readLongArray(InputReader in, int size) {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = in.readLong();\n            }\n            return array;\n        }\n\n        public static List<Integer> readIntegerList(InputReader in, int size) {\n            List<Integer> set = new ArrayList<>();\n            for (int i = 0; i < size; i++) {\n                set.add(in.readInt());\n            }\n            return set;\n        }\n\n        public static Set<Integer> readIntegerSet(InputReader in, int size) {\n            Set<Integer> set = new HashSet<Integer>();\n            for (int i = 0; i < size; i++) {\n                set.add(in.readInt());\n            }\n            return set;\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "\n// Problem : C. Ehab and Prefix MEXs\n// Contest : Codeforces - Codeforces Round #649 (Div. 2)\n// URL : https://codeforces.com/contest/1364/problem/C\n// Memory Limit : 256 MB\n// Time Limit : 1000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\nimport java.io.*;\nimport java.util.*;\nimport java.util.stream.*;\n\npublic class a implements Runnable{\n\t\n    public static void main(String[] args) {\n        new Thread(null, new a(), \"process\", 1<<26).start();\n    }\n\tpublic void run() {\n\t\tFastReader scan = new FastReader();\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\t\t//PrintWriter out = new PrintWriter(\"file.out\");\n\t\tTask solver = new Task();\n\t\t//int t = scan.nextInt();\n\t\tint t = 1;\n\t\tfor(int i = 1; i <= t; i++) solver.solve(i, scan, out);\n\t\tout.close();\n\t}\n\n\tstatic class Task {\n\t\tstatic final int inf = Integer.MAX_VALUE;\n\n\t\tpublic void solve(int testNumber, FastReader sc, PrintWriter pw) {\n\t\t\t//CHECK FOR QUICKSORT TLE\n\t\t\t//***********************//\n\t\t\t//CHECK FOR INT OVERFLOW\n\t\t\t//***********************//\n\t\t\tint n = sc.nextInt();\n\t\t\tint[] arr = new int[n];\n\t\t\tTreeSet<Integer> hs = new TreeSet<Integer>();\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = sc.nextInt();\n\t\t\t\ths.add(arr[i]);\n\t\t\t}\n\t\t\tint ans[] = new int[n];\n\t\t\tint ptr = -1;\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tif(arr[i] > i + 1) {\n\t\t\t\t\tpw.println(-1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(i > 0 && arr[i-1] < arr[i]) {\n\t\t\t\t\tans[i] = arr[i - 1];\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tptr++;\n\t\t\t\t\twhile(hs.contains(ptr)) {\n\t\t\t\t\t\tptr++;\n\t\t\t\t\t}\n\t\t\t\t\tans[i] = ptr;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int x : ans) {\n\t\t\t\tpw.print(x + \" \");\n\t\t\t}\n\t\t}\n\t}\n\tstatic long binpow(long a, long b, long m) {\n\t\ta %= m;\n\t\tlong res = 1;\n\t\twhile (b > 0) {\n\t\t\tif ((b & 1) == 1)\n\t\t\t\tres = res * a % m;\n\t\t\ta = a * a % m;\n\t\t\tb >>= 1;\n\t\t}\n\t\treturn res;\n\t}\n\tstatic void sort(int[] x){\n\t\tshuffle(x);\n\t\tArrays.sort(x);\n\t}\n\tstatic void sort(long[] x){\n\t\tshuffle(x);\n\t\tArrays.sort(x);\n\t}\n\tstatic class tup implements Comparable<tup>{\n\t\tint a, b;\n\t\ttup(int a,int b){\n\t\t\tthis.a=a;\n\t\t\tthis.b=b;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(tup o){\n\t\t\treturn Integer.compare(o.b,b);\n\t\t}\n\t}\n\tstatic void shuffle(int[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(i + 1);\n\t\t\tint temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\n\tstatic void shuffle(long[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(i + 1);\n\t\t\tlong temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastReader(String s) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(new File(s)));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\n\npublic class sol {\n\n\t\n\tstatic class Reader {\n\t\t\n\t\tstatic BufferedReader reader;\n\t\tstatic StringTokenizer tokenizer;\n\t\t\n\t\tstatic void init(InputStream input) {\n\t\t\treader = new BufferedReader(new InputStreamReader(input));\n\t\t\ttokenizer = new StringTokenizer(\"\");\n\t\t}\n\t\t\n\t\tstatic String next() throws IOException {\n\t\t\twhile(!tokenizer.hasMoreTokens()) {\n\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\t\t\n\t\tstatic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tstatic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\t\n\t}\n\t\n\tstatic long[] merge(long[] a,long[] b) {\n\t\tint m = a.length;\n\t\tint n = b.length;\n\t\tlong[] c = new long[m+n];\n\t\tint j=0, k=0;\n\t\twhile(j+k<m+n) {\n\t\t\tif(j>=m) {\n\t\t\t\tc[j+k]=b[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t\telse if(k>=n) {\n\t\t\t\tc[j+k]=a[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(a[j]<b[k]) {\n\t\t\t\t\tc[j+k]=a[j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tc[j+k]=b[k];\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/*while(j<m) {\n\t\t\tc[j+k]=a[j];\n\t\t\tj++;\n\t\t}\n\t\twhile(k<n) {\n\t\t\tc[j+k]=b[k];\n\t\t\tk++;\n\t\t}*/\n\t\treturn c;\n\t}\n\t\n\tstatic long[] Msort(long[] unsorted) {\n\t\tint l = unsorted.length;\n\t\tif(l<=1) {\n\t\t\treturn unsorted;\n\t\t}\n\t\telse {\t\n\t\t\tlong[] Msorted = new long[l];\n\t\t\tlong[] m1 = new long[l/2];\n\t\t\tlong[] m2 = new long[l-(l/2)];\n\t\t\tfor(int i=0; i<l; i++) {\n\t\t\t\tif(i<l/2) {\n\t\t\t\t\tm1[i] = unsorted[i];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tm2[i-l/2] = unsorted[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tMsorted = merge(Msort(m1),Msort(m2));\n\t\t\treturn Msorted;\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tstatic void fillArr(int[] arr, int n) throws IOException {\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tarr[i] = Reader.nextInt();\n\t\t}\n\t}\n\tstatic void darr(int[] arr, int n) {\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n\n\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\t// TODO Auto-generated method stub\n\t\tReader.init(System.in);\n\t\tint n = Reader.nextInt();\n\t\tint[] a = new int[n];\n\t\tint[] b = new int[n];\n\t\tboolean[] f = new boolean[n];\n\t\t\n\t\tfor(int i=0; i<n; i++) {\n\t\t\ta[i] = Reader.nextInt();\n\t\t}\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tb[i] = 131072;\n\t\t}\n\t\t\n\t\tint pm=0, j=0;\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tint cm = a[i];\n\t\t\tif(cm!=pm) {\n\t\t\t\t\n\t\t\t\tint k=pm;\n\t\t\t\tb[i] = k;\n\t\t\t\tf[i] = true;\n\t\t\t\tk++;\n\t\t\t\twhile(k<cm) {\n\t\t\t\t\twhile(f[j])\n\t\t\t\t\t\tj++;\n\t\t\t\t\tb[j] = k;\n\t\t\t\t\tf[j] = true;\n\t\t\t\t\tj++;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpm = cm;\n\t\t}\n\t\t\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tSystem.out.print(b[i]+\" \");\n\t\t}\n\t\t\n\t}\n}\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport heapq as hq\nfrom collections import defaultdict\n\nt = 1\nfor tc in range(t):\n    n = int(stdin.readline())\n    ar = list(map(int, stdin.readline().split()))\n    resar=[-1 for _ in range(n)]\n    res=1\n\n    if ar[0]>1:\n        res=-1\n    else:\n        if ar[0]==1:\n            resar[0]=0\n            lastval=1\n            curmex=1\n            curnext=1\n            nextskipi=0\n        else:  #ar[0]==0\n            i=1\n            while i<n and ar[i]<=ar[i-1]+1:\n                i+=1\n            resar[0] = ar[i-1]+1\n            lastval = 0\n            curmex = 0\n            curnext = resar[0]+1\n            nextskipi = 0\n\n        while nextskipi<n-1 and ar[nextskipi] < curnext:\n            nextskipi += 1\n        while ar[nextskipi]==curnext:\n            curnext+=1\n            while nextskipi<n-1 and ar[nextskipi]<curnext:\n                nextskipi+=1\n        sofar=set()\n        sofar.add(resar[0])\n\n        for i in range(1,n):\n            if ar[i]==lastval:\n                resar[i]=curnext\n                sofar.add(curnext)\n                curnext+=1\n                while nextskipi<n-1 and ar[nextskipi] < curnext:\n                    nextskipi += 1\n                while ar[nextskipi] == curnext:\n                    curnext += 1\n                    while nextskipi<n-1 and ar[nextskipi] < curnext:\n                        nextskipi += 1\n            else:\n                resar[i] = curmex\n                sofar.add(curmex)\n                while curmex in sofar:\n                    curmex+=1\n            if curmex!=ar[i]:\n                res=-1\n                break\n            lastval=ar[i]\n\n    if res==-1:\n        stdout.write(str(res) + \"\\n\")\n    else:\n        for val in resar:\n            stdout.write(str(val) + \" \")\n        stdout.write(\"\\n\")\n"
        },
        {
            "language": 3,
            "solution": "import atexit\nimport io\nimport sys\nimport math\nfrom collections import defaultdict,Counter\n\n# _INPUT_LINES = sys.stdin.read().splitlines()\n# input = iter(_INPUT_LINES).__next__\n# _OUTPUT_BUFFER = io.StringIO()\n# sys.stdout = _OUTPUT_BUFFER\n\n# @atexit.register\n# def write():\n#     sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n# sys.stdout=open(\"CP1/output.txt\",'w')\n# sys.stdin=open(\"CP1/input.txt\",'r')\n\n# m=pow(10,9)+7\nn=int(input())\na=list(map(int,input().split()))\nb=[-1]*n\nvisit=[0]*1000001\nvisit[a[0]]=1\nfor j in range(1,n):\n    if a[j]!=a[j-1]:\n        b[j]=a[j-1]\n    visit[a[j]]=1\nstart=0\nfor j in range(n):\n    if b[j]==-1:\n        while visit[start]==1:\n            start+=1\n        b[j]=start\n        visit[start]=1\n        start+=1\n        if start>1000000:\n            break\nif b.count(-1)!=0:\n    print(-1)\nelse:\n    print(*b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n), b(n, -1);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  vector<bool> visited(100005, false);\n  for (int i = 1; i < n; i++) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      visited[a[i - 1]] = true;\n    }\n  }\n  visited[a[n - 1]] = true;\n  int cur = 0;\n  for (int i = 0; i < n; i++) {\n    while (visited[cur]) cur++;\n    if (b[i] == -1) {\n      b[i] = cur;\n      visited[cur] = true;\n    }\n    cout << b[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class r649c {\n\tpublic static void main(String[] args) {\n\t\tScanner scan=new Scanner(System.in);\n\t\tint n=scan.nextInt();\n\t\tint[] a=new int[n];\n\t\tfor(int i=0;i<n;i++) a[i]=scan.nextInt();\n\t\t\n\t\tArrayDeque<Integer> q=new ArrayDeque<>();\n\t\tint[] res=new int[n];\n\t\tArrays.fill(res,-1);\n\t\tboolean[] full=new boolean[1000001];\n\t\tint mex=0;\n\t\t\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tint dif=a[i]-mex;\n\t\t\tif(dif<0) {\n\t\t\t\tSystem.out.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if(dif==0) {\n\t\t\t\tq.offer(i);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(q.size()<dif-1) {\n\t\t\t\t\tSystem.out.println(-1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres[i]=mex;\n\t\t\t\t\tfull[mex]=true;\n\t\t\t\t\tint ptr=a[i]-1;\n\t\t\t\t\tfor(int x=0;x<dif-1;x++) {\n\t\t\t\t\t\tint over=q.poll();\n\t\t\t\t\t\tres[over]=ptr;\n\t\t\t\t\t\tfull[ptr--]=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile(full[mex]) mex++;\n\t\t}\n\t\twhile(!q.isEmpty()) {\n\t\t\tint x=q.poll();\n\t\t\tif(res[x]==-1) res[x]=1000000;\n\t\t}\n\t\tfor(int i:res) System.out.print(i+\" \");\n\t}\n}\n/*\n10\n0 0 0 0 5 5 5 5 5 10\n*/"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nans = []\nd = [False] * 202000\nfor i in l:\n    d[i] = True\nfor i in range(202000):\n    if(not(d[i])):\n        ans.append(i)\nlp = 1\nprint(ans[0],end = \" \")\nfor i in range(1,n):\n    if(l[i]!=l[i-1]):\n        print(l[i-1],end = \" \")\n    else:\n        print(ans[lp],end = \" \")\n        lp += 1\nprint()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.util.Map.Entry;\nimport java.util.concurrent.atomic.AtomicBoolean;\nimport java.util.stream.Collectors;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    MyScanner sc = new MyScanner();\n    out = new PrintWriter(new BufferedOutputStream(System.out));\n\n    // Start writing your solution here. -------------------------------------\n\n    int n = sc.nextInt();\n    int[] a = new int[n];\n    int[] b = new int[n + 1];\n    int[] f = new int[n + 1];\n    for (int i = 0; i < n; i++) {\n      a[i] = sc.nextInt();\n      f[a[i]] = 1;\n      b[i] = n + 1;\n    }\n    int l = 0;\n    int r = 0;\n    for (int i = 0; i <= n; i++) {\n      if (f[i] == 0) {\n        while (l < n + 1 && b[l] != n + 1) {\n          l++;\n        }\n        if (l < n + 1) {\n          b[l++] = i;\n        }\n      } else {\n        while (r < n && a[r] == i) {\n          r++;\n        }\n        b[r] = i;\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      out.print(b[i]);\n      out.print(\" \");\n    }\n\n    // Stop writing your solution here. -------------------------------------\n    out.close();\n  }\n\n\n  //-----------PrintWriter for faster output---------------------------------\n  public static PrintWriter out;\n\n  //-----------MyScanner class for faster input----------\n  public static class MyScanner {\n\n    BufferedReader br;\n    StringTokenizer st;\n\n    public MyScanner() {\n      br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n      while (st == null || !st.hasMoreElements()) {\n        try {\n          st = new StringTokenizer(br.readLine());\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      return st.nextToken();\n    }\n\n    int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n      return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n      String str = \"\";\n      try {\n        str = br.readLine();\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n      return str;\n    }\n\n  }\n  //--------------------------------------------------------\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main {\n\n\tpublic static void main(String[] args)throws IOException {\n\n\t\tBufferedReader br;\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t//**********************************************************************\n\n// \t\tbr = new BufferedReader(new FileReader(\"input.txt\"));\n// \t\tPrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"output.txt\")));\n\n\t\t//**********************************************************************\n\t\tint n = Integer.parseInt(br.readLine().trim());\n\t\tString inp[] = br.readLine().trim().split(\" \");\n\t\tint ans[] = new int[n];\n\t\tint arr[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = Integer.parseInt(inp[i]);\n\t\t}\n\t\tboolean pre[] = new boolean[100001];\n\t\tint vacant = 1;\n\t\tboolean vac[] = new boolean[n];\n\t\tvac[0] = true;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\tans[i] = arr[i - 1];\n\t\t\t\tpre[arr[i - 1]] = true;\n\t\t\t} else {\n\t\t\t\tvac[i] = true;\n\t\t\t\t++vacant;\n\t\t\t}\n\t\t}\n\t\tint num = arr[n - 1];\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int i = 0; i < num; i++) {\n\t\t\tif (!pre[i])\n\t\t\t\tlist.add(i);\n\t\t}\n\t\t// System.out.println(list);\n\t\tif (list.size() > vacant)\n\t\t\tSystem.out.println(-1);\n\t\telse {\n\t\t\tint c = 0;\n\t\t\tif (!list.isEmpty()) {\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tif (c >= list.size() && vac[i]) {\n\t\t\t\t\t\tans[i] = list.get(c - 1);\n\t\t\t\t\t} else if (vac[i]) {\n\t\t\t\t\t\tans[i] = list.get(c);\n\t\t\t\t\t\tc++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tint numm = arr[n - 1] + 1;\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tif (vac[i]) {\n\t\t\t\t\t\tans[i] = numm;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (int i : ans)\n\t\t\t\tSystem.out.print(i + \" \");\n\t\t}\n\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.lang.*;\nimport java.math.*;\n\npublic class Solution{\n\t\n\t\n\tpublic void solve () throws IOException  {\n       \n    \tInputReader in = new InputReader(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n = in.nextInt();\n        int a[] = new int [n];\n        for(int i = 0 ;i < n ; i++) {\n        \ta[i] = in.nextInt();\n        }\n        int start = 0;\n        int ans[] = new  int [n];\n        Arrays.fill(ans, -1);\n        boolean visited[] = new boolean [n + 1];\n        Stack<Integer>st = new Stack<>();\n        for(int i = 0 ; i < n ; i++) {\n        \t\n        \tif(a[i] != start) {\n        \t\tans[i] = start;\n        \t\tvisited[ans[i]] = true;\n        \t\tstart = a[i];\n        \t\tst.add(i);\n        \t}\n        }\n        int i = n - 1;\n        for(; i >= 0 ;i--) {\n        \tif(ans[i] == -1) {\n        \t\tans[i] = n + 1;\n        \t}\n        \telse break;\n        }\n        \n        int still = 0;\n        while(!st.isEmpty()) {\n        \tint idx = st.pop();\n        \tint val = a[idx];\n        \tstill = Math.max(still, val - 1);\n        \tif(!st.isEmpty()) {\n        \t\tfor(int j = idx - 1 ;j > st.peek() && j >= 0; j -- ) {\n        \t\t\twhile(still >= 0 && visited[still]) still--;\n        \t\t\tans[j] = still;\n        \t\t\tstill --;\n        \t\t\tans[j] = Math.max(ans[j], 0);\n        \t\t}\n        \t}\n        \telse {\n        \t\t\n        \t\tfor(int j = idx - 1 ;j >= 0; j -- ) {\n        \t\t\twhile(still >= 0 && visited[still]) still--;\n        \t\t\tans[j] = still;\n        \t\t\tstill --;\n        \t\t\tif(ans[j] <= 0) {\n        \t\t\t\tans[j] = n + 5;\n        \t\t\t}\n        \t\t}\n        \t}\n        }\n        for(i = 0 ; i < n ; i++)\n        \tpw.print(ans[i]+\" \");\n        pw.flush(); \n        pw.close();\n    }\n    public static void main(String[] args) throws Exception {\n        \n        \n        new Thread(null,new Runnable() {\n            public void run() {\n                  try {\n\t\t\t\t\tnew Solution().solve();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n            }  \n        },\"1\",1<<26).start();\n        \n        \n    }\n   \n    static void debug(Object... o) {\n        System.out.println(Arrays.deepToString(o));\n        }\n        \n        static class InputReader \n        {\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n        private SpaceCharFilter filter;\n \n        public InputReader(InputStream stream) \n        {\n            this.stream = stream;\n        }\n        public int snext() \n        {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) \n            {\n                curChar = 0;\n                try \n                {\n                    snumChars = stream.read(buf);\n                } \n                catch (IOException e) \n                {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n \n        public int nextInt() \n        {\n            int c = snext();\n            while (isSpaceChar(c)) \n            {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = snext();\n            }\n            int res = 0;\n            do \n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n \n        public long nextLong()\n        {\n            int c = snext();\n            while (isSpaceChar(c)) \n            {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-') \n            {\n                sgn = -1;\n                c = snext();\n            }\n            long res = 0;\n            do \n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n \n        public int[] nextIntArray(int n) \n        {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) \n            {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n \n        public String readString()\n        {\n            int c = snext();\n            while (isSpaceChar(c)) \n            {\n                c = snext();\n            }\n            StringBuilder res = new StringBuilder();\n            do \n            {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n \n        public String nextLine() \n        {\n            int c = snext();\n            while (isSpaceChar(c))\n                c = snext();\n            StringBuilder res = new StringBuilder();\n            do \n            {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n \n        public boolean isSpaceChar(int c) \n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n \n        private boolean isEndOfLine(int c) \n        {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n \n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n        public static long mod = 1000000007;\n        public static int d;\n        public static int p;\n        public static int q;\n        public void extended(int a,int b) {\n            if(b==0) {\n                d=a;\n                p=1;\n                q=0;\n            }\n            else\n            {\n                extended(b,a%b);\n                int temp=p;\n                p=q;\n                q=temp-(a/b)*q;\n            }\n        }\n       \n        \n        public static long binaryExponentiation(long x,long n)\n        {\n            long result=1;\n            while(n>0)\n            {\n                if(n % 2 ==1)\n                    result=result * x;\n                x=x*x;\n                n=n/2;\n            }\n            return result;\n        }\n        \n        public static long[] shuffle(long[] a,Random gen)\n        {\n            int n = a.length;\n            for(int i=0;i<n;i++)\n            {\n                int ind = gen.nextInt(n-i)+i;\n                long temp = a[ind];\n                a[ind] = a[i];\n                a[i] = temp;\n            }\n            return a;\n        }\n        \n        public static void swap(int a, int b){\n            int temp = a;\n            a = b;\n            b = temp;\n        }\n        \n        public static HashSet<Integer> primeFactorization(int n)\n        {\n            HashSet<Integer> a =new HashSet<Integer>();\n            for(int i=2;i*i<=n;i++)\n            {\n                while(n%i==0)\n                {\n                    a.add(i);\n                    n/=i;\n                }\n            }\n            if(n!=1)\n                a.add(n);\n            return a;\n        }\n        \n        public static void sieve(boolean[] isPrime,int n)\n        {\n            for(int i=1;i<n;i++)\n                isPrime[i] = true;\n            \n            isPrime[0] = false;\n            isPrime[1] = false;\n            \n            for(int i=2;i*i<n;i++)\n            {\n                if(isPrime[i] == true)\n                {\n                    for(int j=(2*i);j<n;j+=i)\n                        isPrime[j] = false;\n                }\n            }\n        }\n        \n        public static long GCD(long n,long m)\n        {\n            if(m==0)\n                return n;\n            else\n                return GCD(m,n%m);\n        }\n        public static long LCM (long a,long b) {\n            return ((a*b)/(GCD(a,b)));\n        }\n        \n        static class pair implements Comparable<pair>\n        {\n            Integer y ;\n            Long x ;\n            \n            pair(long  l, int w )\n            {\n                this.x=l;\n                this.y=w;\n            }\n\n           \n            public int compareTo(pair o) {\n                int result = x.compareTo(o.x);\n                if(result==0)\n                    result = y.compareTo(o.y);\n                \n                return result;\n            }  \n            \n            public String toString()\n            {\n                return x+\" \"+y;\n            }\n            \n            public boolean equals(Object o)\n            {\n                if (o instanceof pair)\n                {\n                    pair p = (pair)o;\n                    return p.x == x && p.y == y ;\n                }\n                return false;\n            }\n            public int hashCode()\n            {\n                return x.hashCode()*3 +  y.hashCode();\n                \n            }\n        }\n        public static int binaryExponentiation(int x,int n)\n        {\n            int result=1;\n            while(n>0)\n            {\n                if(n % 2 ==1)\n                    result=result * x;\n                x=x*x;\n                n=n/2;\n            }\n            return result;\n        }\n        \n       \n        \n        public static int modularExponentiation(int x,int n,int M)\n        {\n            int result=1;\n            while(n>0)\n            {\n                if(n % 2 ==1)\n                    result=(result * x)%M;\n                x=(x%M*x)%M;\n                n=n/2;\n            }\n            return result;\n        }\n        \n        public static long modularExponentiation(long x,long n,long M)\n        {\n            long result=1;\n            while(n>0)\n            {\n                if(n % 2 ==1)\n                    result=(result%M * x%M)%M;\n                x=(x%M * x%M)%M;\n                n=n/2;\n            }\n            return result;\n        }\n        \n        public static long modInverse(int A,int M)\n        {\n            return modularExponentiation(A,M-2,M);\n        }\n        \n        public static long modInverse(long A,long M)\n        {\n            return modularExponentiation(A,M-2,M);\n        }\n        \n       \n        \n                    \n         \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Codeforces\n{\n    public static void main(String args[])throws Exception\n    {\n        BufferedReader bu=new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb=new StringBuilder();\n        int n=Integer.parseInt(bu.readLine());\n        String s[]=bu.readLine().split(\" \");\n        int i,a[]=new int[n],ans[]=new int[n],c[]=new int[n+1];\n        Arrays.fill(ans,-1);\n        for(i=0;i<n;i++)\n        {\n            a[i]=Integer.parseInt(s[i]);\n            if(i>0 && a[i]!=a[i-1]) ans[i]=a[i-1];\n            c[a[i]]++;\n        }\n        Queue<Integer> q=new LinkedList<>();\n        for(i=0;i<=n;i++)\n        if(c[i]==0) q.add(i);\n        for(i=0;i<n;i++)\n        {\n            if(ans[i]==-1) ans[i]=q.poll();\n            sb.append(ans[i]+\" \");\n        }\n        System.out.print(sb);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Queue;\n\n\npublic class Educational89 {\n\n\t\n\tstatic int X[] = { -1, 0, 0, 1 };\n\tstatic int Y[] = { 0, -1, 1, 0 };\n\n\tstatic class Reader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\n\t\tpublic Reader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic Reader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[64]; // line length\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n\t}\n\n\t\n\n\tpublic static long[] initArray(int n, Reader scan) throws IOException {\n\n\t\tlong arr[] = new long[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = scan.nextLong();\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tpublic static long sum(long arr[]) {\n\n\t\tlong sum = 0;\n\t\tfor (long i : arr) {\n\t\t\tsum += (long) i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tpublic static long max(long arr[]) {\n\n\t\tlong max = Long.MIN_VALUE;\n\n\t\tfor (long i : arr) {\n\t\t\tmax = Math.max(i, max);\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tpublic static long min(long arr[]) {\n\t\tlong min = Long.MAX_VALUE;\n\n\t\tfor (long i : arr) {\n\t\t\tmin = Math.min(i, min);\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tpublic static List<Integer>[] initAdjacency(int n, int e, Reader scan, boolean type) throws IOException {\n\n\t\tList<Integer> adj[] = new ArrayList[n + 1];\n\n\t\tfor (int i = 0; i < e; i++) {\n\t\t\tint u = scan.nextInt();\n\t\t\tint v = scan.nextInt();\n\n\t\t\tif (adj[u] == null)\n\t\t\t\tadj[u] = new ArrayList<>();\n\t\t\tif (type && adj[v] == null)\n\t\t\t\tadj[v] = new ArrayList<>();\n\n\t\t\tadj[u].add(v);\n\n\t\t\tif (type)\n\t\t\t\tadj[v].add(u);\n\n\t\t}\n\n\t\treturn adj;\n\t}\n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\tReader scan=new Reader();\n//\t\tScanner scan=new Scanner(System.in);\n\t\t\n\t\tint t=1;\n\t\twhile(t-->0) {\n\t\t\tint n=scan.nextInt();\n\t\t\tlong[] arr=initArray(n, scan);\n\t\t\tC(n, arr);\n\t\t}\n\t\t\n\t}\n\t\n\tpublic static long A(int n, long arr[], long x) {\n\t\t\n\t\tint ans= -1;\n\t\t\n\t\tint minIndex=Integer.MAX_VALUE;\n\t\tlong last=0;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tarr[i]+=last;\n\t\t\tarr[i]%=x;\n\t\t\tlast=arr[i];\n\t\t\t\n\t\t\tif(arr[i]!=0) {\n\t\t\t\tans=Math.max(ans, i+1);\n\t\t\t\tminIndex=Math.min(minIndex, i);\n\t\t\t}else {\n\t\t\t\t\n\t\t\t\tif(minIndex!=Integer.MAX_VALUE) {\n\t\t\t\t\tans=Math.max(ans,  i-minIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ans;\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\tpublic static void B(int n, long arr[]) {\n\t\t\n\t\tboolean down=false;\n\t\tboolean up=false;\n\t\t\n\t\tStringBuilder ans=new StringBuilder(\"\");\n\t\tint count=1;\n\t\tif(arr[1]>arr[0]) {\n\t\t\tup=true;\n\t\t}else {\n\t\t\tdown=true;\n\t\t}\n\t\t\n\t\tans.append(arr[0]+\" \");\n\t\tfor(int i=1;i<n;i++) {\n\t\t\t\n\t\t\tif(up) {\n\t\t\t\t\n\t\t\t\tif(arr[i]<arr[i-1]) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tans.append(arr[i-1]+\" \");\n\t\t\t\t\tup=false;\n\t\t\t\t\tdown=true;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\t\n\t\t\t\tif(arr[i]>arr[i-1]) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tans.append(arr[i-1]+\" \");\n\t\t\t\t\tdown=false;\n\t\t\t\t\tup=true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tcount++;\n\t\tans.append(arr[n-1]);\n\t\tSystem.out.println(count);\n\t\tSystem.out.println(ans.toString());\n\t\t\n\t}\n\t\n\tpublic static long B(int n, int x, int m, Reader scan) throws IOException {\n\t\t\n\t\tint curLeft= x;\n\t\tint curRight=x;\n\t\t\n\t\tfor(int i=0;i<m;i++) {\n\t\t\tint l=scan.nextInt();\n\t\t\tint r=scan.nextInt();\n\t\t\t\n\t\t\tif(l>curRight||r<curLeft) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tcurLeft= Math.min(curLeft,  l);\n\t\t\tcurRight=Math.max(curRight, r);\n\t\t}\n\t\t\n\t\treturn curRight-curLeft+1;\n\t\t\n\t}\n\t\n\tpublic static int C(int n, int m, int arr[][]) {\n\t\t\n\t\t\n\t\tint ans=0;\n\t\t\n\t\tfor(int val=0;val< (Math.max(n, m)+1)/2;val++) {\n\t\t\t\n\t\t\tint count[]=new int[2];\n\t\t\t\n\t\t\tfor(int i=0;i<=val;i++) {\n\t\t\t\tint j= val-i;\n\t\t\t\t\n\t\t\t\tif(i>=0&&i<n&&j>=0&&j<m) {\n\t\t\t\t\tcount[arr[i][j]]++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<= val;i++) {\n\t\t\t\tint j= m-1-val+i;\n\t\t\t\t\n\t\t\t\tif(i>=0&&i<n&&j>=0&&j<m) {\n\t\t\t\t\tcount[arr[n-1-i][j]]++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n//\t\t\tif(Math.max(n, m)%2==0&&val==(Math.max(n, m)/2)) {\n//\t\t\t\tcount[0]/=2;\n//\t\t\t\tcount[1]/=2;\n//\t\t\t}\n\t\t\t\n\t\t\t//System.out.println(\"For val=\"+val+\"count=\"+Arrays.toString(count));\n\t\t\tans+= Math.min(count[0], count[1]);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn  ans;\n\t\t\n\t}\n\t\n\tpublic static void C(int n, long arr[]) {\n\t\t\n\t\tQueue<Integer> empty=new LinkedList<>();\n\t\t\n\t\tlong ans[]=new long[n];\n\t\t\n\t\tlong last=0;\n\t\t\n\t\tint curSize=0;\n\t\t\n\t\tfor(int i=0;i<n;i++) {\n\t\t\t\n\t\t\tif(arr[i]==last) {\n\t\t\t\tempty.add(i);\n\t\t\t\tcontinue;\n\t\t\t}else {\n\t\t\t\t\n\t\t\t\tans[i]=last;\n\t\t\t\tlast=arr[i];\n\t\t\t\t\n\t\t\t\tcurSize++;\n\t\t\t\t\n\t\t\t\twhile(curSize<arr[i]&&!empty.isEmpty()) {\n\t\t\t\t\t\n\t\t\t\t\tans[empty.remove()]= curSize++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(curSize<arr[i]) {\n\t\t\t\t\tSystem.out.println(-1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\twhile(!empty.isEmpty()) {\n\t\t\tans[empty.remove()]=curSize+1;\n\t\t}\n\t\t\n\t\tfor(long i: ans) {\n\t\t\tSystem.out.print(i+\" \");\n\t\t}\n\t\t\n\t\t\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import javax.swing.*;\nimport java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n\npublic class C\n{\n    /*\n     * This FastReader code is taken from GeeksForGeeks.com\n     * https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/\n     *\n     * The article was written by Rishabh Mahrsee\n     */\n    public static class FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    public static FastReader in = new FastReader();\n    public static PrintWriter out = new PrintWriter(System.out);\n    public static final int MOD = (int)1e9 + 7;\n\n    public static void main(String[] args)\n    {\n        int n = in.nextInt();\n        boolean[] used = new boolean[(int)1e6 + 1];\n        int[] arr = new int[n];\n        int[] answer = new int[n];\n\n        for (int i = 0; i < n; i++)\n        {\n            arr[i] = in.nextInt();\n            used[arr[i]] = true;\n        }\n        int curUnused = 0;\n        while (used[curUnused]) curUnused++;\n\n        int i = 0;\n        while (i < n)\n        {\n            while ( i - 1 >= 0 && i < n && arr[i] == arr[i - 1])\n            {\n                answer[i++] = curUnused++;\n                while (used[curUnused]) curUnused++;\n            }\n            if (i < n)\n            {\n                answer[i] = i != 0 ? arr[i - 1] : curUnused++;\n                while (used[curUnused]) curUnused++;\n                i++;\n            }\n        }\n\n        for (int x : answer) out.print(x + \" \");\n        out.println();\n        out.close();\n    }\n\n\n}\n"
        },
        {
            "language": 3,
            "solution": "# f = open('test.py')\n# def input():\n# \treturn f.readline().replace('\\n','')\n\n# import heapq\n# import bisect\n# from collections import deque\nfrom collections import defaultdict\ndef read_list():\n\treturn list(map(int,input().split(' ')))\ndef print_list(l):\n\tprint(' '.join(map(str,l)))\n\nMAX = 9999999999\nn = int(input())\na = read_list()\nb = []\nMEX = 0\ndic = defaultdict(int)\nfor t in a:\n\tdic[t]+=1\nm = 0\nfor i in range(n):\n\tif a[i]!=MEX:\n\t\tb.append(MEX)\n\t\tMEX = a[i]\n\t\tm = max(m,b[-1]+1)\n\telse:\n\t\tfor tmp in range(m,MAX):\n\t\t\tif dic[tmp]==0:\n\t\t\t\tb.append(tmp)\n\t\t\t\tm = tmp+1\n\t\t\t\tbreak\n\t\tdic[a[i]]-=1\nprint_list(b)"
        },
        {
            "language": 3,
            "solution": "i_liczb = int(input())\na = [int(x) for x in input().split()]\na = [0] + a \nb = [-1 for _ in range(i_liczb + 1)]\nwykorzystane = [False for _ in range(100005)]\nfor i in range(1, i_liczb + 1):\n    if a[i] !=a [i - 1]:\n        b[i] = a[i - 1]\n        wykorzystane[b[i]] = True\nwykorzystane[a[i_liczb]] = True\nx = 0\nfor i in range(1, i_liczb + 1):\n    while wykorzystane[x]:\n        x += 1\n    if b[i] == -1:\n        b[i] = x\n        wykorzystane[x] = True\nprint(*b[1:])"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (auto &i : a) cin >> i;\n  vector<int> f(n + 1, -1);\n  for (int i = 0; i < n; ++i) f[a[i]] = i;\n  vector<int> who(n + 1, -1);\n  for (int i = 0; i <= n; ++i)\n    if (f[i] != -1) who[f[i] + 1] = i;\n  vector<int> v;\n  for (int i = 0; i <= n; ++i)\n    if (f[i] == -1) v.push_back(i);\n  for (int i = n + 1; i <= 2 * n; ++i) v.push_back(i);\n  reverse(v.begin(), v.end());\n  vector<int> b(n);\n  for (int i = 0; i < n; ++i) {\n    if (who[i] == -1) {\n      b[i] = v.back();\n      v.pop_back();\n      continue;\n    }\n    b[i] = who[i];\n  }\n  vector<int> mp(4 * n);\n  int pt = 0;\n  for (int i = 0; i < n; ++i) {\n    ++mp[b[i]];\n    while (mp[pt]) ++pt;\n    if (pt != a[i]) {\n      cout << \"-1\\n\";\n      break;\n    }\n  }\n  for (auto &i : b) cout << i << \" \\n\"[&i == &b.back()];\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class test {\n    public static void main (String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        \n        int[] arr = new int[n];\n        boolean[] num = new boolean[100001];\n        int[] res = new int[n];\n\n        boolean canDo = true;\n        for (int i=0; i<n; i++) {\n            arr[i] = sc.nextInt();\n            if (arr[i]-i > 1) {\n                canDo = false;\n                break;\n            }\n            else {\n                num[arr[i]] = true;\n            }\n        }\n\n        if (canDo) {\n            int j = 0;\n            while (num[j]) {\n                j += 1;\n            }\n            res[0] = j;\n            num[j] = true;\n\n            for (int i=1; i<n; i++) {\n                if (arr[i] != arr[i-1]) {\n                    res[i] = arr[i-1];\n                }\n                else {\n                    while (num[j]) {\n                        j += 1;\n                    }\n                    res[i] = j;\n                    num[j] = true;\n                }\n            }\n\n            for (int i=0; i<n; i++) {\n                System.out.print(res[i] + \" \");\n            }\n            System.out.println();\n        }\n        else {\n            System.out.println(-1);\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  int flg = 0;\n  vector<int> v;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] > i + 1) {\n      flg = 1;\n    }\n  }\n  if (flg) {\n    cout << -1 << endl;\n  } else {\n    for (int i = 1; i < n; i++) {\n      int x = a[i - 1] + 1, y = a[i];\n      while (y > x) {\n        v.push_back(x);\n        x++;\n      }\n    }\n    vector<int> ans;\n    int pos = 0, cnt = 0, pos1;\n    if (a[pos1] == 0) {\n      while (a[pos1] == 0) {\n        if (pos == v.size()) {\n          ans.push_back(a[n - 1] + 1);\n        } else {\n          ans.push_back(v[pos]);\n          pos++;\n        }\n        pos1++;\n      }\n    } else {\n      ans.push_back(0);\n      pos1++;\n      cnt++;\n    }\n    while (pos1 < n) {\n      if (a[pos1] == a[pos1 - 1]) {\n        if (pos == v.size()) {\n          ans.push_back(a[n - 1] + 1);\n        } else {\n          ans.push_back(v[pos]);\n          pos++;\n        }\n      } else {\n        ans.push_back(cnt);\n        int xxx = a[pos1], yyy = a[pos1 - 1] + 1;\n        while (xxx > yyy) {\n          cnt++;\n          yyy++;\n        }\n        cnt++;\n      }\n      pos1++;\n    }\n    for (int i = 0; i < ans.size(); i++) {\n      cout << ans[i] << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nint A[maxn];\nint B[maxn];\nint n;\nint m = 0;\nint vis[maxn];\nvoid init() { m = 0; }\nint main() {\n  init();\n  scanf(\"%d\", &n);\n  for (int i = (1); i <= (n); i++) {\n    scanf(\"%d\", &A[i]);\n    vis[A[i]] = 1;\n  }\n  for (int i = (1); i <= (n); i++)\n    if (!vis[i]) B[++m] = i;\n  int k = 0;\n  for (int i = (1); i <= (n); i++) {\n    if (A[i] == A[i - 1])\n      printf(\"%d \", B[++k]);\n    else\n      printf(\"%d \", A[i - 1]);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def read_ints():\n    return list(map(int, input().split()))\n\nn, = read_ints()\na = read_ints()\n\nb = [-1] * n\nused = set(a)\ncurrent = 0\nj = 1\nfor i in range(n):\n    if a[i] != current:\n        b[i] = current\n        current = a[i]\n        if current > i + 1:\n            print(-1)\n            break\n    else:\n        while j in used:\n            j += 1\n        b[i] = j\n        j += 1\nelse:\n    print(*b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  int arr[n];\n  vector<long long> v, have(100005, 0);\n  for (int i = 0; i < n; ++i) cin >> arr[i];\n  for (int i = 0; i < n; ++i) {\n    have[arr[i]]++;\n  }\n  int j = 0;\n  vector<long long> not_have;\n  for (int i = 0; i <= n; ++i) {\n    if (!have[i]) not_have.push_back(i);\n  }\n  for (int i = 0; i < n; ++i) {\n    if (!i) {\n      v.push_back(not_have[j++]);\n      continue;\n    }\n    if (arr[i] != arr[i - 1]) {\n      v.push_back(arr[i - 1]);\n      have[arr[i - 1]]++;\n    } else {\n      v.push_back(not_have[j++]);\n    }\n  }\n  for (auto x : v) cout << x << \" \";\n  cout << endl;\n}\nint main() {\n  ios_base ::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cout.precision(35);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n# import math\n# from collections import deque\n# import heapq\n# from math import inf\n# from math import gcd\n\n# print(help(deque))\n# 26\npprint = lambda s: print(' '.join(map(str, s)))\ninput = lambda: sys.stdin.readline().strip()\nipnut = input\n\n# n,x = map(int,input().split())\nn = int(input())\na = [0] + list(map(int, input().split()))\nans = [-1] * n\nused = set(a)\nfor i in range(n):\n    if a[i] != a[i + 1]:\n        ans[i] = a[i]\n    if a[i+1]>i+1:\n        print(-1)\n        exit(0)\n# print(ans)\ncurr = 0\nfor i in range(n):\n    if ans[i]==-1:\n        curr+=1\n        while curr in used:\n            curr+=1\n        ans[i]=curr\npprint(ans)"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\na=list(map(int,input().split()))\n\ndef add(i):\n\tr=[]\n\tif c[i]:\n\t\twhile c[i]:\n\t\t\tr.append(i)\n\t\t\ti+=1\n\treturn(i,r)\n\n\naa=set(a)\n\nf={i:0 for i in aa}\nfor i in a:f[i]+=1\n\nc=[False for i in range(n+20)]\n\nfor i in a:\n\tc[i]=True\n\nd=[i for i in aa][::-1]\n\nrest=set()\ni=0\nb=[]\n\nwhile d:\n\tif len(rest)>1:\n\t\tprint(-1)\n\t\texit()\n\tt=0\n\tx=d.pop()\n\tif rest:\n\t\tb.append(rest.pop())\n\t\tt+=1\n\n\trest.add(x)\n\t\n\twhile t<f[x]:\n\t\ti,r=add(i)\n\t\tb.append(i)\n\t\ti+=1\n\t\trest.union(r)\n\t\tt+=1\nprint(*b)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author unknown\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        CEhabAndPrefixMEXs solver = new CEhabAndPrefixMEXs();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CEhabAndPrefixMEXs {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int N = 100000 + 1000;\n            int n = in.nextInt();\n            int[] vis = new int[N];\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                int x = in.nextInt();\n                vis[x] = 1;\n                arr[i] = x;\n            }\n            int[] brr = new int[n];\n            Arrays.fill(brr, -1);\n            for (int i = 1; i < n; i++) {\n                if (arr[i] != arr[i - 1]) {\n                    brr[i] = arr[i - 1];\n                    vis[brr[i]] = 1;\n                }\n            }\n            int l = 0;\n            for (int i = 0; i < N; i++) {\n                if (vis[i] == 0) {\n                    vis[l++] = i;\n                }\n            }\n            l = 0;\n            for (int i = 0; i < n; i++) {\n                if (brr[i] == -1) {\n                    brr[i] = vis[l++];\n                }\n            }\n            out.println(brr);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(int[] array, int startFrom) {\n            for (int i = startFrom; i < array.length; ++i) {\n                if (i != startFrom) {\n                    writer.print(' ');\n                }\n                writer.print(array[i]);\n            }\n        }\n\n        public void println(int[] array, int startFrom) {\n            print(array, startFrom);\n            writer.println();\n        }\n\n        public void println(int[] array) {\n            println(array, 0);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import math,sys,bisect\nfrom collections import defaultdict,Counter,deque\nfrom itertools import groupby,accumulate\n#sys.setrecursionlimit(1000000)\ninput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__\nilele = lambda: map(int,input().split())\nalele = lambda: list(map(int, input().split()))\n#def list2d(a, b, c): return [[c] * b for i in range(a)]\n#def list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\n#MOD = 1000000000 + 7\ndef Y(c):  print([\"NO\",\"YES\"][c])\ndef y(c):  print([\"no\",\"yes\"][c])\ndef Yy(c):  print([\"No\",\"Yes\"][c])\n    \nN = int(input())\nA = alele()\na = 0;b=1\nmark = {i : 1 for i in A}\nfor i in A:\n    if i == a:\n        while mark.get(b,0) == 1:\n            b +=1\n        print(b,end = ' ')\n        b +=1\n    else:\n        print(a,end = ' ')\n        a = i"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n), b(n, -1);\n  vector<bool> used(1e6 + 1, 0);\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    if (i && a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n    }\n    used[a[i]] = 1;\n  }\n  int cur = 0;\n  for (int i = 0; i < n; ++i) {\n    if (b[i] != -1) goto done;\n    while (used[cur]) ++cur;\n    b[i] = cur, used[cur] = 1;\n  done:\n    cout << b[i] << \" \";\n    ;\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.PriorityQueue;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\n\n\npublic class q3 {\n\n\tpublic static void main(String[] args) {\n\t\tFastReader s = new FastReader();\n\t\t\n\t\t\n\t\t\n\t\t\tint n = s.nextInt();\n\t\t\tint[] inp = new int[n];\n\t\t\tSet<Integer> set = new HashSet<>();\n\t\t\tint flag = 0;\n\t\t\tfor(int i=0;i<n;++i)\n\t\t\t{\n\t\t\t\tinp[i] = s.nextInt();\n\t\t\t\tset.add(inp[i]);\n\t\t\t\t\n\t\t\t\tif(inp[i] > i+1)\n\t\t\t\t\tflag = 1;\n\t\t\t}\n\t\t\t\n\t\t\tif(flag == 1)\n\t\t\t\tSystem.out.println(-1);\n\t\t\telse{\n\t\t\t\tPriorityQueue<Integer> q  = new PriorityQueue<>();\n\t\t\t\tArrayList<Integer> ans = new ArrayList<>();\n\t\t\t\tfor(int i=0;i<n;++i)\n\t\t\t\t\tif(!set.contains(i))\n\t\t\t\t\t\tq.add(i);\n\t\t\t\tif(q.isEmpty())\n\t\t\t\t\tq.add(n+1);\n\t\t\t\tfor(int i=0;i<n;++i)\n\t\t\t\t{\n\t\t\t\t\tint count = q.poll();\n\t\t\t\t\tans.add(count);\n\t\t\t\t\tif(i!=n-1 && inp[i] != inp[i+1])\n\t\t\t\t\t\tq.add(inp[i]);\n\t\t\t\t\tif(i != n-1 && q.isEmpty() && inp[i] == inp[i+1])\n\t\t\t\t\t\tq.add(count);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfor(int i=0;i<n;++i)\n\t\t\t\t\tSystem.out.print(ans.get(i)+ \" \");\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\t\n\t\t\n\n\n\t}\n\n\n\tstatic class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public FastReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.Scanner;\nimport java.io.*;\nimport javax.lang.model.util.ElementScanner6; \nimport static java.lang.System.out;\nimport java.util.Stack;\nimport java.util.Queue;\nimport java.util.LinkedList;\n\npublic class C1364\n{\n\n   \n    \n    public static void main(String args[])\n    {  \n\n        FastReader in=new FastReader();\n        PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        int tc=1;\n     \n        //tc=in.nextInt();\n        testloop : while(tc-->0)\n        {\n            \n        \tint n=in.nextInt();\n\n\t\t\tint arr[]=in.readIntArray(n);\n\t\t\t\n\t\t\tLinkedHashSet<Integer> hs=new LinkedHashSet<Integer>();\n\t\t\tArrayList<Integer> col=new ArrayList<>();\n\t\t\t\n\t\t\tint al[]=new int[n];\n\t\t\tArrays.fill(al,-1);\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor(int i=1;i<n;i++)\n\t\t\t{\n\t\t\t\tif(arr[i]!=arr[i-1])\n\t\t\t\t{\n\t\t\t\t\tal[i]=arr[i-1];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<=(int)(2e5);i++)\n\t\t\t{\n\t\t\t\ths.add(i);\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(hs.contains(arr[i]))\n\t\t\t\t{\n\t\t\t\t\ths.remove(arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i : hs)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tcol.add(i);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\n\t\t\t\n\t\t\tint start=0;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(al[i]==-1)\n\t\t\t\t{\n\t\t\t\t\tal[i]=col.get(start++);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfor(int i : al)\n\t\t\t{\n\t\t\t\tpr.print(i+\" \");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpr.println();\n\n\n        }\n        pr.flush();\n    }\n\n\n    \n\n    static void sort(long[] a) {\n\t\tArrayList<Long> l = new ArrayList<>();\n\t\tfor (long i : a)\n\t\t\tl.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = l.get(i);\n\t}\n    \n    \n\tstatic void sort(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a)\n\t\t\tl.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++)\n\t\t\ta[i] = l.get(i);\n    }\n\n    \n    static class FastReader\n    { \n        BufferedReader br; \n        StringTokenizer st; \n\n        public FastReader() \n        { \n            br = new BufferedReader(new InputStreamReader(System.in)); \n        } \n\n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n\n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n\n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n\n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n        \n        int[] readIntArray(int n)\n        {\n\t\tint a[]=new int[n];\n\t\tfor(int i=0;i<n;i++)a[i]=nextInt();\n\t\treturn a;\n\t}\n\t\t\n\tlong[] readLongArray(int n)\n\t{\n\t\tlong a[]=new long[n];\n\t\tfor(int i=0;i<n;i++)a[i]=nextLong();\n\t\treturn a;\n\t}\n\t\n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n# region fastio\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ------------------------------\n\nfrom math import factorial\nfrom collections import Counter, defaultdict, deque\nfrom heapq import heapify, heappop, heappush\n\ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\ndef comb(n, m): return factorial(n) / (factorial(m) * factorial(n - m)) if n >= m else 0\ndef perm(n, m): return factorial(n) // (factorial(n - m)) if n >= m else 0\ndef mdis(x1, y1, x2, y2): return abs(x1 - x2) + abs(y1 - y2)\nmod = 998244353\nINF = float('inf')\n\n# ------------------------------\n\n\ndef main():\n    n = N()\n    arr = RLL()\n    dic = defaultdict(int)\n    res = [-1] * n\n\n    if arr[0] == 1:\n        res[0] = 0\n    for i in range(n):\n        dic[arr[i]] = max(dic[arr[i]], i)\n\n\n    for i in dic:\n        if dic[i]+1<n:\n            res[dic[i]+1] = i\n\n    now = 1\n\n    for i in range(n):\n        if res[i]==-1:\n            while now in dic: now+=1\n            res[i] = now\n            now+=1\n    for i in range(n):\n        if arr[i]>i+1:\n            print(-1)\n            break\n    else:\n        print(*res)\n\n\nif __name__ == \"__main__\":\n    main()\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a[1000000];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  long long t, n, i, j, c, k, m, x, y, f;\n  cin >> n;\n  map<long long, long long> mp;\n  vector<long long> v, b;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    mp[a[i]]++;\n  }\n  set<long long> s;\n  for (i = 0; i <= 2 * n; i++) {\n    if (mp[i] == 0) s.insert(i);\n  }\n  for (i = 0; i < n; i++) {\n    auto it = s.begin();\n    x = *it;\n    cout << x << \" \";\n    s.erase(s.begin());\n    mp[a[i]]--;\n    if (mp[a[i]] == 0) s.insert(a[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  int n;\n  cin >> n;\n  vector<int> a(n), b(n + 1, -1);\n  set<int> st, stInd;\n  for (int i = 0; i < n; i++) {\n    st.insert(i);\n    stInd.insert(i);\n  }\n  st.insert(n);\n  ;\n  for (auto &x : a) cin >> x;\n  for (int i = 1; i <= n; i++) {\n    if (a[i - 1] != (i == n ? 1e9 : a[i])) {\n      b[i] = a[i - 1];\n      st.erase(b[i]);\n      stInd.erase(i);\n    }\n  }\n  while (!st.empty()) {\n    auto val = st.begin();\n    auto ind = stInd.begin();\n    b[*ind] = *val;\n    st.erase(val);\n    stInd.erase(ind);\n  }\n  for (int i = 0; i < n; i++) cout << b[i] << \" \";\n  cout << '\\n';\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,bisect,string,math,time,functools,random,fractions\nfrom heapq import heappush,heappop,heapify\nfrom collections import deque,defaultdict,Counter\nfrom itertools import permutations,combinations,groupby\nrep=range\ndef Golf():n,*t=map(int,open(0).read().split())\ndef I():return int(input())\ndef S_():return input()\ndef IS():return input().split()\ndef LS():return [i for i in input().split()]\ndef MI():return map(int,input().split())\ndef LI():return [int(i) for i in input().split()]\ndef LI_():return [int(i)-1 for i in input().split()]\ndef NI(n):return [int(input()) for i in range(n)]\ndef NI_(n):return [int(input())-1 for i in range(n)]\ndef StoLI():return [ord(i)-97 for i in input()]\ndef ItoS(n):return chr(n+97)\ndef LtoS(ls):return ''.join([chr(i+97) for i in ls])\ndef RA():return map(int,open(0).read().split())\ndef GI(V,E,ls=None,Directed=False,index=1):\n    org_inp=[];g=[[] for i in range(V)]\n    FromStdin=True if ls==None else False\n    for i in range(E):\n        if FromStdin:\n            inp=LI()\n            org_inp.append(inp)\n        else:\n            inp=ls[i]\n        if len(inp)==2:\n            a,b=inp;c=1\n        else:\n            a,b,c=inp\n        if index==1:a-=1;b-=1\n        aa=(a,c);bb=(b,c);g[a].append(bb)\n        if not Directed:g[b].append(aa)\n    return g,org_inp\ndef GGI(h,w,search=None,replacement_of_found='.',mp_def={'#':1,'.':0},boundary=1):\n    #h,w,g,sg=GGI(h,w,search=['S','G'],replacement_of_found='.',mp_def={'#':1,'.':0},boundary=1) # sample usage\n    mp=[boundary]*(w+2);found={}\n    for i in range(h):\n        s=input()\n        for char in search:\n            if char in s:\n                found[char]=((i+1)*(w+2)+s.index(char)+1)\n                mp_def[char]=mp_def[replacement_of_found]\n        mp+=[boundary]+[mp_def[j] for j in s]+[boundary]\n    mp+=[boundary]*(w+2)\n    return h+2,w+2,mp,found\ndef TI(n):return GI(n,n-1)\ndef accum(ls):\n    rt=[0]\n    for i in ls:rt+=[rt[-1]+i]\n    return rt\ndef bit_combination(n,base=2):\n    rt=[]\n    for tb in range(base**n):s=[tb//(base**bt)%base for bt in range(n)];rt+=[s]\n    return rt\ndef gcd(x,y):\n    if y==0:return x\n    if x%y==0:return y\n    while x%y!=0:x,y=y,x%y\n    return y\ndef show(*inp,end='\\n'):\n    if show_flg:print(*inp,end=end)\n \nYN=['YES','NO'];Yn=['Yes','No']\nmo=10**9+7\ninf=float('inf')\nFourNb=[(-1,0),(1,0),(0,1),(0,-1)];EightNb=[(-1,0),(1,0),(0,1),(0,-1),(1,1),(-1,-1),(1,-1),(-1,1)];compas=dict(zip('WENS',FourNb));cursol=dict(zip('LRUD',FourNb))\nl_alp=string.ascii_lowercase\n#sys.setrecursionlimit(10**7)\nread=sys.stdin.buffer.read\nreadline=sys.stdin.buffer.readline\ninput=lambda: sys.stdin.readline().rstrip()\n\nclass Tree:\n    def __init__(self,inp_size=None,ls=None,init=True,index=1):\n        self.LCA_init_stat=False\n        self.ETtable=[]\n        if init:\n            if ls==None:\n                self.stdin(inp_size,index=index)\n            else:\n                self.size=len(ls)+1\n                self.edges,_=GI(self.size,self.size-1,ls,index=index)\n        return\n \n    def stdin(self,inp_size=None,index=1):\n        if inp_size==None:\n            self.size=int(input())\n        else:\n            self.size=inp_size\n        self.edges,_=GI(self.size,self.size-1,index=index)\n        return\n    \n    def listin(self,ls,index=0):\n        self.size=len(ls)+1\n        self.edges,_=GI(self.size,self.size-1,ls,index=index)\n        return\n \n    def dfs(self,x,func=lambda pr,prv,nx,dist:prv+dist,root_v=0):\n        q=deque([x])\n        v=[None]*self.size\n        v[x]=root_v\n        while q:\n            c=q.pop()\n            for nb,d in self.edges[c]:\n                if v[nb]==None:\n                    q.append(nb)\n                    v[nb]=func(c,v[c],nb,d)\n        return v\n \n    def bfs(self,x,func=lambda pr,prv,nx,dist:prv+dist,root_v=0):\n        q=deque([x])\n        v=[None]*self.size\n        v[x]=root_v\n        while q:\n            c=q.popleft()\n            for nb,d in self.edges[c]:\n                if v[nb]==None:\n                    q.append(nb)\n                    v[nb]=func(c,v[c],nb,d)\n        return v\n \n    def parent(self,x):\n        return self.dfs(0,func=lambda pr,prv,nx,dist:pr,root_v=-1)\n \n    def topological_sort(self,x):  # return topological sort of the tree\n        tps=[]\n        q=deque([x])\n        v=[None]*self.size\n        v[x]=0\n        while q:\n            c=q.popleft()\n            tps.append(c)\n            for nb,d in self.edges[c]:\n                if v[nb]==None:\n                    q.append(nb)\n                    v[nb]=0\n        return tps\n \n    def EulerTour(self,x):\n        q=deque()\n        q.append(x)\n        self.depth=[None]*self.size\n        self.depth[x]=0\n        self.ETtable=[]\n        self.ETdepth=[]\n        self.ETin=[-1]*self.size\n        self.ETout=[-1]*self.size\n        cnt=0\n        while q:\n            c=q.pop()\n            if c<0:\n                ce=~c\n            else:\n                ce=c\n                for nb,d in self.edges[ce]:\n                    if self.depth[nb]==None:\n                        q.append(~ce)\n                        q.append(nb)\n                        self.depth[nb]=self.depth[ce]+1\n            self.ETtable.append(ce)\n            self.ETdepth.append(self.depth[ce])\n            if self.ETin[ce]==-1:\n                self.ETin[ce]=cnt\n            else:\n                self.ETout[ce]=cnt\n            cnt+=1\n        return\n    \n    def LCA_init(self,root):\n        self.EulerTour(root)\n        self.st=SparseTable(self.ETdepth,init_func=min,init_idl=inf)\n        #self.st=SegTree(self.size*2-1,self.ETdepth,function=min,ide=inf)\n        self.LCA_init_stat=True\n        return\n    \n    def LCA(self,root,x,y):\n        if self.LCA_init_stat==False:\n            self.LCA_init(root)\n        xin,xout=self.ETin[x],self.ETout[x]\n        yin,yout=self.ETin[y],self.ETout[y]\n        a=min(xin,yin)\n        b=max(xout,yout,xin,yin)\n        id_of_min_dep_in_et=self.st.query_id(a,b+1)\n        return self.ETtable[id_of_min_dep_in_et]\n \n    def __str__(self):\n        return  str(self.edges)\n \n    def show(self):\n        if all([all([d==1 for nd,d in edge]) for edge in self.edges]):\n            print( [[nd for nd,d in edge] for edge in self.edges] )\n        else:\n            print(self)\n \nclass SparseTable: # O(N log N) for init, O(1) for query(l,r)\n    def __init__(self,ls,init_func=min,init_idl=float('inf')):\n        self.func=init_func\n        self.idl=init_idl\n        self.size=len(ls)\n        self.N0=self.size.bit_length()\n        self.table=[ls[:]]\n        self.index=[list(range(self.size))]\n        self.lg=[0]*(self.size+1)\n        \n        for i in range(2,self.size+1):\n            self.lg[i]=self.lg[i>>1]+1\n \n        for i in range(self.N0):\n            tmp=[self.func(self.table[i][j],self.table[i][min(j+(1<<i),self.size-1)]) for j in range(self.size)]\n            tmp_id=[self.index[i][j] if self.table[i][j]==self.func(self.table[i][j],self.table[i][min(j+(1<<i),self.size-1)]) else self.index[i][min(j+(1<<i),self.size-1)] for j in range(self.size)]\n            self.table+=[tmp]\n            self.index+=[tmp_id]\n    \n    # return func of [l,r)\n    def query(self,l,r):\n        if r>self.size:r=self.size\n        #N=(r-l).bit_length()-1\n        N=self.lg[r-l]\n        return self.func(self.table[N][l],self.table[N][max(0,r-(1<<N))])\n    \n    # return index of which val[i] = func of v among [l,r)\n    def query_id(self,l,r):\n        if r>self.size:r=self.size\n        #N=(r-l).bit_length()-1\n        N=self.lg[r-l]\n        a,b=self.index[N][l],self.index[N][max(0,r-(1<<N))]\n        if self.table[0][a]==self.func(self.table[N][l],self.table[N][max(0,r-(1<<N))]):\n            b=a\n        return b\n    \n    # return boundary index of r such that func({table[i]} =< x , i in [pos,r]\n    def right_bound(self,pos,x):\n        k=(self.size-pos).bit_length()\n        for j in range(k)[::-1]:\n            nx=pos+(1<<j)\n            if nx<n and self.query(pos,nx+1)<=x:\n                pos+=(1<<j)\n        return pos\n    \n    # return boundary index of l such that func({table[i]} =< x , i in [l,pos]\n    def left_bound(self,pos,x):\n        k=pos.bit_length()\n        for j in range(k)[::-1]:\n            nx=pos-(1<<j)\n            if 0<=nx and self.query(nx,pos+1)<=x:\n                pos-=(1<<j)\n        return pos\n \n    def __str__(self):\n        return str(self.table[0])\n \n    def print(self):\n        for i in self.table:\n            print(*i)\n \nshow_flg=False\nshow_flg=True\nans=0\n\n\n#for _ in rep(I()):\nans=0\nn=I()\na=LI()\nac=[a[0]]\nm=[0]*(n+2)\nb=[]\n\n\n\nfor i in range(n):\n    m[a[n-1-i]]=n-1-i+1\n    if ac[-1]!=a[i]:\n        ac+=[a[i]]\nd={i:j for i,j in zip(ac+[inf],ac[1:]+[inf]*2)}\nac+=[inf]\nac=ac[::-1]\ns=set(ac)\nq=[]\nfor i in range(2*n+1)[::-1]:\n    if i not in s:\n        q+=i,\n\nmex=0\nj=0\nfor i in range(n):\n    if a[i]>ac[-1]:\n        t=ac.pop()\n        \n    else:\n        t=q.pop()\n        \n    b+=t,\n    #show(i,b,mex,j,m)\n\nans=b\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "import math\ndef findholes(arr):\n    holes = [False]*100005\n    for a in arr:\n        holes[a] = True\n    ret = []\n    for i,h in enumerate(holes):\n        if h == False:\n            ret.append(i)\n    return ret\n\ndef findb(arr):\n    holes = findholes(arr)\n    holes = holes[::-1]\n    b_array = []\n    for i,a in enumerate(arr):\n        if i>0 and arr[i]>arr[i-1]:\n            holes.append(arr[i-1])\n        currhole = holes.pop(-1)\n        b_array.append(currhole)\n        if a < 0:\n            return []\n        if a != 0:\n            if len(holes)>0:\n                if holes[-1]<=a-1:\n                    return []\n    return b_array\nn = int(input())\na = [int(x) for x in input().split(\" \")]\nans = findb(a)\nif len(ans)==0:\n    print(-1)\nelse:\n    print(\" \".join([str(x) for x in ans]))"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\nimport bisect\nimport math\nimport itertools\nimport sys\nimport heapq\nfrom atexit import register\n \nif sys.version_info[0] < 3:\n    from io import BytesIO as stream\nelse:\n    from io import StringIO as stream\n \n \nif sys.version_info[0] < 3:\n    class dict(dict):\n        \"\"\"dict() -> new empty dictionary\"\"\"\n        def items(self):\n            \"\"\"D.items() -> a set-like object providing a view on D's items\"\"\"\n            return dict.iteritems(self)\n \n        def keys(self):\n            \"\"\"D.keys() -> a set-like object providing a view on D's keys\"\"\"\n            return dict.iterkeys(self)\n \n        def values(self):\n            \"\"\"D.values() -> an object providing a view on D's values\"\"\"\n            return dict.itervalues(self)\n \n    input = raw_input\n    range = xrange\n \n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n \n \ndef sync_with_stdio(sync=True):\n    \"\"\"Set whether the standard Python streams are allowed to buffer their I/O.\n \n    Args:\n        sync (bool, optional): The new synchronization setting.\n \n    \"\"\"\n    global input, flush\n \n    if sync:\n        flush = sys.stdout.flush\n    else:\n        sys.stdin = stream(sys.stdin.read())\n        input = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n        sys.stdout = stream()\n        register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n \ndef main():\n    \n    \n    \n    n=int(input()) \n    ans=[]\n    #n,k=map(int, input().split())\n    a=list(map(int, input().split()))\n    b=[0]*(n+1)\n    #if a[0]==0: ans.append(1)\n    #if a[0]: ans.append(0)\n    for i in range(n):\n        b[a[i]]=1\n        if a[i]>(i+1):\n            print('-1')\n            exit()\n    hp=[]\n    for i in range(n+1):\n        if not b[i]: hp.append(i)\n    heapq.heapify(hp)\n    #x=heapq.heappop(hp)\n    for i in range(n-1):\n        ans.append(heapq.heappop(hp))\n        if a[i]<a[i+1]:\n            heapq.heappush(hp,a[i])\n    ans.append(heapq.heappop(hp))        \n    print(*ans)        \n    \nif __name__ == '__main__':\n    sync_with_stdio(False)\n    main()"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\nif(l[0]>1 or l[-1]>n):\n    print(-1)\nelse:\n    flag=0\n    dup=0\n    for i in range(n):\n        if(l[i]-i>1):\n            flag=1\n            break\n    if(flag==1):\n        print(-1)\n    else:\n        s1=set(l)\n        s2=set([int(x) for x in range(0,n+2)])\n        s3=s2.difference(s1)\n        l1=list(s3)\n        l1.sort()\n        ans=[]\n        if(l[0]==0):\n            ans.append(l1.pop(0))\n        else:\n            l1.pop(0)\n            ans.append(0)\n        prev=l[0]\n        for i in range(1,n):\n            if(l[i]==prev):\n                ans.append(l1.pop(0))\n            else:\n                ans.append(prev)\n                prev=l[i]\n        print(*ans)\n\n            "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\ni=0\ntemp=-1\nb=[-1]*n\nwhile i<n-1:\n    if a[i]!=a[i+1]:\n        temp=a[i]\n        b[i+1]=temp\n    i+=1\nx=b.count(-1)\nlis=[-1]*(n+1)\nfor i in range(n):\n    lis[a[i]]=0\ny=lis.count(-1)\narr=[]\np=n+1\nfor i in range(p):\n    if lis[i]==-1:\n        arr.append(i)\nj=0\nfor i in range(n):\n    if b[i]==-1:\n        b[i]=arr[j]\n        j+=1\nprint(\" \".join(str(x) for x in b))\n                    "
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nn=int(input())\na=[int(X) for X in input().split()]\na=a[::-1]\nx=[-1 for i in range(n)]\nfor i in a:\n    if i>n:\n        print(-1)\n        exit()\np=defaultdict(lambda :0)\np[a[0]]=1\nj=0\nfor i in range(n-1):\n    if a[i]!=a[i+1]:\n        x[i]=a[i+1]\n        p[a[i+1]]=1\nj=n\nfor i in range(n):\n    while (p[j]==1):\n        j-=1\n    if x[i]==-1:\n        x[i]=j\n        j-=1\nprint(*x[::-1])"
        },
        {
            "language": 3,
            "solution": "import os\n### START FAST IO ###\nos_input = os.read(0, int(1e7)).split()\nos_input_pos = -1\nanswer_list = []\ndef read_s():\n    global os_input_pos\n    os_input_pos += 1\n    return os_input[os_input_pos].decode()\ndef read_i():\n    return int(read_s())\ndef write_s(v):\n    answer_list.append(v)\ndef write_i(v):\n    write_s(str(v))\ndef print_ans():\n    os.write(1, \"\\n\".join(answer_list).encode())\n#### END FAST IO ####\n\nn = read_i()\na = [read_i() for i in range(n)]\nneed = [i != a[-1] for i in range(n+1)]\nans = [-1 for i in range(n)]\nfor i in range(n):\n    if i > 0 and a[i] != a[i-1]:\n        ans[i] = a[i-1]\n        need[ans[i]] = False\n\nj = 0\nfor i in range(n):\n    if ans[i] == -1:\n        while not need[j]:\n            j += 1\n        ans[i] = j\n        need[j] = False\n\nwrite_s(' '.join([str(x) for x in ans]))\nprint_ans()\n\n"
        },
        {
            "language": 3,
            "solution": "input()\nmaybe_used = []\n\ndata = list(map(int, input().split()))\nresult = [None] * len(data)\n\nif data[0] == 0:\n\tmaybe_used.append(0)\nelif data[0] == 1:\n\tresult[0] = 0\nelse:\n\tprint(-1)\n\nbreak_flag = False\n\nfor i in range(1, len(data)):\n\t\tif data[i] == data[i-1]:\n\t\t\tmaybe_used.append(i)\n\t\telif data[i] == data[i-1] + 1:\n\t\t\tresult[i] = data[i-1]\n\t\telse:\n\t\t\tresult[i] = data[i-1]\n\t\t\tfor j in range(data[i-1]+1, data[i]):\n\t\t\t\tif maybe_used:\n\t\t\t\t\tk = maybe_used.pop(0)\n\t\t\t\t\tresult[k] = j\n\t\t\t\t\tpass\n\t\t\t\telse:\n\t\t\t\t\tbreak_flag = True\n\t\t\t\t\tbreak\n\t\t\tif break_flag:\n\t\t\t\tprint(-1)\n\t\t\t\tbreak\n\nif not break_flag:\n\tx = 100500\n\twhile maybe_used:\n\t\tresult[maybe_used.pop(0)] = x\n\t\tx += 1\n\tprint(*result)\n\tpass"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mxn = 100005;\nlong long int arr[mxn];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long int t;\n  t = 1;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    long long int a[100005], b[100005] = {}, i, x;\n    long long int c[100005] = {};\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n      c[a[i]]++;\n    }\n    vector<int> v;\n    int flag = 0;\n    queue<int> ans;\n    for (i = 0; i <= n; i++) {\n      if (c[i] == 0) continue;\n      while (c[i]) {\n        if (ans.size()) {\n          c[i]--;\n          v.push_back(ans.front());\n          b[ans.front()]++;\n          ans.pop();\n          continue;\n        }\n        while (c[flag] or b[flag]) flag++;\n        b[flag]++;\n        v.push_back(flag++);\n        c[i]--;\n      }\n      ans.push(i);\n    }\n    for (i = 0; i < n; i++) cout << v[i] << \" \";\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    static int mx = (int)1e7;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb = new StringBuilder();\n        int n = Integer.parseInt(br.readLine());\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int[] arr = new int[n];\n        HashSet<Integer> hs = new HashSet<>();\n        for(int i = 0; i<n; i++){\n            arr[i] = Integer.parseInt(st.nextToken());\n            hs.add(arr[i]);\n        }\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        for(int i = 1; i<n; i++){\n            if(arr[i]!=arr[i-1]){\n                ans[i] = arr[i-1];\n            }\n        }\n        int num = 0;\n        for(int i = 0; i<n; i++){\n            if(ans[i]==-1){\n                while(hs.contains(num) && ans[i]!=num) num++;\n                ans[i] = num++;\n            }\n        }\n        for(int z: ans) sb.append(z).append(\" \");\n        sb.append('\\n');\n        System.out.println(sb);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cerr << '{';\n  __print(x.first);\n  cerr << ',';\n  __print(x.second);\n  cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cerr << '{';\n  for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\nconst int Nmax = 1000005;\nint arr[Nmax];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int i, n;\n  cin >> n;\n  vector<int> have(n + 5, 0);\n  for (i = 1; i <= n; ++i) {\n    cin >> arr[i];\n    have[arr[i]]++;\n  }\n  vector<int> ans(n + 5, -1);\n  int mex = 0;\n  for (i = 1; i <= n; ++i) {\n    if (ans[i] == -1) {\n      while (have[mex] > 0) {\n        ++mex;\n      }\n      ans[i] = mex;\n      ++mex;\n    }\n    --have[arr[i]];\n    if (have[arr[i]] == 0) {\n      ans[i + 1] = arr[i];\n      mex = max(mex, arr[i] + 1);\n    }\n  }\n  for (i = 1; i <= n; ++i) {\n    cout << ans[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int NN = 1e7 + 7;\nconst int N = 5e2 + 7;\nconst int M = 26;\nconst long long mod = 998244353;\nconst long long inf = 1e18 + 7;\nconst double long rf = 1e-14;\nconst int B = sqrt(N);\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nvoid solve1() {\n  int n;\n  cin >> n;\n  vector<int> a(n, 0);\n  vector<pair<int, int> > b;\n  for (auto &x : a) cin >> x;\n  for (int i = 0; i < n; i++) {\n    int j = i;\n    while (j < n && a[i] == a[j]) j += 1;\n    j -= 1;\n    b.push_back({j, a[j]});\n    i = j;\n  }\n  set<int> s;\n  for (int i = 1; i < n; i++) {\n    for (int j = a[i - 1] + 1; j < a[i]; j++) {\n      s.insert(j);\n    }\n  }\n  vector<int> ans;\n  int mn = 0;\n  vector<int> used(n + 1, 0);\n  for (int i = 0; i < a[0]; i++) s.insert(i);\n  for (int i = a[n - 1] + 1; i < a[n - 1] + n + 1; i++) s.insert(i);\n  for (int i = 0, j = 0; i < n; i++) {\n    while (j < (int)b.size() && b[j].first < i) {\n      s.insert(b[j].second);\n      j += 1;\n    }\n    ans.push_back(*s.begin());\n    s.erase(s.begin());\n    used[ans.back()] = 1;\n    while (used[mn]) mn += 1;\n    if (mn != a[i]) {\n      cout << i << \" \";\n      cout << \"-1\\n\";\n      return;\n    }\n  }\n  for (auto x : ans) cout << x << \" \";\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int cghf = 1;\n  while (cghf--) {\n    solve1();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from fractions import Fraction\nfrom collections import defaultdict\nimport math\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\ndef input(): return sys.stdin.readline().rstrip(\"\\r\\n\")\n#----------------------------------------Code Starts Here--------------------------------------------#\n\n\nkrish = 1000\nraj = krish*90\nr = krish-90\nn = int(input())\nl = list([int(x) for x in input().split()])\nb = [-1]*n\ns = set(l)\ns1 = set()\nfor i in range(n+1):\n    if(i not in s):\n        s1.add(i)\n\nfor i in range(1, n):\n    if(l[i] != l[i-1]):\n        b[i] = l[i-1]\n\nbl = list(s1)\nk = 0\nfor i in range(n):\n    if(b[i] == -1):\n        b[i] = bl[k]\n        k += 1\n\nprint(*b)\nr -= 10\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as dd\nimport sys\ninput=sys.stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\ns=[l[0]]\nd=dd(int)\nd[l[0]]+=1\nfor i in range(1,n):\n    if(l[i]!=l[i-1]):\n        s.append(l[i])\n    d[l[i]]+=1\ni=0\nnn=len(s)\nres=[]\nnums=0\nprev=-1\nk=0\nwhile i<n:\n    if(l[i]!=prev and prev!=-1):\n        res.append(prev)\n        prev=l[i]\n    else:\n        while d[k]!=0:\n            k+=1\n        res.append(k)\n        k+=1\n        prev=l[i]\n    i+=1\nprint(*res)\n\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n, ans = 0, i, j, k = 1000000, x;\n  cin >> n;\n  long long int a[n + 1], b[n + 1];\n  long long int m[100010];\n  for (i = 0; i < 100010; i++) {\n    m[i] = 0;\n  }\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (a[i] > i) {\n      ans = 1;\n    }\n  }\n  if (ans == 1) {\n    cout << -1;\n  } else {\n    x = a[1];\n    if (a[1] == 1) {\n      b[1] = 0;\n    } else {\n      b[1] = -1;\n    }\n    for (i = 2; i <= n; i++) {\n      if (a[i] != a[i - 1]) {\n        m[x] = 1;\n        b[i] = x;\n        x = a[i];\n      } else {\n        b[i] = -1;\n      }\n    }\n    x = a[n];\n    x--;\n    for (i = n; i >= 1; i--) {\n      while (x >= 0 && m[x] == 1) {\n        x--;\n      }\n      if (x < 0) {\n        break;\n      }\n      if (m[x] == 0 && a[i] < x && b[i] == -1) {\n        b[i] = x;\n        m[x] = 1;\n      }\n    }\n    for (i = 0; i < a[n]; i++) {\n      if (m[i] == 0) {\n        ans = 1;\n      }\n    }\n    for (i = 1; i <= n; i++) {\n      if (b[i] == -1) {\n        cout << k << \" \";\n      } else {\n        cout << b[i] << \" \";\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,mas,now,p = int(input()),list(map(int, input().split())),1,0;s = set(mas)\nfor i in range(n):\n\tif mas[i] != p:\n\t\tprint(p, end = ' ');p = mas[i]\n\t\tif now == mas[i]:now += 1\n\telse:\n\t\twhile now in s:now += 1\n\t\tprint(now, end = ' ');now += 1\nprint()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  bool found = true;\n  for (int i = 0; i < n; i++) {\n    if (arr[i] > i + 1) {\n      found = false;\n      break;\n    }\n  }\n  map<int, int> m;\n  if (!found)\n    cout << \"-1\" << endl;\n  else {\n    for (int i = 0; i < n; i++) m[arr[i]] = i;\n    int b[n];\n    for (int i = 0; i < n; i++) {\n      b[i] = -1;\n    }\n    map<int, int>::iterator it;\n    for (it = m.begin(); it != m.end(); it++) {\n      if (it->second < n - 1) {\n        b[it->second + 1] = it->first;\n      }\n    }\n    int j = 0;\n    for (int i = 0; i < n; i++) {\n      if (b[i] != -1) continue;\n      while (m.count(j) > 0) j++;\n      b[i] = j;\n      j++;\n    }\n    for (int i = 0; i < n; i++) cout << b[i] << \" \";\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct hash_pair {\n  template <class T1, class T2>\n  size_t operator()(const pair<T1, T2>& p) const {\n    auto h1 = hash<T1>{}(p.first);\n    auto h2 = hash<T2>{}(p.second);\n    return h1 ^ h2;\n  }\n};\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  long long int n;\n  cin >> n;\n  vector<long long int> v(n), ans(n, -1);\n  unordered_map<long long int, long long int> mp;\n  for (long long int i = 0; i < n; i++) {\n    cin >> v[i];\n    mp[v[i]]++;\n  }\n  unordered_map<long long int, short int> mp2;\n  mp2[v[n - 1]] = true;\n  for (long long int i = n - 2; i >= 0; i--) {\n    if (mp2[v[i]] == 0) {\n      ans[i + 1] = v[i];\n      mp2[v[i]] = 1;\n      mp[v[i]]++;\n    }\n  }\n  set<long long int> used;\n  long long int x = 0;\n  for (long long int i = 0; i < n; i++) {\n    while (mp[x]) x++;\n    if (ans[i] == -1) {\n      ans[i] = x;\n      mp[x]++;\n      mp[v[i]]--;\n    }\n  }\n  for (auto h : ans) cout << h << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C649C\n{\n    static PrintWriter out = new PrintWriter((System.out));\n\n    public static void main(String args[]) throws IOException\n    {\n        Reader sc = new Reader();\n        int n=sc.nextInt();\n        int ar[]=new int[n];\n        int b[]=new int[n];\n        boolean has[]=new boolean[1_000_001];\n        for(int x=0;x<n;x++)\n        {\n            ar[x]=sc.nextInt();\n            has[ar[x]]=true;\n        }\n        int y=0;\n        for(int x=0;x<n;x++)\n        {\n            if(x==0)\n            {\n                while(has[y])\n                {\n                    y++;\n                }\n                out.print(y+\" \");\n                y++;\n            }\n            else if(ar[x]!=ar[x-1])\n            {\n                out.print(ar[x-1]+\" \");\n            }\n            else\n            {\n                while(has[y])\n                {\n                    y++;\n                }\n                out.print(y+\" \");\n                y++;\n            }\n        }\n        out.close();\n    }\n\n\n    static class Reader\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        public String next()\n        {\n            while (!st.hasMoreTokens())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (Exception e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine()\n        {\n            try\n            {\n                return br.readLine();\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n            }\n            return null;\n        }\n\n        public boolean hasNext()\n        {\n            String next = null;\n            try\n            {\n                next = br.readLine();\n            }\n            catch (Exception e)\n            {\n            }\n            if (next == null)\n            {\n                return false;\n            }\n            st = new StringTokenizer(next);\n            return true;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import heapq\n\nn = int(input())\na = list(map(int,input().split()))\nfl = True\nr = [0] * (n+1)\n\ns = set()\nfor i in range(n):\n    s.add(a[i])\n    \nfor i in s:\n    r[i] = 1\n    \nt = []\nfor i in range(n+1):\n    if r[i] == 0:\n        t.append(i)\n        \nheapq.heapify(t)\n\nx = [-1] * n\n\nfor i in range(n-1):\n    if a[i] != a[i+1]:\n        x[i+1] = a[i]\n        \nfor i in range(n):\n    if x[i] == -1:\n        k = heapq.heappop(t)\n        x[i] = k\n        \nprint(*x)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport heapq\nimport collections\ndef inputnum():\n    return(int(input()))\ndef inputnums():\n    return(map(int,input().split()))\ndef inputlist():\n    return(list(map(int,input().split())))\ndef inputstring():\n    return([x for x in input()])\ndef inputmatrixchar(rows):\n    arr2d = [[j for j in input().strip()] for i in range(rows)] \n    return arr2d\ndef inputmatrixint(rows):\n    arr2d = []\n    for _ in range(rows):\n        arr2d.append([int(i) for i in input().split()])\n    return arr2d\n\nn = inputnum()\na = inputlist()\nb = [-1]*(n)\nc = [False]*(1000000)\nc[a[0]] = True\nfor i in range(1, n):\n    c[a[i]] = True\n    if a[i] > a[i-1]:\n        b[i] = a[i-1]\nm = 0\nfor i in range(n):\n    while c[m] == True:\n        m += 1\n    if b[i] == -1:\n        b[i] = m \n        c[m] = True\nprint(*b)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class File {\n    public static class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner();\n        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\n\n\t\t\n\t\t\n\t\t\n\t\tint n = sc.nextInt();\n\t\t\n\t\t\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\t\n\t\t\n\t\tint[] b = new int[n];\n\t\tArrays.fill(b, -1);\n\t\tboolean[] skip = new boolean[100009];\n\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (a[i] != a[i-1]) {\n\t\t\t\tb[i] = a[i-1];\n\t\t\t\tskip[b[i]] = true;\n\t\t\t}\n\t\t}\n\t\tskip[a[n-1]] = true;\n\t\t\n\t\t\n\t\tint min = 0;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\twhile (skip[min]) {\n\t\t\t\tmin++;\n\t\t\t}\n\t\t\t\n\t\t\tif (b[i] == -1) {\n\t\t\t\tb[i] = min;\n\t\t\t\tskip[min] = true;\n\t\t\t}\n\t\t\t\n\t\t\tout.print(b[i] + \" \");\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tout.close();\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\t"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;  \npublic class Main \n{\n/*\n    HashMap<> map=new HashMap<>();\n    TreeMap<> map=new TreeMap<>();\n    map.put(p,map.getOrDefault(p,0)+1);\n    for(Map.Entry<> mx:map.entrySet()){\n          int v=mx.getValue(),k=mx.getKey();\n    }for (int i = 1; i <= 1000; i++)\n    fac[i] = fac[i - 1] * i % mod;\n    ArrayList<Pair<Character,Integer>> l=new ArrayList<>();\n    ArrayList<> l=new ArrayList<>();\n    HashSet<> has=new HashSet<>();*/ \n    PrintWriter out;\n    FastReader sc;\n    long mod=(long)(1e9+7);\n    int maxint= Integer.MAX_VALUE;\n    int minint= Integer.MIN_VALUE;\n    long maxlong=Long.MAX_VALUE;\n    long minlong=Long.MIN_VALUE; \n    public void sol(){\n          int testCase=1;  \n          while(testCase-->0){\n                int n=ni();\n                int[] ar=new int[n];\n                for(int i=0;i<n;i++)ar[i]=ni();\n                ArrayList<Integer> q=new ArrayList<>(),l=new ArrayList<>();\n                for(int i=0;i<=n;i++){\n                      q.add(i);\n                }HashSet<Integer> h=new HashSet<>();\n                int j=n;\n                for(int i=n-1;i>=0;i--){\n                      h.add(ar[i]);\n                      if(i>0&&!h.contains(ar[i-1]))l.add(ar[i-1]);\n                      else{\n                            while(j>=0&&h.contains(q.get(j)))j--;\n                            if(j>=0){\n                                  l.add(q.get(j));\n                                  h.add(q.get(j));\n                            }\n                      }\n                }StringBuilder sb=new StringBuilder();\n                for(int i=n-1;i>=0;i--){\n                      sb.append(l.get(i)+\" \");\n                }pl(sb);\n          }\n    }\n    public static void main(String[] args) \n\t{ \n\t      Main g=new Main();\n\t\tg.out=new PrintWriter(System.out);\n\t\tg.sc=new FastReader();\n\t\tg.sol();\n\t\tg.out.flush();\n\t}\n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n \n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n \n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n \n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n \n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n \n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n \n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} public int ni(){\n\t      return sc.nextInt();\n\t}public long nl(){\n\t      return sc.nextLong();\n\t}public double nd(){\n\t      return sc.nextDouble();\n\t}public char[] rl(){\n\t      return sc.nextLine().toCharArray();\n\t}public String rl1(){\n\t      return sc.nextLine();\n\t}\n\tpublic void pl(Object s){\n\t      out.println(s);\n\t}public void ex(){\n\t      out.println();\n\t}\n\tpublic void pr(Object s){\n\t      out.print(s);\n\t}public String next(){\n\t      return sc.next();\n\t}public long abs(long x){\n\t      return Math.abs(x);\n\t}\n\tpublic int abs(int x){\n\t      return Math.abs(x);\n\t}\n\tpublic double abs(double x){\n\t      return Math.abs(x);\n\t}\n      public long pow(long x,long y){\n            return (long)Math.pow(x,y);\n      }\n      public int pow(int x,int y){\n            return (int)Math.pow(x,y);\n      }\n      public double pow(double x,double y){\n            return Math.pow(x,y);\n      }public long min(long x,long y){\n            return (long)Math.min(x,y);\n      }\n      public int min(int x,int y){\n            return (int)Math.min(x,y);\n      }\n      public double min(double x,double y){\n            return Math.min(x,y);\n      }public static int gcd(int a, int b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}static void sort(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort(long[] a) {\n\t\tArrayList<Long> l = new ArrayList<>();\n\t\tfor (long i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort(double[] a) {\n\t\tArrayList<Double> l = new ArrayList<>();\n\t\tfor (double i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}int  swap(int a,int b){\n\t      return a;\n\t}long  swap(long a,long b){\n\t      return a;\n\t}double  swap(double a,double b){\n\t      return a;\n\t}\n\tboolean isPowerOfTwo (int x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }boolean isPowerOfTwo (long x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }public long max(long x,long y){\n            return (long)Math.max(x,y);\n      }\n      public int max(int x,int y){\n            return (int)Math.max(x,y);\n      }\n      public double max(double x,double y){\n            return Math.max(x,y);\n      }long sqrt(long x){\n            return (long)Math.sqrt(x);\n      }int sqrt(int x){\n            return (int)Math.sqrt(x);\n      }void input(int[] ar,int n){\n            for(int i=0;i<n;i++)ar[i]=ni();\n      }void input(long[] ar,int n){\n            for(int i=0;i<n;i++)ar[i]=nl();\n      }void fill(int[] ar,int k){\n            Arrays.fill(ar,k);\n      }void yes(){\n            pl(\"YES\");\n      }void no(){\n            pl(\"NO\");\n      }\n    int[] sieve(int n) \n    { \n        boolean prime[] = new boolean[n+1]; \n        int[] k=new int[n+1];\n        for(int i=0;i<=n;i++) {\n            prime[i] = true; \n            k[i]=i;\n        }\n          \n        for(int p = 2; p <=n; p++) \n        { \n            if(prime[p] == true) \n            { \n               // sieve[p]=p;\n                for(int i = p*2; i <= n; i += p) {\n                    prime[i] = false; \n                  //  sieve[i]=p;\n                    while(k[i]%(p*p)==0){\n                          k[i]/=(p*p);\n                    }\n                }\n            } \n        }return k;\n    }\n    int strSmall(int[] arr, int target)  \n    {  \n        int start = 0, end = arr.length-1;  \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;   \n            if (arr[mid] >= target) {  \n                end = mid - 1;  \n            }   \n            else {  \n                ans = mid;  \n                start = mid + 1;  \n            }  \n        }  \n        return ans;  \n    } int strSmall(ArrayList<Integer> arr, int target)  \n    {  \n        int start = 0, end = arr.size()-1;  \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;   \n            if (arr.get(mid) > target) {  \n                start = mid + 1; \n                ans=start;\n            }   \n            else {\n                end = mid - 1;  \n            }  \n        }  \n        return ans;  \n    }long mMultiplication(long a,long b) \n    { \n        long res = 0;    \n        a %= mod; \n  \n        while (b > 0)  \n        {  \n            if ((b & 1) > 0)  \n            { \n                res = (res + a) % mod; \n            }  \n            a = (2 * a) % mod; \n  \n            b >>= 1;  \n        } \n        return res; \n    }long nCr(int n, int r,\n                             long p)\n    {\n \n          if (n<r) \n              return 0;\n        if (r == 0)\n            return 1;\n            long[] fac = new long[n + 1];\n        fac[0] = 1;\n \n        for (int i = 1; i <= n; i++)\n            fac[i] = fac[i - 1] * i % p;\n        return (fac[n] * modInverse(fac[r], p)\n                % p * modInverse(fac[n - r], p)\n                % p)\n            % p;\n    }long power(long x, long y, long p)\n    {\n        long res = 1;\n        x = x % p;\n \n        while (y > 0) {\n            if (y % 2 == 1)\n                res = (res * x) % p;\n            y = y >> 1; \n            x = (x * x) % p;\n        }\n \n        return res;\n    }long modInverse(long n, long p)\n    {\n        return power(n, p - 2, p);\n    }\n      public static class Pair implements Comparable<Pair> {\n\t\tint x;\n\t\tint y;\n \n\t\tpublic Pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n \n\t\tpublic String toString() {\n\t\t\treturn x + \",\" + y;\n\t\t}\n \n\t\tpublic boolean equals(Object o) {\n\t\t\tif (o instanceof Pair) {\n\t\t\t\tPair p = (Pair) o;\n\t\t\t\treturn p.x == x && p.y == y;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n \n\t\tpublic int hashCode() {\n\t\t\treturn new Double(x).hashCode() * 31 + new Double(y).hashCode();\n\t\t}\n \n\t\tpublic int compareTo(Pair other) {\n\t\t\tif (this.x == other.x) {\n\t\t\t\treturn Long.compare(this.y, other.y);\n\t\t\t}\n\t\t\treturn Long.compare(this.x, other.x);\n\t\t}\n      }\n\t \n} "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nint n, A[maxn];\nmap<int, int> vis;\nvector<int> ans;\nvoid init() {\n  vis.clear();\n  ans.clear();\n}\nvoid solve() {\n  int fst = 0;\n  for (int i = (1); i <= (n); i++) {\n    if (A[i] > i + 1) {\n      printf(\"-1\\n\");\n      return;\n    }\n    if (i > 1 && A[i] > A[i - 1]) {\n      ans.push_back(A[i - 1]);\n      continue;\n    }\n    while (vis.find(fst) != vis.end()) fst++;\n    ans.push_back(fst);\n    fst++;\n  }\n  for (auto x : ans) printf(\"%d \", x);\n}\nint main() {\n  init();\n  scanf(\"%d\", &n);\n  for (int i = (1); i <= (n); i++) {\n    scanf(\"%d\", &A[i]);\n    vis[A[i]]++;\n  }\n  solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------- fast io --------------------\n \nn=int(input())\nvals=list(map(int,input().split()))\nnoreps1=set(vals)\nnoreps=list(noreps1)\nnoreps.sort()\nmaxy=vals[-1]\nminy=vals[0]\nposi=True\n \nminsofar=0\n#ok i have an idea we loop throug vals and check index+startval>=ith val\nbroke=False\nfor j in range(n):\n    if j+1<vals[j]:\n        broke=True\n        break\nif broke==True:\n    print(-1)\nelse:\n    #we now have to construct it, we'll construct the nums at the start then use excess for the end\n    #ok ill just add the numbers im not allowed to count, just start from 0.\n    #numbers not allowed to count is just the noreps\n    outy=[\"x\"]*n\n    cv=0\n    minsofar=0\n    #maybe the error is here below\n    if len(noreps1)>=2:\n        for s in range(n):\n            if cv+1<=len(noreps)-1 and vals[s]==noreps[cv+1]:\n                outy[s]=str(noreps[cv])\n                cv+=1\n    for s in range(n):\n        if outy[s]==\"x\":\n            while minsofar in noreps1:\n                    minsofar+=1\n            outy[s]=str(minsofar)\n            minsofar+=1\n    print(\" \".join(outy))"
        },
        {
            "language": 3,
            "solution": "import sys\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\n\n\ndef solve(n, a):\n    d = {}\n    for ai in a:\n        if ai not in d:\n            d[ai] = 0\n        d[ai] += 1\n\n    c = []\n    i = 0\n    while len(c) < n:\n        if i not in d:\n            c.append(i)\n        i += 1\n\n    b = [0] * n\n\n    k = 0\n    for i in range(n):\n        if i == 0:\n            b[i] = c[k]\n            k += 1\n        else:\n            if a[i] != a[i-1]:\n                b[i] = a[i-1]\n            else:\n                b[i] = c[k]\n                k += 1\n\n    return b\n\n\ndef main():\n    n = ri()\n    a = ria()\n    res = solve(n, a)\n    if res == -1:\n        wi(-1)\n    else:\n        wia(res)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C1364 {\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint length = scanner.nextInt();\n\t\tint[] numbers = new int[length];\n\t\tboolean[] used = new boolean[length + 1];\n\t\tint minimum = 0;\n\t\tfor(int i = 0; i < length; i++) {\n\t\t\tint temp = scanner.nextInt();\n\t\t\tnumbers[i] = temp;\n\t\t\tif(numbers[i] == minimum + 1)\n\t\t\t\tminimum++;\n\t\t\tused[temp] = true;\n\t\t}\n\t\tint[] answer = new int[length];\n\t\tint location = 0;\n\t\twhile(used[location]) \n\t\t\tlocation++;\n\t\tanswer[0] = location;\n\t\t\n\t\tlocation++;\n\t\t\n\t\tfor(int i = 1; i < length; i++) {\n\t\t\tif(numbers[i] == numbers[i - 1]) {\n\t\t\t\t\n\t\t\t\twhile(used[location]) \n\t\t\t\t\tlocation++;\n\t\t\t\t\n\t\t\t\tanswer[i] = location;\n\t\t\t\t\n\t\t\t\tlocation++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tanswer[i] = numbers[i - 1];\n\t\t\t}\n\t\t}\n\t\tfor(int a: answer)\n\t\t\tSystem.out.print(a + \" \");\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int,input().strip().split()))[:n]\n\nfrom collections import defaultdict\nstore = defaultdict(int)\n\nans = [-1]*n\nfor num in arr:\n    store[num] = True\n\nfor i in range(1,n):\n    if arr[i] > i+1:\n        print(-1)\n        exit(0)\n\n    elif i > 0 and arr[i] != arr[i-1]:\n        ans[i] = arr[i-1]\n        store[arr[i-1]]  = True\n\nlow = 0\nfor i in range(n):\n    if ans[i] == -1:\n        while store[low] == True:\n            low+=1\n\n        ans[i] = low\n        store[low] = True\n\n    print(ans[i],end = \" \")\n\nprint()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nmas = list(map(int, input().split()))\n\nans = []\nhave = [0 for i in range(1000009)]\n\nfor i in range(n):\n\tif i > 0 and mas[i - 1] != mas[i]:\n\t\tans.append(mas[i - 1])\n\t\thave[mas[i - 1]] = 1\n\telse:\n\t\tans.append(-1)\n\nj = 0\nhave[mas[n - 1]] = 1\n\nfor i in range(len(ans)):\n\tif ans[i] == -1:\n\t\twhile (have[j]): j += 1\n\t\tans[i] = j\n\t\thave[j] = 1\n\n\nif mas[0] > 1: print(-1)\nelse:\n\tfor x in ans: print(x, end = ' ')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  t = 1;\n  while (t--) {\n    long long int n;\n    cin >> n;\n    long long int arr[n + 1];\n    long long int ans[n + 1];\n    unordered_map<long long int, long long int> mp;\n    arr[0] = 0;\n    for (__typeof(n + 1) i = (1) - ((1) > (n + 1));\n         i != (n + 1) - ((1) > (n + 1)); i += 1 - 2 * ((1) > (n + 1))) {\n      cin >> arr[i];\n      mp[arr[i]] = 1;\n    }\n    long long int p = 0;\n    for (__typeof(n + 1) i = (1) - ((1) > (n + 1));\n         i != (n + 1) - ((1) > (n + 1)); i += 1 - 2 * ((1) > (n + 1))) {\n      if (arr[i] != arr[i - 1]) {\n        ans[i] = arr[i - 1];\n        mp[arr[i - 1]] = 1;\n        continue;\n      }\n      while (mp[p]) {\n        p++;\n      }\n      ans[i] = p;\n      mp[p] = 1;\n    }\n    for (__typeof(n + 1) i = (1) - ((1) > (n + 1));\n         i != (n + 1) - ((1) > (n + 1)); i += 1 - 2 * ((1) > (n + 1)))\n      cout << ans[i] << \" \";\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\n    \n\n\nn = int(input())\na = list(map(int ,input().split()))\n\nb = [-1 for k in range(n)]\nexiste = [False for k in range(100005)]\nfor k in range(n):\n    if(a[k] != a[k-1] and k != 0):\n        b[k] = a[k-1]\n        existe[b[k]] = True\n        \nexiste[a[n-1]] = 1\nm = 0\n#print(b)\nfor k in range(n):\n    while(existe[m]):\n        m += 1\n    if(b[k] == -1):\n        b[k] = m\n        existe[m] = True\n    print(b[k], end=\" \")\n#print(b)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = [int(i) for i in input().split()]\na = [-1] * n\nvisited = [-1] * 100001\nflag = 0\nfor i in range(n):\n    if lst[i] > i+1:\n        flag = 1\n        break\n    visited[lst[i]]=1\nnot_v = list()\nfor i in range(100001):\n    if visited[i] == -1:\n        not_v.append(i)\nfor i in range(1, n):\n    if lst[i] != lst[i-1]:\n        a[i]=lst[i-1]\nj = 0\nfor i in range(n):\n    if a[i]==-1:\n       a[i] = not_v[j]\n       j+=1\nprint(*a)"
        },
        {
            "language": 1,
            "solution": "from collections import Counter, defaultdict, deque\nimport bisect\nfrom sys import stdin, stdout\nfrom itertools import repeat\nimport math\n\n# sys.stdin = open('input')\n\ndef inp(force_list=False):\n    re = map(int, raw_input().split())\n    if len(re) == 1 and not force_list:\n        return re[0]\n    return re\n\ndef inst():\n    return raw_input().strip()\n\ndef gcd(x, y):\n   while(y):\n       x, y = y, x % y\n   return x\n\n\ndef my_main():\n    t = 1\n    for _ in range(t):\n        n = inp()\n        da = inp(True)\n        last = 0\n        ct = 0\n        st = set()\n        ans = [-1] * n\n        last = 0\n        for i in range(n):\n            if da[i] != last:\n                ans[i] = last\n                st.add(last)\n            last = da[i]\n        st.add(last)\n        cur = 0\n        for i in range(n):\n            if ans[i]==-1:\n                while cur in st:\n                    cur += 1\n                ans[i] = cur\n                cur += 1\n        print ' '.join(map(str, ans))\n\n\n\n\n\n\n\nmy_main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.util.List;\n import java.util.*;\n public class realfast implements Runnable \n  {\n    private static final int INF = (int) 1e9;\n    long in= 998244353;\n    long fac[]= new long[3000];\n    public  void solve() throws IOException \n    {\n        int n = readInt();\n        int arr[]= new int[n];\n        boolean chec[]= new boolean[1000010];\n        for(int i =0;i<n;i++){\n         arr[i]= readInt();\n         chec[arr[i]]= true;\n        }\n\n        boolean check = true;\n\n        for(int i=0;i<n;i++)\n        {\n            if(i+1<arr[i])\n            {\n                check=false;\n                break;\n            }\n        }\n        if(!check)\n            out.println(-1);\n        else\n        {\n            int start=0;\n            for(int i =0;i<n;i++)\n            {\n                if(i>0&&arr[i]!=arr[i-1])\n                    out.print(arr[i-1]+\" \");\n                else\n                {\n                 while(chec[start])\n                 {\n                    start++;\n                 }  \n\n                 out.print(start+\" \");\n\n                 start++;\n                }\n            }\n        }\n\n\n\n\n\n    }\n\n    public int build(int seg[] , int left, int right , int index , int sum[])\n    {\n             if(left==right)\n             {\n                seg[index]= sum[left];\n                return seg[index];\n             }\n             int mid = left +(right-left)/2;\n             int left1 = build(seg, left,mid,2*index+1,sum);\n             int right1 = build(seg,mid+1,right, 2*index+2,sum);\n             seg[index]=Math.max(left1,right1);\n             return seg[index];\n    }\n    public int value (int seg[], int left , int right ,int index, int l, int r)\n    {\n            \n            if(left>right)\n            {\n              return -100000000;\n            }\n            if(right<l||left>r)\n                return -100000000;\n            if(left>=l&&right<=r)\n                return seg[index];\n            int mid = left+(right-left)/2;\n            int val = value(seg,left,mid,2*index+1,l,r);\n            int val2 = value(seg,mid+1,right,2*index+2,l,r);\n            return Math.max(val,val2);\n\n    }\n   \n    public int gcd(int a , int b )\n    {\n      if(a<b)\n      {\n        int t =a;\n        a=b;\n        b=t;\n      }\n      if(a%b==0)\n        return b ;\n      return gcd(b,a%b);\n    }\n    public long pow(long n , long p,long m)\n    {\n         if(p==0)\n            return 1;\n        long val = pow(n,p/2,m);;\n        val= (val*val)%m;\n        if(p%2==0)\n            return val;\n        else\n            return (val*n)%m;\n    }\n    \n    \n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    public static void main(String[] args) {\n        new Thread(null, new realfast(), \"\", 128 * (1L << 20)).start();\n    }\n \n    private static final boolean ONLINE_JUDGE = System.getProperty(\"ONLINE_JUDGE\") != null;\n    private BufferedReader reader;\n    private StringTokenizer tokenizer;\n    private PrintWriter out;\n \n    @Override\n    public void run() {\n        try {\n            if (ONLINE_JUDGE || !new File(\"input.txt\").exists()) {\n                reader = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(System.out);\n            } else {\n                reader = new BufferedReader(new FileReader(\"input.txt\"));\n                out = new PrintWriter(\"output.txt\");\n            }\n            solve();\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        } finally {\n            try {\n                reader.close();\n            } catch (IOException e) {\n                // nothing\n            }\n            out.close();\n        }\n    }\n \n    private String readString() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n \n    @SuppressWarnings(\"unused\")\n    private int readInt() throws IOException {\n        return Integer.parseInt(readString());\n    }\n \n    @SuppressWarnings(\"unused\")\n    private long readLong() throws IOException {\n        return Long.parseLong(readString());\n    }\n \n    @SuppressWarnings(\"unused\")\n    private double readDouble() throws IOException {\n        return Double.parseDouble(readString());\n    }\n}\nclass edge implements Comparable<edge>{\n    int val ;\n    int color;\n    \n    edge(int u, int v)\n    {\n       this.val=u;\n       this.color=v;\n    }\n    public int compareTo(edge e)\n    {\n        return this.val-e.val;\n    }\n}"
        },
        {
            "language": 4,
            "solution": "//    A Computer is Like a mischievous genie.\n//    It will give you exactly what you ask for,\n//    but not always what you want\n//    A code by Rahul Verma\n\n\nimport java.util.*;\nimport java.io.*;\n\n\npublic class Main {\n\n\n    static class Clock {\n\n        protected long start, stop;\n\n        public void start() {\n            start = System.currentTimeMillis();\n        }\n\n        public void stop() {\n            stop = System.currentTimeMillis();\n        }\n\n        public String getTime() {\n            return ((stop - start) + \" ms\");\n        }\n    }\n\n\n    public static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\n    static class FastReader {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String[] nextSArray() {\n            String sr[] = null;\n            try {\n                sr = br.readLine().trim().split(\" \");\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return sr;\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n            return str;\n        }\n    }\n\n\n    static long powmodulo(long a, long p) {\n        if (p == 0) {\n            return 1 % mod;\n        }\n        if (p == 1) {\n            return a % mod;\n        }\n        long ans = 1;\n        while (p > 0) {\n            if ((p & 1) > 0) {\n                ans = (ans * a) % mod;\n            }\n            a = (a * a) % mod;\n            p = p >> 1;\n        }\n        return ans % mod;\n    }\n\n\n    static long mod = 1000000007;\n\n    static long gcd(long a, long b) {\n        if (a == 0) {\n            return b;\n        }\n        return gcd(b % a, a);\n    }\n\n    static long fast_powerNumbers(long a, long n) {\n        if (n == 1) {\n            return a;\n        }\n        long ans = fast_powerNumbers(a, n / 2);\n        if (n % 2 == 0) {\n            return (ans * ans);\n        } else {\n            return ((ans * ans) * (a));\n        }\n    }\n\n\n\n\n    static int arr[];\n\n    static void seive(int n) {\n        arr = new int[n + 1];\n        arr[0] = arr[1] = 1;\n        for (int i = 4; i <= n; i = i + 2) {\n            arr[i] = 1;\n        }\n        for (int i = 3; i * i <= n; i = i + 2) {\n            if (arr[i] == 0) {\n                for (int j = i * i; j <= n; j = j + i) {\n                    arr[j] = 1;\n                }\n\n            }\n        }\n    }\n    public static void main(String[] args) throws Exception {\n        FastReader sc = new FastReader();\n\n        Clock clock = new Clock();\n        clock.start();\n      int n=sc.nextInt();\n      int arr[]=new int[n];\n      int brr[]=new int[n];\n\n        int max=n;\n        HashSet<Integer>set=new HashSet<>();\n        boolean ans=true;\n        for (int i = 0; i <n ; i++) {\n            arr[i] = sc.nextInt();\n            if (arr[i] > i + 1)\n            {\n                ans=false;\n            }\n\n\n        }\n        set.add(arr[n-1]);\n        if(!ans)\n        {\n            System.out.println(-1);\n            return;\n        }\n\n       // System.out.println(pq);\n        for (int i = n-1; i >0 ; --i) {\n            int ele = arr[i-1];\n            if(!set.contains(ele))\n            {\n                set.add(ele);\n                brr[i]=ele;\n            }\n            else {\n                while(set.contains(max))\n                    --max;\n                int x = max;\n                if (x < ele)\n                {\n                    System.out.println(-1);\n                    return;\n                }\n                brr[i]=x;\n                set.add(max);\n\n            }\n        }\n        while(set.contains(max))\n            --max;\n        brr[0] = max;\n\n        for (int i = 0; i <n ; i++) {\n            out.print(brr[i]+\" \");\n        }\n        out.println();\n        out.close();\n\n\n    }\n\n\n}\n\n\n class Pair implements Comparator<Pair> {\n\n    int a;\n    int b;\n\n    Pair(int a, int b) {\n        this.a = a;\n        this.b = b;\n    }\n\n     @Override\n     public int compare(Pair o1, Pair o2) {\n         return 0;\n     }\n }\n\n\n// out.println(al.toString().replaceAll(\"[\\\\[|\\\\]|,]\",\"\"));\n\n\n"
        },
        {
            "language": 4,
            "solution": "/*\n *\n * @Author  Ajudiya_13(Bhargav Girdharbhai Ajudiya)\n * Dhirubhai Ambani Institute of Information And Communication Technology\n *\n */\n\n\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\npublic class Code35\n{\n\n    public static void main(String[] args)\n    {\n        InputReader in = new InputReader(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n\n        int test_case =1;\n        for(int t=0;t<test_case;t++)\n        {\n            int n = in.nextInt();\n            TreeSet<Integer> set = new TreeSet<>();\n            for(int i=0;i<=1000000;i++)\n                set.add(i);\n            int[] a = in.nextIntArray(n);\n            for(int i=0;i<n;i++){\n                if((a[i]-1)>i){\n                    pw.println(-1);\n                    pw.flush();\n                    pw.close();\n                    System.exit(0);\n                }\n                set.remove(a[i]);\n            }\n            int[] b = new int[n];\n            int max = a[0];\n            for(int i=0;i<n;i++){\n                if(a[i]>max)\n                    set.add(max);\n                max = Math.max(max,a[i]);\n                b[i] = set.first();\n                set.remove(b[i]);\n            }\n            for(int i=0;i<n;i++)\n                pw.print(b[i] + \" \");\n        }\n\n\n        pw.flush();\n        pw.close();\n    }\n\n    static class InputReader\n    {\n\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n\n        public int snext()\n        {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars)\n            {\n                curChar = 0;\n                try\n                {\n                    snumChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt()\n        {\n            int c = snext();\n            while (isSpaceChar(c))\n            {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = snext();\n            }\n            int res = 0;\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nextLong()\n        {\n            int c = snext();\n            while (isSpaceChar(c))\n            {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = snext();\n            }\n            long res = 0;\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int[] nextIntArray(int n)\n        {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        public String readString()\n        {\n            int c = snext();\n            while (isSpaceChar(c))\n            {\n                c = snext();\n            }\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public String nextLine()\n        {\n            int c = snext();\n            while (isSpaceChar(c))\n                c = snext();\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c)\n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private boolean isEndOfLine(int c)\n        {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    public static long mod = 1000000007;\n    public static int d;\n    public static int p;\n    public static int q;\n\n    public static long[] suffle(long[] a,Random gen)\n    {\n        int n = a.length;\n        for(int i=0;i<n;i++)\n        {\n            int ind = gen.nextInt(n-i)+i;\n            long temp = a[ind];\n            a[ind] = a[i];\n            a[i] = temp;\n        }\n        return a;\n    }\n\n    public static void swap(int a, int b){\n        int temp = a;\n        a = b;\n        b = temp;\n    }\n\n    public static HashSet<Integer> primeFactorization(int n)\n    {\n        HashSet<Integer> a =new HashSet<Integer>();\n        for(int i=2;i*i<=n;i++)\n        {\n            while(n%i==0)\n            {\n                a.add(i);\n                n/=i;\n            }\n        }\n        if(n!=1)\n            a.add(n);\n        return a;\n    }\n\n    public static void sieve(boolean[] isPrime,int n)\n    {\n        for(int i=1;i<n;i++)\n            isPrime[i] = true;\n\n        isPrime[0] = false;\n        isPrime[1] = false;\n\n        for(int i=2;i*i<n;i++)\n        {\n            if(isPrime[i] == true)\n            {\n                for(int j=(2*i);j<n;j+=i)\n                    isPrime[j] = false;\n            }\n        }\n    }\n\n    public static int GCD(int a,int b)\n    {\n        if(b==0)\n            return a;\n        else\n            return GCD(b,a%b);\n    }\n\n    public static long GCD(long a,long b)\n    {\n        if(b==0)\n            return a;\n        else\n            return GCD(b,a%b);\n    }\n\n    public static void extendedEuclid(int A,int B)\n    {\n        if(B==0)\n        {\n            d = A;\n            p = 1 ;\n            q = 0;\n        }\n        else\n        {\n            extendedEuclid(B, A%B);\n            int temp = p;\n            p = q;\n            q = temp - (A/B)*q;\n        }\n    }\n\n    public static long LCM(long a,long b)\n    {\n        return (a*b)/GCD(a,b);\n    }\n\n    public static int LCM(int a,int b)\n    {\n        return (a*b)/GCD(a,b);\n    }\n\n    public static int binaryExponentiation(int x,int n)\n    {\n        int result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=result * x;\n            x=x*x;\n            n=n/2;\n        }\n        return result;\n    }\n\n    public static long binaryExponentiation(long x,long n)\n    {\n        long result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=result * x;\n            x=x*x;\n            n=n/2;\n        }\n        return result;\n    }\n\n    public static int modularExponentiation(int x,int n,int M)\n    {\n        int result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=(result * x)%M;\n            x=(x*x)%M;\n            n=n/2;\n        }\n        return result;\n    }\n\n    public static long modularExponentiation(long x,long n,long M)\n    {\n        long result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=(result * x)%M;\n            x=(x*x)%M;\n            n=n/2;\n        }\n        return result;\n    }\n\n    public static int modInverse(int A,int M)\n    {\n        return modularExponentiation(A,M-2,M);\n    }\n\n    public static long modInverse(long A,long M)\n    {\n        return modularExponentiation(A,M-2,M);\n    }\n\n    public static boolean isPrime(int n)\n    {\n\n        if (n <= 1)  return false;\n        if (n <= 3)  return true;\n\n        if (n%2 == 0 || n%3 == 0)\n            return false;\n\n        for (int i=5; i*i<=n; i=i+6)\n        {\n            if (n%i == 0 || n%(i+2) == 0)\n                return false;\n        }\n\n        return true;\n    }\n\n    static class pair implements Comparable<pair>\n    {\n        Integer x, y;\n        pair(int x,int y)\n        {\n            this.x=x;\n            this.y=y;\n        }\n\n        public int compareTo(pair o) {\n            int result = x.compareTo(o.x);\n            if(result==0)\n                result = y.compareTo(o.y);\n\n            return result;\n        }\n\n        public String toString()\n        {\n            return x+\" \"+y;\n        }\n\n        public boolean equals(Object o)\n        {\n            if (o instanceof pair)\n            {\n                pair p = (pair)o;\n                return (Math.abs(p.x-x)==0 && Math.abs(p.y-y)==0);\n            }\n            return false;\n        }\n\n        public int hashCode()\n        {\n            return new Long(x).hashCode()*31 + new Long(y).hashCode();\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.io.BufferedReader;\nimport java.awt.Point;\n\npublic class Z_C{\n\tpublic static final long mod= 1000000007;\n\tpublic static Debug db;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputReader in = new InputReader(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tAutocompletion solver = new Autocompletion();\n\t\tdb=new Debug(System.getSecurityManager()==null);\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\tstatic class Autocompletion {\n\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\t\t\tint n=in.nextInt();\n\t\t\tint arr[]=in.nextIntArr(n);\n\t\t\tint ret[]=new int[n];\n\t\t\tint nope[]=new int[n+10000];\n\t\t\tArrayList<Integer> set=new ArrayList<Integer>();\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tnope[arr[i]]=1;\n\t\t\t\t\n\t\t\t}\n\t\t\tfor(int i=0;i<nope.length;i++) {\n\t\t\t\tif(nope[i]==0) {\n\t\t\t\t\tset.add(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint now=0;\n\t\t\t\n\t\t\tint pointer=0;\n\t\t\tif(arr[0]==1) {\n\t\t\t\tpointer++;\n\t\t\t}\n\t\t\tdb.debug(\"set\", set);\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(arr[i]==now) {\n\t\t\t\t\tret[i]=set.get(pointer);\n\t\t\t\t\tpointer++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret[i]=now;\n\t\t\t\t\tnow=arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tout.print(ret[i]+\" \");\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t}\n\n\tstatic class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n \n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n \n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n \n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n        \treturn Long.parseLong(next());\n        }\n        public int[] nextIntArr(int n) {\n        \tint arr[]=new int[n];\n        \tfor(int i=0;i<n;i++) {\n        \t\tarr[i]=this.nextInt();\n        \t}\n        \treturn arr;\n        }\n    }\n\tpublic static class Debug {\n        private boolean allowDebug;\n \n        public Debug(boolean allowDebug) {\n            this.allowDebug = allowDebug;\n        }\n \n        private void outputName(String name) {\n            System.out.print(name + \" = \");\n        }\n \n        public void debug(String name, int x) {\n            if (!allowDebug) {\n                return;\n            }\n \n            outputName(name);\n            System.out.println(\"\" + x);\n        }\n \n        public void debug(String name, long x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(\"\" + x);\n        }\n \n        public void debug(String name, double x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(\"\" + x);\n        }\n \n        public void debug(String name, int[] x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(Arrays.toString(x));\n        }\n \n        public void debug(String name, long[] x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(Arrays.toString(x));\n        }\n \n        public void debug(String name, double[] x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(Arrays.toString(x));\n        }\n \n        public void debug(String name, Object x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(\"\" + x);\n        }\n \n        public void debug(String name, Object... x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(Arrays.deepToString(x));\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n public class Main {\n \n\tpublic static void main(String[] args) throws Exception {\n\t\tFastIO io = new FastIO(); \n\t\tint n=io.nextInt();\n\t\tint arr[]=new int[n];\n\t\tHashSet<Integer> set=new HashSet<Integer>();\n\t\tHashSet<Integer> curr=new HashSet<>();\n\t\tfor(int i=0;i<n;i++){\n\t\t    arr[i]=io.nextInt();\n\t\t    set.add(arr[i]);\n\t\t}\n\t\tint max=0;\n\t\tint ret[]=new int[n];\n\t\tint mex=0,f=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t    if(arr[i]==mex)\n\t\t    {\n\t\t        max+=1;\n\t\t        while(set.contains(max))max++;\n\t\t        set.add(max);\n\t\t        curr.add(max);\n\t\t        ret[i]=max;\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t        ret[i]=mex;\n\t\t        set.add(mex);\n\t\t        curr.add(mex);\n\t\t        while(curr.contains(mex))mex++;\n\t\t        if(mex!=arr[i]){\n\t\t            f=1;\n\t\t            break;\n\t\t        }\n\t\t        \n\t\t    }\n\t\t}\n\t\tif(f==1)io.println(-1);\n\t\telse {\n\t\t    for(int i=0;i<n;i++)io.print(ret[i]+\" \");\n\t\t    io.println();\n\t\t}\n\t\tio.close();\n\t}\n}\n class FastIO extends PrintWriter {\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[1<<16];\n\tprivate int curChar, numChars;\n \n\t// standard input\n\tpublic FastIO() { this(System.in,System.out); }\n\tpublic FastIO(InputStream i, OutputStream o) {\n\t\tsuper(o);\n\t\tstream = i;\n\t}\n\t// file input\n\tpublic FastIO(String i, String o) throws IOException {\n\t\tsuper(new FileWriter(o));\n\t\tstream = new FileInputStream(i);\n\t}\n \n\t// throws InputMismatchException() if previously detected end of file\n\tprivate int nextByte() {\n\t\tif (numChars == -1) throw new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars == -1) return -1; // end of file\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n \n\tpublic String nextLine() {\n\t\tint c; do { c = nextByte(); } while (c <= '\\n');\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo { res.appendCodePoint(c); c = nextByte(); } while (c > '\\n');\n\t\treturn res.toString();\n\t}\n \n\tpublic String next() {\n\t\tint c; do { c = nextByte(); } while (c <= ' ');\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo { res.appendCodePoint(c); c = nextByte(); } while (c > ' ');\n\t\treturn res.toString();\n\t}\n \n\tpublic int nextInt() { \n\t\tint c; do { c = nextByte(); } while (c <= ' ');\n\t\tint sgn = 1; if (c == '-') { sgn = -1; c = nextByte(); }\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres = 10*res+c-'0';\n\t\t\tc = nextByte();\n\t\t} while (c > ' ');\n\t\treturn res * sgn;\n\t}\n \n  public long nextLong() { \n\t\tint c; do { c = nextByte(); } while (c <= ' ');\n\t\tlong sgn = 1; if (c == '-') { sgn = -1; c = nextByte(); }\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres = 10*res+c-'0';\n\t\t\tc = nextByte();\n\t\t} while (c > ' ');\n\t\treturn res * sgn;\n\t}\n \n\tpublic double nextDouble() { return Double.parseDouble(next()); }\n}\n\n\n \n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\nimport bisect\nimport math\nimport itertools\nimport sys\nimport heapq\nfrom atexit import register\n \nif sys.version_info[0] < 3:\n    from io import BytesIO as stream\nelse:\n    from io import StringIO as stream\n \n \nif sys.version_info[0] < 3:\n    class dict(dict):\n        \"\"\"dict() -> new empty dictionary\"\"\"\n        def items(self):\n            \"\"\"D.items() -> a set-like object providing a view on D's items\"\"\"\n            return dict.iteritems(self)\n \n        def keys(self):\n            \"\"\"D.keys() -> a set-like object providing a view on D's keys\"\"\"\n            return dict.iterkeys(self)\n \n        def values(self):\n            \"\"\"D.values() -> an object providing a view on D's values\"\"\"\n            return dict.itervalues(self)\n \n    input = raw_input\n    range = xrange\n \n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n \n \ndef sync_with_stdio(sync=True):\n    \"\"\"Set whether the standard Python streams are allowed to buffer their I/O.\n \n    Args:\n        sync (bool, optional): The new synchronization setting.\n \n    \"\"\"\n    global input, flush\n \n    if sync:\n        flush = sys.stdout.flush\n    else:\n        sys.stdin = stream(sys.stdin.read())\n        input = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n        sys.stdout = stream()\n        register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n \ndef main():\n    \n    \n    \n    n=int(input()) \n    ans=[]\n    #n,k=map(int, input().split())\n    a=list(map(int, input().split()))\n    b=[0]*(n+1)\n    #if a[0]==0: ans.append(1)\n    #if a[0]: ans.append(0)\n    for i in range(n):\n        b[a[i]]=1\n        if a[i]>(i+1):\n            print('-1')\n            exit()\n    hp=[]\n    for i in range(n+1):\n        if not b[i]: hp.append(i)\n    heapq.heapify(hp)\n    #x=heapq.heappop(hp)\n    for i in range(n-1):\n        ans.append(heapq.heappop(hp))\n        if a[i]<a[i+1]:\n            heapq.heappush(hp,a[i])\n    ans.append(heapq.heappop(hp))        \n    #print(ans,list(hp))    \n    c=[0]*(n+1)\n    mi=0\n    for i in range(n):\n        c[ans[i]]=1\n        while(c[mi]==1):\n            mi+=1\n        if mi != a[i]:\n            print('-1')\n            exit()\n    print(*ans)        \n    \nif __name__ == '__main__':\n    sync_with_stdio(False)\n    main()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ndp = list(map(int, input().split()))\nl = []\nu = []\nfor i in range(0,n+1):\n\tl.append(0)\nfor i in range(0,n):\n\tl[dp[i]]=1\nfor i in range(0,n+1):\n\tif l[i] == 0:\n\t\tu.append(i)\nj=0\nprint(u[j],end=\" \")\nj+=1\nfor i in range(1,n):\n\tif dp[i-1]!=dp[i]:\n\t\tprint(dp[i-1],end=\" \")\n\telse:\n\t\tprint(u[j],end=\" \")\n\t\tj+=1"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class solution {\n    List<Integer> primeList = new ArrayList<Integer>();\n    int MAX_N = Integer.MAX_VALUE;\n    boolean[] isPrime = new boolean[MAX_N];\n    public static void main(String[] args) throws  Exception{\n        FastReader sc;\n        PrintWriter out = new PrintWriter(System.out);;\n        if(System.getProperty(\"ONLINE_JUDGE\")==null)\n        {\n            sc = new FastReader(\"/Users/jenardn/IdeaProjects/codeforces/input\");\n        }\n        else\n        {\n            sc = new FastReader();\n        }\n        out = new PrintWriter(System.out);\n        Task solver = new Task();\n        long t = 1;\n//        t = sc.nextInt();\n        for(long i = 1; i <= t; i++){\n            solver.solve(i, sc, out);out.println();\n        }\n        out.close();\n    }\n\n    static class Task {\n        public void solve(long testNumber, FastReader sc, PrintWriter out) {\n            int n = sc.nextInt();\n            int [] arr = new int[n];\n            int [] map = new int[1000001];\n            Arrays.fill(map,-1);\n            for(int i=0;i<n;i++)\n            {\n                arr[i] = sc.nextInt();\n                map[arr[i]]=i;\n            }\n            List<Integer> nextAvailable = new ArrayList<Integer>();\n            int[] ans = new int[n];\n            for(int i=0;i<=100000;i++)\n            {\n                if(map[i]==-1)\n                {\n                    nextAvailable.add(i);\n                }\n            }\n            int ptr=0,readyNum=-1;\n            for(int i=0;i<n;i++)\n            {\n                if(readyNum!=-1)\n                {\n                    ans[i]=readyNum;\n                    readyNum=-1;\n                }\n                else\n                {\n                    ans[i]= nextAvailable.get(ptr);ptr++;\n                }\n                if(map[arr[i]]<=i)\n                {\n                    readyNum = arr[i];\n                }\n            }\n            for(int i=0;i<n;i++)\n            {\n                out.print(ans[i]+\" \");\n            }\n        }\n    }\n\n    long modulo_multiplication(long a, long b, long mod)\n    {\n        long res = 0;\n        a %= mod;\n        while (b>0)\n        {\n            if ((b & 1)>0)\n                res = (res + a) % mod;\n            a = (2 * a) % mod;\n            b >>= 1;\n        }\n        return res;\n    }\n    void sieve()\n    {\n        Arrays.fill(isPrime,true);\n        for (int i = 2; i <= MAX_N; i++)\n        {\n            if (isPrime[i])\n            {\n                for (int j = 2 * i; j <= MAX_N; j += i)\n                {\n                    isPrime[j] = false;\n                }\n            }\n        }\n    }\n\n    void setPrimeList()\n    {\n        for (int  i = 2; i < MAX_N; i++)\n        {\n            if (isPrime[i])\n            {\n                primeList.add(i);\n            }\n        }\n    }\n\n    long gcd(long a, long b) { if (a == 0) return b; return gcd(b % a, a);}\n\n    long mod_power(long x, long y, long p)\n    {\n        long res = 1;\n        x = x % p;\n        if (x == 0) return 0;\n        while (y > 0)\n        {\n            if ((y & 1)>0)\n                res = (res * x) % p;\n            y = y >> 1;\n            x = (x * x) % p;\n        }\n        return res;\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public FastReader(String s) throws FileNotFoundException {\n            br = new BufferedReader(new FileReader(new File(s)));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n\nN = int(input())\na = [int(x) for x in input().split(' ')]\nb = [0 for _ in range(N)]\nst = []\nfor i, x in enumerate(a):\n    dif = a[i] - a[i-1] if i != 0 else a[i]\n    if dif:\n        if len(st) + 1 < dif:\n            print(-1)\n            sys.exit(0)\n        else:\n            b[i] = a[i-1] if i != 0 else 0\n            for j in range(dif-1):\n                b[st.pop()] = a[i-1] + j + 1\n    else:\n        st.append(i)\nfor x in st:\n    b[x] = a[-1] + 1\nprint(' '.join(map(str, b)))"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nA = list(map(int,input().split()))\nrs = set(A)\nmx = -1\np = -1\nans = []\nfor a in A:\n    if p >= 0 and p != a:\n        ans.append(p)\n        if p == mx+1: mx += 1\n    else:\n        mx += 1\n        while mx in rs:\n            mx += 1\n        ans.append(mx)\n    if mx+1 < a:\n        print(-1)\n        exit()\n    p = a\nprint(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:16777216\")\nusing namespace std;\nint n;\nint a[100010];\nint b[100010];\nset<int> f;\nset<int> l;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 1; i <= n; ++i) {\n    cin >> a[i];\n  }\n  for (int i = 0; i <= n; ++i) {\n    f.insert(i);\n  }\n  for (int i = 0; i <= n; ++i) {\n    if (f.find(a[i]) != f.end()) f.erase(f.find(a[i]));\n    l.insert(a[i]);\n  }\n  for (int i = 1; i <= n; ++i) {\n    if (a[i] == a[i - 1]) {\n      b[i] = *f.begin();\n      f.erase(f.begin());\n    } else {\n      b[i] = *l.begin();\n      l.erase(l.begin());\n    }\n  }\n  for (int i = 1; i <= n; ++i) {\n    cout << b[i] << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n        int N=1;\n        for(int i=0;i<N;i++){\n            help(s);\n        }\n    }\n    public static void help(Scanner s){\n        int n=s.nextInt();\n        int[] a=new int[n];\n        int[] used=new int[n+1];\n        for(int i=0;i<n;i++){\n            a[i]=s.nextInt();\n            used[a[i]]++;\n        }\n        for(int i=0;i<n;i++){\n            if((i!=0&&a[i]<a[i-1])||a[i]>i+1){\n                System.out.println(-1);\n                return;\n            }\n        }\n        List<Integer> b=new ArrayList<>();\n        int p=0;\n        for(int i=0;i<n;i++){\n            if(i!=0&&a[i]!=a[i-1]) {\n                b.add(a[i - 1]);\n                p=Math.max(p,a[i-1]+1);\n            }\n            else {\n                for (; p <= n; p++) {\n                    if (used[p] == 0) {\n                        b.add(p);\n                        break;\n                    }\n                }\n                p++;\n            }\n            used[a[i]]--;\n        }\n        System.out.println(help(b));\n    }\n    public static String help(List<Integer> print){\n        StringBuilder ans=new StringBuilder();\n        ans.append(print.get(0));\n        for(int i=1;i<print.size();i++){\n            ans.append(' ');\n            ans.append(print.get(i));\n        }\n        return ans.toString();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.List;\nimport java.util.Map.Entry;\nimport java.util.Set;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\npublic class Main {\n\n\tprivate static final String NO = \"NO\";\n\tprivate static final String YES = \"YES\";\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tprivate static final long MOD = 1000000007;\n\tprivate static final long inf = 100000000000L;\n\n\tSet<Integer> g[];\n\n\tvoid solve() {\n\t\tint n = ni();\n\t\tTreeSet<Integer> can = new TreeSet<Integer> ();\n\t\tTreeSet<Integer> remain = new TreeSet<Integer> ();\n\t\tTreeMap<Integer, Integer> mexs = new TreeMap<Integer, Integer> ();\n\t\tfor (int i=0; i<=n; i++) {\n\t\t\tcan.add(i);\n\t\t\tremain.add(i);\n\t\t}\n\t\t\n\t\tfor (int i=0; i<n; i++) {\n\t\t\tint k = ni();\n\t\t\tcan.remove(k);\n\t\t\tmexs.put(k, mexs.getOrDefault(k, 0)+1);\n\t\t}\n\t\tStringBuffer sb = new StringBuffer ();\n//\t\ttr(can, mexs);\n\t\twhile (!mexs.isEmpty()) {\n\t\t\tEntry<Integer, Integer> e = mexs.firstEntry();\n\t\t\tInteger k = can.first();\n\t\t\tsb.append(k).append(' ');\n\t\t\tcan.remove(k);\n\t\t\tremain.remove(k);\n\t\t\tif (e.getKey().equals(remain.first())) {\n\t\t\t\tif (e.getValue()==1) {\n\t\t\t\t\tmexs.remove(e.getKey());\n\t\t\t\t\tcan.add(e.getKey());\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tmexs.put(e.getKey(), e.getValue()-1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout.println(-1);\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tout.println(sb);\t\n\t}\n\n\t// a^b\n\tlong power(long a, long b) {\n\t\tlong x = 1, y = a;\n\t\twhile (b > 0) {\n\t\t\tif (b % 2 != 0) {\n\t\t\t\tx = (x * y) % MOD;\n\t\t\t}\n\t\t\ty = (y * y) % MOD;\n\t\t\tb /= 2;\n\t\t}\n\t\treturn x % MOD;\n\t}\n\n\tprivate long gcd(long a, long b) {\n\t\twhile (a != 0) {\n\t\t\tlong tmp = b % a;\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\t\treturn b;\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\tprivate boolean vis[];\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate List<Integer> na2(int n) {\n\t\tList<Integer> a = new ArrayList<Integer>();\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta.add(ni());\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl();\n\t\treturn a;\n\t}\n\n\tprivate long[][] nl(int n, int m) {\n\t\tlong[][] a = new long[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nl(m);\n\t\treturn a;\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n\n\tpublic class Pair<K, V> {\n\n\t\t/**\n\t\t * Key of this <code>Pair</code>.\n\t\t */\n\t\tprivate K key;\n\n\t\t/**\n\t\t * Gets the key for this pair.\n\t\t * \n\t\t * @return key for this pair\n\t\t */\n\t\tpublic K getKey() {\n\t\t\treturn key;\n\t\t}\n\n\t\t/**\n\t\t * Value of this this <code>Pair</code>.\n\t\t */\n\t\tprivate V value;\n\n\t\t/**\n\t\t * Gets the value for this pair.\n\t\t * \n\t\t * @return value for this pair\n\t\t */\n\t\tpublic V getValue() {\n\t\t\treturn value;\n\t\t}\n\n\t\t/**\n\t\t * Creates a new pair\n\t\t * \n\t\t * @param key   The key for this pair\n\t\t * @param value The value to use for this pair\n\t\t */\n\t\tpublic Pair(K key, V value) {\n\t\t\tthis.key = key;\n\t\t\tthis.value = value;\n\t\t}\n\n\t\t/**\n\t\t * <p>\n\t\t * <code>String</code> representation of this <code>Pair</code>.\n\t\t * </p>\n\t\t *\n\t\t * <p>\n\t\t * The default name/value delimiter '=' is always used.\n\t\t * </p>\n\t\t *\n\t\t * @return <code>String</code> representation of this <code>Pair</code>\n\t\t */\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn key + \"=\" + value;\n\t\t}\n\n\t\t/**\n\t\t * <p>\n\t\t * Generate a hash code for this <code>Pair</code>.\n\t\t * </p>\n\t\t *\n\t\t * <p>\n\t\t * The hash code is calculated using both the name and the value of the\n\t\t * <code>Pair</code>.\n\t\t * </p>\n\t\t *\n\t\t * @return hash code for this <code>Pair</code>\n\t\t */\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\t// name's hashCode is multiplied by an arbitrary prime number (13)\n\t\t\t// in order to make sure there is a difference in the hashCode between\n\t\t\t// these two parameters:\n\t\t\t// name: a value: aa\n\t\t\t// name: aa value: a\n\t\t\treturn key.hashCode() * 13 + (value == null ? 0 : value.hashCode());\n\t\t}\n\n\t\t/**\n\t\t * <p>\n\t\t * Test this <code>Pair</code> for equality with another <code>Object</code>.\n\t\t * </p>\n\t\t *\n\t\t * <p>\n\t\t * If the <code>Object</code> to be tested is not a <code>Pair</code> or is\n\t\t * <code>null</code>, then this method returns <code>false</code>.\n\t\t * </p>\n\t\t *\n\t\t * <p>\n\t\t * Two <code>Pair</code>s are considered equal if and only if both the names and\n\t\t * values are equal.\n\t\t * </p>\n\t\t *\n\t\t * @param o the <code>Object</code> to test for equality with this\n\t\t *          <code>Pair</code>\n\t\t * @return <code>true</code> if the given <code>Object</code> is equal to this\n\t\t *         <code>Pair</code> else <code>false</code>\n\t\t */\n\t\t@Override\n\t\tpublic boolean equals(Object o) {\n\t\t\tif (this == o)\n\t\t\t\treturn true;\n\t\t\tif (o instanceof Pair) {\n\t\t\t\tPair pair = (Pair) o;\n\t\t\t\tif (key != null ? !key.equals(pair.key) : pair.key != null)\n\t\t\t\t\treturn false;\n\t\t\t\tif (value != null ? !value.equals(pair.value) : pair.value != null)\n\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  bool store[n + 1];\n  int a[n + 1], b[n + 1];\n  memset(b, -1, sizeof(b));\n  memset(store, false, sizeof(store));\n  a[0] = 0;\n  b[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      store[b[i]] = true;\n    }\n  }\n  store[a[n]] = true;\n  int m = 0;\n  for (int i = 1; i <= n; i++) {\n    while (store[m]) m++;\n    if (b[i] == -1) {\n      b[i] = m;\n      store[b[i]] = true;\n    }\n    cout << b[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solution(a):\n    b = [-1] * len(a)\n    d = {}\n    for i in range(1,len(a)):\n        if a[i] != a[i-1] :\n            b[i] = a[i-1]\n            d[b[i]] = 1\n    d[a[n-1]] = 1 \n    m = 0 \n    for i in range(0,len(a)):\n        while d.get(m,0) :\n            m = m + 1 \n        if b[i] == -1 :\n            b[i] = m \n            d[m] = 1 \n    return b \nn = int(input())\na = [int(x) for x in input().split()]\nprint(*solution(a))    "
        },
        {
            "language": 3,
            "solution": "import sys\nn = int(input())\nmas = list(map(int, input().split()))\nfor i in range(n):\n\tif mas[i] > (i + 1):\n\t\tprint(-1)\n\t\tsys.exit(0)\ns = set(mas)\nnow = 1\np = 0\nfor i in range(n):\n\tif mas[i] != p:\n\t\tprint(p, end = ' ')\n\t\tp = mas[i]\n\t\tif now == mas[i]:\n\t\t\tnow += 1\n\telse:\n\t\twhile now in s:\n\t\t\tnow += 1\n\t\tprint(now, end = ' ')\n\t\tnow += 1\nprint()\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\n\n# stdin = open(\"input.txt\",\"r\")\n# stdout = open(\"output.txt\",\"w\")\n\n\nn=int(stdin.readline().strip())\narr=list(map(int,stdin.readline().strip().split(' ')))\np=True\nfor i in range(len(arr)):\n\tif arr[i]>i+1:\n\t\tp = False\nif not p:\n\tstdout.write(\"-1\\n\")\nelse:\n\tarr+=[arr[-1]+1]\n\tav=[1 for i in range(len(arr)+10)]\n\ttarr=[-1 for i in range(len(arr))]\n\tfor i in range(1,len(arr)):\n\t\tif arr[i]!=arr[i-1]:\n\t\t\ttarr[i]=arr[i-1]\n\t\t\tav[arr[i-1]]=0\n\n\tctr=0\n\tfor i in range(len(tarr)):\n\t\tif tarr[i]==-1:\n\t\t\twhile av[ctr]==0:\n\t\t\t\tctr+=1\n\t\t\ttarr[i]=ctr;ctr+=1;\n\n\tstdout.write(' '.join(list(map(str,tarr[:-1])))+\"\\n\")\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nalphabet = list()\nalphabet.append(a[0])\n\nfor i in range(1, n):\n    if a[i] > i + 1:\n        print(-1)\n        exit()\n\n    if a[i] != a[i - 1]:\n        alphabet.append(a[i])\n\npoint = 0\nif alphabet[point] == 0:\n    point += 1\n\nif len(alphabet) == 1:\n    cur = 2 * n\n    if a[0] == 1:\n        print(0, end=' ')\n    else:\n        print(cur, end=' ')\n\n    for i in range(n - 1):\n        print(cur, end=' ')\n    print()\n    exit()\n\ncurr = alphabet[point] - 1\nmina = 0\nfor i in range(n):\n    if a[i] == mina:\n        if curr > mina and (point == 0 or curr != alphabet[point - 1]):\n            print(curr, end=' ')\n            curr -= 1\n        else:\n            point += 1\n            while point < len(alphabet) and alphabet[point] - 1 == alphabet[point - 1]:\n                point += 1\n\n            if point == len(alphabet):\n                curr = 2 * n\n            else:\n                curr = alphabet[point] - 1\n            print(curr, end=' ')\n            curr -= 1\n    else:\n        print(mina, end=' ')\n        mina = a[i]"
        },
        {
            "language": 4,
            "solution": "//created by Whiplash99\nimport java.io.*;\nimport java.util.*;\npublic class C\n{\n    public static void main(String[] args) throws IOException\n    {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\n        int i,N,max=(int)(1e6);\n\n        N=Integer.parseInt(br.readLine().trim());\n        StringBuilder sb=new StringBuilder();\n\n        int a[]=new int[N];\n        int b[]=new int[N];\n\n        String s[]=br.readLine().trim().split(\" \");\n        for(i=0;i<N;i++) a[i]=Integer.parseInt(s[i]);\n\n        TreeSet<Integer> set=new TreeSet<>();\n        for(i=0;i<=N+5;i++) set.add(i);\n\n        ArrayDeque<Integer> DQ=new ArrayDeque<>();\n        int count=0;\n\n        if(a[0]==0)\n        {\n            DQ.addLast(0);\n            b[0]=max--;\n        }\n        else\n        {\n            b[0]=0;\n            set.pollFirst();\n            count++;\n        }\n\n        for(i=1;i<N;i++)\n        {\n            if(a[i]!=a[i-1])\n            {\n                b[i]=a[i-1];\n                set.remove(a[i-1]);\n                count++;\n            }\n            else\n            {\n                DQ.addLast(i);\n                b[i]=max--;\n            }\n\n            if(a[i]>count)\n            {\n                int diff=a[i]-count;\n                int cur=-1;\n\n                while (!DQ.isEmpty())\n                {\n                    b[DQ.pollFirst()]=cur=set.pollFirst();\n                    count++;\n                    diff--;\n                    if(diff==0) break;\n                }\n            }\n        }\n\n        for(i=0;i<N;i++) sb.append(b[i]).append(\" \");\n        System.out.println(sb);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long t, n, m, h, r, l, i, j, ii, x[1000001], y[1000001], z, g, a, b, c, d,\n    k;\nvector<long long> v;\nmap<long long, long long> mp;\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> x[i];\n    mp[x[i]]++;\n  }\n  for (i = 0; i < n; i++) {\n    if (v.size() > 0) {\n      cout << v[0] << ' ';\n      v.clear();\n      mp[x[i]]--;\n      if (mp[x[i]] == 0 && x[i] < j) v.push_back(x[i]);\n    } else {\n      while (mp[j] != 0) j++;\n      mp[x[i]]--;\n      mp[j]++;\n      if (mp[x[i]] == 0 && x[i] < j) v.push_back(x[i]);\n      cout << j << ' ';\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nimport itertools\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef main():\n    n = int(input())\n    a = [int(ai) for ai in input().split()]\n\n    groups = []\n\n    cv = a[0]\n    co = 0\n\n    for i in a:\n        if i == cv:\n            co += 1\n        else:\n            groups.append((cv, co))\n            co = 1\n        cv = i\n    groups.append((cv, co))\n\n    mex = 0\n    idx = 0\n    unknown = []\n    b_set = set()\n    b = [-1] * n\n\n    for i in range(len(groups)):\n        unknown.append(idx)\n\n        for j in range(mex, groups[i][0]):\n            if j not in b_set:\n                b[unknown.pop()] = j\n                b_set.add(j)\n            mex = j\n\n        unknown.extend(range(idx + 1, idx + groups[i][1]))\n        idx += groups[i][1]\n\n    print(*[i if i != -1 else 10**6 for i in b])\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  vector<int> a(n + 1, 0), ans(n + 1, -1), visited(n + 1, 0);\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (a[i] > a[i - 1]) {\n      ans[i] = a[i - 1];\n      visited[a[i]] = 1;\n    }\n  }\n  int j = 1;\n  for (int i = 1; i <= n; i++) {\n    if (ans[i] == -1) {\n      while (j <= n && visited[j]) j++;\n      ans[i] = j;\n      visited[j] = 1;\n    }\n  }\n  for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from collections import Counter, defaultdict, deque\nimport bisect\nfrom sys import stdin, stdout\nfrom itertools import repeat\nimport math\n\n# sys.stdin = open('input')\n\ndef inp(force_list=False):\n    re = map(int, raw_input().split())\n    if len(re) == 1 and not force_list:\n        return re[0]\n    return re\n\ndef inst():\n    return raw_input().strip()\n\ndef gcd(x, y):\n   while(y):\n       x, y = y, x % y\n   return x\n\n\ndef my_main():\n    t = 1\n    for _ in range(t):\n        n = inp()\n        da = inp(True)\n        last = 0\n        st = set(i for i in range(max(da)))\n        ans = [-1] * n\n        last = 0\n        for i in range(n):\n            if da[i] != last:\n                ans[i] = last\n                st.discard(last)\n            last = da[i]\n        li = sorted(list(st))\n        idx = 0\n        cur = max(da) + 1\n        for i in range(n):\n            if ans[i]==-1:\n                if idx<len(li):\n                    ans[i] = li[idx]\n                    idx += 1\n                else:\n                    ans[i] = cur\n                    cur += 1\n        tans = ck(n, da)\n        # for idx in range(n):\n        #     if ans[idx] != tans[idx]:\n        #         print idx, ans[idx], tans[idx]\n        print ' '.join(map(str, ans))\n\n\n\ndef ck(n, da):\n    t = 1\n    for _ in range(t):\n        last = 0\n        ct = 0\n        st = set()\n        ans = [-1] * n\n        last = 0\n        for i in range(n):\n            if da[i] != last:\n                ans[i] = last\n                st.add(last)\n            last = da[i]\n        st.add(last)\n        cur = 0\n        for i in range(n):\n            if ans[i]==-1:\n                while cur in st:\n                    cur += 1\n                ans[i] = cur\n                cur += 1\n        return ans\n\n\n\nmy_main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class CodeForces1364C{\n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tint n = input.nextInt();\n\t\tint[] a = new int[n+10];\n\t\tint[] val = new int[n+10];\n\t\tint[] vis = new int[n+10];\n\t\tfor(int i = 1;i<=n;i++){\n\t\t\ta[i] = input.nextInt();\n\t\t\tvis[a[i]] = 1;\n\t\t}\n\n\t\tint count = 0;\n\t\tfor(int i = 1;i<=n;i++){\n\t\t\tif(vis[i] == 0){\n\t\t\t\tval[++count] = i;\n\t\t\t}\n\t\t}\n\n\t\tint pos = 0;\n\t\tfor(int i = 1;i<=n;i++){\n\t\t\tif(a[i] == a[i-1]){\n\t\t\t\tSystem.out.print(val[++pos] + \" \");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.print(a[i-1] + \" \");\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "\nimport math\n\nn = int(input())\narray = list(map(int,input().split()))\ndict_num = {}\nans = 0\nfor i in range(n):\n    if array[i]>i+1 or (i+1<n and array[i]>array[i+1]): \n        ans = -1\n        break\n    dict_num[array[i]]=0\n\n# sortedArray = sorted(list(set(array)))\n\nif ans==-1:print(-1)\nelse:\n    stored = []\n    not_stored = []\n    for i in range(n,-1,-1):\n        if i in dict_num: stored.append(i)\n        else:not_stored.append(i)\n    ans = []\n    for i in range(n):\n        # print(stored)\n        # print(not_stored)\n        # print(ans)\n        if ans==[]: \n            ans.append(not_stored[-1])\n            not_stored.pop()\n        else:\n            new = 0\n            if dict_num[stored[-1]]==1:\n                new = stored[-1]\n                stored.pop()\n            else:\n                new  = not_stored.pop()\n\n            ans.append(new)\n\n        if i+1<n:\n            # print(i,array[i])\n            if array[i]!=array[i+1]:\n                # print(\"changed\",array[i])\n                dict_num[array[i]] = 1\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class A{\n    static PrintWriter out;\n    static InputReader in;\n    public static void main(String args[]){\n        out = new PrintWriter(System.out);\n        in = new InputReader();\n        new A();\n        out.flush(); out.close();\n    }   \n    A(){\n        solve();\n    }\n    void solve(){\n        int n = in.nextInt();\n        int a[] = new int[n];\n        TreeSet<Integer> ts = new TreeSet<>();\n        for(int i = 0; i <= n; i++)ts.add(i);\n        for(int i = 0; i < n; i++){\n            a[i] = in.nextInt();\n            ts.remove(a[i]);\n        }\n        ArrayList<Integer> ans = new ArrayList<>();\n        int b = -1;\n        for(int i = 0; i < n; i++){\n            if(a[i] != b && b != -1)ts.add(b);\n            // while(!ts.isEmpty() && ts.first() < a[i] - 1){\n            //     ts.pollFirst();\n            // }\n            // if(ts.isEmpty()){\n            //     out.println(-1);\n            //     return;\n            // }\n            ans.add(ts.pollFirst());\n            b = a[i];\n        }\n        // System.out.println(ans);\n        boolean inc[] = new boolean[n + 10];\n        int mex = 0;\n        for(int i = 0; i < n; i++){\n            int v = ans.get(i);\n            inc[v] = true;\n            while(inc[mex])++mex;\n            if(mex != a[i]){\n                out.println(-1);\n                return;\n            }\n        }\n        for(int v : ans)out.print(v + \" \");\n    }\n    public static class InputReader{\n        BufferedReader br;\n        StringTokenizer st;\n        InputReader(){\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        public int nextInt(){\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public double nextDouble(){\n            return Double.parseDouble(next());\n        }\n        public String next(){\n            while(st == null || !st.hasMoreTokens()){\n                try{\n                    st = new StringTokenizer(br.readLine());\n                }catch(IOException e){}\n            }\n            return st.nextToken();\n        }\n    }\n}\n        "
        },
        {
            "language": 4,
            "solution": "import java.util.*;import java.io.*;import java.math.*;\npublic class Main\n{\n    public static void process()throws IOException\n    {\n        int n=ni();\n        int mexA=0;\n        int[]A=nai(n);\n        for(int i=0;i<n;i++)\n            if(A[i]==mexA)\n                mexA++;\n        TreeSet<Integer>setA=new TreeSet<Integer>();\n        for(int i=0;i<n;i++)\n            setA.add(A[i]);\n        TreeSet<Integer>setB=new TreeSet<Integer>(); \n        int[]B=new int[n];\n        int mexB=0;\n        for(int i=0;i<n;i++)\n        {\n            if(A[i]==mexB)\n            {\n                B[i]=mexA;\n                setB.add(B[i]);\n                setA.add(B[i]);\n            }\n            else\n            {\n                B[i]=mexB;\n                setB.add(B[i]);\n                setA.add(B[i]);\n            }\n            while(setA.contains(mexA))\n                {mexA++;}\n            while(setB.contains(mexB))\n                {mexB++;}\n        }\n        for(int i=0;i<n;i++)\n            p(B[i]+\" \");\n        pn(\"\");\n    }\n\n    static AnotherReader sc;\n    static PrintWriter out;\n    public static void main(String[]args)throws IOException\n    {\n        boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n        if(oj){sc=new AnotherReader();out=new PrintWriter(System.out);}\n        else{sc=new AnotherReader(100);out=new PrintWriter(\"output.txt\");}\n        int t=1;\n        // t=ni();\n        while(t-->0) {process();}\n        out.flush();out.close();  \n    }\n\n    static void pn(Object o){out.println(o);}\n    static void p(Object o){out.print(o);}\n    static void pni(Object o){out.println(o);out.flush();}\n    static int ni()throws IOException{return sc.nextInt();}\n    static long nl()throws IOException{return sc.nextLong();}\n    static double nd()throws IOException{return sc.nextDouble();}\n    static String nln()throws IOException{return sc.nextLine();}\n    static int[] nai(int N)throws IOException{int[]A=new int[N];for(int i=0;i!=N;i++){A[i]=ni();}return A;}\n    static long[] nal(int N)throws IOException{long[]A=new long[N];for(int i=0;i!=N;i++){A[i]=nl();}return A;}\n    static long gcd(long a, long b)throws IOException{return (b==0)?a:gcd(b,a%b);}\n    static int gcd(int a, int b)throws IOException{return (b==0)?a:gcd(b,a%b);}\n    static int bit(long n)throws IOException{return (n==0)?0:(1+bit(n&(n-1)));}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    static class AnotherReader{BufferedReader br; StringTokenizer st;\n    AnotherReader()throws FileNotFoundException{\n    br=new BufferedReader(new InputStreamReader(System.in));}\n    AnotherReader(int a)throws FileNotFoundException{\n    br = new BufferedReader(new FileReader(\"input.txt\"));}\n    String next()throws IOException{\n    while (st == null || !st.hasMoreElements()) {try{\n    st = new StringTokenizer(br.readLine());}\n    catch (IOException  e){ e.printStackTrace(); }}\n    return st.nextToken(); } int nextInt() throws IOException{\n    return Integer.parseInt(next());}\n    long nextLong() throws IOException\n    {return Long.parseLong(next());}\n    double nextDouble()throws IOException { return Double.parseDouble(next()); }\n    String nextLine() throws IOException{ String str = \"\"; try{\n    str = br.readLine();} catch (IOException e){\n    e.printStackTrace();} return str;}}\n   \n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.InputMismatchException;\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\npublic class Main{\n    public static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n     \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n     \n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n     \n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n     \n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n     \n            while(isSpaceChar(c))\n                c = read();\n     \n            int sgn = 1;\n     \n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n     \n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n     \n            return res * sgn;\n        }\n     \n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n     \n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n     \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n     \n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n     \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next() {\n            return readString();\n        }\n     \n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n \n    static long gcd(long a, long b){\n        if (a == 0)\n            return b;  \n        return gcd(b % a, a);  \n    }\n    static long lcm(long a, long b)  {\n        return (a*b)/gcd(a, b);  \n    }\n    public static void sortbyColumn(int arr[][], int col) \n    { \n        \n        Arrays.sort(arr, new Comparator<int[]>() { \n            \n          @Override              \n          \n          public int compare(final int[] entry1,  \n                             final int[] entry2) { \n  \n            \n            if (entry1[col] > entry2[col]) \n                return 1; \n            else\n                return -1; \n          } \n        });  \n    } \n    static long func(long a[],long size,int s){\n        long max1=a[s];\n        long maxc=a[s];\n        for(int i=s+1;i<size;i++){\n            maxc=Math.max(a[i],maxc+a[i]);\n            max1=Math.max(maxc,max1);\n        }\n        return max1;\n    }\n    public static class Pair<U extends Comparable<U>, V extends Comparable<V>> implements Comparable<Pair<U, V>> {\n        public U x;\n        public V y;\n    \n        public Pair(U x, V y) {\n            this.x = x;\n            this.y = y;\n        }\n    \n        public int hashCode() {\n            return (x == null ? 0 : x.hashCode() * 31) + (y == null ? 0 : y.hashCode());\n        }\n    \n        public boolean equals(Object o) {\n            if (this == o)\n                return true;\n            if (o == null || getClass() != o.getClass())\n                return false;\n            Pair<U, V> p = (Pair<U, V>) o;\n            return (x == null ? p.x == null : x.equals(p.x)) && (y == null ? p.y == null : y.equals(p.y));\n        }\n    \n        public int compareTo(Pair<U, V> b) {\n            int cmpU = x.compareTo(b.x);\n            return cmpU != 0 ? cmpU : y.compareTo(b.y);\n        }\n    \n        public String toString() {\n            return String.format(\"(%s, %s)\", x.toString(), y.toString());\n        }\n    \n    }\n    static LinkedList<Integer> li;\n    static int ans1=0,ans2=0;\n    static long dist[];\n    static int visited[];\n    //static int arr[];\n    static ArrayList<Integer> adj[];\n \n// \tstatic void bfs(int x){\n// \t    Queue<Integer> q=new LinkedList<>();\n// \t    q.add(x);\n// \t    int lm=c+1;\n// \t    while(!q.isEmpty()){\n// \t        int p=q.poll();\n// \t        for(int i:adj[p]){\n// \t            if(dist[i]>dist[p]+c[p]){\n// \t                dist[i]=dist[p]+c[p]\n// \t                q.add(i);\n// \t            }\n// \t        }\n// \t    }\n// \t}\n    public static void main(String args[]){\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n        int n,i,j,flag=0;\n        n=in.nextInt();\n        int arr[]=new int[n];\n        int brr[]=new int[n];\n        TreeSet<Integer> tr1=new TreeSet<>();\n        TreeSet<Integer> tr2=new TreeSet<>();\n        for(i=0;i<n;i++){\n            arr[i]=in.nextInt();\n            if(arr[i]>i+1){\n                flag=1;\n            }\n            tr1.add(arr[i]);\n        }\n        if(flag==1){\n            w.println(-1);\n            w.close();\n            return;\n        }\n        for(i=0;i<=2*n;i++){\n            if(!tr1.contains(i)){\n                tr2.add(i);\n            }\n        }\n        if(arr[0]>0){\n            brr[0]=tr2.pollFirst();\n            for(i=1;i<n;i++){\n                if(arr[i]==arr[i-1]){\n                    brr[i]=tr2.pollFirst();\n                }else{\n                    brr[i]=arr[i-1];\n                }\n            }\n        }else{\n            j=0;\n            while(j<n&&arr[j]==0){\n                brr[j]=tr2.pollFirst();\n                j++;\n            }\n            for(i=j;i<n;i++){\n                if(arr[i]==arr[i-1]){\n                    brr[i]=tr2.pollFirst();\n                }else{\n                    brr[i]=arr[i-1];\n                }\n            }\n        }\n        for(i=0;i<n;i++){\n            w.print(brr[i]+\" \");\n        }\n        \n        \n        \n        \n        w.close();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "//package ehabandprefixmexs;\n\nimport java.util.*;\nimport java.io.*;\n\npublic class ehabandprefixmexs {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader fin = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(fin.readLine());\n\t\tint[] nums = new int[n];\n\t\tHashMap<Integer, Integer> numsLeft = new HashMap<Integer, Integer>();\n\t\tHashSet<Integer> skipped = new HashSet<Integer>();\n\t\tStringTokenizer st = new StringTokenizer(fin.readLine());\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tnums[i] = Integer.parseInt(st.nextToken());\n\t\t\tnumsLeft.put(nums[i], numsLeft.getOrDefault(nums[i], 0) + 1);\n\t\t}\n\t\tint pointer = 0;\n\t\tint[] ans = new int[n];\n\t\tboolean isValid = true;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tboolean putNum = false;\n\t\t\tif(i != 0) {\n\t\t\t\tnumsLeft.put(nums[i - 1], numsLeft.get(nums[i - 1]) - 1);\n\t\t\t\tif(numsLeft.get(nums[i - 1]) == 0) {\n\t\t\t\t\tnumsLeft.remove(nums[i - 1]);\n\t\t\t\t\tif(skipped.contains(nums[i - 1])) {\n\t\t\t\t\t\tans[i] = nums[i - 1];\n\t\t\t\t\t\tputNum = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!putNum) {\n\t\t\t\twhile(numsLeft.containsKey(pointer)) {\n\t\t\t\t\tskipped.add(pointer);\n\t\t\t\t\tpointer ++;\n\t\t\t\t}\n\t\t\t\tans[i] = pointer;\n\t\t\t\tpointer ++;\n\t\t\t\tputNum = true;\n\t\t\t}\n\t\t\tif(pointer + 1 < nums[i]) {\n\t\t\t\tisValid = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(isValid) {\n\t\t\tStringBuilder fout = new StringBuilder();\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tfout.append(ans[i]).append(\" \");\n\t\t\t}\n\t\t\tSystem.out.println(fout);\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(-1);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<string> vec_splitter(string s) {\n  for (char& c : s) c = c == ',' ? ' ' : c;\n  stringstream ss;\n  ss << s;\n  vector<string> res;\n  for (string z; ss >> z; res.push_back(z))\n    ;\n  return res;\n}\nvoid debug_out(vector<string> args, int idx) { cerr << endl; }\ntemplate <typename Head, typename... Tail>\nvoid debug_out(vector<string> args, int idx, Head H, Tail... T) {\n  if (idx > 0) cerr << \", \";\n  stringstream ss;\n  ss << H;\n  cerr << args[idx] << \" = \" << ss.str();\n  debug_out(args, idx + 1, T...);\n}\nvoid localTest() {}\nconst long long N = 2e5 + 5;\nlong long A[N];\nint main() {\n  localTest();\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long n;\n  cin >> n;\n  set<long long> mex;\n  for (long long i = 0; i <= n; ++i) mex.insert(i);\n  for (long long i = 1; i <= n; ++i) {\n    cin >> A[i];\n    mex.erase(A[i]);\n  }\n  for (long long i = 1; i <= n; ++i) {\n    cout << *mex.begin() << \" \";\n    mex.erase(mex.begin());\n    if (A[i] != A[i + 1]) mex.insert(A[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\n\narr = list(map(int, input().split(' ')))\n_max = max(arr)\ncount = dict()\nseq = []\nfor i in range(n):\n    if arr[i] not in count:\n        count[arr[i]] = 1\n    else:\n        count[arr[i]] = count[arr[i]] + 1 \nif arr[0] > 1:\n    print(-1)\nelse:\n    error = 0\n    if arr[0] == 0:\n        next_zero = 1\n        while (next_zero in count) and (count[next_zero] > 0):\n            next_zero += 1\n        seq.append(next_zero)\n        count[next_zero] = 1\n        while (next_zero in count) and (count[next_zero] > 0):\n            next_zero += 1\n    if arr[0] == 1:\n        seq.append(0)\n        count[0] = 1\n        next_zero = 1\n    for i in range(1, n):\n        if arr[i] > i + 1:\n            error = 1\n            break\n        else:\n            count[arr[i - 1]] = count[arr[i - 1]] - 1\n            if count[arr[i - 1]] == 0:\n                seq.append(arr[i - 1])\n                count[arr[i - 1]] = 1\n            else:\n                while (next_zero in count) and (count[next_zero] > 0):\n                    next_zero += 1\n                seq.append(next_zero)\n                if next_zero <= _max:\n                    count[next_zero] = 1\n                else:\n                    count[next_zero] = 0\n    if error == 1:\n        print(-1)\n    else:\n        print(*seq)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nn= int(input())\na= list(map(int, input().split()))\n# \u756a\u5175\na=[0]+a\ncnt=0\n# \u57cb\u3081\u308b\u3079\u304d\u9699\u9593\nx=[]\nfor i in range(n):\n    if a[i+1]-a[i]>=2:\n        cnt+=-(a[i+1]-a[i])+1\n        for j in range(a[i]+1,a[i+1]):\n            x.append(j)\n    elif a[i+1]==a[i]:\n        cnt+=1\n    if cnt<0:\n        print(-1)\n        exit()\n\nans=[0]*n\ncnt=0\nfor i in range(n):\n    if a[i+1]-a[i]==1:\n        ans[i]=a[i]\n    elif cnt<len(x) and a[i+1]==a[i]:\n        ans[i]+=x[cnt]\n        cnt+=1\n    elif a[i+1]-a[i]>=2:\n        ans[i]=a[i]\n    else:\n        ans[i]=pow(10,6)\n\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "def solve(nums):\n    res = [None] * len(nums)\n    used = set()\n    if nums[0] == 1:\n        res[0] = 0\n        used.add(0)\n    if nums[0] != 0 and nums[0] != 1:\n        return -1\n\n\n    for i in range(1, len(nums)):\n        if nums[i] > i + 1:\n            return -1\n\n        if nums[i] != nums[i-1]:\n            res[i] = nums[i-1]\n        used.add(nums[i-1])\n\n    largest = nums[-1]\n\n\n    i = 0\n    for x in range(0, largest):\n        while i < len(res) and res[i] != None:\n            i += 1\n        if x not in used:\n            res[i] = x\n            i += 1\n\n    for i in range(len(res)):\n        if res[i] == None:\n            res[i] = largest + 1\n    return ' '.join([str(x) for x in res])\n\ninput()\nnums = list(map(int, input().split()))\nprint(solve(nums))"
        },
        {
            "language": 1,
            "solution": "from __future__ import print_function\nmod=int(1e9+7)\n#import resource\n#resource.setrlimit(resource.RLIMIT_STACK, [0x100000000, resource.RLIM_INFINITY])\n#import threading\n#threading.stack_size(2**25)\n#import sys\n#sys.setrecursionlimit(10**5)\n#fact=[1]\n#for i in range(1,100001):\n#    fact.append((fact[-1]*i)%mod)\n#ifact=[0]*100001\n#ifact[100000]=pow(fact[100000],mod-2,mod)\n#for i in range(100000,0,-1):\n#    ifact[i-1]=(i*ifact[i])%mod\n#from random import randint as rn\nimport bisect\nfrom bisect import bisect_left as bl              #c++ lowerbound bl(array,element)\nfrom bisect import bisect_right as br             #c++ upperbound\nimport itertools\nimport collections\nimport math\nimport heapq\nfrom types import GeneratorType\ndef bootstrap(f, stack=[]):\n    def wrappedfunc(*args, **kwargs):\n        if stack:\n            return f(*args, **kwargs)\n        else:\n            to = f(*args, **kwargs)\n            while True:\n                if type(to) is GeneratorType:\n                    stack.append(to)\n                    to = next(to)\n                else:\n                    stack.pop()\n                    if not stack:\n                        break\n                    to = stack[-1].send(to)\n            return to\n    return wrappedfunc\ndef modinv(n,p):\n    return pow(n,p-2,p)\ndef ncr(n,r,p):                        #for using this uncomment the lines calculating fact and ifact\n    t=((fact[n])*((ifact[r]*ifact[n-r])%p))%p\n    return t\ndef GCD(x,y):\n    while(y):\n        x, y = y, x % y\n    return x\ndef ain():                           #takes array as input\n    return list(map(int,sin().split()))\ndef sin():\n    return input()\nrange=xrange\n\"\"\"*******************************************************\"\"\"\ndef main():\n    n=int(sin())\n    a=ain()\n    z=[i for i in range(200000)]\n    z=set(z)\n    for i in range(n):\n        if(a[i] in z):\n            z.remove(a[i])\n    z=list(z)\n    z.sort()\n    b=[]\n    p=0\n    for i in range(n):\n        if((a[i]-1)>i):\n            print(-1)\n            exit()\n        if(i!=0 and a[i]!=a[i-1]):\n            b.append(a[i-1])\n        else:\n            b.append(z[p])\n            p+=1\n    print(*b,sep=\" \")\n######## Python 2 and 3 footer by Pajenegod and c1729\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\nimport os, sys\nfrom io import IOBase, BytesIO\n\nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s:self.buffer.write(s.encode('ascii'))\n            self.read = lambda:self.buffer.read().decode('ascii')\n            self.readline = lambda:self.buffer.readline().decode('ascii')\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nif __name__ == '__main__':\n   main()\n#threading.Thread(target=main).start()\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\npublic class CFC {\n    BufferedReader br;\n    PrintWriter out;\n    StringTokenizer st;\n    boolean eof;\n    private static long MOD = 1000L * 1000L * 1000L + 7;\n    private static final int[] dx = {0, -1, 0, 1};\n    private static final int[] dy = {1, 0, -1, 0};\n    private static final String yes = \"Yes\";\n    private static final String no = \"No\";\n\n    int LIMIT = 100 * 1000 + 100;\n    void solve() throws IOException {\n        int n = nextInt();\n        int[] a = nextIntArr(n);\n        int[] b = new int[n];\n        Arrays.fill(b, LIMIT);\n        for (int i = 0; i < n - 1; i++) {\n            if (a[i] != a[i + 1]) {\n                b[i + 1] = a[i];\n            }\n        }\n\n        boolean[] has = new boolean[LIMIT];\n        for (int i = 0; i < a[n - 1]; i++) {\n            has[i] = true;\n        }\n        for (int v : b) {\n            if (v != LIMIT) {\n                has[v] = false;\n            }\n        }\n\n        int start = 0;\n        for (int i = 0; i < LIMIT; i++) {\n            if (has[i]) {\n                if (b[start] == LIMIT) {\n                    b[start] = i;\n                    start++;\n                } else {\n                    start++;\n                    i--;\n                }\n            }\n        }\n\n        for (int v : b) {\n            out(v + \" \");\n        }\n        outln(\"\");\n    }\n\n    void shuffle(int[] a) {\n        int n = a.length;\n        for(int i = 0; i < n; i++) {\n            int r = i + (int) (Math.random() * (n - i));\n            int tmp = a[i];\n            a[i] = a[r];\n            a[r] = tmp;\n        }\n    }\n\n    long gcd(long a, long b) {\n        while(a != 0 && b != 0) {\n            long c = b;\n            b = a % b;\n            a = c;\n        }\n        return a + b;\n    }\n    private void outln(Object o) {\n        out.println(o);\n    }\n    private void out(Object o) {\n        out.print(o);\n    }\n    private void formatPrint(double val) {\n        out(String.format(\"%.9f%n\", val));\n    }\n    public CFC() throws IOException {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        solve();\n        out.close();\n    }\n    public static void main(String[] args) throws IOException {\n        new CFC();\n    }\n\n    public long[] nextLongArr(int n) throws IOException{\n        long[] res = new long[n];\n        for(int i = 0; i < n; i++)\n            res[i] = nextLong();\n        return res;\n    }\n    public int[] nextIntArr(int n) throws IOException {\n        int[] res = new int[n];\n        for(int i = 0; i < n; i++)\n            res[i] = nextInt();\n        return res;\n    }\n    public String nextToken() {\n        while (st == null || !st.hasMoreTokens()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (Exception e) {\n                eof = true;\n                return null;\n            }\n        }\n        return st.nextToken();\n    }\n    public String nextString() {\n        try {\n            return br.readLine();\n        } catch (IOException e) {\n            eof = true;\n            return null;\n        }\n    }\n    public int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n    public long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n    public double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1e6;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n, 0), b(n, inf);\n  for (auto& i : a) cin >> i;\n  vector<int> cnt(1e5 + 7, 0);\n  for (int i = 0; i < n; ++i) {\n    auto id = upper_bound(a.begin(), a.end(), a[i]);\n    if (id != a.end()) b[id - a.begin()] = a[i], cnt[a[i]] = 1;\n  }\n  if (a[0] == 1) b[0] = 0, cnt[0] = 1;\n  queue<int> que;\n  for (int i = 0; i < n; ++i)\n    if (b[i] == inf) que.push(i);\n  int j = 0;\n  while (j < a.back()) {\n    if (cnt[j] == 0) {\n      b[que.front()] = j;\n      que.pop();\n      cnt[j] = 1;\n    }\n    j++;\n  }\n  for (auto i : b) cout << i << ' ';\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve(n, a):\n    b = [None] * n\n    u = set(a)\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            b[i] = a[i - 1]\n        if a[i] > i + 1:\n            return -1\n\n    j = 0\n    for i in range(n):\n        if b[i] is not None:\n            continue\n        while j in u:\n            j += 1\n        b[i] = j\n        u.add(j)\n\n    return ' '.join(map(str, b))\n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(solve(n, a))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nni=[0]*(n+1)\nfor i in l:\n    ni[i]=1\nel=[]\nfor i in range(0,n+1):\n    if ni[i]==0:\n        el.append(i)\n#print(el)\na=[el[0]]\nind=1\nfor i in range(1,n):\n    if l[i]==l[i-1]:\n        a.append(el[ind])\n        ind+=1\n    else:\n        a.append(l[i-1])\nprint(*a)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid shikhar7s(long long int cas) {\n  long long int n, i;\n  cin >> n;\n  long long int a[n], b[n], vis[1000005] = {0};\n  memset(b, -1, sizeof(b));\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    if (i && a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      vis[b[i]] = 1;\n    }\n  }\n  vis[a[n - 1]] = 1;\n  long long int j = 0;\n  while (vis[j]) j++;\n  for (i = 0; i < n; i++) {\n    if (b[i] == -1) {\n      b[i] = j;\n      vis[j] = 1;\n      while (vis[j]) j++;\n    } else {\n      if (j < a[i]) {\n        cout << -1;\n        return;\n      }\n    }\n  }\n  for (i = 0; i < n; i++) cout << b[i] << \" \";\n}\nsigned main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int t = 1;\n  long long int cas = 1;\n  while (cas <= t) {\n    shikhar7s(cas);\n    cas++;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nans = [-1 for _ in range(n)]\nmex = 0\nind = 0\nfor i in range(n):\n    if mex < a[i]:\n        for j in range(mex + 1, a[i]):\n            while ind < i and ans[ind] != -1:\n                ind += 1\n            ans[ind] = j\n        ans[i] = mex\n        mex = a[i]\nfor i in range(len(ans)):\n    if ans[i] == -1:\n        print(1000000, end = ' ')\n    else:\n        print(ans[i], end = ' ')"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ninput()\nfor sjdkla in range(1):\n    arr = list(map(int, input().split()))\n    count = Counter(arr)\n    prev = arr[0]\n    impossible = False\n    for ind, i in enumerate(arr):\n        if i > ind + 1:\n            impossible = True\n        break\n    if impossible:\n        print(-1)\n        continue\n\n    newarr = []\n    newset = set()\n    safe = 0\n    newsafe = None\n    while 1:\n        if count[safe] == 0:\n            break\n        safe += 1\n    for i in arr:\n        if newsafe is not None:\n            newarr.append(newsafe)\n            newsafe = None\n        else:\n            newarr.append(safe)\n            while 1:\n                safe += 1\n                if count[safe] == 0:\n                    break\n        count[i] -= 1\n        if count[i] == 0:\n            newsafe = i\n    print(*newarr)"
        },
        {
            "language": 3,
            "solution": "import sys, math\ninput = sys.stdin.readline\n\ndef getInts():\n    return [int(s) for s in input().split()]\n\ndef getInt():\n    return int(input())\n\ndef getStrs():\n    return [s for s in input().split()]\n\ndef getStr():\n    return input().strip()\n\ndef listStr():\n    return list(input().strip())\n\nimport collections as col\nimport math,itertools\n\n\"\"\"\nWe need mex(b1) = a1\nIf a0 is 0, b0 can be anything greater than 0\nIf a0 is 1, b0 must be 0\nIf a0 > 1, impossible\n\nMore generally, if a(i-1) > i, impossible (since we would have to have at least 0 to i inclusive in only i spaces)\n\na0 must not be anything that appears later in the array, so if a0 is 1, then b0 = 0, which means that 0 cannot appear later\nThere is no point in using an element more than once\nSo, have a dictionary of elements we need to avoid, with their rightmost index as the value\nMaintain a sorted list of numbers we can use\nIf we exhaust these elements, we can add anything into B that isn't in the banned list, so 10**6-1 works\n\"\"\"\n\ndef solve():\n    N = getInt()\n    A = getInts()\n    B = []\n    A_dict = {}\n    for j in range(N):\n        A_dict[A[j]] = j\n    allowed_nums = [j for j in range(N,-1,-1) if j not in A_dict]\n    for j in range(N):\n        if A[j] > j+1:\n            return -1\n        B.append(allowed_nums.pop())\n        if A_dict[A[j]] == j:\n            allowed_nums.append(A[j])\n    \n    print(*B)\n        \n    \nsolve()\n    \n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=list(map(int,input().split()))\nB=[0 for i in range((2*n)+1)]\nfor i in range(n):\n    B[A[i]]=1\nC=[]\n\nfor i in range(len(B)):\n    if (B[i]==0):\n        C.append(i)\n\nans=[C[0]]\nj=1\nmv=C[0]\nflag=0\nfor i in range(1,n):\n    if (A[i]==A[i-1]):\n        ans.append(C[j])\n        j=j+1\n\n    else:\n        ans.append(A[i-1])\n    \n    \nprint(*ans)\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Task3 {\n\n    public static void main(String[] args) throws IOException {\n        new Task3().solve();\n    }\n\n    public void solve() throws IOException {\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n\n        int n = Integer.parseInt(f.readLine());\n        StringTokenizer tokenizer = new StringTokenizer(f.readLine());\n        int[] a = new int[n];\n        boolean isAscending = true;\n        for (int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(tokenizer.nextToken());\n            if (i > 0 && a[i] < a[i - 1]) {\n                isAscending = false;\n            }\n        }\n        if (!isAscending) {\n            out.println(-1);\n            out.close();\n        }\n\n\n\n        int[] stillIn = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            stillIn[a[i]]++;\n        }\n\n        int current = -1;\n        int[] b = new int[n];\n        //System.out.println(Arrays.toString(stillIn));\n        for (int i = 0; i < n; i++) {\n            if (i != 0 && stillIn[a[i - 1]] == 0) {\n                b[i] = a[i - 1];\n                if (current <= b[i]) {\n                    current = b[i];\n                }\n            } else {\n                current++;\n                //System.out.println(current + \" \" + stillIn[current]);\n                while (current <= n && stillIn[current] > 0) {\n                    current++;\n                }\n\n                b[i] = current;\n            }\n            stillIn[a[i]]--;\n        }\n\n        out.print(b[0]);\n        for (int i = 1; i < n; i++) {\n            out.print(\" \");\n            out.print(b[i]);\n        }\n        out.println();\n\n        out.println();\n        out.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "// var lineIdx = 0;\n// var readline = () => {\n//   var input = [\"3\", \"1 1 3\"]\n//   return input[lineIdx++];\n// };\n// var print = (str) => {\n//   console.log(str);\n// };\n\nvar t = readline().split(\" \").map(function (x) { return parseInt(x); })[0];\n\nvar row = readline().split(\" \").map(function (x) { return parseInt(x); });\n\nvar source = new Array();\nvar res = new Array();\n\nvar idx = 0;\n\nfor(var i = 0; i<= t*2; i++){\n  if(idx < row.length && row[idx] == i){\n    while(row[idx] == i && idx < row.length) {\n      idx ++;\n    }\n  } else{\n    source.push(i)\n  }\n}\n\nvar last = -1;\nidx = 0;\nfor(var j = 0; j < row.length; j++){\n  if(j != 0 && row[j] != last){\n    res.push(last)\n  } else {\n    res.push(source[idx++])\n  }\n  last = row[j]\n}\n\nprint(res.join(' '))"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict, Counter\nfrom math import sqrt, log10, log2, log, gcd, floor, factorial\nfrom bisect import bisect_left, bisect_right\nfrom itertools import combinations, combinations_with_replacement\nimport sys, io, os\ninput=lambda:sys.stdin.readline().encode()\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n# print=sys.stdout.write\n# sys.setrecursionlimit(10000)\nmod = 10 ** 9 + 7;inf = float('inf')\ndef get_list(): return [int(i) for i in input().split()]\nyn = lambda a: print(\"YES\" if a else \"NO\")\nceil = lambda a, b: (a + b - 1) // b\nt=1\n\nfor i in range(t):\n    n=int(input())\n    l=[0]+get_list()\n    lsort=sorted(l)\n\n    ans=[0]*(n+1)\n    stack=[]\n    initial=0\n    dict=defaultdict(int)\n    for i in range(1,n+1):\n        if l[i]>l[i-1]:\n            ans[i]=(l[i-1])\n            dict[l[i-1]]=1\n            while initial<l[i]:\n                if initial in dict:\n                    initial+=1\n                    continue\n\n                ans[stack.pop()]=initial\n                initial+=1\n        else:\n            stack.append(i)\n            ans[i]=10**6\n\n    print(*ans[1:])\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class C {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n        StringBuilder sb = new StringBuilder(\"\");\n            String[] in = br.readLine().split(\" \");\n            int n = Integer.parseInt(in[0]);\n            int arr[] = new int[n];\n            in = br.readLine().split(\" \");\n            Set<Integer> set = new HashSet<>();\n            for(int i=0;i<n;i++){\n                arr[i]=Integer.parseInt(in[i]);\n                set.add(arr[i]);\n            }\n            int b[] = new int[n];\n            Arrays.fill(b, -1);\n            for(int j=1;j<n;j++){\n                if(arr[j]!=arr[j-1]){\n                  b[j]  = arr[j-1];\n                }\n            }\n            int curr = 0;\n            for(int j=0;j<n;j++){\n                if(b[j]==-1){\n                    while(set.contains(curr)){\n                        curr++;\n                    }\n                    b[j]=curr;\n                    curr++;\n                }\n            }\n            for(int j=0;j<n;j++){\n                sb.append(b[j]);\n                if(j==n-1){\n                    sb.append(\"\\n\");\n                }else{\n                    sb.append(\" \");\n                }\n            }\n\n        out.print(sb);\n        out.flush();\n        br.close();\n    }\n\npublic static long getAns(long n){\n        if(n==0 || n==1){\n            return n;\n        }\n        return n+getAns(n/2);\n}\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport static java.lang.Math.*;\nimport static java.lang.System.out;\nimport java.util.*;\nimport java.io.PrintStream;\nimport java.io.PrintWriter;\npublic class A {\n \n\tstatic final int mod = 1000000007;\n\tstatic final long temp = 998244353;\n\tstatic final long MOD = 1000000007;\n\tstatic final long M = (long)1e9+7;\n \n\t\n\tstatic class Pair implements Comparable<Pair>\n\t{\n\t\tint first, second;\n\t\tpublic Pair(int aa, int bb)\n\t\t{\n\t\t\tfirst = aa; second = bb;\n\t\t}\n\t\tpublic int compareTo(Pair p)\n\t\t{\n\t\t\tif(first == p.first) return (int)(second - p.second);\n\t\t\treturn (int)(first - p.first);\n\t\t}\n\t}\n\t\n\t/*\n\t * IO FOR 2D GRID IN JAVA\n\t * \tchar[][] grid = new char[n][m];\n\t\t\tfor(int i = 0;i<n;i++)\n\t\t\t{\n\t\t\t\tchar[] s = sc.next().toCharArray();\n\t\t\t\tfor(int j = 0;j<m;j++)\n\t\t\t\t{\n\t\t\t\t\tgrid[i][j] = s[j];\n\t\t\t\t}\n\t\t\t}\n\t * */\n\t\n\tstatic class Reader {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tint[] readArray(int n) throws IOException {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tlong[] longReadArray(int n) throws IOException {\n\t\t\tlong[] a=new long[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextLong();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n\t\n \n\t\tpublic static boolean isPrime(int n) \n\t\t{\n\t\t\tif(n == 1)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor(int i = 2;i*i<=n;i++)\n\t\t\t{\n\t\t\t\tif(n%i == 0)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t}\n\t\n\tpublic static List<Integer> SieveList(int n)\n\t{\n\t\tboolean prime[] = new boolean[n+1];\n\t\tArrays.fill(prime, true);\n\t\t\n\t\tList<Integer> l = new ArrayList<>();\n\t\tfor (int p=2; p*p<=n; p++) \n\t\t{ \n\t\t\tif (prime[p] == true) \n\t\t\t{ \t\n\t\t\t    for(int i=p*p; i<=n; i += p) \n\t\t\t\t{\n\t\t\t\t    prime[i] = false; \n\t\t\t\t}\t\n\t\t\t} \n\t\t} \n \n\t\tfor (int p=2; p<=n; p++) \n\t\t{\n\t\t    if (prime[p] == true)\n\t\t    {\n\t\t       l.add(p); \n\t\t    }\n\t\t}\n\t\t\n\t\treturn l;\n\t}\n\t\n\t\n\tpublic static int gcd(int a, int b)\n\t{\n\t\tif(b == 0)\n\t\t return a;\n\t\t\n\t\telse\n\t\treturn gcd(b,a%b);\n\t} \n \n\t\tpublic static int lcm(int a, int b)\n\t    {\n\t        return (a / gcd(a, b)) * b;\n\t    }\n\t\n\tpublic static long LongGCD(long a, long b)\n\t{\n\t\tif(b == 0)\n\t\t\t return a;\n\t\t\t\n\t\t\telse\n\t\t\treturn LongGCD(b,a%b);\n\t}\n\t\n\t\tpublic static long LongLCM(long a, long b)\n\t    {\n\t        return (a / LongGCD(a, b)) * b;\n\t    }\n\t\n\t\tpublic static int phi(int n)  //euler totient function\n\t    { \n\t        int result = 1; \n\t        for (int i = 2; i < n; i++) \n\t            if (gcd(i, n) == 1) \n\t                result++; \n\t        return result; \n\t    }\n\t\n\tpublic static long fastPow(long x, long n) //include mod at each step if asked and in args of fn too\n\t{\n\t\tif(n == 0)\n\t\t\treturn 1;\n\t\telse if(n%2 == 0)\n\t\t\treturn fastPow(x*x,n/2);\n\t\telse\n\t\t\treturn x*fastPow(x*x,(n-1)/2);\n\t}\n\t\n\t\n\t   public static long modPow(long x, long y, long p)\n\t    {\n\t        long res = 1;\n\t        x = x % p;\n\t \n\t        while (y > 0) {\n\t            if (y % 2 == 1)\n\t                res = (res * x) % p;\n\t \n\t            y = y >> 1; \n\t            x = (x * x) % p;\n\t        }\n\t        return res;\n\t    }\n\t   \n\t   static long modInverse(long n, long p)\n\t    {\n\t        return modPow(n, p - 2, p);\n\t    }\n\t \n\t    // Returns nCr % p using Fermat's little theorem.\n\t    \n\t    public static long nCrModP(long n, long r,long p)\n\t    {\n\t          if (n<r) \n\t              return 0;\n\t          \n\t        if (r == 0)\n\t            return 1;\n\t \n\t        long[] fac = new long[(int)(n) + 1];\n\t        fac[0] = 1;\n\t \n\t        for (int i = 1; i <= n; i++)\n\t            fac[i] = fac[i - 1] * i % p;\n\t \n\t        return (fac[(int)(n)] * modInverse(fac[(int)(r)], p)\n\t                % p * modInverse(fac[(int)(n - r)], p)\n\t                % p)\n\t            % p;\n\t    }\n\t    \n\t    public static long nCr(long n, long r)\n\t    {\n\t    \tlong ans = 1;\n\t    \tfor(long i = 1,j = n;i<=r;i++,j--)\n\t    \t{\n\t    \t\tans = ans * j / i;\n\t    \t}\n\t    \treturn ans;\n\t    }\n \n\t\tpublic static void Sort(int[] a) {\n\t\t\tList<Integer> l=new ArrayList<>();\n\t\t\tfor (int i : a) l.add(i);\n\t\t\tCollections.sort(l);\n//\t\t\tCollections.reverse(l);  //Use to Sort decreasingly \n\t\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t\t}\n\t\t\n\t\tpublic static void ssort(char[] a)\n\t\t{\n\t\t\tList<Character> l = new ArrayList<>();\n\t\t\tfor (char i : a) l.add(i);\n\t\t\tCollections.sort(l);\n\t\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t\t}\n\t\t\n\t\t\n\t\t//Modular Operations for Addition and Multiplication. \n\t\t\n\t\t   public static long perfomMod(long x)\n\t\t   {\n\t\t        return ((x%M + M)%M);\n\t\t    }\n\t\t   public static long addMod(long a, long  b)\n\t\t   {\n\t\t        return perfomMod(perfomMod(a)+perfomMod(b));\n\t\t    }\n\t\t   public static long mulMod(long  a, long b)\n\t\t   {\n\t\t        return perfomMod(perfomMod(a)*perfomMod(b));\n\t\t   }\n\t\t\n\t\t   public static int LowerBound(int a[], int x) \n\t\t   {\n\t\t\t\t  int l=-1,r=a.length;\n\t\t\t\t  while(l+1<r) {\n\t\t\t\t    int m=(l+r)>>>1;\n\t\t\t\t    if(a[m]>=x) r=m;\n\t\t\t\t    else l=m;\n\t\t\t\t  }\n\t\t\t\t  return r;\n\t\t\t}\n\t\t\n\t\t   \n\t\t\tpublic static int UpperBound(int a[], int x) \n\t\t\t{\n\t\t\t    int l=-1;\n\t\t\t    int r=a.length;\n\t\t\t    while(l+1<r) {\n\t\t\t       int m=(l+r)>>>1;\n\t\t\t       if(a[m]<=x) l=m;\n\t\t\t       else r=m;\n\t\t\t    }\n\t\t\t    return l+1;\n\t\t}\n\t\n\t\t\tpublic static class DSU\n\t\t\t{\n\t\t\t\tint[] parent;\n\t\t\t\tint[] rank; //Size of the trees is used as the rank\n\t\t\t\tpublic DSU(int n)\n\t\t\t\t{\n\t\t\t\t\tparent = new int[n];\n\t\t\t\t\trank = new int[n];\n\t\t\t\t\tArrays.fill(parent, -1);\n\t\t\t\t\tArrays.fill(rank, 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpublic int find(int i) //finding through path compression\n\t\t\t\t{\n\t\t\t\t\treturn parent[i] < 0 ? i : (parent[i] = find(parent[i]));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpublic boolean union(int a, int b)\n\t\t\t\t{\n\t\t\t\t\ta = find(a);\n\t\t\t\t\tb = find(b);\n\t\t\t\t\t\n\t\t\t\t\tif(a == b) return false; //if they are already connected we exit by returning false.\n\t\t\t\t\t\n\t\t\t\t\tif(parent[a] == parent[b]) parent[a]--;\n\t\t\t\t\tif(parent[a] <= parent[b]) \n\t\t\t\t\t{\n\t\t\t\t\t\t// a would be parent\n\t\t\t\t\t\trank[a] += rank[b];\n\t\t\t\t\t\tparent[b] = a;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t//b would be parent\n\t\t\t\t\t\trank[b] += rank[a];\n\t\t\t\t\t\tparent[a] = b;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\n\t\t\n\t\n\tpublic static void main(String[] args) throws IOException \n\t{\n\t\tReader sc = new Reader();\n\t\tPrintWriter fout = new PrintWriter(System.out);\n\t\t\n\t\tint n  =sc.nextInt();\n\t\tint[] a = sc.readArray(n);\n\t\tint[] b = new int[n];\n\t\tboolean[] vis = new boolean[(int)(1e6)];\n\t\tArrays.fill(vis, false);\n\t\t\n\t\tfor(int x : a)\n\t\t{\n\t\t\tvis[x] = true;\n\t\t}\n\t\t\n\t\tint idx = 0;\n\t\tfor(int i = 0;i<n;i++)\n\t\t{\n\t\t\tif(i == 0)\n\t\t\t{\n\t\t\t\twhile(vis[idx])\n\t\t\t\t{\n\t\t\t\t\tidx++;\n\t\t\t\t}\n\t\t\t\tfout.print(idx + \" \");\n\t\t\t\tidx++;\n\t\t\t}\n\t\t\telse if(a[i] != a[i-1])\n\t\t\t{\n\t\t\t\tfout.print(a[i-1] + \" \");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile(vis[idx])\n\t\t\t\t{\n\t\t\t\t\tidx++;\n\t\t\t\t}\n\t\t\t\tfout.print(idx + \" \");\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfout.close();\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class A {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        StringBuilder sb = new StringBuilder();\n\n        int n = sc.nextInt();\n\n        int arr[] = new int[n];\n\n        TreeSet<Integer> pq = new TreeSet<>();\n\n        HashSet<Integer> set = new HashSet<>();\n\n        int first = -1;\n\n        for (int i = 0; i < n; i++) {\n            int cur = sc.nextInt();\n            arr[i] = cur;\n\n            set.add(cur);\n\n            if (i == 0) {\n                first = cur;\n            }\n        }\n\n        if (first != 0 && first != 1) {\n            System.out.println(-1);\n            return;\n        }\n\n        int ans[] = new int[n];\n\n        pq.add(-1);\n\n        for (int i = 0; i < n; i++) {\n\n            int cur = arr[i];\n\n            if (i != 0 && cur != arr[i - 1]) {\n                ans[i] = arr[i - 1];\n                continue;\n            }\n\n            pq.add(cur);\n\n            int insert = (i == 0 ? 0 : pq.last() + 1);\n\n            while (set.contains(insert)) {\n                insert++;\n            }\n\n            ans[i] = insert;\n            pq.add(insert);\n\n        }\n\n        pq = new TreeSet<>();\n\n        for (int i = 0; i <= n; i++) {\n            pq.add(i);\n        }\n\n        pq.remove(ans[0]);\n\n        sb.append(ans[0]).append(\" \");\n\n        for (int i = 0; i < n; i++) {\n            if (pq.first() != arr[i]) {\n                System.out.println(-1);\n                return;\n            }\n\n            if (i == n - 1) {\n                break;\n            }\n\n            sb.append(ans[i + 1]).append(\" \");\n\n            pq.remove(ans[i + 1]);\n        }\n\n        System.out.print(sb);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main(void) {\n  int n;\n  cin >> n;\n  int arr[(n + 1)];\n  int brr[(n + 1)];\n  arr[0] = 0;\n  for (int i = 1; i <= n; i++) cin >> arr[i];\n  memset(brr, -1, sizeof brr);\n  map<int, int> mp;\n  for (int i = 1; i <= n; i++) {\n    if (arr[i] != arr[i - 1]) {\n      brr[i] = arr[i - 1];\n      mp[brr[i]]++;\n    }\n  }\n  mp[arr[n]]++;\n  int k = 0;\n  for (int i = 1; i <= n; i++) {\n    while (mp.find(k) != mp.end()) k++;\n    if (brr[i] == -1) {\n      brr[i] = k;\n      mp[k]++;\n    }\n  }\n  for (int i = 1; i <= n; i++) cout << brr[i] << \" \";\n  cout << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.nio.charset.StandardCharsets;\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class C1364 {\n\tstatic class Solver {\n\n\t\tint N, a[], b[];\n\t\t\n\t\tvoid solve(int testNumber, FastScanner s, PrintWriter out) {\n\t\t\tN = s.nextInt(); a = new int[N + 1];\n\t\t\tArrays.fill(b = new int[N], -1);\n\t\t\tfor(int i = 1; i <= N; i++) a[i] = s.nextInt();\n\n\t\t\tArrayDeque<Integer> stock = new ArrayDeque<>();\n\t\t\tfor(int i = 0; i < N; i++) {\n\t\t\t\tif(a[i] < a[i + 1]) {\n\t\t\t\t\tb[i] = a[i];\n\t\t\t\t\tfor(int j = a[i + 1] - 1; j > a[i]; j--)\n\t\t\t\t\t\tstock.addLast(j);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i = 0; i < N; i++) {\n\t\t\t\tif(b[i] == -1) {\n\t\t\t\t\tb[i] = stock.isEmpty() ? N + 10 : stock.pollFirst();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(int x : b) out.print(x + \" \"); out.println();\n\t\t\t\n\t\t}\n\n\t}\n\n\tfinal static boolean cases = false;\n\n\tpublic static void main(String[] args) {\n\n\t\tFastScanner s = new FastScanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\n\t\tSolver solver = new Solver();\n\t\tfor (int t = 1, T = cases ? s.nextInt() : 1; t <= T; t++)\n\t\t\tsolver.solve(t, s, out);\n\n\t\tout.close();\n\n\t}\n\n\tstatic int min(int a, int b) {\n\t\treturn a < b ? a : b;\n\t}\n\n\tstatic int max(int a, int b) {\n\t\treturn a > b ? a : b;\n\t}\n\n\tstatic long min(long a, long b) {\n\t\treturn a < b ? a : b;\n\t}\n\n\tstatic long max(long a, long b) {\n\t\treturn a > b ? a : b;\n\t}\n\n\tstatic int swap(int a, int b) {\n\t\treturn a;\n\t}\n\n\tstatic Object swap(Object a, Object b) {\n\t\treturn a;\n\t}\n\n\tstatic String ts(Object... o) {\n\t\treturn Arrays.deepToString(o);\n\t}\n\n\tstatic class FastScanner {\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic FastScanner(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic FastScanner(File f) throws FileNotFoundException {\n\t\t\tthis(new FileInputStream(f));\n\t\t}\n\n\t\tpublic FastScanner(String s) {\n\t\t\tthis.stream = new ByteArrayInputStream(s.getBytes(StandardCharsets.UTF_8));\n\t\t}\n\n\t\tint read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\t// Jacob Garbage\n\n\t\tpublic int[] nextIntArray(int N) {\n\t\t\tint[] ret = new int[N];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = this.nextInt();\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic int[][] next2DIntArray(int N, int M) {\n\t\t\tint[][] ret = new int[N][];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = this.nextIntArray(M);\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int N) {\n\t\t\tlong[] ret = new long[N];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = this.nextLong();\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long[][] next2DLongArray(int N, int M) {\n\t\t\tlong[][] ret = new long[N][];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = nextLongArray(M);\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int N) {\n\t\t\tdouble[] ret = new double[N];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = this.nextDouble();\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double[][] next2DDoubleArray(int N, int M) {\n\t\t\tdouble[][] ret = new double[N][];\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tret[i] = this.nextDoubleArray(M);\n\t\t\treturn ret;\n\t\t}\n\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "## necessary imports\nimport sys\ninput = sys.stdin.readline\nfrom math import ceil, floor, factorial;\n\n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp\n\n## gcd function\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n    if(k > n - k): \n        k = n - k \n    res = 1\n    for i in range(k): \n        res = res * (n - i) \n        res = res / (i + 1) \n    return int(res) \n\n## upper bound function code -- such that e in a[:i] e < x;\ndef upper_bound(a, x, lo=0):\n    hi = len(a)\n    while lo < hi:\n        mid = (lo+hi)//2\n        if a[mid] < x:\n            lo = mid+1\n        else:\n            hi = mid\n    return lo\n\n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0 and n > 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0 and n > 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n\n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n\n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b\n\n# find function with path compression included (recursive)\n# def find(x, link):\n#     if link[x] == x:\n#         return x\n#     link[x] = find(link[x], link);\n#     return link[x];\n\n# find function with path compression (ITERATIVE)\ndef find(x, link):\n    p = x;\n    while( p != link[p]):\n        p = link[p];\n    \n    while( x != p):\n        nex = link[x];\n        link[x] = p;\n        x = nex;\n    return p;\n\n\n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n\n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e7 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n\n################## un-comment below 2 lines when using factorization #################\n# spf = [0 for i in range(MAXN)]\n# spf_sieve() \ndef factoriazation(x):\n    ret = {};\n    while x != 1:\n        ret[spf[x]] = ret.get(spf[x], 0) + 1;\n        x = x//spf[x]\n    return ret\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()))\n## taking string array input\ndef str_array():\n    return input().strip().split();\n\n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n\n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n\nimport heapq as hp;\nn = int(input()); a = int_array();\nmset = {i for i in range(n + 10)};\nfor i in a:\n    if i in mset:\n        mset.remove(i);\nq = sorted(list(mset)); ans = [];\nind = 0;\nwhile(len(ans) != n):\n    x = hp.heappop(q);\n    ans.append(x);\n    if ind != n-1:\n        if a[ind] != a[ind+1]:\n            hp.heappush(q, a[ind]);\n    ind += 1;\nprint(*ans);"
        },
        {
            "language": 3,
            "solution": "n = int(input());\narr = list(map(int,input().split()));\nused = [0 for i in range(10**6+1)];\nb = [-1 for i in range(n)];\nused[arr[0]]=1;\nfor i in range(1,n):\n    if(arr[i]>arr[i-1]):\n        used[arr[i]]=1;\n        b[i]=arr[i-1];\nm = 0;\n#print(used[0:10])\nfor i in range(n):\n    #print(m);\n    while(used[m]!=0):\n        m+=1;\n    #print(m)\n    if(b[i]==-1):\n        b[i]=m;\n        used[m]=1;\nprint(*b);\n    \n    \n        \n"
        },
        {
            "language": 1,
            "solution": "# template by 3xC and starkizard.\n# contributors: \n\n#####################################################################################\nfrom __future__ import division, print_function \n\nimport sys\nimport os\nfrom collections import Counter, deque, defaultdict\nimport itertools\nimport math\nimport io\n\n\n\"\"\"Uncomment modules according to your need\"\"\"\n\n\n# from bisect import bisect_left, bisect_right, insort\n# from heapq import heappop, heapify, heappush\n# from random import randint as rn\n# from Queue import Queue as Q\n# from copy import deepcopy\n# from decimal import *\n# import re\n# import operator\n\n#####################################################################################\n# this enables you to write python3 code with PyPy2 (Python 2)\nif sys.version_info[0] < 3:\n    input = raw_input\n    range = xrange\n\n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n\n#####################################################################################\n\n\"\"\"value of mod\"\"\"\nMOD = 998244353\nmod = 10**9 + 7\n\n\"\"\"Uncomment next 4 lines if doing huge recursion\"\"\"\n# import threading\n# threading.stack_size(1<<27)\n# sys.setrecursionlimit(10000\n\ndef prepare_factorial(mod=mod):\n    \"\"\" returns two lists, factorial and inverse factorial modulo argument by default 10**9 +7 \"\"\"\n    # Comment code out when you don't need inverse factorial or vice versa\n    fact = [1]\n    for i in range(1, 200005):\n        fact.append((fact[-1] * i) % mod)\n\n    ifact = [0] * 200005\n    ifact[200004] = pow(fact[200004], mod - 2, mod)\n    for i in range(200004, 0, -1):\n        ifact[i - 1] = (i * ifact[i]) % mod\n\n    return fact, ifact\n\ndef modinv(n, p):\n    \"\"\" returns N inverse modulo p \"\"\"\n    return pow(n, p - 2, p)\n\ndef ncr(n, r,  fact, ifact):\n    \"\"\" takes 4 arguments: n , r and factorial and inverse factorial lists\"\"\"\n    t = (fact[n] * (ifact[r]*ifact[n-r]) % MOD)% MOD\n    return t\n\n\ndef get_n(Sum):    \n    \"\"\"this function returns the maximum n for which Summation(n) <= Sum\"\"\"\n    ans = (-1 + sqrt(1 + 8*Sum))//2\n    return ans\n\ndef sieve(n):\n    \"\"\" returns a list of prime numbers till n \"\"\"\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\n\n\n\ndef divs(n, start=1):\n    \"\"\" returns a list of all divisors till n \"\"\"\n    divisors = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            if n / i == i:\n                divisors.append(i)\n            else:\n                divisors.extend([i, n // i])\n    return divisors\n\n\n\ndef divn(n, primes):\n    \"\"\" returns the number of divisors, two arguments n and the sieve till n \"\"\"\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\n\n\n\ndef lrfind(d, x, default=-1):\n    \"\"\" Takes 2 arguments an iterable and an element. returns a tuple (firstoccurence,lastoccurence) -1 if not found \"\"\"\n    left = right = -1\n    for i in range(len(d)):\n        if d[i] == x:\n            if left == -1: left = i\n            right = i\n    if left == -1:\n        return default, default\n    else:\n        return left, right\n\ndef gcd(x, y): # math.gcd is slower\n    \"\"\" returns greatest common divisor of x and y \"\"\"\n    while y:\n        x, y = y, x % y\n    return x\n\ndef check_sorted(a):\n    ''' returns True/False '''\n    for i in range(len(a)-1):\n        if a[i]>a[i+1]:\n            return False\n    return True\ndef ceil(n, k=1): return n // k + (n % k != 0) #returns math.ceil but protecting against floating inconsistencies\ndef input(): return sys.stdin.readline().strip()\ndef ii(): return int(input()) #inputs integer\ndef mi(): return map(int, input().split()) # inputting space seperated variables for example x,y,z\ndef li(): return list(map(int, input().split())) #inputting a space seperated list of integers\ndef lw(): return input().split() #inputting a space seperated list of strings\ndef lcm(a, b): return abs(a * b) // gcd(a, b) #returns LCM of two arguments\ndef prr(a, sep=' ', end='\\n'): print(sep.join(map(str, a)), end=end) #For printing an iterable with seperator sep as optional second argument (default : \" \"), ending character (default: \"\\n\") as optional third\ndef dd(): return defaultdict(int) #returns a dictionary with values defaulted to 0\ndef ddl(): return defaultdict(list) #returns a dictionary with values defaulted to []\ndef write(s): return sys.stdout.write(s)\n\n\n\n\n\n\n\n\n\n\n\n\n###################################################################\ndef main():\n    #CODE GOES HERE:\n    n=ii()\n    a=li()\n    if check_sorted(a)==False:\n        print(-1)\n        return\n    for i in range(n):\n        if a[i]>i+1:\n            print(-1)\n            return\n    b=[-1]*n\n    s=set(a)\n    for i in range(1,n):\n        if(a[i]!=a[i-1]):\n            b[i]=a[i-1]\n    element=0\n    for i in range(n):\n        while element in s:\n            element+=1\n        if b[i]==-1:\n            b[i]=element\n            element+=1\n\n    prr(b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\" -------- Python 2 and 3 footer by Pajenegod and c1729 ---------\"\"\"\n\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\nimport os, sys\nfrom io import IOBase, BytesIO\n\nBUFSIZE = 8192\n\nclass FastIO(BytesIO):\n    newlines = 0\n\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0, 2), super(FastIO, self).write(s))[0])\n        return s\n\n    def read(self):\n        while self._fill(): pass\n        return super(FastIO, self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill();\n            self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\n\nclass IOWrapper(IOBase):\n\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s: self.buffer.write(s.encode('ascii'))\n            self.read = lambda: self.buffer.read().decode('ascii')\n            self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\n\"\"\" main function\"\"\"\n\nif __name__ == '__main__':\n    main()\n    # threading.Thread(target=main).start()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=[0]*(1000001)\nfor i in a:\n    c[i]+=1\np=0\nq=[]\nsol=[]\nt=[0]*(1000001)\nfor i in range(n+1):\n    if(c[i]==0):\n        continue\n    while(c[i]):\n        if(q):\n            c[i]-=1\n            sol.append(q[0])\n            t[q[0]]+=1\n            q.pop(0)\n        else:\n            while(c[p] or t[p]):\n                p+=1\n            t[p]+=1\n            sol.append(p)\n            p += 1\n            c[i]-=1\n    q.append(i)\nprint(*sol)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef ii():\n    return sys.stdin.readline().strip()\n\ndef idata():\n    return [int(x) for x in ii().split()]\n\ndef solve_of_problem():\n    n = int(ii())\n    data = idata()\n    slov = dict()\n    for i in range(0, n + n + 12):\n        slov[i] = 0\n    for i in range(n):\n        if data[i] > i + 1:\n            print(-1)\n            return\n        slov[data[i]] = 1\n    ans = []\n    data += [n + n + 12]\n    m = 0\n    for i in range(n):\n        if data[i] > data[i - 1] and i != 0:\n            ans += [data[i - 1]]\n        else:\n            while slov[m]:\n                m += 1\n            ans += [m]\n            slov[m] = 1\n    print(*ans)\n    return\n\nsolve_of_problem()\n"
        },
        {
            "language": 4,
            "solution": "// package LeetCode;\n\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tstatic class Reader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic Reader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tif (st == null || !st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\treturn Integer.parseInt(st.nextToken());\n\t\t}\n\n\t\tpublic float nextFloat() throws IOException {\n\t\t\tif (st == null || !st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\treturn Float.parseFloat(st.nextToken());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tif (st == null || !st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\treturn Long.parseLong(st.nextToken());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tif (st == null || !st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\treturn Double.parseDouble(st.nextToken());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\tif (st == null || !st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t}\n\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint index, val;\n\n\t\tpublic Pair(int index, int val) {\n\t\t\tthis.index = index;\n\t\t\tthis.val = val;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn o.val - this.val;\n\t\t}\n\t}\n\n\tstatic int mod = (int) (1e9 + 7);\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tReader sc = new Reader();\n\t\tPrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\ttry {\n\t\t\tint t = 1;\n\t\t\twhile (t-- > 0) {\n\t\t\t\tint n = sc.nextInt();\n\t\t\t\tlong arr[] = new long[n];\n\t\t\t\tHashSet<Long> set = new HashSet<>();\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tarr[i] = sc.nextInt();\n\t\t\t\t\tset.add(arr[i]);\n\t\t\t\t}\n\t\t\t\tboolean flag = true;\n\t\t\t\tlong ans[] = new long[n];\n\t\t\t\tlong curr = 0;\n\t\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\t\tif(i!=0 && arr[i-1]!=arr[i]) {\n\t\t\t\t\t\tans[i] = arr[i-1];\n\t\t\t\t\t\tif(curr==ans[i])\n\t\t\t\t\t\t\tcurr++;\n\t\t\t\t\t\tif((curr==arr[i]-1 && curr<arr[i-1]-1) || curr<arr[i]-1) {\n//\t\t\t\t\t\t\tSystem.out.println(i);\n\t\t\t\t\t\t\tflag = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\twhile(set.contains(curr))\n\t\t\t\t\t\tcurr++;\n\t\t\t\t\tans[i] = curr++;\n\t\t\t\t}\n\t\t\t\tif(!flag) {\n\t\t\t\t\tout.println(-1);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\t\tout.print(ans[i]);\n\t\t\t\t\tout.print(' ');\n\t\t\t\t}\n\t\t\t\tout.println();\n\t\t\t}\n\t\t\tout.flush();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n//6\n//4\n//0 0 1 2\n//4\n//1 1 2 4\n//4\n//0 1 3 3\n//4\n//1 1 3 4\n//4\n//0 2 2 3\n//4\n//1 2 2 2\n\n//3 3 0 1 \n//-1\n//-1\n//-1\n//1 0 4 2 \n//0 1 1 3 \n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\n\n\nimport static java.lang.Math.*;\n\n public class Solution implements Runnable {\n     \n    public void solve() throws Exception {\n         int n=sc.nextInt();\n         int arr[]=new int[n+1];\n         int xx[]=new int[n];\n         for(int i=0;i<n;i++)\n         {\n        \txx[i]=sc.nextInt();\n        \t\n        \tarr[xx[i]]=1;\n         }\n         int result[]=new int[n];\n         int count=0;\n         HashMap<Integer,Integer> map=new HashMap<>();\n         \n         int c=0;\n         \n         while(c!=n)\n         {\n        \t \n        \t\t \tif(c>0 && xx[c]!=xx[c-1])\n        \t\t \t{\n        \t\t \t\tif(!map.containsKey(xx[c-1]))\n        \t\t \t\t{\n        \t\t \t\t\tmap.put(xx[c-1],1);\n        \t\t \t\t\tresult[c]=xx[c-1];\n        \t\t \t\t\tc++;\n        \t\t \t\t\tif(xx[c-1]+1>count)\n        \t\t \t\t\tcount=xx[c-1]+1;\n        \t\t \t\t}\n        \t\t \t}\n        \t \n        \t else \n        \t\t {if(arr[count]!=1 || (count<xx[c]))\n        \t {\n        \t\t\t \n        \t\t result[c]=count;\n        \t\t c++;\n        \t\t map.put(count, 1);\n        \t\t \n        \t }\n        \t\t count++;\n        \t\t }\n        \t \n         \n         }\n          for(int i=0;i<n;i++)\n          {\n        \t  out.print(result[i]+\" \");\n          }\n             \n                \n            \n         }\n            \n         \n    \n             \n         \n        \n        \n       \n        \n        \n    \n    // public boolean binarysearch(int limit )\n    \n    static Throwable uncaught;\n\n    BufferedReader in;\n    FastScanner sc;\n    PrintWriter out;\n\n    @Override\n    public void run() {\n        try {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n            sc = new FastScanner(in);\n            solve();\n        } catch (Throwable uncaught) {\n            Solution.uncaught = uncaught;\n        } finally {\n            out.close();\n        }\n    }\n\n    public static void main(String[] args) throws Throwable {\n        Thread thread = new Thread(null, new Solution(), \"\", (1 << 26));\n        thread.start();\n        thread.join();\n        if (Solution.uncaught != null) {\n            throw Solution.uncaught;\n        }\n    }\n\n}\n\nclass FastScanner {\n\n    BufferedReader in;\n    StringTokenizer st;\n\n    public FastScanner(BufferedReader in) {\n        this.in = in;\n    }\n\n    public String nextToken() throws Exception {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n\n    public int nextInt() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n\n    public long nextLong() throws Exception {\n        return Long.parseLong(nextToken());\n    }\n\n    public double nextDouble() throws Exception {\n        return Double.parseDouble(nextToken());\n    }\n\n}\n                  \n                  \n                  \n            \n"
        },
        {
            "language": 3,
            "solution": "#! /usr/bin/env python3\n# -*- coding: utf-8 -*-\n# vim:fenc=tf-8\n#\n\n\"\"\"\n\"\"\"\n\nfrom collections import defaultdict\nfrom collections import Counter\n\nimport sys\ninput = sys.stdin.readline\n\ndef solve(n, a):\n    m = max(a)\n    sa = set(a)\n    fill = [i for i in range(m,-1,-1) if i not in sa]\n    ans = []\n    a0 = 0\n    for aa in a:\n        if aa == a0:\n            if fill:\n                ans.append(fill.pop())\n            else:\n                ans.append(m+1)\n        if aa > a0:\n            if fill and fill[-1] == a0:\n                fill.pop()\n            if fill and fill[-1] < aa:\n                print(-1)\n                return 0\n            else:\n                ans.append(a0)\n                a0 = aa\n    print(\" \".join(map(str,ans)))\n\n\n\n\n\n\ndef main():\n    n = int(input())\n    a = list(map(int,input().split()))\n    solve(n, a)\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int MAXN = 3e5 + 5;\nint n, a[MAXN], b[MAXN];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", a + i);\n  for (int i = 2; i <= n; ++i) {\n    if (a[i] < a[i - 1]) {\n      puts(\"-1\");\n      return 0;\n    }\n  }\n  std::vector<int> S;\n  if (a[1] == 0)\n    S.push_back(1);\n  else if (a[1] == 1)\n    b[1] = 0;\n  else {\n    puts(\"-1\");\n    return 0;\n  }\n  for (int i = 2; i <= n; ++i) {\n    S.push_back(i);\n    if (a[i] == a[i - 1]) {\n      continue;\n    } else {\n      int d = a[i] - a[i - 1];\n      if ((int)S.size() < d) {\n        puts(\"-1\");\n        return 0;\n      }\n      for (int j = 0; j <= d - 1; ++j) {\n        b[S.back()] = a[i - 1] + j;\n        S.pop_back();\n      }\n    }\n  }\n  for (auto x : S) b[x] = 1e6 - 1;\n  for (int i = 1; i <= n; ++i) printf(\"%d \", b[i]);\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Problem1364c {\n    static int min = 0;\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        Stack<Integer> s = new Stack<>();\n        int[] a = new int[n];\n        int[] b = new int[n];\n        Arrays.fill(b, 1000000);\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        for (int i = 0; i < n; i++) {\n            s.push(i);\n            if (a[i] != min) {\n                while (min < a[i]) {\n                    b[s.pop()] = min;\n                    min++;\n                }\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.print(b[i] + \" \");\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\n\nimport java.math.BigInteger;\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Solution\n{\n    // Complete the maximumSum function below.\n    public static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n\n            while(isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    static boolean prime(long a){\n        if(a==2||a==3)\n            return true;\n        if((a-1)%6==0)\n            return true;\n        if((a+1)%6==0)\n            return true;\n        return false;\n    }\n    public static  long gcd(long a,long b){\n        if(b==0)\n            return a;\n        long r=a%b;\n        return gcd(b,r);\n    }\n\n    static long lcm(long a, long b)\n    {\n        return (a*b)/gcd(a, b);\n    }\n\n\n    public class ListNode {\n        int val;\n        ListNode next;\n        ListNode() {}\n        ListNode(int val) { this.val = val; }\n        ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n    }\n\n    public class TreeNode {\n        int val;\n        TreeNode left;\n        TreeNode right;\n        TreeNode() {}\n        TreeNode(int val) { this.val = val; }\n        TreeNode(int val, TreeNode left, TreeNode right) {\n            this.val = val;\n            this.left = left;\n            this.right = right;\n        }\n    }\n\n    class Node {\n        public int val;\n        public List<Node> children;\n\n        public Node() {}\n\n        public Node(int _val) {\n            val = _val;\n        }\n\n        public Node(int _val, List<Node> _children) {\n            val = _val;\n            children = _children;\n        }\n    }\n\n\n\n\n    // private static final FastReader scanner = new FastReader();\n    public static void main(String[] args) throws IOException {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader scanner = new InputReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n        int n=scanner.nextInt();\n        int ar[]=new int[n];\n        int br[]=new int[n];\n        Set<Integer> x=new HashSet<>();\n        for(int i=0;i<n;i++) {\n            ar[i] = scanner.nextInt();\n            br[i]=-1;\n            x.add(ar[i]);\n        }\n        int z=0;\n        ArrayList<Integer> t=new ArrayList<>();\n        while(z<=n){\n            if(!x.contains(z))\n                t.add(z);\n            z++;\n        }\n        int j=0;\n        br[0]=t.get(j++);\n        for(int i=1;i<n;i++){\n            if(ar[i]!=ar[i-1])\n                br[i]=ar[i-1];\n            else {\n                br[i]=t.get(j++);\n            }\n        }\n        for(int i=0;i<n;i++)\n            w.print(br[i]+\" \");\n        w.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "def solve(a):\n    n = len(a)\n    doable = True\n    for i in range(n):\n        if a[i]>i+1:\n            doable = False\n            break\n    if doable:\n        renegades = []\n        for i in range(1,n):\n            for el in range(a[i-1]+1, a[i]):\n                renegades.append(el)\n        renegades.reverse()\n        ans = [0 for i in range(n)]\n        if a[0]==1:\n            ans[0] = 0\n        else:\n            if len(renegades)>0:\n                ans[0] = renegades.pop()\n            else:\n                ans[0] = n+2\n        for i in range(1,n):\n            if a[i]==a[i-1]:\n                if len(renegades)>0:\n                    ans[i] = renegades.pop()\n                else:\n                    ans[i] = n+2\n            else:\n                ans[i] = a[i-1]\n        print(\" \".join([str(i) for i in ans]))\n    else:\n        print(-1)\nn = int(input())\na = [int(i) for i in input().split()]\nsolve(a)"
        },
        {
            "language": 3,
            "solution": "#t = int(input())\nt=1\nwhile t!=0:\n    t-=1 \n    n = int(input())\n    a = [int(x) for x in input().split()]\n    st = set()\n    b = [-1 for _ in range(n)]\n    for i in range(1, n):\n        if a[i]!=a[i-1]:\n            b[i] = a[i-1]\n            st.add(b[i])\n    st.add(a[-1])\n    m = 0\n    for i in range(n):\n        if b[i]==-1:\n            while m in st:\n                m+=1\n            b[i]=m \n            m+=1 \n    print(*b)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nflag = 1\nv = [False for i in range(100001)]\nfor i in range(n):\n    v[a[i]] = True\n    if a[i] > i + 1:\n        print(-1)\n        flag = 0\n        break\nif flag == 1:\n    b = [-1 for i in range(n)]\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            b[i] = a[i - 1]\n            v[a[i - 1]] = True\n    j = 0\n    # print(v)\n    # print(b)\n    for i in range(n):\n        if b[i] == -1:\n            while b[i] == -1 and j < 100001:\n                if v[j]:\n                    # print(j)\n                    j += 1\n                else:\n                    b[i] = j\n                    v[j] = True\n                    # print(j)\n\n    # print(v)\n    for i in b:\n        print(i, end=\" \")\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = list(  map(int, input().strip().split()     )          )\n\nb = [-1 for a in range(0, n)]\n\nfor i in range(0, n-1):\n\tif l[i] != l[i+1] :\n\t\tb[i+1] = l[i]\nt = set([j for j in range(0, 10**6+1)]) - set(l)\nt = list(t)\nt.sort()\n\n# print(t)\n\n\nc = 0\n\nfor i in range(0, n):\n\tif  b[i] == -1:\n\n\t\tb[i]=t[c]\n\t\tc += 1\nprint(\" \".join(str(e) for e in b))"
        },
        {
            "language": 4,
            "solution": "/*input\n4\n0 0 0 2\n\n\n*/\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Main\n{\n\tstatic PrintWriter out;\n\tstatic int MOD = 1000000007;\n\tstatic FastReader scan;\n\n    /*-------- I/O using short named function ---------*/\n\tpublic static String ns(){return scan.next();}\n\tpublic static int ni(){return scan.nextInt();}\n\tpublic static long nl(){return scan.nextLong();}\n\tpublic static double nd(){return scan.nextDouble();}\n\tpublic static String nln(){return scan.nextLine();}\n\tpublic static void p(Object o){out.print(o);}\n\tpublic static void ps(Object o){out.print(o + \" \");}\n\tpublic static void pn(Object o){out.println(o);}\n    /*-------- for output of an array ---------------------*/\n     static void iPA(int arr []){\n     \t StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void lPA(long arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void sPA(String arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void dPA(double arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n    /*-------------- for input in an array ---------------------*/\n\tstatic void iIA(int arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = ni();\n\t}\n\tstatic void lIA(long arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = nl(); \n\t}\n\tstatic void sIA(String arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = ns(); \n\t}\n\tstatic void dIA(double arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = nd();\n\t}\n\t/*------------ for taking input faster ----------------*/\n     static class FastReader\n\t{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader()\n\t\t{\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next()\n\t\t{\n\t\t\twhile (st == null || !st.hasMoreElements())\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt()\n\t\t{\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong()\n\t\t{\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble()\n\t\t{\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine()\n\t\t{\n\t\t\tString str = \"\";\n\t\t\ttry\n\t\t\t{\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\t// Method to check if x is power of 2\n    static boolean isPowerOfTwo (int x) { return x!=0 && ((x&(x-1)) == 0);}\n    //Method to return lcm of two numbers\n    static int gcd(int a, int b){return a==0?b:gcd(b % a, a); }\n    //Method to count digit of a number\n    static int countDigit(long n){return (int)Math.floor(Math.log10(n) + 1);}\n\n    //Method for sorting\n\tstatic void ruffle_sort(int[] a) {\n\t\t//shandom_ruffle\n\t\tRandom r=new Random();\n\t\tint n=a.length;\n\t\tfor (int i=0; i<n; i++) {\n\t\t\tint oi=r.nextInt(n);\n\t\t\tint temp=a[i];\n\t\t\ta[i]=a[oi];\n\t\t\ta[oi]=temp;\n\t\t}\n\t\t//sort\n\t\tArrays.sort(a);\n\t}\n\t//Method for checking if a number is prime or not\n\tstatic boolean isPrime(int n) { \n        if (n <= 1) return false; \n        if (n <= 3) return true; \n        if (n % 2 == 0 || n % 3 == 0) return false; \n        for (int i = 5; i * i <= n; i = i + 6) \n            if (n % i == 0 || n % (i + 2) == 0) \n            return false; \n        return true; \n    } \n\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tOutputStream outputStream =System.out;\n        out =new PrintWriter(outputStream);\n        scan =new FastReader();\n\t\t//for fast output sometimes\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint n = ni();\n\t\tint a[] = new int[n];\n\t\tiIA(a);\n\t\tboolean check = true;\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(a[i]>(i+1)){\n\t\t\t\tcheck = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!check)\n\t\t\tpn(-1);\n\t\telse{\n\t\t\tint b[] = new int[n];\n\t\t\tArrays.fill(b, -1);\n\t\t\t\n\t\t\tboolean arr[] = new boolean[100005];\n\t\t\t\n\t\t\tfor(int i=1; i<n; i++){\n\t\t\t\tif(a[i]!=a[i-1]){\n\t\t\t\t\tb[i]=a[i-1];\n\t\t\t\t\tarr[b[i]]=true;\n\t\t\t\t\tarr[b[i]] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr[a[n-1]] = true;\n\t\t\tint m=0;\n\t\t\t\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\t\twhile(arr[m]){\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t\tif(b[i]==-1){\n\t\t\t\t\t\tarr[m] = true;\n\t\t\t\t\t\tb[i] = m;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tiPA(b);\n\t\t}\n        out.flush();\n\t\tout.close();\n\t}\n\t\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import math as ma\n# import sys\n# input=sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\ne=0\nfor i in range(n):\n    if a[i]-i-1>0:\n        e=1\n        print(-1)\n        break\nif e==0:\n    b=[-1]*n\n    for i in range(n-1):\n        if a[i]!=a[i+1]:\n            b[i+1]=a[i]\n    c=set(a)\n    d=[]\n    for i in range(2*(10**5)):\n        if i not in c:\n            d.append(i)\n    j=0\n    for i in range(n):\n        if b[i]==-1:\n            b[i]=d[j]\n            j+=1\n    print(*b)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[-1]*n\nf=0\nc=[0]*(n+1)\nfor i in range(n):\n    if i==0:\n        c[a[i]]=1\n    else:\n        if a[i]>i+1:\n            f=1\n            break\n        c[a[i]]=1\n        if a[i]!=a[i-1]:\n            b[i]=a[i-1]\n#print(b)\nif f:\n    print(-1)\nelse:\n    #print(c)\n    x=0\n    for i in range(n):\n        if b[i]==-1:\n            while(c[x%(n+1)]):\n                #print(x)\n                x=(x+1)%(n+1)\n                #print(x)\n            c[x%(n+1)]=1\n            b[i]=x\n    print(*b)"
        },
        {
            "language": 4,
            "solution": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.PriorityQueue;\n\npublic class Main{\n\tstatic class Reader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\n\t\tpublic Reader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic Reader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[64]; // line length\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n\t}\n\tpublic static void main(String[] args) throws IOException {\n\t\tReader scan = new Reader();\n\t\tPrintWriter out = new PrintWriter(System.out, true);\n\t\tint n = scan.nextInt();\n\t\tint arr[]=new int[n];\n\t\tHashMap<Integer, Integer> h = new HashMap<Integer, Integer>();\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tarr[i]=scan.nextInt();\n\t\t\th.put(arr[i],h.getOrDefault(arr[i], 0)+1);\n\t\t}\n\t\tint curr = 0;\n\t\tHashSet<Integer>covered = new HashSet<Integer>();\n\t\tPriorityQueue<Integer> rem = new PriorityQueue<Integer>();\n\t\tint ans[]=new int[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif((!rem.isEmpty())&&(rem.peek()<arr[i]))\n\t\t\t{\n\t\t\t\tans[i]=rem.remove();\n\t\t\t\tcovered.remove(ans[i]);\n\t\t\t\tif((!rem.isEmpty())&&(rem.peek()<arr[i]))\n\t\t\t\t{\n\t\t\t\t\tout.println(\"-1\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\twhile(h.containsKey(curr))\n\t\t\t\t{\n\t\t\t\t\tif(!covered.contains(curr))\n\t\t\t\t\t\t{\n\t\t\t\t\t\trem.add(curr);\n\t\t\t\t\t\tcovered.add(curr);\n\t\t\t\t\t\t}\n\t\t\t\t\tcurr++;\n\t\t\t\t}\n\t\t\t\tans[i]=curr;\n\t\t\t\tcurr++;\n\t\t\t\tif(arr[i]<curr)\n\t\t\t\t{\n\t\t\t\t\tif(!covered.contains(arr[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\trem.add(arr[i]);\n\t\t\t\t\t\tcovered.add(curr);\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint x = h.get(arr[i])-1;\n\t\t\tif(x==0)\n\t\t\t\th.remove(arr[i]);\n\t\t\telse\n\t\t\t\th.put(arr[i], x);\n//\t\t\tSystem.out.println(ans[i]+\" \"+rem);\n\t\t}\n\t\tfor(int i : ans)\n\t\t\tout.print(i+\" \");\n\t\tout.println(\"\");\n\t}\n\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = [int(x) for x in input().split()]\nstack = []\nans = [-1]*n\nfor i in range(n-1,0,-1):\n    if nums[i]>i+1:\n        print(-1)\n        break\n    if nums[i]==nums[i-1]:\n        if len(stack)>0:\n            ans[i]=stack.pop()\n        else:\n            ans[i]=1000000\n    else:\n        ans[i]=nums[i-1]\n        delta = nums[i]-nums[i-1]\n        start = nums[i-1]+1\n        for j in range(delta-1):\n            stack.append(start)\n            start+=1\n        \n\nif nums[0]==0:\n    if len(stack)>0:\n        ans[0]=stack.pop()\n    else:\n        ans[0]=1000000\nelif nums[0]==1:\n    ans[0]=0\n\nfor i in range(n):\n    print(ans[i],end=\" \")\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nb = set(a)\nk,t = 0,0\nnot_in_set = []\nfor j in range(1,n+1):\n    if j not in b:\n        not_in_set.append(j)\nfor i in range(n):\n    if a[i]>i+1:\n        print(-1)\n        break\n    elif a[i]!=k:\n        print(k,end=' ')\n        k = a[i]\n    else:\n        print(not_in_set[t],end=' ')\n        t+=1\n    \n    "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.math.*;\n\npublic class C {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        int n = Integer.parseInt(bf.readLine());\n        int[] arr = new int[n];\n        StringTokenizer st = new StringTokenizer(bf.readLine());\n        for (int i = 0; i < n; i++) {\n            arr[i] = Integer.parseInt(st.nextToken());\n        }\n        int[] result = new int[n];\n        LinkedList<Integer> required = new LinkedList<Integer>();\n        int unused = arr[n-1] + 1;\n        for (int i = n - 1; i > 0; i--) {\n            if (arr[i] > arr[i-1]) {\n                result[i] = arr[i-1];\n                for (int j = arr[i-1] + 1; j < arr[i]; j++) {\n                    required.add(j);\n                }\n            } else {\n                if (required.size() == 0) {\n                    result[i] = unused;\n                } else {\n                    result[i] = required.pop();\n                }\n            }\n        }\n        if (arr[0] == 0) {\n            if (required.size() == 0) {\n                result[0] = unused;\n            } else {\n                result[0] = required.pop();\n            }\n        } else {\n            result[0] = 0;\n        }\n        StringBuilder sb = new StringBuilder();\n        sb.append(result[0]);\n        for (int i = 1; i < n; i++) {\n            sb.append(' ');\n            sb.append(result[i]);\n        }\n        out.println(sb.toString());\n        out.close();\n        System.exit(0);\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int t;\n  t = 1;\n  while (t--) {\n    long long int n, i, j, k, m, x, y, flag = -1;\n    cin >> n;\n    k = 1000000;\n    long long int a[n], b[n];\n    x = 0;\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    for (i = 0; i < n; i++) {\n      if (flag > a[i] - 2)\n        b[i] = k;\n      else if (flag == a[i] - 2) {\n        flag++;\n        b[i] = flag;\n      } else {\n        b[i] = k;\n        j = i;\n        while (flag < a[i] - 1) {\n          if (b[j] == k) {\n            flag++;\n            b[j] = flag;\n          }\n          j--;\n        }\n      }\n    }\n    for (i = 0; i < n; i++) cout << b[i] << \" \";\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = list(map(int,input().split()))\n    stack = list()\n    for i in range(n,s[-1],-1):\n        stack.append(i)\n    for i in range(len(s)-1,0,-1):\n        if(s[i]==s[i-1]):\n            continue\n        else:\n            for j in range(s[i]-1,s[i-1],-1):\n                stack.append(j)\n    fin_list = list()\n    if(s[0]==1):\n        stack.append(0)                 \n    for i in range(len(s)-1):\n        if(s[i]!=s[i+1]):\n            curr_val = stack.pop(-1)\n            fin_list.append(curr_val)\n            stack.append(s[i])\n        else:\n            curr_val = stack.pop(-1)\n            fin_list.append(curr_val)\n    curr_val = stack.pop(-1)\n    fin_list.append(curr_val)\n    print (*fin_list)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class tt_1364C {\n\n    public static void main(String[] args){\n\n        Scanner sc = new Scanner(System.in);\n\n        int n = sc.nextInt();\n        int[] arr = new int[n];\n        StringBuilder sb = new StringBuilder();\n        for(int i=0; i<n; i++){\n            arr[i] = sc.nextInt();\n        }\n        int[] res = new int[n];\n        Deque<Integer> largerElements = new ArrayDeque<>(n);\n        Deque<Integer> smallerElements = new ArrayDeque<>(n);\n        for(int i=0; i<arr[n-1]; i++){\n            smallerElements.addFirst(i);\n        }\n        for(int i=n-1; i>=1; i--){\n            if(arr[i] != arr[i-1]){\n                while(smallerElements.peek()>arr[i-1]){\n                    largerElements.addLast(smallerElements.removeFirst());\n                }\n                res[i] = smallerElements.removeFirst();\n                //sb.append(smallerElements.removeFirst()+\" \");\n            }\n            else {\n                if(largerElements.size()!=0){\n                    res[i] = largerElements.removeFirst();\n                    //sb.append(largerElements.removeFirst()+\" \");\n                }\n                else {\n                    res[i] = arr[n-1]+1;\n                    //sb.append((arr[n-1]+1)+\" \");\n                }\n            }\n        }\n        if(largerElements.size()+smallerElements.size()<=1){\n            int x = 0;\n            if(largerElements.size()==1){\n                x+=largerElements.remove();\n            }\n            else if(smallerElements.size()==1){\n                x+=smallerElements.remove();\n            }\n            else {\n                x+=(arr[n-1]+1);\n            }\n            res[0] = x;\n            sb.append(x+\" \");\n            StringBuilder ss = new StringBuilder();\n            for(int i=0; i<n; i++){\n                ss.append(res[i]+\" \");\n            }\n            System.out.println(ss.toString());\n        }\n        else {\n            System.out.println(-1);\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfrom collections import deque\nfrom sys import stdin\nfrom bisect import *\nfrom heapq import *\nimport math\n\ng   = lambda : stdin.readline().strip()\ngl  = lambda : g().split()\ngil = lambda : [int(var) for var in gl()]\ngfl = lambda : [float(var) for var in gl()]\ngcl = lambda : list(g())\ngbs = lambda : [int(var) for var in g()]\nmod = int(1e9)+7\ninf = float(\"inf\")\n\nn, = gil()\na = gil()\n\nflag = True\nused = set([a[0]])\nfor i in range(1, n):\n\tused.add(a[i])\n\tif (i and a[i] < a[i-1]) or (a[i] > i+1): flag = False\n \nif flag :\n\th = []\n\tfor i in range(int(1e6)+1):\n\t\tif i not in used : h.append(i)\n\tb = []\n\theapify(h)\n\ta.append(1)\n\tfor i in range(n):\n\t\tb.append(heappop(h) if h else b[-1])\n\t\tif a[i]!=a[i+1]:heappush(h, a[i])\n\tprint(*b)\nelse:\n\tprint(-1)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint Read() {\n  int val = 0, opt = 1;\n  char ch;\n  while (!isdigit(ch = getchar()))\n    if (ch == '-') opt = -1;\n  while (isdigit(ch)) (val *= 10) += ch - '0', ch = getchar();\n  return val * opt;\n}\nint a[100100], n, Vis[100100];\nvoid work() {\n  n = Read();\n  for (int i = 1; i <= n; i++) {\n    a[i] = Read();\n    if (a[i] > i || a[i] < a[i - 1]) {\n      printf(\"-1\\n\");\n      return;\n    }\n    Vis[a[i]] = 1;\n  }\n  int t = 0;\n  while (Vis[t]) t++;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] != a[i - 1]) {\n      printf(\"%d \", a[i - 1]);\n      Vis[a[i - 1]] = 1;\n    } else {\n      while (Vis[t]) t++;\n      printf(\"%d \", t);\n      t++;\n      while (Vis[t]) t++;\n    }\n  }\n}\nint main(void) {\n  work();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, a;\n  cin >> n;\n  vector<long long> v;\n  vector<long long> hash(2 * n, 0);\n  for (long long i = 0; i < n; i++) {\n    cin >> a;\n    v.push_back(a);\n    hash[a] = 1;\n  }\n  vector<long long> vec(n, -1);\n  for (int i = 1; i < n; i++) {\n    if (v[i] != v[i - 1]) vec[i] = v[i - 1];\n  }\n  int j = 0;\n  for (int i = 0; i < n; i++) {\n    if (vec[i] == -1) {\n      while (hash[j] == 1) j++;\n      vec[i] = j;\n      j++;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cout << vec[i] << \" \";\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\nn, = rl()\na = rl()\n\na_set = set(a)\nfree = 0\nprev = 0\nb = []\nfor cur in a:\n    if cur != prev:\n        b.append(prev)\n        if free == prev:\n            free += 1\n        prev = cur\n    else:\n        while free in a_set:\n            free += 1\n        b.append(free)\n        free += 1\nprint(*b)\n"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import defaultdict, Counter, deque\n\nINF = float('inf')\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a%b\n\treturn a\n\n\ndef primeFactor(n):\n\tif n % 2 == 0:\n\t\treturn 2\n\ti = 3\n\twhile (i ** 2) <= n:\n\t\tif n % i == 0:\n\t\t\treturn i \n\t\ti += 1\n\treturn n\n\ndef main():\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\n\tans = [0 for i in range(n)]\n\tsmallest = []\n\ts = 0\n\twhile s < arr[0]:\n\t\tsmallest.append(s)\n\t\ts += 1\n\ts = arr[0] + 1\n\tif n == 1:\n\t\tsmallest.append(s)\n\tfor i in range(1, n):\n\t\twhile s < arr[i]:\n\t\t\tsmallest.append(s)\n\t\t\ts += 1\n\t\ts = arr[i] + 1\n\t\tif i == n - 1:\n\t\t\tsmallest.append(s)\n\tj = 0\n\t\n\tfor i in range(n):\n\t\tif arr[i] > arr[i-1]:\n\t\t\tans[i] = arr[i - 1]\n\t\telse:\n\t\t\tif j < len(smallest):\n\t\t\t\tans[i] = smallest[j]\n\t\t\t\tlast = smallest[j]\n\t\t\t\t# last += 1\n\t\t\telse:\n\t\t\t\tans[i] = last\n\t\t\t\tlast += 1\n\t\t\tj += 1\n\n\tprint(*ans)\n\t# print(smallest)\nif __name__ == \"__main__\":\n\t# t = int(input())\n\tt = 1\n\tfor _ in range(t):\n\t\tmain()\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long factorial(long long n) {\n  return (n == 1 || n == 0) ? 1 : n * factorial(n - 1);\n}\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }\nbool sortByVal(const pair<long long, long long> &a,\n               const pair<long long, long long> &b) {\n  if (a.first == b.first)\n    return a.second < b.second;\n  else\n    return a.first > b.first;\n}\nlong long Powb(long long b, long long n) {\n  if (n == 0) return 1LL;\n  if (n == 1) return b;\n  long long temp = Powb(b, n / 2);\n  if (n % 2 == 0) {\n    return (temp * temp) % 1000000007LL;\n  } else {\n    return (b * ((temp * temp) % 1000000007LL)) % 1000000007LL;\n  }\n}\nlong long root(vector<long long> &a, long long i) {\n  while (a[i] != i) {\n    a[i] = a[a[i]];\n    i = a[i];\n  }\n  return i;\n}\nvoid wunion(vector<long long> &a, vector<long long> &size, long long i,\n            long long j) {\n  long long root_i = root(a, i);\n  long long root_j = root(a, j);\n  if (root_i == root_j) return;\n  if (size[root_i] < size[root_j]) {\n    a[root_i] = a[root_j];\n    size[root_j] += size[root_i];\n    size[root_i] = 0;\n  } else {\n    a[root_j] = a[root_i];\n    size[root_i] += size[root_j];\n    size[root_j] = 0;\n  }\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t = 1;\n  while (t--) {\n    long long i, j, m, n, k, sum = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0,\n                             maxi = 0;\n    cin >> n;\n    vector<long long> a(n), b(n);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    };\n    b = a;\n    sort(b.begin(), b.end());\n    if (b != a)\n      cout << -1 << \"\\n\";\n    else {\n      b.clear();\n      for (i = 0; i < n; i++) {\n        b[i] = i + 1;\n        if (a[i] > b[i]) {\n          f = 1000000007LL;\n          break;\n        }\n      }\n      if (f == 1000000007LL)\n        cout << -1 << \"\\n\";\n      else {\n        for (i = 0; i < n; i++) b[i] = i;\n        vector<bool> vis(1000005, false);\n        for (i = 0; i < n; i++) {\n          vis[a[i]] = true;\n        }\n        priority_queue<long long, vector<long long>, greater<long long> > q;\n        d = *max_element(a.begin(), a.end());\n        for (i = 0; i < 100005; i++) {\n          if (vis[i] == false) q.push(i);\n        }\n        for (i = 0; i < n; i++) {\n          set<long long> p;\n          while (true) {\n            c = q.top();\n            q.pop();\n            if (c < a[i] || c > a[i]) {\n              cout << c << \" \";\n              q.push(a[i]);\n              break;\n            } else {\n              p.insert(c);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class C_1364 {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\t\n\t\tint n = sc.nextInt();\n\t\tint[] array = sc.nextIntArray(n);\n\t\t\n\t\tboolean flag = true;\n\t\t\n\t\tint init = 0;\n\t\tint s = 0;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tif(array[i] == init) {\n\t\t\t\ts++;\n\t\t\t} else {\n\t\t\t\ts -= Math.max(0, array[i] - init - 1);\n\t\t\t}\n\t\t\tif(s < 0) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tinit = array[i];\n\t\t}\n\t\t\n\t\tif(!flag) {\n\t\t\tpw.println(-1);\n\t\t} else {\n\t\t\tint max = 0;\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\tmax = Math.max(max, array[i]);\n\t\t\tint[] ans = new int[n];\n\t\t\tArrays.fill(ans, -1);\n\t\t\tTreeSet<Integer> set = new TreeSet<>();\n\t\t\tfor(int i = 0; i < max; i++)\n\t\t\t\tset.add(i);\n\t\t\tinit = 0;\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tif(array[i] != init) {\n\t\t\t\t\tans[i] = init;\n\t\t\t\t\tset.remove(init);\n\t\t\t\t}\n\t\t\t\tinit = array[i];\n\t\t\t}\n\t\t\t\n\t\t\tint comp = set.size() == 0 ? (int)1e6 : set.last();\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tif(ans[i] == -1)\n\t\t\t\t\tif(set.size() > 0)\n\t\t\t\t\t\tans[i] = set.pollFirst();\n\t\t\t\t\telse\n\t\t\t\t\t\tans[i] = comp;\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\tpw.print(ans[i] + \" \");\n\t\t\tpw.print(\"\\n\");\n\t\t\t\n\t\t}\n\t\t\n\t\tpw.flush();\n\t}\n\n\tpublic static class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic Integer[] nextIntegerArray(int n) throws IOException {\n\t\t\tInteger[] array = new Integer[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = new Integer(nextInt());\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) throws IOException {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic static int[] shuffle(int[] a) {\n\t\t\tint n = a.length;\n\t\t\tRandom rand = new Random();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint tmpIdx = rand.nextInt(n);\n\t\t\t\tint tmp = a[i];\n\t\t\t\ta[i] = a[tmpIdx];\n\t\t\t\ta[tmpIdx] = tmp;\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import bisect\nn = int(input())\na = list(map(int, input().split()))\ns = set()\nb = [0]*n\nm = 0\ns = set()\nfor i in range(n-1, -1, -1):\n    if i == 0:\n        if a[i] == 1:\n            b[i] = 0\n        else:\n            if len(s) > 0:\n                b[i] = s.pop()\n            else:\n                b[i] = n + 1\n    else:\n        if a[i] != a[i-1]:\n            b[i] = a[i-1]\n            for x in range(a[i-1]+1, a[i]):\n                s.add(x)\n        else:\n            if len(s) > 0:\n                b[i] = s.pop()\n            else:\n                b[i] = n + 1\n\n# T = set()\n\n\n# def checker(A, B):\n#     s = set()\n#     n = len(A)\n#     print(*A)\n#     print(*B)\n#     for i in range(n):\n#         s.add(b[i])\n#         k = n+1\n#         for j in range(n+1):\n#             if j in s:\n#                 continue\n#             else:\n#                 k = j\n#                 break\n#         if k != a[i]:\n#             return(False)\n#     return(True)\n\n\nprint(*b)\n\n\n# print(checker(a, b))\n"
        },
        {
            "language": 3,
            "solution": "import heapq\nimport collections\nn = int(input())\na = list(map(int, input().split()))\nctr = collections.Counter(a)\n\nQ = [i for i in range(10**6+1) if ctr.get(i) == None]\nheapq.heapify(Q)\n\nb = []\nctr = sorted(ctr.items())\nfor i in range(n):\n    b.append(heapq.heappop(Q))\n    k, v = ctr[0]\n    if a[i] == k:\n        v -= 1\n        if v == 0:\n            heapq.heappush(Q, k)\n            ctr.pop(0)\n        else:\n            ctr[0] = (k, v)\n    else:\n        print(-1)\n        break\nelse:\n    print(' '.join(map(str, b)))"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.TreeSet;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        CEhabAndPrefixMEXs solver = new CEhabAndPrefixMEXs();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CEhabAndPrefixMEXs {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            int[] arr = in.nextIntArray(n);\n            int[] ans = new int[n];\n            int last = 0;\n            HashSet<Integer> set1 = new HashSet<>();\n            for (int a : arr) set1.add(a);\n            TreeSet<Integer> set = new TreeSet<>();\n            for (int i = 0; i <= 1000000; i++) set.add(i);\n            for (int i = 0; i < n; i++) {\n                if (set.isEmpty()) {\n                    out.println(-1);\n                    return;\n                }\n                if (set.first() > arr[i]) {\n                    out.println(-1);\n                    return;\n                }\n                if (set.lower(arr[i]) == null && set.higher(arr[i]) == null) {\n                    out.println(-1);\n                    return;\n                }\n                int a = (set.lower(arr[i]) == null ? set.higher(arr[i]) : set.lower(arr[i]));\n                if (!set1.contains(a)) {\n                    ans[i] = a;\n                    set.remove(a);\n                } else {\n                    last = Math.max(a, last + 1);\n\n                    while (set1.contains(last)) {\n                        if (set.higher(last) == null) {\n                            out.println(-1);\n                            return;\n                        }\n                        a = set.higher(last);\n                        last = a;\n                    }\n\n                    ans[i] = last;\n                    set.remove(last);\n                }\n\n                if (set.lower(arr[i]) != null) {\n                    out.println(-1);\n                }\n                set1.remove(arr[i]);\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class InputReader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; ++i) array[i] = nextInt();\n            return array;\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(int[] array) {\n            for (int i = 0; i < array.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(array[i]);\n            }\n        }\n\n        public void println(int[] array) {\n            print(array);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void println(int i) {\n            writer.println(i);\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nr=[]\ns1=set(a)\ns2=set([int(x) for x in range(n+2)])\ns3=s2.difference(s1)\nr=list(s3)\nr.sort()\nl.append(r[0])\nr.remove(r[0])\nfor i in range(1,n):\n    if a[i-1]!=a[i]:\n        l.append(a[i-1])\n    else:\n        l.append(r[0])\n        r.remove(r[0])\nprint(*l)\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [0] + [int(item) for item in input().split()]\nans = [-1] * n\nused = set()\nfor i, (a1, a2) in enumerate(zip(a, a[1:])):\n    if a1 < a2:\n        ans[i] = a1\n        used.add(a1)\nval = a[-1] - 1\nmax_val = max(a) + 1\nto_use = []\nfor i in range(n-1, -1, -1):\n    if ans[i] != -1:\n        continue\n    while val in used:\n        val -= 1\n    if val >= 0:\n        to_use.append(val)\n        used.add(val)\nto_use.sort()\nitr = 0\nfor i, item in enumerate(ans):\n    if item == -1:\n        if itr < len(to_use):\n            ans[i] = to_use[itr]\n            itr += 1\n        else:\n            ans[i] = max_val\n\nwhile val in used:\n    val -= 1\nprint(\" \".join([str(item) for item in ans]))"
        },
        {
            "language": 3,
            "solution": "import sys, math\ninput = sys.stdin.readline\n\ndef getInts():\n    return [int(s) for s in input().split()]\n\ndef getInt():\n    return int(input())\n\ndef getStrs():\n    return [s for s in input().split()]\n\ndef getStr():\n    return input().strip()\n\ndef listStr():\n    return list(input().strip())\n\nimport collections as col\nimport math,itertools\n\n\"\"\"\nWe need mex(b1) = a1\nIf a0 is 0, b0 can be anything greater than 0\nIf a0 is 1, b0 must be 0\nIf a0 > 1, impossible\n\nMore generally, if a(i-1) > i, impossible (since we would have to have at least 0 to i inclusive in only i spaces)\n\na0 must not be anything that appears later in the array, so if a0 is 1, then b0 = 0, which means that 0 cannot appear later\nThere is no point in using an element more than once\nSo, have a dictionary of elements we need to avoid, with their rightmost index as the value\nMaintain a sorted list of numbers we can use\nIf we exhaust these elements, we can add anything into B that isn't in the banned list, so 10**6-1 works\n\"\"\"\n\ndef solve():\n    N = getInt()\n    A = getInts()\n    B = []\n    A_dict = {}\n    for j in range(N):\n        A_dict[A[j]] = j\n    allowed_nums = [j for j in range(3*N//2,-1,-1) if j not in A_dict]\n    for j in range(N):\n        if A[j] > j+1:\n            return -1\n        B.append(allowed_nums.pop())\n        #else:\n         #   B.append(10**6-1)\n        if A_dict[A[j]] == j:\n            allowed_nums.append(A[j])\n    \n    print(*B)\n        \n    \nsolve()\n    \n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    private static final Parser parser = new Parser();\n    private static final Integer MAX_V = 1_000_000;\n\n    public static void main(String[] args) {\n        int n = parser.parseInt();\n\n        int[] a = new int[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = parser.parseInt();\n        }\n\n        int[] b = new int[n];\n        Arrays.fill(b, MAX_V);\n\n        for(int i = 1; i < n; i++) {\n            if(a[i - 1] != a[i]) {\n                b[i] = a[i - 1];\n            }\n        }\n\n        Set<Integer> used = new HashSet<>();\n        for(int i = 0; i < n; i++) {\n            used.add(b[i]);\n        }\n\n        StringBuilder sb = new StringBuilder();\n        int curr = 0;\n        for(int i = 0; i < n; i++) {\n            while (used.contains(curr)) {\n                curr += 1;\n            }\n\n            if (b[i] != MAX_V) {\n                continue;\n            }\n\n            b[i] = curr;\n            if(b[i] > a[n - 1] - 1){\n                b[i] = MAX_V;\n            }\n\n            used.add(curr);\n        }\n\n        curr = 0;\n        used.clear();\n        for(int i = 0; i < n; i++) {\n            used.add(b[i]);\n\n            while (used.contains(curr)) {\n                curr += 1;\n            }\n\n            if(b[i] < 0 || curr != a[i]) {\n                System.out.println(-1);\n                return;\n            }\n        }\n\n        for(int i = 0; i < n; i++) {\n            sb.append(b[i]);\n            sb.append(' ');\n        }\n\n        System.out.println(sb.toString());\n    }\n}\n\nclass Parser {\n    private static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    private static final Iterator<String> stringIterator = br.lines().iterator();\n    private static final Deque<String> inputs = new ArrayDeque<>();\n\n    void fill() {\n        if(inputs.isEmpty()){\n            if(!stringIterator.hasNext()) throw new NoSuchElementException();\n            inputs.addAll(Arrays.asList(stringIterator.next().split(\" \")));\n        }\n    }\n\n    Integer parseInt() {\n        fill();\n        if(!inputs.isEmpty()) {\n            return Integer.parseInt(inputs.pollFirst());\n        }\n        throw new NoSuchElementException();\n    }\n\n    Long parseLong() {\n        fill();\n        if(!inputs.isEmpty()) {\n            return Long.parseLong(inputs.pollFirst());\n        }\n        throw new NoSuchElementException();\n    }\n\n    Double parseDouble() {\n        fill();\n        if(!inputs.isEmpty()) {\n            return Double.parseDouble(inputs.pollFirst());\n        }\n        throw new NoSuchElementException();\n    }\n\n    String parseString() {\n        fill();\n        return inputs.removeFirst();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush\nfrom math import *\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\n# import numpy as np\nsys.setrecursionlimit(int(pow(10,6)))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"out.txt\", \"w\")\nmod = int(pow(10, 9) + 7)\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var))+end)\ndef L(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return map(int, data().split())\ndef ssp(): return map(str, data().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n# @lru_cache(None)\nt=1\n# t=int(input())\nfor _ in range(t):\n    n=L()[0]\n    l=L()\n    b=[-1]*n\n    vis=[0]*(n+1)\n    k=0;vis[l[-1]]=1\n    for i in range(n-1,0,-1):\n        if l[i]!=l[i-1]:\n            b[i]=l[i-1]\n            vis[l[i-1]]=1\n    for i in range(n):\n        if b[i]==-1:\n            while vis[k]==1:\n                k+=1\n            b[i]=k;k+=1\n    print(*b)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main {\npublic static void main(String[] args) {\nScanner sc=new Scanner(System.in);\n\n\nint n=sc.nextInt();\nint a[]=new int[n];\nint b[]=new int[n];\nArrays.fill(b,-1);\nint c[]=new int[1000001];\nArrays.fill(c,0);\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ta[i]=sc.nextInt();\n\t\n\t\t\tif(i>0 && a[i]!=a[i-1])\n\t\t\t{\n\t\t\t\tb[i]=a[i-1];\n\t\t\t\tc[a[i-1]]=1;\n\t\t\t}\n\t\t}\n\t\tc[a[n-1]]=1;\n\t\tint ans=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(b[i]==-1)\n\t\t\t{\n\t\t\t\twhile(c[ans]!=0) \n\t\t\t\tans++;\n\t\t\t\tb[i]=ans;\n\t\t\t\tc[ans]=1;\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=0;i<n;++i)\n        System.out.print(b[i]+\" \");\n\t\tSystem.out.println();\n\t\t\n\t\n\t\n}\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\nn=int(input())\n*a,=map(int,input().split())\ninA=[0]*(n+5)\nfor x in a:\n\tinA[x]+=1\nkeep=[0]\nma=0\nans=[]\nfor i in range(n):\n\tif keep and not inA[keep[0]]:\n\t\tans.append(keep.pop(0))\n\telse:\n\t\tma+=1\n\t\twhile inA[ma]:\n\t\t\tkeep.append(ma)\n\t\t\tma+=1\n\t\tans.append(ma)\n\tif ma+1<a[i]:\n\t\tprint(-1)\n\t\texit()\n\tinA[a[i]]-=1\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "def f(n,l):\n    if l[0] > 1:\n        return -1\n    skipped = []\n    output = ['-'] * n\n    lowestpossible = 0\n    highestpossible = l[-1]\n    for i in range(n):\n        if l[i] > lowestpossible:\n            output[i] = lowestpossible\n            skipped += list(range(lowestpossible+1,l[i]))\n            lowestpossible = l[i]\n    for i in range(n):\n        if output[i] == '-':\n            if len(skipped) == 0:\n                output[i] = highestpossible + 1\n            else:\n                output[i] = skipped.pop(0)\n    return ' '.join([str(t) for t in output])\n              \nn = int(input())\nl = [int(t) for t in input().split()]\nprint(f(n,l))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nd={}\nl1=[0]*(10**5+1)\ncnt=0\nl3=[]\nfor i in l:\n    if i not in d:\n        d[i]=0\nfor i in range(len(l1)):\n    if i in d:\n        continue\n    else:\n        l1[i]=1\nl2=[]\nfor i in range(len(l1)):\n    if l1[i]!=0:\n        l2.append(i)\n    else:\n        l3.append(i)\nj,z=0,0\nl4=[]\nfor i in range(len(l)):\n    if l[i]>l3[j]:\n        l4.append(l3[j])\n        j+=1\n    else:\n        l4.append(l2[z])\n        z+=1\nprint(*l4)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.util.*;\n\nimport static sun.swing.MenuItemLayoutHelper.*;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Manan Patel\n */\npublic class Main{\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n        Solution solver = new Solution();\n        //int testCount = Integer.parseInt(in.next());\n        //for (int i = 1; i <= testCount; i++)\n            solver.solve(1 , in, w);\n        w.close();\n    }\n\n    static class Solution {\n        public void solve(int tc, InputReader sc, PrintWriter w) {\n            int n = sc.nextInt();\n            int a[] = new int[n + 1];\n            boolean vis[] = new boolean[n + 1];\n            for (int i = 1 ; i <= n ; i++){\n                a[i] = sc.nextInt();\n                vis[a[i]] = true;\n            }\n            ArrayList<Integer> remaining = new ArrayList<>();\n            for (int i = 1 ; i <= n ; i++){\n                if (!vis[i])\n                    remaining.add(i);\n            }\n            int res[] = new int[n + 1] , idx = 0;\n            for (int i = 1 ; i <= n ; i++){\n                if (a[i] == a[i - 1]){\n                    res[i] = remaining.get(idx++);\n                }\n                else\n                    res[i] = a[i - 1];\n            }\n            for (int i = 1 ; i <= n ; i++)\n                w.print(res[i] + \" \");\n            w.println();\n        }\n    }\n    static class f{\n        public static long max(long a[]){\n            long ans = Long.MIN_VALUE;\n            for (long i : a)\n                ans = Math.max(ans , i);\n            return ans;\n        }\n        public static long power(long x, int y){\n            long res = 1;\n            while (y > 0)\n            {\n                if ((y & 1) == 1)\n                    res = (res*x);\n                y = y >> 1;\n                x = x * x;\n            }\n            return res;\n        }\n        public static long powerm(long x, long y, long p) {\n            long res = 1;\n            x %= p;\n            while (y > 0) {\n                if ((y & 1) == 1) {\n                    res *= x;\n                    res %= p;\n                }\n                y >>= 1;\n                x *= x;\n                x %= p;\n            }\n            return res;\n        }\n        public static void sort(int[] arr) {\n            int n = arr.length, mid, h, s, l, i, j, k;\n            int[] res = new int[n];\n            for (s = 1; s < n; s <<= 1) {\n                for (l = 0; l < n - 1; l += (s << 1)) {\n                    h = Math.min(l + (s << 1) - 1, n - 1);\n                    mid = Math.min(l + s - 1, n - 1);\n                    i = l;\n                    j = mid + 1;\n                    k = l;\n                    while (i <= mid && j <= h)\n                        res[k++] = (arr[i] <= arr[j] ? arr[i++] : arr[j++]);\n                    while (i <= mid)\n                        res[k++] = arr[i++];\n                    while (j <= h)\n                        res[k++] = arr[j++];\n                    for (k = l; k <= h; k++)\n                        arr[k] = res[k];\n                }\n            }\n        }\n        public static long gcd(long a, long b)\n        {\n            if (a == 0)\n                return b;\n            return gcd(b % a, a);\n        }\n\n        public static long findGCD(long arr[], int n)\n        {\n            long result = arr[0];\n            for (int i = 1; i < n; i++)\n                result = gcd(arr[i], result);\n            return result;\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n\n            while (isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n//import javafx.util.Pair;\nimport java.math.*;\nimport java.math.BigInteger;\nimport java.util.LinkedList; \nimport java.util.Queue; \npublic final  class CodeForces\n{    \n    static StringBuilder ans=new StringBuilder();\n    static FastReader in=new FastReader();\n    static ArrayList<ArrayList<Integer>> g;\n    static long mod=998244353 ;\n    static boolean set[];   \n    //static Pair<Integer,Integer> seg[];\n    //static int A[];\n    public static void main(String args[])throws IOException\n    {\n        int N=i();\n        int A[]=new int[N];\n        boolean f[]=new boolean[100002];\n        //boolean f=true;\n        for(int i=0; i<N; i++)\n        {\n            A[i]=i();\n            f[A[i]]=true;\n            if(A[i]>i+1)\n            {\n                System.out.println(-1);\n                return;\n            }\n        }\n        int e=0;\n\n        for(int i=0; i<N; i++)\n        {\n            if(i==0)\n            {\n                for(; e>=0; e++)\n                {\n                    if(!f[e])\n                    {\n                        f[e]=true;\n                        ans.append(e+\" \");\n                        break;\n                    }\n                }\n            }\n\n            else if(A[i]==A[i-1])\n            {\n                for(; e>=0; e++)\n                {\n                    if(!f[e])\n                    {\n                        f[e]=true;\n                        ans.append(e+\" \");\n                        break;\n                    }\n                }\n            }\n            else\n            {\n                ans.append(A[i-1]+\" \");\n            }\n        }\n        System.out.println(ans);\n    }\n\n    static void print(int A[])\n    {\n        for(int i:A)System.out.print(i+\" \");\n        System.out.println();\n    }\n\n    static  long pow(long a,long b)\n    {\n        //long mod=1000000007;\n        long pow=1;\n        long x=a;\n        while(b!=0)\n        {\n            if((b&1)!=0)pow=(pow*x)%mod;\n            x=(x*x)%mod;\n            b/=2;\n        }\n        return pow;\n    }\n\n    static void sort(long[] a) //check for long\n    {\n        ArrayList<Long> l=new ArrayList<>();\n        for (long i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n\n    static String swap(String X,int i,int j)\n    {\n        char ch[]=X.toCharArray();\n        char a=ch[i];\n        ch[i]=ch[j];\n        ch[j]=a;\n        return new String(ch);\n    }\n\n    static int sD(long n)  \n    {  \n\n        if (n % 2 == 0 )  \n            return 2;  \n\n        for (int i = 3; i * i <= n; i += 2) {  \n            if (n % i == 0 )  \n                return i;  \n        }  \n\n        return (int)n;  \n    }  \n\n    static void setGraph(int N)\n    {\n        set=new boolean[N+1];\n        g=new ArrayList<ArrayList<Integer>>();\n        for(int i=0; i<=N; i++)\n            g.add(new ArrayList<Integer>());\n    }\n\n    static void DFS(int N,int d)\n    {\n        set[N]=true;\n        d++;\n        for(int i=0; i<g.get(N).size(); i++)\n        {\n            int c=g.get(N).get(i);\n            if(set[c]==false)\n            {\n                DFS(c,d);\n            }\n        }\n    }\n\n    static long toggleBits(long x)//one's complement || Toggle bits\n    {\n        int n=(int)(Math.floor(Math.log(x)/Math.log(2)))+1;\n\n        return ((1<<n)-1)^x;\n    }\n\n    static int countBits(long a)\n    {\n        return (int)(Math.log(a)/Math.log(2)+1);\n    }\n\n    static long fact(long N)\n    { \n        long n=2; \n        if(N<=1)return 1;\n        else\n        {\n            for(int i=3; i<=N; i++)n=(n*i)%mod;\n        }\n        return n;\n    }\n\n    static int kadane(int A[])\n    {\n        int lsum=A[0],gsum=A[0];\n        for(int i=1; i<A.length; i++)\n        {\n            lsum=Math.max(lsum+A[i],A[i]);\n            gsum=Math.max(gsum,lsum);\n        }\n        return gsum;\n    }\n\n    static void sort(int[] a) {\n        ArrayList<Integer> l=new ArrayList<>();\n        for (int i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n\n    static boolean isPrime(long N)\n    {\n        if (N<=1)  return false; \n        if (N<=3)  return true; \n        if (N%2 == 0 || N%3 == 0) return false; \n        for (int i=5; i*i<=N; i=i+6) \n            if (N%i == 0 || N%(i+2) == 0) \n                return false; \n        return true; \n    }\n\n    static int i()\n    {\n        return in.nextInt();\n    }\n\n    static long l()\n    {\n        return in.nextLong();\n    }\n\n    static int[] input(int N){\n        int A[]=new int[N];\n        for(int i=0; i<N; i++)\n        {\n            A[i]=in.nextInt();\n        }\n        return A;\n    }\n\n    static long[] inputLong(int N)     {\n        long A[]=new long[N];\n        for(int i=0; i<A.length; i++)A[i]=in.nextLong();\n        return A;\n    }\n\n    static long GCD(long a,long b) \n    {\n        if(b==0)\n        {\n            return a;\n        }\n        else return GCD(b,a%b );\n    }\n\n}\n//Code For FastReader\n//Code For FastReader\n//Code For FastReader\n//Code For FastReader\nclass FastReader\n{\n    BufferedReader br;\n    StringTokenizer st;\n    public FastReader()\n    {\n        br=new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next()\n    {\n        while(st==null || !st.hasMoreElements())\n        {\n            try\n            {\n                st=new StringTokenizer(br.readLine());\n            }\n            catch(IOException e)\n            {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt()\n    {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong()\n    {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble()\n    {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine()\n    {\n        String str=\"\";\n        try\n        {\n            str=br.readLine();\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n        return str;\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "// package com.company;\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n//****Use Integer Wrapper Class for Arrays.sort()****\npublic class DJ3 {\n    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));\n    public static void main(String[] Args){\n        FastReader scan=new FastReader();\n        int t=1;\n//        t=scan.nextInt();\n        while(t-->0){\n            int n=scan.nextInt();\n            int[] arr=new int[n];\n            for(int i=0;i<n;i++){\n                arr[i]=scan.nextInt();\n            }\n            int[] ans=new int[n];\n            Arrays.fill(ans,-1);\n            boolean[] can=new boolean[n+1];\n            Arrays.fill(can,true);\n            int min=0;\n            can[0]=false;\n            for(int i=0;i<n;i++){\n                if(arr[i]!=min){\n                    ans[i]=min;\n                    min=arr[i];\n                    can[min]=false;\n                }\n            }\n            int s=0;\n            for(;s<=n;s++){\n                if(can[s]){\n                    break;\n                }\n            }\n            for(int i=0;i<n;i++){\n                if(ans[i]==-1){\n                    ans[i]=s;\n                    s++;\n                    while(s<=n){\n                        if(can[s]){\n                            break;\n                        }\n                        s++;\n                    }\n                }\n            }\n            for(int i=0;i<n;i++){\n                out.print(ans[i]+\" \");\n            }\n        }\n        out.flush();\n        out.close();\n    }\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int ans[n];\n  memset(ans, -1, sizeof(ans));\n  int p = 0, cur = a[0], no = 0;\n  if (a[0] == 1)\n    ans[0] = 0;\n  else if (a[0] != 0)\n    no = 1;\n  for (int i = 0; i < n; i++) {\n    if (a[i] != cur) {\n      ans[i] = cur;\n      for (int j = cur + 1; j < a[i]; j++) {\n        while (ans[p] != -1) p++;\n        if (p > i) {\n          no = 1;\n          break;\n        }\n        ans[p] = j;\n      }\n      cur = a[i];\n    }\n    if (no) {\n      break;\n    }\n  }\n  if (no) {\n    cout << \"-1\\n\";\n    return 0;\n  }\n  int mx = n + 2;\n  for (int i = 0; i < n; i++) {\n    if (ans[i] == -1) ans[i] = mx++;\n    cout << ans[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  cin.tie(nullptr);\n  ios_base::sync_with_stdio(false);\n  long long n;\n  cin >> n;\n  vector<long long> a(n);\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  set<long long> nums;\n  for (long long i = 0; i <= n; i++) {\n    nums.insert(i);\n  }\n  vector<long long> b(n);\n  vector<long long> c;\n  vector<long long> d;\n  for (long long i = 0; i < n; i++) {\n    d.push_back(i);\n    c.clear();\n    while (*nums.begin() < a[i]) {\n      c.push_back(*nums.begin());\n      nums.erase(nums.begin());\n    }\n    reverse(c.begin(), c.end());\n    if (d.size() < c.size()) {\n      cout << -1 << endl;\n      return 0;\n    }\n    while (!c.empty()) {\n      auto it = lower_bound(a.begin(), a.end(), c.back());\n      if (it != a.end() && *it == c.back() &&\n          distance(a.begin(), it) >= d.back()) {\n        cout << -1 << endl;\n        return 0;\n      }\n      b[d.back()] = c.back();\n      c.pop_back();\n      d.pop_back();\n    }\n  }\n  for (long long x : d) {\n    b[x] = n + 1;\n  }\n  for (long long i = 0; i < n; i++) {\n    cout << b[i] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nvoid printvec(vector<T>& vec) {\n  for (int i = 0; i < vec.size(); i++) {\n    cout << vec[i] << \" \";\n  }\n  cout << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  long long int n;\n  cin >> n;\n  vector<long long int> inp(n);\n  for (int i = 0; i < n; i++) {\n    cin >> inp[i];\n  }\n  vector<long long int> ans(n, -1);\n  vector<long long int> sp;\n  long long int mex = 0;\n  for (int i = 0; i < n; i++) {\n    if (i != 0) {\n      if (inp[i] < inp[i - 1]) {\n        cout << \"-1\\n\";\n        return 0;\n      }\n    }\n    if (mex != inp[i]) {\n      ans[i] = mex;\n      mex++;\n      while (mex != inp[i]) {\n        if (sp.size() == 0) {\n          cout << \"-1\\n\";\n          return 0;\n        }\n        int ind = sp.back();\n        sp.pop_back();\n        ans[ind] = mex;\n        mex++;\n      }\n      continue;\n    } else if (mex == inp[i]) {\n      sp.push_back(i);\n    }\n  }\n  while (sp.size() != 0) {\n    int ind = sp.back();\n    sp.pop_back();\n    ans[ind] = mex + 1;\n  }\n  for (int i = 0; i < n; i++) {\n    cout << ans[i] << \" \";\n  }\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\nb=[int(i) for i in input().split()]\nans=[-1]*(n)\nvisited=[0]*(n+1)\nfor i in range(1,n):\n    if b[i]!=b[i-1]:\n        visited[b[i-1]]=1\n        ans[i]=b[i-1]\nvisited[b[-1]]=1\ncount=0\n#print(visited)\nfor i in range(len(ans)):\n    if ans[i]==-1:\n        while visited[count]==1:\n            count+=1\n        ans[i]=count\n        visited[count]=1\nprint(*ans)\n    \n        \n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nv1=[False]*(n+1)\ns1=sorted(list(set(a)),reverse=True)\nfor i in s1:\n    v1[i]=True\ntmp=0\nb=[0]*n\nflag=True\nfor i in range(n):\n    if len(s1)>0 and a[i]>s1[-1]:\n        b[i]=s1[-1]\n        s1.pop()\n    elif flag==True:\n        if tmp==a[i] or v1[tmp]==True:\n            while True:\n                tmp+=1\n                if tmp>n:\n                    flag=False\n                    b[i]=n+5\n                    break\n                if v1[tmp]==False:\n                    b[i]=tmp\n                    tmp+=1\n                    break\n        else:\n            b[i]=tmp\n            tmp+=1\n    else:\n        b[i]=n+5\nprint(*b)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n \nimport static java.lang.Math.*;\n \npublic class Solution implements Runnable \n{\n\tstatic class InputReader \n\t{\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\tprivate SpaceCharFilter filter;\n\t\tprivate BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n \n\t\tpublic InputReader(InputStream stream) \n\t\t{\n\t\t\tthis.stream = stream;\n\t\t}\n\t\t\n\t\tpublic int read()\n\t\t{\n\t\t\tif (numChars==-1) \n\t\t\t\tthrow new InputMismatchException();\n            \n\t\t\tif (curChar >= numChars) \n\t\t\t{\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n                \n\t\t\t\tif(numChars <= 0)               \n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n     \n\t\tpublic String nextLine()\n\t\t{\n\t\t\tString str = \"\";\n\t\t\ttry\n\t\t\t{\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\t\n\t\t\treturn str;\n\t\t}\n\t\tpublic int nextInt() \n\t\t{\n\t\t\tint c = read();\n            \n\t\t\twhile(isSpaceChar(c)) \n\t\t\t\tc = read();\n\t\t\n\t\t\tint sgn = 1;\n        \n\t\t\tif (c == '-') \n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n            \n\t\t\tint res = 0;\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif(c<'0'||c>'9') \n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\twhile (!isSpaceChar(c)); \n        \n\t\t\treturn res * sgn;\n\t\t}\n        \n\t\tpublic long nextLong() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-')\n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\t\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\t\n\t\t\twhile (!isSpaceChar(c));\n\t\t\t\treturn res * sgn;\n\t\t}\n\t\t\n\t\tpublic double nextDouble() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-')\n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdouble res = 0;\n\t\t\twhile (!isSpaceChar(c) && c != '.') \n\t\t\t{\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tif (c == '.') \n\t\t\t{\n\t\t\t\tc = read();\n\t\t\t\tdouble m = 1;\n\t\t\t\twhile (!isSpaceChar(c))\n\t\t\t\t{\n\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = read();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res * sgn;\n\t\t}\n    \n\t\tpublic String readString() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo \n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} \n\t\t\twhile (!isSpaceChar(c));\n            \n\t\t\treturn res.toString();\n\t\t}\n     \n\t\tpublic boolean isSpaceChar(int c) \n\t\t{\n\t\t\tif (filter != null)\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n     \n\t\tpublic String next()\n\t\t{\n\t\t\treturn readString();\n\t\t}\n        \n\t\tpublic interface SpaceCharFilter\n\t\t{\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t}\n\tpublic static void main(String args[]) throws Exception \n\t{\n\t\tnew Thread(null, new Solution(),\"Main\",1<<27).start();\n\t}\t\n\t\n\tpublic static long gcd(long a, long b) \n\t{ \n\t\tif (a == 0) \n\t\t\treturn b; \n\t\treturn gcd(b % a, a); \n\t} \n  \n\tpublic static long findGCD(long arr[], int n) \n\t{ \n\t\tlong result = arr[0]; \n\t\tfor (int i = 1; i < n; i++) \n\t\t\tresult = gcd(arr[i], result); \n\t\treturn result; \n\t}\t \n\t\n\tstatic void sortbycolomn(long arr[][], int col)\n    { \n         \n        Arrays.sort(arr, new Comparator<long[]>() { \n            \n          @Override              \n           \n          public int compare(final long[] entry1,  \n                             final long[] entry2) { \n  \n            \n            if (entry1[col] > entry2[col]) \n                return 1; \n            else\n                return -1; \n          } \n        });   \n    } \n\t\n\tstatic class Box implements Comparable<Box>{\n\t    int h=0,w=0,d=0,area;\n\t    Box(int h,int w,int d){\n\t        this.h = h;\n\t        this.w = w;\n\t        this.d = d;\n\t    }\n\t    \n\t    public int compareTo(Box o){\n\t        return o.area-this.area;\n\t    }\n\t}\n\t\n\tpublic void run()\n\t{\n\t\tInputReader in = new InputReader(System.in);\n\t\tPrintWriter w = new PrintWriter(System.out);\n\t\t\n\t\tint n=in.nextInt();\n\t\tint[] arr=new int[n+1];\n\t\tint[] visited = new int[n+1];\n\t\tfor(int i=1;i<=n;i++) visited[arr[i] = in.nextInt()]=1;\n\t\t\n\t\tArrayList<Integer> has = new ArrayList<>();\n\t\tfor(int i=1;i<=n;i++) if(visited[i]==0) has.add(i);\n\t\t\n\t\tint j=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t    if(arr[i]==arr[i-1]) w.print(has.get(j++)+\" \");\n\t\t    else w.print(arr[i-1]+\" \");\n\t\t}\n\t\t\n\t\tw.flush();\n\t\tw.close();\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nfrom sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\nfrom bisect import bisect_left \nfrom bisect import bisect_right\n \ndef L():\n    return list(map(int, input().split()))\n \ndef In():\n    return map(int, input().split())\n \ndef I():\n    return int(input())\n \nP = 1000000007\ndef main():\n    n = I()\n    arr = L()\n    val = set(arr)\n    p, q = 0, 1\n    for i in range(n):\n        if arr[i] == p:\n            while q in val:\n                q += 1\n            print(q, end = \" \") \n            q += 1\n        else:\n            print(p, end = \" \")\n            p = arr[i]\n    \nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.io.*;\n        import java.util.*;\npublic class mex {\n    static int p=1000000007;\n    public static void main(String[] args) throws Exception{\n        BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(java.io.FileDescriptor.out), \"ASCII\"), 512);\n        FastReader sc=new FastReader();\n        StringBuilder sb=new StringBuilder();\n        int n = sc.nextInt();\n        int ar[] = new int[n];\n        Set<Integer> s1=new HashSet<>();\n\n        for (int i = 0; i < n; i++) {\n            ar[i] = sc.nextInt();\n            s1.add(ar[i]);\n        }\n        int ls = ar[n - 1];\n        Stack<Integer> s = new Stack<>();\n        if (ls > n) {\n            sb.append(\"-1\\n\");\n        }\n        else\n        {\n            int c=ar[0]-1<0?1:0;\n            int f=ar[0];\n            int ls2=c-1;\n            for (int i = 0; i < n; i++) {\n\n\n                if(ar[i]==f)\n                {\n                    c=ls2+1;\n                    while(s1.contains(c))\n                    {\n                        c++;\n                    }\n\n                    sb.append(c+\" \");\n                    s1.add(c);\n                    ls2=c;\n                }\n                else\n                {\n                    c=ar[i-1];\n                    sb.append(c+\" \");\n                    f=ar[i];\n                }\n            }\n            // sb.append(s.size() + \"\\n\");\n            //    sb.append(i + \" \");\n\n        }\n        sb.append(\"\\n\");\n        out.write(sb.toString());\n        out.flush();\n    }\n\n\n\n\n\n\n    ///////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////\n    static class FastReader {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nb = [n+1] * n\nisCovered = [False] * a[n-1]\nlastIsNotCovered = 0\nallCovered = False\nfor i in range(n-1):\n    if a[i] != a[i+1]:\n        b[i+1] = a[i]\n        isCovered[a[i]] = True\nfor i in range(lastIsNotCovered,a[n-1]):\n    if isCovered[i] == False:\n        lastIsNotCovered = i\n        break\n    if i == a[n-1] - 1:\n        allCovered = True\n        break\nif a[n-1] == 0:\n    allCovered = True\nfor i in range(n):\n    if allCovered:\n        break\n    if b[i] != n+1:\n        continue\n    else:\n        b[i] = lastIsNotCovered\n        if lastIsNotCovered == a[n-1] - 1:\n            allCovered = True\n            break\n        isCovered[lastIsNotCovered] = True\n        for j in range(lastIsNotCovered,a[n-1]):\n            if isCovered[j] == False:\n                lastIsNotCovered = j\n                break\n            if j == a[n-1] - 1:\n                allCovered = True\n                break\n        if allCovered:\n            break\n\nif allCovered:\n    output = [str(i) for i in b]\n    print(' '.join(output))\nelse:\n    print(-1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nm = set(a)\nu = [i for i in range(n + 1) if i not in m]\nif a[0] not in [0, 1]:\n    print(-1)\n    exit()\nb = [u.pop(0)]\nfor i in range(1, n):\n    if a[i] != a[i - 1]:\n        b.append(a[i - 1])\n    else:\n        b.append(u.pop(0))\nprint(*b)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nif max(l)>n:\n\tprint(-1)\nelse:\n\ta=[]\n\tans=[]\n\tfor i in range(n+1):\n\t\ta.append(-1)\n\t\tans.append(-1)\n\tfor i in range(n):\n\t\ta[l[i]]=i+1\n\tfor i in range(n+1):\n\t\tif a[i]!=-1:\n\t\t\tans[a[i]]=i\n\t# for i in range(n+1):\n\t# \tprint(a[i], ans[i])\n\tprint()\n\tj=0\n\tfor i in range(n+1):\n\t\tif ans[i]!=-1:\n\t\t\tcontinue\n\t\twhile(a[j]!=-1):\n\t\t\tj+=1\n\t\tans[i]=j\n\t\t# print(i,j,\"t\")\n\t\tj+=1\n\tfor i in range(n):\n\t\tprint(ans[i],end=\" \")\n"
        },
        {
            "language": 3,
            "solution": "import bisect\nimport decimal\nfrom decimal import Decimal\nimport os\nfrom collections import Counter\nimport bisect\nfrom collections import defaultdict\nimport math\nimport random\nimport heapq \nfrom math import sqrt\nimport sys\nfrom functools import reduce, cmp_to_key\nfrom collections import deque\nimport threading\nfrom itertools import combinations\nfrom io import BytesIO, IOBase\nfrom itertools import accumulate\n\n# sys.setrecursionlimit(200000)\n# mod = 10**9+7\n# mod = 998244353\ndecimal.getcontext().prec = 46\n\ndef primeFactors(n): \n    prime = set()\n    while n % 2 == 0: \n        prime.add(2)\n        n = n//2\n    for i in range(3,int(math.sqrt(n))+1,2): \n        while n % i== 0: \n            prime.add(i)\n            n = n//i \n    if n > 2: \n        prime.add(n)\n    return list(prime)\n    \ndef getFactors(n) : \n    factors = []\n    i = 1\n    while i <= math.sqrt(n): \n        if (n % i == 0) : \n            if (n // i == i) : \n                factors.append(i)\n            else : \n                factors.append(i)\n                factors.append(n//i)\n        i = i + 1\n    return factors\n    \ndef SieveOfEratosthenes(n): \n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    num = []\n    for p in range(2, n+1): \n        if prime[p]: \n            num.append(p)\n    return num\n\ndef lcm(a,b):\n    return (a*b)//math.gcd(a,b)\n\ndef sort_dict(key_value):\n    return sorted(key_value.items(), key = lambda kv:(kv[1], kv[0]))\n\ndef list_input():\n    return list(map(int,input().split()))\n    \ndef num_input():\n    return map(int,input().split())\n    \ndef string_list():\n    return list(input())\n    \ndef decimalToBinary(n):  \n    return bin(n).replace(\"0b\", \"\")  \n    \ndef binaryToDecimal(n): \n    return int(n,2) \n    \ndef DFS(n,s,adj):              \n    visited = [False for i in range(n+1)]  \n    stack = [] \n    stack.append(s)  \n  \n    while (len(stack)):  \n        s = stack[-1]  \n        stack.pop() \n  \n        if (not visited[s]):  \n            visited[s] = True \n            \n        for node in adj[s]:  \n            if (not visited[node]):  \n                stack.append(node)  \n        \ndef solve():\n    n = int(input())\n    arr = list_input()\n    if arr[0] != 0 and arr[0] != 1:\n        print(-1)\n        return\n    ans = []\n    temp = list(set(arr))\n    if len(temp) == 1:\n        if temp[0] == 0:\n            print('1 '*n)\n            return\n        elif temp[0] == 1:\n            print('0 '*n)\n            return\n    elif len(temp) == 2:\n        if temp[0] == 0 and temp[1] == 1:\n            i = 0\n            while i < n and arr[i] == 0:\n                print(2,end=' ')\n                i += 1\n            while i < n and arr[i] == 1:\n                print(0,end=' ')\n                i += 1\n            print()\n            return\n    \n    num = [False]*n\n    remain = n\n    i = 0\n    if arr[0] == 1:\n        remain -= 1\n        prev = 1\n        num[0] = True\n        ans.append(0)\n        i += 1\n        while i < n and arr[i] == 1:\n            ans.append(-1)\n            i += 1\n    else:\n        prev = 0\n        while i < n and arr[i] == 0:\n            ans.append(-1)\n            i += 1\n    while i < n:\n        remain -= 1\n        num[prev] = True\n        ans.append(prev)\n        prev = arr[i]\n        if i+1 < arr[i]:\n            print(-1)\n            return\n        j = i+1\n        while j < n and arr[j] == arr[i]:\n            ans.append(-1)\n            j += 1\n        i = j\n    if not(num[1]):\n        remain -= 1\n        num[1] = True\n        ans[0] = 1\n    if n > arr[-1]:\n        remain -= 1\n        num[arr[-1]] = True\n    indx = 0\n    for i in range(n):\n        if ans[i] == -1:\n            while indx < n and num[indx]:\n                indx += 1\n            ans[i] = indx\n            if remain > 1:\n                num[indx] = True\n                remain -= 1\n    print(*ans)\n\n#t = int(input())\nt = 1\nfor _ in range(t):\n    solve()\n\n\n    \n    \n    \n    \n"
        },
        {
            "language": 3,
            "solution": "import heapq\nt = 1\nwhile t>0:\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\t\n\tseen = set()\n\t\n\tfor i in range(n):\n\t\tif arr[i] > 1+i: \n\t\t\tprint (-1)\n\t\t\tt-=1\n\t\t\tcontinue\n\t\tseen.add(arr[i])\n\t\n\th = []\n\t\n\tfor i in range(n+1):\n\t\tif i not in seen: heapq.heappush(h, i)\n\t\n\tans = []\n\tfor i in range(n):\n\t\tif i>0 and arr[i] != arr[i-1]: heapq.heappush(h, arr[i-1])\n\t\tans.append(heapq.heappop(h))\n\t\n\tprint (' '.join([str(i) for i in ans]))\n\tt-=1\n\t\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nmt = list(map(int, input().split()))\nans=[-1]*n\ndup=set(mt)\nsec=set([int(x) for x in range(n+1)])\nsec=sec.difference(dup)\nsec=list(sec)\nans[0]=sec[0]\nsec.remove(sec[0])\nfor i in range(1,n):\n    if(mt[i-1]!=mt[i]):\n        ans[i]=mt[i-1]\n    else:\n        ans[i]=sec[0]\n        sec.remove(sec[0])\nprint(*ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CfA {\n\n    static class Reader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Reader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    static long binpow(int a, int b) {\n        if (b == 0)\n            return 1;\n        long res = binpow(a, b / 2);\n        if (b % 2 == 1)\n            return res * res * a;\n        else\n            return res * res;\n    }\n\n    static long gcd(long a, long b) {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static int n, m, x, y, k;\n    static int[] a;\n    static int[][] dp;\n\n    public static void main(String[] args) throws Exception {\n        Reader in = new Reader();\n        n = in.nextInt();\n        a = new int[n];\n        boolean impossible = false;\n        HashSet<Integer> set = new HashSet<>();\n        HashMap<Integer,Integer> map = new HashMap<>();\n        Stack<Integer> stack = new Stack<Integer>();\n\n\n        for(int i = 0;i < n;i++)\n        {\n            a[i] = in.nextInt();\n            if(a[i] > i+1)\n                impossible = true;\n            set.add(a[i]);    \n            map.putIfAbsent(a[i], i);\n        }\n\n        for(int i = 1000000;i >= 0 ;i--){\n            if(!set.contains(i))\n                stack.push(i);\n        }\n\n        int[] b = new int[n];\n        b[0] = stack.pop();\n        for(int i = 1;i < n;i++)\n        {\n            if(a[i] > a[i-1])\n                b[i] = a[i-1];\n            else    \n                b[i] = stack.pop();\n\n        }\n\n        for(int i = 0;i < n;i++)\n            System.out.print(b[i]+\" \");\n        System.out.println();    \n       \n\n    }\n\n\n}\n\n// 76 52 28 00 73 42 23 64 48"
        },
        {
            "language": 3,
            "solution": "import os,io\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nn = int(input())\na = list(map(int,input().split()))\nb = [-1]*(n+1)\na.append(-1)\nf = 0\nd = set()\nfor i in range(1,n+1):\n    if a[i-1]!=a[i]:\n        b[i]=a[i-1]\n        d.add(b[i])\nd = list(set(list(range(n+1)))-d)\nc = 0\nfor i in range(n+1):\n    if b[i]==-1:\n        b[i]=d[c]\n        c+=1\nprint(*b[:-1])\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=input().split()\nli=[int(i) for i in l]\nlo=[0 for i in range(n)]\nset=0\ndone=[0 for i in range(n)]\nhashi=dict()\nfor i in li:\n    hashi[i]=1\nfor i in range(n):\n    if(li[i]!=0 and i==0):\n        lo[i]=0\n        done[i]=1\n        hashi[0]=1\n        continue\n    if(li[i]!=li[i-1] and i!=0):\n        lo[i]=li[i-1]\n        done[i]=1\ncurr=0\nfor i in range(n):\n    if(done[i]!=0):\n        continue\n    while(curr in hashi):\n        curr+=1\n\n    lo[i]=curr\n    curr+=1\nfor i in lo:\n    print(i,end=\" \")\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\tBufferedReader file = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(file.readLine());\n\t\tboolean[] used = new boolean[1000001];\n\t\tint[] nums = new int[n];\n\t\tboolean[] last = new boolean[n];\n\t\tStringTokenizer st = new StringTokenizer(file.readLine());\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tnums[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tboolean pos = true;\n\t\tfor(int i = n-1; i >= 0; i--) {\n\t\t\tif(nums[i] > i+1)\n\t\t\t\tpos = false;\n\t\t\tif(!used[nums[i]])\n\t\t\t\tlast[i] = true;\n\t\t\tused[nums[i]] = true;\n\t\t}\n\t\tif(!pos)\n\t\t\tSystem.out.println(-1);\n\t\telse {\n\t\t\tQueue<Integer> freed = new LinkedList<>();\n\t\t\tint index = 0;\n\t\t\tStringBuilder ans = new StringBuilder();\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\twhile(used[index])\n\t\t\t\t\tindex++;\n\t\t\t\tif(!freed.isEmpty()) {\n\t\t\t\t\tans.append(freed.remove() + \" \");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tans.append(index + \" \");\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\tif(last[i])\n\t\t\t\tfreed.add(nums[i]);\n\t\t}\n\t\tSystem.out.println(ans);\n\t\t}\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Jun 14 21:25:06 2020\n\n@author: rishi\n\"\"\"\n\n\nn=int(input())\nans=[]\na=list(map(int,input().split()))\noset=set(i for i in range(2*n+1))\naset=set(a)\niset=oset-aset\nilist=sorted(list(iset),reverse=True)\nfor j in range(n):\n    ans.append(ilist[-1])\n    de=a.pop(0)\n    if(len(a) and a[0]!=de):\n        ilist.pop(-1)\n        ilist.append(de)\n        \n        \n        #ilist.sort()\n    else:\n        ilist.pop(-1)\n\nfor kk in ans:\n    print(kk,end=\" \")\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nN = int(input())\na = list(map(int, input().split()))\n\nres = [-1] * N\nif a[0]: res[0] = 0\nfor i in range(N - 1):\n  if a[i + 1] > a[i]: res[i + 1] = a[i]\n\ns = sorted(set([x for x in range(N + 1)]) - set(a) - set(res), reverse = True)\nfor i in range(N):\n  if res[i] == -1: res[i] = s.pop()\n\nprint(*res)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\nlong long qpow(long long n, long long k) {\n  long long ans = 1;\n  assert(k >= 0);\n  n %= mod;\n  while (k > 0) {\n    if (k & 1) ans = (ans * n) % mod;\n    n = (n * n) % mod;\n    k >>= 1;\n  }\n  return ans % mod;\n}\nint main() {\n  int n;\n  cin >> n;\n  int arr[n + 1];\n  arr[0] = -1;\n  set<int> avl;\n  for (int i = 1; i <= n; i++) {\n    cin >> arr[i];\n    for (int j = arr[i - 1] + 1; j < arr[i]; j++) {\n      avl.insert(j);\n    }\n  }\n  set<int> inl;\n  vector<int> ans;\n  for (int i = 1; i <= n; i++) {\n    if (arr[i] == 0) {\n      if (!avl.empty()) {\n        ans.push_back(*avl.begin());\n        inl.insert(*avl.begin());\n        avl.erase(avl.begin());\n      } else\n        ans.push_back(arr[n] + 1);\n    } else {\n      int cur = arr[i];\n      cur--;\n      if (inl.find(cur) != inl.end()) {\n        if (!avl.empty()) {\n          ans.push_back(*avl.begin());\n          inl.insert(*avl.begin());\n          avl.erase(avl.begin());\n        } else\n          ans.push_back(arr[n] + 1);\n      } else {\n        auto it = avl.find(cur);\n        if (it != avl.end()) avl.erase(it);\n        ans.push_back(cur);\n        inl.insert(cur);\n      }\n    }\n    if (i < n && arr[i + 1] != arr[i]) avl.insert(arr[i]);\n  }\n  auto it = avl.find(arr[n]);\n  if (it != avl.end()) avl.erase(it);\n  if (avl.empty()) {\n    for (auto it = ans.begin(); it != ans.end(); it++) {\n      cout << *it << ' ';\n    }\n  } else\n    cout << \"-1\";\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# fmt: off\nFAST_IO = 1\nif FAST_IO:\n    import io, sys, atexit\n    read = iter(sys.stdin.read().splitlines()).__next__\n    _OUTPUT_BUFFER = io.StringIO()\n    sys.stdout = _OUTPUT_BUFFER\n    @atexit.register\n    def write():\n        sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\nelse:\n    read = input\nreadint = lambda: int(read())\nreadlist = lambda: list(map(int, read().split()))\n\n\ndef solve(N, A):\n    free = []\n    ans = [10**6] * N\n    low = 0\n    for i in range(N):\n        free.append(i)\n        while free and low < A[i]:\n            j = free.pop()\n            ans[j] = low\n            low += 1\n    return ans\n\nN=readint()\nA=readlist()\nans = solve(N,A)\nif ans is None:\n    print(-1)\nelse:\n    print(' '.join(map(str, ans)))"
        },
        {
            "language": 3,
            "solution": "R = lambda: map(int, input().split())\nn = int(input())\narr = list(R()) + [0]\nres = [-1] * (n + 1)\nslots = []\nfor i in range(n):\n    slots.append(i)\n    if arr[i] != arr[i - 1]:\n        cur = arr[i - 1]\n        while slots and cur < arr[i]:\n            res[slots.pop()] = cur\n            cur += 1\n        if cur != arr[i]:\n            print(-1)\n            exit(0)\nprint(' '.join(map(str, [x if x != -1 else 10 ** 6 for x in res[:n]])))"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\nn = int(stdin.readline())\narr = list(map(int, stdin.readline().rstrip().split(\" \")))\nsetarr = set(arr)\nb = [-1] * n\nx = 0\n\n\nfor i in range(n):\n    if arr[i] > i + 1:\n        print(-1)\n        break\n\nelse:\n    for i in range(1, n):\n        if arr[i] != arr[i - 1]:\n            b[i] = arr[i - 1]\n    for i in range(n):\n        if b[i] == -1:\n            while x in setarr:\n                x += 1\n            \n            b[i] = x\n            x += 1\n\n            \n\n\n    print(*b)\n\n"
        },
        {
            "language": 1,
            "solution": "import collections\ndef f(A):\n\ts = set(A)\n\tptr = 0\n\tn = len(A)\n\t#print s\n\tB = [None for _ in range(len(A))]\n\tfor u in range(n):\n\t\tif A[u] > u+1:\n\t\t\treturn [-1]\n\t\tif u and A[u -1] != A[u]:\n\t\t \tB[u] = A[u - 1]\n\t\telse:\n\t\t \twhile(ptr in s): ptr+=1\n\t\t \tB[u] = ptr\n\t\t \tptr +=1\n\t\t \twhile(ptr in s): ptr+=1\n\t#113\n\t#021\n\treturn B\n\ntt = 1 #int(raw_input())\nfor it in range(tt):\n\tn = int(raw_input()) #map(int, raw_input().split(' '))\n\tnums = map(int, raw_input().split(' '))\n\tr = f(nums)\n\tprint ' '.join(map(str,r))\n\t\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dr[4] = {0, 0, -1, 1};\nint dc[4] = {-1, 1, 0, 0};\nconst int N = 2000006;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  int a[n + 1], b[n + 1], c[n + 1];\n  memset(b, -1, sizeof b);\n  memset(c, 0, sizeof c);\n  for (int i = 1; i <= n; ++i) cin >> a[i];\n  for (int i = 2; i <= n; ++i) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      c[b[i]] = 1;\n    }\n  }\n  c[a[n]] = 1;\n  int m = 0;\n  for (int i = 1; i <= n; ++i) {\n    while (c[m]) m++;\n    if (b[i] == -1) {\n      b[i] = m;\n      c[m] = 1;\n    }\n    cout << b[i] << ' ';\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "arr_len = int(input())\narr = list(map(int, input().split()))\nres = [-1]\n\nfor i in range(arr_len - 1):\n    if arr[i] != arr[i+1]:\n        res.append(arr[i])\n    else:\n        res.append(-1)\n\nlow = 0\narr_set = set(arr)\n\nfor i in range(arr_len):\n    if res[i] == -1:\n        while low in arr_set:\n            low += 1\n        res[i] = low\n        low += 1\n\nfor x in res:\n    print(x, end=\" \")\nprint()\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    This template is made by Satwik_Tiwari.\n    python programmers can use this template :)) .\n\"\"\"\n\n#===============================================================================================\n#importing some useful libraries.\nfrom fractions import Fraction\nimport sys\nimport bisect\nimport heapq\nfrom math import *\nfrom collections import Counter as counter  # Counter(list)  return a dict with {key: count}\nfrom itertools import combinations as comb # if a = [1,2,3] then print(list(comb(a,2))) -----> [(1, 2), (1, 3), (2, 3)]\nfrom itertools import permutations as permutate\nfrom bisect import bisect_left as bl\n#If the element is already present in the list,\n# the left most position where element has to be inserted is returned.\nfrom bisect import bisect_right as br\nfrom bisect import bisect\n#If the element is already present in the list,\n# the right most position where element has to be inserted is returned\n\n#===============================================================================================\n#some shortcuts\n\nmod = 1000000007\ndef inp(): return sys.stdin.readline().strip() #for fast input\ndef out(var): sys.stdout.write(str(var))  #for fast output, always take string\ndef lis(): return list(map(int, inp().split()))\ndef stringlis(): return list(map(str, inp().split()))\ndef sep(): return map(int, inp().split())\ndef strsep(): return map(str, inp().split())\ndef graph(vertex): return [[] for i in range(0,vertex+1)]\ndef zerolist(n): return [0]*n\ndef nextline(): out(\"\\n\")  #as stdout.write always print sring.\ndef testcase(t):\n    for p in range(t):\n        solve()\ndef printlist(a) :\n    for p in range(0,len(a)):\n        out(str(a[p]) + ' ')\ndef lcm(a,b): return (a*b)//gcd(a,b)\ndef power(a,b):\n    ans = 1\n    while(b>0):\n        if(b%2==1):\n            ans*=a\n        a*=a\n        b//=2\n    return ans\n\n#===============================================================================================\n# code here ;))\n\ndef solve():\n    n = int(inp())\n    a = lis()\n    m = max(a)\n    for i in range(0,n):\n        if(i>=a[i]-1):\n            continue\n        else:\n            print(-1)\n            return\n    b = [-1]*(n)\n    nta = [False]*(m+1)\n    for i in range(1,n):\n        if(a[i]!=a[i-1]):\n            b[i] = a[i-1]\n    s = list(set(b))\n    for i in s:\n        nta[i] = True\n    if(a[0] == 0):\n        curr = 1\n    else:\n        curr = 0\n    # print(nta)\n    toadd = []\n    for i in range(0,m+1):\n        if(nta[i] == False):\n            toadd.append(i)\n    for i in range(m+1,10**6+1):\n        toadd.append(i)\n    j =0\n    for i in range(0,n):\n        if(b[i] == -1):\n            b[i] = toadd[j]\n            j+=1\n    print(*b)\n\n\ntestcase(1)\n# testcase(int(inp()))\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nsp=list(range(n+1))\n \nprd=-1\nb=[]\na=[]\nfor i in input().split():\n  i = int(i)\n  if i!=prd:\n    sp[i]=-1\n  prd=i\n  b+=[i]\n  \npr,k=1,0\nwhile pr:\n  if sp[k]!=-1:\n    a+=[sp[k]]\n    k+=1\n    pr=0\n  else:\n    k+=1\nfor i in range(1,n):\n  if b[i-1]!=b[i]:\n    a+=[b[i-1]]\n  else:\n    pr=1\n    while pr:\n      if sp[k]!=-1:\n        a+=[sp[k]]\n        k+=1\n        pr=0\n      else:\n        k+=1\n    \nprint(*a)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint freq[1000001] = {0};\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t = 1;\n  while (t--) {\n    int n;\n    cin >> n;\n    int arr[n];\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n      freq[arr[i]]++;\n    }\n    for (int i = 0; i < n; i++) {\n      if (i > 0)\n        if (arr[i] > i + 1 || arr[i] < arr[i - 1]) {\n          cout << \"-1\";\n          exit(0);\n        } else if (arr[i] > i + 1 || arr[i] < arr[i - 1]) {\n          cout << \"-1\";\n          exit(0);\n        }\n    }\n    int ind;\n    if (arr[0] == 0) {\n      ind = 1;\n      while (freq[ind] != 0) ind++;\n      cout << ind << \" \";\n      ind++;\n    } else {\n      ind = 0;\n      while (freq[ind] != 0) ind++;\n      cout << ind << \" \";\n      ind++;\n    }\n    freq[arr[0]]--;\n    for (int i = 1; i < n; i++) {\n      if (freq[arr[i - 1]] == 0) {\n        cout << arr[i - 1] << \" \";\n        if (ind == arr[i - 1]) ind++;\n      } else {\n        while (freq[ind] != 0) {\n          ind++;\n        }\n        cout << ind << \" \";\n        ind++;\n      }\n      freq[arr[i]]--;\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split(' ')]\na_dict = {}\n\nfor item in a:\n    if item in a_dict.keys():\n        a_dict[item] += 1\n    else:\n        a_dict[item] = 1\n\nm = 0\nans = []\nskip_print = False\nfor i in range(n):\n    if a[i] > i + 1:\n        print(- 1)\n        skip_print = True\n        break\n    if i > 0 and a[i] != a[i - 1]:\n        ans.append(a[i - 1])\n    else:\n        while m in a_dict.keys():\n            m += 1\n        ans.append(m)\n        m += 1\nif not skip_print:\n    print(*ans)\n\n"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/contest/1364/problem/C\nimport sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n# do magic here\nn = int(input())\narr = [int(x) for x in input().split()]\nif arr[0] > 1:\n    print(-1)\n    sys.exit()\nlast = arr[-1]\nrequired = []\nused = set()\ni = n-1\nMAX = int(1e6) - 1\nans = [0 for x in range(n)]\nwhile i > 0:\n    if arr[i] > i+1:\n        print(-1)\n        sys.exit()\n    if arr[i-1] != arr[i]:\n        ans[i] = arr[i-1]\n        for x in range(arr[i-1]+1, arr[i]):\n            required.append(x)\n    else:\n        if len(required):\n            ans[i] = required.pop()\n        else:\n            ans[i] = MAX\n    i -= 1\nif arr[0] == 0:\n    if len(required):\n        ans[0] = required.pop()\n    else:\n        ans[0] = MAX\nfor item in ans:\n    print(item, end=\" \")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100010];\nint vis[100010];\nint b[100010];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int flag = 1;\n  for (register int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    if (a[i] > i) {\n      flag = 0;\n    }\n  }\n  if (flag == 0) {\n    printf(\"-1\\n\");\n  } else {\n    memset(vis, 0, sizeof(vis));\n    for (register int i = 1; i <= n; i++) {\n      vis[a[i]] = 1;\n    }\n    int k = 0, cnt = 0;\n    while (vis[k] == 1) {\n      k++;\n    }\n    b[cnt++] = k;\n    vis[k] = 1;\n    while (vis[k] == 1) {\n      k++;\n    }\n    for (register int i = 2; i <= n; i++) {\n      if (a[i] == a[i - 1]) {\n        b[cnt++] = k;\n        vis[k] = 1;\n        while (vis[k] == 1) {\n          k++;\n        }\n      } else {\n        b[cnt++] = a[i - 1];\n      }\n    }\n    for (register int i = 0; i < cnt; i++) {\n      printf(\"%d \", b[i]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.text.Collator;\nimport java.util.*;\nimport java.util.stream.*;\n\nimport static java.lang.Math.*;\nimport static java.util.stream.Collectors.*;\n\npublic class Main {\n    void solve() {\n        int n = in.nextInt();\n        int[] a = in.nextInts(n);\n        boolean[] has = new boolean[n+1];\n        for (int el : a) {\n            has[el] = true;\n        }\n        int[] b = new int[n];\n        int i1 = 1;\n\n        if (0 != a[0]){\n            b[0] = 0;\n        }else {\n            while (has[i1])i1++;\n            b[0] = i1++;\n        }\n\n        for (int i = 1; i < n; i++) {\n            if (a[i-1] != a[i]){\n                b[i] = a[i-1];\n            }else {\n                while (has[i1])i1++;\n                b[i] = i1++;\n            }\n        }\n        out.println(b);\n    }\n\n    static final boolean MULTI_TEST = false;\n\n    // --------------------------------------------------------------------------------------------------------------\n    // --------------------------------------------------HELPER------------------------------------------------------\n    // --------------------------------------------------------------------------------------------------------------\n\n\n    void solve2() {\n//        init();\n        if (MULTI_TEST) {\n            int t = in.nextInt();\n            for (int i = 0; i < t; i++) {\n                solve();\n            }\n        } else {\n            solve();\n        }\n    }\n\n    // --------------------ALGORITHM-------------------------\n\n    public void sort(int[] arr) {\n        List<Integer> tmp = Arrays.stream(arr).boxed().sorted().collect(Collectors.toList());\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = tmp.get(i);\n        }\n    }\n\n    // --------------------SCANNER-------------------------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner(boolean debug) {\n            if (debug) {\n                try {\n                    br = new BufferedReader(new FileReader(\"input.txt\"));\n                } catch (FileNotFoundException e) {\n                    throw new RuntimeException(e);\n                }\n            } else {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                st = new StringTokenizer(nextLine());\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextInts(int n) {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public long[] nextLongs(int n) {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextLong();\n            }\n            return arr;\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            try {\n                String line = br.readLine();\n                if (line == null) {\n                    throw new RuntimeException(\"empty line\");\n                }\n                return line;\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n\n    // --------------------WRITER-------------------------\n    public static class MyWriter extends PrintWriter {\n\n        public MyWriter(OutputStream out) {\n            super(out);\n        }\n\n        void println(int[] arr) {\n            String line = Arrays.stream(arr).mapToObj(String::valueOf).collect(joining(\" \"));\n            println(line);\n        }\n\n    }\n    // --------------------MAIN-------------------------\n\n    public MyScanner in;\n    public MyWriter out;\n\n    public static void main(String[] args) {\n        Main m = new Main();\n        m.in = new MyScanner(args.length > 0);\n        m.out = new MyWriter(new BufferedOutputStream(System.out));\n        m.solve2();\n        m.out.close();\n    }\n}\n\n\n// class Pair{\n//    Integer key, value;\n//     Pair(int _key,int _value){\n//        key = _key;\n//        value = _value;\n//    }\n//    @Override\n//    public int hashCode() {\n//        return (key ==null?0: key.hashCode()) ^(value ==null?0: value.hashCode());\n//    }\n//\n//    @Override\n//    public boolean equals(Object obj) {\n//        if(obj==null) return false;\n//        Pair a = (Pair)obj;\n//        return this.key.equals(a.key)&&this.value.equals(a.value);\n//    }\n//}\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys \nfrom collections import defaultdict as dd\nfrom queue import Queue\nimport math\nimport itertools\ntry:\n\tsys.stdin = open('input.txt', 'r') \n\tsys.stdout = open('output.txt', 'w')\nexcept:\n\tpass\ninput = lambda: sys.stdin.buffer.readline().rstrip()\n\nn=int(input())\na=list(map(int,input().split()))\nq=[-1]*n\nfor i in range(1,n):\n\tif a[i]!=a[i-1]:\n\t\tq[i]=a[i-1]\nw=[]\nj=0\nfor i in a:\n\twhile j<n+1 and j<i:\n\t\tw.append(j)\n\t\tj+=1\n\tif j==i:\n\t\tj+=1\nw+=[i for i in range(a[-1]+1,2*n)]\nk=0\nfor i in range(n):\n\tif q[i]==-1:\n\t\tq[i]=w[k]\n\t\tk+=1\nprint(*q)"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nimport sys\nn=int(input())\nl=[-1 for i in range(n)]\na=[int(i) for i in input().split()]\nmaxx=max(a)\npos=deque()\nflag=1\nfor i in range(n):\n    if a[i]>i+1:\n        flag=0\nif a[0]==1:\n    l[0]=0\nelse:\n    pos.append(0)\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        pos.append(i)\n        continue\n    else:\n        l[i]=a[i-1]\n        for j in range(a[i-1]+1,a[i]):\n            if len(pos)==0:\n                flag=0\n                break\n            x=pos.popleft()\n            l[x]=j\nif flag:\n    for i in pos:\n        l[i]=maxx+1\n    for i in l:\n        print(i,end=\" \")\n    print\nelse:\n    print(-1)\n            \n            \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().split()))\na = [-1] * n\nused = [-1] * 100001\nflag = 0\nfor i in range(n):\n    if lst[i] > i+1:\n        flag = 1\n        break\n    used[lst[i]] = 1\nnot_v = list()\nfor i in range(100001):\n    if used[i] == -1:\n        not_v.append(i)\nfor i in range(1, n):\n    if lst[i] != lst[i-1]:\n        a[i] = lst[i-1]\nj = 0\nfor i in range(n):\n    if a[i] == -1:\n       a[i] = not_v[j]\n       j += 1\nprint(*a)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[100004], exist[100004], used[100004];\nvoid solve() {\n  cin >> n;\n  memset(exist, 0, sizeof(exist));\n  memset(used, 0, sizeof(used));\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    exist[a[i]] = 1;\n  }\n  a[0] = 0;\n  int cur = 0;\n  vector<int> ans;\n  for (int i = 1; i <= n; i++) {\n    while (exist[cur] || used[cur]) cur++;\n    if (a[i] != a[i - 1]) {\n      ans.push_back(a[i - 1]);\n      used[a[i - 1]] = 1;\n    } else {\n      used[cur] = 1;\n      ans.push_back(cur++);\n    }\n  }\n  for (auto k : ans) cout << k << ' ';\n}\nint main() {\n  int T;\n  T = 1;\n  while (T--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.InputMismatchException;\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\npublic class Main{\n    public static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n     \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n     \n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n     \n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n     \n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n     \n            while(isSpaceChar(c))\n                c = read();\n     \n            int sgn = 1;\n     \n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n     \n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n     \n            return res * sgn;\n        }\n     \n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n     \n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n     \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n     \n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n     \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next() {\n            return readString();\n        }\n     \n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n \n    static long gcd(long a, long b){\n        if (a == 0)\n            return b;  \n        return gcd(b % a, a);  \n    }\n    static long lcm(long a, long b)  {\n        return (a*b)/gcd(a, b);  \n    }\n    public static void sortbyColumn(int arr[][], int col) \n    { \n        \n        Arrays.sort(arr, new Comparator<int[]>() { \n            \n          @Override              \n          \n          public int compare(final int[] entry1,  \n                             final int[] entry2) { \n  \n            \n            if (entry1[col] > entry2[col]) \n                return 1; \n            else\n                return -1; \n          } \n        });  \n    } \n    static long func(long a[],long size,int s){\n        long max1=a[s];\n        long maxc=a[s];\n        for(int i=s+1;i<size;i++){\n            maxc=Math.max(a[i],maxc+a[i]);\n            max1=Math.max(maxc,max1);\n        }\n        return max1;\n    }\n    public static class Pair<U extends Comparable<U>, V extends Comparable<V>> implements Comparable<Pair<U, V>> {\n        public U x;\n        public V y;\n    \n        public Pair(U x, V y) {\n            this.x = x;\n            this.y = y;\n        }\n    \n        public int hashCode() {\n            return (x == null ? 0 : x.hashCode() * 31) + (y == null ? 0 : y.hashCode());\n        }\n    \n        public boolean equals(Object o) {\n            if (this == o)\n                return true;\n            if (o == null || getClass() != o.getClass())\n                return false;\n            Pair<U, V> p = (Pair<U, V>) o;\n            return (x == null ? p.x == null : x.equals(p.x)) && (y == null ? p.y == null : y.equals(p.y));\n        }\n    \n        public int compareTo(Pair<U, V> b) {\n            int cmpU = x.compareTo(b.x);\n            return cmpU != 0 ? cmpU : y.compareTo(b.y);\n        }\n    \n        public String toString() {\n            return String.format(\"(%s, %s)\", x.toString(), y.toString());\n        }\n    \n    }\n    static LinkedList<Integer> li;\n    static int ans1=0,ans2=0;\n    static long dist[];\n    static int visited[];\n    //static int arr[];\n    static ArrayList<Integer> adj[];\n \n// \tstatic void bfs(int x){\n// \t    Queue<Integer> q=new LinkedList<>();\n// \t    q.add(x);\n// \t    int lm=c+1;\n// \t    while(!q.isEmpty()){\n// \t        int p=q.poll();\n// \t        for(int i:adj[p]){\n// \t            if(dist[i]>dist[p]+c[p]){\n// \t                dist[i]=dist[p]+c[p]\n// \t                q.add(i);\n// \t            }\n// \t        }\n// \t    }\n// \t}\n    public static void main(String args[]){\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n        int n,i,j,flag=0;\n        n=in.nextInt();\n        int arr[]=new int[n];\n        int brr[]=new int[n];\n        TreeSet<Integer> tr1=new TreeSet<>();\n        TreeSet<Integer> tr2=new TreeSet<>();\n        for(i=0;i<n;i++){\n            arr[i]=in.nextInt();\n            if(arr[i]>i+1){\n                flag=1;\n            }\n            tr1.add(arr[i]);\n        }\n        if(flag==1){\n            w.println(-1);\n            w.close();\n            return;\n        }\n        for(i=0;i<=n;i++){\n            if(!tr1.contains(i)){\n                tr2.add(i);\n            }\n        }\n        if(arr[0]>0){\n            brr[0]=tr2.pollFirst();\n            for(i=1;i<n;i++){\n                if(arr[i]==arr[i-1]){\n                    brr[i]=tr2.pollFirst();\n                }else{\n                    brr[i]=arr[i-1];\n                }\n            }\n        }else{\n            j=0;\n            while(j<n&&arr[j]==0){\n                brr[j]=tr2.pollFirst();\n                j++;\n            }\n            for(i=j;i<n;i++){\n                if(arr[i]==arr[i-1]){\n                    brr[i]=tr2.pollFirst();\n                }else{\n                    brr[i]=arr[i-1];\n                }\n            }\n        }\n        for(i=0;i<n;i++){\n            w.print(brr[i]+\" \");\n        }\n        \n        \n        \n        \n        w.close();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n/**\n * @project: Codeforces649\n * @author: izhanatuly\n * @date: 13/06/2020\n */\n\npublic class C {\n    static Scanner scanner;\n\n    public static void main(String[] args) {\n        scanner = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n        runTestCase();\n    }\n\n    private static void runTestCase() {\n        int n = scanner.nextInt();\n        int[] nums = new int[n];\n        boolean[] taken = new boolean[n+1];\n        for(int i=0; i<n; i++) {\n            nums[i] = scanner.nextInt();\n            taken[nums[i]] = true;\n        }\n        int[] res = new int[n];\n        Arrays.fill(res, -1);\n        for(int i=1; i<n; i++) if(nums[i] != nums[i-1]) {\n            res[i] = nums[i-1];\n        }\n        int next = 0;\n        for(int i=0; i<n; i++) if(res[i] == -1) {\n            while(taken[next]) {\n                next++;\n            }\n            res[i] = next;\n            taken[next] = true;\n        }\n        boolean haveGaps = false;\n        int lastTaken = -1;\n        for(int i=0; i<n+1; i++) if(taken[i]) {\n            if(lastTaken != i-1) {\n                haveGaps = true;\n            }\n            lastTaken = i;\n        }\n        if(haveGaps) {\n            System.out.println(-1);\n        } else {\n            StringBuilder sb = new StringBuilder();\n            for(int num : res) {\n                sb.append(num);\n                sb.append(' ');\n            }\n            System.out.println(sb.toString());\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\nconst int maxn = 1e6 + 10;\nint n, a[maxn], b[maxn];\nint vis[maxn], now = 0;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    vis[a[i]]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    if (i >= 2 and vis[a[i - 1]] == 0) {\n      b[i] = a[i - 1];\n      if (now == b[i]) now++;\n    } else {\n      while (vis[now]) now++;\n      b[i] = now;\n      now++;\n    }\n    vis[a[i]]--;\n  }\n  bool t = 1;\n  memset(vis, 0, sizeof(vis));\n  now = 0;\n  for (int i = 1; i <= n; i++) {\n    vis[b[i]]++;\n    while (vis[now]) now++;\n    if (now != a[i]) {\n      t = 0;\n      break;\n    }\n  }\n  if (!t) {\n    cout << -1 << '\\n';\n    return 0;\n  }\n  for (int i = 1; i <= n; i++) cout << b[i] << ' ';\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.TreeSet;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author unknown\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        CEhabAndPrefixMEXs solver = new CEhabAndPrefixMEXs();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CEhabAndPrefixMEXs {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            int[] arr = new int[n];\n            TreeSet<Integer> ts = new TreeSet<>();\n            int[] brr = new int[n];\n            Arrays.fill(brr, -1);\n            for (int i = 0; i < 101000; i++) {\n                ts.add(i);\n            }\n            for (int i = 0; i < n; i++) {\n                int x = in.nextInt();\n                arr[i] = x;\n                ts.remove(x);\n                if (i > 0) {\n                    if (arr[i] != arr[i - 1]) {\n                        brr[i] = arr[i - 1];\n//                    hs.remove(arr[i-1]);\n                    }\n                }\n            }\n            for (int i = 0; i < n; i++) {\n                if (brr[i] == -1) {\n                    brr[i] = ts.pollFirst();\n                }\n            }\n            out.println(brr);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(int[] array, int startFrom) {\n            for (int i = startFrom; i < array.length; ++i) {\n                if (i != startFrom) {\n                    writer.print(' ');\n                }\n                writer.print(array[i]);\n            }\n        }\n\n        public void println(int[] array, int startFrom) {\n            print(array, startFrom);\n            writer.println();\n        }\n\n        public void println(int[] array) {\n            println(array, 0);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(3, \"Ofast\", \"inline\")\nusing namespace std;\nnamespace FastIO {\nchar print_f[105];\nvoid read() {}\nvoid print() { putchar('\\n'); }\ntemplate <typename T, typename... T2>\ninline void read(T &x, T2 &...oth) {\n  x = 0;\n  char ch = getchar();\n  long long f = 1;\n  while (!isdigit(ch)) {\n    if (ch == '-') f *= -1;\n    ch = getchar();\n  }\n  while (isdigit(ch)) {\n    x = x * 10 + ch - 48;\n    ch = getchar();\n  }\n  x *= f;\n  read(oth...);\n}\ntemplate <typename T, typename... T2>\ninline void print(T x, T2... oth) {\n  long long p3 = -1;\n  if (x < 0) putchar('-'), x = -x;\n  do {\n    print_f[++p3] = x % 10 + 48;\n  } while (x /= 10);\n  while (p3 >= 0) putchar(print_f[p3--]);\n  putchar(' ');\n  print(oth...);\n}\n}  // namespace FastIO\nusing FastIO::print;\nusing FastIO::read;\nconst int inf = 0x3f3f3f3f;\nconst int mod = 1e9 + 7;\nconst int maxn = 1e6 + 5;\nint a[maxn], b[maxn], vis[maxn];\nmap<int, int> mp;\nint main() {\n  int n;\n  read(n);\n  for (int i = 0; i <= 2 * n; i++) mp[i] = 0;\n  int ok = 0;\n  for (int i = 1; i <= n; i++) {\n    read(a[i]);\n    vis[a[i]]++;\n    if (a[i] > i) ok = 1;\n  }\n  if (ok) {\n    cout << \"-1\\n\";\n    return 0;\n  }\n  int pre = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = pre;; j++) {\n      if (!vis[j]) {\n        b[i] = j;\n        vis[j]++;\n        break;\n      }\n    }\n    vis[a[i]]--;\n    if (vis[a[i]] == 0)\n      pre = a[i];\n    else\n      pre = b[i] + 1;\n  }\n  for (int i = 1; i <= n; i++) cout << b[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException{\n        //BufferedReader f = new BufferedReader(new FileReader(\"uva.in\"));\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        int n = Integer.parseInt(f.readLine());\n        StringTokenizer st = new StringTokenizer(f.readLine());\n        int[] a = new int[n];\n        HashSet<Integer> invalid = new HashSet<>();\n        for(int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(st.nextToken());\n            invalid.add(a[i]);\n        }\n        int[] b = new int[n];\n        int temp = 0;\n        while(invalid.contains(temp)) {\n            temp++;\n        }\n        invalid.add(temp);\n        b[0] = temp;\n        for(int i = 1; i < n; i++) {\n            if(a[i] != a[i-1]) {\n                b[i] = a[i-1];\n            } else {\n                while(invalid.contains(temp)) {\n                    temp++;\n                }\n                invalid.add(temp);\n                b[i] = temp;\n            }\n        }\n        out.print(b[0]);\n        for(int i = 1; i < n; i++) {\n            out.print(\" \" + b[i]);\n        }\n        out.println();\n        f.close();\n        out.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "#------------------------------warmup----------------------------\nimport os\nimport sys\nimport math\nfrom io import BytesIO, IOBase\nfrom fractions import Fraction\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n#-------------------game starts now----------------------------------------------------\nn=int(input())\na=list(map(int,input().split()))\nch=1\nmx=0\nfor i in range (n):\n    if a[i]>i+1:\n        ch=0\n        break\n    mx=max(mx,a[i])\nif ch==0:\n    print(-1)\nelse:\n    b=[-1]*n\n    lost=list()\n    if a[0]!=0:\n        lost.append(0)\n    j=0\n    for i in range (1,n):\n        if a[i]!=a[i-1]:\n            b[i]=a[i-1]\n            if a[i-1]==0:\n                j=i\n            for j in range (a[i-1]+1,a[i]):\n                lost.append(j)\n    l=len(lost)\n    for i in range (l,n):\n        lost.append(a[-1]+1)\n    #print(b)\n    #print(lost)\n    ct=0\n    for i in range (n):\n        if b[i]==-1:\n            b[i]=lost[ct]\n            ct+=1\n    print(*b)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nvalue = n\nused = set()\nb = [-1] * n\nfor i in range(n - 1, -1, -1):\n    used.add(a[i])\n    if i > 0 and a[i] > a[i - 1]:\n        b[i] = a[i - 1]\n    else:\n        while value >=0 and value in used:\n            value -= 1\n        if value >= 0:\n            b[i] = value\n            if value > 0:\n                value -= 1\n        else:\n            b[i] = n\nused = [0] * (n + 1)\nmex = 0\nfor i in range(n):\n    used[b[i]] = 1\n    while used[mex]:\n        mex += 1\n    if a[i] != mex:\n        print(-1)\n        break\nelse:\n    print(*b)\n            \n    \n            \n            "
        },
        {
            "language": 3,
            "solution": "production = True\n\nimport sys, math\n\ndef input(input_format = 0, multi = 0):\n\n    if multi > 0: return [input(input_format) for i in range(multi)]\n    else:\n        next_line = sys.stdin.readline()\n\n        if input_format >= 10:\n            use_list = False\n            input_format = int(str(input_format)[-1])\n        else: use_list = True\n\n        if input_format == 0: formatted_input = [next_line]\n        elif input_format == 1: formatted_input = list(map(int, next_line.split()))\n        elif input_format == 2: formatted_input = list(map(float, next_line.split()))\n        elif input_format == 3: formatted_input = next_line.split()\n        elif input_format == 4: formatted_input = (lambda x: [x[0], list(map(int, x[1:]))])(next_line.split())\n        elif input_format == 5: formatted_input = (lambda x: [x[0], list(map(float, x[1:]))])(next_line.split())\n        else: formatted_input = [next_line]\n\n        return formatted_input if use_list else formatted_input[0]\n\n\ndef out(output_line, output_format = 0, newline = True):\n\n    formatted_output = \"\"\n\n    if output_format == 0: formatted_output = str(output_line)\n    elif output_format == 1: formatted_output = \" \".join(map(str, output_line))\n    elif output_format == 1: formatted_output = \"\\n\".join(map(str, output_line))\n\n    print(formatted_output, end = \"\\n\" if newline else \"\")\n\n\ndef log(*args):\n    if not production:\n        print(\"$$$\")\n        print(*args)\n\n\n#\n#   >>>>>>>>>>>>>>> START OF SOLUTION <<<<<<<<<<<<<<\n#\n\n\ndef solve():\n\n    n = input(11)\n    a = input(1)\n\n    if a != sorted(a):\n        out(-1)\n        return\n\n    y = set(a)\n    p = []\n\n    for i in range(3 * (10 ** 6), -1, -1):\n        if i not in y:\n            p.append(i)\n\n    k = []\n\n    log(a)\n\n    for i, j in enumerate(a):\n        log(i, j)\n        k.append(p.pop())\n\n        if i < n - 1 and j < a[i + 1]:\n            p.append(j)\n\n    log(k)\n    out(k, 1)\n\n    return\n\n\n# for i in range(input(11)): solve()\nsolve()\n\n#\n#   >>>>>>>>>>>>>>>> END OF SOLUTION <<<<<<<<<<<<<<<\n#\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = tuple(map(int, input().split()))\nsa = set(a)\nsan = set()\nmin_not_in = 0\nprev = 0\nans = [0] * n\nfor i in range(n):\n    cur = a[i]\n    if cur == prev:\n        while min_not_in in sa:\n            min_not_in += 1\n        ans[i] = min_not_in\n        sa.add(min_not_in)\n        san.add(min_not_in)\n    else:\n        ans[i] = prev\n        sa.add(prev)\n        san.add(prev)\n        while prev in san:\n            prev += 1\n        if cur != prev:\n            print(-1)\n            break\nelse:\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput=stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nb=[-1]*n\nfor i in range(1,n):\n  if a[i]!=a[i-1]:\n    b[i]=a[i-1]\nsa=set(a)\nx=0\nfor i in range(n):\n  if b[i]==-1:\n    while x in sa:\n      x+=1\n    b[i]=x\n    x+=1\nprint(*b)"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class C {\n\tpublic static void main(String[] args) {\n\t\tScanner sc= new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint a[] = new int[n];\n\t\tSet<Integer> covered = new HashSet<Integer>();\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t\tcovered.add(a[i]);\n\t\t\t\n\t\t}\n\t\t\n\t\tTreeSet<Integer> notCovered = new TreeSet<Integer>();\n\t\tfor(int i=0;i<=n;i++) {\n\t\t\tif(!covered.contains(i)) {\n\t\t\t\tnotCovered.add(i);\n\t\t\t}\n\t\t}\n\t\tfor(int i=n+1;i<=2*n;i++) {\n\t\t\tnotCovered.add(i); //do i need this\n\t\t}\n\t\tint [] lastIndex = new int[n+1];\n\t\tArrays.fill(lastIndex,-1);\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tlastIndex[a[i]] = Math.max(lastIndex[a[i]],i);\n\t\t}\n\t\tint b[] = new int[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\t\n\t\t\tb[i] = notCovered.first();\n\t\t\t\n\t\t\tnotCovered.remove(notCovered.first());\n\t\t\tif(lastIndex[a[i]]==i) {\n\t\t\t\tnotCovered.add(a[i]);\n\t\t\t}\n\t\t}\n\t\tStringBuilder sb= new StringBuilder();\n\t\tboolean works = true;\n\t\tTreeSet<Integer> work = new TreeSet<Integer>();\n\t\tfor(int i=0;i<=n;i++) {\n\t\t\twork.add(i);\n\t\t}\n\t\tfor(int i=0;i<n;i++) {\n\t\t\t\n\t\t\tif(b[i]<=n) {\n\t\t\t\tif(work.contains(b[i]))\n\t\t\t\twork.remove(b[i]);\n\t\t\t}\n\t\t\tif(work.first()!=a[i]) {\n\t\t\t\tworks = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!works) {\n\t\t\tSystem.out.println(-1);\n\t\t\treturn;\n\t\t}\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tsb.append(b[i] + \" \");\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t\t\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = [int(x) for x in input().split()]\nrs = set(A)\nmx = -1\np = -1\nans = []\n\nfor a in A:\n    if p >= 0 and p != a:\n        ans.append(p)\n        if p == mx + 1:\n            mx += 1\n    else:\n        mx += 1\n        while mx in rs:\n            mx += 1\n        ans.append(mx)\n    \n    if mx + 1 < a:\n        print(-1)\n        break\n    p = a\n\nprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = list(map(int, input().split()))\nz = True\nfor i in range(len(A)):\n    if A[i] > i + 1:\n        z = False\n        break\nif not z:\n    print(-1)\nelse:\n    C = []\n    B = [-10]\n    for i in range(1, len(A)):\n        if A[i] != A[i - 1]:\n            B.append(A[i - 1])\n            C.append(A[i - 1])\n        else:\n            B.append(-10)\n    C.append(A[-1])\n    C.append(10 ** 18)\n    q = 0\n    X = 0#A[0] - 1\n    #print(C)\n    #print(B)\n    for i in range(len(B)):\n        if B[i] == -10:\n            while X == C[q]:\n                q += 1\n                X += 1\n\n            B[i] = X\n            X += 1\n\n\n    print(*B)"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom array import array  # noqa: F401\nimport typing as Tp  # noqa: F401\n\n\ndef input():\n    return sys.stdin.buffer.readline().decode('utf-8')\n\n\ndef output(*args):\n    sys.stdout.buffer.write(\n        ('\\n'.join(map(str, args)) + '\\n').encode('utf-8')\n    )\n\n\ndef main():\n    from heapq import heappop, heappush\n    from collections import Counter\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = Counter(a)\n    used = [0] * (2 * 10**5)\n    hq = [i for i in range(2 * 10**5) if cnt[i] == 0]\n    ans = []\n    l = 0\n\n    for i, v in enumerate(a):\n        ans.append(heappop(hq))\n        used[ans[-1]] = 1\n        if not (all(used[j] for j in range(l, v)) and not used[v]):\n            print(-1)\n            exit()\n        l = v\n        cnt[v] -= 1\n        if cnt[v] == 0:\n            heappush(hq, v)\n\n    output(' '.join(map(str, ans)))\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\n\n\nimport static java.lang.Math.*;\n\n public class Solution implements Runnable {\n     \n    public void solve() throws Exception {\n         int n=sc.nextInt();\n         int arr[]=new int[2*n+1];\n         int xx[]=new int[n];\n         for(int i=0;i<n;i++)\n         {\n        \txx[i]=sc.nextInt();\n        \t\n        \tarr[xx[i]]=1;\n         }\n         int result[]=new int[n];\n         int count=0;\n         HashMap<Integer,Integer> map=new HashMap<>();\n         \n         int c=0;\n         \n         while(c!=n)\n         {\n        \t if(c>=0)\n        \t {\n        \t\t \tif(c>0 && xx[c]!=xx[c-1])\n        \t\t \t{\n        \t\t \t\tif(!map.containsKey(xx[c-1]))\n        \t\t \t\t{\n        \t\t \t\t\tmap.put(xx[c-1],1);\n        \t\t \t\t\tresult[c]=xx[c-1];\n        \t\t \t\t\tc++;\n        \t\t \t\t\tif(xx[c-1]+1>count)\n        \t\t \t\t\tcount=xx[c-1]+1;\n        \t\t \t\t}\n        \t\t \t}\n        \t \n        \t else \n        \t\t {if(arr[count]!=1 || (count<xx[c]))\n        \t {\n        \t\t\t \n        \t\t result[c]=count;\n        \t\t c++;\n        \t\t map.put(count, 1);\n        \t\t \n        \t }\n        \t\t count++;\n        \t\t }\n        \t \n         }\n         }\n          for(int i=0;i<n;i++)\n          {\n        \t  System.out.print(result[i]+\" \");\n          }\n             \n                \n            \n         }\n            \n         \n    \n             \n         \n        \n        \n       \n        \n        \n    \n    // public boolean binarysearch(int limit )\n    \n    static Throwable uncaught;\n\n    BufferedReader in;\n    FastScanner sc;\n    PrintWriter out;\n\n    @Override\n    public void run() {\n        try {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n            sc = new FastScanner(in);\n            solve();\n        } catch (Throwable uncaught) {\n            Solution.uncaught = uncaught;\n        } finally {\n            out.close();\n        }\n    }\n\n    public static void main(String[] args) throws Throwable {\n        Thread thread = new Thread(null, new Solution(), \"\", (1 << 26));\n        thread.start();\n        thread.join();\n        if (Solution.uncaught != null) {\n            throw Solution.uncaught;\n        }\n    }\n\n}\n\nclass FastScanner {\n\n    BufferedReader in;\n    StringTokenizer st;\n\n    public FastScanner(BufferedReader in) {\n        this.in = in;\n    }\n\n    public String nextToken() throws Exception {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n\n    public int nextInt() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n\n    public long nextLong() throws Exception {\n        return Long.parseLong(nextToken());\n    }\n\n    public double nextDouble() throws Exception {\n        return Double.parseDouble(nextToken());\n    }\n\n}\n                  \n                  \n                  \n            \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100010];\nint b[100010];\nint main() {\n  std::ios::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  queue<int> empty_location;\n  int k = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] > k) {\n      b[i] = k;\n      for (int j = a[i] - 1; j > k; j--) {\n        if (empty_location.empty()) {\n          cout << \"-1\" << endl;\n          return 0;\n        }\n        int location = empty_location.front();\n        empty_location.pop();\n        b[location] = j;\n      }\n      k = a[i];\n    } else {\n      empty_location.push(i);\n    }\n  }\n  while (!empty_location.empty()) {\n    int location = empty_location.front();\n    empty_location.pop();\n    b[location] = k + 1;\n  }\n  for (int i = 0; i < n; i++) {\n    cout << b[i] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import os,io\nfrom sys import stdout\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\nn = int(input())\nl = list(map(int, input().split()))\n\nresult      = [-1] * n\ncant        = [0]  * (n*2)\n\ncant[l[-1]] = 1\n\nfor i in range(1, n):\n    if l[i] != l[i-1]:\n        result[i] = l[i-1]\n        cant[result[i]] = 1\n\ni = 0\nfor j in range(n):\n    while cant[i]:\n        i += 1\n    if result[j] == -1:\n        result[j] = i\n        cant[i] = 1\n\nprint(\" \".join([str(e) for e in result]))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nse = set(range(n+1)) - set(a)\nli = list(se)\nli.sort()\npre = 0\nidx = 0\nans = []\nfor i in range(n):\n    if a[i]>pre:\n        ans.append(pre)\n        if pre in se and idx<len(li)-1:\n            idx += 1\n        pre = a[i]\n    else:\n        ans.append(li[idx])\n        if idx<len(li)-1:\n            idx += 1\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a[1000005];\nlong long b[1000005];\nlong long tp[5000005];\nlong long pp[1000005];\nlong long cc[1000005];\nvector<long long> V;\npriority_queue<long long, vector<long long>, greater<long long>> Q;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  long long n;\n  cin >> n;\n  int bj = 0;\n  long long minn = 0;\n  long long mi = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    tp[a[i]]++;\n  }\n  for (long long i = 0; i <= 3 * n; i++) {\n    if (tp[i] == 0) {\n      Q.push(i);\n    }\n  }\n  long long cnt = 0;\n  for (int i = 1; i <= n; i++) {\n    b[i] = Q.top();\n    Q.pop();\n    tp[a[i]]--;\n    if (tp[a[i]] == 0) {\n      Q.push(a[i]);\n    }\n  }\n  long long M = 0;\n  for (int i = 1; i <= n; i++) {\n    cc[b[i]]++;\n    while (cc[M] > 0) {\n      M++;\n    }\n    if (M < a[i]) {\n      bj = 1;\n      break;\n    }\n  }\n  if (bj == 1) {\n    cout << \"-1\\n\";\n  } else {\n    for (int i = 1; i <= n; i++) {\n      cout << b[i] << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import os,io\nfrom sys import stdout\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nn=int(input())\na=list(map(int,input().split()))\nv1=[False]*(n+1)\ns1=sorted(list(set(a)),reverse=True)\nfor i in s1:\n    v1[i]=True\ntmp=0\nb=[0]*n\nflag=True\nfor i in range(n):\n    if len(s1)>0 and a[i]>s1[-1]:\n        b[i]=s1[-1]\n        s1.pop()\n    elif flag==True:\n        if tmp==a[i] or v1[tmp]==True:\n            while True:\n                tmp+=1\n                if tmp>n:\n                    flag=False\n                    b[i]=n+5\n                    break\n                if v1[tmp]==False:\n                    b[i]=tmp\n                    tmp+=1\n                    break\n        else:\n            b[i]=tmp\n            tmp+=1\n    else:\n        b[i]=n+5\nprint(*b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, i, j, p, l, t, z, x, k = 0, q;\n  scanf(\"%lld\", &n);\n  long long a[n], b[n];\n  bool c[n + 10];\n  for (i = 0; i < n + 10; i++) {\n    c[i] = true;\n  }\n  for (i = 0; i < n; i++) {\n    scanf(\"%lld\", &a[i]);\n    c[a[i]] = false;\n    b[i] = -1;\n  }\n  for (i = n - 1; i >= 1; i--) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      c[a[i - 1]] = false;\n    }\n  }\n  p = n;\n  for (i = 0; i < n; i++) {\n    if (b[i] == -1) {\n      for (j = k; j <= p + 10; j++) {\n        if (c[j] == true) {\n          b[i] = j;\n          k = j + 1;\n          break;\n        }\n      }\n    }\n  }\n  for (i = 0; i < n; i++) {\n    cout << b[i] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\"\"\" Python 3 compatibility tools. \"\"\"\nfrom __future__ import division, print_function\nimport itertools\nimport sys\nimport os\nfrom io import BytesIO, IOBase\n\n\nif sys.version_info[0] < 3:\n  input = raw_input\n  range = xrange\n\n  filter = itertools.ifilter\n  map = itertools.imap\n  zip = itertools.izip\n\n\ndef is_it_local():\n  script_dir = str(os.getcwd()).split('/')\n  username = \"dipta007\"\n  return username in script_dir\n\n\ndef READ(fileName):\n  if is_it_local():\n    sys.stdin = open(f'./{fileName}', 'r')\n\n# region fastio\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n  newlines = 0\n\n  def __init__(self, file):\n    self._fd = file.fileno()\n    self.buffer = BytesIO()\n    self.writable = \"x\" in file.mode or \"r\" not in file.mode\n    self.write = self.buffer.write if self.writable else None\n\n  def read(self):\n    while True:\n      b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n      if not b:\n          break\n      ptr = self.buffer.tell()\n      self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n    self.newlines = 0\n    return self.buffer.read()\n\n  def readline(self):\n    while self.newlines == 0:\n      b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n      self.newlines = b.count(b\"\\n\") + (not b)\n      ptr = self.buffer.tell()\n      self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n    self.newlines -= 1\n    return self.buffer.readline()\n\n  def flush(self):\n    if self.writable:\n      os.write(self._fd, self.buffer.getvalue())\n      self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n  def __init__(self, file):\n    self.buffer = FastIO(file)\n    self.flush = self.buffer.flush\n    self.writable = self.buffer.writable\n    self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n    self.read = lambda: self.buffer.read().decode(\"ascii\")\n    self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\nif not is_it_local():\n  sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n  input = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\n\ndef input1(type=int):\n  return type(input())\n\n\ndef input2(type=int):\n  [a, b] = list(map(type, input().split()))\n  return a, b\n\n\ndef input3(type=int):\n  [a, b, c] = list(map(type, input().split()))\n  return a, b, c\n\n\ndef input_array(type=int):\n  return list(map(type, input().split()))\n\n\ndef input_string():\n  s = input()\n  return list(s)\n\nif is_it_local():\n  def debug(*args):\n    st = \"\"\n    for arg in args:\n      st += f\"{arg} \"\n    print(st)\nelse:\n  def debug(*args):\n    pass\n\n##############################################################\n\nimport heapq \n\n\ndef main():\n  n = input1()\n  ar = input_array()\n\n  mp = {}\n  flg = 1\n  last = 0\n  for i in range(n-1, -1, -1):\n    if ar[i] not in mp:\n      mp[ar[i]] = 0\n    mp[ar[i]] += 1\n    last = max(last, ar[i])\n    if ar[i] > i + 1:\n      flg = 0\n\n  if flg == 0:\n    print(-1)\n    exit()\n  \n  ll = []\n  heapq.heapify(ll)\n  for i in range(0, last):\n    if mp.get(i, 0) == 0:\n      heapq.heappush(ll, i)\n\n  res = []\n  for v in ar:\n    now = -1\n    if len(ll) > 0:\n      now = heapq.heappop(ll)\n      # heapq.remove(now)\n    else:\n      now = last + 1\n    \n    res.append(now)\n\n    mp[v] -= 1\n    if mp[v] == 0:\n      heapq.heappush(ll, v)\n  \n  print(\" \".join(str(x) for x in res))\n  pass\n\nif __name__ == '__main__':\n  # READ('in.txt')\n  main()"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.InputStreamReader;\nimport java.util.TreeSet;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CEhabAndPrefixMEXs solver = new CEhabAndPrefixMEXs();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CEhabAndPrefixMEXs {\n        public void solve(int testNumber, Scanner sc, PrintWriter pw) {\n            int n = sc.nextInt();\n            int[] arr = new int[n];\n            TreeSet<Integer> set = new TreeSet<>();\n            int[] last = new int[n + 1];\n            for (int i = 0; i < n; i++) {\n                arr[i] = sc.nextInt();\n                set.add(i);\n                last[arr[i]] = i;\n            }\n            set.add(n);\n            for (int i = 0; i < n; i++)\n                set.remove(arr[i]);\n            for (int i = 0; i < n; i++) {\n                if (arr[i] > i + 1) {\n                    pw.println(-1);\n                    return;\n                }\n            }\n            for (int i = 0; i < n; i++) {\n                pw.print(set.pollFirst() + \" \");\n                if (last[arr[i]] == i)\n                    set.add(arr[i]);\n            }\n        }\n\n    }\n\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(FileReader r) {\n            br = new BufferedReader(r);\n        }\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import heapq\n\nif __name__ == '__main__':\n    n = int(input())\n    a = [int(e) for e in input().split()]\n    used = set(a)\n    prior_queue = [i for i in range(n + 1) if i not in used]\n    heapq.heapify(prior_queue)\n    res_arr = []\n    flag = True\n    for i in range(len(a)):\n        if a[i] >= (i + 1) * 2:\n            flag = False\n            break\n        cur_elem = heapq.heappop(prior_queue)\n        res_arr.append(cur_elem)\n        if i + 1 < len(a) and a[i] < a[i + 1]:\n            heapq.heappush(prior_queue, a[i])\n    if flag:\n        for e in res_arr:\n            print(e, end=\" \")\n    else:\n        print(-1, end=\"\")\n    print()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = [int(i) for i in input().split()]\nfor i in range(n):\n    if A[i] > i+1:\n        print(-1)\n        break\nelse:\n    ans = [-1] * n\n    visited = [False] * (n+1)\n    for i in range(1,n):\n        if A[i] != A[i-1]:\n            ans[i] = A[i-1]\n            visited[A[i-1]] = True\n    visited[A[-1]] = True\n    pointer = 0\n    for i in range(n):\n        if ans[i] == -1: #fill in\n            while visited[pointer]:\n                pointer += 1\n            visited[pointer] = True\n            ans[i] = pointer\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "def solve(n, a):\n    sol = [-1]*n\n    mx = a[-1]+1\n    if a[0] == 1:\n        sol[0] = 0\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            sol[i] = a[i-1]\n    j = n-1\n    while sol[j] == -1:\n        sol[j] = mx\n        j -= 1\n    if j > -1:\n        used = [False]*a[j]\n        for i in range(n):\n            if sol[i] != -1 and sol[i] < len(used):\n                used[sol[i]] = True\n        i = len(used)-1\n        while j >= 0:\n            if sol[j] != -1:\n                used[sol[j]] = True\n            else:\n                while i >= 0 and used[i]:\n                    i -= 1\n                if i >= 0 and i > a[j]:\n                    sol[j] = i\n                    used[i] = True\n                else:\n                    sol[j] = mx\n            j -= 1\n    return sol\n \nn = int(input())\na = list(map(int, input().split()))\ns = solve(n, a)\nprint(' '.join(map(str, s)) if s else -1)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nt=1\nfor _ in range(t):\n    maxi=10**6\n    n=int(input())\n    arr=list(map(int,input().split()))\n    l=[-1]*n\n    vacant=n\n    left=max(arr)\n    cur=arr[0]\n    used=[-1]*(10**6+1)\n    allow=arr[-1]-1\n\n\n    for i in range(n):\n        if(arr[i]!=cur):\n            l[i]=cur\n            used[cur]=1\n            cur=arr[i]\n            vacant-=1\n            \n            left-=1\n    if(l[-1]==-1):        \n        l[-1]=10**6\n        used[10**6]=1\n        vacant-=1\n    \n    for i in range(n-2,-1,-1):\n        while(used[allow]==1):\n            allow-=1\n        while(used[maxi]==1):\n            maxi-=1\n        #print(i,allow)\n        if((arr[i]<allow or vacant<=left) and allow>=0):\n            if(l[i]==-1):\n                l[i]=allow\n                \n                used[allow]=1\n                allow-=1\n                left-=1\n                vacant-=1\n        elif(arr[i]>=allow):\n            if(l[i]==-1):\n                l[i]=maxi\n                \n                used[maxi]=1\n                maxi-=1\n                vacant-=1\n    #print(used[1])   \n    #print(left)\n    if(arr[0]==1 and len(arr)==1):\n        print(0)\n    elif(left>0):\n        print(-1)\n        #print(*l)\n    else:\n        print(*l)\n        \n    \n        \n    "
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class Mamo {\n    static long mod=998244353;\n    static FastReader in=new FastReader();\n    static List<Integer >G[];\n    static boolean B=true;\n    static StringBuilder Sd=new StringBuilder();\n    public static void main(String [] args) {\n    \t//Dir by MohammedElkady\n    \tint n=in.nextInt(),a[]=new int [n],b[]=new int[n],x=0,v=0,lo=0;\n    \tArrayList<Integer> pos=new ArrayList();\n    \tfor(int i=0;i<n;i++) {b[i]=-1;}\n    \tfor(int i=0;i<n;i++)a[i]=in.nextInt();\n    for(int i=0;i<n;i++) {\n    \tif(a[i]==x) {v++;pos.add(i);}\n    \telse if(a[i]>x+v+1){ \n    \t\tlo=-1;break;\n    \t}\n    \telse {\n    \t\tint po=x+1;\n    \t\tb[i]=x;x=a[i];\n    \t\twhile(a[i]-->0&&po<x) {\n    \t\t\tb[pos.get(pos.size()-1)]=po;\n    \t\t\tpos.remove(pos.size()-1);\n    \t\t\tpo++;\n    \t\t}\n    \t}\n    }\n    if(lo==-1) {Sd.append(-1+\"\\n\");}\n    else {\n    \tint oo=n+90;\n    \tfor(int i=0;i<n;i++)\n    \t\tif(b[i]==-1) {Sd.append(oo+\" \");oo++;}\n    \t\telse Sd.append(b[i]+\" \");\n    }\n    \tSystem.out.print(Sd);\n    }\n    static long gcd(long g,long x){if(x<1)return g;else return gcd(x,g%x);}\n    static void soutln(String S) {Sd.append(S+\"\\n\");}\n    static void sout(String S) {Sd.append(S);}\n}\nclass node implements Comparable<node>{\nint f, e;\nnode(int tt,int ll){\nf=tt;e=ll;\n}\n    @Override\n    public int compareTo(node o) {\n    return f-o.f;    \n    }\n}\nclass FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public FastReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n}\n \nclass Sorting{\n \n public static int[] bucketSort(int[] array, int bucketCount) {\n \n if (bucketCount <= 0) throw new IllegalArgumentException(\"Invalid bucket count\");\n \n if (array.length <= 1) return array; //trivially sorted\n \n \n \n int high = array[0];\n \n int low = array[0];\n \n for (int i = 1; i < array.length; i++) { //find the range of input elements\n \n if (array[i] > high) high = array[i];\n \n if (array[i] < low) low = array[i];\n \n }\n \n double interval = ((double)(high - low + 1))/bucketCount; //range of one bucket\n \n \n ArrayList<Integer> buckets[] = new ArrayList[bucketCount];\n \n for (int i = 0; i < bucketCount; i++) { //initialize buckets\n \n buckets[i] = new ArrayList();\n \n }\n \n \n \n for (int i = 0; i < array.length; i++) { //partition the input array\n \n buckets[(int)((array[i] - low)/interval)].add(array[i]);\n \n }\n \n \n int pointer = 0;\n \n for (int i = 0; i < buckets.length; i++) {\n \n Collections.sort(buckets[i]); //mergeSort\n \n for (int j = 0; j < buckets[i].size(); j++) { //merge the buckets\n \n array[pointer] = buckets[i].get(j);\n \n pointer++;\n \n }\n \n}\n \nreturn array;\n \n}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\n\ndef iinp() -> int: return int(input())\ndef linp() -> list: return [int(p) for p in input().split()]\ndef sinp() : return input().decode('unicode-escape')[0:-2]\n# M = int(1e9 + 7)\n\n\n\nn = iinp()\na = linp()\ns = set(a)\nx = 0\ny = 1\n\nfor i in a:\n    if i == x:\n        while y in s:\n            y += 1\n        print(y, end=\" \")\n        y += 1\n    else:\n        print(x, end=\" \")\n        x = i\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class Solve {\n    FastScanner in;\n    PrintWriter out;\n\n    void solve() {\n        int n = in.nextInt();\n        int[] a = in.nextIntArray(n);\n\n        int[] res = new int[n];\n        Arrays.fill(res, -1);\n        HashSet<Integer> used = new HashSet<>();\n\n        for (int i = 1; i < n; i++) {\n            if (a[i] != a[i-1]) {\n                res[i] = a[i-1];\n                used.add(a[i-1]);\n            }\n        }\n\n        used.add(a[n-1]);\n\n        int j = 0;\n        for (int i = 0; i < n; i++) {\n            if (res[i] == -1) {\n\n                while (used.contains(j)) {\n                    j++;\n                }\n\n                res[i] = j;\n\n                j++;\n            }\n        }\n\n        for (int i : res) {\n            out.print(i + \" \");\n        }\n    }\n\n    void run() {\n        try {\n            in = new FastScanner(new File(\"Solve.in\"));\n            out = new PrintWriter(new File(\"Solve.out\"));\n\n            solve();\n\n            out.close();\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n    void runIO() {\n\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n\n        solve();\n\n        out.close();\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(File f) {\n            try {\n                br = new BufferedReader(new FileReader(f));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public FastScanner(InputStream f) {\n            br = new BufferedReader(new InputStreamReader(f));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return null;\n                st = new StringTokenizer(s);\n            }\n            return st.nextToken();\n        }\n\n        boolean hasMoreTokens() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return false;\n                st = new StringTokenizer(s);\n            }\n            return true;\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextInt();\n            }\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextLong();\n            }\n            return a;\n        }\n\n        BigInteger nextBigInteger() {\n            return new BigInteger(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        double[] nextDoubleArray(int n) {\n            double[] a = new double[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextDouble();\n            }\n            return a;\n        }\n\n    }\n\n    public static void main(String[] args) {\n        new Solve().runIO();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n# https://github.com/cheran-senthil/PyRival/blob/master/templates/template_py3.py\nimport os\nimport sys,math\nfrom io import BytesIO, IOBase\n\n\ndef main():\n    n = int(input())\n    l=list(map(int,input().split()))\n    s = set(l)\n    for i in range(n):\n        if((i+1)<(l[i])):\n            print(-1)\n            return\n        s.add(l[i])\n    b=[]\n    v=0\n    chk=True\n    for i in range(n):\n        while v in s:\n            v+=1\n        if(i>0 and l[i]!=l[i-1]):\n            b.append(l[i-1])\n        else:\n            b.append(v)\n            v+=1\n    for c in b:\n        print(c,end=\" \")\n    print()\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 1,
            "solution": "import sys\nrange = xrange\ninput = raw_input\n\nn = int(input())\nA = [int(x) for x in input().split()]\n\nempty = []\n\nbig = 10**6 + 10\nB = []\ni = 0\ncounter = [0] * big\nfor j in range(n):\n    a = A[j]\n    B.append(-1)\n    empty.append(j)\n    \n    while True:\n        while counter[i]:\n            i += 1\n        if i == a:\n            break\n        if empty:\n            k = empty.pop()\n            B[k] = i\n            counter[i] += 1\n        else:\n            print -1\n            sys.exit()\n\nfor j in empty:\n    B[j] = 10**6\n\nprint ' '.join(str(x) for x in B)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\n public class DemoC{\n    static  ArrayList<Integer>[] graph;\n       static int[] vis;\n\tpublic static void main(String[] args) {\n\tScanner sc=new Scanner(System.in);\n          \n             int n=sc.nextInt();\n             int ans=0;\n             int[] ar=new int[n+1];\n             int[] b=new int[n+1];\n             Arrays.fill(b,-1);\n             int[] vis=new int[n+2];\n             for(int i=1;i<=n;i++){\n                 ar[i]=sc.nextInt();\n             }\n               vis[ar[1]]=1;\n             for(int i=2;i<=n;i++){\n                 vis[ar[i]]=1;\n                 if(ar[i]!=ar[i-1]){\n                     b[i]=ar[i-1];\n                   \n                     \n                 }\n             }\n             int m=0;\n             for(int i=1;i<=n;i++){\n               \n               if(b[i]==-1){\n                   if(vis[m]==0){\n                       b[i]=m;\n                       vis[m]=1;\n                   }\n                     else{  \n                       while(vis[m]!=0){\n                           if(m<n+1){\n                       m++;}\n                       else{\n                           break;\n                       }\n                       }\n                       b[i]=m;\n                       vis[m]=1;\n                     }\n                   }\n               }\n             \n             \n               for(int i=1;i<=n;i++){\n                   System.out.print(b[i]+\" \");\n               }\n             \n           \n    \n  }\n}"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nimport threading \n# from bisect import bisect_right\n\n\ndef main():\n    for _ in range(1):\n\n        n=int(input())\n        arr=list(map(int,input().split()))\n        ans=[-1]*n\n        \n        t=[0]*(10**6)\n        t[arr[-1]]=1\n\n        for i in range(1,n):\n            if arr[i]!=arr[i-1]:\n                ans[i]=arr[i-1]\n                t[arr[i-1]]=1\n\n        bi=0\n        # print(arr)\n        # print(ans)\n        for i in range(n):\n\n            while t[bi]==1:\n                bi+=1\n            # print(i,arr[i],bi)\n            if ans[i]==-1:\n                ans[i]=bi\n                bi+=1\n            # elif bi+1<arr[i]:\n            #     print(ans)\n            #     ans=[-1]\n            #     break\n        print(' '.join([str(i) for i in ans]))\n\n            \n          \n\n\n\n\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "MAX = 10**6//2\nn = int(input())\nA = list(map(int, input().split(' ')))\nA.append(0)\nB = [-1]*n\nexcluded = sorted(list(set(range(0,n+1)) - set(A)),reverse=True)\n# print(excluded)\nfor i in range(n):\n    if A[i] != A[i-1]:\n        B[i] = A[i-1]\n    else:\n        B[i] = MAX if len(excluded)==0 else excluded.pop()\nprint(*B)"
        },
        {
            "language": 3,
            "solution": "\n\n# from math import factorial as fac\nfrom collections import defaultdict\n# from copy import deepcopy\nimport sys, math\nf = None\ntry:\n\tf = open('q1.input', 'r')\nexcept IOError:\n\tf = sys.stdin\nif 'xrange' in dir(__builtins__):\n\trange = xrange\n# print(f.readline())\nsys.setrecursionlimit(10**2)\n\n\t\ndef print_case_iterable(case_num, iterable):\n\tprint(\"Case #{}: {}\".format(case_num,\" \".join(map(str,iterable))))\n\ndef print_case_number(case_num, iterable):\n\tprint(\"Case #{}: {}\".format(case_num,iterable))\n\ndef print_iterable(A):\n\tprint (' '.join(A))\n\ndef read_int():\n\treturn int(f.readline().strip())\ndef read_int_array():\n\treturn [int(x) for x in f.readline().strip().split(\" \")]\ndef rns():\n\ta =  [x for x in f.readline().split(\" \")]\n\treturn int(a[0]), a[1].strip()\ndef read_string():\n\treturn list(f.readline().strip())\ndef ri():\n\treturn int(f.readline().strip())\ndef ria():\n\treturn [int(x) for x in f.readline().strip().split(\" \")]\ndef rns():\n\ta =  [x for x in f.readline().split(\" \")]\n\treturn int(a[0]), a[1].strip()\ndef rs():\n\treturn list(f.readline().strip())\ndef bi(x):\n\treturn bin(x)[2:]\n\n\n\n\n\nfrom collections import deque\nimport math\n# NUMBER = 10**9 + 7\nNUMBER = 998244353\ndef factorial(n) : \n\tM = NUMBER\n\tf = 1\n  \n\tfor i in range(1, n + 1):  \n\t\tf = (f * i) % M # Now f never can  \n\t\t\t\t\t\t# exceed 10^9+7  \n\treturn f\ndef mult(a,b):\n\treturn (a * b) % NUMBER\n\ndef minus(a , b):\n\treturn (a - b) % NUMBER\n\ndef plus(a , b):\n\treturn (a + b) % NUMBER\n\ndef egcd(a, b):\n\tif a == 0:\n\t\treturn (b, 0, 1)\n\telse:\n\t\tg, y, x = egcd(b % a, a)\n\t\treturn (g, x - (b // a) * y, y)\n\ndef modinv(a):\n\tm = NUMBER\n\tg, x, y = egcd(a, m)\n\tif g != 1:\n\t\traise Exception('modular inverse does not exist')\n\telse:\n\t\treturn x % m\ndef choose(n,k):\n\tif n < k:\n\t\tassert false\n\treturn  mult(factorial(n), modinv(mult(factorial(k),factorial(n-k))))\nfrom collections import deque, defaultdict \nimport heapq\n\n\n\n\ndef solution(a,n):\n\tlast = 0\n\tmissing = []\n\tfor x in a:\n\t\tif x != last:\n\t\t\tmissing.extend(range(last+1,x))\n\t\t\tlast = x\n\tmissing = [max(a)+1] + missing[::-1]\n\ta = [0] + a\n\tsol = []\n\tfor i in range(1,n+1):\n\t\tif a[i] == a[i-1]:\n\t\t\tif len(missing) > 1:\n\t\t\t\tsol.append(missing.pop())\n\t\t\telse:\n\t\t\t\tsol.append(missing[0])\n\t\telse:\n\t\t\tsol.append(a[i-1])\n\treturn ' '.join(map(str,sol))\n\n\n\n\n\n\n\n\n\n\t\ndef main():\n\tT = 1\n\tfor i in range(T):\n\t\tn = ri()\n\t\t# n,m,k = ria()\n\t\ta=ria()\n\n\t\tx = solution(a,n)\n\t\tif 'xrange' not in dir(__builtins__):\n\t\t\tprint(x)\n\t\telse:\n\t\t\tprint >>output,str(x)# \"Case #\"+str(i+1)+':',\n\tif 'xrange' in dir(__builtins__):\n\t\tprint(output.getvalue())\n\t\toutput.close()\n\nif 'xrange' in dir(__builtins__):\n\timport cStringIO\n\toutput = cStringIO.StringIO()\n#example usage:\n#    for l in res:\n#       print >>output, str(len(l)) + ' ' +  ' '.join(l)\n\nif __name__ == '__main__':\n\tmain()\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.TreeSet;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CEhabAndPrefixMEXs solver = new CEhabAndPrefixMEXs();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CEhabAndPrefixMEXs {\n        public void solve(int testNumber, FastReader s, PrintWriter out) {\n            int n = s.nextInt();\n            int[] arr = s.nextIntArray(n);\n\n\n            int[] ans = new int[n];\n            Arrays.fill(ans, -1);\n            int maxm = (int) (1e5 + 5);\n            TreeSet<Integer> available = new TreeSet<>();\n            for (int i = 0; i < maxm; i++) {\n                available.add(i);\n            }\n            int prev = 0;\n\n            for (int i = 0; i < n; i++) {\n                if (arr[i] != prev) {\n                    ans[i] = prev;\n                    available.remove(prev);\n                    prev = arr[i];\n                }\n            }\n            for (int i = 0; i < n; i++) {\n                available.remove(arr[i]);\n            }\n\n            int start = maxm + 1;\n            for (int i = 0; i < n; i++) {\n                if (ans[i] == -1) {\n                    if (!available.isEmpty()) {\n                        ans[i] = available.first();\n                        available.remove(available.first());\n                    } else {\n                        ans[i] = start++;\n                    }\n                }\n            }\n\n            out.println(CEhabAndPrefixMEXs.arrays.printArr(ans));\n        }\n\n        private static class arrays {\n            static String formatString(String str) {\n                str = str.replace(\",\", \"\").replace(\"[\", \"\").replace(\"]\", \"\");\n                return str;\n            }\n\n            static StringBuilder printArr(Object arr) {\n                String str = null;\n                if (arr instanceof int[]) {\n                    str = Arrays.toString((int[]) arr);\n                }\n\n                if (arr instanceof long[]) {\n                    str = Arrays.toString((long[]) arr);\n                }\n\n                if (arr instanceof char[]) {\n                    str = Arrays.toString((char[]) arr);\n                }\n\n                if (arr instanceof boolean[]) {\n                    str = Arrays.toString((boolean[]) arr);\n                }\n\n                if (arr instanceof byte[]) {\n                    str = Arrays.toString((byte[]) arr);\n                }\n\n                if (arr instanceof double[]) {\n                    str = Arrays.toString((double[]) arr);\n                }\n\n                if (arr instanceof float[]) {\n                    str = Arrays.toString((float[]) arr);\n                }\n\n                if (arr instanceof short[]) {\n                    str = Arrays.toString((short[]) arr);\n                }\n\n                if (str != null) {\n                    return new StringBuilder(formatString(str));\n                }\n\n                return null;\n\n            }\n\n        }\n\n    }\n\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private FastReader.SpaceCharFilter filter;\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; ++i) array[i] = nextInt();\n            return array;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "MAX = 10**6//2\nn = int(input())\nA = list(map(int, input().split(' ')))\nA.append(0)\nB = [-1]*n\nexcluded = sorted(list(set(range(0,n+1)) - set(A)), reverse=True)\nfor i in range(n):\n    if A[i] != A[i-1]:\n        B[i] = A[i-1]\n    else:\n        B[i] = MAX if len(excluded)==0 else excluded.pop()\nprint(*B)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nostream& operator<<(ostream& os, vector<T> const& x) {\n  os << \"{ \";\n  for (auto& y : x) os << y << \" \";\n  return os << \"}\";\n}\nconst int N = 1e5 + 5;\nint a[N];\nint b[N];\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  fill(b, b + N, -1);\n  vector<bool> mark(n + 1, false);\n  for (int i = 1; i <= n; i++) {\n    if (a[i - 1] != a[i]) {\n      b[i] = a[i - 1];\n      mark[b[i]] = true;\n    }\n  }\n  mark[a[n]] = true;\n  int m = 0;\n  for (int i = 1; i <= n; i++) {\n    while (mark[m]) {\n      m++;\n    }\n    if (b[i] == -1) {\n      b[i] = m;\n      mark[m] = true;\n    }\n  }\n  for (int i = 1; i <= n; i++) cout << b[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint A[100010];\nbool cnt[100010];\nint main() {\n  srand(int(time(NULL)));\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &A[i]), cnt[A[i]] = true;\n  int mx = 0, mex = 0;\n  vector<int> ans;\n  for (int i = 1; i <= n; i++) {\n    if (mex == A[i]) {\n      ++mx;\n      while (cnt[mx]) ++mx;\n      ans.push_back(mx);\n    } else {\n      ans.push_back(mex);\n      mex = A[i];\n      if (mx < A[i] - 1) {\n        for (int i = 1; i <= n; i++) cout << A[i] << \" \";\n        cout << endl;\n        cout << -1;\n        return 0;\n      }\n      mx = max(mx, A[i]);\n    }\n  }\n  for (int x : ans) cout << x << \" \";\n}\n"
        },
        {
            "language": 3,
            "solution": "def getN():\n    return int(input())\ndef getNM():\n    return map(int, input().split())\ndef getList():\n    return list(map(int, input().split()))\n\nfrom collections import defaultdict, deque\nfrom sys import exit\nimport math\nimport copy\nfrom bisect import bisect_left, bisect_right\nfrom heapq import *\nimport sys\n# sys.setrecursionlimit(1000000)\nINF = 10 ** 17\nMOD = 1000000007\n\nfrom fractions import *\ndef inverse(f):\n    # return Fraction(f.denominator,f.numerator)\n    return 1/f\n\ndef make_next(n, nums):\n    imos = [0 for i in range(n)]\n    for i, num in enumerate(nums):\n        if num > i:\n            imos[0] += 1\n        else:\n            imos[i - num] += 1\n\n        if i + num + 1 < n:\n            imos[i+num+1] -= 1\n    # print(imos)\n    nx = []\n    tmp = 0\n    for im in imos:\n        tmp += im\n        nx.append(tmp)\n\n    return nx\n\ndef mantan_check(n, nums):\n    if sum(nums) == n ** 2:\n        return True\n    else:\n        return False\ndef knapsack(tree, vx, l):\n    dp = [0 for i in range(l + 1)]\n    while True:\n        dpcp = copy.copy(dp)\n        v, w = tree[vx-1]\n        # print(v, w)\n        for i, d in enumerate(dp):\n            if w + i < l + 1:\n                if dpcp[w + i] < v + d:\n                    dpcp[w + i] = v + d\n        dp = copy.copy(dpcp)\n        vx //= 2\n        dp = dpcp\n        # print(dp)\n        if vx == 0:\n            break\n\n    return max(dp)\n\ndef solve():\n    n = getN()\n    nums = getList()\n    ans = [-1 for i in range(n)]\n    prev = 0\n    used = [0 for i in range(n+10)]\n    for i , num in enumerate(nums):\n        if num != prev:\n            ans[i] = prev\n            used[prev] = 1\n            prev = num\n\n    used[nums[-1]] = 1\n    # print(used)\n    used_idx = 0\n    for i in range(n):\n        if ans[i] == -1:\n            while(True):\n                if used[used_idx] == 0:\n                    ans[i] = used_idx\n                    used_idx += 1\n                    break\n                used_idx += 1\n\n    print(*ans)\n\n\ndef main():\n    n = getN()\n    for _ in range(n):\n        solve()\nif __name__ == \"__main__\":\n    solve()\n\n\"\"\"\n5 10000000000000\n4 0 0 0 0\n\"\"\""
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.util.regex.*;\n        public class Solution{\n        public static void main (String[] args) {                        \n            PrintWriter pw=new PrintWriter(System.out);\n            Scanner sc=new Scanner(System.in);\n            int t=1;\n           // t=sc.nextInt();\n            while(t-->0){\n                ArrayList<Integer> al=new ArrayList<>();\n                HashSet<Integer> h=new HashSet<>();\n               int n=sc.nextInt();\n               int[] a=new int[n];\n               int[] a1=new int[n];\n               int s=0;\n              \n               for(int i=0;i<n;i++){\n               a[i]=sc.nextInt();  \n               h.add(a[i]);\n               }\n               int n1=a[n-1];\n               n1++; \n              for(int i=0;i<a[n-1];i++)\n                if(!h.contains(i))\n                  al.add(i);\n                  int n2=al.size(); \n                         if(s<n2){\n                        a1[0]=al.get(s);\n                        s++;}\n                        else{\n                            a1[0]=n1;\n                            n1++;\n                        }\n                    \n                 \n               for(int i=1;i<n;i++){\n                  if(a[i-1]==a[i]){\n                     // pw.print(s);\n                      if(s<n2)\n                     a1[i]=al.get(s);\n                     else{\n                     a1[i]=n1;\n                     n1++;\n                         \n                     }\n                       s++;\n                      \n                  }\n                       else\n                        a1[i]=a[i-1];\n                        \n                        \n               }\n               \n              for(int i=0;i<n;i++)\n                pw.print(a1[i]+\" \");\n                 \n                 //pw.println(n1);\n                     }\n                       \n                       pw.close();\n    \t}\n    }"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nint a[maxn], b[maxn];\nbool v[maxn];\nint main() {\n  int n;\n  cin >> n;\n  a[0] = -1;\n  for (int i = 1; i <= n; ++i) {\n    cin >> a[i];\n    v[a[i]] = 1;\n    if (a[i] > a[i - 1])\n      b[i] = a[i - 1];\n    else\n      b[i] = -1;\n  }\n  int c = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (b[i] == -1) {\n      while (v[c]) c++;\n      b[i] = c++;\n    }\n  }\n  for (int i = 1; i <= n; ++i) cout << b[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  bool can = true;\n  vector<long long> v(n);\n  set<long long> s;\n  vector<long long> change;\n  map<long long, long long> mp;\n  for (long long i = 1; i <= n; i++) {\n    cin >> v[i - 1];\n    mp[v[i - 1]]++;\n    if (i > 1) {\n      if (v[i - 1] != v[i - 2]) {\n        change.push_back(i - 1);\n      }\n    }\n    s.insert(v[i - 1]);\n    if ((v[i - 1]) > i) {\n      can = false;\n      break;\n    }\n  }\n  if (can) {\n    long long i = 0;\n    long long count = 0;\n    for (long long z = 0; z <= n + 1; z++) {\n      if (mp[z] == 0) {\n        cout << z << \" \";\n        count++;\n        if (count == n) {\n          break;\n        }\n        mp[v[i]]--;\n        while (mp[v[i]] == 0) {\n          cout << v[i] << \" \";\n          if (z < v[i]) {\n            z++;\n          }\n          count++;\n          if (count == n) {\n            break;\n          }\n          i++;\n          mp[v[i]]--;\n        }\n        if (count == n) {\n          break;\n        }\n        i++;\n      }\n    }\n  } else {\n    cout << -1 << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid _R(T &x) {\n  cin >> x;\n}\nvoid _R(int &x) { scanf(\"%d\", &x); }\nvoid _R(long long &x) { scanf(\"%lld\", &x); }\nvoid _R(unsigned long long &x) { scanf(\"%llu\", &x); }\nvoid _R(double &x) { scanf(\"%lf\", &x); }\nvoid _R(char &x) { scanf(\" %c\", &x); }\nvoid _R(char *x) { scanf(\"%s\", x); }\nvoid R() {}\ntemplate <class T, class... U>\nvoid R(T &head, U &...tail) {\n  _R(head);\n  R(tail...);\n}\ntemplate <class T>\nvoid _W(const T &x) {\n  cout << x;\n}\nvoid _W(const int &x) { printf(\"%d\", x); }\nvoid _W(const long long &x) { printf(\"%lld\", x); }\nvoid _W(const double &x) { printf(\"%.16f\", x); }\nvoid _W(const char &x) { putchar(x); }\nvoid _W(const char *x) { printf(\"%s\", x); }\ntemplate <class T, class U>\nvoid _W(const pair<T, U> &x) {\n  _W(x.fi);\n  putchar(' ');\n  _W(x.se);\n}\ntemplate <class T>\nvoid _W(const vector<T> &x) {\n  for (auto i = x.begin(); i != x.end(); _W(*i++))\n    if (i != x.cbegin()) putchar(' ');\n}\nvoid W() {}\ntemplate <class T, class... U>\nvoid W(const T &head, const U &...tail) {\n  _W(head);\n  putchar(sizeof...(tail) ? ' ' : '\\n');\n  W(tail...);\n}\nconst int N = 1e5 + 20;\nconst int M = 1e6 + 20;\nconst int mod = 1000000007;\nint n, x;\nint a[N];\nvoid solve() {\n  R(n);\n  map<int, int> m;\n  for (int i = 1; i <= n; i++) {\n    R(a[i]);\n    m[a[i]]++;\n  }\n  int k = 0;\n  int x = a[1];\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == x) {\n      while (m[k]) {\n        k++;\n      }\n      cout << k++ << \" \";\n    } else {\n      cout << x << \" \";\n      x = a[i];\n    }\n  }\n}\nint main() {\n  cout.tie(0);\n  int T = 1;\n  while (T--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.stream.IntStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Set;\nimport java.util.NavigableSet;\nimport java.io.IOException;\nimport java.util.stream.Collectors;\nimport java.io.InputStreamReader;\nimport java.util.TreeSet;\nimport java.io.FileNotFoundException;\nimport java.util.stream.Stream;\nimport java.util.StringTokenizer;\nimport java.io.Writer;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Asgar Javadov\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            int[] a = in.readIntArray(n);\n\n            int[] cnt = new int[n + 2];\n            for (int ai : a) cnt[ai]++;\n\n            int[] b = new int[n];\n            NavigableSet<IntPair> all = IntStream\n                    .rangeClosed(0, n)\n                    .mapToObj(i -> IntPair.newPair(cnt[i], i))\n                    .collect(Collectors.toCollection(TreeSet::new));\n            for (int i = 0; i < n; i++) {\n                IntPair value = all.pollFirst();\n                b[i] = value.second;\n                all.remove(IntPair.newPair(cnt[a[i]], a[i]));\n                cnt[a[i]]--;\n                all.add(IntPair.newPair(cnt[a[i]], a[i]));\n            }\n\n            out.println(b);\n        }\n\n    }\n\n    static class InputReader extends BufferedReader {\n        StringTokenizer tokenizer;\n\n        public InputReader(InputStream inputStream) {\n            super(new InputStreamReader(inputStream), 32768);\n        }\n\n        public InputReader(String filename) {\n            super(new InputStreamReader(Thread.currentThread().getContextClassLoader().getResourceAsStream(filename)));\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public Integer nextInt() {\n            return Integer.valueOf(next());\n        }\n\n        public int[] readIntArray(int size) {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++)\n                array[i] = nextInt();\n//        IntStream.generate(this::nextInt).limit(size).toArray();\n            return array;\n        }\n\n    }\n\n    static class OutputWriter extends PrintWriter {\n        public OutputWriter(OutputStream outputStream) {\n            super(outputStream);\n        }\n\n        public OutputWriter(Writer writer) {\n            super(writer);\n        }\n\n        public OutputWriter(String filename) throws FileNotFoundException {\n            super(filename);\n        }\n\n        public void println(int[] array) {\n            for (int i = 0; i < array.length; i++) {\n                if (i > 0) print(' ');\n                print(array[i]);\n            }\n            println();\n        }\n\n        public void close() {\n            super.close();\n        }\n\n    }\n\n    static class IntPair implements Comparable<IntPair> {\n        public int first;\n        public int second;\n\n        public IntPair(int first, int second) {\n            this.first = first;\n            this.second = second;\n        }\n\n        public int compareTo(IntPair o) {\n            if (first != o.first)\n                return Integer.compare(first, o.first);\n            return Integer.compare(second, o.second);\n        }\n\n        public String toString() {\n            return first + \" \" + second;\n        }\n\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (!(o instanceof IntPair)) return false;\n            IntPair intPair = (IntPair) o;\n            return first == intPair.first &&\n                    second == intPair.second;\n        }\n\n        public int hashCode() {\n            return (31 * first + second);\n        }\n\n        public IntPair clone() {\n            return newPair(first, second);\n        }\n\n        public static IntPair newPair(int first, int second) {\n            return new IntPair(first, second);\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.PriorityQueue;\nimport java.util.Collection;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.Queue;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Pranay2516\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, FastReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int a[] = new int[1000001], pos[] = new int[1000001], used[] = new int[1000001];\n            for (int i = 1; i < n + 1; ++i) {\n                a[i] = in.nextInt();\n                pos[a[i]]++;\n            }\n            int p = 0, i = 0;\n            ArrayList<Integer> ans = new ArrayList<>();\n            Queue<Integer> rem = new PriorityQueue<>();\n            for (i = 0; i < n + 1; ++i) {\n                if (pos[i] == 0) continue;\n                while (pos[i] > 0) {\n                    if (rem.size() > 0) {\n                        pos[i]--;\n                        ans.add(rem.peek());\n                        used[rem.peek()]++;\n                        rem.poll();\n                        continue;\n                    }\n                    while (pos[p] > 0 || used[p] > 0) p++;\n                    used[p]++;\n                    ans.add(p++);\n                    pos[i]--;\n                }\n                rem.add(i);\n            }\n            for (int e : ans) out.print(e + \" \");\n        }\n\n    }\n\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private FastReader.SpaceCharFilter filter;\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nint n, A[maxn];\nmap<int, int> vis;\nvector<int> ans;\nvoid solve() {\n  int x = 0;\n  for (int i = (1); i <= (n); i++) {\n    if (A[i] > i + 1) {\n      cout << \"-1\\n\";\n      return;\n    }\n    if (i > 1 && A[i] != A[i - 1]) {\n      ans.push_back(A[i - 1]);\n      continue;\n    }\n    while (vis.find(x) != vis.end()) x++;\n    ans.push_back(x);\n    x++;\n  }\n  for (auto x : ans) printf(\"%d \", x);\n}\nvoid init() {\n  vis.clear();\n  ans.clear();\n}\nint main() {\n  init();\n  scanf(\"%d\", &n);\n  for (int i = (1); i <= (n); i++) {\n    scanf(\"%d\", &A[i]);\n    vis[A[i]]++;\n  }\n  solve();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 998244353;\nconst long long mod = 1e9 + 7;\nconst int mxN = 1e5 + 9;\nint a[mxN];\nint ans[mxN];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = 1; i <= n; i++) {\n    if (a[i] > i) {\n      cout << -1;\n      return 0;\n    }\n  }\n  vector<int> free;\n  int M = -1;\n  for (int i = 1; i <= n; i++) {\n    free.push_back(i);\n    if (a[i] < i && (M + 1 <= a[i] - 1)) {\n      for (int j = M + 1; j <= a[i] - 1; j++) {\n        int tmp = free.back();\n        free.pop_back();\n        ans[tmp] = j;\n      }\n      M = a[i] - 1;\n    } else if (a[i] == i) {\n      for (int j = M + 1; j <= a[i] - 1; j++) {\n        int tmp = free.back();\n        free.pop_back();\n        ans[tmp] = j;\n      }\n      M = a[i] - 1;\n    }\n  }\n  int xx = a[n];\n  for (auto &c : free) {\n    ++xx;\n    ans[c] = xx;\n  }\n  for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Problem_C {\n\tstatic final int INF = 1000000;\n\n\tpublic static void main(String[] args) {\n\t\tInputReader in = new InputReader();\n\t\tStringBuilder out = new StringBuilder();\n\n\t\tint N = in.nextInt();\n\t\tint[] A = new int[N];\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tA[i] = in.nextInt();\n\t\t}\n\t\tboolean flag = true;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tif (i + 1 < A[i]) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!flag) {\n\t\t\tSystem.out.println(-1);\n\t\t\treturn;\n\t\t}\n\t\tint[] B = new int[N];\n\t\tArrays.fill(B, INF);\n\t\tint prev = 0;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tif (A[i] != prev) {\n\t\t\t\tB[i] = prev;\n\t\t\t\tprev = A[i];\n\t\t\t}\n\t\t}\n\t\tQueue<Integer> q = new LinkedList<>();\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tif (B[i] == INF) {\n\t\t\t\tq.offer(i);\n\t\t\t}\n\t\t}\n\t\tint next = 0;\n\t\tList<Integer> list = new ArrayList<>();\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tif (B[i] == INF) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlist.clear();\n\t\t\tfor (; next < A[i] - 1; next++) {\n\t\t\t\tlist.add(q.poll());\n\t\t\t}\n\t\t\tfor (int j = 0; j < list.size(); j++) {\n\t\t\t\tB[list.get(j)] = next - j;\n\t\t\t}\n\t\t\tnext++;\n\t\t}\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tout.append(B[i]).append(' ');\n\t\t}\n\t\tout.setCharAt(out.length() - 1, '\\n');\n\n\t\tSystem.out.print(out);\n\t}\n\n\tstatic class InputReader {\n\t\tpublic BufferedReader reader;\n\t\tpublic StringTokenizer st;\n\n\t\tpublic InputReader() {\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic String next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(nextLine());\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\ttry {\n\t\t\t\treturn reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "// package com.company.codeforces;\nimport com.sun.security.jgss.GSSUtil;\n\nimport java.util.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner input=new Scanner(System.in);\n        int n=input.nextInt();\n        int a[]=new int[n];\n\n        HashSet<Integer> set=new HashSet<>();\n        for (int i = 0; i <n ; i++) {\n            a[i]=input.nextInt();\n            set.add(a[i]);\n        }\n        int res[]=new int[n];\n        int ptr=0;\n        if (a[0]>1){\n            System.out.println(-1);\n\n        }else {\n            while (set.contains(ptr)) {\n                ptr++;\n\n            }\n            res[0]=ptr;\n            ptr++;\n            int flag = 0;\n            for (int i = 1; i < n; i++) {\n                if ((a[i] > i + 1)) {\n                    flag = 1;\n                    break;\n                }\n\n                if (a[i] == a[i - 1]) {\n                    int temp = 0;\n                    while (set.contains(ptr)) {\n                        ptr++;\n\n                    }\n                    res[i] = ptr;\n                    ptr++;\n                    continue;\n                } else {\n                    res[i] = a[i - 1];\n                }\n\n\n            }\n            if (flag==1){\n                System.out.println(-1);\n            }else {\n                for (int i = 0; i <n ; i++) {\n                    System.out.print(res[i]+\" \");\n\n                }\n            }\n\n        }\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef read(): return int(input())\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\n\n\ndef solve():\n    n = read()\n    a = get_array()\n    a = [ 0 ] + a\n    b = [ -1 for i in range(n + 1) ]\n    used = [ False for i in range(n + 1) ]\n    for i in range(1, n + 1):\n        if a[i] != a[i - 1]:\n            b[i] = a[i - 1]\n            used[b[i]] = True\n    used[a[n]] = True\n    m = 0\n    for i in range(1, n + 1):\n        if b[i] == -1:\n            while used[m]: m += 1\n            b[i] = m\n            used[m] = True\n    for i in range(1, n + 1):\n        print(\"%d \" % b[i], end = '')\n    print()\n\nsolve()"
        },
        {
            "language": 3,
            "solution": "import os\nimport heapq\nimport sys\nimport math\nimport operator\nfrom collections import defaultdict\nfrom io import BytesIO, IOBase\n\n\n\"\"\"def gcd(a,b):\n    if b==0:\n        return a\n    else:\n        return gcd(b,a%b)\"\"\"\n\n\"\"\"def pw(a,b):\n    result=1\n    while(b>0):\n        if(b%2==1): result*=a\n        a*=a\n        b//=2\n    return result\"\"\"\n\ndef inpt():\n    return [int(k) for k in input().split()]\n\n\ndef main():\n    n=int(input())\n    ar=inpt()\n    d={}\n    for i in ar:\n        if(i not in d):\n            d[i]=1\n        else:\n            d[i]+=1\n    b=[]\n    j=0\n    temp={}\n    for i in range(n):\n        bl=False\n        if(i!=0 and ar[i]!=ar[i-1]):\n            for k in temp.keys():\n                if(k not in d):\n                    bl=True\n                    b.append(k)\n                    temp.pop(k)\n                    d[ar[i]]-=1\n                    if(d[ar[i]]==0):\n                        d.pop(ar[i])\n                    break\n        if(bl==False):\n            while(j in d):\n                temp[j]=True\n                j+=1\n            b.append(j)\n            d[ar[i]] -= 1\n            if (d[ar[i]] == 0):\n                d.pop(ar[i])\n            j+=1\n\n    for i in b:\n        print(i,end=' ')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input());a=list(map(int,input().split()));p=0;q=1;t=set(a)\nfor i in a:\n    if i==p:\n        while q in t:q+=1\n        print(q,end=' ');q+=1    \n    else:\n        print(p,end=' ');p=i \n    "
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        solve(in, out);\n        out.close();\n    }\n\n    static String reverse(String s) {\n        return (new StringBuilder(s)).reverse().toString();\n    }\n\n    static void sieveOfEratosthenes(int n, int factors[]) \n    { \n        factors[1]=1;\n        for(int p = 2; p*p <=n; p++) \n        { \n            if(factors[p] == 0) \n            { \n                factors[p]=p;\n                for(int i = p*p; i <= n; i += p) \n                    factors[i] = p; \n            } \n        } \n    }\n\n    static void sort(int ar[]) {\n        int n = ar.length;\n        ArrayList<Integer> a = new ArrayList<>();\n        for (int i = 0; i < n; i++)\n            a.add(ar[i]);\n        Collections.sort(a);\n        for (int i = 0; i < n; i++)\n            ar[i] = a.get(i);\n    }\n\n    static long ncr(long n, long r, long mod) {\n        if (r == 0)\n            return 1;\n        long val = ncr(n - 1, r - 1, mod);\n        val = (n * val) % mod;\n        val = (val * modInverse(r, mod)) % mod;\n        return val;\n    }\n\n    \n\n    public static void solve(InputReader sc, PrintWriter pw) {\n        int i, j = 0;\n        int t = 1;  \n        // int t = sc.nextInt();\n        u: while (t-- > 0) {\n            int n=sc.nextInt();\n            int a[]=new int[n];\n            HashSet<Integer> set=new HashSet<>();\n            for(i=0;i<n;i++){\n                a[i]=sc.nextInt();\n                set.add(a[i]);\n            }\n            int b[]=new int[n];\n            ArrayList<Integer> ar=new ArrayList<Integer>();\n            for(i=0;i<=300000;i++)\n                if(!set.contains(i)){\n                    ar.add(i);\n                }\n            int min=0;\n            HashSet<Integer> done=new HashSet<>();\n            int l=0;\n            for(i=0;i<n;i++){\n                if(a[i]==min){\n                    // int l=0,r=ar.size()-1;\n                    int val=0;\n                    // while(l<=r){\n                    //     int mid=(l+r)/2;\n                    //     // pw.println(mid);\n                    //     if(done.contains(ar.get(mid))){\n                    //         l=mid+1;\n                    //     }\n                    //     else{\n                    //         val=ar.get(mid);\n                    //         r=mid-1;\n                    //     }\n                    // }\n                    while(done.contains(ar.get(l))){\n                        l++;\n                    }\n                    b[i]=ar.get(l);\n                    done.add(b[i]);\n                }\n                else{\n                    b[i]=min;\n                    min=a[i];\n                    done.add(b[i]);\n                }\n            }\n            for(i=0;i<n;i++){\n                pw.print(b[i]+\" \");\n            }\n            pw.println();\n        }\n    }\n\n    static class Pair implements Comparable<Pair> {\n        int a;\n        int b;\n        int c;\n        \n        Pair(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n        }\n\n        public int compareTo(Pair p) {\n            if (c != p.c)\n                return -1*(c - p.c);\n            return (a - p.a);\n        }\n    }\n\n    static boolean isPrime(long n) {\n        if (n <= 1)\n            return false;\n        if (n <= 3)\n            return true;\n        if (n % 2 == 0 || n % 3 == 0)\n            return false;\n        for (int i = 5; i * i <= n; i = i + 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n                return false;\n        return true;\n    }\n\n    static long gcd(long a, long b) {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static long fast_pow(long base, long n, long M) {\n        if (n == 0)\n            return 1;\n        if (n == 1)\n            return base % M;\n        long halfn = fast_pow(base, n / 2, M);\n        if (n % 2 == 0)\n            return (halfn * halfn) % M;\n        else\n            return (((halfn * halfn) % M) * base) % M;\n    }\n\n    static long modInverse(long n, long M) {\n        return fast_pow(n, M - 2, M);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "#import sys\n#input = sys.stdin.readline\ndef main():\n    n = int( input())\n    A = list( map( int, input().split()))\n    B = [-1]*n\n    N = 10**6\n    now = N\n    TB = [True]*N\n    if A[0] > 0:\n        B[0] = 0\n        TB[0] = False\n    for i in range(1,n):\n        a = A[i]\n        ab = A[i-1]\n        if ab < a:\n            if TB[ab]:\n                B[i] = ab\n                TB[ab] = False\n    TB[A[-1]] = False\n    indexb = 0\n    for i in range(n):\n        if B[i] != -1:\n            continue\n        for j in range(indexb, N):\n            if TB[j]:\n                TB[j] = False\n                indexb = j+1\n                B[i] = j\n                break\n    indexa = 0\n    TA = [True]*N\n    for i in range(n):\n        TA[B[i]] = False\n        for j in range(indexa, N):\n            if TA[j]:\n                if A[i] != j:\n                    print(-1)\n                    return\n                indexa = j\n                break\n        \n    print(\" \".join( map( str, B)))\n        \n    \nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint vis[1000006];\nint main() {\n  ios::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  vector<int> vec, ans;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    vec.push_back(x);\n    vis[x]++;\n  }\n  set<int> se;\n  for (int i = 0; i <= 5 * n; i++) {\n    se.insert(i);\n  }\n  for (auto x : vec) se.erase(x);\n  for (int i = 0; i < n; i++) {\n    if (vec[i] > i + 1) {\n      return cout << -1 << \"\\n\", 0;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cout << *se.begin() << \" \";\n    se.erase(se.begin());\n    vis[vec[i]]--;\n    if (vis[vec[i]] == 0) {\n      se.insert(vec[i]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split(' ')))\ntemp = {}\ncounter = 0\nans = []\nflag = False\nfor i in range(n):\n    temp[a[i]] = True\n\nif not counter in temp:\n    ans.append(counter)\n    counter += 1\nelse:\n    while counter in temp:\n        counter += 1\n    ans.append(counter)\n    counter += 1\n\nif a[0] != 0 and a[0] != 1:\n    print(-1)\n    flag = True\n    \n\nfor i in range(1, n):\n    if a[i] > i+1:\n        print(-1)\n        flag = True\n    if a[i] != a[i-1]:\n        ans.append(a[i-1])\n    else:\n        if not counter in temp:\n            ans.append(counter)\n            counter += 1\n        else:\n            while counter in temp:\n                counter += 1\n            ans.append(counter)\n            counter += 1\n    \nif not flag:\n    print(*ans)\n        \n\n    \n\n\n\n    \n    \n    \n\n    \n        \n\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst long long INF = 0x3f3f3f3f3f3f3f3fLL;\nconst int mod = 1e9 + 7;\nlong long powmod(long long a, long long b) {\n  long long res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nint pct(int x) { return __builtin_popcount(x); }\nint bit(int x) { return 31 - __builtin_clz(x); }\nint cdiv(int a, int b) { return a / b + !(a < 0 || a % b == 0); }\nvoid DBG() { cerr << \"]\" << endl; }\ntemplate <class H, class... T>\nvoid DBG(H h, T... t) {\n  cerr << to_string(h);\n  if (sizeof...(t)) cerr << \", \";\n  DBG(t...);\n}\nconst int maxn = 1e5 * 3 + 20;\nint n, _, q, k;\nint a[maxn];\nint b[maxn];\nvoid solve() {\n  cin >> n;\n  set<int> seen;\n  for (signed i = 1; i <= n; i++) cin >> a[i], seen.insert(a[i]);\n  set<int> has;\n  set<int> spe;\n  seen.insert(0);\n  for (signed i = 0; i <= a[n]; i++) {\n    if (i != a[n]) {\n      has.insert(i);\n    }\n    if (!seen.count(i)) {\n      spe.insert(i);\n    }\n  }\n  int cnt = 1e5 + 2;\n  while ((signed)has.size() < n) {\n    has.insert(cnt);\n    spe.insert(cnt);\n    cnt++;\n  }\n  bool valid = true;\n  for (signed i = 1; i <= n; i++) {\n    if (a[i] == a[i - 1]) {\n      int large = *(spe.begin());\n      b[i] = large;\n      has.erase(large);\n      spe.erase(large);\n    } else {\n      b[i] = a[i - 1];\n      if (!has.count(a[i - 1])) {\n        valid = false;\n        break;\n      }\n      has.erase(a[i - 1]);\n    }\n  }\n  if (!valid) {\n    cout << -1 << endl;\n    exit(0);\n  }\n  for (signed i = 1; i <= n; i++) {\n    cout << b[i] << \" \";\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100010];\nchar used[100010] = {0};\nvoid solve() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    used[a[i]] = 1;\n  }\n  int ui = 0;\n  for (int i = 0; i < n; ++i) {\n    if ((i > 0) && (a[i - 1] != a[i]))\n      cout << a[i - 1];\n    else {\n      while (used[ui]) ++ui;\n      cout << ui;\n      ++ui;\n    }\n    cout << \" \";\n  }\n}\nint main() {\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class ehabandprefix {\n    public static void main(String[]args)throws Exception{\n        Scanner sc = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        ArrayList<Integer>list = new ArrayList<>();\n        Set<Integer>set = new HashSet<>();\n        ArrayList<Integer>blist = new ArrayList<>();\n        int n = sc.nextInt();\n        int inc = 1;\n        for(int i = 0; i < n; i++){\n            int a = sc.nextInt();\n            list.add(a);\n            set.add(a);\n        }\n        int last = 0;\n        for(int i = 0; i < n; i++){\n            if(list.get(i) == last){\n                while(set.contains(inc)){\n                    inc++;\n                }\n                blist.add(inc);\n                inc++;\n            }\n            else{\n                blist.add(last);\n            }\n            last = list.get(i);\n        }\n        for(int i = 0; i < n; i++){\n            out.print(blist.get(i) + \" \");\n        }\n        out.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnum = tuple(map(int,input().split()))\ns = set(num)\nss = set()\nprev = 0\nm = 0\nans = [0]*n\nfor i in range(n):\n    cur = num[i]\n    if cur == prev:\n        while m in s:\n            m+=1\n        ans[i]=m\n        s.add(m)\n        ss.add(m)\n    else:\n        ans[i]=prev\n        s.add(prev)\n        ss.add(prev)\n        while prev in ss:\n            prev+=1\n        if prev!=cur:\n            print(-1)\n            break\nelse:\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Solution {\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int a[] = new int[n];\n        for(int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int impossible = 0;\n        int flag = 0;\n        for(int i = 0; i < n; i++) {\n            if((a[i] - 1 > i)) {\n                impossible = 1;\n                break;\n            }\n            if(i > 0) {\n                if(a[i] - 1 != a[i-1]) {\n                    flag = 1;\n                }\n            }\n        }\n        if(impossible == 1) {\n            System.out.println(\"-1\");\n        }\n        else if(flag == 0 && n > 1) {\n            for(int i= 0; i < n; i++) {\n                if(i != n-1) System.out.print(i+\" \");\n                else System.out.println(i);\n            }\n        }\n        else {\n            int ans[] = new int[n];\n            int temp[] = new int[n+1];\n            int largest = n;\n            temp[a[n-1]] = 1;\n            for(int i = n-1; i >= 0; i--) {\n                if(i > 0  && a[i] != a[i-1]) {\n                    ans[i] = a[i-1];\n                    temp[a[i-1]] = 1;\n                }\n                else {\n                    while(temp[largest] == 1) {\n                        largest -= 1;\n                    }\n                    ans[i] = largest;\n                    temp[largest] = 1;\n                    largest -= 1;\n                }\n            }\n            for(int i = 0; i < n; i++) {\n                if(i != n-1) System.out.print(ans[i]+\" \");\n                else System.out.println(ans[i]);\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  vector<int> arr(100001);\n  vector<int> b(100001);\n  int i, n;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  if (arr[0] > 1) {\n    cout << \"-1\\n\";\n    return 0;\n  }\n  vector<bool> present(n, false);\n  vector<bool> f(n, false);\n  deque<int> q;\n  if (arr[0] == 0) {\n    b[0] = 99999;\n    present[1] = false;\n    q.push_back(0);\n    f[0] = true;\n  } else {\n    b[0] = 0;\n    present[0] = true;\n  }\n  int flag = 1;\n  for (i = 1; i < n; i++) {\n    if (arr[i] == arr[i - 1]) {\n      b[i] = b[i - 1];\n      f[i] = true;\n      q.push_back(i);\n      continue;\n    }\n    b[i] = arr[i - 1];\n    present[arr[i - 1]] = true;\n    for (int j = arr[i - 1] + 1; j < arr[i]; j++) {\n      if (present[j] == false) {\n        if (q.empty()) {\n          flag = 0;\n          break;\n        }\n        int index = q.front();\n        q.pop_front();\n        b[index] = j;\n        f[index] = false;\n      }\n    }\n    if (flag == 0) {\n      break;\n    }\n  }\n  if (flag == 0) {\n    cout << -1 << \"\\n\";\n    return 0;\n  }\n  for (i = 0; i < n; i++) {\n    cout << b[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\n\ndef main():\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = [1000000] * n\n    p = 0\n    st = []\n    for i, x in enumerate(a):\n        #print(b)\n\n        st.append(i)\n        if p < x:\n            while st and p < x:\n                b[st.pop()] = p\n                p += 1\n\n    print(' '.join(map(str, b)))\nmain()\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict, Counter\nfrom math import sqrt, log10, log2, log, gcd, floor, factorial\nfrom bisect import bisect_left, bisect_right\nfrom itertools import combinations, combinations_with_replacement\nimport sys, io, os\ninput=lambda:sys.stdin.readline().encode()\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n# print=sys.stdout.write\n# sys.setrecursionlimit(10000)\nmod = 10 ** 9 + 7;inf = float('inf')\ndef get_list(): return [int(i) for i in input().split()]\nyn = lambda a: print(\"YES\" if a else \"NO\")\nceil = lambda a, b: (a + b - 1) // b\nt=1\n\nfor i in range(t):\n    n=int(input())\n    l=[0]+[int(i) for i in input().split()]\n    ans=[0]*(n+1)\n    stack=[]\n    initial=0\n    dict=defaultdict(int)\n    for i in range(1,n+1):\n        if l[i]>l[i-1]:\n            ans[i]=(l[i-1])\n            dict[l[i-1]]=1\n            while initial<l[i]:\n                if initial in dict:\n                    initial+=1\n                    continue\n\n                ans[stack.pop()]=initial\n                initial+=1\n        else:\n            stack.append(i)\n            ans[i]=10**6\n\n    print(*ans[1:])\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl=list(map(int,input().split()))\nr=l[-1]\nans=[0 for i in range(n)]\nd=set()\nfor i in range(r):\n   d.add(i)\n\np=list(d.difference(l))\n\n\nans[0]=r+1\nif l[0]>1:\n    print(-1)\n    exit()\nfor i in range(1,n):\n    if l[i]-i>1:\n        print(-1)\n        exit()\n  \n    if l[i]!=l[i-1]:\n        ans[i]=l[i-1]\n    else:\n        ans[i]=None\nq={}\n\np.sort(reverse=True)\ntry:\n    ans[0]=p.pop()\nexcept:\n    ans[0]=r+1\nq[ans[0]]=1\n\nfor i in range(1,n):\n    if ans[i]==None:\n        try:\n            ans[i]=p.pop()\n        except:\n            ans[i]=r+1\n    \n\nprint(*ans)\n     "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid parseArray(long long* A, long long n) {\n  for (long long K = 0; K < n; K++) {\n    cin >> A[K];\n  }\n}\nlong long modInverse(long long a, long long b) {\n  return 1 < a ? b - modInverse(b % a, a) * b / a : 1;\n}\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nlong long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }\nlong double dist(long double x, long double y, long double a, long double b) {\n  return sqrt((x - a) * (x - a) + (y - b) * (y - b));\n}\nvoid debug(long long* a, long long n) {\n  for (long long k = 0; k < n; k++) {\n    cerr << a[k] << \" \";\n  }\n  cout << \"\\n\";\n}\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  ;\n  int n;\n  cin >> n;\n  long long a[n];\n  parseArray(a, n);\n  int last_idx[2 * n];\n  memset(last_idx, -1, sizeof last_idx);\n  for (int k = 0; k < n; k++) last_idx[a[k]] = k;\n  vector<long long> ans;\n  long long idx = 0;\n  for (int k = 0; k < n; k++) {\n    if (k == 0 || a[k] == a[k - 1]) {\n      while (last_idx[idx] >= k) idx++;\n      ans.push_back(idx++);\n    } else {\n      ans.push_back(a[k - 1]);\n      idx = max(idx, a[k - 1] + 1);\n    }\n  }\n  for (long long e : ans) cout << e << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct type {\n  long long k, i, j;\n};\nbool isPrime(long long n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (long long i = 5; i * i <= n; i = i + 6)\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  return true;\n}\nlong long findSubarray(long long arr[], long long n, long long k) {\n  long long window_sum = 0;\n  long long min_window = INT_MAX;\n  long long last = 0;\n  for (long long i = 0; i < n; i++) {\n    window_sum += arr[i];\n    if (i + 1 >= k) {\n      if (min_window > window_sum) {\n        min_window = window_sum;\n        last = i;\n      }\n      window_sum -= arr[i + 1 - k];\n    }\n  }\n  long long sum = 0;\n  for (long long i = last - k + 1; i <= last; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long n;\n  cin >> n;\n  vector<long long> a(n), b;\n  for (long long i = 0; i < n; i++) cin >> a[i];\n  set<long long> s;\n  for (long long i = 0; i < n; i++) s.insert(a[i]);\n  vector<long long> c;\n  for (long long i = 0; i <= n; i++) {\n    if (s.find(i) == s.end()) {\n      c.push_back(i);\n    }\n  }\n  b.push_back(c[0]);\n  long long x = 1;\n  for (long long i = 1; i < n; i++) {\n    if (a[i] == a[i - 1]) {\n      b.push_back(c[x]);\n      x++;\n    } else {\n      b.push_back(a[i - 1]);\n    }\n  }\n  if (b.size() == 0)\n    cout << \"-1\"\n         << \"\\n\";\n  for (auto x : b) cout << x << \" \";\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid fastIO() {\n  ios_base::sync_with_stdio(false);\n  cout.setf(ios::fixed);\n  cout.precision(10);\n  cout.tie(nullptr);\n  cin.tie(nullptr);\n}\ntemplate <class T>\nT power(T N, T P) {\n  return (P == 0) ? 1 : N * power(N, P - 1);\n}\ntemplate <class T>\nT GCD(T A, T B) {\n  return (A % B == 0) ? B : GCD(B, A % B);\n}\nconst int MOD = 1e9 + 7;\nconst int MX = 2e5 + 5;\nconst long long INF = 1e18;\nconst long double PI = acos((long double)-1);\nvoid setIn(string s) { freopen(s.c_str(), \"r\", stdin); }\nvoid setOut(string s) { freopen(s.c_str(), \"w\", stdout); }\nbool sort_rev(int a, int b) { return a > b; }\nbool sort_(pair<string, int> &p1, pair<string, int> &p2) {\n  if (p1.first == p2.first) return p1.second < p2.second;\n  return p1.first < p2.first;\n}\nint main() {\n  fastIO();\n  int t = 1;\n  while (t--) {\n    int n;\n    cin >> n;\n    int ara[100005], b[100005], used[100005];\n    for (int i = 0; i < n; i++) cin >> ara[i];\n    for (int i = 0; i <= n + 1; i++) {\n      used[i] = -1;\n      b[i] = -1;\n    }\n    for (int i = 1; i < n; i++) {\n      if (ara[i] != ara[i - 1]) {\n        b[i] = ara[i - 1];\n        used[ara[i - 1]] = 1;\n      }\n    }\n    used[ara[n - 1]] = 1;\n    int posUnused = 0;\n    for (int i = 0; i < n; i++) {\n      if (b[i] == -1) {\n        while (used[posUnused] == 1) posUnused++;\n        b[i] = posUnused;\n        used[posUnused] = 1;\n      }\n      cout << b[i] << \" \";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na=list(map(int,input().split()))\ns1 = set(a)\ns2 = set()\ni=0\nc=0\nx=0\nlst=[]\nf = 1\nwhile i<n:\n    miss = a[i]\n    if c==miss and x not in s1 and x not in s2:\n        lst.append(x)\n        s2.add(x)\n        x+=1\n        i+=1\n    elif c==miss and (x in s1 or x in s2):\n        x+=1\n    elif c!=miss:\n        lst.append(c)\n        s2.add(c)\n        i+=1\n        while (c in s2):\n            c+=1\n        if c!=miss:\n            f=0\n            break\nif f==1:\n    print(*lst)\nelse:\n    print(-1)\n    "
        },
        {
            "language": 3,
            "solution": "from sys import stdin, setrecursionlimit, stdout\n#setrecursionlimit(1000000)\nfrom collections import deque\nfrom math import sqrt, floor, ceil, log, log2, log10, pi, gcd, sin, cos, asin\ndef ii(): return int(stdin.readline())\ndef fi(): return float(stdin.readline())\ndef mi(): return map(int, stdin.readline().split())\ndef fmi(): return map(float, stdin.readline().split())\ndef li(): return list(mi())\ndef si(): return stdin.readline().rstrip()\ndef lsi(): return list(si())\n#mod=1000000007\nres=['Yes', 'No']\n############# CODE STARTS HERE #############\n\ntest_case=1\nwhile test_case:\n    test_case-=1\n\n    n=ii()\n    a=li()\n    b=[-1]*n\n    v=[0]*(2*n+3)\n    for i in range(1, n):\n        if a[i]!=a[i-1]:\n            b[i]=a[i-1]\n        v[a[i]]=1\n    v[a[0]]=1\n    j=0\n    for i in range(n):\n        if b[i]==-1:\n            while v[j]:\n                j+=1\n            b[i]=j\n            j+=1\n    print(*b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\ninline bool equals(long double a, long double b) { return fabs(a - b) < 1e-9; }\ninline long long gcd(long long a, long long b) {\n  a = abs(a);\n  b = abs(b);\n  while (a > 0 && b > 0) (a > b ? a %= b : b %= a);\n  return (a == 0 ? b : a);\n}\ninline long long power(long long x, long long n, long long m = LLONG_MAX) {\n  long long res = 1;\n  x = (x % m + m) % m;\n  while (n) {\n    if (n & 1) res = (res * x) % m;\n    x = (x * x) % m;\n    n >>= 1;\n  }\n  return res;\n}\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long arr[n];\n  set<long long> s;\n  map<long long, long long> m;\n  for (long long i = 0; i <= n; i++) {\n    s.insert(i);\n  }\n  for (long long i = 0; i < n; i++) {\n    cin >> arr[i];\n    if (s.find(arr[i]) != s.end()) s.erase(arr[i]);\n    m[arr[i]] = i;\n  }\n  long long ans[n];\n  for (long long i = 0; i < n; i++) {\n    ans[i] = -1;\n  }\n  for (auto kvp : m) {\n    long long k = kvp.first;\n    long long v = kvp.second;\n    if (v < (n - 1)) ans[v + 1] = k;\n  }\n  for (long long i = 0; i < n; i++) {\n    if (ans[i] == -1) {\n      long long d = *(s.begin());\n      ans[i] = d;\n      s.erase(d);\n    }\n    cout << ans[i] << \" \";\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t = 1;\n  for (long long i = 1; i <= t; ++i) {\n    solve();\n  };\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\narr1=sorted(list(set(arr)))+[1000000]\nb=[]\nmin_val_not_vis=0\n\nvis=[0]*1000001\n\nj=0\nk=-1\nfor i in arr:\n\tvis[i]=1\n\ndef get_nex_val():\n\tglobal k\n\tk+=1\n\twhile(k<1000001):\n\t\tif vis[k]:\n\t\t\tk+=1\n\t\telse:\n\t\t\tbreak\n\nfor i in range(n):\n\tif arr[i]!=arr1[j]:\n\t\tj+=1\n\t\tb.append(arr1[j-1])\n\telse:\n\t\tget_nex_val()\n\t\tb.append(k)\n\nans=True\n#print(b)\n\nvis=[0]*1000001\t\nk=0\nfor i in range(n):\n\tvis[b[i]]=1\n\tif vis[k]:\n\t\twhile(True):\n\t\t\tif vis[k]:\n\t\t\t\tk+=1\n\t\t\telse:\n\t\t\t\tbreak\n\tif arr[i]!=k:\n\t\tans=False\n\t\tbreak\nif ans:\n\tprint(*b)\nelse:\n\tprint(-1)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\npublic class gfgcontest\n {\n\tpublic static void main (String[] args)\n\t {\n\t\tScanner input = new Scanner(System.in);\n\t\t\tint n = input.nextInt();\n\t\t\tHashSet<Integer> hs = new HashSet<>();\n\t\t\tint arr[] = new int[n];\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tarr[i] = input.nextInt();\n\t\t\t\ths.add(arr[i]);\n\t\t\t}\n\t\t\tfunc(arr,n,hs);\n\t\t\n\t}\n\tstatic void func(int arr[],int n,HashSet<Integer> hs) {\n\t\tint ans[] = new int[n];\n\t\tArrays.fill(ans,-1);\n\t\tif(arr[n-1]>n){\n\t\t\tSystem.out.println(-1);\n\t\t\treturn;\n\t\t}\n\t\tfor(int i=n-2;i>=0;i--) {\n\t\t\tif(arr[i]>i+1){\n\t\t\t\tSystem.out.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(arr[i+1]>arr[i]) {\n\t\t\t\tans[i+1] = arr[i];\n\t\t\t\ths.add(ans[i+1]);\n\t\t\t}\n\t\t}\n\t\tint val = 0;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tif(ans[i]==-1) {\n\t\t\t\twhile(hs.contains(val)) {\n\t\t\t\t\tval++;\n\t\t\t\t}\n\t\t\t\tans[i] = val;\n\t\t\t\ths.add(val);\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tSystem.out.print(ans[i]+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n }"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1000000;\nconst int maxn = 1e5 + 5;\nint a[maxn], b[maxn];\nstack<int> s;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int i, j, mex = 0;\n  for (int i = 0; i < n; i++) {\n    s.push(i);\n    if (a[i] == mex) continue;\n    for (int j = mex; j < a[i]; j++) {\n      if (s.empty()) {\n        cout << \"-1\\n\";\n        return 0;\n      }\n      b[s.top()] = j;\n      s.pop();\n    }\n    mex = a[i];\n  }\n  while (!s.empty()) {\n    b[s.top()] = inf;\n    s.pop();\n  }\n  for (int i = 0; i < n; i++) cout << b[i] << \" \";\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"Ofast\")\ntemplate <typename T, typename U>\ninline bool exist(T &cont, U &val) {\n  return cont.find(val) != cont.end();\n}\nstruct custom_hash {\n  static uint64_t splitmix64(uint64_t x) {\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM =\n        chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\nint main(int argc, char **argv) {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  set<int> s1;\n  for (int i = 0, _n = (n); i < _n; i++) {\n    cin >> v[i];\n    s1.insert(v[i]);\n    if (v[i] > i + 1) {\n      cout << -1 << '\\n';\n      return 0;\n    }\n  }\n  vector<int> ans(n, -1);\n  vector<int> ranges;\n  for (int i = (1), _b = (n - 1); i <= _b; i++) {\n    if (v[i - 1] != v[i]) {\n      ans[i] = v[i - 1];\n    }\n  }\n  int start = !v[0];\n  for (int i = 0, _n = (n); i < _n; i++) {\n    if (ans[i] == -1) {\n      while (s1.find(start) != s1.end()) {\n        start++;\n      }\n      ans[i] = start++;\n    }\n  }\n  for (int i = 0, _n = (n); i < _n; i++) {\n    cout << ans[i] << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[100001], b[100001], e[100001];\nint main() {\n  cin >> n;\n  memset(b, -1, sizeof(b));\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      e[b[i]] = 1;\n    }\n  }\n  e[a[n]] = 1;\n  int m = 0;\n  for (int i = 1; i <= n; i++) {\n    while (e[m]) m++;\n    if (b[i] == -1) {\n      b[i] = m;\n      e[m] = 1;\n    }\n    cout << b[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nb = [-1 for i in range(n)]\nflag = 1\nc = a[0]\nr = {}\nfor i in range(1, n):\n    if a[i] != c:\n        b[i] = c\n        r[c] = 1\n        if i < c:\n            flag = 0\n            break\n        c = a[i]\n# print(c)\n# b[n - 1] = c\n# r[c] = 1\nif n < c:\n    flag = 0\n\navail = []\nla = 0\nfor i in range(a[n - 1]):\n    if r.get(i, 0) == 0:\n        avail.append(i)\n        la += 1\nla += 1\navail.append(a[n - 1] + 1)\nif flag == 0:\n    print(-1)\nelse:\n    j = 0\n    for i in range(n):\n        if b[i] == -1:\n            b[i] = avail[j]\n            if j < la - 1:\n                j += 1\n    for i in b:\n        print(i, end=' ')"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nl1=[0]*1000004\nlf=[-1]*1000004\nfor i in range(1,n):\n    l1[l[i]]=1\n    if(l[i]!=l[i-1]):\n        lf[i]=l[i-1]\nl1[l[0]]=1\nm=0\nfor i in range(n):\n    if(lf[i]==-1):\n        while(l1[m]==1):\n            m+=1\n        lf[i]=m\n        l1[m]=1\n    #print(lf[i],m)\nfor i in range(n):\n    print(lf[i],end=\" \")\nprint()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nc=[]\nd=dict()\nfor j in range(n):\n    if a[j]  in d.keys():\n        d[a[j]]+=1\n    else:\n        d[a[j]]=1\n        c.append(a[j])\nj=0\ni=0\nwhile(j<len(c)):\n    p=c[j]\n    k=d[c[j]]\n    if j!=0:\n        b.append(c[j-1])\n        k-=1\n    p=0\n    while(p<k):\n        if i in d.keys():\n            pass\n        else:\n            b.append(i)\n            p+=1\n        i+=1\n    j+=1\nif max(b)>10**6:\n    print(-1)\nelse:\n    print(*b)\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl1=list(map(int,input().split()))\ns=set(l1)\ns4=list(s)\nl=len(s4)  \ni=0\nm=0\nk=0\nl2=[-1]*n\nwhile(i!=n-1):\n    if l2[i]==-1:\n       while(k<l and m==s4[k]):\n            m+=1\n            k+=1\n       l2[i]=m \n       m+=1\n    if l1[i+1]>l1[i]:\n        l2[i+1]=l1[i]   \n    i+=1 \nif l2[i]==-1:\n       while(k<l and m==s4[k]):\n            m+=1\n            k+=1\n       l2[i]=m \nprint(*l2)    \n    "
        },
        {
            "language": 3,
            "solution": "\ndef solve(n, a):\n\n    fail = [-1]\n    b = [None] * n\n    s = {}\n    t = []\n    m = max( a ) + 1\n\n    for i in range(n):\n        if a[i] > i+1:\n            return fail\n\n        if i==0:\n            if a[i]==1:\n                b[i] = 0\n                s[0] = 1\n            continue\n\n        if a[i] > a[i-1]:\n            b[i] = a[i-1]\n            s[ b[i] ] = 1\n\n        if i == n-1:\n            s[ a[i] ] = 1\n\n\n    s = [ i for i in range(100001) if i not in s ]\n\n    for i in range(n):\n        if b[i] is not None:\n            for j in range(i-1, -1, -1):\n\n                if len(s) == 0 or b[j] is not None:\n                    break\n\n                b[j] = s.pop(0)\n\n\n    for i in range(n):\n        if b[i] is None:\n            b[i] = m\n\n\n    return b\n\n\n\nn = int(input().strip())\n\na = list(map(int, input().strip().split()))\n\nprint(' '.join(map(str, solve(n, a))))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[100005], b[100005], st[100005], top;\nint main() {\n  memset(b, -1, sizeof(b));\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    st[++top] = i;\n    while (a[i - 1] != a[i]) {\n      b[st[top]] = a[i - 1];\n      a[i - 1]++;\n      top--;\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    if (b[i] == -1)\n      printf(\"100001 \");\n    else\n      printf(\"%d \", b[i]);\n  }\n  printf(\"\\n\");\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int,input().split()))\nb = [-1]*n\nd = set(a)\ndone = {}\nm = 0\nwhile m in d:\n\tm += 1\nb[0] = m\ndone[b[0]] = 1\nfor i in range(1,n):\n\tif a[i]==a[i-1]:\n\t\tcurr = m+1\n\t\twhile curr in d:\n\t\t\tcurr += 1\n\t\tb[i] = curr\n\t\tdone[b[i]] = 1\n\t\tm = max(m,b[i])\n\telse:\n\t\tif a[i-1] not in done:\n\t\t\tb[i] = a[i-1]\n\t\telse:\n\t\t\tcurr = m+1\n\t\t\twhile curr in d:\n\t\t\t\tcurr += 1\n\t\t\tb[i] = curr\n\t\tdone[b[i]] = 1\n\t\tm = max(m,b[i])\n\nprint (*b)"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nMEX(arr) = the smallest non-negative integer which doesn't appear in arr.\nGiven a SORTED array arr of length n, we want to find another array result s.t.\nfor i = 0 ... n-1, arr[i] = MEX(result[:i+1]).\nIs it possible? If so, give the array.\n\ni   =   0,1,2,3,4,5,6\narr =   1,5,5,4,3,2,1\nresult= 0,\nNot possible.\n\ni   =   0,1,2,3,4,5,6\narr =   1,1,3,4,4,6,7\nresult= 0,2,1,3,5,4,6\n\ni   =   0,1,2,3,4,5,6\narr =   0,0,0,0,0,0,0\nresult= any number !=0\n\ni   =   0,1,2,3,4,5,6\narr =   1,2,3,4,5,6,7\nresult= 0,1,2,3,4,5,6\n\ni   =   0,1,2,3,4,5,6\narr =   1,1,1,1,1,1,1\nresult= 0,0,0,0,0,0,0\n\ni   =   0,1,2,3,4,5,6\narr =   1,1,1,1,1,1,1\nresult= 0,0,0,0,0,0,0\n\ni   =   0,1,2,3,4,5,6\narr =   0,2,2,2,3,4,5\nresult= 1,0,9,9,2,3,4\n\n\ni   =   0,1,2,3,4,5,6\narr =   0,1,2,3,4,5,6\nresult= 7,0,1,2,3,4,5\n\ni   =   0,1,2,3,4,5,6\narr =   0,1,3,4,5,6,7\nresult= 2,0,1,3,4,5,6\n\ni   =   0,1,2,3,4,5,6\narr =   0,1,1,1,1,1,7\nresult= 2,0,3,4,5,6,1\n\ni   =   0,1,2,3,4,5,6\narr =   0,2,2,3,3,3,7\nresult= 1,0,4,2,5,6,3\n\ni   =   0,1,2,3,4,5,6\narr =   1,2,2,3,3,3,7\nresult= 0,1,4,2,5,6,3\n\nObservations:\n- Suppose arr[i] = N. Then, if i < N-1, it is not possible.\n- It isn't possible if arr isn't sorted. But, that was part of the constraints \n(which I didn't realize until now)\n- This means that arr[i] <= i+1 (forall i)\n    - Is this sufficient for determining whether it's possible?\n    - I think so, since there is so much more freedom for choosing elems of result rather than for arr.\n- Will the result always be a permutation of 1...N?\n    - No, take any array which all have the same values\n- There are 2*3*4*5*6*...*(n+2) possibilities of arr. Actually, less since arr has to be sorted.\n- However, n can be up to 10**5, so this probably won't help too much. Maybe for a brute force, though.\n- Will the result contain a permutation of [1...max(arr)-1]? \n    - I think so\n    - This doesn't quite work, (see an example above)\n        - You can just put a garbage value in duplicate elements, so let's not consider them for now.\n        - How will this permutation be arranged?\n        - Case arr[i] == i.\n            - [garbage, 0,1,2,3,...,max(arr)-1]\n        - Otherwise:\n            - The array must be [0,1,2,...,max(arr)+1] with one element not in there.\n                - This must be true because there will be n slots and the maximum is n+1. Furthermore,\n                we are not counting duplicates.\n            - Then, the answer is [that element, *arr[:-1]]\n    - if arr[i] is a new number, then result[i] = the previous unique number.\n      if arr[0] == 0, then arr[0] = 1\n      if arr[0] == 1, then arr[0] = 0\n      Then, you can just go through the other numbers one by one\n\nSolution Ideas:\n- Check if forall i, arr[i] <= i+1. If not, then return -1\n- This doesn't work:\n    - Create a re-indexed array containing only unique values and follow the above procedure to get the solution.\n    - Put garbage values everywhere else. The garbage value can be 1000000, since n <= 10**5\n- What about keeping track of what items are present in the array. Then, at each element, you can anything \navailable except for that element.\n\n\"\"\"\nimport random\n\ndef fast(arr):\n    result = [-1 for _ in arr]\n    used = set()\n    seen = set()\n    prev = None\n    for i, elem in enumerate(arr):\n        if elem > i+1:\n            return None\n        if i == 0:\n            prev = elem\n            seen.add(elem)\n        else:\n            if elem not in seen:\n                seen.add(elem)\n                result[i] = prev\n                used.add(prev)\n                prev = elem\n    ctr = 0\n    for i, elem in enumerate(result):\n        if elem == -1:\n            while ctr in used or ctr == arr[i] or ctr in seen:\n                ctr += 1\n            result[i] = ctr\n            used.add(ctr)\n    return result\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n\n    #CHANGE\n    result = fast(arr)\n\n    if result is None:\n        print(-1)\n    else:\n        print(' '.join(str(x) for x in result))\n\ndef MEX(arr):\n    ctr = 0\n    while ctr in arr:\n        ctr += 1\n    return ctr\n\ndef check(arr, result):\n    for i in range(len(arr)):\n        print(i, arr[i], result[:i+1], MEX(result[:i+1]))\n        if arr[i] != MEX(result[:i+1]):\n            return False\n    return True\n\ndef test():\n    # arr = [1,2,2,3,3,3,7]\n    # arr = [0,1,3,4,5,6,7]\n    # arr = [0,0,0,0,0,0,0]\n    #        1,2,3,4,5,6,7\n    arr = [0]\n    result = fast(arr)\n    print(result)\n    print(check(arr, result))\n\n\ndef randomTest():\n    t = 100\n    for i in range(1, t+1):\n        n = random.randint(1, 10**5)\n        arr = sorted([random.randint(1, n) for _ in range(n)])\n\n        # print(i, arr)\n        print(i)\n\n        result = fast(arr)\n\n        if result is None:\n            continue\n\n        # if not check(arr, result):\n        #     print('Broken!')\n        #     print(result)\n        #     return\n\n\nmain()\n# test()\n# randomTest()"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nfrom sys import stdin, stdout\n\nint_in = lambda: int(stdin.readline())\narr_in = lambda: [int(x) for x in stdin.readline().split()]\nmat_in = lambda rows: [arr_in() for y in range(rows)]\nstr_in = lambda: stdin.readline().strip()\nout = lambda o: stdout.write(\"{}\\n\".format(o))\narr_out = lambda o: out(\" \".join(map(str, o)))\nbool_out = lambda o: out(\"YES\" if o else \"NO\")\ntests = lambda: range(1, int_in() + 1)\ncase_out = lambda i, o: out(\"Case #{}: {}\".format(i, o))\n\n\ndef solve(n, a):\n    result = [None] * n\n    items_in_a = set(a)\n    curr = 0\n    for i in range(n):\n        if i > 0 and a[i - 1] != a[i]:\n            result[i] = a[i - 1]\n        else:\n            while curr in items_in_a:\n                curr += 1\n            result[i] = curr\n            curr += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    n = int_in()\n    a = arr_in()\n    arr_out(solve(n, a))"
        },
        {
            "language": 4,
            "solution": "import java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.Stack;\n\npublic class mex {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        StringBuffer sb = new StringBuffer();\n        int n = sc.nextInt();\n        int ar[] = new int[n];\n        Set<Integer> s1=new HashSet<>();\n\n        for (int i = 0; i < n; i++) {\n            ar[i] = sc.nextInt();\n            s1.add(ar[i]);\n        }\n        int ls = ar[n - 1];\n        Stack<Integer> s = new Stack<>();\n        if (ls > n) {\n            sb.append(\"-1\\n\");\n        }\n        else\n        {\n            int c=ar[0]-1<0?1:0;\n            int f=ar[0];\n            int ls2=c-1;\n            for (int i = 0; i < n; i++) {\n\n\n                if(ar[i]==f)\n                {\n                    c=ls2+1;\n                    while(s1.contains(c))\n                    {\n                        c++;\n                    }\n\n                    sb.append(c+\" \");\n                    s1.add(c);\n                    ls2=c;\n                }\n                else\n                {\n                    c=ar[i-1];\n                    sb.append(c+\" \");\n                    f=ar[i];\n                }\n            }\n            // sb.append(s.size() + \"\\n\");\n            for (int i : s) {\n                sb.append(i + \" \");\n            }\n        }\n        sb.append(\"\\n\");\n        System.out.println(sb.toString());\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int inf = 0x3f3f3f3f;\nint b[maxn];\nint a[maxn];\nint ma[maxn];\nint pre[maxn * 10];\nint _find(int x) { return x == pre[x] ? x : pre[x] = _find(pre[x]); }\nvoid _union(int x, int y) {\n  x = _find(x), y = _find(y);\n  if (x < y)\n    pre[x] = y;\n  else\n    pre[y] = x;\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < maxn * 10; ++i) pre[i] = i;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    ma[i] = max(ma[i - 1], a[i]);\n  }\n  int x = 0;\n  for (int i = n; i > 0; --i) {\n    if (a[i] > ma[i - 1])\n      b[i] = ma[i - 1];\n    else\n      b[i] = a[i] + 1;\n    b[i] = _find(b[i]);\n    _union(b[i], b[i] + 1);\n    _union(a[i], a[i] + 1);\n  }\n  for (int i = 1; i <= n; ++i) printf(\"%d%c\", b[i], i == n ? '\\n' : ' ');\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nimport heapq,bisect\nimport sys\nfrom collections import deque\nfrom fractions import Fraction\n# ------------------------------warmup----------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# -------------------game starts now----------------------------------------------------import math\nclass SegmentTree1:\n    def __init__(self, data, default=9999999, func=lambda a, b: min(a , b)):\n        \"\"\"initialize the segment tree with data\"\"\"\n        self._default = default\n        self._func = func\n        self._len = len(data)\n        self._size = _size = 1 << (self._len - 1).bit_length()\n\n        self.data = [default] * (2 * _size)\n        self.data[_size:_size + self._len] = data\n        for i in reversed(range(_size)):\n            self.data[i] = func(self.data[i + i], self.data[i + i + 1])\n\n    def __delitem__(self, idx):\n        self[idx] = self._default\n\n    def __getitem__(self, idx):\n        return self.data[idx + self._size]\n\n    def __setitem__(self, idx, value):\n        idx += self._size\n        self.data[idx] = value\n        idx >>= 1\n        while idx:\n            self.data[idx] = self._func(self.data[2 * idx], self.data[2 * idx + 1])\n            idx >>= 1\n\n    def __len__(self):\n        return self._len\n\n    def query(self, start, stop):\n        if start == stop:\n            return self.__getitem__(start)\n        stop += 1\n        start += self._size\n        stop += self._size\n\n        res = self._default\n        while start < stop:\n            if start & 1:\n                res = self._func(res, self.data[start])\n                start += 1\n            if stop & 1:\n                stop -= 1\n                res = self._func(res, self.data[stop])\n            start >>= 1\n            stop >>= 1\n        return res\n\n    def __repr__(self):\n        return \"SegmentTree({0})\".format(self.data)\n\n# -------------------game starts now----------------------------------------------------import math\nclass SegmentTree:\n    def __init__(self, data, default=0, func=lambda a, b: a + b):\n        \"\"\"initialize the segment tree with data\"\"\"\n        self._default = default\n        self._func = func\n        self._len = len(data)\n        self._size = _size = 1 << (self._len - 1).bit_length()\n\n        self.data = [default] * (2 * _size)\n        self.data[_size:_size + self._len] = data\n        for i in reversed(range(_size)):\n            self.data[i] = func(self.data[i + i], self.data[i + i + 1])\n\n    def __delitem__(self, idx):\n        self[idx] = self._default\n\n    def __getitem__(self, idx):\n        return self.data[idx + self._size]\n\n    def __setitem__(self, idx, value):\n        idx += self._size\n        self.data[idx] = value\n        idx >>= 1\n        while idx:\n            self.data[idx] = self._func(self.data[2 * idx], self.data[2 * idx + 1])\n            idx >>= 1\n\n    def __len__(self):\n        return self._len\n\n    def query(self, start, stop):\n        if start == stop:\n            return self.__getitem__(start)\n        stop += 1\n        start += self._size\n        stop += self._size\n\n        res = self._default\n        while start < stop:\n            if start & 1:\n                res = self._func(res, self.data[start])\n                start += 1\n            if stop & 1:\n                stop -= 1\n                res = self._func(res, self.data[stop])\n            start >>= 1\n            stop >>= 1\n        return res\n\n    def __repr__(self):\n        return \"SegmentTree({0})\".format(self.data)\n#-------------------------------iye ha chutiya zindegi-------------------------------------\nclass Factorial:\n    def __init__(self, MOD):\n        self.MOD = MOD\n        self.factorials = [1, 1]\n        self.invModulos = [0, 1]\n        self.invFactorial_ = [1, 1]\n\n    def calc(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate n!\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        if n < len(self.factorials):\n            return self.factorials[n]\n        nextArr = [0] * (n + 1 - len(self.factorials))\n        initialI = len(self.factorials)\n        prev = self.factorials[-1]\n        m = self.MOD\n        for i in range(initialI, n + 1):\n            prev = nextArr[i - initialI] = prev * i % m\n        self.factorials += nextArr\n        return self.factorials[n]\n\n    def inv(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate n^(-1)\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        p = self.MOD\n        pi = n % p\n        if pi < len(self.invModulos):\n            return self.invModulos[pi]\n        nextArr = [0] * (n + 1 - len(self.invModulos))\n        initialI = len(self.invModulos)\n        for i in range(initialI, min(p, n + 1)):\n            next = -self.invModulos[p % i] * (p // i) % p\n            self.invModulos.append(next)\n        return self.invModulos[pi]\n\n    def invFactorial(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate (n^(-1))!\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        if n < len(self.invFactorial_):\n            return self.invFactorial_[n]\n        self.inv(n)  # To make sure already calculated n^-1\n        nextArr = [0] * (n + 1 - len(self.invFactorial_))\n        initialI = len(self.invFactorial_)\n        prev = self.invFactorial_[-1]\n        p = self.MOD\n        for i in range(initialI, n + 1):\n            prev = nextArr[i - initialI] = (prev * self.invModulos[i % p]) % p\n        self.invFactorial_ += nextArr\n        return self.invFactorial_[n]\n\n\nclass Combination:\n    def __init__(self, MOD):\n        self.MOD = MOD\n        self.factorial = Factorial(MOD)\n\n    def ncr(self, n, k):\n        if k < 0 or n < k:\n            return 0\n        k = min(k, n - k)\n        f = self.factorial\n        return f.calc(n) * f.invFactorial(max(n - k, k)) * f.invFactorial(min(k, n - k)) % self.MOD\n#--------------------------------------iye ha combinations ka zindegi---------------------------------\ndef powm(a, n, m):\n    if a == 1 or n == 0:\n        return 1\n    if n % 2 == 0:\n        s = powm(a, n // 2, m)\n        return s * s % m\n    else:\n        return a * powm(a, n - 1, m) % m\n#--------------------------------------iye ha power ka zindegi---------------------------------\ndef sort_list(list1, list2):\n    zipped_pairs = zip(list2, list1)\n\n    z = [x for _, x in sorted(zipped_pairs)]\n\n    return z\n#--------------------------------------------------product----------------------------------------\ndef product(l):\n    por=1\n    for i in range(len(l)):\n        por*=l[i]\n    return por\n#--------------------------------------------------binary----------------------------------------\ndef binarySearchCount(arr, n, key):\n    left = 0\n    right = n - 1\n\n    count = 0\n\n    while (left <= right):\n        mid = int((right + left) / 2)\n\n        # Check if middle element is\n        # less than or equal to key\n        if (arr[mid] <= key):\n\n            # At least (mid + 1) elements are there\n            # whose values are less than\n            # or equal to key\n            count = mid + 1\n            left = mid + 1\n\n        # If key is smaller, ignore right half\n        else:\n            right = mid - 1\n\n    return count\n#--------------------------------------------------binary----------------------------------------\n\ndef countGreater(arr, n, k):\n    l = 0\n    r = n - 1\n\n    # Stores the index of the left most element\n    # from the array which is greater than k\n    leftGreater = n\n\n    # Finds number of elements greater than k\n    while (l <= r):\n        m = int(l + (r - l) / 2)\n\n        # If mid element is greater than\n        # k update leftGreater and r\n        if (arr[m] > k):\n            leftGreater = m\n            r = m - 1\n\n        # If mid element is less than\n        # or equal to k update l\n        else:\n            l = m + 1\n\n    # Return the count of elements\n    # greater than k\n    return (n - leftGreater)\n#--------------------------------------------------binary----------------------------------------\nfor ik in range(1):\n    n=int(input())\n    l=list(map(int,input().split()))\n    ans=[-1]*n\n    r=set(l)\n    r1=set()\n    for i in range(n+1):\n        if i not in r:\n            r1.add(i)\n    for i in range(1,n):\n        if l[i]!=l[i-1]:\n            ans[i]=l[i-1]\n    mis=sorted(r1)\n    t=0\n    for i in range(n):\n        if ans[i]==-1:\n            ans[i]=mis[t]\n            t+=1\n    print(*ans,sep=\" \")"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls = list(map(int, input().split()))\n\ncc = set()\nres = [-1]*n\nfor i in range(n):\n    if i > 0 and ls[i-1] != ls[i]:\n        res[i] = ls[i-1]\n        cc.add(ls[i-1])\ncc.add(ls[-1])\n\np, cv = 0, 0\nwhile p < n:\n    while cv in cc: cv += 1\n    while p < n and res[p] != -1: p += 1\n    if p < n: res[p] = cv; cv += 1\n\nprint(*res)\n"
        },
        {
            "language": 3,
            "solution": "from fractions import Fraction\nimport bisect\nimport os\nimport io\nfrom collections import Counter\nimport bisect\nfrom collections import defaultdict\nimport math\nimport random\nimport heapq as hq\nfrom math import sqrt\nimport sys\nfrom functools import reduce, cmp_to_key\nfrom collections import deque\nimport threading\nfrom itertools import combinations\nfrom io import BytesIO, IOBase\nfrom itertools import accumulate\nfrom queue import Queue\n\n\n# sys.setrecursionlimit(200000)\n# input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n\ndef iinput():\n    return int(input())\n\n\ndef tinput():\n    return input().split()\n\n\ndef rinput():\n    return map(int, tinput())\n\n\ndef rlinput():\n    return list(rinput())\n\n\nmod = int(1e9)+7\n\n\ndef factors(n):\n    return set(reduce(list.__add__,\n                      ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))\n\n\n# ----------------------------------------------------\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\nt = 1\n# t = iinput()\nfor _ in range(t):\n    n = iinput()\n    a = rlinput()\n    a = [0]+a\n    b = [-1]*(n+1)\n    mex = [False]*(int(1e5)+3)\n    for i in range(1, n+1):\n        if a[i] != a[i-1]:\n            b[i] = a[i-1]\n            mex[a[i]] = True\n    mex[0]=True\n    curr = 0\n    for i in range(1, n+1):\n        while mex[curr]:\n            curr += 1\n        if b[i] == -1:\n            b[i] = curr\n            mex[curr] = True\n    print(*b[1:])\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N, arr[100000], hasil[100000], start_prefix = 0;\nbool impossible = false;\nvoid fill(int a, int b, int z) {\n  int tmp = a;\n  for (int i = start_prefix; i < z; i++) {\n    if (hasil[i] == -1) {\n      start_prefix = i;\n      hasil[i] = tmp;\n      tmp++;\n      if (tmp == b) {\n        return;\n      }\n    }\n  }\n  impossible = true;\n}\nint main() {\n  cin >> N;\n  for (int i = 0; i < N; i++) cin >> arr[i];\n  int curr_MEX = 0;\n  for (int i = 0; i < N; i++) {\n    if (arr[i] > i + 1) {\n      impossible = true;\n      break;\n    } else if (arr[i] == curr_MEX) {\n      hasil[i] = -1;\n    } else if (arr[i] == curr_MEX + 1) {\n      hasil[i] = curr_MEX;\n      curr_MEX++;\n    } else {\n      hasil[i] = curr_MEX;\n      fill(curr_MEX + 1, arr[i], i);\n      curr_MEX = arr[i];\n    }\n  }\n  if (impossible) {\n    cout << -1 << '\\n';\n  } else {\n    for (int i = 0; i < N; i++) {\n      if (hasil[i] == -1) {\n        cout << curr_MEX + 1 << \" \";\n      } else {\n        cout << hasil[i] << \" \";\n      }\n    }\n    cout << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst unsigned long long mod = 998244353;\nconst long long inf = ((1ll << 31ll) - 1ll);\nconst long long INF = (((1ll << 59ll) - 1ll) * 2ll) + 1ll;\nconst long double pi = acos(-1);\nlong long qpow(long long b, long long e) {\n  if (!e) return 1;\n  if (e & 1) return qpow(b, e - 1) * b % mod;\n  long long pwur = qpow(b, e >> 1);\n  return pwur * pwur % mod;\n}\nlong long t, n, x, m, lB, rB, B[200007], A[200007];\nbool Flag[100006];\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.setf(ios::fixed);\n  cout.precision(0);\n  srand(time(NULL));\n  cin >> n;\n  for (long long i = 1; i <= n; i++) {\n    cin >> B[i];\n    Flag[B[i]] = true;\n  }\n  long long cont = 0;\n  for (long long i = 1; i <= n; i++) {\n    if (B[i - 1] != B[i]) {\n      cout << B[i - 1];\n    } else {\n      do {\n        cont++;\n      } while (Flag[cont]);\n      cout << cont;\n    }\n    cout << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 1e6 + 10;\nconst int mod = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\nusing namespace std;\nint n;\nint a[N], b[N];\nint cnt;\nbool st[N];\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 1; i <= n; ++i) {\n    cin >> a[i];\n    st[a[i]] = true;\n  }\n  for (int i = 1; i <= n; ++i) {\n    if (!st[i]) {\n      b[++cnt] = i;\n    }\n  }\n  int tmp = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (a[i] == a[i - 1]) {\n      cout << b[++tmp] << \" \";\n    } else {\n      cout << a[i - 1] << \" \";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,mas,now,p = int(input()),list(map(int, input().split())),1,0;s = set(mas)\nfor i in range(n):\n\tif mas[i] != p:\n\t\tprint(p, end = ' ');p = mas[i]\n\telse:\n\t\twhile now in s:now += 1\n\t\tprint(now, end = ' ');now += 1\nprint()"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\nimport collections\nfrom collections import defaultdict\nfrom sys import stdin, stdout\n    \nn=int(input())\narr=list(map(int,input().split()))\ntemp=set(arr)\na,b=0,1\nans=[]\nfor i in range(n):\n    if arr[i]!=a:\n        ans.append(a)\n        if arr[i]==b:\n            b+=1\n    else:\n        while b in temp:\n            b+=1\n        ans.append(b)\n        b+=1\n    a=arr[i]\n\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  stack<int> track;\n  vector<long long> res(n);\n  int cur = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < cur) {\n      cout << -1;\n      return 0;\n    }\n    track.push(i);\n    while (!track.empty() && cur < a[i]) {\n      res[track.top()] = cur;\n      track.pop();\n      cur++;\n    }\n    if (cur != a[i]) {\n      cout << -1;\n      return 0;\n    }\n  }\n  long long cac = 1000000;\n  while (!track.empty()) {\n    res[track.top()] = cac;\n    track.pop();\n  }\n  for (int i : res) {\n    cout << i << \" \";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1 << 30;\nconst long long int MAX = 1e9 + 7;\nvoid array_show(int *array, int array_n, char middle = ' ') {\n  for (int i = 0; i < array_n; i++)\n    printf(\"%d%c\", array[i], (i != array_n - 1 ? middle : '\\n'));\n}\nvoid array_show(long long int *array, int array_n, char middle = ' ') {\n  for (int i = 0; i < array_n; i++)\n    printf(\"%lld%c\", array[i], (i != array_n - 1 ? middle : '\\n'));\n}\nvoid array_show(vector<int> &vec_s, int vec_n = -1, char middle = ' ') {\n  if (vec_n == -1) vec_n = vec_s.size();\n  for (int i = 0; i < vec_n; i++)\n    printf(\"%d%c\", vec_s[i], (i != vec_n - 1 ? middle : '\\n'));\n}\nvoid array_show(vector<long long int> &vec_s, int vec_n = -1,\n                char middle = ' ') {\n  if (vec_n == -1) vec_n = vec_s.size();\n  for (int i = 0; i < vec_n; i++)\n    printf(\"%lld%c\", vec_s[i], (i != vec_n - 1 ? middle : '\\n'));\n}\nint t[110000];\nbool used[110000];\nint main() {\n  int n, m;\n  int i, j, k;\n  int a, b, c;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> t[i];\n  }\n  for (i = 0; i < n; i++) {\n    used[t[i]] = true;\n    if (t[i] > i + 1) {\n      cout << -1 << endl;\n    }\n  }\n  for (i = n; i > 0; i--) {\n    t[i] = t[i - 1];\n  }\n  for (i = 0; i < n; i++) {\n    if (t[i] == t[i + 1]) t[i] = -1;\n  }\n  for (i = 0, j = 0; i < n; i++) {\n    if (t[i] != -1) continue;\n    while (used[j]) j++;\n    t[i] = j;\n    used[j] = true;\n  }\n  array_show(t, n);\n}\n"
        },
        {
            "language": 4,
            "solution": "/**\n * @author vivek\n * programming is thinking, not typing\n */\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n    private static void solveTC(int __) {\n\n        /* For Google */\n//\t\tans.append(\"Case #\").append(__).append(\": \");\n\n        //code start\n\n        int n = scn.nextInt();\n        int[] array = scn.nextIntArray(n);\n\n        HashSet<Integer> set = new HashSet<>();\n        for (int i = 0; i <= n; i++) {\n            set.add(i);\n        }\n\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        set.remove(array[0]);\n        for (int i = 1; i < n; i++) {\n            set.remove(array[i]);\n            if (array[i] != array[i - 1]) {\n                ans[i] = array[i - 1];\n            }\n        }\n\n        PriorityQueue<Integer> queue = new PriorityQueue<>(set);\n\n        for (int i = 0; i < ans.length; i++) {\n            if (ans[i] == -1) {\n                ans[i] = queue.remove();\n            }\n            print(ans[i] + \" \");\n        }\n\n        //code end\n\n        print(\"\\n\");\n    }\n\n    public static void main(String[] args) {\n\n//        int limit=               ;\n//        sieve(limit);\n\n        scn = new Scanner();\n        ans = new StringBuilder();\n//        int t = scn.nextInt();\n\t\tint t = 1;\n        for (int i = 1; i <= t; i++) {\n            solveTC(i);\n        }\n        System.out.print(ans);\n    }\n    //Stuff for prime start\n    /**\n     * List containing prime numbers <br>\n     * <b>i<sup>th</sup></b> position contains <b>i<sup>th</sup></b> prime number <br>\n     * 0th index is <b>null</b>\n     */\n    private static ArrayList<Integer> listOfPrimes;\n\n    /**\n     * query <b>i<sup>th</sup></b> element to get if its prime of not\n     */\n    private static boolean[] isPrime;\n\n    /**\n     * Performs Sieve of Erathosnesis and initialise isPrime array and listOfPrimes list\n     *\n     * @param limit the number till which sieve is to be performed\n     */\n    private static void sieve(int limit) {\n        listOfPrimes = new ArrayList<>();\n        listOfPrimes.add(null);\n        boolean[] array = new boolean[limit + 1];\n\n        Arrays.fill(array, true);\n        array[0] = false;\n        array[1] = false;\n\n        for (int i = 2; i <= limit; i++) {\n            if (array[i]) {\n                for (int j = i * i; j <= limit; j += i) {\n                    array[j] = false;\n                }\n            }\n        }\n        isPrime = array;\n        for (int i = 0; i <= limit; i++) {\n            if (array[i]) {\n                listOfPrimes.add(i);\n            }\n        }\n    }\n    //stuff for prime end\n\n    /**\n     * Calculates the Least Common Multiple of two numbers\n     *\n     * @param a First number\n     * @param b Second Number\n     * @return Least Common Multiple of <b>a</b> and <b>b</b>\n     */\n    private static long lcm(long a, long b) {\n        return a * b / gcd(a, b);\n    }\n\n    /**\n     * Calculates the Greatest Common Divisor of two numbers\n     *\n     * @param a First number\n     * @param b Second Number\n     * @return Greatest Common Divisor of <b>a</b> and <b>b</b>\n     */\n    private static long gcd(long a, long b) {\n        return (b == 0) ? a : gcd(b, a % b);\n    }\n\n    static void print(Object obj) {\n        ans.append(obj.toString());\n    }\n\n\n    static Scanner scn;\n    static StringBuilder ans;\n\n    //Fast Scanner\n    static class Scanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextInt();\n            }\n            return array;\n        }\n\n        Integer[] nextIntegerArray(int n) {\n            Integer[] array = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextInt();\n            }\n            return array;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] array = new long[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextLong();\n            }\n            return array;\n        }\n\n        String[] nextStringArray() {\n            return nextLine().split(\" \");\n        }\n\n        String[] nextStringArray(int n) {\n            String[] array = new String[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = next();\n            }\n            return array;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int inf = 0x3f3f3f3f;\nint b[maxn];\nint a[maxn];\nint ma[maxn];\nint pre[maxn * 10];\nint _find(int x) { return x == pre[x] ? x : pre[x] = _find(pre[x]); }\nvoid _union(int x, int y) {\n  x = _find(x), y = _find(y);\n  if (x < y)\n    pre[x] = y;\n  else\n    pre[y] = x;\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < maxn * 10; ++i) pre[i] = i;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    ma[i] = max(ma[i - 1], a[i]);\n  }\n  bool flag = true;\n  int x = 0;\n  for (int i = n; i > 0; --i) {\n    if (a[i] > ma[i - 1])\n      b[i] = ma[i - 1];\n    else\n      b[i] = a[i] + 1;\n    b[i] = _find(b[i]);\n    _union(b[i], b[i] + 1);\n    _union(a[i], a[i] + 1);\n    x = max(x, a[i]);\n  }\n  if (!flag)\n    puts(\"-1\");\n  else {\n    for (int i = 1; i <= n; ++i) printf(\"%d%c\", b[i], i == n ? '\\n' : ' ');\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.TreeSet;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author sumit\n */\npublic class Main {\n      public static void main(String[] args) {\n            InputStream inputStream = System.in;\n            OutputStream outputStream = System.out;\n            InputReader in = new InputReader(inputStream);\n            OutputWriter out = new OutputWriter(outputStream);\n            CEhabAndPrefixMEXs solver = new CEhabAndPrefixMEXs();\n            solver.solve(1, in, out);\n            out.close();\n      }\n\n      static class CEhabAndPrefixMEXs {\n            public void solve(int testNumber, InputReader in, OutputWriter out) {\n                  int n = in.nextInt();\n                  int arr[] = in.nextIntArray(n);\n                  int[] ans = new int[n];\n                  Arrays.fill(ans, -1);\n                  TreeSet<Integer> used = new TreeSet();\n                  for (int i = 0; i < n - 1; i++) {\n                        if (arr[i] != arr[i + 1]) {\n                              ans[i + 1] = arr[i];\n                              used.add(arr[i]);\n                        }\n                  }\n                  used.add(arr[n - 1]);\n\n\n                  int m = 0;\n                  for (int i = 0; i < n; i++) {\n                        if (ans[i] == -1) {\n                              while (used.contains(m))\n                                    m++;\n                              ans[i] = m++;\n                        }\n\n                  }\n                  out.printLine(ans);\n\n            }\n\n      }\n\n      static class InputReader {\n            private InputStream stream;\n            private byte[] buf = new byte[1024];\n            private int curChar;\n            private int numChars;\n\n            public InputReader(InputStream stream) {\n                  this.stream = stream;\n            }\n\n            public int read() {\n                  if (numChars == -1)\n                        throw new InputMismatchException();\n\n                  if (curChar >= numChars) {\n                        curChar = 0;\n                        try {\n                              numChars = stream.read(buf);\n                        } catch (IOException e) {\n                              throw new InputMismatchException();\n                        }\n                        if (numChars <= 0)\n                              return -1;\n                  }\n\n                  return buf[curChar++];\n            }\n\n            public int nextInt() {\n                  int c = read();\n\n                  while (isSpaceChar(c))\n                        c = read();\n\n                  int sgn = 1;\n\n                  if (c == '-') {\n                        sgn = -1;\n                        c = read();\n                  }\n\n                  int res = 0;\n\n                  do {\n                        if (c < '0' || c > '9')\n                              throw new InputMismatchException();\n\n                        res *= 10;\n                        res += c & 15;\n\n                        c = read();\n                  } while (!isSpaceChar(c));\n\n                  return res * sgn;\n            }\n\n            public int[] nextIntArray(int arraySize) {\n                  int array[] = new int[arraySize];\n\n                  for (int i = 0; i < arraySize; i++)\n                        array[i] = nextInt();\n\n                  return array;\n            }\n\n            public boolean isSpaceChar(int c) {\n                  return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n            }\n\n      }\n\n      static class OutputWriter {\n            private final PrintWriter writer;\n\n            public OutputWriter(OutputStream outputStream) {\n                  writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n            }\n\n            public OutputWriter(Writer writer) {\n                  this.writer = new PrintWriter(writer);\n            }\n\n            public void print(int[] array) {\n                  for (int i = 0; i < array.length; i++) {\n                        if (i != 0) {\n                              writer.print(' ');\n                        }\n                        writer.print(array[i]);\n                  }\n            }\n\n            public void printLine(int[] array) {\n                  print(array);\n                  writer.println();\n            }\n\n            public void close() {\n                  writer.close();\n            }\n\n      }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class C1364 {\n\tstatic BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\tstatic PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\tstatic StringTokenizer st;\n\tpublic static void main(String[]args)throws IOException {\n\t\tint n = readInt();\n\t\tint[]array = new int[n];\n\t\tboolean[]vis = new boolean[(int)3e5+5];\n\t\tfor(int i = 0; i<n; i++) {\n\t\t\tarray[i] = readInt();\n\t\t\tvis[array[i]] = true;\n\t\t}\n\t\tArrayList<Integer>ans = new ArrayList<Integer>();\n\t\tPriorityQueue<Integer>q = new PriorityQueue<Integer>();\n\t\tfor(int i = 0; i<=250000; i++) {\n\t\t\tif(!vis[i])q.add(i);\n\t\t}\n\t\tfor(int i = 0; i<n; i++) {\n\t\t\tint cur = q.poll();\n\t\t\tans.add(cur);\n\t\t\tif(i<n-1) {\n\t\t\t\tif(array[i]<array[i+1])\n\t\t\t\tq.add(array[i]);\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i<n; i++) {\n\t\t\tif(i>0)pr.print(\" \");\n\t\t\tpr.print(ans.get(i));\n\t\t}\n\t\tpr.println();\n\t\tpr.close();\n\t}\n\tstatic String next () throws IOException {\n\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\tst = new StringTokenizer(br.readLine().trim());\n\t\treturn st.nextToken();\n\t}\n\tstatic long readLong () throws IOException {\n\t\treturn Long.parseLong(next());\n\t}\n\tstatic int readInt () throws IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\tstatic double readDouble () throws IOException {\n\t\treturn Double.parseDouble(next());\n\t}\n\tstatic char readCharacter () throws IOException {\n\t\treturn next().charAt(0);\n\t}\n\tstatic String readLine () throws IOException {\n\t\treturn br.readLine().trim();\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n \n\tpublic static void main(String[] args) throws IOException,InterruptedException{\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tint[] arr=new int[n];\n\t\tboolean[] freq=new boolean[n+1];\n\t\tint[] sol=new int[n];\n\t\tboolean f=false;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i]=sc.nextInt();\n\t\t\tfreq[arr[i]]=true;\n\t\t\tif(arr[i]>i+1) f=true;\n\t\t\tsol[i]=-1;\n\t\t}\n\t\tif (f) {\n\t\t\tpw.println(-1);\n\t\t}else {\n\t\t\tfor (int i = 1; i < n; i++) {\n\t\t\t\tif(arr[i]!=arr[i-1]) sol[i]=arr[i-1];\n\t\t\t}\n//\t\t\tpw.println(Arrays.toString(sol));\n\t\t\tStack<Integer> st=new Stack<>();\n\t\t\tst.add(0);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (sol[i]==-1) {\n\t\t\t\t\tfor (int j = st.peek(); j < n+1; j++) {\n\t\t\t\t\t\tif(!freq[j]) {\n\t\t\t\t\t\t\tst.add(j);\n\t\t\t\t\t\t\tfreq[j]=true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsol[i]=st.peek();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < sol.length; i++) {\n\t\t\t\tpw.print(sol[i]+\" \");\n\t\t\t}\n\t\t}\n\t\tpw.close();\n    }\n\n\tstatic PrintWriter pw=new PrintWriter(System.out);\n\tstatic long pow(int a,int b) {\n\t\tlong r=1l;\n\t\tfor (int i = 0; i < b; i++) {\n\t\t\tr*=a;\n\t\t}\n\t\treturn r;\n\t}\n\tstatic int[]lp;\n\tstatic void sieveLinear(int N){\n\t\tArrayList<Integer> primes = new ArrayList<Integer>();\n\t\tlp = new int[N + 1];\t\t\t\t\t\t\t\t//lp[i] = least prime divisor of i\n\t\tfor(int i = 2; i <= N; ++i){\n\t\t\tif(lp[i] == 0){\n\t\t\t\tprimes.add(i);\n\t\t\t\tlp[i] = i;\n\t\t\t}\n\t\t\tint curLP = lp[i];\n\t\t\tfor(int p: primes)//all primes smaller than or equal my lowest prime divisor\n\t\t\t\tif(p > curLP || p * 1l * i > N)\n\t\t\t\t\tbreak;\n\t\t\t\telse\n\t\t\t\t\tlp[p * i] = p;\n\t\t}\n\t}\n\tstatic long gcd(int x,int y) {\n\t\twhile (x!=y) {\n\t\t\tif(Math.max(x,y)/Math.min(x,y)==(double)(Math.max(x,y))/Math.min(x,y)) return Math.min(x,y);\n\t\t\tif(lp.length!=0) {\n\t\t\t\tif(lp[x]==x) {\n\t\t\t\t\tif(y/x==y/(double)x) return x;\n\t\t\t\t\telse return 1;\n\t\t\t\t}else if (lp[y]==y) {\n\t\t\t\t\tif(x/y==x/(double)y) return y;\n\t\t\t\t\telse return 1;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tif(x>y) x-=y;\n\t\t\telse y-=x;\n\t\t}\n\t\treturn x;\n\t}\n\tstatic class pair implements Comparable<pair> {\n\t\tint x;\n\t\tint y;\n \n\t\tpublic pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n \n\t\tpublic String toString() {\n\t\t\treturn x + \" \" + y;\n\t\t}\n\t\tpublic boolean equals(Object o) {\n            if (o instanceof pair) {\n                pair p = (pair)o;\n                return p.x == x && p.y == y;\n            }\n            return false;\n        }\n        public int hashCode() {\n            return new Double(x).hashCode() * 31 + new Double(y).hashCode();\n        }\n        public int compareTo(pair other) {\n        \tif(this.x==other.x) {\n        \t\treturn Long.compare(this.y, other.y);\n        \t}\n\t\t\treturn Long.compare(this.x, other.x);\n\t\t}\n\t}\n\tstatic class tuble implements Comparable<tuble> {\n\t\tint x;\n\t\tint y;\n\t\tint z;\n \n\t\tpublic tuble(int x, int y, int z) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n \n\t\tpublic String toString() {\n\t\t\treturn x + \" \" + y + \" \" + z;\n\t\t}\n \n\t\tpublic int compareTo(tuble other) {\n\t\t\tif (this.x == other.x) {\n\t\t\t\tif(this.y==other.y) return this.z - other.z;\n\t\t\t\telse return this.y - other.y;\n\t\t\t} else {\n\t\t\t\treturn this.x - other.x;\n\t\t\t}\n\t\t}\n\t}\n \tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n \n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n \n\t\tpublic boolean hasNext() {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn false;\n\t\t}\n \n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n \n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n \n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n \n\t\tpublic double nextDouble() throws IOException {\n\t\t\tString x = next();\n\t\t\tStringBuilder sb = new StringBuilder(\"0\");\n\t\t\tdouble res = 0, f = 1;\n\t\t\tboolean dec = false, neg = false;\n\t\t\tint start = 0;\n\t\t\tif (x.charAt(0) == '-') {\n\t\t\t\tneg = true;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\tfor (int i = start; i < x.length(); i++)\n\t\t\t\tif (x.charAt(i) == '.') {\n\t\t\t\t\tres = Long.parseLong(sb.toString());\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t\tdec = true;\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(x.charAt(i));\n\t\t\t\t\tif (dec)\n\t\t\t\t\t\tf *= 10;\n\t\t\t\t}\n\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\treturn res * (neg ? -1 : 1);\n\t\t}\n \n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n \n\t}\n \n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n\npublic class Main implements Runnable {\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        public int nextInt() {\n            int c = read();\n\n            while (isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new Main(), \"Main\", 1 << 27).start();\n    }\n\n    static class Pair {\n        int f;\n        int s;\n        PrintWriter w;\n\n        // int t;\n\n        Pair(int f, int s) {\n            // Pair(int f,int s, PrintWriter w){\n            this.f = f;\n            this.s = s;\n            // this.w = w;\n            // this.t = t;\n\n        }\n\n        public static Comparator<Pair> wc = new Comparator<Pair>() {\n            public int compare(Pair e1, Pair e2) {\n\n                // 1 for swap\n                if (Math.abs(e1.f) - Math.abs(e2.f) != 0) {\n                    // e1.w.println(\"**\"+e1.f+\" \"+e2.f);\n                    return (Math.abs(e1.f) - Math.abs(e2.f));\n                } else {\n                    // e1.w.println(\"##\"+e1.f+\" \"+e2.f);\n                    return (Math.abs(e1.s) - Math.abs(e2.s));\n                }\n\n            }\n        };\n    }\n\n    public static long gcd(long a, long b) {\n        if (b == 0)\n            return a;\n        else\n            return gcd(b, a % b);\n    }\n\n    //// recursive BFS\n    public static int bfsr(int s, ArrayList<Integer>[] a, boolean[] b, int[] pre) {\n        b[s] = true;\n        int p = 1;\n        int n = pre.length - 1;\n        int t = a[s].size();\n        int max = 1;\n        for (int i = 0; i < t; i++) {\n            int x = a[s].get(i);\n            if (!b[x]) {\n                // dist[x] = dist[s] + 1;\n                int xz = (bfsr(x, a, b, pre));\n                p += xz;\n                max = Math.max(xz, max);\n            }\n        }\n        // max = Math.max(max,(n-p));\n        pre[s] = max;\n        return p;\n    }\n\n    //// iterative BFS\n    public static int bfs(int s, ArrayList<Integer>[] a, int dist, boolean[] b, PrintWriter w) {\n        b[s] = true;\n        int siz = 0;\n        dist--;\n        Queue<Integer> q = new LinkedList<>();\n        q.add(s);\n        while (q.size() != 0 && dist > 0) {\n            int i = q.poll();\n            Iterator<Integer> it = a[i].listIterator();\n            int z = 0;\n            while (it.hasNext() && dist > 0) {\n                z = it.next();\n                if (!b[z]) {\n                    b[z] = true;\n                    dist--;\n                    // dist[z] = dist[i] + 1;\n                    siz++;\n                    q.add(z);\n                }\n            }\n\n        }\n        return siz;\n    }\n\n    public static int lower(int key, Integer[] a) {\n        int l = 0;\n        int r = a.length - 1;\n        int res = 0;\n\n        while (l <= r) {\n            int mid = (l + r) / 2;\n\n            if (a[mid] <= key) {\n                l = mid + 1;\n                res = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n\n        return res;\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    public void run() {\n        // code here\n        InputReader sc = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n\n        int defaultValue = 0;\n        long mod = Long.valueOf(\"1000000007\");\n\n        // int tc = sc.nextInt();\n        // while (tc-- > 0) {\n\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        boolean[] b = new boolean[n + 1];\n        boolean f = true;\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n            if (a[i] > (i + 1))\n                f = false;\n        }\n        if (f) {\n            int p = 0;\n            int[] ans = new int[n];\n            for (int i = 0; i < n; i++) {\n                if (i > 0 && a[i] == a[i - 1])\n                    ans[i] = -1;\n                if (a[i] == p)\n                    ans[i] = -1;\n                else if (a[i] > p) {\n                    ans[i] = p;\n                    b[p] = true;\n                    p = a[i];\n\n                }\n            }\n            b[p] = true;\n            int j = 0;\n            for (int i = 0; i < n; i++) {\n                if (ans[i] == -1) {\n                    while (j < n && b[j]) {\n                        j++;\n                    }\n                    if (j < n) {\n                        ans[i] = j;\n                        b[j] = true;\n                    } else\n                        ans[i] = n + 1;\n                }\n            }\n            // for (int i = n - 1; i > -1; i--) {\n            // if (i > 0 && (ans[i] - ans[i - 1]) > 1) {\n            // ans[i - 1] = ans[i] - 1;\n\n            // }\n            // if (ans[i] == -1)\n            // ans[i] = n;\n\n            // }\n\n            for (int i = 0; i < n; i++)\n                w.print(ans[i] + \" \");\n\n        } else {\n            w.println(-1);\n        }\n\n        // }\n        w.flush();\n        w.close();\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "# fmt: off\nFAST_IO = 1\nif FAST_IO:\n    import io, sys, atexit\n    read = iter(sys.stdin.read().splitlines()).__next__\n    _OUTPUT_BUFFER = io.StringIO()\n    sys.stdout = _OUTPUT_BUFFER\n    @atexit.register\n    def write():\n        sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\nelse:\n    read = input\nreadint = lambda: int(read())\nreadlist = lambda: list(map(int, read().split()))\n\n\ndef solve(N, A):\n    free = []\n    ans = [10**6] * N\n    low = 0\n    for i in range(N):\n        free.append(i)\n        while free and low < A[i]:\n            j = free.pop()\n            if low != A[j]:\n                ans[j] = low\n                low += 1\n            else:\n                break\n    return ans\n\nN=readint()\nA=readlist()\nans = solve(N,A)\nif ans is None:\n    print(-1)\nelse:\n    print(' '.join(map(str, ans)))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class MEX {\n    public static void main(String[] args) throws Exception{\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(in.readLine());\n        int[] arr = new int[n];\n        StringTokenizer st = new StringTokenizer(in.readLine());\n        int max = -1;\n        Set<Integer> set = new TreeSet<>();\n        for(int i = 0; i < n; i++){\n            arr[i] = Integer.parseInt(st.nextToken());\n            set.add(arr[i]);\n            max = Math.max(arr[i], max);\n        }\n        in.close();\n\n        int currSection = 0;\n        int num = 0;\n        List<Integer> sections = new ArrayList<>(set);\n        sections.add(n);\n        int[] ans = new int[n];\n        for(int i = 0; i < n; i++){\n            if(i != 0) {\n                if (arr[i] != arr[i - 1]) {\n                    ans[i] = sections.get(currSection);\n                    currSection++;\n                    continue;\n                }\n            }\n            while(set.contains(num)){\n                num++;\n            }\n            ans[i] = num;\n            num++;\n        }\n        for(int i: ans){\n            System.out.print(i + \" \");\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import os\nimport heapq\nimport sys\nimport bisect\nimport math\nimport operator\nfrom collections import defaultdict\nfrom io import BytesIO, IOBase\n\n# def gcd(a,b):\n#     if b==0:\n\n#         return a\n#     else:\n#         return gcd(b,a%b)\ndef inar():\n    return [int(k) for k in input().split()]\ndef main():\n\n    #for _ in range(int(input())):\n    n=int(input())\n    #n,x=map(int,input().split())\n    arr=inar()\n    #st=list(input())\n    res=[-1]*(n+1)\n    value=[0]*(10**5+5)\n    arr.insert(0,0)\n    lst=0\n    for i in range(1,n+1):\n        if arr[i]!=arr[i-1]:\n            res[i]=arr[i-1]\n            value[arr[i-1]]=1\n    value[arr[n]]=1\n    m=0\n    for i in range(1,n+1):\n        while value[m]:\n            m+=1\n        if res[i]==-1:\n            res[i]=m\n            value[m]=1\n    \n    # ls=[]\n    # heapq.heapify(ls)\n    # counter=0\n    # print(res)\n    # for i in range(1,n+1):\n    #     heapq.heappush(ls,res[i])\n    #     mn=heapq.heappop(ls)\n    #     heapq.heappush(ls,mn)\n    #     if (mn+1)!=arr[i]:\n    #         print(arr[i])\n    #         counter=1\n    #         break\n    # if counter==1:\n    #     print(-1)\n    # else:\n    print(*res[1:n+1])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int n;\n  int arr[100005];\n  int toUse[100005];\n  memset(toUse, -1, sizeof(toUse));\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    toUse[arr[i]] = i;\n  }\n  vector<int> ans;\n  int prev;\n  if (arr[0] == 0) {\n    for (prev = 1;; prev++) {\n      if (toUse[prev] < 0) break;\n    }\n    ans.push_back(prev);\n    toUse[prev] = 9999999;\n  } else if (arr[0] == 1) {\n    for (prev = 0;; prev++) {\n      if (toUse[prev] < 0) break;\n    }\n    ans.push_back(prev);\n    toUse[prev] = 9999999;\n  }\n  for (int i = 1; i < n; i++) {\n    if (arr[i] != arr[i - 1]) {\n      if (toUse[arr[i - 1]] > i) {\n        cout << -1;\n        return 0;\n      }\n      int push = arr[i - 1];\n      ans.push_back(push);\n      toUse[push] = 9999999;\n      prev = push;\n    } else {\n      int push = prev + 1;\n      while (toUse[push] >= i) push++;\n      ans.push_back(push);\n      toUse[push] = 9999999;\n      prev = push;\n    }\n  }\n  for (auto& x : ans) cout << x << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.stream.Collectors;\nimport java.util.stream.IntStream;\n\npublic class C {\n\n    public static void main(String[] args) throws IOException {\n        new C().run();\n    }\n    \n    private void load_inputs(final BufferedReader br) throws IOException {\n        try(\n            PrintWriter pw = select_output();\n        ) {\n                int[] line1 = Arrays.stream(br.readLine().trim().split(\"\\\\s+\")).mapToInt(v -> Integer.valueOf(v)).toArray();\n                int[] line2 = Arrays.stream(br.readLine().trim().split(\"\\\\s+\")).mapToInt(v -> Integer.valueOf(v)).toArray();\n                solve(line1[0], line2, pw);\n        }\n    }\n    \n    int len2, n2, trlen;\n    long[] tree;\n    ArrayList<int[]> queue = new ArrayList<>();\n    int[] starts;\n    \n    private void set(final int i, final long v) {\n        int pos = trlen - n2 + i;\n        tree[pos] = v;\n        while(pos > 0) {\n            int pos1 = pos;\n            int pos2 = pos + ((pos & 1) == 0 ? -1 : 1);\n            pos = (pos - 2 + (pos & 1)) >> 1;\n            tree[pos] = tree[pos2] == Long.MIN_VALUE ? tree[pos1] : tree[pos1] + tree[pos2];\n        }\n    }\n    \n    private long get(final int l, final int r) {\n        int res = 0;\n        queue.add(new int[]{0, 0, n2});\n        while(queue.size() > 0) {\n            int[] item = queue.get(0);\n            queue.remove((int)0);\n            if(item[1] >= l && item[2] <= r) {\n                res += tree[item[0]];\n            } else if(item[1] >= r || item[2] < l || item[0] * 2 + 1 >= trlen) {\n\n            } else {\n                queue.add(new int[]{item[0] * 2 + 1, item[1], (item[1] + item[2]) / 2});\n                queue.add(new int[]{item[0] * 2 + 2, (item[1] + item[2]) / 2, item[2]});\n            }\n        }\n        return res;\n    }\n\n    public String toString() {\n        return IntStream.range(0, tree.length).mapToObj(i -> (((i + 1) & i) == 0 ? \"[\" : \"\") + \n                (tree[i] == Long.MIN_VALUE ? \"-\" : Long.toString(tree[i])) + \n                (((i + 2) & (i + 1)) == 0 ? \"]\" : \"\")).collect(Collectors.joining(\", \", \"[\", \"]\")) + \"\\n\" +\n                Arrays.stream(starts).mapToObj(v -> Integer.toString(v)).collect(Collectors.joining(\", \", \"[\", \"]\"));\n    }\n    \n    private void init(final long[] a) {\n        int n = a.length;\n        len2 = (int)Math.ceil(Math.log(n) / Math.log(2));\n        n2 = 1 << len2;\n        trlen = (n2 << 1) - 1;\n        tree = new long[trlen];\n        Arrays.fill(tree, Long.MIN_VALUE);\n        System.arraycopy(a, 0, tree, trlen - n2, n);\n        int start = n2 - 1;\n        for(int i = len2 - 1; i >= 0; i--) {\n            int stop = ((start + 1) << 1) - 1;\n            for(int j = start; j < stop && tree[j] != Long.MIN_VALUE; j += 2) {\n                if(tree[j + 1] == Long.MIN_VALUE) {\n                    tree[(j - 1) / 2] = tree[j];\n                } else {\n                    tree[(j - 1) / 2] = tree[j] + tree[j + 1];\n                }\n            }\n            start = ((start + 1) >> 1) - 1;\n        }\n    }\n    \n    private int find(final long k, final int i, final int l, final int r) {\n//        System.out.println(\"find: \" + k + \", \" + i + \", \" + l + \", \" + r);\n        if(l + 1 == r) {\n            return l;\n        }\n        int m = (l + r) >> 1;\n        long s = tree[2 * i + 1];\n        if(s > k) {\n            return find(k, 2 * i + 1, l, m);\n        }\n        return find(k - s, 2 * i + 2, m, r);\n    }\n    \n    private void solve(final int n, final int[] a, final PrintWriter pw) {\n        int[] b = new int[n];\n        Arrays.fill(b, -1);\n        long[] next_b = new long[n + 1];\n        Arrays.fill(next_b, 1);\n        for(int i = 0; i < n; i++) {\n            next_b[a[i]] = 0;\n        }\n        init(next_b);\n        if(a[0] == 1) {\n            b[0] = 0;\n        } else {\n            int k = find(0, 0, 0, n2);\n            b[0] = k;\n        }\n        set(b[0], 0);\n        int prev_set_i = 0;\n        for(int i = 1; i <= n; i++) {\n            if(i == n || a[i] != a[i - 1]) {\n                if(i < n) {\n                    b[i] = a[i - 1];\n                    set(b[i], 0);\n                }\n//                System.out.println(\"1> b[\" + i + \"]: \" + b[i]);\n                for(int j = prev_set_i + 1; j < i; j++) {\n                    int k = find(0, 0, 0, n2);\n                    b[j] = k;\n                    set(k, 0);\n                }\n//                System.out.println(i - prev_set_i);\n                prev_set_i = i;\n            }\n        }\n        pw.println(Arrays.stream(b).anyMatch(v -> v == -1) ? -1 : Arrays.stream(b).mapToObj(v -> Integer.toString(v)).collect(Collectors.joining(\" \")));\n//        pw.println(Arrays.stream(b).mapToObj(v -> Integer.toString(v)).collect(Collectors.joining(\" \")));\n    }\n    \n    String nameIn = getClass().getSimpleName() + \".in\";\n    String nameOut = null;\n    \n    private void run() throws IOException {\n        File input = null;\n        if(nameIn != null && (input = new File(nameIn)).exists()) {\n            try(\n                FileReader fr = new FileReader(input);\n                BufferedReader br = new BufferedReader(fr);\n            ) {\n                load_inputs(br);\n            }\n        } else {\n            try(\n                InputStreamReader fr = new InputStreamReader(System.in);\n                BufferedReader br = new BufferedReader(fr);\n            ) {\n                load_inputs(br);\n            }\n        }\n    }\n    \n    PrintWriter select_output() throws FileNotFoundException {\n        if(nameOut != null) {\n            return new PrintWriter(nameOut);\n        }\n        return new PrintWriter(System.out);\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, a[100005], b[100005], poss[100005];\nvoid solve() {\n  cin >> n;\n  cin >> a[0];\n  memset(b, -1, sizeof(b));\n  bool possible = true;\n  if (a[0] == 1) {\n    b[0] = 0;\n  }\n  long long j = 0;\n  for (long long i = 1; i < n; i++) {\n    cin >> a[i];\n    if (possible) {\n      if (a[i] != a[i - 1]) {\n        b[i] = a[i - 1];\n        for (long long k = a[i - 1] + 1; k < a[i]; k++) {\n          while (b[j] != -1) j++;\n          if (j >= i) {\n            possible = false;\n            break;\n          }\n          b[j] = k;\n        }\n      }\n    }\n  }\n  for (long long i = j; i < n; i++)\n    if (b[i] == -1) b[i] = 1000000;\n  if (possible) {\n    cout << \"\" << b[0];\n    for (long long noname = 0 + 1; noname < n; noname++)\n      cout << \" \" << b[noname];\n    cout << \"\\n\";\n    return;\n  }\n  cout << -1 << endl;\n}\nvoid aux() {}\nint main() {\n  aux();\n  long long _ = 1;\n  while (_--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom heapq import heappush, heappop, heapify\nfrom collections import defaultdict\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10 ** 19\nMOD = 10 ** 9 + 7\n\nN = INT()\nA = LIST()\nMAX = 10 ** 6\n\nok = [0] * (MAX+1)\nfor i, a in enumerate(A):\n    ok[a] = i + 1\nadjli = defaultdict(list)\nfor a, i in enumerate(ok):\n    adjli[i].append(a)\n\nque = []\nans = [0] * N\nfor i in range(N):\n    for a in adjli[i]:\n        heappush(que, a)\n    if not que:\n        print(-1)\n        exit()\n    ans[i] = heappop(que)\nprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nimport io\nimport os\nif __name__==\"__main__\":\n    input=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n    n=int(input())\n    a=list(map(int,input().split()))\n    c=set(a)\n    d=deque()\n    for i in range(n+1):\n        if i not in c:\n            d.append(i)\n    b=[]\n    for i in range(n):\n        if i!=0:\n            if a[i-1]<a[i]:\n                b.append(a[i-1])\n            else:\n                b.append(d.popleft())\n        else:\n            b.append(d.popleft())\n    print(*b)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Main {\n    static int[][] canExit;\n    static int[][] vis;\n\n    static class Pair{\n        int ind, val;\n        Pair(int i, int v){\n            ind=i;\n            val=v;\n        }\n    }\n\n\n    static void solve() throws Exception {\n\t\tint n = sc.nextInt();\n\t\tint[] arr = sc.intArr(n);\n\t\tint[] b = new int[n];\n\t\tfor (int i=1;i<n;i++){\n\t\t\tif (arr[i]<arr[i-1] || arr[i]>i+1){\n\t\t\t\tpw.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tHashSet<Integer> nextMax = new HashSet<>();\n\n\t\tfor (int i=0;i<n;i++){\n\t\t\tnextMax.add(arr[i]);\n\t\t\tif (arr[i]>i+1){\n\t\t\t\tpw.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tint[] res = new int[n];\n\t\tint curr = 0;\n\t\tint mex= 0;\n\t\tfor (int i=0;i<n;i++){\n\t\t\tres[i] = Integer.MAX_VALUE;\n\t\t\tif (i!=0){\n\t\t\t\tif (arr[i]!=arr[i-1]){\n\t\t\t\t\tres[i]=arr[i-1];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\twhile (nextMax.contains(curr))curr++;\n\t\t\n\t\t\tres[i] = curr;\n\t\t\tcurr++;\n\n\t\t\t\n\t\t\t\n\t\t}\n\t\tfor (int i=0;i<n;i++){\n\t\t\tpw.print(res[i] + \" \");\n\t\t}\n    }\n\n\n\n    static PrintWriter pw;\n    static MScanner sc;\n\n    public static void main(String[] args) throws Exception {\n\n        pw = new PrintWriter(System.out);\n        sc = new MScanner(System.in);\n\n        ///int tests =sc.nextInt();\n        int tests = 1;\n        while (tests-- > 0){\n            solve();\n            pw.flush();\n        }\n\n    }\n\n    static class MScanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public MScanner(InputStream system) {\n            br = new BufferedReader(new InputStreamReader(system));\n        }\n\n        public MScanner(String file) throws Exception {\n            br = new BufferedReader(new FileReader(file));\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int[] intArr(int n) throws IOException {\n            int[] in = new int[n];\n            for (int i = 0; i < n; i++)\n                in[i] = nextInt();\n            return in;\n        }\n\n        public long[] longArr(int n) throws IOException {\n            long[] in = new long[n];\n            for (int i = 0; i < n; i++)\n                in[i] = nextLong();\n            return in;\n        }\n\n        public int[] intSortedArr(int n) throws IOException {\n            int[] in = new int[n];\n            for (int i = 0; i < n; i++)\n                in[i] = nextInt();\n            shuffle(in);\n            Arrays.sort(in);\n            return in;\n        }\n\n        public long[] longSortedArr(int n) throws IOException {\n            long[] in = new long[n];\n            for (int i = 0; i < n; i++)\n                in[i] = nextLong();\n            shuffle(in);\n            Arrays.sort(in);\n            return in;\n        }\n\n        public Integer[] IntegerArr(int n) throws IOException {\n            Integer[] in = new Integer[n];\n            for (int i = 0; i < n; i++)\n                in[i] = nextInt();\n            return in;\n        }\n\n        public Long[] LongArr(int n) throws IOException {\n            Long[] in = new Long[n];\n            for (int i = 0; i < n; i++)\n                in[i] = nextLong();\n            return in;\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        public char nextChar() throws IOException {\n            return next().charAt(0);\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n\n        public void waitForInput() throws InterruptedException {\n            Thread.sleep(3000);\n        }\n    }\n\n    static void shuffle(int[] in) {\n        for (int i = 0; i < in.length; i++) {\n            int idx = (int) (Math.random() * in.length);\n            int tmp = in[i];\n            in[i] = in[idx];\n            in[idx] = tmp;\n        }\n    }\n\n    static void shuffle(long[] in) {\n        for (int i = 0; i < in.length; i++) {\n            int idx = (int) (Math.random() * in.length);\n            long tmp = in[i];\n            in[i] = in[idx];\n            in[idx] = tmp;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,os,io\nimport math,bisect,operator\ninf,mod = float('inf'),10**9+7\n# sys.setrecursionlimit(10 ** 6)\nfrom itertools import groupby,accumulate\nfrom heapq import heapify,heappop,heappush\nfrom collections import deque,Counter,defaultdict\ninput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__\nNeo = lambda : list(map(int,input().split()))\ntest, = Neo()\nn = test\nA = Neo()\nC = Counter(A)\nB = []\nfor i in range(n+1):\n    if i not in C:\n        B.append(i)\nB.sort()        \nB = deque(B)\nAns = []\nfor i in A:\n    Ans.append(B.popleft())\n    C[i] -= 1\n    if C[i] == 0:\n        B.appendleft(i)\nprint(*Ans)            \n        \n    \n"
        },
        {
            "language": 3,
            "solution": "\n\n\nn = int(input())\nlist1 = list(map(int,input().split()))\nlist2 = list()\nvisited = list()\nfor i in range(n):\n    list2.append(-1)\nfor i in range(100001):\n    visited.append(-1)\nf=0\nfor i in range(n):\n    if list1[i]>i+1:\n        f=1\n        break\n    visited[list1[i]]=1\n\nnot_v = list()\nfor i in range(100001):\n    if visited[i]==-1:\n        not_v.append(i)\nfor i in range(1,n):\n    if list1[i]!=list1[i-1]:\n        list2[i]=list1[i-1]\nj=0\n\nfor i in range(n):\n   if list2[i]==-1:\n\n       list2[i]=not_v[j]\n       j+=1\nprint(*list2)\n"
        },
        {
            "language": 3,
            "solution": "\n# MEX = smallest non-neg integer that doesn't belong to this set\ndef solve(A, n):\n    free = []\n    ans = [-1] * n\n    lo = 0\n    for i, a in enumerate(A):\n        free.append([i, a])\n        while lo < a:\n            if not free:\n                return None\n            j, y = free.pop()\n            if lo != y: #success\n                ans[j] = lo\n                lo += 1\n            else:\n                return\n    while free:\n        ans[free.pop()[0]] = 10**6\n    return ans\n\nn = int(input())\nA = list(map(int, input().split()))\nans = solve(A, n)\nif ans is None:\n    print(-1)\nelse:\n    print(' '.join(map(str, ans)))\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        int[] a = new int[n+1];\n        int[] b = new int[n+1];\n        int[] c = new int[n+1];\n        int[] s = new int[n+1];\n        ArrayList<Integer>[] lists = new ArrayList[n+1];\n        lists[0] = new ArrayList<>();\n        boolean flag = true; a[0] = 0; c[0] = -1;\n        int last = 0;\n        for (int i=1;i<=n;i++) {\n            lists[i] = new ArrayList<>();\n            a[i] = input.nextInt(); c[i] = -1;\n            if (a[i] > i) flag = false;\n            if (a[i] > a[i-1]){\n                s[i] = i-last;\n                b[i] = 1;\n                last = i;\n            }\n        }\n        if (!flag) System.out.println(\"-1\");\n        else {\n            int l = 1,lst = 0;\n            for (int i=1;i<=n;i++){\n                if (b[i] == 1){\n                    lists[i].add(lst);\n                    lst++;\n                    while(lst<a[i]){\n                        if(lists[l].size()>=s[l]) l++;\n                        else{\n                            lists[l].add(lst);\n                            lst++;\n                        }\n                    }\n                    lst=a[i];\n                }\n            }\n            for (int i=n;i>=1;i--){\n                if(lists[i].size() > 0){\n                    int pos=i;\n                    lists[i].sort(new Comparator<Integer>() {\n                        @Override\n                        public int compare(Integer o1, Integer o2) {\n                            return o1 - o2;\n                        }\n                    });\n                    int len = lists[i].size();\n                    for (int j=0;j<=len-1;j++){\n                        c[pos] = lists[i].get(j); pos--;\n                    }\n                }\n            }\n            for(int i=1;i<=n;i++) if(c[i] == -1) c[i] = 100010;\n            for (int i=1;i<=n;i++) {\n                if (i == 1) System.out.print(c[i]);\n                else System.out.print(\" \" + c[i]);\n            }\n            System.out.println();\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "##############--->>>>> Deepcoder Amit Kumar Bhuyan <<<<<---##############\nfrom __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii():  return int(input())\ndef si():  return input()\ndef mi():  return map(int,input().strip().split(\" \"))\ndef msi(): return map(str,input().strip().split(\" \"))\ndef li():  return list(mi())\n \ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import log,sqrt,factorial,cos,tan,sin,radians\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *\n#import threading\n#from itertools import permutations\n#Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\nimport sys\ninput = sys.stdin.readline\nscan_int = lambda: int(input())\nscan_string = lambda: input().rstrip()\nread_list = lambda: list(read())\nread = lambda: map(int, input().split())\nread_float = lambda: map(float, input().split())\n# from bisect import bisect_left as lower_bound;\n# from bisect import bisect_right as upper_bound;\n# from math import ceil, factorial;\n\n \ndef ceil(x):\n    if x != int(x):\n        x = int(x) + 1\n    return x\n \ndef factorial(x, m):\n\tval = 1\n\twhile x>0:\n\t\tval = (val * x) % m\n\t\tx -= 1\n\treturn val\n\ndef fact(x):\n\tval = 1\n\twhile x > 0:\n\t\tval *= x\n\t\tx -= 1\n\treturn val\n    \n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n \n## gcd function\ndef gcd(a,b):\n    if b == 0:\n        return a;\n    return gcd(b, a % b);\n\n## lcm function\ndef lcm(a, b):\n\treturn (a * b) // math.gcd(a, b)\n\ndef is_integer(n):\n\treturn math.ceil(n) == math.floor(n)\n \n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n\tif k > n:\n\t\treturn 0\n\tif(k > n - k):\n\t\tk = n - k\n\tres = 1\n\tfor i in range(k):\n\t\tres = res * (n - i)\n\t\tres = res / (i + 1)\n\treturn int(res)\n \n## upper bound function code -- such that e in a[:i] e < x;\n\n \n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0 and n > 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0 and n > 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n \n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n \n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b;\n \n# find function with path compression included (recursive)\n# def find(x, link):\n#     if link[x] == x:\n#         return x\n#     link[x] = find(link[x], link);\n#     return link[x];\n \n# find function with path compression (ITERATIVE)\ndef find(x, link):\n    p = x;\n    while( p != link[p]):\n        p = link[p];\n    \n    while( x != p):\n        nex = link[x];\n        link[x] = p;\n        x = nex;\n    return p;\n \n \n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n \n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    prime[0], prime[1] = False, False\n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n# Euler's Toitent Function phi\ndef phi(n) : \n  \n    result = n \n    p = 2\n    while(p * p<= n) : \n        if (n % p == 0) : \n            while (n % p == 0) : \n                n = n // p \n            result = result * (1.0 - (1.0 / (float) (p))) \n        p = p + 1\n    if (n > 1) : \n        result = result * (1.0 - (1.0 / (float)(n))) \n   \n    return (int)(result) \n\ndef is_prime(n):\n\tif n == 0:\n\t\treturn False\n\tif n == 1:\n\t\treturn True\n\tfor i in range(2, int(n ** (1 / 2)) + 1):\n\t\tif not n % i:\n\t\t\treturn False\n \n\treturn True\n\ndef next_prime(n, primes):\n\twhile primes[n] != True:\n\t\tn += 1\n\treturn n\n\n \n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e5 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n \n################## un-comment below 2 lines when using factorization #################\nspf = [0 for i in range(MAXN)]\n# spf_sieve();\ndef factoriazation(x):\n    res = []\n    for i in range(2, int(x ** 0.5) + 1):\n    \twhile x % i == 0:\n    \t\tres.append(i)\n    \t\tx //= i\n    if x != 1:\n   \t\tres.append(x)\n    return res\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\ndef factors(n):\n\tres = []\n\tfor i in range(1, int(n ** 0.5) + 1):\n\t\tif n % i == 0:\n\t\t\tres.append(i)\n\t\t\tres.append(n // i)\n\treturn list(set(res))\n \n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()));\n \ndef float_array():\n    return list(map(float, input().strip().split()));\n \n## taking string array input\ndef str_array():\n    return input().strip().split();\n\ndef binary_search(low, high, w, h, n):\n\twhile low < high:\n\t\tmid = low + (high - low) // 2\n\t\t# print(low, mid, high)\n\t\tif check(mid, w, h, n):\n\t\t\tlow = mid + 1\n\t\telse:\n\t\t\thigh = mid\n\treturn low\n\n## for checking any conditions\ndef check(beauty, s, n, count):\n\tpass\n\t\n\n \n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n \n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n \nfrom itertools import permutations\nimport math\nimport bisect as bis\nimport random\nimport sys\nimport collections as collect\n\n# primes = sieve(10 ** 5)\n\ndef solve():\n\tn = scan_int()\n\ta = read_list()\n\ts = set(a)\n\tnow = 1\n\tp = 0\n\tfor i in range(n):\n\t\tif a[i] != p:\n\t\t\tprint(p, end = \" \")\n\t\t\tp = a[i]\n\t\t\tif now == a[i]:\n\t\t\t\tnow += 1\n\t\telse:\n\t\t\twhile now in s:\n\t\t\t\tnow += 1\n\t\t\tprint(now, end = \" \")\n\t\t\tnow += 1\n\tprint()\n\n\n\n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    solve()\n    #dmain()\n \n# Comment Read()\n\t# fin_time = datetime.now()\n# \tprint(\"Execution time (for loop): \", (fin_time-init_time))\n"
        },
        {
            "language": 3,
            "solution": "import sys, os, io\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math as mt\nfrom collections import deque\n\n\n\n\ndef main():\n    tc=1\n    for _ in range(tc):\n        n=ri()\n        a=ria()\n        b=[0]*n\n        vis=[0]*n*10\n        nonvis=[]\n        f=0\n        for i in range(n):\n            vis[a[i]]=1\n            if a[i]>i+1:\n                print(-1)\n                f=1\n                break\n        if f==0:\n            for i in range(len(vis)):\n                if vis[i]!=1:\n                    nonvis.append(i)\n            nonvisd=deque(nonvis)\n            print(nonvisd.popleft(), end=\" \")\n            for i in range(1,n):\n                if a[i-1]!=a[i]:\n                    print(a[i-1],end=\" \")\n                else:\n                    print(nonvisd.popleft(),end=\" \")\n\n\n\n\n\n\n\nclass FastReader(io.IOBase):\n    newlines = 0\n\n    def __init__(self, fd, chunk_size=1024 * 8):\n        self._fd = fd\n        self._chunk_size = chunk_size\n        self.buffer = io.BytesIO()\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self, size=-1):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size if size == -1 else size))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n\nclass FastWriter(io.IOBase):\n\n    def __init__(self, fd):\n        self._fd = fd\n        self.buffer = io.BytesIO()\n        self.write = self.buffer.write\n\n    def flush(self):\n        os.write(self._fd, self.buffer.getvalue())\n        self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass FastStdin(io.IOBase):\n    def __init__(self, fd=0):\n        self.buffer = FastReader(fd)\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nclass FastStdout(io.IOBase):\n    def __init__(self, fd=1):\n        self.buffer = FastWriter(fd)\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.flush = self.buffer.flush\n\n\nif __name__ == '__main__':\n    sys.stdin = FastStdin()\n    sys.stdout = FastStdout()\n    main()\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nn=int(input());mark={};mark1={}\na=list(map(int,input().split()));t=0;Ans=[];p=deque()\nfor i in a:mark[i]=1\nfor i in a:\n    if i==t:\n        if len(p)>0:\n            if i==p[0]:\n                while mark.get(t,None)!=None:\n                    if mark1.get(t,None)==None:\n                        p.append(t);mark1[t]=1\n                    t+=1    \n                Ans.append(t);t+=1\n            else:    \n                q=p.popleft()\n                Ans.append(q)\n        else:        \n            while mark.get(t,None)!=None:\n                if mark1.get(t,None)==None:\n                    p.append(t);mark1[t]=1\n                t+=1    \n            Ans.append(t);t+=1\n    else:\n        if len(p)>0:\n            if i==p[0]:\n                while mark.get(t,None)!=None:\n                    if mark1.get(t,None)==None:\n                        p.append(t);mark1[t]=1\n                    t+=1    \n                Ans.append(t);t+=1\n            else:    \n                q=p.popleft()\n                Ans.append(q)\n        else:\n            Ans.append(t);t+=1\nprint(*Ans)            \n    "
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class C1364 {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint[] arr = new int[n + 2];\n\t\tint[] ans = new int[n + 2];\n\t\tArrays.fill(ans, -1);\n\t\tarr[n+1] = -1;\n\t\tboolean[] exclude = new boolean[100005];\n\t\tfor (int i = 1; i < n + 1; i++)\n\t\t\tarr[i] = in.nextInt();\n\t\tfor (int i = 2; i < n + 2; i++) {\n\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\tans[i] = arr[i - 1];\n\t\t\t\texclude[ans[i]] = true;\n\t\t\t}\n\t\t}\n\t\t// int count = 1;\n\t\t// int i = 0;\n//\t\tif (arr[1] == 0) {\n//\t\t\tarr[0] = 1;\n//\t\t} else if (arr[1] == 1) {\n//\t\t\tarr[0] = 0;\n//\t\t} else {\n//\t\t\tSystem.out.println(\"-1\");\n//\t\t\treturn;\n//\t\t}\n\n\t\tint j = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\twhile (exclude[j])\n\t\t\t\tj++;\n\t\t\tif (ans[i] == -1) {\n\t\t\t\tans[i] = j;\n\t\t\t\texclude[j] = true;\n\t\t\t}\n\t\t\tSystem.out.print(ans[i]+\" \");\n\t\t}\n//\t\t}\n//\t\twhile (i < n) {\n//\t\t\ti++;\n//\t\t\tif (i + 2 < arr[i]) {\n//\t\t\t\tans = \"-1\";\n//\t\t\t\tbreak;\n//\t\t\t}\n\n//\t\t\tif (j < n) {\n//\t\t\t\twhile (count == arr[j]) {\n//\t\t\t\t\twhile (count == arr[j]) {\n//\t\t\t\t\t\tj++;\n//\t\t\t\t\t\tif (j >= n)\n//\t\t\t\t\t\t\tbreak;\n//\t\t\t\t\t}\n//\t\t\t\t\tcount++;\n//\t\t\t\t\tif (j >= n)\n//\t\t\t\t\t\tbreak;\n//\t\t\t\t}\n//\t\t\t}\n\n\t\t// System.out.println(arr[i] + \" \" + count+\" \"+last);\n//\t\t\tif (arr[i] != arr[i-1]) {\n//\t\t\t\tans += arr[i-1] + \" \";\n//\t\t\t} else \n//\t\t\t\tcount++;\n//\t\t\t\tif (!nums.isEmpty()) {\n//\t\t\t\t\twhile (count == nums.peek()) {\n//\t\t\t\t\t\tcount++;\n//\t\t\t\t\t\tnums.poll();\n//\t\t\t\t\t\tif (nums.isEmpty())\n//\t\t\t\t\t\t\tbreak;\n//\t\t\t\t\t}\n//\t\t\t\t}\n//\t\t\t\tdo {\n//\t\t\t\t\tj++;\n//\t\t\t\t} while (exclude[j]);\n\n\t\t// ns += j + \" \";\n\n\t\t// System.out.println(arr[i] + \" \" + count);\n\n//\t\tSystem.out.println(ans);\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[109000], book[109000];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    book[a[i]] = 1;\n  }\n  int cnt = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (i != 1 && a[i] != a[i - 1])\n      printf(\"%d \", a[i - 1]);\n    else {\n      while (book[cnt] == 1) cnt++;\n      printf(\"%d \", cnt++);\n    }\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nimport heapq\n\nn = int(stdin.readline())\n\nnums = [int(x) for x in stdin.readline().split()]\n\nhigh = max(nums)\n\nno = set(nums)\n\nneed = []\nfor x in range(high):\n    if not x in no:\n        need.append(x)\n        \nheapq.heapify(need)\n\nout = []\n\nfor x in range(len(nums)):\n    if need:\n        out.append(heapq.heappop(need))\n    else:\n        out.append(high+1)\n    if x != n-1:\n        if nums[x+1] != nums[x]:\n            heapq.heappush(need, nums[x])\n\nlow = 0\nthings = [False for x in range(high+5)]\n\nvalid = True\n\nfor i, x in enumerate(out):\n    things[x] = True\n    while things[low]:\n        low += 1\n    if low != nums[i]:\n        valid = False\n        break\n\nif valid:\n    print(' '.join([str(x) for x in out]))\nelse:\n    print(-1)\n    \n"
        },
        {
            "language": 4,
            "solution": "// Working program with FastReader \nimport java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.Scanner; \nimport java.util.StringTokenizer; \nimport java.util.*;\nimport java.io.*;\npublic class C_Ehab_and_Prefix_MEXs{\n    public static void main(String[] args) {\n       FastReader sc=new FastReader();\n        PrintWriter out = new PrintWriter(System.out);\n        int n =sc.nextInt();\n        int[] array = new int[n];\n        for(int i =0;i<n;i++)array[i] = sc.nextInt();\n        boolean ispossible = true;\n        for(int i =0;i<n;i++){\n            if(array[i]>(i+1))ispossible=false;\n            if(i>0 && array[i]<array[i-1])ispossible=false;\n        }\n        HashSet<Integer> store = new HashSet<>();\n        if(ispossible){\n            int[] b= new int[n];\n            for(int i=0;i<n;i++){\n                // store.add(array[i]);\n                if(i>0 && array[i]!=array[i-1]){\n                    b[i] = array[i-1];\n                    store.add(b[i]);\n                }\n                else{\n                    b[i] = -1;\n                }\n            }\n            int max = 0;\n            store.add(array[0]);\n            store.add(array[n-1]);\n            // if(array[0]==0)max++;\n            for(int i =0;i<n;i++){\n                if(b[i]==-1){\n                    while(store.contains(max))max++;\n                    b[i] = max;\n                    store.add(max);\n                }\n            }\n            for(int i =0;i<n;i++){\n                out.print(b[i]+\" \");\n            }\n            out.println();\n        }\n        else{\n            out.println(-1);\n        }\n        out.close();\n    }\n\n    \n    public static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n\n        public FastReader() \n        { \n            br = new BufferedReader(new\n                    InputStreamReader(System.in)); \n        } \n\n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n\n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n\n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n\n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n\n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.text.*;\n\npublic class C1364 {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint[] arr = sc.nextIntArr(n);\n\t\tTreeSet<Integer> ts = new TreeSet<Integer>();\n\n\t\tint[] cnt = new int[n + 1];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tcnt[arr[i]]++;\n\t\t}\n\t\tfor (int i = 0; i < cnt.length; i++) {\n\t\t\tif (cnt[i] == 0)\n\t\t\t\tts.add(i);\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tpw.print(ts.pollFirst() + \" \");\n\t\t\tif (--cnt[arr[i]] == 0) {\n\t\t\t\tts.add(arr[i]);\n\t\t\t}\n\t\t}\n\t\tpw.close();\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic Scanner(FileReader r) {\n\t\t\tbr = new BufferedReader(r);\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic int[] nextIntArr(int n) throws IOException {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < arr.length; i++)\n\t\t\t\tarr[i] = nextInt();\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "// package june2020;\n\nimport java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\npublic class cf_subs {\n\tstatic FastReader scn = new FastReader();\n\tstatic OutputStream out = new BufferedOutputStream(System.out);\n\tpublic static void main(String[] args) throws IOException {\n\t\t// TODO Auto-generated method stub\n\t\tint t = 1;\n\t\twhile(t-->0) {\n\t\t\tint n = scn.nextInt();\n\t\t\tint[] a= new int[n];\n\t\t\tTreeSet<Integer> s = new TreeSet<>();\n\t\t\tfor(int i=0;i<100005;i++) {\n\t\t\t\ts.add(i);\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\ta[i] = scn.nextInt();\n\t\t\t\ts.remove(a[i]);\n\t\t\t}\n\t\t\t\n\t\t\tint[] b = new int[n];\n\t\t\tArrays.fill(b, -1);\n\t\t\tfor(int i=1;i<n;i++) {\n\t\t\t\tif(a[i]!=a[i-1]) {\n\t\t\t\t\tb[i]=a[i-1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(b[i]!=-1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tb[i]=s.pollFirst();\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tout.write((b[i]+\" \").getBytes());\n\t\t\t}\n\t\t\tout.write(\"\\n\".getBytes());\n\t\t}\n\t\tout.close();\n\t}\n\tstatic int sum(int[] bits) {\n\t\tint ans=0;\n\t\tfor(int i=0;i<=20;i++) {\n\t\t\tans+=bits[i];\n\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\tpublic static int[] merge(int[] one,int[] two){\n\t\tint[] res = new int[one.length+two.length];\n\t\tint i = 0;\n\t\tint j = 0;\n\t\tint k = 0;\n\t\t\n\t\twhile(i<one.length&&j<two.length){\n\t\t\tif(one[i]<two[j]){\n\t\t\t\tres[k] = one[i];\n\t\t\t\ti++;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tres[k] = two[j];\n\t\t\t\tj++;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(i==one.length){\n\t\t\twhile(j<two.length){\n\t\t\t\tres[k] = two[j];\n\t\t\t\tj++;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\twhile(i<one.length){\n\t\t\t\tres[k] = one[i];\n\t\t\t\tk++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\tpublic static int[] mergesort(int[] arr, int l, int r){\n\t\tif(l==r){\n\t\t\tint[] br = new int[1];\n\t\t\tbr[0] = arr[l];\n\t\t\treturn br;\n\t\t}\n\t\tint mid = (l+r)/2;\n\t\tint[] fh = mergesort(arr,l,mid);\n\t\tint[] sh = mergesort(arr,mid+1,r);\n\t\t\n\t\treturn merge(fh,sh);\n\t}\n//\tstatic int dfs(int idx) {\n//\t\t\n//\t}\n\tstatic <T> int upperBound(List<T> ls, T x) throws RuntimeException {\n\t\tif (ls.size() == 0)\n\t\t\treturn -1;\n\t\tif (ls.get(0) instanceof Integer) {\n\t\t\treturn ~Collections.binarySearch(ls, x, (t1, t2) -> ((Integer) t1).compareTo((Integer) t2) > 0 ? 1 : -1);\n\t\t} else if (ls.get(0) instanceof Long) {\n\t\t\treturn ~Collections.binarySearch(ls, x, (t1, t2) -> ((Long) t1).compareTo((Long) t2) > 0 ? 1 : -1);\n\t\t} else if (ls.get(0) instanceof Double) {\n\t\t\treturn ~Collections.binarySearch(ls, x, (t1, t2) -> ((Double) t1).compareTo((Double) t2) > 0 ? 1 : -1);\n\t\t} else {\n\t\t\tSystem.err.println(\n\t\t\t\t\tString.format(\"%s:Arey Maa chudi padi hai\", Thread.currentThread().getStackTrace()[1].getMethodName()));\n\t\t\tthrow new RuntimeException();\n\t\t}\n\t}\n\tstatic class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import *\nfrom heapq import *\ninput = stdin.readline\n\nn = int(input())\na = [int(x) for x in input().split()]\nb = list(range(1, n + 1))\nchk = [0] * (n + 1)\nflag = 0\nq = []\n\nfor x in range(n):\n    if a[x] > b[x]:\n        flag = -1\n    chk[a[x]] += 1\n\nif flag == -1:\n    print(-1)\n    exit()\n\nfor x in range(n + 1):\n    if chk[x] == 0:\n        heappush(q, x)\n\nt = heappop(q)\nprint(t, end = ' ')\n\nfor x in range(1, n):\n    if a[x - 1] != a[x]:\n        print(a[x - 1], end = ' ')\n    else:\n        t = heappop(q)\n        print(t, end = ' ')"
        },
        {
            "language": 1,
            "solution": "import sys\nimport math\n \nn = int(sys.stdin.readline().strip())\nl = list(map(int, sys.stdin.readline().strip().split(' ')))\n\npossible = True\nfor i,li in enumerate(l):\n\tif li > i+1:\n\t\tpossible = False\n\nif not possible:\n\tprint(-1)\nelse:\n\tinf = 10**6\n\tres = [inf for i in range(n)]\n\n\ttaken = set(l)\n\n\tfor i in range(n-1):\n\t\tif l[i] != l[i+1]:\n\t\t\tres[i+1] = l[i]\n\n\tcurr = 0\n\twhile curr in taken:\n\t\tcurr += 1\n\tfor i in range(n):\n\t\tif res[i] == inf:\n\t\t\tres[i] = curr\n\t\t\tcurr += 1\n\t\t\twhile curr in taken:\n\t\t\t\tcurr += 1\n\n\tprint(' '.join([str(x) for x in res]))\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\narr = list(map(int ,input().split()))\n\nvis =[0]*(n+1)    # 0<= a[i] <=i\nb = [-1]*n\nfor i in range(1, n) :\n    if arr[i] != arr[i-1] :\n        vis[arr[i-1]] = 1\n        b[i] = arr[i-1]\n\nk = 0\nvis[arr[-1]] = 1 #max of all number which appeared\n\nfor i in range(n) :\n    if b[i] == -1 :\n        # to check 0 or 1 and first minimum which is not appeared\n        while vis[k] == 1 :\n            k +=1\n        b[i] = k\n        k +=1\n\nprint(*b)       \n\n\n\n\n        \n                \n                  \n                \n            \n            \n    \n    \n        \n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ndef main():\n    mx=10**6\n    use=[False]*mx\n    for i,a in enumerate(aa[1:],1):\n        if a>i:return [-1]\n        use[a]=True\n    bb=[]\n    j=0\n    for i in range(1,n+1):\n        if aa[i]==aa[i-1]:\n            while use[j]: j += 1\n            use[j] = True\n            bb.append(j)\n        else:\n            bb.append(aa[i-1])\n            use[aa[i-1]]=True\n    return bb\n\nn=II()\naa=[0]+LI()\nprint(*main())"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n    static class node{\n        int k,v;\n        node(int k,int v){\n            this.k = k;\n            this.v = v;\n        }\n        node(){}\n    }\n\n\n     void solve(Scanner r) throws Exception {\n         int n = r.nextInt();\n         int arr[] = readIntArray(r,n);\n\n         for (int i = 0; i < n; i++) {\n             if (arr[i] > i + 1) {\n                 System.out.println(-1);\n                 return;\n             }\n         }\n\n         int cnt = 1;\n         int ans[] = new int[n];\n         Arrays.fill(ans, -1);\n         boolean vis[] = new boolean[(int) 1e6 + 1];\n         ArrayList<Integer> av = new ArrayList<Integer>();\n\n         vis[arr[0]] = true;\n         for (int i = 1; i < n; i++) {\n             if (arr[i] != arr[i - 1]) {\n                 ans[i] = arr[i - 1];\n                 vis[ans[i]] = true;\n                 vis[arr[i]] = true;\n             } else {\n                 cnt++;\n             }\n         }\n\n         for (int i = 0; i <= 1000000 && cnt > 0; i++) {\n             if (!vis[i]) {\n                 av.add(i);\n                 cnt--;\n             }\n         }\n\n         int idx = 0;\n         for (int i = 0; i < n; i++) {\n             if (ans[i] == -1) {\n                 ans[i] = av.get(idx++);\n             }\n         }\n\n         for (int i = 0; i < n; i++) {\n             System.out.print(ans[i] + \" \");\n         }\n    }\n\n    public static int[] readIntArray(Scanner in,int tokens) {\n        int[] ret = new int[tokens];\n        for (int i = 0; i < tokens; i++) {\n            ret[i] = in.nextInt();\n        }\n        return ret;\n    }\n\n\n\n\n    public static void main(String[] args) throws Exception{\n//                Scanner in = new Scanner(System.in);\n//         Scanner in = new Scanner(new File(\"input.txt\"));\n        Scanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n        new Main().solve(in);\n\n//        int T = in.nextInt();\n//        for(int i=1;i<=T;i++){\n//            new Main().solve(in);\n//        }\n\n    }\n\n}\n\n\n// class Pair{\n//    Integer key, value;\n//     Pair(int _key,int _value){\n//        key = _key;\n//        value = _value;\n//    }\n//    @Override\n//    public int hashCode() {\n//        return (key ==null?0: key.hashCode()) ^(value ==null?0: value.hashCode());\n//    }\n//\n//    @Override\n//    public boolean equals(Object obj) {\n//        if(obj==null) return false;\n//        Pair a = (Pair)obj;\n//        return this.key.equals(a.key)&&this.value.equals(a.value);\n//    }\n//}\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int fastMax(long long int x, long long int y) {\n  return (((y - x) >> (32 - 1)) & (x ^ y)) ^ y;\n}\nlong long int fastMin(long long int x, long long int y) {\n  return (((y - x) >> (32 - 1)) & (x ^ y)) ^ x;\n}\nconst long long int MAXN = 1e5 + 10;\nlong long int a[MAXN], b[MAXN];\ndeque<long long int> empty_pos;\nvoid solve() {\n  long long int n;\n  cin >> n;\n  for (long long int i = (1); i <= (n); ++i) {\n    cin >> a[i];\n  }\n  long long int val = 0;\n  for (long long int i = (1); i <= (n); ++i) {\n    if (a[i] == val)\n      empty_pos.push_back(i);\n    else {\n      empty_pos.push_back(i);\n      long long int n_val = a[i] - 1, idx = i;\n      while (n_val > val) {\n        b[empty_pos.front()] = n_val--;\n        empty_pos.pop_front();\n      }\n      b[empty_pos.back()] = n_val--;\n      empty_pos.pop_back();\n      val = a[i];\n    }\n  }\n  while ((long long int)empty_pos.size()) {\n    b[empty_pos.front()] = n + 1;\n    empty_pos.pop_front();\n  }\n  for (long long int i = (1); i <= (n); ++i) cout << b[i] << \" \";\n}\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int t = 1;\n  for (long long int i = (1); i <= (t); ++i) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\n \npublic class A {\n\t\n\tStringTokenizer st;\n\tBufferedReader file;\n\tPrintWriter pout = new PrintWriter(System.out);\n\tlong MOD = 1000000007;\n\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tnew A().run();\n\t}\t\n\t\n\tpublic void run() throws Exception\n\t{\n\t\tfile = new BufferedReader(new InputStreamReader(System.in));\n\t\tint N = nextInt();\n\t\tint[] ints = readInts(N);\n\t\tboolean[] lastOcc = new boolean[N];\n\t\tboolean[] seen = new boolean[100001];\n\t\tfor(int i = N - 1;i>=0;i--)\n\t\t{\n\t\t\tif(i - ints[i] < -1)\n\t\t\t{\n\t\t\t\tSystem.out.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!seen[ints[i]])\n\t\t\t{\n\t\t\t\tlastOcc[i] = true;\n\t\t\t\tseen[ints[i]] = true;\n\t\t\t}\n\t\t}\n\t\tPriorityQueue<Integer> candidates = new PriorityQueue<Integer>();\n\t\tfor(int i = 0;i<seen.length;i++)\n\t\t{\n\t\t\tif(!seen[i])\n\t\t\t\tcandidates.add(i);\n\t\t}\n\t\tint[] ans = new int[N];\n\t\tfor(int i = 0;i<N;i++)\n\t\t{\n\t\t\tans[i] = candidates.poll();\n\t\t\tif(lastOcc[i])\n\t\t\t\tcandidates.add(ints[i]);\n\t\t}\n\t\tfor(int i = 0;i<ans.length;i++)\n\t\t{\n\t\t\tpout.print(ans[i]+\" \");\n\t\t}\n\t\tpout.println();\n\t\tpout.flush();\n\t}\n\t\n\tpublic int gcd(int a, int b)\n\t{\n\t\treturn BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();\n\t}\n\t\n\tpublic void newst()\n\t{\n\t\ttry {\n\t\t\tst = new StringTokenizer(file.readLine());\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\tpublic String readLine() throws IOException\n\t{\n\t\treturn file.readLine();\n\t}\n\t\n\tpublic String next()\n\t{\n\t\tif(st == null || !st.hasMoreTokens())\n\t\t\tnewst();\n\t\treturn st.nextToken();\n\t}\n\t\n\tpublic int nextInt()\n\t{\n\t\tif(st == null || !st.hasMoreTokens())\n\t\t\tnewst();\n\t\treturn Integer.parseInt(st.nextToken());\n\t}\n\t\n\tpublic long nextLong()\n\t{\n\t\tif(st == null || !st.hasMoreTokens())\n\t\t\tnewst();\n\t\treturn Long.parseLong(st.nextToken());\n\t}\n\t\n\tpublic int[] readInts(int N)\n\t{\n\t\tint[] ints = new int[N];\n\t\tfor(int i = 0;i<N;i++)\n\t\t{\n\t\t\tints[i] = nextInt();\n\t\t}\n\t\treturn ints;\n\t}\n\t\n\tpublic long[] readLongs(int N)\n\t{\t\n\t\tlong[] ints = new long[N];\n\t\tfor(int i = 0;i<N;i++)\n\t\t{\n\t\t\tints[i] = nextLong();\n\t\t}\n\t\treturn ints;\n\t}\n\t\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class qc{\n    public static void main(String args[]){\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int a[]=new int[n];\n        int prev=-1;\n        ArrayList<Integer> al=new ArrayList<Integer>();\n        for(int i=0;i<n;i++){\n            a[i]=sc.nextInt();\n            if(a[i]!=prev){\n                al.add(a[i]);\n                prev=a[i];\n            }\n        }\n        int curr=al.get(0);\n        StringBuilder sb=new StringBuilder();\n        TreeSet<Integer> ts=new TreeSet<>();\n        int min=0;\n        if(n==1){\n            if(a[0]>0){\n                System.out.println(0);\n            }\n            else{\n                System.out.println(1);\n            }\n            System.exit(0);\n        }\n        int max=-1;\n        int b[]=new int[n];\n        Arrays.fill(b, -1);\n        HashSet<Integer> hs=new HashSet<>();\n        boolean x[]=new boolean[1000000];\n        x[a[n-1]]=true;\n        for(int i=n-1;i>=0;i--){\n           // hs.add(a[i]);\n            if(i>0 ){\n                if(a[i]>a[i-1]){\n                    b[i]=a[i-1];\n                    x[a[i-1]]=true;\n                    //max=Math.min(b[i],max);  \n                }\n                \n            }\n           \n\n        }\n        max=0;\n        while(x[max])max++;\n        for(int i=0;i<n;i++){\n            if(b[i]==-1){\n                b[i]=max;\n                x[max]=true;\n                while(x[max])max++;\n            }\n        }\n        Arrays.fill(x,false);\n        int mex=0;\n        for(int i=0;i<n;i++){\n            x[b[i]]=true;\n            if(b[i]==mex){\n                while(x[mex])mex++;\n            }\n            \n            if(mex!=a[i]){\n               // System.out.println(mex+\" \"+a[i]);\n                System.out.println(-1);\n                System.exit(0);\n            }\n           \n            \n\n        }\n        \n        for(int i=0;i<n;i++){\n            sb.append(b[i]).append(\" \");\n        }\n        System.out.println(sb);\n            \n        \n    }\n}"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\nfrom collections import deque\ninput = sys.stdin.readline\n\n\nn = int(input())\na = list(map(int, input().split()))\nif a[0] > 1:\n    print(-1)\nelse:\n    q = deque()\n    for i in range(1, n):\n        z = a[i] - a[i-1]\n        if z > 1:\n            for j in range(1, z):\n                q.append(a[i-1] + j)\n    ans = []\n    k = 1\n    if a[0] == 1:\n        ans.append(0)\n    else:\n        if q:\n            ans.append(q.popleft())\n        else:\n            ans.append(100001)\n    for i in range(1, n):\n        if a[i] != a[i-1]:\n            ans.append(a[i-1])\n        else:\n            if q:\n                ans.append(q.popleft())\n            else:\n                ans.append(100001)\n    print(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  int b[n];\n  int c[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    c[i] = 0;\n    b[i] = -1;\n    if (i > 0 && a[i] != a[i - 1]) {\n      c[a[i - 1]] = 1;\n      b[i] = a[i - 1];\n    }\n  }\n  int r = 0;\n  c[a[n - 1]] = 1;\n  for (int i = 0; i < n; i++) {\n    while (c[r] == 1) {\n      r++;\n    }\n    if (b[i] == -1) {\n      b[i] = r;\n      c[r] = 1;\n    }\n    cout << b[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class A {\n    public static void main(String[] args) throws Exception {\n        // TODO Auto-generated method stub\n        InputReader s = new InputReader(System.in);\n        PrintWriter p = new PrintWriter(System.out);\n        int n = s.nextInt();\n        int[] arr = new int[n];\n        HashMap<Integer, Integer> map = new HashMap<>();\n        for(int i = 0; i < n; i++) {\n            arr[i] = s.nextInt();\n            map.put(arr[i], i+1);\n        }\n        int[] ans = new int[n];\n        for(int i = 0; i < ans.length; i++)\n            ans[i] = -1;\n        Set<Integer> vals = map.keySet();\n        for(int val : vals){\n            int index= map.get(val);\n            if(index < ans.length)\n                ans[index] =val;\n        }\n        int element = 0;\n        int flag = 0;\n        for(int i = 0; i < ans.length; i++){\n            while(map.containsKey(element))\n                element++;\n            if(ans[i] == -1) {\n                ans[i] = element;\n                element++;\n            }\n\n            if(ans[i]!=-1){\n                int val = ans[i];\n                if(element < val && i < ans.length-1)\n                    flag = 1;\n            }\n        }\n        if(flag==1)\n            p.println(-1);\n        for(int i = 0; i< n; i++)\n            p.print(ans[i]+\" \");\n        p.flush();\n        p.close();\n    }\n    public static int gcd(int a, int b){\n        if(b%a==0)\n            return a;\n        return gcd(b%a, a);\n    }\n    public static long power(int n, int x) {\n        if (x == 0)\n            return 1;\n        if (x == 1)\n            return n;\n        long val = power(n, x / 2);\n        if (x % 2 == 1)\n            return val * val * n;\n        else\n            return val * val;\n    }\n\n    public static boolean prime(long n) {\n        if (n == 1) {\n            return false;\n        }\n        if (n == 2) {\n            return true;\n        }\n        for (long i = 2; i <= (long) Math.sqrt(n); i++) {\n            if (n % i == 0)\n                return false;\n        }\n        return true;\n    }\n\n    public static ArrayList Divisors(long n) {\n        ArrayList<Long> div = new ArrayList<>();\n\n        for (long i = 1; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                div.add(i);\n\n                if (n / i != i)\n                    div.add(n / i);\n            }\n        }\n        return div;\n    }\n\n    public static int BinarySearch(long[] a, long k) {\n        int n = a.length;\n        int i = 0, j = n - 1;\n        int mid = 0;\n\n        if (k < a[0])\n            return 0;\n        else if (k >= a[n - 1])\n            return n;\n        else {\n            while (j - i > 1) {\n                mid = (i + j) / 2;\n\n                if (k >= a[mid])\n                    i = mid;\n                else\n                    j = mid;\n            }\n        }\n\n        return i + 1;\n    }\n\n    public static long GCD(long a, long b) {\n        if (b == 0)\n            return a;\n        else\n            return GCD(b, a % b);\n    }\n\n    public static long LCM(long a, long b) {\n        return (a * b) / GCD(a, b);\n    }\n\n    static class pair implements Comparable<pair> {\n        Integer x, y;\n\n        pair(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n\n        public int compareTo(pair o) {\n            int result = x.compareTo(o.x);\n            if (result == 0)\n                result = y.compareTo(o.y);\n\n            return result;\n        }\n\n        public String toString() {\n            return x + \" \" + y;\n        }\n\n        public boolean equals(Object o) {\n            if (o instanceof pair) {\n                pair p = (pair) o;\n                return p.x - x == 0 && p.y - y == 0;\n            }\n            return false;\n        }\n\n        public int hashCode() {\n            return new Long(x).hashCode() * 31 + new Long(y).hashCode();\n        }\n    }\n\n    static class InputReader {\n\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int snext() {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) {\n                curChar = 0;\n                try {\n                    snumChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = snext();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = snext();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int[] nextIntArray(int n) {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        public String readString() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public String nextLine() {\n            int c = snext();\n            while (isSpaceChar(c))\n                c = snext();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    static class CodeX {\n        public static void sort(long arr[]) {\n            merge_sort(arr, 0, arr.length - 1);\n        }\n\n        private static void merge_sort(long A[], long start, long end) {\n            if (start < end) {\n                long mid = (start + end) / 2;\n                merge_sort(A, start, mid);\n                merge_sort(A, mid + 1, end);\n                merge(A, start, mid, end);\n            }\n\n        }\n\n        private static void merge(long A[], long start, long mid, long end) {\n            long p = start, q = mid + 1;\n            long Arr[] = new long[(int) (end - start + 1)];\n            long k = 0;\n\n            for (int i = (int) start; i <= end; i++) {\n                if (p > mid)\n                    Arr[(int) k++] = A[(int) q++];\n\n                else if (q > end)\n                    Arr[(int) k++] = A[(int) p++];\n\n                else if (A[(int) p] < A[(int) q])\n                    Arr[(int) k++] = A[(int) p++];\n\n                else\n                    Arr[(int) k++] = A[(int) q++];\n            }\n            for (int i = 0; i < k; i++) {\n                A[(int) start++] = Arr[i];\n            }\n\n        }\n\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedHashMap;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\n\npublic class hello2\n {static class FastReader \n       { \n           BufferedReader br; \n           StringTokenizer st; \n     \n           public FastReader() \n           { \n               br = new BufferedReader(new\n                        InputStreamReader(System.in)); \n           } \n     \n           String next() \n           { \n               while (st == null || !st.hasMoreElements()) \n               { \n                   try\n                   { \n                       st = new StringTokenizer(br.readLine()); \n                   } \n                   catch (IOException  e) \n                   { \n                       e.printStackTrace(); \n                   } \n               } \n               return st.nextToken(); \n           } \n     \n           int nextInt() \n           { \n               return Integer.parseInt(next()); \n           } \n     \n           long nextLong() \n           { \n               return Long.parseLong(next()); \n           } \n     \n           double nextDouble() \n           { \n               return Double.parseDouble(next()); \n           } \n     \n           String nextLine() \n           { \n               String str = \"\"; \n               try\n               { \n                   str = br.readLine(); \n               } \n               catch (IOException e) \n               { \n                   e.printStackTrace(); \n               } \n               return str; \n           } \n         \n       }\n    \n    static String sum (String s)\n    {\n        String s1 = \"\"; \n        \n        if(s.contains(\"a\"))\n            s1+=\"a\";\n        if(s.contains(\"e\"))\n            s1+=\"e\";\n        if(s.contains(\"i\"))\n            s1+=\"i\";\n        if(s.contains(\"o\"))\n            s1+=\"o\";\n        if(s.contains(\"u\"))\n            s1+=\"u\";\n        \n            return s1;\n            \n        \n    }\n    \n\n    public static HashMap<String, Integer> sortByValue(HashMap<String, Integer> hm) \n    { \n        // Create a list from elements of HashMap \n        List<Map.Entry<String, Integer> > list = \n               new LinkedList<Map.Entry<String, Integer> >(hm.entrySet()); \n  \n        // Sort the list \n        Collections.sort(list, new Comparator<Map.Entry<String, Integer> >() { \n            public int compare(Map.Entry<String, Integer> o1,  \n                               Map.Entry<String, Integer> o2) \n            { \n                return (o1.getValue()).compareTo(o2.getValue()); \n            } \n        }); \n          \n        // put data from sorted list to hashmap  \n        HashMap<String, Integer> temp = new LinkedHashMap<String, Integer>(); \n        for (Map.Entry<String, Integer> aa : list) { \n            temp.put(aa.getKey(), aa.getValue()); \n        } \n        return temp; \n    } \n    \n    \npublic static void main(String args[])\n    {\n        FastReader input =new FastReader();\n      \n        \n        \n       \n        \tint n = input.nextInt();\n            \n        \tboolean[] vis = new boolean[n + 1];\n            \n        \tint[] a = new int[n + 1];\n            \n        \tfor (int i = 1; i <= n; i++) \n        \t\tvis[a[i] = input.nextInt()] = true;\n            \n        \t\n        \tArrayList<Integer> not = new ArrayList<>();\n            \n        \tfor (int i = 1; i <= n; i++) {\n                if (!vis[i]) not.add(i);\n            }\n            \n        \tint ptr = 0;\n            \n        \tfor (int i = 1; i <= n; i++) {\n                if (a[i] == a[i - 1]) System.out.print(not.get(ptr++) + \" \");\n                else System.out.print(a[i - 1] + \" \");\n            }\n        \t\t\n        \t\t\n        }\n        \t  \n\npublic static boolean range(int x,int y,int n,int m)\n{\n\tif(x<0 || x>n-1 || y<0 || y>m-1)\n\t\treturn false;\n\t\n\t\n\treturn true;\n}\n   \npublic static int even_element(int b[],int n)\n{\n\tint c[] = new int[n/2 + 1];\n\tint l=0;\n\tfor(int i=1;i<n;i+=2)\n\t{\n\t\tc[l] = b[i];\n\t\t\n\t\tSystem.out.print(c[l] + \" \");\n\t\tl++;\n\t}\n\tSystem.out.println();\n\tif(c.length!=1)\n\t{\n\t\treturn even_element(c,n/2);\n\t}\n\telse\n\t\treturn c[0];\n}\n\n      \n       \t\n        \t\n        \t\n \n    \n    static boolean isPrime(int n) \n    { \n        // Corner case \n        if (n <= 1) \n            return false; \n  \n        // Check from 2 to n-1 \n        for (int i = 2; i < n; i++) \n            if (n % i == 0) \n                return false; \n  \n        return true; \n    } \n }\n \n \n class Pair\n {\n     int a;\n     int b;\n     Pair(int a,int b)\n     {\n         this.a=a;\n         this.b=b;\n     }\n }\n "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  multiset<int> mtset;\n  for (auto& k : v) {\n    cin >> k;\n    mtset.insert(k);\n  }\n  priority_queue<int, vector<int>, greater<int>> min_heap;\n  for (int i = 0; i <= n; i++) {\n    if (mtset.find(i) == mtset.end()) {\n      min_heap.push(i);\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    mtset.erase(mtset.find(v[i]));\n    cout << min_heap.top() << \" \";\n    min_heap.pop();\n    if (mtset.count(v[i]) == 0) min_heap.push(v[i]);\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\npublic class c649 implements Runnable{\n\t\n    public static void main(String[] args) {\n    \ttry{\n            new Thread(null, new c649(), \"process\", 1<<26).start();\n        }\n        catch(Exception e){\n            System.out.println(e);\n        }\n    }\n\tpublic void run() {\n\t\tFastReader scan = new FastReader();\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\t\t//PrintWriter out = new PrintWriter(\"file.out\");\n\t\tTask solver = new Task();\n\t\t//int t = scan.nextInt();\n\t\tint t = 1;\n\t\tfor(int i = 1; i <= t; i++) solver.solve(i, scan, out);\n\t\tout.close();\n\t}\n\n\tstatic class Task {\n\t\tstatic final int inf = Integer.MAX_VALUE;\n\n\t\tpublic void solve(int testNumber, FastReader sc, PrintWriter out) {\n\t\t\tint N = sc.nextInt();\n\t\t\tint[] arr = new int[N];\n\t\t\tint[] ans = new int[N];\n\t\t\t\n\t\t\tint max = 0;\n\t\t\tSet<Integer> avoid = new HashSet<>();\n\t\t\tfor(int i = 0; i < N; i++) {\n\t\t\t\tarr[i] = sc.nextInt();\n\t\t\t\tmax = Math.max(max, arr[i]);\n\t\t\t\tavoid.add(arr[i]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.fill(ans, 1000000);\n\t\t\tTreeSet<Integer> required = new TreeSet<>();\n\t\t\tfor(int i = 0; i < max; i++) {\n\t\t\t\trequired.add(i);\n\t\t\t}\n\t\t\tfor(int i = 0; i < N; i++) {\n\t\t\t\tif(i != 0 && arr[i-1] < arr[i])\n\t\t\t\t\tans[i] = arr[i-1];\n\t\t\t\trequired.remove(ans[i]);\n\t\t\t}\n\t\t\trequired.add(1000000);\n\t\t\t\n\t\t\t//System.out.println(required);\n\t\t\tfor(int i = 0; i < N; i++) {\n\t\t\t\tif(ans[i] != 1000000)\n\t\t\t\t\tcontinue;\n\t\t\t\tint pos = required.first();\n\t\t\t\twhile(avoid.contains(pos)) {\n\t\t\t\t\tpos = required.higher(pos);\n\t\t\t\t}\n\t\t\t\tans[i] = pos;\n\t\t\t\tif(pos != 1000000)\n\t\t\t\t\trequired.remove(pos);\n\t\t\t\tavoid.remove(arr[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfor(int each: ans) {\n\t\t\t\tout.print(each + \" \");\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t}\n\tstatic long binpow(long a, long b, long m) {\n\t\ta %= m;\n\t\tlong res = 1;\n\t\twhile (b > 0) {\n\t\t\tif ((b & 1) == 1)\n\t\t\t\tres = res * a % m;\n\t\t\ta = a * a % m;\n\t\t\tb >>= 1;\n\t\t}\n\t\treturn res;\n\t}\n\tstatic void sort(int[] x){\n\t\tshuffle(x);\n\t\tArrays.sort(x);\n\t}\n\tstatic void sort(long[] x){\n\t\tshuffle(x);\n\t\tArrays.sort(x);\n\t}\n\tstatic class tup implements Comparable<tup>, Comparator<tup>{\n\t\tint a, b;\n\t\ttup(int a,int b){\n\t\t\tthis.a=a;\n\t\t\tthis.b=b;\n\t\t}\n\t\tpublic tup() {\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(tup o){\n\t\t\treturn Integer.compare(b,o.b);\n\t\t}\n\t\t@Override\n\t\tpublic int compare(tup o1, tup o2) {\n\t\t\treturn Integer.compare(o1.b, o2.b);\n\t\t}\n\t\t\n\t\t@Override\n\t    public int hashCode() {\n\t\t\treturn Objects.hash(a, b);\n\t    }\n \n\t    @Override\n\t    public boolean equals(Object obj) {\n\t    \tif (this == obj)\n                return true;\n\t    \tif (obj == null)\n                return false;\n\t    \tif (getClass() != obj.getClass())\n                return false;\n\t    \ttup other = (tup) obj;\n\t    \treturn a==other.a && b==other.b;\n\t    }\n\t    \n\t    @Override\n\t    public String toString() {\n\t    \treturn a + \" \" + b;\n\t    }\n\t}\n\t\n\tstatic void shuffle(int[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tint temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\n\tstatic void shuffle(long[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tlong temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastReader(String s) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(new File(s)));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n}"
        },
        {
            "language": 1,
            "solution": "def g(a):\n last=-1\n for ai in a:\n  for j in xrange(last+1,ai): yield j\n  last=ai\n while True: last+=1; yield last\n\ndef f(n,a):\n for i in xrange(n):\n  if a[i]>i+1: return False\n a.insert(0,0)\n t=g(a); out=[]\n for i in xrange(1,len(a)):\n  if a[i]==a[i-1]: out.append(t.next())\n  else: out.append(a[i-1])\n return out\n\nn=int(raw_input())\na=map(int,raw_input().split())\nu=f(n,a)\nprint (' '.join(map(str,u)) if u else -1)\n"
        },
        {
            "language": 3,
            "solution": "i_liczb = int(input())\na = [int(x) for x in input().split()]\na = [0] + a \nif a[i_liczb] > i_liczb:\n    print(-1)\n    quit()\nb = [-1 for _ in range(i_liczb + 1)]\nwykorzystane = [False for _ in range(100005)]\nfor i in range(1, i_liczb + 1):\n    if a[i] !=a [i - 1]:\n        b[i] = a[i - 1]\n        wykorzystane[b[i]] = True\nwykorzystane[a[i_liczb]] = True\nx = 0\nfor i in range(1, i_liczb + 1):\n    while wykorzystane[x]:\n        x += 1\n    if b[i] == -1:\n        b[i] = x\n        wykorzystane[x] = True\nprint(*b[1:])\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict, deque, Counter\nfrom sys import stdin, stdout\nfrom heapq import heappush, heappop\nimport math\nimport io\nimport os\nimport math\nimport bisect\n\n#?############################################################\n\n\ndef isPrime(x):\n    for i in range(2, x):\n        if i*i > x:\n            break\n        if (x % i == 0):\n            return False\n    return True\n\n#?############################################################\n\n\ndef ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = (num * (n - i)) % p\n        den = (den * (i + 1)) % p\n    return (num * pow(den, p - 2, p)) % p\n\n\n#?############################################################\n\ndef primeFactors(n):\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n))+1, 2):\n        while n % i == 0:\n            l.append(int(i))\n            n = n / i\n    if n > 2:\n        l.append(n)\n    return list(set(l))\n\n\n#?############################################################\n\ndef power(x, y, p):\n    res = 1\n    x = x % p\n    if (x == 0):\n        return 0\n    while (y > 0):\n        if ((y & 1) == 1):\n            res = (res * x) % p\n        y = y >> 1\n        x = (x * x) % p\n    return res\n\n#?############################################################\n\n\ndef sieve(n):\n    prime = [True for i in range(n+1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n\n#?############################################################\n\ndef digits(n):\n    c = 0\n    while (n > 0):\n        n //= 10\n        c += 1\n    return c\n\n#?############################################################\n\n\ndef ceil(n, x):\n    if (n % x == 0):\n        return n//x\n    return n//x+1\n\n#?############################################################\n\n\ndef mapin():\n    return map(str, input().split())\n\n#?############################################################\n\n\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n# python3 15.py<in>op\nt = 1\n\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [-1]*n\n    d = [0]*100009\n    if(a[0]!= 0):\n        b[0] = 0\n        d[0] = 1\n    for i in range(1, n):\n        if(a[i]!= a[i-1]):\n            b[i]= a[i-1]\n            d[a[i-1]] = 1\n\n    d[a[-1]] = 1\n\n    c = 0\n    for i in range(n):\n        while(d[c] == 1):\n            c+=1\n        if(b[i] == -1):\n            b[i] = c\n            d[c] = 1\n\n        \n\n    print(*b)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nb = [-1] * n\nmarked = [False] * (2*n+1)\n\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        b[i] = a[i-1]\n        marked[b[i]] = True\n\nmarked[a[n-1]] = True\nm = 0\nfor i in range(n):\n    while marked[m]:\n        m += 1\n    if b[i] == -1:\n        b[i] = m\n        marked[b[i]] = True\n    print(b[i], end=' ')\n"
        },
        {
            "language": 3,
            "solution": "import queue \nimport math\n\n\nn = int(input())\na = list(map(int,input().split()))\n\nb = [-1 for i in range(n)]\n\nprev = 0\n\nfor i in range(n):\n\tif (a[i] != prev):\n\t\tb[i] = prev\t\n\tprev = a[i]\n\ns = set([i for i in range(a[-1])])\nfor x in b:\n\ts.discard(x)\n\ns = list(s)\ns.append(n+1)\nidx = 0\n\nfor i in range(n):\n\tif (b[i] == -1):\n\t\tif (idx < len(s)):\n\t\t\tb[i] = s[idx]\n\t\t\tidx += 1\n\t\telse:\n\t\t\tb[i] = s[-1]\n\nfor x in b:\n\tprint(x,end=' ')\nprint()\n\n\n\t\t\n\n\n\n\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nclass Solution {\n public:\n  vector<int> solve(vector<int>& A) {\n    int n = A.size();\n    vector<int> res(n, -1);\n    deque<int> frees;\n    int last = 0;\n    for (int i = 0; i < n; ++i) {\n      int cur = A[i];\n      if (cur != last) {\n        res[i] = last;\n      } else {\n        frees.push_back(i);\n      }\n      for (int j = last + 1; j < cur; ++j) {\n        if (frees.empty()) {\n          return {};\n        }\n        int p = frees.front();\n        res[p] = j;\n        frees.pop_front();\n      }\n      last = cur;\n    }\n    for (int i = 0; i < n; ++i) {\n      if (res[i] == -1) {\n        res[i] = ++last;\n      }\n    }\n    return res;\n  }\n};\nint main(int argc, char** argv) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  Solution sol;\n  int n;\n  cin >> n;\n  vector<int> A(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> A[i];\n  }\n  auto res = sol.solve(A);\n  if (res.size() == n) {\n    for (int i = 0; i < n; ++i) {\n      cout << res[i] << (i == n - 1 ? '\\n' : ' ');\n    }\n  } else {\n    cout << -1 << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split(' ')]\t\nb = [0] * n\ncount = 0\nidxs = []\nif a[0] == 0:\n\tidxs.append(0)\nelse:\n\tb[0] = 0\nok = True\nfor i in range(1, n):\n\tif a[i] == a[i - 1]:\n\t\tidxs.append(i)\n\telse:\n\t\tb[i] = a[i - 1]\n\t\tk = 1\n\t\twhile k < a[i] - a[i - 1]:\n\t\t\tif len(idxs) == 0:\n\t\t\t\tok = False\t\t\t\n\t\t\t\tprint(-1)\n\t\t\t\tbreak\n\t\t\tb[idxs.pop()] = a[i - 1] + k \n\t\t\tk += 1\n\t\tif not ok:\n\t\t\tbreak\n\nmax_v = a[-1] * 2 if a[-1] != 0 else 1\nwhile len(idxs):\n\tb[idxs.pop()] = max_v\ns = ''\nfor i in b:\n\ts += f'{i} '\nprint(s)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as dd\nimport math\nimport sys\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn map(int, input().split())\n\ndef lm():\n\treturn list(map(int, input().split()))\n\nn = nn()\n\nnums = lm()\nb = [10**6]*n\ncur_min = 0\ncur_place = 0\nlast = 0\nbad= False\nfor i in range(len(nums)):\n\t#print(b)\n\t#print(cur_place)\n\tif nums[i]==last:\n\t\tcontinue\n\telse:\n\t\tb[i]=last\n\t\tcur_min+=1\n\twhile cur_min<nums[i] and cur_place<i:\n\t\tif b[cur_place]==10**6:\n\t\t\t#print(cur_place)\n\t\t\tb[cur_place]=cur_min\n\t\t\tcur_min+=1\n\t\t\tcur_place+=1\n\t\telse:\n\t\t\tcur_place+=1\n\t#print(cur_min)\n\tif not cur_min==nums[i]:\n\t\tbad = True\n\t\tbreak\n\telse:\n\t\tlast = nums[i]\n\nif bad:\n\tprint(-1)\nelse:\n\tprint(*b)\n"
        },
        {
            "language": 4,
            "solution": "\n// Problem: C. Ehab and Prefix MEXs\n// Contest: Codeforces - Codeforces Round #649 (Div. 2)\n// URL: https://codeforces.com/contest/1364/problem/C\n// Memory Limit: 256 MB\n// Time Limit: 1000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    private static PrintWriter pw = new PrintWriter(System.out);\n    private static InputReader sc = new InputReader();\n    private static final int intmax = Integer.MAX_VALUE, intmin = Integer.MIN_VALUE;\n\n    static class Pair<T1, T2>{\n        T1 first;\n        T2 second;\n        Pair(T1 first, T2 second){\n            this.first = first;\n            this.second = second;\n        }\n    }\n\n    static class InputReader{\n        private static BufferedReader r = new BufferedReader(new InputStreamReader(System.in));\n        private static StringTokenizer tk;\n\n        private void next()throws IOException{\n            if(tk == null || !tk.hasMoreTokens())   \n                tk = new StringTokenizer(r.readLine());\n        }\n\n        private int nextInt()throws IOException{\n            next();\n            return Integer.parseInt(tk.nextToken());\n        }\n\n        private long nextLong()throws IOException{\n            next();\n            return Long.parseLong(tk.nextToken());\n        }\n\n        private String readString()throws IOException{\n            next();\n            return tk.nextToken();\n        }\n\n        private double nextDouble()throws IOException{\n            next();\n            return Double.parseDouble(tk.nextToken());\n        }\n\n        private int[] intArray(int n)throws IOException{\n            next();\n            int arr[] = new int[n];\n\n            for(int i=0; i<n; i++)\n                arr[i] = nextInt();\n\n            return arr;\n        }\n\n        private long[] longArray(int n)throws IOException{\n            next();\n            long arr[] = new long[n];\n\n            for(int i=0; i<n; i++)\n                arr[i] = nextLong();\n\n            return arr;\n        }\n    }\n\n    public static void main(String args[])throws IOException{\n        int t = 1;\n        while(t-->0)    solve();\n        pw.flush();\n        pw.close();\n    }\n\n    private static void solve()throws IOException{\n\t\tint n = sc.nextInt(), mex[] = sc.intArray(n), arr[] = new int[n];\n\t\tboolean na[] = new boolean[n+1];\n\t\t\n\t\tfor(int i=0; i<n; i++)\tarr[i] = -1;\n\t\t\n\t\tfor(int i=1; i<n; i++){\n\t\t\tif(mex[i] != mex[i-1]){\n\t\t\t\tarr[i] = mex[i-1];\n\t\t\t\tna[mex[i-1]] = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tna[mex[n-1]] = true;\n\t\t\n\t\tif(mex[0] == 1){\n\t\t\tarr[0] = 0;\n\t\t\tna[0] = true;\n\t\t}\n\t\t\n\t\tint no = 0;\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(arr[i] == -1){\n\t\t\t\twhile(na[no]){\n\t\t\t\t\tno++;\n\t\t\t\t}\n\t\t\t\tarr[i] = no;\n\t\t\t\tna[no] = true;\n\t\t\t\t// pw.println(Arrays.toString(arr)+\" \"+no);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// pw.println(Arrays.toString(arr));\n\t\t\n\t\tboolean w[] = new boolean[n+1]; \n\t\tint curr = 0;\n\t\t\n\t\tfor(int i=0; i<n; i++){\n\t\t\tw[arr[i]] = true;\n\t\t\t\n\t\t\twhile(curr<=n && w[curr])\tcurr++;\n\t\t\t\n\t\t\tif(mex[i] != curr){\n\t\t\t\tpw.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=0; i<n; i++)\n\t\t\tpw.print(+arr[i]+\" \");\n\t\tpw.println();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct type {\n  long long k, i, j;\n};\nbool isPrime(long long n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (long long i = 5; i * i <= n; i = i + 6)\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  return true;\n}\nlong long findSubarray(long long arr[], long long n, long long k) {\n  long long window_sum = 0;\n  long long min_window = INT_MAX;\n  long long last = 0;\n  for (long long i = 0; i < n; i++) {\n    window_sum += arr[i];\n    if (i + 1 >= k) {\n      if (min_window > window_sum) {\n        min_window = window_sum;\n        last = i;\n      }\n      window_sum -= arr[i + 1 - k];\n    }\n  }\n  long long sum = 0;\n  for (long long i = last - k + 1; i <= last; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long n;\n  cin >> n;\n  vector<long long> a(n), b;\n  for (long long i = 0; i < n; i++) cin >> a[i];\n  set<long long> s;\n  for (long long i = 0; i < n; i++) s.insert(a[i]);\n  vector<long long> c;\n  for (long long i = 0; i <= n; i++) {\n    if (s.find(i) == s.end()) {\n      c.push_back(i);\n    }\n  }\n  b.push_back(c[0]);\n  long long x = 1;\n  for (long long i = 1; i < n; i++) {\n    if (a[i] == a[i - 1]) {\n      b.push_back(c[x]);\n      x++;\n    } else {\n      b.push_back(a[i - 1]);\n    }\n  }\n  for (auto x : b) cout << x << \" \";\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  int prev = -1;\n  bool invalid = false;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    invalid = (prev > a[i]) || (a[i] > i + 1);\n    prev = a[i];\n  }\n  if (invalid) {\n    cout << -1 << endl;\n    return;\n  }\n  int mex = a.back();\n  vector<int> ans(n);\n  bool first = true;\n  for (int i = 0, cnt = 0; i < n; i++) {\n    if (first && i == mex) {\n      first = false;\n      cnt++;\n    }\n    ans[i] = cnt++;\n  }\n  for (int i = n - 1; ~i; i--) {\n    if (ans[a[i]] == a[i]) {\n      swap(ans[a[i]], ans[i + 1]);\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cout << ans[i] << \" \\n\"[i + 1 == n];\n  }\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int a[100005], b[100005];\nbool f[100005];\nint main() {\n  long long int n, i;\n  cin >> n;\n  memset(b, -1, sizeof(b));\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  for (i = 1; i <= n; i++) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      f[b[i]] = 1;\n    }\n  }\n  f[a[n]] = 1;\n  long long int pos = 0;\n  for (i = 1; i <= n; i++) {\n    while (f[pos]) pos++;\n    if (b[i] == -1) {\n      b[i] = pos;\n      f[pos] = 1;\n    }\n    cout << b[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Q1 {\n\tprivate void solve(Scan scan, Print print) throws Exception {\n\t\tint N = scan.nextInt();\n\t\tint arr[] = new int[N];\n\t\tscan.next(arr);\n\t\tSet<Integer> set = new HashSet<Integer>();\n\t\tfor(int i:arr)\n\t\t{\n\t\t\tset.add(i);\n\t\t}\n\t\tint val=0;\n\t\tint b[]=new int[N];\n\t\tfor(int i=0;i<N;i++)\n\t\t{\n\t\t\tif(i!=0 && arr[i-1]<arr[i])\n\t\t\t{\n\t\t\t\tb[i]=arr[i-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile(set.contains(val))\n\t\t\t\t{\n\t\t\t\t\tval++;\n\t\t\t\t}\n\t\t\t\tb[i]=val;\n\t\t\t\tval++;\n\t\t\t}\n\t\t}\n\t\tfor(int i:b)\n\t\t{\n\t\t\tprint.print(i+\" \");\n\t\t}\n\t\tprint.print(\"\\n\");\n\t}\n\n\tpublic static void main(String args[]) throws Exception {\n\t\tScan scan = new Scan();\n\t\tPrint print = new Print();\n\t\tQ1 o = new Q1();\n\t\to.solve(scan, print);\n\t\tprint.close();\n\t}\n\n\tpublic static class Print {\n\t\tprivate final BufferedWriter bw;\n\n\t\tpublic Print() {\n\t\t\tthis.bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\t\t}\n\n\t\tpublic void print(Object object) throws IOException {\n\t\t\tbw.append(\"\" + object);\n\t\t}\n\n\t\tpublic void println(Object object) throws IOException {\n\t\t\tprint(object);\n\t\t\tbw.append(\"\\n\");\n\t\t}\n\n\t\tpublic void println(int object[]) throws IOException {\n\t\t\tprint(Arrays.toString(object));\n\t\t\tbw.append(\"\\n\");\n\t\t}\n\n\t\tpublic void print(int object[]) throws IOException {\n\t\t\tprint(Arrays.toString(object));\n\t\t}\n\n\t\tpublic void println(long object[]) throws IOException {\n\t\t\tprint(Arrays.toString(object));\n\t\t\tbw.append(\"\\n\");\n\t\t}\n\n\t\tpublic void print(long object[]) throws IOException {\n\t\t\tprint(Arrays.toString(object));\n\t\t}\n\n\t\tpublic void println(boolean object[]) throws IOException {\n\t\t\tprint(Arrays.toString(object));\n\t\t\tbw.append(\"\\n\");\n\t\t}\n\n\t\tpublic void print(boolean object[]) throws IOException {\n\t\t\tprint(Arrays.toString(object));\n\t\t}\n\n\t\tpublic void println(Object object[]) throws IOException {\n\t\t\tprint(Arrays.deepToString(object));\n\t\t\tbw.append(\"\\n\");\n\t\t}\n\n\t\tpublic void print(Object object[]) throws IOException {\n\t\t\tprint(Arrays.deepToString(object));\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tbw.close();\n\t\t}\n\t}\n\n\tstatic class Scan {\n\t\tprivate byte[] buf = new byte[1024 * 1024 * 4];\n\t\tprivate int index;\n\t\tprivate InputStream in;\n\t\tprivate int total;\n\n\t\tpublic Scan() {\n\t\t\tin = System.in;\n\t\t}\n\n\t\tpublic int scan() throws IOException {\n\t\t\tif (total < 0)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (index >= total) {\n\t\t\t\tindex = 0;\n\t\t\t\ttotal = in.read(buf);\n\t\t\t\tif (total <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[index++];\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint integer = 0;\n\t\t\tint n = scan();\n\t\t\twhile (isWhiteSpace(n))\n\t\t\t\tn = scan();\n\t\t\tint neg = 1;\n\t\t\tif (n == '-') {\n\t\t\t\tneg = -1;\n\t\t\t\tn = scan();\n\t\t\t}\n\t\t\twhile (!isWhiteSpace(n)) {\n\t\t\t\tif (n >= '0' && n <= '9') {\n\t\t\t\t\tinteger *= 10;\n\t\t\t\t\tinteger += n - '0';\n\t\t\t\t\tn = scan();\n\t\t\t\t} else\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\treturn neg * integer;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble doub = 0;\n\t\t\tint n = scan();\n\t\t\twhile (isWhiteSpace(n))\n\t\t\t\tn = scan();\n\t\t\tint neg = 1;\n\t\t\tif (n == '-') {\n\t\t\t\tneg = -1;\n\t\t\t\tn = scan();\n\t\t\t}\n\t\t\twhile (!isWhiteSpace(n) && n != '.') {\n\t\t\t\tif (n >= '0' && n <= '9') {\n\t\t\t\t\tdoub *= 10;\n\t\t\t\t\tdoub += n - '0';\n\t\t\t\t\tn = scan();\n\t\t\t\t} else\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (n == '.') {\n\t\t\t\tn = scan();\n\t\t\t\tdouble temp = 1;\n\t\t\t\twhile (!isWhiteSpace(n)) {\n\t\t\t\t\tif (n >= '0' && n <= '9') {\n\t\t\t\t\t\ttemp /= 10;\n\t\t\t\t\t\tdoub += (n - '0') * temp;\n\t\t\t\t\t\tn = scan();\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn doub * neg;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tlong c = scan();\n\t\t\twhile (c <= ' ') {\n\t\t\t\tc = scan();\n\t\t\t}\n\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = scan();\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = scan()) >= '0' && c <= '9');\n\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint n = scan();\n\t\t\twhile (isWhiteSpace(n))\n\t\t\t\tn = scan();\n\t\t\twhile (!isWhiteSpace(n) || n == ' ') {\n\t\t\t\tsb.append((char) n);\n\t\t\t\tn = scan();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic void next(int arr[]) throws IOException {\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t}\n\n\t\tpublic void next(long arr[]) throws IOException {\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\t\t}\n\n\t\tpublic char[] next(char c) throws IOException {\n\t\t\tchar arr[] = next().toCharArray();\n\t\t\treturn arr;\n\t\t}\n\n\t\tprivate boolean isWhiteSpace(int n) {\n\t\t\tif (n == ' ' || n == '\\n' || n == '\\r' || n == '\\t' || n == -1)\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nN = int(input())\nList = [int(x) for x in input().split()]\nfor i in range(N):\n    if(List[i]>i+1):\n        print(-1)\n        exit()\nNahi = list(set(list(range(N+1))).difference(set(List)))\nNahi.sort()\nAns = [Nahi[0]]\nAdded = deque()\nAdded.append(List[0])\nindex = 1\nfor i in range(1,N):\n    if(List[i]==List[i-1]):\n        if(Added[-1]!=List[i]):\n            Added.append(List[i])\n        Ans.append(Nahi[index])\n        index+=1\n    else:\n        Ans.append(Added[0])\n        Added.popleft()\n        Added.append(List[i])\nprint(*Ans)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nfrom collections import Counter,defaultdict\nif l[0]>1:\n    print(-1)\nelse:\n    ans=True\n    l2=[]\n    i=0\n    d=defaultdict(int)\n    l1=[0]*n\n    l3=[]\n    l4=[]\n    x=0\n    y=0\n    for i in range(n):\n        if l[i]>i+1:\n            ans=False\n        if d[l[i]]==0:\n            if i==0 and l[i]==0:\n                l3.append(0)\n            elif i==0 and l[i]==1:\n                l1[i]=0\n            else:\n                l1[i]=l[i-1]\n            l2.append(l[i])\n            d[l[i]]+=1\n        else:\n            l3.append(i)\n    for i in range(1,n+2):\n        if d[i]==0:\n            l4.append(i)\n    j=0\n    for i in l3:\n        if j!=len(l4):\n            l1[i]=l4[j]\n            j+=1\n        else:\n            l1[i]=l4[-1]\n        \n    if ans==True:\n        print(*l1)\n    else:\n        print(-1)\n        \n                \n     \n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout  \n\nn=int(stdin.readline() )\n#n,x=(map(int, stdin.readline().strip().split()))\narr=list(map(int, stdin.readline() .strip().split()))\n#s=stdin.readline()\n\n#stdout.write(str(cp))\n#stdout.write(\"\\n\")\n\nif(sorted(arr)!=arr):\n    print(-1)\nelse:\n    flg=0\n    for i in range(n):\n        if(arr[i]-i>1):\n            flg=1\n            break\n    if(flg):\n        print(-1)\n    else:\n        raj=dict()\n        for i in range(n):\n            raj[arr[i]]=1\n        x=-1\n        ans=[]\n\n        for i in range(n):\n            if(i==0):\n                 x=x+1\n                 while(x in raj):\n                     x+=1\n                 ans.append(x)\n            else:\n                if(arr[i-1]!=arr[i]):\n                    ans.append(arr[i-1])\n                else:\n                    x=x+1\n                    while(x in raj):\n                        x+=1\n                    ans.append(x)\n        print(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid fastio() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n}\nint main() {\n  fastio();\n  long long int T = 1;\n  for (long long int test = 1; test <= T; test++) {\n    long long int x, n, m, k, ans, cnt, sum;\n    ans = 0;\n    cnt = 0;\n    sum = 0;\n    cin >> n;\n    k = 0;\n    x = 0;\n    long long int a[n + 1], b[n + 1];\n    map<long long int, long long int> mp;\n    for (long long int i = 0; i < n; i++) {\n      cin >> a[i];\n      b[i] = -1;\n    }\n    a[n] = 10000000;\n    b[n] = -1;\n    n++;\n    x = 0;\n    for (long long int i = 1; i < n; i++) {\n      if (a[i] != a[i - 1]) {\n        b[i] = a[i - 1];\n        mp[a[i - 1]]++;\n      }\n    }\n    x = 0;\n    if (a[0] == 1) {\n      b[0] = 0;\n      mp[0]++;\n    }\n    for (long long int i = 0; i < n; i++) {\n      if (b[i] == -1) {\n        while (mp[x] != 0) x++;\n        b[i] = x;\n        mp[x]++;\n      }\n      if (i != n - 1) cout << b[i] << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class EhabAndPrefixMEXs {\n    public static void main(String agrs[])\n    {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = in.nextInt();\n        int[] arr = new int[n];\n        int[] ans = new int[n];\n        int[] counter = new int[100001];\n        for(int i = 0; i < n; i++)\n        {\n            int temp = in.nextInt();\n            counter[temp]++;\n            arr[i] = temp;\n        }\n        Arrays.fill(ans, -1);\n        for(int i = 0; i < n - 1; i++)\n        {\n            if(arr[i] < arr[i + 1])\n            {\n                ans[i + 1] = arr[i];\n            }\n        }\n        int count = 0;\n        for(int i = 0; i < n; i++)\n        {\n            if(ans[i] != -1)\n            {\n                continue;\n            }\n            while(counter[count] != 0)\n            {\n                count++;\n            }\n            counter[count]++;\n            ans[i] = count;\n        }\n        for(int i = 0; i < n; i++)\n        {\n            if(i != n - 1)\n            {\n                out.print(ans[i] + \" \");\n            }\n            else\n            {\n                out.println(ans[i]);\n            }\n        }\n        out.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nans = [-1 for _ in range(n)]\nmex = 0\nind = 0\nfor i in range(n):\n    if mex < a[i]:\n        for j in range(mex + 1, a[i]):\n            while ind < i and ans[ind] != -1:\n                ind += 1\n            if ind == i:\n                print(-1)\n                exit()\n            ans[ind] = j\n        ans[i] = mex\n        mex = a[i]\nfor i in range(len(ans)):\n    if ans[i] == -1:\n        print(1000000, end = ' ')\n    else:\n        print(ans[i], end = ' ')"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nn=int(stdin.readline())\na=list(map(int,stdin.readline().strip().split()))\nc=set(a)\nd=[]\nfor i in range(n+1):\n    if i not in c:\n        d.append(i)\nb=[]\nj=0\nfor i in range(n):\n    if i!=0:\n        if a[i-1]<a[i]:\n            b.append(a[i-1])\n        else:\n            b.append(d[j])\n            j=j+1\n    else:\n        b.append(d[j])\n        j=j+1\nprint(*b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int inf = 0x3f3f3f3f;\nint b[maxn];\nint a[maxn];\nint pre[maxn * 10];\nint _find(int x) { return x == pre[x] ? x : pre[x] = _find(pre[x]); }\nvoid _union(int x, int y) {\n  x = _find(x), y = _find(y);\n  if (x < y)\n    pre[x] = y;\n  else\n    pre[y] = x;\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < maxn * 10; ++i) pre[i] = i;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  int x = 0;\n  for (int i = n; i > 0; --i) {\n    if (a[i] > a[i - 1])\n      b[i] = a[i - 1];\n    else\n      b[i] = a[i] + 1;\n    b[i] = _find(b[i]);\n    _union(b[i], b[i] + 1);\n    _union(a[i], a[i] + 1);\n  }\n  for (int i = 1; i <= n; ++i) printf(\"%d%c\", b[i], i == n ? '\\n' : ' ');\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = [int(x) for x in input().split()]\nb = [None] * n\n\nunused = set()\nbanned = set(a)\n\nmex = 0\nc = 0\n\nfor i in range(n):\n    if a[i] == mex:\n        while c in banned:\n            c += 1\n\n        b[i] = c\n        c += 1\n    else:\n        # a[i] > mex\n        if i > 0:\n            banned.discard(a[i-1])\n\n        b[i] = mex\n        if c == mex: c+=1\n        mex = a[i]\n\nprint(*b)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom sys import maxsize\n#input = stdin.readline().strip\n\n\ndef solve():\n    pass\n\n\ntest = 1\n# test = int(input())\nfor t in range(0, test):\n    # brr = [list(map(int,input().split())) for i in range(rows)]              # 2D array row-wise input\n    n = int(input())\n    # s = list(input())                                                        # String Input, converted to mutable list.\n    # n, x = list(map(int, input().split()))\n    a = [int(x) for x in input().split()]\n    c = set(a)\n    avail = []\n    for i in range(10*n):\n        if(not i in c):\n            avail.append(i)\n    b = []\n    temp = a[0]\n    j = 0\n    m = a[0]\n    for i in range(n):\n        if(temp != a[i]):\n            if(m+1 < a[i] and temp < m):\n                break\n            if(temp == m+1 and a[i] > temp+1):\n                break\n            b.append(temp)\n            m = max(m, temp)\n            temp, z = a[i], i\n        else:\n            z = avail[j]\n            b.append(z)\n            m = z\n            j += 1\n    if(len(b) == n):\n        for el in b:\n            print(el, end=' ')\n    else:\n        print(-1)\n\n\n'''\nrows, cols = (5, 5)\narr = [[0]*cols for j in range(rows)]                                         # 2D array initialization\nb=input().split()                                                             # list created by spliting about spaces\nbrr = [[int(b[cols*i+j]) for j in range(cols)] for i in range(rows)]          # 2D array Linear Input\nrows,cols=len(brr),len(brr[0])                                                # no of rows/cols for 2D array\narr.sort(key = lambda x : x[1])                                               # sort list of tuples by 2nd element, Default priority - 1st Element then 2nd Element\ns=set()                                                                       # empty set\na=maxsize                                                                     # initializing infinity\nb=-maxsize                                                                    # initializing -infinity\nmapped=list(map(function,input))                                              # to apply function to list element-wise\ntry:                                                                          # Error handling\n    #code 1\nexcept:                                                                       # ex. to stop at EOF\n    #code 2 , if error occurs\n'''\n"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\n\nfrom collections import Counter, defaultdict, deque\nimport heapq\n\nBIG = 10**6\ndef solve(N, A):\n    B = [\n        None for i in range(N)\n    ]\n    need = []\n    for i in range(N - 2, -1, -1):\n        x = A[i]\n        y = A[i + 1]\n        if x < y:\n            B[i + 1] = x\n            for z in range(x + 1, y):\n                heapq.heappush(need, z)\n        else:\n            if need:\n                B[i + 1] = heapq.heappop(need)\n            else:\n                B[i + 1] = BIG\n    if 0 < A[0]:\n        if A[0] != 1:\n            return -1\n        B[0] = 0\n    else:\n        if len(need) > 1:\n            return -1\n        if len(need) == 1:\n            B[0] = need[0]\n        else:\n            B[0] = BIG\n    \n    return ' '.join(map(str, B))\n\n\nif __name__ == \"__main__\":\n    input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n    N, = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    ans = solve(N, A)\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\nv = True\nfor i in range (0, n):\n    if a[i] > i + 1:\n        v = False\n    if i > 0:\n        if a[i] < a[i-1]:\n            v = False\nif v == False:\n    print(-1)\nelse:\n    c = []\n    i = 0\n    j = 0\n    while i < n:\n        if a[i] == j:\n            i = i + 1\n            j = j + 1\n        elif j < a[i]:\n            c.append(j)\n            j = j + 1\n        else:\n            i = i + 1\n    c = c + [(a[n-1]+1) for i in range (0, n)]\n    j = 0\n    b = []\n    for i in range (0, n):\n        if i > 0:\n            if a[i-1] < a[i]:\n                b.append(a[i-1])\n            else:\n                b.append(c[j])\n                j = j + 1\n        else:\n            b.append(c[j])\n            j = j + 1\n    print(\" \".join(list(map(str, b))))\n\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "\n\ndef main():\n    n = int(input())\n    ar = list(map(int, input().split()))\n    if n == 1:\n        print((1, 0)[ar[0]>0])\n        return\n    res = [-1] * n\n    s = set(ar)\n    mx = -1\n    for i in range(1, n):\n        if ar[i] > ar[i-1]:\n            res[i] = ar[i-1]\n            mx = max(mx, res[i])\n    j = 0\n    for i in range(n):\n        if res[i] == -1:\n            while j in s:\n                j += 1\n            res[i] = j\n            mx = max(mx, j)\n            j += 1\n    if ar[n-1] - mx > 1:\n        print(-1)\n        return\n    for x in res:\n        print(x, end = ' ')\n    print()\n\nmain()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\n\npublic class C {\n    public static void main(String[] args) throws Exception {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int n = in.nextInt();\n        TreeSet<Integer> set = new TreeSet<>();\n        for (int i = 0; i < n + n + n + n; i++) {\n            set.add(i);\n        }\n\n        int arr[] = new int[n];\n        int res[] = new int[n];\n        int freq[] = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            arr[i] = in.nextInt();\n            set.remove(arr[i]);\n            freq[arr[i]]--;\n        }\n\n        for (int i = 0; i < n; i++) {\n            res[i] = set.pollFirst();\n            freq[arr[i]]++;\n            if (freq[arr[i]] == 0) set.add(arr[i]);\n        }\n\n        for (int i : res) pw.print(i + \" \");\n        pw.println();\n\n        pw.close();\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\ns = set(l)\nchk,mex,nxt,last = True,l[0],0,-1\nfinal = []\nfor i in range(n):\n    if l[i]>i+1:\n        chk=False\n        break\n    else:\n        if l[i]==last or last==-1:\n            while nxt in s:\n                nxt+=1\n            last=l[i]\n            final.append(nxt)\n            nxt+=1\n        else:\n            s.remove(last)\n            final.append(mex)\n            mex=l[i]\n            nxt = max(nxt, mex)\n            last = l[i]\nprint(*final if chk else -1)"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    *Satwik_Tiwari*\n    -----------\n\"\"\"\n\n#===============================================================================================\n#importing some useful libraries.\nfrom __future__ import division, print_function\n\nfrom fractions import Fraction\nimport sys\nimport os\nfrom io import BytesIO, IOBase\n\n\nimport bisect\nimport heapq\nfrom math import *\nfrom collections import deque\nfrom collections import Counter as counter  # Counter(list)  return a dict with {key: count}\nfrom itertools import combinations as comb # if a = [1,2,3] then print(list(comb(a,2))) -----> [(1, 2), (1, 3), (2, 3)]\nfrom itertools import permutations as permutate\nfrom bisect import bisect_left as bl\n#If the element is already present in the list,\n# the left most position where element has to be inserted is returned.\nfrom bisect import bisect_right as br\nfrom bisect import bisect\n#If the element is already present in the list,\n# the right most position where element has to be inserted is returned\n\n#==============================================================================================\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninp = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n#===============================================================================================\n#some shortcuts\n\nmod = 1000000007\n# def inp(): return sys.stdin.readline().strip() #for fast input\ndef out(var): sys.stdout.write(str(var))  #for fast output, always take string\ndef lis(): return list(map(int, inp().split()))\ndef stringlis(): return list(map(str, inp().split()))\ndef sep(): return map(int, inp().split())\ndef strsep(): return map(str, inp().split())\ndef graph(vertex): return [[] for i in range(0,vertex+1)]\ndef zerolist(n): return [0]*n\ndef nextline(): out(\"\\n\")  #as stdout.write always print sring.\ndef testcase(t):\n    for p in range(t):\n        solve()\ndef printlist(a) :\n    for p in range(0,len(a)):\n        out(str(a[p]) + ' ')\ndef lcm(a,b): return (a*b)//gcd(a,b)\ndef power(a,b):\n    ans = 1\n    while(b>0):\n        if(b%2==1):\n            ans*=a\n        a*=a\n        b//=2\n    return ans\n\n#===============================================================================================\n# code here ;))\n\ndef solve():\n    n = int(inp())\n    a = lis()\n    m = max(a)\n    for i in range(0,n):\n        if(i>=a[i]-1):\n            continue\n        else:\n            print(-1)\n            return\n    b = [-1]*(n)\n    nta = [False]*(m+1)\n    for i in range(1,n):\n        if(a[i]!=a[i-1]):\n            b[i] = a[i-1]\n    s = list(set(b))\n    for i in s:\n        nta[i] = True\n    if(a[0] == 0):\n        curr = 1\n    else:\n        curr = 0\n    # print(nta)\n    toadd = []\n    for i in range(0,m+1):\n        if(nta[i] == False):\n            toadd.append(i)\n    for i in range(m+1,10**6+1):\n        toadd.append(i)\n    j =0\n    for i in range(0,n):\n        if(b[i] == -1):\n            b[i] = toadd[j]\n            j+=1\n    print(*b)\n\n\ntestcase(1)\n# testcase(int(inp()))\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nNTC here\n\"\"\"\n \n \n#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nprofile = 0\npypy = 1\n \n \ndef iin(): return int(input())\ndef lin(): return list(map(int, input().split()))\n\ndef get_min(a, b):\n    v1, c1 = a\n    v2, c2 = b\n    if v1<v2:\n        return b\n    elif v1>v2:\n        return a\n    else:\n        if c1<c2:\n            return a\n        else:\n            return b\n\ndef main():\n    t = 1\n    while t:\n        t-=1\n        n = iin()\n        a = lin()\n        sa = set(a)\n        b = []\n        ch1 = 0\n        for i in range(n):\n            if i>0 and a[i]!=a[i-1]:\n                b.append(a[i-1])\n                continue\n            while ch1 in sa:\n                ch1 += 1\n            b.append(ch1)\n            ch1 += 1\n        print(*b)\n\n\n\n\n\n\n\n\n\n\n                \n\n        \n\n \n \n \n \n \n \n# region fastio\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \nif pypy:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n    input = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \nif __name__ == \"__main__\":\n    if profile:\n        import cProfile\n        cProfile.run('main()')\n    else:\n        main()"
        },
        {
            "language": 3,
            "solution": "import sys, math\ninput = sys.stdin.readline\n\ndef getInts():\n    return [int(s) for s in input().split()]\n\ndef getInt():\n    return int(input())\n\ndef getStrs():\n    return [s for s in input().split()]\n\ndef getStr():\n    return input().strip()\n\ndef listStr():\n    return list(input().strip())\n\nimport collections as col\nimport math,itertools\n\n\"\"\"\nWe need mex(b1) = a1\nIf a0 is 0, b0 can be anything greater than 0\nIf a0 is 1, b0 must be 0\nIf a0 > 1, impossible\n\nMore generally, if a(i-1) > i, impossible (since we would have to have at least 0 to i inclusive in only i spaces)\n\na0 must not be anything that appears later in the array, so if a0 is 1, then b0 = 0, which means that 0 cannot appear later\nThere is no point in using an element more than once\nSo, have a dictionary of elements we need to avoid, with their rightmost index as the value\nMaintain a sorted list of numbers we can use\nIf we exhaust these elements, we can add anything into B that isn't in the banned list, so 10**6-1 works\n\"\"\"\n\ndef solve():\n    N = getInt()\n    A = getInts()\n    B = []\n    A_dict = {}\n    for j in range(N):\n        A_dict[A[j]] = j\n    allowed_nums = [j for j in range(3*N//2,-1,-1) if j not in A_dict]\n    for j in range(N):\n        if A[j] > j+1:\n            return -1\n        if allowed_nums:\n            B.append(allowed_nums.pop())\n        else:\n            B.append(10**6-1)\n        if A_dict[A[j]] == j:\n            allowed_nums.append(A[j])\n    \n    print(*B)\n        \n    \nsolve()\n    \n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long ncrp(long long n, long long r, long long p) {\n  long long C[r + 1];\n  memset(C, 0, sizeof(C));\n  C[0] = 1;\n  for (long long i = 1; i <= n; i++)\n    for (long long j = min(i, r); j >= 1; j--) C[j] = (C[j] + C[j - 1]) % p;\n  return C[r];\n}\nlong long mod_exp(long long x, long long y, long long mm) {\n  x %= mm;\n  if (y == 0)\n    return (1);\n  else if (y % 2 == 0)\n    return (mod_exp((x * x) % mm, y / 2, mm));\n  else\n    return ((x * mod_exp((x * x) % mm, (y - 1) / 2, mm)) % mm);\n}\nlong long node(long long i, long long j, long long m) { return m * i + j; }\npair<long long, long long> loc(long long z, long long m) {\n  return {z / m, z % m};\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long n, r = 0, e;\n  cin >> n;\n  vector<long long> z;\n  long long a[n], ans[n];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    ans[i] = 1000000;\n  }\n  for (long long i = 0; i < n; i++) {\n    if (r == a[i])\n      z.push_back(i);\n    else if (r == a[i] - 1) {\n      ans[i] = r;\n      r++;\n    } else {\n      z.push_back(i);\n      e = z.size();\n      for (long long j = e - 1; j >= 0; j--) {\n        ans[z[z.size() - 1]] = r;\n        r++;\n        z.pop_back();\n        if (r == a[i]) break;\n        if (z.empty()) break;\n      }\n      if (r != a[i]) {\n        cout << -1 << endl;\n        return 0;\n      }\n    }\n  }\n  for (long long i = 0; i < n; i++) cout << ans[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n), b(n, 1), cant(1e5 + 7, 0);\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    cant[a[i]] += 1;\n  }\n  priority_queue<int, vector<int>, greater<int>> q;\n  for (int i = 0; i < 1e5 + 7; ++i) {\n    if (!cant[i]) q.push(i);\n  }\n  for (int i = 0, mx = 0; i < n; ++i) {\n    b[i] = q.top();\n    q.pop();\n    cant[a[i]] -= 1;\n    if (!cant[a[i]]) q.push(a[i]);\n  }\n  for (int& i : b) {\n    cout << i << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  long long a[n];\n  vector<long long> v;\n  long long p = 0, c = 0;\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    if (i == 0) {\n      if (a[i] == 1) {\n        v.push_back(0);\n      } else {\n        c = 1;\n      }\n    } else {\n      if (a[i] == a[i - 1]) c++;\n      if (a[i] - a[i - 1] > 1) {\n        long long e = a[i] - a[i - 1] - 1;\n        if (c >= e) {\n          c -= e;\n        } else {\n          p = 1;\n        }\n        for (long long d = a[i - 1] + 1; d < a[i]; d++) {\n          v.push_back(d);\n        }\n      }\n    }\n  }\n  if (p == 1 || a[0] > 1) {\n    cout << -1 << endl;\n  } else {\n    c = 0;\n    long long e = v.size();\n    for (long long i = 0; i < n; i++) {\n      if (i == 0) {\n        if (a[i] == 1) {\n          cout << v[c] << \" \";\n          c++;\n        } else {\n          if (c < e) {\n            cout << v[c] << \" \";\n            c++;\n          } else\n            cout << n + 1 << \" \";\n        }\n      } else {\n        if (a[i] == a[i - 1]) {\n          if (c < e) {\n            cout << v[c] << \" \";\n            c++;\n          } else\n            cout << n + 1 << \" \";\n        } else {\n          cout << a[i - 1] << \" \";\n        }\n      }\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import os,io\nimport sys\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nn=int(input())\na=list(map(int,input().split()))\nb=[-1]*n\nfailflag=0\nvisited=set()\nvisited.add(a[0])\nfor i in range(1,n):\n    if a[i-1]!=a[i]:\n        b[i]=a[i-1]\n    if a[i]>i+1:\n        failflag=1\n        break\n    visited.add(a[i])\nif failflag==1:\n    print(-1)\n    sys.exit()\ncounter=0\nvisited2=set()\nfor i in range(n):\n    while counter in visited:\n        counter+=1\n    if b[i]==-1:\n        b[i]=counter\n        if not counter in visited:\n            counter+=1\n        elif counter in visited2:\n            counter+=1\n    else:\n        visited2.add(b[i])\nans=[]\nfor i in range(n):\n    ans.append(str(b[i]))\nprint(' '.join(ans))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[-1]*n\nl=[0]*(10**5+1)\nfor i in range(1,n):\n    if a[i]!=a[i-1]:\n        b[i]=a[i-1]\n        l[b[i]]=1\nl[a[n-1]]=1\nd=[]\nfor i in range(10**5+1):\n    if l[i]==0:\n        d.append(i)\nk=0\nfor i in range(n):\n    if b[i]==-1:\n        b[i]=d[k]\n        k+=1\nprint(*b)\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nA=list(map(int,input().split()))\n\nfor i in range(n):\n    if A[i]>i+1:\n        print(-1)\n        sys.exit()\n\nfrom collections import Counter\nC=Counter(A)\n\nANS=[]\nnow=0\nwhile now in C:\n    now+=1\n    \nfor i in range(n):\n    for x in sorted([now,A[i-1]]):\n        if x in C:\n            continue\n        ANS.append(x)\n        break\n    C[x]+=1<<31\n    C[A[i]]-=1\n    if C[A[i]]==0:\n        del(C[A[i]])\n        \n    while now in C:\n        now+=1\n\nprint(*ANS)\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\n\npublic class MEXFind {\n    public static void main(String args[]) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        int n = Integer.parseInt(br.readLine());\n        int[] a = new int[n];\n        int[] dat = new int[2*n];\n\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        for(int i = 0; i < n; i++){\n            a[i] = Integer.parseInt(st.nextToken());\n            dat[a[i]]++;\n        }\n\n        PriorityQueue<Integer> que = new PriorityQueue<>();\n        for(int i = 0; i < 2*n; i++){\n            if(dat[i] == 0) que.add(i);\n        }\n\n        int[] sol = new int[n];\n        boolean valid = true;\n\n        for(int i = 0; i < n; i++){\n            sol[i] = que.poll();\n\n            dat[a[i]]--;\n\n            if(dat[a[i]] == 0){\n                que.add(a[i]);\n            }\n\n            System.out.print(sol[i] + \" \");\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.buffer.readline\n\nn = int(input())\n*a, = map(int, input().split())\nb = [-1] * n\nvis = [0] * (n + 1)\nx = y = 0\nif a[0]:\n\tb[0] = 0\n\tvis[0] = 1\nfor i in range(1, n):\n\tif a[i] != a[i - 1]:\n\t\tb[i] = a[i - 1]\n\t\tvis[a[i - 1]] = 1\n\t\twhile 1:\n\t\t\twhile vis[y]:\n\t\t\t\ty += 1\n\t\t\tif y >= a[i]:\n\t\t\t\tbreak\n\t\t\twhile b[x] != -1:\n\t\t\t\tx += 1\n\t\t\tb[x] = y\n\t\t\tvis[y] = 1\n\t\t\tx += 1\n\nx = 100005\nfor i in range(n):\n\tif b[i] == -1:\n\t\tb[i] = x\n\t\tx += 1\nprint(*b)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int v[n];\n  bool possible = 1;\n  bool tab[1000042] = {0};\n  int valMax = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n    valMax = max(valMax, v[i]);\n    if (v[i] > i + 1) {\n      possible = 0;\n    }\n    tab[v[i]] = 1;\n  }\n  if (!possible) {\n    cout << \"-1\";\n    return 0;\n  }\n  int mex = 0;\n  vector<int> manque;\n  for (int i = 0; i <= valMax; i++) {\n    if (!tab[i]) {\n      manque.push_back(i);\n    }\n  }\n  int curManque = 0;\n  vector<int> rep;\n  for (int i = 0; i < n; i++) {\n    if (mex == v[i]) {\n      if (curManque < manque.size() && manque[curManque] <= mex) {\n        curManque++;\n      }\n      if (curManque >= manque.size()) {\n        rep.push_back(valMax + 1);\n        if (valMax == 1000000) {\n          cout << \"-1\";\n          return 0;\n        }\n      } else {\n        rep.push_back(manque[curManque]);\n        curManque++;\n      }\n    } else {\n      rep.push_back(mex);\n      mex = v[i];\n    }\n  }\n  for (int i = 0; i < rep.size(); i++) cout << rep[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class EhabPrefix {\n\t\n\tstatic final int MAXN = 1000_006;\n\t\n\tstatic final long MOD = (long) 1e9 + 7;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tMyScanner s = new MyScanner();\n\t\tPrint p = new Print();\n\t\tint n = s.nextInt();\n\t\tTreeSet<Integer> tset = new TreeSet<>();\n\t\tfor (int i = 0; i <= n; i++)\n\t\t\ttset.add(i);\n\t\tint[] arr = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = s.nextInt();\n\t\t\ttset.remove(arr[i]);\n\t\t}\n\t\tint[] b = new int[n];\n\t\tArrays.fill(b, -1);\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\tb[i] = arr[i - 1];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (b[i] == -1) {\n\t\t\t\tb[i] = tset.pollFirst();\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tp.print(b[i] + \" \");\n\t\tp.println(\"\");\n\t\tp.close();\n\t}\n\t\n\tpublic static class Pair implements Comparable<Pair> {\n\t\t\n\t\tint first;\n\t\t\n\t\tint second;\n\t\t\n\t\tpublic Pair(int a, int b) {\n\t\t\tthis.first = a;\n\t\t\tthis.second = b;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + first;\n\t\t\tresult = prime * result + second;\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tPair other = (Pair) obj;\n\t\t\tif (first != other.first)\n\t\t\t\treturn false;\n\t\t\tif (second != other.second)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn o.first - first;\n\t\t}\n\t\t\n\t}\n\t\n\tpublic static class Helper {\n\t\t\n\t\tlong MOD = (long) 1e9 + 7;\n\t\t\n\t\tint MAXN = 1000_006;;\n\t\t\n\t\tRandom rnd;\n\t\t\n\t\tpublic Helper(long mod, int maxn) {\n\t\t\tMOD = mod;\n\t\t\tMAXN = maxn;\n\t\t\trnd = new Random();\n\t\t}\n\t\t\n\t\tpublic Helper() {\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic static int[] sieve;\n\t\t\n\t\tpublic static ArrayList<Integer> primes;\n\t\t\n\t\tpublic void setSieve() {\n\t\t\tprimes = new ArrayList<>();\n\t\t\tsieve = new int[MAXN];\n\t\t\tint i, j;\n\t\t\tfor (i = 2; i < MAXN; ++i)\n\t\t\t\tif (sieve[i] == 0) {\n\t\t\t\t\tprimes.add(i);\n\t\t\t\t\tfor (j = i; j < MAXN; j += i) {\n\t\t\t\t\t\tsieve[j] = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static long[] factorial;\n\t\t\n\t\tpublic void setFactorial() {\n\t\t\tfactorial = new long[MAXN];\n\t\t\tfactorial[0] = 1;\n\t\t\tfor (int i = 1; i < MAXN; ++i)\n\t\t\t\tfactorial[i] = factorial[i - 1] * i % MOD;\n\t\t}\n\t\t\n\t\tpublic long getFactorial(int n) {\n\t\t\tif (factorial == null)\n\t\t\t\tsetFactorial();\n\t\t\treturn factorial[n];\n\t\t}\n\t\t\n\t\tpublic long ncr(int n, int r) {\n\t\t\tif (r > n)\n\t\t\t\treturn 0;\n\t\t\tif (factorial == null)\n\t\t\t\tsetFactorial();\n\t\t\tlong numerator = factorial[n];\n\t\t\tlong denominator = factorial[r] * factorial[n - r] % MOD;\n\t\t\treturn numerator * pow(denominator, MOD - 2, MOD) % MOD;\n\t\t}\n\t\t\n\t\tpublic long[] getLongArray(int size, MyScanner s) throws Exception {\n\t\t\tlong[] ar = new long[size];\n\t\t\tfor (int i = 0; i < size; ++i)\n\t\t\t\tar[i] = s.nextLong();\n\t\t\treturn ar;\n\t\t}\n\t\t\n\t\tpublic int[] getIntArray(int size, MyScanner s) throws Exception {\n\t\t\tint[] ar = new int[size];\n\t\t\tfor (int i = 0; i < size; ++i)\n\t\t\t\tar[i] = s.nextInt();\n\t\t\treturn ar;\n\t\t}\n\t\t\n\t\tpublic int[] getIntArray(String s) throws Exception {\n\t\t\ts = s.trim().replaceAll(\"\\\\s+\", \" \");\n\t\t\tString[] strs = s.split(\" \");\n\t\t\tint[] arr = new int[strs.length];\n\t\t\tfor (int i = 0; i < strs.length; i++) {\n\t\t\t\tarr[i] = Integer.parseInt(strs[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tpublic long gcd(long a, long b) {\n\t\t\treturn b == 0 ? a : gcd(b, a % b);\n\t\t}\n\t\t\n\t\tpublic int gcd(int a, int b) {\n\t\t\treturn b == 0 ? a : gcd(b, a % b);\n\t\t}\n\t\t\n\t\tpublic long max(long[] ar) {\n\t\t\tlong ret = ar[0];\n\t\t\tfor (long itr : ar)\n\t\t\t\tret = Math.max(ret, itr);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tpublic int max(int[] ar) {\n\t\t\tint ret = ar[0];\n\t\t\tfor (int itr : ar)\n\t\t\t\tret = Math.max(ret, itr);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tpublic long min(long[] ar) {\n\t\t\tlong ret = ar[0];\n\t\t\tfor (long itr : ar)\n\t\t\t\tret = Math.min(ret, itr);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tpublic int min(int[] ar) {\n\t\t\tint ret = ar[0];\n\t\t\tfor (int itr : ar)\n\t\t\t\tret = Math.min(ret, itr);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tpublic long sum(long[] ar) {\n\t\t\tlong sum = 0;\n\t\t\tfor (long itr : ar)\n\t\t\t\tsum += itr;\n\t\t\treturn sum;\n\t\t}\n\t\t\n\t\tpublic long sum(int[] ar) {\n\t\t\tlong sum = 0;\n\t\t\tfor (int itr : ar)\n\t\t\t\tsum += itr;\n\t\t\treturn sum;\n\t\t}\n\t\t\n\t\tpublic long pow(long base, long exp, long MOD) {\n\t\t\tbase %= MOD;\n\t\t\tlong ret = 1;\n\t\t\twhile (exp > 0) {\n\t\t\t\tif ((exp & 1) == 1)\n\t\t\t\t\tret = ret * base % MOD;\n\t\t\t\tbase = base * base % MOD;\n\t\t\t\texp >>= 1;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t}\n\t\n\tstatic class Print {\n\t\t\n\t\tprivate BufferedWriter bw;\n\t\t\n\t\tpublic Print() {\n\t\t\tthis.bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\t\t}\n\t\t\n\t\tpublic void print(Object object) throws IOException {\n\t\t\tbw.append(\"\" + object);\n\t\t}\n\t\t\n\t\tpublic void println(Object object) throws IOException {\n\t\t\tprint(object);\n\t\t\tbw.append(\"\\n\");\n\t\t}\n\t\t\n\t\tpublic void close() throws IOException {\n\t\t\tbw.close();\n\t\t}\n\t}\n\t\n\tpublic static class MyScanner {\n\t\t\n\t\tBufferedReader br;\n\t\t\n\t\tStringTokenizer st;\n\t\t\n\t\tpublic MyScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\t\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\t\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n   n = int(input())\n   lst = list(map(int,input().split()))\n   svb = []\n   svbc = 0\n   ans = []\n   pos = 0\n   for i in range(n):\n       if lst[i] == pos:\n           svbc += 1\n           ans.append(-1)\n       elif lst[i] == pos + 1:\n           ans.append(pos)\n           pos += 1\n       elif lst[i] > pos:\n           ans.append(pos)\n           for x in range(pos+1, lst[i]):\n               svb.append(x)\n               svbc -= 1\n           pos = lst[i]\n           if svbc < 0:\n               print(-1)\n               return\n   sh = -1\n   for i in ans:\n       if i != -1:\n           print(i,end=' ')\n       else:\n           sh += 1\n           if sh >= len(svb):\n               print(1000000, end=' ')\n           else:\n               print(svb[sh], end=' ')\n   print()\nfor t in range(1):\n    solve()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        int[] a = new int[n+10];\n        int[] val = new int[n+10];\n        int[] vis = new int[n+10];\n        for (int i=1;i<=n;i++) {\n            a[i] = input.nextInt();\n            vis[a[i]] = 1;\n        }\n        int cnt = 0;\n        for (int i=1;i<=n;i++){\n            if (vis[i] == 0) val[++cnt] = i;\n        }\n        int pos = 0;\n        for (int i=1;i<=n;i++){\n            if (a[i] == a[i-1]) System.out.print(val[++pos] + \" \");\n            else System.out.print(a[i-1] + \" \");\n        }\n        System.out.println();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nn = int(input())\nmas = list(map(int, input().split()))\ns = set(mas)\nnow = 1\np = 0\nfor i in range(n):\n\tif mas[i] != p:\n\t\tprint(p, end = ' ')\n\t\tp = mas[i]\n\t\tif now == mas[i]:\n\t\t\tnow += 1\n\telse:\n\t\twhile now in s:\n\t\t\tnow += 1\n\t\tprint(now, end = ' ')\n\t\tnow += 1\nprint()"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math\nimport bisect\n\ndef main():\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n\n    for i, x in enumerate(l):\n        if x > i+1:\n            print(-1)\n            return \n    l = [0]+l\n    missing = list(set(list(range(n+1)))-set(l))[::-1]\n    ans = []\n\n    for i in range(1, n+1):\n        if l[i] == l[i-1]:\n            ans.append(missing.pop())\n        else:\n            ans.append(l[i-1])\n    stdout.write(\" \".join(map(str, ans))+\"\\n\")\nmain()\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nsol=[-1]*n\ntouse=list(range(n+1))\nif a[0]==1:\n    sol[0]=0\n    touse[0]=-1\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        sol[i]=a[i-1]\n        touse[a[i-1]]=-1\nj=0\ntouse[a[-1]]=-1\nfor i in range(n):\n    if sol[i]==-1:\n        while touse[j]==-1:\n            j+=1\n        sol[i]=touse[j]\n        j+=1\nprint(*sol)"
        },
        {
            "language": 3,
            "solution": "from heapq import heappush, heappop\nn = int(input())\nar = list(map(int, input().split()))\n\nvalid = True\ns = []\nfor i in range(n):\n\tif ar[i]>i+1:\n\t\tvalid = False \n\t\tbreak \n\telse:\n\t\tif i>0:\n\t\t\tfor j in range(ar[i-1]+1,ar[i]):\n\t\t\t\theappush(s,j)\n\t\telif ar[0]==1:\n\t\t\theappush(s,0)\n\t\t# print(i,s)\nif not valid:\n\tprint(-1)\nelse:\n\tmaxi = ar[-1]+1\n\ts_len = len(s)\n\tfor i in range(s_len,n):\n\t\theappush(s,maxi)\n\t\tmaxi += 1\n\t# print(s)\n\tans = []\n\tfor i in range(n):\n\t\tk = heappop(s)\n\t\tans.append(k)\n\t\t# s.remove(k)\n\t\tif i+1<n and ar[i]!=ar[i+1]:\n\t\t\theappush(s,ar[i])\n\tprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long oo = 1e18;\nconst double PI = acos(-1);\nconst long long M = 1e9 + 7;\nconst int N = 10000010;\nlong long oor(long long a, long long b) { return (a | b); }\nint a[100010], b[100010], use[100010];\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 0; i <= n; ++i) b[i] = -1;\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    if (i && a[i] != a[i - 1])\n      b[i] = a[i - 1], use[a[i - 1]] = 1;\n    else if (i == 0 && a[i])\n      b[i] = 0, use[0] = 1;\n  }\n  use[a[n - 1]] = 1;\n  int co = 0;\n  for (int i = 0; i < n; ++i) {\n    while (use[co]) co++;\n    if (b[i] == -1) b[i] = co, use[co] = 1;\n    cout << b[i] << ' ';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MOD = 1e9 + 7;\nconst long long INF = 1e18;\nconst long double E = 1e-12;\nconst long double PI = acos(-1);\nmt19937_64 rnd(time(0));\nlong long p1 = 31, p2 = 37, p3 = 7, p4 = rnd() % 100 + 1, md1 = MOD,\n          md2 = 998244353, md3 = 998244357, md4 = rnd() % 1000000000;\nlong long n, m, k, h, T, kl = 0, sz = 0, a[1000001], b[1000001];\nvector<long long> v[1000001];\nlong long binpow(long long h, long long r, long long md = MOD) {\n  long long l = 1;\n  while (r) {\n    if (r & 1) l *= h, l %= md;\n    h *= h;\n    h %= md;\n    r /= 2;\n  }\n  return l;\n}\nlong long gcd(long long x, long long y) {\n  if (x < y) swap(x, y);\n  while (x && y) {\n    x %= y;\n    swap(x, y);\n  }\n  return x + y;\n}\nvoid solve() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) b[i] = -1;\n  a[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (a[i] != a[i - 1]) {\n      for (int j = a[i - 1] + 1; j <= a[i] - 1; j++) v[i].push_back(j);\n      b[i] = a[i - 1];\n    }\n  }\n  vector<long long> w;\n  for (int i = n; i > 0; i--) {\n    for (int j = 0; j < v[i].size(); j++) w.push_back(v[i][j]);\n    if (b[i] != -1) continue;\n    if (w.size() == 0)\n      b[i] = n + 1;\n    else\n      b[i] = w.back(), w.pop_back();\n  }\n  if (w.size())\n    cout << \"-1\\n\";\n  else {\n    for (int i = 1; i <= n; i++) cout << b[i] << \" \";\n  }\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  long long t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n\n        int n = scan.nextInt();\n        boolean[] arr = new boolean[200001];\n\n        int[] nums = new int[n];\n        for(int i=0;i<n;i++) {\n            nums[i] = scan.nextInt();\n            arr[nums[i]] = true;\n        }\n\n        int prev = 0;\n        int point = 0;\n        for(int i=0;i<n;i++) {\n            if(nums[i] != prev) {\n                System.out.print(prev+\" \");\n                if(prev == point) {\n                    point++;\n                }\n            } else {\n                while (arr[point]) {\n                    point++;\n                }\n                System.out.print(point+\" \");\n                point++;\n            }\n            prev = nums[i];\n        }\n\n    }\n\n}\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\ntemplate <class T>\nusing V = vector<T>;\ntemplate <class T, class U>\nusing P = pair<T, U>;\nusing vll = V<ll>;\nusing vii = V<int>;\nusing vvll = V<vll>;\nusing vvii = V<V<int> >;\nusing PII = P<int, int>;\nusing PLL = P<ll, ll>;\ntemplate <class T>\ninline bool chmax(T& a, T b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T>\ninline bool chmin(T& a, T b) {\n  if (a > b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class A, class B>\nostream& operator<<(ostream& out, const P<A, B>& p) {\n  return out << '(' << p.first << \", \" << p.second << ')';\n}\ntemplate <class A>\nostream& operator<<(ostream& out, const V<A>& v) {\n  out << '[';\n  for (int i = 0; i < int(v.size()); i++) {\n    if (i) out << \", \";\n    out << v[i];\n  }\n  return out << ']';\n}\ntemplate <class A, class B>\nistream& operator>>(istream& in, P<A, B>& p) {\n  return in >> p.first >> p.second;\n}\ntemplate <class A>\nistream& operator>>(istream& in, V<A>& v) {\n  for (int i = 0; i < int(v.size()); i++) in >> v[i];\n  return in;\n}\nconst long long MOD = 1000000007;\nconst long long HIGHINF = (long long)1e18;\nconst int INF = (int)1e9;\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  set<int> cand;\n  for (ll i = 0; i < 1000001; i++) cand.insert(i);\n  int n;\n  cin >> n;\n  vii a(n);\n  cin >> a;\n  for (ll i = 0; i < n; i++) {\n    if (i + 1 < a[i]) {\n      cout << -1 << '\\n';\n      return 0;\n    }\n    cand.erase(a[i]);\n  }\n  vii b(n, INF);\n  for (ll i = 1; i < n; i++) {\n    if (a[i - 1] != a[i]) b[i] = a[i - 1];\n  }\n  for (ll i = 0; i < n; i++) {\n    if (b[i] == INF) {\n      b[i] = *cand.begin();\n      cand.erase(cand.begin());\n    }\n  }\n  for (ll i = 0; i < n; i++) {\n    if (i) cout << ' ';\n    cout << b[i];\n  }\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#------------------------------warmup----------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nimport math \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n#-------------------game starts now----------------------------------------------------\n# for _ in range((int)(input())):\nn=(int)(input())\nl=list(map(int,input().split()))\nans=[-1]*n\ns1=set(l)\ns2=set()\nraj=0\nabc=0\nfor i in range(n+1):\n    if i not in s1:\n        s2.add(i)\nfor i in range(1,n):\n    if l[i]!=l[i-1]:\n        ans[i]=l[i-1]\nbln=sorted(s2)\nt=0\nfor i in range(n):\n    if ans[i]==-1:\n        ans[i]=bln[t]\n        t+=1\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "import math \nimport sys\n\nsys.setrecursionlimit(10**4) \n\ndef Divisors(n) : \n\t\n\tl=[]\n\ti = 1\n\twhile i <= math.sqrt(n): \n\t\t\n\t\tif (n % i == 0) : \n\t\t\t\n\t\t\t\n\t\t\tif (n // i == i) : \n\t\t\t\tl.append(i)\n\t\t\telse : \n\t\t\t\tl.append(i)\n\t\t\t\tl.append(n//i)\n\t\ti = i + 1\n\treturn l\n\ndef SieveOfEratosthenes(n): \n\t\n\tl=[]\n\t\n\tprime = [True for i in range(n+1)] \n\tp = 2\n\twhile (p * p <= n): \n\t\t\n\t\tif (prime[p] == True): \n\t\t\t\n\t\t\tfor i in range(p * p, n+1, p): \n\t\t\t\tprime[i] = False\n\t\tp += 1\n\t\n\tfor p in range(2, n+1): \n\t\tif prime[p]: \n\t\t\tl.append(p)\n\t\n\treturn l\t\t\n\ndef primeFactors(n): \n\t\n\tl=[]\n\t\n\twhile n % 2 == 0: \n\t\tl.append(2) \n\t\tn = n / 2\n\t\t\n\tfor i in range(3,int(math.sqrt(n))+1,2): \n\t\t\n\t\twhile n % i== 0: \n\t\t\tl.append(i) \n\t\t\tn = n / i \n\t\t\t\n\tif n > 2: \n\t\tl.append(n)\n\t\n\treturn(l)\t\n\t\t\n\ndef Factors(n) : \n\t\n\t\n\tresult = []\n\t\n\tfor i in range(2,(int)(math.sqrt(n))+1) : \n\n\t\tif (n % i == 0) : \n\t\t    \n\t\t\tif (i == (n/i)) : \n\t\t\t\tresult.append(i)\n\t\t\telse : \n\t\t\t    result.append(i)\n\t\t\t    result.append(n//i)\n\t\t\n\tresult.append(1)\n\tresult.append(n)\n\treturn result\n\ndef maxSubArraySum(a): \n\t\n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tsize=len(a)\n\t\n\tfor i in range(0, size): \n\t\tmax_ending_here = max_ending_here + a[i] \n\t\tif (max_so_far < max_ending_here): \n\t\t\tmax_so_far = max_ending_here \n\n\t\tif max_ending_here < 0: \n\t\t\tmax_ending_here = 0\n\treturn max_so_far \n\n#print(SieveOfEratosthenes(100))\n#print(Divisors(100))\n#print(primeFactors(100))\n#print(Factors(100))\n#print(maxSubArraySum(a)\ndef longestsubarray(arr, n, k): \n    current_count = 0\n      \n    # this will contain length of  \n    # longest subarray found \n    max_count = 0\n  \n    for i in range(0, n, 1): \n        if (arr[i] % k != 0): \n            current_count += 1\n        else: \n            current_count = 0\n        max_count = max(current_count,  \n                            max_count) \n      \n    return max_count \ndef main():\n\n    n=int(input())\n    l=list(map(int,input().split()))\n    \n    l1=[]\n    \n    for j in range(0,n):\n        l1.append(-1)\n        \n    f=[]\n    \n    for j in range(0,1000000):\n        f.append(-1)\n    f[l[0]]=1    \n    for j in range(1,n):\n        if l[j-1]!=l[j]:\n            l1[j]=l[j-1]\n            f[l[j-1]]=1\n        f[l[j]]=1\n            \n    k=0        \n    for j in range(0,n): \n        if l1[j]==-1:\n            while k<=1000000:\n                if f[k]==-1:\n                    f[k]=1\n                    l1[j]=k\n                    break\n                k+=1\n    print(*l1)            \n        \n            \n        \n                    \n    \nt=1\nfor i in range(0,t):\n    main()\n\n\n    "
        },
        {
            "language": 4,
            "solution": "\timport java.io.*;\n\timport java.util.*;\n\timport java.math.*;\n\t\n\t \n\t public class Main\t{\n\t   static class Pair implements Comparable<Pair>{\n\t   int a;\n\t   int b;\n\t   public Pair(int x,int y){a=x;b=y;}\n\t   public Pair(){}\n\t   public int compareTo(Pair p){\n\t\t return a - p.a;\n\t   }\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + a;\n\t\tresult = prime * result + b;\n\t//\tout.println(\"hashcode = \"+result);\n\t\treturn result;\n\t}\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tPair cur = (Pair)obj;\n\t\tif((a==cur.a && b==cur.b) || (a==cur.b && b==cur.a))return true;\n\t\treturn false;\n\t}\n\t }\n\t   static class cell implements Comparable<cell>{\n\t\t   int a,b;\n\t\t   long dis;\n\t\t   public cell(int x,int y,long z) {a=x;b=y;dis=z;}\n\t\t   public int compareTo(cell c) {\n\t\t\t   return Long.compare(dis,c.dis);\n\t\t   }\n\t   }\n\tstatic class TrieNode{\n\t\tTrieNode left;\n\t\tTrieNode right;\n\t\tint op;\n\t\tint data;\n\t\tpublic TrieNode() {}\n\t}\n\t  public static int gcd(int a,int b)\n\t  {\n\t    if(a<b)\n\t\n\t      return gcd(b,a);\n\t    if(b==0)\n\t      return a;\n\t    return gcd(b,a%b);\n\t    \n\t  }\n\t  static long lcm(int a,int b) {\n\t\t  return  a*b / gcd(a,b);\n\t  }\n\t  //static long ans = 0;\n\t  static long mod = 998244353;//(long)(1e9+7);//\n\t   \n\t    public static void main(String[] args) throws Exception {\n\t       new Thread(null, null, \"Anshum Gupta\", 99999999) {\n\t            public void run() {\n\t                try {\n\t                    solve();\n\t                } catch(Exception e) {\n\t                    e.printStackTrace();\n\t                    System.exit(1);\n\t                }\n\t            }\n\t        }.start();\n\t    }\n\t\n\tstatic long pow(long x,long y){\n\t    if(y == 0)return 1;\n\t    if(y==1)return x;\n\t    long a = pow(x,y/2);\n\t    a = (a*a)%mod;\n\t    if(y%2==0){\n\t        return a;\n\t    }\n\t    return (a*x)%mod;\n\t}\n\t\n\tstatic long mxx;\n\tstatic int mxN = (int)(1e7);\n\tstatic long[]fact,inv_fact;\n\tstatic long my_inv(long a) {\n\t\treturn pow(a,mod-2);\n\t}\n\tstatic long bin(int a,int b) {\n\t\tif(a < b || a<0 || b<0)return 0;\n\t    return ((fact[a]*inv_fact[a-b])%mod * inv_fact[b])%mod;\n\t}\n\t//static ArrayList<ArrayList<Integer>>adj;\n\t//static boolean[]vis;\n\tstatic void make_facts() {\n\t  fact=new long[mxN];\n\t  inv_fact = new long[mxN];\n\t  fact[0]=inv_fact[0]=1L;\n\t  for(int i=1;i<mxN;i++) {\n\t\t   fact[i] = (i*fact[i-1])%mod;\n\t\t   inv_fact[i] = my_inv(fact[i]);\n\t  }\n\t}\n\t//static int[]bfs(int a){\n\t//\tQueue<Integer> q = new  LinkedList<Integer>();\n\t//\t\n\t//\tvis = new boolean[n+1];\n\t//\tint[]dis = new int[n+1];\n\t//\tq.add(a);\n\t//\tdis[a] = 0;\n\t//\tvis[a] = true;\n\t//\twhile(!q.isEmpty()) {\n\t//\t\tint cur = q.poll();\n\t//\t//\tvis[cur] = true;\n\t//\t//\tif(cur == b)break;\n\t//\t\tfor(int x : adj.get(cur)) {\n\t//\t\t\tif(vis[x])continue;\n\t//\t\t\tq.add(x);\n\t//\t\t\tdis[x] = dis[cur]+1;\n\t//\t\t\tvis[x] = true;\n\t//\t\t}\n\t//\t}\n\t//\treturn dis;\n\t//}\n\t\n\t public static void solve() throws Exception {\n\t   // solve the problem here\n\t   MyScanner s = new MyScanner();\n\t        out = new PrintWriter(new BufferedOutputStream(System.out), true);\n\t        int tc = 1;//s.nextInt();\n\t        mxx = (long)(1e18+5);\n\t//        make_facts();  \n\t       \n\t        while(tc-->0){\n\t        \tint n = s.nextInt();\n\t        \tint[]a = new int[n];\n\t        \tint[]b = new int[n];\n\t          \t\tHashMap<Integer,Integer> freq = new HashMap<Integer, Integer>();\n\t        \tfor(int i=0;i<n;++i) {\n\t        \t\ta[i] = s.nextInt();\n\t                if(freq.containsKey(a[i]))\n\t                \tfreq.put(a[i], freq.get(a[i])+1);\n\t                else freq.put(a[i],1);\n\t        \t}\n\t        \tArrays.fill(b, -1);\n\t        \t\n\t        \tint[]ex = new int[n+1000];\n\t        \tfor(int i=1;i<n;i++) {\n\t        \t\tif(a[i]!=a[i-1]) {\n\t        \t\t\tb[i] = a[i-1];\n\t        \t\t\tex[b[i]]=1;\n\t        \t\t}\n\t        \t}\n\t        \tint st = 0;\n\t        \tex[a[n-1]]=1;\n\t        \tfor(int i=0;i<n;i++)\n\t        \t{\n\t        \t\twhile(ex[st] > 0) {\n\t        \t\t\tst++;\n\t        \t\t}\n\t        \t\tif(b[i] == -1) {\n\t        \t\t\tb[i] = st;\n\t        \t\t\tex[st] = 1;\n\t        \t\t}\n\t        \t\tout.print(b[i]+\" \");\n\t        \t}\n\t        \tout.println();\n\t      \n\t        }\n\t        \t\n\t           \n\t        out.flush();\n\t}\n\t \n\t     \n\t \n\t \n\t \n\t    //-----------PrintWriter for faster output---------------------------------\n\t    public static PrintWriter out;\n\t \n\t    //-----------MyScanner class for faster input----------\n\t    public static class MyScanner {\n\t        BufferedReader br;\n\t        StringTokenizer st;\n\t \n\t        public MyScanner() {\n\t            br = new BufferedReader(new InputStreamReader(System.in));\n\t        }\n\t \n\t        String next() {\n\t            while (st == null || !st.hasMoreElements()) {\n\t                try {\n\t                    st = new StringTokenizer(br.readLine());\n\t                } catch (IOException e) {\n\t                    e.printStackTrace();\n\t                }\n\t            }\n\t            return st.nextToken();\n\t        }\n\t \n\t        int nextInt() { return Integer.parseInt(next()); }\n\t        long nextLong() { return Long.parseLong(next()); }\n\t        double nextDouble() { return Double.parseDouble(next()); }\n\t         \n\t        String nextLine(){\n\t            String str = \"\";\n\t            try {\n\t                str = br.readLine();\n\t            } catch (IOException e) {\n\t                e.printStackTrace();\n\t            }\n\t            return str;\n\t        }\n\t    }\n\t    //--------------------------------------------------------\n\t}\n"
        },
        {
            "language": 3,
            "solution": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\n# import time,random,resource\n\n# sys.setrecursionlimit(10**6)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\ndef IF(c, t, f): return t if c else f\ndef YES(c): return IF(c, \"YES\", \"NO\")\ndef Yes(c): return IF(c, \"Yes\", \"No\")\n\n\ndef main():\n    t = 1\n\n    rr = []\n    for _ in range(t):\n        n = I()\n        a = LI()\n\n        if any(i < c for i,c in enumerate(a,1)):\n            rr.append(-1)\n        else:\n            a.append(0)\n            s = set(a)\n            k = 0\n            r = []\n            for i,c in enumerate(a[:-1]):\n                if c != a[i-1]:\n                    r.append(a[i-1])\n                else:\n                    while k in s:\n                        k += 1\n                    r.append(k)\n                    k += 1\n\n            rr.append(JA(r, \" \"))\n\n    return JA(rr, \"\\n\")\n\n\nprint(main())\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.Math;\nimport java.util.*;\n\npublic class Main  {\n\n    public BufferedReader in;\n    public PrintStream out;\n\n    public boolean log_enabled = false;\n    \n    public boolean multiply_tests = false;\n\n    public static boolean do_gen_test = false;\n    \n    public void gen_test() {\n            \n        \n    }\n    \n    private class TestCase {\n\n        public Object solve() {\n            \n            int n = readInt();\n            int[] a  = readIntArray(n);\n            int i;\n            \n            int[] b = new int[n];\n            \n            int[] q = new int[n];\n            int q_t = 0;\n            int q_h = 0;\n            \n            int j, mx = 0;\n            \n            for (i=0; i<n; i++)            \n            {\n                if (a[i]==mx)\n                {\n                    q[q_t++] = i;\n                }\n                else\n                {\n                    b[i] = mx;\n                    for (j=mx+1; j<a[i]; j++)\n                    {\n                        if (q_h==q_t)\n                        {\n                            return -1;\n                        }\n                        \n                        b[q[q_h++]] = j;\n                    }\n                    mx = a[i];\n                }\n            }\n            \n            for (i=q_h; i<q_t; i++)\n            {\n                b[q[i]] = a[n-1]+1;\n            }\n            \n            printArray(b, n);\n            \n            return null;\n            \n            //return strf(\"%f\", 0);\n            \n            //out.printf(\"Case #%d: \\n\", caseNumber);\n            //return null;\n        }\n        \n        public int caseNumber;\n        \n        TestCase(int number) {\n            caseNumber = number;\n        }\n        \n        public void run(){\n            Object r = this.solve();\n            \n            if ((r != null))\n            {\n                //outputCaseNumber(r);\n                out.println(r);\n            }\n        }\n        \n        public String impossible(){\n            return \"IMPOSSIBLE\";\n        }\n        \n        public String strf(String format, Object... args)\n        {\n            return String.format(format, args);\n        }\n        \n//        public void outputCaseNumber(Object r){\n//            //out.printf(\"Case #%d:\", caseNumber);\n//            if (r != null)\n//            {\n//              //  out.print(\" \");\n//                out.print(r);\n//            }\n//            out.print(\"\\n\");\n//        }\n    }\n\n    public void run() {\n        //while (true)\n        {\n            int t = multiply_tests ?  readInt() : 1;\n            for (int i = 0; i < t; i++) {\n                TestCase T = new TestCase(i + 1);\n                T.run();\n            }\n        }\n    }\n    \n\n    \n    public Main(BufferedReader _in, PrintStream _out){\n        in = _in;\n        out = _out;\n    }\n    \n\n    public static void main(String args[]) {\n        Locale.setDefault(Locale.US);\n        Main S;\n        try {\n            S = new Main(\n                        new BufferedReader(new InputStreamReader(System.in)),\n                        System.out\n                );\n        } catch (Exception e) {\n            return;\n        }\n        \n        S.run();\n        \n    }\n\n    private StringTokenizer tokenizer = null;\n\n    public int readInt() {\n        return Integer.parseInt(readToken());\n    }\n\n    public long readLong() {\n        return Long.parseLong(readToken());\n    }\n\n    public double readDouble() {\n        return Double.parseDouble(readToken());\n    }\n\n    public String readLn() {\n        try {\n            String s;\n            while ((s = in.readLine()).length() == 0);\n            return s;\n        } catch (Exception e) {\n            return \"\";\n        }\n    }\n\n    public String readToken() {\n        try {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                tokenizer = new StringTokenizer(in.readLine());\n            }\n            return tokenizer.nextToken();\n        } catch (Exception e) {\n            return \"\";\n        }\n    }\n\n    public int[] readIntArray(int n) {\n        int[] x = new int[n];\n        readIntArray(x, n);\n        return x;\n    }\n    \n    public int[] readIntArrayBuf(int n) {\n        int[] x = new int[n];\n        readIntArrayBuf(x, n);\n        return x;\n    }\n\n    public void readIntArray(int[] x, int n) {\n        for (int i = 0; i < n; i++) {\n            x[i] = readInt();\n        }\n    }\n    \n    public long[] readLongArray(int n) {\n        long[] x = new long[n];\n        readLongArray(x, n);\n        return x;\n    }\n    \n    public long[] readLongArrayBuf(int n) {\n        long[] x = new long[n];\n        readLongArrayBuf(x, n);\n        return x;\n    }\n\n    public void readLongArray(long[] x, int n) {\n        for (int i = 0; i < n; i++) {\n            x[i] = readLong();\n        }\n    }\n\n    public void logWrite(String format, Object... args) {\n        if (!log_enabled) {\n            return;\n        }\n\n        out.printf(format, args);\n    }\n    \n    public void readLongArrayBuf(long[] x, int n) {\n        \n        char[]buf = new char[1000000];\n        long r = -1;\n        int k= 0, l = 0;\n        long d;\n        \n        while (true)\n        {\n            try{\n                l = in.read(buf, 0, 1000000);\n            }\n            catch(Exception E){};\n            \n            for (int i=0; i<l; i++)\n            {\n                if (('0'<=buf[i])&&(buf[i]<='9'))\n                {\n                    if (r == -1)\n                    {\n                        r = 0;\n                    }\n                    d = buf[i] - '0';\n                    r = 10 * r + d;\n                }\n                else\n                {\n                    if (r != -1)\n                    {\n                        x[k++] = r;\n                    }\n                    \n                    r = -1;\n                }\n            }\n            \n            if (l<1000000)\n                return;\n        }\n    }\n    \n    public void readIntArrayBuf(int[] x, int n) {\n        \n        char[]buf = new char[1000000];\n        int r = -1;\n        int k= 0, l = 0;\n        int d;\n        \n        while (true)\n        {\n            try{\n                l = in.read(buf, 0, 1000000);\n            }\n            catch(Exception E){};\n            \n            for (int i=0; i<l; i++)\n            {\n                if (('0'<=buf[i])&&(buf[i]<='9'))\n                {\n                    if (r == -1)\n                    {\n                        r = 0;\n                    }\n                    d = buf[i] - '0';\n                    r = 10 * r + d;\n                }\n                else\n                {\n                    if (r != -1)\n                    {\n                        x[k++] = r;\n                    }\n                    \n                    r = -1;\n                }\n            }\n            \n            if (l<1000000)\n                return;\n        }\n    }\n    \n    public void printArray(long[] a, int n)\n    {\n        printArray(a, n, ' ');\n    }\n    \n    public void printArray(int[] a, int n)\n    {\n        printArray(a, n, ' ');\n    }\n            \n    public void printArray(long[] a, int n, char dl)\n    {\n        long x; \n        int i, l = 0;\n        for (i=0; i<n; i++)\n        {\n            x = a[i];\n            \n            if (x<0)\n            {\n                x = -x;\n                l++;\n            }\n            \n            if (x==0)\n            {\n                l++;\n            }\n            else\n            {\n                while (x>0)\n                {\n                    x /= 10;\n                    l++;\n                }\n            }\n        }\n        \n        l += n-1;\n        \n        char[] s = new char[l];\n        \n        l--;\n        boolean z;\n        for (i=n-1; i>=0;  i--)\n        {\n            x = a[i];\n            z = false;            \n            if (x<0)\n            {\n                x = -x;\n                z = true;\n            }\n            \n            do{\n                s[l--] = (char)('0' + (x % 10));\n                x /= 10;\n            } while (x>0);\n            \n            if (z)\n            {\n                s[l--] = '-';\n            }\n            \n            if (i>0)\n            {\n                s[l--] = dl;\n            }\n        }\n        \n        out.println(new String(s));\n    }\n    \n    public void printArray(int[] a, int n, char dl)\n    {\n        int x; \n        int i, l = 0;\n        for (i=0; i<n; i++)\n        {\n            x = a[i];\n            \n            if (x<0)\n            {\n                x = -x;\n                l++;\n            }\n            \n            if (x==0)\n            {\n                l++;\n            }\n            else\n            {\n                while (x>0)\n                {\n                    x /= 10;\n                    l++;\n                }\n            }\n        }\n        \n        l += n-1;\n        \n        char[] s = new char[l];\n        \n        l--;\n        boolean z;\n        for (i=n-1; i>=0;  i--)\n        {\n            x = a[i];\n            z = false;            \n            if (x<0)\n            {\n                x = -x;\n                z = true;\n            }\n            \n            do{\n                s[l--] = (char)('0' + (x % 10));\n                x /= 10;\n            } while (x>0);\n            \n            if (z)\n            {\n                s[l--] = '-';\n            }\n            \n            if (i>0)\n            {\n                s[l--] = dl;\n            }\n        }\n        \n        out.println(new String(s));\n    }\n    \n    public void printMatrix(int[][] a, int n, int m)\n    {\n        int x; \n        int i,j, l = 0;\n        for (i=0; i<n; i++)\n        {\n            for (j=0; j<m; j++)\n            {\n                x = a[i][j];\n            \n                if (x<0)\n                {\n                    x = -x;\n                    l++;\n                }\n\n                if (x==0)\n                {\n                    l++;\n                }\n                else\n                {\n                    while (x>0)\n                    {\n                        x /= 10;\n                        l++;\n                    }\n                }\n            }\n            \n            l += m-1;\n        }\n        \n        l += n-1;\n        \n        \n        char[] s = new char[l];\n        \n        l--;\n        boolean z;\n        for (i=n-1; i>=0;  i--)\n        {\n            for (j=m-1; j>=0;  j--)\n            {\n                x = a[i][j];\n                z = false;            \n                if (x<0)\n                {\n                    x = -x;\n                    z = true;\n                }\n\n                do{\n                    s[l--] = (char)('0' + (x % 10));\n                    x /= 10;\n                } while (x>0);\n\n                if (z)\n                {\n                    s[l--] = '-';\n                }\n\n                if (j>0)\n                {\n                    s[l--] = ' ';\n                }\n            }\n            \n            if (i>0)\n            {\n                 s[l--] = '\\n';\n            }\n        }\n        \n        out.println(new String(s));\n    }\n    \n    public void printMatrix(long[][] a, int n, int m)\n    {\n        long x; \n        int i,j, l = 0;\n        for (i=0; i<n; i++)\n        {\n            for (j=0; j<m; j++)\n            {\n                x = a[i][j];\n            \n                if (x<0)\n                {\n                    x = -x;\n                    l++;\n                }\n\n                if (x==0)\n                {\n                    l++;\n                }\n                else\n                {\n                    while (x>0)\n                    {\n                        x /= 10;\n                        l++;\n                    }\n                }\n            }\n            \n            l += m-1;\n        }\n        \n        l += n-1;\n        \n        \n        char[] s = new char[l];\n        \n        l--;\n        boolean z;\n        for (i=n-1; i>=0;  i--)\n        {\n            for (j=m-1; j>=0;  j--)\n            {\n                x = a[i][j];\n                z = false;            \n                if (x<0)\n                {\n                    x = -x;\n                    z = true;\n                }\n\n                do{\n                    s[l--] = (char)('0' + (x % 10));\n                    x /= 10;\n                } while (x>0);\n\n                if (z)\n                {\n                    s[l--] = '-';\n                }\n\n                if (j>0)\n                {\n                    s[l--] = ' ';\n                }\n            }\n            \n            if (i>0)\n            {\n                 s[l--] = '\\n';\n            }\n        }\n        \n        out.println(new String(s));\n    }\n    \n    \n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long powmod(long long a, long long b) {\n  long long res = 1;\n  a %= 1000000007;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % 1000000007;\n    a = a * a % 1000000007;\n  }\n  return res;\n}\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nint test_case = 1;\nconst int maxn = 10100;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (long long i = 0; i < n; i++) cin >> a[i];\n  vector<int> res(n);\n  bool doable = true;\n  for (long long i = 0; i < n; i++) {\n    if (a[i] > i + 1) {\n      doable = false;\n    }\n  }\n  if (doable) {\n    set<int> s;\n    for (long long i = 0; i < n; i++) {\n      s.insert(a[i]);\n    }\n    int proximo = 0;\n    while (s.count(proximo)) proximo++;\n    res[0] = proximo++;\n    for (int i = 1; i < n; i++) {\n      if (a[i] > a[i - 1])\n        res[i] = a[i - 1];\n      else {\n        while (s.count(proximo)) proximo++;\n        res[i] = proximo++;\n      }\n    }\n    for (long long i = 0; i < n; i++) cout << res[i] << \" \";\n    cout << \"\\n\";\n  } else {\n    cout << \"-1\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\npublic class code {\n\tpublic static void main(String[] args)throws IOException {\n\t\tFastReader sc = new FastReader();\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint arr[] = new int[n];\n\n\t\tTreeSet<Integer> set = new TreeSet<>();\n\t\tfor (int i = 0; i < 1000000; i++) {\n\t\t\tset.add(i);\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t\tset.remove(arr[i]);\n\t\t}\n\t\tint ans[] = new int[n];\n\t\tArrays.fill(ans, -1);\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\tans[i] = arr[i - 1];\n\t\t\t}\n\t\t}\n\t\tint j = 0;\n\t\tfor (int i : set) {\n\t\t\twhile (j < n && ans[j] != -1) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (j < n && ans[j] == -1)\n\t\t\t\tans[j] = i;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tSystem.out.print(ans[i] + \" \");\n\t\t}\n\n\n\t}\n}\n\n\n\n\n\nclass FastReader {\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tpublic FastReader() {\n\t\tbr = new BufferedReader(new\n\t\t                        InputStreamReader(System.in));\n\t}\n\n\tString next() {\n\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException  e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n\n\tString nextLine() {\n\t\tString str = \"\";\n\t\ttry {\n\t\t\tstr = br.readLine();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn str;\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst long long LINF = 4557430888798830399;\nconst int MOD = 998244353;\nint n;\nint a[100005];\nint b[100005];\nstack<int> STK;\nvoid TestCase() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; ++i) {\n    if (a[i] > i) {\n      puts(\"-1\");\n      return;\n    }\n  }\n  while (!STK.empty()) STK.pop();\n  for (int i = 1; i <= n; ++i) {\n    b[i] = 1000000;\n    STK.push(i);\n    if (a[i] != a[i - 1]) {\n      int tmp = a[i - 1];\n      while (tmp < a[i] && !STK.empty()) {\n        int u = STK.top();\n        STK.pop();\n        b[u] = tmp;\n        ++tmp;\n      }\n      if (tmp != a[i]) {\n        puts(\"-1\");\n        return;\n      }\n    }\n  }\n  for (int i = 1; i <= n; ++i) printf(\"%d%c\", b[i], \" \\n\"[i == n]);\n  return;\n}\nint main() {\n  int t = 1;\n  for (int tid = 1; tid <= t; ++tid) {\n    TestCase();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\ndef f(i,j):\n\tfor x in range(i+1,j):\n\t\ts.append(x)\n#for _ in range(int(input())):\nn=int(input())\n#\tn=map(int,input().split())\n#\ts=input().strip()\na=list(map(int,input().split()))\nb=[10**6]*n\ns=[]\nind=[]\nif a[0]==1:b[0]=0\nelse:ind.append(0)\nfor i in range(1,n):\n\tif a[i]>a[i-1]:\n\t\tb[i]=a[i-1]\n\t\tf(a[i-1],a[i])\n\telse:ind.append(i)\nind=ind[::-1]\nfor x in s:\n\tb[ind.pop()]=x\nprint(*b)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math \nfrom decimal import *\ndef I(): return int(sys.stdin.readline())\ndef IL(): return list(map(int,sys.stdin.readline().strip().split()))\ndef ILS(): return list(map(str,sys.stdin.readline().strip().split()))\n\nn = I()\na = IL()\nb = [-1 for x in a]\nflag = 1\nm = {}\nfor i in range(n):\n\tm[a[i]] = i+1\nfor x in m :\n\tif m[x] < n :\n\t\tb[m[x]] = x\n\nc =  []\nfor i in range(2*n+1):\n\tif i in m : continue\n\tc.append(i)\n\nc.sort()\nx = 0\ni=0;j=0\nwhile i<n and j<2*n :\n\tif b[i]!= -1 : \n\t\ti+=1 \n\t\tcontinue\n\tb[i] = c[j]\n\tj+=1\n\ti+=1\ncheck = [-1 for i in a]\ntemp =0 \nmp = {}\n# for i in range(2*n+1):\n# \tmp[i] =\nfor i in range(n):\n\tmp[b[i]] = 1\n\tif b[i] == temp :\n\t\twhile temp in mp and mp[temp] != 0:\n\t\t\ttemp+=1\n\tcheck[i] = temp\n# print(check)\n# print(a)\n# print(b)\nfor i in range(n):\n\tif check[i]!= a[i] :\n\t\tflag = 0 \n\t\tbreak\nif flag == 1 :\n\tfor bb in b : print(bb,end=\" \")\n\tprint()\nelse : print(-1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = list(map(int,input().split()))\nb = [-1 for i in range(n)]\n\nfor i in range(1,n):\n\n\tif a[i] != a[i-1]:\n\t\tb[i] = a[i-1]\n\n\nMEX = 0\nj = 0\n# print(b)\nl = []\nwhile j <= n-1:\n\n\tif MEX < a[j]:\n\t\tl.append(MEX)\n\t\tMEX = MEX + 1\n\telif MEX == a[j]:\n\t\t# print(j)\n\t\tMEX = MEX + 1\n\t\tj = j + 1\n\telif MEX > a[j]:\n\t\t# print(MEX,\"--\")\n\t\tj = j + 1\n\telse:\n\t\tl.append(MEX)\n\t\tMEX = MEX + 1\nwhile len(l) < n:\n\tl.append(MEX)\n\tMEX = MEX + 1\n\nj = 0\nfor i in range(n):\n\n\tif b[i] == -1:\n\t\tb[i] = l[j]\n\t\tj = j + 1\nprint(*b)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int,input().split()))\n\nn,=I()\nl=I()\nb=[-1]*n\nvis=[0]*(n+1)\nk=0;vis[l[-1]]=1\nfor i in range(n-1,0,-1):\n\tif l[i]!=l[i-1]:\n\t\tb[i]=l[i-1]\n\t\tvis[l[i-1]]=1\nfor i in range(n):\n\tif b[i]==-1:\n\t\twhile vis[k]==1:\n\t\t\tk+=1\n\t\tb[i]=k;k+=1\nprint(*b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nclass C {\n public:\n  int num;\n  int numr;\n  int deno;\n};\nvoid dfs(int s, int *vis, int **catche, vector<int> &vec, int n) {\n  vis[s] = 0;\n  vec.push_back(s);\n  for (int i = 0; i < n; i++) {\n    if (vis[i] != 0 && catche[s][i] == 1) {\n      dfs(i, vis, catche, vec, n);\n    }\n  }\n  return;\n}\nvoid testcase() {\n  int n;\n  cin >> n;\n  unordered_map<int, bool> m, m2, m3;\n  int *a = new int[n];\n  int *b = new int[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  bool ok = true;\n  for (int i = n - 1; i >= 0; i--) {\n    int size = i + 1;\n    int meresechote = a[i] - 0;\n    if (size < meresechote) ok = false;\n    m[a[i]] = false;\n  }\n  if (!ok) {\n    cout << -1 << \"\\n\";\n    return;\n  }\n  for (int i = n - 1; i >= 1; i--) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      m3[i] = false;\n    }\n  }\n  int num = 0;\n  for (int i = 0; i < n; i++) {\n    if (m3.count(i) == 0) {\n      while (m.count(num) == 1) {\n        num++;\n      }\n      b[i] = num;\n      num++;\n    }\n    cout << b[i] << \" \";\n  }\n  cout << \"\\n\";\n  return;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t = 1;\n  while (t--) {\n    testcase();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vll = vector<ll>;\nusing pll = pair<ll, ll>;\nusing ld = long double;\nvoid solve() {\n  ll n;\n  cin >> n;\n  vll A(n);\n  for (int i = 0; i < n; i++) cin >> A[i];\n  vll can, vac;\n  vll ans(n, -1 * 1LL);\n  if (A[0] == 1) ans[0] = 0;\n  for (int i = 1; i < n; i++) {\n    if (A[i - 1] == A[i])\n      vac.push_back(i * 1LL);\n    else {\n      ans[i] = A[i - 1];\n      for (int j = A[i - 1] + 1; j < A[i]; j++) can.push_back(j * 1LL);\n    }\n  }\n  ll j = 0;\n  for (int i = 0; i < n && j < can.size(); i++)\n    if (ans[i] == -1) ans[i] = can[j++];\n  if (j < can.size()) {\n    cout << -1 << \"\\n\";\n    return;\n  }\n  for (int i = 0; i < n; i++)\n    if (ans[i] == -1 && i == 0)\n      ans[i] = ll(1e6);\n    else if (ans[i] == -1)\n      ans[i] = ans[i - 1];\n  for (auto i : ans) cout << i << \" \";\n}\nint main() {\n  cout << fixed;\n  solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nm=int(1e6)\nb=[-1]*n\ne=0\nv=[0]*m\nfor i in range(n):\n\tif a[i]!=e:\n\t\tb[i]=e\n\t\tv[e]=1\n\t\te=a[i]\t\nv[e]=1\nk=0\nfor i in range(n):\n\twhile v[k]==1:\n\t\tk+=1\n\tif(b[i]==-1):\n\t\tb[i]=k\n\t\tv[k]=1\nprint(*b)\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, a[1000005], now = 0, res[1000005];\nstack<long long> second;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n;\n  for (long long i = 1; i <= n; i++) cin >> a[i];\n  for (long long i = 1; i <= n; i++) {\n    if (now < a[i]) {\n      res[i] = now;\n      now++;\n      while (!second.empty() && now < a[i]) {\n        res[second.top()] = now;\n        second.pop();\n        now++;\n      }\n    } else {\n      second.push(i);\n    }\n  }\n  now++;\n  while (!second.empty()) {\n    res[second.top()] = now;\n    second.pop();\n  }\n  for (long long i = 1; i <= n; i++) cout << res[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nans=[-1]*n\nfor index in range(1,n):\n    if(a[index]!=a[index-1]):\n        ans[index]=a[index-1]\nnot_to_be_included=set(a)\ninit=0\nfor index in range(n):\n    if(ans[index]==-1):\n        while init in not_to_be_included:\n            init+=1\n        ans[index]=init\n        init+=1\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = acos(-1.0);\nconst double eps = 1e-6;\nconst int mod = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\nconst int maxn = 1e5 + 5;\nint n;\nint a[maxn], b[maxn];\nvector<int> ve;\nint main(void) {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  if (a[1] != 0 && a[1] != 1) {\n    puts(\"-1\");\n    return 0;\n  }\n  int las = 0;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == las)\n      ve.push_back(i);\n    else {\n      b[i] = las;\n      int diff = a[i] - las - 1;\n      if (ve.size() < diff) {\n        puts(\"-1\");\n        return 0;\n      }\n      int tp = las + 1;\n      while (diff--) {\n        b[ve.back()] = tp++;\n        ve.pop_back();\n      }\n      las = a[i];\n    }\n  }\n  while (!ve.empty()) {\n    b[ve.back()] = 1000000;\n    ve.pop_back();\n  }\n  for (int i = 1; i <= n; i++) {\n    printf(\"%d \", b[i]);\n  }\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": " import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.lang.Math.*;\n\nimport java.util.TreeSet;\n\npublic class Main {\n\tstatic ArrayList<Integer> adj[];\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\tpublic static long mod;\n\n\tstatic int [][]notmemo;\n\tstatic int k;\n\tstatic int[] a;\n\tstatic int b[];\n\tstatic int m;\n\tstatic int c[];\n\n\n\tstatic class Pair  implements Comparable<Pair>{\n    \tint v,cost,energy;\n\t\tpublic Pair(int a1,int a2,int e ) {\n\t\tv=a1;\n\t\tcost=a2;\n\t\tenergy=e;\n    \t}\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\tif(o.energy==this.energy)\n\t\t\treturn this.cost-o.cost;\n\t\treturn o.energy-this.energy;\n\t\t}\n    }\n    static Pair s1[];\n    static long s[];\n    static ArrayList<Pair> adjlist[];\n\tstatic int n1;\n\tstatic int n2;\n\tstatic int k1;\n\tstatic int k2;\n\tstatic int skip=0;\n\tpublic static void main(String args[]) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\tint n=sc.nextInt();\n\tint a[]=new int[n];\n\tHashSet<Integer> set=new HashSet<>();\n\tint count[]=new int[n+1];\n\tfor (int i = 0; i < a.length; i++) {\n\t\ta[i]=sc.nextInt();\n\t\tset.add(a[i]);\n\t\tcount[a[i]]++;\n\t}\n\tint start=1;\n\tint b[]=new int[n];\n\tcount[a[0]]--;\n\tb[0]=0;\n\tif(a[0]==0) {\n\t\tint zero=1;\n\t\twhile(set.contains(zero)) {\n\t\t\tzero++;\n\t\t}\n\t\tset.add(zero);\n\t\tb[0]=zero;\n\t\tstart=2;\n\t}\n\tfor (int i = 1; i < a.length; i++) {\n\tif(count[a[i-1]]==0) {\n\t\tb[i]=a[i-1];\n\t\tcount[a[i]]--;\n\t\t\n\t}\t\n\telse {\n\t\twhile(set.contains(start)) {\n\t\t\tstart++;\n\t\t}\n\t\tb[i]=start;\n\t\tstart++;\n\t\tcount[a[i]]--;\n\t}\n\t}\n\tfor(int x:b) {\n\t\tSystem.out.print(x+\" \");\n\t}\n\t\t\n\t\tout.flush();\t\n\t}\n\tstatic long cost[];\n\tstatic long total;\n\tstatic void dfscalc(int u ,int p) {\n\t\tvis[u]=true;\n\t\tfor(int v:adj[u]) {\n\t\t\tif(!vis[v]) {\n\t\t\t\tdfscalc(v,u);\n\t\t\t}\n\t\t}\n\t\tlong mixed=Math.min(b[u],c[u]);\n\t\ttotal+=(1l*mixed*1l*cost[u]*1l*2*1l);\n\t\tb[u]-=mixed;\n\t\tc[u]-=mixed;\n\t\tb[p]+=b[u];\n\t\tc[p]+=c[u];\n\t}\n\tstatic void dfsvstobestcost(int u ,int p) {\n\t\tvis[u]=true;\n\t\tcost[u]=Math.min(cost[u],cost[p]);\n\t\t\n\t\tfor(int v:adj[u]) {\n\t\t\tif(!vis[v]) {\n\t\t\t\tdfsvstobestcost(v,u);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic int backtobackdp(int i,int maxsofar,int state) {\n\t\tif(i==n) {\n\t\tif(state==0)\n\t\t\treturn 0;\n\t\treturn (32-maxsofar);\n\t\t}\n\t\tif(memo[state][maxsofar][i]!=-1) {\n\t\t\treturn memo[state][maxsofar][i];\n\t\t}\n\t\tint ans=0;\n\t\tif(state==0) {\n\t\t\tans=backtobackdp(i+1,maxsofar,state);\n\t\t\tans=Math.max(ans,backtobackdp(i+1,Math.max(maxsofar,a[i]+32),1)+a[i]);\n\t\t}\n\t\telse {\n\t\t\tans-=(maxsofar-32);\n\t\t\tans=Math.max(ans,backtobackdp(i+1,Math.max(maxsofar,a[i]+32),1)+a[i]);\n\t\t}\n\t\treturn memo[state][maxsofar][i]=ans;\n\t}\n\tstatic int reali,realj;\n\t static int dx[]= {1,-1,0,0};\n\t static int dy[]= {0,0,1,-1};\n\t static char curchar;\n\t\n\t\n\n\n\n\tprivate static int lcm(int a2, int b2) {\n\treturn (a2*b2)/gcd(a2,b2);\n\t}\n\tstatic boolean visit[][];\n\n\tstatic Boolean zero[][];\n\tstatic int small[];\n\t\n\t\t\n\t\t\n\t\t\n\t\n\tstatic int idx=0;\n\t\n\tstatic long dpdp[][][][];\n\tstatic int modd=(int) 1e8;\n\t\n\t\t\n\n\n\tstatic class Edge implements Comparable<Edge>\n\t{\n\t\tint node;long cost;\n\t\t\n\t\tEdge(int a, long b) { node = a;\tcost = b; }\n\t\t\n\t\tpublic int compareTo(Edge e){ return Long.compare(cost,e.cost);\t}\n\t}\n\t\n        static void sieve(int N)\t// O(N log log N) \n\t{\n\t\tisComposite = new int[N+1];\t\t\t\t\t\n\t\tisComposite[0] = isComposite[1] = 1;\t\t\t// 0 indicates a prime number\n\t\tprimes = new ArrayList<Integer>();\n \n\t\tfor (int i = 2; i <= N; ++i) \t\t\t\t\t//can loop till i*i <= N if primes array is not needed O(N log log sqrt(N)) \n\t\t\tif (isComposite[i] == 0) \t\t\t\t\t//can loop in 2 and odd integers for slightly better performance\n\t\t\t{\n\t\t\t\tprimes.add(i);\n\t\t\t\tif(1l * i * i <= N)\n\t\t\t\t\tfor (int j = i * i; j <= N; j += i)\t// j = i * 2 will not affect performance too much, may alter in modified sieve\n\t\t\t\t\t\tisComposite[j] = 1;\n\t\t\t}   \n\t}\n    static TreeSet<Integer> factors;\n    static ArrayList<Integer> primeFactors(int N)\t\t// O(sqrt(N) / ln sqrt(N))\n\t{\n\t\tArrayList<Integer> factors = new ArrayList<Integer>();\t\t//take abs(N) in case of -ve integers\n\t\tint idx = 0, p = primes.get(idx);\n\n\t\twhile(1l*p * p <= N)\n\t\t{\n\t\t\twhile(N % p == 0) { factors.add(p); N /= p; }\n\t\t\tp = primes.get(++idx);\n\t\t}\n\n\t\tif(N != 1)\t\t\t\t\t\t// last prime factor may be > sqrt(N)\n\t\t\tfactors.add(N);\t\t\t\t// for integers whose largest prime factor has a power of 1\n\t\treturn factors;\n\t}\n    \n    static String y;\n    \tstatic int nomnom[];\n\tstatic long fac[];\n\t\n\n\n\n\tstatic boolean f = true;\n\n\tstatic class SegmentTree { // 1-based DS, OOP\n\n\t\tint N; // the number of elements in the array as a power of 2 (i.e. after padding)\n\t\tint[] array, sTree, lazy;\n\n\t\tSegmentTree(int[] in) {\n\t\t\tarray = in;\n\t\t\tN = in.length - 1;\n\t\t\tsTree = new int[N << 1]; // no. of nodes = 2*N - 1, we add one to cross out index zero\n\t\t\tlazy = new int[N << 1];\n\t\t\t//build(1, 1, N);\n\t\t}\n\n\t\tvoid build(int node, int b, int e) // O(n)\n\t\t{\n\t\t\tif (b == e)\n\t\t\t\tsTree[node] = array[b];\n\t\t\telse {\n\t\t\t\tint mid = b + e >> 1;\n\t\t\t\tbuild(node << 1, b, mid);\n\t\t\t\tbuild(node << 1 | 1, mid + 1, e);\n\t\t\t\tsTree[node] = sTree[node << 1] + sTree[node << 1 | 1];\n\t\t\t}\n\t\t}\n\n\t\tvoid update_point(int index, int val) // O(log n)\n\t\t{\n\t\t\tindex += N - 1;\t\t\t\t\n\t\t\tsTree[index] = val;\t\t\t\n\t\t\twhile(index>1)\t\t\t\t\n\t\t\t{\n\t\t\t\tindex >>= 1;\n\t\t\t\tsTree[index] = Math.max(sTree[index<<1] ,sTree[index<<1|1]);\t\t\n\t\t\t}\n\t\t}\n\n\t\tvoid update_range(int i, int j, int val) // O(log n)\n\t\t{\n\t\t\tupdate_range(1, 1, N, i, j, val);\n\t\t}\n\n\t\tvoid update_range(int node, int b, int e, int i, int j, int val) {\n\t\t\tif (i > e || j < b)\n\t\t\t\treturn;\n\t\t\tif (b >= i && e <= j) {\n\t\t\t\tsTree[node] += (e - b + 1) * val;\n\t\t\t\tlazy[node] += val;\n\t\t\t} else {\n\t\t\t\tint mid = b + e >> 1;\n\t\t\t\tpropagate(node, b, mid, e);\n\t\t\t\tupdate_range(node << 1, b, mid, i, j, val);\n\t\t\t\tupdate_range(node << 1 | 1, mid + 1, e, i, j, val);\n\t\t\t\tsTree[node] = sTree[node << 1] + sTree[node << 1 | 1];\n\t\t\t}\n\n\t\t}\n\n\t\tvoid propagate(int node, int b, int mid, int e) {\n\t\t\tlazy[node << 1] += lazy[node];\n\t\t\tlazy[node << 1 | 1] += lazy[node];\n\t\t\tsTree[node << 1] += (mid - b + 1) * lazy[node];\n\t\t\tsTree[node << 1 | 1] += (e - mid) * lazy[node];\n\t\t\tlazy[node] = 0;\n\t\t}\n\n\t\tint query(int i, int j) {\n\t\t\treturn query(1, 1, N, i, j);\n\t\t}\n\n\t\tint query(int node, int b, int e, int i, int j) // O(log n)\n\t\t{\n\t\t\tif (i > e || j < b)\n\t\t\t\treturn 0;\n\t\t\tif (b >= i && e <= j)\n\t\t\t\treturn sTree[node];\n\t\t\tint mid = b + e >> 1;\n\t\t\t// propagate(node, b, mid, e);\n\t\t\tint q1 = query(node << 1, b, mid, i, j);\n\t\t\tint q2 = query(node << 1 | 1, mid + 1, e, i, j);\n\t\t\treturn Math.max(q1,q2);\n\n\t\t}\n\t}\n\n\tstatic int[][][] memo;\n\n\n\tstatic class UnionFind {\n\t\tint[] p, rank, setSize;\n\t\tint numSets;\n\t\tint max[];\n\n\t\tpublic UnionFind(int N) {\n\t\t\tp = new int[numSets = N];\n\t\t\trank = new int[N];\n\t\t\tsetSize = new int[N];\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tp[i] = i;\n\t\t\t\tsetSize[i] = 1;\n\t\t\t}\n\t\t}\n\n\t\tpublic int findSet(int i) {\n\t\t\treturn p[i] == i ? i : (p[i] = findSet(p[i]));\n\t\t}\n\n\t\tpublic boolean isSameSet(int i, int j) {\n\t\t\treturn findSet(i) == findSet(j);\n\t\t}\n\t\tpublic int chunion(int i,int j, int x2) {\n\t\t\tif (isSameSet(i, j))\n\t\t\t\treturn 0;\n\t\t\tnumSets--;\n\t\t\tint x = findSet(i), y = findSet(j);\n\t\t\tint z=findSet(x2);\n\t\t\tp[x]=z;;\n\t\t\tp[y]=z;\n\t\treturn x;\n\t\t}\n\n\t\tpublic void unionSet(int i, int j) {\n\t\t\tif (isSameSet(i, j))\n\t\t\t\treturn;\n\t\t\tnumSets--;\n\t\t\tint x = findSet(i), y = findSet(j);\n\t\t\tif (rank[x] > rank[y]) {\n\t\t\t\tp[y] = x;\n\t\t\t\tsetSize[x] += setSize[y];\n\n\n\t\t\t} else {\n\t\t\t\tp[x] = y;\n\t\t\t\tsetSize[y] += setSize[x];\n\t\t\t\tif (rank[x] == rank[y])\n\t\t\t\t\trank[y]++;\n\n\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\tpublic int numDisjointSets() {\n\t\t\treturn numSets;\n\t\t}\n\n\t\tpublic int sizeOfSet(int i) {\n\t\t\treturn setSize[findSet(i)];\n\t\t}\n\t}\n\n\t/**\n\t * private static void trace(int i, int time) { if(i==n) return;\n\t * \n\t * \n\t * long ans=dp(i,time);\n\t * if(time+a[i].t<a[i].burn&&(ans==dp(i+1,time+a[i].t)+a[i].cost)) {\n\t * \n\t * trace(i+1, time+a[i].t);\n\t * \n\t * l1.add(a[i].idx); return; } trace(i+1,time);\n\t * \n\t * }\n\t **/\n\n\tstatic class incpair implements Comparable<incpair> {\n\t\tint a;\n\t\tlong b;\n\t\tint idx;\n\n\t\tincpair(int a, long dirg, int i) {\n\t\t\tthis.a = a;\n\t\t\tb = dirg;\n\t\t\tidx = i;\n\t\t}\n\n\t\tpublic int compareTo(incpair e) {\n\t\t\treturn (int) (b - e.b);\n\t\t}\n\t}\n\n\tstatic class decpair implements Comparable<decpair> {\n\t\tint a;\n\t\tlong b;\n\t\tint idx;\n\n\t\tdecpair(int a, long dirg, int i) {\n\t\t\tthis.a = a;\n\t\t\tb = dirg;\n\t\t\tidx = i;\n\t\t}\n\n\t\tpublic int compareTo(decpair e) {\n\t\t\treturn (int) (e.b - b);\n\t\t}\n\t}\n\n\tstatic long allpowers[];\n\n\tstatic class Quad implements Comparable<Quad> {\n\t\tint u;\n\t\tint v;\n\t\tchar state;\n\t\tint turns;\n\n\t\tpublic Quad(int i, int j, char c, int k) {\n\t\t\tu = i;\n\t\t\tv = j;\n\t\t\tstate = c;\n\t\t\tturns = k;\n\t\t}\n\n\t\tpublic int compareTo(Quad e) {\n\t\t\treturn (int) (turns - e.turns);\n\t\t}\n\n\t}\n\n\tstatic long dirg[][];\n\tstatic Edge[] driver;\n\n\tstatic int n;\n\n\tstatic long manhatandistance(long x, long x2, long y, long y2) {\n\t\treturn Math.abs(x - x2) + Math.abs(y - y2);\n\t}\n\n\tstatic long fib[];\n\n\tstatic long fib(int n) {\n\t\tif (n == 1 || n == 0) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (fib[n] != -1) {\n\t\t\treturn fib[n];\n\t\t} else\n\t\t\treturn fib[n] = ((fib(n - 2) % mod + fib(n - 1) % mod) % mod);\n\t}\n\n\tstatic class Point  implements Comparable<Point>{\n\t\tlong x, y;\n\n\t\tPoint(long counth, long counts) {\n\t\t\tx = counth;\n\t\t\ty = counts;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Point p )\n\t\t{\n\t\t\treturn Long.compare(p.y*1l*x, p.x*1l*y);\n\t\t}\n\t\t\n\n\n\t}\n\n\tstatic long[][] comb;\n\n\tstatic class Triple implements Comparable<Triple> {\n\n\t\tint l;\n\t\tint r;\n\t\tlong cost;\n\t\tint idx;\n\n\t\tpublic Triple(int a, int b, long l1, int l2) {\n\t\t\tl = a;\n\t\t\tr = b;\n\t\t\tcost = l1;\n\t\t\tidx = l2;\n\t\t}\n\n\t\tpublic int compareTo(Triple x) {\n\t\t\tif (l != x.l || idx == x.idx)\n\t\t\t\treturn l - x.l;\n\t\t\treturn -idx;\n\t\t}\n\n\t}\n\n\tstatic TreeSet<Long> primeFactors(long N) // O(sqrt(N) / ln sqrt(N))\n\t{\n\t\tTreeSet<Long> factors = new TreeSet<Long>(); // take abs(N) in case of -ve integers\n\t\tint idx = 0, p = primes.get(idx);\n\n\t\twhile (p * p <= N) {\n\t\t\twhile (N % p == 0) {\n\t\t\t\tfactors.add((long) p);\n\t\t\t\tN /= p;\n\t\t\t}\n\t\t\tif (primes.size() > idx + 1)\n\t\t\t\tp = primes.get(++idx);\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (N != 1) // last prime factor may be > sqrt(N)\n\t\t\tfactors.add(N); // for integers whose largest prime factor has a power of 1\n\t\treturn factors;\n\t}\n\n\tstatic boolean visited[];\n\n\t/**\n\t * static int bfs(int s) { Queue<Integer> q = new LinkedList<Integer>();\n\t * q.add(s); int count=0; int maxcost=0; int dist[]=new int[n]; dist[s]=0;\n\t * while(!q.isEmpty()) {\n\t * \n\t * int u = q.remove(); if(dist[u]==k) { break; } for(Pair v: adj[u]) {\n\t * maxcost=Math.max(maxcost, v.cost);\n\t * \n\t * \n\t * \n\t * if(!visited[v.v]) {\n\t * \n\t * visited[v.v]=true; q.add(v.v); dist[v.v]=dist[u]+1; maxcost=Math.max(maxcost,\n\t * v.cost); } }\n\t * \n\t * } return maxcost; }\n\t **/\n\tpublic static boolean FindAllElements(int n, int k) {\n\t\tint sum = k;\n\t\tint[] A = new int[k];\n\t\tArrays.fill(A, 0, k, 1);\n\n\t\tfor (int i = k - 1; i >= 0; --i) {\n\n\t\t\twhile (sum + A[i] <= n) {\n\n\t\t\t\tsum += A[i];\n\t\t\t\tA[i] *= 2;\n\t\t\t}\n\t\t}\n\t\tif (sum == n) {\n\t\t\treturn true;\n\t\t} else\n\t\t\treturn false;\n\t}\n\n\tstatic boolean[] vis2;\n\n\tstatic boolean f2 = false;\n\n\tstatic long[][] matMul(long[][] a2, long[][] b, int p, int q, int r) // C(p x r) = A(p x q) x (q x r) -- O(p x q x\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// r)\n\t{\n\t\tlong[][] C = new long[p][r];\n\t\tfor (int i = 0; i < p; ++i) {\n\t\t\tfor (int j = 0; j < r; ++j) {\n\t\t\t\tfor (int k = 0; k < q; ++k) {\n\t\t\t\t\tC[i][j] = (C[i][j] + (a2[i][k] % mod * b[k][j] % mod)) % mod;\n\t\t\t\t\tC[i][j] %= mod;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\treturn C;\n\t}\n\tpublic static int[] schuffle(int[] a2) {\n\t\tfor (int i = 0; i < a2.length; i++) {\n\t\t\tint x =  (int) (Math.random() * a2.length);\n\t\t\tint temp = a2[x];\n\t\t\ta2[x] = a2[i];\n\t\t\ta2[i] = temp;\n\t\t}\n\t\treturn a2;\n\t}\n\n\tstatic int memo1[];\n\n\tstatic boolean vis[];\n\tstatic TreeSet<Integer> set = new TreeSet<Integer>();\n\n\tstatic long modPow(long ways, long count, long mod) // O(log e)\n\t{\n\t\tways %= mod;\n\t\tlong res = 1;\n\t\twhile (count > 0) {\n\t\t\tif ((count & 1) == 1)\n\t\t\t\tres = (res * ways) % mod;\n\t\t\tways = (ways * ways) % mod;\n\t\t\tcount >>= 1;\n\t\t}\n\t\treturn res % mod;\n\t}\n\n\tstatic int gcd(int ans, int b) {\n\t\tif (b == 0) {\n\t\t\treturn ans;\n\t\t}\n\t\treturn gcd(b, ans % b);\n\t}\n\n\tstatic int[] isComposite;\n\tstatic int[] valid;\n\n\tstatic ArrayList<Integer> primes;\n\tstatic ArrayList<Integer> l1;\n\n\t\n\tstatic TreeSet<Integer> primus = new TreeSet<Integer>();\n\t\n\tstatic void sieveLinear(int N)\n\t{\n\t\tint[] lp = new int[N + 1];\t\t\t\t\t\t\t\t//lp[i] = least prime divisor of i\n\t\tfor(int i = 2; i <= N; ++i)\n\t\t{\n\t\t\tif(lp[i] == 0)\n\t\t\t{\n\t\t\t\tprimus.add(i);\n\t\t\t\tlp[i] = i;\n\t\t\t}\n\t\t\tint curLP = lp[i];\n\t\t\tfor(int p: primus)\n\t\t\t\tif(p > curLP || p * i > N)\n\t\t\t\t\tbreak;\n\t\t\t\telse\n\t\t\t\t\tlp[p * i] = i;\n\t\t}\n\t}\n\t\n\n\tpublic static long[] schuffle(long[] a2) {\n\t\tfor (int i = 0; i < a2.length; i++) {\n\t\t\tint x =  (int) (Math.random() * a2.length);\n\t\t\tlong temp = a2[x];\n\t\t\ta2[x] = a2[i];\n\t\t\ta2[i] = temp;\n\t\t}\n\t\treturn a2;\n\t}\n\n\tstatic int V;\n\tstatic long INF = (long) 1E16;\n\n\tstatic class Edge2 {\n\t\tint node;\n\t\tlong cost;\n\t\tlong next;\n\n\t\tEdge2(int a, int c, Long long1) {\n\t\t\tnode = a;\n\t\t\tcost = long1;\n\t\t\tnext = c;\n\t\t}\n\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic Long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\n\t\tpublic int[] nxtArr(int n) throws IOException {\n\t\t\tint[] ans = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tans[i] = nextInt();\n\t\t\treturn ans;\n\t\t}\n\t\t\n\t}\n\tpublic static int[] sortarray(int a[]) {\n\t\tschuffle(a);\n\t\tArrays.sort(a);\n\t\treturn a;\n\t\t}\n\t\tpublic static long[] sortarray(long a[]) {\n\t\t\tschuffle(a);\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\ndef prog():\n    n = int(input())\n    array = list(map(int,input().split()))\n    output = [-1]*n\n    to_place = []\n    prev = -1\n    for i in range(n):\n        curr = array[i]\n        if curr != prev:\n            output[i] = prev\n            to_place.extend(list(range(prev+1,curr))[::-1])\n            prev = curr\n    idx = 0\n    for i in range(n):\n        if output[i] == -1:\n            if idx >= len(to_place):\n                output[i] = 10**6\n            else:\n                output[i] = to_place[idx]\n                idx += 1\n    sys.stdout.write(\" \".join(map(str,output)) + '\\n')\nprog()\n            \n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nz=list(map(int,input().split()))\nans=[-1 for i in range(len(z))]\nfrom collections import *\nal=defaultdict(int)\nfor i in range(1,len(z)):\n    if(z[i]!=z[i-1]):\n        ans[i]=z[i-1]\nfor i in range(len(z)):\n    al[z[i]]=1\ntemp=[]\nfor i in range(len(z)+1):\n    if(al[i]==0):\n        temp.append(i)\n\nc1=0\nfor i in range(len(ans)):\n    if(ans[i]==-1):\n        ans[i]=temp[c1]\n        c1+=1\nprint(*ans)\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [*map(int, input().split())]\n\ns1 = set([*range(n + 1)])\ns2 = set(arr)\ns1 = s1 - s2\n\ns1 = [*s1][::-1]\ns2 = [*s2][::-1]\n\nans = [s1[-1]]\n\ndel s1[-1]\n\nfor i in range(1, n):\n    if arr[i] != arr[i - 1]:\n        ans.append(s2[-1])\n        del s2[-1]\n    else:\n        ans.append(s1[-1])\n        del s1[-1]\n\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long INF = 0x7FFFFFFFFFFFFFFF;\nlong long binpow(long long a, long long b) {\n  long long res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a;\n    a = a * a;\n    b >>= 1;\n  }\n  return res;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long n;\n  cin >> n;\n  vector<long long> a(n);\n  for (long long i = 0; i < n; ++i) cin >> a[i];\n  ;\n  vector<long long> b(n, -1);\n  for (long long i = 1; i < n; ++i) {\n    if (a[i - 1] != a[i]) b[i] = a[i - 1];\n  }\n  long long cnt = 0;\n  set<long long> st;\n  for (long long i = 0; i < n; ++i) st.insert(a[i]);\n  for (long long i = 0; i < n; ++i) {\n    if (b[i] == -1) {\n      while (st.find(cnt) != st.end()) cnt++;\n      b[i] = cnt;\n      cnt++;\n    }\n  }\n  for (auto x : b) cout << x << ' ';\n  cout << '\\n';\n  ;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport bisect as b\nimport math\nfrom collections import defaultdict as dd\ninput=sys.stdin.readline\nmo=10**9+7\ndef cin():\n    return map(int,sin().split())\ndef ain():            \n    return list(map(int,sin().split()))\ndef sin():\n    return input()\ndef inin():\n    return int(input())\ndef pref(a,n):             #preSum array\n    pre=[0]*n\n    pre[0]=a[0]\n    for i in range(1,n):\n        pre[i]=a[i]+pre[i-1]\n    return pre\n##for _ in range(inin()):\nn=inin()\nl=ain()\nans=[i for i in range(n+1)]\nfor i in range(n-1,-1,-1):\n    if(ans[i]>=l[i]):\n        ans[i+1],ans[l[i]]=ans[l[i]],ans[i+1]\nprint(*ans[:n])\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1000000007;\nconst long long MAXX = 1e6 + 5;\nlong long t, n, x;\nlong long a[MAXX];\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  if (n == 1) {\n    if (a[0] == 0) {\n      cout << \"1\" << endl;\n      return 0;\n    }\n    cout << \"0\" << endl;\n    return 0;\n  }\n  vector<long long> pos(n + 2, 0);\n  vector<long long> b(n + 2, 0);\n  for (long long i = 0; i <= n; i++) {\n    b[i] = i;\n    pos[i] = i;\n  }\n  long long y = 0;\n  for (long long i = 1; i < n; i++) {\n    if (a[i] != a[i - 1]) {\n      swap(b[pos[a[i - 1]]], b[i]);\n      swap(pos[a[i - 1]], pos[i]);\n      continue;\n    }\n  }\n  long long i = n;\n  swap(b[pos[a[i - 1]]], b[i]);\n  swap(pos[a[i - 1]], pos[i]);\n  bool f = true;\n  long long x = 0;\n  vector<bool> used(MAXX, false);\n  for (long long i = 0; i < n; i++) {\n    used[b[i]] = true;\n    while (used[x]) {\n      x++;\n    }\n    if (a[i] != x) {\n      f = false;\n      break;\n    }\n  }\n  if (!f) {\n    cout << \"-1\" << endl;\n    return 0;\n  }\n  for (long long i = 0; i < n; i++) {\n    cout << b[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 20;\nconst int M = 1e6 + 20;\nint a[N], ans[N];\nint vis[M] = {0};\nint main() {\n  cout.tie(0);\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    vis[a[i]]++;\n  }\n  int k = 0, cnt = 0;\n  while (vis[k] >= 1) {\n    k++;\n  }\n  vis[k] = 1;\n  ans[cnt++] = k;\n  for (int i = 1; i < n; i++) {\n    if (a[i] > a[i - 1]) {\n      ans[cnt++] = a[i - 1];\n    } else if (a[i] == a[i - 1]) {\n      while (vis[k] >= 1) {\n        k++;\n      }\n      vis[k] = 1;\n      ans[cnt++] = k;\n    }\n  }\n  for (int i = 0; i < cnt; i++) {\n    cout << ans[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double PI = acos(-1);\nlong long power(long long b, long long e, long long m) {\n  if (e == 0) return 1;\n  if (e & 1) return b * power(b * b % m, e / 2, m) % m;\n  return power(b * b % m, e / 2, m);\n}\nlong long power(long long b, long long e) {\n  if (e == 0) return 1;\n  if (e & 1) return b * power(b * b, e / 2);\n  return power(b * b, e / 2);\n}\ntemplate <typename T, typename U>\nstatic inline void amin(T &x, U y) {\n  if (y < x) x = y;\n}\ntemplate <typename T, typename U>\nstatic inline void amax(T &x, U y) {\n  if (x < y) x = y;\n}\ntemplate <typename T, typename U>\nostream &operator<<(ostream &os, const pair<T, U> &p) {\n  return os << '(' << p.first << \",\" << p.second << ')';\n}\nint _runtimeTerror_() {\n  long long n;\n  cin >> n;\n  long long a[n];\n  for (int i = 0; i < n; ++i) cin >> a[i];\n  long long ans[n];\n  memset(ans, -1, sizeof(ans));\n  int cur = 0, p = 0;\n  bool mark[1000005];\n  memset(mark, false, sizeof(mark));\n  if (a[0] == 1) {\n    ans[0] = 0, ++cur;\n    mark[0] = true;\n    mark[1] = true;\n  } else {\n    mark[0] = true;\n  }\n  for (int i = 1; i < n; ++i) {\n    if (a[i] != a[i - 1]) {\n      ans[i] = a[i - 1];\n      mark[a[i - 1]] = true;\n      mark[a[i]] = true;\n    } else {\n      ++p;\n    }\n  }\n  long long curp = 0;\n  for (int i = 0; i < n; ++i) {\n    if (ans[i] == -1) {\n      while (mark[curp]) ++curp;\n      ans[i] = curp;\n      ++curp;\n    }\n  }\n  for (int i = 0; i < n; ++i) cout << ans[i] << \" \";\n  return 0;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int TESTS = 1;\n  while (TESTS--) _runtimeTerror_();\n  cerr << \"\\n\" << 1.0 * clock() / CLOCKS_PER_SEC;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/***\n *    \u2588\u2588\u2588\u2588\u2588\u2588\u2557=====\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557====\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557====\u2588\u2588\u2588\u2588\u2588\u2588\u2557=\n *    \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557====\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d====\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d====\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n *    \u2588\u2588\u2551==\u2588\u2588\u2551====\u2588\u2588\u2588\u2588\u2588\u2557======\u2588\u2588\u2588\u2588\u2588\u2557======\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\n *    \u2588\u2588\u2551==\u2588\u2588\u2551====\u2588\u2588\u2554\u2550\u2550\u255d======\u2588\u2588\u2554\u2550\u2550\u255d======\u2588\u2588\u2554\u2550\u2550\u2550\u255d=\n *    \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d====\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557====\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557====\u2588\u2588\u2551=====\n *    \u255a\u2550\u2550\u2550\u2550\u2550\u255d=====\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d====\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d====\u255a\u2550\u255d=====\n *    ============================================\n */\n\nimport sun.misc.IOUtils;\nimport sun.nio.cs.KOI8_U;\n\nimport java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n\npublic class AA implements Runnable {\n\n\n    public void run() {\n        InputReader sc = new InputReader();\n        PrintWriter out = new PrintWriter(System.out);\n        int i=0,j=0,k=0;\n        int t=0;\n        //t=sc.nextInt();\n        for(int testcase = 0;testcase < t; testcase++)\n        {\n        }\n\n        int n=sc.nextInt();\n        int arr[]=new int[n];\n        int ans[]=new int[n];\n        Arrays.fill(ans,-1);\n        boolean present[]=new boolean[n+1];\n        for (i=0;i<n;i++)\n        {\n            arr[i]=sc.nextInt();\n            if (i>0)\n                if (arr[i-1]!=arr[i])\n                {\n                    ans[i]=arr[i-1];\n                    present[arr[i-1]]=true;\n                }\n        }\n        /*for (i=0;i<n;i++)\n            out.println(i+\" | \"+present[i]+\"   \"+ans[i]);\n        */\n        present[arr[n-1]]=true;\n        i=0;\n        j=0;\n        while (i<n)\n        {\n\n            while (i<n&&ans[i]!=-1)\n                i++;\n            while (j<n&&present[j])\n                j++;\n            //out.println(i+\"--------\"+j);\n            if (i<n)\n            ans[i]=j;\n            i++;\n            j++;\n        }\n        for (i=0;i<n;i++)\n            out.print(ans[i]+\" \");\n\n//================================================================================================================================\n        out.flush();\n        out.close();\n    }\n\n//================================================================================================================================\npublic static int[] sa(int n,InputReader sc)\n{\n    int inparr[]=new int[n];\n    for (int i=0;i<n;i++)\n        inparr[i]=sc.nextInt();\n    return inparr;\n}\n\n    public static long gcd(long a,long b){\n        return (a%b==0l)?b:gcd(b,a%b);\n    }\n    private static long lcm(long a, long b)\n    {\n        return a * (b / gcd(a, b));\n    }\n    public int egcd(int a, int b) {\n        if (a == 0)\n            return b;\n\n        while (b != 0) {\n            if (a > b)\n                a = a - b;\n            else\n                b = b - a;\n        }\n\n        return a;\n    }\n\n\n\n    public int countChar(String str, char c)\n    {\n        int count = 0;\n        for(int i=0; i < str.length(); i++)\n        {    if(str.charAt(i) == c)\n            count++;\n        }\n        return count;\n    }\n    static int binSearch(Integer[] inparr, int number){\n        int left=0,right=inparr.length-1,mid=(left+right)/2,ind=0;\n        while(left<=right){\n            if(inparr[mid]<=number){\n                ind=mid+1;\n                left=mid+1;\n            }\n            else\n                right=mid-1;\n            mid=(left+right)/2;\n        }\n        return ind;\n    }\n    static int binSearch(int[] inparr, int number){\n        int left=0,right=inparr.length-1,mid=(left+right)/2,ind=0;\n        while(left<=right){\n            if(inparr[mid]<=number){\n                ind=mid+1;\n                left=mid+1;\n            }\n            else\n                right=mid-1;\n            mid=(left+right)/2;\n        }\n        return ind;\n    }\n    static class Pair\n    {\n        int a,b;\n        Pair(int aa,int bb)\n        {\n            a=aa;\n            b=bb;\n        }\n        String get()\n        {\n            return a+\" \"+b;\n        }\n        String getrev()\n        {\n            return b+\" \"+a;\n        }\n    }\n\n    static boolean isPrime(long n) {\n        if(n < 2) return false;\n        if(n == 2 || n == 3) return true;\n        if(n%2 == 0 || n%3 == 0) return false;\n        long sqrtN = (long)Math.sqrt(n)+1;\n        for(long i = 6L; i <= sqrtN; i += 6) {\n            if(n%(i-1) == 0 || n%(i+1) == 0) return false;\n        }\n        return true;\n    }\n    static long factorial(long n)\n    {\n        if (n == 0)\n            return 1;\n        return n*factorial(n-1);\n    }\n//================================================================================================================================\n\n    static class InputReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public InputReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new AA(),\"Main\",1<<27).start();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\nt = 1\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    flg = True\n    res = list()\n    places = list()\n    if a[0] not in (0, 1):\n        flg = False\n    p = a[0]\n    cur = 0\n    if p:\n        res.append(0)\n        cur += 1\n    for i in range(1, n):\n        if a[i] > i+1:\n            flg = False\n            break\n        if a[i] != p:\n            for j in range(p+1, a[i]):\n                if cur >= i:\n                    if not places:\n                        flg = False\n                        break\n                    x = places.pop()\n                    res[x] = j\n                else:\n                    res.append(j)\n                    cur += 1\n            while cur < i:\n                res.append(1000000)\n                places.append(cur)\n                cur += 1\n            res.append(p)\n            cur += 1\n        p = a[i]\n    while cur < n:\n        res.append(1000000)\n        cur += 1\n    if flg:\n        print(\" \".join([str(x) for x in res]))\n    else:\n        print(-1)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(nullptr);\n  int n;\n  std::cin >> n;\n  std::vector<int> a(n + 2), b(n + 1, -1), c{-1};\n  for (int i = 1; i <= n; ++i) std::cin >> a[i];\n  a[n + 1] = n + 1;\n  for (int i = 0; i <= n; ++i) {\n    if (a[i] < a[i + 1]) {\n      b[i] = a[i];\n      c.push_back(a[i]);\n    }\n  }\n  c.push_back(n + 1);\n  for (int i = 0, j = 0; i < int(c.size()) - 1; ++i) {\n    for (int v = c[i + 1] - 1; v > c[i]; --v) {\n      while (b[j] != -1) ++j;\n      b[j++] = v;\n    }\n  }\n  for (int i = 0; i < n; ++i) std::cout << b[i] << \" \\n\"[i == n - 1];\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class Round_649D2P3 {\n    static final FS sc = new FS();\n    static final PrintWriter pw = new PrintWriter(System.out);\n\n    public static void main(String[] args) {\n        int n = sc.nextInt();\n        int[] a = sc.nextArray(n);\n        int flag = 0;\n        TreeSet<Integer> tree = new TreeSet<>();\n        for(int i=0; i<n; i++){\n            if(a[i]>i+1){\n                flag = 1;\n                break;\n            }\n            tree.add(a[i]);\n        }\n        if(flag==1){\n            System.out.println(\"-1\");\n            return;\n        }\n        String str = \"\";\n        StringBuilder s = new StringBuilder();\n        int j=0;\n        for(int i=0; i<n; i++){\n            if(i>0 && a[i]!=a[i-1]){\n                s.append(a[i-1]+\" \");\n                //str += Integer.toString(a[i-1])+\" \";\n            }\n            else{\n                while(tree.contains(j)){\n                    j++;\n                }\n                s.append(j+\" \");\n                //str += Integer.toString(j)+\" \";\n                j++;\n            }\n        }\n        System.out.println(s.toString());\n    }\n\n    static class FS {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception ignored) {\n                }\n            }\n            return st.nextToken();\n        }\n\n        int[] nextArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "def help():\n\tn = int(input())\n\tarr = list(map(int,input().split(\" \")))\n\n\tans_arr = [-1]*n\n\tdicti = {}\n\n\tif(arr[0]==1):\n\t\tans_arr[0] = 0\n\t\tdicti[0]=1\n\n\tfor i in range(1,n):\n\t\tif(arr[i] != arr[i-1]):\n\t\t\tans_arr[i]=arr[i-1]\n\t\t\tdicti[arr[i-1]]=1\n\tdicti[arr[-1]]=1\n\tm = 0\n\tfor i in range(n):\n\t\twhile dicti.get(m,-1)==1:\n\t\t\tm+=1\n\t\tif(ans_arr[i]==-1):\n\t\t\tans_arr[i]=m\n\t\t\tdicti[m]=1\n\n\tprint(*ans_arr)\n\nfor _ in range(1):\n\thelp()\n"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\nlist1=list(map(int,input().strip().split()))\n\nif list1[0]>=2:\n    print(-1)\n\nelse:\n\n\n    free=[]\n    curr=0\n\n    b=1\n    ans=[]\n    for i in range(n):\n        ans.append(-1)\n        \n\n    if list1[0]==0:\n        free.append(0)\n    elif list1[0]==1:\n        ans[0]=0\n        \n        \n    for i in range(1,n):\n        if list1[i]==list1[i-1]:\n            free.append(i)\n        else:\n            ans[i]=list1[i-1]\n            \n            temp1=len(free)-curr\n            temp2=list1[i]-list1[i-1]-1\n            \n            if temp2>temp2:\n                b=0\n                break\n            \n            for i in range(list1[i-1]+1,list1[i]):\n                ans[free[curr]]=i\n                curr+=1\n\n    if b==0:\n        print(-1)\n        \n    else:\n        maximum=list1[n-1]+1\n        for i in range(curr,len(free)):\n            ans[free[i]]=maximum\n\n        for val in ans:\n            print(val,end=\" \")\n        print()\n        \n        \n    \n    \n        \n        \n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint scan_int() {\n  int x;\n  if (!scanf(\"%d\", &x)) throw 1;\n  return x;\n}\nint main() {\n  int N = scan_int();\n  vector<int> A(N);\n  for (auto& x : A) x = scan_int();\n  vector<int> res(N, -1);\n  vector<bool> used(N + 10);\n  if (A[0] == 1) {\n    res[0] = 0;\n    used[0] = true;\n  }\n  for (int i = 1; i < N; ++i)\n    if (A[i] != A[i - 1]) {\n      res[i] = A[i - 1];\n      used[A[i - 1]] = true;\n    }\n  used[A[N - 1]] = true;\n  int p = 0;\n  for (int i = 0; i < N; ++i) {\n    if (res[i] == -1) {\n      while (used[p]) ++p;\n      used[p] = true;\n      res[i] = p;\n    }\n  }\n  for (int i = 0; i < N; ++i) {\n    if (i) printf(\" \");\n    printf(\"%d\", res[i]);\n  }\n  puts(\"\");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        final Scanner in = new Scanner(System.in);\n\n        final int n = in.nextInt();\n\n        final int[] a = new int[n];\n        boolean[] seen = new boolean[n + 1];\n\n        for (int i = 0; i < n; i += 1) {\n            a[i] = in.nextInt();\n            seen[a[i]] = true;\n        }\n\n        int firstUnseen = n + 1;\n        for (int i = 0; i <= n; i += 1) {\n            if (!seen[i]) {\n                firstUnseen = i;\n                break;\n            }\n        }\n\n        System.out.print(firstUnseen);\n        for (int i = 1; i < n; i += 1) {\n            if (a[i - 1] < a[i]) System.out.print(\" \" + a[i - 1]);\n            else {\n                for (int j = firstUnseen + 1; j <= n; j += 1) {\n                    if (!seen[j]) {\n                        firstUnseen = j;\n                        break;\n                    }\n                }\n\n                System.out.print(\" \" + firstUnseen);\n            }\n        }\n\n        System.out.println();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long n;\n  cin >> n;\n  long long arr[n + 1], ans[n + 1], present[100002];\n  memset(present, 0, sizeof(present));\n  for (long long x = 1; x <= n; x++) {\n    cin >> arr[x];\n    present[arr[x]] = 1;\n  }\n  for (long long x = 1; x <= n; x++) {\n    if (x == 1) {\n      if (arr[x] == 1) {\n        ans[x] = 0;\n        present[0] = 1;\n      } else {\n        for (long long y = 1; y <= 100000; y++) {\n          if (present[y] == 0) {\n            ans[x] = y;\n            present[y] = 1;\n            break;\n          }\n        }\n      }\n    } else {\n      if (arr[x] != arr[x - 1]) {\n        ans[x] = arr[x - 1];\n        present[ans[x]] = 1;\n      } else {\n        for (long long y = ans[x - 1]; y <= 100000; y++) {\n          if (present[y] == 0) {\n            ans[x] = y;\n            present[y] = 1;\n            break;\n          }\n        }\n      }\n    }\n  }\n  for (long long x = 1; x <= n; x++) {\n    cout << ans[x] << \" \";\n  }\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nx=0\ny=1\nt=set(a)\nfor i in a:\n    if i==x:\n        while y in t:\n            y+=1\n        print(y,end=\" \")\n        y+=1\n    else:\n        print(x,end=\" \")\n        x=i\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    N = int(input())\n    *A, = map(int, input().split())\n\n    for i, a in enumerate(A):\n        if i+1 < a:\n            print(-1)\n            return\n    else:\n        Us = set(range(N+1)) - set(A)\n        U = sorted(Us)\n        lU = len(U)\n\n        ui = 0\n        ans = []\n        pre = A[0]\n        for i, a in enumerate(A):\n            if pre != a:\n                ans.append(pre)\n            else:\n                if ui >= lU:\n                    print(-1)\n                    return\n                ans.append(U[ui])\n                ui += 1\n            pre = a\n\n        print(*ans)\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.HashSet;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Set;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Kraken7\n */\npublic class Main {\n\n  public static void main(String[] args) {\n    InputStream inputStream = System.in;\n    OutputStream outputStream = System.out;\n    Scanner in = new Scanner(inputStream);\n    PrintWriter out = new PrintWriter(outputStream);\n    TaskC solver = new TaskC();\n    solver.solve(1, in, out);\n    out.close();\n  }\n\n  static class TaskC {\n\n    public void solve(int testNumber, Scanner in, PrintWriter out) {\n      int n = in.nextInt();\n      int[] a = new int[n];\n      boolean fine = true;\n      Set<Integer> set = new HashSet<>();\n      for (int i = 0; i < n; i++) {\n        a[i] = in.nextInt();\n        set.add(a[i]);\n        if (a[i] > i + 1)\n          fine = false;\n      }\n      if (!fine) {\n        out.println(-1);\n        return;\n      }\n      int[] b = new int[n];\n      Arrays.fill(b, -1);\n      for (int i = 1; i < n; i++) {\n        if (a[i] != a[i - 1]) {\n          b[i] = a[i - 1];\n        }\n      }\n      int last = 0;\n      for (int i = 0; i < n; i++) {\n        if (b[i] != -1)\n          continue;\n        while (set.contains(last))\n          last++;\n        b[i] = last;\n        last++;\n      }\n      for (int i : b)\n        out.print(i + \" \");\n    }\n\n  }\n}\n\n"
        },
        {
            "language": 1,
            "solution": "FAST_IO = 1\nif FAST_IO:\n    import io, sys, atexit\n    rr = iter(sys.stdin.read().splitlines()).next\n    sys.stdout = _OUTPUT_BUFFER = io.BytesIO()\n    @atexit.register\n    def write():\n        sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\nelse:\n    rr = raw_input\nrri = lambda: int(rr())\nrrm = lambda: map(int, rr().split())\n\nfrom collections import deque\ndef solve(N, A):\n    free = deque()\n    ans = [-1] * N\n    low = 0\n    for i, x in enumerate(A):\n        free.append([i, x])\n        while low < x:\n            if not free: return\n            j, y = free.pop()\n            if low != y:  #success\n                ans[j] = low\n                low += 1\n            else: return\n\n    while free:\n        ans[free.pop()[0]] = 10**6\n    return ans\n\nN=rri()\nA=rrm()\nans = solve(N,A)\nif ans is None:\n    print -1\nelse:\n    print \" \".join(map(str, ans))\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n *\n * @author abacaba\n */\npublic class c {\n    public static void main(String[] args) {\n        FS in = new FS(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        \n//        int t = in.nextInt(); int c = 0; while(c++<t) {\n//            out.print(\"Case #\" + c + \": \");\n            new c().solve(in, out);\n//        }\n        \n        out.close();\n    }\n    \n    static int MAX = 10_000_000;\n    \n    void solve(FS in, PrintWriter out) {\n        int n = in.nextInt();\n        boolean[] has = new boolean[1_000_000];\n        int next = 0;\n        int[] arr = new int[n];\n        for(int i = 0; i < n; i++) {\n            has[arr[i] = in.nextInt()] = true;\n        }\n        for(int i = 0; i < n; i++) {\n            if(i != 0 && arr[i] != arr[i-1]) out.print(arr[i-1] + \" \");\n            else {\n                while(has[next]) next++;\n                out.print(next++ + \" \");\n            }\n        }\n        out.println();\n    }\n    \n    static class FS {\n        BufferedReader in; StringTokenizer tk;\n        public FS(InputStream st) {\n            in = new BufferedReader(new InputStreamReader(st));\n            tk = new StringTokenizer(\"\");\n        }\n        \n        public String next() {\n            if(tk.hasMoreTokens()) return tk.nextToken();\n            try { tk = new StringTokenizer(in.readLine()); } catch(Exception e) {}\n            return next();\n        }\n        \n        public int nextInt() { return Integer.parseInt(next()); }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = list(map(int, input().split()))\n\nA.insert(0, 0)\noutput = [-1]*(n+1)\nflag = 0\nlast = 0\nfor i, a in enumerate(A):\n    if a > i+1:\n        flag = 1\n        break\n    if i > 0:\n        if A[i] > A[i-1]:\n            output[i] = A[i-1]\nif flag:\n    print(-1)\nelse:\n    j = 1\n    while j < n+1 and output[j] != -1:\n        j += 1\n    for i, o in enumerate(output):\n        if o != -1:\n            for k in range(o+1, A[i]):\n                output[j] = k\n                while j < n+1 and output[j] != -1:\n                    j += 1\n    for i in range(1, len(output)):\n        o = output[i] if output[i] != -1 else A[n]+1\n        print(o, end=' ')\n    print()\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\ndef intJoin(arr):\n  return \" \".join([str(i) for i in arr])\n\ndef answer(arr):\n  arr = [arr[0]-1] + arr\n  a = []\n  b = []\n  for i in range(1, len(arr)):\n    if arr[i] != arr[i-1]:\n      a.append(arr[i-1])\n      b.append(arr[i-1])\n    else:\n      b.append(-1)\n  if arr[-1] - a[-1] > 1:\n    a.append(arr[-1])\n  c = []\n  for i in range(1, len(a)):\n    if (a[i] - a[i-1]) > 1:\n      for j in range(a[i-1]+1, a[i]):\n        c.append(j)\n        \n  c = list(reversed(c))\n  for i in range(0, len(b)):\n    if b[i] == -1:\n      if len(c) == 0:\n        b[i] = arr[-1]+1\n      else:\n        b[i] = c.pop()\n  return intJoin(b)\n  \n  \nn = int(input())\narr = list(map(int, stdin.readline().split()))\nprint(answer(arr))"
        },
        {
            "language": 3,
            "solution": "import sys\nreadline = sys.stdin.readline\nfrom collections import deque\n\ndef solve():\n    N = int(readline())\n    A = list(map(int, readline().split()))\n\n    nonused = set(range(N+1)) - set(A)\n    q = deque(sorted(nonused))\n\n    m = 0\n\n    ans = [0] * N\n    for i in range(N):\n        if A[i] == m:\n            ans[i] = q.popleft()\n        else:\n            ans[i] = m\n            if q and q[0] == m:\n                q.popleft()\n            m = A[i]\n\n    print(*ans)\n\nsolve()"
        },
        {
            "language": 3,
            "solution": "def solve(n,a):\n    b = [-1]*n\n    mex = 0\n    s = []\n    flag = 0\n\n\n    for i in range(n):\n        s.append(i)\n\n        if a[i] + len(s) < mex:\n            flag =1\n            print(-1)\n            return\n\n        while a[i] > mex:\n            ind = s.pop()\n            b[ind] = mex\n            mex += 1\n\n    random = 199967\n\n    for i in range(n):\n        if b[i] == -1:\n            b[i] = random\n            random += 1\n\n    print(\" \".join(map(str, b)))\n\n\n\n\n\nif __name__ == '__main__':\n    n = int(input())\n    a = list(map(int,input().split()))\n\n    solve(n,a)"
        },
        {
            "language": 3,
            "solution": "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    A = [int(x) for x in input().split()]\n\n    seta = set(A)\n    mex = 0\n\n    ans = []\n    ma = 0\n    for i, a in enumerate(A):\n        if a == mex:\n            if len(ans) == 0:\n                for j in range(1, N + 1):\n                    if j not in seta:\n                        ans.append(j)\n                        ma = max(ma, j)\n                        break\n                else:\n                    print(-1)\n                    return\n            else:\n                for j in range(max(mex, ma) + 1, N + 1):\n                    if j not in seta:\n                        ans.append(j)\n                        ma = max(ma, j)\n                        break\n                else:\n                    print(-1)\n                    return\n        else:\n            ans.append(mex)\n            ma = max(ma, mex)\n            mex = a\n\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize( \\\n    \"Ofast,no-stack-protector,unroll-loops,no-stack-protector,fast-math\")\nusing namespace std;\nconst int N = 1e5 + 5, M = 2 * N + 5;\nbool vis[N];\nint n, a[N], ans[N], idx[N];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", a + i);\n    idx[a[i]] = i;\n  }\n  memset(ans, -1, sizeof ans);\n  set<int> st;\n  for (int i = 1; i <= n; ++i) st.emplace(i);\n  int mx = *max_element(a + 1, a + n + 1);\n  for (int i = 0; i < mx; ++i) {\n    int here = idx[i] + 1;\n    auto it = st.lower_bound(here);\n    if (it == st.end()) exit(puts(\"-1\"));\n    here = *it;\n    ans[here] = i;\n    st.erase(here);\n  }\n  for (int i = 1; i <= n; ++i)\n    if (ans[i] == -1) ans[i] = 1e5 + 1;\n  int tmp = 0;\n  for (int i = 1; i <= n; ++i) {\n    vis[ans[i]] = 1;\n    while (tmp <= mx && vis[tmp]) ++tmp;\n    if (tmp > mx) exit(puts(\"-1\"));\n    if (a[i] != tmp) exit(puts(\"-1\"));\n  }\n  for (int i = 1; i <= n; ++i) printf(\"%d \", ans[i]);\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Main\n{\n\tpublic static void main(String[] args)throws Exception\n\t{\n\t    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t    PrintWriter pw=new PrintWriter(System.out);\n\t    int n=(Integer.parseInt(br.readLine()));\n\t    String s[]=(br.readLine()).split(\" \");\n\t    int a[]=new int[n+1];\n\t    int ar[]=new int[100001];\n\t    int b[]=new int[n+1];\n\t    //LinkedHashSet<Integer> lhs=new LinkedHashSet<Integer>();\n\t    for(int i=1;i<=n;i++)\n\t    {\n\t        a[i]=Integer.parseInt(s[i-1]);\n\t       // lhs.add(a[i]);\n\t        ar[a[i]]=i;\n\t    }\n\t    int sm=0;\n\t    int l=0;\n\t    LinkedList<Integer> small=new LinkedList<Integer>();\n\t    for(int i=1;i<=n;i++)\n\t    {\n\t            if(a[i]!=sm)\n\t            {\n\t                b[i]=sm;\n\t                if(small.size()>0 && small.peek()==sm)\n\t                {\n\t                    small.remove();\n\t                }\n\t                if(b[i]>l)\n\t                l=b[i];\n\t                if(small.size()>0)\n\t                {\n\t                    if(small.peek()<=(l+1))\n\t                    {\n\t                        sm=(int)(small.remove());\n\t                    }\n\t                    else\n\t                    {\n\t                        sm=l+1;\n\t                    }\n\t                }\n\t                else\n\t                {\n\t                    sm=l+1;\n\t                }\n\t                \n\t            }\n\t        \n\t        else\n\t        {\n    \t        while(true)\n\t            {\n\t                l+=1;\n\t                if(i>ar[l])\n\t                {\n\t                    b[i]=l;\n    \t                break;\n\t                }\n\t                else\n\t                {\n\t                    small.add(l);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    for(int i=1;i<=n;i++)\n\t    {\n\t        pw.print(b[i]+\" \");\n\t    }\n\t    \n\t    pw.println();\n\t    \n\t    pw.flush();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, j = 0;\n  cin >> n;\n  int a[n];\n  unordered_set<int> s, v;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    s.insert(a[i]);\n  }\n  vector<int> p;\n  while (s.find(j) != s.end()) j++;\n  v.insert(j);\n  p.push_back(j++);\n  for (i = 0; i < n; i++) {\n    if (a[i] != 0 && v.find(a[i] - 1) == v.end()) break;\n    if (i + 1 < n && a[i + 1] != a[i]) {\n      v.insert(a[i]);\n      p.push_back(a[i]);\n    } else {\n      while (s.find(j) != s.end()) j++;\n      v.insert(j);\n      p.push_back(j);\n      j++;\n    }\n  }\n  if (i < n)\n    cout << -1 << endl;\n  else {\n    for (i = 0; i < n; i++) cout << p[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlis = list(map(int,input().split()))\nmaxi = lis[-1]\nk = n - 1\nflag = 1\nans = []\nif maxi > n:\n    flag = -1\nif flag == -1:\n    print(-1)\nelse:\n    xtra = 0\n    points = []\n    if lis[0] == 0:\n        ans.append(maxi+1)\n        xtra = xtra + 1\n        points.append(0)\n    elif lis[0] == 1:\n        ans.append(0)\n    else:\n        flag = -1\n    if flag != -1:    \n        for i in range(1,n):\n            l = lis[i]\n            if l == lis[i-1]:\n                ans.append(maxi+1)\n                xtra = xtra + 1\n                points.append(i)\n            else:\n                if lis[i] == lis[i-1] + 1:\n                    ans.append(lis[i-1])\n                else:\n                    dif = lis[i] - lis[i-1] - 1\n                    if dif > xtra:\n                        flag = -1\n                        break\n                    else:\n                        for j in range(lis[i-1] + 1,lis[i]):\n                            ans[points[0]] = j\n                            points.pop(0)\n                            xtra = xtra - 1\n                        ans.append(lis[i-1])\n    if flag == -1:\n        print(-1)\n    else:\n        print(*ans,sep= \" \")"
        },
        {
            "language": 3,
            "solution": "import sys\nimport collections as cc\nimport bisect as bi\ninput=sys.stdin.readline\nI=lambda:list(map(int,input().split()))\nn,=I()\nl=I()\nans=[-1]*n\ntemp=[]\nvisi=[0]*(n+1)\nvisi[l[-1]]=1\nfor i in range(n-1,0,-1):\n\tif l[i]!=l[i-1]:\n\t\tans[i]=l[i-1]\n\t\tvisi[l[i-1]]=1\nj=0\nfor i in range(n):\n\tif ans[i]==-1:\n\t\twhile visi[j]==1:\n\t\t\tj+=1\n\t\tans[i]=j\n\t\tj+=1\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> ar(n);\n  for (int& v : ar) {\n    cin >> v;\n  }\n  vector<int> ans(n);\n  int free = 0;\n  int mex = 0;\n  vector<int> freePos;\n  for (int i = 0; i < n; ++i) {\n    freePos.push_back(i);\n    while (ar[i] != mex) {\n      if (freePos.empty()) {\n        cout << -1 << endl;\n        return 0;\n      }\n      ans[freePos.back()] = mex++;\n      freePos.pop_back();\n    }\n  }\n  while (!freePos.empty()) {\n    ans[freePos.back()] = mex + 1;\n    freePos.pop_back();\n  }\n  set<int> num;\n  mex = 0;\n  for (int i = 0; i < n; ++i) {\n    num.insert(ans[i]);\n    while (num.count(mex)) mex++;\n    if (mex != ar[i]) {\n      cout << -1 << endl;\n      return 0;\n    }\n  }\n  for (int v : ans) {\n    cout << v << \" \";\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = lambda: sys.stdin.readline().strip(\"\\r\\n\")\n\nn = int(input())\na = list(map(int, input().split()))\ns = set(a)\nans = []\nele = 0\nfor i in range(n):\n    if i > 0 and a[i] != a[i-1]:\n        ans.append(a[i-1])\n        continue\n    while ele in s:\n        ele += 1\n    ans.append(ele)\n    ele += 1\nprint(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 3;\nint a[MAXN] = {0}, b[MAXN], ex[MAXN] = {0};\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  memset(b, -1, sizeof(b));\n  for (int i = 1; i <= n; i++) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      ex[a[i - 1]] = 1;\n    }\n  }\n  ex[a[n]] = 1;\n  int m = 0;\n  for (int i = 1; i <= n; i++) {\n    while (ex[m]) {\n      m++;\n    }\n    if (b[i] == -1) {\n      b[i] = m;\n      ex[m] = 1;\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    cout << b[i] << ' ';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C { //\n\n    static int[] a, b, q;\n\n    public static void main(String[] args) {\n        try {\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n            int len = Integer.parseInt(br.readLine());\n            a = new int[len];\n            b = new int[len];\n            q = new int[len];\n            String[] line = br.readLine().split(\" \");\n            for (int i = 0; i < len; i++) {\n                a[i] = Integer.parseInt(line[i]);\n            }\n            br.close();\n\n            int read = 0;\n            int write = 0;\n            Arrays.fill(b, len + 1);\n            if (a[0] == 0) write++;\n            else if (a[0] == 1) b[0] = 0;\n\n            for (int i = 1; i < len; i++) {\n                if (a[i] == a[i - 1]) {\n                    q[write] = i;\n                    write++;\n                }\n                else if (a[i] - a[i - 1] > write - read + 1) {\n                    System.out.println(\"-1\");\n                    return;\n                }\n                else {\n                    int curVal = a[i - 1] + 1;\n                    for (; curVal < a[i]; read++) {\n                        b[q[read]] = curVal;\n                        curVal++;\n                    }\n                    b[i] = a[i - 1];\n                }\n            }\n\n            StringBuilder sb = new StringBuilder();\n            for (int i = 0; i < len; i++) {\n                sb.append(b[i] + \" \");\n            }\n            sb.append(\"\\n\");\n            bw.write(sb.toString());\n            bw.close();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void dbug(String s, long ... a) { // /*\n        String[] line = s.split(\"<>\");\n        for (int i = 0; i < a.length; i++) {\n            System.out.print(line[i] + a[i]);\n        }\n        System.out.println(line[a.length]); // */\n    }\n\n    public static void print(int[] a) { // /*\n        for (int i = 0; i < a.length; i++) {\n            System.out.print(a[i] + \" \");\n        }\n        System.out.println(); // */\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.time.temporal.Temporal;\nimport java.util.*;\n\npublic class A{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        long mod=1000000007l;\n        int n=sc.nextInt();\n        int arr[]=new int[n];\n        for(int j=0;j<n;j++)\n        {\n            arr[j]=sc.nextInt();\n        }\n\n        int ans[]=new int[n+1];\n\n\n//        TreeMap<Integer,Integer> l=new TreeMap<>();\n//        TreeMap<Integer,Integer> map=new TreeMap<>();\n        TreeMap<Integer,Integer> f=new TreeMap<>();\n\n\n//        for(int j=0;j<n;j++)\n//        {\n//            //if(arr[j]!=arr[j-1])\n//            {\n//                l.put(arr[j],1);\n//                map.put(arr[j],1);\n//            }\n//        }\n\n        int ind=0;\n\n\n//        for(int j=0;j<n;j++)\n//        {\n//            if(l.containsKey(arr[j])&&arr[j]!=0)\n//            {\n//                ans[j]=f.firstKey();\n//                f.remove(ans[j]);\n//                l.remove(arr[j]);\n//            }\n//            else\n//            {\n//\n//\n//                while(map.containsKey(ind+1))\n//                {\n//                    ind++;\n//                }\n//\n//                if(arr[j]<=j)\n//                {\n//                    ind=j+1;\n//                }\n//                ans[j]=ind;\n//                f.remove(ind);\n//                ind++;\n//            }\n//        }\n\n        for(int j=0;j<n+1;j++)\n        {\n            ans[j]=j;\n            f.put(ans[j],j);\n        }\n\n        for(int j=0;j<n;j++)\n        {\n            if(f.get(arr[j])<=j)\n            {\n                int temp=ans[j+1];\n                int loc=f.get(arr[j]);\n                ans[loc]=temp;\n                ans[j+1]=arr[j];\n                f.put(arr[j],j+1);\n                f.put(temp,loc);\n            }\n        }\n\n        for(int j=0;j<n;j++)\n        {\n            System.out.print(ans[j]+\" \");\n        }\n\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ndouble tick() {\n  static clock_t oldt, newt = clock();\n  double diff = 1.0 * (newt - oldt) / CLOCKS_PER_SEC;\n  oldt = newt;\n  return diff;\n}\nlong long int fastExpo(long long int a, long long int n) {\n  long long int res = 1;\n  while (n) {\n    if (n % 2) res = res * a;\n    n /= 2;\n    a = a * a;\n  }\n  return res;\n}\nint dx[] = {-1, 0, 1, 0};\nint dy[] = {0, 1, 0, -1};\nint a[100010], b[100010], vis[100010];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  memset(b, -1, sizeof(b));\n  memset(vis, 0, sizeof(vis));\n  for (int i = 0; i < n; i++) {\n    if (a[i] != a[i + 1]) {\n      b[i + 1] = a[i];\n      vis[a[i]] = 1;\n    }\n  }\n  vis[a[0]] = 1;\n  int j = 0;\n  for (int i = 0; i < n; i++) {\n    if (b[i] == -1) {\n      while (vis[j]) j++;\n      b[i] = j;\n      vis[j] = 1;\n    }\n  }\n  for (int i = 0; i < n; i++) cout << b[i] << \" \";\n  cout << endl;\n  cerr << \"execution time is: \" << tick() << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\n\nn = int(input())\n\nINF=float('inf')\n\nrr = lambda: input()\nrri = lambda: int(input())\nrrm = lambda: list(map(int, input().split()))\n\ndef solve(N, A):\n    free = deque()\n    ans = [-1] * N\n    low = 0\n    for i, x in enumerate(A):\n        free.append([i, x])\n        while low < x:\n            if not free: return\n            j, y = free.pop()\n            if low != y:  #success\n                ans[j] = low\n                low += 1\n            else: return\n\n    while free:\n        ans[free.pop()[0]] = 10**6\n    return ans\n\n\narr= rrm()\nans = solve(n,arr)\nif ans is None:\n    print -1\nelse:\n    print(\" \".join(map(str, ans)))\n\n\n# from awice\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\na.insert(0,0)\nans=[-1]*n\nused=[False]*(n+1)\nfor i in range(1,n+1):\n\tif (a[i]!=a[i-1]):\n\t\tans[i-1]=a[i-1]\n\t\tused[a[i-1]]=1\nused[a[n]]=1\ncur=0\nfor i in range(n):\n\tif (ans[i]==-1):\n\t\twhile (used[cur]):\n\t\t\tcur+=1\n\t\tans[i]=cur\n\t\tused[cur]=1\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout, setrecursionlimit\nfor _ in range(1):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    f = True\n    ans = [-1] * n\n    ok = [False] * (n + 1)\n    for i in range(n):\n        if a[i] > i + 1 or a[i] > a[min(i + 1, n - 1)]:\n            f = False\n            break\n        ok[a[i]] = True\n    if not f:\n        print(-1)\n        continue\n    nums = []\n    curi = 0\n    for i in range(n + 1):\n        if not ok[i]:\n            nums.append(i)\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            ans[i + 1] = a[i]\n    for i in range(n):\n        if ans[i] == -1:\n            ans[i] = nums[curi]\n            curi += 1\n\n    print(*ans)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int now = 0;\n  vector<int> z, ans(n, 0);\n  for (int i = 0; i < n; i++) {\n    z.push_back(i);\n    if (now < a[i]) {\n      while (now < a[i] && z.size()) {\n        ans[z.back()] = now++;\n        z.pop_back();\n      }\n      if (now < a[i]) {\n        cout << \"-1\\n\";\n        return 0;\n      }\n    }\n  }\n  for (int i = 0; i < (int)z.size(); i++) ans[z[i]] = 100005;\n  for (int i = 0; i < n; i++) {\n    cout << ans[i] << ' ';\n  }\n  cout << '\\n';\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int mod = 1000000007;\nlong long int a[100004], b[100004], vis[100004], pos[100004], ct[100004];\nvoid solve() {\n  long long int n, ma = 0, idx, curr = -1;\n  cin >> n;\n  for (long long int i = 0; i < n; i++) {\n    cin >> a[i];\n    ma = max(ma, a[i]);\n    ct[a[i]]++;\n  }\n  vector<long long int> v;\n  for (long long int i = 0; i <= ma; i++) {\n    if (ct[i] == 0) {\n      v.push_back(i);\n    }\n  }\n  idx = n;\n  long long int k = n - 1;\n  while (k >= 0) {\n    curr = a[k];\n    while (a[k] == curr) {\n      k--;\n    }\n    if (k >= 0) {\n      b[k + 1] = a[k];\n      vis[k + 1] = 1;\n    }\n  }\n  long long int sz = v.size(), j = 0, ele = ma + 1;\n  for (long long int i = 0; i < n; i++) {\n    if (vis[i] == 0) {\n      if (j < sz) {\n        b[i] = v[j];\n        j++;\n      } else\n        b[i] = ele;\n    }\n  }\n  if (j != sz) {\n    cout << -1 << \"\\n\";\n  } else {\n    for (long long int i = 0; i < n; i++) cout << b[i] << \" \";\n    cout << \"\\n\";\n  }\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie();\n  cout.tie();\n  ;\n  long long int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100100];\nint b[100100];\nmap<int, int> us;\nvoid solve() {\n  int n;\n  cin >> n;\n  a[0] = -1;\n  vector<int> v;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (a[i] != a[i - 1]) {\n      v.push_back(a[i]);\n    }\n    us[a[i]] = 1;\n  }\n  v.push_back(-1);\n  int l = 0, k = 0;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] != v[l]) {\n      b[i] = v[l];\n      l++;\n      continue;\n    }\n    while (us[k] == 1) {\n      k++;\n    }\n    b[i] = k;\n    k++;\n  }\n  l = 0;\n  us.clear();\n  for (int i = 1; i <= n; i++) {\n    us[b[i]] = 1;\n    while (us[l] == 1) {\n      l++;\n    }\n    if (l < a[i]) {\n      cout << -1;\n      return;\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    cout << b[i] << \" \";\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\n#n,x = (int(i) for i in input().split())\nn = int(input())\na = [int(i) for i in input().split()]\n\nd = False\nfor i in range(n):\n  if a[i]>i+1 or (i<n-1 and a[i+1]<a[i]):\n    print(-1)\n    d = True\n    break\n\nif not d:\n  out = [-1]*n\n  #if a[0] == 0:\n  #  out[0] = '1'\n  #else:\n  #  out[0] = '0'\n  for i in range(1,n):\n    if a[i]!=a[i-1]:\n      out[i] = str(a[i-1])\n    else:\n      out[i] = -1\n  \n  next_ = n\n\n  seen = {a[-1]}\n  for i in range(n-1,-1,-1):\n    seen.add(a[i])\n    if out[i] == -1:\n      while next_ in seen:\n        next_-=1\n      out[i] = str(next_)\n      next_-=1\n  \n  print(' '.join(out))\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [0]+list(map(int,input().split(' ')))\nb = [100002]*(n+1)\nindex = 1\nfor i in range(n):\n    if a[i]!=a[i+1]:\n        b[i+1] = a[i]\n        for j in range(a[i]+1,a[i+1]):\n            while b[index]!=100002:\n                index += 1\n            b[index] = j\nprint(' '.join(list(map(str,b[1:]))))"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nnmbr = lambda: int(stdin.readline())\nlst = lambda: list(map(int, stdin.readline().split()))\nPI=10**6\nfor _ in range(1):#nmbr()):\n    n = nmbr()\n    a =lst();f=1\n    ans=[-1]*n\n    new=[0]\n    pos=0\n    if a[0]==1:\n        ans[0]=0\n        pos=1\n    for i in range(1,n):\n        if a[i]!=a[i-1]:\n            new+=[i]\n    # print(new)\n    for p1,p2 in zip(new,new[1:]):\n        ans[p2]=a[p1]\n        for v in range(a[p1]+1,a[p2]):\n            while pos<n and ans[pos] != -1: pos += 1\n            if pos>=n:\n                f=0\n                break\n            ans[pos]=v\n            pos+=1\n    for i in range(n):\n        if ans[i]==-1:\n            ans[i]=PI\n    print(*ans if f else -1)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nc=[0]*(1000001);d=[-1]*(1000001)\nfor i in range(1,a):\n    if b[i]!=b[i-1]:d[i]=b[i-1];c[b[i-1]]=1\nm=0;c[b[a-1]]=1\nfor i in range(a):\n    while c[m]:m+=1\n    if d[i]==-1:d[i]=m;c[m]=1\n    print(d[i],end=\" \")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long MOD = 998244353;\nlong long binary_exp(long long a, long long b) {\n  long long ans = 1;\n  while (b > 0) {\n    if (b & 1) {\n      ans = (ans * a) % MOD;\n    }\n    a = (a * a) % MOD;\n    b = b >> 1;\n  }\n  return ans;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  long long T;\n  T = 1;\n  while (T--) {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    vector<int> v(n + 1, 0);\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      v[a[i]]++;\n    }\n    set<int> s;\n    for (int i = 0; i <= n; i++) {\n      if (v[i] == 0) {\n        s.insert(i);\n      }\n    }\n    auto it = s.begin();\n    vector<int> b(n);\n    b[0] = *it;\n    it++;\n    for (int i = 1; i < n; i++) {\n      if (a[i] != a[i - 1]) {\n        b[i] = a[i - 1];\n      } else {\n        b[i] = *it;\n        it++;\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      cout << b[i] << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class Solve {\n    FastScanner in;\n    PrintWriter out;\n\n    void solve() {\n        int n = in.nextInt();\n        int[] a = in.nextIntArray(n);\n\n        int[] res = new int[n];\n        Arrays.fill(res, -1);\n        HashSet<Integer> used = new HashSet<>();\n\n        for (int i = 1; i < n; i++) {\n            if (a[i] != a[i-1]) {\n\n                if (i+1 < a[i]) {\n                    out.println(-1);\n                    return;\n                }\n\n                res[i] = a[i-1];\n                used.add(a[i-1]);\n            }\n        }\n\n        // out.println(used);\n        // out.println(Arrays.toString(res));\n\n        used.add(a[n-1]);\n\n        int next = 0;\n        while (used.contains(next)) {\n            next++;\n        }\n\n        for (int i = 0; i < n; i++) {\n            if (res[i] == -1) {\n\n                while (used.contains(next)) {\n                    next++;\n                }\n\n                // if (0 < i && a[i] == a[i-1]) {\n                //     next++;\n                // }\n\n                // if (0 < i && a[i] != a[i-1]) {\n                //     next++;\n                // }\n\n                // out.println(\"next\" + next);\n\n                res[i] = next;\n                used.add(next);\n            }\n        }\n\n        // out.println(Arrays.toString(res));\n\n        for (int i = 0; i < n; i++) {\n            out.print(res[i] + \" \");\n        }\n    }\n\n    void run() {\n        try {\n            in = new FastScanner(new File(\"Solve.in\"));\n            out = new PrintWriter(new File(\"Solve.out\"));\n\n            solve();\n\n            out.close();\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n    void runIO() {\n\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n\n        solve();\n\n        out.close();\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(File f) {\n            try {\n                br = new BufferedReader(new FileReader(f));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public FastScanner(InputStream f) {\n            br = new BufferedReader(new InputStreamReader(f));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return null;\n                st = new StringTokenizer(s);\n            }\n            return st.nextToken();\n        }\n\n        boolean hasMoreTokens() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return false;\n                st = new StringTokenizer(s);\n            }\n            return true;\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextInt();\n            }\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextLong();\n            }\n            return a;\n        }\n\n        BigInteger nextBigInteger() {\n            return new BigInteger(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        double[] nextDoubleArray(int n) {\n            double[] a = new double[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextDouble();\n            }\n            return a;\n        }\n\n    }\n\n    public static void main(String[] args) {\n        new Solve().runIO();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "maxn = 10**6+5\nvis = [False for i in range(maxn)]\nn = int(input())\narr = list(map(int,input().split()))\nfor i in arr:\n\tvis[i] = True\nans = []\ncnt = 0\nfor i in range(n):\n\tif i!=0:\n\t\tif arr[i]==arr[i-1]:\n\t\t\twhile(vis[cnt]):\n\t\t\t\tcnt+=1\n\t\t\tvis[cnt] = True\n\t\t\tans.append(cnt)\n\t\telse:\n\t\t\tans.append(arr[i-1])\n\telse:\n\t\twhile(vis[cnt]):\n\t\t\tcnt+=1\n\t\tans.append(cnt)\n\t\tvis[cnt] = True\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "import heapq\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [10 ** 6] * n\n    for i in range(n):\n        if a[i] > i + 1:\n            print(-1)\n            return\n    c = [list() for _ in range(n)]\n    for i in range(n - 1, 0, -1):\n        if a[i] == a[i - 1]:\n            continue\n        for j in range(a[i - 1], a[i]):\n            c[i].append(j)\n    for j in range(a[0]):\n        c[0].append(j)\n    r = []\n    for i in range(n - 1, -1, -1):\n        if c[i]:\n            for j in c[i]:\n                heapq.heappush(r, j)\n        if r:\n            b[i] = heapq.heappop(r)\n    print(*b)\n\nsolve()"
        },
        {
            "language": 3,
            "solution": "import heapq\nn,a,b=int(input()),list(map(int, input().split())),[0]*(200000)\nfor i in range(n): b[a[i]]=1\nhp=[i for i in range(n+1) if not b[i]]\nheapq.heapify(hp)\nfor i in range(n-1):\n    print(heapq.heappop(hp),end=\" \")\n    if a[i]<a[i+1]: heapq.heappush(hp,a[i])\nprint(heapq.heappop(hp))        "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\npublic class C649{\n\n\tpublic static void main(String args[]){\n\t\tFastReader sc = new FastReader();\n\t\tStringBuilder sb=new StringBuilder();\n\t\tint t,i,n;\n\t\tt=1;\n\t\twhile(t-->0){\n            n=sc.nextInt();\n            int a[]=new int[n];\n            int ex[]=new int[n+1];\n            int done[]=new int[n+1];\n            for(i=0;i<n;i++){\n                a[i]=sc.nextInt();\n                ex[a[i]]++;\n            }\n            if(a[0]>=2){\n                sb.append(-1).append('\\n');\n                continue;\n            }\n            int mex[]=new int[n];\n            mex[0]=a[0]==0?1:0;\n            if(n==1){\n                sb.append(mex[0]).append('\\n');\n                continue;\n            }\n            PriorityQueue<node> q=new PriorityQueue<>(new Comparator<node>(){\n                @Override\n                public int compare(node a,node b){\n                    if(a.c==b.c)\n                        return a.num-b.num;\n                    return a.c-b.c;\n                }\n            });\n            for(i=0;i<=n;i++)\n                q.add(new node(i,ex[i]));\n            int flag=1;\n            for(i=0;i<n;i++){\n                node v=q.poll();\n                if(v.c>0){\n                    flag=0;\n                    break;\n                }\n                if(done[v.num]!=1){\n                    mex[i]=v.num;\n                    done[v.num]=1;\n                }\n                ex[a[i]]--;\n                q.add(new node(a[i],ex[a[i]]));\n            }\n            for(i=0;i<n;i++)\n                sb.append(mex[i]).append(' ');\n            sb.append('\\n');\n\n\t\t}\n\t\tsb.deleteCharAt(sb.length()-1);\n\t\tout.println(sb);\n    }\n    static class node{\n        int c,num;\n        public node(int a,int b){\n            num=a;\n            c=b;\n        }\n    }\n\n\tstatic PrintWriter out;\n\tstatic class FastReader{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\tpublic FastReader(){\n\t\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout=new PrintWriter(System.out,true);\n\t\t}\n\t\tString next(){\n\t\t\twhile(st==null || !st.hasMoreElements()){\n\t\t\t\ttry{\n\t\t\t\t\tst= new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt(){\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong(){\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble(){\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tString nextLine(){\n\t\t\tString str = \"\";\n\t\t\ttry{\n\t\t\t\tstr=br.readLine();\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\tpublic static boolean isPrime(int n) {\n\t\tif(n<2) return false;\n\t\tfor(int i=2;i<=(int)Math.sqrt(n);i++) {\n\t\t\tif(n%i==0) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static void print(int a[],int l,int r){\n\t\tint i;\n\t\tfor(i=l;i<=r;i++)\n\t\t\tout.print(a[i]+\" \");\n\t\tout.println();\n\t}\n\n\tpublic static long fastexpo(long x, long y, long p){\n\t\tlong res=1;\n\t\twhile(y > 0){\n\t\t\tif((y & 1)==1)\n\t\t\t\tres= ((res%p)*(x%p))%p;\n\t\t\ty= y >> 1;\t\t\t\n\t\t\tx = ((x%p)*(x%p))%p;\n\t\t}\n\t\treturn res;\n\t}\n\n\tpublic static boolean[] sieve (int n) {\n\t\tboolean primes[]=new boolean[n+1];\n\t\tArrays.fill(primes,true);\n\t\tprimes[0]=primes[1]=false;\n\t\tfor(int i=2;i*i<=n;i++){\n\t\t\tif(primes[i]){\n\t\t\t\tfor(int j=i*i;j<=n;j+=i)\n\t\t\t\t\tprimes[j]=false;\n\t\t\t}\n\t\t}\n\t\treturn primes;\n\t}\n\n\tpublic static long gcd(long a,long b){\n        return (BigInteger.valueOf(a).gcd(BigInteger.valueOf(b))).longValue();\n    }\n\n    public static void merge(long a[],int l,int m,int r){\n        int n1,n2,i,j,k;\n        n1=m-l+1;\n        n2=r-m;\n\n        long L[]=new long[n1];\n        long R[]=new long[n2];\n\n        for(i=0;i<n1;i++)\n            L[i]=a[l+i];\n        for(j=0;j<n2;j++)\n            R[j]=a[m+1+j];\n\n        i=0;j=0;\n\n        k=l;\n        while(i<n1&&j<n2){\n            if(L[i]<=R[j]){\n                a[k]=L[i];\n                i++;\n            }\n            else{\n                a[k]=R[j];\n                j++;\n            }\n            k++;\n        }\n\n        while(i<n1){\n            a[k]=L[i];\n            i++;\n            k++;\n        }\n        while(j<n2){\n            a[k]=R[j];\n            j++;\n            k++;\n        }\n    }\n    public static void sort(long a[],int l,int r){\n        int m;\n        if(l<r){\n            m=(l+r)/2;\n            sort(a,l,m);\n            sort(a,m+1,r);\n            merge(a,l,m,r);\n        }\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nimport math\nimport heapq\nimport sys\nimport io, os\n\ninput = sys.stdin.readline\n# input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import *\n\nrs = lambda: input().strip()\nri = lambda: int(input())\nrl = lambda: list(map(int, input().strip().split()))\nrls = lambda: list(map(str, input().split()))\n\nn = int(input().strip())\na = rl()\ns = list(set(a))\ns.sort()\nd = defaultdict(lambda: -1)\nans = []\nprev = 0\nfor i in s:\n    d[i] = 1\nf = 1\nprev=-1\nfor i in range(0, n):\n    if ( i!=0 and a[i] != a[i - 1]):\n        ans.append(a[i - 1])\n        continue\n    while (1):\n        prev = prev + 1\n        # print(i,prev)\n        if (d[prev] == 1):\n            continue\n        else:\n            break\n    #  print(i,prev)\n    ans.append(prev)\n    if (a[i] - prev > 1):\n        f = 0\n        break\nif (f):\n    mx = 0\n    for i in range(0, n):\n        mx = max(ans[i], mx)\n        if (a[i] - mx > 1):\n            print(-1)\n            exit()\n    print(*ans)\nelse:\n    print(-1)\n"
        },
        {
            "language": 1,
            "solution": "\"\"\"\n// Author : snape_here - Susanta Mukherjee\n     \n \"\"\"\n \nfrom __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii(): return int(input())\ndef fi(): return float(input())\ndef si(): return input()\ndef mi(): return map(int,input().split())\ndef li(): return list(mi())\n \n \ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n \ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\nmod=1000000007\n\nfrom math import *\n\nimport bisect\n\nfrom decimal import *\n\ngetcontext().prec = 25\n\nabc=\"abcdefghijklmnopqrstuvwxyz\"\n\ndef fn(n):\n    c=0\n    while n%2==0:\n        c+=1 \n        n//=2 \n    return c\n\npi=3.141592653589793238\n\ndef main():\n\n    n=ii()\n    a=li()\n    b=[-1]*n \n    f=[0]*(10**6+5)\n    if n==1:\n        print(a[0]^1)\n        exit()\n    for i in range(1,n):\n        if a[i]!=a[i-1]:\n            b[i]=a[i-1]\n            f[b[i]]=1\n        if i==n-1:\n            f[a[i]]=1\n    c=0 \n    for i in range(n):\n        if b[i]==-1:\n            while f[c]:\n                c+=1 \n            b[i]=c \n            f[b[i]]=1\n    print(*b)\n\n\n# region fastio\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    main()"
        },
        {
            "language": 3,
            "solution": "def check_if_possible(values):\n\tfor i in range(len(values)):\n\t\tif values[i]-1>i:\n\t\t\treturn False\n\treturn True\n\ndef getNextAvailable(arr,ctr):\n\tfor i in range(ctr,len(arr)):\n\t\tif arr[i]==1:\n\t\t\tarr[i]=0\n\t\t\treturn i,i+1\n\n\n\nn=int(input())\n\nvalues=list(map(int,input().strip().split(' ')))\n\nif check_if_possible(values):\n\tansarr=[None for i in range(len(values))]\n\tavailable_values=[1 for i in range(len(values)+1)]\n\tfor i in values:\n\t\tavailable_values[i]=0\n\tfor i in range(1,len(values)):\n\t\tif values[i]!=values[i-1]:\n\t\t\tansarr[i]=values[i-1]\n\tmkr=0\n\tfor i in range(len(ansarr)):\n\t\tif ansarr[i]==None:\n\t\t\tansarr[i],mkr=getNextAvailable(available_values,mkr)\n\n\tfor i in ansarr:\n\t\tprint(i,end=\" \")"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main implements Runnable {\n    int n, m, k;\n    static boolean use_n_tests = false;\n    long[] res;\n\n    void solve(FastScanner in, PrintWriter out, int testNumber) {\n        n = in.nextInt();\n        int[] a = in.nextArray(n);\n        int[] b = new int[n];\n        Arrays.fill(b, -1);\n        if (a[0] > 1) {\n            out.println(-1);\n            return;\n        }\n        /**\n         * if a[i] != a[i - 1] we should close a[i - 1] by adding to b so i won't equal to b[i - 1]\n         */\n        int[] ex = new int[100005];\n        for (int i = 0; i < n; i++) {\n            if (i == 0 && a[i] != 0) {\n                b[i] = 0;\n                ex[b[i]] = 1;\n            }\n            if (i > 0 && a[i] != a[i - 1]) {\n                b[i] = a[i - 1];\n                ex[b[i]] = 1;\n            }\n        }\n        ex[a[n - 1]] = 1;\n        int m = 0;\n        for (int i = 0; i < n; i++) {\n            while (ex[m] == 1) m++;\n            if (b[i] == -1) {\n                b[i] = m;\n                ex[m] = 1;\n            }\n            out.print(b[i] + \" \");\n        }\n        out.println();\n    }\n\n    // ****************************** template code ***********\n\n    List<Integer> generatePrimes(int n) {\n        List<Integer> res = new ArrayList<>();\n        boolean[] sieve = new boolean[n + 1];\n        for (int i = 2; i <= n; i++) {\n            if (!sieve[i]) {\n                res.add(i);\n            }\n            if ((long) i * i <= n) {\n                for (int j = i * i; j <= n; j += i) {\n                    sieve[j] = true;\n                }\n            }\n        }\n        return res;\n    }\n\n    int ask(int l, int r) {\n        if (l >= r) {\n            return -1;\n        }\n        System.out.printf(\"? %d %d\\n\", l + 1, r + 1);\n        System.out.flush();\n        return in.nextInt() - 1;\n    }\n\n    static int stack_size = 1 << 27;\n\n    class Mod {\n        long mod;\n\n        Mod(long mod) {\n            this.mod = mod;\n        }\n\n        long add(long a, long b) {\n            a = mod(a);\n            b = mod(b);\n            return (a + b) % mod;\n        }\n\n        long sub(long a, long b) {\n            a = mod(a);\n            b = mod(b);\n            return (a - b + mod) % mod;\n        }\n\n        long mul(long a, long b) {\n            a = mod(a);\n            b = mod(b);\n            return a * b % mod;\n        }\n\n        long div(long a, long b) {\n            a = mod(a);\n            b = mod(b);\n            return (a * inv(b)) % mod;\n        }\n\n        public long inv(long r) {\n            if (r == 1)\n                return 1;\n            return ((mod - mod / r) * inv(mod % r)) % mod;\n        }\n\n        private long mod(long a) {\n            return a % mod;\n        }\n    }\n\n    class Coeff {\n        long mod;\n        long[][] C;\n        long[] fact;\n        boolean cycleWay = false;\n\n        Coeff(int n, long mod) {\n            this.mod = mod;\n            fact = new long[n + 1];\n            fact[0] = 1;\n            for (int i = 1; i <= n; i++) {\n                fact[i] = i;\n                fact[i] %= mod;\n                fact[i] *= fact[i - 1];\n                fact[i] %= mod;\n            }\n        }\n\n        Coeff(int n, int m, long mod) {\n            // n > m\n            cycleWay = true;\n            this.mod = mod;\n            C = new long[n + 1][m + 1];\n            for (int i = 0; i <= n; i++) {\n                for (int j = 0; j <= Math.min(i, m); j++) {\n                    if (j == 0 || j == i) {\n                        C[i][j] = 1;\n                    } else {\n                        C[i][j] = C[i - 1][j - 1] + C[i - 1][j];\n                        C[i][j] %= mod;\n                    }\n                }\n            }\n        }\n\n        public long C(int n, int m) {\n            if (cycleWay) {\n                return C[n][m];\n            }\n            return fC(n, m);\n        }\n\n        private long fC(int n, int m) {\n            return (fact[n] * inv(fact[n - m] * fact[m] % mod)) % mod;\n        }\n\n        private long inv(long r) {\n            if (r == 1)\n                return 1;\n            return ((mod - mod / r) * inv(mod % r)) % mod;\n        }\n    }\n\n    class Pair {\n        int first;\n        long second;\n\n        Pair(int f, long s) {\n            first = f;\n            second = s;\n        }\n\n        public int getFirst() {\n            return first;\n        }\n\n        public long getSecond() {\n            return second;\n        }\n    }\n\n    class MultisetTree<T> {\n        int size = 0;\n\n        TreeMap<T, Integer> mp = new TreeMap<>();\n\n        void add(T x) {\n            mp.merge(x, 1, Integer::sum);\n            size++;\n        }\n\n        void remove(T x) {\n            if (mp.containsKey(x)) {\n                mp.merge(x, -1, Integer::sum);\n                if (mp.get(x) == 0) {\n                    mp.remove(x);\n                }\n                size--;\n            }\n        }\n\n        boolean contains(T x) {\n            return mp.containsKey(x);\n        }\n\n        T greatest() {\n            return mp.lastKey();\n        }\n\n        T smallest() {\n            return mp.firstKey();\n        }\n\n        int size() {\n            return size;\n        }\n\n        int diffSize() {\n            return mp.size();\n        }\n    }\n\n    class Multiset<T> {\n        int size = 0;\n\n        Map<T, Integer> mp = new HashMap<>();\n\n        void add(T x) {\n            mp.merge(x, 1, Integer::sum);\n            size++;\n        }\n\n        boolean contains(T x) {\n            return mp.containsKey(x);\n        }\n\n        void remove(T x) {\n            if (mp.containsKey(x)) {\n                mp.merge(x, -1, Integer::sum);\n                if (mp.get(x) == 0) {\n                    mp.remove(x);\n                }\n                size--;\n            }\n        }\n\n        int size() {\n            return size;\n        }\n\n        int diffSize() {\n            return mp.size();\n        }\n    }\n\n    static class Range {\n        int l, r;\n        int id;\n\n        public int getL() {\n            return l;\n        }\n\n        public int getR() {\n            return r;\n        }\n\n        public Range(int l, int r, int id) {\n            this.l = l;\n            this.r = r;\n            this.id = id;\n        }\n    }\n\n    static class Array {\n        static Range[] readRanges(int n, FastScanner in) {\n            Range[] result = new Range[n];\n            for (int i = 0; i < n; i++) {\n                result[i] = new Range(in.nextInt(), in.nextInt(), i);\n            }\n            return result;\n        }\n\n        static List<List<Integer>> intInit2D(int n) {\n            List<List<Integer>> res = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                res.add(new ArrayList<>());\n            }\n            return res;\n        }\n\n        static boolean isSorted(Integer[] a) {\n            for (int i = 0; i < a.length - 1; i++) {\n                if (a[i] > a[i + 1]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        static public long sum(int[] a) {\n            long sum = 0;\n            for (int x : a) {\n                sum += x;\n            }\n            return sum;\n        }\n\n        static public long sum(long[] a) {\n            long sum = 0;\n            for (long x : a) {\n                sum += x;\n            }\n            return sum;\n        }\n\n        static public long sum(Integer[] a) {\n            long sum = 0;\n            for (int x : a) {\n                sum += x;\n            }\n            return sum;\n        }\n\n        static public int min(Integer[] a) {\n            int mn = Integer.MAX_VALUE;\n            for (int x : a) {\n                mn = Math.min(mn, x);\n            }\n            return mn;\n        }\n\n        static public int min(int[] a) {\n            int mn = Integer.MAX_VALUE;\n            for (int x : a) {\n                mn = Math.min(mn, x);\n            }\n            return mn;\n        }\n\n        static public int max(Integer[] a) {\n            int mx = Integer.MIN_VALUE;\n            for (int x : a) {\n                mx = Math.max(mx, x);\n            }\n            return mx;\n        }\n\n        static public int max(int[] a) {\n            int mx = Integer.MIN_VALUE;\n            for (int x : a) {\n                mx = Math.max(mx, x);\n            }\n            return mx;\n        }\n\n        static public int[] readint(int n, FastScanner in) {\n            int[] out = new int[n];\n            for (int i = 0; i < out.length; i++) {\n                out[i] = in.nextInt();\n            }\n            return out;\n        }\n    }\n\n    class Graph {\n        List<List<Integer>> graph;\n\n        Graph(int n) {\n            create(n);\n        }\n\n        void create(int n) {\n            List<List<Integer>> graph = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                graph.add(new ArrayList<>());\n            }\n            this.graph = graph;\n        }\n\n        void readBi(int m, FastScanner in) {\n            for (int i = 0; i < m; i++) {\n                int v = in.nextInt() - 1;\n                int u = in.nextInt() - 1;\n                graph.get(v).add(u);\n                graph.get(u).add(v);\n            }\n        }\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(InputStream io) {\n            br = new BufferedReader(new InputStreamReader(io));\n        }\n\n        public String line() {\n            String result = \"\";\n            try {\n                result = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return result;\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public int[] nextArray(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = in.nextInt();\n            }\n            return res;\n        }\n\n        public long[] nextArrayL(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = in.nextLong();\n            }\n            return res;\n        }\n\n        public Long[] nextArrayL2(int n) {\n            Long[] res = new Long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = in.nextLong();\n            }\n            return res;\n        }\n\n\n        public Integer[] nextArray2(int n) {\n            Integer[] res = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = in.nextInt();\n            }\n            return res;\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n\n    void run_t_tests() {\n        int t = in.nextInt();\n        int i = 0;\n        while (t-- > 0) {\n            solve(in, out, i++);\n        }\n    }\n\n    void run_one() {\n        solve(in, out, -1);\n    }\n\n    @Override\n    public void run() {\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n        if (use_n_tests) {\n            run_t_tests();\n        } else {\n            run_one();\n        }\n        out.close();\n    }\n\n    static FastScanner in;\n    static PrintWriter out;\n\n    public static void main(String[] args) throws InterruptedException {\n        Thread thread = new Thread(null, new Main(), \"\", stack_size);\n        thread.start();\n        thread.join();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long int n;\n  cin >> n;\n  vector<long long int> a;\n  long long int k;\n  for (long int i = 0; i < n; i++) {\n    cin >> k;\n    a.push_back(k);\n  }\n  map<int, int> covered;\n  vector<long long int> b(n, -1);\n  covered[a[n - 1]] = 1;\n  for (int i = 1; i < n; i++) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      covered[a[i - 1]] = 1;\n    }\n  }\n  long long int m = 0;\n  for (int i = 0; i < n; i++) {\n    while (covered[m]) m++;\n    if (b[i] == -1) {\n      b[i] = m;\n      covered[m] = 1;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cout << b[i] << \" \";\n  }\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nx=[]\nm=[]\np=[]\nans=[]\nflag=0\nif a[0]>1:\n    flag=1\nelse:\n    for i in range(1,n):\n        if a[i]>i+1:\n            flag=1\n            break\n        else:\n            d=a[i]-a[i-1]\n            x.append(d)\n            if d>1:\n                m.append(d-1)\n                p.append(a[i])\n    if a[0]==1:\n        ans.append(0)\n    else:\n        if len(p)!=0:\n            ans.append(p[0]-m[0])\n            m[0]-=1\n            if m[0]==0:\n                m.pop(0)\n                p.pop(0)\n        else:\n            ans.append(a[n-1]+1)\n    for i in range(1,n):\n        if x[i-1]>0:\n            ans.append(a[i-1])\n        else:\n            if len(p) != 0:\n                ans.append(p[0] - m[0])\n                m[0] -= 1\n                if m[0] == 0:\n                    m.pop(0)\n                    p.pop(0)\n            else:\n                ans.append(a[n-1]+1)\nif flag==1:\n    print(-1)\nelse:\n    for i in range(len(ans)):\n        print(ans[i],end=\" \")\n"
        },
        {
            "language": 3,
            "solution": "from heapq import heappush, heappop\n\nn = int(input())\n\narr = [int(i) for i in input().split()]\n\ntoAdd = []\nfor i in range(n-1):\n\tif arr[i] != arr[i+1]:\n\t\tfor m in range(arr[i]+1, arr[i+1]):\n\t\t\theappush(toAdd, m)\n\n# print(*arr)\n\nout = [-1]*n\n\nif arr[0] == 1:\n\tout[0] = 0\n\nfor i in range(1,n):\n\tif arr[i-1] != arr[i]:\n\t\tout[i] = arr[i-1]\n\n# print(toAdd)\n\n# print(out)\nlast = 1000000\nfor i in range(n):\n\tif out[i]==-1:\n\t\tif len(toAdd) != 0:\n\t\t\tlast = heappop(toAdd)\n\t\tout[i] = last\n\nprint(*out)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().strip().split()))\navailable_numbers = set(range(2*n))\nremoved = set()\nfor v in a:\n    if v not in removed:\n        available_numbers.remove(v)\n        removed.add(v)\navailable_numbers = sorted(list(available_numbers))\nmex = [-1] * n\nfor i, v in enumerate(a[1:]):\n    if a[i] != v:\n        mex[i+1] = a[i]\n\n\nj = 0\nfor k, v in enumerate(mex):\n    if v == -1:\n        mex[k] = available_numbers[j]\n        j+=1\n\nprint(\" \".join(map(str, mex)))\n\n\"\"\"\n# Confirm mex\nnums = list(range(2*n))[::-1]\nremoved = set()\nlistt = []\nfor v in mex:\n    if v not in removed:\n        nums.remove(v)\n        removed.add(v)\n    listt.append(nums[-1])\n\nif listt == a:\n    print(\" \".join(map(str, mex)))\nelse:\n    print(\"-1\")\n\"\"\"\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\npublic class MainClass\n{\n    public static void main(String[] args)throws IOException\n    {\n        Reader in = new Reader();\n        int t = 1;\n        StringBuilder stringBuilder = new StringBuilder();\n        while (t-- > 0)\n        {\n            int n = in.nextInt();\n            long[] A = new long[n];\n            for (int i=0;i<n;i++) A[i] = in.nextLong();\n            TreeSet<Long> h = new TreeSet<>();\n            long[] ans = new long[2 * n + 1];\n            for (int i=0;i<=2*n;i++)\n            {\n                h.add((long)i);\n            }\n            Arrays.fill(ans, -1L);\n            for (int i=0;i<n - 1;i++)\n            {\n                if (A[i + 1] != A[i])\n                {\n                    ans[i + 1] = A[i];\n                    h.remove(A[i]);\n                }\n            }\n            if (h.contains(A[n - 1]))   h.remove(A[n - 1]);\n            for (int i=0;i<n;i++)\n            {\n                if (ans[i] == -1)\n                {\n                    ans[i] = h.first();\n                    h.remove(h.first());\n                }\n            }\n            for (int i=0;i<n;i++)\n                stringBuilder.append(ans[i]).append(\" \");\n            stringBuilder.append(\"\\n\");\n        }\n        System.out.println(stringBuilder);\n    }\n}\nclass Reader\n{\n    final private int BUFFER_SIZE = 1 << 16;\n    private DataInputStream din;\n    private byte[] buffer;\n    private int bufferPointer, bytesRead;\n\n    public Reader()\n    {\n        din = new DataInputStream(System.in);\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public Reader(String file_name) throws IOException\n    {\n        din = new DataInputStream(new FileInputStream(file_name));\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public String readLine() throws IOException\n    {\n        byte[] buf = new byte[64]; // line length\n        int cnt = 0, c;\n        while ((c = read()) != -1)\n        {\n            if (c == '\\n')\n                break;\n            buf[cnt++] = (byte) c;\n        }\n        return new String(buf, 0, cnt);\n    }\n\n    public int nextInt() throws IOException\n    {\n        int ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do\n        {\n            ret = ret * 10 + c - '0';\n        }  while ((c = read()) >= '0' && c <= '9');\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long nextLong() throws IOException\n    {\n        long ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        }\n        while ((c = read()) >= '0' && c <= '9');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public double nextDouble() throws IOException\n    {\n        double ret = 0, div = 1;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n\n        do {\n            ret = ret * 10 + c - '0';\n        }\n        while ((c = read()) >= '0' && c <= '9');\n\n        if (c == '.')\n        {\n            while ((c = read()) >= '0' && c <= '9')\n            {\n                ret += (c - '0') / (div *= 10);\n            }\n        }\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws IOException\n    {\n        bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n        if (bytesRead == -1)\n            buffer[0] = -1;\n    }\n\n    private byte read() throws IOException\n    {\n        if (bufferPointer == bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n\n    public void close() throws IOException\n    {\n        if (din == null)\n            return;\n        din.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "//package goku;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class goku {\n\n    BufferedReader br;\n    PrintWriter out;\n    \n    long mod = (long) (1e9 + 7), inf = (long) (5e18);\n    \n    void spiritBomb() {\n        int n = ni();\n        int a[] = new int[n];\n        for(int i = 0; i < n; i++)  a[i] = ni();\n        int j = 0;\n        boolean not = false;\n        int b[] = new int[n];\n        Arrays.fill(b, -1);\n        for(int i = 0; i < n; i++) {\n            if(i == 0) {\n                if(a[i] == 1)   b[j++] = 0;\n            } else {\n                for(int k = a[i]-1; k > a[i-1]; k--) {\n                    while(b[j] != -1)   j++;\n                    b[j++] = k;\n                }\n                if(j > i) {\n                    not = true; break;\n                }\n                if(a[i] > a[i-1])   b[i] = a[i-1];\n            }\n        }\n        if(not) {\n            out.println(-1);\n        } else {\n            while(j < n) {\n                if(b[j] == -1)\n                    b[j] = 500000;\n                j++;\n            }\n            for(int x : b)  out.print(x +\" \");\n        }\n    }\n    \n    int gcd(int a, int b) {\n        if(b == 0)  return a;\n        return gcd(b, a % b);\n    }\n    \n    long mp(long b, long e) {\n        long r = 1;\n        while(e > 0) {\n            if( (e&1) == 1 )    r = (r * b) % mod;\n            b = (b * b) % mod;\n            e >>= 1;\n        }\n        return r;\n    }\n    \n    // -------- I/O Template -------------\n    \n    char nc() {\n        return ns().charAt(0);\n    }\n    \n    String nLine() {\n        try {\n            return br.readLine();\n        } catch(IOException e) {\n            return \"-1\";\n        }\n    }\n    \n    double nd() {\n        return Double.parseDouble(ns());\n    }\n    \n    long nl() {\n        return Long.parseLong(ns());\n    }\n    \n    int ni() {\n        return Integer.parseInt(ns());\n    }\n    \n    StringTokenizer ip;\n    \n    String ns() {\n        if(ip == null || !ip.hasMoreTokens()) {\n            try {\n                ip = new StringTokenizer(br.readLine());\n            } catch(IOException e) {\n                throw new InputMismatchException();\n            }\n        }\n        return ip.nextToken();\n    }\n    \n    void kamehameha() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        spiritBomb();\n        out.flush();\n    }\n    \n    public static void main(String[] args) {\n        new goku().kamehameha();\n    }\n    \n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> A(n, 0);\n  vector<int> mk(100005, 0);\n  for (int i = 0; i < n; i++) {\n    cin >> A[i];\n    mk[A[i]] = 1;\n  }\n  set<int> st;\n  for (int i = 0; i < 100005; i++)\n    if (!mk[i]) st.insert(i);\n  vector<int> ans(n, 0);\n  for (int i = 0; i < n - 1; i++) {\n    if (A[i] != A[i + 1]) {\n      ans[i] = *st.begin();\n      st.insert(A[i]);\n    } else\n      ans[i] = *st.begin();\n    st.erase(st.find(ans[i]));\n  }\n  ans[n - 1] = *st.begin();\n  for (int i = 0; i < n; i++) cout << ans[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n \nt = int(input())\nn = set([i for i in range(t+1)])\n \nl = list(map(int,input().split()))\n\nss = set(l)\n\npp = list(n.difference(ss))\n\npp.sort()\n\nfor el in range(len(l)):\n    if l[el] > el + 1:\n        print(-1)\n        exit()\n        \nb = [pp[0]]\nc=1\nfor el in range(1, len(l)):\n    if l[el] > l[el-1]:\n        b.append(l[el-1])\n    else:\n        b.append(pp[c])\n        c+=1\n        \nprint(*b)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class c {\n\tstatic final FS sc = new FS();\n\tstatic final PrintWriter pw = new PrintWriter(System.out);\n\t\n\tstatic int n;\n\tstatic int[] arr, out;\n\tstatic TreeSet<Integer> set;\n\tpublic static void main(String[] args) {\n\t\tn = sc.nextInt();\n\t\tarr = new int[n];\n\t\tfor(int i = 0; i < n; ++i) arr[i] = sc.nextInt();\n\t\t\n\t\tif(arr[0] > 1) {\n\t\t\tSystem.out.println(-1);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tset = new TreeSet<>();\n\t\tfor(int i = 0; i <= n; ++i) {\n\t\t\tif(i != arr[n - 1]) set.add(i);\n\t\t}\n\t\t\n\t\tout = new int[n];\n\t\tfor(int i = n - 2; i >= 0; --i) {\n\t\t\tInteger yeet = set.ceiling(arr[i]);\n\t\t\tif(yeet == null) {\n\t\t\t\tSystem.out.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tout[i + 1] = yeet;\n\t\t\tset.remove(yeet);\n\t\t}\n\t\t\n\t\tout[0] = set.pollFirst();\n\t\t\n\t\tfor(int a : out) pw.print(a + \" \");\n\t\tpw.println();\n\t\tpw.flush();\n\t}\n\tstatic class FS {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile(!st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(Exception e) {}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    private static final boolean N_CASE = false;\n\n    private void solve() {\n        int n = sc.nextInt();\n        int[] a = sc.nextIntArray(n);\n\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        for (int i = 0; i < n - 1; ++i) {\n            if (a[i] != a[i + 1]) {\n                ans[i + 1] = a[i];\n            }\n        }\n\n        boolean[] vis = new boolean[1000001];\n        for (int i = 0; i < n; ++i) {\n            vis[a[i]] = true;\n        }\n\n        int start = 0;\n        for (int i = 0; i < n; ++i) {\n            if (ans[i] == -1) {\n                while (vis[start]) {\n                    ++start;\n                }\n                ans[i] = start;\n                vis[start] = true;\n            }\n        }\n\n        Arrays.fill(vis, false);\n        start = 0;\n        for (int i = 0; i < n; ++i) {\n            vis[ans[i]] = true;\n            while (vis[start]) {\n                ++start;\n            }\n\n            if (start != a[i]) {\n                out.println(-1);\n                return;\n            }\n        }\n        out.printArray(ans);\n    }\n\n    private void run() {\n        int T = N_CASE ? sc.nextInt() : 1;\n        for (int t = 0; t < T; ++t) {\n            solve();\n        }\n    }\n\n    private static MyWriter out;\n    private static MyScanner sc;\n\n    private static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        private MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        int[][] nextIntArray(int n, int m) {\n            int[][] a = new int[n][m];\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    a[i][j] = sc.nextInt();\n                }\n            }\n            return a;\n        }\n\n        long[][] nextLongArray(int n, int m) {\n            long[][] a = new long[n][m];\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    a[i][j] = nextLong();\n                }\n            }\n            return a;\n        }\n\n        List<Integer> nextList(int n) {\n            List<Integer> list = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                list.add(nextInt());\n            }\n            return list;\n        }\n\n        List<Long> nextLongList(int n) {\n            List<Long> list = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                list.add(nextLong());\n            }\n            return list;\n        }\n\n        char[] nextCharArray(int n) {\n            return sc.next().toCharArray();\n        }\n\n        char[][] nextCharArray(int n, int m) {\n            char[][] c = new char[n][m];\n            for (int i = 0; i < n; i++) {\n                String s = sc.next();\n                for (int j = 0; j < m; j++) {\n                    c[i][j] = s.charAt(j);\n                }\n            }\n            return c;\n        }\n    }\n\n    private static class MyWriter extends PrintWriter {\n        private MyWriter(OutputStream outputStream) {\n            super(outputStream);\n        }\n\n        void printArray(int[] a) {\n            for (int i = 0; i < a.length; ++i) {\n                print(a[i]);\n                print(i == a.length - 1 ? '\\n' : ' ');\n            }\n        }\n\n        void printlnArray(int[] a) {\n            for (int v : a) {\n                println(v);\n            }\n        }\n\n        void printList(List<Integer> list) {\n            for (int i = 0; i < list.size(); ++i) {\n                print(list.get(i));\n                print(i == list.size() - 1 ? '\\n' : ' ');\n            }\n        }\n\n        void printlnList(List<Integer> list) {\n            list.forEach(this::println);\n        }\n    }\n\n    public static void main(String[] args) {\n        out = new MyWriter(new BufferedOutputStream(System.out));\n        sc = new MyScanner();\n        new Main().run();\n        out.close();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\nimport java.lang.*;\n\npublic class EhabandPrefixMEXs{\n    public static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n        public String nextLine() {\n            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n            while(isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public char nextChar() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            return (char)c;\n        }\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res.toString();\n        }\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n    static long gcd(long a, long b){\n        if (a == 0)\n            return b;  \n        return gcd(b % a, a);  \n    }\n    static long lcm(long a, long b)  {\n        return (a*b)/gcd(a, b);  \n    }\n    static long func(long a[],long size,int s){\n        long max1=a[s];\n        long maxc=a[s];\n        for(int i=s+1;i<size;i++){\n            maxc=Math.max(a[i],maxc+a[i]);\n            max1=Math.max(maxc,max1);\n        }\n        return max1;\n    }\n    public static class Pair<U extends Comparable<U>, V extends Comparable<V>> implements Comparable<Pair<U, V>> {\n        public U x;\n        public V y;\n    \n        public Pair(U x, V y) {\n            this.x = x;\n            this.y = y;\n        }\n    \n        public int hashCode() {\n            return (x == null ? 0 : x.hashCode() * 31) + (y == null ? 0 : y.hashCode());\n        }\n    \n        public boolean equals(Object o) {\n            if (this == o)\n                return true;\n            if (o == null || getClass() != o.getClass())\n                return false;\n            Pair<U, V> p = (Pair<U, V>) o;\n            return (x == null ? p.x == null : x.equals(p.x)) && (y == null ? p.y == null : y.equals(p.y));\n        }\n    \n        public int compareTo(Pair<U, V> b) {\n            int cmpU = x.compareTo(b.x);\n            return cmpU != 0 ? cmpU : y.compareTo(b.y);\n        }\n    \n        public String toString() {\n            return String.format(\"(%s, %s)\", x.toString(), y.toString());\n        }\n    \n    }\n    \n    public static void main(String args[])\n    {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader sc = new FastReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n        \n        int n = sc.nextInt();\n        int a[] = new int[n];\n        int ans[] = new int[n];\n        \n        TreeSet<Integer> tr = new TreeSet<>();\n        int i = 0;\n        for(i = 0; i < n; i++)\n        {\n        \ttr.add(i);\n        }\n        tr.add(i);\n        \n        for(i = 0; i < n; i++)\n        {\n        \ta[i] = sc.nextInt();\n        \tif(tr.contains(a[i]))\n        \t{\n        \t\ttr.remove(a[i]);\n        \t}\n        }\n        \n        int j = 1;\n        ans[0] = tr.pollFirst();\n        for(i = 1; i < n; i++)\n        {\n        \tif(a[i] == a[i - 1])\n        \t{\n        \t\tans[j++] = tr.pollFirst();\n        \t}\n        \t\n        \tif(a[i - 1] < a[i])\n        \t{\n        \t\tans[j++] = a[i - 1];\n        \t}\n        }\n        \n        for(i = 0; i < n; i++)\n        {\n        \tw.print(ans[i]+\" \");\n        }\n        w.close();\n    }\n}"
        },
        {
            "language": 1,
            "solution": "from sys import stdin, stdout\nfrom itertools import repeat\ndef main():\n    n = int(stdin.readline())\n    a = map(int, stdin.readline().split(), repeat(10, n))\n    b = [1000000] * n\n    p = 0\n    st = []\n    for i, x in enumerate(a):\n        if x > i + 1:\n            print -1\n            return\n        st.append(i)\n        if p < x:\n            while st and p < x:\n                b[st.pop()] = p\n                p += 1\n            if p != x:\n                print -1\n                return\n    stdout.write(' '.join(map(str, b)))\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int max(long long int a, long long int b) {\n  if (a > b) return a;\n  return b;\n}\nlong long int min(long long int a, long long int b) {\n  if (a < b) return a;\n  return b;\n}\nlong long int power(long long int x, long long int y,\n                    long long int m = 1000000007) {\n  if (y < 0) {\n    x = power(x, m - 2);\n    y = -y;\n  }\n  long long int ans = 1;\n  x = x % m;\n  while (y) {\n    if (y & 1) ans = (ans * x) % m;\n    y = y / 2;\n    x = (x * x) % m;\n  }\n  return ans;\n}\nlong long int factorial(long long int n, long long int m = 1000000007) {\n  long long int ans = 1;\n  long long int i = 1;\n  while (i <= n) {\n    ans = (ans * i) % m;\n    i++;\n  }\n  return ans;\n}\nlong long int vis[1000000] = {0};\nint main() {\n  ios_base::sync_with_stdio(false);\n  long long int n;\n  cin >> n;\n  long long int arr[n];\n  long long int flag = 1;\n  for (long long int i = 0; i < n; i++) {\n    cin >> arr[i];\n    if (i + 1 < arr[i]) flag = 0;\n    vis[arr[i]] = 1;\n  }\n  if (flag == 0) {\n    cout << \"-1\\n\";\n    return 0;\n  }\n  vector<long long int> ans;\n  long long int p = 0;\n  for (long long int i = 0; i < n; i++) {\n    if (i != 0 && arr[i] != arr[i - 1]) {\n      ans.push_back(arr[i - 1]);\n    } else {\n      while (vis[p] == 1) p++;\n      ans.push_back(p);\n      p++;\n    }\n  }\n  long long int len = ans.size();\n  for (long long int i = 0; i < len; i++) {\n    cout << ans[i] << \" \";\n  }\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nczy=0\nT,A,N,P=[0],[0],[0],[0]\nT+=map(int,input().split())\nfor i in range (1,n+1):\n    A.append(-1)\n    if T[i]>i:\n        czy=1;\n    N.append(i+1)\n    P.append(i-1)\nN.append(0)\nP.append(0)\nif czy:\n    print(-1)\n    exit()\nfor i in range(1,n+1):\n    x=T[i]-T[i-1]\n    ile=T[i-1]\n    s=i\n    for j in range(1,x+1):\n        A[s]=ile\n        ile+=1\n        P[N[s]]=P[s]\n        N[P[s]]=N[s]\n        s=P[s]    \nfor i in range(1,n+1):\n    if A[i] == -1:\n        A[i]=1000000\ns=\"\"\nfor i in range(1,n+1):\n    s+=str(A[i])+\" \"\nprint(s)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Solution{\n    public static void main(String[] args)throws IOException{\n        FastReader in=new FastReader();\n        PrintWriter wr=new PrintWriter(System.out);\n        int n=in.nextInt();\n        int[] a=new int[n];\n        for(int i=0;i<n;i++)a[i]=in.nextInt();\n        if(a[0]>1){\n            wr.write(\"-1\\n\");\n            wr.flush();\n            System.exit(0);\n        }\n        int[] ans=new int[n];Arrays.fill(ans,-1);\n        int[] map=new int[1000000];\n        for(int i=0;i<n-1;i++)if(a[i]!=a[i+1])ans[i+1]=a[i];\n        ArrayList<Integer> ar=new ArrayList<Integer>();\n        for(int i=0;i<n;i++)map[a[i]]=1;\n        for(int i=0;i<1000000;i++)if(map[i]==0)ar.add(i);\n        Collections.sort(ar);\n        int cnt=0;\n        for(int i=0;i<n;i++)if(ans[i]==-1)ans[i]=ar.get(cnt++);\n        for(int i=0;i<n;i++)wr.write(ans[i]+\" \");\n        wr.write(\"\\n\");\n        wr.flush();\n    }\n}\nclass FastReader{\n    public static StringTokenizer st;\n    public static BufferedReader in;\n    public static PrintWriter pw;\n    FastReader(){\n        in = new BufferedReader(new InputStreamReader(System.in));\n        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        st = new StringTokenizer(\"\");\n    }\n    public static int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n    public static long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n    public static double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n    public static String next() throws IOException {\n        while(!st.hasMoreElements() || st == null){\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve(int TestCase) {\n  int n;\n  cin >> n;\n  auto A = vector<int>(n);\n  for (auto& x : A) cin >> x;\n  if (A[0] > 1) {\n    cout << -1 << endl;\n    return;\n  }\n  auto ret = vector<int>(n, -1);\n  auto q = queue<int>{};\n  if (A[0] == 1)\n    ret[0] = 0;\n  else\n    q.push(0);\n  for (auto i = 0; i < n - 1; ++i) {\n    if (A[i] != A[i + 1]) {\n      ret[i + 1] = A[i];\n      for (auto j = A[i] + 1; j < A[i + 1]; ++j) {\n        if (q.empty()) {\n          cout << -1 << endl;\n          return;\n        }\n        ret[q.front()] = j;\n        q.pop();\n      }\n    } else {\n      q.push(i + 1);\n    }\n  }\n  int val = *max_element(A.begin(), A.end()) + 1;\n  while (!q.empty()) {\n    ret[q.front()] = val;\n    q.pop();\n  }\n  for (auto r : ret) cout << r << \" \";\n  cout << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t = 1;\n  for (auto i = 1; i <= t; ++i) {\n    solve(i);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t;\n  cin >> t;\n  bool can = true;\n  vector<long long> arr(t);\n  set<long long> s;\n  vector<long long> change;\n  for (long long i = 1; i <= t; i++) {\n    cin >> arr[i - 1];\n    if (i > 1) {\n      if (arr[i - 1] != arr[i - 2]) {\n        change.push_back(i - 1);\n      }\n    }\n    s.insert(arr[i - 1]);\n    if ((arr[i - 1]) > i) {\n      can = false;\n      break;\n    }\n  }\n  set<long long> se;\n  for (long long i = 0; i < 1e6; i++) {\n    se.insert(i);\n  }\n  for (long long i = 0; i < t; i++) {\n    if (se.find(arr[i]) != se.end()) {\n      se.erase(arr[i]);\n    }\n  }\n  vector<long long> b(t, -1);\n  if (can) {\n    for (long long i = 0; i < change.size(); i++) {\n      auto it = s.begin();\n      b[change[i]] = *it;\n      s.erase(s.begin());\n    }\n    for (long long i = 0; i < t; i++) {\n      if (b[i] == -1) {\n        auto it1 = se.begin();\n        b[i] = *it1;\n        se.erase(se.begin());\n      }\n    }\n    for (long long i = 0; i < t; i++) {\n      cout << b[i] << \" \";\n    }\n  } else {\n    cout << -1 << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nT ii() {\n  T a;\n  cin >> a;\n  return a;\n}\nstruct custom_hash {\n  static uint64_t splitmix64(uint64_t x) {\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM =\n        chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\nint main(void) {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  vector<int> ar(n), br(n, -1);\n  for (auto &it : ar) cin >> it;\n  for (int i = (1); i <= (n - 1); i++)\n    if (ar[i] != ar[i - 1]) br[i] = ar[i - 1];\n  unordered_set<int, custom_hash> valuesInA(ar.begin(), ar.end());\n  vector<int> availableValues;\n  for (int i = (0); i <= (1000000); i++)\n    if (!valuesInA.count(i)) availableValues.push_back(i);\n  reverse(availableValues.begin(), availableValues.end());\n  for (auto &it : br) {\n    if (it > -1) {\n      if (availableValues.back() < it - 1) {\n        cout << (-1) << endl;\n        return 0;\n      }\n      continue;\n    }\n    it = availableValues.back();\n    availableValues.pop_back();\n  }\n  for (auto var : br) cout << var << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.TreeSet;\n\npublic class _649 {\n\n\tstatic class Reader {\n\n\t\tfinal private int BUFFER_SIZE = 1 << 12;\n\t\tboolean consume = false;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\t\tprivate boolean reachedEnd = false;\n\n\t\tpublic Reader() {\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = 0;\n\t\t\tbytesRead = 0;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\treturn !reachedEnd;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = System.in.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1) {\n\t\t\t\tbuffer[0] = -1;\n\t\t\t\treachedEnd = true;\n\t\t\t}\n\t\t}\n\n\t\tprivate void consumeSpaces() throws IOException {\n\t\t\twhile (read() <= ' ' && reachedEnd == false)\n\t\t\t\t;\n\t\t\tbufferPointer--;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead) {\n\t\t\t\tfillBuffer();\n\t\t\t}\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tconsumeSpaces();\n\t\t\tbyte c = read();\n\t\t\tdo {\n\t\t\t\tsb.append((char) c);\n\t\t\t} while ((c = read()) > ' ');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\t;\n\t\t\tif (sb.length() == 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tString str = br.readLine();\n\t\t\treturn str;\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10L + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tdouble ret = 0;\n\t\t\tdouble div = 1;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = nextInt();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[][] nextIntMatrix(int n, int m) throws IOException {\n\t\t\tint[][] grid = new int[n][m];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tgrid[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn grid;\n\t\t}\n\n\t\tpublic char[][] nextCharacterMatrix(int n) throws IOException {\n\t\t\tchar[][] a = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = next().toCharArray();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (System.in == null) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tSystem.in.close();\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic Reader r = new Reader();\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tprivate static void solve1() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\t\t\tint x = r.nextInt();\n\n\t\t\tint arr[] = r.nextIntArray(n);\n\t\t\tint prefix[] = new int[n];\n\n\t\t\tHashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n\t\t\tTreeSet<Integer> set = new TreeSet<Integer>();\n\n\t\t\tprefix[0] = arr[0];\n\t\t\tif (prefix[0] % x > 0 && prefix[0] % x < x) {\n\t\t\t\tmap.put(prefix[0], 0);\n\t\t\t\tset.add(prefix[0]);\n\t\t\t}\n\n\t\t\tfor (int i = 1; i < n; i++) {\n\t\t\t\tprefix[i] += (prefix[i - 1] + arr[i]);\n\t\t\t\tif (prefix[i] % x > 0 && prefix[i] % x < x && !set.contains(prefix[i])) {\n\t\t\t\t\tmap.put(prefix[i], i);\n\t\t\t\t\tset.add(prefix[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint ans = 0;\n\t\t\tboolean flag = false;\n\n\t\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\t\tif ((prefix[i] % x) != 0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tans = Math.max(ans, i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tif (!set.isEmpty()) {\n\t\t\t\t\t\tint temp = set.first();\n\t\t\t\t\t\tint idx = map.get(temp);\n\t\t\t\t\t\tif (idx < i) {\n\t\t\t\t\t\t\tans = Math.max(ans, i - idx);\n\t\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tres.append(flag ? ans : -1).append(\"\\n\");\n\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\n\t}\n\n\tprivate static void solve2() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tint arr[] = r.nextIntArray(n);\n\n\t\t\tStringBuilder ans = new StringBuilder();\n\t\t\tans.append(arr[0] + \" \");\n\n\t\t\tint cnt = 2;\n\t\t\tchar prev = '+';\n\n\t\t\tfor (int i = 1; i < n; i++) {\n\t\t\t\tif (prev == '+' && arr[i] - arr[i - 1] < 0) {\n\t\t\t\t\tprev = '-';\n\t\t\t\t\tif (i > 1) {\n\t\t\t\t\t\tans.append(arr[i - 1] + \" \");\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t} else if (prev == '-' && arr[i] - arr[i - 1] > 0) {\n\t\t\t\t\tprev = '+';\n\t\t\t\t\tans.append(arr[i - 1] + \" \");\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans.append(arr[n - 1]);\n\n\t\t\tres.append(cnt + \"\\n\" + ans).append(\"\\n\");\n\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\n\t}\n\n\tprivate static void solve3() throws IOException {\n\n\t\tint n = r.nextInt();\n\t\tint arr[] = new int[n];\n\n\t\tboolean visited[] = new boolean[(int) 1e6 + 1];\n\t\tboolean flag = true;\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tvisited[arr[i] = r.nextInt()] = true;\n\t\t\tif (arr[i] > i + 1) {\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\n\t\tif (!flag) {\n\t\t\tout.print(-1);\n\t\t\tout.close();\n\t\t\treturn;\n\t\t}\n\n\t\tint ans[] = new int[n], cnt = 0;\n\t\tArrays.fill(ans, -1);\n\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\tcnt++;\n\t\t\t\tans[i] = arr[i - 1];\n\t\t\t}\n\t\t}\n\n\t\tcnt = (n - cnt);\n\t\tArrayList<Integer> non_vis = new ArrayList<Integer>();\n\n\t\tfor (int i = 0; i <= (int) 1e6 && cnt > 0; i++) {\n\t\t\tif (!visited[i]) {\n\t\t\t\tcnt--;\n\t\t\t\tnon_vis.add(i);\n\t\t\t}\n\t\t}\n\n\t\tint idx = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (ans[i] == -1) {\n\t\t\t\tans[i] = non_vis.get(idx++);\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tout.print(ans[i] + \" \");\n\t\t}\n\n\t\tout.close();\n\n\t}\n\n\tprivate static void solve4() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\n\t}\n\n\tprivate static void solve5() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static void solve6() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\n//\t\tsolve1();\n\n//\t\tsolve2();\n\n\t\tsolve3();\n\n//\t\tsolve4();\n//\n//\t\tsolve5();\n//\n//\t\tsolve6();\n\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.PriorityQueue;\nimport java.util.Scanner;\n\npublic class ProblemC {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\t\n\t\tint[] a = new int[n];\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = in.nextInt();\n\t\t}\n\t\t\n\t\tPriorityQueue<Integer> free = new PriorityQueue<>();\n\t\t\n\t\tint[] b = new int[n];\n\t\tint curr = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a[i] == curr) {\n\t\t\t\tfree.add(i);\n\t\t\t} else {\n\t\t\t\tb[i] = curr;\n\t\t\t\t\n\t\t\t\tfor (int j = curr + 1; j < a[i]; j++) {\n\t\t\t\t\tif (free.isEmpty()) {\n\t\t\t\t\t\tSystem.out.println(-1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tb[free.poll()] = j;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurr = a[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\twhile (!free.isEmpty()) {\n\t\t\tb[free.poll()] = n;\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tSystem.out.print(b[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename A, typename B>\nostream& operator<<(ostream& os, const pair<A, B>& p) {\n  os << \"(\" << p.first << \",\" << p.second << \") \";\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const vector<T>& v) {\n  for (auto i : v) os << i << \" \";\n  return os;\n}\nconst long long int mxN = 2e5;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int n;\n  cin >> n;\n  set<long long int> s1;\n  long long int a[n];\n  for (long long int i = 0; i < n; i++) cin >> a[i], s1.insert(a[i]);\n  set<long long int> s2;\n  for (long long int i = 0; i <= n; i++) {\n    if (s1.find(i) == s1.end()) s2.insert(i);\n  }\n  for (long long int i = 0; i < n; i++) {\n    if (i && a[i] != a[i - 1]) s2.insert(a[i - 1]);\n    cout << (*s2.begin()) << \" \";\n    s2.erase(s2.begin());\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from bisect import *\nfrom collections import *\nfrom math import gcd,ceil,sqrt,floor,inf\nfrom heapq import *\nfrom itertools import *\nfrom operator import add,mul,sub,xor,truediv,floordiv\nfrom functools import *\n \n#------------------------------------------------------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n# region fastio\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n \n#------------------------------------------------------------------------\ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\n#------------------------------------------------------------------------\n \nfrom types import GeneratorType\n \n \ndef bootstrap(f, stack=[]):\n    def wrappedfunc(*args, **kwargs):\n        if stack:\n            return f(*args, **kwargs)\n        else:\n            to = f(*args, **kwargs)\n            while True:\n                if type(to) is GeneratorType:\n                    stack.append(to)\n                    to = next(to)\n                else:\n                    stack.pop()\n                    if not stack:\n                        break\n                    to = stack[-1].send(to)\n            return to\n \n    return wrappedfunc\n \n \nfarr=[1]\nifa=[]\n \ndef fact(x,mod=0):\n    if mod:\n        while x>=len(farr):\n            farr.append(farr[-1]*len(farr)%mod)\n    else:\n        while x>=len(farr):\n            farr.append(farr[-1]*len(farr))\n    return farr[x]\n \ndef ifact(x,mod):\n    global ifa\n    ifa.append(pow(farr[-1],mod-2,mod))\n    for i in range(x,0,-1):\n        ifa.append(ifa[-1]*i%mod)\n    ifa=ifa[::-1]\n \ndef per(i,j,mod=0):\n    if i<j: return 0\n    if not mod:\n        return fact(i)//fact(i-j)\n    return farr[i]*ifa[i-j]%mod\n    \ndef com(i,j,mod=0):\n    if i<j: return 0\n    if not mod:        \n        return per(i,j)//fact(j)\n    return per(i,j,mod)*ifa[j]%mod\n \ndef catalan(n):\n    return com(2*n,n)//(n+1)\n    \ndef linc(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t>f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n \ndef rinc(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t<f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n \ndef ldec(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t<f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n \ndef rdec(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t>f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n \ndef isprime(n):\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            return False\n    return True\n \ndef binfun(x):\n    c=0\n    for w in arr:\n        c+=ceil(w/x)\n    return c\n \ndef lowbit(n):\n    return n&-n\n \ndef inverse(a,m):\n    a%=m\n    if a<=1: return a\n    return ((1-inverse(m,a)*m)//a)%m\n \nclass BIT:\n    def __init__(self,arr):\n        self.arr=arr\n        self.n=len(arr)-1\n        \n    def update(self,x,v):\n        while x<=self.n:\n            self.arr[x]+=v\n            x+=x&-x\n \n    def query(self,x):\n        ans=0\n        while x:\n            ans+=self.arr[x]\n            x&=x-1\n        return ans\n'''\nclass SMT:\n    def __init__(self,arr):\n        self.n=len(arr)-1\n        self.arr=[0]*(self.n<<2)\n        self.lazy=[0]*(self.n<<2)\n        def Build(l,r,rt):\n            if l==r:\n                self.arr[rt]=arr[l]\n                return\n            m=(l+r)>>1\n            Build(l,m,rt<<1)\n            Build(m+1,r,rt<<1|1)\n            self.pushup(rt)\n        Build(1,self.n,1)\n \n    def pushup(self,rt):\n        self.arr[rt]=self.arr[rt<<1]+self.arr[rt<<1|1]\n \n    def pushdown(self,rt,ln,rn):#lr,rn\u8868\u533a\u95f4\u6570\u5b57\u6570\n        if self.lazy[rt]:\n            self.lazy[rt<<1]+=self.lazy[rt]\n            self.lazy[rt<<1|1]=self.lazy[rt]\n            self.arr[rt<<1]+=self.lazy[rt]*ln\n            self.arr[rt<<1|1]+=self.lazy[rt]*rn\n            self.lazy[rt]=0\n            \n    def update(self,L,R,c,l=1,r=None,rt=1):#L,R\u8868\u793a\u64cd\u4f5c\u533a\u95f4\n        if r==None: r=self.n\n        if L<=l and r<=R:\n            self.arr[rt]+=c*(r-l+1)\n            self.lazy[rt]+=c\n            return\n        m=(l+r)>>1\n        self.pushdown(rt,m-l+1,r-m)\n        if L<=m: self.update(L,R,c,l,m,rt<<1)\n        if R>m: self.update(L,R,c,m+1,r,rt<<1|1)\n        self.pushup(rt)\n \n    def query(self,L,R,l=1,r=None,rt=1):\n        if r==None: r=self.n\n        #print(L,R,l,r,rt)\n        if L<=l and R>=r:\n            return self.arr[rt]\n        m=(l+r)>>1\n        self.pushdown(rt,m-l+1,r-m)\n        ans=0\n        if L<=m: ans+=self.query(L,R,l,m,rt<<1)\n        if R>m: ans+=self.query(L,R,m+1,r,rt<<1|1)\n        return ans\n'''       \nclass DSU:#\u5bb9\u91cf+\u8def\u5f84\u538b\u7f29\n    def __init__(self,n):\n        self.c=[-1]*n\n \n    def same(self,x,y):\n        return self.find(x)==self.find(y)\n \n    def find(self,x):\n        if self.c[x]<0:\n            return x\n        self.c[x]=self.find(self.c[x])\n        return self.c[x]\n \n    def union(self,u,v):\n        u,v=self.find(u),self.find(v)\n        if u==v:\n            return False\n        if self.c[u]<self.c[v]:\n            u,v=v,u\n        self.c[u]+=self.c[v]\n        self.c[v]=u\n        return True\n \n    def size(self,x): return -self.c[self.find(x)]\n    \nclass UFS:#\u79e9+\u8def\u5f84\n    def __init__(self,n):\n        self.parent=[i for i in range(n)]\n        self.ranks=[0]*n\n \n    def find(self,x):\n        if x!=self.parent[x]:\n            self.parent[x]=self.find(self.parent[x])\n        return self.parent[x]\n \n    def union(self,u,v):\n        pu,pv=self.find(u),self.find(v)\n        if pu==pv:\n            return False\n        if self.ranks[pu]>=self.ranks[pv]:\n            self.parent[pv]=pu\n            if self.ranks[pv]==self.ranks[pu]:\n                self.ranks[pu]+=1\n        else:\n            self.parent[pu]=pv\n \ndef Prime(n):\n    c=0\n    prime=[]\n    flag=[0]*(n+1)\n    for i in range(2,n+1):\n        if not flag[i]:\n            prime.append(i)\n            c+=1\n        for j in range(c):\n            if i*prime[j]>n: break\n            flag[i*prime[j]]=prime[j]\n            if i%prime[j]==0: break\n    return prime\n \ndef dij(s,graph):\n    d={}\n    d[s]=0\n    heap=[(0,s)]\n    seen=set()\n    while heap:\n        dis,u=heappop(heap)\n        if u in seen:\n            continue\n        for v in graph[u]:\n            if v not in d or d[v]>d[u]+graph[u][v]:\n                d[v]=d[u]+graph[u][v]\n                heappush(heap,(d[v],v))\n    return d\n \ndef GP(it): return [[ch,len(list(g))] for ch,g in groupby(it)]\n \nclass DLN:\n    def __init__(self,val):\n        self.val=val\n        self.pre=None\n        self.next=None\n\n\n\n\n\nt=1\nfor i in range(t):\n    n=N()\n    a=RLL()\n    if any(a[i]>i+1 for i in range(n)):\n        print(-1)\n    else:\n        b=[0]*n\n        ma=10**6\n        q=deque()\n        for i in range(n-1,0,-1):\n            if a[i]>a[i-1]:\n                b[i]=a[i-1]\n                for j in range(a[i]-1,a[i-1],-1):\n                    q.append(j)\n            else:\n                if q:\n                    b[i]=q.popleft()\n                else:\n                    b[i]=ma\n        if a[0]==0:\n            if q:\n                b[0]=q.popleft()\n            else:\n                b[0]=ma\n        print(*b)\n    \n        \n  \n    \n    \n            \n    \n''' \nsys.setrecursionlimit(200000)\nimport threading\nthreading.stack_size(10**8)\nt=threading.Thread(target=main)\nt.start()\nt.join()\n'''\n\n''' \nsys.setrecursionlimit(200000)\nimport threading\nthreading.stack_size(10**8)\nt=threading.Thread(target=main)\nt.start()\nt.join()\n'''\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tint n = sc.nextInt(), arr[] = new int[n], mex = 0;\n\t\tint ans[] = new int[n];\n\t\tArrays.fill(ans, n + 1);\n\t\tStack<Integer> idx = new Stack<>();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\n\t\tboolean flag = true;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tidx.add(i);\n\t\t\twhile (mex < arr[i] && !idx.isEmpty()) {\n\t\t\t\tans[idx.pop()] = mex++;\n\t\t\t}\n\t\t\tflag &= mex == arr[i];\n\t\t}\n\n\t\tif (flag) {\n\t\t\tfor (int x : ans) out.print(x + \" \");\n\t\t} else {\n\t\t\tout.println(-1);\n\t\t}\n\n\t\tout.close();\n\t}\n}\n\nclass Scanner {\n\tStringTokenizer st;\n\tBufferedReader br;\n\n\tpublic Scanner(InputStream system) {\n\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t}\n\n\tpublic Scanner(String file) throws Exception {\n\t\tbr = new BufferedReader(new FileReader(file));\n\t}\n\n\tpublic String next() throws IOException {\n\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\treturn st.nextToken();\n\t}\n\n\tpublic String nextLine() throws IOException {\n\t\treturn br.readLine();\n\t}\n\n\tpublic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(next());\n\t}\n\n\tpublic Long nextLong() throws IOException {\n\t\treturn Long.parseLong(next());\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t = 1;\n  while (t--) {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) cin >> a[i];\n    if (a[0] >= 2) {\n      cout << \"-1\" << endl;\n      return 0;\n    }\n    int b[n];\n    b[0] = n + 1;\n    for (int i = 1; i < n; i++) {\n      if (a[i] == a[i - 1])\n        b[i] = n + 1;\n      else\n        b[i] = a[i - 1];\n    }\n    int mex = 0;\n    vector<int> s;\n    unordered_set<int> ss;\n    for (int i = 0; i < n; i++) {\n      if (mex == a[i]) {\n        if (b[i] == n + 1) s.push_back(i);\n        continue;\n      }\n      if (b[i] == n + 1) s.push_back(i);\n      ss.insert(b[i]);\n      while (ss.find(mex) != ss.end()) mex++;\n      while (mex < a[i]) {\n        ss.insert(mex);\n        if (s.size() == 0) {\n          cout << \"-1\" << endl;\n          return 0;\n        }\n        b[s[s.size() - 1]] = mex;\n        while (ss.find(mex) != ss.end()) mex++;\n        s.pop_back();\n      }\n    }\n    for (int i = 0; i < n; i++) cout << b[i] << ' ';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys, heapq\n\nmax_int = 1000000001  # 10^9+1\nmin_int = -max_int\n\nn = int(sys.stdin.readline())\na = list(map(int, sys.stdin.readline().split()))\n\nd = {}\nmaxa = max(a)\nto_add = set(range(0, maxa + 2))\n\nfor num, one in enumerate(a):\n    if one - num >= 2:\n        print(-1)\n        exit()\n    d[one] = num\n    to_add.discard(one)\n\nh = list(to_add)\ndel to_add\nheapq.heapify(h)\n\nout = []\nlast = -1\nfor num, elem in enumerate(a):\n    if h:\n        last = heapq.heappop(h)\n    out.append(last)\n\n    if num == d[elem]:\n        heapq.heappush(h, elem)\n\nprint(' '.join(map(str, out)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 2 * 1e5 + 4;\nlong long add(long long a, long long b, long long m) {\n  if (a < 0) a += m;\n  if (b < 0) b += m;\n  long long res = ((a % m) + (b % m)) % m;\n  res %= m;\n  return res;\n}\nlong long mul(long long a, long long b, long long m) {\n  if (a < 0) a += m;\n  if (b < 0) b += m;\n  long long res = ((a % m) * (b % m)) % m;\n  res %= m;\n  return res;\n}\nlong long sub(long long a, long long b, long long m) {\n  long long res = (a - b + m) % m;\n  res %= m;\n  return res;\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  long long n;\n  cin >> n;\n  vector<long long> res(n, -1);\n  set<long long> second;\n  long long prev = 0;\n  for (long long i = 0; i < n; i++) {\n    long long cur;\n    cin >> cur;\n    second.insert(cur);\n    if (cur != prev) res[i] = prev;\n    prev = cur;\n  }\n  second.insert(0);\n  long long idx = 0;\n  for (long long i = 0; i < n; i++) {\n    if (res[i] != -1) continue;\n    while (second.find(idx) != second.end()) {\n      idx++;\n      cerr << idx << '\\n';\n    }\n    second.insert(idx);\n    res[i] = idx;\n  }\n  for (auto x : res) cout << x << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nsys.setrecursionlimit(2*10**5)\n\nn = int(input())\nl = [int(i) for i in input().split()]\ncheck = [0]*(2*10**5)\nfor i in l:\n    check[i] = 1\n\nans = []\nc = False\nfor i in range(n):\n    if check[i] == 0:\n        now = i\n        c = True\n        break\nif not c:\n    now = max(l)+1\nM = now\nb = l[0]\nfor i in range(n):\n    if b == l[i]:\n        while now < n+2 and check[now]:\n            now += 1    \n        ans.append(now)\n        check[now] = 1\n        M = max(M,now)\n    else:\n        if now < b and check[b-1]:\n            if b-1 == now:\n                M = max(M,b)\n                now = b\n        ans.append(b)\n        b = l[i]\n        \n    if M < l[i]-1:\n        print(-1)\n        exit()\n    \nprint(*ans)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nint ans[maxn], raw[maxn];\nint main() {\n  int n;\n  cin >> n;\n  bool ok = 1;\n  for (int i = 1; i <= n; i++) {\n    ans[i] = i - 1;\n    cin >> raw[i];\n    if (raw[i] > i) ok = 0;\n  }\n  ans[n + 1] = n + 1;\n  for (int i = n; i >= 1; i--) {\n    if (raw[i] != i) swap(ans[raw[i] + 1], ans[i + 1]);\n  }\n  if (ok) {\n    for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n  } else\n    cout << -1;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nn = int(input())\nbb = \"\"\nc = [0 for j in range(n+1)]\n\na = input().split(\" \")\nfor j in range(n):\n    a[j] = int(a[j])\n    c[a[j]] = 1\n\nb = [0 for j in range(n)]\nk = 0\nfor j in range(n):\n    if j == 0 or a[j] == a[j-1]:\n        while c[k] != 0:\n            k += 1\n        b[j] = k\n        k += 1\n    else:\n        b[j] = a[j-1]\n\nfor j in range(len(b)):\n    bb += str(b[j]) + \" \"\nprint(bb)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n), b(n, -1);\n  vector<bool> used(1e6 + 1, 0);\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    if (i && a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      used[a[i]] = 1;\n    }\n    used[a[i]] = 1;\n  }\n  int cur = 0;\n  for (int i = 0; i < n; ++i) {\n    if (b[i] != -1) goto done;\n    while (used[cur]) ++cur;\n    b[i] = cur, used[cur] = 1;\n  done:\n    cout << b[i] << \" \";\n    ;\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MX = 10010896;\nconst int lmt = 3164;\nconst int N = 10000001;\nconst int MOD = 1000000007;\nusing namespace std;\nlong long int extgcd(long long int a, long long int b, long long int& x,\n                     long long int& y) {\n  if (b == 0) {\n    x = 1;\n    y = 0;\n    return a;\n  } else {\n    int g = extgcd(b, a % b, y, x);\n    y -= a / b * x;\n    return g;\n  }\n}\nlong long int modpow(long long int a, long long int b) {\n  long long int res = 1;\n  a %= MOD;\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % MOD;\n    a = a * a % MOD;\n  }\n  return res;\n}\ninline void readi(int& n) {\n  n = 0;\n  char c = getchar();\n  while (c < '0' or c > '9') c = getchar();\n  while (c >= '0' and c <= '9') {\n    n = (n << 3) + (n << 1) + c - '0';\n    c = getchar();\n  }\n}\ninline void readl(long long int& n) {\n  n = 0;\n  char c = getchar();\n  while (c < '0' or c > '9') c = getchar();\n  while (c >= '0' and c <= '9') {\n    n = (n << 3) + (n << 1) + c - '0';\n    c = getchar();\n  }\n}\ninline void print(long long int a) {\n  char s[20];\n  int i = 0;\n  do {\n    s[i++] = a % 10 + '0';\n    a /= 10;\n  } while (a);\n  i--;\n  while (i >= 0) putchar(s[i--]);\n  putchar(' ');\n}\ninline void printl(long long int a) {\n  char s[20];\n  int i = 0;\n  do {\n    s[i++] = a % 10 + '0';\n    a /= 10;\n  } while (a);\n  i--;\n  while (i >= 0) putchar(s[i--]);\n  putchar('\\n');\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  int* a = new int[n];\n  for (int i = (int)0; i < (int)n; ++i) cin >> a[i];\n  int flag = 1;\n  for (int i = (int)0; i < (int)n; ++i) {\n    if (a[i] > (i + 1)) {\n      flag = 0;\n    }\n  }\n  if (!flag)\n    cout << -1;\n  else {\n    int* ans = new int[n];\n    for (int i = (int)0; i < (int)n; ++i) ans[i] = -1;\n    set<int> found;\n    for (int i = (int)n - 1; i >= (int)0; --i) {\n      if (found.find(a[i]) == found.end()) {\n        if (i != n - 1) ans[i + 1] = a[i];\n        found.insert(a[i]);\n      }\n    }\n    int hold = 0;\n    for (int i = (int)0; i < (int)n; ++i) {\n      while (found.find(hold) != found.end()) hold++;\n      if (ans[i] != -1) continue;\n      ans[i] = hold;\n      hold++;\n    }\n    for (int i = (int)0; i < (int)n; ++i) cout << ans[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nvoid c_p_c() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n}\nlong long int vis[100005];\nlong long int arr[100005];\nlong long int ans[100005];\nint32_t main() {\n  c_p_c();\n  long long int n;\n  cin >> n;\n  long long int f = 0;\n  for (long long int i = 1; i <= n; i++) {\n    cin >> arr[i];\n    if (arr[i] > i) {\n      f = 1;\n    }\n    vis[arr[i]] = 1;\n  }\n  if (f) {\n    cout << -1 << \"\\n\";\n    return 0;\n  }\n  memset(ans, -1, sizeof(ans));\n  for (long long int i = 2; i <= n; i++) {\n    if (arr[i] != arr[i - 1]) {\n      ans[i] = arr[i - 1];\n      vis[arr[i - 1]] = 1;\n    }\n  }\n  vector<long long int> not_vis;\n  for (long long int i = 0; i <= 100004; i++) {\n    if (vis[i] != 1) {\n      not_vis.push_back(i);\n    }\n  }\n  long long int j = 0;\n  for (long long int i = 1; i <= n; i++) {\n    if (ans[i] == -1) {\n      ans[i] = not_vis[j++];\n    }\n  }\n  for (long long int i = 1; i <= n; i++) {\n    cout << ans[i] << \" \";\n  }\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int INF = 10e7;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long int n, i, f = 0, x;\n  cin >> n;\n  vector<long long int> v(n + 1), ans;\n  set<long long int> s1, s2;\n  for (i = 0; i < n; i++) {\n    cin >> v[i];\n    if (v[i] > i + 1) f = 1;\n    x = v[i];\n    s1.insert(x);\n  }\n  v[n] = INF;\n  if (f == 1) {\n    cout << \"-1\\n\";\n    return 0;\n  }\n  long long int mex = 0;\n  for (i = 0; i < n; i++) {\n    while (s1.find(mex) != s1.end()) mex++;\n    if (s2.empty() == true) {\n      ans.push_back(mex);\n    } else {\n      auto it = s2.begin();\n      ans.push_back(*it);\n      s2.erase(it);\n    }\n    if (v[i] != v[i + 1]) {\n      auto it = s1.find(v[i]);\n      s2.insert(*it);\n    }\n    if (s2.empty() == true) mex++;\n  }\n  for (auto it : ans) cout << it << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing cd = complex<double>;\nconst double PI = acos(-1);\nvoid fft(vector<cd>& a, bool invert) {\n  int n = a.size();\n  if (n == 1) return;\n  vector<cd> a0(n / 2), a1(n / 2);\n  for (int i = 0; 2 * i < n; i++) {\n    a0[i] = a[2 * i];\n    a1[i] = a[2 * i + 1];\n  }\n  fft(a0, invert);\n  fft(a1, invert);\n  double ang = 2 * PI / n * (invert ? -1 : 1);\n  cd w(1), wn(cos(ang), sin(ang));\n  for (int i = 0; 2 * i < n; i++) {\n    a[i] = a0[i] + w * a1[i];\n    a[i + n / 2] = a0[i] - w * a1[i];\n    if (invert) {\n      a[i] /= 2;\n      a[i + n / 2] /= 2;\n    }\n    w *= wn;\n  }\n}\nvector<int> multiply(vector<int> const& a, vector<int> const& b) {\n  vector<cd> fa(a.begin(), a.end()), fb(b.begin(), b.end());\n  int n = 1;\n  while (n < a.size() + b.size()) n <<= 1;\n  fa.resize(n);\n  fb.resize(n);\n  fft(fa, false);\n  fft(fb, false);\n  for (int i = 0; i < n; i++) fa[i] *= fb[i];\n  fft(fa, true);\n  vector<int> result(n);\n  for (int i = 0; i < n; i++) result[i] = round(fa[i].real());\n  return result;\n}\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nbool pali(string s) {\n  long long l = s.length();\n  for (int i = 0; i < l / 2; i++) {\n    if (s[i] != s[l - i - 1]) return false;\n  }\n  return true;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  long long n;\n  cin >> n;\n  long long* a = new long long[n];\n  long long maxi = -1;\n  long long ans = true;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < maxi) {\n      ans = false;\n    }\n    maxi = max(maxi, a[i]);\n  }\n  if (ans) {\n    long long val = n;\n    vector<long long> empty;\n    vector<long long> mex;\n    bool ans = true;\n    mex.push_back(-1);\n    long long* b = new long long[n];\n    for (int i = 0; i < n; i++) {\n      b[i] = -1;\n    }\n    if (a[0] == 0)\n      empty.push_back(0);\n    else {\n      mex.push_back(0);\n      b[0] = 0;\n    }\n    for (int i = 1; i < n; i++) {\n      if (a[i] == a[i - 1]) {\n        empty.push_back(i);\n        continue;\n      } else {\n        long long p = a[i];\n        empty.push_back(i);\n        long long me = mex[mex.size() - 1] + 1;\n        long long val = a[i] - 1;\n        for (int j = me; j <= val; j++) {\n          if (empty.size() == 0) {\n            ans = false;\n            break;\n          }\n          int l = empty[empty.size() - 1];\n          b[l] = j;\n          empty.pop_back();\n        }\n        if (ans) mex.push_back(val);\n      }\n      if (!ans) break;\n    }\n    if (!ans)\n      cout << -1 << endl;\n    else {\n      long long tar = n;\n      for (int i = 0; i < n; i++) {\n        if (b[i] == -1) {\n          b[i] = tar;\n          tar--;\n        }\n      }\n      for (int i = 0; i < n; i++) cout << b[i] << ' ';\n    }\n  } else\n    cout << -1 << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, j, k, x, y;\n  cin >> n;\n  int a[n], b[n + 1];\n  bool f[n + 1];\n  memset(f, false, sizeof(f));\n  memset(b, -1, sizeof(b));\n  for (i = 0; i < n; i++) cin >> a[i];\n  for (i = 0; i < n;) {\n    j = i + 1;\n    while (j < n && a[j] == a[i]) j++;\n    b[j] = a[i], f[a[i]] = true;\n    i = j;\n  }\n  j = 0;\n  for (i = 0; i < n; i++) {\n    if (b[i] != -1) continue;\n    while (f[j]) j++;\n    b[i] = j, j++;\n  }\n  for (i = 0; i < n; i++) printf(\"%d \", b[i]);\n}\n"
        },
        {
            "language": 4,
            "solution": "/*****Author: Satyajeet Singh, Delhi Technological University************************************/\n    import java.io.*;\n    import java.util.*;\n    import java.text.*; \n    import java.lang.*;\n    import java.math.*;\npublic class Main{\n/*********************************************Constants******************************************/\n    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));        \n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static long mod=(long)1e9+7;\n    static long mod1=998244353;\n    static ArrayList<Integer> graph[];\n    static int pptr=0,pptrmax=0;\n    static String st[];\n/*****************************************Solution Begins***************************************/\n    \n    public static void main(String args[]) throws Exception{\n        \n            int n=pi();\n            int input[]=new int[n];\n            int f[]=new int[1000005];\n            TreeSet<Integer> set=new TreeSet<>();\n            set.add(0);\n            for(int i=0;i<n;i++){\n                input[i]=pi();\n                f[input[i]]++;\n                set.add(i+1);\n            }\n            for(int u:input)\n                set.remove(u);\n\n            boolean flag=true;\n            int dp[]=new int[n];\n            for(int i=0;i<n;i++){\n                Integer aa=set.first();\n                if(aa==null){\n                    aa=input[i]-1;\n                }\n                else{\n                    set.remove(aa);\n                }\n                dp[i]=aa;\n                f[input[i]]--;  \n                if(f[input[i]]==0){\n                    set.add(input[i]);\n                }\n            }\n            if(flag){\n                for(int u:dp)out.print(u+\" \");\n                out.println();\n            }\n            else{\n                out.println(-1);\n            }\n   \n/****************************************Solution Ends**************************************************/\n        out.flush();\n        out.close();\n    }\n/****************************************Template Begins************************************************/\n    static void nl() throws Exception{\n        pptr=0;\n        st=br.readLine().split(\" \");\n        pptrmax=st.length;\n    }\n    static void nls() throws Exception{\n        pptr=0;\n        st=br.readLine().split(\"\");\n        pptrmax=st.length;\n    }\n    static int pi() throws Exception{\n        if(pptr==pptrmax)\n            nl();\n        return Integer.parseInt(st[pptr++]);\n    }\n    static long pl() throws Exception{\n        if(pptr==pptrmax)\n            nl();\n        return Long.parseLong(st[pptr++]);\n    }\n    static double pd() throws Exception{\n        if(pptr==pptrmax)\n            nl();\n        return Double.parseDouble(st[pptr++]);\n    }\n    static String ps() throws Exception{\n        if(pptr==pptrmax)\n            nl();\n        return st[pptr++];\n    }\n/***************************************Precision Printing**********************************************/\n    static void printPrecision(double d){\n        DecimalFormat ft = new DecimalFormat(\"0.0000000000\"); \n        out.println(ft.format(d));\n    }\n/**************************************Bit Manipulation**************************************************/\n    static int countBit(long mask){\n        int ans=0;\n        while(mask!=0){\n            mask&=(mask-1);\n            ans++;\n        }\n        return ans;\n    }\n/******************************************Graph*********************************************************/\n    static void Makegraph(int n){\n        graph=new ArrayList[n];\n        for(int i=0;i<n;i++)\n            graph[i]=new ArrayList<>();\n    }\n    static void addEdge(int a,int b){\n        graph[a].add(b);\n    }\n    // static void addEdge(int a,int b,int c){\n    //     graph[a].add(new Pair(b,c));\n    // }    \n/*********************************************PAIR********************************************************/\n    static class Pair{\n        int u;\n        int v;\n        public Pair(int u, int v) {\n            this.u = u;\n            this.v = v;\n        }\n        public int hashCode() {\n            int hu = (int) (u ^ (u >>> 32));\n            int hv = (int) (v ^ (v >>> 32));\n            return 31 * hu + hv;\n        }\n        public boolean equals(Object o) {\n            Pair other = (Pair) o;\n            return u == other.u && v == other.v;\n        }\n        public String toString() {\n            return \"[u=\" + u + \", v=\" + v + \"]\";\n        }\n    }\n/******************************************Long Pair*******************************************************/\n    static class Pairl{\n        long u;\n        long v;\n        public Pairl(long u, long v) {\n            this.u = u;\n            this.v = v;\n        }\n        public int hashCode() {\n            int hu = (int) (u ^ (u >>> 32));\n            int hv = (int) (v ^ (v >>> 32));\n            return 31 * hu + hv;\n        }\n        public boolean equals(Object o) {\n            Pairl other = (Pairl) o;\n            return u == other.u && v == other.v;\n        }\n        public String toString() {\n            return \"[u=\" + u + \", v=\" + v + \"]\";\n        }\n    }\n/*****************************************DEBUG***********************************************************/\n    public static void debug(Object... o){\n        System.out.println(Arrays.deepToString(o));\n    }\n/************************************MODULAR EXPONENTIATION***********************************************/\n    static long modulo(long a,long b,long c){\n        long x=1,y=a%c;\n        while(b > 0){\n            if(b%2 == 1)\n                x=(x*y)%c;\n            y = (y*y)%c;\n            b = b>>1;\n        }\n        return  x%c;\n    }\n/********************************************GCD**********************************************************/\n    static long gcd(long x, long y){\n        if(x==0)\n            return y;\n        if(y==0)\n            return x;\n        long r=0, a, b;\n        a = (x > y) ? x : y; \n        b = (x < y) ? x : y;\n        r = b;\n        while(a % b != 0){\n            r = a % b;\n            a = b;\n            b = r;\n        }\n        return r;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\n\n\ndef inputIntArray():\n    return list(map(int, input().rstrip().split()))\n\n\ndef inputArray():\n    return input().rstrip().split()\n\n\ndef inputVars():\n    return map(int, input().rstrip().split())\n\n\ndef inputNum():\n    return int(input())\n\n\ndef main():\n    for _ in range(1):\n        n = inputNum()\n        arr = [0]+inputIntArray()\n        ansArr = [-1]*(n+1)\n        usedArrValues = [False]*10**6\n        for pos in range(1, n+1):\n            if arr[pos]!=arr[pos-1]:\n                ansArr[pos] = arr[pos-1]\n                usedArrValues[ansArr[pos]] = True\n        usedArrValues[arr[-1]] = True\n        tempPos = 0\n        for pos in range(1, n+1):\n            while usedArrValues[tempPos]:\n                tempPos+=1\n            if ansArr[pos] == -1:\n                ansArr[pos] = tempPos\n                usedArrValues[tempPos] = True\n            print(ansArr[pos], end=\" \")\n        print(\" \")\n\n\n#.........................................FAST INPUT OUTPUT.......................................\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n#....................................END OF FAST I/O............................................\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tpublic static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\tpublic static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\tpublic static Scanner sc = new Scanner(System.in);\n\tpublic static StringTokenizer st;\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\tint n = Integer.parseInt(br.readLine());\n\n\t\tint[] arr = new int[n + 1];\n\t\tint[] ans = new int[n + 1];\n\t\tboolean[] used = new boolean[n + 1];\n\t\tArrays.fill(ans, -1);\n\n\t\tst = new StringTokenizer(br.readLine());\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tint cur = Integer.parseInt(st.nextToken());\n\t\t\tif (cur > i) {\n\t\t\t\tSystem.out.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tarr[i] = cur;\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (arr[i] != arr[i + 1]) {\n\t\t\t\tans[i] = arr[i];\n\t\t\t\tused[ans[i]] = true;\n\t\t\t}\n\t\t}\n\t\tused[arr[n]] = true;\n\n\t\tint pos = n;\n\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\tif (ans[i] == -1) {\n\t\t\t\tfor (int j = pos; j >= 0; j--) {\n\t\t\t\t\tif (used[j]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tans[i] = j;\n\t\t\t\t\tused[j] = true;\n\t\t\t\t\tpos = j - 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tbw.write(ans[i] + \" \");\n\t\t}\n\t\tbw.write(\"\\n\");\n\t\tbw.flush();\n\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\n# sys.setrecursionlimit(pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var))+end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return map(int, data().split())\ndef ssp(): return map(str, data().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nn = int(data())\narr = l()\nfor i in range(n):\n    if arr[i] > i+1:\n        out(-1)\n        exit()\nc = C(arr)\nanswer = [-1] * n\nm = 0\nfor i in range(n):\n    if i > 0 and arr[i] != arr[i-1]:\n        answer[i] = arr[i-1]\n        m = max(arr[i], m)\n    else:\n        while c[m] > 0:\n            m += 1\n        answer[i] = m\n        m += 1\n    c[arr[i]] -= 1\nout(*answer)\n"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\nfrom itertools import permutations\ninput = sys.stdin.readline\n\nn=int(input())\narr=list(map(int,input().split()))\nif arr[-1]==\"\\n\":\n    arr.pop()\n\nans=[-1]*n\ntot=[0]\nfor i in range(n-1):\n    if arr[i]!=arr[i+1]:\n        ans[i+1]=arr[i]\n        tot.append(i+1)\n\nif n==1:\n    pass\nelse:\n    if arr[-1]!=arr[-2]:\n        tot.append(n-1)\n\ncur=0\ndone=0\n# print(\"ans\",ans)\n# print(\"tot\",tot)\n\nfor i in range(n):\n    if ans[i]==-1:\n        while cur<len(tot) and done==arr[tot[cur]]:\n            done+=1\n            cur+=1\n        if cur>len(tot):\n            break\n        ans[i]=done\n        done+=1\n\n        \n\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1e6 + 10;\nlong long PI = acos(-1.0), MOD = 1000000007;\nlong long n, m, x, y, z, k, sol, sum, ans, l, r, xx, yy, t;\nlong long a[N], ma[N], mem[1000][1000];\nvector<long long> v;\nvector<long long> v1;\nvector<long long> v2;\nvector<pair<long long, long long> > vp;\nmap<long long, long long> b;\nstring s1, s2, s;\nset<long long> st;\nchar c;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    x = max(a[i], x);\n    ma[a[i]]++;\n  }\n  vector<long long> ans;\n  for (int i = 0; i < 1e5 + 10; i++) {\n    if (!ma[i]) st.insert(i);\n  }\n  for (long long i = 0; i < n; i++) {\n    x = a[i];\n    if (x > ans.size() + 1) {\n      cout << -1 << endl;\n      return 0;\n    } else {\n      auto it = st.begin();\n      ans.push_back(*it);\n      st.erase(it);\n      ma[a[i]]--;\n      if (ma[a[i]] == 0) {\n        st.insert(a[i]);\n      }\n    }\n  }\n  for (int i = 0; i < ans.size(); i++) cout << ans[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nl=[0]*(1000001)\nfor i in a:\n    l[i]=1\ns,np,f,j,k=[],[],[],0,0\nfor i in  range(0,1000001):\n    if l[i]==0:\n        np.append(i)\nw=len(np)        \nfg=0    \nfor i in range(0,n):\n    if a[i]>(i+1):\n        fg=1\n        break\nif fg==1:\n    print(-1)\nelse:\n    for i in range(0,n):\n        b=len(s)\n        if j<b and k<w:\n            if s[j]<np[k] and s[j]!=a[i]:\n                f.append(s[j])\n                j+=1\n            else:\n                f.append(np[k])\n                k+=1\n        elif k>=w and j<b:\n            if s[j]==a[i]:\n                fg=1\n                break\n            else:\n                f.append(s[j])\n                j+=1\n        elif k<w and j>=b:\n            f.append(np[k])\n            k+=1\n        else:\n            fg=1\n            break\n        if b!=0:\n            if s[b-1]!=a[i]:\n                s.append(a[i])\n        else:\n            s.append(a[i])\nif fg==1:\n    print(-1)\nelse:\n    print(\" \".join(str(a) for a in f))"
        },
        {
            "language": 4,
            "solution": "//package com.company;\nimport java.io.*;\nimport java.util.*;\npublic class Main{\n    public static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n        public String nextLine() {\n            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n            while(isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public char nextChar() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            return (char)c;\n        }\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res.toString();\n        }\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n    public static void main(String args[]){\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n        int n;\n        n=in.nextInt();\n        int a[]=new int[n];\n        int b[]=new int[n];\n        int c[]=new int[n+1];\n        int flag=0;\n        for(int i=0;i<n;i++)\n        {\n            a[i]=in.nextInt();\n            b[i]=-1;\n            c[a[i]]++;\n        }\n        for(int i=1;i<n;i++)\n        {\n            if(a[i]!=a[i-1])\n            {\n                b[i]=a[i-1];\n            }\n        }\n        int cnt=0;\n        for(int i=0;i<n;i++)\n        {\n            if(b[i]==-1)\n            {\n                while(c[cnt]!=0)\n                {\n                    cnt++;\n                }\n                b[i]=cnt;\n                cnt++;\n            }\n        }\n        for(int i=0;i<n;i++)\n        {\n            w.print(b[i]+\" \");\n        }\n        w.close();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong double pi = 3.14159265358979;\nconst int mod = 1e9 + 7;\nconst int N = 1e6 + 7;\nvoid solve() {\n  int n;\n  cin >> n;\n  int a[n + 1];\n  int ok = 1;\n  map<int, int> mp;\n  for (int i = 1; i < n + 1; i++) {\n    cin >> a[i];\n    if (a[i] > i) ok = 0;\n    mp[a[i]] = 1;\n  }\n  if (!ok) {\n    cout << -1;\n    return;\n  }\n  int cur = 0;\n  int ans[n + 1];\n  for (int i = 1; i < n + 1; i++) {\n    while (mp[cur]) cur++;\n    if (i == 1) {\n      ans[i] = cur++;\n    } else {\n      if (a[i] == a[i - 1]) {\n        ans[i] = cur++;\n      } else {\n        ans[i] = a[i - 1];\n      }\n    }\n    cout << ans[i] << \" \";\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int tc = 1;\n  while (tc--) {\n    solve();\n    cout << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nimport math \nfrom collections import Counter,deque\nL=lambda:list(map(int, stdin.readline().strip().split()))\nM=lambda:map(int, stdin.readline().strip().split())\nI=lambda:int(stdin.readline().strip())\nIN=lambda:stdin.readline().strip()\nC=lambda:stdin.readline().strip().split()\nmod=1000000007\n#Keymax = max(Tv, key=Tv.get)\ndef s(a):print(\" \".join(list(map(str,a))))\n#______________________-------------------------------_____________________#\n#I_am_pavan\ndef solve():\n    n=I()\n    a=L()\n    ans=[-1]*n\n    b=[0]*(n+1)\n    if a[0]==1:\n        ans[0]=0\n        b[0]=-1\n    for i in range(1,n):\n        if a[i]>a[i-1]:\n            ans[i]=a[i-1]\n            b[a[i-1]]=-1\n    j=0\n    b[a[-1]]=-1\n    #print(ans,b)\n    for i in range(n):\n        if ans[i]==-1:\n            while b[j]==-1:\n                j+=1\n            ans[i]=j\n            j+=1\n    print(*ans)\nfor i in range(1):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "# deal with all zeroes or 0,1,2,3,4\nn = int(input())\narr = [int(x) for x in input().split()]\nend = arr[-1]\nstack = []\nsetarr = set(arr)\nfor x in range(end):\n\tif x not in setarr:\n\t\tstack.append(x)\nstack.reverse()\nsoln = []\nfor i in range(n):\n\tif len(stack) == 0:\n\t\tsoln.append(end+1)\n\telse:\n\t\tsoln.append(stack.pop())\n\tif i < n - 1 and arr[i+1] > arr[i]:\n\t\tstack.append(arr[i])\nprint(' '.join([str(x) for x in soln]))"
        },
        {
            "language": 3,
            "solution": "import sys\n# sys.stdin = open('input.txt', 'r') \n# sys.stdout = open('output.txt', 'w')\n \nimport math\nimport collections\nfrom sys import stdin,stdout,setrecursionlimit\nimport bisect as bs\nsetrecursionlimit(2**20)\nM = 10**9+7\n \n# T = int(stdin.readline())\nT = 1      \n\nfor _ in range(T):\n    n = int(stdin.readline())\n    # a,b = list(map(int,stdin.readline().split()))\n    a = list(map(int,stdin.readline().split()))\n    # b = list(map(int,stdin.readline().split()))\n    # q = list(map(int,stdin.readline().split()))\n    # b = list(map(int,stdin.readline().split()))\n    # s = stdin.readline().strip('\\n')\n    d = [-1]*(n)\n    done = [False]*(n+1)\n    s = 0\n    for i in range(n-1):\n        if(a[i] == a[i+1]):\n            continue\n        d[i+1] = a[i]\n        done[a[i]] = True\n        s = i+1\n    d[0] = -1 if a[0] == 0 else 0\n    if(a[0] == 1):\n        done[0] = True\n    done[a[-1]] = True\n    fin = []\n    for i in range(n,-1,-1):\n        if(not done[i]):\n            fin.append(i)\n    for i in range(n):\n        if(d[i] == -1):\n            d[i] = fin.pop()  \n    for h in d:\n        print(h, end =' ')\n    print('')"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStream;\nimport java.io.PrintStream;\nimport java.util.Arrays;\nimport java.util.TreeSet;\nimport java.util.stream.IntStream;\n\npublic class ProblemC {\n\n    private static int[] solve(int a[], int n) throws Exception {\n        TreeSet<Integer> numbers = new TreeSet<>();\n        IntStream.rangeClosed(0, n).forEach(numbers::add);\n        numbers.remove(a[n]);\n        // \u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u0440\u043e\u0445\u043e\u0434: \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439 A[i-1]!=A[i] \u0441\u0440\u0430\u0437\u0443 B[i] = A[i-1]\n        // \u0432\u043d\u0443\u0442\u0440\u0438 \u0438\u0434\u0451\u043c \u0432 \u043e\u0431\u0440\u0430\u0442\u043a\u0443: B[j-1] = B[j]+1 \u043f\u043e\u043a\u0430 B[j-1]<A[i]\n        // \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043f\u0440\u043e\u0445\u043e\u0434 - \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0446\u0438\u0444\u0440\u044b, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439\n\n        int[] b = new int[n + 1];\n        Arrays.fill(b, -1);\n        // \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437 \u0440\u0435\u0448\u0430\u0435\u043c \u0437\u0430\u0434\u0430\u0447\u0443 \u043d\u0430 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0435 \u043e\u0442 j..i, \u0433\u0434\u0435 \u0410[i]==i, \u0430 j = i_\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0435 + 1\n        for (int i = 2; i <= n; i++) {\n            if (a[i - 1] != a[i]) {\n                b[i] = a[i - 1];\n                numbers.remove(b[i]);\n                for (int j = i, value = b[i] + 1; j > 1 && b[j] + 1 < a[i]; j--) {\n                    if (b[j - 1] == -1) {\n                        b[j - 1] = value;\n                        numbers.remove(value);\n                        value++;\n                    }\n                }\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            if (b[i] == -1) {\n                b[i] = numbers.first();\n                numbers.remove(b[i]);\n            }\n        }\n        return b;\n    }\n\n    public static void solve(InputStream in, PrintStream out) throws Exception {\n        java.util.Scanner scanner = new java.util.Scanner(in);\n        int n = scanner.nextInt();\n        int[] a = new int[n + 1];\n        for (int i = 1; i <= n; i++)\n            a[i] = scanner.nextInt();\n        int[] b = solve(a, n);\n        for (int i = 1; i <= n; i++)\n            out.print(b[i] + \" \");\n    }\n\n    public static void main(String[] args) throws Exception {\n        solve(System.in, System.out);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Thread thread = new Thread(null, new TaskAdapter(), \"\", 1 << 27);\n        thread.start();\n        thread.join();\n    }\n\n    static class TaskAdapter implements Runnable {\n        @Override\n        public void run() {\n            InputStream inputStream = System.in;\n            OutputStream outputStream = System.out;\n            FastReader in = new FastReader(inputStream);\n            PrintWriter out = new PrintWriter(outputStream);\n            CEhabAndPrefixMEXs solver = new CEhabAndPrefixMEXs();\n            solver.solve(1, in, out);\n            out.close();\n        }\n    }\n\n    static class CEhabAndPrefixMEXs {\n        public void solve(int testNumber, FastReader s, PrintWriter w) {\n            int n = s.nextInt();\n            boolean[] vis = new boolean[n + 1];\n            int[] a = new int[n + 1];\n            for (int i = 1; i <= n; i++) vis[a[i] = s.nextInt()] = true;\n            ArrayList<Integer> not = new ArrayList<>();\n            for (int i = 1; i <= n; i++) {\n                if (!vis[i]) not.add(i);\n            }\n            int ptr = 0;\n            for (int i = 1; i <= n; i++) {\n                if (a[i] == a[i - 1]) w.print(not.get(ptr++) + \" \");\n                else w.print(a[i - 1] + \" \");\n            }\n            w.println();\n        }\n\n    }\n\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private FastReader.SpaceCharFilter filter;\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n\n            if (numChars == -1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n\n                curChar = 0;\n\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if (numChars <= 0)\n                    return -1;\n            }\n\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n\n            int c = read();\n\n            while (isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n\n            if (filter != null)\n                return filter.isSpaceChar(c);\n\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long powa(long long x, long long y) {\n  long long ans = 1;\n  while (y) {\n    if (y & 1) {\n      ans = (ans % 1000000007 * x % 1000000007) % 1000000007;\n    }\n    x = (x % 1000000007 * x % 1000000007) % 1000000007;\n    y = y >> 1;\n  }\n  return ans;\n}\nvoid solve() {\n  int n, nei = 0, ni = 0, mx = INT_MIN;\n  cin >> n;\n  vector<int> a(n), b(n, -1);\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    mx = max(mx, a[i]);\n  }\n  int c = 0;\n  for (int i = 0; i < n; ++i) {\n    if (nei > a[i]) {\n      c = 1;\n      break;\n    }\n    while (nei != a[i]) {\n      int it = lower_bound(a.begin(), a.end(), nei) - a.begin();\n      if (a[it] == nei) {\n        int it1 = upper_bound(a.begin(), a.end(), nei) - a.begin();\n        b[it1] = nei;\n        nei++;\n      } else {\n        while (ni < n && b[ni] != -1) {\n          ni++;\n        }\n        b[ni] = nei;\n        nei++;\n      }\n    }\n  }\n  if (c == 1) {\n    cout << -1;\n  } else\n    for (int i = 0; i < n; ++i) {\n      if (b[i] == -1) {\n        b[i] = mx + 1;\n        mx++;\n      }\n      cout << b[i] << \" \";\n    }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nimport sys\n\nN = int(input())\n\nA = [int(_) for _ in input().split()]\n\njokers = deque()\n\nB = [-1] * N\ncurrent = 0\n\n\nfor i, el in enumerate(A):\n    jokers.append(i)\n    if el != current:\n        for j in range(el - current):\n            if not jokers:\n                print(-1)\n                sys.exit(0)\n            p = jokers.pop()\n            if A[p] == current + j:\n                print(-1)\n                sys.exit(0)\n            else:\n                B[p] = current + j\n        current = el\n\nwhile jokers:\n    current += 1\n    p = jokers.pop()\n    B[p] = current\n\nprint(' '.join(map(str, B)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100005], b[100005];\nbool ex[100005];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t;\n  t = 1;\n  while (t--) {\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    memset(b, -1, sizeof(b));\n    for (int i = 1; i <= n; i++) {\n      if (a[i] != a[i - 1]) {\n        b[i] = a[i - 1];\n        ex[b[i]] = 1;\n      }\n    }\n    ex[a[n]] = 1;\n    int m = 0;\n    for (int i = 1; i <= n; i++) {\n      while (ex[m]) m++;\n      if (b[i] == -1) {\n        b[i] = m;\n        ex[m] = 1;\n      }\n      cout << b[i] << \" \";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nLI=lambda:list(map(int, sys.stdin.readline().strip('\\n').split()))\nMI=lambda:map(int, sys.stdin.readline().strip('\\n').split())\nSI=lambda:sys.stdin.readline().strip('\\n')\nII=lambda:int(sys.stdin.readline().strip('\\n'))\n\nn=II()\na=LI()\nb, s=[-1]*n, set([a[-1]])\nfor i in range(1, n):\n\tif a[i]!=a[i-1]:\n\t\tb[i]=a[i-1]\n\t\ts.add(b[i])\nv=0\nfor i in range(n):\n\twhile v in s:\n\t\tv+=1\n\tif b[i]==-1:\n\t\tb[i]=v\n\t\ts.add(v)\nprint(*b)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n, x;\n  bool present[100005];\n  vector<int> v;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> x;\n    v.push_back(x);\n  }\n  int res[100005];\n  memset(res, -1, sizeof(res));\n  int previous = 0;\n  present[v[0]] = true;\n  for (int i = 1; i < n; ++i) {\n    if (v[i] != v[i - 1]) {\n      res[i] = v[i - 1];\n      present[v[i]] = true;\n    }\n  }\n  int m = 0;\n  for (int i = 0; i < n; ++i) {\n    while (present[m]) m++;\n    if (res[i] == -1) {\n      res[i] = m;\n      present[m] = true;\n    }\n  }\n  for (int i = 0; i < n; ++i) cout << res[i] << \" \";\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nfrom bisect import bisect_left\n\nn = int(input())\nA = list(map(int, input().split()))\n\nSA = set(A)\nerase = [i for i in range(2 * 10 ** 5 + 1) if i not in SA]\nei = 0\n\nB = [-1] * n\nmex = 0\n\nprev = 0\n\nfor i, v in enumerate(A):\n\n\tif v != prev:\n\t\tB[i] = prev\n\n\t\tif prev == erase[ei]:\n\t\t\tei += 1\n\telse:\n\t\tB[i] = erase[ei]\n\t\tei += 1\n\n\tif erase[ei] < v:\n\t\tprint(-1)\n\t\tsys.exit(0)\n\n\tprev = v\n\nprint(' '.join(map(str, B)))\n"
        },
        {
            "language": 4,
            "solution": "// practice with kaiboy\nimport java.io.*;\nimport java.util.*;\n\npublic class CF1364C extends PrintWriter {\n\tCF1364C() { super(System.out, true); }\n\tScanner sc = new Scanner(System.in);\n\tpublic static void main(String[] $) {\n\t\tCF1364C o = new CF1364C(); o.main(); o.flush();\n\t}\n\n\tstatic final int A = 1000000;\n\tvoid main() {\n\t\tint n = sc.nextInt();\n\t\tint[] aa = new int[1 + n];\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\taa[i] = sc.nextInt();\n\t\tint[] bb = new int[1 + n]; Arrays.fill(bb, -1);\n\t\tboolean[] used = new boolean[A + 1];\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (aa[i - 1] < aa[i])\n\t\t\t\tused[bb[i] = aa[i - 1]] = true;\n\t\tused[aa[n]] = true;\n\t\tfor (int a = 0, i = 1; i <= n; i++)\n\t\t\tif (bb[i] == -1) {\n\t\t\t\twhile (used[a])\n\t\t\t\t\ta++;\n\t\t\t\tbb[i] = a++;\n\t\t\t}\n\t\tArrays.fill(used, false);\n\t\tfor (int a = 0, i = 1; i <= n; i++) {\n\t\t\tused[bb[i]] = true;\n\t\t\twhile (used[a])\n\t\t\t\ta++;\n\t\t\tif (aa[i] != a) {\n\t\t\t\tprintln(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tprint(bb[i] + \" \");\n\t\tprintln();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100005], b[100005];\nbool ex[100005];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  memset(b, -1, sizeof(b));\n  for (int i = 1; i <= n; i++) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      ex[b[i]] = 1;\n    }\n  }\n  ex[a[n]] = 1;\n  int m = 0;\n  for (int i = 1; i <= n; i++) {\n    while (ex[m]) m++;\n    if (b[i] == -1) {\n      b[i] = m;\n      ex[m] = 1;\n    }\n    printf(\"%d \", b[i]);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "// Utilities\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic int N;\n\tstatic int[] a, b, lastIndex;\n\tstatic int[] remove;\n\tstatic boolean[] c;\n\tstatic int max;\n\tstatic Deque<Integer> dq = new ArrayDeque<Integer>();\n\tstatic int ll;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tN = in.iscan(); a = new int[N]; b = new int[N]; c = new boolean[N+1];\n\t\tlastIndex = new int[N+1]; Arrays.fill(lastIndex, -1);\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\ta[i] = in.iscan();\n\t\t\tc[a[i]] = true;\n\t\t\tlastIndex[a[i]] = i;\n\t\t}\n\t\tremove = new int[N+5]; Arrays.fill(remove, -1);;\n\t\tfor (int i = 0; i <= N; i++) {\n\t\t\tif (!c[i]) dq.addLast(i);\n\t\t\tif (lastIndex[i] != -1) remove[lastIndex[i]+1] = i;\n\t\t}\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tif (remove[i] != -1) dq.addFirst(remove[i]);\n\t\t\tif (!dq.isEmpty()) {\n\t\t\t\tout.print(dq.pollFirst() + \" \");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout.print((int)1e6 + \" \");\n\t\t\t}\n\t\t}\n\t\tout.println();\n\t\tout.close();\n\t} \n\t\n\tstatic INPUT in = new INPUT(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\tprivate static class INPUT {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar, numChars;\n\n\t\tpublic INPUT (InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic INPUT (String file) throws IOException {\n\t\t\tthis.stream = new FileInputStream (file);\n\t\t}\n\n\t\tpublic int cscan () throws IOException {\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\tnumChars = stream.read (buf);\n\t\t\t}\n\t\t\t\n\t\t\tif (numChars == -1)\n\t\t\t\treturn numChars;\n\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int iscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tint res = 0;\n\n\t\t\tdo {\n\t\t\t\tres = (res << 1) + (res << 3);\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic String sscan () throws IOException {\n\t\t\tint c = cscan ();\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tStringBuilder res = new StringBuilder ();\n\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint (c);\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res.toString ();\n\t\t}\n\n\t\tpublic double dscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tdouble res = 0;\n\n\t\t\twhile (!space (c) && c != '.') {\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * UTILITIES.fast_pow (10, iscan ());\n\t\t\t\t\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tif (c == '.') {\n\t\t\t\tc = cscan ();\n\t\t\t\tdouble m = 1;\n\n\t\t\t\twhile (!space (c)) {\n\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\treturn res * UTILITIES.fast_pow (10, iscan ());\n\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = cscan ();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic long lscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tlong res = 0;\n\n\t\t\tdo {\n\t\t\t\tres = (res << 1) + (res << 3);\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic boolean space (int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t}\n\n\tpublic static class UTILITIES {\n\n\t\tstatic final double EPS = 10e-6;\n\n\t\tpublic static int lower_bound (int[] arr, int x) {\n\t\t\tint low = 0, high = arr.length, mid = -1;\n\n\t\t\twhile (low < high) {\n\t\t\t\tmid = (low + high) / 2;\n\n\t\t\t\tif (arr[mid] >= x)\n\t\t\t\t\thigh = mid;\n\t\t\t\telse\n\t\t\t\t\tlow = mid + 1;\n\t\t\t}\n\n\t\t\treturn low;\n\t\t}\n\n\t\tpublic static int upper_bound (int[] arr, int x) {\n\t\t\tint low = 0, high = arr.length, mid = -1;\n\n\t\t\twhile (low < high) {\n\t\t\t\tmid = (low + high) / 2;\n\n\t\t\t\tif (arr[mid] > x)\n\t\t\t\t\thigh = mid;\n\t\t\t\telse\n\t\t\t\t\tlow = mid + 1;\n\t\t\t}\n\n\t\t\treturn low;\n\t\t}\n\n\t\tpublic static int gcd (int a, int b) {\n\t\t\treturn b == 0 ? a : gcd (b, a % b);\n\t\t}\n\n\t\tpublic static int lcm (int a, int b) {\n\t\t\treturn a * b / gcd (a, b);\n\t\t}\n\n\t\tpublic static long fast_pow_mod (long b, long x, int mod) {\n\t\t\tif (x == 0) return 1;\n\t\t\tif (x == 1) return b;\n\t\t\tif (x % 2 == 0) return fast_pow_mod (b * b % mod, x / 2, mod) % mod;\n\n\t\t\treturn b * fast_pow_mod (b * b % mod, x / 2, mod) % mod;\n\t\t}\n\n\t\tpublic static int fast_pow (int b, int x) {\n\t\t\tif (x == 0) return 1;\n\t\t\tif (x == 1) return b;\n\t\t\tif (x % 2 == 0) return fast_pow (b * b, x / 2);\n\n\t\t\treturn b * fast_pow (b * b, x / 2);\n\t\t}\n\n\t\tpublic static long choose (long n, long k) {\n\t\t\tk = Math.min (k, n - k);\n\t\t\tlong val = 1;\n\n\t\t\tfor (int i = 0; i < k; ++i)\n\t\t\t\tval = val * (n - i) / (i + 1);\n\n\t\t\treturn val;\n\t\t}\n\n\t\tpublic static long permute (int n, int k) {\n\t\t\tif (n < k) return 0;\n\t\t\tlong val = 1;\n\n\t\t\tfor (int i = 0; i < k; ++i)\n\t\t\t\tval = (val * (n - i));\n\n\t\t\treturn val;\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        FastReader input=new FastReader();\n        PrintWriter out=new PrintWriter(System.out);\n        int t=1;\n        while(t-->0)\n        {\n            int n=input.nextInt();\n            int a[]=new int[n];\n            int b[]=new int[n];\n            int max=-1;\n            ArrayList<Integer> list=new ArrayList<>();\n            for(int i=0;i<n;i++)\n            {\n                a[i]=input.nextInt();\n                if(max<a[i]-1)\n                {\n                    list.add(i);\n                    for(int j=max+1;j<=a[i]-1;j++)\n                    {\n                        b[list.get(list.size()-1)]=j;\n                        list.remove(list.size()-1);\n                    }\n                    max=a[i]-1;\n                }\n                else\n                {\n                    list.add(i);\n                }\n            }\n            for(int i=0;i<list.size();i++)\n            {\n                b[list.get(i)]=n+1;\n            }\n            for(int i:b)\n            {\n                out.print(i+\" \");\n            }\n        }\n        out.close();\n    }\n    public static void mergeSort(ArrayList<Integer> a,int p,int r)\n    {\n        if(p<r)\n        {\n            int q=(p+r)/2;\n            mergeSort(a,p,q);\n            mergeSort(a,q+1,r);\n            merge(a,p,q,r);\n        }\n    }\n    public static void merge(ArrayList<Integer> a,int p,int q,int r)\n    {\n        int n1=q-p+2;\n        int L[]=new int[n1];\n        int n2=r-q+1;\n        int R[]=new int[n2];\n        for(int i=p;i<=q;i++)\n        {\n            L[i-p]=a.get(i);\n        }\n        L[n1-1]=Integer.MAX_VALUE;\n        for(int i=q+1;i<=r;i++)\n        {\n            R[i-q-1]=a.get(i);\n        }\n        R[n2-1]=Integer.MAX_VALUE;\n        int x=0,y=0;\n        for(int i=p;i<=r;i++)\n        {\n            if(L[x]<=R[y])\n            {\n                a.set(i,L[x]);\n                x++;\n            }\n            else\n            {\n                a.set(i,R[y]);\n                y++;\n            }\n        }\n    }\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int *a = new int[n];\n  int *b = new int[n];\n  bool *visited = new bool[1000001];\n  bool flag = true;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = -1;\n    if (a[i] > i + 1) {\n      flag = false;\n    }\n    if (i > 0) {\n      if (a[i] != a[i - 1]) b[i] = a[i - 1];\n    }\n    visited[a[i]] = true;\n  }\n  if (!flag) {\n    cout << -1 << endl;\n    delete[] a;\n    delete[] visited;\n    return 0;\n  }\n  int j = 0;\n  for (int i = 0; i < n; i++) {\n    if (b[i] == -1) {\n      while (visited[j]) {\n        j++;\n      }\n      b[i] = j;\n      visited[j] = true;\n    }\n  }\n  for (int i = 0; i < n; i++) cout << b[i] << \" \";\n  cout << endl;\n  delete[] a;\n  delete[] b;\n  delete[] visited;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nimport  heapq\n\nn = int(input())\n\nlist1 = list(map(int,input().split()))\nvist = [0]*(100002)\nfor i in range(len(list1)):\n    vist[list1[i]]+=1\nf=0\nfor i in range(len(list1)):\n    if list1[i]>i+1:\n        f=1\n        break\nif f==1:\n    print(-1)\nelse:\n    p=[]\n    for i in range(len(vist)):\n        if vist[i]==0:\n            p.append(i)\n    heapq.heapify(p)\n\n    ans=[]\n    for i in range(n):\n\n        t = heapq.heappop(p)\n\n        ans.append(t)\n        vist[list1[i]]-=1\n        if vist[list1[i]]==0:\n            heapq.heappush(p,list1[i])\n\n\n\n    print(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100010, M = 1010;\nint n;\nint a[N], b[N];\nbool st[N];\nint main() {\n  memset(b, -1, sizeof b);\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      st[a[i - 1]] = true;\n    }\n  }\n  st[a[n]] = true;\n  int j = 0;\n  for (int i = 1; i <= n; i++) {\n    while (st[j]) j++;\n    if (b[i] == -1) {\n      b[i] = j;\n      st[j] = true;\n    }\n    printf(\"%d \", b[i]);\n  }\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int mod = 1e9 + 7;\nvoid solve() {\n  long long int n;\n  cin >> n;\n  vector<long long int> a(1000007), pos(1000007), used(1000007);\n  for (long long int i = 1; i <= n; ++i) {\n    cin >> a[i];\n    pos[a[i]]++;\n  }\n  for (long long int i = 1; i <= n; ++i) {\n    if (a[i] - 1 >= i) {\n      cout << \"-1\\n\";\n      return;\n    }\n  }\n  long long int p = 0;\n  vector<long long int> ans;\n  queue<long long int> rem;\n  for (long long int i = 0; i <= n; ++i) {\n    if (pos[i] == 0) continue;\n    while (pos[i]) {\n      if (rem.size()) {\n        pos[i]--;\n        ans.push_back(rem.front());\n        used[rem.front()]++;\n        rem.pop();\n        continue;\n      }\n      while (pos[p] or used[p]) p++;\n      used[p]++;\n      ans.push_back(p++);\n      pos[i]--;\n    }\n    rem.push(i);\n  }\n  for (auto it : ans) cout << it << \" \";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int tc = 1;\n  for (long long int i = 1; i <= tc; ++i) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[100005];\nvector<int> adj[100005];\nbool vis[100005];\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  while (t--) {\n    int n;\n    cin >> n;\n    int mx = 0;\n    bool ok = true;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      arr[i] = x;\n      vis[x] = 1;\n    }\n    queue<int> q;\n    int out = 0;\n    for (int i = 0; i <= n; i++) {\n      if (!vis[i]) q.push(i);\n    }\n    for (int i = 0; i < n; i++) {\n      if (i == 0) {\n        if (vis[arr[i]]) {\n          cout << q.front() << \" \";\n          q.pop();\n        } else\n          cout << i << \" \";\n      } else if (arr[i] == arr[i - 1]) {\n        cout << q.front() << \" \";\n        q.pop();\n      } else {\n        cout << arr[i - 1] << \" \";\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100010;\nint a[N], cnt[N];\nset<int> st;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    cnt[a[i]]++;\n  }\n  for (int i = 0; i <= n; i++) {\n    if (!cnt[i]) st.insert(i);\n  }\n  for (int i = 1; i <= n; i++) {\n    int x = *(st.begin());\n    printf(\"%d \", x);\n    st.erase(x);\n    cnt[a[i]]--;\n    if (cnt[a[i]] == 0) st.insert(a[i]);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\n\ndef ehab(n, a):\n    set_a = set(a)\n    b = []\n    ans = []\n    for i in range(n+1):\n        if i not in set_a:\n            b.append(i)\n    index_b = 0\n    ans.append(b[0])\n    index_b += 1\n\n    for i in range(1, n):\n        if a[i] != a[i-1]: #kalo berubah\n            ans.append(a[i-1])\n        else:\n            ans.append(b[index_b])\n            index_b += 1\n    return ans\n\nprint(\" \".join(map(str, ehab(n, a))))\n\n\n\n# def ehab(n, a):\n#     ds = BukaTutup()\n\n#     for a_num in a:\n#         ds.tutup(a_num)\n\n#     for a_num in a:\n#         b.append(ds.mex())\n#         ds.tutup(ds.mex())\n#         ds.buka(a_num)\n\n#     print(\" \".join(b))\n\n\n# class BukaTutup(object):\n#     def __init__(self):\n#         pass\n\n\n#     def tutup(self, num):  # bisa beberapa lapis\n#         pass\n\n\n#     def buka(self, num):  # bisa beberapa lapis\n#         pass\n\n\n#     def mex(self, num):\n#         pass\n"
        },
        {
            "language": 3,
            "solution": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ------------------- fast io --------------------\nfrom math import gcd, ceil\n\ndef pre(s):\n    n = len(s)\n    pi = [0] * n\n    for i in range(1, n):\n        j = pi[i - 1]\n        while j and s[i] != s[j]:\n            j = pi[j - 1]\n        if s[i] == s[j]:\n            j += 1\n        pi[i] = j\n    return pi\n\n\ndef prod(a):\n    ans = 1\n    for each in a:\n        ans = (ans * each)\n    return ans\n\ndef lcm(a, b): return a * b // gcd(a, b)\n\n\ndef binary(x, length=16):\n    y = bin(x)[2:]\n    return y if len(y) >= length else \"0\" * (length - len(y)) + y\n\n\nfor _ in range(int(input()) if not True else 1):\n    n = int(input())\n    #n, k = map(int, input().split())\n    #a, b = map(int, input().split())\n    #c, d = map(int, input().split())\n    a = list(map(int, input().split()))\n    #b = list(map(int, input().split()))\n    #s = input()\n    #print(\"YES\" if s else \"NO\")\n    ans = [10**6]*n\n    unf = 0\n    cur = 0\n    for i in range(n):\n        if a[i] > cur:\n            omega = a[i] - 1\n            alpha = cur\n            ans[i] = alpha\n            while alpha < omega:\n                while ans[unf] != 10**6:\n                    unf += 1\n                ans[unf] = omega\n                omega -= 1\n                unf += 1\n            cur = a[i]\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        \n        var sc = new Scanner(System.in);\n    \n        int n = Integer.parseInt(sc.next());\n        var a = new int[n];\n        var last = new int[n+1];\n        Arrays.fill(last, -1);\n        for(int i = 0; i < n; i++){\n            a[i] = Integer.parseInt(sc.next());\n            last[a[i]] = i;\n        }\n        var c = new int[n];\n        Arrays.fill(c, -1);\n        var pq = new PriorityQueue<Integer>();\n        for(int i = 0; i <= n; i++){\n            if(last[i] != -1){\n                c[last[i]] = i;\n            }else{\n                pq.add(i);\n            }\n        }\n        var sb = new StringBuilder();\n        for(int i = 0; i < n; i++){\n            if(!pq.isEmpty()){\n                sb.append(pq.poll()).append(\" \");\n            }else{\n                sb.append(100001).append(\" \");\n            }\n            if(c[i] != -1){\n                pq.add(c[i]);\n            }\n        }\n        System.out.println(sb);\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n \npublic class C\n{\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        String[] line = br.readLine().split(\" \");\n        int[]a=new int[n+1];\n        int[]b=new int[n+1];\n        int[]h=new int[n+1];\n        \n        for(int i=1;i<=n;i++) {\n            a[i]=Integer.parseInt(line[i-1]);\n            h[a[i]]=i;\n        }\n        \n        int c=0;\n        while (h[c]>0) c++;\n        \n        int next=-1;\n        \n        for (int i=1;i<=n;i++) {\n            if (next==-1) { b[i]=c; c++; }\n            else b[i]=next;\n            \n            if (h[a[i]]==i) next=a[i];\n            else {\n                while (c<=n && h[c]>0) c++;\n                next=-1;\n            }\n        }\n        \n        for (int x=1;x<=n;x++) System.out.print(b[x]+\" \");\n    }\n\n        \n    }\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\", \"unroll-loops\")\n#pragma GCC target(\"avx2\")\nusing namespace std;\nlong long power(long long x, long long y) {\n  x %= 1000000007;\n  y %= 1000000007;\n  long long var = x, ans = 1;\n  while (y) {\n    if (y & 1) ans = ((ans % 1000000007) * (var % 1000000007)) % 1000000007;\n    var = ((var % 1000000007) * (var % 1000000007)) % 1000000007;\n    y = y >> 1;\n  }\n  return ans;\n}\nvoid solve() {\n  int n, k;\n  cin >> n;\n  vector<long long> v1(n);\n  for (int i = 0; i < n; i++) cin >> v1[i];\n  if (v1[n - 1] == 0) {\n    for (int i = 0; i < n; i++) cout << 1 << \" \";\n    return;\n  }\n  v1.push_back(n + 5);\n  set<int> s;\n  for (int i = 0; i < n; i++) s.insert(v1[i]);\n  int ans(n);\n  for (int i = 0; i < 4 * n; i++) s.insert(i);\n  for (int j = n - 1; j >= 0; j--) {\n    if (!s.empty() && s.count(v1[j])) {\n      s.erase(v1[j]);\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cout << *s.begin() << \" \";\n    s.erase(s.begin());\n    if (v1[i] < v1[i + 1]) {\n      s.insert(v1[i]);\n    }\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int t = 1;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "ll = lambda: list(map(int, input().split()))\ns = lambda: input()\nv = lambda: map(int, input().split())\nii = lambda: int(input())\nm=1000000007\nn=ii()\na=ll()\nm=[0]*(1000001)\nc=[0]*(1000001)\nfor i in a:\n    c[i]+=1\np=0\nq=[]\nans=[]\nfor i in range(n+1):\n    if(c[i]==0):\n        continue\n    while(c[i]):\n        if(q):\n            c[i]-=1\n            ans.append(q[0])\n            m[q[0]]+=1\n            q.pop(0)\n        else:\n            while(c[p] or m[p]):\n                p+=1\n            m[p]+=1\n            ans.append(p)\n            p += 1\n            c[i]-=1\n    q.append(i)\nprint(*ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.List;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.Map;\nimport java.util.Queue;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\n//import Number_theory.pair;\n\npublic class dynamic_programming implements Runnable {\n\tpublic static ArrayList<Integer> e11=new ArrayList<>();\n\tstatic class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        }\n\t\t\n    }\n\t public static int n;\n\t  public static int w;\n\t  public static int[][] DP;\n\tpublic static void main(String[] args) throws Exception {\n\t    new Thread(null, new dynamic_programming(), \"Main\", 1<<26).start();\n\t  }\n\tpublic static long[] dp=new long[1000001];\n\tpublic void run() {\n\t\tOutputStream outputStream =System.out;\n\t    PrintWriter out =new PrintWriter(outputStream);\n\tFastReader s=new FastReader();\n//int[] a= {40,20,30,10,30};\n\n//int n=5;\n//long cost=Matrix_Chain_Multiplication(a,1,4,5);\n//\tSystem.out.println(cost);\n//\tint t=s.nextInt();\n//\twhile(t>0) {\n//\t\tfor(int i=0;i<1001;i++) {\n//\t\t\tfor(int j=0;j<1001;j++) {\n//\t\t\t\tDp[i][j]=-1;\n//\t\t\t}\n//\t\t}\n//\tString str=s.next();\n//\tlong v=min_Partitions_required_to_make_String_Palindrome(str,0,str.length()-1);\n//\tSystem.out.println(v);\n//\n//\tint n=s.nextInt();\n////\tint m=s.nextInt();\n//int[] a=new int[n]; \n//int[] p=new int[n];\n//\tfor(int i=0;i<n;i++) {\n////\t\tfor(int j=0;j<m;j++) {\n//\t\t\tp[i]=s.nextInt();}\n////\t}\n//\tfor(int i=0;i<n;i++) {\n////\t\tfor(int j=0;j<m;j++) {\n//\t\t\ta[i]=s.nextInt();}\n////\t}\n//\t\n////\tprint_all_paths_with_minimum_cost(a,n,m);\n////\tminimum_jumps_path(a);\n////\tString str=s.next();\n//\tint sum=s.nextInt();\n//\tprint_maximum_price_Knapsack(a,p,sum);\n//\tString str=s.next();\n//\tString pattern=s.next();\n//\t regular_expression_Matching(str,pattern);\n//out.close();\n//\tint f=s.nextInt();\n//\tint h=s.nextInt();\n//\t k11=s.nextInt();\n//\t k22=s.nextInt();\n//\tfor(int i=0;i<=f;i++) {\n//\t\tfor(int j=0;j<=h;j++) {\n//\t\t\tfor(int k=0;k<=k11;k++) {\n//\t\t\t\tfor(int l=0;l<=k22;l++) {\n//\t\t\t\t\tdp1[i][j][k][l]=-1;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n//\t}\n//\tSystem.out.println(getAns(f,h,k11,k22));\n//\tfor(int i=0;i<=100000;i++) {\n//\t\tdp2[i]=-1;\n//\t}\n//\tint t=s.nextInt();\n//\tint k=s.nextInt();\n//\tint[] pre=new int[100001];\n//\tfor(int i=1;i<=100000;i++) {\n//\t\tpre[i]=(pre[i-1]+getAns(i,k))%(1000000007);\n//\t}\n//\twhile(t>0) {\n//\t\tint a=s.nextInt();\n//        int b=s.nextInt();\n//        System.out.println((pre[b]-pre[a-1]+1000000007)%(1000000007));\n//\tt--;\n//\t}\n//\tfor(int i=0;i<=3000;i++) {\n//\t\tfor(int j=0;j<=3000;j++) {\n//\t\t\tdp3[i][j]=INF;\n//\t\t}\n//\t}\n//\t\tint n=s.nextInt();\n//\t\tpair1[] a=new pair1[n];\n//\t\tfor(int i=0;i<n;i++) {\n//\t\t\ta[i]=new pair1(s.nextInt(),s.nextInt());\n//\t\t}\n//\tpair1[] d=merge_sort(a,0,n-1);\n//\tlong val=get(1,0,n,d);\n//\t\tSystem.out.println(val+d[0].cost);\n//\t}\n\t\n//\tint t=s.nextInt();\n//\twhile(t>0) {\n//\t\tint n=s.nextInt();\n//\t\tlong[] arr=new long[n];\n//\t\tlong[] a=new long[n];\n//\t\tlong[] b=new long[n];\n//\t\tlong max=Long.MIN_VALUE;\n//\t\tfor(int i=0;i<n;i++) {\n//\t\t\tarr[i]=s.nextLong();\n//\t\t}\n//\t\tfor(int i=0;i<n;i++) {\n//\t\t\ta[i]=s.nextLong();\n//\t\t}\n//\t\tfor(int i=0;i<n;i++) {\n//\t\t\tb[i]=s.nextLong();\n//\t\t}\n//\t\tlong[] dp=new long[n];\n//\t\t if(a[1]!=b[1]) {\n//\t\t\tdp[1]=arr[1]+Math.abs(a[1]-b[1])+1;\n//\t\t\t\n//\t\t}else {\n//\t\t\tdp[1]=arr[1]+1;\n//\t\t}\n//\t\tmax=Math.max(max, dp[1]);\n//\t\tfor(int i=2;i<n;i++) {\n//\t\t\t if(a[i]!=b[i]) {\n//\t\t\t\tdp[i]=Math.max(arr[i]+Math.abs(a[i]-b[i])+1, dp[i-1]+arr[i]-Math.abs(a[i]-b[i])+1);\n//\t\t\t}else {\n//\t\t\t\tdp[i]=arr[i]+1;\n//\t\t\t}\n//\t\t\tmax=Math.max(dp[i], max);\n//\t\t}\n//\t\tSystem.out.println(max);\n//\t\tt--;\n//\t}\n\tint n=s.nextInt();\n\tlong[] a=new long[n];\n\tboolean p=false;\n\tfor(int i=0;i<n;i++) {\n\t\ta[i]=s.nextLong();\n\t\tif((a[i])>(i+1)) {\n\t\t\tp=true;\n\t\t}\n\t}\n\tif(p) {\n\t\tSystem.out.println(-1);\n\t}else {\n\t\tHashMap<Long,Integer> e=new HashMap<>();\n\t\tlong[] b=new long[n];\n\t\tlong curr=0;\n\t\tif(a[0]==1) {\n\t\t\tcurr=0;\n\t\t}else {\n\t\t\tcurr=1;\n\t\t}\n\t\te.put(curr, 0);\n\t\tb[0]=curr;\n\t\tcurr++;\n\t\tfor(int i=1;i<n;i++) {\n\t\t\tif(curr==a[i]) {\n\t\t\tif(a[i]!=a[i-1]) {\n\t\t\t\tb[i]=a[i-1];\n\t\t\t\tcurr++;\n\t\t\t\te.put(b[i], i);\n\t\t\t}else {\n\t\t\t\tcurr++;\n\t\t\t\tb[i]=curr;\n\t\t\t\te.put(b[i], i);\n\t\t\t\tcurr++;\n\t\t\t}\n\t\t\t}\n\t\t\telse if(e.containsKey(a[i])) {\n\t\t\t\tint j=e.get(a[i]);\n\t\t\t\tb[j]=curr;\n\t\t\t\te.remove(a[i]);\n\t\t\t\te.put(curr, j);\n\t\t\t\tb[i]=a[i-1];\n\t\t\t\te.put(b[i], i);\n\t\t\t\tcurr++;\n\t\t\t}else {\n\t\t\t\te.put(curr, i);\n\t\t\t\tb[i]=curr;\n\t\t\t\tcurr++;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tout.print(b[i]+\" \");\n\t\t}\n\t\t\n\t\t\n\t}\n\tout.close();\n\t}\n\tstatic int bc(int n, int k)\n    {\n        int C[][] = new int[n + 1][k + 1];\n        int i, j;\n \n        // Calculate  value of Binomial\n        // Coefficient in bottom up manner\n        for (i = 0; i <= n; i++) {\n            for (j = 0; j <= Math.min(i, k); j++) {\n                // Base Cases\n                if (j == 0 || j == i)\n                    C[i][j] = 1;\n \n                // Calculate value using\n                // previously stored values\n                else\n                    C[i][j] = (C[i - 1][j - 1] + C[i - 1][j])%(1000000007);\n            }\n        }\n \n        return C[n][k];}\n\t static int UpperBound(ArrayList<Integer> a, int x) {// x is the key or target value\n\t\t    int l=-1,r=a.size();\n\t\t    while(l+1<r) {\n\t\t       int m=(l+r)>>>1;\n\t\t       if(a.get(m)<=x) l=m;\n\t\t       else r=m;\n\t\t    }\n\t\t    return l+1;\n\t\t }\n\t static int LowerBound(ArrayList<Integer> a, int x) { // x is the target value or key\n\t\t  int l=-1,r=a.size();\n\t\t  while(l+1<r) {\n\t\t    int m=(l+r)>>>1;\n\t\t    if(a.get(m)>=x) r=m;\n\t\t    else l=m;\n\t\t  }\n\t\t  return r;\n\t\t}\n\n\tpublic static int[] is_prime=new int[1000001];\n\tpublic static ArrayList<Integer> primes=new ArrayList<>();\n\tpublic static void sieve() {\n\t\tlong maxN=100001;\n\t\tfor(int i=1;i<=maxN;i++) {\n\t\t\tis_prime[i]=1;\n\t\t}\n\t\tis_prime[0]=0;\n\t\tis_prime[1]=0;\n\t\tfor(long i=2;i*i<=maxN;i++) {\n\t\t\tif(is_prime[(int) i]==1) {\n//\t\t\t\tprimes.add((int) i);\n\t\t\t\tfor(long j=i*i;j<=maxN;j+=i) {\n\t\t\t\t\tis_prime[(int) j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<=maxN;i++) {\n\t\t\tif(is_prime[i]==1) {\n\t\t\t\tprimes.add(i);\n\t\t\t}\n\t\t}\n//\t\tint count=0;\n//\t\tfor(long i=1;i<=maxN;i++) {\n//\t\t\tif(is_prime[(int) i]==1) {\n//\t\t\t\tcount++;\n//\t\t\t}\n//\t\t\tif(is_prime[count]==1) {\n//\t\t\t\tarr[(int) i]=1;\n//\t\t\t}else {\n//\t\t\t\tarr[(int)i]=0;\n//\t\t\t}\n//\t\t}\n\t}\n\t\n\tpublic static long res=1;\n\tpublic static  int[] arr=new int[1000001];\n//\tpublic static int[] is_prime=new int[1000001];\n\tpublic static ArrayList<Integer> prime_vector=new ArrayList<>();\n\tpublic static ArrayList<pair> prime_pairs=new ArrayList<>();\n//\tpublic static ArrayList<Integer> primes=new ArrayList<>();\n\tpublic static void prime_factorization(long n) {\n\t\tfor(long i=3;i*i<=n;i+=2) {\n\t\t\tif(n%i==0 &&(i%2!=0)) {\n\t\t\t\tlong count=0;\n\t\t\t\twhile(n%i==0) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tn/=i;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t}\t\n\t\n\t}\n\t\n\tpublic static int gcd(int a, int b)\n    {\n        if (a == 0)\n            return b; \n        return gcd(b % a, a); \n    }\n\tstatic int lcm(int a, int b)\n    {\n        return (a / gcd(a, b)) * b;\n    }\n\tpublic static long[] merge_sort(long[] A, int start, int end) {\n\t\tif (end > start) {\n\t\t\tint mid = (end + start) / 2;\n\t\t\tlong[] v = merge_sort(A, start, mid);\n\t\t\tlong[] o = merge_sort(A, mid + 1, end);\n\t\t\treturn (merge(v, o));\n\t\t} else {\n\t\t\tlong[] y = new long[1];\n\t\t\ty[0] = A[start];\n\t\t\treturn y;\n\t\t}\n\t}\n\tpublic static long[] merge(long a[], long b[]) {\n//\t\tint count=0;\n\t\tlong[] temp = new long[a.length + b.length];\n\t\tint m = a.length;\n\t\tint n = b.length;\n\t\tint i = 0;\n\t\tint j = 0;\n\t\tint c = 0;\n\t\twhile (i < m && j < n) {\n\t\t\tif (a[i] < b[j]) {\n\t\t\t\ttemp[c++] = a[i++];\n\t\t\t\n\t\t\t} else {\n\t\t\t\ttemp[c++] = b[j++];\n\t\t\t}\n\t\t}\n\t\twhile (i < m) {\n\t\t\ttemp[c++] = a[i++];\n\t\t}\n\t\twhile (j < n) {\n\t\t\ttemp[c++] = b[j++];\n\t\t}\n\t\treturn temp;\n\t}\n\tpublic static pair1[] merge_sort(pair1[] A, int start, int end) {\n\t\tif (end > start) {\n\t\t\tint mid = (end + start) / 2;\n\t\t\tpair1[] v = merge_sort(A, start, mid);\n\t\t\tpair1[] o = merge_sort(A, mid + 1, end);\n\t\t\treturn (merge(v, o));\n\t\t} else {\n\t\t\tpair1[] y = new pair1[1];\n\t\t\ty[0] = A[start];\n\t\t\treturn y;\n\t\t}\n\t}\n\tpublic static pair1[] merge(pair1 a[], pair1 b[]) {\n//\t\tint count=0;\n\t\tpair1[] temp = new pair1[a.length + b.length];\n\t\tint m = a.length;\n\t\tint n = b.length;\n\t\tint i = 0;\n\t\tint j = 0;\n\t\tint c = 0;\n\t\twhile (i < m && j < n) {\n\t\t\tif (a[i].i < b[j].i) {\n\t\t\t\ttemp[c++] = a[i++];\n\t\t\t\n\t\t\t}else {\n\t\t\t\ttemp[c++] = b[j++];\n\t\t\t}\n\t\t}\n\t\twhile (i < m) {\n\t\t\ttemp[c++] = a[i++];\n\t\t}\n\t\twhile (j < n) {\n\t\t\ttemp[c++] = b[j++];\n\t\t}\n\t\treturn temp;\n\t}\n     \n\tpublic static bridges[] merge_sort(bridges[] A, int start, int end) {\n\t\tif (end > start) {\n\t\t\tint mid = (end + start) / 2;\n\t\t\tbridges[] v = merge_sort(A, start, mid);\n\t\t\tbridges[] o = merge_sort(A, mid + 1, end);\n\t\t\treturn (merge(v, o));\n\t\t} else {\n\t\t\tbridges[] y = new bridges[1];\n\t\t\ty[0] = A[start];\n\t\t\treturn y;\n\t\t}\n\t}\n\tpublic static bridges[] merge(bridges a[], bridges b[]) {\n//\t\tint count=0;\n\t\tbridges[] temp = new bridges[a.length + b.length];\n\t\tint m = a.length;\n\t\tint n = b.length;\n\t\tint i = 0;\n\t\tint j = 0;\n\t\tint c = 0;\n\t\twhile (i < m && j < n) {\n\t\t\tif (a[i].n < b[j].n) {\n\t\t\t\ttemp[c++] = a[i++];\n\t\t\t\n\t\t\t}else if(a[i].n==b[j].n) {\n\t\t\t\tif(a[i].s<b[j].s) {\n\t\t\t\t\ttemp[c++]=a[i++];\n\t\t\t\t}else {\n\t\t\t\t\ttemp[c++]=b[j++];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttemp[c++] = b[j++];\n\t\t\t}\n\t\t}\n\t\twhile (i < m) {\n\t\t\ttemp[c++] = a[i++];\n\t\t}\n\t\twhile (j < n) {\n\t\t\ttemp[c++] = b[j++];\n\t\t}\n\t\treturn temp;\n\t}\n \npublic static long steps(long n) {\n\t  if(dp[(int) n]!=0) {\n\t\t  return (int) dp[(int) n];\n\t  }  \n\t   dp[(int) n]=steps(n-1)+steps(n-2)+steps(n-3);\n\t  return  dp[(int) n];\n  }\n  public static void total_Subsets(char[] a,int n) {\n\t  long tot=(1<<n);\n\t  for(int i=0;i<tot;i++) {\n\t\t  for(int j=0;j<n;j++) {\n\t\t\t  if(((i)&(1<<j))!=0) {\n\t\t\t\t System.out.print(a[j]); \n\t\t\t  }\n\t\t  }\n\t\t  if(i==0) {\n\t\t\t  System.out.print('#');\n\t\t  }\n\t\t  System.out.println();\n\t  }\n  }\n  public static void Subset_sum(int[] a,int n,int sum_k) {\n\t  long tot=(1<<n);\n\t  for(int i=0;i<tot;i++) {\n\t\t  long sum=0;\n\t\t  for(int j=0;j<n;j++) {\n\t\t\t  if(((i)&(1<<j))!=0) {\n\t\t\t\tsum+=a[j]; \n\t\t\t  }\n\t\t  }\n\t\t  if(sum==sum_k) {\n\t\t\t  System.out.println(\"YES\");\n\t\t  return;\n\t\t  }\n\t  }\n\t  System.out.println(\"NO\"); \n\t  }\n  public static long vowel_dish(String[] a,int n) {\n\t  int[] f=new int[32];\n\t  for(int i=0;i<n;i++) {\n\t\t  String str=a[i];\n//\t\t  System.out.println(str);\n\t\t  int h=str.length();\n\t\t  int mask=0;\n\t\t  for(int j=0;j<h;j++) {\n\t\t\t if(str.charAt(j)=='a')mask=mask|(1<<0);\n\t\t\t if(str.charAt(j)=='e')mask=mask|(1<<1);\n\t\t\t if(str.charAt(j)=='i')mask=mask|(1<<2);\n\t\t\t if(str.charAt(j)=='o')mask=mask|(1<<3);\n\t\t\t if(str.charAt(j)=='u')mask=mask|(1<<4);\n\t\t  }\n\t\t  f[mask]++;\n\t\t  \n\t  }\n\t  long sum=0;\n\t  for(int i=1;i<32;i++) {\n\t\t  for(int j=i+1;j<32;j++) {\n\t\t\t  if((i|j)==31) {\n\t\t\t\t sum=sum+(f[i]*f[j]); \n\t\t\t  }\n\t\t  }\n\t  }\n\t  return sum;\n  }\n  public long coinChange(long[] coins, long amount) {\n      int c=coins.length;\n      long[] a=new long[(int) (amount+1)];\n      a[0]=0;\n      for(int i=1;i<amount+1;i++){\n          a[i]=Long.MAX_VALUE;\n      }\n      for(int i=1;i<amount+1;i++){\n          for(int j=0;j<c;j++){\n              if(coins[j]>i){\n                  continue;\n              }else if(a[(int) (i-coins[j])]==Long.MAX_VALUE){\n                 continue;\n              }else{\n                  a[i]=Math.min(a[i],a[(int) (i-coins[j])]);\n              }\n          }\n          if(a[i]!=100000) {\n        \t  a[i]++;\n          }\n      }\n//      for(int i=0;i<amount;i++) {\n//    \t  System.out.print(a[i]+\" \");\n//      }\n      if(a[(int) amount]<100000){\n          return  a[(int) amount];\n      }else{\n          return -1;\n      }\n}\n  public static boolean is_Sum_Possible_Using_SubSets(long[] a,int n,long sum) {\n\t  long[][] dp=new long[n+1][(int) (sum+1)];\ndp[0][0]=1;\t  \n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=0;j<=sum;j++) {\n\t\t\tif(dp[i-1][j]==1) {\n\t\t\t\tdp[i][j]=1;\n\t\t\t}else {\n\t\t\t\tif((j-a[i]>=0) && (dp[i-1][(int) (j-a[i])]==1)) {\n\t\t\t\t\tdp[i][j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=n;i++) {\n\t\tfor(int j=0;j<=sum;j++) {\n\t\t\tSystem.out.print(dp[i][j]);\n\t\t}\n\t\tSystem.out.println();\n\t}\n\t  if(dp[n][(int) sum]==1) {\n\t\t  return true;\n\t  }else {\n\t\t  return false;\n\t  }\n  }\n  public static void is_Sum_Possible_Using_SubSets_Using_Linear_Space(int[] a,int n,int sum) {\n\t  int[] dp=new int[(int) (sum+1)];\n\t  dp[0]=1;\nfor(int i=1;i<=n;i++) {\n\tint curr=a[i];\n\tfor(int j=sum;j>=curr;j--) {\n\t\n\t\tif(dp[j]!=0 || dp[j-curr]==0) {\n\t\t\tcontinue;\n\t\t}else {\n\t\t\tdp[j]=curr;\n\t\t}\n\t}\n}\nif(dp[sum]==0) {\n\tSystem.out.println(-1);\n}else {\nint curr=sum;\nwhile(curr>0) {\n\tSystem.out.println(dp[curr]);\n\tcurr=curr-dp[curr];\n}\n\t\n}\n  }\n  public static long min_max_cost_path(long[][] a,int n,int m) {\n\t  long[][] dp=new long[n][m];\n\t  for(int j=m-1;j>=0;j--) {\n\t\t  if(j==m-1) {\n\t\t\t  dp[n-1][j]=a[n-1][j];\n\t\t  }else {\n\t\t\t  dp[n-1][j]=dp[n-1][j+1]+a[n-1][j];\n\t\t  }\n\t  }\n\t  for(int i=n-1;i>=0;i--) {\n\t\t  if(i==n-1) {\n\t\t\t  dp[i][m-1]=a[i][m-1];\n\t\t  }else {\n\t\t\t  dp[i][m-1]=dp[i+1][m-1]+a[i][m-1];\n\t\t\t  \n\t\t  }\n\t  }\n\t  for(int i=n-2;i>=0;i--) {\n\t\t  for(int j=m-2;j>=0;j--) {\n\t\t\t  dp[i][j]=Math.min(dp[i][j+1], dp[i+1][j])+a[i][j];\n\t\t  }\n\t  }\n\t  return dp[0][0];\n  }\n  public static long min_max_path_cost_for_last_row(long[][] a,int n,int m,int column) {\n\t  long[][] dp=new long[n][m];\n\t  for(int j=0;j<m;j++) {\n\t\t  dp[n-1][j]=a[n-1][j];\n\t  }\n\t  for(int i=n-2;i>=0;i--) {\n\t\t  for(int j=0;j<m;j++) {\n\t\t\tlong min=dp[i+1][j];\n\t\t\tif(j!=0) {\n\t\t\t\tmin=Math.min(min, dp[i+1][j-1]);\n\t\t\t}\n\t\t\tif(j!=m-1) {\n\t\t\t\tmin=Math.min(min, dp[i+1][j+1]);\n\t\t\t}\n\t\t\tdp[i][j]=min+a[i][j];\n\t\t  }\n\t  }\n\t  for(int i=0;i<n;i++) {\n\t\t  for(int j=0;j<m;j++) {\n\t\t\t  System.out.print(dp[i][j]+\" \");\n\t\t  }\n\t\t  System.out.println();\n\t  }\n\t  long min=Long.MAX_VALUE;\n\t  for(int j=0;j<m;j++) {\n\t\t  min=Math.min(dp[0][j], min);\n\t  }\n\t  return min;\n  }\n  public static int longest_Palindromic_Substring(char[] a,int n) {\n\t  int k = 0,b=0;\n\t  int[][] dp=new int[n+1][n+1];\n\t  for(int i=0;i<=n;i++) {\n\t\t  dp[0][i]=dp[1][i]=1;\n\t\t  k=1;\n          b=i;\n\t  }\n\t \n\t  for(int i=2;i<=n;i++) {\n\t\t  for(int j=i;j<=n;j++) {\n\t\t\t  if(a[j]==a[j-i+1] && dp[i-2][j-1]==1) {\n\t\t\t\t  dp[i][j]=1;\n\t\t\t\t  k=i;\n                  b=j;\n\t\t\t  }\n\t\t  }\n\t  }\n\t  \n//\t  for(int i=0;i<=n;i++) {\n//\t\t  for(int j=0;j<=n;j++) {\n////\t\t\t  if(dp[i][j]==1)k=i;\n//\t\t\t  System.out.print( dp[i][j]+\" \");\n//\t\t  }\n//\t\t  System.out.println();\n//\t  }\n\t  k=b-k+1;\n\t  String str=\"\";\n        for(int i=k;i<=b;i++){\n            str+=a[i];\n        }\n        System.out.println( k+\" \"+b);\n        System.out.println(str);\n\t  return k;\n  }\n  public static long unique_Ways_To_Reach_Last_Point(int n,int m) {\n\t  long[][] dp=new long[n][m];\n\t  for(int i=0;i<m;i++) {\n\t\t  dp[n-1][i]=1;\n\t  }\n\t  for(int i=0;i<n;i++) {\n\t\t  dp[i][m-1]=1;\n\t  }\n\t  for(int i=n-2;i>=0;i--) {\n\t\t  for(int j=m-2;j>=0;j--) {\n\t\t\t  dp[i][j]=dp[i+1][j]+dp[i][j+1];\n\t\t  }\n\t  }\n\t \n\t  \n\t  return dp[0][0];\n  }\n  public static int unique_Ways_To_Reach_Last_Point_With_Obstacles(int[][] obstacles,int n,int m) {\n\t  int[][] dp=new int[n][m];\n\t  for(int i=0;i<n;i++) {\n\t\t  for(int j=0;j<m;j++) {\n\t\t\t  if(obstacles[i][j]==1) {\n\t\t\t\t  obstacles[i][j]=-1;\n\t\t\t  }\n\t\t  }\n\t  }\n\t  for(int i=m-1;i>=0;i--) {\n\t\t  if(obstacles[n-1][i]==-1) {\n\t\t\t  dp[n-1][i]=-1;\n\t\t\t  break;\n\t\t  }\n\t\t  dp[n-1][i]=1;\n\t  }\n\t  for(int i=n-1;i>=0;i--) {\n\t\t  if(obstacles[i][m-1]==-1) {\n\t\t\t  dp[i][m-1]=-1;\n\t\t\t  break ;\n\t\t  }\n\t\t  dp[i][m-1]=1;\n\t  }\n\t  for(int i=n-2;i>=0;i--) {\n\t\t  for(int j=m-2;j>=0;j--) {\n\t\t\t  if(obstacles[i][j]!=-1) {\n\t\t\t  if(dp[i+1][j]==-1 && dp[i][j+1]==-1)continue;\n\t\t\t  if(dp[i+1][j]==-1) {dp[i][j]=dp[i][j+1];continue;}\n\t\t\t  if(dp[i][j+1]==-1) {dp[i][j]=dp[i+1][j];continue;}\n\t\t\t  dp[i][j]=dp[i+1][j]+dp[i][j+1];\n\t\t  }else {\n\t\t\t  dp[i][j]=-1;\n\t\t  }\n\t\t\t  }\n\t  }\n//\t for(int i=0;i<n;i++) {\n//\t\t for(int j=0;j<m;j++) {\n//\t\t\t System.out.print(dp[i][j]+\" \");\n//\t\t }\n//\t\t System.out.println();\n//\t }\n\t  \n\t if(obstacles[n-1][m-1]!=-1 && dp[0][0]!=-1){\n\t\t  return dp[0][0];}else{\n\t          return 0;\n\t      }\n  }\n  public static long rod_cutting(long[] a,int n) {\n\t  long[] dp=new long[n+1];\n\t  dp[1]=a[1];\n\t  for(int i=2;i<=n;i++) {\n\t\t  long profit=Long.MIN_VALUE;\n\t\t  for(int j=1;j<=i;j++) {\n\t\t\t  profit=Math.max(profit,a[j]+dp[i-j]);\n\t\t  }\n\t\t  dp[i]=profit;\n\t  }\n\t  return dp[n];\n  }\n public static int Knapsack_0_1_Recursive_(int[] weight,int[] val,int w,int n){\n\t if(n==0 || w==0) {\n\t\t return 0;\n\t }\n\t if(DP[n][(int) w]!=-1) {\n\t\t return DP[n][ w];\n\t }\n\t if(weight[n]<=w) {\n\t\t DP[n][w]= Math.max(val[n]+Knapsack_0_1_Recursive_(weight,val,w-weight[n],n-1),Knapsack_0_1_Recursive_(weight,val,w,n-1));\n\t return DP[n][w];\n\t }else {\n\t\t DP[n][(int) w]= Knapsack_0_1_Recursive_(weight,val,w,n-1);\n\t return DP[n][w];\n\t }\n }\n public static long Knapsack_0_1_Iterative_Top_Down(int[] weight,int[] val,int w,int n) {\n\t int[][] dp=new int[n+1][w+1];\n\t for(int i=0;i<=w;i++) {\n\t\t dp[0][i]=0;\n\t }\n\t for(int i=0;i<=n;i++) {\n\t\t dp[i][0]=0;\n\t }\n\t for(int i=1;i<=n;i++) {\n\t\t for(int j=1;j<=w;j++) {\n\t\t\t if(weight[i]<=j) {\n\t\t\t\t dp[i][j]=Math.max(dp[i-1][j],val[i]+dp[i-1][j-weight[i]]);\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t }\n\t }\n\t for(int i=0;i<=n;i++) {\n\t\t for(int j=0;j<=w;j++) {\n\t\t\t System.out.print(dp[i][j]+\" \");\n\t\t }\n\t\t System.out.println();\n\t }\n\t return dp[n][w];\n }\n public static boolean subset_Sum_Using_Knapsack(long[] a,int n,long sum) {\n\t int[][] dp=new int[n+1][(int) (sum+1)];\n\t for(int i=0;i<=n;i++) {\n\t\t dp[i][0]=1;\n\t }\n\t for(int i=1;i<=n;i++) {\n\t\t for(int j=1;j<=sum;j++) {\n\t\t\t if(a[i]<=j) {\n\t\t\t\t dp[i][j]=Math.max((dp[i-1][j]),(dp[i-1][(int) (j-a[i])]));\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t }\n\t }\n\t return dp[n][(int) sum]==1;\n }\n public static boolean equal_Sum_Partition(long[] a,int n) {\n\t long sum=0;\n\t for(int i=1;i<=n;i++) {\n\t\t sum+=a[i];\n\t }\n\t if(sum%2!=0) {\n\t\t return false;\n\t }else {\n\t\t return subset_Sum_Using_Knapsack(a,n,sum/2);\n\t }\n }\n public static int count_Subsets_With_Given_Sum(int[] a,int n,int sum) {\n\t int[][] dp=new int[n+1][(int) (sum+1)];\n\t for(int i=0;i<=n;i++) {\n\t\t dp[i][0]=1;\n\t }\n\t for(int i=1;i<=n;i++) {\n\t\t for(int j=1;j<=sum;j++) {\n\t\t\t if(a[i]<=j) {\n\t\t\t\t dp[i][j]=dp[i-1][j]+dp[i-1][(int) (j-a[i])];\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t }\n\t }\n\t for(int i=0;i<=n;i++) {\n\t\t for(int j=0;j<=sum;j++) {\n\t\t\t System.out.print(dp[i][j]+\" \");\n\t\t }\n\t\t System.out.println();\n\t }\n\t return dp[n][sum];\n }\n public static int minimum_Subset_Sum_Difference(int[] a,int n,int sum) {\n\t int[][] dp=new int[n+1][(int) (sum+1)];\n\t for(int i=0;i<=n;i++) {\n\t\t dp[i][0]=1;\n\t }\n\t for(int i=1;i<=n;i++) {\n\t\t for(int j=1;j<=sum;j++) {\n\t\t\t if(a[i]<=j) {\n\t\t\t\t dp[i][j]=Math.max((dp[i-1][j]),(dp[i-1][(int) (j-a[i])]));\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t }\n\t }\n\t int min_diff=Integer.MAX_VALUE;\n\t for(int i=0;i<=sum/2+1;i++) {\n\t\t if(dp[n][i]==1) {\n\t\t\t min_diff=Math.min(min_diff, Math.abs(sum-2*i));\n\t\t }\n\t }\n\t return min_diff;\n }\n public static int Number_Of_subsets_with_minimum_Subset_Sum_Difference(int[] a,int n,int sum) {\n\t int[][] dp=new int[n+1][(int) (sum+1)];\n\t for(int i=0;i<=n;i++) {\n\t\t dp[i][0]=1;\n\t }\n\t for(int i=1;i<=n;i++) {\n\t\t for(int j=1;j<=sum;j++) {\n\t\t\t if(a[i]<=j) {\n\t\t\t\t dp[i][j]=dp[i-1][j]+dp[i-1][(int) (j-a[i])];\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t }\n\t }\n\t int count=0;\n\t int min_diff=Integer.MAX_VALUE;\n\t for(int i=0;i<=sum/2+1;i++) {\n\t\t if(dp[n][i]==1) {\n\t\t\t if(Math.abs(sum-2*i)<min_diff) {\n\t\t\t\t min_diff=Math.abs(sum-2*i);\n\t\t\t\t count=dp[n][i];\n\t\t\t }\n\t\t }\n\t }\n\treturn count; \n }\n public static int count_of_subsets_with_given_sum_difference(int[] a,int n,int sum,int diff) {\n\t int sum_eff=(sum+diff)/2;\n\t int[][] dp=new int[n+1][(int) (sum_eff+1)];\n\t dp[0][0]=1;\n\t for(int i=1;i<=n;i++) {\n\t\t for(int j=0;j<=sum_eff;j++) {\n\t\t\t if(a[i]<=j) {\n\t\t\t\t dp[i][j]=dp[i-1][j]+dp[i-1][(int) (j-a[i])];\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t\t \n\t\t }\n\t }\n\t for(int i=0;i<=n;i++) {\n\t\t for(int j=0;j<=sum_eff;j++) {\n\t\t\t System.out.print(dp[i][j]+\" \");\n\t\t }\n\t\t System.out.println();\n\t }\n\t return dp[n][sum_eff];\n\t \n }\n public static long unbounded_Knapsack_0_1_Iterative_Top_Down(int[] weight,int[] val,int w,int n) {\n\t int[][] dp=new int[n+1][w+1];\n\t for(int i=1;i<=n;i++) {\n\t\t for(int j=0;j<=w;j++) {\n\t\t\t if(weight[i]<=j) {\n\t\t\t\t dp[i][j]=Math.max(dp[i-1][j],val[i]+dp[i][j-weight[i]]);\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t }\n\t }\n\t for(int i=0;i<=n;i++) {\n\t\t for(int j=0;j<=w;j++) {\n\t\t\t System.out.print(dp[i][j]+\" \");\n\t\t }\n\t\t System.out.println();\n\t }\n\t return dp[n][w];\n }\n public static int rod_Cutting_Using_Unbounded_Knapsack(int[] lencut,int[] val,int n,int length) {\n\tint[][] dp=new int[n+1][length+1];\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=length;j++) {\n\t\t\tif(lencut[i]<=j) {\n\t\t\t\tdp[i][j]=Math.max(dp[i-1][j], val[i]+dp[i][j-lencut[i]]);\n\t\t\t}else {\n\t\t\t\tdp[i][j]=dp[i-1][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[n][length];\n }\n public static int Max_Number_Of_ways_to_get_given_sum_unbounded_knapsack(int[] a,int n,int sum) {\n\t int[][] dp=new int[n+1][sum+1];\n\t dp[0][0]=1;\n\t for(int i=1;i<=n;i++) {\n\t\t dp[i][0]=1;\n\t }\n\t for(int i=1;i<=n;i++) {\n\t\t for(int j=0;j<=sum;j++) {\n\t\t\t if(a[i]<=j) {\n\t\t\t\t dp[i][j]=dp[i-1][j]+dp[i][j-a[i]];\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t }\n\t }\n\t for(int i=0;i<=n;i++) {\n\t\t for(int j=0;j<=sum;j++) {\n\t\t\t System.out.print(dp[i][j]+\" \");\n\t\t }\n\t\t System.out.println();\n\t }\n\t return dp[n][sum];\n }\n public static int Min_Number_Of_coins_to_get_given_sum_unbounded_knapsack(int[] a,int n,int sum) {\n\t int[][] dp=new int[n+1][sum+1];\n\t int b=Integer.MAX_VALUE-1;\n\t for(int i=0;i<=sum;i++) {\n\t\t dp[0][i]=b;\n\t }\n\t for(int i=0;i<=sum;i++) {\n\t\t if(i%a[1]==0) {\n\t\t\t dp[1][i]=i/a[1];\n\t\t }else {\n\t\t\t dp[1][i]=b;\n\t\t }\n\t }\n\t for(int i=2;i<=n;i++) {\n\t\t for(int j=0;j<=sum;j++) {\n\t\t\t if(a[i]<=j) {\n\t\t\t\t dp[i][j]=Math.min(dp[i-1][j],1+dp[i][j-a[i]]);\n\t\t\t }else {\n\t\t\t\t dp[i][j]=dp[i-1][j];\n\t\t\t }\n\t\t }\n\t }\n\t for(int i=0;i<=n;i++) {\n\t\t for(int j=0;j<=sum;j++) {\n\t\t\t System.out.print(dp[i][j]+\" \");\n\t\t }\n\t\t System.out.println();\n\t }\n\t return dp[n][sum];\n }\npublic static int longest_Common_Subsequence(String str1,String str2,int n,int m,int[][] dp) {\n\tif(n==0 || m==0) {\n\t\treturn 0;\n\t}\n\tif(dp[n][m]!=-1) {\n\t\treturn dp[n][m];\n\t}\n\tif(str1.charAt(n-1)==str2.charAt(m-1)) {\n\t\tint f= 1+longest_Common_Subsequence(str1,str2,n-1,m-1,dp);\n\t\tdp[n][m]=f;\n\t\treturn f;\n\t}else {\n\t\tint f= Math.max(longest_Common_Subsequence(str1,str2,n-1,m,dp),longest_Common_Subsequence(str1,str2,n,m-1,dp));\n\t\tdp[n][m]=f;\n\t\treturn f;\n\t}\n}\npublic static int longest_Common_Subsequence_using_top_down(String str1,String str2,int n,int m) {\n\tint[][] dp=new int[n+1][m+1];\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tif(str1.charAt(i-1)==str2.charAt(j-1)) {\n\t\t\t\tdp[i][j]=1+dp[i-1][j-1];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Math.max(dp[i][j-1], dp[i-1][j]);\t\t\n\t\t\t\t}\n\t\t}\n\t}\nreturn dp[n][m];\n}\npublic static int longest_Common_Substring_using_top_down(String str1,String str2,int n,int m) {\n\tint[][] dp=new int[n+1][m+1];\n\tint max=Integer.MIN_VALUE;\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tif(str1.charAt(i-1)==str2.charAt(j-1)) {\n\t\t\t\tdp[i][j]=1+dp[i-1][j-1];\n\t\t\t\tmax=Math.max(max, dp[i][j]);\n\t\t\t}else {\n\t\t\t\tdp[i][j]=0;//since substring are continuous\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max;\n}\npublic static void Print_LCS(String str1,String str2,int n,int m) {\n\tint[][] dp=new int[n+1][m+1];\n\tfor(int i=0;i<=n;i++) {\n\t\tdp[i][0]=0;\n\t}\n\tfor(int i=0;i<=m;i++) {\n\t\tdp[0][i]=0;\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tif(str1.charAt(i-1)==str2.charAt(j-1)) {\n\t\t\t\tdp[i][j]=1+dp[i-1][j-1];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Math.max(dp[i][j-1], dp[i-1][j]);\n\t\t\t}\n\t\t}\n\t}\n\tint i=n;\n\tint j=m;\n\tString str=\"\";\n\twhile(i>0 && j>0) {\n\t\tif(str1.charAt(i-1)==str2.charAt(j-1)) {\n\t\t\tstr+=str1.charAt(i-1);\n\t\t\ti--;\n\t\t\tj--;\n\t\t\n\t\t}else {\n\t\t\tif(dp[i][j-1]>dp[i-1][j]) {\n\t\t\t\tj--;\n\t\t\t}else {\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\tint v=str.length();\n\tfor(int u=v-1;u>=0;u--) {\n\t\tSystem.out.print( str.charAt(u));\n\t}\t\n\tSystem.out.println();\n}\npublic static int shortest_Common_Supersequence(String str1,String str2,int n,int m) {\n\tint[][] dp=new int[n+1][m+1];\n\tfor(int i=0;i<=n;i++) {\n\t\tdp[i][0]=0;\n\t}\n\tfor(int i=0;i<=m;i++) {\n\t\tdp[0][i]=0;\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tif(str1.charAt(i-1)==str2.charAt(j-1)) {\n\t\t\t\tdp[i][j]=1+dp[i-1][j-1];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Math.max(dp[i][j-1], dp[i-1][j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn n+m-dp[n][m];\n}\npublic static int min_deletions_insertions_to_convert_String_A_to_B(String str1,String str2,int n,int m) {\n\tint lcs=longest_Common_Subsequence_using_top_down(str1,str2,n,m);\n\tint min_no_of_deletions=n-lcs;\n\tint min_no_of_insertions=m-lcs;\n\treturn (min_no_of_deletions+min_no_of_insertions);\n}\npublic static int longest_Palindromic_Subsequence(String str1,int n) {\n\tString reverse=\"\";\n\tfor(int i=n-1;i>=0;i--) {\n\t\treverse+=str1.charAt(i);\n\t}\n\tint lcs=longest_Common_Subsequence_using_top_down(str1,reverse,n,n);\n//\tPrint_LCS(str1,reverse,n,n);\n\treturn lcs;\n}\npublic static int minimum_Deletions_OR_Insertions_To_Make_String_Palindrome(String str,int n) {\n\tint lps=longest_Palindromic_Subsequence(str,n);\n\treturn n-lps;\n} \npublic static void Print_SCS(String str1,String str2,int n,int m) {\n\tint[][] dp=new int[n+1][m+1];\n\tfor(int i=0;i<=n;i++) {\n\t\tdp[i][0]=0;\n\t}\n\tfor(int i=0;i<=m;i++) {\n\t\tdp[0][i]=0;\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tif(str1.charAt(i-1)==str2.charAt(j-1)) {\n\t\t\t\tdp[i][j]=1+dp[i-1][j-1];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Math.max(dp[i][j-1], dp[i-1][j]);\n\t\t\t}\n\t\t}\n\t}\n\tint i=n;\n\tint j=m;\n\tString str=\"\";\n\twhile(i>0 && j>0) {\n\t\tif(str1.charAt(i-1)==str2.charAt(j-1)) {\n\t\t\tstr+=str1.charAt(i-1);\n\t\t\ti--;\n\t\t\tj--;\n\t\t\n\t\t}else {\n\t\t\tif(dp[i][j-1]>dp[i-1][j]) {\n\t\t\t\tstr+=str2.charAt(j-1);\n\t\t\t\tj--;\n\t\t\t}else {\n\t\t\t\tstr+=str1.charAt(i-1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\twhile(i>0) {\n\t\tstr+=str1.charAt(i-1);\n\t\ti--;\n\t}\n\twhile(j>0) {\n\t\tstr+=str2.charAt(j-1);\n\t\tj--;\n\t}\n\tint v=str.length();\n\tfor(int u=v-1;u>=0;u--) {\n\t\tSystem.out.print( str.charAt(u));\n\t}\t\n\tSystem.out.println();\n}\npublic static int longest_Repeating_Subsequence(String str,int n) {\n\tint[][] dp=new int[n+1][n+1];\n\tfor(int i=0;i<=n;i++) {\n\t\tdp[i][0]=0;\n\t}\n\tfor(int i=0;i<=n;i++) {\n\t\tdp[0][i]=0;\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=n;j++) {\n\t\t\tif(str.charAt(i-1)==str.charAt(j-1) &&  i!=j) {\n\t\t\t\tdp[i][j]=1+dp[i-1][j-1];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Math.max(dp[i][j-1], dp[i-1][j]);\n\t\t\t}\n\t\t}\n\t}\t\n\treturn dp[n][n];\n}\npublic static boolean pattern_Searching(String str1,String str2,int n,int m) {\n\tint g=longest_Common_Subsequence_using_top_down(str1,str2,n,m);\n\tint length=Math.min(n, m);\n\tif(g==length) {\n\t\treturn true;\n\t}else {\n\t\treturn false;\n\t}\n}\npublic static long[][] Dp=new long[1001][1001];\npublic static long Matrix_Chain_Multiplication(int[] a,int i,int j,int n) {\n\tif(i==j) {\n\t\treturn 0;}\n\tif(Dp[i][j]!=-1) {\n\t\treturn Dp[i][j];\n\t}\n\t\tlong min=Long.MAX_VALUE;\n\t\tfor(int k=i;k<j;k++) {\n\t\t\tlong temp=Matrix_Chain_Multiplication(a,i,k,n)+Matrix_Chain_Multiplication(a,k+1,j,n)+a[i-1]*a[k]*a[j];\n\t\t\tif(temp<min) {\n\t\t\t\tmin=temp;\n\t\t}\n\t}\n\t\tDp[i][j]=min;\n\treturn Dp[i][j];\n}\npublic static boolean IsPalindrome(String str,int a,int b) {\n\tboolean p=true;\n\tint i=a;\n\tint j=b;\n\twhile(i<=j) {\n\t\tif(str.charAt(i)!=str.charAt(j)) {\n\t\t\tp=false;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t\tj--;\n\t}\n\treturn p;\n}\npublic static long min_Partitions_required_to_make_String_Palindrome(String str,int i,int j) {\n\tif(i>=j) {\n\t\treturn 0;\n\t}\n\tif(IsPalindrome(str,i,j)) {\n\t\treturn 0;\n\t}\n\tif(Dp[i][j]!=-1) {\n\t\treturn Dp[i][j];\n\t}\n\tlong min=Long.MAX_VALUE;\n\tfor(int k=i;k<j;k++) {\n\t\tlong temp=0;\n\t\tif(Dp[i][k]!=-1) {\n\t\t\ttemp+=Dp[i][k];\n\t\t}else {\n\t\t\ttemp+=min_Partitions_required_to_make_String_Palindrome(str,i,k);\n\t\t}\n\t\tif(Dp[k+1][j]!=-1) {\n\t\t\ttemp+=Dp[k+1][j];\n\t\t}else {\n\t\t\ttemp+=min_Partitions_required_to_make_String_Palindrome(str,k+1,j);\n\t\t}\n\t\t temp+=1;\n\t\tif(temp<min) {\n\t\t\tmin=temp;\n\t\t}\n\t\tDp[i][j]=min;\n\t\t\n\t}\n\treturn min;\n}\npublic static int MCM_bottom_UP_dp(int[] a,int n) {\n\t int dp[][] = new int[n][n];\n     int q = 0;\n     for(int l=2; l < a.length; l++){\n         for(int i=0; i < a.length - l; i++){\n             int j = i + l;\n             dp[i][j] = 1000000;\n             for(int k=i+1; k < j; k++){\n                 q = dp[i][k] + dp[k][j] + a[i]*a[k]*a[j];\n                 if(q < dp[i][j]){\n                     dp[i][j] = q;\n                 }\n             }\n         }\n     }\n     for(int i=0;i<n;i++) {\n    \t for(int j=0;j<n;j++) {\n    \t\t System.out.print(dp[i][j]+\" \");\n    \t }\n    \t System.out.println();\n     }\n     return dp[0][n-1];\n}\npublic static int Palindrome_MCM(String str,int n) {\n\tboolean[][] p=new boolean[n][n];\n\tint[][] c=new int[n][n];\n\tfor(int i=0;i<n;i++) {\n\t\tp[i][i]=true;\n\t\tc[i][i]=0;\n\t}\n\tfor(int l=2;l<n;l++) {\n\t\tfor(int i=0;i<n-l+1;i++) {\n\t\t\tint j=i+l-1;\n\t\t\tif(l==2) {\n\t\t\t\tif(str.charAt(i)==str.charAt(j)) {\n\t\t\t\t\tp[i][j]=true;\n\t\t\t\t\tc[i][j]=0;\n\t\t\t\t}else {\n\t\t\t\t\tp[i][j]=false;\n\t\t\t\t\tc[i][j]=1;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tif(str.charAt(i)==str.charAt(j) && p[i+1][j-1]) {\n\t\t\t\t\tp[i][j]=true;\n\t\t\t\t\tc[i][j]=0;\n\t\t\t\t}else {\n\t\t\t\t\t c[i][j] = Integer.MAX_VALUE; \n\t                    for (int k = i; k <= j - 1; k++) { \n\t                        c[i][j] = Integer.min(c[i][j], \n\t                                              c[i][k] + c[k + 1][j] + 1);} \n\t                } \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\treturn c[0][n-1];\n\t}\npublic static int palindromic_Cuts(String str,int n) {\n\tboolean[][] p=new boolean[n][n];\n\tint[][] count=new int[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;i++,j++) {\n\t\t\tif(g==0) {\n\t\t\t\tcount[i][j]=0;\n\t\t\t\tp[i][j]=true;\n\t\t\t}else {\n\t\t\t\tif(str.charAt(i)==str.charAt(j) && p[i+1][j-1]) {\n\t\t\t\t\tcount[i][j]=0;\n\t\t\t\t\tp[i][j]=true;\n\t\t\t\t}else {\n\t\t\t\t\tcount[i][j]=Integer.MAX_VALUE;\n\t\t\t\t\tfor(int k=i;k<j;k++) {\n\t\t\t\t\t\tint temp=count[i][k]+count[k+1][j];\n\t\t\t\t\t\tcount[i][j]=Math.min(count[i][j], temp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count[0][n-1];\n}\npublic static int number_of_ways_to_get_boolean_true(String str1,String str2) {\n\tint n=str1.length();\n\tint[][] dpt =new int[n][n];\n\tint[][] dpf =new int[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;j++,i++) {\n\t\t\tif(g==0) {\n\t\t\t\tif(str1.charAt(i)=='T') {\n\t\t\t\t\tdpt[i][j]=1;\n\t\t\t\t\tdpf[i][j]=0;\n\t\t\t\t}else {\n\t\t\t\t\tdpt[i][j]=0;\n\t\t\t\t\tdpf[i][j]=1;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tfor(int k=i;k<j;k++) {\n\t\t\t\t\tint lt=dpt[i][k];\n\t\t\t\t\tint lf=dpf[i][k];\n\t\t\t\t\tint rt=dpt[k+1][j];\n\t\t\t\t\tint rf=dpf[k+1][j];\n\t\t\t\t\tif (str2.charAt(k) == '&') {\n                        dpt[i][j] += lt * rt;\n                        dpf[i][j] += lt * rf + lf * rt + rf * lf;\n                    } else if (str2.charAt(k) == '|') {\n                        dpt[i][j] += lt * rf + lf * rt + rt * lt;\n                        dpf[i][j] += rf * lf;\n                    } else {\n                        dpt[i][j] += lt * rf + lf * rt;\n                        dpf[i][j] += lf * rf + lt * rt;\n                    }\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dpt[0][n-1];\n}\npublic static int Matrix_Chain_Multiplication_using_Gap_Method(int[] a,int n) {\n    int[][] dp=new int[n][n];\nfor(int g=2;g<n;g++) {\n\tfor(int i=0,j=g;j<n;j++,i++) {\n\t    dp[i][j]=Integer.MAX_VALUE;\n\t\tfor(int k=i+1;k<j;k++) {\n\t\t\tdp[i][j]=Math.min(dp[i][j], dp[i][k]+dp[k][j]+a[i]*a[k]*a[j]);\n\t\t}\n\t}}\n\tfor(int i=0;i<n;i++) {\n\t\tfor(int j=0;j<n;j++) {\n\t\t\tSystem.out.print(dp[i][j]+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n\nreturn dp[0][n-1];\n}\npublic static HashMap<String,Integer> um=new HashMap<>();\npublic static int is_Scrambled(String str1,String str2) {\n\tif(str1.length()!=str2.length()) {\n\t\treturn 0;\n\t}\n\tif((str1.length()==0) || (str2.length()==0)) {\n\t\treturn 1;\n\t}\n\tif(str1.equals(str2)) {\n\t\treturn 1;\n\t}\n\tString g=str1+\" \"+str2;\n\tif(um.containsKey(g)) {\n\t\treturn um.get(g);\n\t}\n\tint n=str1.length();\n\tint flag=0;\n\tfor(int i=1;i<n;i++) {\n\t\tif ((is_Scrambled(str1.substring(0, i), \n\t\t\t\tstr2.substring(0, i))==1) && \n\t\t(is_Scrambled(str1.substring(i, n),\n\t\t\t\tstr2.substring(i, n))==1))\n\t{\n\t\tflag=1;\n\t\t\n\t\tum.put(g, 1);\n\t\treturn flag;\n\t}\n\n\t// Check if S2[0...i] is a scrambled\n\t// string of S1[n-i...n] and S2[i+1...n]\n\t// is a scramble string of S1[0...n-i-1]\n\tif ((is_Scrambled(str1.substring(n - i, n),\n\t\t\t\tstr2.substring(0, i))==1) && \n\t\t(is_Scrambled(str1.substring(0, n - i),\n\t\t\t\tstr2.substring(i, n))==1)) \n\t{\n\t\tflag=1;\n\t\tum.put(g, 1);\n\t\treturn flag;\n\t}\n}\n\tum.put(g, flag);\n\treturn flag;\n\t}\npublic static long egg_Drop(long e,long f) {\n\tif(Dp[(int) e][(int) f]!=-1) {\n\t\treturn Dp[(int) e][(int) f];\n\t}\n\tif(f==0 || f==1) {\n\t\treturn f;\n\t}\n\tif(e==0) {\n\t\treturn 0;\n\t}\n\tLong min=Long.MAX_VALUE;\n\tfor(long k=1;k<=f;k++) {\n\t\tlong solve1,solve2=0;\n\t\tif(Dp[(int) e][(int) (f-k)]!=-1) {\n\t\t\tsolve1=Dp[(int) e][(int) (f-k)];\n\t\t}else {\n\t\t solve1=egg_Drop(e,f-k);}\n\t\tif(Dp[(int) (e-1)][(int) (k-1)]!=-1) {\n\t\t\tsolve2=Dp[(int) (e-1)][(int) (k-1)];\n\t\t}else {\n\t\t solve2=egg_Drop(e-1,k-1);}\n\t\tlong temp=Math.max(solve1,solve2)+1;\n\t\tmin=Math.min(min, temp);\n\t}\n\tDp[(int) e][(int) f]=min;\n\treturn min;\n}\npublic static int longest_Increasing_Subsequence(int[] a) {\n\tint n=a.length;\n\tint[] dp=new int[n];\n\tdp[0]=1;\n\tint maximum=1;\n\tfor(int i=1;i<n;i++) {\n\t\tint max=0;\n\t\tfor(int j=0;j<i;j++) {\n\t\t\tif(a[i]>a[j]) {\n\t\t\t\tmax=Integer.max(dp[j], max);\n\t\t\t}\n\t\t}\n\t\tdp[i]=max+1;\n\t\tmaximum=Integer.max(maximum, dp[i]);\n\t}\n\treturn maximum;\n}\npublic static long longest_Increasing_Maximm_Sum_Subsequence(int[] a) {\n\tint n=a.length;\n\tlong[] dpsum=new long[n];\n\tdpsum[0]=a[0];\n\tlong maximum=a[0];\n\tfor(int i=1;i<n;i++) {\n\t\tint max=0;\n\t\tlong maxsum=Integer.MIN_VALUE;\n\t\tfor(int j=0;j<i;j++) {\n\t\t\tif(a[i]>=a[j]) {\n\t\t\t\tmaxsum=Long.max(dpsum[j], maxsum);\n\t\t\t}\n\t\t}\n\t\tif(maxsum==Integer.MIN_VALUE) {\n\t\t\tdp[i]=a[i];\n\t\t}else {\n\t\t\tdp[i]=maxsum+a[i];\n\t\t}\n\t\tmaximum=Math.max(maximum, dpsum[i]);\n\t}\n\treturn maximum;\n}\npublic static int longest_bitonic_SubSequence(int[] a) {\n\tint n=a.length;\n\tint[] lis=new int[n];\n\tlis[0]=1;\n\tfor(int i=1;i<n;i++) {\n\t\tint max=0;\n\t\tfor(int j=0;j<i;j++) {\n\t\t\tif(a[i]>a[j]) {\n\t\t\t\tmax=Integer.max(lis[j], max);\n\t\t\t}\n\t\t}\n\t\tlis[i]=max+1;\n\t}\n\tint[] lds=new int[n];\n\tlds[n-1]=1;\n\tfor(int i=n-2;i>=0;i--) {\n\t\tint max=0;\n\t\tfor(int j=n-1;j>i;j--) {\n\t\t\tif(a[i]>a[j]) {\n\t\t\t\tmax=Integer.max(lds[j], max);\n\t\t\t}\n\t\t}\n\t\tlds[i]=max+1;\n\t}\n\tint max_bitonic=0;\n\tfor(int i=0;i<n;i++) {\n\t\tmax_bitonic=Math.max(max_bitonic, lis[i]+lds[i]-1);\n\t}\n\treturn max_bitonic;\n}\npublic static class bridges {\n\tint n;\n\tint s;\n\tbridges(int n,int s){\n\t\tthis.n=n;\n\t\tthis.s=s;\n\t}\n}\npublic static int maximum_non_overlapping_bridges(bridges[] a,int n) {\n\tbridges[] b=merge_sort(a,0,n-1);\n\tint[] dp=new int[n];\n\tdp[0]=1;\n\tint maximum=Integer.MIN_VALUE;\n\tfor(int i=1;i<n;i++) {\n\t\tint max=0;\n\t\tfor(int j=0;j<i;j++) {\n\t\t\tif(b[i].s>=b[j].s ) {\n\t\t\t\tmax=Math.max(dp[j], max);\n\t\t\t}\n\t\t}\n\t\tdp[i]=max+1;\n\t\tmaximum=Math.max(maximum, dp[i]);\n\t}\n\treturn maximum;\n}\npublic static int number_of_palindromic_substrings(String str) {\n\tint n=str.length();\n\tboolean[][] dp=new boolean[n][n];\n\tint count=0;\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;i++,j++) {\n\t\t\tif(g==0) {\n\t\t\t\tdp[i][j]=true;\n\t\t\t}else if(g==1) {\n\t\t\t\tif(str.charAt(i)==str.charAt(j)) {\n\t\t\t\t\tdp[i][j]=true;\n\t\t\t\t}else {\n\t\t\t\t\tdp[i][j]=false;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tif(str.charAt(i)==str.charAt(j) && dp[i+1][j-1]) {\n\t\t\t\t\tdp[i][j]=true;\n\t\t\t\t}else {\n\t\t\t\t\tdp[i][j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(dp[i][j]) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\t}\n\t\n\treturn count;\n}\npublic static int longest_palindromic_Substring(String str) {\n\tint n=str.length();\n\tboolean[][] dp=new boolean[n][n];\n\tint length=0;\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;i++,j++) {\n\t\t\tif(g==0) {\n\t\t\t\tdp[i][j]=true;\n\t\t\t}else if(g==1) {\n\t\t\t\tif(str.charAt(i)==str.charAt(j)) {\n\t\t\t\t\tdp[i][j]=true;\n\t\t\t\t}else {\n\t\t\t\t\tdp[i][j]=false;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tif(str.charAt(i)==str.charAt(j) && dp[i+1][j-1]) {\n\t\t\t\t\tdp[i][j]=true;\n\t\t\t\t}else {\n\t\t\t\t\tdp[i][j]=false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(dp[i][j]) {\n\t\t\t\tlength=g+1;\n\t\t\t}\n\t\t}\n\t}\n\t\treturn length;\n}\npublic static void print_all_paths_with_minimum_cost(int[][] a,int n,int m) {\n\tint[][] dp=new int[n][m];\n\tfor(int i=m-1;i>=0;i--) {\n\t\tif(i==m-1) {\n\t\t\tdp[n-1][m-1]=a[n-1][m-1];\n\t\t}else {\n\t\t\tdp[n-1][i]+=dp[n-1][i+1]+a[n-1][i];\n\t\t}\n\t}\n\tfor(int i=n-1;i>=0;i--) {\n\t\tif(i==n-1) {\n\t\t\tdp[n-1][m-1]=a[n-1][m-1];\n\t\t}else {\n\t\t\tdp[i][m-1]+=dp[i+1][m-1]+a[i][m-1];\n\t\t}\n\t}\n\tfor(int i=n-2;i>=0;i--) {\n\t\tfor(int j=m-2;j>=0;j--) {\n\t\t\tdp[i][j]=Math.min(dp[i+1][j], dp[i][j+1])+a[i][j];\n\t\t}\n\t}\n\tSystem.out.println(dp[0][0]);\n\tQueue<pair> q=new LinkedList<>();\n\tq.add(new pair(\"\",0,0));\n\twhile(!q.isEmpty()) {\n\t\tpair curr=q.poll();\n\t\tif(curr.i==n-1 && curr.j==m-1) {\n\t\t\tSystem.out.println(curr.str);\n\t\t}else if(curr.i==n-1) {\n\t\t\tq.add(new pair(curr.str+\"H\",curr.i,curr.j+1));\n\t\t}else if(curr.j==m-1) {\n\t\t\tq.add(new pair(curr.str+\"V\",curr.i+1,curr.j));\n\t\t}else {\n\t\t\tif(dp[curr.i+1][curr.j] <dp[curr.i][curr.j+1]) {\n\t\t\t\tq.add(new pair(curr.str+\"V\",curr.i+1,curr.j));\n\t\t\t}else if(dp[curr.i+1][curr.j] >dp[curr.i][curr.j+1]) {\n\t\t\t\tq.add(new pair(curr.str+\"H\",curr.i,curr.j+1));\n\t\t\t}else {\n\t\t\t\tq.add(new pair(curr.str+\"V\",curr.i+1,curr.j));\n\t\t\t\tq.add(new pair(curr.str+\"H\",curr.i,curr.j+1));\n\t\t\t}\n\t\t}\n\t\t\n\t}\n}\npublic static class pair{\n\tprivate String str;\n\tprivate int i;\n\tprivate int j;\n\tpair(String str,int i,int j){\n\t\tthis.str=str;\n\t\tthis.i=i;\n\t\tthis.j=j;\n\t}\n}\npublic static void minimum_jumps_path(int[] a) {\n\tint n=a.length;\n\tint[] dp=new int[n];\n\tfor(int i=n-1;i>=0;i--) {\n\t\tif(i==n-1) {\n\t\t\tdp[i]=0;\n\t\t}else if(a[i]>=n-i-1){\n\t\t\tdp[i]=1;\n\t\t}else if(a[i]==0){\n\t\t\tdp[i]=Integer.MAX_VALUE;\n\t\t}else {\n\t\t\tint min=Integer.MAX_VALUE;\n\t\t\tfor(int j=i+1;j<=i+a[i];j++) {\n\t\t\t\tmin=Math.min(min, dp[j]);\n\t\t\t}\n\t\t\tif(min!=Integer.MAX_VALUE) {\n\t\t\t\tdp[i]=min+1;\n\t\t\t}else {\n\t\t\t\tdp[i]=min;\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(dp[0]);\n\tQueue<pair> q=new LinkedList<>();\n\tq.add(new pair(\"0\",0,dp[0]));\n\twhile(!q.isEmpty()) {\n\t\tpair curr=q.poll();\n\t\tif(curr.i==n-1) {\n\t\t\tSystem.out.println(curr.str+\" .\");\n\t\t}else {\n\t\t\tfor(int k=curr.i+1;k<=curr.i+a[curr.i] && k<n;k++) {\n\t\t\t\tif(dp[k]==curr.j-1) {\n\t\t\t\t\tq.add(new pair(curr.str+\" -> \"+k,k,dp[k]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\npublic static long count_no_of_distinct_subsequence(String str) {\n\tint n=str.length();\n\tlong[] dp=new long[n+1];\n\tdp[0]=1;\n\tHashMap<Character,Integer> e=new HashMap<>();\n\tfor(int i=1;i<=n;i++) {\n\t\tif(!e.containsKey(str.charAt(i-1))) {\n\t\t\tdp[i]=2*dp[i-1];\n\t\t\te.put(str.charAt(i-1), i);\n\t\t}else {\n\t\t\tdp[i]=2*dp[i-1]-dp[(e.get(str.charAt(i-1)))-1];\n\t\t\te.remove(str.charAt(i-1));\n\t\t\te.put(str.charAt(i-1), i);\n\t\t}\n\t}\n\treturn dp[n]-1;\n\t\n}\npublic static void print_all_LIS(int[] a) {\n\tint n=a.length;\n\tint[] dp=new int[n];\n\tdp[0]=1;\n\tint maximum=1;\n\tint k=0;\n\tfor(int i=1;i<n;i++) {\n\t\tint max=0;\n\t\tfor(int j=0;j<i;j++) {\n\t\t\tif(a[i]>=a[j]) {\n\t\t\t\tmax=Integer.max(dp[j], max);\n\t\t\t}\n\t\t}\n\t\tdp[i]=max+1;\n\t\tif(dp[i]>maximum) {\n\t\t\tmaximum=dp[i];\n\t\t\tk=i;\n\t\t}\n\t}\n\tSystem.out.println(maximum);\n\tQueue<pair> q=new LinkedList<>();\n\tfor(int i=0;i<n;i++) {\n\t\tif(dp[i]==maximum) {\n\t\t\tq.add(new pair(\"\"+a[i],i,dp[i]));\t\t\n\t\t}\n\t}\n\t\n\twhile(!q.isEmpty()) {\n\t\tpair curr=q.poll();\n\t\tif(curr.j==1) {\n\t\t\tSystem.out.println(curr.str);\n\t\t}else {\n\t\t\tfor(int j=curr.i-1;j>=0;j--) {\n\t\t\t\tif(a[j]<=a[curr.i] && dp[j]==curr.j-1) {\n\t\t\t\t\tq.add(new pair(a[j]+\" -> \"+curr.str,j,dp[j]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}\npublic static int count_palindromic_subsequences(String str) {\n\tint n=str.length();\n\tint[][] dp=new int[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;i++,j++) {\n\t\t\tif(g==0) {\n\t\t\t\tdp[i][j]=1;\n\t\t\t}else if(g==1) {\n\t\t\t\tif(str.charAt(i)==str.charAt(j)) {\n\t\t\t\t\tdp[i][j]=3;\n\t\t\t\t}else {\n\t\t\t\t\tdp[i][j]=2;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tif(str.charAt(i)==str.charAt(j)) {\n\t\t\t\t\tdp[i][j]=dp[i][j-1]+dp[i+1][j]+1;\n\t\t\t\t}else {\n\t\t\t\t\tdp[i][j]=dp[i][j-1]+dp[i+1][j]-dp[i+1][j-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}}\n\t\treturn dp[0][n-1];\n\t\n}\npublic static void print_all_maximum_gold_paths(int[][] a,int n,int m) {\nint[][] dp=new int[n][m];\nfor(int i=0;i<n;i++) {\n\tdp[i][m-1]=a[i][m-1];\n}\nfor(int j=m-2;j>=0;j--) {\nfor(int i=0;i<n;i++) {\n\tif(i==0) {\n\t\tdp[i][j]=Math.max(dp[i][j+1], dp[i+1][j+1])+a[i][j];\n\t}else if(i==n-1) {\n\t\tdp[i][j]=Math.max(dp[i][j+1], dp[i-1][j+1])+a[i][j];\n\t}else {\n\t\tdp[i][j]=Math.max(dp[i][j+1], Math.max(dp[i+1][j+1],dp[i-1][j+1]))+a[i][j];\n\t}\n}\n}\nint max=Integer.MIN_VALUE;\nfor(int i=0;i<n;i++) {\n\tif(dp[i][0]>max) {\n\t\tmax=dp[i][0];\n\t}\n}\nSystem.out.println(max);\nQueue<pair> q=new LinkedList<>();\nfor(int i=0;i<n;i++) {\n\tif(dp[i][0]==max) {\n\t\tq.add(new pair(\"\"+(i)+\" \",i,0));\n\t\t\n\t}\n}\nwhile(!q.isEmpty()) {\n\tpair curr=q.poll();\n\tif(curr.j==m-1) {\n\t\tSystem.out.println(curr.str);\n\t}else {\n\t\tif(curr.i==n-1) {\n\t\t\tint max1=Math.max(dp[curr.i][curr.j+1],dp[curr.i-1][curr.j+1]);\n\t\t\tif(dp[curr.i][curr.j+1]==max1) {\n\t\t\t\tq.add(new pair(curr.str+\"d2 \",curr.i,curr.j+1));\n\t\t\t}\n\t\t\tif(dp[curr.i-1][curr.j+1]==max1) {\n\t\t\t\tq.add(new pair(curr.str+\"d1 \",curr.i-1,curr.j+1));\n\t\t\t}\n\t\t\t\n\t\t}else if(curr.i==0) {\n\t\t\tint max1=Math.max(dp[curr.i][curr.j+1],dp[curr.i+1][curr.j+1]);\n\t\t\tif(dp[curr.i][curr.j+1]==max1) {\n\t\t\t\tq.add(new pair(curr.str+\"d2 \",curr.i,curr.j+1));\n\t\t\t}\n\t\t\tif(dp[curr.i+1][curr.j+1]==max1) {\n\t\t\t\tq.add(new pair(curr.str+\"d3 \",curr.i+1,curr.j+1));\n\t\t\t}\n\n\t\t}else {\n\t\t\tint max1=Math.max(dp[curr.i][curr.j+1],Math.max(dp[curr.i-1][curr.j+1],dp[curr.i+1][curr.j+1]));\n\t\t\tif(dp[curr.i-1][curr.j+1]==max1) {\n\t\t\t\tq.add(new pair(curr.str+\"d1 \",curr.i-1,curr.j+1));\n\t\t\t}\n\t\t\tif(dp[curr.i][curr.j+1]==max1) {\n\t\t\t\tq.add(new pair(curr.str+\"d2 \",curr.i,curr.j+1));\n\t\t\t}\n\t\t\t\n\t\t\tif(dp[curr.i+1][curr.j+1]==max1) {\n\t\t\t\tq.add(new pair(curr.str+\"d3 \",curr.i+1,curr.j+1));\n\t\t\t}\n\n\t\t}\n\t}\n}\n\n}\npublic static void print_all_subsets_with_target_sum(int[] a,int sum) {\n\tint n=a.length;\n\tboolean[][] dp=new boolean[n+1][sum+1];\n\tfor(int i=0;i<=n;i++) {\n\t\tdp[i][0]=true;\n\t}\n\t\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=sum;j++) {\n\t\t\tif(dp[i-1][j]) {\n\t\t\t\tdp[i][j]=true;\n\t\t\t}else if(a[i-1]<=j&&dp[i-1][j-a[i-1]]) {\n\t\t\t\tdp[i][j]=true;\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(dp[n][sum]);\n\tif(dp[n][sum]) {\n\tQueue<pair> q=new LinkedList<>();\n\tq.add(new pair(\"\",n,sum));\n\twhile(!q.isEmpty()) {\n\t\tpair curr=q.poll();\n\t\tif(curr.i==0 || curr.j==0) {\n\t\t\t\tSystem.out.println(curr.str);\n\t\t}else {\n\t\t\tif(a[curr.i-1]<=curr.j && dp[curr.i-1][curr.j-a[curr.i-1]]) {\n\t\t\t\tq.add(new pair((curr.i-1)+\" \"+curr.str,curr.i-1,curr.j-a[curr.i-1]));\n\t\t\t}\n\t\t\tif(dp[curr.i-1][curr.j]) {\n\t\t\t\tq.add(new pair(curr.str,curr.i-1,curr.j));\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\t}\n}\npublic static void print_maximum_price_Knapsack(int[] a,int[] p,int sum) {\nint n=a.length;\nint[][] dp=new int[n+1][sum+1];\nfor(int i=1;i<=n;i++) {\n\tfor(int j=1;j<=sum;j++) {\n\t\tif(a[i-1]>j) {\n\t\t\tdp[i][j]=dp[i-1][j];\n\t\t}else {\n\t\t\tdp[i][j]=Math.max(dp[i-1][j], dp[i-1][j-a[i-1]]+p[i-1]);\n\t\t}\n\t}\n}\nSystem.out.println(dp[n][sum]);\nQueue<pair> q=new LinkedList<>();\nq.add(new pair(\"\",n,sum));\nwhile(!q.isEmpty()) {\n\tpair curr=q.poll();\n\tif(curr.i==0 || curr.j==0) {\n\t\tSystem.out.println(curr.str);\n\t}else {\n\t\tif( curr.j>=a[curr.i-1] && dp[curr.i-1][curr.j-a[curr.i-1]]+p[curr.i-1]==dp[curr.i][curr.j]) {\n\t\t\tq.add(new pair(curr.i-1+\" \"+curr.str,curr.i-1,curr.j-a[curr.i-1]));\n\t\t}\n\t\tif(dp[curr.i-1][curr.j]==dp[curr.i][curr.j]) {\n\t\t\tq.add(new pair(curr.str,curr.i-1,curr.j));\n\t\t}\n\t\t\n\t}\n}\n\n\n}\npublic static int longest_palindromic_subsequence(String str) {\nint n=str.length();\nint[][] dp=new int[n][n];\nfor(int g=0;g<n;g++) {\n\tfor(int i=0,j=g;j<n;j++,i++) {\n\t\tif(g==0) {\n\t\t\tdp[i][j]=1;\n\t\t}else if(g==1) {\n\t\t\tif(str.charAt(i)==str.charAt(j)) {\n\t\t\t\tdp[i][j]=2;\n\t\t\t}else {\n\t\t\t\tdp[i][j]=1;\n\t\t\t}\n\t\t}else {\n\t\t\tif(str.charAt(i)==str.charAt(j)) {\n\t\t\t\tdp[i][j]=2+dp[i+1][j-1];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Math.max(dp[i][j-1], dp[i+1][j]);\n\t\t\t}\n\t\t}\n\t}\n}\nreturn dp[0][n-1];\n}\npublic static void wild_String_Matching(String str,String pattern) {\n\tint m=str.length();\n\tint n=pattern.length();\n\tboolean[][] dp=new boolean[n+1][m+1];\n\tdp[n][m]=true;\n\tfor(int i=n-1;i>=0;i--) {\n\t\tfor(int j=m;j>=0;j--) {\n\t\tif(j==m) {\n\t\tdp[i][m]=dp[i+1][m];\n\t\t}else if((pattern.charAt(i)==str.charAt(j)) || (pattern.charAt(i)=='?')) {\n\t\t\t\tdp[i][j]=dp[i+1][j+1];\n\t\t\t}else if(pattern.charAt(i)=='*') {\n\t\t\t\tdp[i][j]=(dp[i+1][j] | dp[i][j+1]);\n\t\t\t}else {\n\t\t\t\tdp[i][j]=false;\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(dp[0][0]);\n}\npublic static void regular_expression_Matching(String str,String pattern) {\nint n=pattern.length();\nint m=str.length();\nboolean[][] dp=new boolean[n+1][m+1];\ndp[0][0]=true;\nfor(int i=1;i<=n;i++) {\n\tfor(int j=0;j<=m;j++) {\n\t\tif(j==0) {\n\t\t\tif(pattern.charAt(i-1)=='*') {\n\t\t\tdp[i][0]=dp[i-2][0];}\n\t\t}else if((str.charAt(j-1)==pattern.charAt(i-1)) || (pattern.charAt(i-1)=='.')) {\n\t\t\tdp[i][j]=dp[i-1][j-1];\n\t\t}else if(pattern.charAt(i-1)=='*') {\n\t\t\tif(dp[i-2][j]) {\n\t\t\t\tdp[i][j]=true;\n\t\t\t}else if((pattern.charAt(i-2)=='.')||(pattern.charAt(i-2)==str.charAt(j-1))) {\n\t\t\t\tdp[i][j]=dp[i][j-1];\n\t\t\t}\n\t\t}\n\t}\n}\nSystem.out.println(dp[n][m]);\n}\npublic static void distinct_Palindromic_Subsequences(String str) {\n\tint n=str.length();\n\tint[] prev=new int[n];\n\tint[] next=new int[n];\n\tHashMap<Character,Integer> e=new HashMap<>();\n\tfor(int i=0;i<n;i++) {\n\t\tif(i==0) {\n\t\t\te.put(str.charAt(i), i);\n\t\t\tnext[i]=n;\n\t\t\tprev[i]=-1;\n\t\t}else {\n\t\t\tif(!e.containsKey(str.charAt(i))) {\n\t\t\t\te.put(str.charAt(i), i);\n\t\t\t\tnext[i]=n;\n\t\t\t\tprev[i]=-1;\n\t\t\t}else {\n\t\t\t\tint g=e.get(str.charAt(i));\n\t\t\t\tprev[i]=g;\n\t\t\t\tnext[g]=i;\n\t\t\t\tnext[i]=n;\n\t\t\t\te.put(str.charAt(i), i);\n\t\t\t}\n\t\t}\n\t}\n\tint[][] dp=new int[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;j++,i++) {\n\t\t\tif(g==0) {\n\t\t\t\tdp[i][j]=1;\n\t\t\t}else if(g==1) {\n\t\t\t\tdp[i][j]=2;\n\t\t\t}else {\n\t\t\t\tif(str.charAt(i)!=str.charAt(j)) {\n\t\t\t\t\tdp[i][j]=dp[i][j-1]+dp[i+1][j]-dp[i+1][j-1];\n\t\t\t\t}else {\n\t\t\t\t\tint ne=next[i];\n\t\t\t\t\tint pr=prev[j];\n\t\t\t\t\tif(ne>pr) {\n\t\t\t\t\t\tdp[i][j]=2*dp[i+1][j-1]+2;\n\t\t\t\t\t}else if(ne==pr) {\n\t\t\t\t\t\tdp[i][j]=2*dp[i+1][j-1]+1;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tdp[i][j]=2*dp[i+1][j-1]-dp[ne+1][pr-1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(dp[0][n-1]);\n}\npublic static void catalan_numbers(int n) {\n\tint[] dp=new int[n+1];\n\tdp[0]=1;\n\tdp[1]=1;\n\tfor(int i=2;i<=n;i++) {\n\t\tfor(int j=i-1;j>=0;j--) {\n\t\t\tdp[i]+=dp[j]*dp[i-j-1];\n\t\t}\n\t}\n\tSystem.out.println(dp[n]);\n}\npublic static void total_numbers_of_BST_with_given_node(int n) {\n\tcatalan_numbers(n);\n}\npublic static void total_hills_and_valleys(int n) {\n\tint[] dp=new int[n+1];\n\tdp[0]=1;\n\tdp[1]=1;\n\tfor(int i=2;i<=n;i++) {\n\t\tint inside=i-1;\n\t\tint outside=0;\n\t\twhile(inside>=0) {\n\t\t\tdp[i]+=dp[inside]*dp[outside];\n\t\t\tinside--;\n\t\t\toutside++;\n\t\t}\n\t}\n\tSystem.out.println(dp[n]);\n}\npublic static void total_no_of_bracket_sequences(int n) {\n\tint[] dp=new int[n+1];\n\tdp[0]=1;\n\tdp[1]=1;\n\tfor(int i=2;i<=n;i++) {\n\t\tint inside=i-1;\n\t\tint outside=0;\n\t\twhile(inside>=0) {\n\t\t\tdp[i]+=dp[inside]*dp[outside];\n\t\t\tinside--;\n\t\t\toutside++;\n\t\t}\n\t}\n\tSystem.out.println(dp[n]);\n}\npublic static void total_no_of_non_intersecting_chords(int n) {\n\tlong[] dp=new long[n+1];\n\tdp[0]=1;\n\tdp[1]=1;\n\tfor(int i=2;i<=n;i++) {\n\t\tint inside=i-1;\n\t\tint outside=0;\n\t\twhile(inside>=0) {\n\t\t\tdp[i]+=dp[inside]*dp[outside];\n\t\t\tinside--;\n\t\t\toutside++;\n\t\t}\n\t}\n\tSystem.out.println(dp[n]);\n}\npublic static void total_no_of_non_triangles_possible_with_given_polygon_sides(int n) {\n\tn-=2;\n\tlong[] dp=new long[n+1];\n\tdp[0]=1;\n\tdp[1]=1;\n\tfor(int i=2;i<=n;i++) {\n\t\tint inside=i-1;\n\t\tint outside=0;\n\t\twhile(inside>=0) {\n\t\t\tdp[i]+=dp[inside]*dp[outside];\n\t\t\tinside--;\n\t\t\toutside++;\n\t\t}\n\t}\n\tSystem.out.println(dp[n]);\n}\npublic static void total_ways_to_reach_from_Left_Bottom_to_Top_right_in_a_square_Matrix(int n) {\n\t// n is dimenion of matrix\n\t// this question is reducible to valley mountains questions if we rotate the matrix horizontally and then look at every path as a stroke\n\t// catalan numbers\n\tcatalan_numbers(n-2);\n}\npublic static int minimum_cost_of_triangulation(int[] a) {\n\tint n=a.length;\n\tint[][] dp=new int[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;i++,j++) {\n\t\t\tif(g==0) {\n\t\t\t\tdp[i][j]=0;\n\t\t\t}else if(g==1) {\n\t\t\t\tdp[i][j]=0;\n\t\t\t}else if(g==2){\n\t\t\t\tdp[i][j]=a[i]*a[i+1]*a[i+2];\n\t\t\t}else {\n\t\t\t\tint min=Integer.MAX_VALUE;\n\t\t\t\tfor(int k=i+1;k<j;k++) {\n\t\t\t\t\tint tri=a[i]*a[k]*a[j];\n\t\t\t\t\tint left=dp[i][k];\n\t\t\t\t\tint right=dp[k][j];\n\t\t\t\t\tint tot=tri+left+right;\n\t\t\t\t\tif(tot<min) {\n\t\t\t\t\t\tmin=tot;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdp[i][j]=min;\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[0][n-1];\n}\npublic static int rod_cutting_with_left_right_strategy(int[] a,int n) {\n\tint[] dp=new int[n+1];\n\tdp[1]=a[1];\n\tfor(int i=2;i<=n;i++) {\n\t\tdp[i]=a[i];\n\t\tint left=1;\n\t\tint right=i-1;\n\t\twhile(left<=right) {\n\t\t\tdp[i]=Math.max(dp[left]+dp[right],dp[i]);\n\t\tleft++;\n\t\tright--;\n\t\t}\n\t\t\n\t}\n\treturn dp[n];\n}\npublic static int palidromic_cuts_with_suffix(String str) {\n\tint n=str.length();\n\tboolean[][]  pd=new boolean[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;i++,j++) {\n\t\t\tif(g==0) {\n\t\t\t\tpd[i][j]=true;\n\t\t\t}else if(g==1) {\n\t\t\t\tif(str.charAt(i)==str.charAt(j)) {\n\t\t\t\t\tpd[i][j]=true;\n\t\t\t\t}else {\n\t\t\t\t\tpd[i][j]=false;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tif(str.charAt(i)!=str.charAt(j)) {\n\t\t\t\t\tpd[i][j]=false;\n\t\t\t\t}else {\n\t\t\t\t\tif(pd[i+1][j-1]) {\n\t\t\t\t\t\tpd[i][j]=true;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tpd[i][j]=false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint[] dp=new int[n+1];\n\tfor(int i=1;i<=n;i++) {\n\t\tif(i==1) {\n\t\t\tdp[1]=0;\n\t\t}else if(i==2) {\n\t\t\tif(str.charAt(0)==str.charAt(1)) {\n\t\t\t\tdp[2]=0;\n\t\t\t}else {\n\t\t\t\tdp[2]=1;\n\t\t\t}\n\t\t}else {\n\t\t\tif(pd[0][i-1]) {\n\t\t\t\tdp[i]=0;\n\t\t\t}else {\n\t\t\tdp[i]=Integer.MAX_VALUE;\n\t\t\tfor(int k=i;k>=1;k--) {\n\t\t\t\tif(pd[k-1][i-1]) {\n\t\t\t\t\tdp[i]=Math.min(dp[i], dp[k-1]+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t}\n\t}\nreturn dp[n];\n}\npublic static int MCM(int[] a) {\n\tint n=a.length;\n\tint[][] dp=new int[n-1][n-1];\n\tfor(int g=0;g<n-1;g++) {\n\t\tfor(int i=0,j=g;j<n-1;j++,i++) {\n\t\t\tif(g==0) {\n\t\t\t\tdp[i][j]=0;\n\t\t\t}else if(g==1) {\n\t\t\t\tdp[i][j]=a[i]*a[i+1]*a[i+2];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Integer.MAX_VALUE;\n\t\t\t\tfor(int k=i;k<j;k++) {\n\t\t\t\t\tint left=dp[i][k];\n\t\t\t\t\tint right=dp[k+1][j];\n\t\t\t\t\tint mat=a[i]*a[k+1]*a[j+1];\n\t\t\t\t\tdp[i][j]=Math.min(dp[i][j], left+right+mat);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[0][n-2];\n}\npublic static void optimal_Binary_Search_Tree(int[] frequency) {\n\tint n=frequency.length;\n\tint[] pre=new int[n];\n\tfor(int i=0;i<n;i++) {\n\t\tpre[i]=(i==0)?(frequency[0]):(pre[i-1]+frequency[i]);\n\t}\n\tint[][] dp=new int[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;i++,j++) {\n\t\t\tif(g==0) {\n\t\t\t\tdp[i][j]=frequency[i];\n\t\t\t}else if(g==1){\n\t\t\t\tdp[i][j]=Math.min(2*frequency[i]+frequency[j], frequency[i]+2*frequency[j]);\n\t\t\t}else {\n\t\t\t\tint sum=(i==0)?(pre[j]):(pre[j]-pre[i-1]);\n\t\t\t\tdp[i][j]=Integer.MAX_VALUE;\n\t\t\t\tfor(int k=i;k<=j;k++) {\n\t\t\t\t\tint left=(k==0)?(0):(dp[i][k-1]);\n\t\t\t\t\tint right=(k==n-1)?(0):(dp[k+1][j]);\n\t\t\t\t\tint tot=left+right+sum;\n\t\t\tdp[i][j]=Math.min(dp[i][j], tot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(dp[0][n-1]);\n}\npublic static void min_squares(int n) {\n\tint[] dp=new int[n+1];\n\tdp[1]=1;\n\tfor(int i=2;i<=n;i++) {\n\t\tdp[i]=Integer.MAX_VALUE;\n\t\tfor(int j=1;j*j<=i;j++) {\n\t\t\tint rem=i-j*j;\n\t\t\tdp[i]=Math.min(dp[i], 1+dp[rem]);\n\t\t}\n\t}\n\tSystem.out.println(dp[n]);\n}\npublic static long Kadanes_Algo(long[] a) {\n    long sum=Long.MIN_VALUE;\n\tlong curr=0;\n\tint i=0;\n\tint n=a.length;\n\twhile(i<n) {\n\t\tif(curr<0) {\n\t\t\tcurr=0;\n\t\t}\n\tcurr+=a[i];\n\tsum=Math.max(sum, curr);\n\t\ti++;\n\t}\nreturn sum;\n}\npublic static void Letter_Combinations_of_a_Phone_Number(int n) {\n\tint[][] data= {\n\t{0,8},\n\t{1,2,4},\n\t{1,2,3,5},\n\t{2,3,6},\n\t{1,4,5,7},\n\t{2,4,5,6,8},\n\t{2,5,6,9},\n\t{4,7,8},\n\t{5,7,8,9,0},\n\t{6,8,9}\n\t};\n\tint[][] dp=new int[n+1][10];\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=0;j<=9;j++) {\n\t\t\tif(i==1) {\n\t\t\t\tdp[i][j]=1;\n\t\t\t}else {\n\t\t\t\tint sum=0;\n\t\t\t\tfor(int e:data[j]) {\n\t\t\t\t\tsum+=dp[i-1][e];\n\t\t\t\t}\n\t\t\t\tdp[i][j]=sum;\n\t\t\t}\n\t\t}\n\t}\n\tlong tot_sum=0;\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=0;j<=9;j++) {\n\t\t\ttot_sum+=dp[i][j];\n\t\t}\n\t}\n\tSystem.out.println(tot_sum);\n}\npublic static void maximum_length_subarray_after_K_Concatenations(long[] a,long sum,int k) {\n\tif(k==1) {\n\t\tSystem.out.println(Kadanes_Algo(a));\n\t}else {\n\t\tif(sum<0) {\n\t\t\tlong[] b=new long[2*a.length];\n\t\t\tfor(int i=0;i<2*a.length;i++) {\n\t\t\t\tb[i]=a[(i%(a.length))];\n\t\t\t}\n\t\t\tSystem.out.println((Kadanes_Algo(b)));\n\t\t}else {\n\t\t\tlong[] b=new long[2*a.length];\n\t\t\tfor(int i=0;i<2*a.length;i++) {\n\t\t\t\tb[i]=a[(i%(a.length))];\n\t\t\t}\n\t\t\tSystem.out.println((k-2)*sum+(Kadanes_Algo(b)));\n\t\t}\n\t}\n}\npublic static void Balloon_Burst(int[] a) {\n\tint n=a.length;\n\tint[][] dp=new int[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;i++,j++) {\n\t\t\tfor(int k=i;k<=j;k++) {\n\t\t\t\tint left=(k==i)?0:dp[i][k-1];\n\t\t\t\tint right=(k==j)?0:dp[k+1][j];\n\t\t\t\tint tot=left+right;\n\t\t\t\tint val=a[k];\n\t\t\t\tif(i!=0) {\n\t\t\t\t\tval*=a[i-1];\n\t\t\t\t}\n\t\t\t\tif(j!=n-1) {\n\t\t\t\t\tval*=a[j+1];\n\t\t\t\t}\n\t\t\t\tdp[i][j]=Math.max(dp[i][j], tot+val);\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\tSystem.out.println(dp[0][n-1]);\n}\npublic static boolean isValid(int ni,int nj,int n) {\n\tif((ni<n && ni>=0) && (nj<n && nj>=0)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\npublic static void Knights_Probability(int n,int k,int r,int c) {\n\tdouble[][] curr=new double[n][n];\n\tdouble[][] next=new double[n][n];\n\tcurr[r][c]=1;\n\tfor(int g=1;g<=k;g++) {\n\tfor(int i=0;i<n;i++) {\n\t\tfor(int j=0;j<n;j++) {\n\t\t\tif(curr[i][j]!=0) {\n\t\t\t\tint nir=i-1;\n\t\t\t\tint nil=i+1;\n\t\t\t\tint njd=j+2;\n\t\t\t\tint nju=j-2;\n\t\t\t\tint niu=i-2;\n\t\t\t\tint nid=i+2;\n\t\t\t\tint njr=j+1;\n\t\t\t\tint njl=j-1;\n\t\t\t\tif(isValid(nir,njd,n)) {\n\t\t\t\t\tnext[nir][njd]+=curr[i][j]/8;\n\t\t\t\t}\n                if(isValid(nir,nju,n)) {\n                \tnext[nir][nju]+=curr[i][j]/8;\n\t\t\t\t}\n                if(isValid(nil,njd,n)) {\n                \tnext[nil][njd]+=curr[i][j]/8;\n\t\t\t\t}\n                if(isValid(nil,nju,n)) {\n                \tnext[nil][nju]+=curr[i][j]/8;\n                } \n                if(isValid(niu,njr,n)) {\n                \tnext[niu][njr]+=curr[i][j]/8;\n\t\t\t\t}\n                if(isValid(niu,njl,n)) {\n                \tnext[niu][njl]+=curr[i][j]/8;\n\t\t\t\t}\n                if(isValid(nid,njr,n)) {\n                \tnext[nid][njr]+=curr[i][j]/8;\n                }\n                if(isValid(nid,njl,n)) {\n                \tnext[nid][njl]+=curr[i][j]/8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcurr=next;\n\tnext=new double[n][n];\n\t}\n\tdouble sum=0;\n\tfor(int i=0;i<n;i++) {\n\t\tfor(int j=0;j<n;j++) {\n\t\t\tsum+=curr[i][j];\n\t\t}\n\t}\n\tSystem.out.println(sum);\n}\npublic static long MAX_diff_between_Zeroes_and_Ones(String str) {\n\tchar[] a=str.toCharArray();\n\tint n=str.length();\n\tlong[] b=new long[n];\n\tfor(int i=0;i<n;i++) {\n\t\tif(a[i]=='1') {\n\t\t\tb[i]=-1;\n\t\t}else {\n\t\t\tb[i]=1;\n\t\t}\n\t}\n\treturn Kadanes_Algo(b);\n}\npublic static void Maximum_Sum_Subarray_with_Atleast_K_elements(long[] a,int k) {\n\tint n=a.length;\n\tlong[] b=new long[n];\n\tlong sum=Long.MIN_VALUE;\n\tlong curr=0;\n\tfor(int i=0;i<n;i++) {\n\t\tif(curr<0) {\n\t\t\tcurr=0;\n\t\t}\n\t\tcurr+=a[i];\n\t\tb[i]=curr;\n\t}\n\tlong currk=0;\n\tfor(int i=0;i<k;i++) {\n\t\tcurrk+=a[i];\n\t}\n\tsum=Long.max(currk, sum);\n\tfor(int i=k;i<n;i++) {\n\t\tcurrk=currk-a[i-k]+a[i];\n\t\tsum=Math.max(currk, Math.max(sum, currk+b[i-k]));\n\t}\n\tSystem.out.println(sum);\n}\npublic static void Game(int[] a) {\n\tint n=a.length;\n\tint[][] dp=new int[n][n];\n\tfor(int g=0;g<n;g++) {\n\t\tfor(int i=0,j=g;j<n;j++,i++) {\n\t\t\tif(g==0) {\n\t\t\t\tdp[i][j]=a[i];\n\t\t\t}else if(g==1) {\n\t\t\t\tdp[i][j]=Math.max(a[i], a[j]);\n\t\t\t}else {\n\t\t\t\tint left=a[i]+Math.min(dp[i+2][j], dp[i+1][j-2]);\n\t\t\t\tint right=a[j]+Math.min(dp[i+1][j-1], dp[i][j-2]);\n\t\t\t\tdp[i][j]=Math.max(left, right);\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(dp[0][n-1]);\n}\npublic static void Egg_drop(int e,int f) {\n\tint[][] dp=new int[e+1][f+1];\n\tfor(int i=1;i<=f;i++) {\n\t\tdp[1][i]=i;\n\t}\n\tfor(int i=1;i<=e;i++) {\n\t\tdp[i][1]=1;\n\t}\n\tfor(int i=2;i<=e;i++) {\n\t\tfor(int j=2;j<=f;j++) {\n\t\t\tint max=Integer.MAX_VALUE;\n\t\t\tfor(int k=0;k<j;k++) {\n\t\t\t\tmax=Math.min(max,Math.max(dp[i-1][k], dp[i][j-k-1]));\n\t\t\t}\n\t\t\tdp[i][j]=max+1;\n\t\t}\n\t}\n\tSystem.out.println(dp[e][f]);\n}\npublic static void Minimum_ASCII_deletions(String str1,String str2) {\n\tint m=str1.length();\n\tint n=str2.length();\n\tint[][] dp=new int[n+1][m+1];\n\tfor(int i=n-1;i>=0;i--) {\n\t\tdp[i][m]=dp[i+1][m]+(int)str2.charAt(i);\n\t}\n\tfor(int i=m-1;i>=0;i--) {\n\t\tdp[n][i]=dp[0][i+1]+(int)str1.charAt(i);\n\t}\n\tfor(int i=n-1;i>=0;i--) {\n\t\tfor(int j=m-1;j>=0;j--) {\n\t\t\tif(str2.charAt(i)==str1.charAt(j)) {\n\t\t\t\tdp[i][j]=dp[i+1][j+1];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Math.min((int)str1.charAt(j)+dp[i][j+1], (int)str2.charAt(i)+dp[i+1][j]);\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(dp[0][0]);\n}\npublic static void Minimum_Cost_Of_deletions(String str1,String str2,int c1,int c2) {\n\tint n=str1.length();\n\tint m=str2.length();\n\tint[][] dp=new int[n+1][m+1];\n\tfor(int i=1;i<=n;i++) {\n\t\tfor(int j=1;j<=m;j++) {\n\t\t\tif(str1.charAt(i-1)==str2.charAt(j-1)) {\n\t\t\t\tdp[i][j]=1+dp[i-1][j-1];\n\t\t\t}else {\n\t\t\t\tdp[i][j]=Math.max(dp[i][j-1], dp[i-1][j]);\t\t\n\t\t\t\t}\n\t\t}\n\t}\n\tint val1=c1*(n-dp[n][m]);\n\tint val2=c2*(m-dp[n][m]);\n\tSystem.out.println(val1+val2);\n}\npublic static void arithmetic_Slices(int[] a) {\n\tint[] dp=new int[a.length];\n\tint ans=0;\n\tfor(int i=2;i<a.length;i++) {\n\t\tif((a[i]-a[i-1])==(a[i-1]-a[i-2])) {\n\t\t\tdp[i]=dp[i-1]=1;\n\t\t\tans+=dp[i];\n\t\t}\n\t}\n\tSystem.out.println(ans);\n}\npublic static void Largest_SubSquare_Matrix_with_all_1s(int[][] a) {\n\tint n=a.length;\n\tint m=a[0].length;\n\tint[][] dp=new int[n][m];\n\tfor(int i=0;i<n;i++) {\n\t\tif(a[i][m-1]==1) {\n\t\t\tdp[i][m-1]=1;\n\t\t}\n\t}\n\tfor(int i=0;i<m;i++) {\n\t\tif(a[n-1][i]==1) {\n\t\t\tdp[n-1][i]=1;\n\t\t}\n\t}\n\tint max=0;\n\tfor(int i=n-2;i>=0;i--) {\n\t\tfor(int j=m-2;j>=0;j--) {\n\t\t\tif(a[i][j]==1) {\n\t\t\t\tdp[i][j]=Math.min(dp[i+1][j], Math.min(dp[i+1][j+1], dp[i][j+1]))+1;\n\t\t\tmax=Math.max(max, dp[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(max);\n}\npublic static void word_break(String str,HashSet<String> dict) {\n\tint[] dp=new int[str.length()];\n\tfor(int i=0;i<str.length();i++) {\n\t\tfor(int j=0;j<=i;j++) {\n\t\t\tString str1=str.substring(j,i+1);\n\t\t\tif(dict.contains(str1)) {\n\t\t\tif(j>0) {\n\t\t\t\tdp[j]+=dp[j-1];\n\t\t\t}else {\n\t\t\t\tdp[j]+=1;\n\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n//\tfor(int i=0;i<str.length();i++) {\n//\t\tSystem.out.print(dp[i]+\" \");\n//\t}\n//\tSystem.out.println();\n\tif(dp[str.length()-1]!=0) {\n\t\tSystem.out.println(\"true\");\n\t}else {\n\t\tSystem.out.println(\"False\");\n\t}\n}\npublic static void distinct_transformation(String so,String t) {\n\tint[][] dp=new int[t.length()+1][so.length()+1];\n\tfor(int i=0;i<=so.length();i++) {\n\t\tdp[t.length()][i]=1;\n\t}\n\tfor(int i=0;i<t.length();i++) {\n\t\tdp[i][so.length()]=0;\n\t}\n\tfor(int i=t.length()-1;i>=0;i--) {\n\t\tfor(int j=so.length()-1;j>=0;j--) {\n\t\t\tif(t.charAt(i)==so.charAt(j)) {\n\t\t\t\tdp[i][j]=(dp[i][j+1]+dp[i+1][j+1]);\n\t\t\t}else {\n\t\t\t\tdp[i][j]=dp[i][j+1];\n\t\t\t}\n\t\t}\n\t}\n\tSystem.out.println(dp[0][0]);\n}\nstatic int[][][][] dp1=new int[101][101][11][11];\npublic static int ceasors_legion(int f,int h,int k1,int k2) {\n\tif((f+h)==0) {\n\t\tSystem.out.println(f+\" \"+h);\n\t\treturn 1;\n\t\t\n\t}\n\tif(dp1[f][h][k1][k2]!=-1) {\n\t\tSystem.out.println(f+\" \"+h);\n\t\treturn dp1[f][h][k1][k2];\n\t}\n\tint x=0;\n\tif(f>0 && k1>0) {\n\t\tSystem.out.println(f+\" \"+h);\n\t\tx=ceasors_legion(f-1,h,k1-1,k2);\n\t}\n\tint y=0;\n\tif(h>0 && k2>0) {\n\t\tSystem.out.println(f+\" \"+h);\n\t\ty=ceasors_legion(f,h-1,k1,k2-1);\n\t}\n\tdp1[f][h][k1][k2]=(x+y)%(100000000);\n\treturn (x+y)%(100000000);\n}\nstatic int k11=0;\nstatic int k22=0;\nint getAns(int f ,int h , int k1 , int k2)\n{\n\tif((f + h) == 0) return 1;\n \n\tif(dp1[f][h][k1][k2] != -1)\treturn dp1[f][h][k1][k2];\n \n\t//fill f\n\tint x = 0;\n\tif(f > 0 && k1 > 0) { \n\t\tSystem.out.println(f+\" \"+h+\" \"+k1+\" \"+k2);\n\t\tx = getAns(f - 1, h , k1 - 1 , k22);}\n \n\t//fill h\n\tint y = 0;\n\tif(h > 0 && k2 > 0) { \n\t\tSystem.out.println(f+\" \"+h+\" \"+k1+\" \"+k2);\n\t\ty = getAns(f , h - 1 , k11 , k2 - 1);\n\t} \n\treturn dp1[f][h][k1][k2] = (x + y) % 100000000;\n}\nstatic int[] dp2=new int[100001];\npublic static int getAns(int n,int k) {\n\tif(n==0) {\n\t\treturn 1;\n\t}\n\tif(dp2[n]!=-1) {\n\t\treturn dp2[n];\n\t}\n\tint x=0;\n\tif(n>=k) {\n\t\tx=getAns(n-k,k);\n\t}\n\tint y=0;\n\ty=getAns(n-1,k);\n\tdp2[n]=(x+y)%(1000000007);\n\treturn (x+y)%(1000000007);\n}\npublic static void longest_bracket_Sequence(String str) {\n\tStack<Integer> st=new Stack<>();\n\tint[] e=new int[str.length()+1];\n\tfor(int i=0;i<str.length()+1;i++) {\n\t\te[i]=-1;\n\t}\n\tint[] f=new int[1000001];\n\tint max=0;\n\tf[0]=1;\n\tout:for(int i=0;i<str.length();i++) {\n\t\tif(str.charAt(i)=='(') {\n\t\t\tst.add(i);\n\t\t}else {\n\t\t\tif(st.isEmpty()) {\n\t\t\t\tcontinue out;\n\t\t\t}else {\n\t\t\t\tint id=st.pop();\n\t\t\t\tif(id==0) {\n\t\t\t\t\te[i]=id;\n\t\t\t\t}else {\n\t\t\t\t\tif(e[id-1]>=0) {\n\t\t\t\t\t\te[i]=e[id-1];\n\t\t\t\t\t}else {\n\t\t\t\t\t\te[i]=id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint l=i-e[i]+1;\n\t\t\t\tf[l]++;\n\t\t\t\tmax=Math.max(max,l);\n\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\tSystem.out.println(max+\" \"+f[max]);\n\t\n}\nstatic class pair1{\n\tprivate int i;\n\tprivate int cost;\n\tpair1(int i,int cost){\n\t\tthis.i=i;\n\t\tthis.cost=cost;\n\t}\n}\nstatic long[][] dp3=new long[3001][3001];\nstatic long INF=(long) Math.pow(10, 15);\npublic static long get(int x,int prev,int n,pair1[] a) {\n\tif(x>=n) {\n\t\treturn 0;\n\t}\n\tif(dp3[x][prev]!=INF) {\n\t\treturn dp3[x][prev];\n\t}\n\tlong c1=0;\n\tc1=get(x+1,x,n,a)+a[x].cost;\n\tlong c2=0;\n\tc2=get(x+1,prev,n,a)+(a[x].i-a[prev].i);\n\tlong val=Math.min(c1, c2);\n//\treturn dp3[x][prev]=val;\n\treturn dp3[x][prev]=val;\n}\nstatic int[] poss=new int[1001];\nstatic long[][][] dp4=new long[11][1001][2];\npublic static long get_till_nth(int pos,int n,int sum,int p) {\n\tif(pos>n) {\n\t\treturn sum;\n\t}\nif(dp4[pos][sum][p]!=-1) {\n\treturn dp4[pos][sum][p];\n}\n\tint limit=9;\n\tif(p==0) {\n\t\tlimit=poss[pos];\n\t}\n\tlong res=0;\n\tfor(int i=0;i<=limit;i++) {\n\t\t\n\t\tif((p==1) || i<limit) {\n\t\tres+=get_till_nth(pos+1,n,sum+i,1);\n\t\t}\n\t\telse {\n\t\t\tres+=get_till_nth(pos+1,n,sum+i,0);\n\t\t}\n\t}\n\tdp4[pos][sum][p]=res;\n\treturn res;\n\n}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nimport heapq as hp\n\nN = int(input())\nA = list(map(int, input().split()))\n\ndic = {}\ncanuse = [True]*(N+2)\nfor i, a in enumerate(A):\n    dic[a] = i\n    canuse[a] = False\n\nq = []\nfor i in range(N+1):\n    if canuse[i]:\n        hp.heappush(q, i)\n\nans = []\nfor i, a in enumerate(A):\n    b = hp.heappop(q)\n    ans.append(str(b))\n    if dic[a] == i:\n        hp.heappush(q, a)\n\nprint(\" \".join(ans))"
        },
        {
            "language": 3,
            "solution": "v=[0 for i in range(1000006)]\nn=int(input())\na=[0]\na+=list(map(int,input().split()))\nflag=1\nfor i in range(1,n+1):\n    if a[i]>i:\n        flag=0\n        break\n    v[a[i]]=1\n    #print(a[i])\nif flag==0:\n    print(-1)\nelse:\n    \n    b=[-1 for i in range(n+1)]\n    for i in range(2,n+1):\n        if a[i]!=a[i-1]:\n            b[i]=a[i-1]\n            v[a[i-1]]=1\n            #print(a[i-1])\n            \n    nv=[]\n    #print(b)\n    #print(v[0])\n    for i in range(1000006):\n        if v[i]==0:\n            nv.append(i)\n    j=0\n    #print(nv[:10])\n    for i in range(1,n+1):\n        if b[i]==-1:\n            b[i]=nv[j]\n            j+=1\n    for i in range(1,n+1):\n        print(b[i],end=\" \")\n    \n        \n    \n        \n    \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1e5 + 5;\nlong long n;\nlong long a[N], b[N];\nbool ex[N];\nvoid solve() {\n  cin >> n;\n  for (long long i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  memset(b, -1, sizeof(b));\n  for (long long i = 1; i <= n; i++) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n      ex[b[i]] = true;\n    }\n  }\n  ex[a[n]] = true;\n  long long m = 0;\n  for (long long i = 1; i <= n; i++) {\n    while (ex[m]) m++;\n    if (b[i] == -1) {\n      b[i] = m;\n      ex[m] = true;\n    }\n    cout << b[i] << ' ';\n  }\n}\nsigned main() {\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  bool can = true;\n  vector<long long> v(n);\n  set<long long> s;\n  vector<long long> change;\n  map<long long, long long> mp;\n  for (long long i = 1; i <= n; i++) {\n    cin >> v[i - 1];\n    mp[v[i - 1]]++;\n    if (i > 1) {\n      if (v[i - 1] != v[i - 2]) {\n        change.push_back(i - 1);\n      }\n    }\n    s.insert(v[i - 1]);\n    if ((v[i - 1]) > i) {\n      can = false;\n      break;\n    }\n  }\n  if (can) {\n    long long i = 0;\n    long long count = 0;\n    for (long long z = 0; z <= n + 1; z++) {\n      if (mp[z] == 0) {\n        cout << z << \" \";\n        count++;\n        if (count == n) {\n          break;\n        }\n        mp[v[i]]--;\n        while (mp[v[i]] == 0) {\n          cout << v[i] << \" \";\n          if (z <= v[i]) {\n            z++;\n          }\n          count++;\n          if (count == n) {\n            break;\n          }\n          i++;\n          mp[v[i]]--;\n        }\n        if (count == n) {\n          break;\n        }\n        i++;\n      }\n    }\n  } else {\n    cout << -1 << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n/*\npolyakoff\n*/\n\npublic class Main {\n\n    static FastReader in;\n    static PrintWriter out;\n    static Random rand = new Random();\n    static final int oo = (int) 2e9 + 10;\n    static final long OO = (long) 4e18;\n    static final int MOD = (int) 1e9 + 7;\n    static final int N = (int) 1e6;\n\n\n    static void solve() {\n        int n = in.nextInt();\n\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++)\n            a[i] = in.nextInt();\n\n        int[] ans = new int[n];\n        ArrayDeque<Integer> q = new ArrayDeque<>();\n        int last = 0, cur = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] > last) {\n                ans[i] = cur++;\n                while (cur < a[i])\n                    ans[q.pollFirst()] = cur++;\n                last = a[i];\n            } else\n                q.addLast(i);\n        }\n        while (!q.isEmpty())\n            ans[q.pollFirst()] = N;\n\n        for (int i = 0; i < n; i++)\n            out.print(ans[i] + \" \");\n        out.println();\n\n\n    }\n\n    public static void main(String[] args) throws FileNotFoundException {\n        in = new FastReader(System.in);\n//        in = new FastReader(new FileInputStream(\"sometext.txt\"));\n        out = new PrintWriter(System.out);\n//        out = new PrintWriter(new FileOutputStream(\"output.txt\"));\n\n        int T = 1;\n//        T = in.nextInt();\n        while (T-- > 0)\n            solve();\n\n//        Thread thread = new Thread(null, () -> {\n//            solve();\n//        }, \"Main\", 1 << 28);\n//        thread.start();\n//        try {\n//            thread.join();\n//        } catch (InterruptedException e) {\n//            e.printStackTrace();\n//        }\n\n//        out.flush();\n        out.close();\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        FastReader(InputStream is) {\n            br = new BufferedReader(new InputStreamReader(is));\n        }\n\n        Integer nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        Long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        Double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(nextLine());\n            }\n            return st.nextToken();\n        }\n\n        String nextLine() {\n            String s = \"\";\n            try {\n                s = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return s;\n        }\n    }\n\n    static void dbg(Object... args) {\n        for (Object arg : args)\n            out.print(arg + \" \");\n        out.println();\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "import io, os\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\ndef f():\n    n = int(input())\n    A = [int(s) for s in input().split()]\n    if A[-1]==0:\n        # A all 0\n        B = [1]*n\n        print(' '.join(str(num) for num in B))\n        return\n    for i in range(n):\n        if A[i] > i+1:\n            print(-1)\n            return\n\n    l = A[-1]\n    visited = [0]*l\n    B = [-1]*n\n\n    if A[0] >= 2:\n        print(-1)\n        return\n    if A[0] == 1:\n        B[0] = 0\n        visited[0] = 1\n    for i in range(1,n):\n        if A[i] != A[i-1]:\n            B[i] = A[i-1]\n            visited[A[i-1]] = 1\n    # all ele in B should be seen first time\n    i = 0\n    for j in range(l):\n        if visited[j]:\n            continue\n        while B[i] != -1:\n            i += 1\n            if i >= n:\n                print(-1)\n                return\n        B[i] = j\n    for i in range(n):\n        if B[i] == -1:\n            B[i] = l+1\n\n    print(' '.join(str(num) for num in B))\n\n\nf()"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class EhabandPrefixMEXs {\n\n\t// https://codeforces.com/contest/1364/problem/C\n\t\n\tpublic static void main(String[] args) throws IOException, FileNotFoundException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\t//BufferedReader in = new BufferedReader(new FileReader(\"EhabandPrefixMEXs\"));\n\n\t\tint n = Integer.parseInt(in.readLine());  \n\t\tint[] a = new int[n];\n\t\tint[] b = new int[n];\n\t\tStringTokenizer st = new StringTokenizer(in.readLine());\n\t\tfor (int i=0; i<n; i++) {\n\t\t\ta[i] = Integer.parseInt(st.nextToken()); \n\t\t\tif (a[i] > i+1) {\n\t\t\t\tSystem.out.println(-1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tPriorityQueue<Integer> need = new PriorityQueue<>();\n\t\tfor (int i=n-1; i>=0; i--) {\n\t\t\tif (i == 0 && a[i] != 0) {\n\t\t\t\tb[i] = 0;\n\t\t\t}\n\t\t\telse if (i > 0 && a[i] > a[i-1]) {\n\t\t\t\tb[i] = a[i-1];\n\t\t\t\tfor (int j=a[i-1]+1; j<a[i]; j++) {\n\t\t\t\t\tneed.add(j);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (need.size() > 0) {\n\t\t\t\t\tb[i] = need.poll();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tb[i] = (int)1e6;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i=0; i<n; i++) {\n\t\t\tSystem.out.print(b[i] + \" \");\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = list(map(int, input().split()))\nS = set(range(n+1))\nS.remove(A[-1])\nused = set()\nused.add(A[-1])\n\nB = [-1]*n\nH = list(range(n+1))\nH = [-x for x in H]\nimport heapq\nheapq.heapify(H)\nfor i in reversed(range(n)):\n    if i != 0:\n        if A[i-1] not in used:\n            B[i] = A[i-1]\n            used.add(A[i-1])\n        else:\n            while H:\n                x = heapq.heappop(H)*(-1)\n                if x not in used:\n                    break\n            B[i] = x\n            used.add(x)\n    else:\n        while H:\n            x = heapq.heappop(H)*(-1)\n            if x not in used:\n                break\n        B[i] = x\n        used.add(x)\nprint(*B)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\nl = [int(a) for a in input().strip().split()]\n    \nans = [0]*n\ndone = {}#values already put\nindex = {}#index finalized\nfor i in range(n):\n    done[l[i]]=1\nfor i in range(1,n):\n    if(l[i]!=l[i-1]):\n        ans[i]=l[i-1]\n        index[i] = 1\n\n\nj = 0\nfor i in range(n):\n    if(i in index.keys()):\n        continue\n    while(j in done.keys()):\n        j+=1\n    ans[i]=j\n    j+=1\n\nprint(*ans)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nans = []\nneg = []\ntill = -1\nfor i in range(n):\n    if till==l[i]-1:\n        ans.append(-1)\n        neg.append(i)\n    else:\n        till+=1\n        ans.append(till)\n        while till!=l[i]-1 and len(neg):\n            ind = neg.pop()\n            till+=1\n            ans[ind] = till\nma = max(l)\nwhile len(neg):\n    ind = neg.pop()\n    ans[ind] = ma+1\nprint(*ans)\n        \n    "
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom math import gcd,sqrt\nfrom collections import deque\ninput=stdin.readline\nR=lambda:map(int,input().split())\nI=lambda:int(input())\nS=lambda:input().rstrip('\\n')\nP=lambda x:stdout.write(x)\nhg=lambda x,y:((y+x-1)//x)*x\npw=lambda x:1 if x==1 else 1+pw(x//2)\nchk=lambda x:chk(x//2) if not x%2 else True if x==1 else False\nN=10**6+7\nn=I()\na=list(R())\nval=[1]*N\nfor i in a:val[i]=0\nstk=deque([i for i in range(a[-1]) if val[i]])\nif not stk:stk=deque([a[-1]+1])\nans=[stk.popleft()]\nfor i in range(1,n):\n\tif a[i]!=a[i-1]:\n\t\tans+=a[i-1],\n\telse:\n\t\tif stk:\n\t\t\tans+=stk.popleft(),\n\t\telse:\n\t\t\tans+=ans[-1],\nprint(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class C649\n{\n    public static void main(String [] args)\n    {\n        MyScanner sc = new MyScanner();\n        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n        int n = sc.nextInt(); int [] a = new int [n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        boolean ok = true;\n        for (int i = 0; i < n; i++) {\n            if (a[i] >= i + 2) {\n                ok = false; break;\n            }\n        }\n        if (ok) {\n            int last = a[n-1]; TreeSet<Integer> set = new TreeSet<>();\n            for (int i = 0; i < last; i++) set.add(i);\n            int rem = n - set.size();\n            for (int i = last + 1; i <= last + rem; i++) set.add(i);\n            int [] b = new int [n];\n            for (int i = n - 1; i >= 0; i--) {\n                int next = a[i];\n                int here = a[i]; if (i > 0) next = a[i-1];\n                if (next == here) {\n                    b[i] = set.last();\n                    set.remove(b[i]);\n                } else {\n                    b[i] = next;\n                    set.remove(b[i]);\n                }\n            }\n            Set<Integer> re = new HashSet<>(); boolean good = true;\n            for (int i = 0; i < n; i++) {\n                if (re.contains(b[i])) good = false;\n                re.add(b[i]);\n            }\n            if (good) {\n                for (int i = 0; i < n; i++) out.print(b[i] + \" \");\n            } else {\n                out.println(-1);\n            }\n        } else {\n            out.println(-1);\n        }\n        out.close();\n    }\n\n\n    //-----------MyScanner class for faster input----------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine(){\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n\n\n    }\n\n}"
        },
        {
            "language": 1,
            "solution": "N = input()\narr = map(int,raw_input().split())\n\nnotUsed = set(range(N+1))\n\npossible = True\nlastOcc = {}\nfor n in range(N) :\n  if arr[n] > n+1 : \n    possible = False\n    break\n  lastOcc[arr[n]] = n\n  notUsed.discard(arr[n])\n\nif possible :\n\n  extra = list(notUsed)\n  extra.sort()\n\n  ans = [None] * (N+1)\n  for k, v in lastOcc.items() : ans[v+1] = k\n\n  i = 0\n  for n in range(N) :\n    if ans[n] is None : \n      ans[n] = extra[i]\n      i += 1\n  \n  #if ans[0] > 1 : print -1\n  #else : \n  print ' '.join(str(x) for x in ans[:-1])\n\nelse : print -1"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [n + 1] * n\n    pred = 0\n    slots = []\n    for i, el in enumerate(a):\n        if el > pred:\n            nums = list(range(pred + 1, el))\n            for j in nums:\n                if not bool(slots):\n                    print(-1)\n                    return\n                ans[slots.pop(0)] = j\n            ans[i] = pred\n        else:\n            slots.append(i)\n        pred = el\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nm = l[-1]+1\nd = {}\ns = set(l)\nfor i in l:\n    if i in d:\n        d[i] = d[i]+1\n\n    else:\n        d[i] = 1\n\no = []\nfor i in range(0,m):\n    if i in s:\n        pass\n\n    else:\n        o.append(i)\n\no = o[::-1]\np = []\nfor i in l:\n    if len(o) == 0:\n        p.append(m)\n        m = m+1\n        d[i] = d[i]-1\n        if d[i] == 0:\n            o.append(i)\n\n    else:\n        x = o.pop()\n        p.append(x)\n        d[i] = d[i] - 1\n        if d[i] == 0:\n            o.append(i)\n\n\nprint(*p)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nb = [-1]*(n+1)\na.append(-1)\nf = 0\nd = set()\nfor i in range(1,n+1):\n    if a[i-1]!=a[i]:\n        b[i]=a[i-1]\n        d.add(b[i])\nd = list(set(list(range(n+1)))-d)\nc = 0\nfor i in range(n+1):\n    if b[i]==-1:\n        b[i]=d[c]\n        c+=1\nprint(*b[:-1])\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Ehab_And_Prefix_Mex {\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tFastReader t = new FastReader();\n\t\tPrintWriter o = new PrintWriter(System.out);\n\t\tint n = t.nextInt();\n\t\tboolean vis[] = new boolean[n + 1];\n\t\tint[] a = new int[n];\n\t\tint[] ans = new int[n];\n\n\t\tArrays.fill(ans, -1);\n\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\ta[i] = t.nextInt();\n\t\t\tvis[a[i]] = true;\n\t\t}\n\n\t\tfor (int i = 1; i < n; ++i) {\n\t\t\tif (a[i] != a[i - 1])\n\t\t\t\tans[i] = a[i - 1];\n\t\t}\n\n\t\tint cur = 0;\n\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tif (ans[i] == -1) {\n\t\t\t\twhile (vis[cur]) {\n\t\t\t\t\tcur++;\n\t\t\t\t}\n\n\t\t\t\tans[i] = cur;\n\t\t\t\tvis[cur] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor (int i : ans)\n\t\t\to.print(i + \" \");\n\n\t\to.flush();\n\t\to.close();\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "# kartikay26\n\n\"\"\"\nhttps://codeforces.com/contest/1364/problem/C\n\nIdea:\n- whenever MEX increases it means that number was added\n- when MEX increases by more than 1 it means the numbers\n  in between were previously added\n- create \"slots\" for numbers we do not know, then fill later\n  with n+1 or the  numbers that we find later which should\n  have come before\n\"\"\"\n\ndef main():\n    n = int(input())\n    mex = [int(x) for x in input().split()]\n    arr = [n+1] * n\n    prev_mex = 0\n    slots = []\n    for i in range(n):\n        if mex[i] > prev_mex:\n            arr[i] = prev_mex\n            nums_to_add = range(prev_mex+1,mex[i])\n            for num in nums_to_add:\n                if len(slots) == 0:\n                    print(-1)\n                    return\n                slot = slots.pop()\n                arr[slot] = num\n        else:\n            slots.append(i)\n        prev_mex = mex[i]\n\n    # print(arr)\n    print(\" \".join(str(x) for x in arr))\n\nif __name__ == \"__main__\":\n    main()\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nfrom collections import deque\nn=int(stdin.readline())\na=list(map(int,stdin.readline().strip().split()))\nc=set(a)\nd=deque()\nfor i in range(n+1):\n    if i not in c:\n        d.append(i)\nb=[]\nfor i in range(n):\n    if i!=0:\n        if a[i-1]<a[i]:\n            b.append(a[i-1])\n        else:\n            b.append(d.popleft())\n    else:\n        b.append(d.popleft())\nprint(*b)"
        },
        {
            "language": 3,
            "solution": "input()\nnums = list(map(int, input().split()))\n\nnums_set = set(nums)\ncomplement = (x for x in range(2 * len(nums)) if x not in nums_set)\n\nb = []\nfor i, a in enumerate(nums):\n    if a > i + 1:\n        print(-1)\n        exit()\n    if i and a != nums[i - 1]:\n        b.append(nums[i - 1])\n    else:\n        b.append(next(complement))\n\nprint(*b)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(j) for j in input().split()]\nmx = max(l)+1\n# ori_mx = \npre = [\"#\" for i in range(n+1)]\nc = [False for i in range(n+1)]\nfor i in range(n-1):\n    if l[i]!=l[i+1]:\n        pre[i+1] = l[i]\n        c[l[i]]=True\npre[n] = l[n-1]\nc[l[n-1]]=True\ns = []\nfor i in range(n+1):\n    if not c[i]:\n        s.append(i)\nj = 0\nfor i in range(n):\n    if pre[i]==\"#\":\n        pre[i] = s[j]\n        j+=1\nprint(\" \".join(map(str, pre[:-1])))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nlong long power_mod(long long x, long long y, long long m) {\n  long long arr = 1;\n  x %= m;\n  while (y) {\n    if (y & 1) {\n      arr = (arr * x) % m;\n    }\n    y >>= 1;\n    x = (x * x) % m;\n  }\n  return arr;\n}\nlong long power(long long x, long long y) {\n  long long arr = 1;\n  while (y) {\n    if (y & 1) {\n      arr *= x;\n    }\n    y >>= 1;\n    x = x * x;\n  }\n  return arr;\n}\nlong long mod_inv(long long x, long long m) { return power_mod(x, m - 2, m); }\nint randomGenerator(int limit) {\n  random_device rd;\n  mt19937 gen(rd());\n  uniform_int_distribution<> dis(1, limit);\n  return dis(gen);\n}\nstruct custom_hash {\n  static uint64_t splitmix64(uint64_t x) {\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM =\n        chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\nbool comp(const pair<long long, pair<long long, long long>> &a,\n          const pair<long long, pair<long long, long long>> &b) {\n  if (a.first == b.first) {\n    return (a.second < b.second);\n  }\n  return (a.first < b.first);\n}\nstruct hash_pair {\n  template <class T1, class T2>\n  size_t operator()(const pair<T1, T2> &p) const {\n    auto hash1 = hash<T1>{}(p.first);\n    auto hash2 = hash<T2>{}(p.second);\n    return hash1 ^ hash2;\n  }\n};\nbool isPalindrome(string s) {\n  bool flag = true;\n  for (int i = 0; i < s.length() / 2; i++) {\n    if (s[i] != s[s.length() - i - 1]) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\nbool isPerfectSquare(long long n) {\n  long double val = sqrt(n);\n  return (val - floor(val) == 0);\n}\nbool isPrime(long long n) {\n  if (n < 2) {\n    return false;\n  }\n  for (long long i = 2; i * i <= n; i++) {\n    if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nlong long NCR(long long n, long long k) {\n  long long res = 1;\n  if (k > n - k) {\n    k = n - k;\n  }\n  for (int i = 0; i < (k); i++) {\n    res *= (n - i);\n    res /= (i + 1);\n  }\n  return res;\n}\nlong long cntBits(long long n) {\n  long long cnt = 0;\n  for (long long i = 0; i < 64; i++) {\n    if ((1ll << i) & n) {\n      cnt++;\n    }\n  }\n  return cnt;\n}\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> a(n), ans(n, -1), hash(1000001, 0);\n  int flag = 0;\n  for (int i = 0; i < (n); i++) {\n    cin >> a[i];\n    if (a[i] > i + 1) {\n      flag = 1;\n    }\n    if (i > 0 and (a[i] != a[i - 1])) {\n      ans[i] = a[i - 1];\n      hash[a[i - 1]] = 1;\n    }\n  }\n  if (flag) {\n    cout << -1 << \"\\n\";\n    return;\n  }\n  hash[a[n - 1]] = 1;\n  long long cnt = 0;\n  for (int i = 0; i < (n); i++) {\n    if (ans[i] == -1) {\n      while (hash[cnt] != 0) {\n        cnt++;\n      }\n      ans[i] = cnt;\n      hash[cnt] = 1;\n      cnt++;\n    }\n  }\n  for (int i = 0; i < (n); i++) {\n    cout << ans[i] << \" \";\n  }\n  cout << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long q, n, a[100004], mn, mx, inx, inn, sz, c[100004];\nmap<long long, long long> mp;\nint main() {\n  cin >> n;\n  for (long long i = 1; i <= n; i++) {\n    cin >> a[i];\n    mp[a[i]] = 1;\n  }\n  mn = 1;\n  for (long long i = 1; i <= n; i++) {\n    if (a[i] != a[i - 1]) {\n      c[i] = a[i - 1];\n    } else {\n      while (mp[mn] == 1) {\n        mn++;\n      }\n      c[i] = mn++;\n    }\n  }\n  for (long long i = 1; i <= n; i++) {\n    cout << c[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int a[]=new int[n];\n        int b[]=new int[n];\n        Arrays.fill(b,-1);\n        int f=1;\n        HashSet<Integer> h=new HashSet<>();\n        for(int i=0;i<n;i++)\n        {\n            a[i]=sc.nextInt();\n            \n            if(a[i]>i+1)\n            {\n                f=-1;\n            }\n            h.add(a[i]);\n        }\n        if(f==-1)\n        System.out.println(-1);\n        else\n        {\n            boolean vis[]=new boolean[100005];\n            for(int i=1;i<n;i++)\n            {\n                if(a[i]!=a[i-1])\n                {\n                    b[i]=a[i-1];\n                    vis[b[i]]=true;\n                }\n            }\n            vis[a[n-1]]=true;\n            int p=0;\n            for(int i=0;i<n;i++)\n            {\n                while(vis[p])\n                p++;\n                \n                if(b[i]==-1)\n                {\n                    b[i]=p;\n                    vis[p]=true;\n                    p++;\n                }\n                System.out.print(b[i]+\" \");\n            }\n            \n            \n            \n        }\n        \n        //System.out.println(\"XXXXXXXX\");\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "\nfrom __future__ import print_function\nimport sys\nif sys.subversion[0] == \"PyPy\":\n    import io, atexit\n\n    sys.stdout = io.BytesIO()\n    atexit.register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n\n    sys.stdin = io.BytesIO(sys.stdin.read())\n    input = lambda: sys.stdin.readline().rstrip()\nRS = raw_input\nRA = lambda x=int: map(x, RS().split())\nRN = lambda x=int: x(RS())\n\n\ndef solve():\n    if a != sorted(a):\n        print(-1)\n        return\n    b = [-1]*n\n    random_stack = [10**6]*(n+1)\n    for i in reversed(range(1, n)):\n        if a[i-1] == a[i]:\n            b[i] = random_stack.pop()\n        else:\n            random_stack.extend(reversed(range(a[i-1], a[i])))\n            b[i] = random_stack.pop()\n    if a[0] == 0:\n        b[0] = random_stack.pop()\n    else:\n        random_stack.append(0)\n        b[0] = random_stack.pop()\n    print(*b)\n\n\n\n    return\n\n\n\n\n\nn = RN()\na = RA()\nsolve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5, mod = 1e9 + 7;\nint test = 1;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  ;\n  int n;\n  cin >> n;\n  int a[n + 1];\n  int mex = 0, f = 1;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] > (i + 1)) f = 0;\n  }\n  int b[n + 1];\n  if (f == 0) {\n    cout << -1 << endl;\n    exit(0);\n  }\n  map<int, int> m;\n  int d = n;\n  for (int i = n - 1; i >= 0; i--) {\n    m[a[i]]++;\n    if (a[i - 1] != a[i] && i != 0) {\n      b[i] = a[i - 1];\n      m[a[i - 1]]++;\n    } else {\n      while (m[d] > 0) d--;\n      b[i] = d;\n      d--;\n    }\n  }\n  for (int i = 0; i < n; i++) cout << b[i] << \" \";\n  cout << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\ninline void out(T t) {\n  cout << t << \"\\n\";\n}\ntemplate <class T, class... Ts>\ninline void out(T t, Ts... ts) {\n  cout << t << \" \";\n  out(ts...);\n}\ntemplate <class T>\ninline bool CHMIN(T& a, T b) {\n  if (a > b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T>\ninline bool CHMAX(T& a, T b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\nconstexpr long long INF = 1e18;\nvoid solve() {\n  long long N;\n  cin >> N;\n  vector<long long> a(N);\n  vector<long long> cnt(1000100);\n  for (long long i = 0; i < (long long)N; ++i) {\n    cin >> a[i];\n    ++cnt[a[i]];\n  }\n  vector<long long> cand;\n  for (long long i = 0; i < (long long)1000100; ++i)\n    if (!cnt[i]) cand.emplace_back(i);\n  long long candIdx = 0;\n  vector<long long> mex(1000100);\n  vector<long long> ans(N);\n  long long now = 0;\n  for (long long i = 0; i < (long long)N; ++i) {\n    if (a[i] > now) {\n      mex[now] = 1;\n      ans[i] = now;\n      while (mex[now] == 1) ++now;\n    } else {\n      while (mex[cand[candIdx]] == 1) ++candIdx;\n      mex[cand[candIdx]] = 1;\n      ans[i] = cand[candIdx];\n      ++candIdx;\n    }\n    if (now < a[i]) {\n      out(-1);\n      return;\n    }\n  }\n  for (long long i = 0; i < (long long)ans.size(); ++i)\n    cout << ans[i] << \" \\n\"[i + 1 == ans.size()];\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  long long Q = 1;\n  while (Q--) solve();\n}\n"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int,raw_input().split())\nflag=0\nl=[0 for i in range(n+2)]\ntr=0\nfor i in a:\n    l[i]=1\nnk=[]\nfor i in range(n+2):\n    if l[i]==0:\n        nk.append(i)\nmx=10**5+1\nb=[]\ncc=0\nfor i in range(n):\n    if i==0:\n        b.append(nk[cc])\n        cc+=1\n\n    elif a[i]!=a[i-1]:\n        b.append(a[i-1])\n    else:\n        b.append(nk[cc])\n        cc+=1\nfor i in b:\n    print i,\nprint\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint a[100007], b[100007], vis[100007];\nvoid init() {\n  for (int i = 0; i <= n; i++) {\n    vis[i] = 0;\n    b[i] = -1;\n  }\n}\nint main() {\n  cin >> n;\n  int ok = 1;\n  init();\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (a[i] > i) ok = 0;\n  }\n  if (ok == 0)\n    printf(\"-1\\n\");\n  else {\n    vis[a[n]] = 1;\n    for (int i = 1; i <= n; i++) {\n      if (a[i] != a[i - 1]) {\n        b[i] = a[i - 1];\n        vis[b[i]] = 1;\n      }\n    }\n    int l = 0;\n    for (int i = 1; i <= n; i++) {\n      if (b[i] == -1) {\n        while (vis[l]) {\n          l++;\n        }\n        vis[l] = 1;\n        b[i] = l;\n      }\n    }\n    for (int i = 1; i <= n; i++) {\n      printf(\"%d \", b[i]);\n    }\n    puts(\"\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n;\n  cin >> n;\n  vector<long long int> vec(n), copy(n);\n  unordered_set<long long int> mp;\n  for (long long int i = 0; i < n; i++) {\n    cin >> vec[i];\n    copy[i] = -1;\n  }\n  int flag = 0;\n  for (long long int i = 1; i < n; i++) {\n    if (vec[i] != vec[i - 1]) {\n      copy[i] = vec[i - 1];\n      mp.insert(vec[i - 1]);\n    }\n    if (vec[i] - i >= 2) {\n      flag = 1;\n      break;\n    }\n  }\n  mp.insert(vec[n - 1]);\n  if (flag == 1 || vec[0] >= 2) {\n    cout << -1;\n    cout << \"\\n\";\n    return 0;\n  }\n  int start = 0;\n  for (int i = 0; i < n; i++) {\n    if (copy[i] == -1) {\n      while (mp.find(start) != mp.end()) {\n        start++;\n      }\n      copy[i] = start;\n    }\n    mp.insert(start);\n    cout << copy[i] << \" \";\n  }\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.*;\nimport java.util.*;\n\npublic class c {\n\n    static BufferedReader br;\n    static long mod = 1000000000 + 7;\n    static HashSet<Integer> p = new HashSet<>();\n     static boolean debug =true;\n           //  Arrays.sort(time  , (a1,a2) -> (a1[0]-a2[0])); 2d array sort lamda\n    public static void main(String[] args) throws Exception {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        int tc = 1;\n        int  n=cinI();\n\n        int[] ar=readArray(n,0,0);\n        int max=0;\n\n        for(int i=0;i<n;i++){\n        \tmax=max(ar[i],max);\n        }\n        boolean[] absent = new boolean[max+2];\n        for(int i=0;i<n;i++){\n        \tabsent[ar[i]]=true;\n        }\n        ArrayList<Integer> ab = new ArrayList<>();\n\n        for(int i=0;i<absent.length;i++){\n                if(absent[i]==false){\n                \tab.add(i);\n                }\n        }\n        int[] ans =new int[n];\n\n        ans[0]=ab.get(0);\n\n        int j=1;\n        if(ar[0]!=0 && ar[0]!=1){\n               System.out.println(\"-1\");\n               return ;\n //           boolean ans=true;\n        }\n        boolean an=true;\n        for(int i=1;i<n;i++){\n        \tif(ar[i]>(i+1)){\n        \t\tan=false;\n        \t\tbreak;\n        \t}\n             if(ar[i]!=ar[i-1]){\n             \tans[i]=ar[i-1];\n             }\n             else{\n             \tif(j<ab.size()){\n             \t\tans[i]=ab.get(j);\n             \t\tj+=1;\n             \t}\n             \telse{\n             \t\tans[i]=100000+5;\n             \t}\n             }\n        }\n        if(an==false){\n        \tSystem.out.println(-1);\n        \treturn ;\n        }\n        PrintWriter pr = new PrintWriter(System.out);\n        for(int i=0;i<n;i++){\n        \tpr.print(ans[i]+\" \");\n        }\n        pr.close();\n    }\n\n    public static <E> void print(String var ,E e){\n      if(debug==true){\n      System.out.println(var +\" \"+e);\n      }\n    }\n     private static long[]  sort(long[] e){\n     ArrayList<Long> x=new ArrayList<>();\n     for(long c:e){\n       x.add(c);\n     }\n     Collections.sort(x);\n     long[] y = new long[e.length];\n     for(int i=0;i<x.size();i++){\n       y[i]=x.get(i);\n     }\n     return y;\n     }\n    public static void printDp(long[][] dp) {\n\n        int n = dp.length;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < dp[0].length; j++) {\n                System.out.print(dp[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    \n\n\n  \n\n    private static long gcd(long a, long b) {\n        if (a == 0)\n            return b;\n        if (b == 0)\n            return a;\n\n        // base case\n        if (a == b)\n            return a;\n\n        // a is greater\n        if (a > b)\n            return gcd(a % b, b);\n        return gcd(a, b % a);\n    }\n\n\n    public static long min(long a, long b) {\n        return Math.min(a, b);\n    }\n\n    public static int min(int a, int b) {\n        return Math.min(a, b);\n    }\n\n\n    public static void sieve() {\n        int[] pf = new int[100000000 + 1];\n        //0 prime //1 not prime\n        pf[0] = 1;\n        pf[1] = 1;\n        for (int j = 2; j <= 10000; j++) {\n\n            if (pf[j] == 0) {\n                p.add(j);\n                for (int k = j * j; k < pf.length; k += j) {\n                    pf[k] = 1;\n                }\n            }\n        }\n\n    }\n\n\n    public static int[] readArray(int n, int x, int z) throws Exception {\n        int[] arr = new int[n];\n        String[] ar = cinA();\n        for (int i = x; i < n + x; i++) {\n            arr[i] = getI(ar[i - x]);\n        }\n        return arr;\n    }\n\n    public static long[] readArray(int n, int x) throws Exception {\n        long[] arr = new long[n];\n        String[] ar = cinA();\n        for (int i = x; i < n + x; i++) {\n            arr[i] = getL(ar[i - x]);\n        }\n        return arr;\n    }\n\n    public static void arrinit(String[] a, long[] b) throws Exception {\n        for (int i = 0; i < a.length; i++) {\n            b[i] = Long.parseLong(a[i]);\n        }\n    }\n\n    public static HashSet<Integer>[] Graph(int n, int edge, int directed) throws Exception {\n        HashSet<Integer>[] tree = new HashSet[n];\n\n        for (int j = 0; j < edge; j++) {\n\n            String[] uv = cinA();\n            int u = getI(uv[0]);\n            int v = getI(uv[1]);\n            if (directed == 0) {\n\n                tree[v].add(u);\n            }\n            tree[u].add(v);\n        }\n        return tree;\n    }\n\n    public static void arrinit(String[] a, int[] b) throws Exception {\n        for (int i = 0; i < a.length; i++) {\n            b[i] = Integer.parseInt(a[i]);\n        }\n    }\n\n\n    static double findRoots(int a, int b, int c) {\n        // If a is 0, then equation is not\n        //quadratic, but linear\n\n\n        int d = b * b - 4 * a * c;\n        double sqrt_val = Math.sqrt(Math.abs(d));\n\n\n        // System.out.println(\"Roots are real and different \\n\");\n\n        return Math.max((double) (-b + sqrt_val) / (2 * a),\n                (double) (-b - sqrt_val) / (2 * a));\n\n\n    }\n\n    public static String cin() throws Exception {\n        return br.readLine();\n    }\n\n    public static String[] cinA() throws Exception {\n        return br.readLine().split(\" \");\n    }\n\n    public static String[] cinA(int x) throws Exception {\n        return br.readLine().split(\"\");\n    }\n\n    public static String ToString(Long x) {\n        return Long.toBinaryString(x);\n    }\n\n    public static void cout(String s) {\n        System.out.println(s);\n    }\n\n    public static Integer cinI() throws Exception {\n        return Integer.parseInt(br.readLine());\n    }\n\n    public static int getI(String s) throws Exception {\n        return Integer.parseInt(s);\n    }\n\n    public static long getL(String s) throws Exception {\n        return Long.parseLong(s);\n    }\n\n    public static long max(long a, long b) {\n        return Math.max(a, b);\n    }\n\n    public static int max(int a, int b) {\n        return Math.max(a, b);\n    }\n\n    public static void coutI(int x) {\n        System.out.println(String.valueOf(x));\n    }\n\n    public static void coutI(long x) {\n        System.out.println(String.valueOf(x));\n    }\n\n    public static Long cinL() throws Exception {\n        return Long.parseLong(br.readLine());\n    }\n\n    public static void arrInit(String[] arr, int[] arr1) throws Exception {\n        for (int i = 0; i < arr.length; i++) {\n            arr1[i] = getI(arr[i]);\n        }\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na=list(map(int,input().split()))\n \nf=1\nfor i in range(n):\n    if  a[i]>i+1:\n        f=0\n        break\nif f==0:\n    print(-1)\nelse:\n    ans = [-1]*(n+1)\n    ind = [-1]*(n+1)\n    for i in range(n):\n        ind[a[i]]=i\n    done=[0]*(n+1)\n    for i in range(len(ind)):\n        if ind[i]!=-1:\n            ans[ind[i]+1]=i\n            done[i]=1\n    i=0\n    j=0\n    while(i<n):\n        if ans[i]==-1:\n            while(j<n+1):\n                if done[j]==0:\n                    ans[i]=j\n                    done[j]=1\n                    break\n                else:j+=1\n        i+=1\n    print(*ans[0:n])\n                    \n            \n    \n    \n    \n\n    \n                \n    \n    \n        "
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class EhabAndPrefixMEXs {\n    public static void main(String[] args) throws IOException {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n    static class TaskA {\n        long mod = (long)(998244353);\n        long fact[];\n        int depth[];\n        int parentTable[][];\n        int degree[];\n        ArrayList<Integer> leaves;\n        public void solve(int testNumber, InputReader in, PrintWriter out) throws IOException {\n            while(testNumber-->0){\n                int n = in.nextInt();\n                int a[] = new int[n+1];\n                for(int i=1;i<=n;i++)\n                    a[i] = in.nextInt();\n                // print1d(a , out);\n                TreeSet<Integer> s = new TreeSet<>();\n                sortedArrayToBST(s , 0 , n+1);\n                // out.println(s);\n                boolean found = true;\n                int ans[] = new int[n+1];\n                Arrays.fill(ans , -1);\n                for(int i=0;i<n;i++){\n                    if(a[i]!=a[i+1]){\n                        // out.println(i + \" \" + a[i]);\n                        ans[i+1] = a[i];\n                        if(s.contains(a[i])){\n                            s.remove(a[i]);\n                        }\n                        else{\n                            found = false;\n                            break;\n                        }\n                    }\n                }\n                for(int i=1;i<=n;i++){\n                    if(s.contains(a[i]))\n                        s.remove(a[i]);\n                }\n                for(int i=1;i<=n;i++){\n                    if(ans[i] != -1)\n                        continue;\n                    if(s.size()>=1){\n                        int x = s.pollFirst();\n                        if(x!=a[i])\n                            ans[i] = x;\n                        else{\n                            if(s.size()>=1){\n                                int y = s.pollFirst();\n                                ans[i] = y;\n                                s.add(x);\n                            }\n                            else{\n                                found = false;\n                                break;\n                            }\n                        }\n                    }\n                    else{\n                        found = false;\n                        break;\n                    }\n                }\n                if(found){\n                    for(int i=1;i<=n;i++)\n                        out.print(ans[i] + \" \");\n                    out.println();\n                }\n                else\n                    out.println(-1);\n            }\n        }\n\n        public int distance(ArrayList<ArrayList<Integer>> a , int u , int v){\n            return depth[u]+depth[v] - 2*depth[lca(a , u , v)];\n        }\n\n        public void dfs(ArrayList<ArrayList<Integer>> a , int index , int parent){\n            parentTable[index][0] = parent;\n            depth[index] = depth[parent]+1;\n            \n            if(a.get(index).size()==1)\n                leaves.add(index);\n\n            for(int i=1;i<parentTable[index].length;i++)\n                parentTable[index][i] = parentTable[parentTable[index][i-1]][i-1];\n            for(int i=0;i<a.get(index).size();i++){\n                if(a.get(index).get(i)==parent)\n                    continue;\n                dfs(a , a.get(index).get(i) , index);\n            }\n        }\n\n        public int lca(ArrayList<ArrayList<Integer>> a , int u , int v){\n            if(depth[v]<depth[u]){\n                int x = u;\n                u = v;\n                v = x;\n            }\n            int diff = depth[v] - depth[u];\n            for(int i=0;i<parentTable[v].length;i++){\n                // checking whether the ith bit is set in the diff variable\n                if(((diff>>i)&1) == 1)\n                    v = parentTable[v][i];\n            }\n            if(v == u)\n                return v;\n            for(int i=parentTable[v].length-1;i>=0;i--){\n                if(parentTable[u][i] != parentTable[v][i]){\n                    v = parentTable[v][i];\n                    u = parentTable[u][i];\n                }\n            }\n            return parentTable[u][0];\n        }\n\n        // for the min max problems\n        public void build(int lookup[][] , int arr[], int n) { \n            for (int i = 0; i < n; i++) \n                lookup[i][0] = arr[i]; \n            for (int j = 1; (1 << j) <= n; j++) { \n                for (int i = 0; (i + (1 << j) - 1) < n; i++) { \n                    if (lookup[i][j - 1] > lookup[i + (1 << (j - 1))][j - 1]) \n                        lookup[i][j] = lookup[i][j - 1]; \n                    else\n                        lookup[i][j] = lookup[i + (1 << (j - 1))][j - 1]; \n                } \n            } \n        }\n        public int query(int lookup[][] , int L, int R) { \n            int j = (int)(Math.log(R - L + 1)/Math.log(2)); \n            if (lookup[L][j] >= lookup[R - (1 << j) + 1][j]) \n                return lookup[L][j]; \n            else\n                return lookup[R - (1 << j) + 1][j]; \n        }\n\n        // for printing purposes\n        public void print1d(int a[] , PrintWriter out){\n            for(int i=0;i<a.length;i++)\n                out.print(a[i] + \" \");\n            out.println();\n        }\n        public void print2d(int a[][] , PrintWriter out){\n            for(int i=0;i<a.length;i++){\n                for(int j=0;j<a[i].length;j++)\n                    out.print(a[i][j] + \" \");\n                out.println();\n            }\n            out.println();\n        }\n        public void sieve(int a[]){\n            a[0] = a[1] = 1;\n            int i;\n            for(i=2;i*i<=a.length;i++){\n                if(a[i] != 0)\n                    continue;\n                a[i] = i;\n                for(int k = (i)*(i);k<a.length;k+=i){\n                    if(a[k] != 0)\n                        continue;\n                    a[k] = i;\n                }\n            }\n        }\n        public int [][] matrixExpo(int c[][] , int n){\n            int a[][] = new int[c.length][c[0].length];\n            int b[][] = new int[a.length][a[0].length];\n            for(int i=0;i<c.length;i++)\n                for(int j=0;j<c[0].length;j++)\n                    a[i][j] = c[i][j];\n            for(int i=0;i<a.length;i++)\n                b[i][i] = 1;\n            while(n!=1){\n                if(n%2 == 1){\n                    b = matrixMultiply(a , a);\n                    n--;\n                }\n                a = matrixMultiply(a , a);\n                n/=2;\n            }\n            return matrixMultiply(a , b);\n        }\n        public int [][] matrixMultiply(int a[][] , int b[][]){\n            int r1 = a.length;\n            int c1 = a[0].length;\n            int c2 = b[0].length;\n            int c[][] = new int[r1][c2];\n            for(int i=0;i<r1;i++){\n                for(int j=0;j<c2;j++){\n                    for(int k=0;k<c1;k++)\n                        c[i][j] += a[i][k]*b[k][j];\n                }\n            }\n            return c;\n        }\n        public long nCrPFermet(int n , int r , long p){\n            if(r==0)\n                return 1l;\n            // long fact[] = new long[n+1];\n            // fact[0] = 1;\n            // for(int i=1;i<=n;i++)\n            //     fact[i] = (i*fact[i-1])%p;\n            long modInverseR = pow(fact[r] , p-2 , p);\n            long modInverseNR = pow(fact[n-r] , p-2 , p);\n            long w = (((fact[n]*modInverseR)%p)*modInverseNR)%p;\n            return w;\n        }\n        public long pow(long a, long b, long m) {\n            a %= m;\n            long res = 1;\n            while (b > 0) {\n                long x = b&1;\n                if (x == 1)\n                    res = res * a % m;\n                a = a * a % m;\n                b >>= 1;\n            }\n            return res;\n        }\n        public long pow(long a, long b) {\n            long res = 1;\n            while (b > 0) {\n                long x = b&1;\n                if (x == 1)\n                    res = res * a;\n                a = a * a;\n                b >>= 1;\n            }\n            return res;\n        }\n        public void swap(int a[] , int p1 , int p2){\n            int x = a[p1];\n            a[p1] = a[p2];\n            a[p2] = x;\n        }\n        public void sortedArrayToBST(TreeSet<Integer> a , int start, int end) { \n            if (start > end) {\n                return;\n            }\n            int mid = (start + end) / 2;\n            a.add(mid);\n            sortedArrayToBST(a, start, mid - 1);\n            sortedArrayToBST(a, mid + 1, end); \n        }\n        class Combine{\n            int value;\n            int delete;\n            Combine(int val , int delete){\n                this.value = val;\n                this.delete = delete;\n            }\n        }\n        class Sort2 implements Comparator<Combine>{\n            public int compare(Combine a , Combine b){\n                if(a.value > b.value)\n                    return 1;\n                else if(a.value == b.value && a.delete>b.delete)\n                    return 1;\n                else if(a.value == b.value && a.delete == b.delete)\n                    return 0;\n                return -1;\n            }\n        }\n        public int lowerLastBound(ArrayList<Integer> a , int x){\n            int l = 0;\n            int r = a.size()-1;\n            if(a.get(l)>=x)\n                return -1;\n            if(a.get(r)<x)\n                return r;\n            int mid = -1;\n            while(l<=r){\n                mid = (l+r)/2;\n                if(a.get(mid) == x && a.get(mid-1)<x)\n                    return mid-1;\n                else if(a.get(mid)>=x)\n                    r = mid-1;\n                else if(a.get(mid)<x && a.get(mid+1)>=x)\n                    return mid;\n                else if(a.get(mid)<x && a.get(mid+1)<x)\n                    l = mid+1;\n            }\n            return mid;\n        }\n        public int upperFirstBound(ArrayList<Integer> a , Integer x){\n            int l = 0;\n            int r = a.size()-1;\n            if(a.get(l)>x)\n                return l;\n            if(a.get(r)<=x)\n                return r+1;\n            int mid = -1;\n            while(l<=r){\n                mid = (l+r)/2;\n                if(a.get(mid) == x && a.get(mid+1)>x)\n                    return mid+1;\n                else if(a.get(mid)<=x)\n                    l = mid+1;\n                else if(a.get(mid)>x && a.get(mid-1)<=x)\n                    return mid;\n                else if(a.get(mid)>x && a.get(mid-1)>x)\n                    r = mid-1;\n            }\n            return mid;\n        }\n        public int lowerLastBound(int a[] , int x){\n            int l = 0;\n            int r = a.length-1;\n            if(a[l]>=x)\n                return -1;\n            if(a[r]<x)\n                return r;\n            int mid = -1;\n            while(l<=r){\n                mid = (l+r)/2;\n                if(a[mid] == x && a[mid-1]<x)\n                    return mid-1;\n                else if(a[mid]>=x)\n                    r = mid-1;\n                else if(a[mid]<x && a[mid+1]>=x)\n                    return mid;\n                else if(a[mid]<x && a[mid+1]<x)\n                    l = mid+1;\n            }\n            return mid;\n        }\n        public int upperFirstBound(long a[] , long x){\n            int l = 0;\n            int r = a.length-1;\n            if(a[l]>x)\n                return l;\n            if(a[r]<=x)\n                return r+1;\n            int mid = -1;\n            while(l<=r){\n                mid = (l+r)/2;\n                if(a[mid] == x && a[mid+1]>x)\n                    return mid+1;\n                else if(a[mid]<=x)\n                    l = mid+1;\n                else if(a[mid]>x && a[mid-1]<=x)\n                    return mid;\n                else if(a[mid]>x && a[mid-1]>x)\n                    r = mid-1;\n            }\n            return mid;\n        }\n        public long log(float number , int base){\n            return (long) Math.ceil((Math.log(number) / Math.log(base)) + 1e-9);\n        }\n        public long gcd(long a , long b){\n            if(a<b){\n                long c = b;\n                b = a;\n                a = c;\n            }\n            while(b!=0){\n                long c = a;\n                a = b;\n                b = c%a;\n            }\n            return a;\n        }\n        public long[] gcdEx(long p, long q) {\n            if (q == 0)\n                return new long[] { p, 1, 0 };\n            long[] vals = gcdEx(q, p % q);\n            long d = vals[0];\n            long a = vals[2];\n            long b = vals[1] - (p / q) * vals[2];\n            // 0->gcd 1->xValue 2->yValue\n            return new long[] { d, a, b };\n        }\n        public void sievePhi(int a[]){\n            a[0] = 0;\n            a[1] = 1;\n            for(int i=2;i<a.length;i++)\n                a[i] = i-1;\n            for(int i=2;i<a.length;i++)\n                for(int j = 2*i;j<a.length;j+=i)\n                    a[j] -= a[i];\n        }\n        public void lcmSum(long a[]){\n            int sievePhi[] = new int[(int)1e6 + 1];\n            sievePhi(sievePhi);\n            a[0] = 0;\n            for(int i=1;i<a.length;i++)\n                for(int j = i;j<a.length;j+=i)\n                    a[j] += (long)i*sievePhi[i];\n        }\n        static class AVLTree{\n            Node root;\n            public AVLTree(){\n                this.root = null;\n            }\n            public int height(Node n){\n                return (n == null ? 0 : n.height);\n            }\n            public int getBalance(Node n){\n                return (n == null ? 0 : height(n.left) - height(n.right));\n            }\n            public Node rotateRight(Node a){\n                Node b = a.left;\n                Node br = b.right;\n\n                a.lSum -= b.lSum;\n                a.lCount -= b.lCount;\n                \n                b.rSum += a.rSum;\n                b.rCount += a.rCount;\n                \n                b.right = a;\n                a.left = br;\n                \n                a.height = 1 + Math.max(height(a.left) , height(a.right));\n                b.height = 1 + Math.max(height(b.left) , height(b.right));\n                return b;\n            }\n            public Node rotateLeft(Node a){\n                Node b = a.right;\n                Node bl = b.left;\n                \n                a.rSum -= b.rSum;\n                a.rCount -= b.rCount;\n                \n                b.lSum += a.lSum;\n                b.lCount += a.lCount;\n                \n                b.left = a;\n                a.right = bl;\n                \n                a.height = 1 + Math.max(height(a.left) , height(a.right));\n                b.height = 1 + Math.max(height(b.left) , height(b.right));\n                return b;\n            }\n            public Node insert(Node root , long value){\n                if(root == null){\n                    return new Node(value);\n                }\n                if(value<=root.value){\n                    root.lCount++;\n                    root.lSum += value;\n                    root.left =  insert(root.left , value);\n                }\n                if(value>root.value){\n                    root.rCount++;\n                    root.rSum += value;\n                    root.right = insert(root.right , value);\n                }\n                // updating the height of the root\n                root.height = 1 + Math.max(height(root.left) , height(root.right));\n                int balance = getBalance(root);\n\n                //ll\n                if(balance>1 && value<=root.left.value)\n                    return rotateRight(root);\n                //rr\n                if(balance<-1 && value>root.right.value)\n                    return rotateLeft(root);\n                //lr\n                if(balance>1 && value>root.left.value){\n                    root.left = rotateLeft(root.left);\n                    return rotateRight(root);\n                }\n                //rl\n                if(balance<-1 && value<=root.right.value){\n                    root.right = rotateRight(root.right);\n                    return rotateLeft(root);\n                }\n                return root;\n            }\n            public void insertElement(long value){\n                this.root = insert(root , value);\n            }\n            public int getElementLessThanK(long k){\n                int count = 0;\n                Node temp = root;\n                while(temp!=null){\n                    if(temp.value == k){\n                        if(temp.left == null || temp.left.value<k){\n                            count += temp.lCount;\n                            return count-1;\n                        }\n                        else\n                            temp = temp.left;\n                    }\n                    else if(temp.value>k){\n                        temp = temp.left;\n                    }\n                    else{\n                        count += temp.lCount;\n                        temp = temp.right;\n                    }\n                }\n                return count;\n            }\n            public void inorder(Node root , PrintWriter out){\n                Node temp = root;\n                if(temp!=null){\n                    inorder(temp.left , out);\n                    out.println(temp.value + \" \" + temp.lCount + \" \" + temp.rCount);\n                    inorder(temp.right , out);\n                }\n            }\n        }\n        static class Node{\n            long value;\n            long lCount , rCount;\n            long lSum , rSum;\n            Node left , right;\n            int height;\n            public Node(long value){\n                this.value = value;\n                left = null;\n                right = null;\n                lCount = 1;\n                rCount = 1;\n                lSum = value;\n                rSum = value;\n                height = 1;\n            }\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from heapq import *\n\nn,*a = map(int, open(0).read().split())\nb = [-1] * n\nunused = set(range(2*n+1))\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        b[i] = a[i-1]\n        unused.remove(a[i-1])\nunused.remove(a[-1])\nhq = list(unused)\nheapify(hq)\nfor i in range(n):\n    if b[i] == -1:\n        b[i] = heappop(hq)\nprint(*b)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class main{\n    static Read input  = new Read();\n\n    public static void main(String args[]){\n        int n = input.nextInt(), all[] = new int[n], ans[] = new int[n];\n        boolean used[] = new boolean[n+5];\n        for (int i=0;i<n;i++) {\n            all[i] = input.nextInt();\n            used[all[i]] = true;\n        }\n\n        int cur = 1-all[0], low = all[0];\n\n        for (int i=0;i<n;i++){\n            while (cur<n+5 && used[cur]==true) cur++;\n            if (low==all[i]) {\n                ans[i] = cur;\n                cur++;\n            } else {\n                ans[i] = low;\n                low = all[i];\n            }\n        }\n\n        for (int i=0;i<n;i++) System.out.print(ans[i]+\" \");\n\n    }\n\n    static class Read{\n        BufferedReader br;\n        StringTokenizer st;\n        public Read(){br = new BufferedReader(new InputStreamReader(System.in));}\n        String next(){\n            while (st==null || !st.hasMoreElements()){\n                try { st = new StringTokenizer(br.readLine()); }\n                catch (IOException e) { e.printStackTrace(); }\n            }\n            return st.nextToken();\n        }\n        int nextInt(){return Integer.parseInt(next());}\n        double nextDouble(){return Double.parseDouble(next());}\n        long nextLong(){return Long.parseLong(next());}\n        String line(){\n            String ans=\"\";\n            try {ans = br.readLine(); }\n            catch(IOException e) {e.printStackTrace(); }\n            return ans;\n        }\n    }\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> in(n);\n  for (auto& it : in) cin >> it;\n  set<int> unk;\n  int cur = 0;\n  vector<int> res(n, -1);\n  for (int i = 0; i < n; i++) {\n    unk.insert(i);\n    while (cur < in[i]) {\n      if (unk.size() == 0) {\n        cout << -1 << endl;\n        return;\n      }\n      res[*unk.rbegin()] = cur;\n      cur++;\n      unk.erase(*unk.rbegin());\n    }\n  }\n  set<int> all;\n  for (int i = 0; i <= n; i++) {\n    all.insert(i);\n  }\n  for (int j = 0; j < n; j++) {\n    int i = res[j];\n    all.erase(i);\n    if (all.empty()) continue;\n    if (*all.begin() != in[j]) {\n      cout << -1;\n      return;\n    }\n  }\n  for (int i : res) {\n    if (i == -1) i = n + 1;\n    cout << i << \" \";\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long i, j, k, l, m, n, mx = 0ll;\n  cin >> n;\n  long long ara[n + 1];\n  vector<long long> vec;\n  long long kara_ache[n + 1], kader_nilam[n + 1];\n  memset(kara_ache, 0, sizeof(kara_ache));\n  memset(kader_nilam, 0, sizeof(kader_nilam));\n  for (i = 1; i <= n; i++) {\n    cin >> ara[i];\n    mx = max(mx, ara[i]);\n    kara_ache[ara[i]] = 1ll;\n  }\n  k = mx + 1, l = 0ll;\n  long long cur_mex = 0ll, cnt = 0ll;\n  for (i = 1; i <= n; i++) {\n    while (kader_nilam[cur_mex] == 1ll) cur_mex++;\n    if (cur_mex == ara[i]) {\n      cnt = 0ll;\n      for (j = l; j < mx; j++) {\n        if (kara_ache[j] == 0 && kader_nilam[j] == 0 && j != cur_mex) {\n          vec.push_back(j);\n          kader_nilam[j] = 1ll;\n          cnt = 1ll;\n          l = j;\n          break;\n        }\n      }\n      if (cnt == 0ll) {\n        vec.push_back(k);\n        k++;\n      }\n    } else {\n      vec.push_back(cur_mex);\n      kader_nilam[cur_mex] = 1ll;\n      cur_mex++;\n    }\n  }\n  for (i = 0; i < vec.size(); i++) cout << vec[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.buffer.readline\n\nn=int(input())\na=[int(c) for c in input().split()]\nb=[-1 for i in range(n)]\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        b[i] = a[i-1]\nj=0\ns=set(a)\nfor i in range(n):\n    if b[i] == -1:\n        while j in s:\n            j+=1\n        b[i]=j\n        j+=1         \n\nprint(\" \".join([str(c) for c in b]))"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n \n \nn = int(input())\na = list(map(int, input().split()))\nans = []\nd = dict()\nfor i in range(n):\n    if a[i] > i+1:\n        print(-1)\n        exit()\n \nfor i in range(10**6 + 20):\n    d[i] = 0\nfor i in a:\n    d[i] += 1\n \nm = 10**6\nfor i in range(n):\n    if d[i] == 0:\n        m = i\n        break\nback_m = m\n \nfor i in range(n):\n    ans.append(m)\n    d[m] += 1\n    d[a[i]] -= 1\n    if d[a[i]] == 0:\n        m = a[i]\n    else:\n        m = back_m\n        for j in range(m+1, n):\n            if d[j] == 0:\n                m = j\n                break\n        back_m = m\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "#------------------------------what is this I don't know....just makes my mess faster--------------------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n\tnewlines = 0\n \n\tdef __init__(self, file):\n\t\tself._fd = file.fileno()\n\t\tself.buffer = BytesIO()\n\t\tself.writable = \"x\" in file.mode or \"r\" not in file.mode\n\t\tself.write = self.buffer.write if self.writable else None\n \n\tdef read(self):\n\t\twhile True:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tif not b:\n\t\t\t\tbreak\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines = 0\n\t\treturn self.buffer.read()\n \n\tdef readline(self):\n\t\twhile self.newlines == 0:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tself.newlines = b.count(b\"\\n\") + (not b)\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines -= 1\n\t\treturn self.buffer.readline()\n \n\tdef flush(self):\n\t\tif self.writable:\n\t\t\tos.write(self._fd, self.buffer.getvalue())\n\t\t\tself.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n\tdef __init__(self, file):\n\t\tself.buffer = FastIO(file)\n\t\tself.flush = self.buffer.flush\n\t\tself.writable = self.buffer.writable\n\t\tself.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n\t\tself.read = lambda: self.buffer.read().decode(\"ascii\")\n\t\tself.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n#----------------------------------Real game starts here--------------------------------------\n\n#_______________________________________________________________#\ndef fact(x):\n\tif x == 0:\n\t\treturn 1\n\telse:\n\t\treturn x * fact(x-1)\ndef lower_bound(li, num): #return 0 if all are greater or equal to\n\tanswer = -1 \n\tstart = 0\n\tend = len(li)-1\n\n\twhile(start <= end):\n\t\tmiddle = (end+start)//2\n\t\tif li[middle] >= num:\n\t\t\tanswer = middle\n\t\t\tend = middle - 1\n\t\telse:\n\t\t\tstart = middle + 1\n\treturn answer #index where x is not less than num\ndef upper_bound(li, num): #return n-1 if all are small or equal\n\tanswer = -1\n\tstart = 0\n\tend = len(li)-1\n\n\twhile(start <= end):\n\t\tmiddle = (end+start)//2\n\n\t\tif li[middle] <= num:\n\t\t\tanswer = middle\n\t\t\tstart = middle + 1\n\t\t\n\t\telse:\n\t\t\tend = middle - 1\n\treturn answer #index where x is not greater than num\n\ndef abs(x):\n\treturn x if x >=0 else -x\ndef binary_search(li, val, lb, ub):\n\tans = 0\n\twhile(lb <= ub):\n\t\tmid = (lb+ub)//2\n\t\t#print(mid, li[mid])\n\t\tif li[mid] > val:\n\t\t\tub = mid-1\n\t\telif val > li[mid]:\n\t\t\tlb = mid + 1\n\t\telse:\n\t\t\tans = 1\n\t\t\tbreak\n\treturn ans\n\ndef sieve_of_eratosthenes(n):\n\tans = []\n\tarr = [1]*(n+1)\n\tarr[0],arr[1], i = 0, 0, 2\n\twhile(i*i <= n):\n\t\tif arr[i] == 1:\n\t\t\tj = i+i\n\t\t\twhile(j <= n):\n\t\t\t\tarr[j] = 0\n\t\t\t\tj += i\n\t\ti += 1\n\tfor k in range(n):\n\t\tif arr[k] == 1:\n\t\t\tans.append(k)\n\treturn ans\ndef nc2(x):\n\tif x == 1:\n\t\treturn 0\n\telse:\n\t\treturn x*(x-1)//2\n#_______________________________________________________________#\n'''\n      \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\n   \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584\n\u2591\u2590\u2588\u2588\u2588\u2588\u2580\u2592\u2592Aestroix\u2592\u2592\u2580\u2588\u2588\u2588\u2588\u2588\u2588\n\u2591\u2588\u2588\u2588\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2588\u2588\u2588\u2588\n\u2591\u2590\u2588\u2588\u2592\u2592\u2592\u2592\u2592KARMANYA\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2588\u2588\u258c         ________________\n\u2591\u2590\u2588\u258c\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2588\u2588\u2588\u258c  ? ?   |\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592|\n\u2591\u2591\u2588\u2592\u2592\u2584\u2580\u2580\u2580\u2580\u2580\u2584\u2592\u2592\u2584\u2580\u2580\u2580\u2580\u2580\u2584\u2592\u2592\u2590\u2588\u2588\u2588\u258c   ?    |___CM ONE DAY___|\n\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2584\u2584\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2584\u2584\u2591\u2591\u258c\u2592\u2590\u2588\u2588\u2588\u258c     ? ? |\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592|\n\u2591\u2584\u2580\u258c\u2591\u2591\u2591\u2580\u2580\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2580\u2580\u2591\u2591\u258c\u2592\u2580\u2592\u2588\u258c    ? ?    \n\u2591\u258c\u2592\u2580\u2584\u2591\u2591\u2591\u2591\u2584\u2580\u2592\u2592\u2580\u2584\u2591\u2591\u2591\u2584\u2580\u2592\u2592\u2584\u2580\u2592\u258c      ? \n\u2591\u2580\u2584\u2590\u2592\u2580\u2580\u2580\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2580\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2588     ? ? \n\u2591\u2591\u2591\u2580\u258c\u2592\u2584\u2588\u2588\u2584\u2584\u2584\u2584\u2588\u2588\u2588\u2588\u2584\u2592\u2592\u2592\u2592\u2588\u2580       ? \n\u2591\u2591\u2591\u2591\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588=========\u2588\u2592\u2592\u2590\u258c\n\u2591\u2591\u2591\u2580\u2588\u2588\u2588\u2580\u2580\u2588\u2588\u2588\u2588\u2580\u2588\u2588\u2588\u2588\u2588\u2580\u2592\u258c\n\u2591\u2591\u2591\u2591\u2591\u258c\u2592\u2592\u2592\u2584\u2592\u2592\u2592\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2590\n\u2591\u2591\u2591\u2591\u2591\u258c\u2592\u2592\u2592\u2592\u2580\u2580\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\n\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n'''\n\nfor _ in range(1):\n\tn = int(input())\n\tnum = list(map(int, input().split()))\n\tnum1 = set(num)\n\ttemp = set()\n\tfor i in range(n+1):\n\t\tif i not in num1:\n\t\t\ttemp.add(i)\n\tnum1 = list(temp)\n\tnum1.sort()\n\tans = [num1[0]]\n\tctr = 1\n\tfor i in range(1, n):\n\t\tif num[i] != num[i-1]:\n\t\t\tans.append(num[i-1])\n\t\telse:\n\t\t\tans.append(num1[ctr])\n\t\t\tctr += 1\n\tprint(*ans)\n\n\n\n\n\n\t\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "def solve(arr):\n    n = len(arr)\n    for a,b in zip(arr,arr[1:]):\n        if b-a<0: return [-1]\n    if any(a>i+1 for i,a in enumerate(arr)): return [-1]\n    seen = [False] * (n+5)\n    for a in arr: seen[a] = True\n    res = [0] * n\n    cur = 0\n    for i in range(n):\n        if i and arr[i] > arr[i-1]:\n            res[i] = arr[i-1]\n        else:\n            while seen[cur]:\n                cur += 1\n            res[i] = cur\n            cur += 1\n    return res\n\ninput()\narr = list(map(int,input().split()))\nprint(*solve(arr))"
        },
        {
            "language": 3,
            "solution": "from __future__ import division, print_function\nimport sys\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\nimport os, sys, bisect, copy\nfrom collections import defaultdict, Counter, deque\n#from functools import lru_cache   #use @lru_cache(None)\nif os.path.exists('in.txt'): sys.stdin=open('in.txt','r')\nif os.path.exists('out.txt'): sys.stdout=open('out.txt', 'w')\n#\ndef input(): return sys.stdin.readline()\ndef mapi(arg=0): return map(int if arg==0 else str,input().split())\n#------------------------------------------------------------------\n\nn = int(input())\na = list(mapi())\n\nmp = defaultdict(int)\nfor i in a:\n    mp[i]+=1\nq = deque()\na = [0]+a\nres = []\nj =0\nvis = defaultdict(int)\nfor i in range(n+1):\n    if mp[i]:\n        while mp[i]:\n            if len(q)>0:\n                mp[i]-=1\n                tmp = q.popleft()\n                res.append(tmp)\n                vis[tmp]+=1\n            else:\n                while mp[j] or vis[j]:\n                    j+=1\n                vis[j]+=1\n                res.append(j)\n                j+=1\n                mp[i]-=1\n        q.append(i)\nprint(*res)"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        FastReader sc = new FastReader();\n\n        int MAX = 1000000;\n        int n = sc.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; ++i)\n            arr[i] = sc.nextInt();\n\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int a : arr) {\n            map.put(a, 1 + map.getOrDefault(a, 0));\n        }\n\n        TreeSet<Integer> tSet = new TreeSet<>();\n        for(int i = 0; i <= MAX; ++i){\n            if(!map.containsKey(i))\n                tSet.add(i);\n        }\n        List<Integer> bList = new ArrayList<>();\n        int i;\n        for(i = 0; i < n; ++i){\n            int item = tSet.pollFirst();\n            bList.add(item);\n            if(tSet.first() < arr[i])\n                break;\n\n            int freq = map.get(arr[i]);\n            if(freq == 1)\n                tSet.add(arr[i]);\n            else\n                map.put(arr[i], freq - 1);\n        }\n\n        /*\n        Set<Integer> used = new HashSet<>();\n        Queue<Integer> entries = new LinkedList<>();\n        int[] brr = new int[n];\n        int p = 0;\n        int i;\n        for (i = 0; i < n; ++i) {\n            int b = -1;\n            if (entries.size() > 0 && entries.peek() < p) {\n                b = entries.poll();\n            } else {\n                while (used.contains(p) || map.getOrDefault(p, 0) != 0)\n                    ++p;\n            }\n            brr[i] = b;\n            used.add(b);\n            if (b == p)\n                ++p;\n\n            if (brr[i] < arr[i] - 1)\n                break;\n\n            if (!used.contains(arr[i]))\n                entries.add(arr[i]);\n\n\n\n        }*/\n\n        if (i < n) {\n            System.out.println(-1);\n        } else {\n            for (int b : bList)\n                System.out.print(b + \" \");\n            System.out.println();\n        }\n    }\n\n    private static class FastReader {\n        private BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nbool umin(T &a, T b) {\n  return a > b ? (a = b, true) : false;\n}\ntemplate <class T>\nbool umax(T &a, T b) {\n  return a < b ? (a = b, true) : false;\n}\nconst long long inf = 1e18;\nconst long long N = 2e5 + 10;\nlong long a[N], b[N];\nvoid solve(long long tc) {\n  long long n;\n  cin >> n;\n  for (long long i = 1; i <= n; i++) cin >> a[i];\n  a[0] = 0;\n  set<long long> s, m;\n  for (long long i = 1; i <= n; i++) {\n    m.insert(a[i]);\n  }\n  for (long long i = 1; i <= 1e6; i++) {\n    if (m.find(i) == m.end()) s.insert(i);\n  }\n  long long ans[n + 1];\n  for (long long i = 1; i <= n; i++) {\n    if (a[i] != a[i - 1])\n      ans[i] = a[i - 1];\n    else {\n      long long x;\n      s.erase(x);\n      if (s.size() == 0)\n        x = 1e6;\n      else {\n        x = *s.begin();\n        s.erase(x);\n      }\n      ans[i] = x;\n    }\n  }\n  for (long long i = 1; i <= n; i++) cout << ans[i] << \" \";\n}\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t = 1;\n  for (long long i = 1; i <= t; i++) {\n    solve(t);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nleft=[]\ni=0\nfor x in range(a[n-1]+1):\n    if a[i]>x:\n        left.append(x)\n    elif a[i]<=x:\n        while i<n and a[i]<=x:\n            i+=1\nleft.append(a[n-1]+1)\nif a[0]!=0 and a[0]!=1:\n    print('-1')\nelse:\n    b=[left[0]]\n    j=1\n    k=1\n    while j<n:\n        if a[j]!=a[j-1]:\n            b.append(a[j-1])\n            j+=1\n        else:\n            if k<len(left):\n                b.append(left[k])\n                k+=1\n                j+=1\n            else:\n                b.append(b[j-1])\n                j+=1\n    for i in range(n):\n        print(b[i],end=' ')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid allprime(int n, bool prime[]) {\n  for (int p = 2; p * p <= n; p++) {\n    if (prime[p] == true) {\n      for (int i = p * p; i <= n; i += p) prime[i] = false;\n    }\n  }\n}\nvoid bfs(vector<int> adj[], int src, bool vis[], int level[]) {\n  queue<pair<int, int> > q;\n  q.push(make_pair(src, 0));\n  vis[src] = true;\n  level[src] = 0;\n  while (!q.empty()) {\n    pair<int, int> vpair = q.front();\n    q.pop();\n    int v = vpair.first;\n    int lvl = vpair.second;\n    for (int i = 0; i < adj[v].size(); i++) {\n      int next = adj[v][i];\n      if (!vis[next]) {\n        q.push(make_pair(next, lvl + 1));\n        vis[next] = true;\n        level[next] = lvl + 1;\n      }\n    }\n  }\n}\nvoid dfs(vector<int> adj[], int src, bool vis[]) {\n  vis[src] = true;\n  for (int i = 0; i < adj[src].size(); i++) {\n    int next = adj[src][i];\n    if (!vis[next]) {\n      dfs(adj, next, vis);\n    }\n  }\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  int a[n], b[n];\n  cin >> a[0];\n  if (a[0] == 1)\n    b[0] = 0;\n  else\n    b[0] = -1;\n  vector<pair<int, int> > v;\n  for (int i = 1; i < n; i++) {\n    cin >> a[i];\n    if (a[i] > a[i - 1]) {\n      b[i] = a[i - 1];\n      for (int j = a[i - 1] + 1; j < a[i]; j++) v.push_back(make_pair(j, i));\n    } else {\n      b[i] = -1;\n    }\n  }\n  int j = 0;\n  bool flag = true;\n  for (int i = 0; i < n; i++) {\n    if (b[i] == -1) {\n      if (j < v.size()) {\n        b[i] = v[j].first;\n        if (i >= v[j].second) {\n          flag = false;\n          break;\n        }\n        ++j;\n      } else\n        b[i] = 100001;\n    }\n  }\n  if (flag) {\n    for (int i = 0; i < n; i++) cout << b[i] << \" \";\n    cout << endl;\n  } else\n    cout << -1 << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 100;\nconst int inf = 1e9 + 7;\nint a[maxn];\nint b[maxn];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  memset(b, -1, sizeof(b));\n  for (int i = 0; i < n; i++) {\n    if (i == 0 && a[i] == 1) {\n      b[i] = 0;\n    }\n    if (i && a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n    }\n  }\n  stack<int> empty;\n  for (int i = 0; i < n; i++) {\n    if (b[i] == -1) {\n      empty.push(i);\n    } else {\n      for (int x = b[i] + 1; x < a[i]; x++) {\n        if (empty.empty()) {\n          cout << -1 << endl;\n          return 0;\n        }\n        int idx = empty.top();\n        empty.pop();\n        b[idx] = x;\n      }\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (b[i] == -1) {\n      b[i] = 1e6;\n    }\n    cout << b[i] << \" \";\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization(\"unroll-loops\")\nusing namespace std;\nconst int N = 1e5;\nint last[N + 1], arr[N + 1];\nbool used[2 * N + 1];\nvoid solve() {\n  int n;\n  cin >> n;\n  memset(last, -1, sizeof(last));\n  memset(used, false, sizeof(used));\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    last[arr[i]] = i;\n  }\n  if (arr[0] > 1) {\n    cout << -1;\n    return;\n  }\n  int ans[n + 1];\n  memset(ans, -1, sizeof(ans));\n  int prev = 0;\n  for (int i = 0; i < n; i++) {\n    if (last[arr[i]] == i) {\n      ans[i + 1] = arr[i];\n      used[arr[i]] = true;\n    }\n    if (ans[i] != -1) continue;\n    while (used[prev] || last[prev] >= i) prev++;\n    ans[i] = prev;\n    used[prev] = true;\n  }\n  for (int i = 0; i < n; i++) cout << ans[i] << \" \";\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\na1= sorted(a)\nif a1!=a:\n    print(-1)\nelse:\n    m = max(a)-1\n    mm=m+10\n    ans=[-1]*n\n    has=[0]*(n+10)\n    for i in range(n-1,-1,-1):\n        has[a[i]]=1\n        if a[i]>i+1:\n            print(-1)\n            exit()\n        else:\n            if i>0:\n                if a[i-1]!=a[i]:\n                    ans[i]=a[i-1]\n    c=0\n#    print(ans)\n    for i in range(n):\n        if ans[i]!=-1:\n            continue\n        while has[c]:\n            c+=1\n        ans[i]=c\n        has[c]=1    \n    print(*ans)        \n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, gettrace\n\nif gettrace():\n    inputi = input\nelse:\n    def input():\n        return next(stdin)[:-1]\n\n\n    def inputi():\n        return stdin.buffer.readline()\n\n\ndef main():\n    n = int(inputi())\n    aa = [int(a) for a in inputi().split()]\n    bb = [0] * n\n    ap = 0\n    bv = 0\n    mex = 0\n    ap = 0\n    bv = 0\n    for i in range(n):\n        if i > 0 and aa[i] != aa[i-1]:\n            bb[i] = aa[i-1]\n            if aa[i] > max(bv, bb[i] + 1):\n                print(-1)\n                return\n            bv = max(bb[i]+1, bv)\n        else:\n            while ap < n and bv >= aa[ap]:\n                if bv == aa[ap]:\n                    bv += 1\n                ap += 1\n            bb[i] = bv\n            bv += 1\n            if aa[i] > bv + 1:\n                print(-1)\n                return\n    print(' '.join(map(str, bb)))\n\n\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(j) for j in input().split(\" \")]\nb = [-1] * n\n\nif a[0] > 1:\n    print(-1)\nelse:\n\n    if a[0] == 0:\n        mex = 0\n        count = 0\n    else:\n        mex = 1\n        count = 1\n        b[0] = 0\n\n    result = 1\n    for i in range(1, n):\n        if a[i] != mex:\n            b[i] = mex\n            mex += 1\n            while mex < a[i]:\n                if b[count] == -1:\n                    b[count] = mex\n                    mex += 1\n                while b[count] != -1:\n                    count += 1\n                    if count > i:\n                        if mex == a[i]:\n                            break\n                        else:\n                            mex = a[i]\n                            result = 0\n                            break\n            if result == 0:\n                break\n\n    if result == 1:\n        for i in range(n):\n            if b[i] == -1:\n                b[i] = mex + 1\n        for i in range(n - 1):\n            print(b[i], end=' ')\n        print(b[-1])\n    else:\n        print(-1)\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class EdC {\n\n\tpublic static void main(String[] args) throws Exception{\n\t\tint num = 998244353;\n\t\t// TODO Auto-generated m ethod stub\n \t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n \t\tPrintWriter out = new PrintWriter(System.out);\n \t\tint n = Integer.parseInt(bf.readLine());\n//\t \t\tString input1 = bf.readLine().trim();\n//\t \t\tString input2 = bf.readLine().trim();\n\t \tSet<Integer> distinct = new HashSet<Integer>();\n\t \tint[] array = new int[n+1];\n\t \tStringTokenizer st2 = new StringTokenizer(bf.readLine());\n\t \tfor(int j=1;j<=n;j++){\n\t \t\tarray[j] = Integer.parseInt(st2.nextToken());\n\t \t\tdistinct.add(array[j]);\n\t \t}\n\t \tboolean[] filled = new boolean[n+1];\t\n\t \tfor(int i = 0;i<=n;i++){\n\t \t\tfilled[i] = false;\n\t \t}\n\t \tint[] b = new int[n+1];\n\t \tfor(int j = 2;j<=n;j++){\n\t \t\tif (array[j] != array[j-1]){\n\t \t\t\tb[j] = array[j-1];\n\t \t\t\tfilled[j] = true;\n\t \t\t}\n\t \t}\n\t \tint count = 0;\n\t \tfor(int j = 1;j<=n;j++){\n\t \t\tif (filled[j] == false){\n\t \t\t\twhile(distinct.contains(count)){\n\t \t\t\t\tcount++;\n\t \t\t\t}\n\t \t\t\tb[j] = count;\n\t \t\t\tcount++;\n\t \t\t}\n\t \t}\n\t \tfor(int j = 1;j<=n;j++){\n\t \t\tout.print(b[j] + \" \");\n\t \t}\n\t \tout.println();\n\t \tout.close();\n\t \t\t\n\t \n\t \t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t}\n}\n \t\n \n//StringJoiner sj = new StringJoiner(\" \"); \n//sj.add(strings)\n//sj.toString() gives string of those stuff w spaces or whatever that sequence is\n\n \t\t\n \t\t\n \t\t\n \t\t\n\t\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nimport math\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input().strip()\n    return(list(s[:len(s)]))\ndef invr():\n    return(map(int,input().strip().split()))\n\n\n\ndef from_file(f):\n    return f.readline\n\n\ndef solve(n, A):\n    S = set(A)\n\n    next_num = 0\n    memory = A[0]\n\n    b = []\n    for i, ai in enumerate(A):\n        # memory keeps the value in a which has just been processed\n        if ai != memory:\n            # check that the invariant holds:\n            if memory == ai-1 or next_num >= ai:\n                b.append(memory)\n                memory = ai\n            else:\n                return None\n        else:\n            # keep on printing\n            while next_num in S:\n                next_num += 1\n            b.append(next_num)\n            next_num += 1\n    return b\n\n\n\n\n# with open('3.txt') as f:\n#     input = from_file(f)\nn = inp()\nA = inlt()\nb = solve(n, A)\nif b:\n    print(\" \".join(map(str, b)))\nelse:\n    print(\"-1\")"
        },
        {
            "language": 3,
            "solution": "def answer(n,A):\n    q=[0]*(n+2)\n    for i in A:\n        q[i]=1\n    l=[i for i in range(n+2) if q[i]==0]\n    \n    b=[]\n    for i in range(n-1):\n        if A[i]!=A[i+1]:\n            b.append(l[0])\n            l[0]=A[i]\n        else:\n            b.append(l[0])\n            del l[0]\n    b.append(l.pop(0))\n    return b\n         \n    \nn=int(input())\nA=list(map(int,input().split()))\nprint(*answer(n,A))"
        },
        {
            "language": 3,
            "solution": "\"\"\"T=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\nfrom collections import deque\n\nn=int(input())\ns=[int(x) for x in input().split()]\ntemp=0\nfor i in range(0,len(s)):\n    if(s[i]>i+1):\n        temp=1\n        break\n\nif(temp==1):\n    print(-1)\nelse:\n    pos=[0]*((10*n)+5)\n    for i in range(0,len(s)):\n        pos[s[i]]=1\n\n\n    b=[]\n    ptr=0\n    kk=0\n    dd=dict()\n    for i in range(0,len(s)):\n        if(ptr==s[i]):\n            for j in range(kk,len(pos)):\n                if(pos[j]==0):\n                    b.append(j)\n                    pos[j]=1\n                    dd[j]=1\n                    kk=j+1\n                    break\n\n        else:\n            b.append(ptr)\n            dd[ptr]=1\n            pos[ptr]=1\n            for j in range(ptr+1,len(pos)):\n                if(dd.get(j)==None):\n                    ptr=j\n                    break\n            \n\n\n\n    \n    print(*b)\n            \n    \n\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n = int(input())\n    arr = list(map(int, input().split(\" \")))\n\n    index = n - 1\n    unique = set()\n\n    while index >= 0:\n        if arr[index] > index + 1:\n            print(-1)\n            return\n\n        unique.add(arr[index])\n        index -= 1\n\n    ans = []\n    if arr[0] == 1:\n        ans.append(0)\n        unique.add(0)\n    else:\n        current = 0\n        while current in unique:\n            current += 1\n        ans.append(current)\n        unique.add(current)\n\n    queue = [i for i in range(n + 1) if i not in unique]\n    prev = arr[0]\n    l = 1\n\n    while l < n:\n\n        if arr[l] != prev and arr[l-1] in unique:\n            unique.remove(arr[l-1])\n            lowest = arr[l-1]\n        else:\n            lowest = queue.pop(0)\n\n        ans.append(lowest)\n        unique.add(lowest)\n\n        prev = arr[l]\n        l += 1\n\n    print(*ans)\nsolve()"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    reserve = set()\n    if lst[0] > 1:\n        print(-1)\n        return\n    for i in range(0, n):\n        if lst[i] > i + 1:\n            print(-1)\n            return\n        reserve.add(lst[i])\n    can_use = []\n    cur = lst[0]\n    for i in range(0, n + 1):\n        if not i in reserve:\n            can_use.append(i)\n    can_use.reverse()\n    used = []\n    for i in range(0, n):\n        if lst[i] == cur:\n            if len(can_use) == 0:\n                print(-1)\n                return\n            used.append(can_use.pop())\n        else:\n            if len(can_use) != 0 and can_use[-1] < cur:\n                print(-1)\n                return\n            used.append(cur)\n            cur = lst[i]\n    line = ''\n    for i in used:\n        line += str(i) + ' '\n    print(line)\n\n\nif __name__ == '__main__':\n    t = 1\n    for i in range(t):\n        main()\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"do not use with graph questions\"\"\"\nfrom sys import stdin\nfrom collections import Counter\nn = int(stdin.readline())\narr = list(map(int,stdin.readline().split()))\ncou = Counter()\nfl = 0\nfor val in arr:\n    cou[val] += 1\n#if arr[0]==0:\n    #for ind,val in enumerate(arr):\n        #if val>ind:\nsee = set(arr)\nif not fl:\n    i = 1\n    add = -1\n    if arr[0]==1:\n        fin=[0]\n        cou[1]-=1\n        if cou[1] == 0:\n            add = 1\n    else:\n        fin = []\n        for x in range(1,10**6):\n            if x not in see:\n                fin.append(x)\n                break\n        cou[0] -= 1\n        if cou[0] == 0:\n            add = 0\n    se = set(fin)\n    a = arr[0]+1\n    while len(fin) != n:\n        #print(i,fin,se)\n        if add != -1:\n            fin.append(add)\n            se.add(add)\n            add = -1\n            cou[arr[i]]-=1\n            if cou[arr[i]]==0:\n                add = arr[i]\n            i += 1\n            continue\n        while cou.get(a) or a in se:\n            a += 1\n        fin.append(a)\n        se.add(a)\n        cou[arr[i]]-=1\n        if cou[arr[i]]==0:\n            add = arr[i]\n        i += 1\n    for i in fin:\n        print(i,end=' ')"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    need = a[-1] - 1; done = set()\n    million = 10 ** 6\n    for i in range(n - 1, 0, -1):\n        if a[i] == a[i - 1]:\n            while True:\n                if need in done:\n                    need -= 1\n                elif need < a[i]:\n                    b.append(million)\n                    break\n                else:\n                    b.append(need)\n                    done.add(need)\n                    break\n        else:\n            b.append(a[i - 1])\n            done.add(a[i - 1])\n        #print(b)\n    if a[0] == 0:\n        while True:\n            if need in done:\n                need -= 1\n            elif need < a[0]:\n                b.append(million)\n                break\n            else:\n                b.append(need)\n                done.add(need)\n                break\n    else:\n        b.append(0)\n    b.reverse()\n    print(*b)\nmain()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nb = [-1] * n\nset_a = set(a)\nfor i in range(n-1, 0, -1):\n    if a[i] != a[i-1]:\n        b[i] = a[i-1]\n\nc = 0\nfor i in range(n):\n    if b[i] == -1:\n        while c in set_a:\n            c += 1\n        b[i] = c\n        c += 1\n# print(*b)\nif max(a) - max(b) > 1:\n    print(-1)\nelse:\n    print(*b)"
        },
        {
            "language": 3,
            "solution": "# from functools import lru_cache\nfrom sys import stdin, stdout\nimport sys\nfrom math import *\n# sys.setrecursionlimit(3*int(1e5))\n# input = stdin.buffer.readline\n# print = stdout.write\n \n# @lru_cache()\n\nn=int(input())\nar=list(map(int,input().split()))\n# n=len(ar)\nans=[]\nfor i in range(n):\n\tif(ar[i]>i+1):\n\t\tprint(-1)\n\t\texit()\n\nans=[-1]*n\nd={}\nfor i in range(1,n):\n\tif(ar[i]!=ar[i-1]):\n\t\td[ar[i-1]]=1\n\t\tans[i]=ar[i-1]\nd[ar[-1]]=1\nx=0\nfor i in range(n):\n\tif(ans[i]==-1):\n\t\twhile(1):\n\t\t\tif(d.get(x)==None):\n\t\t\t\tans[i]=x\n\t\t\t\tx+=1\n\t\t\t\tbreak\n\t\t\tx+=1\nprint(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.text.Collator;\nimport java.util.*;\nimport java.util.stream.*;\n\nimport static java.lang.Math.*;\nimport static java.util.stream.Collectors.*;\n\npublic class Main {\n\n\n    void solve(){\n        int n = in.nextInt();\n        int[] arr = in.nextInts(n), ans = new int[n],visited = new int[n+1];\n        boolean legal = true;\n        Arrays.fill(ans,-1);\n        for(int i=0;i<n;i++){\n            visited[arr[i]] = 1;\n            if(arr[i]>i+1){\n                System.out.println(-1);\n                return;\n            }\n            if(i!=0&&arr[i]!=arr[i-1]){\n                ans[i] = arr[i-1];\n            }\n        }\n        int num = 0;\n        for(int i=0;i<n;i++){\n            if(ans[i]==-1){\n                while(visited[num]==1) num++;\n                ans[i] = num++;\n            }\n        }\n        out.println(ans);\n    }\n    void solve1() {\n        int n = in.nextInt();\n        int[] a = in.nextInts(n);\n        boolean[] has = new boolean[n+1];\n        for (int el : a) {\n            has[el] = true;\n        }\n        int[] b = new int[n];\n        int i1 = 1;\n\n        if (0 != a[0]){\n            b[0] = 0;\n        }else {\n            while (has[i1])i1++;\n            b[0] = i1++;\n        }\n\n        for (int i = 1; i < n; i++) {\n            if (a[i-1] != a[i]){\n                b[i] = a[i-1];\n            }else {\n                while (has[i1])i1++;\n                b[i] = i1++;\n            }\n        }\n        out.println(b);\n    }\n\n    static final boolean MULTI_TEST = false;\n\n    // --------------------------------------------------------------------------------------------------------------\n    // --------------------------------------------------HELPER------------------------------------------------------\n    // --------------------------------------------------------------------------------------------------------------\n\n\n    void solve2() {\n//        init();\n        if (MULTI_TEST) {\n            int t = in.nextInt();\n            for (int i = 0; i < t; i++) {\n                solve();\n            }\n        } else {\n            solve();\n        }\n    }\n\n    // --------------------ALGORITHM-------------------------\n\n    public void sort(int[] arr) {\n        List<Integer> tmp = Arrays.stream(arr).boxed().sorted().collect(Collectors.toList());\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = tmp.get(i);\n        }\n    }\n\n    // --------------------SCANNER-------------------------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner(boolean debug) {\n            if (debug) {\n                try {\n                    br = new BufferedReader(new FileReader(\"input.txt\"));\n                } catch (FileNotFoundException e) {\n                    throw new RuntimeException(e);\n                }\n            } else {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                st = new StringTokenizer(nextLine());\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextInts(int n) {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public long[] nextLongs(int n) {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextLong();\n            }\n            return arr;\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            try {\n                String line = br.readLine();\n                if (line == null) {\n                    throw new RuntimeException(\"empty line\");\n                }\n                return line;\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n\n    // --------------------WRITER-------------------------\n    public static class MyWriter extends PrintWriter {\n\n        public MyWriter(OutputStream out) {\n            super(out);\n        }\n\n        void println(int[] arr) {\n            String line = Arrays.stream(arr).mapToObj(String::valueOf).collect(joining(\" \"));\n            println(line);\n        }\n\n    }\n    // --------------------MAIN-------------------------\n\n    public MyScanner in;\n    public MyWriter out;\n\n    public static void main(String[] args) {\n        Main m = new Main();\n        m.in = new MyScanner(args.length > 0);\n        m.out = new MyWriter(new BufferedOutputStream(System.out));\n        m.solve2();\n        m.out.close();\n    }\n}\n\n\n// class Pair{\n//    Integer key, value;\n//     Pair(int _key,int _value){\n//        key = _key;\n//        value = _value;\n//    }\n//    @Override\n//    public int hashCode() {\n//        return (key ==null?0: key.hashCode()) ^(value ==null?0: value.hashCode());\n//    }\n//\n//    @Override\n//    public boolean equals(Object obj) {\n//        if(obj==null) return false;\n//        Pair a = (Pair)obj;\n//        return this.key.equals(a.key)&&this.value.equals(a.value);\n//    }\n//}\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = []\ns = set(a)\nbi1, bi2 = 0, 1\nfor i in range(n):\n    if a[i] != bi1:\n        b.append(bi1)\n        if bi2 == a[i]:\n            bi2 += 1\n    else:\n        while bi2 in s:\n            bi2 += 1\n        b.append(bi2)\n        bi2 += 1\n    bi1 = a[i]\nprint(*b)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[-1]*n\nif a[0]==0 or a[0]==1:\n    maxi=-1\n    if a[0]==1:\n        b[0]=0\n        maxi=0\n    for i in range(1,n):\n        if a[i]!=a[i-1]:\n            b[i]=a[i-1]\n    tofill=[]\n    i=0\n    while i<n:\n        if b[i]==-1:\n            tofill.append(i)\n        elif b[i]!=-1 and len(tofill)!=0:\n            maxi=max(maxi,a[i-1])\n            for j in range(len(tofill)):\n                if maxi!=a[i]-1:\n                    b[tofill[0]]=maxi+1\n                    tofill.pop(0)\n                    maxi+=1\n                else:\n                    break\n            if maxi!=a[i]-1:\n                print(-1)\n                break\n        i+=1\n    if len(tofill)==0 and b.count(-1)!=0:\n        pass\n    else:\n        maxi=a[-1]\n        for i in range(len(tofill)):\n            b[tofill[i]]=maxi+1\n            maxi+=1\n        print(*b)\nelse:\n    print(-1)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\n\nl = [0]*(n+2)\nfor elem in a:\n    l[elem]=1\n\nnot_present = []\nfor i in range(n+2):\n    if l[i]==0:\n        not_present.append(i)\n\nj = 0\nb = []\nfor i in range(n):\n    if i==0:\n        b.append(not_present[j])\n        j+=1\n    elif a[i]!=a[i-1]:\n        b.append(a[i-1])\n\n    else:\n        b.append(not_present[j])\n        j+=1\n\nprint(*b)"
        },
        {
            "language": 3,
            "solution": "N=int(input()) \nA=list(map(int,input().split())) \nmp={} \nfor i in range(N):\n    mp[A[i]]=i \ncurr=0 \nB=[] \nfor i in range(N):\n    if i>0 and A[i]!=A[i-1]:\n        B.append(A[i-1]) \n        curr=max(A[i-1]+1,curr) \n    else:\n        while 1==1:\n            if curr in mp and mp[curr]>=i:\n                curr+=1 \n            else:\n                break \n        B.append(curr)\n        curr+=1  \nfor b in B:\n    print(b,end=' ') \nprint('')  \n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n    static BufferedReader br;\n    static StringTokenizer st;\n    static PrintWriter pw;\n\n    static String nextToken() {\n        try {\n            while (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(br.readLine());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return st.nextToken();\n    }\n\n    static int nextInt() {\n        return Integer.parseInt(nextToken());\n    }\n\n    static double nextDouble() {\n        return Double.parseDouble(nextToken());\n    }\n\n    static long nextLong() {\n        return Long.parseLong(nextToken());\n    }\n\n    static String nextLine() {\n        try {\n            return br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    public static void main(String[] args) {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        pw = new PrintWriter(System.out);\n        run();\n        pw.close();\n    }\n\n    private static void run() {\n        int n = nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        int[] ans = new int[n];\n        boolean[] used = new boolean[n + 1];\n        int k = a[0];\n        Arrays.fill(ans, -1);\n        for (int i = 0; i < n; i++) {\n            if (k != a[i]) {\n                ans[i] = k;\n                used[k] = true;\n                k = a[i];\n            }\n        }\n        used[k] = true;\n        ArrayList<Integer> g = new ArrayList<>(n * 2);\n        for (int i = 0; i < n + 1; i++) {\n            if (!used[i]) {\n                g.add(i);\n            }\n        }\n        int id2 = 0;\n        for (int x :\n                g) {\n            while (ans[id2] != -1) {\n                id2++;\n            }\n            ans[id2++] = x;\n        }\n        for (int i = 0; i < n; i++) {\n            pw.print(ans[i] + \" \");\n        }\n    }\n\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dx[4] = {0, 0, 1, -1};\nlong long dy[4] = {1, -1, 0, 0};\nvoid fast() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout << setprecision(12) << fixed;\n}\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long a[n + 1];\n  a[0] = 0;\n  for (long long i = 0; i < n; i++) cin >> a[i + 1];\n  long long b[n + 1], vis[n + 5];\n  memset(b, (long long)-1, sizeof(b));\n  memset(vis, (long long)0, sizeof(vis));\n  for (long long i = 0; i < n; i++) {\n    if (a[i + 1] != a[i]) {\n      b[i] = a[i];\n      vis[b[i]]++;\n    }\n  }\n  vis[a[n]]++;\n  long long j = 0;\n  for (long long i = 0; i < n; i++) {\n    if (b[i] == -1) {\n      while (vis[j]) j++;\n      b[i] = j;\n      vis[j] = 1;\n    }\n  }\n  for (long long i = 0; i < n; i++) cout << b[i] << \" \";\n  cout << endl;\n  ;\n}\nint main() {\n  fast();\n  long long t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "//package codeforces.round649div2;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class C {\n    static InputReader in;\n    static PrintWriter out;\n\n    public static void main(String[] args) {\n        //initReaderPrinter(true);\n        initReaderPrinter(false);\n        //solve(in.nextInt());\n        solve(1);        \n    }\n\n    static void solve(int testCnt) {\n        for (int testNumber = 0; testNumber < testCnt; testNumber++) {\n            int n = in.nextInt();\n            boolean[] has = new boolean[n + 1];\n            int[] a = new int[n];\n            for(int i = 0; i < n; i++) {\n                a[i] = in.nextInt();\n                has[a[i]] = true;\n            }\n            int[] b = new int[n];\n            Arrays.fill(b, -1);\n            for(int i = 1; i < n; i++) {\n                if(a[i] != a[i - 1]) {\n                    b[i] = a[i - 1];\n                }\n            }\n            int j = 0;\n            for(int i = 0; i < n; i++) {\n                if(b[i] < 0) {\n                    while(has[j]) {\n                        j++;\n                    }\n                    b[i] = j;\n                    j++;\n                }\n            }\n            for(int v : b) {\n                out.print(v + \" \");\n            }\n            out.println();\n        }\n        out.close();\n    }\n\n    static void initReaderPrinter(boolean test) {\n        if (test) {\n            try {\n                in = new InputReader(new FileInputStream(\"src/input.in\"));\n                out = new PrintWriter(new FileOutputStream(\"src/output.out\"));\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        } else {\n            in = new InputReader(System.in);\n            out = new PrintWriter(System.out);\n        }\n    }\n\n    static class InputReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        InputReader(InputStream stream) {\n            try {\n                br = new BufferedReader(new InputStreamReader(stream), 32768);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        Integer[] nextIntArray(int n) {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        Long[] nextLongArray(int n) {\n            Long[] a = new Long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n    }\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n###############################################################\ndef iinput(): return int(stdin.readline())\ndef sinput(): return input()\ndef minput(): return map(int, stdin.readline().split())\ndef linput(): return list(map(int, stdin.readline().split()))\n###############################################################\n\ndef fill_with(x):\n    if x not in s:\n        return True\n    return False\n\nn = iinput()\na = linput()\ns = set(a)\nb = [0]*n\nx = 0\nwhile not fill_with(x):\n    x+=1\nb[0] = x\nx+=1\n\nfor i in range(1, n):\n    if a[i] > a[i-1]:\n        b[i] = a[i-1]\n    else:\n        while not fill_with(x):\n            x += 1\n        b[i] = x\n        x+=1\n\nprint(*b)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1000000007;\nconst int INF = 1000000009;\nvoid solution() {\n  long long n = 0;\n  cin >> n;\n  long long a[n];\n  for (long long i = 0; i < n; i++) cin >> a[i];\n  long long b[n];\n  for (long long i = 0; i < n; i++) b[i] = -1;\n  set<long long> s;\n  for (long long i = 0; i < n; i++) {\n    s.insert(a[i]);\n  }\n  for (long long i = 1; i < n; i++) {\n    if (a[i] != a[i - 1]) {\n      b[i] = a[i - 1];\n    }\n    if (a[i] - i - 1 > 0) {\n      cout << -1;\n      return;\n    }\n  }\n  long long id = 0;\n  for (long long i = 0; i < n; i++) {\n    if (b[i] != -1) {\n      continue;\n      s.erase(b[i]);\n    }\n    while (s.find(id) != s.end()) {\n      id++;\n    }\n    b[i] = id;\n    id++;\n  }\n  for (long long i = 0; i < n; i++) cout << b[i] << \" \";\n  cout << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int t = 1;\n  while (t--) {\n    solution();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Solve8 {\n\n    public static void main(String[] args) throws IOException {\n        PrintWriter pw = new PrintWriter(System.out);\n        new Solve8().solve(pw);\n        pw.flush();\n        pw.close();\n    }\n\n    public void solve(PrintWriter pw) throws IOException {\n        FastReader sc = new FastReader();\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        final int MAX = (int) 1E+5;\n        int[] ind = new int[MAX + 1];\n        Arrays.fill(ind, -1);\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n            ind[a[i]] = i;\n        }\n        int[] b = new int[n];\n        int max = -1;\n        ArrayDeque<Integer> q = new ArrayDeque();\n        for (int i = 0, j = 0; i < n; i++) {\n            while (j <= MAX && ind[j] >= i) {\n                q.addLast(j++);\n            }\n            int x;\n            if (q.isEmpty() || q.getFirst() == a[i]) {\n                x = j;\n                max = Math.max(max, j++);\n            } else {\n                x = q.removeFirst();\n                max = Math.max(max, x);\n            }\n            if (max < a[i] - 1) {\n                pw.println(-1);\n                return;\n            }\n            b[i] = x;\n        }\n        for (int i = 0; i < n; i++) {\n            pw.print(b[i] + (i + 1 == n ? \"\\n\" : \" \"));\n        }\n\n    }\n\n    static class FastReader {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public FastReader(String s) {\n            try {\n                br = new BufferedReader(new FileReader(s));\n            } catch (FileNotFoundException e) {\n            }\n        }\n\n        public String next() {\n            if (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n            }\n            return null;\n        }\n\n        public boolean hasNext() throws IOException {\n            if (st != null && st.hasMoreTokens()) {\n                return true;\n            }\n            String s = br.readLine();\n            if (s == null || s.isEmpty()) {\n                return false;\n            }\n            st = new StringTokenizer(s);\n            return true;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\np=0\nq=1\nt=set(arr)\nfor i in arr:\n    if i==p:\n        while q in t:\n            q+=1\n        \n        print(q,end=' ')\n        q+=1    \n    else:\n        print(p,end=' ')\n        p=i "
        },
        {
            "language": 3,
            "solution": "## necessary imports\nimport sys\ninput = sys.stdin.readline\nfrom math import ceil, floor, factorial;\n\n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp\n\n## gcd function\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n    if(k > n - k): \n        k = n - k \n    res = 1\n    for i in range(k): \n        res = res * (n - i) \n        res = res / (i + 1) \n    return int(res) \n\n## upper bound function code -- such that e in a[:i] e < x;\ndef upper_bound(a, x, lo=0):\n    hi = len(a)\n    while lo < hi:\n        mid = (lo+hi)//2\n        if a[mid] < x:\n            lo = mid+1\n        else:\n            hi = mid\n    return lo\n\n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0 and n > 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0 and n > 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n\n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n\n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b\n\n# find function with path compression included (recursive)\n# def find(x, link):\n#     if link[x] == x:\n#         return x\n#     link[x] = find(link[x], link);\n#     return link[x];\n\n# find function with path compression (ITERATIVE)\ndef find(x, link):\n    p = x;\n    while( p != link[p]):\n        p = link[p];\n    \n    while( x != p):\n        nex = link[x];\n        link[x] = p;\n        x = nex;\n    return p;\n\n\n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n\n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e7 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n\n################## un-comment below 2 lines when using factorization #################\n# spf = [0 for i in range(MAXN)]\n# spf_sieve() \ndef factoriazation(x):\n    ret = {};\n    while x != 1:\n        ret[spf[x]] = ret.get(spf[x], 0) + 1;\n        x = x//spf[x]\n    return ret\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()))\n## taking string array input\ndef str_array():\n    return input().strip().split();\n\n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n\n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n\nn = int(input()); a = int_array();\ns = set(a); bs = [0]*n; at = 0;\nfor i in range(n):\n    while at in s:\n        at += 1;\n    bs[i] = at;\n    at += 1;\n\nans = [0]*n; used = 0; \nfor i in range(n):\n    if i != 0 and a[i] != a[i-1]:\n        ans[i] = a[i-1];\n    else:\n        ans[i] = bs[used];\n        used += 1;\nprint(*ans);"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int N = 1e6 + 10;\nconst long long int mod = 1e9 + 7;\nconst double pi = acos(-1);\nint32_t main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  long long int n;\n  cin >> n;\n  vector<long long int> a(n), have(N, 0);\n  for (long long int i = 0; i < n; ++i) {\n    cin >> a[i];\n    have[a[i]]++;\n  }\n  long long int mex = 0;\n  vector<long long int> ans(N, -1);\n  for (long long int i = 0; i < n; ++i) {\n    if (ans[i] == -1) {\n      while (have[mex] > 0) ++mex;\n      ans[i] = mex;\n      ++mex;\n    }\n    --have[a[i]];\n    if (have[a[i]] == 0) {\n      ans[i + 1] = a[i];\n      mex = max(mex, a[i] + 1);\n    }\n  }\n  for (long long int i = 0; i < n; ++i) cout << ans[i] << ' ';\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef solve_test_case(t):\n    n = int(input())\n    a = parse_array(int)\n    a_set = set(a)\n    b = []\n    b_set = set()\n    mex = 0\n    max_b = -1\n\n    def add_to_b(v):\n        nonlocal b\n        nonlocal b_set\n        nonlocal mex\n        nonlocal max_b\n        b.append(v)\n        b_set.add(v)\n        max_b = max(max_b, v)\n        if v == mex:\n            while mex in b_set:\n                mex += 1\n\n    if a[0] == 1:\n        add_to_b(0)\n    elif a[0] > 1:\n        print(-1)\n        return\n    else:\n        i = 1\n        while True:\n            if i not in a_set:\n                add_to_b(i)\n                break\n            i += 1\n\n    possible = True\n    for i in range(1, n):\n        if a[i] > a[i-1]:\n            add_to_b(a[i-1])\n            if mex != a[i]:\n                possible = False\n                break\n        else:\n            v = max_b + 1\n            while True:\n                if v not in a_set:\n                    add_to_b(v)\n                    break\n                v+= 1\n\n    if possible:\n        print(\" \".join(list(map(str, b))))\n    else:\n        print(-1)\n\n\ndef parse_array(f):\n    return list(map(f, input().split()))\n\n# def solve():\n#     T = int(input())\n\n#     for t in range(T):\n#         solve_test_case(t)\n\nif __name__ == \"__main__\":\n    solve_test_case(0)\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nCode of Ayush Tiwari\nCodeforces: servermonk\nCodechef: ayush572000\n\n\"\"\"\nimport sys\ninput = sys.stdin.buffer.readline\n\ndef solution():\n    n=int(input())\n    l=list(map(int,input().split()))\n    a=[0]*(10**6+1)\n    for i in range(n):\n        if l[i]>i+1:\n            print(-1)\n            return\n        a[l[i]]=1\n    x=[]\n    for i in range(len(a)):\n        if a[i]==0:\n            x.append(i)\n    j=1\n    ans=[x[0]]\n    for i in range(1,n):\n        if l[i]==l[i-1]:\n            ans.append(x[j])\n            if j!=n-1:\n                j+=1\n        else:\n            ans.append(l[i-1])\n    print(*ans)\n\nsolution()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5, mod = 998244353;\nint a[N], b[N], c[N];\nmap<int, int> mp;\nset<int> s;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 1e6 + 1; i++) {\n    s.insert(i);\n  }\n  for (int i = 0; i < n; i++) {\n    b[i] = -1;\n    cin >> a[i];\n    mp[a[i]] = i + 1;\n    s.erase(a[i]);\n  }\n  for (auto it : mp) {\n    b[it.second] = it.first;\n  }\n  for (int i = 0; i < n; i++) {\n    if (b[i] != -1) {\n      continue;\n    } else {\n      b[i] = *(s.begin());\n      s.erase(s.begin());\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cout << b[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int& i : a) cin >> i;\n  ;\n  vector<int> ans(n, -1);\n  bool ok = true;\n  for (int i = 1; i <= n; i++)\n    if (a[i - 1] > i) ok = false;\n  if (ok == false) {\n    cout << \"-1\";\n    return 0;\n  }\n  set<int> s;\n  for (int i = 0; i <= n; i++) s.insert(i);\n  for (int i = 1; i < n; i++) {\n    if (a[i - 1] != a[i]) {\n      ans[i] = a[i - 1];\n      s.erase(a[i - 1]);\n    }\n  }\n  int x = a.back();\n  s.erase(x);\n  for (int i = 0; i < n; i++) {\n    if (ans[i] == -1) {\n      ans[i] = *s.begin();\n      s.erase(s.begin());\n    }\n  };\n  for (int i = 0; i < n; i++) assert(ans[i] != -1);\n  for (int i = 0; i < n; i++) cout << ans[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n  char ch = getchar();\n  int nega = 1;\n  while (!isdigit(ch)) {\n    if (ch == '-') nega = -1;\n    ch = getchar();\n  }\n  int ans = 0;\n  while (isdigit(ch)) {\n    ans = ans * 10 + ch - 48;\n    ch = getchar();\n  }\n  if (nega == -1) return -ans;\n  return ans;\n}\nint a[100005], b[100005];\nsigned main() {\n  int n = read();\n  for (int i = 1; i <= n; i++) a[i] = read();\n  vector<int> c;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == a[i - 1])\n      c.push_back(i);\n    else {\n      if (a[i - 1] + c.size() + 1 < a[i]) {\n        cout << \"-1\\n\";\n        return 0;\n        ;\n      }\n      for (int j = 0; j < a[i] - a[i - 1] - 1; j++) {\n        b[c.back()] = a[i] - j - 1;\n        c.pop_back();\n      }\n      b[i] = a[i - 1];\n    }\n  }\n  for (int i : c) b[i] = n + 1;\n  for (int i = 1; i <= n; i++) printf(\"%d \", b[i]);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(f) for f in input().split()]\nm=set(a)\nb=[]\np=set(f for f in range(0,a[n-1]+1))\np=p-m\np=list(p)\n##print(p)\ng=0\nl=0\ncur=0\nif cur<len(p):\n    fl=True\nelse:\n    fl=False\nfor i in range(n):\n    if i==0:\n        if a[i]==0:\n            if fl:\n                b.append(p[cur])\n                cur+=1\n            else:\n                b.append(a[n-1]+10)\n        else:\n            ##a[i]==1\n            b.append(0)\n            if p[cur]==0:\n                cur+=1\n        if cur==len(p):\n            fl=False\n    else:\n        if a[i]==a[i-1]:\n            if fl:\n                b.append(p[cur])\n                cur+=1\n            else:\n                b.append(a[n-1]+10)\n        else:\n            b.append(a[i-1])\n            \n\n        if cur==len(p):\n            fl=False\n        \nfor el in b:\n    print(el,end=' ')\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    static class InputReader {\n\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int snext() {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) {\n                curChar = 0;\n                try {\n                    snumChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = snext();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = snext();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int[] nextIntArray(int n) {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        public String readString() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public String nextLine() {\n            int c = snext();\n            while (isSpaceChar(c))\n                c = snext();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n\n    }\n    static class OutputWriter {\n\t\tprivate final PrintWriter writer;\n \n\t\tpublic OutputWriter(OutputStream outputStream) {\n\t\t\twriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n\t\t}\n \n\t\tpublic OutputWriter(Writer writer) {\n\t\t\tthis.writer = new PrintWriter(writer);\n\t\t}\n \n\t\tpublic void print(Object...objects) {\n\t\t\tfor (int i = 0; i < objects.length; i++) {\n\t\t\t\tif (i != 0)\n\t\t\t\t\twriter.print(' ');\n\t\t\t\twriter.print(objects[i]);\n\t\t\t}\n\t\t}\n \n\t\tpublic void printLine(Object...objects) {\n\t\t\tprint(objects);\n\t\t\twriter.println();\n\t\t}\n \n\t\tpublic void close() {\n\t\t\twriter.close();\n\t\t}\n \n\t\tpublic void flush() {\n\t\t\twriter.flush();\n\t\t}\n \n\t\t}\n \n    static class IOUtils {\n \n\t\tpublic static int[] readIntArray(InputReader in, int size) {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++)\n                array[i] = in.nextInt();\n            return array;\n        }\n\n    }\n    static int gcd(int a, int b) \n    { \n        if (a == 0) \n            return b; \n        return gcd(b % a, a); \n    } \n    static int mod = (int)(1e9+7);\n    public static long pow(long a,long b)\n    {\n        long ans = 1;\n        while(b> 0)\n        {\n            if((b & 1)==1){\n                ans = (ans*a) % mod; \n            }\n            a = (a*a) % mod;\n            b = b>>1;\n        }\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        OutputWriter out = new OutputWriter(System.out);\n        //IOUtils io = new IOUtils();\n        int n = in.nextInt();\n        int[] arr = in.nextIntArray(n);\n        Set<Integer> set = new HashSet<>();\n        for(int i:arr)\n            set.add(i);\n        int count = 0;\n        StringBuilder res = new StringBuilder();\n        for(int i=0;i<n;i++)\n        {\n            if(i>0 && arr[i]!=arr[i-1])\n            {\n                res.append(arr[i-1] + \" \");\n            }\n            else\n            {\n                while(set.contains(count))\n                    count++;\n                res.append(count + \" \");\n                count++;\n            }\n        }\n        out.printLine(res);\n        out.flush();\n        out.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nfrom heapq import *\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i]>i+1:\n        print(-1)\n        exit()\n        \ns = set(a)\npq = []\n\nfor i in range(10**6+1):\n    if i not in s:\n        heappush(pq, i)\n\nans = []\n\nfor i in range(n):\n    if i>=1 and a[i]>a[i-1]:\n        heappush(pq, a[i-1])\n        \n    ans.append(heappop(pq))\n\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int n, a[200005], ans[200005], flag = 0, in = 0;\n  memset(ans, -1, sizeof(ans));\n  cin >> n;\n  set<int> s;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    s.insert(a[i]);\n    if (a[i] - 1 > i) flag = 1;\n  }\n  if (a[0] == 0)\n    in = 1;\n  else\n    in = 0;\n  if (!flag) {\n    for (int i = 1; i < n; i++) {\n      if (a[i - 1] != a[i]) ans[i] = a[i - 1];\n    }\n    for (int i = 0; i < n; i++) {\n      if (ans[i] == -1) {\n        if (s.count(in) != 0)\n          while (s.count(in) != 0) in++;\n        ans[i] = in;\n        in++;\n      }\n    }\n    for (int i = 0; i < n; i++) cout << ans[i] << \" \";\n  } else\n    cout << -1 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ndata = list(map(int, input().split()))\n\nno = False\n\nfor i in range(n):\n    if i + 1 < data[i]:\n        no = True\n\nmy_set = set()\n\nif no:\n    print(-1)\nelse:\n    for x in data:\n        my_set.add(x)\n    count = 0\n    # Start\n    while count in my_set:\n        count += 1\n    print(count, end=' ')\n    my_set.add(count)\n    # Then\n    for i in range(1, n):\n        # deterministic\n        if data[i] != data[i - 1]:\n            print(data[i - 1], end=' ')\n            continue\n        while count in my_set:\n            count += 1\n        print(count, end=' ')\n        my_set.add(count)\n    print()"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import defaultdict, Counter, deque\n\nINF = float('inf')\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a%b\n\treturn a\n\n\ndef primeFactor(n):\n\tif n % 2 == 0:\n\t\treturn 2\n\ti = 3\n\twhile (i ** 2) <= n:\n\t\tif n % i == 0:\n\t\t\treturn i \n\t\ti += 1\n\treturn n\n\ndef main():\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\n\tans = [0 for i in range(n)]\n\tsmallest = []\n\ts = 0\n\twhile s < arr[0]:\n\t\tsmallest.append(s)\n\t\ts += 1\n\ts = arr[0] + 1\n\tif n == 1:\n\t\tsmallest.append(s)\n\tfor i in range(1, n):\n\t\twhile s < arr[i]:\n\t\t\tsmallest.append(s)\n\t\t\ts += 1\n\t\ts = arr[i] + 1\n\t\tif i == n - 1:\n\t\t\tsmallest.append(s)\n\tj = 0\n\tfor i in range(n):\n\n\t\tif arr[i] > arr[i-1]:\n\t\t\tans[i] = arr[i - 1]\n\t\telse:\n\t\t\tif j < len(smallest):\n\t\t\t\tans[i] = smallest[j]\n\t\t\t\tlast = smallest[j]\n\t\t\t\tlast += 1\n\t\t\telse:\n\t\t\t\tans[i] = last\n\t\t\t\tlast += 1\n\t\t\tj += 1\n\n\tprint(*ans)\n\t# print(smallest)\nif __name__ == \"__main__\":\n\t# t = int(input())\n\tt = 1\n\tfor _ in range(t):\n\t\tmain()\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from queue import Queue\n\n\ndef main():\n    test = 1\n    for _ in range(test):\n        n = int(input())\n        ara = [int(num) for num in input().split()]\n        mark = [True for _ in range(n + 1)]\n        for num in ara:\n            mark[num] = False\n\n        take_from = Queue()\n        for index in range(n + 1):\n            if mark[index]:\n                take_from.put(index)\n        \n        ans = []\n        ans.append(take_from.get())\n        for index in range(1, n):\n            if ara[index] != ara[index - 1]:\n                ans.append(ara[index - 1])\n            elif not take_from.empty():\n                ans.append(take_from.get())\n            else:\n                ans.append(n + 1)\n        \n        ans = ' '.join(map(str, ans))\n        print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "# OBSERVE\n\n# if i>a[i], -1. (i starts from 1)\n# if a[i] != a[i-1], b[i] = a[i-1]\n\nimport sys\nfrom sys import setrecursionlimit\nsetrecursionlimit(10 **5)\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\nreadline = sys.stdin.readline\n\nn = int(readline())\na = list(map(int, readline().split()))\nb = [-1] *n\nnot_visited = []\nvisited = [-1] * 10**6\n\nflag = True\nfor i,j in enumerate(a):\n    if j>i+1:\n        flag = False\n        break\n    visited[j] = 1\n\nif not flag:\n    print(-1)\n    sys.exit(0)\n\nfor i in range(1, n):\n    if a[i] != a[i-1]:\n        b[i] = a[i-1]\n\nfor i,j in enumerate(visited):\n    if j == -1:\n        not_visited.append(i)\n\nk=0\nfor i,j in enumerate(b):\n    if j==-1:\n        b[i] = not_visited[k]\n        k+=1\n\nprint(*b)\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int power(long long int x, long long int y, long long int m) {\n  if (y == 0) return 1;\n  long long int p = power(x, y / 2, m) % m;\n  p = (p * p) % m;\n  return (y % 2 == 0) ? p : (x * p) % m;\n}\nlong long int nCr(long long int n, long long int r, long long int m) {\n  if (r > n) return 0;\n  long long int a = 1, b = 1, i;\n  for (i = 0; i < r; i++) {\n    a = (a * n) % m;\n    --n;\n  }\n  while (r) {\n    b = (b * r) % m;\n    --r;\n  }\n  return (a * power(b, m - 2, m)) % m;\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  int f = 0;\n  map<int, int> mp, mp2;\n  for (int i = 0; i < n; ++i) {\n    cin >> v[i];\n    mp[v[i]] = 1;\n    if (i != 0 && v[i - 1] > v[i]) f = 1;\n  }\n  if (f || v[0] > 1) {\n    cout << -1 << '\\n';\n    return;\n  }\n  vector<int> ans(n);\n  int l = 0;\n  while (mp[l] == 1) ++l;\n  if (v[0] == 1) {\n    ans[0] = l;\n    l++;\n  } else {\n    ans[0] = l;\n    ++l;\n  }\n  while (mp[l] == 1) ++l;\n  for (int i = 1; i < n; ++i) {\n    while (mp[l] == 1) ++l;\n    if (v[i] != v[i - 1])\n      ans[i] = v[i - 1];\n    else\n      ans[i] = l++;\n    while (mp[l] == 1) ++l;\n  }\n  int mex = 0;\n  for (int i = 0; i < n; ++i) {\n    mp2[ans[i]] = 1;\n    while (mp2[mex] == 1) mex++;\n    if (mex != v[i]) f = 1;\n  }\n  if (f) {\n    cout << -1 << '\\n';\n    return;\n  }\n  for (int i = 0; i < n; ++i) cout << ans[i] << \" \";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.buffer.readline\n\n#strategy: if i is a changing point i.e. a[i]!=a[i-1], then set b[i]=a[i-1]\n#if i is not a changing point, store the next largest value into b[i] that isn't in a\n\nn=int(input())\nA=[int(x) for x in input().split()]\n\n\nB=[0 for _ in range(n)]\n\naValues=set(A) #store unique a values\nprevVal=0\n#currI=-1\npossible=True\n\nnextValue=1\nwhile nextValue in aValues:\n    nextValue+=1\n    \nfor i in range(n):\n    if A[i]!=prevVal: #changing point\n        if A[i]-1>i: #not enough indexes to fill the gaps\n            possible=False\n            break\n        B[i]=prevVal\n        prevVal=A[i]\n    else: #non-changing point\n        B[i]=nextValue\n        nextValue+=1\n        while nextValue in aValues:\n            nextValue+=1\n        \nif possible==True:\n    print(' '.join([str(x) for x in B]))\nelse:\n    print('-1')"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef input():    return sys.stdin.readline().strip()\ndef iinput():   return int(input())\ndef rinput():   return map(int, sys.stdin.readline().strip().split()) \ndef get_list(): return list(map(int, sys.stdin.readline().strip().split())) \nmod = int(1e9)+7\n\nn = iinput()\na = get_list()\n\ns = set(a)\nans = []\nele = 0\n\nfor i in range(n):\n    if i > 0 and a[i] != a[i-1]:\n        ans.append(a[i-1])\n    else:\n\t    while ele in s:\n\t        ele += 1\n\t    ans.append(ele)\n\t    ele += 1\n\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ntotalmax=max(l)\ns=set(range(l[-1]))\nflag=True\nans=[0]*n\nreduntspots=[]\nfor i in range(n):\n    if l[i]>(i+1):\n        print(-1)\n        flag=False\n        break\n    if l[i] in s:\n        s.remove(l[i])\n    if i==0 and l[i]!=0:\n        ans[i]=0\n    if i!=0 and l[i]!=l[i-1]:\n        ans[i]=l[i-1]\n        continue\n    reduntspots.append(i)\n\nif flag:\n    if len(s)<=len(reduntspots):\n        missinglist = list(sorted(s)) + [totalmax+1]*(len(reduntspots)-len(s))\n        for i in range(len(reduntspots)):\n            ans[reduntspots[i]]=missinglist[i]\n        print(*ans)\n    else:\n        print(-1)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nans=[-1]*n \nse=set()\nlis=list(map(int,input().split()))\nlength=len(lis)\nfor i in range(length-1,0,-1):\n    if lis[i-1]!=lis[i]:\n        ans[i]=lis[i-1]\n        se.add(lis[i-1])\nif lis[0]>1:\n    print(-1)\n    exit()\ni=0\nse.add(lis[-1])\nj=0\nwhile(True):\n    \n    if j==length:\n        break\n    if i in se :\n        i+=1\n        continue\n    if ans[j]!=-1:\n        j+=1 \n        continue\n    ans[j]=i\n    j+=1\n    i+=1\nfor i in ans:\n    print(i,end=\" \")"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = [int(x) for x in input().split()]\nimpo = 0\nuniq =[]\nnotyet = []\nif(b[0]!=0):\n    notyet.append([0,b[0]])\nk = [-1]*a\nfor i in range(a):\n    if(i+1<b[i]):\n        impo = 1\n        break\n    if(b[i]>b[i-1]):\n        k[i] = b[i-1]\n        uniq.append(k[i])\n        if(b[i]-b[i-1]!=1): \n            notyet.append([b[i-1]+1,b[i]])\n#print(notyet)\nnotyeti = 0\nlack = 0\nif(impo==1):\n    print(-1)\nelse:\n    for i in range(a):\n        if (k[i]==-1):\n            if(notyeti<len(notyet)):\n                k[i] = notyet[notyeti][0]\n                notyet[notyeti][0]+=1\n                if(notyet[notyeti][0]==notyet[notyeti][1]):\n                    notyeti+=1\n            else:\n                k[i] = b[-1]+1\n    for i in k:\n        print(i,end=\" \")\n    print()\n        \n        \n    "
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int,raw_input().split())\nb=[10**6 for i in range(n)]\nreq=[0 for i in range(n+1)]\nc=1\nmodi=[]\nans=[str(10**6) for j in range(n)]\nfor  i in range(n):\n    if a[i]>(i+1):\n        print -1;c=0;\n        break\n    modi.append(i)\n    if i:\n        if a[i]!=a[i-1]:\n            p=i\n            for j in range(a[i-1],a[i]):\n                if len(modi)==0:\n                    c=0;print -1;break\n                k=modi.pop()\n                ans[k]=str(j)\n                \n        \n                \n        \n    else:\n        if a[i]==1:\n            ans[0]=\"0\"\n        \nif c:\n    s=\" \"\n    print s.join(ans)\n        "
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\na = list(map(int,input().split()))\n\nb = [None] * n\nind = 0\nmex = 0\n\nimport sys\nfor i in range(n):\n\n    if mex != a[i]:\n\n        for j in range(mex+1,a[i]):\n\n            while ind < i and b[ind] != None:\n                ind += 1\n\n            if ind >= i:\n                print (-1)\n                sys.exit()\n\n            b[ind] = j\n        \n        b[i] = mex\n        mex = a[i]\n\nfor i in range(n):\n    if b[i] == None:\n        b[i] = 10**6\n\nprint (*b)\n\n        \n    "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class C{\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        ArrayList<Integer> open = new ArrayList<>();\n        int[] result = new int[n];\n        Arrays.fill(result, -1);\n        int[] nums = new int[n];\n        for(int i = 0; i < n; i++) {\n            nums[i] = input.nextInt();\n        }\n        boolean[] next = new boolean[1000001];\n        for(int i = 1; i < n; i++) {\n            if(nums[i] != nums[i - 1]) {\n                result[i] = nums[i - 1];\n                next[nums[i - 1]] = true;\n            }\n        }\n        next[nums[n - 1]] = true;\n        int cur = 0;\n        for(int i = 0; i < n; i++) {\n            if(result[i] != -1) {\n                continue;\n            }\n            while(next[cur]) {\n                cur++;\n            }\n            result[i] = cur;\n            cur++;\n        }\n        for(int i = 0; i < n; i++) {\n            System.out.print(result[i] + \" \");\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int n;\n  int arr[100005];\n  int toUse[100005];\n  memset(toUse, -1, sizeof(toUse));\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    toUse[arr[i]] = i;\n  }\n  if (arr[0] > 1) {\n    cout << -1;\n    return 0;\n  }\n  vector<int> ans;\n  int prev;\n  if (arr[0] == 0) {\n    for (prev = 1;; prev++) {\n      if (toUse[prev] < 0) break;\n    }\n    ans.push_back(prev);\n    toUse[prev] = 9999999;\n  } else if (arr[0] == 1) {\n    for (prev = 0;; prev++) {\n      if (toUse[prev] < 0) break;\n    }\n    ans.push_back(prev);\n    toUse[prev] = 9999999;\n  }\n  for (int i = 1; i < n; i++) {\n    if (arr[i] != arr[i - 1]) {\n      if (toUse[arr[i - 1]] > i) {\n        cout << -1;\n        return 0;\n      }\n      int push = arr[i - 1];\n      ans.push_back(push);\n      toUse[push] = 9999999;\n      prev = push;\n    } else {\n      int push = prev + 1;\n      while (toUse[push] >= i) push++;\n      ans.push_back(push);\n      toUse[push] = 9999999;\n      prev = push;\n    }\n  }\n  for (auto& x : ans) cout << x << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Solution{\n\tlong rem = 1000000000L;\n\tInputReader sc;\n\tboolean singleTest = true;\n\t\n\tpublic void solve(int test){\n\t\tint n = nextInt();\n\t\t\n\t\tint[] a = nextArrInt(n);\n\t\t\n\t\tint[] b = new int[n];\n\t\t\n\t\tLinkedList<Integer> indexL = new LinkedList<Integer>();\n\t\tLinkedList<Integer> list = new LinkedList<Integer>();\n\t\tint val = 0;\n\t\t\n\t\tfor(int i=0; i<n; i++){\n\t\t\tindexL.addLast(i);\n\t\t\tlist.addLast(i);\n\t\t\tif(a[i] != val){\n\t\t\t\twhile((val < a[i]) && (list.size() > 0)){\n\t\t\t\t\tint el = list.removeFirst();\n\t\t\t\t\tint index = indexL.removeLast();\n\t\t\t\t\tb[index] = el;\n\t\t\t\t\tval++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tb[i] = 1000000;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=0; i<n; i++){\n\t\t\tprint(b[i] + \" \");\n\t\t}\n\t\tprintln(\"\");\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tpublic int[] initialize(int[] arr, int len, int val){\n\t\tfor(int i=0; i<len; i++){\n\t\t\tarr[i] = val;\n\t\t}\n\t\treturn arr;\n\t}\n\tpublic long[] initialize(long[] arr, int len, long val){\n\t\tfor(int i=0; i<len; i++){\n\t\t\tarr[i] = val;\n\t\t}\n\t\treturn arr;\n\t}\n\tpublic boolean[] initialize(boolean[] arr, int len, boolean val){\n\t\tfor(int i=0; i<len; i++){\n\t\t\tarr[i] = val;\n\t\t}\n\t\treturn arr;\n\t}\n\tpublic int[] initialize(int[] arr, int val){\n\t\treturn initialize(arr, arr.length, val);\n\t}\n\tpublic long[] initialize(long[] arr, long val){\n\t\treturn initialize(arr, arr.length, val);\n\t}\n\tpublic boolean[] initialize(boolean[] arr, boolean val){\n\t\treturn initialize(arr, arr.length, val);\n\t}\n\t\n\tpublic int nextInt(){\n\t\treturn sc.nextInt();\n\t}\n\tpublic long nextLong(){\n\t\treturn sc.nextLong();\n\t}\n\tpublic String next(){\n\t\treturn sc.next();\n\t}\n\tpublic String nextLine(){\n\t\treturn sc.nextLine();\n\t}\n\tpublic int[] nextArrInt(int n){\n\t\tint[] arr = new int[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tarr[i] = nextInt();\n\t\t}\n\t\treturn arr;\n\t}\n\tpublic long[] nextArrLong(int n){\n\t\tlong[] arr = new long[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tarr[i] = nextLong();\n\t\t}\n\t\treturn arr;\n\t}\n\tpublic String[] nextArrWord(int n){\n\t\tString[] arr = new String[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tarr[i] = next();\n\t\t}\n\t\treturn arr;\n\t}\n\t\n\tpublic void println(String str){\n\t\tSystem.out.println(str);\n\t}\n\tpublic void println(int num){\n\t\tSystem.out.println(num);\n\t}\n\tpublic void println(long num){\n\t\tSystem.out.println(num);\n\t}\n\tpublic void print(String str){\n\t\tSystem.out.print(str);\n\t}\n\tpublic void print(int num){\n\t\tSystem.out.print(num);\n\t}\n\tpublic void print(long num){\n\t\tSystem.out.print(num);\n\t}\n\tpublic void printArr(int[] arr){\n\t\tint n = arr.length;\n\t\tfor(int i=0; i<(n-1); i++){\n\t\t\tprint(arr[i] + \" \");\n\t\t}\n\t\tprintln(arr[n-1]);\n\t}\n\tpublic void printArr(int[] arr, int n){\n\t\tprint(n+\" \");\n\t\tfor(int i=0; i<(n-1); i++){\n\t\t\tprint(arr[i] + \" \");\n\t\t}\n\t\tprintln(arr[n-1]);\n\t}\n\tpublic void printArr(long[] arr){\n\t\tint n = arr.length;\n\t\tfor(int i=0; i<(n-1); i++){\n\t\t\tprint(arr[i] + \" \");\n\t\t}\n\t\tprintln(arr[n-1]);\n\t}\n\tpublic void printArr(long[] arr, int n){\n\t\tprint(n+\" \");\n\t\tfor(int i=0; i<(n-1); i++){\n\t\t\tprint(arr[i] + \" \");\n\t\t}\n\t\tprintln(arr[n-1]);\n\t}\n\t\n\tpublic Solution(){\n\t\tsc = new InputReader();\n\t\t\n\t\tint tests = 1;\n\t\tif(!singleTest){\n\t\t\ttests = sc.nextInt();\n\t\t}\n        \n        for(int t=1; t<=tests; t++){\n\t\t\tsolve(t);\n        }\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Solution();\n\t}\n}\n\nclass InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\t\n\tpublic InputReader(){\n\t\tInputStream stream = System.in;\n        reader = new BufferedReader(new InputStreamReader(stream), 32768);\n        tokenizer = null;\n    }\n\t\n    public InputReader(InputStream stream){\n        reader = new BufferedReader(new InputStreamReader(stream), 32768);\n        tokenizer = null;\n    }\n \n    public String next(){\n        while(tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try{\n                tokenizer = new StringTokenizer(reader.readLine());\n            }catch(IOException e){\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n \n    public int nextInt(){\n        return Integer.parseInt(next());\n    }\n\t\n\tpublic long nextLong(){\n\t\treturn Long.parseLong(next());\n\t}\n\t\n\tpublic String nextLine(){\n\t\ttry{\n\t\t\treturn reader.readLine();\n\t\t}catch(IOException e){\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint a[101000];\nint n;\nint cnt[101000];\nint ans[101000];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  for (int i = 0; i < a[n - 1]; i++) cnt[i] = 1;\n  int last = a[n - 1] - 1;\n  int cst = a[n - 1] + 1;\n  for (int i = n - 1; i >= 0; i--) {\n    bool flag = false;\n    if (i == 0) {\n      flag = (a[i] == 1) ? true : false;\n      ans[i] = 0;\n    } else {\n      flag = (a[i] != a[i - 1]) ? true : false;\n      ans[i] = a[i - 1];\n    }\n    if (!flag) {\n      if (last > a[i]) {\n        ans[i] = last;\n        cnt[last] = 0;\n      } else\n        ans[i] = cst;\n    }\n    cnt[ans[i]] = 0;\n    while (last >= 0 && !cnt[last]) last--;\n  }\n  for (int i = 0; i < a[n - 1]; i++)\n    if (cnt[i] > 0) {\n      printf(\"%d\\n\", -1);\n      return 0;\n    }\n  for (int i = 0; i < n; i++) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int inf = 0x3f3f3f3f;\nint b[maxn];\nint a[maxn];\nint ma[maxn];\nint pre[maxn * 10];\nint _find(int x) { return x == pre[x] ? x : pre[x] = _find(pre[x]); }\nvoid _union(int x, int y) {\n  x = _find(x), y = _find(y);\n  if (x < y)\n    pre[x] = y;\n  else\n    pre[y] = x;\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < maxn * 10; ++i) pre[i] = i;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    ma[i] = max(ma[i - 1], a[i]);\n  }\n  bool flag = true;\n  int x = 0;\n  for (int i = n; i > 0; --i) {\n    if (a[i] > ma[i - 1])\n      b[i] = ma[i - 1];\n    else\n      b[i] = a[i] + 1;\n    b[i] = _find(b[i]);\n    _union(b[i], b[i] + 1);\n    _union(a[i], a[i] + 1);\n    x = max(x, a[i]);\n  }\n  if (!flag)\n    puts(\"-1\");\n  else {\n    for (int i = 1; i <= n; ++i) printf(\"%d%c\", b[i], i == n ? '\\n' : ' ');\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nimport io\nimport os\n\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n\ndef get_str():\n    return input().decode().strip()\n\n\ndef rint():\n    return map(int, input().split())\n\n\ndef oint():\n    return int(input())\n\n\nn = oint()\na = list(rint())\n\nans = [-1] * n\nused = set()\n\nfor i in range(1, n):\n    if a[i - 1] == a[i]:\n        continue\n    ans[i] = a[i - 1]\n    used.add(ans[i])\n\nused.add(a[-1])\ncur = 0\nfor i in range(n):\n    if ans[i] != -1:\n        continue\n    for j in range(cur, 10 ** 9, 1):\n        if j not in used:\n            ans[i] = j\n            cur = j + 1\n            break\nprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom collections import deque\n\nR = lambda : stdin.readline().strip()\nRL = lambda : list(map(int, R().split(' ')))\n\noutput = lambda x: stdout.write(str(x))\n\nn = int(R())\n\na = RL()\nMX = 10**5+5\nans = [0 if a[0] else -1]\n\nrem = []\n\nfor i in range(1,n):\n    if a[i] != a[i-1]:\n        rem.extend(list(range(a[i-1]+1,a[i])))\n        ans.append(a[i-1])\n    else:\n        ans.append(-1)\n\ni = 0\nfor j in range(n):\n    if len(rem) <= i and ans[j]==-1:\n        ans[j] = MX\n    elif ans[j] == -1:\n        ans[j] = rem[i]\n        i+=1\n\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math as mt\ninput=sys.stdin.buffer.readline  \n#t=int(input())\nt=1\nfor __ in range(t):\n    #n,x=map(int,input().split())\n    n=int(input())\n    l=list(map(int,input().split()))\n    b=[-1]*n\n    l1=[]\n    for i in range(1,n):\n        if l[i-1]!=l[i]:\n            l1.append([l[i-1],l[i]])\n    ch=0\n    l2=[]\n    for i in range(len(l1)):\n        for j in range(l1[i][0]+1,l1[i][1]):\n            l2.append(j)\n    b=[]\n    j=0\n    if l[0]==0:\n        if j<len(l2):\n            b.append(l2[j])\n            j+=1\n        else:\n            b.append(n+1)\n    else:\n        b.append(0)\n\n    for i in range(1,n):\n        if l[i]!=l[i-1]:\n            b.append(l[i-1])\n        else:\n            if j<len(l2):\n                b.append(l2[j])\n            else:\n                b.append(n+1)\n            j+=1\n    print(*b)        "
        },
        {
            "language": 3,
            "solution": "import sys\nfrom fractions import gcd\nfrom math import ceil,sqrt,sin,pi,tan\nfrom collections import defaultdict\nread=sys.stdin.buffer.readline\nimport heapq\nmi=lambda:map(int,read().split())\nli=lambda:list(mi())\ncin=lambda:int(read())\n\nfor _t in range(1):\n    n=cin()\n    a=li()\n    mex=[-1]*100005\n    li=a[0]\n    for i in range(1,n):\n        if li!=a[i]:\n            mex[li]=a[i]\n            li=a[i]\n    mex[li]=-2\n    li=0\n    for i in range(100005):\n        if mex[i]==-1:\n            li=i\n            break\n    x=li\n    for i in range(li+1,100005):\n        if mex[i]==-1:\n            mex[li]=i\n            li=i\n    mex[li]=-2\n    ans=[x]\n    le=a[0]\n    y=a[0]\n    x=mex[x]\n    \n    if a[0]>1:\n        print(-1)\n        exit(0)\n    for i in range(1,n):\n        if a[i]!=le:\n            le=a[i]\n            ans.append(y)\n            y=mex[y]\n        else:\n            ans.append(x)\n            x=mex[x]\n        if min(y,x)!=a[i]:\n            print(-1)\n            exit(0)\n    print(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[100005];\n  while (scanf(\"%d\", &n) == 1) {\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    int b[n + 2];\n    memset(b, -1, sizeof(b));\n    set<int> SET;\n    for (int i = 0; i < a[n - 1]; i++) SET.insert(i);\n    for (int i = 0; i < n; i++) {\n      if (i == 0) {\n        if (a[i] > 0) b[i] = 0, SET.erase(0);\n      } else if (a[i - 1] < a[i])\n        b[i] = a[i - 1], SET.erase(a[i - 1]);\n    }\n    for (int i = 0; i < n; i++) {\n      if (b[i] == -1) {\n        if (SET.size() == 0)\n          b[i] = n + 1;\n        else {\n          b[i] = *SET.begin();\n          SET.erase(SET.begin());\n        }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      printf(\"%d \", b[i]);\n    }\n    printf(\"\\n\");\n    SET.clear();\n  }\n  cerr << \"\\nTime : \" << 1.0 * clock() / CLOCKS_PER_SEC << \" sec.\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [x for x in map(int, input().split(' '))]\nb = []\nlast_seen = dict()\nno_use = set()\nfor i, v in enumerate(arr):\n    last_seen[v] = i\n    no_use.add(v)\nto_use = [x for x in range(n, -1, -1) if x not in no_use]\nfor i, v in enumerate(arr):\n    b.append(to_use.pop())\n    if last_seen[v] == i:\n        to_use.append(v)\n\nfor v in b:\n    print(v, end = ' ')\nprint()\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\n public class DemoC{\n    static  ArrayList<Integer>[] graph;\n       static int[] vis;\n\tpublic static void main(String[] args) {\n\tScanner sc=new Scanner(System.in);\n          \n             int n=sc.nextInt();\n            \n             int[] ar=new int[n+1];\n             int[] b=new int[n+1];\n             Arrays.fill(b,-1);\n             int[] vis=new int[n+2];\n             for(int i=1;i<=n;i++){\n                 ar[i]=sc.nextInt();\n             }\n               vis[ar[1]]=1;\n             for(int i=2;i<=n;i++){\n                 vis[ar[i]]=1;\n                 if(ar[i]!=ar[i-1]){\n                     b[i]=ar[i-1];\n                   \n                     \n                 }\n             }\n             int m=0;\n             for(int i=1;i<=n;i++){\n               \n               if(b[i]==-1){\n                   if(vis[m]==0){\n                       b[i]=m;\n                       vis[m]=1;\n                   }\n                     else{  \n                       while(vis[m]!=0){\n                           if(m<n+1){\n                       m++;}\n                       else{\n                           break;\n                       }\n                       }\n                       b[i]=m;\n                       vis[m]=1;\n                     }\n                   }\n               }\n             \n               StringBuffer ans=new StringBuffer();\n               for(int i=1;i<=n;i++){\n                  ans.append(b[i]);\n                  ans.append(\" \");\n               }\n             System.out.println(ans);\n           \n    \n  }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.stream.Collectors;\n\npublic class C_after {\n\n    public static void main(String[] args) {\n        final Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n\n        int[] a = new int[n];\n        int[] b = new int[n];\n\n        Set<Integer> s = new HashSet<>();\n\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n            b[i] = -1;\n\n            s.add(a[i]);\n        }\n\n        for (int i = 1; i < n; i++) {\n            if (a[i - 1] != a[i]) {\n                b[i] = a[i - 1];\n            }\n        }\n\n        int e = 0;\n        for (int i = 0; i < n; i++) {\n            while (s.contains(e)) {\n                e++;\n            }\n\n            if (b[i] == -1) {\n                b[i] = e;\n                e++;\n            }\n        }\n\n        System.out.println(Arrays.stream(b).mapToObj(String::valueOf).collect(Collectors.joining(\" \")));\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n\n        int n = in.nextInt();\n        int[] a = new int[n];\n        TreeMap<Integer, Integer> map = new TreeMap<Integer, Integer>();\n        for (int i=0;i<n;i++) {\n            a[i] = in.nextInt();\n            if (a[i] >= i+2) {\n                out.println(-1);\n                out.close();\n                return;\n            }\n            if (map.containsKey(a[i])) {\n                map.put(a[i], map.get(a[i])+1);\n            } else {\n                map.put(a[i], 1);\n            }\n        }\n\n        TreeSet<Integer> set = new TreeSet<Integer>();\n        TreeSet<Integer> set_in = new TreeSet<Integer>();\n        for (int i=0;i<n+1;i++) {\n            set.add(i);\n        }\n        int tmp_mex = 0;\n        int rem_val = 1;\n        while (map.containsKey(rem_val)) {\n            rem_val++;\n        }\n        int[] b = new int[n];\n        for (int i=0;i<n;i++) {\n            if (map.get(a[i]) > 1) {\n                map.put(a[i], map.get(a[i])-1);\n            } else {\n                map.remove(a[i]);\n            }\n            if (a[i] != tmp_mex) {\n                b[i] = tmp_mex;\n                set.remove(tmp_mex);\n                set_in.add(tmp_mex);\n                while (set_in.contains(tmp_mex)) {\n                    tmp_mex++;\n                }\n            } else { // a[i] == tmp_mex\n                b[i] = rem_val;\n                set.remove(rem_val);\n                set_in.add(rem_val);\n                while (set_in.contains(rem_val)) {\n                    rem_val++;\n                }\n                while (map.containsKey(rem_val)) {\n                    rem_val++;\n                }\n                // rem_val++;\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i=0;i<n;i++) {\n            sb.append(b[i]);\n            if (i != n-1) sb.append(\" \");\n        }\n        out.println(sb);\n\n        out.close();\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 1e6 + 10;\nconst int mod = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\nusing namespace std;\nint n, a[N], b[N], cnt;\nbool st[N];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; ++i) {\n    cin >> a[i];\n    st[a[i]] = true;\n  }\n  for (int i = 1; i <= n; ++i)\n    if (!st[i]) b[++cnt] = i;\n  int tmp = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (a[i] == a[i - 1])\n      cout << b[++tmp] << \" \";\n    else\n      cout << a[i - 1] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int, input().split()))\nl=[0]*(n+1)\nflag=0\nb=[]\nc=[]\n\nimport heapq\n\n#a.sort()\n\n\nfor i in range(n):\n  if a[i]>i+1:\n    flag=1\n    break\n  l[a[i]]+=1\n\nfor i in range(n+1):\n  if l[i]==0:\n    c.append(i)\nheapq.heapify(c)\n\nif flag==1:\n  print(-1)\nelse:\n  for i in range(n):\n    j=heapq.heappop(c)\n    b.append(j)\n    l[j]-=1\n    l[a[i]]-=1\n    if l[a[i]]==0:\n      heapq.heappush(c,a[i])\n  print(\" \".join(map(str,b)))"
        },
        {
            "language": 3,
            "solution": "def get_not_elements(a:list):\n    elements = set(a)\n    max_element = a[-1] +2 \n    not_elements = []\n    for i in range(0,max_element):\n        if not i in elements:\n            not_elements.append(i)\n    not_elements.reverse()\n    return not_elements\n\n#Ahora pensar esta funcion...\ndef is_valid(a : list):\n\n    for i in range(len(a)):\n        if a[i]-1 > i:\n            return False\n    return True\n\ndef generate_array(a : list):\n    \n    stack_ = get_not_elements(a)\n    b = [-1 for i in range(len(a))]\n    val = a[0]\n    for i in range(1,len(a)):\n        if a[i] != val:\n            b[i] = val\n            val = a[i]\n\n    if len(stack_)>0:\n        val = stack_.pop()\n    else:\n        val = a[0]\n\n    for i in range(len(a)):\n        if b[i] == -1:\n            b[i] = val\n\n            if len(stack_)>0:\n                val = stack_.pop()\n    return b \n\n\nif __name__ == \"__main__\":\n    size  =int(input())\n    array = [int(i) for i in input().split()]\n\n\n    if not is_valid(array):\n        print(-1)\n    else:\n        b = generate_array(array)\n        b = \" \".join([str(i) for i in b])\n        print(b)\n    "
        },
        {
            "language": 3,
            "solution": "\"\"\"\nCreated on Fri May  1 20:20:46 2020\n\n@author: sofianeLewin\n\"\"\"\n\nn = int(input())\nl = set()\na = list(map(int, input().split()))\nl = set(a)\n\nans = 0\nans_t= []\nv = []\nfor _ in range(n):\n    if(not _):\n        while(ans in l):\n            ans = ans + 1\n        ans_t.append(ans)\n        ans = ans + 1\n    elif(a[_] != a[_-1]):\n        ans_t.append(a[_-1])\n    else:\n        while(ans in l):\n            ans = ans + 1\n        ans_t.append(ans)\n        ans = ans + 1\n\nprint(*ans_t, sep =\" \")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int& v : a) cin >> v;\n  multiset<int> left;\n  for (int i = 0; i < a.back(); i++) left.insert(i);\n  for (int i = a.back(); i < n; i++) left.insert(1e6);\n  vector<int> ans(n, -1);\n  for (int i = 0; i < n; i++) {\n    if (i && a[i] != a[i - 1]) {\n      left.erase(a[i - 1]);\n      ans[i] = a[i - 1];\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (ans[i] == -1) {\n      ans[i] = *left.begin();\n      left.erase(left.begin());\n    }\n  }\n  for (int v : ans) cout << v << ' ';\n  cout << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.StringTokenizer;\n\npublic class C_Ehab_And_Prefix_MEXs {\n\tpublic static void main(String[] args) {\n\t\tMyScanner sc = new MyScanner();\n\t    PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\t    \n\t    int n = sc.nextInt();\n\t    \n\t    int[] vals = new int[n];\n\t    HashSet<Integer> appearing_vals = new HashSet<>();\n\t    int max = -1;\n\t    for(int i = 0; i < n; i++) {\n\t    \tvals[i] = sc.nextInt();\n\t    \tmax = Math.max(vals[i], max);\n\t    \tappearing_vals.add(vals[i]);\n\t    }\n\t    \n\t    LinkedList<Integer> vals_to_fill = new LinkedList<>();\n\t    for(int i = 0; i < max; i++) {\n\t    \tif(!appearing_vals.contains(i))\n\t    \t\tvals_to_fill.add(i);\n\t    }\n\t    \n\t    ArrayList<Integer> b = new ArrayList<>();\n\t    // inclusive\n\t    int last_checked = 0;\n\t    boolean possible = true;\n\t    boolean[] indexes_filled = new boolean[max + 1];\n\t    for(int i = 0; possible && i < n; i++) {\t    \t\n    \t\tif(i > 0 && vals[i] != vals[i - 1]) {\n    \t\t\tb.add(vals[i - 1]);\n    \t\t\tindexes_filled[vals[i - 1]] = true;\n    \t\t}else if(vals_to_fill.size() > 0) {\n\t    \t\tb.add(vals_to_fill.get(0));\n\t    \t\tindexes_filled[vals_to_fill.get(0)] = true;\n\t    \t\tvals_to_fill.remove(0);\n    \t\t}else {\n\t    \t\tb.add(500000);\n    \t\t}\n\t    \t\t\n\t    \tfor(int j = last_checked; j < vals[i]; j++) {\n\t    \t\tif(!indexes_filled[j]) {\n\t    \t\t\tpossible = false;\n\t    \t\t\tbreak;\n\t    \t\t}\n\t    \t}\n\t    \tlast_checked = vals[i];\n\t    }\n\t    \n\t    if(!possible) {\n\t    \tout.println(-1);\n\t    }else {\n\t    \tb.stream().forEach(x -> System.out.print(x + \" \"));\n\t    \tSystem.out.println();\n\t    }\n\t    out.close();\n\t}\n\t\n\tprivate static class MyScanner {\n\t\tBufferedReader br;\n\t    StringTokenizer st;\n\t \n\t    public MyScanner() {\n\t       br = new BufferedReader(new InputStreamReader(System.in));\n\t    }\n\t \n\t    String next() {\n\t    \twhile (st == null || !st.hasMoreElements()) {\n\t    \t\ttry {\n\t    \t\t\tst = new StringTokenizer(br.readLine());\n\t            \t\n\t    \t\t} catch (IOException e) {\n\t    \t\t\te.printStackTrace();\n\t            }\n\t          }\n\t    \treturn st.nextToken();\n\t   }\n\t \n\t   int nextInt() {\n\t\t   return Integer.parseInt(next());\n\t   }\n\t \n\t   long nextLong() {\n\t\t   return Long.parseLong(next());\n\t   }\n\t \n\t   double nextDouble() {\n\t\t   return Double.parseDouble(next());\n\t   }\n\t \n\t   String nextLine(){\n\t\t   String str = \"\";\n\t\t   try {\n\t\t\t   str = br.readLine();\n\t\t   } catch (IOException e) {\n\t\t\t   e.printStackTrace();\n\t\t   }\n\t\t   return str;\n\t   }\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nn = II()\na = LI()\nif a[0] not in [0,1] or a!=sorted(a):\n\tprint(-1)\nelse:\n\tboo = True\n\tfor i in range(n):\n\t\tif a[i]>i+1:\n\t\t\tboo = False\n\t\t\tbreak\n\tif boo == False:\n\t\tprint(-1)\n\telse:\n\t\tb = [-1]*n\n\t\tarr = list(range(n))\n\t\tif a[-1] <n:\n\t\t\tarr = list(range(n+1))\n\t\t\tarr.pop(a[-1])\n\t\td = {}\n\t\tfor i in arr:\n\t\t\td[i] = 0\n\t\tfor i in range(n-1,0,-1):\n\t\t\tif a[i]>a[i-1]:\n\t\t\t\tb[i] = a[i-1]\n\t\t\t\td[a[i-1]] = 1\n\t\ttemp = 0\n\t\tfor i in range(n):\n\t\t\tif b[i] == -1:\n\t\t\t\twhile(d[arr[temp]] == 1):\n\t\t\t\t\ttemp+=1\n\t\t\t\tb[i] = arr[temp]\n\t\t\t\ttemp+=1\n\t\tprint(*b)\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.TreeSet;\nimport java.util.ArrayList;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.Collections;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            int[] a = in.readIntArray(n);\n            long[] pos = new long[n + 10];\n            int old = 0;\n            TreeSet<Integer> unused = new TreeSet<>();\n            boolean bad = false;\n            for (int i = 0; i < n; i++) {\n                int u = a[i];\n                pos[u] = Long.max(pos[u], i + 1L);\n                unused.add(i);\n                if (u == old) {\n                    continue;\n                }\n\n                ArrayList<Long> al = new ArrayList<>();\n                for (int j = old; j < u; j++) al.add(((n + 1 - pos[j]) << 30) + j);\n                Collections.sort(al);\n                for (long X : al) {\n                    long p = n + 1 - (X >> 30);\n                    int v = (int) (X & ((1 << 30) - 1));\n                    int maxUnused = unused.isEmpty() ? -1 : unused.last();\n                    if (maxUnused < p) {\n                        bad = true;\n                        break;\n                    }\n                    a[maxUnused] = v;\n                    unused.remove(maxUnused);\n                }\n                if (bad) break;\n                old = u;\n            }\n            if (bad) {\n                out.println(-1);\n                return;\n            }\n            for (int p : unused) a[p] = n + 10;\n            for (int i = 0; i < n; i++) out.print(a[i] + \" \");\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void println(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n            writer.print('\\n');\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int[] readIntArray(int size) {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readInt();\n            }\n            return array;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MMMM = 1e6 + 1000;\nconst long long INF(0x3f3f3f3f3f3f3f3fll);\nconst int inf(0x3f3f3f3f);\nlong long pow_mod(long long x, long long n, long long mod) {\n  long long res = 1;\n  while (n) {\n    if (n & 1) res = res * x % mod;\n    x = x * x % mod;\n    n >>= 1;\n  }\n  return res;\n}\ntemplate <typename T>\nvoid read(T &res) {\n  bool flag = false;\n  char ch;\n  while (!isdigit(ch = getchar())) (ch == '-') && (flag = true);\n  for (res = ch - 48; isdigit(ch = getchar());\n       res = (res << 1) + (res << 3) + ch - 48)\n    ;\n  flag && (res = -res);\n}\nconst double pi = 3.1415926535897932384626;\nlong long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }\nlong long lcm(long long a, long long b) { return a / gcd(a, b) * b; }\nconst long long mod = 1e9 + 7;\nlong long a[MMMM], b[MMMM], UUU = 0;\nmap<long long, long long> ma;\nvoid solve(long long u) {\n  cin.tie(0);\n  ++u, ++UUU;\n  if (UUU < -5) {\n    return;\n  } else if (u == 5 && UUU == -5) {\n    cout << \"1\\n\";\n  }\n  ma.clear();\n  ++u, ++UUU;\n  if (UUU < -5) {\n    return;\n  }\n  long long n;\n  ++u, ++UUU;\n  cin >> n;\n  ++u, ++UUU;\n  queue<long long> q;\n  ++u, ++UUU;\n  if (UUU < -5) {\n    return;\n  }\n  for (long long i = 1; i <= n; i++) {\n    cin >> a[i], ma[a[i]]++;\n    ++u, ++UUU;\n    if (ma[a[i]] == 1) {\n      q.push(a[i]);\n      ++u, ++UUU;\n    }\n  }\n  bool ok = true;\n  ++u, ++UUU;\n  if (UUU < -5) {\n    return;\n  }\n  long long cnt = -1;\n  ++u, ++UUU;\n  if (UUU < -5) {\n    return;\n  }\n  if (a[1] > 1) {\n    cout << -1 << '\\n';\n    return;\n    ++u, ++UUU;\n  }\n  a[0] = a[1];\n  for (long long i = 1; i <= n; i++) {\n    if (UUU < -5) {\n      return;\n    } else if (a[i] == a[i - 1]) {\n      cnt++;\n      ++u, ++UUU;\n      while (ma[cnt] > 0) cnt++;\n      b[i] = cnt;\n      ++u, ++UUU;\n    } else {\n      b[i] = a[i - 1];\n      ++u, ++UUU;\n      if (q.front() != b[i]) {\n        ok = false;\n        ++u, ++UUU;\n        break;\n        ++u, ++UUU;\n        ++u, ++UUU;\n      }\n      q.pop();\n      ++u, ++UUU;\n      if (b[i] < a[i] - 1 && cnt < a[i] - 1) {\n        ok = false;\n        ++u, ++UUU;\n        break;\n      }\n    }\n  }\n  if (u < -6) {\n    cout << \"0\\n\";\n    return;\n  } else if (!ok) {\n    cout << -1 << '\\n';\n    ++u, ++UUU;\n  } else {\n    for (long long i = 1; i <= n; i++) cout << b[i] << ' ';\n    ++u, ++UUU;\n    cout << endl;\n  }\n}\nvoid dd() {\n  ++UUU;\n  if (UUU < -5) {\n    return;\n  }\n  solve(2);\n}\nsigned main() {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(0);\n  dd();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class First {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        //int a = 1;\n        int t;\n        //t = in.nextInt();\n        t = 1;\n        while (t > 0) {\n            //out.print(\"Case #\"+(a++)+\": \");\n            solver.call(in,out);\n            t--;\n        }\n        out.close();\n\n    }\n\n    static class TaskA {\n        public void call(InputReader in, PrintWriter out) {\n            int n;\n            n = in.nextInt();\n\n            int[] arr = new int[n];\n            int[] ans = new int[n+1];\n            int[] ans1;\n            Set<Integer> set = new HashSet<>();\n            Set<Integer> set1 = new HashSet<>();\n\n            for (int i = 0; i < n; i++) {\n                arr[i] = in.nextInt();\n                set.add(arr[i]);\n                ans[i] = -1;\n            }\n\n            int a = 0;\n\n            for (int i = 0; i < n; i++) {\n                if(a!=arr[i]){\n                    ans[i] = a;\n                    set1.add(a);\n                }\n                a = arr[i];\n            }\n            a = 0;\n            for (int i = 0; i < n; i++) {\n                if(ans[i]==-1){\n                    while(set.contains(a) || set1.contains(a)){\n                        a++;\n                    }\n                    ans[i] = a;\n                    set1.add(a);\n                }\n            }\n\n            ans1 = Arrays.copyOf(ans, n);\n\n            ans[n] = arr[n-1];\n\n            shuffleSort(ans);\n            a = 0;\n\n            for (int i = 0; i <= n; i++) {\n                if(ans[i]!=a){\n                    out.println(-1);\n                    return;\n                }\n                a++;\n            }\n\n            for (int i = 0; i < n; i++) {\n                out.print(ans1[i]+\" \");\n            }\n            out.println();\n\n        }\n    }\n\n    static int gcd(int a, int b)\n    {\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    static int lcm(int a, int b)\n    {\n        return (a / gcd(a, b)) * b;\n    }\n\n    static class answer implements Comparable<answer>{\n        int a;\n        int b;\n\n        public answer(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(answer o) {\n            return o.a - this.a;\n        }\n\n        @Override\n        public boolean equals(Object o){\n            if(o instanceof answer){\n                answer c = (answer)o;\n                return a == c.a && b == c.b;\n            }\n            return false;\n        }\n    }\n\n    static class answer1 implements Comparable<answer1>{\n        int a, b, c;\n\n        public answer1(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n\n        }\n\n        @Override\n        public int compareTo(answer1 o) {\n            return this.a - o.a;\n        }\n    }\n\n    static long gcd(long a, long b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static void sort(long[] a) {\n        ArrayList<Long> l=new ArrayList<>();\n        for (long i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n\n    static final Random random=new Random();\n\n    static void shuffleSort(int[] a) {\n        int n=a.length;\n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n), temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        Arrays.sort(a);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = []\nc = [0] * (n + 1)\nd = [0] * (n + 1)\nfor i in range(n):\n    c[a[i]] += 1\nu = 0\nv = c.index(0)\nfor i in range(n):\n    if a[i] > u:\n        b.append(u)\n        d[u] = 1\n        while u <= n and d[u] == 1:\n            u += 1\n        if u>v:\n            v=u\n            while v <= n and c[v] != 0:\n                v += 1\n    else:\n        b.append(v)\n        d[v] = 1\n        c[v] = -1\n        while v <= n and c[v] != 0:\n            v += 1\nprint(*b)\n"
        },
        {
            "language": 3,
            "solution": "n =  int(input())\na = list(map(int,input().split()))\ng = []\nc = a[0]\nfor u in range(c):\n    g.append(u)\nfor i in range(1,n):\n    if a[i] == a[i-1]:\n        pass\n    else:\n        for u in range(a[i-1]+1,a[i]):\n            g.append(u)\nif len(g) == 0:\n    g.append(a[-1]+1)\ng += [g[0]]*n    \nb = [g[0]]\nres = True\nj = 1\nfor i in range(1,n):\n    if a[i] > a[i-1]:\n        b.append(a[i-1])\n    else:\n        b.append(g[j])\n        j += 1\nfor i in range(n):\n    print(b[i], end = ' ')\nprint()"
        },
        {
            "language": 3,
            "solution": "# key missing \"\"\nfrom collections import defaultdict\nn = int(input())\narr = [int(i) for i in input().split()]\nb = [-1]*n\navail = defaultdict(int)\nfor i in range(1,n):\n    if arr[i] != arr[i-1]:\n        b[i] = arr[i-1]\n        avail[b[i]] = 1\nfor i in range(n):\n    avail[arr[i]] = 1\nstart = 0\n#print(*b)\nfor i in range(n):\n    if b[i] == -1:\n        while avail[start] == 1:\n            start += 1\n        b[i] = start\n        avail[start] = 1\nprint(*b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        }
    ]
}