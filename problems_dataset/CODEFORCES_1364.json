{
    "name": "1364_C. Ehab and Prefix MEXs",
    "source": "CODEFORCES",
    "description": "Given an array a of length n, find another array, b, of length n such that:\n\n  * for each i (1 \u2264 i \u2264 n) MEX(\\\\{b_1, b_2, \u2026, b_i\\})=a_i. \n\n\n\nThe MEX of a set of integers is the smallest non-negative integer that doesn't belong to this set.\n\nIf such array doesn't exist, determine this.\n\nInput\n\nThe first line contains an integer n (1 \u2264 n \u2264 10^5) \u2014 the length of the array a.\n\nThe second line contains n integers a_1, a_2, \u2026, a_n (0 \u2264 a_i \u2264 i) \u2014 the elements of the array a. It's guaranteed that a_i \u2264 a_{i+1} for 1\u2264 i < n.\n\nOutput\n\nIf there's no such array, print a single line containing -1.\n\nOtherwise, print a single line containing n integers b_1, b_2, \u2026, b_n (0 \u2264 b_i \u2264 10^6)\n\nIf there are multiple answers, print any.\n\nExamples\n\nInput\n\n\n3\n1 2 3\n\n\nOutput\n\n\n0 1 2 \n\nInput\n\n\n4\n0 0 0 2\n\n\nOutput\n\n\n1 3 4 0 \n\nInput\n\n\n3\n1 1 3\n\n\nOutput\n\n\n0 2 1 \n\nNote\n\nIn the second test case, other answers like [1,1,1,0], for example, are valid.",
    "difficulty": "C",
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ],
    "rating": 1600,
    "public_test": [
        {
            "input": "3\n1 2 3\n",
            "output": "0 1 2\n"
        },
        {
            "input": "3\n1 1 3\n",
            "output": "0 2 1\n"
        },
        {
            "input": "4\n0 0 0 2\n",
            "output": "1 3 4 0\n"
        }
    ],
    "generated_test": [
        {
            "input": "3\n1 1 1\n",
            "output": "0 2 3 \n"
        },
        {
            "input": "4\n0 0 0 3\n",
            "output": "1 2 4 0 \n"
        },
        {
            "input": "4\n0 0 0 1\n",
            "output": "2 3 4 0 \n"
        },
        {
            "input": "3\n0 2 3\n",
            "output": "1 0 2 \n"
        },
        {
            "input": "7\n0 0 2 2 3 5 6\n",
            "output": "1 4 0 7 2 3 5 \n"
        },
        {
            "input": "3\n0 1 1\n",
            "output": "2 0 3 \n"
        },
        {
            "input": "4\n0 0 1 3\n",
            "output": "2 4 0 1 \n"
        },
        {
            "input": "4\n0 0 1 1\n",
            "output": "2 3 0 4 \n"
        },
        {
            "input": "3\n0 2 2\n",
            "output": "1 0 3 \n"
        },
        {
            "input": "7\n0 0 2 2 3 5 7\n",
            "output": "1 4 0 6 2 3 5 \n"
        },
        {
            "input": "7\n0 0 2 4 5 5 6\n",
            "output": "1 3 0 2 4 7 5 \n"
        },
        {
            "input": "3\n0 1 3\n",
            "output": "2 0 1 \n"
        },
        {
            "input": "3\n1 1 2\n",
            "output": "0 3 1 \n"
        },
        {
            "input": "4\n0 0 0 4\n",
            "output": "1 2 3 0 \n"
        },
        {
            "input": "7\n0 0 0 2 3 5 7\n",
            "output": "1 4 6 0 2 3 5 \n"
        },
        {
            "input": "3\n1 2 2\n",
            "output": "0 1 3 \n"
        },
        {
            "input": "3\n0 1 2\n",
            "output": "3 0 1 \n"
        },
        {
            "input": "3\n0 0 1\n",
            "output": "2 3 0 \n"
        },
        {
            "input": "4\n0 0 0 0\n",
            "output": "1 2 3 4 \n"
        },
        {
            "input": "7\n0 0 2 2 3 3 6\n",
            "output": "1 4 0 5 2 7 3 \n"
        },
        {
            "input": "3\n0 0 3\n",
            "output": "1 2 0 \n"
        },
        {
            "input": "3\n0 0 2\n",
            "output": "1 3 0 \n"
        },
        {
            "input": "7\n0 0 2 3 3 3 6\n",
            "output": "1 4 0 2 5 7 3 \n"
        },
        {
            "input": "3\n0 0 0\n",
            "output": "1 2 3 \n"
        },
        {
            "input": "7\n0 0 2 3 3 4 6\n",
            "output": "1 5 0 2 7 3 4 \n"
        },
        {
            "input": "7\n0 0 2 2 5 5 7\n",
            "output": "1 3 0 4 2 6 5 \n"
        },
        {
            "input": "4\n0 1 1 2\n",
            "output": "3 0 4 1 \n"
        },
        {
            "input": "4\n0 1 1 3\n",
            "output": "2 0 4 1 \n"
        },
        {
            "input": "7\n0 0 2 2 2 3 6\n",
            "output": "1 4 0 5 7 2 3 \n"
        },
        {
            "input": "7\n0 0 3 3 3 3 6\n",
            "output": "1 2 0 4 5 7 3 \n"
        },
        {
            "input": "4\n0 1 1 4\n",
            "output": "2 0 3 1 \n"
        },
        {
            "input": "7\n0 0 2 2 2 3 4\n",
            "output": "1 5 0 6 7 2 3 \n"
        },
        {
            "input": "7\n0 0 2 3 5 5 6\n",
            "output": "1 4 0 2 3 7 5 \n"
        },
        {
            "input": "4\n0 0 2 3\n",
            "output": "1 4 0 2 \n"
        },
        {
            "input": "7\n0 0 1 2 3 5 7\n",
            "output": "4 6 0 1 2 3 5 \n"
        },
        {
            "input": "7\n0 0 2 3 3 5 6\n",
            "output": "1 4 0 2 7 3 5 \n"
        },
        {
            "input": "7\n0 0 2 3 3 4 7\n",
            "output": "1 5 0 2 6 3 4 \n"
        },
        {
            "input": "7\n0 0 0 2 5 5 7\n",
            "output": "1 3 4 0 2 6 5 \n"
        },
        {
            "input": "4\n1 1 1 3\n",
            "output": "0 2 4 1 \n"
        },
        {
            "input": "7\n0 0 2 2 2 2 6\n",
            "output": "1 3 0 4 5 7 2 \n"
        },
        {
            "input": "4\n0 0 1 4\n",
            "output": "2 3 0 1 \n"
        },
        {
            "input": "7\n0 0 1 2 2 5 7\n",
            "output": "3 4 0 1 6 2 5 \n"
        },
        {
            "input": "7\n0 0 0 4 5 5 7\n",
            "output": "1 2 3 0 4 6 5 \n"
        },
        {
            "input": "7\n0 0 0 2 2 2 6\n",
            "output": "1 3 4 0 5 7 2 \n"
        },
        {
            "input": "4\n0 0 2 4\n",
            "output": "1 3 0 2 \n"
        },
        {
            "input": "7\n0 0 1 2 2 4 7\n",
            "output": "3 5 0 1 6 2 4 \n"
        },
        {
            "input": "7\n0 0 0 0 2 2 6\n",
            "output": "1 3 4 5 0 7 2 \n"
        },
        {
            "input": "4\n0 0 2 2\n",
            "output": "1 3 0 4 \n"
        },
        {
            "input": "7\n0 0 0 0 0 2 6\n",
            "output": "1 3 4 5 7 0 2 \n"
        },
        {
            "input": "7\n0 0 2 3 4 5 6\n",
            "output": "1 7 0 2 3 4 5 \n"
        },
        {
            "input": "4\n0 1 1 1\n",
            "output": "2 0 3 4 \n"
        },
        {
            "input": "7\n0 0 2 3 5 5 7\n",
            "output": "1 4 0 2 3 6 5 \n"
        },
        {
            "input": "4\n1 1 1 2\n",
            "output": "0 3 4 1 \n"
        },
        {
            "input": "4\n1 1 1 4\n",
            "output": "0 2 3 1 \n"
        },
        {
            "input": "4\n0 0 3 3\n",
            "output": "1 2 0 4 \n"
        },
        {
            "input": "7\n0 0 1 2 3 5 6\n",
            "output": "4 7 0 1 2 3 5 \n"
        },
        {
            "input": "4\n1 1 2 3\n",
            "output": "0 4 1 2 \n"
        },
        {
            "input": "4\n0 0 1 2\n",
            "output": "3 4 0 1 \n"
        },
        {
            "input": "7\n0 1 1 2 2 4 7\n",
            "output": "3 0 5 1 6 2 4 \n"
        },
        {
            "input": "7\n0 0 2 4 5 5 7\n",
            "output": "1 3 0 2 4 6 5 \n"
        },
        {
            "input": "7\n1 1 1 2 2 4 7\n",
            "output": "0 3 5 1 6 2 4 \n"
        },
        {
            "input": "7\n1 1 1 2 3 4 7\n",
            "output": "0 5 6 1 2 3 4 \n"
        },
        {
            "input": "7\n1 1 1 1 3 4 7\n",
            "output": "0 2 5 6 1 3 4 \n"
        },
        {
            "input": "7\n1 1 1 1 3 5 7\n",
            "output": "0 2 4 6 1 3 5 \n"
        },
        {
            "input": "7\n1 1 1 2 3 5 7\n",
            "output": "0 4 6 1 2 3 5 \n"
        },
        {
            "input": "4\n1 1 1 1\n",
            "output": "0 2 3 4 \n"
        },
        {
            "input": "7\n0 0 0 2 3 5 6\n",
            "output": "1 4 7 0 2 3 5 \n"
        },
        {
            "input": "7\n0 1 2 2 3 5 7\n",
            "output": "4 0 1 6 2 3 5 \n"
        },
        {
            "input": "7\n0 0 2 2 3 6 6\n",
            "output": "1 4 0 5 2 3 7 \n"
        },
        {
            "input": "7\n0 1 1 2 3 5 6\n",
            "output": "4 0 7 1 2 3 5 \n"
        },
        {
            "input": "7\n0 0 0 3 5 5 7\n",
            "output": "1 2 4 0 3 6 5 \n"
        },
        {
            "input": "7\n0 0 0 0 2 2 7\n",
            "output": "1 3 4 5 0 6 2 \n"
        },
        {
            "input": "4\n0 1 3 3\n",
            "output": "2 0 1 4 \n"
        },
        {
            "input": "7\n0 0 1 4 5 5 7\n",
            "output": "2 3 0 1 4 6 5 \n"
        },
        {
            "input": "7\n1 1 1 2 4 5 7\n",
            "output": "0 3 6 1 2 4 5 \n"
        },
        {
            "input": "7\n0 0 0 1 3 5 6\n",
            "output": "2 4 7 0 1 3 5 \n"
        },
        {
            "input": "7\n0 1 1 2 2 5 6\n",
            "output": "3 0 4 1 7 2 5 \n"
        },
        {
            "input": "7\n0 1 1 2 4 5 7\n",
            "output": "3 0 6 1 2 4 5 \n"
        },
        {
            "input": "7\n0 1 1 1 3 5 6\n",
            "output": "2 0 4 7 1 3 5 \n"
        },
        {
            "input": "7\n0 0 2 2 3 4 6\n",
            "output": "1 5 0 7 2 3 4 \n"
        },
        {
            "input": "7\n0 1 3 3 3 3 6\n",
            "output": "2 0 1 4 5 7 3 \n"
        }
    ]
}