{
    "name": "1238_B. Kill 'Em All",
    "source": "CODEFORCES",
    "description": "Ivan plays an old action game called Heretic. He's stuck on one of the final levels of this game, so he needs some help with killing the monsters.\n\nThe main part of the level is a large corridor (so large and narrow that it can be represented as an infinite coordinate line). The corridor is divided into two parts; let's assume that the point x = 0 is where these parts meet.\n\nThe right part of the corridor is filled with n monsters \u2014 for each monster, its initial coordinate x_i is given (and since all monsters are in the right part, every x_i is positive).\n\nThe left part of the corridor is filled with crusher traps. If some monster enters the left part of the corridor or the origin (so, its current coordinate becomes less than or equal to 0), it gets instantly killed by a trap.\n\nThe main weapon Ivan uses to kill the monsters is the Phoenix Rod. It can launch a missile that explodes upon impact, obliterating every monster caught in the explosion and throwing all other monsters away from the epicenter. Formally, suppose that Ivan launches a missile so that it explodes in the point c. Then every monster is either killed by explosion or pushed away. Let some monster's current coordinate be y, then:\n\n  * if c = y, then the monster is killed; \n  * if y < c, then the monster is pushed r units to the left, so its current coordinate becomes y - r; \n  * if y > c, then the monster is pushed r units to the right, so its current coordinate becomes y + r. \n\n\n\nIvan is going to kill the monsters as follows: choose some integer point d and launch a missile into that point, then wait until it explodes and all the monsters which are pushed to the left part of the corridor are killed by crusher traps, then, if at least one monster is still alive, choose another integer point (probably the one that was already used) and launch a missile there, and so on.\n\nWhat is the minimum number of missiles Ivan has to launch in order to kill all of the monsters? You may assume that every time Ivan fires the Phoenix Rod, he chooses the impact point optimally.\n\nYou have to answer q independent queries.\n\nInput\n\nThe first line contains one integer q (1 \u2264 q \u2264 10^5) \u2014 the number of queries.\n\nThe first line of each query contains two integers n and r (1 \u2264 n, r \u2264 10^5) \u2014 the number of enemies and the distance that the enemies are thrown away from the epicenter of the explosion.\n\nThe second line of each query contains n integers x_i (1 \u2264 x_i \u2264 10^5) \u2014 the initial positions of the monsters.\n\nIt is guaranteed that sum of all n over all queries does not exceed 10^5.\n\nOutput\n\nFor each query print one integer \u2014 the minimum number of shots from the Phoenix Rod required to kill all monsters.\n\nExample\n\nInput\n\n\n2\n3 2\n1 3 5\n4 1\n5 2 3 5\n\n\nOutput\n\n\n2\n2\n\nNote\n\nIn the first test case, Ivan acts as follows: \n\n  * choose the point 3, the first monster dies from a crusher trap at the point -1, the second monster dies from the explosion, the third monster is pushed to the point 7; \n  * choose the point 7, the third monster dies from the explosion. \n\n\n\nIn the second test case, Ivan acts as follows: \n\n  * choose the point 5, the first and fourth monsters die from the explosion, the second monster is pushed to the point 1, the third monster is pushed to the point 2; \n  * choose the point 2, the first monster dies from a crusher trap at the point 0, the second monster dies from the explosion. ",
    "difficulty": "B",
    "tags": [
        "greedy",
        "sortings"
    ],
    "rating": 1300,
    "public_test": [
        {
            "input": "2\n3 2\n1 3 5\n4 1\n5 2 3 5\n",
            "output": "2\n2\n"
        }
    ],
    "generated_test": [
        {
            "input": "1\n2 1383\n1 2 3\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n1 3 5\n4 1\n5 4 3 5\n",
            "output": "2\n3\n"
        },
        {
            "input": "2\n3 2\n1 1 5\n4 1\n5 4 3 5\n",
            "output": "1\n3\n"
        },
        {
            "input": "2\n3 2\n0 1 5\n4 1\n5 2 3 5\n",
            "output": "1\n2\n"
        },
        {
            "input": "1\n2 1383\n1 2 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n1 2 1\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n0 1 5\n4 1\n5 4 3 5\n",
            "output": "1\n3\n"
        },
        {
            "input": "1\n2 501\n1 2 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n1 3 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n1 6 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n1 6 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n0 6 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 501\n0 6 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 176\n0 6 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 176\n0 4 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 176\n0 4 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 144\n0 4 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 1383\n1 4 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 3\n1 2 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 1383\n1 2 0\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n1 1 5\n3 1\n5 4 3 5\n",
            "output": "1\n3\n"
        },
        {
            "input": "1\n2 400\n1 2 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 501\n1 2 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n1 3 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 564\n1 6 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n1 4 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n0 10 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 501\n0 6 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 176\n0 6 4\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 229\n0 4 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 1383\n1 3 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 3\n1 2 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 2313\n1 2 0\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n1 1 5\n3 1\n5 1 3 5\n",
            "output": "1\n2\n"
        },
        {
            "input": "1\n2 400\n1 4 1\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n0 0 5\n4 1\n5 2 3 5\n",
            "output": "1\n2\n"
        },
        {
            "input": "1\n2 501\n2 3 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 612\n1 6 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n0 19 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 501\n0 11 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 176\n0 6 5\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 431\n0 4 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 1615\n1 3 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 3271\n1 2 0\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n1 1 5\n3 1\n2 1 3 5\n",
            "output": "1\n2\n"
        },
        {
            "input": "1\n2 645\n1 4 1\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n0 0 7\n4 1\n5 2 3 5\n",
            "output": "1\n2\n"
        },
        {
            "input": "1\n1 501\n2 3 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 591\n1 6 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n0 19 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 501\n0 11 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 176\n0 1 5\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 1615\n1 3 3\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 1\n1 1 5\n3 1\n2 1 3 5\n",
            "output": "1\n2\n"
        },
        {
            "input": "1\n2 645\n1 4 0\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n0 0 7\n4 1\n5 3 3 5\n",
            "output": "1\n2\n"
        },
        {
            "input": "1\n1 501\n2 3 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 415\n0 19 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 501\n0 11 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 85\n0 1 5\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 1615\n1 5 3\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 1\n1 1 3\n3 1\n2 1 3 5\n",
            "output": "1\n2\n"
        },
        {
            "input": "1\n2 901\n1 4 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n2 3 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 415\n0 19 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 810\n0 11 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 25\n1 5 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 901\n1 4 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 501\n1 3 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 476\n0 19 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 810\n0 11 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 901\n1 4 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 501\n1 3 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 476\n0 34 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 810\n0 20 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 901\n0 4 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 501\n1 6 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 476\n0 34 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 810\n0 20 1\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 901\n0 5 2\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 501\n1 6 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 553\n0 34 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n2 901\n0 5 4\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 501\n1 4 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 553\n0 28 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n1 501\n1 7 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 553\n0 9 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 1102\n0 9 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 1102\n0 16 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 936\n0 16 0\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 2395\n1 2 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n3 3\n1 1 3\n",
            "output": "1\n"
        },
        {
            "input": "2\n3 2\n1 0 5\n4 1\n5 2 3 5\n",
            "output": "1\n2\n"
        }
    ],
    "solution": [
        {
            "language": 3,
            "solution": "import sys\ndef input():\n    str = sys.stdin.readline()\n    return str[:-1]\ndef unique(x, first, last):\n    if first == last:\n        return last\n    result = first\n    while first + 1 != last:\n        first += 1\n        if(x[result] != x[first]):\n            result += 1\n            x[result] = x[first]\n    return result + 1\n \n \nq = int(input())\nfor _ in range(q):\n    n, r = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort(reverse=True)\n    siz = unique(x, 0, len(x))\n    rc = 0\n    tt = 0\n    for i in range(siz):\n        a = x[i]\n        if rc < a:\n            rc += r\n            tt += 1\n        else:\n            break\n    print(tt)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\noutputs = []\nfor __ in range(int(stdin.readline().strip())):\n    n, r = map(int, stdin.readline().strip().split())\n    x = sorted([int(num) for num in stdin.readline().strip().split()])\n    prev = None\n    missile = 0\n    while x:\n        if prev is None:\n            missile += 1\n        elif x[-1] == prev:\n            pass\n        elif x[-1]-(missile*r) > 0:\n            missile += 1\n        prev = x[-1]\n        x.pop()\n    outputs.append(missile)\nfor output in outputs:\n    stdout.write(f'{output}\\n')\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n, r = map(int, input().split())\n    cur = sorted(set(map(int, input().split())), reverse=True)\n    ans, d = 0, 0\n    for i in cur:\n        if (i <= d):\n            break\n        d += r\n        ans += 1\n    print(ans)\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long maxn = 3e5 + 10;\nlong long N, R, arr[maxn], T;\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> T;\n  while (T--) {\n    cin >> N >> R;\n    for (register long long i = 1; i <= N; ++i) {\n      cin >> arr[i];\n    }\n    sort(arr + 1, arr + 1 + N);\n    N = unique(arr + 1, arr + 1 + N) - arr - 1;\n    long long sum = 0, ans = 0;\n    for (long long i = N; i >= 1; --i) {\n      if (arr[i] - sum <= 0) {\n        break;\n      }\n      ++ans;\n      sum += R;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  srand(time(NULL));\n  ;\n  int n, r, q, i, j;\n  cin >> q;\n  while (q) {\n    cin >> n >> r;\n    set<int> s;\n    int c = 0;\n    for (i = 0; i < n; i++) {\n      cin >> j;\n      s.insert(j);\n    }\n    vector<int> v;\n    for (auto it = s.begin(); it != s.end(); it++) {\n      j = *it;\n      v.push_back(j);\n    }\n    n = v.size();\n    reverse(v.begin(), v.end());\n    for (i = 0; i < n; i++) {\n      if ((v[i] - (r * c)) <= 0) {\n        break;\n      }\n      c++;\n    }\n    cout << i << endl;\n    q--;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    answer = \"\"\n    for query in range(int(input())):\n        ans = \"\"\n        n,r = map(int,input().split(' '))\n        monsters = list(set(list(map(int,input().split(' ')))))\n        monsters.sort(reverse = True)\n        shots = 0\n\n        for monster in monsters:\n            if shots*r >= monster:\n                ans = shots\n                break\n            else:\n                shots += 1\n        if ans == \"\":\n            ans = shots\n        answer += str(ans) + \"\\n\"\n    print(answer)\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "R = lambda:map(int, input().split())\nq = int(input())\ns = \"\"\nfor _ in range(q):\n    n, r = map(int, input().split())\n    num = 0\n    for x in sorted(set(R()))[::-1]:\n        if x-num*r>0:\n            num += 1\n        else:\n            break\n    s += str(num) + \"\\n\"\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "#------------------------template--------------------------#\nimport os\nimport sys\nfrom math import *\nfrom collections import *\n#from fractions import *\nfrom bisect import *\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n#-------------------------code---------------------------#\n#vsInput()\n\nfor _ in range(Int()):\n    n,r=value()\n    a=sorted(set(array()),reverse=True)\n    c=0\n    for i in a:\n        if(i-c*r<=0):\n            break\n        else:\n            c+=1\n    print(c)\n    "
        },
        {
            "language": 3,
            "solution": "R=lambda:map(int,input().split())\nq,=R()\na=[]\nfor _ in[0]*q:n,r=R();a+=sum(x-k*r>0for\nk,x in enumerate(sorted(set(R()))[::-1])),\nprint(' '.join(map(str,a)))"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.Set;\nimport java.util.TreeMap;\n\npublic class _Rough{\n        public static void main(String[] args) throws IOException {\n\n            BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n            BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n            int t = Integer.parseInt(in.readLine());\n            while (t-- > 0) {\n                String[] s = in.readLine().split(\" \");\n                int n = Integer.parseInt(s[0]);\n                int r = Integer.parseInt(s[1]);\n\n                s = in.readLine().split(\" \");\n                int[] ar = new int[n];\n\n                for (int i = 0; i < n; i++) {\n                    ar[i] = Integer.parseInt(s[i]);\n                }\n\n                TreeMap<Integer, Integer> map = new TreeMap<>();\n                for (int i = 0; i < n; i++) {\n                    map.put(ar[i], 1);\n                }\n                Set<Integer> list1 = map.keySet();\n                ArrayList<Integer> newlist = new ArrayList<>(list1);\n                \n                int mul = 0;\n                int ans = 0;\n                for (int i = newlist.size() - 1; i >= 0; i--) {\n                    int curr = newlist.get(i);\n                    curr -= (mul * r);\n                    mul++;\n                    if (curr <= 0) {\n                        break;\n                    } else {\n                        ans++;\n                    }\n                }\n                out.write(ans + \"\\n\");\n            }\n            out.flush();\n        }\n        }\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Max = 2e6 + 10;\nconst int Mod = 1e9 + 7;\nconst long long int Inf = 1LL << 62;\nint ar[Max];\nint main() {\n  int t, n, k;\n  scanf(\"%d\", &t);\n  for (int tc = 1; tc <= t; tc++) {\n    scanf(\"%d %d\", &n, &k);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &ar[i]);\n    }\n    sort(ar + 1, ar + n + 1);\n    long long int tot = 0;\n    int ans = 0;\n    for (int i = n; i >= 1; i--) {\n      for (int j = i; ar[i] == ar[j] && j; j--) {\n        i = j;\n      }\n      if (ar[i] - tot <= 0) {\n        break;\n      }\n      ans++;\n      tot += k;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "I=lambda:map(int,input().split())\nl=[]\nfor i in range(int(input())):\n    n,r=I()\n    a=list(set(I()))\n    a.sort(reverse=True)\n    n=len(a)\n    for i in range(n):\n        if a[i]<=(i*r):break\n        elif i==n-1:i=n\n    l.append(str(i))\nprint(\"\\n\".join(l))"
        },
        {
            "language": 3,
            "solution": "def solution(s):\n    from sys import stdin\n    input = stdin.readline\n    for i in range(t):\n        p, r = map(int, input().split())\n        s = list(map(int, set(input().split())))\n        s.sort(reverse=True)\n        res = acc = 0\n        for k in s:\n            if k - acc <= 0: break\n            res += 1\n            acc += r\n        yield res\n\n\n\nt = int(input())\nprint(\"\\n\".join(map(str, solution(t))))\n\n"
        },
        {
            "language": 3,
            "solution": "import os, sys, atexit\nfrom io import BytesIO, StringIO\n \ninput = BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n\nfor i in range(int(input())):\n    n, r = map(int, input().split())\n    x = sorted(map(int, input().split()))\n    i = n - 1\n    j = 0\n    c = 0\n    ans = 0\n    #print(x)\n    while i >= 0 and i >= j and j < n:\n        ans += 1\n        d = x[i]\n        c += r\n        while i >= 0 and x[i] == d:\n            #print(\"!\", i, x[i], d, c)\n            i -= 1\n        \n        while j < n and x[j] <= c:\n            #print('!!', j, x[j], c)\n            j += 1\n    #print(i, j)\n    print(ans)\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    long long a[n];\n    for (long long i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    long long sum = 1, k = 1;\n    for (long long i = n - 2; i >= 0; i--) {\n      if (a[i] == a[i + 1]) continue;\n      if (a[i] <= r * k) {\n        break;\n      }\n      sum++;\n      k++;\n    }\n    cout << sum << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \n \n \npublic class Main {\n\t\n\tstatic InputReader in = new InputReader(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\t\n\tstatic int oo = (int)1e9;\n\tstatic int mod = 1_000_000_007;\n\t\n\tstatic int[] di = {1, 0, 0, -1};\n\tstatic int[] dj = {0, -1, 1, 0};\n\t\n \n\t\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint t = in.nextInt();\n\t\twhile(t --> 0) {\n\t\t\tint n = in.nextInt();\n\t\t\tint r = in.nextInt();\n\t\t\tint[] a = in.nextIntArray(n);\n\t\t\tshuffle(a);\n\t\t\tArrays.sort(a);\n\t\t\tint i = n-1;\n\t\t\tint ans = 0;\n\t\t\tint push = 0;\n\t\t\twhile(i >= 0 && a[i] - push > 0) {\n\t\t\t\tans++;\n\t\t\t\tint j = i;\n\t\t\t\twhile(j >= 0 && a[j] == a[i])\n\t\t\t\t\tj--;\n\t\t\t\tif(j < 0)\n\t\t\t\t\tbreak;\n\t\t\t\tpush += r;\n\t\t\t\ti = j;\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t\t\n\t\tout.close();\n\t}\n\t\n\tstatic int incr(int[] arr, int n, int i, int k, int prev, int max) {\n\t\tint num = prev + 1;\n\t\twhile(i < n && k > 0) {\n\t\t\tif(num > max)\n\t\t\t\treturn -1;\n\t\t\tarr[i] = num;\n\t\t\ti++; num++; k--;\n\t\t}\n\t\treturn k == 0 ? i : -1;\n\t}\n\t\n\tstatic int mult(int[] arr, int n, int i, int k, int prev, int max) {\n\t\tint num = prev * 2;\n\t\twhile(i < n && k > 0) {\n\t\t\tif(num > max)\n\t\t\t\treturn -1;\n\t\t\tarr[i] = num;\n\t\t\ti++; num *= 2; k--;\n\t\t}\n\t\treturn k == 0 ? i : -1;\n\t}\n\t\n\t\n\tstatic boolean inside(int i, int j, int n, int m) {\n\t\treturn i >= 0 && i < n && j >= 0 && j < m;\n\t}\n\t\n\t\n\tstatic long pow(long a, long n, long mod) {\n\t\tif(n == 0)\n\t\t\treturn 1;\n\t\tif(n % 2 == 1)\n\t\t\treturn a * pow(a, n-1, mod) % mod;\n\t\tlong x = pow(a, n / 2, mod);\n\t\treturn x * x % mod;\n\t}\n\t\n\t\n\tstatic class SegmentTree {\n\t\tint n;\n\t\tchar[] a;\n\t\tint[] seg;\n\t\tint DEFAULT_VALUE = 0;\n\t\t\n\t\tpublic SegmentTree(char[] a, int n) {\n\t\t\tsuper();\n\t\t\tthis.a = a;\n\t\t\tthis.n = n;\n\t\t\tseg = new int[n * 4 + 1];\n\t\t\tbuild(1, 0, n-1);\n\t\t}\n\t\t\n\t\tprivate int build(int node, int i, int j) {\n\t\t\tif(i == j) {\n\t\t\t\tint x = a[i] - 'a';\n\t\t\t\treturn seg[node] = (1<<x);\n\t\t\t}\n\t\t\tint first = build(node * 2, i, (i+j) / 2);\n\t\t\tint second = build(node * 2 + 1, (i+j) / 2 + 1, j);\n\t\t\treturn seg[node] = combine(first, second);\n\t\t}\n\t\t\n\t\tint update(int k, char value) {\n\t\t\treturn update(1, 0, n-1, k, value);\n\t\t}\n\t\t\n\t\tprivate int update(int node, int i, int j, int k, char value) {\n\t\t\tif(k < i || k > j)\n\t\t\t\treturn seg[node];\n\t\t\tif(i == j && j == k) {\n\t\t\t\ta[k] = value;\n\t\t\t\tint x = a[i] - 'a';\n\t\t\t\treturn seg[node] = (1<<x);\n\t\t\t}\n\t\t\tint m = (i + j) / 2;\n\t\t\tint first = update(node * 2, i, m, k, value);\n\t\t\tint second = update(node * 2 + 1, m + 1, j, k, value);\n\t\t\treturn seg[node] = combine(first, second);\n\t\t}\n\t\t\n\t\tint query(int l, int r) {\n\t\t\treturn query(1, 0, n-1, l, r);\n\t\t}\n\t\t\n\t\tprivate int query(int node, int i, int j, int l, int r) {\n\t\t\tif(l <= i && j <= r)\n\t\t\t\treturn seg[node];\n\t\t\tif(j < l || i > r)\n\t\t\t\treturn DEFAULT_VALUE;\n\t\t\tint m = (i + j) / 2;\n\t\t\tint first = query(node * 2, i, m, l, r);\n\t\t\tint second = query(node * 2 + 1, m+1, j, l, r);\n\t\t\treturn combine(first, second);\n\t\t}\n \n\t\tprivate int combine(int a, int b) {\n\t\t\treturn a | b;\n\t\t}\n\t}\n\t\n\tstatic class DisjointSet {\n\t\tint n;\n\t\tint[] g;\n\t\tint[] h;\n\t\tpublic DisjointSet(int n) {\n\t\t\tsuper();\n\t\t\tthis.n = n;\n\t\t\tg = new int[n];\n\t\t\th = new int[n];\n\t\t\tfor(int i = 0; i < n; ++i) {\n\t\t\t\tg[i] = i;\n\t\t\t\th[i] = 1;\n\t\t\t}\n\t\t}\n\t\tint find(int x) {\n\t\t\tif(g[x] == x)\n\t\t\t\treturn x;\n\t\t\treturn g[x] = find(g[x]);\n\t\t}\n\t\tvoid union(int x, int y) {\n\t\t\tx = find(x); y = find(y);\n\t\t\tif(x == y)\n\t\t\t\treturn;\n\t\t\tif(h[x] >= h[y]) {\n\t\t\t\tg[y] = x;\n\t\t\t\tif(h[x] == h[y])\n\t\t\t\t\th[x]++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tg[x] = y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tstatic int[] getPi(char[] a) {\n\t\tint m = a.length;\n\t\tint j = 0;\n\t\tint[] pi = new int[m];\n\t\tfor(int i = 1; i < m; ++i) {\n\t\t\twhile(j > 0 && a[i] != a[j])\n\t\t\t\tj = pi[j-1];\n\t\t\tif(a[i] == a[j]) {\n\t\t\t\tpi[i] = j + 1;\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn pi;\n\t}\n\t\n\tstatic long lcm(long a, long b) {\n\t\treturn a * b / gcd(a, b);\n\t}\n\t\n\tstatic boolean nextPermutation(int[] a) {\n\t\tfor(int i = a.length - 2; i >= 0; --i) {\n\t\t\tif(a[i] < a[i+1]) {\n\t\t\t\tfor(int j = a.length - 1; ; --j) {\n\t\t\t\t\tif(a[i] < a[j]) {\n\t\t\t\t\t\tint t = a[i];\n\t\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\t\ta[j] = t;\n\t\t\t\t\t\tfor(i++, j = a.length - 1; i < j; ++i, --j) {\n\t\t\t\t\t\t\tt = a[i];\n\t\t\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\t\t\ta[j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t\n\tstatic void shuffle(int[] a) {\n\t\tRandom r = new Random();\n\t\tfor(int i = a.length - 1; i > 0; --i) {\n\t\t\tint si = r.nextInt(i);\n\t\t\tint t = a[si];\n\t\t\ta[si] = a[i];\n\t\t\ta[i] = t;\n\t\t}\n\t}\n\t\n\tstatic void shuffle(long[] a) {\n\t\tRandom r = new Random();\n\t\tfor(int i = a.length - 1; i > 0; --i) {\n\t\t\tint si = r.nextInt(i);\n\t\t\tlong t = a[si];\n\t\t\ta[si] = a[i];\n\t\t\ta[i] = t;\n\t\t}\n\t}\n\t\n\tstatic int lower_bound(int[] a, int n, int k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\tstatic int lower_bound(long[] a, int n, long k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\t\n\tstatic int gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\tstatic long gcd(long a, long b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\t\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint first, second;\n \n\t\tpublic Pair(int first, int second) {\n\t\t\tsuper();\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n \n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.first != o.first ? this.first - o.first : this.second - o.second;\n\t\t}\n\t\t\n//\t\t@Override\n//\t\tpublic int compareTo(Pair o) {\n//\t\t\treturn this.first != o.first ? o.first - this.first : o.second - this.second;\n//\t\t}\n \n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + first;\n\t\t\tresult = prime * result + second;\n\t\t\treturn result;\n\t\t}\n \n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tPair other = (Pair) obj;\n\t\t\tif (first != other.first)\n\t\t\t\treturn false;\n\t\t\tif (second != other.second)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t}\n}\n \n \n \nclass InputReader {\n \n\tprivate final InputStream stream;\n\tprivate final byte[] buf = new byte[8192];\n\tprivate int curChar, snumChars;\n \n\tpublic InputReader(InputStream st) {\n\t\tthis.stream = st;\n\t}\n \n\tpublic int read() {\n\t\tif (snumChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= snumChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (snumChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n \n\tpublic int nextInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n \n\tpublic long nextLong() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n \n\tpublic int[] nextIntArray(int n) {\n\t\tint a[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt();\n\t\t}\n\t\treturn a;\n\t}\n \n\tpublic String readString() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n \n\tpublic String nextLine() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isEndOfLine(c));\n\t\treturn res.toString();\n\t}\n \n\tpublic boolean isSpaceChar(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n \n\tprivate boolean isEndOfLine(int c) {\n\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t}\n \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long vis[100004];\nint main() {\n  long long t;\n  cin >> t;\n  {\n    while (t--) {\n      int n, m;\n      cin >> n >> m;\n      vector<int> op;\n      int i;\n      for (i = 0; i < n; i++) {\n        int x;\n        cin >> x;\n        if (!vis[x]) op.push_back(x);\n        vis[x] = 1;\n      }\n      sort(op.begin(), op.end());\n      long long ans = 0;\n      long long how = 0;\n      for (i = op.size() - 1; i >= 0; i--) {\n        vis[op[i]] = 0;\n        if (op[i] - how <= 0) continue;\n        ans++;\n        how += m;\n      }\n      cout << ans << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import deque, defaultdict\nfrom sys import stdin, stdout\ninput = stdin.readline\n# print = stdout.write\nlistin = lambda : list(map(int, input().split()))\nmapin = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    n, r = mapin()\n    a = listin()\n    a = list(set(a))\n    a.sort()\n    z = deque(a)\n    count = 0\n    while z:\n        z.pop()\n        count+=1\n        if z:\n            while z[0] <= r*count:\n                z.popleft()\n                if not z:\n                    break\n    print(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint x[N];\nint solve() {\n  int n, r;\n  scanf(\"%d %d\", &n, &r);\n  for (int i = 0; i < n; ++i) scanf(\"%d\", x + i);\n  sort(x, x + n);\n  reverse(x, x + n);\n  int ans = 1;\n  for (int i = 1; i < n; ++i) {\n    if (x[i] != x[i - 1]) {\n      if (x[i] - ans * 1LL * r <= 0) return ans;\n      ++ans;\n    }\n  }\n  return ans;\n}\nint main() {\n  int test;\n  scanf(\"%d\", &test);\n  while (test--) printf(\"%d\\n\", solve());\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    set<int> s;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      s.insert(x);\n    }\n    int b = s.size();\n    int i = 0;\n    for (auto it = s.begin(); it != s.end(); it++) {\n      if ((*it - r * (b - i - 1)) > 0) {\n        cout << b - i << endl;\n        break;\n      }\n      i++;\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math,sys\nfrom collections import Counter, defaultdict, deque\n#for deque append(),pop(),appendleft(),popleft(),count()\nfrom sys import stdin, stdout\ninput = stdin.readline\nlili=lambda:list(map(int,sys.stdin.readlines()))\nli = lambda:list(map(int,input().split()))\ndef gcd(x,y):\n    while(y):\n        x, y = y, x % y \n    return x \n\n\nq=int(input())\nfor j in range(0,q):\n    n,r=li()\n    a=li()\n    #a=list(set(a))\n    a.sort()\n    c=0\n    i=n-1\n    while(i>=0):\n        if(a[i]-(c*r)<=0):\n            break\n        else:\n            c+=1\n        k=i\n        while(k>=0 and a[k]==a[i]):\n            k-=1\n        i=k\n\n    print(c)\n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\nvoid solvetestcase(int tcn) {\n  int n, r;\n  cin >> n >> r;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  sort(a.begin(), a.end());\n  vector<int> b;\n  int last = -1;\n  int i = 0;\n  while (i < n) {\n    if (a[i] != last) {\n      b.push_back(a[i]);\n      last = a[i];\n    }\n    i += 1;\n  }\n  n = b.size();\n  if (n == 1)\n    cout << 1 << '\\n';\n  else {\n    for (int i = n - 1; i >= 0; i--) {\n      if (i == 0)\n        cout << n << '\\n';\n      else {\n        if (b[i - 1] <= (n - i) * r) {\n          cout << (n - i) << '\\n';\n          return;\n        }\n      }\n    }\n  }\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t = 1;\n  cin >> t;\n  for (int T = 1; T < t + 1; T++) {\n    solvetestcase(T);\n  }\n};\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class sol {\n  public static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream), 32768);\n        tokenizer = null;\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public boolean hasNext() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (Exception e) {\n                return false;\n            }\n        }\n        return tokenizer.hasMoreTokens();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    public String nextLine() {\n        String str = \"\";\n        try {\n            str = reader.readLine();\n        } catch (IOException e) {\n            return null;\n        }\n        return str;\n    }\n  }  \n  public static void main(String[] args) {\n    InputReader in;\n    try {\n    //   in = new InputReader(new FileInputStream(\"in\"));\n       in = new InputReader(System.in);\n    } catch (Exception e) {\n      return;\n    }\n    int tc = in.nextInt();\n    while (tc-- > 0) {\n      int n = in.nextInt(), r = in.nextInt();\n      int[] a = new int[n];\n      for (int i = 0; i < n; i++) a[i] = in.nextInt();\n      Random rd = new Random(System.currentTimeMillis() + 1L);\n      for (int i = 0; i < n; i++) {\n        int p = rd.nextInt(i + 1);\n        int t = a[i];\n        a[i] = a[p];\n        a[p] = t;\n      }\n      Arrays.sort(a);\n      int ans = 0;\n      for (int i = n - 1; i >= 0; i--) {\n        if (a[i] <= ans * r) break;\n        int t = a[i];\n        while (i - 1 >= 0 && a[i - 1] == t) i--;\n        ans++;\n      }\n      System.out.println(ans);\n    }\n  }\n}"
        },
        {
            "language": 4,
            "solution": " import java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.math.*;\n\nimport static java.lang.Math.*;\n\nimport java.util.concurrent.ThreadLocalRandom;\n\npublic class Sol implements Runnable {\n\n  long mod = (long) 1e9 + 7;\n\n  void solve(InputReader in, PrintWriter w) {\n    int t = in.nextInt();\n    while(t-- > 0) {\n      int n = in.nextInt(), r = in.nextInt();\n      List<Integer> list = new ArrayList<>();\n      Set<Integer> set = new HashSet<>();\n      for(int i = 0; i < n; i++) {\n        int x = in.nextInt();\n        if(!set.contains(x)) {\n          set.add(x);\n          list.add(x);\n        }\n      }\n      int res = 0;\n      Collections.sort(list);\n\n      for(int i = list.size() - 1; i >= 0; i--) {\n        int nowPos = list.get(i) - (res * r);\n        if(nowPos > 0) {\n          res++;\n        }\n      }\n\n      w.println(res);\n    }\n  }\n\n  // ************* Code ends here ***************\n\n  void init() throws Exception {\n    //Scanner in;\n    InputReader in;\n    PrintWriter w;\n    boolean online = false;\n\n    String common_in_fileName = \"\\\\Samplein\";\n    String common_out_fileName = \"\\\\in\";\n    int test_files = 0;\n\n    for (int file_no = 0; file_no <= test_files; file_no++) {\n\n      String x = \"\" + file_no;\n      if (x.length() == 1) x = \"0\" + x;\n\n      String in_fileName = common_in_fileName;// + \"\" + x;\n      String out_fileName = common_out_fileName + \"\" + x;\n\n      if (online) {\n        //in = new Scanner(new File(in_fileName + \".txt\"));\n        in = new InputReader(new FileInputStream(new File(in_fileName + \".txt\")));\n        w = new PrintWriter(new FileWriter(out_fileName + \".txt\"));\n      } else {\n        //in = new Scanner(System.in);\n        in = new InputReader(System.in);\n        w = new PrintWriter(System.out);\n      }\n\n      solve(in, w);\n      w.close();\n    }\n  }\n\n  public void run() {\n    try {\n      init();\n    } catch (Exception e) {\n      System.out.println(e);\n      e.printStackTrace();\n    }\n  }\n\n  static class InputReader {\n\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private SpaceCharFilter filter;\n\n    public InputReader(InputStream stream) {\n      this.stream = stream;\n    }\n\n    public int read() {\n      if (numChars == -1) {\n        throw new InputMismatchException();\n      }\n\n      if (curChar >= numChars) {\n        curChar = 0;\n        try {\n          numChars = stream.read(buf);\n        } catch (IOException e) {\n          throw new InputMismatchException();\n        }\n\n        if (numChars <= 0) {\n          return -1;\n        }\n      }\n      return buf[curChar++];\n    }\n\n    public String nextLine() {\n      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n      String str = \"\";\n      try {\n        str = br.readLine();\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n      return str;\n    }\n\n    public int nextInt() {\n      int c = read();\n\n      while (isSpaceChar(c)) {\n        c = read();\n      }\n\n      int sgn = 1;\n\n      if (c == '-') {\n        sgn = -1;\n        c = read();\n      }\n\n      int res = 0;\n      do {\n        if (c < '0' || c > '9') {\n          throw new InputMismatchException();\n        }\n        res *= 10;\n        res += c - '0';\n        c = read();\n      } while (!isSpaceChar(c));\n\n      return res * sgn;\n    }\n\n    public long nextLong() {\n      int c = read();\n      while (isSpaceChar(c)) {\n        c = read();\n      }\n      int sgn = 1;\n      if (c == '-') {\n        sgn = -1;\n        c = read();\n      }\n      long res = 0;\n\n      do {\n        if (c < '0' || c > '9') {\n          throw new InputMismatchException();\n        }\n        res *= 10;\n        res += c - '0';\n        c = read();\n      } while (!isSpaceChar(c));\n      return res * sgn;\n    }\n\n    public double nextDouble() {\n      int c = read();\n      while (isSpaceChar(c)) {\n        c = read();\n      }\n      int sgn = 1;\n      if (c == '-') {\n        sgn = -1;\n        c = read();\n      }\n      double res = 0;\n      while (!isSpaceChar(c) && c != '.') {\n        if (c == 'e' || c == 'E') {\n          return res * Math.pow(10, nextInt());\n        }\n        if (c < '0' || c > '9') {\n          throw new InputMismatchException();\n        }\n        res *= 10;\n        res += c - '0';\n        c = read();\n      }\n      if (c == '.') {\n        c = read();\n        double m = 1;\n        while (!isSpaceChar(c)) {\n          if (c == 'e' || c == 'E') {\n            return res * Math.pow(10, nextInt());\n          }\n          if (c < '0' || c > '9') {\n            throw new InputMismatchException();\n          }\n          m /= 10;\n          res += (c - '0') * m;\n          c = read();\n        }\n      }\n      return res * sgn;\n    }\n\n    public String readString() {\n      int c = read();\n      while (isSpaceChar(c)) {\n        c = read();\n      }\n      StringBuilder res = new StringBuilder();\n      do {\n        res.appendCodePoint(c);\n        c = read();\n      } while (!isSpaceChar(c));\n\n      return res.toString();\n    }\n\n    public boolean isSpaceChar(int c) {\n      if (filter != null) {\n        return filter.isSpaceChar(c);\n      }\n      return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public String next() {\n      return readString();\n    }\n\n    public interface SpaceCharFilter {\n\n      public boolean isSpaceChar(int ch);\n    }\n  };\n\n  public static void main(String args[]) throws Exception {\n    new Thread(null, new Sol(), \"Sol\", 1 << 28).start();\n  }\n}"
        },
        {
            "language": 1,
            "solution": "from collections import Counter\nfrom sys import stdin, stdout\nraw_input = stdin.readline\n\nfor q in xrange(input()):\n    n,r=map(int,raw_input().split())\n    l=map(int,raw_input().split())\n    l=(Counter(l).keys())\n    l.sort()\n    c=0\n    ans=0\n    n=len(l)\n    for i in xrange(n-1,-1,-1):\n        if l[i]>c:\n            ans+=1\n            c+=r\n        else:\n            break\n    stdout.write(str(ans)+'\\n')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double EPS = 3e-16;\nconst long long MAXN = (1e4 + 2);\nconst long long INF = 1e9 + 7;\nvoid file() {\n  freopen(\n      \"choose\"\n      \".in\",\n      \"r\", stdin);\n  if (0)\n    freopen(\n        \"choose\"\n        \".out\",\n        \"w\", stdout);\n}\nbool TPrime(long long n) {\n  if (n < 2) return 0;\n  for (long long i = 2; i * i <= n; i++) {\n    if (n % i == 0) return 0;\n  }\n  return 1;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int q;\n  cin >> q;\n  int n, r;\n  while (q--) {\n    cin >> n >> r;\n    set<int> pew;\n    for (int i = 1, x; i <= n; i++) {\n      cin >> x;\n      pew.insert(x);\n    }\n    long long ans = 0;\n    set<int>::iterator it = pew.end();\n    it--;\n    for (; it != pew.begin(); it--) {\n      ans += ((*it) - ans * r > 0);\n    }\n    ans += ((*it) - ans * r > 0);\n    cout << ans;\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing PII = pair<int, int>;\nusing PLL = pair<ll, ll>;\ntemplate <class T>\nusing V = vector<T>;\ntemplate <class T>\nusing VV = V<V<T>>;\ntemplate <typename T>\nvoid view(T e) {\n  std::cerr << e << std::endl;\n}\ntemplate <typename T>\nvoid view(const std::vector<T> &v) {\n  for (const auto &e : v) {\n    std::cerr << e << \" \";\n  }\n  std::cerr << std::endl;\n}\ntemplate <typename T>\nvoid view(const std::vector<std::vector<T>> &vv) {\n  cerr << endl;\n  int cnt = 0;\n  for (const auto &v : vv) {\n    cerr << cnt << \"th : \";\n    view(v);\n    cnt++;\n  }\n  cerr << endl;\n}\nstd::ostream &operator<<(std::ostream &dest, __int128_t value) {\n  std::ostream::sentry s(dest);\n  if (s) {\n    __uint128_t tmp = value < 0 ? -value : value;\n    char buffer[128];\n    char *d = std::end(buffer);\n    do {\n      --d;\n      *d = \"0123456789\"[tmp % 10];\n      tmp /= 10;\n    } while (tmp != 0);\n    if (value < 0) {\n      --d;\n      *d = '-';\n    }\n    int len = std::end(buffer) - d;\n    if (dest.rdbuf()->sputn(d, len) != len) {\n      dest.setstate(std::ios_base::badbit);\n    }\n  }\n  return dest;\n}\ntemplate <class T, class K>\nbool chmax(T &a, const K b) {\n  if (a < b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\ntemplate <class T, class K>\nbool chmin(T &a, const K b) {\n  if (b < a) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\nconst int inf = 1001001001;\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\nll rddiv(ll a, ll b) { return a / b - ((a ^ b) < 0 && a % b); }\nll power(ll a, ll p) {\n  ll ret = 1;\n  while (p) {\n    if (p & 1) {\n      ret = ret * a;\n    }\n    a = a * a;\n    p >>= 1;\n  }\n  return ret;\n}\nll modpow(ll a, ll p, ll mod) {\n  ll ret = 1;\n  while (p) {\n    if (p & 1) {\n      ret = ret * a % mod;\n    }\n    a = a * a % mod;\n    p >>= 1;\n  }\n  return ret;\n}\nll rudiv(ll a, ll b) { return a / b + ((a ^ b) > 0 && a % b); }\nconst ll mod = 1000000007;\nint main() {\n  cin.tie(nullptr);\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    V<int> x(n);\n    for (ll i = 0; i < n; ++i) cin >> x[i];\n    sort((x).begin(), (x).end());\n    x.erase(unique((x).begin(), (x).end()), x.end());\n    int ans = 0;\n    int cnt = 0;\n    for (ll i = ((int)(x).size()); i--;) {\n      if (x[i] - cnt <= 0) break;\n      ans++, cnt += r;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "/**\n * Created by sosrivastava on Sep 07/09/19, 2019\n */\n\nimport javafx.util.Pair;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\npublic class Template2 {\n    static final long MOD = 10^9 + 7;\n\n    static Map<Integer, Boolean> vis;\n    static int[] dp2;\n    public static void main(String[] args) throws IOException {\n\n        vis = new HashMap<>();\n        FastScanner sc=new FastScanner();\n\n       int t = sc.nextInt();\n\n\n       while(t-->0) {\n          int n = sc.nextInt();\n          int r = sc.nextInt();\n            Map<Integer,Boolean> fre = new HashMap<>();\n          int[] arr = new int[n];\n          for(int i=0;i<n;i++) {\n              arr[i]= sc.nextInt();\n                fre.put(arr[i],true);\n          }\n           int n2 = fre.entrySet().size();\n           int[] arr2 = new int[fre.entrySet().size()];\n           int ind = 0;\n          for(Integer k : fre.keySet()) {\n              arr2[ind] = k;\n              ind++;\n          }\n          Arrays.sort(arr2);\n\n          int ans = n2;\n          for(int x=1;x<n2;x++) {\n              if(arr2[n2-x-1]<=r*x) {\n                  ans=x;\n                  break;\n              }\n\n\n          }\n           System.out.println(ans);\n\n       }\n\n\n    }\n\n\n    static class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n\n\n\n\n/*\n\n\n5\n10\n1 2\n1 3\n1 4\n2 5\n3 5\n4 5\n2 3\n3 4\n2 4\n1 5\n\n\n */\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef count_shot():\n    num_enemies, r = [int(elem) for elem in input().split(\" \")]\n    pos = [int(elem) for elem in input().split(\" \")]\n    num_shots = 0\n    tmp = set()\n    for enemy in pos:\n        tmp.add(enemy)\n    enemies =[]\n    for enemy in tmp:\n        enemies.append(math.ceil(enemy/r))\n    \n    enemies.sort(reverse=True)\n    # left = 0\n    while num_shots < len(enemies):\n        num_shots += 1\n\n        if num_shots != len(enemies) and num_shots >= enemies[num_shots]:\n            return num_shots\n\n    return num_shots\n\nnum_queries = int(input())\nanswers = []\nfor _ in range(num_queries):    \n    answers.append(count_shot())\n\nfor ans in answers:\n    print(ans)\n    \n\n\n\n# import math\n\n\n# def process():\n#     num_enemies, r = [int(elem) for elem in input().split(\" \")]\n#     pos = [int(elem) for elem in input().split(\" \")]\n#     tmp = set()\n#     for enemy in pos:\n#         tmp.add(enemy)\n#     enemies = []\n#     for enemy in tmp:\n#         enemies.append(math.ceil(enemy/r))\n\n#     enemies.sort(reverse=True)\n#     shot = 0\n#     while shot < len(enemies):\n#         shot += 1\n#         if shot != len(enemies) and shot >= enemies[shot]:\n#             return shot\n#     return(shot)\n\n\n# def main():\n#     queue = int(input())\n#     answer = []\n#     while queue > 0:\n#         ans = process()\n#         answer.append(ans)\n#         queue += -1\n#     for i in answer:\n#         print(i)\n\n\n# main()\n\n\n\n\n \n\n\n\n        \n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.stream.Collectors;\n\npublic class CF1238B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        StringBuilder sb=new StringBuilder();\n        int q =  sc.nextInt();\n        for (int i=0; i<q; i++) {\n            int n = sc.nextInt();\n            int r = sc.nextInt();\n            int count = 0;\n            Set<Integer> set = new HashSet<>();\n            for(int j=0; j<n; j++) {\n                set.add(sc.nextInt());\n            }\n            List<Integer> mList = new ArrayList<>(set);\n            mList = mList.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList());\n            //\u627e\u51fa count * r == \u5f53\u524d\u503c\u7684\n            for (int k= 0; k< mList.size(); k++){\n                if(mList.get(k) - count*r > 0) {\n                    count ++;\n                }\n            }\n            sb.append(count).append(\"\\n\");\n        }\n        System.out.println(sb);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = list(set(map(int, stdin.readline().split())))\n    monsters.sort()\n\n    shots, acc = 0, 0\n    while monsters and monsters[-1] - acc > 0:\n        monsters.pop()\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + \"\\n\"\n\nstdout.write(result)\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    import sys\n    input = sys.stdin.readline\n\n    t = int(input())\n    for _ in range(t):\n        N, r = map(int, input().split())\n        A = list(map(int, input().split()))\n        A = list(set(A))\n        A.sort()\n        N = len(A)\n        ans = 0\n        y = 0\n        for i in range(N-1, -1, -1):\n            if A[i] <= y:\n                break\n            ans += 1\n            y += r\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "INT_MAX=10**30+7\nMOD=10**9+7\nfrom sys import stdin,stdout\ndef INPUT():return list(int(i) for i in stdin.readline().split())\ndef LIST_1D_ARRAY(n):return [0 for _ in range(n)]\ndef LIST_2D_ARRAY(m,n):return [[0 for _ in range(n)]for _ in range(m)]\n#stdout only takes string as argument\n#=====================================================================\n#to claculate the min mod sum differnce of consecutive of a whole subsequence\ns=''\nfor i in range(int(stdin.readline())):\n    n,r=INPUT()\n    C=INPUT()\n    b=0\n    A=list(set(C))\n    n=len(A)\n    #print(A)\n    A.sort()\n    while(n>0 and A[-1]>=0):\n        A[-1]=A[-1]-b*r\n        if A[-1]<=0:\n            break\n        else:\n            b+=1\n            A.pop()\n            n-=1\n    stdout.write(str(b)+\"\\n\")\n    #print()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int q;\n  cin >> q;\n  for (long long int qq = 0; qq < q; qq++) {\n    long long int n, r, i;\n    cin >> n >> r;\n    set<long long int> s;\n    for (long long int i = 0; i < n; i++) {\n      long long int a;\n      cin >> a;\n      s.insert(a);\n    }\n    std::vector<long long int> v;\n    auto it = s.begin();\n    for (; it != s.end(); it++) {\n      v.push_back(*it);\n    }\n    int y = 0;\n    for (i = 1; i < v.size(); i++) {\n      if ((v[v.size() - i - 1] - i * r) <= 0) {\n        cout << i << \"\\n\";\n        y = 1;\n        break;\n      }\n    }\n    if (y == 0) {\n      cout << v.size() << \"\\n\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5, OO = 0x3f3f3f3f;\nint n, r;\nint a[N];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a, a + n);\n    reverse(a, a + n);\n    int x = r, cnt = 1;\n    for (int i = 1; i < n; i++) {\n      if (a[i] == a[i - 1]) continue;\n      if (a[i] > r) {\n        cnt++;\n        r += x;\n      } else\n        break;\n    }\n    cout << cnt << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def killMonsters(qtdPerguntas, distancia, numInimigos): \n  for i in range(0,qtdPerguntas):\n\n      local_atual = []\n      local_escolhido = []\n      \n      for j in range(0, len(distancia[i])):\n          local_atual.append(int(distancia[i][j]))\n      \n      a = set(local_atual)\n      local_escolhido = list(a)\n      local_escolhido.sort(reverse=True)\n      count = 0\n      \n      for j in range(0,len(local_escolhido)):\n          atack_atual = (numInimigos[i] * j)\n\n          if local_escolhido[j] > atack_atual:\n              count += 1\n          else:\n              print(count)\n              break\n          \n          if count == len(local_escolhido):\n              print(count)\n              break\n\ndef killEmAll(qtdPerguntas):\n  numInimigos = []\n  distancia = []\n\n  for i in range(0, qtdPerguntas):\n    numInimigos.append(int(input().split(\" \")[1]))\n    distancia.append(input().split(\" \"))\n  \n  killMonsters(qtdPerguntas, distancia, numInimigos)\n\n\nqtdPerguntas = int(input())\n\nkillEmAll(qtdPerguntas)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n, r;\n    cin >> n >> r;\n    long long int a[n];\n    set<long long int> s;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      s.insert(a[i]);\n    }\n    set<long long int> ss;\n    int ii = 0;\n    for (auto i : s) {\n      long long int te = i;\n      te -= (s.size() - ii - 1) * r;\n      ii++;\n      ss.insert(te);\n    }\n    int ind = 0;\n    for (auto i : ss) {\n      if (i > 0) {\n        break;\n      }\n      ind++;\n    }\n    cout << ss.size() - ind << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfor i in range(int(input())):\n    n,r=map(int,input().split())\n    b=list(set(list(map(int,input().split()))))\n    b.sort(reverse=True)\n    j = 0\n    s = 0\n    n = len(b)\n    while j < n and b[j]>s:\n        j += 1\n        s += r\n\n    print(j)\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "def getLista():\n    lista = list(set(list(map(int, raw_input().split()))))\n    lista.sort(reverse=True)\n    return lista\n    \nq = int(raw_input())\n\nfor _ in range(q):\n    n, r = map(int, raw_input().split())\n    lista = getLista()\n    result = -1\n    for i in range(len(lista)):\n        if lista[i] % r == 0:\n            x = min(i+1, lista[i] // r)\n        else:\n            x = min(i+1, ((lista[i] // r)+1))\n        if x > result:\n            result = x\n    print(result)"
        },
        {
            "language": 4,
            "solution": "//package credit;\n\nimport java.awt.*;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class sas {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int t=scanner.nextInt();\n        PrintWriter printWriter=new PrintWriter(System.out);\n        for (int i = 0; i < t; i++) {\n            int a=scanner.nextInt();\n            int b=scanner.nextInt();\n            Set<Integer> set=new HashSet<Integer>();\n            ArrayList<Integer> arr=new ArrayList<Integer>();\n            for (int j = 0; j < a; j++) {\n                int j1=scanner.nextInt();\n                if(set.contains(j1)){\n                    continue;\n                }\n                set.add(j1);\n                arr.add(j1);\n            }\n            int j=set.size()-1;\n            int cnt=0;\n            Collections.sort(arr);\n            for (int k = j; k >=0; k--) {\n                    if (arr.get(k) - cnt* b <= 0) {\n                        break;\n                    }\n                    else{\n                        cnt++;\n                    }\n            }\n            printWriter.println(cnt);\n        }\n        printWriter.flush();\n        printWriter.close();\n    }\n\n    public static long gcd(long a,long b){\n        if(b==0){\n            return a;\n        }\n        return gcd(b,a%b);\n    }\n}\nclass Pair{\n    long x;\n    long y;\n    public Pair(long x,long y){\n        this.x=x;\n        this.y=y;\n    }\n}\nclass Sorting implements Comparator<Pair>{\n    public int compare(Pair p1,Pair p2){\n        if(p1.y==p2.y){\n            return Long.compare(p2.x,p1.x);\n        }\n        else{\n            return Long.compare(p1.y,p2.y);\n        }\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long long n, r, temp;\n    cin >> n >> r;\n    set<long long> s;\n    for (int i = 0; i < n; i++) {\n      cin >> temp;\n      s.insert(temp);\n    }\n    vector<long long> grid(s.begin(), s.end());\n    bool flag = 0;\n    for (int i = 0; i < grid.size(); i++) {\n      if (grid[i] > r * (grid.size() - i - 1)) {\n        cout << grid.size() - i << endl;\n        flag = 1;\n        break;\n      }\n    }\n    if (flag == 0) {\n      cout << \"1\" << endl;\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q, n;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int n, x, y, num[100001];\n    scanf(\"%d %d\", &n, &x);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &num[i]);\n    sort(num, num + n);\n    reverse(num, num + n);\n    num[n] = num[0] + 1;\n    int c = 0, cnt = 0;\n    for (int i = 0; i < n; i++) {\n      if (num[i] <= c) break;\n      while (num[i] == num[i + 1]) {\n        i++;\n      }\n      cnt++;\n      c = c + x;\n    }\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nt=int(stdin.readline())\n\nwhile(t>0):\n\ta=[int(x)for x in stdin.readline().split()]\n\n\tn=a[0]\n\tr=a[1]\n\n\n\ta=[int(x)for x in stdin.readline().split()]\n\tif n==1:\n\t\tprint(1)\n\telse:\t\t\n\t\tb=set(a)\n\t\ta=list(b)\n\n\t\ta.sort()\n\t\tcount=0\n\t\t# print(a)\n\t\tfor i in range(len(a)-1,-1,-1):\n\t\t\t# print(a[i])\n\t\t\tif a[i]<=0:\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tcount+=1\n\t\t\t\tif i!=0:\n\t\t\t\t\ta[i-1]=a[i-1]-count*r\n\n\t\tprint(count)\n\n\tt-=1"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long cc[100010];\nint main() {\n  long long T, n, r, i, a;\n  scanf(\"%lld\", &T);\n  while (T--) {\n    map<long long, long long> mp;\n    scanf(\"%lld%lld\", &n, &r);\n    for (i = 1; i <= n; i++) {\n      scanf(\"%lld\", &a);\n      mp[a]++;\n    }\n    long long sum = 0;\n    for (map<long long, long long>::iterator it = mp.begin(); it != mp.end();\n         it++)\n      cc[sum++] = it->first;\n    long long last = 0;\n    long long ans = 0;\n    for (i = sum - 1; i >= 0; i--) {\n      if (cc[i] - last <= 0) break;\n      ans++;\n      last += r;\n    }\n    printf(\"%lld\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    number_of_queries =int(input())\n    for i in range(number_of_queries):\n        pushed, missiles = 0, 0\n        values = input().split(\" \")\n        number_of_enemies = int(values[0])\n        distance = int(values[1])\n        positions = input().split(\" \")\n\n        if(number_of_enemies == 1):\n            missiles += 1\n        else:\n            positions = list(set(map(int, positions)))\n            positions.sort(reverse = True)\n            for j in positions:\n                if (pushed >= j):\n                    break\n                else:\n                    pushed += distance\n                    missiles += 1\n        print(missiles)\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long q;\n  cin >> q;\n  while (q--) {\n    long n, r;\n    cin >> n >> r;\n    set<long, greater<long> > s;\n    for (long i = 1; i <= n; i++) {\n      long x;\n      cin >> x;\n      s.insert(x);\n    }\n    long long c = 0, d = 0;\n    set<long, greater<long> >::iterator itr;\n    for (itr = s.begin(); itr != s.end(); itr++) {\n      if ((*itr) - d > 0) {\n        c++;\n        d += r;\n      }\n    }\n    cout << c << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nq = int(sys.stdin.readline())\nfor _ in range(q):\n    n, r = map(int, sys.stdin.readline().split())\n    if n == 1:\n        print(1)\n        x = sys.stdin.readline()\n        continue\n    x = list(set(map(int, sys.stdin.readline().split())))\n    x.sort(reverse = True)\n    m = 0\n    ans = 0\n    for i in x:\n        if i > r*m:\n            m += 1\n            ans += 1\n        else:\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "q = int(input())\nans_str = ''\nfor _ in range(q):\n    a = 0\n    n, r = map(int, input().split())\n    x = set(map(int, input().split()))\n    x = sorted(x)\n    while x and x[-1] > a * r:\n        x.pop()\n        a += 1\n    ans_str += str(a) + \"\\n\"\nprint(ans_str)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int maxn = 1e6 + 7;\nconst int mod = 1e9 + 7;\nconst double eps = 1e-8;\nusing namespace std;\nint a[maxn];\nint n, t;\nint visit[maxn];\nint main() {\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n      int temp;\n      scanf(\"%d\", &temp);\n      if (visit[temp]) continue;\n      visit[temp] = 1;\n      a[cnt++] = temp;\n    }\n    n = cnt;\n    sort(a, a + n);\n    int ans = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      if (((int)((a[i] - 0.5) / r) + 1) <= n - 1 - i) {\n        break;\n      }\n      ans++;\n    }\n    cout << ans << endl;\n    for (int i = 0; i < n; i++) {\n      visit[a[i]] = 0;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdout,stdin\nt=int(stdin.readline())\nfor _  in range(t):\n  n,r=map(int,stdin.readline().split())\n  l=list(map(int,stdin.readline().split()))\n  if n==1:\n    print(1)\n    continue\n  l=list(set(l))\n  l.sort()\n  count=0\n  i=len(l)-1\n  j=0\n  while(i>=0):\n    if l[i]-(j*r)<=0:\n      break\n    else:\n      count=count+1\n      j=j+1\n    i=i-1\n  print(count)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Set;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.FileNotFoundException;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.util.Collections;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author /\\\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BKillEmAll solver = new BKillEmAll();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BKillEmAll {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int q = in.nextInt();\n            while (q-- > 0) {\n                int n = in.nextInt();\n                int r = in.nextInt();\n                List<Integer> x = new ArrayList<>();\n                Set<Integer> hs = new HashSet<>();\n                for (int i = 0; i < n; i++) {\n                    int temp = in.nextInt();\n                    if (!hs.contains(temp)) {\n                        x.add(temp);\n                        hs.add(temp);\n                    }\n                }\n                Collections.sort(x);\n                int cnt = 0;\n                n = x.size();\n                for (int i = n - 1; i >= 0; i--) {\n                    int curr = x.get(i) - (n - 1 - i) * r;\n                    if (curr > 0) {\n                        cnt++;\n                    } else {\n                        break;\n                    }\n                }\n                out.println(cnt);\n            }\n        }\n\n    }\n\n    static class Scanner {\n        private StringTokenizer st;\n        private BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public Scanner(String s) {\n            try {\n                br = new BufferedReader(new FileReader(s));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing ll = long long;\nusing namespace std;\nint arr[100100];\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    int mx = 0;\n    for (int i = 1; i <= n; ++i) cin >> arr[i];\n    sort(arr + 1, arr + n + 1, [](int a, int b) { return a > b; });\n    int i = 1, dx = 0, res = 0;\n    while (i <= n) {\n      int j = i + 1, cnt = 0;\n      int curr_val = arr[i] - dx;\n      if (curr_val <= 0) break;\n      while (j <= n && (arr[j] - dx) == curr_val) j++, cnt++;\n      res++;\n      dx += r;\n      i = j;\n    }\n    cout << res << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.util.stream.Collectors;\n\npublic class Main {\n    private static final int MODULO = 998244353;\n    private FastScanner in;\n    private PrintWriter out;\n\n    public static void main(String[] args) {\n        (new Main()).run();\n    }\n\n    private void run() {\n        try {\n            in = new FastScanner(System.in);\n            out = new PrintWriter(System.out);\n            solve();\n            in.close();\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private void solve() throws IOException {\n        int q = in.nextInt();\n        while (q-- > 0) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n            int pointer = n - 1;\n            List<Integer> list = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                list.add(in.nextInt());\n            }\n            Collections.sort(list);\n            Integer[] array = list.toArray(new Integer[0]);\n            int count = 0;\n            while (pointer >= 0 && array[pointer] > count * r) {\n                int cur = array[pointer];\n                while (pointer >= 0 && array[pointer] == cur) {\n                    pointer--;\n                }\n                count++;\n            }\n            out.println(count);\n        }\n    }\n\n    private static class FastScanner {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n\n        FastScanner(InputStream inputStream) {\n            bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        String next() throws IOException {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {\n                String line = bufferedReader.readLine();\n                if (line == null) {\n                    return null;\n                }\n                stringTokenizer = new StringTokenizer(line);\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        void close() throws IOException {\n            bufferedReader.close();\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    int arr[n];\n    for (int i = 0; i < n; i++) cin >> arr[i];\n    sort(arr, arr + n);\n    n = unique(arr, arr + n) - arr;\n    int sum = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      sum += (arr[i] - sum * r > 0);\n    }\n    cout << sum << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q, n, r, ax;\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    vector<int> enemies(n);\n    for (int i = 0; i < n; i++) cin >> enemies[i];\n    int shoots = -1;\n    sort(enemies.begin(), enemies.end()),\n        (enemies).resize(unique(enemies.begin(), enemies.end()) -\n                         (enemies).begin());\n    int Size = enemies.size();\n    for (int i = Size - 2; i >= 0; i--) {\n      int dist = (Size - 1) - i;\n      int dv = enemies[i] / r;\n      if (enemies[i] % r != 0) dv++;\n      if (dv <= dist) {\n        shoots = dist;\n        break;\n      }\n    }\n    if (shoots != -1)\n      cout << shoots << \"\\n\";\n    else\n      cout << Size << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint max(int a, int b) { return a > b ? a : b; }\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int n, r, maxn = 0;\n    double q;\n    scanf(\"%d%d\", &n, &r);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", a + i);\n    }\n    std::sort(a, a + n);\n    n = std::unique(a, a + n) - a;\n    int times = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      if (a[i] - times * r > 0)\n        times++;\n      else\n        break;\n    }\n    printf(\"%d\\n\", times);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\npublic class Main1 {\n\n\tstatic FastReader input = new FastReader();\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\tstatic final int INF = (int) 1e9 + 20;\n\n\tpublic static void main(String args[]) throws NumberFormatException, IOException {\n\t\tint t = input.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = input.nextInt();\n\t\t\tint r = input.nextInt();\n\t\t\tDeque<Integer> dq = new LinkedList<Integer>();\n\t\t\tint a[] = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) { a[i] = input.nextInt(); }\n\t\t\tshuffle(a);\n\t\t\tArrays.sort(a);\n\n\t\t\tfor (int i = 0; i < n; i++) { dq.add(a[i]); }\n\n\t\t\tlong total = 0;\n\t\t\tlong cnt = 0;\n\t\t\twhile (!dq.isEmpty()) {\n\t\t\t\tcnt++;\n\t\t\t\ttotal += r;\n\t\t\t\tint remv = dq.removeLast();\n\t\t\t\twhile (!dq.isEmpty() && (dq.getLast() == remv)) { dq.removeLast(); }\n\n\t\t\t\twhile (!dq.isEmpty() && (dq.getFirst() <= total)) { dq.remove(); }\n\t\t\t}\n\n\t\t\tout.println(cnt);\n\t\t}\n\n\t\tout.flush();\n\t}\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\t// try {\n\t\t\t// br = new BufferedReader(new FileReader(new File(\"chess.in\")));\n\t\t\t// } catch (FileNotFoundException e) {\n\t\t\t// e.printStackTrace();\n\t\t\t// }\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreElements()) { st = new StringTokenizer(br.readLine()); }\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() throws NumberFormatException, IOException { return Integer.parseInt(next()); }\n\n\t\tlong nextLong() throws NumberFormatException, IOException { return Long.parseLong(next()); }\n\n\t\tdouble nextDouble() throws NumberFormatException, IOException { return Double.parseDouble(next()); }\n\n\t\tString nextLine() throws IOException {\n\t\t\tString str = \"\";\n\t\t\tstr = br.readLine();\n\t\t\treturn str;\n\t\t}\n\n\t\tboolean hasNext() throws IOException { return br.ready(); }\n\t}\n\n\tstatic class con {\n\t\tstatic int IINF = (int) 1e9;\n\t\tstatic int _IINF = (int) -1e9;\n\t\tstatic long LINF = (long) 1e15;\n\t\tstatic long _LINF = (long) -1e15;\n\t\tstatic double EPS = 1e-9;\n\t}\n\n\tstatic class Triple implements Comparable<Triple> {\n\t\tint x;\n\t\tint y;\n\n\t\tint z;\n\n\t\tTriple(int x, int y, int z) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Triple o) {\n\t\t\tif (x == o.x && y == o.y)\n\t\t\t\treturn z - o.z;\n\t\t\tif (x == o.x)\n\t\t\t\treturn y - o.y;\n\t\t\treturn x - o.x;\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() { return \"(\" + x + \", \" + y + \", \" + z + \")\"; }\n\t}\n\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint x;\n\t\tint y;\n\n\t\tPair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\tif (x == o.x)\n\t\t\t\treturn (int) (y - o.y);\n\t\t\treturn (int) (x - o.x);\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() {\n\n\t\t\treturn \"(\" + x + \", \" + y + \")\";\n\t\t}\n\n\t}\n\n\tstatic void shuffle(int[] a) {\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = i + (int) (Math.random() * (a.length - i));\n\t\t\tint tmp = a[r];\n\t\t\ta[r] = a[i];\n\t\t\ta[i] = tmp;\n\t\t}\n\t}\n\n\tstatic void shuffle(long[] a) {\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = i + (int) (Math.random() * (a.length - i));\n\t\t\tlong tmp = a[r];\n\t\t\ta[r] = a[i];\n\t\t\ta[i] = tmp;\n\t\t}\n\t}\n\n\tstatic int gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }\n\n\tstatic long gcd(long a, long b) { return b == 0 ? a : gcd(b, a % b); }\n\n\tstatic class DSU {\n\n\t\tint[] p, rank, setSize;\n\t\tint numSets;\n\n\t\tDSU(int n) {\n\t\t\tp = new int[n];\n\t\t\trank = new int[n];\n\t\t\tsetSize = new int[n];\n\t\t\tnumSets = n;\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tp[i] = i;\n\t\t\t\tsetSize[i] = 1;\n\t\t\t}\n\n\t\t}\n\n\t\tint findSet(int n) { return p[n] = p[n] == n ? n : findSet(p[n]); }\n\n\t\tboolean isSameSet(int n, int m) { return findSet(n) == findSet(m); }\n\n\t\tvoid mergeSet(int n, int m) {\n\n\t\t\tif (!isSameSet(n, m)) {\n\t\t\t\tnumSets--;\n\t\t\t\tint p1 = findSet(n);\n\t\t\t\tint p2 = findSet(m);\n\n\t\t\t\tif (rank[p1] > rank[p2]) {\n\t\t\t\t\tp[p2] = p1;\n\t\t\t\t\tsetSize[p1] += setSize[p2];\n\t\t\t\t} else {\n\t\t\t\t\tp[p1] = p2;\n\t\t\t\t\tsetSize[p2] += setSize[p1];\n\t\t\t\t\tif (rank[p1] == rank[p2])\n\t\t\t\t\t\trank[p1]++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tint size() { return numSets; }\n\n\t\tint setSize(int n) { return setSize[findSet(n)]; }\n\n\t}\n\n\tstatic class Reader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\n\t\tpublic Reader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic Reader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo { ret = ret * 10 + c - '0'; } while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo { ret = ret * 10 + c - '0'; } while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\t// ddd\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo { ret = ret * 10 + c - '0'; } while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (c == '.')\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9')\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n\t}\n\n\tstatic ArrayList<Integer>[] allocateArrayList(int n) {\n\t\tArrayList<Integer> g[] = new ArrayList[n];\n\t\tfor (int i = 0; i < n; i++) { g[i] = new ArrayList<>(); }\n\t\treturn g;\n\t}\n\n\tstatic ArrayList<Integer> sieve(int n) {\n\t\tboolean notprimes[] = new boolean[n];\n\n\t\tfor (int i = 2; i * i <= n; i++) {\n\t\t\tfor (int j = i * i; j <= n && !notprimes[i]; j += i) { notprimes[j] = true; }\n\t\t}\n\t\tArrayList<Integer> ret = new ArrayList<>();\n\t\tfor (int i = 2; i < notprimes.length; i++)\n\t\t\tif (!notprimes[i])\n\t\t\t\tret.add(i);\n\t\treturn ret;\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.InputMismatchException;\nimport java.util.TreeSet;\n/* * */\n\npublic class _E74_B implements Runnable{\n    public static void main(String[] args) {\n\t    new Thread(null, new _E74_B(),\"Main\",1<<27).start();\n    }\n    @Override\n    public void run() {\n        FastReader fd = new FastReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int t = fd.nextInt();\n        for(int te = 0; te < t; te++){\n            int n = fd.nextInt();\n            int r = fd.nextInt();\n            TreeSet<Long> enemies = new TreeSet<>();\n            for(int i = 1; i <= n; i++){ enemies.add(fd.nextLong());}\n            int count = 0;\n            int damage = 0;\n            Long[] enemy = enemies.descendingSet().toArray(new Long[0]);\n            for(int i = 0; i < enemy.length; i++){\n                if(enemy[i]-damage <= 0){break;}\n                else{\n                    count++;\n                    damage = count*r;\n                }\n            }\n            out.println(count);\n\n        }\n        out.close();\n    }\n\n    //Helper functions\n    static void getArray(int[] data, boolean isSorted, FastReader fd){\n        for(int i = 0; i < data.length; i++){ data[i] = fd.nextInt(); }\n        if(isSorted) Arrays.sort(data);\n    }\n    static int gcd(int a, int b) {\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    static int lcm(int a, int b) {\n        return (a*b)/gcd(a, b);\n    }\n\n    static boolean checkDistinct(int next){// check all digits are distinct.\n\n        String process = String.valueOf(next);\n        for(int i = 0;i < process.length()-1; i++){\n            String character = String.valueOf(process.charAt(i));\n            if(process.substring(i+1).contains(character)){ return false; }\n        }\n        return true;\n    }\n\n    static int limit = (int) 1e7 + 1;\n    static int[] facts = new int[limit];\n    static void sieve() {  // Store the minimum prime factors of 1 to LIMIT\n        facts[1] = 1;\n        for (int i = 2; i < limit; i++) {\n            if (i % 2 == 0 && i > 2) {\n                facts[i] = 2;\n            } else {\n                facts[i] = i;\n            }\n        }\n        for (int i = 3; i * i < limit; i++) {\n            if (facts[i] == i) {\n                for (int j = i * i; j < limit; j += i)\n                    if (facts[j] == j)\n                        facts[j] = i;\n            }\n        }\n    }\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n\n            while(isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nfor i in range(int(input())):\n\n    x, y = map(int, sys.stdin.readline().split())\n\n    lista = sorted(set(map(int, sys.stdin.readline().split())))\n\n    tamanho = len(lista)\n\n    inicio = 0\n    fim = tamanho - 1\n    resultado = 0\n\n    while (inicio <= fim):\n\n        meio = (inicio + fim) // 2\n\n        if (lista[meio]-(tamanho - meio - 1) * y) > 0:\n            resultado = tamanho-meio\n            fim = meio - 1\n\n        else:\n            inicio = meio + 1\n\n    print(resultado)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ninputt = int(input())\n\nfor i in range(inputt):\n\n    x, y = map(int, sys.stdin.readline().split())\n\n    array = sorted(set(map(int, sys.stdin.readline().split())))\n    \n    first = 0\n    result = 0\n\n    size = len(array)\n    end = size - 1\n\n\n    while (first <= end):\n\n        center = (first + end) // 2\n\n        if (array[center]-(size - center - 1) * y) > 0:\n            result = size-center\n            end = center - 1\n\n        else:\n            first = center + 1\n\n    print(result)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int q = in.nextInt();\n        for(int i = 0; i < q; i++) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n            int[] a = new int[n];\n            for (int j = 0; j < n; j++) {\n                a[j] = in.nextInt();\n            }\n            out.println(new Solver().solve(n, r, a));\n        }\n        out.close();\n    }\n}\nclass Solver {\n    int solve(int n, int r, int[] a) {\n        TreeSet<Integer> set = new TreeSet<>(Collections.reverseOrder());\n        for (int j = 0; j < n; j++) {\n            set.add(a[j]);\n        }\n        int ans = 0, offset = 0;\n        for(int element : set) {\n            if (element - offset > 0) {\n                ans++;\n                offset += r;\n            } else {\n                break;\n            }\n        }\n        return ans;\n    }\n}"
        },
        {
            "language": 1,
            "solution": "#####################################   \nimport atexit, io, sys, collections, math, heapq, fractions\nbuffer = io.BytesIO() \nsys.stdout = buffer\n@atexit.register \ndef write(): sys.__stdout__.write(buffer.getvalue())   \n#####################################\n\n\ndef f(ais, x):\n\tcount = 0\n\ti = len(ais)-1\n\twhile(i >= 0):\n\t\tif ais[i] - count * x <=0:\n\t\t\tbreak\n\t\tcount +=1\n\t\ti-=1\n\treturn count\n\nfor o in range(int(raw_input())):\n\tn,x = map(int, raw_input().split())\n\tais = map(int, raw_input().split())\n\tais = set(ais)\n\tais = list(ais)\n\tais.sort()\n\tprint f(ais,x)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int n, r;\n    scanf(\"%d %d\", &n, &r);\n    vector<int> monsters(n);\n    for (int i = 0; i != n; ++i) {\n      scanf(\"%d\", &monsters[i]);\n    }\n    int total = 0;\n    sort(monsters.begin(), monsters.end());\n    n = unique(monsters.begin(), monsters.end()) - monsters.begin();\n    for (int i = 0; i != n; ++i) {\n      if (monsters[n - 1 - i] - r * i <= 0) {\n        break;\n      }\n      total++;\n    }\n    printf(\"%d\\n\", total);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef solve(n, r, xs):\n    xs = sorted(set(xs), reverse=True)\n    ans, shift = 0, 0\n    for x in xs:\n        if x <= shift:\n            break\n        ans += 1\n        shift += r\n    print(ans)\n\n\nif __name__ == '__main__':\n    q = int(sys.stdin.readline())\n    for i in range(q):\n        n, r = map(int, sys.stdin.readline().split(' '))\n        xs = map(int, sys.stdin.readline().split(' '))\n        solve(n, r, xs)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.HashSet;\nimport java.io.FilterInputStream;\nimport java.io.BufferedInputStream;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Jenish\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        ScanReader in = new ScanReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BKillEmAll solver = new BKillEmAll();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BKillEmAll {\n        public void solve(int testNumber, ScanReader in, PrintWriter out) {\n            int q = in.scanInt();\n            while (q-- > 0) {\n                int n = in.scanInt();\n                int r = in.scanInt();\n                int arr[] = new int[n];\n                in.scanInt(arr);\n                HashSet<Integer> hashSet = new HashSet<>();\n                for (int k : arr) hashSet.add(k);\n                int dis[] = new int[hashSet.size()];\n                int ptr = 0;\n                for (int k : hashSet) dis[ptr++] = k;\n\n\n                CodeX.sort(dis);\n                int sub = 0;\n                int ppp = dis.length - 1;\n                int ans = 0;\n                while (ppp >= 0) {\n                    if (dis[ppp] - sub > 0) {\n                        ans++;\n                        sub += r;\n                        ppp--;\n                    } else {\n                        break;\n                    }\n                }\n\n                out.println(ans);\n            }\n        }\n\n    }\n\n    static class ScanReader {\n        private byte[] buf = new byte[4 * 1024];\n        private int INDEX;\n        private BufferedInputStream in;\n        private int TOTAL;\n\n        public ScanReader(InputStream inputStream) {\n            in = new BufferedInputStream(inputStream);\n        }\n\n        private int scan() {\n            if (INDEX >= TOTAL) {\n                INDEX = 0;\n                try {\n                    TOTAL = in.read(buf);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                if (TOTAL <= 0) return -1;\n            }\n            return buf[INDEX++];\n        }\n\n        public int scanInt() {\n            int I = 0;\n            int n = scan();\n            while (isWhiteSpace(n)) n = scan();\n            int neg = 1;\n            if (n == '-') {\n                neg = -1;\n                n = scan();\n            }\n            while (!isWhiteSpace(n)) {\n                if (n >= '0' && n <= '9') {\n                    I *= 10;\n                    I += n - '0';\n                    n = scan();\n                }\n            }\n            return neg * I;\n        }\n\n        private boolean isWhiteSpace(int n) {\n            if (n == ' ' || n == '\\n' || n == '\\r' || n == '\\t' || n == -1) return true;\n            else return false;\n        }\n\n        public void scanInt(int[] A) {\n            for (int i = 0; i < A.length; i++) A[i] = scanInt();\n        }\n\n    }\n\n    static class CodeX {\n        public static void sort(int arr[]) {\n            merge_sort(arr, 0, arr.length - 1);\n        }\n\n        private static void merge_sort(int A[], int start, int end) {\n            if (start < end) {\n                int mid = (start + end) / 2;\n                merge_sort(A, start, mid);\n                merge_sort(A, mid + 1, end);\n                merge(A, start, mid, end);\n            }\n\n        }\n\n        private static void merge(int A[], int start, int mid, int end) {\n            int p = start, q = mid + 1;\n            int Arr[] = new int[end - start + 1];\n            int k = 0;\n\n            for (int i = start; i <= end; i++) {\n                if (p > mid)\n                    Arr[k++] = A[q++];\n\n                else if (q > end)\n                    Arr[k++] = A[p++];\n\n                else if (A[p] < A[q])\n                    Arr[k++] = A[p++];\n\n                else\n                    Arr[k++] = A[q++];\n            }\n            for (int i = 0; i < k; i++) {\n                A[start++] = Arr[i];\n            }\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Problema1{\n    static int min_moves(List<Monster> monsters, int r){\n        int moves = 0, size = monsters.size(), c = monsters.get(size-1).coordinateX;\n        Collections.sort(monsters);\n        for(int i = size-1; i >= 0; i--){\n            if(monsters.get(i).DeadMonster(c, moves*r)){\n                return moves;\n            }\n            moves++;\n        }\n        return moves;\n    }\n    \n    public static void main(String[]st) throws Exception{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        List<Monster> monsters = new ArrayList<>();\n        int n, q, r;\n        q=Integer.parseInt(br.readLine());\n        for(int i = 0;i<q;i++){\n            StringTokenizer st1 = new StringTokenizer(br.readLine());\n            n = Integer.parseInt(st1.nextToken());\n            r = Integer.parseInt(st1.nextToken());\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n\n            HashSet<Integer> h = new HashSet<>();//Para evitar agregar duplicados hacemos uso del HashSet\n\n            for(int j = 0; j < n; j++ ){\n                h.add(Integer.parseInt(st2.nextToken()));\n            }\n            for(int z:h){\n                if (z > 0){\n                    monsters.add(new Monster(z));\n                }\n                else{\n                    monsters.add(new FlyingMonster(z));\n                }\n            }\n            System.out.println(min_moves(monsters, r));\n            monsters.clear();\n        }\n\n    }\n\n    static class Monster implements Comparable<Monster> {\n        int coordinateX;\n\n        Monster(int coordinateX) {\n            this.coordinateX= coordinateX;\n        }\n\n        public int compareTo(Monster other) {\n            return this.coordinateX - other.coordinateX;\n        }\n\n        public boolean DeadMonster(int c, int r) { // Vemos si es que la coordenada es 0 o menor.\n            return this.coordinateX - r <= 0;\n        }\n\n    }\n\n    static class FlyingMonster extends Monster {\n        FlyingMonster(int coordinateX) {\n            super(coordinateX);\n        }\n\n        @Override\n        public boolean DeadMonster(int c, int r) { // Vemos si es que la coordenada es igual al centro.\n\t\t\treturn (this.coordinateX == c);\n\t\t}\n\t} \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    int ara[n];\n    map<int, int> mm;\n    for (int i = 0; i < n; i++) {\n      cin >> ara[i];\n      mm[ara[i]]++;\n    }\n    sort(ara, ara + n);\n    int ans = 0;\n    long long sub = 0;\n    int i = n - 1;\n    while (i >= 0) {\n      int temp = ara[i];\n      int num = mm[temp];\n      int now = temp - sub;\n      if (now <= 0) break;\n      i -= num;\n      sub += r;\n      ans++;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\nimport sys\nfrom collections import deque\n\n\ninput = sys.stdin.readline\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_int_n():\n    return list(map(int, input().split()))\n\n\ndef read_float():\n    return float(input())\n\n\ndef read_float_n():\n    return list(map(float, input().split()))\n\n\ndef read_str():\n    return input().strip()\n\n\ndef read_str_n():\n    return list(map(str, input().split()))\n\n\ndef error_print(*args):\n    print(*args, file=sys.stderr)\n\n\ndef mt(f):\n    import time\n\n    def wrap(*args, **kwargs):\n        s = time.time()\n        ret = f(*args, **kwargs)\n        e = time.time()\n\n        error_print(e - s, 'sec')\n        return ret\n\n    return wrap\n\n\n@mt\ndef slv(N, R, X):\n    X.sort()\n    X = deque(X)\n    l = 0\n    r = N-1\n    ll = 0\n    while X:\n        r = X.pop()\n        while X:\n            rr = X.pop()\n            if rr != r:\n                X.append(rr)\n                break\n        ll += R\n\n        while X:\n            l = X.popleft()\n            if l > ll:\n                X.appendleft(l)\n                break\n\n    return ll // R\n\n\ndef main():\n    Q = read_int()\n\n    for _ in range(Q):\n        N, R = read_int_n()\n        X = read_int_n()\n        print(slv(N, R, X))\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Set;\nimport java.util.TreeSet;\npublic class Main {\n    public static void main(String[] args) throws Exception {\n\n        BufferedReader entrada = new BufferedReader(new InputStreamReader(System.in));\n        String q_0 = entrada.readLine();  //q_0 est\u00e1 en String\n        int q = Integer.parseInt(q_0); // q => cantidad de queries\n        for (int i=0; i<q; i++){\n            //Se utiliza un set ya que se asume que un cohete dirigido a una posici\u00f3n X elimina a todos\n            //los mounstros en tal ubicaci\u00f3n independiente de la cantidad.\n            //Del mismo modo desplaza a los que est\u00e9 a su rango independiente de cuantos haya sobre una\n            //coordenada\n            // => Se usa un conjunto con elementos que no se repiten\n            Set<Mounstro> mounstros = new TreeSet<>();\n            String primera_linea = entrada.readLine();\n            String segunda_linea = entrada.readLine();\n            String datos[] = primera_linea.split(\" \"); // datos => [n,r]\n            String mounstros_str[] = segunda_linea.split(\" \");\n            int n = Integer.parseInt(datos[0]);\n            int radio = Integer.parseInt(datos[1]);\n            for (int j = 0; j < n; j++){\n                int ubicacion = Integer.parseInt(mounstros_str[j]);\n                if(ubicacion >0) { //Mounstro terrestre\n                    TerrainMonster mounstro = new TerrainMonster(radio,ubicacion);\n                    mounstros.add(mounstro);\n                }else{ //Mounstro volador\n                    FlyingMonster mounstro = new FlyingMonster(radio,ubicacion);\n                    mounstros.add(mounstro);\n                }\n\n            }\n            int resultado = min_moves(mounstros, radio);\n            System.out.println(resultado);\n        }\n    }\n    public static int min_moves(Set<Mounstro> mounstros, int radio){\n        int respuesta = 0;\n        for(Mounstro mounstro : mounstros){\n            int ubicacion_mounstro = mounstro.getUbicacion();\n            boolean flying = mounstro.getFlying();\n            //Se asume que un cohete elimina a todos los mounstros voladores de una posici\u00f3n especifica\n            if (ubicacion_mounstro - respuesta*radio> 0 || flying){\n                respuesta++;\n            }\n            mounstro.killMonster();\n        }\n        return respuesta;\n    }\n}\nabstract class Mounstro implements Comparable<Mounstro>{\n    protected int radio;\n    protected int ubicacion;\n    protected boolean alive;\n\n    public Mounstro(int radio, int ubicacion){\n        this.radio = radio;\n        this.ubicacion = ubicacion;\n        this.alive = true;\n    }\n\n    public int getUbicacion(){\n        return this.ubicacion;\n    }\n    public void killMonster(){\n        this.alive = false;\n    }\n\n    public abstract boolean getFlying();\n\n    @Override\n    //Dado que TreeSet ordena de manera ascendente autom\u00e1ticamente,\n    //compareTo est\u00e1 modificado para ordenarlo de manera descendiente\n    //de tal manera se ahorra computo al no necesitar reordenar la instancia\n    public int compareTo(Mounstro other){\n        if(this.ubicacion!=other.ubicacion){\n            return other.ubicacion - this.ubicacion;\n        }\n        //En caso de ser ubicaciones iguales\n        return (0);\n    }\n\n}\n\nclass FlyingMonster extends Mounstro{\n    public FlyingMonster(int radio, int ubicacion){\n        super(radio,ubicacion);\n    }\n    public boolean getFlying(){\n        return true;\n    }\n}\nclass TerrainMonster extends Mounstro{\n    public TerrainMonster(int radio, int ubicacion){\n        super(radio,ubicacion);\n    }\n    public boolean getFlying(){\n        return false;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int power(long long int a, long long int n) {\n  long long int res = 1;\n  while (n > 0) {\n    if (n & 1)\n      res = ((res % 1000000007) * (a % 1000000007)) % 1000000007, n--;\n    else\n      a = ((a % 1000000007) * (a % 1000000007)) % 1000000007, n /= 2;\n  }\n  return res;\n}\nlong long int nCr(long long int n, long long int r) {\n  double res = 1;\n  for (long long int i = 1; i <= r; i++) res = (res * (n - r + i)) / i;\n  return (long long int)(res + 0.01);\n}\nvoid solve() {\n  long long int n, r;\n  bool flag = true;\n  cin >> n >> r;\n  set<long long int> se;\n  se.clear();\n  for (int i = 0; i < n; i++) {\n    long long int x;\n    cin >> x;\n    se.insert(x);\n  }\n  long long int cnt = 1;\n  vector<long long int> v;\n  v.clear();\n  for (long long int x : se) v.push_back(x);\n  long long int l = v.size();\n  for (long long int i = l - 2; i >= 0; i--) {\n    if (v[i] - r * cnt <= 0) {\n      cout << cnt << endl;\n      return;\n    } else\n      cnt++;\n  }\n  cout << cnt << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import heapq\n# python template for atcoder1\nimport sys\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\n\n\ndef solve():\n    N, R = map(int, input().split())\n    M = list(set(map(lambda x: -int(x), input().split())))\n    heapq.heapify(M)\n\n    ans = 0\n    cur_pos = 0\n    while M:\n        cur_vanish = -heapq.heappop(M)\n        if cur_vanish > cur_pos:\n            cur_pos += R\n            ans += 1\n        else:\n            break\n    print(ans)\n\n\nN = int(input())\nfor _ in range(N):\n    solve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nset<long long int> v;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int q;\n  cin >> q;\n  while (q--) {\n    v.clear();\n    int n, r;\n    cin >> n >> r;\n    int maxi = -1;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      v.insert(x);\n    }\n    long long int cnt = 0;\n    long long int ans = 0;\n    for (auto it = v.rbegin(); it != v.rend(); it++) {\n      long long int i = *it;\n      if (i - cnt * r > 0ll) {\n        ans++;\n        cnt++;\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    vector<long long> v(n);\n    map<long long, long long> mp;\n    for (long long i = 0; i < n; i++) {\n      cin >> v[i];\n      mp[v[i]] = 0;\n    }\n    for (long long i = 0; i < n; i++) mp[v[i]]++;\n    map<long long, long long>::iterator it = mp.begin();\n    vector<pair<long long, long long> > vp;\n    for (; it != mp.end(); it++) vp.push_back({it->first, it->second});\n    sort((vp).rbegin(), (vp).rend());\n    long long nex = 0, c = 0;\n    for (long long i = 0; i < vp.size(); i++) {\n      if (vp[i].first - nex > 0) {\n        c++;\n        nex = r * c;\n      }\n    }\n    cout << c << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# Legends Always Come Up with Solution\n# Author: Manvir Singh\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\ndef main():\n    for _ in range(int(input())):\n        n,r=map(int,input().split())\n        a=sorted(set(map(int,input().split())))\n        z=0\n        su=0\n        while a:\n            if su+a.pop()>0:\n                su-=r\n                z+=1\n            else:\n                break\n        print(z)\n# region fastio\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.sql.Array;\nimport java.util.*;\n\npublic class Main {\n\n    static final int MAX_N = 1000010;\n    static final int INF = 0x3f3f3f3f;\n\n    public static void main(String[] args) throws IOException {\n        initReader(System.in);\n\n\n        int T = nextInt();\n        for (int i = 1; i <= T; i++)\n        solve();\n\n\n        pw.flush();\n    }\n\n    /*******************************************************************************************************************************/\n\n    public static void solve() throws IOException {\n        int n = nextInt();\n        int r = nextInt();\n\n        int[] a = new int[n];\n\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n\n        shuffle(a);\n        Arrays.sort(a);\n\n        HashSet<Integer> set = new HashSet<>();\n        int x = 0;\n        int ans = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            if (!set.contains(a[i])) {\n                set.add(a[i]);\n                if (a[i] - x > 0) {\n                    x += r;\n                    ans++;\n                }\n            }\n        }\n\n        pw.println(ans);\n    }\n\n\n\n    public static void shuffle(int[] a) {\n        for (int i = 0, len = a.length; i < len; i++) {\n            int rand = (int) (Math.random() * len);\n            int temp = a[rand];\n            a[rand] = a[i];\n            a[i] = temp;\n        }\n    }\n\n\n\n\n\n    /*******************************************************************************************************************************/\n\n\n    /*******************************************************************************************************************************/\n\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n    static PrintWriter pw;\n\n    public static void initReader(InputStream input) throws IOException {\n        reader = new BufferedReader(new InputStreamReader(input));\n        tokenizer = new StringTokenizer(\"\");\n        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\n//        reader = new BufferedReader(new FileReader(\"test.in\"));\n//        tokenizer = new StringTokenizer(\"\");\n//        pw = new PrintWriter(new BufferedWriter(new FileWriter(\"test1.out\")));\n    }\n\n    public static boolean hasNext() {\n        try {\n            while (!tokenizer.hasMoreTokens()) {\n                tokenizer = new StringTokenizer(reader.readLine());\n            }\n        } catch (Exception e) {\n            return false;\n        }\n        return true;\n    }\n\n    public static String next() throws IOException {\n        while (!tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n    public static String nextLine() {\n        try {\n            return reader.readLine();\n        } catch (Exception e) {\n            return null;\n        }\n    }\n\n    public static int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    public static long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    public static double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n\n    public static char nextChar() throws IOException {\n        return next().charAt(0);\n    }\n\n    public static short nextShort() throws IOException {\n        return Short.parseShort(next());\n    }\n\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\n\na=int(input())\nfor i in range(a):\n    x,y=input().split()\n    x=int(x)\n    y=int(y)\n    z=list(map(int,input().split()))\n    z=list(sorted(set(z)))\n    l=1\n    count=1\n    while(l!=len(z)):\n        if(z[-1*(l+1)]-l*y>0):\n            count=count+1\n            l=l+1\n        else:\n            break;\n    if(count>len(z)):\n        count=len(z)\n    print(count)    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int inf = 1e18, M = 1e9 + 7;\nconst long long int N = 1;\nvoid solve() {\n  long long int n, r;\n  cin >> n >> r;\n  vector<long long int> v;\n  set<long long int> st;\n  long long int x;\n  for (long long int i = 0; i < n; ++i) cin >> x, st.insert(x);\n  for (auto c : st) v.push_back(c);\n  long long int tmp = 0, ans = 0;\n  for (long long int i = v.size() - 1; i >= 0; --i) {\n    if (v[i] - tmp > 0) {\n      ++ans;\n      tmp += r;\n    }\n  }\n  cout << ans << \"\\n\";\n}\nint32_t main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.EOFException;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.io.UncheckedIOException;\nimport java.lang.reflect.Array;\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Deque;\nimport java.util.Objects;\nimport java.util.regex.Pattern;\nimport java.util.stream.Collectors;\n\npublic class Main {\n    public void exec() {\n        int q = stdin.nextInt();\n        while (q-- > 0) {\n            int n = stdin.nextInt();\n            long r = stdin.nextLong();\n            long[] x = Arrays.stream(stdin.nextLongArray(n))\n                             .distinct()\n                             .boxed()\n                             .sorted(Comparator.reverseOrder())\n                             .mapToLong(Long::longValue)\n                             .toArray();\n\n            int ans = 1;\n            for (int i = 0; i < x.length; i++) {\n                if (x[i]-i*r > 0) ans = Math.max(ans, i+1);\n            }\n            stdout.println(ans);\n        }\n    }\n\n    private static final Stdin stdin = new Stdin();\n    private static final Stdout stdout = new Stdout();\n\n    public static void main(String[] args) {\n        try {\n            new Main().exec();\n        } finally {\n            stdout.flush();\n        }\n    }\n\n    public static class Stdin {\n        private BufferedReader stdin;\n        private Deque<String> tokens;\n        private Pattern delim;\n\n        public Stdin() {\n            stdin = new BufferedReader(new InputStreamReader(System.in));\n            tokens = new ArrayDeque<>();\n            delim = Pattern.compile(\" \");\n        }\n\n        public String nextString() {\n            try {\n                if (tokens.isEmpty()) {\n                    String line = stdin.readLine();\n                    if (line == null) {\n                        throw new UncheckedIOException(new EOFException());\n                    }\n                    delim.splitAsStream(line).forEach(tokens::addLast);\n                }\n                return tokens.pollFirst();\n            } catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(nextString());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(nextString());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(nextString());\n        }\n\n        public String[] nextStringArray(int n) {\n            String[] a = new String[n];\n            for (int i = 0; i < n; i++) a[i] = nextString();\n            return a;\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        public double[] nextDoubleArray(int n) {\n            double[] a = new double[n];\n            for (int i = 0; i < n; i++) a[i] = nextDouble();\n            return a;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) a[i] = nextLong();\n            return a;\n        }\n    }\n\n    public static class Stdout {\n        private PrintWriter stdout;\n\n        public Stdout() {\n            stdout =  new PrintWriter(System.out, false);\n        }\n\n        public void printf(String format, Object ... args) {\n            String line = String.format(format, args);\n            if (line.endsWith(System.lineSeparator())) {\n                stdout.print(line);\n            } else {\n                stdout.println(line);\n            }\n        }\n\n        public void println(Object ... objs) {\n            String line = Arrays.stream(objs).map(Objects::toString).collect(Collectors.joining(\" \"));\n            stdout.println(line);\n        }\n\n        public void printDebug(Object ... objs) {\n            String line = Arrays.stream(objs).map(this::deepToString).collect(Collectors.joining(\" \"));\n            stdout.printf(\"DEBUG: %s%n\", line);\n            stdout.flush();\n        }\n\n        private String deepToString(Object o) {\n            if (o == null) {\n                return \"null\";\n            }\n\n            // \u914d\u5217\u306e\u5834\u5408\n            if (o.getClass().isArray()) {\n                int len = Array.getLength(o);\n                String[] tokens = new String[len];\n                for (int i = 0; i < len; i++) {\n                    tokens[i] = deepToString(Array.get(o, i));\n                }\n                return \"{\" + String.join(\",\", tokens) + \"}\";\n            }\n\n            return Objects.toString(o);\n        }\n\n        private void flush() {\n            stdout.flush();\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nfor _ in range(int(stdin.readline())):\n    n, r = map(int, stdin.readline().split())\n    l = sorted(set(map(int, stdin.readline().split())))\n    s = len(l)\n    count = 0\n\n    for i in range(s-1, -1, -1):\n        if l[i] - count * r <= 0:\n            break\n        count += 1\n\n    stdout.write(str(count) + \"\\n\")\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class  KillEmAll{\n    public static void main(String[] args)throws IOException {\n        Scanner sc=new Scanner(System.in);\n        OutputStream outputStream = System.out;\n        PrintWriter out = new PrintWriter(outputStream);\n        int q=sc.nextInt();\n        for(int i=0;i<q;i++){\n            int n=sc.nextInt();\n            Long k=sc.nextLong();\n            ArrayList<Integer> array=new ArrayList<>();\n            HashSet<Integer>hm=new HashSet<>();\n            for(int j=0;j<n;j++){\n                int temp=sc.nextInt();\n                if(!hm.contains(temp)){\n                    hm.add(temp);\n                    array.add(temp);\n                }\n            }\n            if(array.size()==1){\n                out.println(1);\n                continue;   \n            }\n            Collections.sort(array);\n    \n            Long freq=0L;\n            int count=0;\n           for(int j=array.size()-1;j>=0;j--){\n                if(array.get(j)-freq>0){\n                    freq+=k;\n                    ++count;\n                }else{\n                    break;\n                }\n            }\n            out.println(count);\n        }\n        out.flush();\n    \tout.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = set(map(int, stdin.readline().split()))\n\n    shots, acc = 0, 0\n    for m in sorted(monsters, reverse=True):\n        if m - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    stdout.write(str(shots) + \"\\n\")\n"
        },
        {
            "language": 3,
            "solution": "a = int(input())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, input().split())\n    monsters = sorted(set(map(int, input().split())))\n\n    shots, acc = 0, 0\n    while monsters and monsters[-1] - acc > 0:\n        monsters.pop()\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + '\\n'\n\nprint(result[:-1])\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\n\nq = int(input())\nfor _ in range(q):\n    n, r = map(int, input().split())\n    X = list(map(int, input().split()))\n    X = list(set(X))\n    X.sort(reverse=True)\n    cnt = 0\n    for x in X:\n        if x - cnt*r > 0:\n            cnt += 1\n    print(cnt)\n"
        },
        {
            "language": 3,
            "solution": "def solution(t):\n    res_arr = []\n    for i in range(t):\n        p, r = map(int, input().split())\n        s = list(sorted(map(int, set(input().split()))))\n        res = 0\n        while s[-1] > 0:\n            s.pop()\n            res += 1\n            if s:\n                s[-1] = s[-1] - (r * res)\n            else: break\n        res_arr.append(str(res))\n    return res_arr\n\n\ndef main():\n    t = int(input())\n    s = solution(t)\n    print(\"\\n\".join(s))\n\n\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool is[100001];\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    memset(is, 0, sizeof(is));\n    int arr[n + 10];\n    int ind = 0;\n    for (int i = 0; i < n; i++) {\n      int num;\n      scanf(\"%d\", &num);\n      if (!is[num]) {\n        arr[ind] = num;\n        is[num] = 1;\n        ind++;\n      }\n    }\n    sort(arr, arr + ind);\n    long long val = 0;\n    int time = 0;\n    for (int i = ind - 1; i >= 0; i--) {\n      if (arr[i] - val > 0) {\n        val += r;\n        time++;\n      }\n    }\n    printf(\"%d\\n\", time);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import io, os\ninput = io.StringIO(os.read(0, os.fstat(0).st_size).decode()).readline\n\n\n\nfor i in range(int(input())):\n    n, r = map(int, input().split())\n    x = sorted(map(int, input().split()))\n    i = n - 1\n    j = 0\n    c = 0\n    ans = 0\n    #print(x)\n    while i >= 0 and i >= j and j < n:\n        ans += 1\n        d = x[i]\n        c += r\n        while i >= 0 and x[i] == d:\n            #print(\"!\", i, x[i], d, c)\n            i -= 1\n        \n        while j < n and x[j] <= c:\n            #print('!!', j, x[j], c)\n            j += 1\n    #print(i, j)\n    print(ans)\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n/*CODE BY SHIKHAR TYAGI*/\n\npublic class B {\n\n    public static void main(String args[]) {\n        FastScanner scn = new FastScanner();\n        int t = scn.nextInt();\n        while (t-- > 0) {\n            int n = scn.nextInt();\n            int r = scn.nextInt();\n            HashSet<Integer> set = new HashSet<>();\n            for (int i = 0; i < n; ++i) {\n                set.add(scn.nextInt());\n            }\n            int a[] = new int[set.size()];\n            int i = 0;\n            for (int no : set) {\n                a[i] = no;\n                i++;\n            }\n            if(a.length == 1){\n                System.out.println(1);\n                continue;\n            }\n            Arrays.sort(a);\n            int count = 1;\n            for (i = a.length - 2; i >= 0; --i) {\n                a[i] -= (r * count);\n                if (a[i] <= 0) {\n                    break;\n                }\n                count++;\n            }\n            System.out.println(count);\n        }\n    }\n\n\n    static int exponentMod(int A, int B, int C) {\n\n        // Base cases\n        if (A == 0)\n            return 0;\n        if (B == 0)\n            return 1;\n\n        // If B is even\n        long y;\n        if (B % 2 == 0) {\n            y = exponentMod(A, B / 2, C);\n            y = (y * y) % C;\n        }\n\n        // If B is odd\n        else {\n            y = A % C;\n            y = (y * exponentMod(A, B - 1, C) % C) % C;\n        }\n\n        return (int) ((y + C) % C);\n    }\n\n    public static class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(String s) {\n            try {\n                br = new BufferedReader(new FileReader(s));\n            } catch (FileNotFoundException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n        }\n\n        public FastScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String nextToken() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(nextToken());\n        }\n\n        long nextLong() {\n            return Long.parseLong(nextToken());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(nextToken());\n        }\n    }\n\n    public static int bin(int b[], long target) {\n        int l = 0;\n        int h = b.length - 1;\n        int pos = -1;\n        while (l <= h) {\n            int m = l + (h - l) / 2;\n            if (b[m] <= target) {\n                if (b[m] == target) {\n                    return m;\n                }\n                l = m + 1;\n            } else {\n                pos = m;\n                h = m - 1;\n            }\n        }\n        return pos;\n    }\n}\n\nclass monster {\n    int id;\n    int health;\n\n    monster(int id, int health) {\n        this.id = id;\n        this.health = health;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\n# import time,random,resource\n\n# sys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\ndef IF(c, t, f): return t if c else f\ndef YES(c): return IF(c, \"YES\", \"NO\")\ndef Yes(c): return IF(c, \"Yes\", \"No\")\n\n\ndef main():\n    t = I()\n\n    rr = []\n    for _ in range(t):\n        n,r = LI()\n        a = LI()\n\n        t = sorted(set(a), reverse=True)\n        k = 0\n        u = 0\n        for c in t:\n            if c <= k:\n                break\n            u += 1\n            k += r\n\n        rr.append(u)\n\n\n    return JA(rr, \"\\n\")\n\n\nprint(main())\n\n\n"
        },
        {
            "language": 1,
            "solution": "for _ in range(input()):\n    n,r=map(int,raw_input().split())\n    arr=map(int,raw_input().split())\n    arr=list(set(arr))\n    arr.sort()\n    p=0\n    c=0\n    n=len(arr)\n    for i in range(n):\n        if arr[-1-i]-p>0:\n            c+=1\n            p+=r\n        else:\n            break\n    print c\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef main():\n    q = int(input())\n\n    for _ in range(q):\n        n, r = map(int, input().split())\n        x = sorted(set(int(i) for i in input().split()), reverse=True)\n\n        c = s = 0\n        for i in x:\n            if i <= c:\n                break\n            c += r\n            s += 1\n\n        print(s)\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main \n{ \n    static class Reader \n    { \n        final private int BUFFER_SIZE = 1 << 16; \n        private DataInputStream din; \n        private byte[] buffer; \n        private int bufferPointer, bytesRead; \n  \n        public Reader() \n        { \n            din = new DataInputStream(System.in); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public Reader(String file_name) throws IOException \n        { \n            din = new DataInputStream(new FileInputStream(file_name)); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public String readLine() throws IOException \n        { \n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c; \n            while ((c = read()) != -1) \n            { \n                if (c == '\\n') \n                    break; \n                buf[cnt++] = (byte) c; \n            } \n            return new String(buf, 0, cnt); \n        } \n  \n        public int nextInt() throws IOException \n        { \n            int ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do\n            { \n                ret = ret * 10 + c - '0'; \n            }  while ((c = read()) >= '0' && c <= '9'); \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public long nextLong() throws IOException \n        { \n            long ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public double nextDouble() throws IOException \n        { \n            double ret = 0, div = 1; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n  \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n  \n            if (c == '.') \n            { \n                while ((c = read()) >= '0' && c <= '9') \n                { \n                    ret += (c - '0') / (div *= 10); \n                } \n            } \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        private void fillBuffer() throws IOException \n        { \n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n            if (bytesRead == -1) \n                buffer[0] = -1; \n        } \n  \n        private byte read() throws IOException \n        { \n            if (bufferPointer == bytesRead) \n                fillBuffer(); \n            return buffer[bufferPointer++]; \n        } \n  \n        public void close() throws IOException \n        { \n            if (din == null) \n                return; \n            din.close(); \n        } \n    } \n  \n    public static void main(String[] args) throws IOException \n    { \n        Reader in=new Reader(); \n        int t=in.nextInt();\n      while(t--!=0)\n      {\n          int n=in.nextInt();\n          int r=in.nextInt();\n          PriorityQueue<Integer> ab=new PriorityQueue<Integer>();\n          for(int i=0;i<n;++i)\n          {\n              ab.add(in.nextInt());\n          }\n          int a[]=new int[n];\n         for(int i=0;i<n;++i)\n         {\n             a[i]=ab.poll();\n         }\n          int hit=1,prev=a[n-1];\n          for(int i=n-2;i>=0;--i)\n          {\n              if(a[i]!=prev){ \n                  prev=a[i];\n              if((a[i]-1)/r + 1 > hit)  ++hit;\n              \n              else break;\n              }\n              \n          }\n         System.out.println(hit);\n      }\n    } \n} "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint x[100000];\nvoid solve() {\n  int n;\n  int r;\n  cin >> n >> r;\n  vector<int> x;\n  for (int i = 0; i < n; i++) {\n    int tmp;\n    cin >> tmp;\n    x.push_back(tmp);\n  }\n  sort(x.begin(), x.end());\n  x.erase(unique(x.begin(), x.end()), x.end());\n  int ans = 0;\n  int total_push = 0;\n  for (int i = x.size() - 1; i >= 0; i--) {\n    if (x[i] - total_push > 0) {\n      ans++;\n      total_push += r;\n    }\n  }\n  cout << ans << endl;\n}\nint main() {\n  int T;\n  cin >> T;\n  for (int i = 0; i < T; i++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\ndef unique(x, first, last):\n    if first == last:\n        return last\n    result = first\n    while first + 1 != last:\n        first += 1\n        if(x[result] != x[first]):\n            result += 1\n            x[result] = x[first]\n    return result + 1\n\n\nq = int(input())\nfor _ in range(q):\n    n, r = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort(reverse=True)\n    siz = unique(x, 0, len(x))\n    rc = 0\n    tt = 0\n    for i in range(siz):\n        a = x[i]\n        if rc < a:\n            rc += r\n            tt += 1\n        else:\n            break\n    print(tt)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.Scanner; \nimport java.util.StringTokenizer;\n\npublic class Main {\n\tstatic class FastReader //Como Scanner pero mas rapido (Fuente:https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/)\n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n\n\tpublic static void main(String[] args) {\n\t\t\tFastReader input=new FastReader();\n\t\t\tint queries = input.nextInt();\n\t\t\tfor(int i = 0;i < queries;i++) {\n\t\t\t\tint enemies = input.nextInt();\n\t\t\t\tint radius = input.nextInt();\n\t\t\t\tif(enemies == 1) { //Si solo hay un enemigo se salta el resto del codigo\n\t\t\t\t\tint pos = input.nextInt();\n\t\t\t\t\tSystem.out.println(1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\tMonster[] arr = new Monster[enemies]; \n\t\t\t\tint j = 0;\n\t\t\t\tfor(j = 0;j < enemies;j++) {\n\t\t\t\t\tint pos = input.nextInt();\n\t\t\t\t\tarr[j] = new Monster();\n\t\t\t\t\tarr[j].setPos(pos);\n\t\t\t\t}\n\t\t\t\tList<Monster> monList = Arrays.asList(arr); //Lista con los enemigos\n\t\t\t\tCollections.sort(monList); //Realiza el sort segun su posicion (De mayor a menor)\n\t\t\t\tint shots = 0; //Numero de disparos a enemigos terrestres\n\t\t\t\tint lastPos = 0; //Posicion inicial del enemigo actual que se esta viendo\n\t\t\t\tfor(Monster mon: monList){\n\t\t\t\t\tif(mon.infoPos() - (shots * radius) > 0) {\n\t\t\t\t\t\tif(mon.infoPos() != lastPos) {\n\t\t\t\t\t\t\tshots += 1;\n\t\t\t\t\t\t\tlastPos = mon.infoPos();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse break; //En caso de que se este viendo un enemigo que haya muerto por el empuje se termina el ciclo.\n\t\t\t\t}\n\t\t\t\tCollections.sort(monList,Collections.reverseOrder()); //Para ver los enemigos voladores, se da vuelta la lista\n\t\t\t\tint shoots = 0; //Numero de disparo a enemigos voladores\n\t\t\t\tfor(Monster mon: monList){\n\t\t\t\t\tif(mon.infoPos() < 0) {\n\t\t\t\t\t\tif(mon.infoPos() != lastPos) {\n\t\t\t\t\t\t\tshoots += 1;\n\t\t\t\t\t\t\tlastPos = mon.infoPos();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse break; //Una vez se terminan los enemigos que empezaron en el aire se termina el ciclo\n\t\t\t\t}\n\t\t\t\tSystem.out.println(min_moves(shots,shoots));\n\t\t\t\t}\n\t\t\t}\t\n\t}\n\tpublic static int min_moves(int a1,int a2) {\n\t\tint total = a1+a2;\n\t\treturn total;\n\t}\n}\n\nclass Monster implements Comparable<Monster>{\n\t\n\tprivate int position;\n\tprivate boolean alive = true;\n\t\n\tpublic void setPos(int pos) {\n\t\tthis.position = pos;\n\t}\n\t\n\tpublic void setAlive(boolean life) {\n\t\tthis.alive = life;\n\t}\n\t\n\tpublic int infoPos() {\n\t\treturn this.position;\n\t}\n\t\n\tpublic boolean infoAlive() {\n\t\treturn this.alive;\n\t}\n\t\n\t@Override\n    public int compareTo(Monster other) {\t\t//Usado para ordenar la lista de mayor a menor posicion\n        return other.infoPos() - this.infoPos();\n\t}\n\t\n}\n\nclass FlyingMonster extends Monster {\n\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\nq = int(input())\n\nfor _ in range(q):\n    n, r = map(int, input().split())\n\n    x = list(map(int, input().split()))\n    x.sort(reverse=True)\n    knockbacks = []\n\n    for i in range(len(x)):\n        if i == 0 or x[i] != x[i - 1]:\n            loc = x[i]\n            knockbacks.append((loc + r - 1) // r)\n    \n    cnt = 0\n    while True:\n        if cnt >= len(knockbacks) or knockbacks[cnt] <= cnt:\n            break\n        else:\n            cnt += 1\n\n    print(cnt)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int q;\n  std::cin >> q;\n  for (int _ = 0; _ < q; _++) {\n    int n, r;\n    std::cin >> n >> r;\n    std::set<int> b;\n    for (int i = 0; i < n; i++) {\n      int x;\n      std::cin >> x;\n      b.insert(x);\n    }\n    std::vector<int> a;\n    int ans = 0;\n    for (auto it = b.begin(); it != b.end(); it++) {\n      a.push_back(*it);\n    }\n    int m = a.size();\n    for (int i = 0; i < m; i++) {\n      if (a[i] > (m - i - 1) * r) {\n        ans = std::max(ans, m - i);\n      }\n    }\n    std::cout << ans << std::endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = list(map(int, stdin.readline().split()))\n    monsters.sort(reverse=True)\n\n    shots, acc = 0, 0\n    for i in range(len(monsters)):\n        if i and monsters[i] == monsters[i-1]:\n            continue\n\n        if monsters[i] - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + \"\\n\"\n\nstdout.write(result)\n"
        },
        {
            "language": 3,
            "solution": "\nimport sys\ninput=sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n    a,b=map(int,input().split())\n    l=set(map(int,input().split()))\n    l=list(l)\n    l=sorted(l)\n    count=0\n    while l and l[-1]>count*b:\n        l.pop()\n        count+=1\n    print(count)    \n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\nfrom heapq import *\nfrom fractions import *\n\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n \nfor _ in range(int(input())):\n    n,r = arrIN()\n    a = sorted(set(arrIN()),reverse=True)\n    n = len(a)\n    if n==1:\n        print(1)\n    else:\n        ans = 0\n        t = 0\n        for i in range(n):\n            a[i]-=t*r\n            if a[i]>0:\n                ans+=1\n                t+=1\n        print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    int n, r;\n    cin >> n >> r;\n    map<int, bool> m;\n    priority_queue<int> pq;\n    for (int j = 0; j < n; j++) {\n      int x;\n      cin >> x;\n      if (!m[x]) {\n        m[x] = true;\n        pq.push(x);\n      }\n    }\n    int ans = 0;\n    bool isAns = false;\n    while (!pq.empty()) {\n      int k = pq.top();\n      if (k - ans * r > 0) {\n        ans++;\n        pq.pop();\n      } else {\n        cout << ans << endl;\n        isAns = true;\n        break;\n      }\n    }\n    if (!isAns) {\n      cout << ans << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "ans= []\n\nfor i in range(int(input())):\n  n, r = map(int, input().strip().split())\n  x = set(map(int, input().strip().split()))\n  x = sorted(x, reverse=True)\n  \n  shots = 0\n  \n  for i in x:\n    if (i - r * shots > 0):\n        shots += 1\n    else:\n      break\n  ans.append(shots)\n  \nprint('\\n'.join(map(str, ans)))"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n##################################################33\nt=int(input())\nfor i in range(t):\n    n,r=map(int,input().split())\n    l=list(map(int,input().split()))\n    l=list(set(l))\n    l.sort()\n    if len(l)==1:\n        print(1)\n    elif len(l)==2:\n        if l[0]<=r:\n            print(1)\n        else:\n            print(2)\n    else:\n        ans=1\n        k=r\n        j=len(l)-2\n        while l[j]-k>0:\n            ans+=1\n            k+=r\n            j-=1\n            if j<0:\n                break\n        print(ans)\n            \n        \n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nimport bisect as bs\nq=int(input())\nfor _ in range(q):\n    n,rr=map(int,input().split())\n    it=list(set(list(map(int,input().split()))))\n    it.sort()\n    l=0\n    r=len(it)-1\n    d=0\n    tot=0\n    while r>=l and r>=0 and l>=0:\n        d+=rr\n        l=bs.bisect_right(it,d)\n        r-=1\n        tot+=1\n    #    print(l,r)\n    print(tot)        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\npriority_queue<int> pq;\nbool vis[100010];\nint main() {\n  int tc;\n  cin >> tc;\n  for (int cs = 1; cs <= tc; cs++) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    int impact = 0, ans = 0;\n    for (int i = 0; i < n; i++) {\n      int x;\n      scanf(\"%d\", &x);\n      pq.push(x);\n      vis[x] = true;\n    }\n    while (!pq.empty()) {\n      int cur = pq.top();\n      pq.pop();\n      if (vis[cur] == false) continue;\n      vis[cur] = false;\n      cur -= impact;\n      if (cur > 0) {\n        ans++;\n        impact += r;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n\ndef main():\n  t = int(sys.stdin.readline().strip())\n  for _ in range(t):\n    n, r = map(int, sys.stdin.readline().split())\n    a = set(map(int, sys.stdin.readline().split()))\n    if n == 1 or len(a) == 1:\n      print(1)\n      continue\n    a = sorted(a, reverse=True)\n    ans = 0\n    for i in range(len(a)-1):\n      ans += 1\n      if a[i + 1] <= ans * r:\n        break\n    \n    if a[len(a) - 1] > ans * r:\n        ans+=1\n    print(ans)\n    \n    \n\n\nif __name__ == \"__main__\":\n  main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint vis[111111];\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  for (int e = 1; e <= t; e++) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    vector<int> v;\n    for (int p = 0; p < n; p++) {\n      int k;\n      scanf(\"%d\", &k);\n      if (vis[k] == e)\n        continue;\n      else {\n        vis[k] = e;\n        v.push_back(k);\n      }\n    }\n    sort(v.begin(), v.end());\n    int sz = (int)v.size();\n    int mm = sz;\n    for (int p = 0; p < sz; p++) {\n      int t = (v[p] / r);\n      if (v[p] % r) t++;\n      int r = (sz - p - 1) - t;\n      if (r < 0) r = 0;\n      mm = min(mm, r + t);\n    }\n    printf(\"%d\\n\", mm);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n\n\n    private void run() throws IOException {\n\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\n        int q = Integer.parseInt(reader.readLine());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < q; i++) {\n\n            String[] line = reader.readLine().split(\"\\\\s\");\n            int n = Integer.parseInt(line[0]), r = Integer.parseInt(line[1]);\n            line = reader.readLine().split(\"\\\\s\");\n\n            TreeSet<Integer> set = new TreeSet<>();\n            for (int j = 0; j < n; j++) {\n                set.add(Integer.parseInt(line[j]));\n            }\n\n\n            int times = 0;\n            while (!set.isEmpty()){\n                int last = set.last();\n                if((last-1)/r < times){\n                    break;\n                }else{\n                    times++;\n                    set.pollLast();\n                }\n            }\n\n            sb.append(times).append(\"\\n\");\n        }\n        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));\n        writer.write(sb.toString());\n        writer.flush();\n\n    }\n\n\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Set;\nimport java.util.TreeSet;\npublic class Main {\n    public static void main(String[] args) throws Exception {\n\n        BufferedReader entrada = new BufferedReader(new InputStreamReader(System.in));\n        String q_0 = entrada.readLine();  //q_0 est\u00e1 en String\n        int q = Integer.parseInt(q_0); // q => cantidad de queries\n        for (int i=0; i<q; i++){\n            //Se utiliza un set ya que se asume que un cohete dirigido a una posici\u00f3n X elimina a todos\n            //los mounstros en tal ubicaci\u00f3n independiente de la cantidad.\n            //Del mismo modo desplaza a los que est\u00e9 a su rango independiente de cuantos haya sobre una\n            //coordenada\n            // => Se usa un conjunto con elementos que no se repiten\n            Set<Mounstro> mounstros = new TreeSet<>();\n            String primera_linea = entrada.readLine();\n            String segunda_linea = entrada.readLine();\n            String datos[] = primera_linea.split(\" \"); // datos => [n,r]\n            String mounstros_str[] = segunda_linea.split(\" \");\n            int n = Integer.parseInt(datos[0]);\n            int radio = Integer.parseInt(datos[1]);\n            for (int j = 0; j < n; j++){\n                int ubicacion = Integer.parseInt(mounstros_str[j]);\n                if(ubicacion >0) { //Mounstro terrestre\n                    TerrainMonster mounstro = new TerrainMonster(radio,ubicacion);\n                    mounstros.add(mounstro);\n                }else{ //Mounstro volador\n                    FlyingMonster mounstro = new FlyingMonster(radio,ubicacion);\n                    mounstros.add(mounstro);\n                }\n\n            }\n            int resultado = min_moves(mounstros, radio);\n            System.out.println(resultado);\n        }\n    }\n    public static int min_moves(Set<Mounstro> mounstros, int radio){\n        int respuesta = 0;\n        for(Mounstro mounstro : mounstros){\n            int ubicacion_mounstro = mounstro.getUbicacion();\n            boolean flying = mounstro.getFlying();\n            //Se asume que un cohete elimina a todos los mounstros voladores de una posici\u00f3n especifica\n            if (ubicacion_mounstro - respuesta*radio> 0 || flying){\n                respuesta++;\n            }\n        }\n        return respuesta;\n    }\n}\nabstract class Mounstro implements Comparable<Mounstro>{\n    protected int radio;\n    protected int ubicacion;\n\n    public Mounstro(int radio, int ubicacion){\n        this.radio = radio;\n        this.ubicacion = ubicacion;\n    }\n\n    public int getUbicacion(){\n        return this.ubicacion;\n    }\n\n    public abstract boolean getFlying();\n\n    @Override\n    //Dado que TreeSet ordena de manera ascendente autom\u00e1ticamente,\n    //compareTo est\u00e1 modificado para ordenarlo de manera descendiente\n    //de tal manera se ahorra computo al no necesitar reordenar la instancia\n    public int compareTo(Mounstro other){\n        if(this.ubicacion!=other.ubicacion){\n            return other.ubicacion - this.ubicacion;\n        }\n        //En caso de ser ubicaciones iguales\n        return (0);\n    }\n}\n\nclass FlyingMonster extends Mounstro{\n    public FlyingMonster(int radio, int ubicacion){\n        super(radio,ubicacion);\n    }\n    public boolean getFlying(){\n        return true;\n    }\n}\nclass TerrainMonster extends Mounstro{\n    public TerrainMonster(int radio, int ubicacion){\n        super(radio,ubicacion);\n    }\n    public boolean getFlying(){\n        return false;\n    }\n}"
        },
        {
            "language": 1,
            "solution": "\n\n# target Expert  \n\n# Author : raj1307 - Raj Singh\n# Date   : 08.10.19\n\nfrom __future__ import division, print_function\n\nimport os,sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().strip().split(\" \"))\ndef li(): return list(mi())\n\ndef dmain():\n    sys.setrecursionlimit(100000000)\n    threading.stack_size(40960000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import ceil,floor,log,sqrt,factorial\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *,threading\n#from itertools import permutations\n\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\ndef getKey(item): return item[0] \ndef sort2(l):return sorted(l, key=getKey)\ndef d2(n,m,num):return [[num for x in range(m)] for y in range(n)]\ndef isPowerOfTwo (x): return (x and (not(x & (x - 1))) )\ndef decimalToBinary(n): return bin(n).replace(\"0b\",\"\")\ndef ntl(n):return [int(i) for i in str(n)]\n\ndef powerMod(x,y,p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y&1:\n            res = (res*x)%p\n        y = y>>1\n        x = (x*x)%p\n    return res\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n    \ndef isPrime(n) : # Check Prime Number or not \n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n\n\ndef lcm(a,b) :\n    return a / gcd(a, b) * b\n\ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n\n\n\n\n\n\n\ndef main():\n    \n\n    f=[0]*100005\n    for _ in range(ii()):\n        \n\n        n,r=mi()\n        a=li()\n\n        a.sort()\n\n        f={}\n        for i in range(n):\n            if a[i] not in f:\n                f[a[i]]=1\n            else:\n                f[a[i]]+=1\n\n\n        car=0\n\n        pos=n-1\n\n        step=0\n\n        while(pos>=0):\n\n            if a[pos]-car<=0:\n\n                break\n\n            else:\n\n                step+=1\n                car+=r\n                pos-=f[a[pos]]\n\n        \n\n\n        print(step)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\n\nif __name__ == \"__main__\":\n    #read()\n    main()\n    #dmain()\n\n# Comment Read()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer; \nimport java.util.*;\n\npublic class Main{\n\tstatic class FastReader{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader(){ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next(){ \n\t\t\twhile (st == null || !st.hasMoreElements()){ \n\t\t\t\ttry{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e){ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt(){ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong(){ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble(){ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine(){ \n\t\t\tString str = \"\"; \n\t\t\ttry{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e){ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t}\n\n\tpublic static int min_moves(TreeSet<Monster> m, int push){\n\t\tint c = 0;\n\t\tint kill = 0;\n\t\tIterator bob = m.iterator();\n\t\twhile(bob.hasNext()){\n\t\t\tMonster b = (Monster)bob.next();\n\t\t\tif(b.givepos() <= kill && b.givepos() > 0){\n\t\t\t\tbob.remove();\n\t\t\t}\n\t\t\telse{\n\t\t\t\tc++;\n\t\t\t\tkill += push;\n\t\t\t\tbob.remove();\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\n\tpublic static void main(String[] args){\n\t\tFastReader s=new FastReader();\n\t\tint q = s.nextInt();\n\t\tint[] solution = new int[q];\n\t\tfor(int i = 0; i < q; i++){\n\t\t\tTreeSet<Monster> mon = new TreeSet<>();\n\t\t\tint n = s.nextInt();\n\t\t\tint r = s.nextInt();\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tint p = s.nextInt();\n\t\t\t\tif(p > 0){\n\t\t\t\t\tmon.add(new Monster(p));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmon.add(new FlyingMonster(p));\n\t\t\t\t}\n\t\t\t}\n\t\t\tsolution[i] = min_moves(mon, r);\n\t\t}\n\t\tfor(int x : solution){\n\t\t\tSystem.out.println(x);\n\t\t}\n\t}\n}\n\nclass Monster implements Comparable<Monster>{\n\tint pos;\n\n\tpublic Monster(int h){\n\t\tthis.pos = h;\n\t}\n\n\tpublic int givepos(){\n\t\treturn this.pos;\n\t}\n\n\t@Override\n\tpublic int compareTo(Monster other){\n\t\treturn (other.pos - this.pos);\n\t}\n\n\t@Override\n\tpublic String toString(){\n\t\treturn (\"\" + this.pos);\n\t}\n\t\n}\n\nclass FlyingMonster extends Monster{\n\tint pos;\n\n\tpublic FlyingMonster(int h){\n\t\tsuper(h);\n\t}\n\n\tpublic int givepos(){\n\t\treturn this.pos;\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "ans = []\ndef solution(test):\n    for i in range(test):\n        p, r = map(int, input().split())\n        s = sorted(map(int, set(input().split())), reverse=True)\n        res = 0\n        for k in s:\n            if k - res*r <1: break\n            res += 1\n        ans.append(res)\nsolution(int(input()))\nfor x in ans:\n    print(x)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput=stdin.readline\n#sys.stdin = open(\"input.in\", \"r\")\n#sys.stdout = open(\"output.out\", \"w\")\n\nfor _ in range(int(input())):\n    n, r = map(int, input().split())\n    x = list(set(int(x) for x in input().split()))\n    x.sort()\n\n    t = 0\n    while len(x) > 0:\n\n        p = x.pop()\n        if p - t * r <=0 :\n            break\n        t += 1\n\n\n    print(t)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nq = int(input())\nfor i in range(q):\n    n,r = map(int, input().split())\n    lis = list(set((map(int, input().split()))))\n    lis.sort(reverse=True)\n    lis.append(-1)\n    cnt = 0\n    ra = 0\n    for i in range(n+10):\n        if lis[i]-ra<=0:\n            print(cnt)\n            break\n        ra+=r\n        cnt+=1\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "import math \n#------------------------------warmup----------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n#-------------------game starts now----------------------------------------------------\nimport math \nfor ik in range(int(input())):\n    n,r=map(int,input().split())\n    l=list(map(int,input().split()))\n    l=set(l)\n    l=list(l)\n    l.sort()\n    n=len(l)\n    for i in range(n-1,-1,-1):\n        if i==0:\n            print(n-i) \n        elif l[i-1]-(n-i)*r<=0:\n            print(n-i)\n            break"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.BigInteger;\nimport java.net.Inet4Address;\nimport java.util.*;\nimport java.lang.*;\nimport java.util.HashMap;\nimport java.util.PriorityQueue;\npublic class Solution implements Runnable{\n    static class pair implements Comparable\n    {\n        int f;\n        int s;\n        pair(int fi,int se)\n        {\n            f=fi;\n            s=se;\n        }\n        public int compareTo(Object o)//ascending order\n        {\n            pair pr=(pair)o;\n            if(s>pr.s)\n                return 1;\n            if(s==pr.s)\n            {\n                if(f>pr.f)\n                    return 1;\n                else\n                    return -1;\n            }\n            else\n                return -1;\n        }\n        public boolean equals(Object o)\n        {\n            pair ob=(pair)o;\n            if(o!=null)\n            {\n                if((ob.f==this.f)&&(ob.s==this.s))\n                    return true;\n            }\n            return false;\n        }\n        public int hashCode()\n        {\n            return (this.f+\" \"+this.s).hashCode();\n        }\n    }\n    public class triplet implements Comparable\n    {\n        int f,t;\n        int s;\n        triplet(int f,int s,int t)\n        {\n            this.f=f;\n            this.s=s;\n            this.t=t;\n        }\n        public boolean equals(Object o)\n        {\n            triplet ob=(triplet)o;\n            int ff;\n            int ss;\n            int tt;\n            if(o!=null)\n            {\n                ff=ob.f;\n                ss=ob.s;\n                tt=ob.t;\n                if((ff==this.f)&&(ss==this.s)&&(tt==this.t))\n                    return true;\n            }\n            return false;\n        }\n        public int hashCode()\n        {\n            return (this.f+\" \"+this.s+\" \"+this.t).hashCode();\n        }\n        public int compareTo(Object o)//ascending order\n        {\n            triplet tr=(triplet)o;\n            if(t>tr.t)\n                return 1;\n            else\n                return -1;\n        }\n    }\n    void merge1(int arr[], int l, int m, int r)\n    {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int [n1];\n        int R[] = new int [n2];\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i]<=R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n    void sort1(int arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            int m = (l+r)/2;\n            sort1(arr, l, m);\n            sort1(arr , m+1, r);\n            merge1(arr, l, m, r);\n        }\n    }\n    public static void main(String args[])throws Exception\n    {\n        new Thread(null,new Solution(),\"Solution\",1<<27).start();\n    }\n    public void run()\n    {\n        try\n        {\n            InputReader in = new InputReader(System.in);\n            PrintWriter out = new PrintWriter(System.out);\n            int q=in.ni();\n            while(q--!=0)\n            {\n                int n=in.ni();\n                int r=in.ni();\n                HashSet<Integer>hs=new HashSet<>();\n                ArrayList<Integer>al=new ArrayList<>();\n                for(int i=1;i<=n;i++)\n                {\n                    int x=in.ni();\n                    if(hs.contains(x))\n                        continue;\n                    al.add(x);\n                    hs.add(x);\n                }\n                Collections.sort(al);\n                n=al.size();\n                int ans=100000000;\n                for(int i=0;i<n;i++)\n                {\n                    int x=al.get(i);\n                    int y=(int)Math.ceil((1.0*x)/r);\n                    //out.println(x+\" \"+y);\n                    if(y<=n-1-i)\n                    {\n                        ans=n-1-i;\n                    }\n                }\n                out.println(Math.min(ans,n));\n            }\n            out.close();\n        }\n        catch(Exception e){\n            return;\n        }\n    }\n    static class InputReader {\n\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) {\n                curChar = 0;\n                try {\n                    snumChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int ni() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nl() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int[] nextIntArray(int n) {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public String nextLine() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1024;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    set<int> fu;\n    for (int i = 0; i < n; i++) {\n      int ra;\n      cin >> ra;\n      fu.insert(ra);\n    }\n    vector<int> rar;\n    for (auto a : fu) {\n      rar.push_back(a);\n    }\n    int cont = 0;\n    bool mostrado = false;\n    for (int i = rar.size() - 1; i >= 0; i--) {\n      if (rar[i] - (cont * r) > 0)\n        cont++;\n      else {\n        cout << cont << endl;\n        mostrado = true;\n        break;\n      }\n    }\n    if (!mostrado) cout << cont << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nq = int(input().strip())\n\nfor _ in range(q):\n    n, r = map(int, input().strip().split())\n    a = list(map(int, input().split()))\n\n    s = sorted(set(a), reverse=True)\n    d, cnt = 0, 0\n    for i in s:\n        if i <= d:\n            break\n        d += r\n        cnt += 1\n            \n    print(cnt)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nq=int(input())\n\nfor testcases in range(q):\n    n,r=map(int,input().split())\n    E=list(map(int,input().split()))\n\n    E.append(0)\n\n    E=sorted(set(E))\n\n    for i in range(1,n+1):\n        if E[-i-1]<=r*i:\n            print(i)\n            break\n        \n\n    \n\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\nfor q in range(int(input())):\n    n, r = [int(i) for i in sys.stdin.readline().split()]\n\n    d = sorted(list(set([int(i) for i in sys.stdin.readline().split()])))\n    n = len(d)\n    found = False\n    for i in range(1, n):\n        # v = d[n - i]\n        nv = d[n - i  - 1]\n        # print(\"&&&\", i, r, nv)\n        if r * i >= nv:\n            sys.stdout.write(str(i) + '\\n')\n            found = True\n            break\n    if not found:\n        sys.stdout.write(str(n) + '\\n')"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.buffer.readline\n\nt=int(input())\nans=''\nfor _ in range(t):\n    x,y=map(int,(input().split()))\n    b=list(map(int,input().split()))\n    a=[]\n    s=set()\n    for i in b:\n        if i in s:\n            continue \n        else:\n            s.add(i)\n            a.append(i)\n    a.sort()\n    n=0\n    j=len(a)-1\n    while(j>=0):\n        if a[j]-y*n>0:\n            n+=1 \n            j-=1 \n        else:\n            break \n    temp=str(n)+'\\n'\n    ans+=temp\nprint(ans)\n            "
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.Collections;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.HashSet;\nimport java.util.ArrayList;\n\npublic class Main\n{\n    public static int min_moves(ArrayList<Monster> Queries, int distance)\n    {\n         int numberShots = 0;\n         for( Monster enemy : Queries )\n         {\n            if (enemy.getClass().getName() == \"FlyingMonster\" || enemy.getpos() > distance*numberShots)\n            {\n                numberShots++;\n            }\n         }\n         return numberShots;\n    }\n    public static void main(String[] args)\n    {\n        int numberEnemies, distance;\n        Monster monster;\n        FastReader input = new FastReader();\n        HashSet<Integer> isIn;\n        ArrayList<Monster>  monstersQuery;\n        ArrayList<Integer> numberMoves = new ArrayList<>();\n        \n        int numberQueries = input.nextInt();\n        for(int i = 0; i < numberQueries; i++)\n        {\n            isIn = new HashSet<Integer>();\n            monstersQuery = new ArrayList<Monster>();\n            numberEnemies = input.nextInt();\n            distance = input.nextInt();\n            \n            \n            for(int j = 0; j < numberEnemies; j++)\n            {\n                int position = input.nextInt();\n                if(!isIn.contains(position))\n                {\n                    isIn.add(position);\n                    if(position > 0)\n                    {\n                        monster = new Monster(position);\n                    }\n                    else\n                    {\n                        monster = new FlyingMonster(position);\n                    }\n                     monstersQuery.add(monster);\n                }\n            }\n            \n            Collections.sort( monstersQuery, Collections.reverseOrder());\n            numberMoves.add(min_moves( monstersQuery, distance));\n        }\n    \n        for(int i = 0; i < numberQueries; i++)\n        {\n            System.out.print(Integer.toString(numberMoves.get(i))+\"\\n\");\n        }\n    \n    }\n}\n\t\t\t\nclass Monster implements Comparable<Monster>\n{\n    private boolean is_alive = true;\n    private int position;\n    \n    public Monster(int p)\n    {\n        this.position = p;\n    }\n    \n    public int getpos()\n    {\n        return this.position;\n    }\n    \n    public void kill()\n    {\n         this.is_alive = false;\n    }\n    \n    public int compareTo(Monster other)\n    {\n        return this.getpos() - other.getpos();\n    }\n}\n\nclass FlyingMonster extends Monster\n{\n    public FlyingMonster(int position)\n    {\n        super(position);\n    }\n}\n\nclass FastReader\n{\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader()\n    {\n        br = new BufferedReader(new\n                InputStreamReader(System.in));\n    }\n\n\n    String next()\n    {\n        while (st == null || !st.hasMoreElements())\n        {\n            try\n            {\n                st = new StringTokenizer(br.readLine());\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt()\n    {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong()\n    {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble()\n    {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine()\n    {\n        String str = \"\";\n        try\n        {\n            str = br.readLine();\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.Random;\nimport java.io.PrintWriter;\n/*\n    Solution Created: 18:02:01 08/10/2019\n    Custom Competitive programming helper.\n*/\npublic class Main {\n\tpublic static void solve(Reader in, Writer out) {\n\t\tint t = in.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n = in.nextInt();\n\t\t\tint r = in.nextInt();\n\t\t\tint[] a = in.na(n);\n\t\t\tSort.sortArray(a);\n\t\t\tint ans = 0;\n\t\t\tint rem = 0;\n\t\t\tfor(int i = n-1; i>=0; i--) {\n\t\t\t\tif(a[i]-rem<=0) break;\n\t\t\t\twhile(i>0&&a[i]==a[i-1]) i--;\n\t\t\t\tans++;\n\t\t\t\trem+=r;\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tReader in = new Reader();\n\t\tWriter out = new Writer();\n\t\tsolve(in, out);\n\t\tout.exit();\n\t}\n\nstatic class Graph {\n\tprivate ArrayList<Integer> con[];\n\tprivate boolean[] visited;\n\n\tpublic Graph(int n) {\n\t\tcon = new ArrayList[n];\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tcon[i] = new ArrayList();\n\t\tvisited = new boolean[n];\n\t}\n\n\tpublic void reset() {\n\t\tArrays.fill(visited, false);\n\t}\n\n\tpublic void addEdge(int v, int w) {\n\t\tcon[v].add(w);\n\t}\n\n\tpublic void dfs(int cur) {\n\t\tvisited[cur] = true;\n\t\tfor (Integer v : con[cur]) {\n\t\t\tif (!visited[v]) {\n\t\t\t\tdfs(v);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic void bfs(int cur) {\n\t\tQueue<Integer> q = new LinkedList<>();\n\t\tq.add(cur);\n\t\tvisited[cur] = true;\n\t\twhile (!q.isEmpty()) {\n\t\t\tcur = q.poll();\n\t\t\tfor (Integer v : con[cur]) {\n\t\t\t\tif (!visited[v]) {\n\t\t\t\t\tvisited[v] = true;\n\t\t\t\t\tq.add(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nstatic class Reader {\n\tstatic BufferedReader br;\n\tstatic StringTokenizer st;\n\tprivate int charIdx = 0;\n\tprivate String s;\n\n\tpublic Reader() {\n\t\tthis.br = new BufferedReader(new InputStreamReader(System.in));\n\t}\n\n\tpublic int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nextInt();\n\t\treturn a;\n\t}\n\n\tpublic double[] nd(int n) {\n\t\tdouble[] a = new double[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nextDouble();\n\t\treturn a;\n\t}\n\n\tpublic char nextChar() {\n\t\tif (s == null || charIdx >= s.length()) {\n\t\t\tif (st == null || !st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\treadLine();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\ts = st.nextToken();\n\t\t\tcharIdx = 0;\n\t\t}\n\t\treturn s.charAt(charIdx++);\n\t}\n\n\tpublic long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = nextLong();\n\t\treturn a;\n\t}\n\n\tpublic char[] nca() {\n\t\treturn next().toCharArray();\n\t}\n\n\tpublic String[] nS(int n) {\n\t\tString[] a = new String[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = next();\n\t\treturn a;\n\t}\n\n\tpublic int nextInt() {\n\t\tif (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\treadLine();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\treturn Integer.parseInt(st.nextToken());\n\t}\n\n\tpublic double nextDouble() {\n\t\tif (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\treadLine();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\treturn Double.parseDouble(st.nextToken());\n\t}\n\n\tpublic Long nextLong() {\n\t\tif (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\treadLine();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\treturn Long.parseLong(st.nextToken());\n\t}\n\n\tpublic String next() {\n\t\tif (st == null || !st.hasMoreTokens())\n\t\t\ttry {\n\t\t\t\treadLine();\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic static void readLine() {\n\t\ttry {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t} catch (Exception e) {\n\t\t}\n\t}\n}\n\nstatic class Sort {\n\tstatic Random random = new Random();\n\tpublic static void sortArray(int[] s) {\n        shuffle(s);\n        Arrays.sort(s);\n    }\n\tpublic static void sortArray(long[] s) {\n        shuffle(s);\n        Arrays.sort(s);\n    }\n\tpublic static void sortArray(String[] s) {\n        shuffle(s);\n        Arrays.sort(s);\n    }\n\tpublic static void sortArray(char[] s) {\n        shuffle(s);\n        Arrays.sort(s);\n    }\n    private static void shuffle(int[] s) {\n        for (int i = 0; i < s.length; ++i) {\n            int j = random.nextInt(i + 1);\n            int t = s[i];\n            s[i] = s[j];\n            s[j] = t;\n        }\n    }\n    private static void shuffle(long[] s) {\n        for (int i = 0; i < s.length; ++i) {\n            int j = random.nextInt(i + 1);\n            long t = s[i];\n            s[i] = s[j];\n            s[j] = t;\n        }\n    }\n    private static void shuffle(String[] s) {\n        for (int i = 0; i < s.length; ++i) {\n            int j = random.nextInt(i + 1);\n            String t = s[i];\n            s[i] = s[j];\n            s[j] = t;\n        }\n    }\n    private static void shuffle(char[] s) {\n        for (int i = 0; i < s.length; ++i) {\n            int j = random.nextInt(i + 1);\n            char t = s[i];\n            s[i] = s[j];\n            s[j] = t;\n        }\n    }\n}\n\nstatic class Util{\n\t    static boolean isPrime(int n) { \n\t        if (n <= 1) return false; \n\t        if (n <= 3) return true; \n\t        if (n % 2 == 0 || n % 3 == 0) return false; \n\t        for (int i = 5; i * i <= n; i = i + 6) \n\t            if (n % i == 0 || n % (i + 2) == 0) \n\t            return false; \n\t        return true; \n\t    }\n\t\tpublic static int upperBound(long[] a, long v) {\n\t\t\tint l=0, h=a.length-1, ans = -1;\n\t\t\twhile(l<h) {\n\t\t\t\tint mid = (l+h)/2;\n\t\t\t\tif(a[mid]<=v) {\n\t\t\t\t\tans = mid;\n\t\t\t\t\tl = mid+1;\n\t\t\t\t}else h = mid-1;\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t\tpublic static int lowerBound(long[] a, long v) {\n\t\t\tint l=0, h=a.length-1, ans = -1;\n\t\t\twhile(l<h) {\n\t\t\t\tint mid = (l+h)/2;\n\t\t\t\tif(v<=a[mid]) {\n\t\t\t\t\tans = mid;\n\t\t\t\t\th = mid-1;\n\t\t\t\t}else l = mid-1;\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t    public static boolean[] getSieve(int n) {\n\t        boolean[] isPrime = new boolean[n+1];\n\t        for (int i = 2; i <= n; i++) isPrime[i] = true;\n\t        for (int i = 2; i*i <= n; i++) if (isPrime[i]) \n\t                for (int j = i; i*j <= n; j++) isPrime[i*j] = false;\n\t        return isPrime;\n\t    }\n\t    public static int gcd(int a, int b) { \n\t        if (a == 0) \n\t            return b; \n\t        return gcd(b%a, a); \n\t    }\n\t\tpublic static long modAdd(long a, long b, long mod) {\n\t\t\treturn (a%mod+b%mod)%mod;\n\t\t}\n\t\tpublic static long modMul(long a, long b, long mod) {\n\t\t\treturn ((a%mod)*(b%mod))%mod;\n\t\t}\n\t\tpublic static void dbg(Object... o) { \n\t\t\tSystem.out.println(Arrays.deepToString(o)); \n\t\t}\n\t}\n\nstatic class Writer {\n\tprivate PrintWriter pw;\n\tpublic Writer(){\n\t\tpw = new PrintWriter(System.out);\n\t}\n\t\n\tpublic void printArray(int[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t}\n\tpublic void printlnArray(int[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t\tpw.println();\n\t}\n\tpublic void printArray(long[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t}\n\tpublic void printlnArray(long[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t\tpw.println();\n\t}\n\tpublic void print(Object o) {\n\t\tpw.print(o.toString());\n\t}\n\tpublic void println(Object o) {\n\t\tpw.println(o.toString());\n\t}\n\tpublic void println() {\n\t\tpw.println();\n\t}\n\tpublic void flush() {\n\t\tpw.flush();\n\t}\n\tpublic void exit() {\n\t\tpw.close();\n\t}\n}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*; \nimport java.math.*;\nimport java.util.*;\n \npublic class Main {\n\t//static final long MOD = 998244353;\n\tstatic final int MOD = 1000000007;\n\tstatic boolean[] visited;\n    public static void main(String[] args) throws IOException {\n        FastScanner sc = new FastScanner();\n        int Q = sc.nextInt();\n        StringBuilder print = new StringBuilder();\n        for (int q = 0; q < Q; q++) {\n        \tint N = sc.nextInt();\n        \tdouble R = sc.nextDouble();\n        \tTreeSet<Integer> nums = new TreeSet<Integer>();\n        \tfor (int i = 0; i < N; i++)\n        \t\tnums.add(sc.nextInt());\n        \tint ans = nums.size(); //just kill them all individually\n        \tint i = 1;\n        \tfor (int num: nums) {\n        \t\tint guess = Math.max((int)Math.ceil(num/R),nums.size()-i);\n        \t\tans = Math.min(ans,guess);\n        \t\ti++;\n        \t}\n        \tprint.append(ans + \"\\n\");\n        }\n        System.out.print(print);\n    }\n    \n    public static long power(long x, long y, long p) { \n        // Initialize result \n        long res = 1;      \n         \n        // Update x if it is more   \n        // than or equal to p \n        x = x % p;  \n      \n        while (y > 0) \n        { \n            // If y is odd, multiply x \n            // with result \n            if((y & 1)==1) \n                res = (res * x) % p; \n      \n            // y must be even now \n            // y = y / 2 \n            y = y >> 1;  \n            x = (x * x) % p;  \n        } \n        return res; \n    }\n    \n    public static long dist(int[] point, int[] point2) {\n    \treturn (long)(Math.pow((point2[1]-point[1]),2)+Math.pow((point2[0]-point[0]),2));\n    }\n    \n    public static long gcd(long a, long b) {\n    \tif (b == 0)\n    \t\treturn a;\n    \telse\n    \t\treturn gcd(b,a%b);\n    }\n    \n    public static int[][] sort(int[][] array) {\n    \t//Sort an array (immune to quicksort TLE)\n\t\tRandom rgen = new Random();\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t    int randomPosition = rgen.nextInt(array.length);\n\t\t    int[] temp = array[i];\n\t\t    array[i] = array[randomPosition];\n\t\t    array[randomPosition] = temp;\n\t\t}\n\t\tArrays.sort(array, new Comparator<int[]>() {\n\t\t\t  @Override\n        \t  public int compare(int[] arr1, int[] arr2) {\n\t\t\t\t  return arr1[0]-arr2[0];\n\t          }\n\t\t});\n\t\treturn array;\n\t}\n    \n    static class FastScanner { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastScanner() { \n            br = new BufferedReader(new InputStreamReader(System.in)); \n        } \n  \n        String next() { \n            while (st == null || !st.hasMoreElements()) { \n                try { \n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException  e) { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() { \n            String str = \"\"; \n            try { \n                str = br.readLine(); \n            } catch (IOException e) {\n                e.printStackTrace(); \n            } \n            return str; \n        }\n    }\n}\nclass Node {\n\tpublic HashSet<Node> children;\n\tpublic int n;\n\t\n\tpublic Node(int n) {\n\t\tthis.n = n;\n\t\tchildren = new HashSet<Node>();\n\t}\n\t\n\tpublic void addChild(Node node) {\n\t\tchildren.add(node);\n\t}\n\t\n\tpublic void removeChild(Node node) {\n\t\tchildren.remove(node);\n\t}\n\n\t/* (non-Javadoc)\n\t * @see java.lang.Object#hashCode()\n\t */\n\t@Override\n\tpublic int hashCode() {\n\t\treturn n;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (! (obj instanceof Node)) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tNode node = (Node) obj;\n\t\t\treturn (n == node.n);\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nint a[maxn];\nint main() {\n  int T;\n  int n, r;\n  cin >> T;\n  while (T--) {\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n    sort(a, a + n);\n    int cnt = unique(a, a + n) - a;\n    int ans = 0;\n    for (int i = cnt - 1; i >= 0; i--) {\n      if (a[i] - (cnt - 1 - i) * r <= 0) break;\n      ans++;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint a[N];\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n    sort(a + 1, a + 1 + n);\n    int m = unique(a + 1, a + n + 1) - (a + 1);\n    int cnt = 0;\n    for (int i = m; i > 0; --i) {\n      if (cnt * r >= a[i]) break;\n      ++cnt;\n    }\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import random\nimport time\n\ndef kill_them_all(num_of_enemy, distance_from_explotion, initial_positions):\n    count = 1\n    initial_positions = sorted(initial_positions, reverse=True)\n    index = 1\n    prev_item = initial_positions[0]\n    for item in initial_positions:\n        if prev_item > item:\n            prev_item = item\n        else:\n            continue\n        if item - count * distance_from_explotion > 0:\n            count += 1\n        else:\n            break\n    return count\n\n\nif __name__ == \"__main__\":\n    query_n = int(input())\n    case = []\n    for i in range(query_n):\n        inp = input()\n        items = inp.split(\" \")\n        num_of_enemy = int(items[0])\n        distance_from_explotion = int(items[1])\n        inp = input()\n        items = inp.split(\" \")\n        initial_positions = [int(i) for i in items]\n        count = kill_them_all(num_of_enemy, distance_from_explotion, initial_positions)\n        case.append(count)\n    for c in case:\n        print(c)"
        },
        {
            "language": 3,
            "solution": "# Why do we fall ? So we can learn to pick ourselves up.\nfrom sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\ndef solve():\n    n,k = map(int,input().split())\n    xi = sorted(list(set([int(i)-k for i in input().split()])))\n    if len(xi) == 1:\n        print(str(1) + \"\\n\")\n    else:\n        r = 0\n        ind = len(xi)-2\n        while ind > -1:\n            if xi[ind]-r*k > 0:\n                ind -= 1\n                r += 1\n            else:\n                break\n        print(str(r+1) + \"\\n\")\nq = int(input())\nfor _ in range(0,q):\n    \n    solve()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid err(istream_iterator<string> it) {}\ntemplate <typename T, typename... Args>\nvoid err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << a << \"; \";\n  err(++it, args...);\n}\nconst int NMAX = 1e5 + 5;\nint q, n, r, x[NMAX];\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    for (int i = 1; i <= n; i++) {\n      cin >> x[i];\n    }\n    sort(x + 1, x + n + 1);\n    int offset = 0;\n    int res = 0;\n    for (int i = n; i >= 1; i--) {\n      if (i < n && x[i] == x[i + 1]) continue;\n      int cur = x[i] - offset;\n      if (cur <= 0)\n        break;\n      else {\n        res++;\n        offset += r;\n      }\n    }\n    cout << res << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int hcf(long long int a, long long int b) {\n  if (b == 0) return a;\n  return hcf(b, a % b);\n}\nlong long int lcm(long long int a, long long int b) {\n  return (a * b) / hcf(a, b);\n}\nbool isprime(long long int n) {\n  if (n == 1) return false;\n  for (long long int i = 2; i * i <= n; ++i) {\n    if (n % i == 0) return false;\n  }\n  return true;\n}\nvoid solve() {\n  long long int n, r;\n  cin >> n >> r;\n  vector<long long int> a;\n  for (long long int i = 1; i <= n; i++) {\n    long long int qq;\n    cin >> qq;\n    a.push_back(qq);\n  }\n  sort(a.begin(), a.end());\n  long long int ans = 0;\n  vector<long long int> v;\n  v.push_back(a[0]);\n  for (long long int i = 1; i <= n - 1; i++)\n    if (a[i] != a[i - 1]) v.push_back(a[i]);\n  if (n == 1) {\n    cout << 1 << \"\\n\";\n    return;\n  }\n  long long int mx;\n  long long int i = v.size() - 1;\n  while (i > 0) {\n    ans++;\n    mx = v[i - 1] - ans * r;\n    if (mx <= 0) break;\n    i--;\n  }\n  if (mx > 0) ans++;\n  {\n    cout << ans << \"\\n\";\n    return;\n  }\n}\nvoid onlinejudge() {}\nint main() {\n  onlinejudge();\n  long long int ttt;\n  ttt = 1;\n  cin >> ttt;\n  cout << fixed << setprecision(16);\n  while (ttt--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3e4 + 5;\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    set<int> s;\n    priority_queue<int> Q;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      if (!s.count(x)) {\n        s.insert(x);\n        Q.push(x);\n      }\n    }\n    long long cnt = 0;\n    while (!Q.empty()) {\n      if (Q.top() <= cnt * r) break;\n      Q.pop();\n      cnt++;\n    }\n    cout << cnt << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#########################################################################################################\\\n#########################################################################################################\n###################################The_Apurv_Rathore#####################################################\n#########################################################################################################\n#########################################################################################################\nimport sys,os,io\nfrom sys import stdin\nfrom math import log, gcd, ceil\nfrom collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop\nimport math \nif(os.path.exists('input.txt')):\n    sys.stdin = open(\"input.txt\",\"r\") ; sys.stdout = open(\"output.txt\",\"w\")\ndef ncr(n, r, p):  \n    num = den = 1\n    for i in range(r):\n        num = (num * (n - i)) % p\n        den = (den * (i + 1)) % p\n    return (num * pow(den,\n                      p - 2, p)) % p\ndef primeFactors(n): \n    l = []\n    while n % 2 == 0: \n        l.append(2)\n        n = n / 2\n    for i in range(3,int(math.sqrt(n))+1,2): \n        while n % i== 0: \n            l.append(int(i))\n            n = n / i \n    if n > 2: \n        l.append(n)\n    return list(set(l))\ndef power(x, y, p) : \n\tres = 1\n\tx = x % p \n\tif (x == 0) : \n\t\treturn 0\n\twhile (y > 0) : \n\t\tif ((y & 1) == 1) : \n\t\t\tres = (res * x) % p \n\t\ty = y >> 1\t # y = y/2 \n\t\tx = (x * x) % p \t\t\n\treturn res \ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n+1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\ndef countdig(n):\n    c = 0\n    while (n > 0):\n        n //= 10\n        c += 1\n    return c\ndef prefix_sum(arr):\n    r = [0] * (len(arr)+1)\n    for i, el in enumerate(arr):\n        r[i+1] = r[i] + el\n    return r\ndef divideCeil(n,x):\n    if (n%x==0):\n        return n//x\n    return n//x+1\ndef si():\n    return input()\ndef ii():\n    return int(input())\ndef li():\n    return list(map(int,input().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\n\n\n\n\n#__________________________TEMPLATE__________________OVER_______________________________________________________\n\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\nt = 1\nt = int(input())\nfor _ in range(t):\n    n,r = li()\n    l = li()\n    l = list(set(l))\n    n = len(l)\n    l.sort()\n    i = n-1\n    toSub = 0\n    cnt = 0\n    while(i>=0):\n        if (l[i]-toSub>0):\n            cnt+=1\n            toSub+=r \n            i-=1\n        else:\n            break \n    print(cnt)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef main():\n    for _ in range(int(input())):\n        x, y = [int(x) for x in sys.stdin.readline().split()]\n        l = list(set(int(x) for x in sys.stdin.readline().split()))\n        l.sort()\n        n = len(l)\n        low = 0\n        high = n-1\n        ans = 0\n        while low <= high:\n            mid = (low+high)//2\n            if l[mid]-(n-mid-1)*y > 0:\n                ans = n-mid\n                high = mid-1\n            else:\n                low = mid+1\n        print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ninput = lambda : sys.stdin.readline().rstrip()\n\nq = int(input())\nfor _ in range(q):\n    n, r = list(map(int, input().split()))\n    arr = sorted(list(set(map(int, input().split()))), reverse=True)\n    result = 0\n    tt = 0\n    for el in arr:\n        if tt >= el:\n            break\n        result += 1\n        tt += r\n    print(result)"
        },
        {
            "language": 1,
            "solution": "import sys\nimport math\n \ndef output(s):\n    if isinstance(s, int):\n        sys.stdout.write(str(s))\n    else:\n        sys.stdout.write(s)\n \ninput = []\n \nfor line in sys.stdin:\n    input.append(line.split())\n \nq = int(input[0][0])\n\n \nfor sample in range(q):\n    n = int(input[2 * sample + 1][0])\n    d = int(input[2 * sample + 1][1])\n    arr = [int(x) for x in input[2 * sample + 2]]\n \n    s = set(arr)\n\n    sor = list(s)\n    sor.sort()\n\n    res = 0\n    value = 0\n\n    while len(sor) > 0 and sor[-1] > value:\n        last = sor.pop()\n        value +=d\n        res += 1\n \n    output(res)\n    if sample != q - 1:\n        output('\\n')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long t, n, r, a[100100], d, ans;\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    sort(a + 1, a + n + 1);\n    long long poz = n;\n    ans = 0;\n    d = 0;\n    while (poz > 0 && a[poz] - d > 0) {\n      while (a[poz] == a[poz - 1]) poz--;\n      poz--;\n      d += r;\n      ans++;\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfor i in range(int(input())):\n    n,r=map(int,input().split())\n    b=sorted(list(set(list(map(int,input().split())))),reverse=True)\n    j = 0\n    s = 0\n    n = len(b)\n    while j < n and b[j]>s:\n        j += 1\n        s += r\n\n    print(j)\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division,print_function\nimport sys\nl=(sys.__stdin__.read().split(\"\\n\"))\ninde=1\naff=[]\ndef f():\n    global inde\n    n,r=list(map(int,l[inde].split()))\n    inde+=1\n    L=sorted(list(map(int,l[inde].split())))\n    inde +=1\n    i=n-2\n    nb=1\n    while L[i]>r*nb and i>=0:\n        if L[i]!=L[i+1]:\n            nb+=1\n        i-=1\n    aff.append(nb)\nfor q in range(int(l[0])):\n    f()\nprint(\"\\n\".join(map(str,aff)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[200005];\nbool cmp(int x, int y) { return x > y; }\nint main() {\n  int q, n, r, sum, ans;\n  scanf(\"%d\", &q);\n  while (q--) {\n    sum = 0, ans = 0;\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    sort(a, a + n, cmp);\n    for (int i = 0; i < n; i++) {\n      while (a[i] == a[i + 1]) {\n        i++;\n      }\n      sum += r;\n      ans++;\n      if (a[i + 1] - sum <= 0) break;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\nq = int(stdin.readline())\ninfo = []\nlines = []\nfor i in range(q):\n    info.append(tuple(map(int, (stdin.readline().rstrip().split()))))\n    lines.append(sorted(set((map(int, (stdin.readline().rstrip().split()))))))\n\nresult = []\nfor idx, line in enumerate(lines):\n    count = 0\n    sum_dmg = 0\n    for i in range(len(line)-1, -1, -1):\n        if line[i] <= sum_dmg:\n            break\n        sum_dmg += info[idx][1]\n        count += 1\n    result.append(count)\n\nprint('\\n'.join(map(str,result)))\n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint32_t main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n, x, r;\n    scanf(\"%d\", &n);\n    scanf(\"%d\", &r);\n    std::vector<int> a;\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &x);\n      a.push_back(x);\n    }\n    std::sort(a.rbegin(), a.rend());\n    int res = 1, re = r;\n    for (int i = 1; i < n; i++) {\n      if (a[i] == a[i - 1] || re >= a[i]) continue;\n      re += r;\n      res++;\n    }\n    printf(\"%d\\n\", res);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mx = 3e5;\nint n, m, a[mx];\nint main() {\n  int t, ans;\n  cin >> t;\n  while (t--) {\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    sort(a + 1, a + 1 + n);\n    int len = unique(a + 1, a + 1 + n) - a - 1;\n    ans = len;\n    for (int i = 1; i <= len; i++)\n      ans = min(ans, max(a[i] / m + (a[i] % m != 0), len - i));\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n \n \ndef main():\n    q = int(stdin.readline().strip())\n    for _ in range(q):\n        n, r = map(int, stdin.readline().split())\n        a = set(map(int, stdin.readline().split()))\n        if n == 1 or len(a) == 1:\n            print(1)\n            continue\n        a = sorted(a, reverse=True)\n        ans = 0\n        for i in range(len(a) - 1):\n            ans += 1\n            if a[i + 1] <= ans * r:\n                break\n        if a[len(a) - 1] > ans * r:\n            ans += 1\n        print(ans)\n \n \nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long cnt_power(long long n) {\n  long long cnt = 0;\n  while (n > 0) {\n    cnt++;\n    n /= 3;\n  }\n  return cnt;\n}\nvoid solve() {\n  long long n, r;\n  cin >> n >> r;\n  long long a[n];\n  for (long long i = 0; i < n; i++) cin >> a[i];\n  sort(a, a + n);\n  n = unique(a, a + n) - a;\n  long long ans = 0;\n  for (long long i = n - 1; i >= 0; i--) {\n    ans += (a[i] - ans * r > 0);\n  }\n  cout << ans;\n  cout << \"\\n\";\n}\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "consultations = int(input())\n\nfor i in range(consultations):\n  missiles = 0\n  pushes = 0\n  mapA, mapB = map(int,input().split(\" \"))\n  enemy = input().split(\" \")\n  \n  if (mapA == 1):\n    missiles += 1\n  else:\n    enemy = list(set(map(int, enemy)))\n    enemy.sort(reverse = True)\n    for j in enemy:\n      if (pushes >= j):\n        break\n      else:\n        pushes += mapB\n        missiles += 1\n        \n  print(missiles)\n"
        },
        {
            "language": 1,
            "solution": "\"\"\"\n// Author : snape_here - Susanta Mukherjee\n     \n \"\"\"\n \nfrom __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().split())\ndef li(): return list(mi())\n \n \ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n \ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\nmod=1000000007\n\nimport math\n\nimport bisect\n\nabc=\"abcdefghijklmnopqrstuvwxyz\"\n\ndef main():\n\n    for _ in range(ii()):\n        n,r=mi()\n        x=li()\n        x=list(set(x))\n        x.sort(reverse=True)\n        c=0 \n        a=max(x)\n        l=[]\n        for i in range(len(x)):\n            l.append(min(i+1,int(math.ceil(x[i]/r)))) \n        print(max(l))\n\n# region fastio\n\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    main()"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n//import java.math.*;\n \n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\n \n \n \npublic class Main {\n\t\n\tstatic int MD= 998244353;\n    public static void main(String[] args) throws IOException {\n    \tOutputStream outputStream = System.out;\n        InputReader in = new InputReader();\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n \n    static class TaskC {\n    \t\n    \t/*\n    \t * int[] a=new int[n];\n    \t * for(int i=0;i<n;i++){\n    \t * \t\ta[i]=in.nextInt()\n    \t */\n        public void solve(int testNumber, InputReader in, PrintWriter out) throws IOException {   \n        \tint t=in.nextInt();\n        \twhile(t-->0) {\n\t    \t\tint n=in.nextInt();\n\t    \t\tint r=in.nextInt();\n\t    \t\t\n\t    \t\tint[] a=new int[n];\n\t    \t\tfor(int i=0;i<n;i++){\n\t    \t\t\ta[i]=in.nextInt();\n\t    \t\t\t\n\t    \t\t}\n\t    \t\tsort(a,0,n);\n\t    \t\tint cnt=0;\n\t    \t\t\n\t    \t\tfor(int i=n-1;i>=0;i--) {\n\t    \t\t\tif(i<n-1 && a[i]==a[i+1]) {\n\t    \t\t\t\tcontinue;\n\t    \t\t\t}\n\t    \t\t\telse if(a[i]-cnt*r<=0) {\n\t    \t\t\t\tbreak;\n\t    \t\t\t}\n\t    \t\t\telse {\n\t    \t\t\t\tcnt++;\n\t    \t\t\t}\n\t    \t\t}\n\t    \t\tout.println(cnt);\n        \t}\n        }\n\n    }\n   \n    \n      \n    \n    static class InputReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public InputReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n   \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    \n    }\n    static void sort(int[] a, int low, int high) \n    {\n        int N = high - low;         \n        if (N <= 1) \n            return; \n        int mid = low + N/2; \n        sort(a, low, mid); \n        sort(a, mid, high); \n        int[] temp = new int[N];\n        int i = low, j = mid;\n        for (int k = 0; k < N; k++) \n        {\n            if (i == mid)  \n                temp[k] = a[j++];\n            else if (j == high) \n                temp[k] = a[i++];\n            else if (a[j]<a[i]) \n                temp[k] = a[j++];\n            else \n                temp[k] = a[i++];\n        }    \n        for (int k = 0; k < N; k++) \n            a[low + k] = temp[k];         \n    }\n    \n    \n    \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\npublic class Codechef\n{       static PrintWriter out=new PrintWriter(System.out);static FastScanner in = new FastScanner(System.in);static class FastScanner {BufferedReader br;StringTokenizer stok;FastScanner(InputStream is) {br = new BufferedReader(new InputStreamReader(is));}\n        String next() throws IOException {while (stok == null || !stok.hasMoreTokens()) {String s = br.readLine();if (s == null) {return null;}\n                stok = new StringTokenizer(s);}return stok.nextToken();}\n        int ni() throws IOException {return Integer.parseInt(next());}long nl() throws IOException {return Long.parseLong(next());}double nd() throws IOException {return Double.parseDouble(next());}char nc() throws IOException {return (char) (br.read());}String ns() throws IOException {return br.readLine();}\n        int[] nia(int n) throws IOException{int a[] = new int[n];for (int i = 0; i < n; i++)a[i] = ni();return a;}long[] nla(int n) throws IOException {long a[] = new long[n];for (int i = 0; i < n; i++)a[i] = nl();return a;}\n        double[] nda(int n)throws IOException {double a[] = new double[n];for (int i = 0; i < n; i++)a[i] = nd();return a;}int [][] imat(int n,int m) throws IOException{int mat[][]=new int[n][m];for(int i=0;i<n;i++){for(int j=0;j<m;j++)mat[i][j]=ni();}return mat;}\n    }\n\tstatic long mod=Long.MAX_VALUE;\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{   int i,j;\n\t    HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();\n\t\t/*  if(hm.containsKey(z))\n\t\t        hm.put(z,hm.get(z)+1);\n\t\t    else\n\t\t        hm.put(z,1);\n\t\t */       \n        ArrayList<Integer> arr=new ArrayList<Integer>();\n        PriorityQueue<Integer> pq=new PriorityQueue<Integer>();\n        int t=in.ni();\n        while(t--!=0)\n        {   HashSet<Integer> set=new HashSet<Integer>();\n            int n=in.ni();\n            int r=in.ni();\n            int a[]=in.nia(n);\n            int temp=0;\n            int ans=0;\n            sort(a);\n            for(i=n-1;i>=0;i--)\n            {   //out.println(set);\n                if(!set.contains(a[i]))\n                {   if(a[i]-temp>0)\n                    {   //out.println(\"a[i]=\"+a[i]);\n                        ans++;\n                        set.add(a[i]);\n                        temp+=r;\n                    }\n                }    \n            }    \n            out.println(ans);\n        }\n        \n        out.close();\n\t}\n\tstatic class pair implements Comparable<pair>{\n\t\tint x, y;\n\t\tpublic pair(int x, int y){this.x = x; this.y = y;}\n\t\t@Override\n\t\tpublic int compareTo(pair arg0) \n\t\t{   if(x<arg0.x)    return -1;\n\t\t    else if(x==arg0.x)\n\t\t    {   if(y<arg0.y)    return -1;\n\t\t        else if(y>arg0.y)   return 1;\n\t\t        else    return 0;\n\t\t    }\n\t\t    else    return 1;\n\t\t}\n\t}\n\tstatic long gcd(long a,long b)\n\t{   if(b==0)\n\t        return a;\n\t    return gcd(b,a%b);    \n\t}\n\tstatic long exponent(long a,long n)\n\t{   long ans=1;\n\t    while(n!=0)\n\t    {   if(n%2==1)\n\t            ans=(ans*a)%mod;\n\t       a=(a*a)%mod;\n\t       n=n>>1;\n\t    }\n\t    return ans;\n\t}\n\tstatic int binarySearch(int a[], int item, int low, int high) \n    {   if (high <= low) \n            return (item > a[low])?  (low + 1): low; \n        int mid = (low + high)/2; \n        if(item == a[mid]) \n            return mid+1; \n        if(item > a[mid]) \n            return binarySearch(a, item, mid+1, high); \n        return binarySearch(a, item, low, mid-1); \n    } \n    static void merge(int arr[], int l, int m, int r) {   \n        int n1 = m - l + 1; int n2 = r - m; int L[] = new int [n1]; int R[] = new int [n2]; \n        \n        for (int i=0; i<n1; ++i) L[i] = arr[l + i]; for (int j=0; j<n2; ++j) R[j] = arr[m + 1+ j]; int i = 0, j = 0; int k = l; while (i < n1 && j < n2) {   if (L[i] <= R[j]) {   arr[k] = L[i]; i++; } else{   arr[k] = R[j]; j++; } k++; } while (i < n1){   arr[k] = L[i]; i++; k++; } while (j < n2) { arr[k] = R[j];   j++;     k++; } \n    } \n    static void Sort(int arr[], int l, int r) {if (l < r) {   int m = (l+r)/2; Sort(arr, l, m); Sort(arr , m+1, r); merge(arr, l, m, r); } } \n    \n    static void sort(int a[])\n    {Sort(a,0,a.length-1);}\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nfrom typing import List\n\n\ndef kill_em_all(n: int, r: int, x: List[int]) -> int:\n    coordinates = list(sorted(set(x)))\n    point_of_no_return = 0\n    count = 0\n    while coordinates:\n        largest_c = coordinates[-1]\n        if largest_c <= point_of_no_return:\n            break\n        coordinates.pop()\n        point_of_no_return += r\n        count += 1\n    return count\n\ndef test():\n    # assert kill2(5, 1, [8, 9, 7, 10, 81]) == 5\n    assert kill_em_all(3, 2, [1,3,5]) == 2\n\n\nif __name__ == '__main__':\n    lines = stdin.readlines()\n    lines = list([line.rstrip('\\n') for line in reversed(lines) if line != '\\n'])\n    while lines:\n        q = int(lines.pop())\n        result = []\n        for _ in range(q):\n            n, r = map(int, lines.pop().split())\n            x = list(map(int, lines.pop().split()))\n            result.append(str(kill_em_all(n, r, x)))\n        print(\"\\n\".join(result))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class Ugh {\n\tpublic static int min_moves(List<Monster> arr, int n, int d) {\n\t\tCollections.sort(arr);\n\t\tint moves = 0;\n\t\tint first = 0;\n\t\tint last = arr.size()-1;\n\t\tint push = 0;\n\t\twhile(first <= last) {\n\t\t\tmoves++;\n\t\t\tint last_v = arr.get(last).getpos();\n\t\t\twhile(first <= last && arr.get(last).getpos() == last_v) {\n\t\t\t\tlast--;\n\t\t\t}\n\t\t\tif(first > last) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpush = push + d;\n\t\t\twhile(first <= last && arr.get(first).getpos()-push <= 0) {\n\t\t\t\tfirst++;\n\t\t\t}\n\t\t}\n\t\treturn moves;\n\t}\n\tpublic static void main(String[] args) {\n\t\tMyScanner in = new MyScanner();\n\t\tList<Integer> results = new ArrayList<Integer>();\n\t\tint intentos = in.nextInt();\n\t\tfor(int k = 0; k < intentos; k++) {\n\t\t\tint n = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tList<Monster> arr = new ArrayList<Monster>();\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tint pos = in.nextInt();\n\t\t\t\tarr.add(new Monster(pos));\n\t\t\t}\n\t\t\tresults.add(min_moves(arr,n,d));\n\t\t}\n\t\t//in.close();\n\t\tfor(int i: results) {\n\t\t\tSystem.out.println(i);\n\t\t}\n\t\t\n\t}\n\n}\n\nclass Monster implements Comparable<Monster>{\n\tprivate int pos;\n\tpublic Monster(int pos) {\n\t\tthis.pos = pos;\n\t}\n\tpublic void setpos(int pos) {\n\t\tthis.pos = pos;\n\t}\n\tpublic int getpos(){\n\t\treturn pos;\n\t}\n\t@Override\n\tpublic int compareTo(Monster m) {\n\t\treturn this.pos - m.getpos();\n\t}\n\t\n\t\n}\nclass MyScanner {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public MyScanner() {\n       br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine(){\n        String str = \"\";\n\t  try {\n\t     str = br.readLine();\n\t  } catch (IOException e) {\n\t     e.printStackTrace();\n\t  }\n\t  return str;\n    }\n\n }"
        },
        {
            "language": 3,
            "solution": "\ndef solve(n, r, pos):\n    ans = 0\n    pos = list(set(pos))\n    pos.sort(reverse=True)\n\n    to_left = 0\n    for i in pos:\n        if i - to_left <= 0:\n            break\n        to_left += r\n        ans += 1\n\n    return ans\n\n\ndef main():\n    q = int(input())\n    result = []\n    for i in range(q):\n        n, r = map(int, input().split())\n        pos = list(map(int, input().split()))\n\n        res = solve(n, r, pos)\n        result.append(res)\n\n    for r in result:\n        print(r)\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  n,r = map(int,input().split())\n  a = list(map(int,input().split()))\n  b = set(a)\n  a = sorted(list(b))\n  cnt = 0\n  ans = 0\n  while True:\n    ans += 1\n    a.pop()\n    if not a:\n      break\n    rng = ans*r\n    while cnt < len(a) and a[cnt] <= rng:\n      cnt += 1\n    if cnt == len(a):\n      break\n  print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n, r;\n    cin >> n >> r;\n    set<int> st;\n    for (int i = 0; i < n; i++) {\n      int x;\n      cin >> x;\n      st.insert(x);\n    }\n    n = st.size();\n    vector<int> a;\n    for (int x : st) a.push_back(x);\n    int ans = n;\n    for (int i = 0; i + 1 < n; i++) {\n      int need = a[i] / r + (a[i] % r > 0);\n      ans = min(ans, max(need, n - i - 1));\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "'use strict'\n \nconst q = parseInt(readline());\n \nconst fn = (n, r, x) => {\n    let i = 0;\n    while (x[i] - i * r > 0) i++;\n    return i; \n}\n \nfor(let i = 0; i < q; i++) {\n    const nr = readline().split(' ');\n    const x = [ ...(new Set(readline().split(' ')))].sort((A, B) => B - A);\n    print(fn(nr[0], nr[1], x));\n}"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class A implements Runnable {\n\tFastReader scn;\n\tPrintWriter out;\n\tString INPUT =\"\";\n\t\n\t\n\t long nextPrime(long n) \n    { \n        BigInteger b = new BigInteger(String.valueOf(n)); \n        return Long.parseLong(b.nextProbablePrime().toString()); \n    } \n\t\n\n\tvoid solve(){\n\t\tint t = scn.nextInt();\n\t\t\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n = scn.nextInt();\n\t\t\tlong r = scn.nextLong();\n\t\t\t\n\t\t\tlong[] a =scn.nextLongArray(n);\n\t\t\t\n\t\t\tArrayList<Long> ar = new ArrayList<>();\n\t\t\t\n\t\t\tHashSet<Long> hs = new HashSet<>();\n\t\t\t//Arrays.sort(a);\n\t\t\t\n\t\t\tfor(int i = 0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(hs.contains(a[i]))\n\t\t\t\t\tcontinue;\n\t\t\t\telse {\n\t\t\t\t\t\ths.add(a[i]);\n\t\t\t\t\t\tar.add(a[i]);\n\t\t\t\t}\n\t\t\t//\tout.println(a[i]);\n\t\t\t}\n\t\t\tCollections.sort(ar);\n\t\t\tlong ans=0;\n\t\t\tlong sub = 0;\n\t\t\tObject[] k=ar.toArray();\n\t\t\tfor(int i=k.length-1;i>=0;i--)\n\t\t\t{\n\t\t\t\t//out.print(k[i]+\" \");\n\t\t\t\tif((long)k[i]-sub<=0)\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tans++;\n\t\t\t\tsub+=r;\n\t\t\t}\n\t\t\t\n\t\t\tout.println(ans);\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\t\n\t} \n\t\n\tstatic class Pair\n\t{\n\t    long a;\n\t    long b;\n\t   \n\t    Pair(long a,long b)\n\t    {\n\t        this.a = a;\n\t        this.b = b;\n\t    }\n\t}\n\tstatic class Compare\n\t{\n\t\tstatic void compare(Pair ar[])\n\t\t{\n\t\t\tArrays.sort(ar, new Comparator<Pair>(){\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(Pair p1,Pair p2)\n\t\t\t\t{\n\t\t\t\t\treturn (int) (p1.a-p2.a);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\tpublic static int[] radixSort(int[] f){ return radixSort(f, f.length); }\n\tint[][] packU(int n, int[] from, int[] to) {\n\t\tint[][] g = new int[n][];\n\t\tint[] p = new int[n];\n\t\tfor (int f : from)\n\t\t\tp[f]++;\n\t\tfor (int t : to)\n\t\t\tp[t]++;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tg[i] = new int[p[i]];\n\t\tfor (int i = 0; i < from.length; i++) {\n\t\t\tg[from[i]][--p[from[i]]] = to[i];\n\t\t\tg[to[i]][--p[to[i]]] = from[i];\n\t\t}\n\t\treturn g;\n\t}\n\n\t\n\tpublic static int[] radixSort(int[] f, int n)\n\t{\n\t\tint[] to = new int[n];\n\t\t{\n\t\t\tint[] b = new int[65537];\n\t\t\tfor(int i = 0;i < n;i++)b[1+(f[i]&0xffff)]++;\n\t\t\tfor(int i = 1;i <= 65536;i++)b[i]+=b[i-1];\n\t\t\tfor(int i = 0;i < n;i++)to[b[f[i]&0xffff]++] = f[i];\n\t\t\tint[] d = f; f = to;to = d;\n\t\t}\n\t\t{\n\t\t\tint[] b = new int[65537];\n\t\t\tfor(int i = 0;i < n;i++)b[1+(f[i]>>>16)]++;\n\t\t\tfor(int i = 1;i <= 65536;i++)b[i]+=b[i-1];\n\t\t\tfor(int i = 0;i < n;i++)to[b[f[i]>>>16]++] = f[i];\n\t\t\tint[] d = f; f = to;to = d;\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic void run() {\n\t\tlong time = System.currentTimeMillis();\n\t\tboolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\t\tout = new PrintWriter(System.out);\n\t\tscn = new FastReader(oj);\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!oj) {\n\t\t\tSystem.out.println(Arrays.deepToString(new Object[] { System.currentTimeMillis() - time + \" ms\" }));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new A(), \"Main\", 1 << 26).start();\n\t}\n\n\tclass FastReader {\n\t\tInputStream is;\n\n\t\tpublic FastReader(boolean onlineJudge) {\n\t\t\tis = onlineJudge ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\t}\n\n\t\tbyte[] inbuf = new byte[1024];\n\t\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\t\tint readByte() {\n\t\t\tif (lenbuf == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (ptrbuf >= lenbuf) {\n\t\t\t\tptrbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn inbuf[ptrbuf++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tint skip() {\n\t\t\tint b;\n\t\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t\t;\n\t\t\treturn b;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tchar nextChar() {\n\t\t\treturn (char) skip();\n\t\t}\n\n\t\tString next() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((!isSpaceChar(b) || b == ' ')) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tchar[] next(int n) {\n\t\t\tchar[] buf = new char[n];\n\t\t\tint b = skip(), p = 0;\n\t\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t\t}\n\n\t\tint nextInt() {\n\t\t\tint num = 0, b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\tlong num = 0;\n\t\t\tint b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tchar[][] nextMatrix(int n, int m) {\n\t\t\tchar[][] map = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next(m);\n\t\t\treturn map;\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tvoid printArray(long[] k)\n\t\t{\n\t\t\tfor(int i =0;i<k.length;i++)\n\t\t\t\tout.print(k[i]);\n\t\t}\n\t\tArrayList<Integer> nArray(int n) {\n\t\t\tArrayList<Integer> a = new ArrayList<>();\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta.add(nextInt());\n\t\t\t\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] next2DInt(int n, int m) {\n\t\t\tint[][] arr = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[][] next2DLong(int n, int m) {\n\t\t\tlong[][] arr = new long[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLongArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] shuffle(int[] array) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < array.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tarray[i] = array[i] ^ array[j];\n\t\t\t\tarray[j] = array[i] ^ array[j];\n\t\t\t\tarray[i] = array[i] ^ array[j];\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\tint[] uniq(int[] arr) {\n\t\t\tArrays.sort(arr);\n\t\t\tint[] rv = new int[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\t\tint[] reverse(int[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "def solution(s):\n    loc_str = str\n    for i in range(t):\n        p, r = map(int, input().split())\n        s = sorted(map(int, set(input().split())), reverse=True)\n        res = acc = 0\n        for k in s:\n            if k - acc <= 0: break\n            res += 1\n            acc += r\n        yield loc_str(res)\n\n\n\nt = int(input())\nprint(*solution(t), sep=\"\\n\")\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\n\npublic class CF1238_D2_B {\n    public static void main(String[] args) {\n        FastScanner scanner = new FastScanner();\n        int t = scanner.nextInt();\n        StringBuilder out = new StringBuilder();\n        for (int i = 0; i < t; i++) {\n            solve(scanner, out);\n        }\n        System.out.print(out);\n\n    }\n\n    private static void solve(FastScanner scanner, StringBuilder out) {\n        int n = scanner.nextInt();\n        int r = scanner.nextInt();\n        HashSet<Integer> set = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            set.add(scanner.nextInt());\n        }\n        n = set.size();\n        int[] arr = new int[set.size()];\n        int i = 0;\n        for (int x : set) {\n            arr[i++] = x;\n        }\n        Arrays.sort(arr);\n        int dist = 0;\n        i = n - 1;\n        int count = 0;\n        while (i >= 0 && arr[i] > dist) {\n            dist += r;\n            i--;\n            count++;\n        }\n        out.append(count).append('\\n');\n    }\n\n    static class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        int[] nextArray(int n) {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n        Integer[] nextArray(int n, boolean object) {\n            Integer[] arr = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "tests = int(input())\ns = ''\ndef shots():\n    shots = 0\n    for m in (monsters):\n        if m > (r*shots):\n            shots += 1\n        else:\n            return str(shots)\n\n    return str(shots)\n\nfor k in range(tests):\n    n, r = map(int, input().split())\n    monsters = sorted(list(set(map(int, input().split()))), reverse=True)\n    s += shots() + '\\n'\n\nprint(s)"
        },
        {
            "language": 3,
            "solution": "\n# b\nans_str=''\nfor i in range(int(input())):\n    n,r=map(int,input().split())\n    v=set(map(int,input().split()))\n    values=sorted(v,reverse=True)\n    ans=0\n    kill=0\n    for i in values:\n        if i<=kill:\n            break\n        ans+=1\n        kill+=r\n    ans_str= ans_str + str(ans) + '\\n'\nprint(ans_str)\n    \n            \n        \n    "
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n,r = map(int,input().split())\n    arr= sorted(list(set(list(map(int,input().split())))),reverse=True)\n    i = 0\n    se = 0\n    while i<len(arr) and arr[i]-se>0:\n        i+=1\n        se+=r\n    print (i)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.buffer.readline #FOR READING PURE INTEGER INPUTS (space separation ok)\n\n\nq=int(input())\nfor _ in range(q):\n    n,r=[int(x) for x in input().split()]\n    arr=[int(x) for x in input().split()]\n    \n    arr2=set(arr)\n    arr=list(arr2)\n    arr.sort()\n    \n    #with every shot, every monster move left by r. instead, move the 0 point right by r\n    zeroPt=0\n    ptr=len(arr)-1 #right pointer\n    cnt=0\n    while True:\n        if ptr==-1:\n            break\n        if arr[ptr]<=zeroPt:\n            break\n        cnt+=1\n        zeroPt+=r\n        ptr-=1\n#    print('here')\n    print(cnt)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    set<long long> s;\n    long long x;\n    for (int i = 0; i < n; i++) {\n      cin >> x;\n      s.insert(x);\n    }\n    long long p = 0;\n    while (!s.empty()) {\n      int x = *s.rbegin();\n      if (x - (p * r) <= 0) {\n        break;\n      } else {\n        p++;\n        s.erase(x);\n      }\n    }\n    cout << p << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.io.StreamTokenizer;\nimport java.io.IOException;\n\npublic class Killing_Monsters {\n \n\tpublic static void main(String [] args) throws IOException {\n\t\tnew Killer();\n\t}\n\n}\n\nclass Killer {\n\t\n\tint q;\n\tint n, r;\n\tint [] x;\n\t\n\tKiller() throws IOException {\n\t\tQuickInput in = new QuickInput();\n\t\tq = in.nextInt();\n\t\tfor (int u = 0; u < q; u++){\n\t\t\tn = in.nextInt();\n\t\t\tr = in.nextInt();\n\t\t\tx = new int [n];\n\t\t\tfor (int v = 0; v < n; v++)\n\t\t\t\tx[v] = in.nextInt();\n\t\t\tsolve();\n\t\t}\n\t}\n\t\t\n\tvoid solve(){\n\t\tmerge_sort(0, x.length - 1);\n\t\tlong shift = 0;\n\t\tint answer = 0;\n\t\tint last = -1;\n\t\tfor (int i = n - 1; i >= 0; i--)\n\t\t\tif (x[i] != last && x[i] - shift > 0){\n\t\t\t\tlast = x[i];\n\t\t\t\tshift += r;\n\t\t\t\tanswer++;\n\t\t\t}\n\t\tSystem.out.println(answer);\n\t}\n\t\n\tvoid merge_sort(int left, int right){\n\t\tint middle = (left + right) / 2;\n\t\tif (middle != left){\n\t\t\tmerge_sort(left, middle);\n\t\t\tmerge_sort(middle + 1, right);\n\t\t}\n\t\tint [] buffer = new int [right - left + 1];\n\t\tint i = left, j = middle + 1;\n\t\tint index = 0;\n\t\twhile(index < buffer.length){\n\t\t\tif (i == middle + 1)\n\t\t\t\tbuffer[index] = x[j++];\n\t\t\telse\n\t\t\tif (j == right + 1)\n\t\t\t\tbuffer[index] = x[i++];\n\t\t\telse\n\t\t\t\tif (x[i] < x[j])\n\t\t\t\t\tbuffer[index] = x[i++];\n\t\t\t\telse\n\t\t\t\t\tbuffer[index] = x[j++];\n\t\t\tindex++;\n\t\t}\n\t\tfor (int u = 0; u < buffer.length; u++)\n\t\t\tx[u + left] = buffer[u];\n\t}\n\t\n}\n\nclass QuickInput {\n\t\n\tStreamTokenizer stk;\n\t\n\tQuickInput(){\n\t\tstk = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n\t}\n\t\n\tint nextInt() throws IOException {\n\t\tstk.nextToken();\n\t\treturn (int) stk.nval;\n\t}\n\t\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\n\npublic class F {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter writer = new PrintWriter(System.out);\n        int t = Integer.parseInt(reader.readLine());\n        for(int q = 0; q < t; ++q){\n            StringTokenizer st =new StringTokenizer(reader.readLine());\n            int n = Integer.parseInt(st.nextToken());\n            int d = Integer.parseInt(st.nextToken());\n            st = new StringTokenizer(reader.readLine());\n            ArrayList<Integer> arr = new ArrayList<>();\n            HashSet<Integer> koor = new HashSet<>();\n            for(int i = 0; i < n; ++i){\n                int number = Integer.parseInt(st.nextToken());\n                if(!koor.contains(number)) {\n                    arr.add(number);\n                    koor.add(number);\n                }\n            }\n            Collections.sort(arr);\n            n = arr.size();\n            int l = 1;\n            int r = n;\n            int ans = -1;\n            while(l <= r){\n                int m = (l + r) / 2;\n                if(m == n || (arr.get(n - 1 - m) + d - 1) / d <= m){\n                    ans = m;\n                    r = m - 1;\n                }\n                else{\n                    l = m + 1;\n                }\n            }\n            writer.println(ans);\n        }\n        writer.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n\nit = 0\nfor line in sys.stdin:\n    it += 1\n    line = line.rstrip()\n    # print(line)\n    if it == 1:\n        continue\n    elif it % 2 == 0:\n        n = int(line.split(' ')[0])\n        r = int(line.split(' ')[1])\n    else:\n        arr = list(line.split(' '))\n        arr = [int(i) for i in arr]\n        arr.sort()\n        pos_arr = [1]\n        for i in range(1, len(arr)):\n            if arr[i] == arr[i-1]:\n                pos_arr.append(pos_arr[-1])\n            else:\n                if len(pos_arr) > 0:\n                    pos_arr.append(pos_arr[-1]+1)\n                else:\n                    pos_arr.append(1)\n        unique = len(set(pos_arr))\n        max_val = 0\n        # print(\"pos_arr\")\n        # print(pos_arr)\n        for i in range(len(arr)):\n            trap_it = int((arr[i]-1)/r) + 1\n            bomb_it =  unique - pos_arr[i] + 1\n            max_val = max(max_val, min(trap_it, bomb_it))\n            # print(\"trap\")\n            # print(trap_it)\n            # print(\"bomb\")\n            # print(bomb_it)\n        print(max_val)\n\n"
        },
        {
            "language": 3,
            "solution": "num_buscas = int(input())\nnum_min_tiros = \"\"\n\nfor i in range(num_buscas):\n  num_inimigos, distancia = map(int, input().split())\n  posicao_monstros = input().split()\n  posicao_monstros = set(map(int, posicao_monstros))\n  posicao_monstros = sorted(posicao_monstros, reverse=True)\n\n  aux = 0\n  while aux < len(posicao_monstros):\n    if posicao_monstros[aux] <= aux * distancia: \n      break\n    else:\n      aux += 1\n  num_min_tiros += str(aux) + '\\n'\n\nprint(num_min_tiros)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\n# noinspection PyShadowingBuiltins\ninput = lambda: stdin.readline().rstrip(\"\\r\\n\")\ninput_a = lambda fun: map(fun, stdin.readline().split())\n\n\ndef read():\n    n, r = input_a(int)\n    a = list(input_a(int))\n    return n, r, a\n\n\ndef solve(n, r, a: list):\n    a.sort(reverse=True)\n    d = 0\n    shots = 0\n    i = 0\n    while i < n:\n        if a[i] - d > 0:\n            shots += 1\n            d += r\n            while i < n - 1 and a[i + 1] == a[i]:\n                i += 1\n            i += 1\n        else:\n            break\n    return shots\n\n\nfor t in range(int(input())):\n    result = solve(*read())\n    print(result)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint q;\nint n, r;\nint x[100005];\nint v[100005];\nint ans[100005];\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> q;\n  for (int T = 0; T < q; ++T) {\n    cin >> n >> r;\n    for (int i = 0; i < n; ++i) cin >> x[i];\n    sort(x, x + n);\n    int h = 0, t = 0;\n    v[t++] = x[0];\n    for (int i = 1; i < n; ++i)\n      if (x[i] > x[i - 1]) v[t++] = x[i];\n    int delta = 0;\n    while (t > h) {\n      while (h < t && v[h] <= delta) ++h;\n      if (h == t) break;\n      ++ans[T];\n      --t;\n      delta += r;\n    }\n  }\n  for (int T = 0; T < q; ++T) cout << ans[T] << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "#encoding:utf-8\n\nclass Rookie(object):\n\n    def _input(self):\n        l = raw_input().strip().split()\n        n,r = int(l[0]), int(l[1])\n        l = raw_input().split()\n        x = [int(_) for _ in l]\n        return n,r,x\n\n    def _output(self):\n        print self.r\n\n    def solve(self):\n        t = raw_input().strip()\n        t = int(t)\n        for _ in range(t):\n            n,r,x = self._input()\n            x = list(set(x))\n            x = sorted(x, reverse=True)\n            cnt = 0\n            for a in x:\n                tt = a / r\n                if a % r :\n                    tt += 1\n                if cnt >= tt:\n                    break\n                cnt += 1\n            print cnt\n\n\n\nif __name__ == '__main__':\n    Rookie().solve()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mn = 1e5 + 10;\nint q, n, r, t, lo, hi, ans, pos;\nint x[mn];\nint main() {\n  scanf(\"%d\", &q);\n  while (q--) {\n    scanf(\"%d%d\", &n, &r);\n    lo = 1;\n    hi = n;\n    pos = 1;\n    ans = 0;\n    for (int i = (1); i <= (n); ++i) scanf(\"%d\", &x[i]);\n    sort(x + 1, x + 1 + n);\n    while (lo <= hi) {\n      --hi;\n      while (lo <= hi && x[hi] == x[hi + 1]) --hi;\n      ++ans;\n      pos += r;\n      while (lo <= hi && x[lo] < pos) ++lo;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000005;\nint T, n, a[N], r, ans;\ninline void fr(int &num) {\n  num = 0;\n  char c = getchar();\n  int p = 1;\n  while (c < '0' || c > '9') c == '-' ? p = -1, c = getchar() : c = getchar();\n  while (c >= '0' && c <= '9') num = num * 10 + c - '0', c = getchar();\n  num *= p;\n}\nint main() {\n  fr(T);\n  while (T--) {\n    fr(n), fr(r), ans = 0;\n    for (register int i = 1; i <= n; ++i) fr(a[i]);\n    sort(a + 1, a + 1 + n);\n    n = unique(a + 1, a + 1 + n) - a - 1;\n    register int nowd = 0, j = 1;\n    for (register int i = n; i >= 1; --i) {\n      ++ans, nowd += r;\n      while (a[j] <= nowd && j <= n) ++j;\n      if (j >= i) break;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfor _ in range(int(stdin.readline())):\n    n,r=map(int,stdin.readline().split())\n    l=list(map(int,stdin.readline().split()))\n    l=sorted(list(set(l)))\n    d=0\n    ans=0\n    n=len(l)\n    for i in range(n-1,-1,-1):\n        if l[i]<=d:\n            break\n        else:\n            ans+=1\n            d+=r\n    stdout.write(str(ans)+\"\\n\")\n "
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.io.*;\npublic class Fourth{\n    public static int min(int n1, int n2){\n        if(n1 <= n2){\n            return n1;\n        }\n        else{\n            return n2;  \n        }\n    }\n    public static int min_moves(ArrayList<Monster> array, int r) {\n        int largo = array.size();\n        int l = 0;\n        Collections.sort(array); //primero ordeno el arreglo en base a las coordenadas en X\n        while(l < largo - 1){ //luego si pillo a m\u00e1s de un monstruo en la misma coordenada X, los elimino hasta dejar a 1 solo\n            if(array.get(l).getCoordenadaX() == array.get(l + 1).getCoordenadaX()){\n                array.remove(l);\n                largo--;\n            }\n            else{\n                l++;\n            }\n        }\n        //parte crucial del algoritmo\n        //recordar que ac\u00e1 ya no tengo monstruos \"repetidos\" y adem\u00e1s los tengo ordenados\n        //ire viendo de izquierda a derecha, si el monstruo array[h] se elimina \"sin querer\"\n        //es decir, se elimina sin tener que dispararle directamente a \u00e9l.\n        //luego, cuando llegue al primer monstruo de izq a derecha que tenga que dispararle directamente\n        //para matarlo, retorno la cantidad de monstruos que hay a su derecha CONTANDOLO, es decir, la\n        //cantidad de veces que tendr\u00e9 que disparar para matarlos a todos\n        int h = 0;\n        while(array.get(h).getCoordenadaX() <= r *(largo - 1 - h)){\n            h++;\n        }\n        return largo - h;\n\n    }                                                                                                                                                                                                                                                                                                                                                                                       \n\n    public static void main(final String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); //uso esta forma pues es m\u00e1s \u00f3ptima\n        int q = Integer.parseInt(br.readLine());\n        ArrayList<Integer> answers = new ArrayList<Integer>();\n\n        while (q > 0) { //n\u00famero de querys   \n            StringTokenizer st = new StringTokenizer(br.readLine());\n            final int n = Integer.parseInt(st.nextToken());// numero de monstruos\n            final int r = Integer.parseInt(st.nextToken()); // distancia de esparcimiento\n            // pedir n veces las coordenadas\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n            ArrayList<Monster> array = new ArrayList<Monster>();\n            int i = 0;\n            int flyingMonsters = 0;\n            while(i < n){\n                int coord = Integer.parseInt(st2.nextToken());\n                if(coord <= 0){\n                    flyingMonsters++;\n                }\n                else{\n                    array.add(new Monster(coord)); //arreglo de monstruos c/u con su posicion.\n                }\n                i++;\n            }\n            //si tengo x flyingMonsters, primero mato de forma eficiente a los monstruos terrestres\n            //y luego disparo x veces m\u00e1s para matar los flyings monster\n            answers.add(min_moves(array, r) + flyingMonsters);\n            q--;\n        }\n\n        answers.forEach((x) -> System.out.println(x));\n        \n    }\n}\n\nclass Monster implements Comparable<Monster>{\n    public Monster(final int x) {\n        this.coordenadaX = x;\n        this.alive = 1; //indica que el monstruo est\u00e1 vivo\n    }\n\n    public int getCoordenadaX() {\n        return this.coordenadaX; //en pos del encapsulamiento...\n    }\n    @Override\n    public int compareTo(final Monster other) {\n        return this.coordenadaX - other.coordenadaX;\n    }\n\n    protected int coordenadaX;\n    protected int alive;\n}\n\nclass FlyingMonster extends Monster{\n    public FlyingMonster(int coordenadaX){\n        super(coordenadaX);\n        }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint hong(int n) {\n  int i;\n  for (i = 2; i * i <= n; i++) {\n    if (n % i == 0) return 0;\n  }\n  return 1;\n}\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> b;\n    int i;\n    for (i = 0; i < n; i++) {\n      int tmp;\n      cin >> tmp;\n      b.push_back(tmp);\n    }\n    sort(b.begin(), b.end());\n    deque<int> a;\n    a.push_back(b[0]);\n    for (i = 1; i < n; i++) {\n      if (b[i] != b[i - 1]) a.push_back(b[i]);\n    }\n    int idx = 0;\n    int cnt = 0;\n    int exp = 0;\n    while (a.size() > idx) {\n      cnt++;\n      a.pop_back();\n      exp += r;\n      idx = lower_bound(a.begin(), a.end(), exp + 1) - a.begin();\n    }\n    cout << cnt << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    int a[n];\n    vector<int> b;\n    map<int, int> mp;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n      if (mp[a[i]] == 0) b.push_back(a[i]);\n      mp[a[i]]++;\n    }\n    int count = 0;\n    int ans = 0;\n    sort(b.begin(), b.end());\n    for (int i = b.size() - 1; i >= 0; i--) {\n      if (b[i] - ans * r > 0) ans++;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 200006;\nconst long long inf = 1e17 + 7;\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, m, i;\n    cin >> n >> m;\n    vector<long long> a(n);\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort((a).rbegin(), (a).rend());\n    long long ans = 0, c = 0;\n    for (i = 0; i < n; i++) {\n      if (a[i] == a[i - 1] && i != 0) {\n        continue;\n      }\n      if (a[i] - ans <= 0) break;\n      c++;\n      ans += m;\n    }\n    cout << c << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\nimport java.text.DecimalFormat;\nimport java.util.*;\nimport java.util.concurrent.ThreadLocalRandom;\nimport java.util.stream.Collectors;\nimport java.util.stream.IntStream;\nimport java.util.stream.LongStream;\n\npublic class Main3 {\n\n    static long mod = 1000000007;\n    static FastScanner scanner;\n\n    static List<Integer>[] graph;\n\n    static StringBuilder builder = new StringBuilder();\n\n\n    public static void main(String[] args) {\n        scanner = new FastScanner();\n        int q = scanner.nextInt();\n        for (int t = 0; t < q; t++) {\n            solve();\n        }\n        System.out.println(builder.toString());\n    }\n\n    static void solve() {\n        int n = scanner.nextInt();\n        int r = scanner.nextInt();\n        int[] a = scanner.nextIntArray(n);\n        Set<Integer> s = new HashSet<>();\n        for (int aa: a) s.add(aa);\n        List<Integer> l = new ArrayList<>(s);\n        Collections.sort(l);\n\n        int cnt = 0;\n        int offset = 0;\n        for (int i = l.size() - 1; i >= 0; i--) {\n            if (l.get(i) - offset <= 0) continue;\n            cnt++;\n            offset += r;\n        }\n\n        builder.append(cnt).append('\\n');\n    }\n\n\n    static class WithIdx implements Comparable<WithIdx>{\n        int val, idx;\n\n        public WithIdx(int val, int idx) {\n            this.val = val;\n            this.idx = idx;\n        }\n\n        @Override\n        public int compareTo(WithIdx o) {\n            return Integer.compare(val, o.val);\n        }\n    }\n\n    public static class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String nextToken() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    // TODO Auto-generated catch block\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        String nextLine() {\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n                e.printStackTrace();\n                throw new RuntimeException();\n            }\n        }\n\n        int nextInt() {\n            return Integer.parseInt(nextToken());\n        }\n\n        long nextLong() {\n            return Long.parseLong(nextToken());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(nextToken());\n        }\n\n        int[] nextIntArray(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) res[i] = nextInt();\n            return res;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) res[i] = nextLong();\n            return res;\n        }\n\n        String[] nextStringArray(int n) {\n            String[] res = new String[n];\n            for (int i = 0; i < n; i++) res[i] = nextToken();\n            return res;\n        }\n    }\n\n    static class PrefixSums {\n        long[] sums;\n\n        public PrefixSums(long[] sums) {\n            this.sums = sums;\n        }\n\n        public long sum(int fromInclusive, int toExclusive) {\n            if (fromInclusive > toExclusive) throw new IllegalArgumentException(\"Wrong value\");\n            return sums[toExclusive] - sums[fromInclusive];\n        }\n\n        public static PrefixSums of(int[] ar) {\n            long[] sums = new long[ar.length + 1];\n            for (int i = 1; i <= ar.length; i++) {\n                sums[i] = sums[i - 1] + ar[i - 1];\n            }\n            return new PrefixSums(sums);\n        }\n\n        public static PrefixSums of(long[] ar) {\n            long[] sums = new long[ar.length + 1];\n            for (int i = 1; i <= ar.length; i++) {\n                sums[i] = sums[i - 1] + ar[i - 1];\n            }\n            return new PrefixSums(sums);\n        }\n    }\n\n    static class ADUtils {\n        static void sort(int[] ar) {\n            Random rnd = ThreadLocalRandom.current();\n            for (int i = ar.length - 1; i > 0; i--)\n            {\n                int index = rnd.nextInt(i + 1);\n                // Simple swap\n                int a = ar[index];\n                ar[index] = ar[i];\n                ar[i] = a;\n            }\n            Arrays.sort(ar);\n        }\n\n        static void reverse(int[] arr) {\n            int last = arr.length / 2;\n            for (int i = 0; i < last; i++) {\n                int tmp = arr[i];\n                arr[i] = arr[arr.length - 1 - i];\n                arr[arr.length - 1 - i] = tmp;\n            }\n        }\n\n        static void sort(long[] ar) {\n            Random rnd = ThreadLocalRandom.current();\n            for (int i = ar.length - 1; i > 0; i--)\n            {\n                int index = rnd.nextInt(i + 1);\n                // Simple swap\n                long a = ar[index];\n                ar[index] = ar[i];\n                ar[i] = a;\n            }\n            Arrays.sort(ar);\n        }\n    }\n\n    static class MathUtils {\n        static long[] FIRST_PRIMES = {\n                2,     3,      5,      7,     11,     13,     17,     19,     23,     29,\n                31,     37,     41,     43,     47,     53,     59,     61,     67,     71,\n                73,     79,     83,     89  ,   97 ,    101,    103,    107,    109,    113,\n                127,    131,    137,    139,    149,    151,    157,    163,    167,    173,\n                179,    181,    191,    193,    197,    199,    211,    223,    227,    229,\n                233,    239,    241,    251,    257,    263,    269,    271,    277,    281,\n                283,    293,    307,    311,    313,    317,    331,    337,    347,    349,\n                353,    359,    367,    373,    379,    383,    389,    397,    401,    409,\n                419,    421,    431,    433,    439,    443,    449,    457,    461,    463,\n                467,    479,    487,    491,    499,    503,    509,    521,    523,    541,\n                547,    557,    563,    569,    571,    577,    587,    593,    599,    601,\n                607,    613,    617,    619,    631,    641,    643,    647,    653,    659,\n                661,    673,    677,    683,    691,    701,    709,    719,    727,    733,\n                739,    743,    751,    757,    761,    769,    773,    787,    797,    809,\n                811,    821,    823,    827,    829,    839,    853,    857,    859,    863,\n                877,    881,    883,    887,    907,    911,    919,    929,    937,    941,\n                947,    953,    967,    971,    977,    983,    991,    997,   1009,   1013,\n                1019,   1021,   1031,   1033,   1039,   1049,   1051};\n\n        static long[] primes(int to) {\n            long[] all = new long[to + 1];\n            long[] primes = new long[to + 1];\n            all[1] = 1;\n            int primesLength = 0;\n            for (int i = 2; i <= to; i ++) {\n                if (all[i] == 0) {\n                    primes[primesLength++] = i;\n                    all[i] = i;\n                }\n                for (int j = 0; j < primesLength && i * primes[j] <= to && all[i] >= primes[j]; j++) {\n                    all[(int) (i * primes[j])] = primes[j];\n                }\n            }\n            return Arrays.copyOf(primes, primesLength);\n        }\n\n        static long modpow(long b, long e, long m) {\n            long result = 1;\n\n            while (e > 0) {\n                if ((e & 1) == 1) {\n                    /* multiply in this bit's contribution while using modulus to keep\n                     * result small */\n                    result = (result * b) % m;\n                }\n                b = (b * b) % m;\n                e >>= 1;\n            }\n\n            return result;\n        }\n\n        static long submod(long x, long y, long m) {\n            return (x - y + m) % m;\n        }\n\n        static public long gcdF(long a, long b) {\n            while (b != 0) {\n                long na = b;\n                long nb = a % b;\n                a = na;\n                b = nb;\n            }\n            return a;\n        }\n    }\n}\n\n/*\n5\n3 2 3 8 8\n2 8 5 10 1\n\n */\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Solution{\n    public static void main(String args[])throws IOException{\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        \n        int t = Integer.parseInt(reader.readLine());\n        \n        StringTokenizer tokenizer;\n        \n        PrintWriter pw = new PrintWriter(System.out);\n        \n        while(t-->0){\n            \n            tokenizer = new StringTokenizer(reader.readLine());\n            int n = Integer.parseInt(tokenizer.nextToken()), r = Integer.parseInt(tokenizer.nextToken());\n            \n            TreeSet<Integer> pos = new TreeSet<>();\n            \n            tokenizer = new StringTokenizer(reader.readLine());\n            for(int i=0; i<n; i++)\n                pos.add(Integer.parseInt(tokenizer.nextToken()));\n                \n            int ans = 0, leftLimit = 0;\n            \n            Iterator itr = pos.descendingIterator();\n            \n            while(itr.hasNext()){\n                int curr = (Integer)itr.next();\n                if(curr <= leftLimit)\n                    break;\n                ans++;\n                leftLimit += r;\n            }\n                \n            pw.println(+ans);\n        }\n        pw.flush();\n        pw.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "q=int(input())\ns=''\nfor _ in range(q):\n\tn,r=map(int,input().split())\n\tl=set(map(int,input().split()))\n\tl=list(l)\n\tl=sorted(l)\n\tcount=0\n\twhile l and l[-1]>count*r:\n\t\tl.pop()\n\t\tcount+=1\n\ts+=str(count)+\"\\n\"\nprint(s)\n\t\t"
        },
        {
            "language": 3,
            "solution": "a = int(input())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, input().split())\n    monsters = [int(m) for m in input().split()]\n    monsters.sort(reverse=True)\n\n    shots, acc = 0, 0\n    for i, m in enumerate(monsters):\n        if i and m == monsters[i-1]:\n            continue\n\n        if m - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + '\\n'\n\nprint(result[:-1])\n"
        },
        {
            "language": 1,
            "solution": "import sys\nrange = xrange\ninput = raw_input\n\ninp = [int(x) for x in sys.stdin.read().split()]; ii = 0\n\nq = inp[ii]; ii += 1\nans = []\nfor _ in range(q):\n    n = inp[ii]; ii += 1\n    r = inp[ii]; ii += 1\n    X = inp[ii:ii + n]; ii += n\n    X.sort()\n    blaster = 0\n    moves = 0\n    while X and X[-1] - blaster > 0:\n        x = X[-1]\n        while X and x == X[-1]:\n            X.pop()\n        blaster += r\n        moves += 1\n\n    ans.append(moves)\nprint '\\n'.join(str(x) for x in ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.io.*;\n\npublic class Main {\n    public static int min(int x, int y){\n        if(x<=y) return x;\n        else return y;  \n    }\n\n    public static int min_moves(ArrayList<Monster> array, int r) {\n        int tamano = array.size();\n        int j=0,i=0;\n        Collections.sort(array); \n        while(i<tamano-1){\n            if(array.get(i).getCoordX() == array.get(i+1).getCoordX()){\n                array.remove(i);\n                tamano--;\n            }\n            else i++;\n        }\n        while(array.get(j).getCoordX()<=r*(tamano-1-j)) j++;\n        return tamano-j;\n    }\n    public static void main(final String[] args) throws Exception {\n        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n        int num = Integer.parseInt(input.readLine());\n        ArrayList<Integer> answers = new ArrayList<Integer>();\n        for(int i=0;i<num;i++){\n            StringTokenizer rt = new StringTokenizer(input.readLine());\n            final int n = Integer.parseInt(rt.nextToken());\n            final int m = Integer.parseInt(rt.nextToken()); \n            StringTokenizer tr = new StringTokenizer(input.readLine());\n            ArrayList<Monster> array = new ArrayList<Monster>();\n            int flyingMonsters = 0;\n            for(int j=0;j<n;j++){\n                int coordXY = Integer.parseInt(tr.nextToken());\n                if(coordXY <= 0) flyingMonsters++;\n                else array.add(new Monster(coordXY));\n            }\n            answers.add(min_moves(array, m)+flyingMonsters);\n        }\n        answers.forEach((x) -> System.out.println(x));   \n    }\n}\n\nclass Monster implements Comparable<Monster>{\n    public Monster(final int x) {\n        this.coordX=x;\n        //Verifica si nuestro monster esta vivo\n        this.alive=1;\n    }\n    public int getCoordX() {\n        return this.coordX;\n    }\n    @Override\n    public int compareTo(final Monster other) {\n        return this.coordX-other.coordX;\n    }\n    protected int coordX;\n    protected int alive;\n}\n\nclass FlyingMonster extends Monster{\n    public FlyingMonster(int coordX){\n        super(coordX);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    int n, r;\n    cin >> n >> r;\n    int arr[n];\n    for (int j = 0; j < n; j++) {\n      cin >> arr[j];\n    }\n    sort(arr, arr + n);\n    int shots = 0, act[n], p = 0;\n    act[0] = arr[0];\n    p++;\n    for (int j = 1; j < n; j++) {\n      if (arr[j] == arr[j - 1]) {\n      } else {\n        act[p] = arr[j];\n        p++;\n      }\n    }\n    for (int j = 0; j < p; j++) {\n      if (act[p - j - 1] - j * r <= 0) {\n        break;\n      }\n      shots++;\n    }\n    cout << shots << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nfrom collections import defaultdict\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : map(int, input().split())\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}\".format(i) + sep)\nINF = float('inf')\nMOD = int(1e9 + 7)\n\nfor q in range(int(input())):\n  n, r = read()\n  arr = sorted(set(read()), reverse=True)\n  s = 0\n  ans = 0\n\n  for i in arr:\n    if s >= i:\n      break\n\n    s += r\n    ans += 1\n\n  write(ans) "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint data[100001];\nvoid worker() {\n  int n, r;\n  scanf(\"%d%d\", &n, &r);\n  set<int> myset;\n  for (int i = 0; i < n; i++) {\n    int tmp;\n    scanf(\"%d\", &tmp);\n    myset.insert(tmp);\n  }\n  n = myset.size();\n  if (n == 1) {\n    puts(\"1\");\n    return;\n  }\n  int index = 0;\n  for (auto k : myset) data[index++] = k;\n  int right = n, left = 0, cnt;\n  while (right - left > 1) {\n    cnt = (left + right) / 2;\n    index = n - 1 - cnt;\n    if (data[index] - cnt * r <= 0)\n      right = cnt;\n    else\n      left = cnt;\n  }\n  int ans;\n  index = n - 1 - cnt;\n  if (data[index] - cnt * r <= 0)\n    ans = cnt;\n  else\n    ans = cnt + 1;\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) worker();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q, temp, a, p, n, r, t;\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    temp = 0;\n    cin >> n >> r;\n    set<int> s;\n    for (int j = 0; j < n; j++) {\n      cin >> a;\n      s.insert(a);\n    }\n    p = s.size() - 1;\n    for (set<int>::iterator it = s.begin(); it != s.end(); it++) {\n      t = *it;\n      t = t - (p * r);\n      p--;\n      if (t > 0) {\n        break;\n      }\n      temp++;\n    }\n    cout << s.size() - temp << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.util.concurrent.ArrayBlockingQueue;\nimport java.lang.*;\nimport java.math.*;\nimport java.text.DecimalFormat;\nimport java.lang.reflect.Array;\nimport java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigDecimal;\npublic class Codeforces{\n\tpublic static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\n\tstatic int MOD = (int)(1e9+7);\n\t//static long MOD = 998244353;\n\tstatic FastReader sc = new FastReader();\n\tstatic int pInf = Integer.MAX_VALUE;\n\tstatic int nInf = Integer.MIN_VALUE;\n\tpublic static void main(String[] args){\n\t\tint test = 1;\n\t\ttest = sc.nextInt();\n\t\twhile(test-->0){\n\t\t\tint n = sc.nextInt();\n\t\t\tint r = sc.nextInt();\n\t\t\tTreeSet<Integer> B = new TreeSet<>();\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tB.add(sc.nextInt());\n\t\t\t}\n\t\t\tArrayList<Integer> A = new ArrayList<>(B);\n\t\t\tint t = 0;\n\t\t\tint count = 0;\n\t\t\tfor(int i = A.size()-1; i >= 0; i--) {\n\t\t\t\tif(A.get(i)-t>0) {\n\t\t\t\t\tt += r;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(count);\n\t\t}\n\t\tout.close();\n\t}\n\tpublic static long mul(long a, long b){\n\t    return ((a%MOD)*(b%MOD))%MOD;\n\t}\n\tpublic static int add(int a, int b){\n\t    return ((a%MOD)+(b%MOD))%MOD;\n\t}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//Integer.lowestOneBit(i)   Equals k where k is the position of the first one in the binary\n//Integer.highestOneBit(i)  Equals k where k is the position of the last one in the binary\n//Integer.bitCount(i)       returns the number of one-bits\n//Collections.sort(A,(p1,p2)->(int)(p2.x-p1.x)) To sort ArrayList in descending order wrt values of x.\n//            Arrays.parallelSort(a,new Comparator<TPair>() {\n//      \t\tpublic int compare(TPair a,TPair b) {\n//        \t\t\tif(a.y==b.y) return a.x-b.x;\n//        \t\t\treturn b.y-a.y;\n//        \t\t}\n//        \t});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//PrimeFactors    \n    public static ArrayList<Long> primeFactors(long n) {\n        ArrayList<Long> arr = new ArrayList<>();\n        if (n % 2 == 0)\n            arr.add((long) 2);\n        while (n % 2 == 0)\n            n /= 2;\n        for (long i = 3; i <= Math.sqrt(n); i += 2) {\n            int flag = 0;\n            while (n % i == 0) {\n                n /= i;\n                flag = 1;\n            }\n            if (flag == 1)\n                arr.add(i);\n        }\n        if (n > 2)\n            arr.add(n);\n        return arr;\n    }\n//Pair Class\n\tstatic class Pair implements Comparable<Pair>{\n\t\tint x;\n\t\tint y;\n\t\tpublic Pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\tif(this.x==o.x){\n\t\t\t    return (this.y-o.y);\n\t\t\t}\n\t\t\treturn (this.x-o.x);\n\t\t}\n\t}\n\tstatic class TPair implements Comparable<TPair>{\n\t\tint two;\n\t\tint three;\n\t\tint prime;\n\t\tpublic TPair(int two, int three, int prime) {\n\t\t\tthis.two = two;\n\t\t\tthis.three = three;\n\t\t\tthis.prime = prime;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(TPair o) {\n\t\t\tif(this.three==o.three){\n\t\t\t    return (this.two-o.two);\n\t\t\t}\n\t\t\treturn -1*(this.three-o.three);\n\t\t}\n\t}\n//nCr\n\tstatic long ncr(long n, long k) {\n        long ret = 1;\n        for (long x = n; x > n - k; x--) {\n            ret *= x;\n            ret /= (n - x + 1);\n        }\n\n        return ret;\n    }\n\tstatic long finextDoubleMMI_fermat(long n,int M)\n    {\n        return fastExpo(n,M-2);\n    }\n \n    static long nCrModPFermat(int n, int r, int p) \n    { \n        if (r == 0) \n            return 1; \n        long[] fac = new long[n+1]; \n        fac[0] = 1;           \n        for (int i = 1 ;i <= n; i++) \n            fac[i] = fac[i-1] * i % p;       \n        return (fac[n]* finextDoubleMMI_fermat(fac[r], p)% p * finextDoubleMMI_fermat(fac[n-r], p) % p) % p; \n    }\n//Kadane's Algorithm    \n    static long maxSubArraySum(ArrayList<Long> a) { \n    \tif(a.size()==0) {\n    \t\treturn 0;\n    \t}\n    \tlong max_so_far = a.get(0); \n    \tlong curr_max = a.get(0); \n    \tfor (int i = 1; i < a.size(); i++) { \n           curr_max = Math.max(a.get(i), curr_max+a.get(i)); \n           max_so_far = Math.max(max_so_far, curr_max); \n    \t} \n    \treturn max_so_far; \n    } \n//Merge Sort\n\tstatic void merge(long arr[], int l, int m, int r)\n    {\n        // Find sizes of two subarrays to be merged\n        int n1 = m - l + 1;\n        int n2 = r - m;\n \n        /* Create temp arrays */\n        long L[] = new long [n1];\n        long R[] = new long [n2];\n \n        /*Copy data to temp arrays*/\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n \n \n        /* Merge the temp arrays */\n \n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n \n        // Initial index of merged subarry array\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i] <= R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n \n        /* Copy remaining elements of L[] if any */\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n \n        /* Copy remaining elements of R[] if any */\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n \n    // Main function that sorts arr[l..r] using\n    // merge()\n    static void sort(long arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            // Find the middle point\n            int m = (l+r)/2;\n \n            // Sort first and second halves\n            sort(arr, l, m);\n            sort(arr , m+1, r);\n \n            // Merge the sorted halves\n            merge(arr, l, m, r);\n        }\n    }\n//Brian Kernighans Algorithm\n    static long countSetBits(long n){\n        if(n==0) return 0;\n        return 1+countSetBits(n&(n-1));\n    }\n//Factorial\n    static long factorial(long n){\n        if(n==1) return 1;\n        if(n==2) return 2;\n        if(n==3) return 6;\n        return n*factorial(n-1);\n    }\n//Euclidean Algorithm\n    static long gcd(long A,long B){\n        if(B==0) return A;\n        return gcd(B,A%B);\n    }\n//Modular Exponentiation\n    static long fastExpo(long x,long n){\n        if(n==0) return 1;\n        if((n&1)==0) return fastExpo((x*x)%MOD,n/2)%MOD;\n        return ((x%MOD)*fastExpo((x*x)%MOD,(n-1)/2))%MOD;\n    }\n//AKS Algorithm\n    static boolean isPrime(long n){\n        if(n<=1) return false;\n        if(n<=3) return true;\n        if(n%2==0 || n%3==0) return false;\n        for(int i=5;i<=Math.sqrt(n);i+=6)\n            if(n%i==0 || n%(i+2)==0) return false;\n        return true;\n    }\n//Reverse an array\n    static <T> void reverse(T arr[],int l,int r){\n    \tCollections.reverse(Arrays.asList(arr).subList(l, r));\n    }\n  //Print array\n    static void print1d(int arr[]) {\n    \tout.println(Arrays.toString(arr));\n    }\n    static void print2d(int arr[][]) {\n    \tfor(int a[]: arr) out.println(Arrays.toString(a));\n    }\n//Sieve of eratosthenes\n    static int[] findPrimes(int n){\n        boolean isPrime[]=new boolean[n+1];\n        ArrayList<Integer> a=new ArrayList<>();\n        int result[];\n        Arrays.fill(isPrime,true);\n        isPrime[0]=false;\n        isPrime[1]=false;\n        for(int i=2;i*i<=n;++i){\n            if(isPrime[i]==true){\n                for(int j=i*i;j<=n;j+=i) isPrime[j]=false;\n            }\n        }\n        for(int i=0;i<=n;i++) if(isPrime[i]==true) a.add(i);\n        result=new int[a.size()];\n        for(int i=0;i<a.size();i++) result[i]=a.get(i);\n        return result;\n        \n    }\n//Indivisual factors of all nos till n\n    static ArrayList<Integer>[] indiFactors(int n){\n    \tArrayList<Integer>[] A = new ArrayList[n+1];\n    \tfor(int i = 0; i <= n; i++) {\n    \t\tA[i] = new ArrayList<>();\n    \t}\n    \tint[] sieve = new int[n+1];\n    \tfor(int i=2;i<=n;i++) {\n       \t\tif(sieve[i]==0) {\n       \t\t\tfor(int j=i;j<=n;j+=i) if(sieve[j]==0) {\n       \t\t\t\t//sieve[j]=i;\n       \t\t\t\tA[j].add(i);\n       \t\t\t}\n       \t\t}\n       \t}\n    \treturn A;\n    }\n//Segmented Sieve\n    static boolean[] segmentedSieve(long l, long r){\n    \tboolean[] segSieve = new boolean[(int)(r-l+1)];\n    \tArrays.fill(segSieve, true);\n    \tint[] prePrimes = findPrimes((int)Math.sqrt(r));\n    \tfor(int p:prePrimes) {\n    \t\tlong low = (l/p)*p;\n    \t\tif(low < l) {\n    \t\t\tlow += p;\n    \t\t}\n    \t\tif(low == p) {\n    \t\t\tlow += p;\n    \t\t}\n    \t\tfor(long j = low; j<= r; j += p) {\n    \t\t\tsegSieve[(int) (j-l)] = false;\n    \t\t}\n    \t}\n    \tif(l==1) {\n    \t\tsegSieve[0] = false;\n    \t}\n    \treturn segSieve;\n    }\n//Euler Totent function\n    static long countCoprimes(long n){\n        ArrayList<Long> prime_factors=new ArrayList<>();\n        long x=n,flag=0;\n        while(x%2==0){\n            if(flag==0) prime_factors.add(2L);\n            flag=1;\n            x/=2;\n        }\n        for(long i=3;i*i<=x;i+=2){\n            flag=0;\n            while(x%i==0){\n                if(flag==0) prime_factors.add(i);\n                flag=1;\n                x/=i;\n            }\n        }\n        if(x>2) prime_factors.add(x);\n        double ans=(double)n;\n        for(Long p:prime_factors){\n            ans*=(1.0-(Double)1.0/p);\n        }\n        return (long)ans;\n    }\n\tstatic long modulo = (long)1e9+7;\n\tpublic static long modinv(long x){\n\t    return modpow(x, modulo-2);\n\t}\n\tpublic static long modpow(long a, long b){\n\t    if(b==0){\n\t        return 1;\n\t    }\n\t    long x = modpow(a, b/2);\n\t    x = (x*x)%modulo;\n\t    if(b%2==1){\n\t        return (x*a)%modulo;\n\t    }\n\t    return x;\n\t}\n\tpublic static class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\t//it reads the data about the specified point and divide the data about it ,it is quite fast\n\t\t//than using direct \n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (Exception r) {\n\t\t\t\t\tr.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());//converts string to integer\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (Exception r) {\n\t\t\t\tr.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nans = ''\nq = int(input())\nfor i in range(q):\n    n,r = map(int, input().split())\n    lis = list(set((map(int, input().split()))))\n    lis.sort(reverse=True)\n    lis.append(-1)\n    cnt = 0\n    ra = 0\n    for i in range(n+10):\n        if lis[i]-ra<=0:\n            print(cnt)\n            break\n        ra+=r\n        cnt+=1"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n \nimport os\nimport sys\nfrom io import BytesIO, IOBase\nfrom collections import Counter , defaultdict\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef solve(a,n,r):\n    new = list(set(a))\n    new.sort()\n    if r >= new[-1]:\n        return 1\n    i,k = 0,0\n    while(len(new) and k < new[-1]):\n        k += r\n        i += 1\n        new.pop()\n        \n    return i\n\ndef main():\n    q  = int(input())\n    for _ in range(q):\n        n,r = map(int,input().split())\n        a = list(map(int,input().split()))\n        print(solve(a,n,r))\n \n# region fastio\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \nif __name__ == \"__main__\":\n    main()\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n  int x = 0, f = 1;\n  char ch = getchar();\n  while (ch > '9' || ch < '0') {\n    if (ch == '-') f = -f;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = (x << 1) + (x << 3) + (ch ^ 48);\n    ch = getchar();\n  }\n  return x * f;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    n = read(), r = read();\n    int a[n];\n    for (int i = 0; i < n; i++) a[i] = read();\n    sort(a, a + n);\n    n = unique(a, a + n) - a;\n    int ans = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      ans += a[i] - ans * r > 0;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.BufferedReader;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.util.TreeSet;\n\npublic class Problema_1{    \n    public static void main(String[] args) throws IOException{\n        int cont=0;\n        int imput;        \n        ArrayList<Integer> list= new ArrayList<>();\n        BufferedReader sn = new BufferedReader(new InputStreamReader(System.in)); \n        imput=Integer.parseInt(sn.readLine());\n        while(cont<imput){ \n            TreeSet<Monster> MonsterNormal= new TreeSet<>(); \n            ArrayList<FlyingMonster> voladores= new ArrayList<>(); \n            StringTokenizer l= new StringTokenizer(sn.readLine()); \n            StringTokenizer l2= new StringTokenizer(sn.readLine()); \n            int movs,r,shoots=0,auxiliar=0;\n            movs=Integer.parseInt(l.nextToken()); //cantidad de movimientos\n            r=Integer.parseInt(l.nextToken()); //rango de explosion\n            for(int i=0;i<movs;i++){\n                int z;\n                z=Integer.parseInt(l2.nextToken());\n                if (z>0){ \n                    Monster normal=new Monster(z); \n                    MonsterNormal.add(normal);                                             \n                }\n                else{\n                    FlyingMonster volador= new FlyingMonster(z);\n                    voladores.add(volador);                                    \n                }                \n            }\n            ArrayList<Monster> MonsterNormal2= new ArrayList<>(MonsterNormal); //transformar el arreglo de treesort a arraylist\n            Collections.sort(MonsterNormal2);\n            for(int j=MonsterNormal2.size()-1;j>=0;j--){ \n                if(MonsterNormal2.get(j).cz-auxiliar>0){   \n                    shoots++;\n                    auxiliar+=r;\n                    }\n                }              \n            int value = shoots + voladores.size();\n            list.add(value);\n            cont++;\n        }\n        for(int k=0;k<list.size();k++){\n            System.out.println(list.get(k));\n        }    \n    }\n}\n\nclass Monster implements Comparable <Monster>{ //Clase pedida\n    public int cz;                             \n    Monster(int cz){\n        this.cz=cz;\n    }\n    @Override\n    public int compareTo(Monster otro){\n        return this.cz-otro.cz;\n    }\n}\n\nclass FlyingMonster extends Monster{  //Clase para los monstruos voladores\n    public int cz;                  \n    FlyingMonster(int cz){\n        super(cz);\n    }    \n}"
        },
        {
            "language": 3,
            "solution": "q = int(input())\nd = []\nfor _ in range(q) :\n    n, r = map(int, input(). split())\n    a = sorted(list(set(map(int, input().split()))))\n    b = len (a) \n    p = 0\n    z = 0\n    while p == 0  :\n        z += 1\n        if (a[b- z - 1] - r * z <= 0) or (b == z):\n            p = 1\n    d.append(z)\nfor x in d: print(x)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.Scanner; \nimport java.util.StringTokenizer; \nimport java.util.*;\nimport java.io.*;\npublic class codeforces \n{ \n   static class Student{\n       int x,y;\n        Student(int x,int y){\n            this.x=x;\n            this.y=y;\n        }\n    }\n    static int sieveOfEratosthenes(int n) \n    { \n        // Create a boolean array \"prime[0..n]\" and initialize \n        // all entries it as true. A value in prime[i] will \n        // finally be false if i is Not a prime, else true. \n        int pos=0;\n        boolean prime[] = new boolean[n+1]; \n        for(int i=0;i<=n;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=n; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= n; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n        for(int i = 2; i <= n; i++) \n        { \n            if(prime[i] == true) \n                ++pos;\n        }\n        return pos;\n    }\nstatic    class Sortbyroll implements Comparator<Student> \n{ \n    // Used for sorting in ascending order of \n    // roll number \n    public int compare(Student c, Student b) \n    { \n        return c.x-b.y;\n    } \n} \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    }\n    static class Edge{\n        int a,b;\n        Edge(int a,int b){\n            this.a=a;\n            this.b=b;\n        }\n    }\n    public static void main(String[] args){\n        //long sum=0;\n        FastReader sc=new FastReader();\n        int t,n,r,ans,x,i,s,e,mid;\n        t=sc.nextInt();\n        while(t>0){\n            n=sc.nextInt();\n            r=sc.nextInt();\n            int a[]=new int[n];\n            HashMap<Integer,Integer>map=new HashMap<>();\n            for(i=0;i<n;i++)\n                a[i]=sc.nextInt();\n            ArrayList<Integer>temp=new ArrayList<>();\n            for(i=0;i<n;i++){\n                if(!map.containsKey(a[i])){\n                    temp.add(a[i]);\n                    map.put(a[i],1);\n                }\n            }\n            Collections.sort(temp);\n            ans=1;\n            s=0;\n            e=temp.size()-1;\n            mid=(s+e)/2;\n            while(s<=e){\n                if(temp.get(mid)-(temp.size()-mid-1)*r<=0){\n                    ans=temp.size()-mid-1;\n                    s=mid+1;\n                }\n                else{\n                    ans=temp.size()-mid;\n                    e=mid-1;\n                }\n                mid=(s+e)/2;\n            }\n            System.out.println(ans);\n            --t;\n        }\n    }\n static long power(long x, long y, long p) \n{ \n    long res = 1;      // Initialize result \n  \n    x = x % p;  // Update x if it is more than or  \n                // equal to p \n  \n    while (y > 0) \n    { \n        // If y is odd, multiply x with result \n        if ((y & (long)1)%2!=0) \n            res = (res*x) % p; \n  \n        // y must be even now \n        y = y>>1; // y = y/2 \n        x = (x*x) % p;   \n    } \n    return res%p; \n} \n   static int find(int x,int parent[]) \n    { \n        // Finds the representative of the set \n        // that x is an element of \n        while(parent[x]!=x) \n        { \n            // if x is not the parent of itself \n            // Then x is not the representative of \n            // his set,\n            x=parent[x];\n  \n            // so we recursively call Find on its parent \n            // and move i's node directly under the \n            // representative of this set \n        } \n  \n        return x; \n    }\n    static void union(int x, int y,int rank[],int parent[]) \n    { \n        // Find representatives of two sets \n        int xRoot = find(x,parent), yRoot = find(y,parent); \n  \n        // Elements are in the same set, no need \n        // to unite anything. \n        if (xRoot == yRoot) \n            return; \n  \n         // If x's rank is less than y's rank \n        if (rank[xRoot] < rank[yRoot]) \n  \n            // Then move x under y  so that depth \n            // of tree remains less \n            parent[xRoot] = yRoot; \n  \n        // Else if y's rank is less than x's rank \n        else if (rank[yRoot] < rank[xRoot]) \n  \n            // Then move y under x so that depth of \n            // tree remains less \n            parent[yRoot] = xRoot; \n  \n        else // if ranks are the same \n        { \n            // Then move y under x (doesn't matter \n            // which one goes where) \n            parent[yRoot] = xRoot; \n  \n            // And increment the the result tree's \n            // rank by 1 \n            rank[xRoot] = rank[xRoot] + 1; \n        } \n    } \n    static long gcd(long a, long b) \n    { \n        if (a == 0) \n            return b; \n        return gcd(b % a, a); \n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\nvoid deb(istream_iterator<string> it) {}\ntemplate <typename T, typename... Args>\nvoid deb(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << a << endl;\n  deb(++it, args...);\n}\nnamespace IO {}\nusing namespace IO;\nconst int mod = 1e9 + 7;\nconst int N = 3e5 + 9;\nconst double eps = 1e-9;\nconst double PI = acos(-1.0);\nlong long qpow(long long n, long long k) {\n  long long ans = 1;\n  assert(k >= 0);\n  n %= mod;\n  while (k > 0) {\n    if (k & 1) ans = (ans * n) % mod;\n    n = (n * n) % mod;\n    k >>= 1;\n  }\n  return ans % mod;\n}\nint32_t main() {\n  int t = ({\n    int a;\n    scanf(\"%d\", &a);\n    a;\n  });\n  while (t--) {\n    int n = ({\n      int a;\n      scanf(\"%d\", &a);\n      a;\n    }),\n        r = ({\n          int a;\n          scanf(\"%d\", &a);\n          a;\n        });\n    vector<int> v;\n    for (int i = 1; i <= n; i++) {\n      int k = ({\n        int a;\n        scanf(\"%d\", &a);\n        a;\n      });\n      v.emplace_back(k);\n    }\n    sort(v.begin(), v.end());\n    v.erase(unique(v.begin(), v.end()), v.end());\n    int ans = 0;\n    while (!v.empty()) {\n      int k = v.back();\n      v.pop_back();\n      if (1LL * k - 1LL * ans * r <= 0) break;\n      ans++;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.util.Vector;\nimport java.io.*;\npublic class Fourth{\n    public static int min(int n1, int n2){\n        if(n1 <= n2){\n            return n1;\n        }\n        else{\n            return n2;  \n        }\n    }\n    public static int min_moves(Vector<Monster> array, int r) {\n        int largo = array.size();\n        int l = 0;\n        Collections.sort(array); //primero ordeno el arreglo en base a las coordenadas en X\n        while(l < largo - 1){ //luego si pillo a m\u00e1s de un monstruo en la misma coordenada X, los elimino hasta dejar a 1 solo\n            if(array.elementAt(l).coordenadaX == array.elementAt(l + 1).coordenadaX){\n                array.removeElementAt(l);\n                largo--;\n            }\n            else{\n                l++;\n            }\n        }\n        //parte crucial del algoritmo\n        //recordar que ac\u00e1 ya no tengo monstruos \"repetidos\" y adem\u00e1s los tengo ordenados\n        //ire viendo de izquierda a derecha, si el monstruo array[h] se elimina \"automaticamente\"\n        //es decir, se elimina sin tener que disparar justo a su posici\u00f3n.\n        //luego, cuando llegue al primer monstruo de izq a derecha que tenga que dispararle directamente\n        //para matarlo, retorno la cantidad de monstruos que hay a su derecha CONTANDOLO, es decir, la\n        //cantidad de veces que tendr\u00e9 que disparar para matarlos a todos\n        int h = 0;\n        while(array.elementAt(h).coordenadaX <= r *(largo - 1 - h)){\n            h++;\n        }\n        return largo - h;\n\n    }                                                                                                                                                                                                                                                                                                                                                                                       \n\n    public static void main(final String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int q = Integer.parseInt(br.readLine());\n        ArrayList<Integer> answers = new ArrayList<Integer>();\n\n        while (q > 0) {                               \n            StringTokenizer st = new StringTokenizer(br.readLine());\n            final int n = Integer.parseInt(st.nextToken());// numero de monstruos\n            final int r = Integer.parseInt(st.nextToken()); // distancia de esparcimiento\n            // pedir n veces las coordenadas\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n            Vector<Monster> array = new Vector<Monster>();\n            int i = 0;\n            int flyingMonsters = 0;\n            while(i < n){\n                int coord = Integer.parseInt(st2.nextToken());\n                if(coord <= 0){\n                    flyingMonsters++;\n                }\n                else{\n                    array.addElement(new Monster(coord)); //arreglo de monstruos c/u con su posicion.\n                }\n                i++;\n            }\n            //si tengo x flyingMonsters, primero mato de forma eficiente a los monstruos terrestres\n            //y luego disparo x veces m\u00e1s para matar los flyings monster\n            answers.add(min_moves(array, r) + flyingMonsters);\n            q--;\n        }\n\n        answers.forEach((x) -> System.out.println(x));\n        \n    }\n}\n\nclass Monster implements Comparable<Monster>{\n    public Monster(final int x) {\n        this.coordenadaX = x;\n        this.alive = 1; //indica que el monstruo est\u00e1 vivo\n    }\n\n    /*\n    public void jump(final int leap, int impactPoint){ //mueve al monstruo e indica si muere o no.\n        if(coordenadaX < impactPoint){\n            this.coordenadaX = this.coordenadaX - leap;\n            //reviso si cay\u00f3 en una trampa o no...\n            if(coordenadaX <= 0){\n                this.alive = 0;\n            }\n            \n        }\n        else if(coordenadaX > impactPoint){\n            this.coordenadaX = this.coordenadaX + leap;\n        }\n        \n        else{ //coordenadaX = impactPoint\n            this.alive = 0; //muerto\n        }\n    }*/\n\n    @Override\n    public int compareTo(final Monster other) {\n        return this.coordenadaX - other.coordenadaX;\n    }\n\n    protected int coordenadaX;\n    protected int alive;\n}\n\nclass FlyingMonster extends Monster{\n    public FlyingMonster(int coordenadaX){\n        super(coordenadaX);\n        }\n\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100010], h[100010];\nint main() {\n  int T, n, r, x;\n  scanf(\"%d\", &T);\n  while (T--) {\n    int ans = 0;\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    sort(a + 1, a + 1 + n);\n    n = unique(a + 1, a + 1 + n) - a - 1;\n    for (int i = n; i >= 1; i--) ans += (a[i] - ans * r > 0);\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, r, x[100010];\nvoid solve() {\n  cin >> n >> r;\n  for (long long i = 1; i <= n; i++) cin >> x[i];\n  sort(x + 1, x + n + 1);\n  long long dir = n, resp = 0, moveu = 0;\n  while (dir > 0) {\n    resp++;\n    moveu += r;\n    while (x[dir] == x[dir - 1] and dir > 0) dir--;\n    if (x[dir - 1] - moveu <= 0) {\n      cout << resp << \"\\n\";\n      return;\n    } else\n      dir--;\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  long long t;\n  cin >> t;\n  for (long long i = 1; i <= t; i++) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "\nloop = int(input())\nataque = []\npontos = []\n\nfor i in range(0, loop):\n\tataque.append(int(input().split(\" \")[1]))\n\tpontos.append(input().split(\" \"))\n \nfor i in range(0,loop):\n\n    local_atual = []\n    local_escondido = []\n    \n    for j in range(0, len(pontos[i])):\n        local_atual.append(int(pontos[i][j]))\n    \n    a = set(local_atual)\n    local_escondido = list(a)\n    local_escondido.sort(reverse=True)\n    count = 0\n    \n    for j in range(0,len(local_escondido)):\n        atack_atual = (ataque[i] * j)\n\n        if local_escondido[j] > atack_atual:\n            count += 1\n        else:\n            print(count)\n            break\n        \n        if count == len(local_escondido):\n            print(count)\n            break\n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long n, r;\n    cin >> n >> r;\n    vector<long long> v(n);\n    for (long long i = 0; i < n; ++i) cin >> v[i];\n    sort(v.rbegin(), v.rend());\n    long long shift = 0;\n    long long ans = 0;\n    for (long long i = 0; i < n; ++i) {\n      if (v[i] - shift <= 0) {\n        break;\n      } else {\n        shift += r;\n        ans++;\n      }\n      while (i < n && v[i] == v[i + 1]) i++;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nll BASE_NUM = 1000000007;\nvoid solve() {\n  ll n, r;\n  set<ll, greater<ll>> X;\n  cin >> n >> r;\n  for (int i = 0; i < n; i++) {\n    ll x;\n    cin >> x;\n    X.insert(x);\n  }\n  ll i = 0;\n  for (auto x : X) {\n    if (x - i * r <= 0) {\n      cout << i << endl;\n      return;\n    }\n    i++;\n  }\n  cout << i << endl;\n  return;\n}\nint main() {\n  ll q;\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter as C,defaultdict as D,deque as Q\nfrom operator import itemgetter as I\nfrom itertools import product as P,permutations as PERMUT\nfrom bisect import bisect_left as BL,bisect_right as BR,insort as INSORT\nfrom heapq import heappush as HPUSH,heappop as HPOP\nfrom math import floor as MF,ceil as MC, gcd as MG,factorial as F,sqrt as SQRT, inf as INFINITY,log as LOG\nfrom sys import stdin, stdout\nINPUT=stdin.readline\nPRINT=stdout.write\nL=list;M=map\n\ndef Player1():\n\tprint(\"\")\n\ndef Player2():\n\tprint(\"\")\n\ndef Yes():\n\tPRINT(\"Yes\\n\")\n\ndef No():\n\tPRINT(\"No\\n\")\n\ndef IsPrime(n):\n\n\tfor i in range(2,MC(SQRT(n))+1):\n\t\tif n%i==0:\n\t\t\treturn False\n\treturn True\n\ndef Factors(x):\n\n\tans=[]\n\n\tfor i in range(1,MC(SQRT(x))+1):\n\t\tif x%i==0:\n\t\t\tans.append(i)\n\t\t\tif x%(x//i)==0:\n\t\t\t\tans.append(x//i)\n\treturn ans\ndef CheckPath(source,destination,g):\n\tvisited=[0]*101\n\tq=Q()\n\tq.append(source)\n\tvisited[source]=1\n\twhile q:\n\t\tnode=q.popleft()\n\t\tif node==destination:\n\t\t\treturn 1\n\t\tfor v in g[node]:\n\t\t\tif not visited[v]:\n\t\t\t\tq.append(v)\n\t\t\t\tvisited[v]=1\n\treturn 0\ndef Sieve(n):\n\tprime=[1]*(n+1)\n\tp=2\n\twhile p*p<=n:\n\t\tif prime[p]:\n\t\t\tfor i in range(p*p,n+1,p):\n\t\t\t\tprime[i]=0\n\t\tp+=1\n\tprimes=[]\n\tfor p in range(2,n+1):\n\t\tif prime[p]:\n\t\t\tprimes.append(p)\n\treturn primes\n\ndef Prefix(a,n):\n\tp=[]\n\tfor i in range(n):\n\t\tif i==0:\n\t\t\tp.append(a[0])\n\t\telse:\n\t\t\tp.append(p[-1]+a[i])\n\treturn p\ndef Suffix(a,n):\n\ts=[0]*n\n\tfor i in range(n-1,-1,-1):\n\t\tif i==n-1:\n\t\t\ts[i]=a[i]\n\t\telse:\n\t\t\ts[i]=s[i+1]+a[i]\n\treturn s\ndef Spf(n):\n\tspf=[0 for i in range(n)]\n\tspf[1]=1\n\tfor i in range(2,n):\n\t\tspf[i]=i\n\tfor i in range(4,n,2):\n\t\tspf[i]=2\n\tfor i in range(3,MC(SQRT(n))+1):\n\t\tif spf[i]==i:\n\t\t\tfor j in range(i*i,n,i):\n\t\t\t\tif spf[j]==j:\n\t\t\t\t\tspf[j]=i\n\treturn spf\n\ndef DFS(g,s,visited,ans):\n\tvisited[s]=1\n\t\n\tfor u,c in g[s]:\n\n\t\tif visited[u]:\n\t\t\tcontinue\n\n\t\tif c==ans[s]:\n\n\t\t\tif c==1:\n\t\t\t\tans[u]=2\n\t\t\telse:\n\t\t\t\tans[u]=1\n\t\telse:\n\t\t\tans[u]=c\n\t\tDFS(g,u,visited,ans)\n\n\ndef lcm(a,b):\n\n\treturn (a*b)//(MG(a,b))\ndef Kadane(numbers):\n\n\tmax_so_far=-INFINITY\n\tmax_ending_here=0\n\tmax_element=-INFINITY\n\tfor i in range(len(numbers)):\n\t\tmax_ending_here=max(max_ending_here+numbers[i],0)\n\t\tmax_so_far=max(max_ending_here,max_so_far)\n\t\tmax_element=max(max_element,numbers[i])\n\tif max_so_far==0:\n\t\tmax_so_far=max_element\n\treturn max_so_far\n\n\ndef subset(start,a,res,ans):\n\tres.append(ans)\n\tfor i in range(start,9):\n\t\tsubset(i+1,a,res,ans+[a[i]])\n\n\ndef Main():\n\n\tfor _ in range(int(INPUT())):\n\n\t\tn,r=M(int,INPUT().split( ))\n\t\ta=sorted(M(int,INPUT().split( )))\n\t\td={}\n\t\tarr=[]\n\t\tfor v in a:\n\t\t\tif v not in d:\n\t\t\t\tarr.append(v)\n\t\t\td[v]=1\n\t\tminus=0;ans=0\n\t\tfor i in range(len(arr)-1,-1,-1):\n\t\t\tcheck=arr[i]-minus\n\t\t\tif check>0:\n\t\t\t\tans+=1\n\t\t\t\tminus+=r\n\t\tPRINT(\"%d\\n\"%(ans))\n\n\n\n\n\n\n\n\n\n\n\nMain()\n\n'mysql -u root -p'"
        },
        {
            "language": 3,
            "solution": "# 1238B. Kill 'Em All\nimport sys\ninput = sys.stdin.readline\n\ndef missile(r: int, A: \"Array[int]\") -> int:\n    n = len(A)\n    for i, a in enumerate(A[1:], 1):\n        if i * r >= a:\n            return i\n    return len(A)\n\n\ndef main():\n    Q = int(input())\n    ans = []\n    for _ in range(Q):\n        N, R = map(int, input().split())\n        X = sorted(set(map(int, input().split())), reverse=1)\n        cnt = missile(R, X)\n        ans.append(cnt)\n    print(\"\\n\".join(map(str, ans)))\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "import sys\n \ntc = int(sys.stdin.readline())\nfor _ in range(tc):\n    n, r = map(int, sys.stdin.readline().split())\n    arr = sorted(set(map(int, sys.stdin.readline().split())))\n    idx = len(arr) - 1\n    cnt = 0\n    ans = 0\n    while idx >= 0:\n        if arr[idx] - cnt > 0:\n            ans += 1\n            cnt += r\n        idx -= 1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput=stdin.readline\n\n\nfor _ in range(int(input())):\n    n, r = map(int, input().split())\n    x = list(set(int(x) for x in input().split()))\n    x.sort()\n\n    t = 0\n    while len(x) > 0:\n\n        p = x.pop()\n        if p - t * r <=0 :\n            break\n        t += 1\n\n\n    print(t)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r, sm = 0, x, ct = 0;\n    cin >> n >> r;\n    set<int> s;\n    for (int i = 0; i < n; i++) {\n      cin >> x;\n      s.insert(x);\n    }\n    for (auto it = s.rbegin(); it != s.rend(); it++) {\n      if (sm < *it) {\n        ct++;\n      }\n      sm += r;\n    }\n    cout << ct << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nans=''\nq=int(input())\nfor i in range(q):\n    n,x=map(int,input().split())\n    a=list(set((map(int,input().split()))))\n    a.sort(reverse=True)\n    a.append(-1)\n    arr=counter=0\n    for i in range(n+1):\n        if a[i]-counter<=0:\n            print(arr)\n            break\n        counter+=x\n        arr+=1\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  cin >> q;\n  while (q) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> a(n);\n    for (int i = 0; i < n; ++i) {\n      cin >> a[i];\n    }\n    sort(a.begin(), a.end());\n    int counter = 0;\n    while (!a.empty() && a[a.size() - 1] - counter * r > 0) {\n      while (a.size() > 1 && a[a.size() - 1] == a[a.size() - 2]) a.pop_back();\n      a.pop_back();\n      counter++;\n    }\n    cout << counter << endl;\n    q--;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = atan(1.0) * 4;\nconst long long int INF = 100000000000000003;\nconst int32_t LOG = 21;\nconst long long int BIG = pow(2, 20) + 1;\nmap<long long int, bool> check;\nint32_t main() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n  long long int q;\n  cin >> q;\n  for (long long int ii = 0; ii < q; ii++) {\n    long long int n, r;\n    cin >> n >> r;\n    long long int arr[n];\n    for (long long int i = 0; i < n; i++) cin >> arr[i];\n    sort(arr, arr + n);\n    reverse(arr, arr + n);\n    long long int toSub = 0;\n    long long int ans = 0;\n    for (long long int i = 0; i < n; i++) {\n      if (check.find(arr[i]) != check.end()) {\n        continue;\n      }\n      if (arr[i] - toSub > 0) {\n        toSub += r;\n        ans++;\n        check[arr[i]] = true;\n      } else\n        break;\n    }\n    cout << ans << '\\n';\n    check.clear();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int dx[] = {1, 0, -1, 0};\nlong long int dy[] = {0, 1, 0, -1};\nconst long long int N = 1000 * 1000 + 5;\nconst long long int size = 1000 * 100 * 2 + 5;\nconst long long int mod = 1000 * 1000 * 1000 + 7;\nlong long int gcd(long long int a, long long int b) {\n  if (!b) return a;\n  return gcd(b, a % b);\n}\nlong long int power_mod(long long int first, long long int second,\n                        long long int p) {\n  long long int res = 1;\n  first %= p;\n  while (second > 0) {\n    if (second & 1) res = (res * first) % p;\n    second = second >> 1;\n    first = (first * first) % p;\n  }\n  return res;\n}\nlong long int lcm(long long int a, long long int b) {\n  return (a * b) / gcd(a, b);\n}\nlong long int sumofdigits(long long int n) {\n  long long int out = 0;\n  while (n) {\n    out += (n % 10);\n    n /= 10;\n  }\n  return out;\n}\nbool isPrime(long long int n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (long long int i = 5; i * i <= n; i = i + 6)\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  return true;\n}\nlong long int power(long long int a, long long int b) {\n  if (b == 0) return 1;\n  if (b & 1) return a * power(a, b - 1);\n  int res = power(a, b / 2);\n  return res * res;\n}\nint main() {\n  long long int tt;\n  cin >> tt;\n  for (int _tt = 0; _tt < tt; _tt++) {\n    long long int n, r;\n    cin >> n >> r;\n    set<long long int> a;\n    long long int temp;\n    for (long long int i = 0; i < n; i++) {\n      cin >> temp;\n      a.insert(temp);\n    }\n    long long int sz = a.size();\n    long long int store, count = 0;\n    vector<long long int> v;\n    set<long long int>::iterator it;\n    for (it = a.begin(); it != a.end(); it++) {\n      store = sz - (count + 1);\n      v.push_back(*it - (store * r));\n      count++;\n    }\n    long long int sum = 0;\n    for (long long int i = 0; i < v.size(); i++) {\n      if (v[i] > 0) {\n        sum++;\n      }\n    }\n    cout << sum << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n#from sys import maxsize\n#from collections import Counter as cnt, defaultdict as dic\n#import string\n#from decimal import Decimal as de\n\nget_int = lambda: int(input())\nget_mul_int = lambda: map(int, input().rstrip().split())\nget_list = lambda: list(map(int, input().rstrip().split()))\n\nTEST_CASES=True\ndef main():\n    n, r = get_mul_int()\n    a = get_list()\n    new=list(set(a))\n    new.sort(reverse=True)\n    count=0\n    for i in range(len(new)):\n        new[i]-= count*r\n        if new[i]<=0:\n            break\n        count+=1\n    print(count)\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    if TEST_CASES: [main() for _ in range(int(input()))]\n    else: main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint q, n, r;\nint a[100010];\nbool vis[100010];\nint main() {\n  scanf(\"%d\", &q);\n  for (int z = 1; z <= q; z++) {\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    sort(a + 1, a + n + 1);\n    int nowp = n, nowr = 0, cnt = 0;\n    while (a[nowp] - cnt * r > 0 && nowp > 0) {\n      if (vis[a[nowp]]) {\n        nowp--;\n        continue;\n      }\n      vis[a[nowp]] = true;\n      nowp--;\n      cnt++;\n    }\n    for (int i = 1; i <= n; i++) {\n      vis[a[i]] = false;\n    }\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\ndef solve(arr, n, r):\n\t\n\tarr.sort()\n\t\n\tret = 0\n\n\tfor i in range(n-1, -1, -1):\n\t\tif i != n-1 and arr[i] == arr[i+1]:\n\t\t\tcontinue\n\n\t\tif arr[i] - ret*r <= 0:\n\t\t\treturn ret\n\n\t\tret += 1\n\n\treturn ret\n\ndef main():\n\tt = int(input())\n\n\tfor _ in range(t):\n\t\tn,r = list(map(int, stdin.readline().strip().split()))\n\n\t\tarr = list(map(int, stdin.readline().strip().split()))\n\n\t\tstdout.write(str(solve(arr, n, r)) + \"\\n\")\n\nif __name__ == \"__main__\":\n\tmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10;\nint n, r;\nvector<int> a;\nint main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    scanf(\"%d %d\", &n, &r);\n    a.clear();\n    a.reserve(n);\n    for (int i = 1; i <= n; i++) {\n      int first;\n      scanf(\"%d\", &first);\n      a.push_back(first);\n    }\n    sort(a.begin(), a.end());\n    a.resize(unique(a.begin(), a.end()) - a.begin());\n    int tot = a.size();\n    long long ans = tot;\n    for (int i = 0; i < tot; i++) {\n      int nxt = tot - 1 - i;\n      ans = min(ans, nxt + (max(0LL, a[i] - nxt * 1LL * r) + r - 1) / r);\n    }\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class A implements Runnable {\n\tFastReader scn;\n\tPrintWriter out;\n\tString INPUT =\"\";\n\t\n\t\n\t long nextPrime(long n) \n    { \n        BigInteger b = new BigInteger(String.valueOf(n)); \n        return Long.parseLong(b.nextProbablePrime().toString()); \n    } \n\t\n\n\tvoid solve(){\n\t\tint t = scn.nextInt();\n\t\t\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n = scn.nextInt();\n\t\t\tlong r = scn.nextLong();\n\t\t\t\n\t\t\tlong[] a =scn.nextLongArray(n);\n\t\t\t\n\t\t\tArrayList<Long> ar = new ArrayList<>();\n\t\t\t\n\t\t\tHashSet<Long> hs = new HashSet<>();\n\t\t\t//Arrays.sort(a);\n\t\t\t\n\t\t\tfor(int i = 0;i<n;i++)\n\t\t\t{\n\t\t\t\tif(hs.contains(a[i]))\n\t\t\t\t\tcontinue;\n\t\t\t\telse {\n\t\t\t\t\t\ths.add(a[i]);\n\t\t\t\t\t\tar.add(a[i]);\n\t\t\t\t}\n\t\t\t//\tout.println(a[i]);\n\t\t\t}\n\t\t\tCollections.sort(ar);\n\t\t\tlong ans=0;\n\t\t\tlong sub = 0;\n\n\t\t\tfor(int i=ar.size()-1;i>=0;i--)\n\t\t\t{\n\t\t\t\t//out.print(k[i]+\" \");\n\t\t\t\tif(ar.get(i)-sub<=0)\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tans++;\n\t\t\t\tsub+=r;\n\t\t\t}\n\t\t\t\n\t\t\tout.println(ans);\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\t\n\t} \n\t\n\tstatic class Pair\n\t{\n\t    long a;\n\t    long b;\n\t   \n\t    Pair(long a,long b)\n\t    {\n\t        this.a = a;\n\t        this.b = b;\n\t    }\n\t}\n\tstatic class Compare\n\t{\n\t\tstatic void compare(Pair ar[])\n\t\t{\n\t\t\tArrays.sort(ar, new Comparator<Pair>(){\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(Pair p1,Pair p2)\n\t\t\t\t{\n\t\t\t\t\treturn (int) (p1.a-p2.a);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\tpublic static int[] radixSort(int[] f){ return radixSort(f, f.length); }\n\tint[][] packU(int n, int[] from, int[] to) {\n\t\tint[][] g = new int[n][];\n\t\tint[] p = new int[n];\n\t\tfor (int f : from)\n\t\t\tp[f]++;\n\t\tfor (int t : to)\n\t\t\tp[t]++;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tg[i] = new int[p[i]];\n\t\tfor (int i = 0; i < from.length; i++) {\n\t\t\tg[from[i]][--p[from[i]]] = to[i];\n\t\t\tg[to[i]][--p[to[i]]] = from[i];\n\t\t}\n\t\treturn g;\n\t}\n\n\t\n\tpublic static int[] radixSort(int[] f, int n)\n\t{\n\t\tint[] to = new int[n];\n\t\t{\n\t\t\tint[] b = new int[65537];\n\t\t\tfor(int i = 0;i < n;i++)b[1+(f[i]&0xffff)]++;\n\t\t\tfor(int i = 1;i <= 65536;i++)b[i]+=b[i-1];\n\t\t\tfor(int i = 0;i < n;i++)to[b[f[i]&0xffff]++] = f[i];\n\t\t\tint[] d = f; f = to;to = d;\n\t\t}\n\t\t{\n\t\t\tint[] b = new int[65537];\n\t\t\tfor(int i = 0;i < n;i++)b[1+(f[i]>>>16)]++;\n\t\t\tfor(int i = 1;i <= 65536;i++)b[i]+=b[i-1];\n\t\t\tfor(int i = 0;i < n;i++)to[b[f[i]>>>16]++] = f[i];\n\t\t\tint[] d = f; f = to;to = d;\n\t\t}\n\t\treturn f;\n\t}\n\n\tpublic void run() {\n\t\tlong time = System.currentTimeMillis();\n\t\tboolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\t\tout = new PrintWriter(System.out);\n\t\tscn = new FastReader(oj);\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!oj) {\n\t\t\tSystem.out.println(Arrays.deepToString(new Object[] { System.currentTimeMillis() - time + \" ms\" }));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new A(), \"Main\", 1 << 26).start();\n\t}\n\n\tclass FastReader {\n\t\tInputStream is;\n\n\t\tpublic FastReader(boolean onlineJudge) {\n\t\t\tis = onlineJudge ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\t}\n\n\t\tbyte[] inbuf = new byte[1024];\n\t\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\t\tint readByte() {\n\t\t\tif (lenbuf == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (ptrbuf >= lenbuf) {\n\t\t\t\tptrbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn inbuf[ptrbuf++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tint skip() {\n\t\t\tint b;\n\t\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t\t;\n\t\t\treturn b;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tchar nextChar() {\n\t\t\treturn (char) skip();\n\t\t}\n\n\t\tString next() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((!isSpaceChar(b) || b == ' ')) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tchar[] next(int n) {\n\t\t\tchar[] buf = new char[n];\n\t\t\tint b = skip(), p = 0;\n\t\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t\t}\n\n\t\tint nextInt() {\n\t\t\tint num = 0, b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\tlong num = 0;\n\t\t\tint b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tchar[][] nextMatrix(int n, int m) {\n\t\t\tchar[][] map = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next(m);\n\t\t\treturn map;\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tvoid printArray(long[] k)\n\t\t{\n\t\t\tfor(int i =0;i<k.length;i++)\n\t\t\t\tout.print(k[i]);\n\t\t}\n\t\tArrayList<Integer> nArray(int n) {\n\t\t\tArrayList<Integer> a = new ArrayList<>();\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta.add(nextInt());\n\t\t\t\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] next2DInt(int n, int m) {\n\t\t\tint[][] arr = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[][] next2DLong(int n, int m) {\n\t\t\tlong[][] arr = new long[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLongArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] shuffle(int[] array) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < array.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tarray[i] = array[i] ^ array[j];\n\t\t\t\tarray[j] = array[i] ^ array[j];\n\t\t\t\tarray[i] = array[i] ^ array[j];\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\tint[] uniq(int[] arr) {\n\t\t\tArrays.sort(arr);\n\t\t\tint[] rv = new int[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\t\tint[] reverse(int[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int ary[300009], bry[300005], cry[300005];\nint main() {\n  long long int t, ck, n, r, s, d, f, g, u, y;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    ck = 0;\n    cin >> n >> r;\n    for (int j = 1; j <= n; j++) {\n      cin >> ary[j];\n      bry[ary[j]] = 0;\n    }\n    sort(ary + 1, ary + n + 1);\n    for (int j = n; j > 0; j--) {\n      if (ary[j] - (ck * r) > 0 && bry[ary[j]] == 0) {\n        ck++;\n        bry[ary[j]] = 1;\n      }\n    }\n    cout << ck << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nq=int(input())\ndef f(a,b,A):\n  while b-a>1:\n    c=(a+b)//2\n    if X[-c-1]<=c*R:\n      b=c\n    else:\n      a=c\n  if X[-a-1]<=a*R:\n    return a\n  else:\n    return b\n\nfor _ in range(q):\n  n,R=map(int,input().split())\n  X=sorted(list(set([int(i) for i in input().split()])))\n  l,r=0,len(X)\n  print(f(l,r,X))\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd, ceil \nfrom collections import defaultdict, deque\nfrom sys import stdin,stdout\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\n \ninp=lambda : int(stdin.readline())\nsip=lambda : stdin.readline()\nmulip =lambda : map(int, stdin.readline().split())\nlst=lambda : list(map(int,stdin.readline().split()))\nslst=lambda: list(sip())\nM = pow(10,9)+7\n#-----------------------------------------------------\nfor _ in range(inp()):\n\tn,r = mulip()\n\tA = lst()\n\tA = list(set(A))\n\tA = sorted(A)\n\t#print(*A)\n\tL,R,k=0,len(A)-1,1\n\tr1 = r \n\twhile(L<R):\n\t\tif L-R==1:\n\t\t\tk+=1\n\t\t\tbreak\n\t\tif r1>=A[L]:\n\t\t\tL+=1\n\t\telse:\n\t\t\tR-=1\n\t\t\tr1+=r \n\t\t\tk+=1\n\tprint(k)\n "
        },
        {
            "language": 3,
            "solution": "# 1238B. Kill 'Em All\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    Q = int(input())\n    ans = []\n    for _ in range(Q):\n        N, R = map(int, input().split())\n        X = sorted(set(map(int, input().split())), reverse=1)\n        for i, x in enumerate(X):\n            if i * R >= x:\n                ans.append(i)\n                break\n        else:\n            ans.append(len(X))\n    print(\"\\n\".join(map(str, ans)))\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long n, r;\n    cin >> n >> r;\n    set<long long> s;\n    for (long long i = 0; i < n; i++) {\n      long long x;\n      cin >> x;\n      s.insert(x);\n    }\n    n = s.size();\n    long long a[n];\n    set<long long>::iterator it = s.begin();\n    for (long long i = 0; i < n; i++) {\n      a[i] = *it;\n      it++;\n    }\n    long long j = 0;\n    long long ans = 0, x;\n    for (long long i = 0; i < n; i++) {\n      if (a[n - 1 - i] == -1) {\n        break;\n      }\n      ans++;\n      a[n - 1 - i] = -1;\n      while (1) {\n        if (a[j] > 0) {\n          if (a[j] - ans * r <= 0) {\n            a[j] = -1;\n            j++;\n          } else\n            break;\n        } else\n          break;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint all[100005];\nbool F(int a, int b) { return a > b; }\nint main() {\n  int T, N, M, i, j, t, con = 0, big = 0, ans;\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d %d\", &N, &M);\n    for (i = 0; i < N; i++) scanf(\"%d\", &all[i]);\n    sort(all, all + N, F);\n    con = 0;\n    for (i = 0; i < N; i++) {\n      if (i && all[i] == all[i - 1]) continue;\n      if (i && all[i] <= M * con) {\n        break;\n      }\n      con++;\n    }\n    printf(\"%d\\n\", con);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n\tn, r = [int(i) for i in input().split()]\n\ta = [int(i) for i in input().split()]\n\tcur = 0\n\tans = 0\n\ta = list(set(a))\n\ta.sort(reverse = 1)\n\tfor i in range(len(a)):\n\t\tif a[i] > cur:\n\t\t\tans += 1\n\t\t\tcur += r\n\t\telse:\n\t\t\tbreak\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nQuery = []\nfor _ in range(Q):\n    N, R = map(int, input().split())\n    A = set(map(int, input().split()))\n    Query.append((N, R, A))\n\nfor N, R, A in Query:\n    B = sorted(list(A), reverse=True)\n    c = 0\n    for b in B:\n        if b - c*R > 0:\n            c += 1\n    print(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\nlong long MOD = 998244353;\ndouble eps = 1e-12;\nlong long myceil(long long a, long long b) {\n  if (a % b == 0)\n    return a / b;\n  else\n    return a / b + 1;\n}\nbool isPerSquare(long double a) {\n  if (a < 0) return false;\n  long long sr = sqrt(a);\n  return (sr * sr == a);\n}\nlong long arr1[200002];\nlong long arr2[200002];\nlong long arr2D[1001][1001];\nvector<long long> vec;\nvoid solve() {\n  long long n, m, a, b, c, d;\n  string s;\n  cin >> n >> m;\n  for (long long i = 0; i < n; i++) cin >> arr1[i];\n  map<long long, long long> vals;\n  for (long long i = 0; i < n; i++) vals[arr1[i]]++;\n  long long ans = 0;\n  for (auto itr = vals.rbegin(); itr != vals.rend(); itr++) {\n    if ((*itr).first - ans * m <= 0) break;\n    ans++;\n  }\n  cout << ans << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t = 1;\n  cin >> t;\n  for (int it = 1; it <= t; it++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput=stdin.readline\nR = lambda:map(int,input().split())\nq, = R()\nfor s1 in q*'0':\n    n,r = R()\n    s = sorted(list(set(R())))\n    n = len(s)\n    st = 0\n    en = n-1\n    ne = -1\n    if n == 1:\n    \tprint(1)\n    \tcontinue\n    if s[0]>((n-1)*r):\n    \tprint(n)\n    \tcontinue\n    while (st != en - 1) or (ne==-1):\n    \tne = (st+en)//2\n    \tif s[ne]<=(n-1-ne)*r:\n    \t\tst = ne\n    \telse:\n    \t\ten = ne\n    print(n-st-1)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nimport sys\n\n#lines = stdin.readlines()\ndef rint():\n    return map(int, sys.stdin.readline().split())\n\ndef input():\n    return sys.stdin.readline().rstrip('\\n')\n\ndef oint():\n    return int(input())\n\n\nq = oint()\n\nfor _ in range(q):\n    n, r = rint()\n    x = set(rint())\n    x = list(x)\n    x.sort()\n    z = 0\n    si = 0\n    n = len(x)\n    ei = n-1\n    cnt = 0\n    while True:\n        if ei < si:\n            break\n        cnt += 1\n        ei -=1\n        z +=r\n        for i in range(si, ei+1):\n            if x[i] > z:\n                si = i\n                break\n            if i == ei:\n                si = ei+1\n    print(cnt)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput=stdin.readline\nR=lambda:map(int,input().split())\nfor _ in range(int(input())):\n\tn,r=R();k=ans=0\n\tfor i in sorted(set(R()),reverse=True):\n\t\tif i-k>0:ans+=1;k+=r\n\t\telse:break\n\tprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer; \nimport java.util.*;\n\npublic class Main{\n\t//Se utilizo FastReader al ser mas rapido que Scanner\n\tstatic class FastReader{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader(){ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next(){ \n\t\t\twhile (st == null || !st.hasMoreElements()){ \n\t\t\t\ttry{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e){ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt(){ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong(){ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble(){ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine(){ \n\t\t\tString str = \"\"; \n\t\t\ttry{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e){ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t}\n\n\t//Se itera el TreeSet y se revisa cada monstruo, utilizando el int kill para revisar si mueren con espinas (el kill se mueve cada vez que se hace un disparo, esta variable se utilizo para no tener que mover los monstruos)\n\tpublic static int min_moves(TreeSet<Monster> m, int push){\n\t\tint c = 0;\n\t\tint kill = 0; \n\t\tIterator bob = m.iterator(); \n\t\twhile(bob.hasNext()){\n\t\t\tMonster b = (Monster)bob.next();\n\t\t\t//Si el monstruo muere con las espinas solo se remueve (se agrego un condicional para evitar que monstruos voladores mueran con espinas)\n\t\t\tif(b.givepos() <= kill && b.givepos() > 0){\n\t\t\t\tbob.remove();\n\t\t\t}\n\t\t\t//Si el monstruo no muere con las espinas, aumenta el numero de disparos y el valor de kill, y lo remueve.\n\t\t\telse{\n\t\t\t\tc++;\n\t\t\t\tkill += push;\n\t\t\t\tbob.remove();\n\t\t\t}\n\t\t}\n\t\treturn c; //c es la cantidad de disparos requeridos\n\t}\n\n\tpublic static void main(String[] args){\n\t\tFastReader s=new FastReader();\n\t\tint q = s.nextInt();\n\t\tint[] solution = new int[q];\n\t\tfor(int i = 0; i < q; i++){\n\t\t\t//Se utilizo un TreeSet para mayor velocidad, y ademas para no lidiar con monstruos con posiciones repetidas\n\t\t\tTreeSet<Monster> mon = new TreeSet<>(); \n\t\t\tint n = s.nextInt();\n\t\t\tint r = s.nextInt();\n\t\t\t//Se agrega cada monstruo al TreeSet, que los ordenara automaticamente de mayor a menor acorde a su posicion\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tint p = s.nextInt();\n\t\t\t\t//Se hace una distincion entre Monster y FlyingMonster\n\t\t\t\tif(p > 0){\n\t\t\t\t\tmon.add(new Monster(p));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmon.add(new FlyingMonster(p));\n\t\t\t\t}\n\t\t\t}\n\t\t\tsolution[i] = min_moves(mon, r);\n\t\t}\n\t\t//Se printea cada solucion de cada query por separado\n\t\tfor(int x : solution){\n\t\t\tSystem.out.println(x);\n\t\t}\n\t}\n}\n\nclass Monster implements Comparable<Monster>{\n\tint pos;\n\n\tpublic Monster(int h){\n\t\tthis.pos = h;\n\t}\n\n\t//givepos sirve para entregar la posicion del monstruo como int, para asi poder compararlo con el valor kill de la funcion min_moves\n\tpublic int givepos(){\n\t\treturn this.pos;\n\t}\n\n\t//Override compareTo para ordenar los monstruos en orden inverso (del mas lejano a las espinas al mas cercano)\n\t@Override\n\tpublic int compareTo(Monster other){\n\t\treturn (other.pos - this.pos);\n\t}\n\n\t@Override\n\tpublic String toString(){\n\t\treturn (\"\" + this.pos);\n\t}\n\t\n}\n\nclass FlyingMonster extends Monster{\n\tint pos;\n\n\tpublic FlyingMonster(int h){\n\t\tsuper(h);\n\t}\n\n\tpublic int givepos(){\n\t\treturn this.pos;\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int n, r;\n    scanf(\"%d %d\", &n, &r);\n    int first[100005];\n    for (int i = 0; i < n; i++) scanf(\"%d\", &first[i]);\n    sort(first, first + n);\n    vector<int> tmp;\n    for (int i = 0; i < n; i++) {\n      if (i != 0 && first[i] == first[i - 1]) continue;\n      tmp.push_back(first[i]);\n    }\n    int ans = 0;\n    reverse(tmp.begin(), tmp.end());\n    for (auto it : tmp) {\n      if (it <= r * ans) break;\n      ans++;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "number_of_queries = int(input())\nknockback = []\nareas = []\nfn = len\nfor i in range(0, number_of_queries):\n\tknockback.append(int(input().split(\" \")[1]))\n\tareas.append(input().split(\" \"))\n \n \nfor i in range(0,number_of_queries):\n    level_clear = False\n    \n    pointer = 0\n    current_areas = []\n    discrete_current_areas = []\n    for j in range(0,fn(areas[i])):\n        current_areas.append(int(areas[i][j]))\n    \n    a = set(current_areas)\n    discrete_current_areas = list(a)\n    discrete_current_areas.sort(reverse=True)\n    counter = 0\n    for j in range(0,len(discrete_current_areas)):\n        current_knockback = knockback[i]*j\n        if discrete_current_areas[j]> current_knockback:\n            counter+=1\n        else:\n            print(counter)\n            break\n        if counter == len(discrete_current_areas):\n            print(counter)\n            break\n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[100005] = {0};\nvoid init() {\n  sort(arr, arr + 100005, greater<int>());\n  int i = 0;\n  while (arr[i] != 0) {\n    arr[i] = 0;\n    i++;\n  }\n}\nint main() {\n  int _t;\n  cin >> _t;\n  int n, r, tmp, bias = 0, ans = 0, nowshoot = 0;\n  while (_t--) {\n    bias = 0, ans = 0;\n    nowshoot = 0;\n    cin >> n >> r;\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", arr + i);\n    }\n    sort(arr, arr + n);\n    for (int i = n - 1; i >= 0; i--) {\n      if (arr[i] == nowshoot) {\n        continue;\n      }\n      if (arr[i] - bias <= 0) {\n        break;\n      }\n      ans++;\n      bias += r;\n      nowshoot = arr[i];\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfor l in range(int(input())):\n n,r=map(int,input().split())\n arr=list(map(int,input().split()));\n arr=list(set(arr))\n arr.sort(reverse = True)\n d=0;ans=0;cnt=0\n for i in range(len(arr)):\n   arr[i]-=cnt*r\n   if arr[i]<=0:break\n   cnt+=1\n print(cnt)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 5;\nint pos[MAXN];\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &pos[i]);\n    int nowp = 0;\n    sort(pos + 1, pos + 1 + n);\n    n = unique(pos + 1, pos + 1 + n) - pos - 1;\n    int cnt = 0;\n    for (int i = n; i >= 1; i--) {\n      if (pos[i] <= nowp) break;\n      cnt++;\n      nowp += r;\n    }\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nans=''\nq=int(input())\nfor i in range(q):\n    n,x=map(int,input().split())\n    a=list(set((map(int,input().split()))))\n    a.sort(reverse=True)\n    a.append(-1)\n    arr=counter=0\n    for item in a:\n        if item-counter<=0:\n            print(arr)\n            break\n        counter+=x\n        arr+=1\n"
        },
        {
            "language": 3,
            "solution": "import os, sys, atexit\nfrom io import BytesIO, StringIO\n \ninput = BytesIO(os.read(0, os.fstat(0).st_size)).readline\n# _OUTPUT_BUFFER = StringIO()\n# sys.stdout = _OUTPUT_BUFFER\n \n# @atexit.register\n# def write():\n#     sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\nq = int(input().strip())\n\nfor _ in range(q):\n    n, r = map(int, input().strip().split())\n    a = list(map(int, input().split()))\n\n    s = sorted(set(a), reverse=True)\n    d, cnt = 0, 0\n    for i in s:\n        if i <= d:\n            break\n        d += r\n        cnt += 1\n            \n    print(cnt)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t, n, boom, count, ans, x;\n  vector<int> pos;\n  cin >> t;\n  while (t--) {\n    ans = 0;\n    count = 1;\n    pos.clear();\n    cin >> n >> boom;\n    for (int i = 0; i < n; i++) {\n      cin >> x;\n      pos.push_back(x);\n    }\n    set<int> s(pos.begin(), pos.end());\n    pos.assign(s.begin(), s.end());\n    s.clear();\n    n = pos.size() - 1;\n    if (n == 0) {\n      cout << \"1\" << endl;\n      continue;\n    }\n    while (n) {\n      pos[n - 1] -= count * boom;\n      count++;\n      if (pos[n - 1] <= 0)\n        break;\n      else if (n == 1) {\n        count++;\n        break;\n      } else\n        n--;\n    }\n    cout << count - 1 << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    // For fast input output\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            try {\n                br = new BufferedReader(new FileReader(\"input.txt\"));\n                PrintStream out = new PrintStream(new FileOutputStream(\"output.txt\"));\n                System.setErr(new PrintStream(new FileOutputStream(\"error.txt\")));\n                System.setOut(out);\n            } catch (Exception e) {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    // end of fast i/o code \n    static StringBuilder str = new StringBuilder(\"\");\n\n    public static void main(String[] args) {\n        FastReader reader = new FastReader();\n        int t = reader.nextInt();\n        while(t-->0)\n        {\n            int n = reader.nextInt();\n            int r = reader.nextInt();\n            ArrayList<Integer> list = new ArrayList<>();\n            HashSet<Integer> set = new HashSet<>();\n            for(int i = 0; i < n; i++)\n            {\n                int a = reader.nextInt();\n                if(set.contains(a))\n                    continue;\n                list.add(a);\n                set.add(a);\n            }\n            Collections.sort(list);\n            int count = 1;\n            for(int i=list.size()-1; i>0; i--)\n            {\n                if((list.get(i-1)-r*count)<=0)\n                    break;\n                count++;\n            }\n            str.append(count+\"\\n\");\n        }\n        System.out.println(str.toString());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int tc, n, r;\n  cin >> tc;\n  while (tc--) {\n    cin >> n >> r;\n    int ara[n];\n    for (int i = 0; i < n; i++) cin >> ara[i];\n    sort(ara, ara + n);\n    n = unique(ara, ara + n) - ara;\n    int ans = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      ans += (ans * r < ara[i]) ? 1 : 0;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main{\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner s=new Scanner(System.in);\n\n\t\tint t=s.nextInt();\n\t\tStringBuilder sb=new StringBuilder();\n\t\tfor(int ie=0;ie<t;ie++) {\n\t\t\t\n\t\t\tint n=s.nextInt();\n\t\t\tint k=s.nextInt();\n\t\t\tInteger[] arr=new Integer[n];\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tarr[i]=s.nextInt();\n\t\t\t}\n\t\t\t\n\t\t\tHashMap<Integer,Integer> map=new HashMap<>();\n\t\t\tArrays.sort(arr);\n\t\t\t\n\t\t\tint ans=0;\n\t\t\tint curr=0;\n\t\t\tfor(int i=n-1;i>=0;i--) {\n\t\t\t\tif(map.containsKey(arr[i])) {\n\t\t\t\t\t\n\t\t\t\t}else {\n\t\t\t\t\tmap.put(arr[i], 1);\n\t\t\t\t\tif(arr[i]-curr>0) {\n\t\t\t\t\t\tans++;\n\t\t\t\t\t\tcurr=curr+k;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsb.append(ans);\n\t\t\tsb.append(\"\\n\");\n\t\t\t\n\t\t\t\n\t\t}\n\t\tSystem.out.println(sb);\n\t\t\n\t\n\t\t\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import os, sys, atexit\nfrom io import BytesIO, StringIO\n \ninput = BytesIO(os.read(0, os.fstat(0).st_size)).readline\n_OUTPUT_BUFFER = StringIO()\nsys.stdout = _OUTPUT_BUFFER\n \n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\nq = int(input().strip())\n\nfor _ in range(q):\n    n, r = map(int, input().strip().split())\n    a = list(map(int, input().split()))\n\n    s = sorted(set(a), reverse=True)\n    d, cnt = 0, 0\n    for i in s:\n        if i <= d:\n            break\n        d += r\n        cnt += 1\n            \n    print(cnt)\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.TreeSet;\n\npublic class B1238KillEmAll {\n\n    public static void main(String[] args) throws IOException\n    {\n\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n\n        int t = Integer.parseInt(in.readLine());\n        while (t-- != 0) {\n            String[] s = in.readLine().split(\" \");\n            int n = Integer.parseInt(s[0]);\n            int r = Integer.parseInt(s[1]);\n            s = in.readLine().split(\" \");\n            int[] ar = new int[n];\n\n            for (int i = 0; i < n; i++) {\n                ar[i] = Integer.parseInt(s[i]);\n            }\n\n\n            out.write(sol(n,r,ar) + \"\\n\");\n        }\n        out.flush();\n    }\n\n    private static int sol(int n, int r, int[] ar) {\n\n//        Arrays.sort(ar);\n        int count = 0;\n        TreeSet<Integer> set = new TreeSet<>();\n\n        for (int i = 0; i < n; i++) {\n            set.add(ar[i]);\n        }\n\n        ArrayList<Integer> res = new ArrayList<>(set);\n\n        for (int i = res.size() - 1; i >= 0; i--) {\n            if (res.get(i) - count * r <= 0) break;\n            count++;\n        }\n        return count;\n\n    }\n\n\n}"
        },
        {
            "language": 3,
            "solution": "from math import *\nimport sys\nci = 0\ncin = list(sys.stdin)\n\nfor zz in range(int(cin[0])):\n    n, r = map(int, cin[zz*2 + 1].split())\n    if n == 1:\n        print(1)\n    else:\n        x = set()\n        for i in cin[zz*2 + 2].split():\n            x.add(int(i))\n        x = list(x)\n        x.sort()\n        le = len(x)\n        ci = le - 1\n        while ci >= 0 and x[ci] > (le - ci - 1)*r:\n            ci -= 1\n\n        ci += 1\n        print(le - ci)\n"
        },
        {
            "language": 1,
            "solution": "for i in range(int(raw_input())):\n    n, r = map(int, raw_input().split())\n    xs = map(int, raw_input().split())\n    result = 1\n    push = r\n    xs = sorted(set(xs))\n\n    j = len(xs) - 2\n    while xs[j] - push > 0 and j >= 0:\n        result += 1\n        push += r\n        j -= 1 \n     \n    print(result)"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n\n\ndef solution(arr, n, r):\n    arr.sort()\n    arr = list(set(arr))\n    n = len(arr)\n\n    res = 0\n    for i in range(n - 1, -1, -1):\n        temp = arr[i] - res * r\n        res += (1 if temp > 0 else 0)\n\n    write(res)\n\n\ndef main():\n    for _ in range(r_int()):\n        n, r = r_array()\n        arr = r_array()\n        solution(arr, n, r)\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\ndef input():\n    return sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\ndef write(*args, end='\\n'):\n    for x in args:\n        sys.stdout.write(str(x) + ' ')\n    sys.stdout.write(end)\n\n\ndef r_array():\n    return [int(x) for x in input().split()]\n\n\ndef r_int():\n    return int(input())\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n\n        int q = scan.nextInt(), n, d, hits;\n        Integer[] arr;\n        StringBuilder s = new StringBuilder();\n\n        for (int i = 0; i < q; i++) {\n\n            n = scan.nextInt();\n            d = scan.nextInt();\n\n            arr = new Integer[n];\n\n            for (int j = 0; j < n; j++)\n                arr[j] = scan.nextInt();\n\n            Arrays.sort(arr);\n\n            hits = 1;\n\n            for (int j = n-2; hits < n && j >= 0 ; j--) {\n                if (!arr[j+1].equals(arr[j])) {\n                    if (arr[j]-hits*d <= 0)\n                        break;\n                    hits++;\n                }\n            }\n\n            s.append(hits).append(System.lineSeparator());\n\n        }\n\n        System.out.print(s);\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\nimport fileinput\nimport copy\n\n\nORDA = 97\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\ndef cdiv(n, k): return n // k + (n % k != 0)\n\n\nans = []\nfor _ in range(ii()):\n    n, r = mi()\n    a = [i for i in set(li())]\n    a.sort(reverse=True)\n    lena = len(a)\n    pos = 0\n    while pos < lena:\n        pos += 1\n        if pos == lena or a[pos] - pos * r <= 0:\n            break\n    ans.append(pos)\nprint(*ans, sep='\\n')\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = [int(m) for m in stdin.readline().split()]\n    monsters.sort(reverse=True)\n\n    shots, acc = 0, 0\n    for i, m in enumerate(monsters):\n        if i and m == monsters[i-1]:\n            continue\n\n        if m - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + \"\\n\"\n\nstdout.write(result)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nans = \"\"\nfor _ in range(n):\n    m, r = map(int, input().split())\n    s = sorted(set(map(int, input().split())))[::-1]\n    count = 0\n    for i in s:\n        if i <= count * r:\n            break\n        count += 1\n    ans += str(count) + '\\n'\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.net.StandardSocketOptions;\nimport java.security.cert.CollectionCertStoreParameters;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.SortedSet;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\nimport java.util.Vector;\n\nimport javax.script.ScriptEngine;\nimport javax.script.ScriptEngineManager;\nimport javax.script.ScriptException;\n\n\npublic class mai {\n\n\tpublic static int lowerBound(long[] array, int length, long value) {\n\t\tint low = 0;\n\t\tint high = length;\n\t\twhile (low < high) {\n\t\t\tfinal int mid = (low + high) / 2;\n\t\t\tif (value <= array[mid]) {\n\t\t\t\thigh = mid;\n\t\t\t} else {\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t}\n\t\treturn low;\n\t}\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}\n\n\tstatic long lcm(long a, long b) {\n\t\treturn (a * b) / gcd(a, b);\n\t}\n\n\tpublic static void sortbyColumn(int arr[][], int col) {\n\t\t// Using built-in sort function Arrays.sort\n\t\tArrays.sort(arr, new Comparator<int[]>() {\n\n\t\t\t@Override\n\t\t\t// Compare values according to columns\n\t\t\tpublic int compare(final int[] entry1, final int[] entry2) {\n\n\t\t\t\t// To sort in descending order revert\n\t\t\t\t// the '>' Operator\n\t\t\t\t// if (entry1[col] > entry2[col])\n\t\t\t\t// return 1;\n\t\t\t\t// else //(entry1[col] >= entry2[col])\n\t\t\t\t// return -1;\n\t\t\t\treturn new Integer(entry1[col]).compareTo(entry2[col]);\n\t\t\t\t// return entry1[col].\n\t\t\t}\n\t\t}); // End of function call sort().\n\t}\n\n\tclass pair<X, Y> { // utilizing Java \"Generics\"\n\t\tX _first;\n\t\tY _second;\n\n\t\tpublic pair(X f, Y s) {\n\t\t\t_first = f;\n\t\t\t_second = s;\n\t\t}\n\n\t\tX first() {\n\t\t\treturn _first;\n\t\t}\n\n\t\tY second() {\n\t\t\treturn _second;\n\t\t}\n\n\t\tvoid setFirst(X f) {\n\t\t\t_first = f;\n\t\t}\n\n\t\tvoid setSecond(Y s) {\n\t\t\t_second = s;\n\t\t}\n\t}\n\n\tstatic long nCr(long n, long r) {\n\t\tlong x = 1;\n\t\tlong yu = n - r;\n\t\twhile (n > r) {\n\t\t\tx = x * n;\n\t\t\tn--;\n\t\t}\n\n\t\twhile (yu > 0) {\n\t\t\tx /= yu;\n\t\t\tyu--;\n\t\t}\n\t\treturn x;\n\t}\n\tstatic boolean isPrime(long n) \n    { \n        // Corner case \n        if (n <= 1) \n            return false; \n  \n        // Check from 2 to n-1 \n        for (int i = 2; i < n; i++) \n            if (n % i == 0) \n                return false; \n  \n        return true; \n    } \n\t/*\n\t * static boolean prime[] = new boolean[1000007];\n\t * \n\t * public static void sieveOfEratosthenes(int n) {\n\t * \n\t * for (int i = 0; i < n; i++) prime[i] = true;\n\t * \n\t * for (int p = 2; p * p <= n; p++) { // If prime[p] is not changed, then it\n\t * is a prime if (prime[p] == true) { // Update all multiples of p for (int\n\t * i = p * p; i <= n; i += p) prime[i] = false; } }\n\t * \n\t * // Print all prime numbers // for(int i = 2; i <= n; i++) // { //\n\t * if(prime[i] == true) // System.out.print(i + \" \"); // } }\n\t */\n\tpublic static void main(String[] args) throws NumberFormatException, IOException, ScriptException {\n\t\tFastReader sc = new FastReader();\n\t\tPrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\t// BufferedReader br = new BufferedReader(new\n\t\t// InputStreamReader(System.in));\n\t\t// Scanner scn = new Scanner(System.in);\n\t\t//\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0){\n\t\tint n=sc.nextInt();\n\t\tint r=sc.nextInt();\n\t\tObject[] arr=new Object[n];\n\t\tPriorityQueue<Integer>p=new PriorityQueue<>(Collections.reverseOrder());\n\tHashSet<Integer> h=new HashSet<>();  \n\t\tfor(int i=0;i<n;i++)\n\t\t\th.add(sc.nextInt());\narr=\t\th.toArray();\nfor(int i=0;i<h.size();i++)\n\t//if(p.contains(arr[i])==false)\n\t\tp.add((Integer) arr[i]);\n\t\tint y=0,c=0;\n\t\twhile(p.size()>0 && p.peek()>c)\n\t\t{\n\t\t\t//System.out.println(p.peek()+\" \"+c);\n\t\t\ty++;\n\t\t\tc+=r;\n\t\t\tp.poll();\n\t\t\t\n\t\t}\n\t\t//System.out.println(p.peek());\n\t\tSystem.out.println(y);\n\t\t}\n\t\t//\n\t\t// coded to perfection by Rohan Mukhija\n\t\t// pr.flush();\n\t\t// pr.close();\n\t}\n\n\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, k, temp;\n    cin >> n >> k;\n    set<int> s;\n    for (int i = 0; i < n; i++) {\n      cin >> temp;\n      s.insert(temp);\n    }\n    set<int>::reverse_iterator it;\n    int count = 0;\n    for (it = s.rbegin(); it != s.rend(); it++) {\n      if ((*it - k * count) <= 0) break;\n      count++;\n    }\n    cout << count << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "res = []\n\nfor qq in range(int(input())):\n    n , r = map(int,input().split())\n    l = list(set(map(int,input().split())))\n    ans = 0\n    m = 0\n    l = sorted(l , reverse= True)\n    for i in range(len(l)):\n        if l[i] <= m :\n            break\n        else:\n            ans +=1\n            m += r\n\n    res.append(ans)\n\nfor i in res:\n    print(i)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\ngh=''\nfor _ in \" \"*int(input()):\n    a,b=map(int,stdin.readline().split())\n    z=sorted(set(map(int,stdin.readline().split())))[::-1]\n    m=0;k=0\n    for i in z:\n        if k+i<=0:break\n        else:m+=1;k-=b\n    gh+=str(m)+' '\nprint(gh)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, i, t, m, c, mx = 0, T, ans = 0, r, k = 0, q, x, y, l;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    long long int a[n];\n    map<long long int, long long int> make_pair;\n    long long int b[n + 2], j = 0;\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n      make_pair[a[i]]++;\n      if (make_pair[a[i]] == 1) {\n        b[j] = a[i];\n        j++;\n      }\n    }\n    ans = 0;\n    sort(b, b + j);\n    for (i = j - 1; i >= 0; i--) {\n      if ((b[i] - ans * r) > 0) {\n        ans++;\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long t, n, r;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    vector<long long> v(n);\n    set<long long> s;\n    for (int i = 0; i < n; i++) {\n      cin >> v[i];\n      s.insert(v[i]);\n    }\n    vector<long long> a;\n    for (auto i : s) {\n      a.push_back(i);\n    }\n    int co = 0;\n    long long cur = 0;\n    for (int i = a.size() - 1; i >= 0; i--) {\n      if (a[i] - cur > 0) {\n        a[i] = 0;\n        co++;\n        cur += r;\n      } else\n        break;\n    }\n    cout << co << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\nint t, n, m, ans, now, num, a[N];\nbool cmp(int x, int y) { return x > y; }\nint main() {\n  scanf(\"%d\", &t);\n  while (t--) {\n    ans = num = 0;\n    now = -1e9;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    sort(a + 1, a + 1 + n);\n    for (int i = n; i >= 1; i--) {\n      if (a[i] == now) continue;\n      if (a[i] - num <= 0) break;\n      ans++;\n      num += m;\n      now = a[i];\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint q, n, r, x;\nvector<int> s;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    s.clear();\n    for (int i = 0; i < n; i++) {\n      cin >> x;\n      s.push_back(x);\n    }\n    int M = 0;\n    sort(s.begin(), s.end());\n    s.erase(unique(s.begin(), s.end()), s.end());\n    n = s.size();\n    for (int i = 0; i < n; i++) {\n      M = max(M, min((s[i] + r - 1) / r, n - i));\n    }\n    cout << M << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------- fast io --------------------\n\nfor j in range(int(input())):\n    n,r=map(int,input().split())\n    vals=(map(int,input().split()))\n    vals=set(vals)\n    vals=list(vals)\n    vals.sort()\n    cv=0\n    moves=0\n    for s in range(len(vals)-1,-1,-1):\n        if vals[s]-cv>0:\n            moves+=1\n            cv+=r\n        else:\n            break\n    print(moves)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nlong long x[maxn];\nint main() {\n  int q, n, r;\n  scanf(\"%d\", &q);\n  while (q--) {\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; i++) scanf(\"%lld\", &x[i]);\n    sort(x + 1, x + n + 1);\n    int ans = 0;\n    for (int i = n; i; i--) {\n      if (i < n && x[i] == x[i + 1]) continue;\n      if (x[i] > 1LL * ans * r) ans++;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef main():\n    for _ in range(int(input())):\n        x,y = map(int,sys.stdin.readline().split())\n        l = list(set(map(int,sys.stdin.readline().split())))\n        # x, y = [int(x) for x in sys.stdin.readline().split()]\n        # l = list(set(int(x) for x in sys.stdin.readline().split()))\n        l.sort()\n        n = len(l)\n        # low = 0\n        # high = n-1\n        ans = 0\n        # while low <= high:\n        #     mid = (low+high)//2\n        #     if l[mid]-(n-mid-1)*y > 0:\n        #         ans = n-mid\n        #         high = mid-1\n        #     else:\n        #         low = mid+1\n        for i in range(n):\n            ans += (l[i]-(n-i-1)*y > 0)\n        print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nq = int(input())\nfor _ in range(q):\n\tn, r = map(int, input().split())\n\txs = sorted(list(set(map(int, input().split()))), reverse=True)\n\t#counts = [(x + r - 1) / r for x in xs][::-1]\n\tans = 0\n\tp = 0\n\twhile p < len(xs):\n\t\tcount_x = (xs[p] + r - 1) // r\n\t\tif count_x <= p:\n\t\t\tans = p\n\t\t\tbreak\n\t\tp += 1\n\tif p == len(xs):\n\t\tans = len(xs)\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "# 1238B. Kill 'Em All\nimport sys\ninput = sys.stdin.readline\n\ndef missile(r: int, A: \"Array[int]\") -> int:\n    for i, a in enumerate(A):\n        if i * r >= a:\n            return i\n    return len(A)\n\n\ndef main():\n    Q = int(input())\n    ans = []\n    for _ in range(Q):\n        N, R = map(int, input().split())\n        X = sorted(set(map(int, input().split())), reverse=1)\n        cnt = missile(R, X)\n        ans.append(cnt)\n    print(\"\\n\".join(map(str, ans)))\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nint main() {\n  int q;\n  vector<int> x;\n  ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr),\n      cin >> q;\n  while (q--) {\n    int n, r, origin = 0, ans = 0;\n    set<int> x;\n    cin >> n >> r;\n    for (int a, i = 0; i < n; ++i) cin >> a, x.insert(a);\n    while (not x.empty()) {\n      ++ans, origin += r, x.erase(x.find(*x.rbegin()));\n      while (not x.empty() and *x.begin() <= origin) x.erase(x.begin());\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nfor i in range(int(stdin.readline())):\n\tn,d=map(int,stdin.readline().split())\n\tar=list(map(int,stdin.readline().split()))\n\tar=list(set(ar))\n\tar.sort()\n\tx=len(ar)-1\n\tcount=0\n\tans=0\n\twhile(x>=0):\n\t\tif(ar[x]-count>0):\n\t\t\tans+=1\n\t\t\tcount+=d\n\t\telse:\n\t\t\tbreak\n\t\tx-=1\n\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "ans = []\nfor _ in range(int(input())):\n    n, r = map(int, input().split())\n    a = list(set(list(map(int, input().split()))))\n    a.sort(reverse=True)\n    c = 0\n    for i in range(len(a)):\n        if a[i] <= c:\n            break\n        c += r\n    ans.append(str(c // r))\nprint('\\n'.join(ans))"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Pranay2516\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BKillEmAll solver = new BKillEmAll();\n        int testCount = Integer.parseInt(in.next());\n        for (int i = 1; i <= testCount; i++)\n            solver.solve(i, in, out);\n        out.close();\n    }\n\n    static class BKillEmAll {\n        public void solve(int testNumber, FastReader in, PrintWriter out) {\n            int n = in.nextInt(), r = in.nextInt(), a[] = in.readArray(n);\n            int ans = 0;\n            func.sort(a);\n            ArrayList<Integer> ar = new ArrayList<>();\n            for (int i = 0; i < n; ++i) {\n                if (i == 0 || a[i] != a[i - 1]) {\n                    ar.add(a[i]);\n                }\n            }\n            for (int i = ar.size() - 1; i >= 0; --i) {\n                if (ar.get(i) <= ans * r) break;\n                ans++;\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private FastReader.SpaceCharFilter filter;\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public int[] readArray(int size) {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++) array[i] = nextInt();\n            return array;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class func {\n        public static void sort(int[] arr) {\n            //Taken from @KharYusuf\n            int n = arr.length, mid, h, s, l, i, j, k;\n            int[] res = new int[n];\n            n--;\n            for (s = 1; s <= n; s <<= 1) {\n                for (l = 0; l < n; l += (s << 1)) {\n                    h = Math.min(l + (s << 1) - 1, n);\n                    mid = Math.min(l + s - 1, n);\n                    i = l;\n                    j = mid + 1;\n                    k = l;\n                    while (i <= mid && j <= h) res[k++] = (arr[i] <= arr[j] ? arr[i++] : arr[j++]);\n                    while (i <= mid) res[k++] = arr[i++];\n                    while (j <= h) res[k++] = arr[j++];\n                    for (k = l; k <= h; k++) arr[k] = res[k];\n                }\n            }\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.stream.Collectors;\n\npublic class CF1238B {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        StringBuilder sb=new StringBuilder();\n        int q =  sc.nextInt();\n        for (int i=0; i<q; i++) {\n            int n = sc.nextInt();\n            int r = sc.nextInt();\n            int count = 0;\n            Set<Integer> set = new HashSet<>();\n            for(int j=0; j<n; j++) {\n                set.add(sc.nextInt());\n            }\n            List<Integer> mList = new ArrayList<>(set);\n            mList = mList.stream().sorted().collect(Collectors.toList());\n            //\u627e\u51fa count * r == \u5f53\u524d\u503c\u7684\n            for (int k= mList.size()-1; k>=0; k--){\n                if(mList.get(k) - count*r > 0) {\n                    count ++;\n                }\n            }\n            sb.append(count).append(\"\\n\");\n        }\n        System.out.println(sb);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "    import java.io.*;\n    import java.util.*;\n     \n    public class Main{\n        \n        public static void main(String[] args) throws IOException {\n            Reader.init();\n            int Q=Reader.nextInt();\n            StringBuilder sb=new StringBuilder(\"\");\n            for(int q=0;q<Q;q++){\n                int N=Reader.nextInt();\n                int R=Reader.nextInt();\n                TreeSet<Integer> set=new TreeSet<Integer>();\n                for(int i=0;i<N;i++){\n                    set.add(Reader.nextInt());\n                }\n                \n                int res=set.size();\n                \n                while(set.size()>0){\n                    int x=set.pollFirst();\n                    if(set.size()*R>=x){\n                        res=set.size();\n                    }\n                    else{\n                        break;\n                    }\n                }\n                //print(res);\n                sb.append(res+\"\\n\");\n            }\n            print(sb.toString());\n        }\n     \n        static int mod=1000000007;\n        \n        public static void read(int arr[], int N) throws IOException{ for(int i=0;i<N;i++){ arr[i]=Reader.nextInt(); } }\n        public static void read(String arr[], int N) throws IOException{ for(int i=0;i<N;i++){ arr[i]=Reader.next(); } }\n        \n        public static void print(Object O){ System.out.println(O); }\n        \n        public static void display(int arr[]){ System.out.println(Arrays.toString(arr)); }\n        public static void display(int arr[][], int N){ for(int i=0;i<N;i++){ System.out.println(Arrays.toString(arr[i])); } }\n     \n    }\n     \n    class Reader {\n        static BufferedReader reader;\n        static StringTokenizer tokenizer;\n     \n        static void init() {\n            reader=new BufferedReader(new InputStreamReader(System.in));\n            tokenizer=new StringTokenizer(\"\");\n        }\n     \n        static String next() throws IOException {\n            while (!tokenizer.hasMoreTokens() ) {\n                tokenizer=new StringTokenizer(reader.readLine());\n            }\n            return tokenizer.nextToken();\n        }\n     \n        static int nextInt() throws IOException { return Integer.parseInt(next()); }\n        static double nextDouble() throws IOException { return Double.parseDouble(next()); }\n        static long nextLong() throws IOException { return Long.parseLong(next()); }\n        static String nextLine() throws IOException { return reader.readLine(); }\n    }"
        },
        {
            "language": 3,
            "solution": "ans = []\nfor _ in range(int(input())):\n    n, r = map(int, input().split())\n    A = list(set(list(map(int, input().split()))))\n    A.sort(reverse=True)\n    c = 0\n    for i in range(len(A)):\n        if A[i] <= c:\n            break\n        c += r\n    ans.append(str(c // r))\nprint('\\n'.join(ans))"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader rd = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        int q = Integer.parseInt(rd.readLine());\n        for (int i = 0; i < q; i++) {\n            String[] line = rd.readLine().split(\" \");\n            int n = Integer.parseInt(line[0]);\n            long r = Long.parseLong(line[1]);\n            TreeSet<Long> set = new TreeSet<>();\n            line = rd.readLine().split(\" \");\n            for (int j = 0; j < n; j++) {\n                long x = Long.parseLong(line[j]);\n                set.add(x);\n            }\n            Long[] arr = new Long[set.size()];\n            set.toArray(arr);\n            int cnt = 0;\n            long curr = 0;\n            for (int j = arr.length - 1; j >= 0; j--) {\n                long val = arr[j] - curr;\n                if (val > 0) {\n                    cnt++;\n                    curr += r;\n                }\n            }\n            pw.println(cnt);\n        }\n        pw.flush();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.Collections;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.HashSet;\nimport java.util.ArrayList;\n\npublic class Main\n{\n    public static int min_moves(ArrayList<Monster> Queries, int distance)\n    {\n         int numberShots = 0;\n         for( Monster enemy : Queries )\n         {\n            if (enemy.getClass().getName() == \"FlyingMonster\" || enemy.getpos() > distance*numberShots)\n            {\n                numberShots++;\n            }\n         }\n         return numberShots;\n    }\n    public static void main(String[] args)\n    {\n        int numberEnemies, distance;\n        Monster monster;\n        FastReader input = new FastReader();\n        HashSet<Integer> isIn;\n        ArrayList<Monster>  monstersQuery;\n        ArrayList<Integer> numberMoves = new ArrayList<>();\n        \n        int numberQueries = input.nextInt();\n        for(int i = 0; i < numberQueries; i++)\n        {\n            isIn = new HashSet<Integer>();\n            monstersQuery = new ArrayList<Monster>();\n            numberEnemies = input.nextInt();\n            distance = input.nextInt();\n            \n            \n            for(int j = 0; j < numberEnemies; j++)\n            {\n                int position = input.nextInt();\n                if(!isIn.contains(position))\n                {\n                    isIn.add(position);\n                    if(position > 0)\n                    {\n                        monster = new Monster(position);\n                    }\n                    else\n                    {\n                        monster = new FlyingMonster(position);\n                    }\n                     monstersQuery.add(monster);\n                }\n            }\n            \n            Collections.sort( monstersQuery, Collections.reverseOrder());\n            numberMoves.add(min_moves( monstersQuery, distance));\n        }\n    \n        for(int i = 0; i < numberQueries; i++)\n        {\n            System.out.print(Integer.toString(numberMoves.get(i))+\"\\n\");\n        }\n    \n    }\n}\n\t\t\t\nclass Monster implements Comparable<Monster>\n{\n    private boolean is_alive = true;\n    private int position;\n    \n    public Monster(int p)\n    {\n        this.position = p;\n    }\n    \n    public int getpos()\n    {\n        return this.position;\n    }\n    \n    public int compareTo(Monster other)\n    {\n        return this.getpos() - other.getpos();\n    }\n}\n\nclass FlyingMonster extends Monster\n{\n    public FlyingMonster(int position)\n    {\n        super(position);\n    }\n}\n\nclass FastReader\n{\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader()\n    {\n        br = new BufferedReader(new\n                InputStreamReader(System.in));\n    }\n\n\n    String next()\n    {\n        while (st == null || !st.hasMoreElements())\n        {\n            try\n            {\n                st = new StringTokenizer(br.readLine());\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt()\n    {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong()\n    {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble()\n    {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine()\n    {\n        String str = \"\";\n        try\n        {\n            str = br.readLine();\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = (int)1e6 + 9;\nconst int INF = (int)1e9 + 7;\nconst int mod = (int)1e9 + 7;\nint main() {\n  ios::sync_with_stdio(false);\n  if (0)\n    ;\n  else\n    cin.tie(NULL), cout.tie(NULL);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    int tab[maxn];\n    for (int i = 0; i < n; i++) cin >> tab[i];\n    sort(tab, tab + n);\n    int shift = 0;\n    int ans = 0;\n    tab[n] = INF;\n    for (int i = n - 1; i >= 0; i--)\n      if (tab[i] != tab[i + 1]) {\n        if (tab[i] - shift > 0) {\n          ans++;\n          shift += r;\n        }\n      }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n#input = sys.stdin.readline\n#sys.stdin = open(\"input.in\", \"r\")\n#sys.stdout = open(\"output.out\", \"w\")\n\nans = []\nfor i in range(int(input())):\n    n, r = map(int, input().split())\n    data = list(set(map(int, input().split())))\n    data.sort()\n    ans_here = 1\n    mult = 1\n    pos = len(data)-2\n    while pos >= 0 and data[pos] > mult*r:\n        mult += 1\n        ans_here += 1\n        pos -= 1\n    ans.append(ans_here)\nprint(*ans, sep = \"\\n\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  int test;\n  cin >> test;\n  for (int tst = 1; tst <= test; ++tst) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> x(n);\n    for (int i = 0; i < n; ++i) cin >> x[i];\n    sort(x.begin(), x.end());\n    long long cnt = 0;\n    for (int i = n - 1; i >= 0; --i) {\n      if (i != n - 1 && x[i] == x[i + 1]) continue;\n      long long coord = x[i] - cnt * r;\n      if (coord <= 0) continue;\n      ++cnt;\n    }\n    cout << cnt << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "a = int(input())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, input().split())\n    monsters = map(int, input().split())\n\n    shots, acc = 0, 0\n    for m in sorted(set(monsters), reverse=True):\n        if m - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + '\\n'\n\nprint(result[:-1])\n"
        },
        {
            "language": 3,
            "solution": "#from math import ceil\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n,r = map(int,input().split())\n    l = list(set(map(int,input().split())))\n    n = len(l)\n    if n==1:\n        print(1)\n        continue\n    l.sort(reverse=True)\n    c=0\n    for i in range(n):\n        c+=1 if l[i]-(r*c)>0 else 0\n    print(c)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class A {\n    static boolean check(int n) {\n       for(int i=2;i*i<=n;i++){\n           if(n%i==0)return  false;\n       }\n       return  true;\n    }\n    public static void main(String[] args) throws IOException {\n        FastScanner s=new FastScanner();\n        int t = s.nextInt();\n        while(t-->0) {\n            int n = s.nextInt();\n            int r = s.nextInt();\n            TreeSet<Integer> a = new TreeSet<>();\n            for(int i=0;i<n;i++){\n               a.add(s.nextInt());\n            }\n            int cnt=0;\n            while(!a.isEmpty()){\n                if(a.pollLast()-(cnt*r)>0)cnt++;\n            }\n            System.out.println(cnt);\n        }\n    }\n    static int lower_bound(int[] arr, int x) {\n        int low_limit = 0, high_limit = arr.length, mid = -1;\n        while (low_limit < high_limit) {\n            mid = (low_limit + high_limit) / 2;\n            if (arr[mid] >= x){\n                high_limit = mid;\n            }else{\n                low_limit = mid + 1;\n            }\n        }\n        return low_limit+1;\n    }\n    static long gcd(long a, long b)throws IOException{return (b==0)?a:gcd(b,a%b);}\n    static int gcd(int a, int b)throws IOException{return (b==0)?a:gcd(b,a%b);}\n\n    static void sortr(int[] a) {\n        ArrayList<Integer> l=new ArrayList<>();\n        for (int i:a) l.add(i);\n        Collections.sort(l,Collections.reverseOrder());\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n    static void sort(int[] a) {\n        ArrayList<Integer> l=new ArrayList<>();\n        for (int i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n    static void sort(long[] a) {\n        ArrayList<Long> l=new ArrayList<>();\n        for (long i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n    static class FastScanner {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st=new StringTokenizer(\"\");\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st=new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        int[] readArray(int n) {\n            int[] a=new int[n];\n            for (int i=0; i<n; i++) a[i]=nextInt();\n            return a;\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nans = list()\nfor _ in [0] * t:\n    n, r = map(int, input().split())\n    x = sorted(set(map(int, input().split())))[::-1]\n    ans.append(sum([x - i * r > 0 for i, x in enumerate(x)]))\nprint(' '.join(map(str, ans)))"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\nq = int(input())\nfor i in range(q):\n    n, r = [int(item) for item in input().split()]\n    a = list(set(int(item) for item in input().split()))\n    n = len(a)\n    a.sort(reverse=True)\n    ok = False\n    for i, item in enumerate(a):\n        if i < n - 1 and a[i + 1] <= (i + 1) * r:\n            ans = i + 1\n            ok = True\n            break\n    if ok:\n        print(ans)\n    else:\n        print(n)"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.util.Vector;\nimport java.io.*;\npublic class Fourth{\n\n    public static int min(int n1, int n2){\n        if(n1 <= n2){\n            return n1;\n        }\n        else{\n            return n2;  \n        }\n    }\n    public static int min_moves(Vector<Monster> array, int r) {\n        int largo = array.size();\n        int l = 0;\n        Collections.sort(array);\n        while(l < largo - 1){ //me saca los copiados\n            if(array.elementAt(l).coordenadaX == array.elementAt(l + 1).coordenadaX){\n                array.removeElementAt(l);\n                largo--;\n            }\n            else{\n                l++;\n            }\n        }\n        /*\n        while(array.elementAt(0).coordenadaX <= r * (largo - 1)){\n            array.removeElementAt(0);\n            largo--;\n        }*/\n        int h = 0;\n        while(array.elementAt(h).coordenadaX <= r *(largo - 1 - h)){\n            h++;\n        }\n        return largo - h;\n\n    }                                                                                                                                                                                                                                                                                                                                                                                       \n\n    public static void main(final String[] args) throws Exception {\n        \n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int q = Integer.parseInt(br.readLine());\n        ArrayList<Integer> answers = new ArrayList<Integer>();\n\n        while (q > 0) {                               \n            StringTokenizer st = new StringTokenizer(br.readLine());\n            final int n = Integer.parseInt(st.nextToken());// numero de monstruos\n            final int r = Integer.parseInt(st.nextToken()); // distancia de esparcimiento\n            // pedir n veces las coordenadas\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n            Vector<Monster> array = new Vector<Monster>();\n            int i = 0;\n            while(i < n){\n                array.addElement(new Monster(Integer.parseInt(st2.nextToken()))); //arreglo de monstruos c/u con su posicion.\n                i++;\n            }\n            answers.add(min_moves(array, r));\n            q--;\n        }\n\n        answers.forEach((x) -> System.out.println(x));\n        \n    }\n}\n\nclass Monster implements Comparable<Monster>{\n    public Monster(final int x) {\n        this.coordenadaX = x;\n        this.alive = 1; //indica que el monstruo est\u00e1 vivo\n    }\n\n    public void jump(final int leap, int impactPoint){ //mueve al monstruo e indica si muere o no.\n        if(coordenadaX < impactPoint){\n            this.coordenadaX = this.coordenadaX - leap;\n            //reviso si cay\u00f3 en una trampa o no...\n            if(coordenadaX <= 0){\n                this.alive = 0;\n            }\n            \n        }\n        else if(coordenadaX > impactPoint){\n            this.coordenadaX = this.coordenadaX + leap;\n        }\n        \n        else{ //coordenadaX = impactPoint\n            this.alive = 0; //muerto\n        }\n    }\n\n    @Override\n    public int compareTo(final Monster other) {\n        return this.coordenadaX - other.coordenadaX;\n    }\n\n    public int coordenadaX;\n    public int alive;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.Set;\nimport java.util.StringTokenizer;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.io.*;     \n    \n    \n     \n    public class main {\n    \t\n    \t\n    \tstatic class FastReader{\n    \t\tBufferedReader br;\n    \t\tStringTokenizer st;\n    \t\t\n    \t\tpublic FastReader() {\n    \t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n    \t\t}\n    \t\t\n    \t\tString next() {\n    \t\t\twhile(st == null || !st.hasMoreElements()) {\n    \t\t\t\ttry {\n    \t\t\t\t\tst = new StringTokenizer(br.readLine());\n    \t\t\t\t}catch (IOException e) {\n    \t\t\t\t\te.printStackTrace();\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\treturn st.nextToken();\n    \t\t}\n    \t\t\n    \t\tint nextInt() {\n    \t\t\treturn Integer.parseInt(next());\n    \t\t}\n    \t\t\n    \t\tdouble nextlong() {\n    \t\t\treturn Double.parseDouble(next());\n    \t\t}\n    \t\t\n    \t\tString nextline() {\n    \t\t\tString str = \"\";\n    \t\t\ttry {\n    \t\t\t\tstr = br.readLine();\n    \t\t\t}catch (IOException e){\n    \t\t\t\te.printStackTrace();\n    \t\t\t}\n    \t\t\treturn str;\n    \t\t}\n    \t\t\n    \t}\n    \t\n    \t\n  \n\n\t\tpublic static int min_moves(int range, List<mob> list) {\n\t\t\t\n\t\t\tint min = 0;\n\t\t\t\twhile(list.size()>0) {\n\t\t\t\t\t\n\t\t\t\t\tmin = min +1;\n\t\t\t\t\tif(list.size() >1) {\n\t\t    \t\t\tfor(int k = list.size()-1;k>0;k--) {\n\t\t       \t\t\t\tif(list.get(k).getposition() - min*range < 1) {\n\t\t       \t\t\t\t\tlist.remove(k);\n\t\t        \t\t\t}else {\n\t\t        \t\t\t\tbreak;\n\t\t       \t\t\t\t}\n\t\t        \t\t}\n\t\t    \t\t}\n\t\t    \t\tlist.remove(0);\t\n\t\t\t\t}\n\t\t\t\treturn min;\n    \t}\n    \t\n     \n     \n    \tpublic static void main(String[] args) {\n    \t\tFastReader myobj = new FastReader();\n \n    \t\tint data = myobj.nextInt();   \t\t\n    \t\tfor(int k = 0; k<data;k++) {\n    \t\t\tint amount = myobj.nextInt();\n    \t\t\tint range = myobj.nextInt();\n    \t\t\t\n    \t\t\tList <mob> listnf = new ArrayList<mob>();\n    \t\t\tList <mob> listf = new ArrayList<mob>();\n    \t\t\tSet<Integer> hashsetnf = new HashSet<Integer>();\n    \t\t\tSet<Integer> hashsetf = new HashSet<Integer>();\n    \t\t\t\n    \t\t\t\n    \t\t\tfor(int i = 0;i<amount;i++) {\n    \t\t\t\tint xi =myobj.nextInt();\n    \t\t\t\t\n    \t\t\t\tif(xi > 0) {\n    \t\t\t\t\thashsetnf.add(xi);\n    \t\t\t\t}else {\n    \t\t\t\t\thashsetf.add(xi);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t\n    \t\t\tfor(int i : hashsetnf) {\n    \t\t\t\t\n    \t\t\t\tlistnf.add(new mob(i));\n    \t\t\t}\n    \t\t\thashsetnf.clear();\n    \t\t\t\n    \t\t\t//----------------------------\n    \t\t\tif(hashsetf.size() > 0) {\n    \t\t\t\tfor(int i : hashsetf) {\n        \t\t\t\t\n        \t\t\t\tlistf.add(new mob(i));\n        \t\t\t}\n        \t\t\thashsetf.clear();\n    \t\t\t}\n    \t\t\t\n    \t\t\t//---------------------\n    \t\t\tCollections.sort(listnf);\n    \t\t\t\n    \t\t\t\n    \t\t\t/*Su suma el largo de lista debido a que si son voladores, solo moriran por disparo\n    \t\t\t * por lo cual los movimientos seran iguales a la cantidad de mobs voladores de existan*/\n    \t\t\tSystem.out.println(min_moves(range,listnf)+listf.size());\n    \t\t}\n    \t}\n    }\n     \n    class mob implements Comparable<mob>{\n    \tprivate int xi;\n    \t\n     \n    \tpublic mob(int actual){\n    \t\tthis.xi = actual;\n    \t}\n    \t\n    \tpublic int getposition(){\n    \t\treturn this.xi;\n    \t}\n    \t\n    \t\n    \t//compara posicion buscando la mayor, retorna la posicion\n    \t@Override\n    \tpublic int compareTo(mob other) {\n    \t\tif(other.getposition()>this.xi) {\n    \t\t\treturn 1;\n    \t\t}else {\n    \t\t\treturn -1;\n    \t\t}\n    \t}\n    \t\n    }\n    \n    \n    //mob volador\n    class flyingmob implements Comparable<flyingmob>{\n    \tprivate int xi;\n    \t\n     \n    \tpublic flyingmob(int actual){\n    \t\tthis.xi = actual;\n    \t}\n    \t\n    \tpublic int getposition(){\n    \t\treturn this.xi;\n    \t}\n    \t\n    \t\n    \t//compara posicion buscando la mayor, retorna la posicion\n    \t@Override\n    \tpublic int compareTo(flyingmob other) {\n    \t\tif(other.getposition()>this.xi) {\n    \t\t\treturn 1;\n    \t\t}else {\n    \t\t\treturn -1;\n    \t\t}\n    \t}\n    \t\n    }"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class Main {\n    public static void main(String args[])throws IOException{\n        TreeSet<AllMonster> conjMonsters = new TreeSet<>();\n\n        String[] enemiesAndThrow;\n        int q,n,r,x, minimo;\n\n        FastReader input = new FastReader();\n\n        q = Integer.parseInt(input.nextLine());\n\n        for(int i=0;i<q;i++){\n            enemiesAndThrow = input.nextLine().split(\" \");\n\n            n = Integer.parseInt(enemiesAndThrow[0]);\n            r = Integer.parseInt(enemiesAndThrow[1]);\n            minimo=0;\n            AllMonster mon;\n            for(int j=0; j<n; j++){\n                x = input.nextInt();\n                if(x < 0){\n                    minimo++;\n                }\n                else {\n                    mon = new Monster(x);\n                    conjMonsters.add(mon);\n                }\n            }\n            min_moves(conjMonsters, r, minimo);\n        }\n    }\n\n    public static void min_moves(TreeSet<AllMonster> conjMonsters, int r, int minimo){\n        int totalThrow = 0;\n        while(!conjMonsters.isEmpty()){\n            while(!conjMonsters.isEmpty() && ((conjMonsters.last().getPos()-totalThrow)<=0)){\n                conjMonsters.pollLast();\n            }\n            if(!conjMonsters.isEmpty()){\n                conjMonsters.pollFirst();\n                minimo++;\n                totalThrow+=r;\n            }\n        }\n\n        System.out.println(minimo);\n    }\n}\n\nclass FastReader /*clase de https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/\nya que con scanner iba lento*/\n{ \n    BufferedReader br; \n    StringTokenizer st; \n\n    public FastReader() \n    { \n        br = new BufferedReader(new\n                    InputStreamReader(System.in)); \n    } \n\n    String next() \n    { \n        while (st == null || !st.hasMoreElements()) \n        { \n            try\n            { \n                st = new StringTokenizer(br.readLine()); \n            } \n            catch (IOException  e) \n            { \n                e.printStackTrace(); \n            } \n        } \n        return st.nextToken(); \n    } \n\n    int nextInt() \n    { \n        return Integer.parseInt(next()); \n    } \n\n    String nextLine() \n    { \n        String str = \"\"; \n        try\n        { \n            str = br.readLine(); \n        } \n        catch (IOException e) \n        { \n            e.printStackTrace(); \n        } \n        return str; \n    } \n} \n\n\nabstract class AllMonster implements Comparable<AllMonster>{\n    protected int posicion;\n\n    public int getPos(){\n        return this.posicion;\n    }\n\n    @Override\n    public int compareTo(AllMonster other){    \n        return other.posicion-this.posicion;\n    }\n}\n\n\nclass Monster extends AllMonster{\n    public Monster(int posicion){\n        this.posicion = posicion;\n    }\n}\n \nclass FlyingMonster extends AllMonster{\n    public FlyingMonster(int posicion){\n        this.posicion = posicion;\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "for _ in xrange(int(raw_input())):\n    n, r  = map(int, raw_input().split())\n    x = sorted(set(map(int, raw_input().split())))\n    y = 0\n    while x and x[-1] > r * y:\n        x.pop()\n        y += 1\n    print y"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long add(long long a, long long b) {\n  a %= 1000000007;\n  b %= 1000000007;\n  long long p = (a + b) % 1000000007;\n  return (p + 1000000007) % 1000000007;\n}\nlong long mul(long long a, long long b) {\n  a %= 1000000007;\n  b %= 1000000007;\n  long long p = (a * b) % 1000000007;\n  return (p + 1000000007) % 1000000007;\n}\nint main() {\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long i, j, n, r;\n    cin >> n >> r;\n    vector<long long> v;\n    for (i = 1; i <= n; i++) {\n      long long x;\n      cin >> x;\n      v.push_back(x);\n    }\n    long long ans = 0, sum = 0;\n    sort(v.begin(), v.end());\n    for (i = n - 1; i >= 0; i--) {\n      if ((i != n - 1) && (v[i] == v[i + 1])) continue;\n      if (v[i] - sum > 0) {\n        sum += r;\n        ans++;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nfrom collections import deque\nmod = 10**9 + 7\nimport sys\n# sys.setrecursionlimit(10**5)\n# def rl():\n#     return [int(w) for w in stdin.readline().split()]\nfrom bisect import bisect_right\nfrom bisect import bisect_left\nfrom collections import defaultdict\nfrom math import sqrt,factorial,gcd,log2,inf,ceil\n# map(int,input().split())\n# # l = list(map(int,input().split()))\n# from itertools import permutations\nimport heapq\n# input = lambda: sys.stdin.readline().rstrip()\ninput = lambda : sys.stdin.readline().rstrip()\nfrom sys import stdin, stdout\n\nq = int(input())\n\nfor i in range(q):\n\n    n,r = map(int,input().split())\n    l = list(map(int,input().split()))\n    l = list(set(l))\n    l.sort()\n    x = 1\n    ans = 1\n    # print(l)\n    for i in range(len(l)-2,-1,-1):\n        if l[i] - r*x <= 0:\n\n            # print(l[i])\n            break\n        else:\n            ans+=1\n            x+=1\n\n    print(ans)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nint main() {\n  int q;\n  cin >> q;\n  vector<int> ans(q, 0);\n  for (int i = 0; i < (int)q; i++) {\n    ll n, r;\n    cin >> n >> r;\n    ll x[n];\n    set<ll, greater<ll>> s;\n    for (int j = 0; j < (int)n; j++) {\n      cin >> x[j];\n      s.insert(x[j]);\n    }\n    for (auto k : s) {\n      if (k - ans[i] * r <= 0) break;\n      ans[i]++;\n    }\n  }\n  for (auto t : ans) cout << t << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import defaultdict as dd\nfrom collections import deque\nfrom fractions import Fraction as f\ndef eprint(*args):\n    print(*args, file=sys.stderr)\nzz=1\nfrom math import *\nimport copy\n#sys.setrecursionlimit(10**6)\nif zz:\n\tinput=sys.stdin.readline\nelse:\t\n\tsys.stdin=open('input.txt', 'r')\n\tsys.stdout=open('all.txt','w')\ndef li():\n\treturn [int(x) for x in input().split()]\ndef fi():\n\treturn int(input())\ndef si():\n\treturn list(input().rstrip())\t\ndef mi():\n\treturn \tmap(int,input().split())\t\ndef gh():\n\tsys.stdout.flush()\ndef bo(i):\n\treturn ord(i)-ord('a')\nfrom copy import *\nfrom bisect import *\t\n\nfrom itertools import permutations \n\n\n\nt=fi()\nwhile t>0:\n\tt-=1\n\n\tn,r=mi()\n\ta=li()\n\ta=list(set(a))\n\ta.sort()\n\tn=len(a)\n\td=[0 for i in range(n)]\n\tfor i in range(n):\n\t\td[i]=int(ceil(a[i]/r))\n\tans=n\n\t#print(d)\t\n\tfor i in range(n):\n\t\tif n-i-1>=d[i]:\n\t\t\tans=n-i-1\n\t\telse:\n\t\t\tbreak\n\tprint(ans)\t\t\t\t\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\n\nq=int(input())\nfor _ in range(q):\n    n,r=[int(w) for w in input().split()]\n    x=sorted({int(w) for w in input().split()})\n    n=len(x)\n    for i in range(n):\n        if x[i] > r*(n-i-1):\n            break\n    print(n-i)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long INF = 1e18;\nconst long double PI = 4 * atan((long double)1);\nconst long long mod = 1e9 + 7;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long tt = 1;\n  cin >> tt;\n  while ((tt)--) {\n    long long n, r;\n    cin >> n >> r;\n    vector<long long> a(n);\n    for (long long i = 0; i < (n); ++i) cin >> a[i];\n    sort(a.begin(), a.end());\n    long long ans = 0;\n    for (long long i = n - 1; i >= 0;) {\n      if (a[i] - ans * r <= 0) {\n        break;\n      }\n      ans++;\n      long long j = i - 1;\n      while (a[j] == a[i] and j >= 0) {\n        j--;\n      }\n      i = j;\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom math import ceil\nreadline = sys.stdin.readline\nQ = int(readline())\nAns = [None]*Q\nfor qu in range(Q):\n    N, r = map(int, readline().split())\n    A = list(map(int, readline().split()))\n    A = list(set(A))\n    A.sort()\n\n    A = [0] + A\n    N = len(A)            \n    Ans[qu] = min(N-i for i in range(1, N+1) if A[i-1] <= r*(N-i))\nprint('\\n'.join(map(str, Ans)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nlong long r, n;\nlong long a[maxn];\nint main() {\n  int cas;\n  cin >> cas;\n  while (cas--) {\n    scanf(\"%I64d%I64d\", &n, &r);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%I64d\", &a[i]);\n    }\n    sort(a, a + n);\n    long long l = 0, ans = 0;\n    a[n] = 1e5 + 10;\n    for (int i = n - 1; i >= 0; i--) {\n      if (a[i] - l <= 0) break;\n      if (a[i] == a[i + 1]) continue;\n      ans++;\n      l += r;\n    }\n    printf(\"%I64d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Math.max;\nimport static java.lang.Math.min;\n\npublic class Solution implements Runnable {\n\n    void solve() throws Throwable {\n        int q = sc.nextInt();\n        while (q-- > 0) {\n            int n = sc.nextInt();\n            int r = sc.nextInt();\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = sc.nextInt();\n            }\n            Arrays.sort(a);\n            int ans = 0;\n            int sr = 0;\n            for (int i = n - 1; i >= 0;) {\n                if (a[i] <= sr) {\n                    break;\n                }\n                int j = i - 1;\n                while (j >= 0 && a[i].equals(a[j])) --j;\n                i = j;\n                ans++;\n                sr += r;\n            }\n            out.println(ans);\n        }\n    }\n\n    BufferedReader in;\n    PrintWriter out;\n    FastScanner sc;\n\n    final String INPUT_FILE = \"\";\n    final String OUTPUT_FILE = \"\";\n\n    static Throwable throwable;\n\n    public static void main(String[] args) throws Throwable {\n        Thread thread = new Thread(null, new Solution(), \"\", (1 << 26));\n        thread.start();\n        thread.join();\n        if (Solution.throwable != null)\n            throw Solution.throwable;\n    }\n\n    public void run() {\n        try {\n            if (INPUT_FILE.equals(\"\")) {\n                in = new BufferedReader(new InputStreamReader(System.in));\n            } else {\n                in = new BufferedReader(new FileReader(INPUT_FILE));\n            }\n            if (OUTPUT_FILE.equals(\"\")) {\n                out = new PrintWriter(System.out);\n            } else {\n                out = new PrintWriter(OUTPUT_FILE);\n            }\n            sc = new FastScanner(in);\n            solve();\n        } catch (Throwable e) {\n            throwable = e;\n        } finally {\n            out.close();\n        }\n    }\n\n}\n\nclass FastScanner {\n\n    BufferedReader reader;\n    StringTokenizer strTok;\n\n    FastScanner(BufferedReader reader) {\n        this.reader = reader;\n    }\n\n    public String nextToken() throws Exception {\n        while (strTok == null || !strTok.hasMoreTokens()) {\n            strTok = new StringTokenizer(reader.readLine());\n        }\n        return strTok.nextToken();\n    }\n\n    public int nextInt() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n\n    public double nextDouble() throws Exception {\n        return Double.parseDouble(nextToken());\n    }\n\n    public long nextLong() throws Exception {\n        return Long.parseLong(nextToken());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t, n, f, d, i, x, y, z, w, sum, j, u, v, b, c, s, q, r;\n  cin >> t;\n  while (t > 0) {\n    cin >> n >> r;\n    long long int a[n];\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a, a + n);\n    f = 1;\n    x = r;\n    for (i = n - 2; i >= 0; i--) {\n      if (a[i] != a[i + 1]) {\n        if (a[i] - x <= 0) {\n          break;\n        }\n        x = x + r;\n        f++;\n      }\n    }\n    cout << f << endl;\n    t--;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n/**\n * Main\n */\nimport java.util.stream.IntStream;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.lang.Math;\n\npublic class Main {\n    public static List<Monster> CreateMonsters(List<Integer> pos) {\n        List<Monster> monsters = new ArrayList<Monster>();\n        for (Integer integer : pos) {\n            monsters.add(new Monster(integer));\n        }\n        return monsters;\n    }\n\n    public static void min_moves(FastReader scanner, int n, int r, int c) {\n        // MONSTER APPROACH\n        List<Integer> positions = new ArrayList<>(new HashSet<>(StrToListOfInt(scanner.nextLine().split(\" \"))));\n        Collections.sort(positions, Collections.reverseOrder());\n        List<Monster> monsters = CreateMonsters(positions);\n        for (Monster m : monsters) {\n            int pos = m.GetPosition();\n            if (pos - c * r > 0)\n                c = c + 1;\n            else {\n                if (m.isFlyer())\n                    c += 1;\n            }\n\n        }\n        System.out.println(c);\n\n    }\n\n    public static void main(String[] args) {\n        FastReader scanner = new FastReader();\n        int n_queries = Integer.parseInt(scanner.nextLine());\n        String[] firstLine;\n        int n;\n        int r;\n        for (int i = 0; i < n_queries; i++) {\n            firstLine = scanner.nextLine().split(\" \");\n            n = Integer.parseInt(firstLine[0]);\n            r = Integer.parseInt(firstLine[1]);\n            min_moves(scanner, n, r, 0);\n        }\n    }\n\n    public static int[] StrToIntArray(String[] s) {\n        int[] intArr = new int[s.length];\n        for (int i = 0; i < s.length; i++) {\n            intArr[i] = Integer.parseInt(s[i]);\n        }\n        return intArr;\n    }\n\n    public static List<Integer> StrToListOfInt(String[] s) {\n        List<Integer> returnList = new ArrayList<Integer>();\n        for (int i = 0; i < s.length; i++) {\n            returnList.add(Integer.parseInt(s[i]));\n        }\n        return returnList;\n    }\n}\n\n/**\n * Monster\n */\nclass Monster implements Comparable {\n    protected int position;\n    protected boolean alive;\n    protected boolean isFlying;\n\n    public Monster(int i) {\n        position = i;\n        alive = true;\n        if (i < 0)\n            isFlying = true;\n        else\n            isFlying = false;\n    }\n\n    public int GetPosition() {\n        return position;\n    }\n\n    public boolean isFlyer() {\n        return isFlying;\n    }\n\n    @Override\n    public String toString() {\n        return \"Monster \" + GetPosition();\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        Monster other = (Monster) o;\n        if (other.GetPosition() == this.GetPosition()) {\n            return 0;\n        } else {\n            return other.GetPosition() - this.GetPosition();\n        }\n    }\n\n    public void MoveMonster(int amount) {\n        position += amount;\n        if (position <= 0) {\n            Kill();\n        }\n    }\n\n    public boolean IsAlive() {\n        return alive;\n    }\n\n    public void Kill() {\n        alive = false;\n    }\n\n    public boolean Shoot(int shot, int intensity) {\n        if (shot == position) {\n            Kill();\n        }\n        if (position < shot) {\n            this.MoveMonster(-intensity);\n        }\n        if (position > shot) {\n            this.MoveMonster(intensity);\n        }\n        return false;\n    }\n}\n\n/**\n * FlyingMonster\n */\nclass FlyingMonster extends Monster {\n\n    public FlyingMonster(int i) {\n        super(i);\n    }\n\n    @Override\n    public void MoveMonster(int amount) {\n        position += amount;\n    }\n}\n\nclass FastReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nimport sys\ninput=sys.stdin.readline\nwhile t>0:\n    t-=1\n    n,r=map(int,input().split())\n    a=[int(x) for x in input().split()]\n    a.sort(reverse=True)\n    d={}\n    i=0;j=0\n    while i<n:\n        if a[i] not in d:\n            d[a[i]]=[i]\n        j=i+1\n        while j<n and a[j]==a[j-1]:\n            j+=1\n        if j==n:   \n            d[a[j-1]].append(j)\n        else:    \n            d[a[j-1]].append(j-1)\n        i=j\n    i=0;c=0\n    while i<n:\n        a[i]=a[i]-c*r\n        dt=c\n        if a[i]>0:\n            c+=1\n        \n        i=d[a[i]+dt*r][1]+1\n\n    print(c)   "
        },
        {
            "language": 3,
            "solution": "q=int(input())\ns=''\nfor _ in range(q):\n\tn,r=map(int,input().split())\n\tl=set(map(int,input().split()))\n\tl=list(l)\n\tl=sorted(l)\n\tcount=0\n\twhile (len(l)>0 and l[-1]>count*r):\n\t\tl.pop()\n\t\tcount+=1\n\ts+=str(count)+\"\\n\"\nprint(s)"
        },
        {
            "language": 4,
            "solution": "\n import java.io.*;\n import java.util.*;\n\n\n public class Wetshark {\n\t static int [] reverse(int a[], int n) \n\t { \n\t     int[] b = new int[n]; \n\t     int j = n; \n\t     for (int i = 0; i < n; i++) { \n\t         b[j - 1] = a[i]; \n\t         j = j - 1; \n\t     }\n\t     return b;\n\t     }\n\t  \n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter out=new PrintWriter(System.out);\n\t\tint q=Integer.parseInt(br.readLine());\n\t\tStringTokenizer st;\n\t\twhile(q-->0) {\n\t\tst=new StringTokenizer(br.readLine());\n\t\tlong n=Long.parseLong(st.nextToken());\n\t\tlong r=Long.parseLong(st.nextToken());\n\t\tint[] a=new int [(int) n];\n\t\tTreeSet<Integer> ts=new TreeSet<>();\n\t\tst=new StringTokenizer(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tts.add(Integer.parseInt(st.nextToken()));\n\t\t}\n\t\tfor(int i=0 ;!ts.isEmpty();i++) {\n\t\t\ta[i]=ts.pollFirst();\n\t\t}\n\t\tArrays.sort(a);\n\t\tint [] b=reverse(a, (int) n);\n\t\tint c=0;\n\t\tint f=0;\n\t\tfor (int i = 0; i < b.length; i++) {\n\t\t\tif(b[i]>f) {\n\t\t\t\tc++;\n\t\t\t\tf+=r;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tout.println(c);\n\t\t}\n\t\tout.close();\n\t\n}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MAX5 = 2e+5 + 99;\nconst long long MAX7 = 1e+7 + 7;\nconst long long MAXN = MAX7;\nconst long long INF = 0x7f7f7f7f7f7f7f7f;\nconst int INFi = 0x7f7f7f7f;\nconst long long MOD = 1e+9 + 7;\nlong long T = 1;\nlong long n, x, m, r, k;\nvoid MAIN() {\n  cin >> n >> r;\n  set<long long, greater<long long>> val;\n  while (n--) {\n    cin >> x;\n    val.insert(x);\n  }\n  vector<long long> a;\n  for (auto it : val) {\n    a.push_back(it);\n  }\n  for (long long i = 0; i < a.size(); i++) {\n    if (a[i] - i * r <= 0) {\n      cout << i;\n      cout << \"\\n\";\n      return;\n    }\n  }\n  cout << a.size();\n  cout << \"\\n\";\n}\nint main() {\n  cin >> T;\n  while (T--) {\n    MAIN();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfor i in range(int(input())):\n    n,r=map(int,input().split())\n    b=list(set(list(map(int,input().split()))))\n    b.sort(reverse=True)\n\n    n = len(b)\n    m=-1\n    for j in range(n):\n        if b[j]%r==0:\n            p=min(j+1,b[j]//r)\n        else:\n            p=min(j+1,((b[j]//r)+1))\n        if p>m:\n            m=p\n    print(m)\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "n = int(input())\nfor i in xrange(n):\n    inimigos, dist = map(int, raw_input().split())\n    \n    # Retira os repetidos pois nao ajuda na resposta\n    arr = set(map(int, raw_input().split()))\n\t\n    resposta = 0\n    # Comeca no final para tentar jogar a maior quantidade\n    # de monstros nas armadilhas\n    for inimigo in sorted(arr)[::-1]:\n    \n        # Distancia atual\n        dist_actual = inimigo-resposta*dist\n        # Verifica se o monsto ja foi morto para uma armadilha ou nao\n        if  dist_actual > 0:\n            resposta += 1\n        else: break\n    \n    print(resposta)\n\n\n"
        },
        {
            "language": 3,
            "solution": "import math\n\n\ndef process():\n    num_enemies, r = [int(elem) for elem in input().split(\" \")]\n    pos = [int(elem) for elem in input().split(\" \")]\n    tmp = set()\n    for enemy in pos:\n        tmp.add(enemy)\n    enemies = []\n    for enemy in tmp:\n        enemies.append(math.ceil(enemy/r))\n\n    enemies.sort(reverse=True)\n    shot = 0\n    while shot < len(enemies):\n        shot += 1\n        if shot != len(enemies) and shot >= enemies[shot]:\n            return shot\n    return(shot)\n\n\ndef main():\n    queue = int(input())\n    answer = []\n    while queue > 0:\n        ans = process()\n        answer.append(ans)\n        queue += -1\n    for i in answer:\n        print(i)\n\n\nmain()\n\n\n\n\n \n\n\n\n        \n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \n \n \n \npublic class ea {\n \n \n  public static void main(String[] args) {\n  Scanner sc = new Scanner(System.in);\n  int t=sc.nextInt();\n  StringBuilder sb=new StringBuilder();\n  while(t-->0){\n    int n=sc.nextInt();\n    int r=sc.nextInt();\n    Set<Integer> ts=new TreeSet<Integer>();\n    for(int i=0;i<n;i++){\n      ts.add(sc.nextInt());\n    }\n    ArrayList<Integer> arr=new ArrayList<Integer>(ts);\n     int size=arr.size();\n     int x=0;\n     int i=1;\n     for(i=size-1;i>=0;i--){\n           int a=arr.get(i)-x*r;\n                      //System.out.println(\"a: \"+a+\" x: \"+x);\n\n           \n           if(a>0){\n            x++;\n            }else{\n              break;\n            }\n           \n     }\n     sb.append(x+\"\\n\");\n  \n\n    \n\n\n  }\n  System.out.println(sb.toString());\n\n  \n  }\n \n \n}"
        },
        {
            "language": 3,
            "solution": "queries = int(input())\n\nsolutions = []\nfor _ in range(queries):\n    monsters, deplacement = list(map(int, input().split()))\n    monsters_positions = list(map(int, input().split()))\n    if monsters == 1:\n        solutions.append(str(1))\n        continue\n    monsters_positions.sort(reverse=True)\n    nb_missile = 0\n    positions_bombed = {}\n    for i in range(monsters):\n        if monsters_positions[i] not in positions_bombed and monsters_positions[i] - nb_missile * deplacement > 0:\n            positions_bombed[monsters_positions[i]] = True\n            nb_missile += 1\n    solutions.append(str(nb_missile))\n\nprint(\" \".join(solutions))\n"
        },
        {
            "language": 3,
            "solution": "def main():\n  queries =int(input())\n\n  for i in range(queries):\n    p = 0\n    answer = 0\n    values = list(map(int, input().split(\" \")))\n    positions = input().split(\" \")\n  \n    if(values[0] == 1):\n      answer += 1\n    else:\n      positions = list(set(map(int, positions)))\n      positions.sort(reverse = True)\n      for j in positions:\n        if (p >= j):\n          break\n        else:\n          p += values[1]\n          answer += 1\n    print(answer)\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as dc\nimport sys\nimport math\ninput=sys.stdin.readline\nfor _ in range(int(input())):\n    n,r=map(int,input().split())\n    l=list(sorted(set(map(int,input().split()))))\n    p=len(l)\n    c=0\n    i=p-1\n    while(i>=0 and c<p):\n        if c*r>=l[i]:\n            break\n        c+=1\n        i-=1\n    print(c)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\ninput = stdin.readline\nprint = stdout.write\n\nt = int(input())\nfor _ in range(t):\n    n,r = map(int,input().split())\n    s = list()\n    s = [ int(i) for i in input().split() ]\n    l = list(set(s))\n    l.sort(reverse = 1)\n    ans = 0\n    for i in range(len(l)):\n        if l[i]-r*ans>0:\n            ans+=1\n        else:\n            break\n    print(str(ans)+\"\\n\")"
        },
        {
            "language": 3,
            "solution": "from math import gcd, ceil \nfrom collections import defaultdict, deque\nfrom sys import stdin,stdout\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\n \ninp=lambda : int(stdin.readline())\nsip=lambda : stdin.readline()\nmulip =lambda : map(int, stdin.readline().split())\nlst=lambda : list(map(int,stdin.readline().split()))\nslst=lambda: list(sip())\nM = pow(10,9)+7\n#-----------------------------------------------------\nfor _ in range(inp()):\n\tn,r = mulip()\n\tA = lst()\n\tA = list(set(A))\n\tA = sorted(A)\n\tk = 0\n\t#print(*A)\n\tfor i in range(len(A)-1,-1,-1):\n\t\tif A[i] - r*k>0:\n\t\t\tk+=1\n\tprint(k) "
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\nimport static java.lang.Long.min;\nimport static java.lang.Long.max;\nimport static java.lang.Math.pow;\n    public class Mamo {\nstatic Reader  in=new Reader ();\nstatic long ans,sum,x,x2,y,y2;\nstatic int a[];\nstatic StringBuilder sd=new StringBuilder();\n    public static void main(String [] args) {\n        int t=in.nextInt();\n     while(t-->0){\n     int n=in.nextInt(),r=in.nextInt();\n     int a[]=in.arr(n);\n     Sorting.bucketSort(a, n);\n     for(int i=n-1;i>=0;i--){\n         if(i!=n-1&&a[i]==a[i+1]){}\n         else{\n         if(sum>=a[i]){break;}\n         if(r>=a[i]-sum){ans++;break;}\n         sum+=(long)r;\n         ans++;\n         }\n     }\n     sd.append(ans+\"\\n\");\n     ans=0;sum=0;\n     }\n        System.out.println(sd);\n    }\n   \n   static class Reader \n    { \n        private InputStream mIs;private byte[] buf = new byte[1024];private int curChar,numChars;public Reader() { this(System.in); }public Reader(InputStream is) { mIs = is;} \n        public int read() {if (numChars == -1) throw new InputMismatchException();if (curChar >= numChars) {curChar = 0;try { numChars = mIs.read(buf);} catch (IOException e) { throw new InputMismatchException();}if (numChars <= 0) return -1; }return buf[curChar++];} \n        public String nextLine(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isEndOfLine(c));return res.toString() ;} \n        public String s(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isSpaceChar(c));return res.toString();} \n        public long l(){int c = read();while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }long res = 0; do{ if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read();}while(!isSpaceChar(c));return res * sgn;} \n        public int nextInt(){int c = read() ;while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }int res = 0;do{if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read() ;}while(!isSpaceChar(c));return res * sgn;} \n        public double d() throws IOException {return Double.parseDouble(s()) ;}\n        public boolean isSpaceChar(int c) { return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1; } \n        public boolean isEndOfLine(int c) { return c == '\\n' || c == '\\r' || c == -1; } \n        public int[] arr(int n){int[] ret = new int[n];for (int i = 0; i < n; i++) {ret[i] = nextInt();}return ret;}\n    }\n    \n}\nclass node implements Comparable<node> {\n    int x,y;\n    node(int a,int b){\n    this.x=a;\n    this.y=b;\n    }\n    @Override\n    public int compareTo(node o) {\n        return x-o.x;}\n}\nclass Sorting{\n \n public static int[] bucketSort(int[] array, int bucketCount) {\n \n if (bucketCount <= 0) throw new IllegalArgumentException(\"Invalid bucket count\");\n \n if (array.length <= 1) return array; //trivially sorted\n \n \n \n int high = array[0];\n \n int low = array[0];\n \n for (int i = 1; i < array.length; i++) { //find the range of input elements\n \n if (array[i] > high) high = array[i];\n \n if (array[i] < low) low = array[i];\n \n }\n \n double interval = ((double)(high - low + 1))/bucketCount; //range of one bucket\n \n \n ArrayList<Integer> buckets[] = new ArrayList[bucketCount];\n \n for (int i = 0; i < bucketCount; i++) { //initialize buckets\n \n buckets[i] = new ArrayList();\n \n }\n \n \n \n for (int i = 0; i < array.length; i++) { //partition the input array\n \n buckets[(int)((array[i] - low)/interval)].add(array[i]);\n \n }\n \n \n int pointer = 0;\n \n for (int i = 0; i < buckets.length; i++) {\n \n Collections.sort(buckets[i]); //mergeSort\n \n for (int j = 0; j < buckets[i].size(); j++) { //merge the buckets\n \n array[pointer] = buckets[i].get(j);\n \n pointer++;\n \n }\n \n}\n \nreturn array;\n \n}\n \n}"
        },
        {
            "language": 4,
            "solution": "import java.awt.*;\nimport java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.BigInteger;\nimport java.util.*;\n\nimport static java.lang.Math.*;\n\npublic class Main {\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringTokenizer st = new StringTokenizer(\"\");\n    PrintWriter pw = new PrintWriter(System.out);\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    String next() throws IOException {\n        if (!st.hasMoreTokens()) {\n            st = new StringTokenizer(br.readLine());\n        }\n        return st.nextToken();\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n\n    public Main() throws FileNotFoundException {\n    }\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n\n    long mod = (long) 1e9 + 7;\n\n    void run() throws IOException {\n        int t = nextInt();\n        for (int i = 0; i < t; i++) {\n            int n = nextInt();\n            int r = nextInt();\n            ArrayList<Integer> a = new ArrayList<>();\n            TreeSet<Integer> ts = new TreeSet<>();\n            for (int j = 0; j < n; j++) {\n                int x = nextInt();\n                if (!ts.contains(x)) {\n                    a.add(x);\n                    ts.add(x);\n                }\n            }\n            Collections.sort(a);\n            int[] b = new int[a.size()];\n            for (int j = 0; j < a.size(); j++) {\n                b[j] = a.get(j);\n            }\n            int ans = 0;\n            for (int j = b.length - 1; j >= 0; j--) {\n                if (r * ans < b[j]) ans++;\n                else break;\n            }\n            pw.println(ans);\n        }\n\n        pw.close();\n    }\n\n    class Pair {\n        int x, y;\n\n        public Pair(int a, int b) {\n            x = a;\n            y = b;\n        }\n    }\n\n    class PairComp implements Comparator<Pair> {\n\n        @Override\n        public int compare(Pair o1, Pair o2) {\n            return Integer.compare(o1.x, o2.x);\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long long n, i, j, k;\n    cin >> n >> k;\n    long long a[n + 1];\n    for (i = 1; i <= n; i++) cin >> a[i];\n    sort(a + 1, a + n + 1);\n    long long cnt = 1;\n    for (i = n - 1; i >= 1; i--) {\n      if (a[i] - cnt * k <= 0) {\n        break;\n      } else {\n        if (a[i] != a[i + 1]) cnt++;\n      }\n    }\n    cout << cnt << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100005];\nint main() {\n  int T, n, r, ans;\n  scanf(\"%d\", &T);\n  while (T--) {\n    ans = 0;\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    sort(a + 1, a + n + 1);\n    for (int i = n; i >= 1; i--) {\n      if (a[i] - ans * r <= 0)\n        break;\n      else if (a[i] != a[i - 1]) {\n        ans++;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nans=''\nq=int(input())\nfor i in range(q):\n    n,x=map(int,input().split())\n    a=list(set((map(int,input().split()))))\n    a.sort(reverse=True)\n    a.append(-1)\n    arr=counter=0\n    for item in a:\n        if item-counter<=0:\n            print(str(arr))\n            break\n        counter+=x\n        arr+=1\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid _R(T &x) {\n  cin >> x;\n}\nvoid _R(int &x) { scanf(\"%d\", &x); }\nvoid _R(long long &x) { scanf(\"%lld\", &x); }\nvoid _R(double &x) { scanf(\"%lf\", &x); }\nvoid _R(char &x) { scanf(\" %c\", &x); }\nvoid _R(char *x) { scanf(\"%s\", x); }\nvoid R() {}\ntemplate <class T, class... U>\nvoid R(T &head, U &...tail) {\n  _R(head);\n  R(tail...);\n}\ntemplate <class T>\nvoid _W(const T &x) {\n  cout << x;\n}\nvoid _W(const int &x) { printf(\"%d\\n\", x); }\nvoid _W(const long long &x) { printf(\"%lld\\n\", x); }\nvoid _W(const double &x) { printf(\"%.16f\\n\", x); }\nvoid _W(const char &x) { putchar(x); }\nvoid _W(const char *x) { printf(\"%s\", x); }\ntemplate <class T, class U>\nvoid _W(const pair<T, U> &x) {\n  _W(x.first);\n  putchar(' ');\n  _W(x.second);\n}\nvoid W() {}\ntemplate <class T, class... U>\nvoid W(const T &head, const U &...tail) {\n  _W(head);\n  putchar(sizeof...(tail) ? ' ' : '\\n');\n  W(tail...);\n}\nint MOD = 1e9 + 7;\nvoid ADD(long long &x, long long v) {\n  x = (x + v) % MOD;\n  if (x < 0) x += MOD;\n}\nconst int SIZE = 1e6 + 10;\nint main() {\n  int q;\n  _R(q);\n  for (int i = 0; i < (q); ++i) {\n    long long n, r;\n    _R(n), _R(r);\n    long long a, ans = 0;\n    set<long long> st;\n    set<long long>::reverse_iterator it;\n    for (int j = 0; j < (n); ++j) {\n      _R(a);\n      st.insert(a);\n    }\n    for (it = st.rbegin(); it != st.rend(); it++) {\n      long long b = *it;\n      long long c = b - (r * ans);\n      if (c <= 0) break;\n      ans++;\n    }\n    _W(ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def bin_search():\n    l = 0\n    r = len(x) - 1\n    while r - l > 1:\n        m = (l + r) // 2\n        if check(m):\n            l = m\n        else:\n            r = m\n    return l\n\n\ndef check(b):\n    opa = len(x) - 1 - b\n    if x[b] - r * opa <= 0:\n        return True\n    else:\n        return False\n\n\nq = int(input())\na = []\nfor i in range(q):\n    n, r = map(int, input().split())\n    y = set(map(int, input().split()))\n    x = list(sorted(y))\n    if len(x) == 1:\n        a.append('1')\n        continue\n    if x[0] - len(x) * r > 0:\n        a.append(len(x))\n        continue\n    lol = bin_search()\n    if lol == 0:\n        if check(lol):\n            a.append(len(x) - lol - 1)\n        else:\n            a.append(len(x))\n    else:\n        a.append(len(x) - lol - 1)\nprint('\\n'.join(map(str, a)))\n"
        },
        {
            "language": 3,
            "solution": "q = int(input())\nans_s = list()\nfor _ in [0]*q:\n\tn, r = map(int, input().split())\n\txs = sorted(set(map(int, input().split())))[::-1]\n\tans = sum([x - i * r > 0 for i, x in enumerate(xs)])\n\tans_s.append(ans)\nprint(' '.join(map(str, ans_s)))\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport itertools\nimport math\nimport collections\nfrom collections import Counter\n\n\n#########################\n# imgur.com/Pkt7iIf.png #\n#########################\n\ndef pow(x, y, mod):\n    r = 1\n    x = x % mod\n    while y > 0:\n        if y & 1:\n            r = (r * x) % mod\n        y = y >> 1\n        x = (x * x) % mod\n    return r\n\n\ndef sieve(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = prime[1] = False\n    r = [p for p in range(n + 1) if prime[p]]\n    return r\n\n\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\n\n\ndef cdiv(n, k): return n // k + (n % k != 0)\n\n\ndef ii(): return int(input())\n\n\ndef mi(): return map(int, input().split())\n\n\ndef li(): return list(map(int, input().split()))\n\n\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\n\n\ndef prr(a, sep=' '): print(sep.join(map(str, a)))\n\n\ndef dd(): return collections.defaultdict(int)\n\n\nq = ii()\nres = []\nfor _ in range(q):\n    n, r = mi()\n    d = sorted(li())\n    s = ans = 0\n    prev = -1\n    for i in range(n - 1, -1, -1):\n        if d[i] != prev and d[i] - s > 0:\n            s += r\n            ans += 1\n            prev = d[i]\n    res.append(ans)\n\nprr(res, '\\n')"
        },
        {
            "language": 3,
            "solution": "import sys\ndef aux():\n    return map(int,input().split())\ndef aux_list():\n    b=list(set(list(map(int,input().split()))))\n    b.sort(reverse=True)\n    return b\ninput=sys.stdin.readline\nfor index in range(int(input())):\n    x,y= aux()\n    b = aux_list()\n    x = len(b)\n    result=-1\n    for index_j in range(x):\n        if b[index_j]%y==0:\n            p=min(index_j+1,b[index_j]//y)\n        else:\n            p=min(index_j+1,((b[index_j]//y)+1))\n        if p>result:\n            result=p\n    print(result)"
        },
        {
            "language": 3,
            "solution": "result = ''\n\n\ndef solve(enemies_qtd, impact, monsters):\n    for bombs in range(len(monsters)):\n        if monsters[bombs] <= bombs * impact:\n            return bombs\n\n    return len(monsters)\n\n\nfor _ in range(int(input())):\n    enemies_qtd, impact = map(int, input().split())\n\n    result += str(solve(enemies_qtd, impact, sorted(\n        set(map(int, input().split())), reverse=True))) + '\\n'\n\nprint(result)\n"
        },
        {
            "language": 1,
            "solution": "import atexit\nimport io\nimport sys\n\nbuff = io.BytesIO()\nsys.stdout = buff\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(buff.getvalue())\n\n\nq = int(raw_input())\nwhile q > 0:\n    n, r = tuple(map(int, raw_input().split()))\n    a = list(map(int, raw_input().split()))\n    a.sort()\n    left = 0\n    right = n-1\n    ans = 0\n    dis = 0\n    while left <= right:\n        ans += 1\n        monster = a[right]\n        while right >= 0 and a[right] == monster:\n            right -= 1\n        dis += r\n        while left < n and dis >= a[left]:\n            left += 1\n    print(ans)\n    q -= 1\n"
        },
        {
            "language": 3,
            "solution": "import os, sys, atexit\nfrom io import BytesIO, StringIO\n \ninput = BytesIO(os.read(0, os.fstat(0).st_size)).readline\n_OUTPUT_BUFFER = StringIO()\nsys.stdout = _OUTPUT_BUFFER\n \n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\nimport math\nq = int(input())\nwhile q:\n    q -= 1\n    n, r = [int(x) for x in input().split()]\n    x = list(map(int, input().split()))\n    dic = {}\n    xi = list(set(x))\n    xi.sort(reverse = True)\n    for i in xi:\n        dic[i] = math.ceil(i / r)\n    count = 0\n    for i in xi:\n        if dic[i] <= count: break\n        count += 1\n    print(count)"
        },
        {
            "language": 3,
            "solution": "def solution(t):\n    res_arr = []\n    for i in range(t):\n        p, r = map(int, input().split())\n        s = sorted(map(int, set(input().split())))\n        res = 0\n        while s[-1] > 0:\n            s.pop()\n            res += 1\n            if s:\n                s[-1] = s[-1] - (r * res)\n            else: break\n        res_arr.append(str(res))\n    return res_arr\n\n\ndef main():\n    t = int(input())\n    print(\"\\n\".join(solution(t)))\n\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "#code\nimport sys\nimport math as mt\ninput=sys.stdin.buffer.readline\nt=int(input())\nfor __ in range(t):\n    #n=int(input())      \n\n    \n    #l=list(map(int,input().split()))  \n    n,r=map(int,input().split())            \n    l=list(map(int,input().split()))\n    l=list(set(l))\n    l.sort(reverse=True)\n    ans=0\n    curr=0\n    for i in range(len(l)):\n        if l[i]-curr>0:\n            ans+=1\n            curr+=r\n    print(ans)        \n\t\t    \t \t \t \t  \t   \t\t \t\t\t  \t"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\n\nimport itertools\nimport sys\n\nif sys.version_info[0] < 3:\n    input = raw_input\n    range = xrange\n\n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n\nif 'PyPy' in sys.version:\n    from _continuation import continulet\nelse:\n    import threading\n\n\ndef main():\n    T = int(input())\n    ret = []\n    for t in range(T):\n        n,r = map(int,input().strip().split(' '))\n        monsters = list(map(int,input().strip().split(' ')))\n        monsters.sort()\n        cnt = 0\n        index = n - 1\n        pre = 987654321\n        while index >= 0 and monsters[index] - cnt * r > 0:\n            if pre == monsters[index]:\n                index -= 1\n                continue\n            pre = monsters[index]\n            cnt += 1\n            index -= 1\n        ret.append(str(cnt))\n    print(\"\\n\".join(ret))\n\n\nif __name__ == '__main__':\n    if 'PyPy' in sys.version:\n\n        def bootstrap(cont):\n            call, arg = cont.switch()\n            while True:\n                call, arg = cont.switch(to=continulet(lambda _, f, args: f(*args), call, arg))\n\n        cont = continulet(bootstrap)\n        cont.switch()\n\n        main()\n\n    else:\n        sys.setrecursionlimit(1 << 30)\n        threading.stack_size(1 << 27)\n\n        main_thread = threading.Thread(target=main)\n        main_thread.start()\n        main_thread.join()\n"
        },
        {
            "language": 3,
            "solution": "'''input\n2\n3 2\n1 3 5\n4 1\n5 2 3 5\n\n'''\nimport sys\nfrom collections import defaultdict as dd\nfrom itertools import  permutations as pp\nfrom itertools import combinations as cc\nfrom collections import Counter as ccd\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nfrom  heapq import heappush as hpush\nfrom heapq import heappop as hpop\nmod=10**9+7\n\ndef ri(flag=0):\n\tif flag==0:\n\t\treturn [int(i) for i in sys.stdin.readline().split()]\n\telse:\n\t\treturn int(sys.stdin.readline())\n\n\nfor _ in range(ri(1)):\n\tn , r =ri()\n\ta = ri()\n\ta = list(set(a))\n\ta.sort()\n\tans =0\n\tcur = 0\n\tstart = a[-1]\n\tfor i in range(len(a)-1,-1,-1):\n\t\tif a[i]-cur>0:\n\t\t\tcur+=r\n\t\t\tans+=1\n\tprint(ans)\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.*;\nimport java.math.*;\npublic class Main {\n    public static void main(String[] args) throws Exception{\n        Reader.init(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        Main mm =new Main();\n        int q=Reader.nextInt();\n        for(int i=0;i<q;i++) {\n            int n=Reader.nextInt();\n            int r=Reader.nextInt();\n            TreeSet<Integer> list1=new TreeSet<Integer>();\n            for(int j=0;j<n;j++) {\n                list1.add(Reader.nextInt());\n            }\n            int count=0;\n            int add=0;\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int j:list1) {\n                list.add(j);\n            }\n            n=list.size();\n            for(int j=n-1;j>=0;j--) {\n                if(list.get(j)-add>0) {\n                    count++;\n                    add+=r;\n                }\n                else {\n                    break;\n                }\n            }\n            out.println(count);\n        }\n        out.close();\n}\n}\nclass Reader {\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n    /** call this method to initialize reader for InputStream */\n    static void init() throws IOException {\n         reader = new BufferedReader(\n                 new FileReader(\"input.txt\"));\n    tokenizer = new StringTokenizer(\"\");\n    }\n    static void init(InputStream input) {\n        reader = new BufferedReader(\n                     new InputStreamReader(input) );\n        tokenizer = new StringTokenizer(\"\");\n    }\n    /** get next word */\n    static String nextLine() throws IOException{\n        return reader.readLine();\n    }\n    static String next() throws IOException {\n        while ( ! tokenizer.hasMoreTokens() ) {\n            //TODO add check for eof if necessary\n            tokenizer = new StringTokenizer(\n                   reader.readLine() );\n        }\n        return tokenizer.nextToken();\n    }\n    static int nextInt() throws IOException {\n        return Integer.parseInt( next() );\n    }\n    static long nextLong() throws IOException {\n        return Long.parseLong( next() );\n    }\n    static double nextDouble() throws IOException {\n        return Double.parseDouble( next() );\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\nint q, n, r;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    vector<int> a;\n    for (int(i) = (1); (i) <= (n); ++(i)) {\n      int x;\n      cin >> x;\n      a.push_back(x);\n    }\n    sort(a.begin(), a.end());\n    int ans = 0;\n    for (int i = a.size() - 1; i >= 0; --i) {\n      if (i != a.size() - 1 && a[i] == a[i + 1]) continue;\n      if (a[i] - ans * r <= 0) break;\n      ans++;\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport collections\nimport heapq\ninput = sys.stdin.readline\n\nq = int(input().strip())\n\nfor _ in range(q):\n    n, r = map(int, input().strip().split())\n    a = list(map(int, input().split()))\n\n    s = sorted(set(a), reverse=True)\n    d, cnt = 0, 0\n    for i in s:\n        if i <= d:\n            break\n        d += r\n        cnt += 1\n            \n    print(cnt)\n\n"
        },
        {
            "language": 3,
            "solution": "k = \"\"\nfor i in range(int(input())):\n    x,y = map(int , input().split())\n    li = set(map(int , input().split()))\n    se = list(li)\n    se = sorted(se)\n    l = 0\n    j = 0\n    while(se and se[-1] > j*y ):\n        j += 1\n        se.pop()\n    k += str(j)+\"\\n\"\nprint(k)\n        \n    \n    \n    \n"
        },
        {
            "language": 3,
            "solution": "import sys, bisect\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, r = map(int,input().split())\n        x = sorted(list(set(map(int,input().split()))))\n        ans = 0\n        n = len(x)\n        hi = n+1\n        lo = 0\n        while hi-lo > 1:\n            mid = (hi+lo)//2\n            if mid + bisect.bisect_right(x,mid*r) >= n:\n                hi = mid\n            else:\n                lo = mid\n        print(hi)\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long mM(long long a, long long b, long long p = 1000000007) {\n  long long res = 0;\n  if (a >= p) a %= p;\n  while (b) {\n    if (b & 1ll) res = (res + a);\n    if (res >= p) res %= p;\n    a = (2 * a);\n    if (a >= p) a %= p;\n    b >>= 1ll;\n  }\n  return res;\n}\nlong long fpow(long long first, long long second, long long p = 1000000007) {\n  if (first >= p) first = first % p;\n  long long res = 1;\n  while (second) {\n    if (second & 1ll) res *= first;\n    if (res < 0) res += p;\n    if (res >= p) res %= p;\n    second = second >> 1ll;\n    first *= first;\n    if (first < 0) first += p;\n    if (first >= p) first %= p;\n  }\n  return res;\n}\nlong long inv(long long n, long long p = 1000000007) {\n  return fpow(n, p - 2, p);\n}\nlong long modmul(long long first, long long second, long long p = 1000000007) {\n  if (first < 0) first += p;\n  if (first >= p) first %= p;\n  if (second < 0) second += p;\n  if (second >= p) second %= p;\n  return (first * second) % p;\n}\nlong long modadd(long long first, long long second, long long p = 1000000007) {\n  if (first < 0) first += p;\n  if (first >= p) first %= p;\n  if (second < 0) second += p;\n  if (second >= p) second %= p;\n  long long temp = first + second;\n  if (temp >= p) temp %= p;\n  return temp;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> a;\n    set<int> s;\n    for (int i = 0; i < n; i++) {\n      int temp;\n      cin >> temp;\n      s.insert(temp);\n    }\n    for (auto e : s) a.push_back(e);\n    int cnt = 0;\n    int pre = 0;\n    for (int i = a.size() - 1; i >= 0; i--)\n      if ((a[i] - pre) > 0) {\n        pre += r;\n        cnt++;\n      } else\n        break;\n    cout << cnt << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\ngh=''\nfor _ in \" \"*int(input()):\n    a,b=map(int,stdin.readline().split())\n    z=sorted(set(map(int,stdin.readline().split())))[::-1]\n    m=0;k=0\n    for i in z:\n        if k+i<=0:break\n        else:m+=1;k-=b\n    gh+=str(m)+' '\nstdout.write(gh)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.math.BigInteger;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n \npublic class temp {\n\t\n\tvoid solve() throws IOException {\n\t\tFastReader sc = new FastReader();\n\t\tint t = sc.nextInt();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tTreeSet<Integer> set = new TreeSet<>();\n            int n = sc.nextInt();\n            int r = sc.nextInt();\n            int ans = 0;\n            long shift = 0;\n \n            for (int j = 0; j < n; j++) {\n                set.add(sc.nextInt());\n            }\n \n            while (!set.isEmpty()) {\n                int tmp = set.pollLast();\n                if (tmp - shift <= 0) {\n                    break;\n                }\n                ans++;\n                shift +=r;\n            }\n \n            System.out.println(ans);\n\t\t}\n\t}\n \n\tpublic static void main(String[] args) throws IOException {\n\t\t// TODO Auto-generated method stub\n\t\tnew temp().solve();\n\t}\n\t\n\tclass FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n \n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n \n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n \n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n \n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n \n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, long long int> b1;\nlong long int a[200006], b[200006], n, r, i, ans;\nset<long long> s1, s2;\nvector<long long> v, w;\nint main() {\n  ios ::sync_with_stdio(false);\n  cin.tie(0);\n  long long int time, n, mx = -10000000000000, i, j, c = 0, k,\n                         mn = 10000000000000, t, d = 0, m, x, q, y, u, v, r;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    for (i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    n = unique(a, a + n) - a;\n    int ans = 0;\n    for (i = n - 1; i >= 0; i--) ans += (a[i] - ans * r > 0);\n    cout << ans << endl;\n    ans = 0;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\nIf you want to aim high, aim high\nDon't let that studying and grades consume you\nJust live life young\n******************************\nIf I'm the sun, you're the moon\nBecause when I go up, you go down\n*******************************\n*/\nimport java.util.*;\nimport java.io.*;\n\n   public class B\n   {\n      public static void main(String args[]) throws Exception\n      {\n         //BufferedReader infile = new BufferedReader(new FileReader(\"cowdate.in\"));\n         BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));  \n         StringTokenizer st = new StringTokenizer(infile.readLine());\n         int T = Integer.parseInt(st.nextToken());\n         StringBuilder sb = new StringBuilder();\n         for(int qw=0; qw < T; qw++)\n         {\n            st = new StringTokenizer(infile.readLine());\n            int N = Integer.parseInt(st.nextToken());\n            int R = Integer.parseInt(st.nextToken());\n            int[] arr = readArr(N, infile, st);\n            N = arr.length;\n            sort(arr);\n            //solve\n            int res = 0;\n            for(int i=N-1; i >= 0; i--)\n            {\n               if((long)arr[i]-(long)res*R <= 0)\n                  break;\n               res++;\n            }\n            sb.append(res+\"\\n\");\n         }\n         System.out.print(sb);\n      }\n      public static int[] readArr(int N, BufferedReader infile, StringTokenizer st) throws Exception\n      {\n         int[] arr = new int[N];\n         st = new StringTokenizer(infile.readLine());\n         for(int i=0; i < N; i++)\n            arr[i] = Integer.parseInt(st.nextToken());\n         //compress\n         HashSet<Integer> set = new HashSet<Integer>();\n         for(int x: arr)\n            set.add(x);\n         int[] a2 = new int[set.size()];\n         int boof = 0;\n         for(int x: set)\n            a2[boof++] = x;\n         arr = a2;\n         return arr;\n      }\n      public static void sort(int[] arr)\n      {\n         //stable heap sort\n         PriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n         for(int a: arr)\n            pq.add(a);\n         for(int i=0; i < arr.length; i++)\n            arr[i] = pq.poll();\n      }\n   }"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*; \n\npublic class KillThemAll {\n    public static void main(String[] args) {\n        // input\n        int q = sc.nextInt();\n        for (int i = 0; i < q; i++) {\n            int n = sc.nextInt();\n            int r = sc.nextInt();\n            ArrayList<Integer> x = new ArrayList<>(n);\n            for (int j = 0; j < n; j++) {\n                x.add(sc.nextInt());\n            }\n\n            Collections.shuffle(x);\n\n            int[] xx = new int[n];\n            for (int j = 0; j < n; ++j) {\n                xx[j] = x.get(j);\n            }\n\n            Arrays.sort(xx);\n            int result = 0;\n\n            long explosionDistance = 0;\n\n            for (int j = n - 1; j >= 0; j--) {\n                if (xx[j] - explosionDistance <= 0) {\n                    break; // all done\n                }\n                result += 1;\n                explosionDistance += r;\n\n                int cur = xx[j];\n                while (j > 0 && xx[j - 1] == cur)\n                    j--;\n            }\n            out.println(result);\n        }\n        out.flush();\n    }\n\n\n    //-----------PrintWriter for faster output---------------------------------\n    private static final PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\n    //-----------MyScanner class for faster input----------\n    private static final MyScanner sc = new MyScanner();\n    public static class MyScanner {\n        private final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        private StringTokenizer st;\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine(){\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStreamWriter;\nimport java.util.*;\n\npublic class Codechef2 {\n    static Scan sc = new Scan();\n    static Print print = new Print();\n\n    public static void main(String[] args) throws IOException {\n        int q = sc.scanInt();\n        while (q-- > 0) {\n            int n = sc.scanInt();\n            int r = sc.scanInt();\n            //int x[] = intArray(n);\n            ArrayList<Integer> x = intArrayList(n);\n            //Arrays.sort(x);\n            Collections.sort(x);\n            int bomb = x.get(n - 1);\n            HashSet<Integer> set = new HashSet<>();\n            set.add(bomb);\n            int c = 1;\n            for (int i = n - 2; i >= 0; i--) {\n                //print.println(set + \" (c: \" + c + \") (bomb: \" + bomb + \") (i: \" + i + \") (x[i]: \" + x[i] + \")\");\n                if ((x.get(i) - (c - 1) * r)  == bomb)\n                    continue;\n                if (set.contains(x.get(i) - (c * r)))\n                    continue;\n                if (x.get(i) - c * r <= 0)\n                    continue;\n                set.add(x.get(i) - (c * r));\n                bomb = x.get(i) - (c * r);\n                c++;\n            }\n            print.println(c);\n        }\n        print.close();\n    }\n\n    public static int[] intArray(int n) throws IOException { int a[] = new int[n];for (int i = 0; i < n; i++) a[i] = sc.scanInt();return a; }\n    public static ArrayList<Integer> intArrayList(int n) throws IOException { ArrayList<Integer> a = new ArrayList<>();for (int i = 0; i < n; i++) a.add(sc.scanInt());return a; }\n    public static long[] longArray(int n) throws IOException { long a[] = new long[n];for (int i = 0; i < n; i++) a[i] = sc.scanLong();return a; }\n    public static ArrayList<Integer> intList(int n) throws IOException { ArrayList<Integer> a = new ArrayList<>();for (int i = 0; i < n; i++) a.add(sc.scanInt());return a; }\n    public static ArrayList<Long> longList(int n) throws IOException { ArrayList<Long> a = new ArrayList<>();for (int i = 0; i < n; i++) a.add(sc.scanLong());return a; }\n\n    public static void shuffle(int[] a) {\n        int n = a.length;\n        for (int i = 0; i < n; i++) {\n            int r = (int) (Math.random() * (i + 1));\n            int swap = a[r];\n            a[r] = a[i];\n            a[i] = swap;\n        }\n    }\n\n    public static int gcd(int a, int b) {\n        if (a == 0) return b;\n        return gcd(b % a, a);\n    }\n\n    public static int findArrayGCD(int arr[], int n) {\n        int result = arr[0];\n        for (int i = 1; i < n; i++) result = gcd(arr[i], result);\n        return result;\n    }\n\n    public static double logb(double a, double b) {\n        return Math.log(a) / Math.log(b);\n    }\n\n    public static long power(long a, long N, long M) {\n        if (N == 0) return 1;\n        else {\n            final long R = power(a, N / 2, M);\n            if (N % 2 == 0) return (R * R) % M;\n            else return (R * R * a) % M;\n        }\n    }\n\n    public static int binomialCoeff(int n, int k) {\n        int res = 1;\n        // Since C(n, k) = C(n, n-k)\n        if (k > n - k)\n            k = n - k;\n        // Calculate value of [n * (n-1) *---* (n-k+1)] / [k * (k-1) *----* 1]\n        for (int i = 0; i < k; ++i) {\n            res *= (n - i);\n            res /= (i + 1);\n        }\n        return res;\n    }\n\n    static long modL = (long) 1e9 + 7;\n    static int modI = (int) 1e9 + 7;\n\n    public static class Graph {\n        int V, E;\n        ArrayList<Integer>[] adj;\n\n        public Graph(int V) {\n            this.V = V;\n            this.E = 0;\n            adj = new ArrayList[V];\n            for (int i = 0; i < V; i++) {\n                adj[i] = new ArrayList<>();\n            }\n        }\n\n        public void addEdge(int v, int w) {\n            //parllel edge and self loop allowed\n            //complete graph total edge = N (C) 2;\n            E++;\n            adj[v].add(w);\n            adj[w].add(v);\n        }\n\n        public int degree(int v) {\n            return adj[v].size();\n        }\n\n        public Iterable<Integer> adj(int v) {\n            return adj[v];\n        }\n\n        @Override\n        public String toString() {\n            StringBuilder s = new StringBuilder();\n            s.append(V + \" vertices, \" + E + \" edges \\n\");\n            for (int v = 0; v < V; v++) {\n                s.append(v + \": \");\n                for (int w : adj(v)) {\n                    s.append(w + \" \");\n                }\n                s.append(\"\\n\");\n            }\n            return s.toString();\n        }\n    }\n}\n@SuppressWarnings(\"Duplicates\")\nclass Scan {\n    private byte[] buf = new byte[1024];\n    private int index;\n    private InputStream in;\n    private int total;\n\n    public Scan() {\n        in = System.in;\n    }\n\n    public int scan() throws IOException {\n        if (total < 0)\n            throw new InputMismatchException();\n        if (index >= total) {\n            index = 0;\n            total = in.read(buf);\n            if (total <= 0)\n                return -1;\n        }\n        return buf[index++];\n    }\n\n    public int scanInt() throws IOException {\n        int integer = 0;\n        int n = scan();\n        while (isWhiteSpace(n))\n            n = scan();\n        int neg = 1;\n        if (n == '-') {\n            neg = -1;\n            n = scan();\n        }\n        while (!isWhiteSpace(n)) {\n            if (n >= '0' && n <= '9') {\n                integer *= 10;\n                integer += n - '0';\n                n = scan();\n            } else throw new InputMismatchException();\n        }\n        return neg * integer;\n    }\n\n    public long scanLong() throws IOException {\n        long integer = 0;\n        int n = scan();\n        while (isWhiteSpace(n))\n            n = scan();\n        int neg = 1;\n        if (n == '-') {\n            neg = -1;\n            n = scan();\n        }\n        while (!isWhiteSpace(n)) {\n            if (n >= '0' && n <= '9') {\n                integer *= 10;\n                integer += (long) (n - '0');\n                n = scan();\n            } else throw new InputMismatchException();\n        }\n        return neg * integer;\n    }\n\n    public double scanDouble() throws IOException {\n        double doub = 0;\n        int n = scan();\n        while (isWhiteSpace(n))\n            n = scan();\n        int neg = 1;\n        if (n == '-') {\n            neg = -1;\n            n = scan();\n        }\n        while (!isWhiteSpace(n) && n != '.') {\n            if (n >= '0' && n <= '9') {\n                doub *= 10;\n                doub += n - '0';\n                n = scan();\n            } else throw new InputMismatchException();\n        }\n        if (n == '.') {\n            n = scan();\n            double temp = 1;\n            while (!isWhiteSpace(n)) {\n                if (n >= '0' && n <= '9') {\n                    temp /= 10;\n                    doub += (n - '0') * temp;\n                    n = scan();\n                } else throw new InputMismatchException();\n            }\n        }\n        return doub * neg;\n    }\n\n    public String scanString() throws IOException {\n        StringBuilder sb = new StringBuilder();\n        int n = scan();\n        while (isWhiteSpace(n))\n            n = scan();\n        while (!isWhiteSpace(n)) {\n            sb.append((char) n);\n            n = scan();\n        }\n        return sb.toString();\n    }\n\n    private boolean isWhiteSpace(int n) {\n        if (n == ' ' || n == '\\n' || n == '\\r' || n == '\\t' || n == -1)\n            return true;\n        return false;\n    }\n}\nclass Print {\n    private final BufferedWriter bw;\n\n    public Print() {\n        this.bw = new BufferedWriter(new OutputStreamWriter(System.out));\n    }\n\n    public void print(Object object) throws IOException {\n        bw.append(\"\" + object);\n    }\n\n    public void println(Object object) throws IOException {\n        print(object);\n        bw.append(\"\\n\");\n    }\n\n    public void close() throws IOException {\n        bw.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = [int(m) for m in stdin.readline().split()]\n    monsters.sort(reverse=True)\n\n    shots, acc = 0, 0\n    for i in range(len(monsters)):\n        if i and monsters[i] == monsters[i-1]:\n            continue\n\n        if monsters[i] - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + \"\\n\"\n\nstdout.write(result)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class B {\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tBufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n\t\tint n = Integer.parseInt(in.readLine().trim());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tsolve(in, out);\n\t\t}\n\t\tin.close();\n\t\tout.flush();\n\t\tout.close();\n\t}\n\n\tprivate static void solve(BufferedReader in, BufferedWriter out) throws IOException {\n\t\tString [] parts = in.readLine().split(\"\\\\s+\");\n\t\tint r = Integer.parseInt(parts[1]);\n\t\tparts = in.readLine().split(\"\\\\s+\");\n\t\tSet<Integer> s = new HashSet<>();\n\t\tfor (String p :parts) {\n\t\t\ts.add(Integer.parseInt(p));\n\t\t}\n\t\tint[] enemies = new int[s.size()];\n\t\tint i = 0;\n\t\tfor (Integer index : s) {\n\t\t\tenemies[i++] = index;\n\t\t}\n\t\tArrays.parallelSort(enemies);\n\t\tint count = 0;\n\t\tint lastIndex = enemies.length - 1;\n\t\twhile (true) {\n\t\t\tif (lastIndex < 0 || enemies[lastIndex] - count * r <= 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcount++;\n\t\t\tlastIndex--;\n\t\t}\n\t\t\n\t\tout.append(\"\"+count);\n\t\tout.newLine();\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Maxn = 1e5 + 7;\nconst int inf = 1e9 + 7;\nint q;\nint n;\nlong long r;\nset<int> s;\nset<int>::iterator it;\nint aa[Maxn];\nint cnt = 0;\nint main() {\n  scanf(\"%d\", &q);\n  while (q--) {\n    s.clear();\n    scanf(\"%d%lld\", &n, &r);\n    int num;\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &num);\n      s.insert(num);\n    }\n    it = s.begin();\n    cnt = 0;\n    while (it != s.end()) {\n      aa[cnt++] = *it;\n      it++;\n    }\n    long long ans = 1;\n    long long tep = ans * r;\n    for (int i = cnt - 2; i >= 0; i--) {\n      if (aa[i] - tep <= 0) {\n        break;\n      } else {\n        ans++;\n        tep = ans * r;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# Mateus Brito de Sousa Rangel - 117110914\n\nq = int(input())\nminN = \"\"\n\nfor number in range(q):\n    n, r = map(int, input().split())\n    x = sorted(set(map(int, input().split())))\n    res = 0\n    tmp = 0\n    \n    for i in x[::-1]:\n        if i > tmp:\n            res += 1\n            tmp += r\n            \n    minN += str(res) + \"\\n\"\n    \nprint(minN)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nwhile t:\n    t-=1\n    n,r=map(int, input().split())\n    x=set(map(int, input().split()))\n    if n==1:\n        print(1)\n    else:\n        x=sorted(list(x), reverse=True)\n        ans=0\n        ran=0\n    \n        for i in range(len(x)):             \n            if x[i]-ran>0:\n                ans+=1\n                ran+=r\n            else:\n                break\n        print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nint main(void) {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    vector<long long> v;\n    for (int i = 0; i < n; i++) {\n      long long x;\n      cin >> x;\n      v.emplace_back(x);\n    }\n    sort(v.begin(), v.end());\n    v.resize(unique(v.begin(), v.end()) - v.begin());\n    long long cur = 0, ans = 0;\n    while (v.size() > 0 and v.back() + cur > 0) {\n      cur -= r;\n      v.pop_back();\n      ans++;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class Ch, class Tr, class Container>\nbasic_ostream<Ch, Tr>& operator<<(basic_ostream<Ch, Tr>& os,\n                                  Container const& x) {\n  os << \"{ \";\n  for (auto& y : x) os << y << \" \";\n  return os << \"}\";\n}\ntemplate <class X, class Y>\nostream& operator<<(ostream& os, pair<X, Y> const& p) {\n  return os << \"[ \" << p.first << \", \" << p.second << \"]\";\n}\nint M[100005];\nint main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    for (int i = 0; i < (n); i++) cin >> M[i];\n    sort(M, M + n, greater<int>());\n    int cant = 1, rs = r, i = 0, j, pos = 0;\n    while (i < n) {\n      j = i;\n      while (j < n && M[i] == M[j]) j++;\n      M[pos++] = M[i];\n      i = j;\n    }\n    for (int i = (1); i < (pos); i++) {\n      if (M[i] > rs) {\n        rs += r;\n        cant++;\n      } else\n        break;\n    }\n    cout << cant << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Problema{\n\tstatic int min_moves(List<Monster> monsters, int r){\n\t\tint moves = 0, size = monsters.size(), c = monsters.get(size-1).x;\n\t\tCollections.sort(monsters);\n\t\t\n\t\tif(monsters.get(0).x > 0){ //code to codeforce\n\t\t\tfor(int i = size-1; i >= 0; i--){\n\t\t\t\tif(monsters.get(i).IsDead(c ,moves*r))\treturn moves;\n\t\t\t\tmoves++;\n\t\t\t}\n\t\t\treturn moves;\n\t\t}\n\t\telse{ //extra code for LP\n\t\t\tint count = 0;\n\t\t\tfor(int i = 0; i < monsters.size(); i++){\n\t\t\t\tc = monsters.get(i).x;\n\t\t\t\tif(monsters.get(i).x > 0)\n\t\t\t\t\treturn count + min_moves(monsters.subList(i,size), r);\n\t\t\t\t\t\n\t\t\t\telse if(i != 0 && monsters.get(i).x == monsters.get(i-1).x)\tcontinue;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\treturn count;\n\t\t}\n\t}\n\t\n\tpublic static void main(String[]st) throws Exception\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); //Our Scanner\n        List<Monster> monsters = new ArrayList<>(); //Array with monsters\n        int q, n, r; //inputs\n        String []input; //input to split values\n        \n        q = Integer.parseInt(br.readLine());\n        \n        while(q != 0)\n        {\n            input = br.readLine().split(\" \");\n            n = Integer.parseInt(input[0]);\n            r = Integer.parseInt(input[1]);\n            \n            input = br.readLine().split(\" \");\n            \n            HashSet<Integer> h = new HashSet<>(); //set...to avoid duplicates values\n            \n            for(int i = 0; i < input.length; i++){\n\t\t\t\th.add(Integer.parseInt(input[i]));\n\t\t\t}\n\t\t\t\n            for(int z: h) //Creating monsters as monster or flying monster depending on z value\n\t\t\t\tif(z > 0)\n\t\t\t\t\tmonsters.add(new Monster(z));\n\t\t\t\telse\n\t\t\t\t\tmonsters.add(new FlyingMonster(z));\n\t\t\t\n            System.out.println(min_moves(monsters, r));\n            monsters.clear();\n            q--;\n        }\n    }\n\t\n\tstatic class Monster implements Comparable<Monster>{\n\t\tint x;\n\t\t\n\t\tMonster(int x){\n\t\t\tthis.x = x;\n\t\t}\n\t\tboolean IsDead(int center, int ratio){ //verify if the ratio let the monster at 0 or less\n\t\t\treturn this.x-ratio <= 0;\n\t\t}\n\t\t\n\t\tpublic boolean equals(Object o){\n\t\t\treturn (this.x == ((Monster) o).x);\n\t\t}\n\t\tpublic int compareTo(Monster other){\n\t\t\treturn this.x - other.x;\n\t\t}\n\t\t\n\t}\n\tstatic class FlyingMonster extends Monster{\n\t\tFlyingMonster(int x){\n\t\t\tsuper(x);\n\t\t}\n\t\t\n\t\t@Override\n\t\tboolean IsDead(int center, int ratio){ //verify if the x-coordenate is equals to center\n\t\t\treturn (this.x == center);\n\t\t}\n\t}\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long N, a, b, T, R, r, sol, A[100005], mark[100005], pos;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> T;\n  while (T--) {\n    cin >> N >> R;\n    for (int i = 1; i <= N; i++) cin >> A[i];\n    sort(A + 1, A + 1 + N);\n    r = sol = 0;\n    for (int i = N; i >= 1; i--)\n      if (!mark[A[i]]) {\n        pos = A[i];\n        pos -= r;\n        if (pos <= 0) break;\n        sol++, r += R;\n        mark[A[i]] = 1;\n      }\n    for (int i = 1; i <= N; i++) mark[A[i]] = 0;\n    cout << sol << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport bisect as b\nimport math\nfrom collections import defaultdict as dd\ninput=sys.stdin.readline\nmo=10**9+7\ndef cin():\n    return map(int,sin().split())\ndef ain():            \n    return list(map(int,sin().split()))\ndef sin():\n    return input()\ndef inin():\n    return int(input())\ndef computeGCD(x, y): \n  \n   while(y): \n       x, y = y, x % y \n  \n   return x\nfor i in range(inin()):\n    x,y=cin()\n    l=ain()\n    s=list(set(l))\n    l=sorted(s,reverse=True)\n    c=1\n    for i in range(len(l)-1):\n##        print(l[i+1],c*y)\n        if(l[i+1]-c*y<=0):\n            break\n        else:\n            c+=1\n    print(c)\n        \n    \n        \n           \n    \n    \n    \n        \n        \n        \n              \n        \n    \n    \n\n        \n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \npublic class CF1238B extends PrintWriter {\n\tCF1238B() { super(System.out); }\n\tScanner sc = new Scanner(System.in);\n\tpublic static void main(String[] $) {\n\t\tCF1238B o = new CF1238B(); o.main(); o.flush();\n\t}\n \n\tvoid main() {\n\t\tint q = sc.nextInt();\n\t\twhile (q-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint r = sc.nextInt();\n\t\t\tInteger[] xx = new Integer[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\txx[i] = sc.nextInt();\n\t\t\tArrays.sort(xx);\n\t\t\tint k = 0;\n\t\t\tfor (int i = n - 1; i >= 0 && xx[i] - k * r > 0; i--) {\n\t\t\t\twhile (i > 0 && xx[i - 1] - xx[i] == 0)\n\t\t\t\t\ti--;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tprintln(k);\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[100005];\nint main() {\n  long long int ts;\n  scanf(\"%lld\", &ts);\n  while (ts--) {\n    long long int n, r;\n    scanf(\"%lld %lld\", &n, &r);\n    vector<long long int> v;\n    for (int i = 0; i < n; i++) {\n      long long int x;\n      cin >> x;\n      v.push_back(x);\n    }\n    sort(v.begin(), v.end());\n    v.erase(unique(v.begin(), v.end()), v.end());\n    long long int cnt = 0;\n    for (int i = v.size() - 1, x = 0; i >= 0; i--) {\n      if (v[i] - x > 0) {\n        cnt++;\n        x += r;\n      } else\n        break;\n    }\n    printf(\"%lld\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nt=int(input())\ninput=sys.stdin.readline\nwhile t>0:\n    t-=1\n    n,k=map(int,input().split())\n    a=[int(x) for x in input().split()]\n    #a.sort(reverse=True)\n    b=set()\n    for i in a:\n        b.add(i)\n    b=list(b)\n    b.sort(reverse=True)\n    #print(b)\n    for i in range(len(b)):\n            b[0]=0\n            b[i]-=i*k\n            \n    #print(b)\n    flag=0\n    if len(b)==1:\n        print(1)\n        continue\n    for i in range(1,len(b)):\n        if(b[i]<=0):\n            flag=1\n            print(i)\n            break\n    if flag==0:    \n        print(i+1)    \n    "
        },
        {
            "language": 4,
            "solution": "\n/**\n * Main\n */\nimport java.util.stream.IntStream;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.lang.Math;\n\npublic class Main {\n    public static List<Monster> CreateMonsters(List<Integer> pos) {\n        List<Monster> monsters = new ArrayList<Monster>();\n        for (Integer integer : pos) {\n            monsters.add(new Monster(integer));\n        }\n        return monsters;\n    }\n\n    // public static void min_moves(FastReader scanner, int n, int r, int c) {\n    //     // no monster approach\n    //     List<Integer> positions = new ArrayList<>(new HashSet<>(StrToListOfInt(scanner.nextLine().split(\" \"))));\n    //     Collections.sort(positions, Collections.reverseOrder());\n    //     for (Integer i : positions) {\n    //         if (i - c * r > 0)\n    //             c = c + 1;\n    //         else if (i < 0)\n    //             c = c + 1;\n    //     }\n    //     System.out.println(c);\n\n    // }\n\n    public static void min_moves(FastReader scanner, int n, int r, int c) {\n        // MONSTER APPROACH\n        List<Integer> positions = new ArrayList<>(new HashSet<>(StrToListOfInt(scanner.nextLine().split(\" \"))));\n        Collections.sort(positions, Collections.reverseOrder());\n        List<Monster> monsters = CreateMonsters(positions);\n        for (Monster m : monsters) {\n            int pos = m.GetPosition();\n            if (pos - c * r > 0)\n                c = c + 1;\n            else {\n                if (m.isFlyer())\n                    c += 1;\n            }\n\n        }\n        System.out.println(c);\n\n    }\n\n    public static void main(String[] args) {\n        FastReader scanner = new FastReader();\n        int n_queries = Integer.parseInt(scanner.nextLine());\n        String[] firstLine;\n        int n;\n        int r;\n        for (int i = 0; i < n_queries; i++) {\n            firstLine = scanner.nextLine().split(\" \");\n            n = Integer.parseInt(firstLine[0]);\n            r = Integer.parseInt(firstLine[1]);\n            min_moves(scanner, n, r, 0);\n        }\n    }\n\n    public static int[] StrToIntArray(String[] s) {\n        int[] intArr = new int[s.length];\n        for (int i = 0; i < s.length; i++) {\n            intArr[i] = Integer.parseInt(s[i]);\n        }\n        return intArr;\n    }\n\n    public static List<Integer> StrToListOfInt(String[] s) {\n        List<Integer> returnList = new ArrayList<Integer>();\n        for (int i = 0; i < s.length; i++) {\n            returnList.add(Integer.parseInt(s[i]));\n        }\n        return returnList;\n    }\n}\n\n/**\n * Monster\n */\nclass Monster implements Comparable {\n    protected int position;\n    protected boolean alive;\n    protected boolean isFlying;\n\n    public Monster(int i) {\n        position = i;\n        alive = true;\n        if (i < 0)\n            isFlying = true;\n        else\n            isFlying = false;\n    }\n\n    public int GetPosition() {\n        return position;\n    }\n\n    public boolean isFlyer() {\n        return isFlying;\n    }\n\n    @Override\n    public String toString() {\n        return \"Monster \" + GetPosition();\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        Monster other = (Monster) o;\n        if (other.GetPosition() == this.GetPosition()) {\n            return 0;\n        } else {\n            return other.GetPosition() - this.GetPosition();\n        }\n    }\n\n    public void MoveMonster(int amount) {\n        position += amount;\n        if (position <= 0) {\n            Kill();\n        }\n    }\n\n    public boolean IsAlive() {\n        return alive;\n    }\n\n    public void Kill() {\n        alive = false;\n    }\n\n    public boolean Shoot(int shot, int intensity) {\n        if (shot == position) {\n            Kill();\n        }\n        if (position < shot) {\n            this.MoveMonster(-intensity);\n        }\n        if (position > shot) {\n            this.MoveMonster(intensity);\n        }\n        return false;\n    }\n}\n\n/**\n * FlyingMonster\n */\nclass FlyingMonster extends Monster {\n\n    public FlyingMonster(int i) {\n        super(i);\n    }\n\n    @Override\n    public void MoveMonster(int amount) {\n        position += amount;\n    }\n}\n\nclass FastReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int q, n, r;\n  cin >> q;\n  int arr[100010] = {0};\n  while (q--) {\n    cin >> n >> r;\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n    }\n    sort(arr, arr + n);\n    int index = -1;\n    int pos, cnt = 0, prev = -100;\n    for (int i = n - 1; i >= 0; i--) {\n      if (arr[i] == prev) {\n        continue;\n      }\n      prev = arr[i];\n      pos = arr[i] - cnt * r;\n      if (pos > 0) {\n        cnt++;\n      } else {\n        break;\n      }\n    }\n    cout << cnt << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "k = \"\"\nfor i in range(int(input())):\n    x,y = map(int , input().split())\n    li = list(map(int , input().split()))\n    se = list(set(li))\n    se.sort()\n    se = se[::-1]\n    li.sort()\n    dic = {}\n    p = []\n    su = 0\n    for i in range(len(li)):\n        if( dic.get(li[i]) == None ):\n            dic[li[i]]=0\n        dic[li[i]] += 1\n        su += li[i]\n    l = 0\n    j = 0\n    for i in range(len(se)):\n        if( l >= se[i]):\n            break\n        else:\n            j += 1\n            l += y\n    k += str(j)+\"\\n\"\nprint(k)"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef main():\n    for _ in range(int(input())):\n        x,y = map(int,sys.stdin.readline().split())\n        l = list(set(map(int,sys.stdin.readline().split())))\n        # x, y = [int(x) for x in sys.stdin.readline().split()]\n        # l = list(set(int(x) for x in sys.stdin.readline().split()))\n        l.sort()\n        n = len(l)\n        low = 0\n        high = n-1\n        ans = 0\n        while low <= high:\n            mid = (low+high)//2\n            if l[mid]-(n-mid-1)*y > 0:\n                ans = n-mid\n                high = mid-1\n            else:\n                low = mid+1\n        print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class p1238B {\n\n\tpublic void realMain() throws Exception {\n\n\t\tBufferedReader fin = new BufferedReader(new InputStreamReader(System.in), 1000000);\n\n\t\tString in = fin.readLine();\n\n\t\tString[] ar = in.split(\" \");\n\n\t\tint Q = Integer.parseInt(ar[0]);\n\n\tfor(int q = 0; q < Q; q++) {\n\t\tint ret2 = 0;\n\t\tboolean dig2 = false;\n\t\tfor (int ch = 0; (ch = fin.read()) != -1; ) {\n        \t\tif (ch >= '0' && ch <= '9') {\n            \t\t\tdig2 = true;\n           \t\t\tret2 = ret2 * 10 + ch - '0';\n        \t\t} else if (dig2) break;\n    \t\t}\n\n\t\tint n = ret2;\n\n\t\tret2 = 0;\n\t\tdig2 = false;\n\t\tfor (int ch = 0; (ch = fin.read()) != -1; ) {\n        \t\tif (ch >= '0' && ch <= '9') {\n            \t\t\tdig2 = true;\n           \t\t\tret2 = ret2 * 10 + ch - '0';\n        \t\t} else if (dig2) break;\n    \t\t}\n\n\t\tlong r = ret2;\n\n\t\tLong[] x1 = new Long[n];\n\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tlong ret = 0;\n\t\t\tboolean dig = false;\n\t\t\tfor (int ch = 0; (ch = fin.read()) != -1; ) {\n        \t\t\tif (ch >= '0' && ch <= '9') {\n            \t\t\t\tdig = true;\n           \t\t\t\tret = ret * 10 + ch - '0';\n        \t\t\t} else if (dig) break;\n    \t\t\t}\n\n\t\t\tx1[i] = ret;\n\t\t\t\n\t\t}\n\n\t\tlong numfired = 0;\n\n\t\tArrays.sort(x1);\n\n\t\tlong[] x = new long[n];\n\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tx[i] = x1[i];\n\t\t}\n\n\t\tint ind = n - 1;\n\n\t\twhile(ind >= 0 && x[ind] - numfired*r > 0) {\n\t\t\tnumfired++;\n\t\t\tind--;\n\t\t\twhile(ind >= 0 && x[ind] == x[ind+1]) {\n\t\t\t\tind--;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(numfired);\n\t}\n\n\n\n\t}\n\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tp1238B b = new p1238B();\n\t\tb.realMain();\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import javax.print.DocFlavor;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.nio.charset.IllegalCharsetNameException;\nimport java.util.*;\n\npublic class Main {\n\n\n    public static void main(String[] args) throws IOException {\n        Reader.init(System.in);\n        int q = Reader.nextInt();\n        while (q-->0){\n            solve();\n        }\n\n\n\n\n    }\n    static void solve() throws IOException{\n        int n = Reader.nextInt();\n        int r = Reader.nextInt();\n        HashMap<Integer,Integer> map = new HashMap<>();\n        TreeSet<Integer> set = new TreeSet<>();\n        for (int i =0 ; i < n ; i++){\n            int n1 =Reader.nextInt();\n            set.add(n1);\n            if (map.containsKey(n1)){\n                map.put(n1,map.get(n1)+1);\n            }\n            else {\n                map.put(n1,1);\n            }\n        }\n        int ans = 0;\n        int origin = 0;\n        while (!set.isEmpty()){\n            origin+=r;\n            while (!set.isEmpty() && set.first()<=origin){\n                set.remove(set.first());\n            }\n            if (!set.isEmpty()) {\n                set.remove(set.last());\n            }\n            ans++;\n        }\n        System.out.println(ans);\n\n\n\n\n\n\n\n    }\n\n    static long gcd(long a, long b)\n    {\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    // method to return LCM of two numbers\n    static long lcm(long a, long b)\n    {\n        return (a*b)/gcd(a, b);\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\nclass Edge implements Comparable<Edge>{\n    int x , y , w;\n\n    public Edge(int x, int y, int w) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n    }\n\n    @Override\n    public int compareTo(Edge o) {\n        return this.w - o.w;\n    }\n}\nclass Reader {\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n\n    /** call this method to initialize reader for InputStream */\n    static void init(InputStream input) {\n        reader = new BufferedReader(\n                new InputStreamReader(input) );\n        tokenizer = new StringTokenizer(\"\");\n    }\n    /** get next word */\n    static String next() throws IOException {\n        while ( ! tokenizer.hasMoreTokens() ) {\n            //TODO add check for eof if necessary\n            tokenizer = new StringTokenizer(\n                    reader.readLine() );\n        }\n        return tokenizer.nextToken();\n    }\n\n    static int nextInt() throws IOException {\n        return Integer.parseInt( next() );\n    }\n    static long nextLong() throws IOException {\n        return Long.parseLong( next() );\n    }\n\n    static double nextDouble() throws IOException {\n        return Double.parseDouble( next() );\n    }\n}\nclass MergeSort\n{\n    // Merges two subarrays of arr[].\n    // First subarray is arr[l..m]\n    // Second subarray is arr[m+1..r]\n    void merge(int arr[], int l, int m, int r)\n    {\n        // Find sizes of two subarrays to be merged\n        int n1 = m - l + 1;\n        int n2 = r - m;\n\n        /* Create temp arrays */\n        int L[] = new int [n1];\n        int R[] = new int [n2];\n\n        /*Copy data to temp arrays*/\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n\n\n        /* Merge the temp arrays */\n\n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n\n        // Initial index of merged subarry array\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i] <= R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n\n        /* Copy remaining elements of L[] if any */\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n\n        /* Copy remaining elements of R[] if any */\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    // Main function that sorts arr[l..r] using\n    // merge()\n    void sort(int arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            // Find the middle point\n            int m = (l+r)/2;\n\n            // Sort first and second halves\n            sort(arr, l, m);\n            sort(arr , m+1, r);\n\n            // Merge the sorted halves\n            merge(arr, l, m, r);\n        }\n    }\n\n    /* A utility function to print array of size n */\n    static void printArray(int arr[])\n    {\n        int n = arr.length;\n        for (int i=0; i<n; ++i)\n            System.out.print(arr[i] + \" \");\n        System.out.println();\n    }\n\n    // Driver method\n\n}\n\nclass Node implements Comparable<Node>{\n    int a;\n    int b;\n    Node (int a , int b){\n        this.a = a;\n        this.b = b;\n    }\n\n\n\n    public int compareTo(Node o) {\n        if (this.a != o.a) {\n            return this.a - o.a;\n        }\n        else{\n            return this.b - o.b;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "def solution(s):\n    res_arr=[]\n    loc_str = str\n    for i in range(t):\n        p, r = map(int, input().split())\n        s = map(int, set(input().split()))\n        res = acc = 0\n        for k in sorted(s, reverse=True):\n            if k - acc <= 0: break\n            res += 1\n            acc += r\n        res_arr.append(loc_str(res))\n    return res_arr\n\n\n\n\nt = int(input())\nprint(\"\\n\".join(solution(t)))\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint x[100005];\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    int i;\n    for (i = 0; i < n; i++) {\n      scanf(\"%d\", &x[i]);\n    }\n    sort(x, x + n);\n    int te = 0;\n    n = unique(x, x + n) - x;\n    int sum = n;\n    for (i = 1; i < n; i++) {\n      te = 0;\n      te += n - i;\n      if (x[i - 1] - (n - i) * r > 0) {\n        te +=\n            (x[i - 1] - (n - i) * r) / r + ((x[i - 1] - (n - i) * r) % r != 0);\n      }\n      sum = min(sum, te);\n    }\n    printf(\"%d\\n\", sum);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ndef I():\n    return sys.stdin.readline().rstrip()\n\nt = int(I())\nfor _ in range(t):\n    n, r = map( int, I().split() )\n    x = list(map(int,I().split()))\n    x.sort()\n    ans = 0\n    while len(x) > 0 and x[ -1 ] > ans * r:\n        y = x[ -1 ]\n        while len(x) > 0 and x[ -1 ] == y:\n            x.pop()\n        ans += 1\n    print( ans )\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class Problema1 {\n    \n     public static void main(String[]linea)throws Exception{\n         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n         int queries,num_monstruos,rango;\n         List<Monster> monsters = new ArrayList<>();\n         queries = Integer.parseInt(br.readLine());\n         for (int i=0;i<queries;i++){//Para correr el algoritmo el numero de veces \"queries\"\n             StringTokenizer linea1;\n             linea1 = new StringTokenizer(br.readLine());\n             num_monstruos = Integer.parseInt(linea1.nextToken());\n             rango = Integer.parseInt(linea1.nextToken());\n             StringTokenizer linea2;\n             linea2 = new StringTokenizer(br.readLine());\n             \n             HashSet<Integer> posiciones = new HashSet<>();\n             \n             for (int j= 0;j<num_monstruos;j++){\n             posiciones.add(Integer.parseInt(linea2.nextToken()));\n             }\n             \n             posiciones.forEach((k) -> {\n                 if (k>0){\n                     monsters.add(new Monster(k));\n                 }\n                 else{\n                     monsters.add(new FlyingMonster(k));\n                 }\n             });\n             System.out.println(min_moves(monsters, rango));\n             monsters.clear();\n         }\n     }\n     \n    static int min_moves(List<Monster> monsters,int r){\n       \n        int movimientos=0;\n        int cantidad_monstruos = monsters.size();\n        int posicion;\n        posicion = monsters.get(cantidad_monstruos-1).coordenada;\n        Collections.sort(monsters); //Se ordena de menor a mayor\n        \n        \n        for (int i= cantidad_monstruos-1;i>=0;i--){\n            if(monsters.get(i).VivoMuerto(posicion, movimientos*r)){\n                return movimientos;\n            }\n            movimientos++;\n        }\n        \n        return movimientos;\n            \n    }\n    \n    \n    static class Monster implements Comparable<Monster>{\n        int coordenada;\n        Monster(int coordenada){\n            this.coordenada = coordenada;\n        }\n        @Override\n        public int compareTo(Monster otro){\n            return this.coordenada - otro.coordenada;\n        }\n        public boolean VivoMuerto(int c,int rango){\n            return (this.coordenada-rango <= 0 );\n        }\n    }\n    static class FlyingMonster extends Monster{\n       FlyingMonster(int coordenada){\n           super(coordenada);\n       }\n       \n       @Override\n       public boolean VivoMuerto(int c,int rango){\n           return (this.coordenada == c );\n       }\n    }\n }"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.Collections;\nimport java.util.TreeSet;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BKillEmAll solver = new BKillEmAll();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BKillEmAll {\n        public void solve(int testNumber, FastReader s, PrintWriter out) {\n            int t = s.nextInt();\n            while (t-- > 0) {\n                int n = s.nextInt();\n                int r = s.nextInt();\n                int[] arr = s.nextIntArray(n);\n                TreeSet<Integer> map = new TreeSet<>(Collections.reverseOrder());\n                for (int i = 0; i < n; i++) {\n                    map.add(arr[i]);\n                }\n\n                int addend = 0;\n                int count = 0;\n                while (!map.isEmpty()) {\n                    int curr = map.first();\n                    if (curr - addend <= 0) {\n                        break;\n                    } else {\n                        count++;\n                        map.remove(curr);\n                    }\n                    addend += r;\n                }\n\n                out.println(count);\n            }\n        }\n\n    }\n\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private FastReader.SpaceCharFilter filter;\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; ++i) array[i] = nextInt();\n            return array;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Iterator;\nimport java.util.Arrays;\nimport java.util.Collections;\n\npublic class Main{\n\n\tpublic static abstract class Monster implements Comparable <Integer>{\n\t\tpublic int posicion;\n\t\tpublic boolean vivo;\n\n\t\tpublic int compareTo(Integer i){\n\t\t\treturn this.posicion - i;\n\t\t}\n\n\t\tpublic void mover(int r){\n\t\t\tthis.posicion -= r;\n\t\t}\n\n\t\tpublic int getPosicion(){\t\t\t\n\t\t\treturn this.posicion;\n\t\t}\n\n\t\tpublic abstract boolean estaVivo();\n\t}\n\n\tpublic static class WalkingMonster extends Monster{\n\n\t\tpublic WalkingMonster(int pos){\n\t\t\tthis.posicion = pos;\n\t\t\tthis.vivo = true;\n\t\t}\n\n\t\tpublic boolean estaVivo(){\n\t\t\tif (this.posicion <= 0) return false;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic static class FlyingMonster extends Monster{\n\n\t\tpublic FlyingMonster(int pos){\n\t\t\tthis.posicion = pos;\n\t\t}\n\n\t\tpublic boolean estaVivo(){\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic static int min_moves(ArrayList<Monster> lista_monstruos, int r){\n\t\tint mayor = lista_monstruos.get(0).getPosicion(), nuevo_mayor = 0, moves = 1;\n\t\tIterator<Monster> it = lista_monstruos.iterator();\n\n\t\twhile (it.hasNext()){\n\t\t\tMonster temp = it.next();\n\n\t\t\ttemp.mover((moves-1)*r);\n\n\t\t\tif (temp.compareTo(mayor) == 0 || !temp.estaVivo()) continue;\n\n\t\t\telse {\n\t\t\t\ttemp.mover(r);\n\n\t\t\t\tif (!temp.estaVivo()) continue;\n\n\t\t\t\tmoves++;\n\t\t\t\tmayor = temp.getPosicion();\n\t\t\t}\n\t\t}\n\n\t\treturn moves;\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tint q = 0, n = 0, r = 0, num = 0;\n\t\tBufferedReader input = new BufferedReader (new InputStreamReader (System.in));\n\t\tString[] linea = input.readLine().split(\"\\\\s\");\n\t\tq = Integer.parseInt(linea[0]);\n\n\t\tfor (int i = 0; i < q; i++){\n\t\t\tlinea = input.readLine().split(\"\\\\s\");\n\t\t\tn = Integer.parseInt(linea[0]);\n\t\t\tr = Integer.parseInt(linea[1]);\n\t\t\tInteger array[] = new Integer[n];\n\t\t\tlinea = input.readLine().split(\"\\\\s\");\n\n\t\t\tfor (int j = 0; j < n; j++){\n\t\t\t\tarray[j] = Integer.parseInt(linea[j]);\n\t\t\t}\n\n\t\t\tif (n == 1){\n\t\t\t\tSystem.out.println(1);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tArrayList <Monster> monstruos = new ArrayList<Monster>();\n\t\t\t\tArrays.sort(array, Collections.reverseOrder());\n\n\t\t\t\tfor (int j = 0; j < n; j++){\n\t\t\t\t\tif (array[j] <= 0){\n\t\t\t\t\t\tmonstruos.add(new FlyingMonster(array[j]));\n\t\t\t\t\t}\n\n\t\t\t\t\telse monstruos.add(new WalkingMonster(array[j]));\n\t\t\t\t}\n\t\t\t\n\t\t\t\tSystem.out.println(min_moves(monstruos, r));\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ndef kek():\n    t = int(input())\n    for KK in range(t):\n        n, r = map(int, sys.stdin.readline().split())\n        a = list(map(int, sys.stdin.readline().split()))\n        a = list(reversed(sorted(a)))\n        seUd = set()\n        countDel = 0\n        for i in range(len(a)):\n            if a[i] not in seUd and countDel < a[i]:\n                seUd.add(a[i])\n                countDel += r\n        print(len(seUd))\nkek()"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n\n\n\n\"\"\"\n\nfrom math import *\nfrom sys import *\nfrom heapq import *\nfrom collections import defaultdict\nimport os, sys\nfrom io import IOBase, BytesIO\nM=10**9+7\ndef pow(a,b):\n    res=1\n    while b>0:\n        if b&1:\n            res*=a\n        a*=a\n        b>>=1\n    return res\ndef powmod(a,b,m):\n    res=1\n    while b>0:\n        if b&1:\n            res=((res*a)%m)\n        a*=a\n        b>>=1\n    return res\ndef inv(a,m):\n    return powmod(a,m-2,m)\ndef alldivisors(n) : \n    list = []  \n    arr=[]\n    for i in range(1, int(sqrt(n) + 1)) :\n        if (n % i == 0) : \n            if (n / i == i) : \n                arr+=[i]\n            else :\n                arr+=[i]\n                list.append(n//i)  \n    arr+=list[::-1]\n    return arr\ndef primefactorisation(n):\n    potentional_p = 3\n    itog_list = defaultdict(int)\n    if n % 2 == 0:\n        itog_list[2] = 0\n    while n % 2 == 0:\n        n = n // 2\n        itog_list[2] += 1\n    while n - 1:\n        if potentional_p > (n**0.5):\n            itog_list[n] += 1\n            return itog_list\n        while n % potentional_p == 0:\n            n = n // potentional_p\n            itog_list[potentional_p] += 1\n        potentional_p += 2\n    return itog_list\n\n\"\"\"\n\n6 8 10 12\n5 7 9\n4 6\n3\n\n2 3 5 5\n1 2 4 \n0 1\n-1\n\n1 3 5 8\n-1 1 3\n-3 -1\n-5\n\n1 2 3 4\n\n\n\n7 2\n2 4 5 6 7\n0 2 3 4\n-2 0 1\n-4 -2\n-6\n\n\n\"\"\"\n\ndef main():\n    t=int(input())\n    for _ in range(t):\n        n,r=list(map(int,input().split()))\n        a=list(map(int,input().split()))\n        a=list(set(a))\n        a.sort()\n        n=len(a)\n        t=[]\n        val=n-1\n        for x in a:\n            t+=[x-val*r]\n            val-=1\n        res=0\n        #print(t)\n        for x in t:\n            if x>0:\n                res+=1\n        print(res)\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n \n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n \n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n \n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n \n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s:self.buffer.write(s.encode('ascii'))\n        self.read = lambda:self.buffer.read().decode('ascii')\n        self.readline = lambda:self.buffer.readline().decode('ascii')\n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \nif __name__ == '__main__':\n    main()\n#threading.Thread(target=main).start()"
        },
        {
            "language": 3,
            "solution": "import sys\ndef glist(): return list(map(int, sys.stdin.readline().split())) \ndef gints(): return (map(int, sys.stdin.readline().split()))\nt=int(input())\nans=''\nfor _ in range(t):\n    x,y=gints()\n    b=glist()\n    a=[]\n    s=set()\n    for i in b:\n        if i in s:\n            continue \n        else:\n            s.add(i)\n            a.append(i)\n    a.sort()\n    n=0\n    j=len(a)-1\n    while(j>=0):\n        if a[j]-y*n>0:\n            n+=1 \n            j-=1 \n        else:\n            break \n    temp=str(n)+'\\n'\n    ans+=temp\nprint(ans)\n            "
        },
        {
            "language": 1,
            "solution": "res=''\nfor _ in xrange(int(raw_input())):\n  n,r=map(int,raw_input().split())  \n  a=sorted(set(map(int,raw_input().split())))[::-1]\n  cnt=0\n  for i in a:\n    if i<=cnt*r:\n      break\n    cnt+=1\n  res+=str(cnt)+'\\n'\nprint res "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool cmp(long long a, long long b) { return a > b; }\nlong long arr[200100];\nsigned main() {\n  long long _;\n  cin >> _;\n  while (_--) {\n    long long n, r;\n    cin >> n >> r;\n    for (long long i = 0; i <= n + 10; i++) arr[i] = 0;\n    long long cnt = 1;\n    map<long long, long long> mp;\n    for (long long i = 1; i <= n; i++) {\n      long long temp;\n      scanf(\"%lld\", &temp);\n      if (mp[temp])\n        continue;\n      else {\n        mp[temp] = 1;\n        arr[cnt++] = temp;\n      }\n    }\n    sort(arr + 1, arr + cnt, cmp);\n    long long ans = 0;\n    for (long long i = 1; i <= cnt; i++) {\n      arr[i] -= ans * r;\n      if (arr[i] > 0) {\n        ans++;\n      } else {\n        break;\n      }\n    }\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\n# noinspection PyShadowingBuiltins\nfrom typing import List, Any\n\ninput = lambda: stdin.readline().rstrip(\"\\r\\n\")\ninput_a = lambda fun: map(fun, stdin.readline().split())\n\n\ndef read():\n    n, r = input_a(int)\n    a = set(input_a(int))\n    return n, r, a\n\n\ndef solve(n, r, a: set):\n    a: list = sorted(list(a), reverse=True)\n    shots = 0\n    for ai in a:\n        if ai - shots * r > 0:\n            shots += 1\n        else:\n            break\n    return shots\n\n\nfor t in range(int(input())):\n    result = solve(*read())\n    print(result)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long LLINF = 1e17 + 7;\nconst long long INF = 1e9;\nconst long long EPS = 1e-9 - 7;\nconst long long MAX = 1e5 + 7;\nconst long long MOD = 1e9 + 7;\nint q, n, r, x[MAX];\nint main() {\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    cin >> n >> r;\n    set<int> s;\n    bool wrote = false;\n    for (int j = 0; j < n; j++) {\n      int in;\n      cin >> in;\n      s.insert(in);\n    }\n    int k = 0;\n    for (auto t : s) {\n      x[k] = t;\n      k++;\n    }\n    if (k == 1) {\n      cout << 1 << endl;\n      continue;\n    }\n    int cnt = 1;\n    for (int j = k - 2; j >= 0; j--) {\n      if (x[j] <= r * cnt) {\n        cout << cnt << endl;\n        wrote = true;\n        break;\n      } else {\n        cnt++;\n      }\n    }\n    if (wrote == false) {\n      cout << cnt << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "ans = []\ndef solution(test):\n    for case in range(test):\n        n,r = map(int, input().split())\n        p = sorted(map(int, set(input().split())),reverse=True)\n        attack = 0\n        for x in p:\n            if x - attack*r <1: break\n            attack += 1\n        ans.append(attack)\nsolution(int(input()))\nfor x in ans:   print(x)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst int N = 100010;\nint a[N];\nbool cmp(int x, int y) { return x > y; }\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    set<int> se;\n    int num = 0;\n    for (int i = 0, x; i < n; i++) {\n      cin >> x;\n      if (!se.count(x)) {\n        a[num++] = x;\n        se.insert(x);\n      }\n    }\n    sort(a, a + num, cmp);\n    int j = 0;\n    while (a[j] - k * j > 0 && j < num) j++;\n    cout << j << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long maxn = 1e5 + 10;\nlong long q, n, r, x[maxn], shou, ans;\nsigned main() {\n  cin >> q;\n  while (q--) {\n    ans = 0;\n    shou = 0;\n    scanf(\"%lld%lld\", &n, &r);\n    for (long long i = 0; i < n; i++) scanf(\"%lld\", &x[i]);\n    sort(x, x + n);\n    long long length = unique(x, x + n) - x;\n    for (long long i = length - 1; i >= 0; i--) {\n      if (x[i] > shou) {\n        ans++;\n        shou += r;\n      } else {\n        break;\n      }\n    }\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint q, n, r;\nvector<int> v;\nint main() {\n  scanf(\"%d\", &q);\n  while (q--) {\n    scanf(\"%d%d\", &n, &r);\n    v.clear();\n    for (int i = 1; i <= n; i++) {\n      int x;\n      scanf(\"%d\", &x);\n      v.push_back(x);\n    }\n    sort(v.begin(), v.end());\n    v.erase(unique(v.begin(), v.end()), v.end());\n    int sz = (int)v.size();\n    int lb = 0, rb = sz;\n    while (rb - lb > 1) {\n      int mid = (lb + rb) / 2;\n      if (mid >= sz || v[sz - 1 - mid] - 1LL * mid * r <= 0)\n        rb = mid;\n      else\n        lb = mid;\n    }\n    printf(\"%d\\n\", rb);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "res = []\n\nfor qq in range(int(input())):\n    n , r = map(int,input().split())\n    st = set(map(int,input().split()))\n\n    l = sorted( st , reverse= True)\n    ans = 0\n    kill = 0\n    for i in l :\n        if i <= kill :\n            break\n        ans +=1\n        kill += r\n\n    res.append(ans)\n\nfor i in res:\n    print(i)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n    long long a[n];\n    vector<long long> raj;\n    set<long long> s;\n    for (long long i = 0; i < n; i++) {\n      cin >> a[i];\n      s.insert(a[i]);\n    }\n    sort(a, a + n);\n    for (auto it = s.begin(); it != s.end(); it++) {\n      if ((*it) % k == 0)\n        raj.push_back((*it) / k);\n      else {\n        raj.push_back((*it) / k + 1);\n      }\n    }\n    sort(raj.begin(), raj.end());\n    long long cnt = 0;\n    for (long long i = raj.size() - 1; i >= 0; i--) {\n      if ((raj[i] - cnt) <= 0) {\n        break;\n      } else\n        cnt++;\n    }\n    cout << cnt << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = sorted(set(map(int, stdin.readline().split())))\n\n    shots, acc = 0, 0\n    for i in range(len(monsters) - 1, -1, -1):\n        if monsters[i] - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    stdout.write(str(shots) + \"\\n\")\n"
        },
        {
            "language": 4,
            "solution": "\n/**\n * Main\n */\nimport java.util.stream.IntStream;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.lang.Math;\n\npublic class Main {\n    public static List<Monster> CreateMonsters(List<Integer> pos) {\n        List<Monster> monsters = new ArrayList<Monster>();\n        for (Integer integer : pos) {\n            monsters.add(new Monster(integer));\n        }\n        return monsters;\n    }\n\n    // public static void min_moves(FastReader scanner, int n, int r, int c) {\n        // // no monster approach\n        // List<Integer> positions = new ArrayList<>(new HashSet<>(StrToListOfInt(scanner.nextLine().split(\" \"))));\n    //     Collections.sort(positions, Collections.reverseOrder());\n    //     for (Integer i : positions) {\n    //         if (i - c * r > 0)\n    //             c = c + 1;\n    //         else\n    //             break;\n    //     }\n    //     System.out.println(c);\n\n    // }\n\n    public static void min_moves(FastReader scanner, int n, int r, int c) {\n        // MONSTER APPROACH\n        List<Integer> positions = new ArrayList<>(new HashSet<>(StrToListOfInt(scanner.nextLine().split(\" \"))));\n        Collections.sort(positions, Collections.reverseOrder());\n        List<Monster> monsters = CreateMonsters(positions);\n        for (Monster m : monsters) {\n            if (m.GetPosition() - c * r > 0)\n                c = c + 1;\n            else\n                break;\n        }\n        System.out.println(c);\n\n    }\n\n    public static void main(String[] args) {\n        FastReader scanner = new FastReader();\n        int n_queries = Integer.parseInt(scanner.nextLine());\n        String[] firstLine;\n        int n;\n        int r;\n        for (int i = 0; i < n_queries; i++) {\n            firstLine = scanner.nextLine().split(\" \");\n            n = Integer.parseInt(firstLine[0]);\n            r = Integer.parseInt(firstLine[1]);\n            min_moves(scanner, n, r, 0);\n        }\n    }\n\n    public static int[] StrToIntArray(String[] s) {\n        int[] intArr = new int[s.length];\n        for (int i = 0; i < s.length; i++) {\n            intArr[i] = Integer.parseInt(s[i]);\n        }\n        return intArr;\n    }\n\n    public static List<Integer> StrToListOfInt(String[] s) {\n        List<Integer> returnList = new ArrayList<Integer>();\n        for (int i = 0; i < s.length; i++) {\n            returnList.add(Integer.parseInt(s[i]));\n        }\n        return returnList;\n    }\n}\n\n/**\n * Monster\n */\nclass Monster implements Comparable {\n    protected int position;\n    protected boolean alive;\n\n    public Monster(int i) {\n        position = i;\n        alive = true;\n    }\n\n    public int GetPosition() {\n        return position;\n    }\n\n    @Override\n    public String toString() {\n        return \"Monster \" + GetPosition();\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        Monster other = (Monster) o;\n        if (other.GetPosition() == this.GetPosition()) {\n            return 0;\n        } else {\n            return other.GetPosition() - this.GetPosition();\n        }\n    }\n\n    public void MoveMonster(int amount) {\n        position += amount;\n        if (position <= 0) {\n            Kill();\n        }\n    }\n\n    public boolean IsAlive() {\n        return alive;\n    }\n\n    public void Kill() {\n        alive = false;\n    }\n\n    public boolean Shoot(int shot, int intensity) {\n        if (shot == position) {\n            Kill();\n        }\n        if (position < shot) {\n            this.MoveMonster(-intensity);\n        }\n        if (position > shot) {\n            this.MoveMonster(intensity);\n        }\n        return false;\n    }\n}\n\n/**\n * FlyingMonster\n */\nclass FlyingMonster extends Monster {\n\n    public FlyingMonster(int i) {\n        super(i);\n    }\n\n    @Override\n    public void MoveMonster(int amount) {\n        position += amount;\n    }\n}\n\nclass FastReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfans = []\nfor i in range (0,T):\n    n, r = map(int,input().split())\n    a=list(set((map(int,input().split()))))\n    a.sort(reverse=1)\n    leng = len(a)\n    ans = 0\n    for j in range (0,leng):\n        if (a[j] - ans * r) > 0:\n            ans += 1\n        else:\n            break\n    fans.append(ans)\n    \nfor i in fans:\n    print(i)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = (int)1e5;\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  int n, r, res, j;\n  int a[N];\n  for (int i = 0; i < q; ++i) {\n    scanf(\"%d %d\", &n, &r);\n    for (j = 0; j < n; ++j) scanf(\"%d\", &a[j]);\n    sort(a, a + n);\n    n = unique(a, a + n) - a;\n    res = 0;\n    for (j = n - 1; j >= 0; j--) res += (a[j] - res * r > 0);\n    printf(\"%d\\n\", res);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) {\n  if (b == 0)\n    return a;\n  else\n    return gcd(b, a % b);\n}\nint main() {\n  int t;\n  cin >> t;\n  int n, r;\n  set<int> a;\n  int b;\n  for (int k = 0; k < t; ++k) {\n    cin >> n >> r;\n    a.clear();\n    for (int i = 0; i < n; ++i) {\n      cin >> b;\n      a.insert(b);\n    }\n    int v = 0;\n    auto it = a.end();\n    --it;\n    while (1) {\n      if ((*it) - v * r <= 0) break;\n      v++;\n      if (it == a.begin()) break;\n      --it;\n    }\n    cout << v << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*; \n\npublic class KillThemAll {\n    public static void main(String[] args) {\n        // input\n        int q = sc.nextInt();\n        for (int i = 0; i < q; i++) {\n            int n = sc.nextInt();\n            int r = sc.nextInt();\n            int[] x = new int[n];\n            for (int j = 0; j < n; j++) {\n                x[j] = sc.nextInt();\n            }\n\n            Random rnd = new Random(239228);\n            for (int ii = 0; ii < n; ++ii) {\n                int j = ii + rnd.nextInt(n - ii);\n                int y = x[ii]; x[ii] = x[j]; x[j] = y;\n            }\n\n            Arrays.sort(x);\n            int result = 0;\n\n            long explosionDistance = 0;\n\n            for (int j = n - 1; j >= 0; j--) {\n                if (x[j] - explosionDistance <= 0) {\n                    break; // all done\n                }\n                result += 1;\n                explosionDistance += r;\n\n                int cur = x[j];\n                while (j > 0 && x[j-1] == cur)\n                    j--;\n            }\n            out.println(result);\n        }\n        out.flush();\n    }\n\n\n    //-----------PrintWriter for faster output---------------------------------\n    private static final PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\n    //-----------MyScanner class for faster input----------\n    private static final MyScanner sc = new MyScanner();\n    public static class MyScanner {\n        private final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        private StringTokenizer st;\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine(){\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename Arg1>\nvoid __f(const char* name, Arg1&& arg1) {\n  cerr << name << \": \" << arg1 << endl;\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char* names, Arg1&& arg1, Args&&... args) {\n  const char* comma = strchr(names + 1, ',');\n  cerr.write(names, comma - names) << \": \" << arg1 << \" |\";\n  __f(comma + 1, args...);\n}\nlong long Q, N, R;\nvector<long long> V;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  cin >> Q;\n  for (long long q = 0; q < Q; q++) {\n    cin >> N >> R;\n    V.resize(N, 0);\n    for (long long i = 0; i < N; i++) cin >> V[i];\n    sort(V.begin(), V.end(), greater<long long>());\n    V.erase(unique(V.begin(), V.end()), V.end());\n    long long away = 0;\n    long long ans = 0;\n    for (long long i : V) {\n      if (i - away > 0) ans++;\n      away += R;\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\n\ndef solve(n, r, xs):\n    xs = sorted(set(xs), reverse=True)\n    ans, shift = 0, 0\n    for x in xs:\n        if x <= shift:\n            break\n        ans += 1\n        shift += r\n    print(ans)\n\n\nif __name__ == '__main__':\n    q = int(input())\n    for i in range(q):\n        n, r = map(int, input().split(' '))\n        xs = map(int, input().split(' '))\n        solve(n, r, xs)\n\n"
        },
        {
            "language": 3,
            "solution": "#------------------------template--------------------------#\nimport os\nimport sys\nfrom math import *\nfrom collections import *\n#from fractions import *\nfrom bisect import *\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n#--------------------------code---------------------------#\n#vsInput()\n\nfor _ in range(Int()):\n    n,r=value()\n    a=sorted(set(array()),reverse=True)\n    c=0\n    for i in a:\n        if(i-c*r<=0):\n            break\n        else:\n            c+=1\n    print(c)\n    "
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\n\nfor _ in range(int(input())):\n    n,r=map(int,input().split())\n    x=sorted(set(map(int,input().split())))\n    \n    cnt=0\n    now_right_idx=len(x)-1\n    total_explosion=0\n\n    while now_right_idx>=0:\n        cnt+=1\n        total_explosion+=r\n        now_right_idx-=1\n        while now_right_idx>=0 and x[now_right_idx]<=total_explosion:\n            now_right_idx-=1\n\n    print(cnt)"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n// package rishabh;\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Main\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\t// your code goes here\n\t\tFastReader sc=new FastReader();\n// \t\tconstructST(a,n);RMQ(n, qs, qe)\n        // sieveOfEratosthenes();\n\t\tint t = sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n = sc.nextInt(), r = sc.nextInt();\n\t\t\tLong a[] = new Long[n];\n\t\t\tHashSet <Long> hs = new HashSet<>();\n\t\t\tArrayList <Long> ar = new ArrayList<>();\n\t\t\tlong sum = 0, count = 1;\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\ta[i] = (long) sc.nextInt();\n\t\t\t}\n\t\t\tArrays.sort(a);\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\t\n\t\t\t\tif(!hs.contains(a[i])) {\n\t\t\t\t\tar.add(a[i]);\n\t\t\t\t\ths.add(a[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsum = r;\n\t\t\t\n\t\t\tfor(int i = ar.size() - 2; i >= 0; i--) {\n\t\t\t\tif(ar.get(i) - sum <= 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t\tsum += r;\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t\t\n\t}\n    static int lower_bound(int a[],int x){\n\t    int n=a.length,low=0,high=n-1,res=-1;\n\t    while(low<=high){\n\t    \tint mid=(low+high)>>1;\n         \n\t    \tif(a[mid]>=x){\n\t    \t\tres=mid;\n\t    \t\tlow = mid + 1;\n\t    \t}\n\t    \telse \n\t    \t\thigh = mid - 1;\n\t    }\n\t    return res;\n\t}\n    static int upper_bound(int a[],int x){\n         int n=a.length,low=0,high=n-1,res=-1;\n         while(low<=high){\n             int mid=(low+high)>>1;\n             if(a[mid]<=x){\n                 res=mid;low=mid+1;\n             }\n             else \n                 high=mid-1;\n         }\n         return res;\n     }\n    //   static int MAX=1000001;boolean prime[] = new boolean[MAX]; \n      \n    //   static void sieveOfEratosthenes() { \n    //       for(int m9=0;m9<MAX;m9++) prime[m9]=true;\n    //     for(int p = 2; p*p <=n; p++) { \n    //         if(prime[p] == true) \n    //         { \n    //             // Update all multiples of p \n    //             for(int i = p*2; i <= n; i += p) \n    //                 prime[i] = false; \n    //         } \n    //     } \n    //   }\n      \n      static long modexpo(long x,long n,long m){\n        if(n==0)\n            return 1;\n        else if(n%2==0)\n            return (modexpo(((x%m)*(x%m))%m,n/2,m))%m;\n        else\n            return ((x%m)*((modexpo(((x%m)*(x%m))%m,(n-1)/2,m))%m))%m;\n      } \n       static int gcd(int a,int b){\n           if(b==0)\n              return a;\n           else \n              return gcd(b,a%b);\n       }\n       static long gcd(long a,long b){\n           if(b==0)\n              return a;\n           else \n              return gcd(b,a%b);\n       }\n\t static class FastReader{\n          BufferedReader in;\n          StringTokenizer st;\n          public FastReader(){\n              in=new BufferedReader(new InputStreamReader(System.in));\n          }\n          String next(){\n              while(st==null || !st.hasMoreElements()){\n                  try{\n                      st=new StringTokenizer(in.readLine());\n                  }\n                  catch(IOException e){\n                      e.printStackTrace();\n                  }\n               }\n               return st.nextToken();\n            }\n            int nextInt(){\n                return Integer.parseInt(next());\n            }\n            long nextLong(){\n                return Long.parseLong(next());\n            }\n            double nextDouble(){\n                return Double.parseDouble(next());\n            }\n            String nextLine(){\n            String str19 = \"\";\n            try{\n                str19 = in.readLine();\n            }\n            catch (IOException e){ \n                e.printStackTrace();\n             }\n            return str19;\n        }\n      }    \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\nimport javax.crypto.spec.GCMParameterSpec;\n\nimport java.io.*;\nimport java.math.BigInteger;\n\npublic class A {\n\n\tstatic class pair implements Comparable<pair> {\n\t\tint x;\n\t\tint y;\n\n\t\tpublic pair(int d, int k) {\n\t\t\tx = d;\n\t\t\ty = k;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(pair arg0) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\tif (x == arg0.x) {\n\t\t\t\treturn y - arg0.y;\n\t\t\t}\n\t\t\treturn x - arg0.x;\n\t\t}\n\t}\n\n\tstatic int x, y, d;\n\n\tstatic void extendedEuclid(int a, int b) {\n\t\tif (b == 0) {\n\t\t\tx = 1;\n\t\t\ty = 0;\n\t\t\td = a;\n\t\t\treturn;\n\t\t}\n\t\textendedEuclid(b, a % b);\n\t\tint x1 = y;\n\t\tint y1 = x - a / b * y;\n\t\tx = x1;\n\t\ty = y1;\n\t}\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\t// TODO Auto-generated method stub\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tint t=Integer.parseInt(br.readLine());\n\t\t\n\t\twhile(t-->0) {\n\t\t\tStringTokenizer st=new StringTokenizer(br.readLine());\n\t\t\tlong x=Long.parseLong(st.nextToken());\n\t\t\tlong y=Long.parseLong(st.nextToken());\n\t\t\tArrayList<Integer> a=new ArrayList<>();\n\t\t\tHashSet<Integer> h=new HashSet<>();\n\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\tfor (int i = 0; i < x; i++) {\n\t\t\t\tint n=Integer.parseInt(st.nextToken());\n\t\t\t\tif(!h.contains(n)) {\n\t\t\t\t\ta.add(n);\n\t\t\t\t\th.add(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(a);\n\t\t\tint c=0;\n\t\t\tboolean f=true;\n \t\t\tfor(int i=a.size()-1;i>=0 && f;i--) {\n \t\t\t\tint n=a.get(i)-c*(int)y;\n \t\t\t\tif(n>0) {\n \t\t\t\t\tc++;\n \t\t\t\t}\n \t\t\t}\n \t\t\tpw.println(c);\n\t\t}\n\t\tpw.flush();\n\t\tpw.close();\n\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Problema1{\n    static int min_moves(List<Monster> monsters, int r){\n        int moves = 0, size = monsters.size(), c = monsters.get(size-1).coordinateX;\n        Collections.sort(monsters);\n        for(int i = size-1; i >= 0; i--){\n            if(monsters.get(i).DeadMonster(c, moves*r)) return moves;\n            moves++;\n        }\n        return moves;\n    }\n    public static void main(String[]st) throws Exception{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        List<Monster> monsters = new ArrayList<>();\n        int n, q, r;\n        q=Integer.parseInt(br.readLine());\n        for(int i = 0;i<q;i++){\n            StringTokenizer st1 = new StringTokenizer(br.readLine());\n            n = Integer.parseInt(st1.nextToken());\n            r = Integer.parseInt(st1.nextToken());\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n\n            HashSet<Integer> h = new HashSet<>();//Para evitar agregar duplicados hacemos uso del HashSet\n\n            for(int j = 0; j < n; j++ ){\n                h.add(Integer.parseInt(st2.nextToken()));\n            }\n            for(int z:h){\n                if (z > 0){\n                    monsters.add(new Monster(z));\n                }\n                else{\n                    monsters.add(new FlyingMonster(z));\n                }\n            }\n            System.out.println(min_moves(monsters, r));\n            monsters.clear();\n        }\n\n    }\n\n    static class Monster implements Comparable<Monster> {\n        int coordinateX;\n\n        Monster(int coordinateX) {\n            this.coordinateX= coordinateX;\n        }\n\n        public int compareTo(Monster other) {\n            return this.coordinateX - other.coordinateX;\n        }\n\n        public boolean DeadMonster(int c, int r) { // Vemos si es que la coordenada es 0 o menor.\n            return this.coordinateX - r <= 0;\n        }\n\n    }\n\n    static class FlyingMonster extends Monster {\n        FlyingMonster(int coordinateX) {\n            super(coordinateX);\n        }\n\n        @Override\n        public boolean DeadMonster(int c, int r) { // Vemos si es que la coordenada es igual al centro.\n\t\t\treturn (this.coordinateX == c);\n\t\t}\n\t} \n}"
        },
        {
            "language": 3,
            "solution": "s=''\nfor _ in \" \"*int(input()):\n  n,r=map(int,input().split())\n  a=sorted(set(map(int,input().split())))[::-1]\n  cnt=0\n  for i in a:\n    i-=cnt*r\n    if i<=0:\n      break\n    cnt+=1\n  s+=str(cnt)+'\\n'\nprint(s)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1e6 + 5, inf = 1e18, mod = 1e9 + 7;\nconst long double pi = 3.141592653589793238;\nbool check_prime(long long n) {\n  long long flag = 0, i;\n  for (i = 2; i * i <= n; i++) {\n    if (n % i == 0) {\n      flag = 1;\n      break;\n    }\n  }\n  if (n == 1) {\n    return false;\n  } else if (flag == 0 || n == 2 || n == 3) {\n    return true;\n  } else {\n    return false;\n  }\n}\nlong long fastexpo(long long a, long long b, long long MOD) {\n  long long result = 1;\n  while (b > 0) {\n    if (b % 2 == 1) {\n      result = (result * a) % MOD;\n    }\n    a = (a * a) % MOD;\n    b = b / 2;\n  }\n  return result;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long int t;\n  cin >> t;\n  while (t--) {\n    long long n, r, i, u, ans, ma, f;\n    cin >> n >> r;\n    vector<long long> v;\n    set<long long> s;\n    for (i = 0; i < n; i++) {\n      cin >> u;\n      s.insert(u);\n    }\n    for (auto x : s) {\n      v.push_back(x);\n    }\n    n = ((long long)((v).size()));\n    f = 0;\n    for (i = 1; i < n; i++) {\n      if (v[n - i - 1] <= i * r) {\n        f = 1;\n        ans = i;\n        break;\n      }\n    }\n    if (f == 0) {\n      ans = n;\n    }\n    cout << ans << \"\\n\";\n    s.clear();\n    v.clear();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint t, n, r, a[N];\nvoid fn() {\n  cin >> n >> r;\n  int ans = 0, x = 0;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  sort(a, a + n);\n  for (int i = n - 1; i >= 0; i--) {\n    while (a[i] == a[i - 1] && i) i--;\n    if (a[i] > x) {\n      ans++;\n      x = r * ans;\n    } else\n      break;\n  }\n  cout << ans << endl;\n  return;\n}\nint main() {\n  cin >> t;\n  while (t--) fn();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    int x;\n    set<int> s;\n    for (int i = 0; i < n; i++) {\n      cin >> x;\n      s.insert(x);\n    }\n    vector<int> v;\n    n = s.size();\n    int k = 0;\n    for (auto i : s) {\n      int c;\n      if (i % r == 0)\n        c = i / r;\n      else\n        c = i / r + 1;\n      v.push_back(min(c, n - k));\n      k++;\n    }\n    sort(v.begin(), v.end());\n    cout << v[n - 1] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, r, a[200005], now, ans, T;\nint gets() {\n  int v = 0;\n  char ch;\n  bool f = 0;\n  while (!isdigit(ch = getchar()))\n    if (ch == '-') f = 1;\n  v = ch - 48;\n  while (isdigit(ch = getchar())) v = (v << 1) + (v << 3) + ch - 48;\n  return f ? -v : v;\n}\nvoid test() {\n  n = gets(), r = gets();\n  ans = 0;\n  for (int i = 1; i <= n; i++) a[i] = gets();\n  sort(1 + a, 1 + a + n);\n  now = n + 1;\n  a[n + 1] = a[n] + 1;\n  for (int i = n; i >= 1; i--) {\n    if (a[i] - r * ans <= 0) break;\n    if (a[i] != a[now]) now = i, ans++;\n  }\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  T = gets();\n  while (T--) test();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintStream;\nimport java.util.TreeMap;\n\npublic class Killem {\n    private static PrintStream out;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintStream(System.out);\n\n        int q = Integer.parseInt(br.readLine());\n        for (int i = 0; i < q; i++) {\n            String[] line = br.readLine().split(\" \");\n            int n = Integer.parseInt(line[0]);\n            int r = Integer.parseInt(line[1]);\n            line = br.readLine().split(\" \");\n            TreeMap<Integer, Integer> tree = new TreeMap<>();\n            for (int j = 0; j < n; j++) {\n                int enemy = Integer.parseInt(line[j]);\n                int cnt = tree.getOrDefault(enemy, 0);\n                tree.put(enemy, cnt + 1);\n            }\n            int result = solve(r, tree);\n            out.println(result);\n        }\n    }\n\n    static int solve(int r, TreeMap<Integer, Integer> tree) {\n        long currShift = 0;\n        int numSteps = 0;\n        while (!tree.isEmpty()) {\n            int lastKey = tree.lastKey();\n            if(lastKey<=currShift) break;\n            tree.remove(lastKey);\n            numSteps++;\n            currShift += r;\n        }\n        return numSteps;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "R=lambda:map(int,input().split())\nq,=R()\nprint(' '.join(map(str,(sum(x-i*r>0for i,x in\nenumerate(sorted(set(a))[::-1]))for(n,r),a in((R(),R())for _ in[0]*q)))))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing ll = long long;\nusing namespace std;\nusing ld = long double;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int t;\n  bitset<100001> f;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> a(n);\n    f.reset();\n    for (int i = 0; i < n; ++i) {\n      int k;\n      cin >> k;\n      if (f[k] == 1) continue;\n      a.push_back(k);\n      f[k] = 1;\n    }\n    sort(a.begin(), a.end(), greater<int>());\n    int ans = 0;\n    int sum = 0;\n    for (int i = 0; i < a.size(); ++i)\n      if (a[i] - sum > 0) {\n        sum += r;\n        ans++;\n      }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# num_queries = int(input())\n# for _ in range(num_queries):\n#     num_shots = 0\n#     num_enemies, r = [int(elem) for elem in input().split(\" \")]\n#     pos = [int(elem) for elem in input().split(\" \")]\n#     # tmp = {}\n\n#     # for enemy in pos:\n#     #     if enemy in tmp:\n#     #         tmp[enemy] += 1\n#     #     else:\n#     #         tmp[enemy] = 1\n\n#     # for enemy, num in tmp.items():\n#     #     enemies.append([enemy, num])\n#     enemies = list(set(pos))\n#     enemies.sort(reverse=True)\n   \n\n#     left = 0\n#     while len(enemies) != 0:\n#         if (len(enemies) != 0):\n#             enemies.pop(0)\n#         left += r\n#         while (len(enemies) != 0 and enemies[0] <= left):\n#             enemies.pop(-1)        \n#         num_shots += 1        \n#     print(num_shots)\n\n\nimport math\n\n\ndef process():\n    numpush = input()\n    position = input()\n    li1 = numpush.split(' ')\n    throw = int(li1[1])\n    num = int(li1[0])\n    li2 = position.split(' ')\n    pos = {}\n    for i in li2:\n        if int(i) not in pos:\n            pos[int(i)] = 1\n    pos1 = []\n    for i in pos:\n        pos1.append(i)\n    pos2 = []\n    for i in pos1:\n        number = math.ceil(i/throw)\n        pos2.append(number)\n    pos2.sort(reverse=True)\n    shot = 0\n    done = 0  # 0 is not done, 1 is done\n    while shot < len(pos2) and done == 0:\n        shot += 1\n        if shot != len(pos2):\n            if shot >= pos2[shot]:\n                done = 1\n    return(shot)\n\n\ndef main():\n    que = int(input())\n    answer = []\n    while que > 0:\n        ans = process()\n        answer.append(ans)\n        que += -1\n    for i in answer:\n        print(i)\n\n\nmain()\n\n\n\n \n\n\n\n        \n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = set(int(m) for m in stdin.readline().split())\n\n    shots, acc = 0, 0\n    for m in sorted(monsters, reverse=True):\n        if m - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    stdout.write(str(shots) + \"\\n\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int N = 1e5 + 5;\nconst long long int mod = 1e9 + 7;\nconst long long int inf = 1e18;\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int t;\n  cin >> t;\n  for (long long int j = 0; j < t; ++j) {\n    long long int n, k, x;\n    cin >> n >> k;\n    set<long long int> s;\n    for (long long int i = 0; i < n; ++i) {\n      cin >> x;\n      s.insert(x);\n    }\n    long long int i = 0, ans = 0;\n    for (auto itr = s.rbegin(); itr != s.rend(); itr++) {\n      if (i >= *itr) break;\n      i = i + k;\n      ans++;\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor i in range (0,T):\n    n, r = map(int,input().split())\n    a=list(set((map(int,input().split()))))\n    a.sort(reverse=1)\n    leng = len(a)\n    ans = 0\n    for j in range (0,leng):\n        if (a[j] - ans * r) > 0:\n            ans += 1\n        else:\n            break\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "''' CODED WITH LOVE BY SATYAM KUMAR '''\n\nfrom sys import stdin, stdout\nimport heapq\nimport cProfile, math\nfrom collections import Counter, defaultdict, deque\nfrom bisect import bisect_left, bisect, bisect_right\nimport itertools\nfrom copy import deepcopy\nfrom fractions import Fraction\nimport sys, threading\nimport operator as op\nfrom functools import reduce\nimport sys\n\nsys.setrecursionlimit(10 ** 6)  # max depth of recursion\nthreading.stack_size(2 ** 27)  # new thread will get stack of such size\nfac_warm_up = False\nprintHeap = str()\nmemory_constrained = False\nP = 10 ** 9 + 7\n\n\nclass MergeFind:\n    def __init__(self, n):\n        self.parent = list(range(n))\n        self.size = [1] * n\n        self.num_sets = n\n        self.lista = [[_] for _ in range(n)]\n\n    def find(self, a):\n        to_update = []\n        while a != self.parent[a]:\n            to_update.append(a)\n            a = self.parent[a]\n        for b in to_update:\n            self.parent[b] = a\n        return self.parent[a]\n\n    def merge(self, a, b):\n        a = self.find(a)\n        b = self.find(b)\n        if a == b:\n            return\n        if self.size[a] < self.size[b]:\n            a, b = b, a\n        self.num_sets -= 1\n        self.parent[b] = a\n        self.size[a] += self.size[b]\n        self.lista[a] += self.lista[b]\n\n    def set_size(self, a):\n        return self.size[self.find(a)]\n\n    def __len__(self):\n        return self.num_sets\n\n\ndef display(string_to_print):\n    stdout.write(str(string_to_print) + \"\\n\")\n\n\ndef prime_factors(n):  # n**0.5 complex\n    factors = dict()\n    for i in range(2, math.ceil(math.sqrt(n)) + 1):\n        while n % i == 0:\n            if i in factors:\n                factors[i] += 1\n            else:\n                factors[i] = 1\n            n = n // i\n    if n > 2:\n        factors[n] = 1\n    return (factors)\n\n\ndef all_factors(n):\n    return set(reduce(list.__add__,\n                      ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\n\n\ndef fibonacci_modP(n, MOD):\n    if n < 2: return 1\n    return (cached_fn(fibonacci_modP, (n + 1) // 2, MOD) * cached_fn(fibonacci_modP, n // 2, MOD) + cached_fn(\n        fibonacci_modP, (n - 1) // 2, MOD) * cached_fn(fibonacci_modP, (n - 2) // 2, MOD)) % MOD\n\n\ndef factorial_modP_Wilson(n, p):\n    if (p <= n):\n        return 0\n    res = (p - 1)\n    for i in range(n + 1, p):\n        res = (res * cached_fn(InverseEuler, i, p)) % p\n    return res\n\n\ndef binary(n, digits=20):\n    b = bin(n)[2:]\n    b = '0' * (digits - len(b)) + b\n    return b\n\n\ndef is_prime(n):\n    \"\"\"Returns True if n is prime.\"\"\"\n    if n < 4:\n        return True\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return False\n    i = 5\n    w = 2\n    while i * i <= n:\n        if n % i == 0:\n            return False\n        i += w\n        w = 6 - w\n    return True\n\n\ndef generate_primes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n\nfactorial_modP = []\n\n\ndef warm_up_fac(MOD):\n    global factorial_modP, fac_warm_up\n    if fac_warm_up: return\n    factorial_modP = [1 for _ in range(fac_warm_up_size + 1)]\n    for i in range(2, fac_warm_up_size):\n        factorial_modP[i] = (factorial_modP[i - 1] * i) % MOD\n    fac_warm_up = True\n\n\ndef InverseEuler(n, MOD):\n    return pow(n, MOD - 2, MOD)\n\n\ndef nCr(n, r, MOD):\n    global fac_warm_up, factorial_modP\n    if not fac_warm_up:\n        warm_up_fac(MOD)\n        fac_warm_up = True\n    return (factorial_modP[n] * (\n            (pow(factorial_modP[r], MOD - 2, MOD) * pow(factorial_modP[n - r], MOD - 2, MOD)) % MOD)) % MOD\n\n\ndef get_int():\n    return int(stdin.readline().strip())\n\n\ndef get_tuple():\n    return map(int, stdin.readline().split())\n\n\ndef get_list():\n    return list(map(int, stdin.readline().split()))\n\n\nmemory = dict()\n\n\ndef clear_cache():\n    global memory\n    memory = dict()\n\n\ndef cached_fn(fn, *args):\n    global memory\n    if args in memory:\n        return memory[args]\n    else:\n        result = fn(*args)\n        memory[args] = result\n        return result\n\n\ndef ncr(n, r):\n    return math.factorial(n) / (math.factorial(n - r) * math.factorial(r))\n\n\ndef binary_search(i, li):\n    fn = lambda x: li[x] - x // i\n    x = -1\n    b = len(li)\n    while b >= 1:\n        while b + x < len(li) and fn(b + x) > 0:  # Change this condition 2 to whatever you like\n            x += b\n        b = b // 2\n    return x\n\n\n# -------------------------------------------------------------- MAIN PROGRAM\n\n\nTestCases = True\noptimise_for_recursion = True  # Can not be used clubbed with TestCases WHen using recursive functions, use Python 3\n\n\ndef main():\n    n, r = get_tuple()\n    li = list(set(get_list()))\n    li.sort()\n    drop = 0\n    while len(li)>0 and li[-1]-drop>0:\n        drop += r\n        li.pop()\n    print(drop//r)\n\n# --------------------------------------------------------------------- END=\n\n\nif TestCases:\n    for i in range(get_int()):\n        main()\nelse:\n    main() if not optimise_for_recursion else threading.Thread(target=main).start()\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\n\nt = int(input())\n\nfor ghg in range(t):\n    \n\n    n,r = map(int,input().split())\n    \n    l=[int(x) for x in input().split()]\n    l = list(set(l))\n    n = len(l)\n    l.sort(reverse = True)\n    \n    c=0\n\n    for i in range(n):\n         if(l[i]>c*r):\n              c+=1\n         else:\n              break\n\n    #while(l[c]>c*r):\n     #    c+=1\n         \n    \n    #while( n-1-c>=0 and l[n-1-c]>c*r):\n     #   c+=1\n        \n        \n        \n    print (c)\n    \n    \n        \n        \n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.util.Random;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author El-Bishoy\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        Div2B1238_killEmAll_t_distances_on_line solver = new Div2B1238_killEmAll_t_distances_on_line();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class Div2B1238_killEmAll_t_distances_on_line {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n\n            int q = in.nextInt();\n            StringBuilder stringBuilder = new StringBuilder();\n            while (q-- > 0) {\n\n                int n = in.nextInt();\n                int d = in.nextInt();\n                int[] arr = in.nextIntArray(n);\n                ArrayUtils.shuffle(arr);\n                Arrays.sort(arr);\n\n\n                int ans = 0;\n                int acc = 0;\n                int prev = -1;\n                for (int i = n - 1; i >= 0; i--) {\n\n                    if (arr[i] - acc > 0 && arr[i] != prev) {\n                        ans++;\n                        prev = arr[i];\n                        acc += d;\n                    }\n\n                }\n\n\n                stringBuilder.append(ans).append(\"\\n\");\n            }\n\n            out.println(stringBuilder);\n\n        }\n\n    }\n\n    static class ArrayUtils {\n        public static void shuffle(int[] c) {\n            for (int i = 0; i < c.length; i++) {\n                int x = (new Random().nextInt(c.length));\n                int temp = c[x];\n                c[x] = c[i];\n                c[i] = temp;\n            }\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; ++i) array[i] = nextInt();\n            return array;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void println(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  long long q;\n  cin >> q;\n  ;\n  while (q--) {\n    long long n;\n    cin >> n;\n    long long r;\n    cin >> r;\n    ;\n    long long a[n];\n    for (long long i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a, a + n, greater<long long>());\n    long long res = 1;\n    long long sub = r;\n    long long cur = a[0];\n    for (long long i = 1; i < n; i++) {\n      if (a[i] == cur) {\n        continue;\n      } else {\n        a[i] -= sub;\n        if (a[i] <= 0) {\n          break;\n        } else {\n          res++;\n          cur = a[i] + sub;\n          sub += r;\n        }\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class EDU74B {\n\n\tpublic static void main(String[] args) {\n\t\tJS scan = new JS();\n\t\tint t =scan.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n = scan.nextInt();\n\t\t\tint r = scan.nextInt();\n\t\t\tint[] needed = new int[n];\n\t\t\tInteger[] arr =new Integer[n];\n\t\t\tHashSet<Integer> set = new HashSet<>();\n\t\t\tfor(int i = 0;i<n;i++) {\n\t\t\t\tarr[i] = scan.nextInt();\n\t\t\t\tset.add(arr[i]);\n\t\t\t}\n\t\t\tarr = new Integer[set.size()];\n\t\t\tint count = 0;\n\t\t\tfor(Integer curr:set) {\n\t\t\t\tarr[count] = curr;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tArrays.sort(arr);\n\t\t\tfor(int i = 0;i<set.size();i++) {\n\t\t\t\tneeded[i] = arr[i]/r+1;\n\t\t\t\tif(arr[i]%r==0)needed[i]--;\n\t\t\t}\n\t\t\tint ans = 0;\n\t\t\tfor(int i = 0;i<set.size();i++) {\n\t\t\t\t//always shoot from the end\n\t\t\t\t//compare how many we need to hit after this guy, to how many we have after him\n\t\t\t\tans = Math.max(ans,Math.min(needed[i],set.size()-i));\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t\t\n\t\t}\n\t}\n\tstatic class JS{\n\t\tpublic int BS = 1<<16;\n\t\tpublic char NC = (char)0;\n\t\tbyte[] buf = new byte[BS];\n\t\tint bId = 0, size = 0;\n\t\tchar c = NC;\n\t\tdouble num = 1;\n\t\tBufferedInputStream in;\n \n\t\tpublic JS() {\n\t\t\tin = new BufferedInputStream(System.in, BS);\n\t\t}\n \n\t\tpublic JS(String s) throws FileNotFoundException {\n\t\t\tin = new BufferedInputStream(new FileInputStream(new File(s)), BS);\n\t\t}\n \n\t\tpublic char nextChar(){\n\t\t\twhile(bId==size) {\n\t\t\t\ttry {\n\t\t\t\t\tsize = in.read(buf);\n\t\t\t\t}catch(Exception e) {\n\t\t\t\t\treturn NC;\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif(size==-1)return NC;\n\t\t\t\tbId=0;\n\t\t\t}\n\t\t\treturn (char)buf[bId++];\n\t\t}\n \n\t\tpublic int nextInt() {\n\t\t\treturn (int)nextLong();\n\t\t}\n \n\t\tpublic long nextLong() {\n\t\t\tnum=1;\n\t\t\tboolean neg = false;\n\t\t\tif(c==NC)c=nextChar();\n\t\t\tfor(;(c<'0' || c>'9'); c = nextChar()) {\n\t\t\t\tif(c=='-')neg=true;\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tfor(; c>='0' && c <='9'; c=nextChar()) {\n\t\t\t\tres = (res<<3)+(res<<1)+c-'0';\n\t\t\t\tnum*=10;\n\t\t\t}\n\t\t\treturn neg?-res:res;\n\t\t}\n \n\t\tpublic double nextDouble() {\n\t\t\tdouble cur = nextLong();\n\t\t\treturn c!='.' ? cur:cur+nextLong()/num;\n\t\t}\n \n\t\tpublic String next() {\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\twhile(c<=32)c=nextChar();\n\t\t\twhile(c>32) {\n\t\t\t\tres.append(c);\n\t\t\t\tc=nextChar();\n\t\t\t}\n\t\t\treturn res.toString();\n\t\t}\n \n\t\tpublic String nextLine() {\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\twhile(c<=32)c=nextChar();\n\t\t\twhile(c!='\\n') {\n\t\t\t\tres.append(c);\n\t\t\t\tc=nextChar();\n\t\t\t}\n\t\t\treturn res.toString();\n\t\t}\n \n\t\tpublic boolean hasNext() {\n\t\t\tif(c>32)return true;\n\t\t\twhile(true) {\n\t\t\t\tc=nextChar();\n\t\t\t\tif(c==NC)return false;\n\t\t\t\telse if(c>32)return true;\n\t\t\t}\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def greddy(n, r):\n    distance = 0\n    sum_bombs = 0\n    x = input().split()\n    if n == 1:\n        sum_bombs = 1\n    else:\n\n        x = sorted(set(map(int, x)), reverse=True)\n        for monster in x:\n            if (distance - monster < 0):\n                sum_bombs += 1\n                distance += r\n            else:\n                break\n\n    return sum_bombs\n\n\nq = int(input())\n\nfor _ in range(q):\n    n, r = map(int, input().split())\n    print(greddy(n, r))\n"
        },
        {
            "language": 3,
            "solution": "result = \"\"\nq = int(input())\nfor _ in range(q):\n    n, r = map(int, input().split())\n    p = sorted(set(map(int, input().split())), reverse=True)\n \n    count = 0\n    while count < len(p):\n        if p[count] <= count*r: \n          break\n        count += 1\n    result += str(count) + \"\\n\"\nprint(result)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\n    static class InputReader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    static InputReader r = new InputReader(System.in);\n    static PrintWriter pw = new PrintWriter(System.out);\n\n    public static void main(String[] args) {\n        \n        int q = r.nextInt();\n        for(int t = 1; t <= q; t++){\n            int n = r.nextInt(); int m = r.nextInt();\n            TreeSet<Integer> set = new TreeSet<Integer>();\n            int start = 0;\n            for(int i = 1; i <= n; i++){\n                set.add(r.nextInt());\n            }\n            int ans = 0;\n            while(set.size() > 0){\n                set.remove(set.last());\n                start += m;\n                while(set.size() > 0 && set.first() <= start){\n                    set.remove(set.first());\n                }\n                ans++;\n            }\n            pw.println(ans);\n        }\n        pw.close();\n    }\n}\n\n/**\n*                _        _                 _                                                \n*               | |      | |               | |                                               \n*   ___ ___   __| | ___  | |__  _   _    __| | __ _ _ __ _ __ ___ _ __     _   _  __ _  ___  \n*  / __/ _ \\ / _` |/ _ \\ | '_ \\| | | |  / _` |/ _` | '__| '__/ _ \\ '_ \\   | | | |/ _` |/ _ \\ \n* | (_| (_) | (_| |  __/ | |_) | |_| | | (_| | (_| | |  | | |  __/ | | |  | |_| | (_| | (_) |\n*  \\___\\___/ \\__,_|\\___| |_.__/ \\__, |  \\__,_|\\__,_|_|  |_|  \\___|_| |_|   \\__, |\\__,_|\\___/ \n*                                __/ |                               ______ __/ |            \n*                               |___/                               |______|___/             \n */"
        },
        {
            "language": 1,
            "solution": "q = int(raw_input())\n\ndef solve(n, r, x):\n    acum_push = 0\n    res = 0\n\n    x.sort()\n    x.reverse()\n\n    ant = -1\n\n    for xi in x:\n        if xi == ant:\n            continue\n\n        if xi - acum_push <= 0:\n            break\n\n        ant = xi\n        acum_push += r\n        res += 1\n\n    return res\n\nfor iq in xrange(q):\n    n, r = map(int, raw_input().split())\n    x = map(int, raw_input().split())\n\n    print(solve(n, r, x))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class TestClass{\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint q = Integer.parseInt(br.readLine());\n\t\twhile (q-->0){\n\t\t\tint nr[] = new int[2];\n\t\t\tint i=0;\n\t\t\tfor(String s: br.readLine().split(\" \"))\n\t\t\t\tnr[i++] = Integer.parseInt(s);\n\t\t\tint n = nr[0];\n\t\t\tint r = nr[1];\n\t\t\tHashSet<Integer> set = new HashSet<>();\n\t\t\tfor(String s: br.readLine().split(\" \"))\n\t\t\t\tset.add(Integer.parseInt(s));\n\t\t\tArrayList<Integer> list = new ArrayList<>();\n\t\t\tlist.addAll(set);\n\t\t\tCollections.sort(list,Collections.reverseOrder());\n\t\t//\tSystem.out.println(list);\n\t\t\tint ans =0;\n\t\t\tfor(int d : list)\n\t\t\t{\n\t\t\t\tif(d-ans*r>0)\n\t\t\t\t\tans++;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "def sol(index_list, r):\n    index_list = list(set(index_list))\n    index_list = sorted(index_list)\n    ptr_l = 0\n    ptr_r = len(index_list) - 1\n    padding = 0\n\n    res = 0\n    while ptr_l <= ptr_r:\n        target_idx = index_list[ptr_r]\n        while ptr_l <= ptr_r and target_idx == index_list[ptr_r]:\n            ptr_r -= 1\n\n        padding += r\n\n        while ptr_l <= ptr_r and padding >= index_list[ptr_l]:\n            ptr_l += 1\n\n        res += 1\n    return res\n\n\nt = int(raw_input())\nwhile t > 0:\n    n, r = [int(x) for x in raw_input().split()]\n    index_list = [int(x) for x in raw_input().split()]\n    print sol(index_list, r)\n    t -= 1"
        },
        {
            "language": 3,
            "solution": "import math\nt=int(input())\n\nfor i in range(t):\n    if t==100000:\n        print(1)\n    else:\n        #n=int(input())\n        n,r = map(int, input().strip().split(' '))\n        lst = list(map(int, input().strip().split(' ')))\n        if n==1:\n            print(1)\n        else:\n            lst=list(set(lst))\n            lst.sort(reverse=True)\n            if lst[-1]-(len(lst)-1)*r>0:\n                print(len(lst))\n            else:\n                for j in range(1,len(lst)):\n                    p=lst[j]-j*r\n                    if p<=0:\n                        print(j)\n                        f=1\n                        break\n"
        },
        {
            "language": 4,
            "solution": "/******************************************************************************\n\n                            Online Java Compiler.\n                Code, Compile, Run and Debug java program online.\nWrite your code in this editor and press \"Run\" button to execute it.\n\n*******************************************************************************/\nimport java.util.*;\nimport java.math.*;\n\npublic class Main\n{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\tStringBuilder ans=new StringBuilder(\"\");\n\t\twhile(t-->0)\n\t\t{\n\t\t    int n=sc.nextInt();\n\t\t    int r=sc.nextInt();\n\t\t    ArrayList<Integer> list=new ArrayList();\n\t\t    HashSet<Integer> set=new HashSet();\n\t\t    for(int i=0;i<n;i++)\n\t\t    {\n\t\t        int x=sc.nextInt();\n\t\t        if(!set.contains(x))\n\t\t        {\n\t\t            list.add(x);\n\t\t            set.add(x);\n\t\t        }\n\t\t    }\n\t\t    Collections.sort(list);\n\t\t    int l=list.size();\n\t\t    int tmp=0;\n\t\t    int k=0;\n\t\t    for(int i=l-1;i>=0;i--)\n\t\t    {\n\t\t        if((list.get(i)-tmp)<=0)\n\t\t        break;\n\t\t        k++;\n\t\t        tmp+=r;\n\t\t    }\n\t\t    ans.append(k+\"\\n\");\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 1e9 + 7;\nconst long long mod = 1e9 + 7;\nvector<vector<int> > G(210);\nint color[210];\nint main() {\n  long long q;\n  cin >> q;\n  vector<long long> x;\n  while (q) {\n    q--;\n    long long n, r;\n    cin >> n >> r;\n    vector<long long> x(n);\n    for (int i = (0); i < (n); i++) cin >> x[i];\n    sort((x).rbegin(), (x).rend());\n    long long cnt = r;\n    long long ans = 1;\n    for (int i = (1); i < (n); i++) {\n      if (x[i] == x[i - 1]) {\n        continue;\n      }\n      if (x[i] - cnt > 0) {\n        cnt += r;\n        ans++;\n      } else {\n        break;\n      }\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# 1238B. Kill 'Em All\nimport sys\ninput = sys.stdin.readline\n\n\ndef missile(r: int, A: \"Array[int]\") -> int:\n    n = len(A)\n    for i in range(1, n):\n        if i * r >= A[i]:\n            return i\n    return n\n\n\ndef main():\n    Q = int(input())\n    ans = []\n    for _ in range(Q):\n        N, R = map(int, input().split())\n        X = sorted(set(map(int, input().split())), reverse=1)\n        cnt = missile(R, X)\n        ans.append(cnt)\n    print(\"\\n\".join(map(str, ans)))\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner();\n        int q = sc.nextInt();\n        for (int t = 0; t < q; t++) {\n            int n = sc.nextInt();\n            int r = sc.nextInt();\n \n            PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());\n            Set<Integer> set = new HashSet<>();\n            for (int i = 0; i < n; i++) {\n                int x = sc.nextInt();\n                if (set.add(x)) {\n                    pq.offer(x);\n                }\n            }\n \n            int offset = 0;\n            int ans = 0;\n            while (!pq.isEmpty()) {\n                if (pq.poll()-offset > 0) {\n                    ans++;\n                    offset += r;\n                } else {\n                    break;\n                }\n            }\n \n            System.out.println(ans);\n        }\n    }\n\n\n    private static class FastScanner {\n        private final InputStream in = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            }else{\n                ptr = 0;\n                try {\n                    buflen = in.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n        private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n        public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while(isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while(true){\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                }else if(b == -1 || !isPrintableChar(b)){\n                    return minus ? -n : n;\n                }else{\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n        public double nextDouble() { return Double.parseDouble(next());}\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint q = Integer.parseInt(br.readLine().trim());\n\t\tStringTokenizer st;\n\t\tint n, r, count;\n\t\tTreeSet<Integer> set = new TreeSet<>();\n\t\tfor(int Q = 1; Q <= q; Q++) {\n\t\t\tst = new StringTokenizer(br.readLine().trim());\n\t\t\tn = Integer.parseInt(st.nextToken());\n\t\t\tr = Integer.parseInt(st.nextToken());\n\t\t\tst = new StringTokenizer(br.readLine().trim());\n\t\t\tset.clear();\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tset.add(Integer.parseInt(st.nextToken()));\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\twhile(set.size() != 0) {\n\t\t\t\tif(set.pollLast() <= count * r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif(count == 0) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.lang.*;\n\npublic class c1 {\n    public static FScanner scan;\n    public static PrintWriter out;\n    public static void main(String[] args) {\n        scan=new FScanner();\n        out=new PrintWriter(new BufferedOutputStream(System.out));\n\n//        int t=1;\n        int t=scan.nextInt();\n        while(t-->0) {\n\n            int n=scan.nextInt(),r=scan.nextInt(),pushed=0,pointer=0,shots=0,last;\n            Integer[] a=new Integer[n];\n            for(int c=0;c<n;c++) a[c]=scan.nextInt();\n            Arrays.sort(a,Comparator.reverseOrder());\n\n            last=-1;\n            o: while(pointer<n) {\n                if(a[pointer]-pushed<=0) break;\n                if(a[pointer]==last) {\n                    pointer++;\n                    continue;\n                } pushed+=r;\n                shots++;\n                last=a[pointer];\n                pointer++;\n            } out.println(shots);\n\n        }\n        out.close();\n    }\n\n\n\n    //------------------------------------------------------------------------------------------------------------------\n\n    //scanner\n    public static class FScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class  Main{\n\tpublic static void main(String[] args) throws Exception{\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter pw=new PrintWriter(System.out);\n\t\tint t=Integer.parseInt(br.readLine());\n\t\twhile(t-->0) {\n\t\t\tStringTokenizer st=new StringTokenizer(br.readLine());\n\t\t\tint n=Integer.parseInt(st.nextToken()),r=Integer.parseInt(st.nextToken());\n\t\t\tTreeSet<Integer>in=new TreeSet<Integer>();\n\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tin.add(Integer.parseInt(st.nextToken()));\n\t\t\t}\n\t\t\tint ans=0;\n\t\t\tint shift=0;\n\t\t\twhile(!in.isEmpty()) {\n\t\t\t\tint x=in.pollLast();\n\t\t\t\tif(x-shift<=0)break;\n\t\t\t\tans++;\n\t\t\t\tshift+=r;\n\t\t\t}\n\t\t\tpw.println(ans);\n\t\t}\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n\t\n}"
        },
        {
            "language": 3,
            "solution": "# DEFINING SOME GOOD STUFF\nimport sys\nfrom math import *\nimport threading\nfrom itertools import count\nfrom pprint import pprint\nfrom collections import defaultdict\n'''\n    intialise defaultdict by any kind of value by default you want to take ( int -> 0 | list -> [] )\n'''\nfrom heapq import heapify, heappop, heappush\nsys.setrecursionlimit(300000)\n# threading.stack_size(10**8)\n'''\n-> if you are increasing recursionlimit then remember submitting using python3 rather pypy3\n-> sometimes increasing stack size don't work locally but it will work on CF\n'''\n\nmod = 10 ** 9 + 7\ninf = 10 ** 15\ndecision = ['NO', 'YES']\nyes = 'YES'\nno = 'NO'\n\n# ------------------------------FASTIO----------------------------\nimport os\n\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\n\n# _______________________________________________________________#\n\ndef npr(n, r):\n    return factorial(n) // factorial(n - r) if n >= r else 0\n\n\ndef ncr(n, r):\n    return factorial(n) // (factorial(r) * factorial(n - r)) if n >= r else 0\n\n\ndef lower_bound(li, num):\n    answer = -1\n    start = 0\n    end = len(li) - 1\n\n    while (start <= end):\n        middle = (end + start) // 2\n        if li[middle] >= num:\n            answer = middle\n            end = middle - 1\n        else:\n            start = middle + 1\n    return answer  # min index where x is not less than num\n\n\ndef upper_bound(li, num):\n    answer = -1\n    start = 0\n    end = len(li) - 1\n\n    while (start <= end):\n        middle = (end + start) // 2\n\n        if li[middle] <= num:\n            answer = middle\n            start = middle + 1\n\n        else:\n            end = middle - 1\n    return answer  # max index where x is not greater than num\n\n\ndef abs(x):\n    return x if x >= 0 else -x\n\n\ndef binary_search(li, val):\n    # print(lb, ub, li)\n    ans = -1\n    lb = 0\n    ub = len(li) - 1\n    while (lb <= ub):\n        mid = (lb + ub) // 2\n        # print('mid is',mid, li[mid])\n        if li[mid] > val:\n            ub = mid - 1\n        elif val > li[mid]:\n            lb = mid + 1\n        else:\n            ans = mid  # return index\n            break\n    return ans\n\n\ndef kadane(x):  # maximum sum contiguous subarray\n    sum_so_far = 0\n    current_sum = 0\n    for i in x:\n        current_sum += i\n        if current_sum < 0:\n            current_sum = 0\n        else:\n            sum_so_far = max(sum_so_far, current_sum)\n    return sum_so_far\n\n\ndef pref(li):\n    pref_sum = [0]\n    for i in li:\n        pref_sum.append(pref_sum[-1] + i)\n    return pref_sum\n\n\ndef SieveOfEratosthenes(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    li = []\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n\n    for p in range(2, len(prime)):\n        if prime[p]:\n            li.append(p)\n    return li\n\n\ndef primefactors(n):\n    factors = []\n    while (n % 2 == 0):\n        factors.append(2)\n        n //= 2\n    for i in range(3, int(sqrt(n)) + 1, 2):  # only odd factors left\n        while n % i == 0:\n            factors.append(i)\n            n //= i\n    if n > 2:  # incase of prime\n        factors.append(n)\n    return factors\n\n\ndef prod(li):\n    ans = 1\n    for i in li:\n        ans *= i\n    return ans\n\ndef sumk(a, b):\n    print('called for', a, b)\n    ans = a * (a+1) //2\n    ans -= b * (b+1) // 2\n    return ans\n# _______________________________________________________________#\n\n\n# def main():\nkarmanya = 1\nfor _ in range(int(input()) if karmanya else 1):\n    # n = int(input())\n    n, r = map(int, input().split())\n    # s = [int(x) for x in input()]\n    # a = list(map(int, input().split()))\n    # b = list(map(int, input().split()))\n    # c = list(map(int, input().split()))\n    # d = defaultdict(int())\n    # s1 = (input())\n    # s2 = (input())\n    a = list(set(map(int, input().split())))\n    a.sort()\n    cnt = 0\n    ans = 0\n    n = len(a)\n    for i in range(n-1, -1, -1):\n        if a[i] - cnt*r <= 0:\n            break\n        else:\n            ans += 1\n            cnt += 1\n    print(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# t = threading.Thread(target=main)\n# t.start()\n# t.join()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing iii = int;\nusing yeee = iii;\nconst iii DEBUG = -1;\nusing namespace std;\nusing namespace chrono;\ntemplate <typename T1>\nvoid DOUTf(ostringstream &os, int names_i, vector<string> &names, T1 &&val) {\n  os << names[names_i] << \" = \" << val;\n}\ntemplate <typename T1, typename... Ts>\nvoid DOUTf(ostringstream &os, int names_i, vector<string> &names, T1 &&val,\n           Ts &&...vals) {\n  os << names[names_i] << \" = \" << val << \" | \";\n  DOUTf(os, names_i + 1, names, vals...);\n}\ntemplate <typename... Ts>\nstring DOUTg(string names, Ts &&...vals) {\n  string special = \"()[]{}<>'\\\"\\\\\";\n  vector<string> vnames;\n  vnames.push_back(\"\");\n  vector<char> stak;\n  for (char c : names) {\n    bool inside_string =\n        !stak.empty() && (stak.back() == '\\'' || stak.back() == '\\\"');\n    if (c == '\\n') c = ' ';\n    if (c == ' ' && (vnames.back().empty() ||\n                     (!inside_string && vnames.back().back() == ' ')))\n      continue;\n    if (stak.empty() && c == ',') {\n      if (!vnames.back().empty() && vnames.back().back() == ' ')\n        vnames.back().pop_back();\n      vnames.push_back(\"\");\n      continue;\n    }\n    vnames.back().push_back(c);\n    if (!stak.empty() && stak.back() == '\\\\') {\n      stak.pop_back();\n      continue;\n    }\n    size_t p = special.find(c);\n    bool closing = p < 8 && p % 2;\n    if (p == string::npos) continue;\n    if (p == special.size() - 1) {\n      stak.push_back(c);\n      continue;\n    }\n    if (stak.empty()) {\n      if (!closing) stak.push_back(c);\n      continue;\n    }\n    if (inside_string) {\n      if (c == stak.back()) stak.pop_back();\n      continue;\n    }\n    if (closing) {\n      if (stak.back() == special[p - 1]) stak.pop_back();\n      continue;\n    }\n    stak.push_back(c);\n  }\n  ostringstream os;\n  DOUTf(os, 0, vnames, vals...);\n  return os.str();\n}\ntemplate <template <typename...> class Container, typename T, size_t DIMENSION>\nstruct MultiDimensional {\n  using internal = MultiDimensional<Container, T, DIMENSION - 1>;\n  using type = Container<typename internal::type>;\n  template <typename... Args>\n  static type Generate(T def, const size_t size, Args... sizes) {\n    return type(size, internal::Generate(def, sizes...));\n  }\n};\ntemplate <template <typename...> class Container, typename T>\nstruct MultiDimensional<Container, T, 1> {\n  using internal = T;\n  using type = Container<T>;\n  static type Generate(T def, const size_t size) { return type(size, def); }\n};\ntemplate <typename T, typename... Args>\nauto make_vector(T def, Args... sizes) ->\n    typename MultiDimensional<std::vector, T, sizeof...(sizes)>::type {\n  return MultiDimensional<std::vector, T, sizeof...(sizes)>::Generate(def,\n                                                                      sizes...);\n}\ntemplate <typename T>\nT get() {\n  T x;\n  cin >> x;\n  return x;\n}\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &out, const pair<T1, T2> &cont) {\n  out << \"(\" << cont.first << \", \" << cont.second << \")\";\n  return out;\n}\ntemplate <typename T, typename Alloc>\nostream &operator<<(ostream &out, const vector<T, Alloc> &cont) {\n  for (auto it = cont.begin(); it != cont.end(); ++it)\n    out << (it == cont.begin() ? \"\" : \" \") << *it;\n  return out;\n}\ntemplate <typename T, typename Alloc>\nostream &operator<<(ostream &out, const deque<T, Alloc> &cont) {\n  for (auto it = cont.begin(); it != cont.end(); ++it)\n    out << (it == cont.begin() ? \"\" : \" \") << *it;\n  return out;\n}\ntemplate <typename T, typename Compare, typename Alloc>\nostream &operator<<(ostream &out, const set<T, Compare, Alloc> &cont) {\n  out << \"{\";\n  for (auto it = cont.begin(); it != cont.end(); ++it)\n    out << (it == cont.begin() ? \"\" : \", \") << *it;\n  out << \"}\";\n  return out;\n}\ntemplate <typename T, typename Compare, typename Alloc>\nostream &operator<<(ostream &out, const multiset<T, Compare, Alloc> &cont) {\n  out << \"{\";\n  for (auto it = cont.begin(); it != cont.end(); ++it)\n    out << (it == cont.begin() ? \"\" : \", \") << *it;\n  out << \"}\";\n  return out;\n}\ntemplate <typename Key, typename T, typename Compare, typename Alloc>\nostream &operator<<(ostream &out, const map<Key, T, Compare, Alloc> &cont) {\n  out << \"{\";\n  for (auto it = cont.begin(); it != cont.end(); ++it)\n    out << (it == cont.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  out << \"}\";\n  return out;\n}\ntemplate <typename Key, typename T, typename Compare, typename Alloc>\nostream &operator<<(ostream &out,\n                    const multimap<Key, T, Compare, Alloc> &cont) {\n  out << \"{\";\n  for (auto it = cont.begin(); it != cont.end(); ++it)\n    out << (it == cont.begin() ? \"\" : \", \") << it->first << \":\" << it->second;\n  out << \"}\";\n  return out;\n}\ntemplate <typename T>\nostream &operator<<(ostream &out, vector<vector<T>> cont) {\n  for (auto it = cont.begin(); it != cont.end(); ++it) out << *it << \"\\n\";\n  return out;\n}\nusing ll = long long;\nusing lll = long long;\nusing ull = unsigned long long;\nusing ld = long double;\nusing pll = pair<ll, ll>;\nusing vb = vector<bool>;\nusing vvb = vector<vb>;\nusing vll = vector<ll>;\nusing vvll = vector<vll>;\nusing vpll = vector<pll>;\nusing point = complex<ld>;\nld get_time() {\n  return ld(duration_cast<nanoseconds>(\n                high_resolution_clock::now().time_since_epoch())\n                .count()) /\n         1e9;\n}\nll sign(ld x) { return (x > 0) - (x < 0); }\nll fmod(ll x, ll mod) {\n  if (!mod) return x;\n  if (abs(x) >= mod) x %= mod;\n  if (x < 0) x += mod;\n  return x;\n}\nll pow(ll x, ll exp, ll mod) {\n  ll res = 1, y = x;\n  while (exp) {\n    if (!mod) {\n      if (exp & 1) res = res * y;\n      y = y * y;\n    } else {\n      if (exp & 1) res = fmod(res * y, mod);\n      y = fmod(y * y, mod);\n    }\n    exp >>= 1;\n  }\n  return res;\n}\nld START_TIME = get_time();\nmt19937_64 rand_mt64(chrono::steady_clock::now().time_since_epoch().count());\nmt19937 rand_mt(chrono::steady_clock::now().time_since_epoch().count());\nconst long long INFll = ll(1.1e18) - 1;\nconst int INFi = ll(1.1e9) - 1;\nll INF = sizeof(ll) == sizeof(int) ? ll(INFi) : ll(INFll);\nchar newl = '\\n';\nvoid main_init(string input_file = \"\", string output_file = \"\",\n               bool fast_cio = true) {\n  srand(unsigned(time(0)));\n  if (fast_cio) {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n  }\n  if (DEBUG >= 0 && input_file != \"\") freopen(input_file.c_str(), \"r\", stdin);\n  if (DEBUG >= 0 && output_file != \"\")\n    freopen(output_file.c_str(), \"w\", stdout);\n}\nyeee main() {\n  main_init();\n  ll TC;\n  cin >> TC;\n  while (TC--) {\n    ll N, K;\n    cin >> N >> K;\n    vll V(N);\n    for (ll i = ll(0); i < ll(N); ++i) cin >> V[i];\n    sort((V).begin(), (V).end());\n    ll res = 0;\n    ll last = N - 1;\n    while (last >= 0) {\n      while (last > 0 && V[last - 1] == V[last]) last--;\n      if (V[last] - res * K <= 0) break;\n      res++;\n      last--;\n    }\n    cout << res << newl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\ndef bisearch_min(mn, mx, func):\n    ok = mx\n    ng = mn\n    while ng+1 < ok:\n        mid = (ok+ng) // 2\n        if func(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\ndef calc(m):\n    X2 = X[:len(X)-m]\n    X2[-1] -= r * m\n    return X2[-1] <= 0\n\nfor _ in range(INT()):\n    n, r = MAP()\n    X = sorted(set(LIST()))\n    print(bisearch_min(0, len(X), calc))\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.Closeable;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class KillEmAll implements Closeable {\n\n  private InputReader in = new InputReader(System.in);\n  private PrintWriter out = new PrintWriter(System.out);\n\n  public void solve() {\n    int q = in.ni();\n    while (q-- > 0) {\n      int n = in.ni(), r = in.ni();\n      int max = 0;\n      int[] x = new int[n];\n      Set<Integer> unique = new TreeSet<>();\n      for (int i = 0; i < n; i++) {\n        x[i] = in.ni();\n        if (x[i] > max) {\n          max = x[i];\n        }\n        unique.add(x[i]);\n      }\n      List<Integer> monsters = new ArrayList<>(unique);\n      int kills = 1;\n      for (int i = monsters.size() - 1; i >= 1; i--, kills++) {\n        if (kills * r >= monsters.get(i - 1)) {\n          break;\n        }\n      }\n      out.println(kills);\n    }\n  }\n\n  @Override\n  public void close() throws IOException {\n    in.close();\n    out.close();\n  }\n\n  static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n      reader = new BufferedReader(new InputStreamReader(stream), 32768);\n      tokenizer = null;\n    }\n\n    public String next() {\n      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n        try {\n          tokenizer = new StringTokenizer(reader.readLine());\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return tokenizer.nextToken();\n    }\n\n    public int ni() {\n      return Integer.parseInt(next());\n    }\n\n    public long nl() {\n      return Long.parseLong(next());\n    }\n\n    public void close() throws IOException {\n      reader.close();\n    }\n  }\n\n  public static void main(String[] args) throws IOException {\n    try (KillEmAll instance = new KillEmAll()) {\n      instance.solve();\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "R=lambda:map(int,input().split())\nq,=R()\na=[]\nfor _ in[0]*q:n,r=R();a+=sum(x-k*r>0for\nk,x in enumerate(sorted(set(R()))[::-1])),\nprint(*a)"
        },
        {
            "language": 3,
            "solution": "'''input\n2\n3 2\n1 3 5\n4 1\n5 2 3 5\n'''\nfrom sys import stdin\n\n\n# main starts\nq = int(stdin.readline().strip())\nfor _ in range(q):\n\tn, r = list(map(int, stdin.readline().split()))\n\tmonsters = list(map(int, stdin.readline().split()))\n\tmonsters.sort()\n\tmonsters = list(set(monsters))\n\n\timpact = 0\n\tcount = 0\n\tfor i in range(len(monsters) - 1, -1, -1):\n\t\tif monsters[i] - impact <= 0:\n\t\t\tbreak\n\t\telse:\n\t\t\timpact += r\n\t\t\tcount += 1\n\n\tprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.*;\n \npublic class ProblemB_3 {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int q = in.nextInt();\n        StringBuilder s = new StringBuilder();\n        for(int i = 0; i < q; i++) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n            int[] a = new int[n];\n            for (int j = 0; j < n; j++) {\n                a[j] = in.nextInt();\n            }\n            s.append(new Solver3().solve(n, r, a)).append(\"\\n\");\n        }\n        out.print(s);\n        out.close();\n    }\n}\nclass Solver3 {\n    int solve(int n, int r, int[] a) {\n        TreeSet<Integer> set = new TreeSet<>(Collections.reverseOrder());\n        for (int j = 0; j < n; j++) {\n            set.add(a[j]);\n        }\n        int ans = 0, offset = 0;\n        for(int element : set) {\n            if (element - offset > 0) {\n                ans++;\n                offset += r;\n            } else {\n                break;\n            }\n        }\n        return ans;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\ndef aux():\n    return map(int, input().split())\n\ndef aux_list():\n    b = list(set(list(map(int, input().split()))))\n    b.sort(reverse=True)\n    return b\n\nfor index in range(int(input())):\n    x,y= aux()\n    b = aux_list()\n    x = len(b)\n    result =- 1\n    for index_j in range(x):\n        if b[index_j]%y == 0:\n            p = min(index_j+1, b[index_j]//y)\n        else:\n            p = min(index_j + 1,((b[index_j]//y) + 1))\n        if p > result:\n            result = p\n    print(result)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public char nextChar() {\n            return next().charAt(0);\n        }\n\n        public float nextFloat() {\n            return Float.parseFloat(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] intArray = new int[n];\n            for (int i = 0; i < n; i++) {\n                intArray[i] = nextInt();\n            }\n            return intArray;\n        }\n    }\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Task solver = new Task();\n        int q = in.nextInt();\n        for (int i = 0; i < q; i++) {\n            solver.solve(i + 1, in, out);\n        }\n        out.close();\n    }\n\n    static class Task {\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n            HashSet<Integer> hashSet = new HashSet<>();\n            for (int i = 0; i < n; i++) {\n                hashSet.add(in.nextInt());\n            }\n            int s = hashSet.size();\n            Integer[] positions = new Integer[s];\n            hashSet.toArray(positions);\n            Arrays.sort(positions);\n            int count = 0;\n            for (int i = s - 1; i >= 0; i--) {\n                if (positions[i] - count * r <= 0) {\n                    out.println(count);\n                    return;\n                }\n                count++;\n            }\n            out.println(count);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n\tn, r = map(int, input().split())\n\tx = sorted([*{*map(int, input().split())}])\n\tshift = 0\n\tmissiles = 0\n\tfor i in x[::-1]:\n\t\tif shift >= i:\n\t\t\tbreak\n\t\tmissiles += 1\n\t\tshift += r\n\tprint(missiles)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\npublic class Dominated_Subarray\n{\n\n  public static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n  static class FastReader\n  {\n\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader()\n    {\n      br = new BufferedReader(new\n          InputStreamReader(System.in));\n    }\n\n    String next()\n    {\n      while (st == null || !st.hasMoreElements())\n      {\n        try\n        {\n          st = new StringTokenizer(br.readLine());\n        }\n        catch (IOException  e)\n        {\n          e.printStackTrace();\n        }\n      }\n      return st.nextToken();\n    }\n\n    int nextInt()\n    {\n      return Integer.parseInt(next());\n    }\n\n    long nextLong()\n    {\n      return Long.parseLong(next());\n    }\n\n    double nextDouble()\n    {\n      return Double.parseDouble(next());\n    }\n\n    String[] nextSArray()\n    {\n      String sr[]=null;\n      try {\n         sr=br.readLine().trim().split(\" \");\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n      return sr;\n    }\n\n    String nextLine()\n    {\n      String str = \"\";\n      try\n      {\n        str = br.readLine();\n      }\n      catch (IOException e)\n      {\n        e.printStackTrace();\n      }\n      return str;\n    }\n  }\n//  static int MOD=1000000000+7;\n//  public static void sortbyCol(int arr[][],int col)\n//  {\n//    Arrays.sort(arr,new Comparator<int[]>(){\n//      @Override\n//      public int compare(int[] o1, int[] o2) {\n//        // To sort in descending order revert\n//        // the '>' Operator\n//        if(o1[col]>o2[col])\n//          return 1;\n//        else\n//          return -1;\n//      }\n//    });\n//  }\n\n\n  public static void main (String[] args) throws java.lang.Exception\n  {\n    FastReader sc=new FastReader();\n    int t1=sc.nextInt();\n    StringBuilder rem=new StringBuilder();\n      for(int t=0;t<t1;++t)\n      {\n        String s[]=sc.nextSArray();\n        int n= Integer.parseInt(s[0]);\n        int r= Integer.parseInt(s[1]);\n        s = sc.nextSArray();\n        SortedSet<Integer>sss=new TreeSet<>();\n        ArrayList<Integer>al=new ArrayList<>();\n        for(String ss:s)\n          sss.add(Integer.parseInt(ss));\n        for(Integer k:sss)\n          al.add(k);\n        //System.out.println(al.toString());\n        int n1=al.size(),i;\n        for( i=n1-1;i>=0;--i)\n        {\n          if(al.get(i)-r*(n1-1-i)<=0)\n          {\n            out.println(n1-1-i);\n            break;\n          }\n        }\n        if(i==-1)\n        {\n          out.println(n1);\n        }\n      }\n     out.close();\n    }\n\n\n  }\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\nimport math\n\nq   = int(input())\nans = []\nstart = time.time()\n\nfor i in range(q):\n    (n, r) = (int(j) for j in input().split())\n    x      = [int(j) for j in input().split()]\n    x      = list(set(x))\n    x.sort()\n    p      = [0 for j in range(len(x))]\n    for j in range(len(x)):\n        p[j] = min(math.ceil(x[j]/r), len(x)-j)\n    ans.append(max(p))\n\nfor i in range(q):\n    print(ans[i])\nfinish = time.time()\n#print(finish - start)\n"
        },
        {
            "language": 3,
            "solution": "cases=int(input())\nans=[]\nfor case in range(cases):\n    n,r=map(int,input().split())\n    c=list(map(int,input().split()))\n    if(n==1):\n        ans.append(\"1\")\n        continue\n    else:\n        b={}\n        cnt=0\n        c=sorted(c,reverse=True)\n        for m in c:\n            if(m not in b and m-cnt*r>0):\n                cnt+=1\n                b[m]=True\n        ans.append(str(cnt))\nprint(\"\\n\".join(ans))"
        },
        {
            "language": 4,
            "solution": "/*input\n2\n3 2\n1 3 5\n4 1\n5 2 3 5\n\n*/\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Main\n{\n\tstatic PrintWriter out;\n\tstatic int MOD = 1000000007;\n\tstatic FastReader scan;\n\n    /*-------- I/O usaing short named function ---------*/\n\tpublic static String ns(){return scan.next();}\n\tpublic static int ni(){return scan.nextInt();}\n\tpublic static long nl(){return scan.nextLong();}\n\tpublic static double nd(){return scan.nextDouble();}\n\tpublic static String nln(){return scan.nextLine();}\n\tpublic static void p(Object o){out.print(o);}\n\tpublic static void ps(Object o){out.print(o + \" \");}\n\tpublic static void pn(Object o){out.println(o);}\n    /*-------- for output of an array ---------------------*/\n     static void iPA(int arr []){\n     \t StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void lPA(long arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void sPA(String arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n\tstatic void dPA(double arr []){\n\t     StringBuilder output = new StringBuilder();\n\t     for(int i=0; i<arr.length; i++)output.append(arr[i] + \" \");out.println(output);\n\t}\n    /*-------------- for input in an array ---------------------*/\n\tstatic void iIA(int arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = ni();\n\t}\n\tstatic void lIA(long arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = nl(); \n\t}\n\tstatic void sIA(String arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = ns(); \n\t}\n\tstatic void dIA(double arr[]){\n\t     for(int i=0; i<arr.length; i++)arr[i] = nd();\n\t}\n\t/*------------ for taking input faster ----------------*/\n     static class FastReader\n\t{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader()\n\t\t{\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next()\n\t\t{\n\t\t\twhile (st == null || !st.hasMoreElements())\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt()\n\t\t{\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong()\n\t\t{\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble()\n\t\t{\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine()\n\t\t{\n\t\t\tString str = \"\";\n\t\t\ttry\n\t\t\t{\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\t// Method to check if x is power of 2\n    static boolean isPowerOfTwo (int x) { return x!=0 && ((x&(x-1)) == 0);}\n    //Method to return gcd of two numbers\n    static int gcd(int a, int b){return a==0?b:gcd(b % a, a); }\n    //Method to count digit of a number\n    static int countDigit(long n){return (int)Math.floor(Math.log10(n) + 1);}\n\n    //Method for sorting\n\tstatic void sort(int[] a) {\n\t\tArrayList<Integer> l=new ArrayList<>();\n\t\tfor (int i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\n\t//Method for sorting\n\tstatic void sort(long[] a) {\n\t\tArrayList<Long> l=new ArrayList<>();\n\t\tfor (long i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\n\t//Method foAr checking if a number is prime or not\n\tstatic boolean isPrime(int n) { \n        if (n <= 1) return false; \n        if (n <= 3) return true; \n        if (n % 2 == 0 || n % 3 == 0) return false; \n        for (int i = 5; i * i <= n; i = i + 6) \n            if (n % i == 0 || n % (i + 2) == 0) \n            \treturn false; \n        return true; \n    } \n\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tOutputStream outputStream =System.out;\n        out =new PrintWriter(outputStream);\n        scan =new FastReader();\n\t\t//for fast output sometimes\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint t = ni();\n\t\twhile(t-->0){\n\t\t\tint n = ni(), r = ni();\n\t\t\tlong x[] = new long[n];\n\n\t\t\tlIA(x);\n\t\t\tsort(x);\n\t\t\tHashSet<Long> hash = new HashSet<>();\n\n\t\t\tlong curr = 0, count = 0;\n\t\t\tfor(int i=n-1; i>=0; i--){\n\t\t\t\tif(hash.contains(x[i])){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong pos = x[i] - curr;\n\t\t\t\tif(pos > 0){\n\t\t\t\t\tcount++;\n\t\t\t\t\tcurr += r;\n\t\t\t\t\thash.add(x[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpn(count);\n        }\n        out.flush();\n\t\tout.close();\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int Q = in.nextInt();\n            while (Q-- > 0) {\n                int N = in.nextInt(), r = in.nextInt();\n                Integer a[] = in.nextIntArray(N);\n                Arrays.sort(a);\n                int ans = 0, lastSeen = Constants.INT_INFINITY;\n                for (int i = N - 1; i >= 0; i--) {\n                    if (a[i] - ans * r <= 0 || a[i] >= lastSeen) {\n                        continue;\n                    }\n                    lastSeen = a[i];\n                    ans++;\n                }\n                out.printLine(ans);\n            }\n        }\n\n    }\n\n    static class OutputWriter {\n        PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n\n    static class InputReader {\n        BufferedReader in;\n        StringTokenizer tokenizer = null;\n\n        public InputReader(InputStream inputStream) {\n            in = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        public String next() {\n            try {\n                while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                    tokenizer = new StringTokenizer(in.readLine());\n                }\n                return tokenizer.nextToken();\n            } catch (IOException e) {\n                return null;\n            }\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public Integer[] nextIntArray(int size) {\n            Integer array[] = new Integer[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = nextInt();\n            }\n            return array;\n        }\n\n    }\n\n    static class Constants {\n        public static final Integer INT_INFINITY = (int) 2e9;\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import deque\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n, r = list(map(int, input()[:-1].split()))\n    arr = list(sorted(list(map(int, input()[:-1].split()))))\n    deq = deque(arr)\n\n    ans = 0\n    rnow = 0\n\n    while len(deq) > 0:\n        x = deq.pop()\n        while len(deq) > 0 and deq[-1] == x:\n            deq.pop()\n        rnow += r\n        while len(deq) > 0 and deq[0] <= rnow:\n            deq.popleft()\n        ans+=1\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        FastReader scan = new FastReader();\n        PrintWriter out = new PrintWriter(System.out);\n        Task solver = new Task();\n        int t = scan.nextInt();\n        while (t --> 0) solver.solve(1, scan, out);\n        out.close();\n    }\n\n    static class Task {\n\n        public void solve(int testNumber, FastReader scan, PrintWriter out) {\n            int n = scan.nextInt();\n            long r = scan.nextInt();\n            int[] a = new int[n];\n            for(int i = 0; i < n; i++) a[i] = scan.nextInt();\n            shuffle(a);\n            Arrays.sort(a);\n            int ans = 0;\n            for(int j = n-1; j >= 0; j--) {\n                if(j < n-1 && a[j] == a[j+1]) continue;\n                if(a[j] - r*ans <= 0) break;\n                ans++;\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static void shuffle(int[] a) {\n        Random get = new Random();\n        for (int i = 0; i < a.length; i++) {\n            int r = get.nextInt(a.length);\n            int temp = a[i];\n            a[i] = a[r];\n            a[r] = temp;\n        }\n    }\n\n    static void shuffle(long[] a) {\n        Random get = new Random();\n        for (int i = 0; i < a.length; i++) {\n            int r = get.nextInt(a.length);\n            long temp = a[i];\n            a[i] = a[r];\n            a[r] = temp;\n        }\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public FastReader(String s) throws FileNotFoundException {\n            br = new BufferedReader(new FileReader(new File(s)));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.OutputStreamWriter;\nimport java.util.Iterator;\nimport java.util.TreeSet;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class KillThemAll {\n    public static void main(String[] args) {\n        FastReader reader = new FastReader();\n        BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out));\n        int q;\n        try {\n            q = reader.nextInt();\n            for (int i = 0; i < q; i++) {\n                int n, r;\n                n = reader.nextInt();\n                r = reader.nextInt();\n                int pos[] = new int[n];\n                for (int j = 0; j < n; j++) {\n                    pos[j] = reader.nextInt();\n                }\n                TreeSet<Integer> positions = new TreeSet<>();\n                for (int j = 0; j < n; j++) {\n                    positions.add(pos[j]);\n                }\n                int origin = 0;\n                int hits = 0;\n                Iterator<Integer> itr = positions.descendingIterator();\n                while (itr.hasNext()) {\n                    int monster = itr.next();\n                    if (origin >= monster) {\n                        break;\n                    }\n                    hits++;\n                    origin += r;\n                }\n                log.write(hits + \"\\n\");\n                log.flush();\n            }\n            log.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    \n    public static class FastReader {\n        BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    public String next() {\n        while (st == null || !st.hasMoreTokens()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nint q;\nint n, r;\nint a[maxn];\nint main() {\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    sort(a + 1, a + 1 + n);\n    int mx = unique(a + 1, a + 1 + n) - a - 1;\n    int cnt = 0, ad = 0;\n    for (int i = mx; i >= 1; i--) {\n      if (a[i] - ad > 0) {\n        cnt++;\n        ad += r;\n      } else\n        break;\n    }\n    cout << cnt << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# coding: utf-8\nq = int(input())\nresponse = []\nwhile q > 0:\n  n, r = map(int, input().split())\n  monsters = sorted(set(map(int, input().split())))\n  # print(monsters)\n  c = 0\n  while len(monsters) != 0 and monsters[-1] > r * c:\n    monsters.pop()\n    c += 1\n\n  response.append(c)\n  q -= 1\n\nfor r in response:\n  print(r)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Collections;\nimport java.util.LinkedList;\n\n/**\n * Created by himanshubhardwaj on 08/10/19.\n */\npublic class B {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(br.readLine());\n        PrintWriter pw = new PrintWriter(System.out);\n\n\n        while (t-- > 0) {\n            String str[] = br.readLine().split(\" \");\n            int n = Integer.parseInt(str[0]);\n            int r = Integer.parseInt(str[1]);\n\n            str = br.readLine().split(\" \");\n            LinkedList<Integer> linkedList = new LinkedList<>();\n\n            for (int i = 0; i < str.length; i++) {\n                linkedList.addLast(Integer.parseInt(str[i]));\n            }\n            Collections.sort(linkedList);\n\n            int result = getResult(r, linkedList);\n            pw.append(result + \"\\n\");\n        }\n        pw.flush();\n\n    }\n\n    private static int getResult(int r, LinkedList<Integer> linkedList) {\n        int distanceCovered = 0;\n        int numberBlast = 0;\n\n        while (!linkedList.isEmpty()) {\n            numberBlast++;\n            int lastPosition = linkedList.getLast();\n            while (!linkedList.isEmpty() && (linkedList.getLast() == lastPosition)) {\n                linkedList.removeLast();\n            }\n            distanceCovered += r;\n\n            while (!linkedList.isEmpty() && ((linkedList.getFirst() - distanceCovered) <= 0)) {\n                linkedList.removeFirst();\n            }\n        }\n\n\n        return numberBlast;\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nq = int(stdin.readline())\nwhile q > 0:\n    n, r = tuple(map(int, stdin.readline().split()))\n    a = list(map(int, stdin.readline().split()))\n    a.sort()\n    left = 0\n    right = n-1\n    ans = 0\n    dis = 0\n    while left <= right:\n        ans += 1\n        monster = a[right]\n        while right >= 0 and a[right] == monster:\n            right -= 1\n        dis += r\n        while left < n and dis >= a[left]:\n            left += 1\n    stdout.write(str(ans) + \"\\n\")\n    q -= 1\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.util.Set;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.TreeSet;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author binrodon\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int q = in.nextInt();\n            while (q-- > 0) {\n                int n = in.nextInt();\n                int impact = in.nextInt();\n\n                Set<Integer> set = new TreeSet<>();\n                for (int i = 0; i < n; i++) {\n                    set.add(in.nextInt());\n                }\n\n                Integer arr[] = set.toArray(new Integer[set.size()]);\n\n                int res = 1;\n                for (int i = arr.length - 2; i >= 0; i--) {\n                    if (arr[i] > impact * res) {\n                        res++;\n                    }\n                }\n\n                out.println(res);\n            }\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void println(int i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 1,
            "solution": "\ns=\"\"\nfor _ in \" \"*int(raw_input()):\n  n,r=map(int,raw_input().split())\n  a=sorted(set(map(int,raw_input().split())))[::-1]\n  cnt=0\n  for i in a:\n    if i<=cnt*r:\n      break\n    cnt+=1\n  s+=str(cnt)+'\\n'\nprint s"
        },
        {
            "language": 3,
            "solution": "q = int(input())\nans = []\nfor i in range(q):\n    n, r = [int(x) for x in input().split()]\n    xs = sorted(set([int(x) for x in input().split()]), reverse=True)\n    j = 0\n    for x in xs:\n        if j*r >= x:\n            break\n        j += 1\n    ans.append(j)\nprint(*ans, sep=\"\\n\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300007];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    for (auto i = (1); i <= (n); ++i) scanf(\"%d\", &a[i]);\n    sort(a + 1, a + n + 1);\n    int cur = 0, ans = 0;\n    a[n + 1] = 0;\n    for (auto i = (n); i >= (1); --i) {\n      if (a[i] == a[i + 1]) continue;\n      if (a[i] - cur > 0) {\n        cur += r;\n        ++ans;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n#Educational Codeforces Round 74 B\n\nimport sys\nimport math\nfrom bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nsys.setrecursionlimit(1000000)\nfrom heapq import heappush, heappop,heappushpop\nfrom collections import defaultdict\nfrom itertools import accumulate\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\nfrom itertools import permutations\nmod = 10**9 + 7\ninf = float('inf')\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\n\nq = I()\nfor _ in range(q):\n    n,r = LI()\n    x = LI()\n    c = list(Counter(x).items())\n    c.sort(key = itemgetter(0),reverse = True)\n    ans = 0\n    for i,_ in c:\n        if i - ans*r > 0:\n            ans += 1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "## necessary imports\nimport sys\ninput = sys.stdin.readline\nfrom math import log2, log, ceil\n\n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp\n\n## gcd function\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n    if(k > n - k): \n        k = n - k \n    res = 1\n    for i in range(k): \n        res = res * (n - i) \n        res = res / (i + 1) \n    return res \n\n## upper bound function code -- such that e in a[:i] e < x;\ndef upper_bound(a, x, lo=0):\n    hi = len(a)\n    while lo < hi:\n        mid = (lo+hi)//2\n        if a[mid] < x:\n            lo = mid+1\n        else:\n            hi = mid\n    return lo\n\n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n\n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n\n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b\n\n# find function\ndef find(x, link):\n    while(x != link[x]):\n        x = link[x]\n    return x\n\n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, size, link):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n\n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    return prime\n\n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e6 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n\n################## un-comment below 2 lines when using factorization #################\n# spf = [0 for i in range(MAXN)] \n# spf_sieve() \ndef factoriazation(x):\n    ret = {};\n    while x != 1:\n        ret[spf[x]] = ret.get(spf[x], 0) + 1;\n        x = x//spf[x]\n    return ret\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()))\n## taking string array input\ndef str_array():\n    return input().strip().split();\n\n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n\n\n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n\nfor _ in range(int(input())):\n    n, r = int_array(); x = sorted(list(set(int_array()))); ans = 0;\n    while(x):\n        if x[-1] - ans*r > 0:\n            ans += 1; x.pop();\n        else:\n            break;\n    print(ans);"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.List;\n\npublic class Main {\n\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tprivate static final long MOD = 1000000007L;\n\n\tvoid solve() {\n\t\tStringBuffer sb = new StringBuffer();\n\n\t\tint T = ni();\n\t\twhile (T-- > 0) {\n\t\t\tint N = ni();\n\t\t\tlong K = ni();\n\t\t\tInteger[] a = na2(N);\n\t\t\tArrays.sort(a);\n\t\t\tint ans = 0;\n\n\t\t\tfor (int i = N - 1; i >= 0 && a[i] > K * ans; i--) {\n\t\t\t\tans++;\n\t\t\t\twhile (i > 0 && a[i].equals(a[i - 1]))\n\t\t\t\t\ti--;\n\t\t\t}\n\t\t\tsb.append(ans).append(System.lineSeparator());\n\t\t}\n\n\t\tout.print(sb);\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate Integer[] na2(int n) {\n\t\tInteger[] a = new Integer[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.Comparator;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Dhruv\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BKillEmAll solver = new BKillEmAll();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BKillEmAll {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int q = in.nextInt();\n            for (int i = 0; i < q; i++) {\n                int n = in.nextInt();\n                int r = in.nextInt();\n                Integer[] arr = in.nextIntegerArray(n);\n\n                Arrays.sort(arr, Comparator.reverseOrder());\n\n                int push = 0;\n                int ans = 0;\n                int prev = 0;\n                for (int j = 0; j < n; j++) {\n                    if (prev == arr[j]) {\n                        continue;\n                    } else if (arr[j] - push > 0) {\n                        prev = arr[j];\n                        push += r;\n                        ans++;\n                    } else {\n                        break;\n                    }\n                }\n                out.println(ans);\n            }\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public Integer[] nextIntegerArray(int n) {\n            Integer[] array = new Integer[n];\n            for (int i = 0; i < n; ++i) array[i] = nextInt();\n            return array;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool cmp(int a, int b) { return a > b; }\nint a[100010];\nint vis[100010];\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    int b = 0;\n    for (int i = 0; i < n; i++) {\n      int x;\n      scanf(\"%d\", &x);\n      if (vis[x] == 0) {\n        vis[x] = 1;\n        a[b] = x;\n        ++b;\n      }\n    }\n    sort(a, a + b, cmp);\n    int ans = 0;\n    for (int j = 1; j < b; j++) {\n      if (a[j] - j * r <= 0) {\n        ans = j;\n        break;\n      }\n    }\n    if (ans == 0) ans = b;\n    printf(\"%d\\n\", ans);\n    for (int i = 0; i < b; i++) vis[a[i]] = 0;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long arr[100005];\nlong long num[100005];\nlong long vis[100005];\nlong long B = 100000;\nvector<long long> st;\nint main() {\n  long long q, i, j, k, a, b, c, n, r, l;\n  bool flag;\n  scanf(\"%lld\", &q);\n  for (i = 1; i <= q; i++) {\n    while (st.size()) st.pop_back();\n    scanf(\"%lld%lld\", &n, &r);\n    for (j = 1; j <= n; j++) {\n      scanf(\"%lld\", &arr[j]);\n      num[arr[j]]++;\n      if (vis[arr[j]] == 0) {\n        vis[arr[j]] = 1;\n        st.push_back(arr[j]);\n      }\n    }\n    for (j = 1; j <= n; j++) {\n      vis[arr[j]] = 0;\n    }\n    sort(st.begin(), st.end());\n    l = st.size();\n    if (l == 1) {\n      printf(\"1\\n\");\n      for (j = 1; j <= n; j++) num[arr[j]] = 0;\n      continue;\n    }\n    flag = false;\n    for (j = 1; j < l; j++) {\n      if (st[l - 1 - j] - r * j <= 0) {\n        printf(\"%lld\\n\", j);\n        flag = true;\n        break;\n      }\n    }\n    if (!flag) printf(\"%lld\\n\", l);\n    for (j = 1; j <= n; j++) num[arr[j]] = 0;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*; \n public class B{\nstatic int[] dx={-1,1,0,0};\nstatic int[] dy={0,0,1,-1};\n    static FastReader scan=new FastReader();\n   public static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\n  static ArrayList<Pair>es;\n  static LinkedList<Integer>edges[];\n   static boolean prime[];\n   static void sieve(int n) \n    { \n        \n        prime = new boolean[n+1]; \n        for(int i=0;i<n;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=n; p++) \n        { \n           \n            if(prime[p] == true) \n            { \n                \n                for(int i = p*p; i <= n; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        \n    }      \n     public static int lowerBound(long[] array, int length, long value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = (low + high) / 2;\n            //checks if the value is less than middle element of the array\n            if (value <= array[mid]) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static int upperBound(long[] array, int length, long value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = low+(high-low) / 2;\n            if ( array[mid]>value) {\n                high = mid ;\n            } else {\n                low = mid+1;\n            }\n        }\n        return low;\n    }\nstatic long mod(long x,long y)\n    {\n        if(x<0)\n            x=x+(-x/y+1)*y;\n        return x%y;\n    }    \n    static boolean isPowerOfTwo(int n)\n{\n    if(n==0)\n    return false;\n \nreturn (int)(Math.ceil((Math.log(n) / Math.log(2)))) == \n       (int)(Math.floor(((Math.log(n) / Math.log(2)))));\n}\n\n  \n   \nstatic boolean isprime(long x)\n           {\n            for(long i=2;i*i<=x;i++)\n                if(x%i==0)\n                    return false;\n                return true;\n           }\nstatic boolean vis[];\n\nstatic int dist(int x1,int y1,int x2,int y2){\nreturn Math.abs(x1-x2)+Math.abs(y1-y2);\n}\n\n\n    static long cuberoot(long x)\n    {\n        long lo = 0, hi = 1000005;\n        while(lo<hi)\n        {\n            long m = (lo+hi+1)/2;\n            if(m*m*m>x)\n                hi = m-1;\n            else\n                lo = m;\n        }\n        return lo;\n    }\n     public static int log2(int N) \n    { \n  \n        // calculate log2 N indirectly \n        // using log() method \n        int result = (int)(Math.log(N) / Math.log(2)); \n  \n        return result; \n    } \n  \n    \n   \n       static int gcd(int a, int b) {\n    if(a!=0&&b!=0)\n        while((a%=b)!=0&&(b%=a)!=0);\n    return a^b;\n}\n    static int LCM(int a,int b){\n    return (Math.abs(a*b))/gcd(a,b);\n   }\n   public static class comp1 implements Comparator<Integer>{  \npublic int compare(Integer o1,Integer o2){\nreturn Math.abs(o1)-Math.abs(o2);\n}\n  }\n  static int n,k;\n  static int arr[];\n  static boolean ok(int x)\n{\n    int cnt=0;\n    for(int i=0;i<n;i++)\n    {\n        if(arr[i]<=x)\n            cnt++;\n        \n    }\n    if(cnt==k)\n        return true;\n    else return false;\n}\nstatic boolean isSubSequence(String str1,  \n                    String str2, int m, int n) \n    { \n        int j = 0; \n          \n        // Traverse str2 and str1, and compare  \n        // current character of str2 with first \n        // unmatched char of str1, if matched  \n        // then move ahead in str1 \n        for (int i = 0; i < n && j < m; i++) \n            if (str1.charAt(j) == str2.charAt(i)) \n                j++; \n  \n        // If all characters of str1 were found \n        // in str2 \n        return (j == m);  \n    } \npublic static void main(String[] args)  throws Exception \n{\n//java.util.Scanner scan=new java.util.Scanner(new File(\"mootube.in\"));\n //PrintWriter out = new PrintWriter (new FileWriter(\"mootube.out\"));\n //scan=new FastReader(\"input.txt\");\n //out = new PrintWriter (\"output.txt\");\n //System.out.println(~-1);\n//System.out.println(2<<5);\n    //System.out.println(0^1023);\n//System.out.println(gcd(672,840));\n\n  int tt=1;\ntt=scan.nextInt();\n outer:while(tt-->0)\n {\n    int n=scan.nextInt();\n    long r=scan.nextLong();\n    long arr[]=new long[n];\n    Set<Long>set=new HashSet<Long>();\n    for(int i=0;i<n;i++){\n        long a=scan.nextLong();\n       // arr[i]=scan.nextLong();\n        set.add(a);\n    }\n    int k=0;\n    for(long l:set)\n        arr[k++]=l;\n    Arrays.sort(arr);\n    long res=0;\n     k=0;\n    for(int i=n-1;i>=0;i--)\n        {\n            if(arr[i]>r*k)\n                res++;\n            k++;\n        }\n        out.println(res);\n}\nout.close();\n    \n}\nstatic long binexp(long a,long n,long mod)\n{\n    if(n==0)\n        return 1;\n    long res=binexp(a,n/2,mod)%mod;\n    res=res*res;\n    if(n%2==1)\n        return (res*a)%mod;\n    else \n        return res%mod;\n}\nstatic class special implements Comparable<special>{\n    int x;\n    char id;\n    special(int x,char id)\n    {\n        this.id=id;\n       this.x=x;\n    }\n    public int compareTo(special o)\n    {\n        \n        return x-o.x;\n    }\n   \n}\n public static  long pow(long b, long e) {\n            long r = 1;\n            while (e > 0) {\n                if (e % 2 == 1) r = r * b ;\n                b = b * b;\n                e >>= 1;\n            }\n            return r;\n        }\n\nprivate static void sort(int[] arr) {\n        List<Integer> list = new ArrayList<>();\n        for (int object : arr) list.add(object);\n        Collections.sort(list);\n        for (int i = 0; i < list.size(); ++i) arr[i] = list.get(i);\n    }\n public static class FastReader {\n        BufferedReader br;\n        StringTokenizer root;\n        \n \n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        FastReader(String filename)throws Exception\n        {\n\n            br=new BufferedReader(new FileReader(filename));\n        }\n \n        String next() {\n            while (root == null || !root.hasMoreTokens()) {\n                try {\n                    root = new StringTokenizer(br.readLine());\n                } catch (Exception addd) {\n                    addd.printStackTrace();\n                }\n            }\n            return root.nextToken();\n        }\n \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n \n        long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (Exception addd) {\n                addd.printStackTrace();\n            }\n            return str;\n        }\n         public int[] nextIntArray(int arraySize) {\n            int array[] = new int[arraySize];\n \n            for (int i = 0; i < arraySize; i++) {\n                array[i] = nextInt();\n            }\n \n            return array;\n        }\n}\npublic static class Pair implements Comparable<Pair>{\n         int x;\n         int y;\n        \n        int id;\n        public Pair(){}\n        public Pair(int x1, int y1,int id) {\n            x=x1;\n            y=y1;\n            this.id=id;\n        }\n        public Pair(int x1, int y1) {\n            x=x1;\n            y=y1;\n        \n        }\n        @Override\n        public int hashCode() {\n            return (int)(x + 31 * y);\n        }\n        public String toString() {\n            return x + \" \" + y;\n        }\n        @Override\n        public boolean equals(Object o){\n            if (o == this) return true;\n            if (o.getClass() != getClass()) return false;\n            Pair t = (Pair)o;\n            return t.x == x && t.y == y;\n        }\n        public  int compareTo(Pair o)\n        {\n            if(x==o.x)\n                return y-o.y;\n        return x-o.x;\n        }\n}\n\n}\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.TreeSet;\n\npublic class B {\n    static class Reader {\n        final private int BUFFER_SIZE = 32;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n\n    public static void main(String args[]) throws IOException {\n        Reader in = new Reader();\n\n        int q = in.nextInt();\n\n        for (int i = 0; i < q; ++i) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n            TreeSet<Integer> set = new TreeSet<>();\n\n            for (int j = 0; j < n; ++j) {\n                set.add(in.nextInt());\n            }\n            n = set.size();\n            Integer arr[] = set.toArray(new Integer[0]);\n            if (n == 1) {\n                System.out.println(1);\n                continue;\n            }\n\n            int high = n;\n            int low = 0;\n            int j = (high + low) / 2;\n            while (high - low > 1) {\n                if (arr[j] - r * (n - 1 - j) <= 0) {\n                    low = j;\n                } else {\n                    high = j;\n                }\n                j = (high + low) / 2;\n            }\n            if (arr[j] - r * (n - 1 - j) <= 0)\n                System.out.println(n - 1 - j);\n            else\n                System.out.println(n);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\n \nfor _ in range(q):\n    n,r = map(int,input().split())\n    x = list(map(int,input().split()))\n \n    x.sort()\n    seen = set()\n    res = []\n    for v in x:\n        if not v in seen:\n            res.append(v)\n            seen.add(v)\n    x=res\n    modif = 0\n    curr = len(x)-1\n    i = 0\n \n    while curr >= 0:\n        vallast = x[curr]\n        if modif >= vallast:\n            break\n        modif += r\n        #print(' dsfdfdsds ', modif, vallast)\n        i += 1\n        curr -= 1\n \n    print(i)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nans = \"\"\n\nfor _ in range(t):\n  n, r = map(int, input().split())\n  m = sorted(set(map(int, input().split())), reverse=True)\n  count = 0\n \n  for i in m:\n    if i <= count * r:\n      break\n    count += 1\n\n  ans += str(count) + \"\\n\"\n \nprint(ans)"
        },
        {
            "language": 1,
            "solution": "for _ in range(input()):\n    n,r=map(int,raw_input().split())\n    x=map(int,raw_input().split())\n    x.sort(reverse=True)\n    c=1\n    for i in range(1,n):\n        if x[i]!=x[i-1]:\n            if x[i]-c*r<=0:\n                break\n            c+=1\n    print c"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint maxint = numeric_limits<int>::max();\nbool sortbysec(const pair<int, int>& a, const pair<int, int>& b) {\n  return (a.second < b.second);\n}\nlong long bino(int n, int m) {\n  long long j = 1;\n  for (int i = 0; i < m; i++) j = j * (n - i) / (i + 1);\n  return j;\n}\nlong long int fast_power(long long int a, long long int x) {\n  if (x == 0)\n    return 1;\n  else if (x == 1)\n    return a;\n  else {\n    long long int R = fast_power(a, x >> 1);\n    if (!(x & 1))\n      return R * R;\n    else\n      return R * a * R;\n  }\n}\nbool cmp(pair<char, long long int>& a, pair<char, long long int>& b) {\n  return a.second > b.second;\n}\nlong double distance1(long long int x1, long long int y1, long long int x2,\n                      long long int y2) {\n  return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2) * 1.0);\n}\nconst int N = 1e6 + 5;\nlong long int binpow(long long int a, long long int b) {\n  long long int res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a;\n    a = a * a;\n    b >>= 1;\n  }\n  return res;\n}\nlong long int gcd(long long int a, long long int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nvoid solve() {\n  long long int n, c = 0, m, x = 0;\n  cin >> n >> m;\n  long long int a[n];\n  for (long long int i = 0; i < n; i++) cin >> a[i];\n  sort(a, a + n);\n  reverse(a, a + n);\n  map<long long int, long long int> ma;\n  for (long long int i = 0; i < n; i++) {\n    if (ma[a[i]] == 0 && a[i] - x > 0) {\n      ma[a[i]]++;\n      x += m;\n      c++;\n    } else if (a[i] - x <= 0) {\n      break;\n    }\n  }\n  cout << c << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  long long int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfor _ in range(int(input())):\n n,r=map(int,input().split())\n arr=list(map(int,input().split()));\n arr=list(set(arr))\n arr.sort(reverse = True)\n d=0;ans=0\n for i in range(len(arr)):\n   if arr[i]<=d:break\n   else:ans+=1;d+=r;\n print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 1e18;\nconst long long mod = 1e9 + 7;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  long long q;\n  cin >> q;\n  ;\n  for (long long i = (1); i <= (q); i++) {\n    long long n;\n    cin >> n;\n    ;\n    long long r;\n    cin >> r;\n    ;\n    set<long long, greater<long long>> s;\n    for (long long i = (1); i <= (n); i++) {\n      long long x;\n      cin >> x;\n      ;\n      s.insert(x);\n    }\n    long long k = 0, st = 0;\n    for (long long j : s) {\n      if (j - r * k <= 0) {\n        cout << k << '\\n';\n        st = 1;\n        break;\n      }\n      k++;\n    }\n    if (!st) cout << k << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    int ans = 0;\n    vector<int> v(n);\n    for (int i = 0; i < n; i++) cin >> v[i];\n    sort(v.begin(), v.end());\n    v.resize(unique(v.begin(), v.end()) - v.begin());\n    n = v.size();\n    for (int i = n - 1; i >= 0; i--) {\n      if (v[i] - r * (n - 1 - i) <= 0) break;\n      ans++;\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\npublic class Reader_ {\n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader()\n        {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException\n        {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String nextLine() throws IOException\n        {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1)\n            {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int ni() throws IOException\n        {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do\n            {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nl() throws IOException\n        {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nd() throws IOException\n        {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.')\n            {\n                while ((c = read()) >= '0' && c <= '9')\n                {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException\n        {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException\n        {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException\n        {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n    public static void main(String[] args) throws IOException {\n        new Thread(null,null,\"BaZ\",1<<25)\n        {\n            public void run()\n            {\n                try\n                {\n                    solve();\n                }\n                catch(Exception e)\n                {\n                    e.printStackTrace();\n                    System.exit(1);\n                }\n            }\n        }.start();\n    }\n    static long modPow(long x,long p,long m) {\n        if(p==0)\n            return 1;\n        if(p%2==0)\n            return modPow((x*x)%m,p>>1,m)%m;\n        return x*(modPow(x,p-1,m)%m)%m;\n    }\n    static long mul(long a,long b,long m) {\n        a%=m;\n        b%=m;\n        return (a*b)%m;\n    }\n    \n    //global variable\n    static Reader sc = new Reader();\n    static StringBuilder sb = new StringBuilder();\n    static PrintWriter pw = new PrintWriter(System.out,true);\n    static void solve() throws IOException {\n        int q= sc.ni();\n        while(q-->0) {\n            int n = sc.ni(),r = sc.ni();\n            Integer arr[]= new Integer[n];\n            for(int i =0;i<n;i++)\n                arr[i]= sc.ni();\n            Arrays.sort(arr);\n            int dec=0,count=0,i = n-1;\n            while(i>=0) {\n                while(i>0 && arr[i-1].equals(arr[i]))\n                    i--;\n                if(dec>=arr[i])\n                    break;\n                dec+=r;\n                i--;\n                count++;\n                //System.out.println(\"arr[i]= \"+arr[i]+\" i= \"+i+\" dec= \"+dec);\n            }\n            sb.append(count+\"\\n\");\n        }\n        pw.println(sb);\n        pw.flush();\n        pw.close();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int MaxN = 100005;\nint n, r, x[MaxN];\nint solve() {\n  int result = n;\n  for (int i = n - 1, cur = 1; i >= 0; cur++, i--) {\n    while (i > 0 && x[i] == x[i - 1]) {\n      i--;\n    }\n    if (i == 0) {\n      result = std::min(result, cur);\n      break;\n    }\n    result = std::min(result, std::max((x[i - 1] + r - 1) / r, cur));\n  }\n  return result;\n}\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int cas = 1; cas <= T; cas++) {\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &x[i]);\n    }\n    std::sort(x, x + n);\n    printf(\"%d\\n\", solve());\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = list(set(int(m) for m in stdin.readline().split()))\n    monsters.sort()\n\n    shots, acc = 0, 0\n    while monsters and monsters[-1] - acc > 0:\n        monsters.pop()\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + \"\\n\"\n\nstdout.write(result)\n"
        },
        {
            "language": 3,
            "solution": "from bisect import *\nimport sys\n \ninput = sys.stdin.readline\n\nq = int(input())\nfor run in range(q):\n    n, r = map(int, input().split())\n    xs = sorted(set(map(int, input().split())))\n    n = len(xs)\n    lo, hi = 0, n\n    res = n \n    while (lo <= hi):\n        m = lo + (hi-lo)//2\n        d = m*r\n        killed_left = bisect_right(xs, d)\n        killed = killed_left + m \n        if killed < n:\n            lo = m+1 \n        else:\n            res = min(res, m)\n            hi = m-1\n    print(res)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100009], b[100009];\nbool cmp(int a, int b) { return a > b; }\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n, r, maxx = 0, ans = 0;\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    sort(a + 1, a + 1 + n, cmp);\n    for (int i = 1; i <= n; i++) {\n      if (a[i] == a[i - 1]) continue;\n      if (a[i] <= r * ans) break;\n      ans++;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\n\ndef solve(n,r,arr):\n    arr.sort()\n    c = 0\n    count = 0\n    while len(arr) != 0 and c < arr[-1]:\n        last = arr.pop()\n        while len(arr) != 0:\n            if last == arr[-1]:\n                last = arr.pop()\n            else:\n                break\n        c+=r\n        count += 1\n    return str(count)+'\\n'\n\n\n\nif __name__ == \"__main__\":\n    line = input().split(' ')\n    output = ''\n    for i in range(int(line[0])):\n        n,r = map(int, input().split(' '))\n        arr = [int(x) for x in input().split(' ')]\n        output += solve(n,r,arr)\n    print(output)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout  \nimport sys\ndef glist(): return list(map(int, stdin.readline().split())) \ndef gints(): return (map(int, stdin.readline().split()))\nt=int(input())\nans=[]\nfor _ in range(t):\n    x,y=gints()\n    b=glist()\n    a=[]\n    s=set()\n    for i in b:\n        if i in s:\n            continue \n        else:\n            s.add(i)\n            a.append(i)\n    a.sort()\n    n=0\n    j=len(a)-1\n    while(j>=0):\n        if a[j]-y*n>0:\n            n+=1 \n            j-=1 \n        else:\n            break \n    temp=str(n)+'\\n'\n    ans.append(temp)\nstdout.write('\\n'.join(ans))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class B_killEmAll {\n    public static void main(String[] args) throws IOException {\n        FastScanner sc = new FastScanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        \n        int queries = sc.nextInt();\n        while (queries --> 0) {\n        \tint enemies = sc.nextInt();\n        \tint radius = sc.nextInt();\n        \tint[] arr = new int[enemies];\n        \tfor (int i = 0; i < enemies; i++) {\n        \t\tarr[i] = sc.nextInt();\n        \t}\n        \tshuffle(arr);\n        \tArrays.sort(arr);\n        \tint death = 0;\n        \tint pos = arr.length-1;\n        \tint i = arr.length-1;\n        \twhile (i >= 0) {\n        \t\tint temp = i;\n        \t\twhile (arr[pos] == arr[temp]) {\n        \t\t\tpos--;\n        \t\t\tif (pos == -1) {\n        \t\t\t\tbreak;\n        \t\t\t}\n        \t\t}\n        \t\ti = pos;\n        \t\tdeath += radius;\n        \t\tif (pos == -1) {\n        \t\t\tpw.println(death/radius);\n//        \t\t\tpw.println(\"hi\");\n        \t\t\tbreak;\n        \t\t}\n        \t\telse if (arr[pos] <= death) {\n        \t\t\tpw.println(death/radius);\n//        \t\t\tpw.println(\"hi2\");\n//        \t\t\tpw.println(queries);\n        \t\t\tbreak;\n        \t\t}\n        \t}\n        }\n        \n        pw.close();\n    }\n    static class FastScanner {\n    \tprivate boolean finished = false;\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public FastScanner(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw   new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n        public int peek() {\n            if (numChars == -1) {\n                return -1;\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private String readLine0() {\n            StringBuilder buf = new StringBuilder();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r') {\n                    buf.appendCodePoint(c);\n                }\n                c = read();\n            }\n            return buf.toString();\n        }\n        public String readLine() {\n            String s = readLine0();\n            while (s.trim().length() == 0) {\n                s = readLine0();\n            }\n            return s;\n        }\n        public String readLine(boolean ignoreEmptyLines) {\n            if (ignoreEmptyLines) {\n                return readLine();\n            } else {\n                return readLine0();\n            }\n        }\n\n        public BigInteger readBigInteger() {\n            try {\n                return new BigInteger(nextString());\n            } catch (NumberFormatException e) {\n                throw new InputMismatchException();\n            }\n        }\n\n        public char nextCharacter() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            return (char) c;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E') {\n                    return res * Math.pow(10, nextInt());\n                }\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E') {\n                        return res * Math.pow(10, nextInt());\n                    }\n                    if (c < '0' || c > '9') {\n                        throw new InputMismatchException();\n                    }\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public boolean isExhausted() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1) {\n                read();\n            }\n            return value == -1;\n        }\n    public String next() {\n            return nextString();\n        }\n\n        public SpaceCharFilter getFilter() {\n            return filter;\n        }\n\n        public void setFilter(SpaceCharFilter filter) {\n            this.filter = filter;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n        public int[] nextIntArray(int n){\n            int[] array=new int[n];\n            for(int i=0;i<n;++i)array[i]=nextInt();\n            return array;\n        }\n        public int[] nextSortedIntArray(int n){\n            int array[]=nextIntArray(n);\n            PriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n            for(int i = 0; i < n; i++){\n                pq.add(array[i]);\n            }\n            int[] out = new int[n];\n            for(int i = 0; i < n; i++){\n                out[i] = pq.poll();\n            }\n            return out;\n        }\n        public int[] nextSumIntArray(int n){\n            int[] array=new int[n];\n            array[0]=nextInt();\n            for(int i=1;i<n;++i)array[i]=array[i-1]+nextInt();\n            return array;\n        }\n        public ArrayList<Integer>[] nextGraph(int n, int m){\n            ArrayList<Integer>[] adj = new ArrayList[n];\n            for(int i = 0; i < n; i++){\n                adj[i] = new ArrayList<Integer>();\n            }\n            for(int i = 0; i < m; i++){\n                int u = nextInt(); int v = nextInt();\n                u--; v--;\n                adj[u].add(v); adj[v].add(u);\n            }\n            return adj;\n        }\n        public ArrayList<Integer>[] nextTree(int n){\n            return nextGraph(n, n-1);\n        }\n\n        public long[] nextLongArray(int n){\n            long[] array=new long[n];\n            for(int i=0;i<n;++i)array[i]=nextLong();\n            return array;\n        }\n        public long[] nextSumLongArray(int n){\n            long[] array=new long[n];\n            array[0]=nextInt();\n            for(int i=1;i<n;++i)array[i]=array[i-1]+nextInt();\n            return array;\n        }\n        public long[] nextSortedLongArray(int n){\n            long array[]=nextLongArray(n);\n            Arrays.sort(array);\n            return array;\n        }\n    }\n\tstatic void shuffle(int[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tint temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\tstatic void shuffle(long[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tlong temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nt = (int)(input())\n \nfor cas in range(t):\n  temp = [int(x) for x in stdin.readline().split()]\n  n = temp[0]\n  r = temp[1]\n  \n  a = [int(x) for x in stdin.readline().split()] \n  a.sort(reverse=True)\n  \n  cur = a[n-1]\n  cnt = 1\n  sub = r\n  \n  for i in range(1,n):\n    if a[i] == a[i-1] or a[i]-sub <= 0:\n      continue\n    cur = a[i]-sub\n    cnt += 1\n    sub += r\n    \n  print(cnt)\n  "
        },
        {
            "language": 3,
            "solution": "import sys\nreadline = sys.stdin.readline\nq = int(input())\n \nfor _ in range(q):\n    n, r = map(int, readline().split())\n    m = list(map(int, readline().split()))\n    \n    m.sort()\n    t = m[len(m) - 1]\n    count = 1\n    dist = r\n    for i in range(n):\n        tmp = m[n - i - 1]\n        if tmp - dist <= 0:\n            break\n        if t != tmp:\n            t = tmp\n            count += 1\n            dist += r\n \n    print(count)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint q = Integer.parseInt(br.readLine().trim());\n\t\tStringTokenizer st;\n\t\tint n, r, count;\n\t\tTreeSet<Integer> set = new TreeSet<>();\n\t\tfor(int Q = 1; Q <= q; Q++) {\n\t\t\tst = new StringTokenizer(br.readLine().trim());\n\t\t\tn = Integer.parseInt(st.nextToken());\n\t\t\tr = Integer.parseInt(st.nextToken());\n\t\t\tst = new StringTokenizer(br.readLine().trim());\n\t\t\tset.clear();\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tset.add(Integer.parseInt(st.nextToken()));\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\twhile(set.size() != 0) {\n\t\t\t\tif(set.pollLast() <= count * r) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint q, n, r;\nint x[100005];\nint main() {\n  scanf(\"%d\", &q);\n  while (q--) {\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", x + i);\n    }\n    sort(x + 1, x + 1 + n);\n    int tot = 0;\n    for (int i = 1; i <= n; i++) {\n      if (x[i] != x[i - 1]) {\n        x[++tot] = x[i];\n      }\n    }\n    int d = 0, ans = 0;\n    for (int i = tot; i >= 1; i--) {\n      if (x[i] - d <= 0) {\n        break;\n      }\n      ans++;\n      d += r;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "// Why do we fall ? So we can learn to pick ourselves up.\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\nimport java.util.*;\npublic class solve {\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n        PrintWriter out = new PrintWriter(System.out);\n        int q = sc.nextInt();\n        while(q-->0){\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            HashSet<Integer> s = new HashSet<Integer>();\n            for(int i=0; i<n;i++){\n                int x = sc.nextInt()-k;\n                s.add(x);\n            }\n            ArrayList<Integer> ss = new ArrayList<Integer>(s);\n            Collections.sort(ss);\n            if(ss.size() == 1){\n                System.out.println(1);\n            }else{\n                int r = 0;\n                int ind = ss.size()-2;\n                while(ind > -1){\n                    if(ss.get(ind)-r*k>0){\n                        ind -= 1;\n                        r += 1;\n                    }else {\n                        break;\n                    }\n                }\n                System.out.println(r+1);\n            }\n        }\n        }\n    static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n        public MyScanner() {br = new BufferedReader(new InputStreamReader(System.in));}\n        String next() {while (st == null || !st.hasMoreElements()) {\n            try {st = new StringTokenizer(br.readLine());}\n            catch (IOException e) {e.printStackTrace();}}\n            return st.nextToken();}\n        int nextInt() {return Integer.parseInt(next());}\n        long nextLong() {return Long.parseLong(next());}\n        double nextDouble() {return Double.parseDouble(next());}\n        String nextLine(){String str = \"\";\n            try {str = br.readLine();}\n            catch (IOException e) {e.printStackTrace();}\n            return str;}\n    }\n    }"
        },
        {
            "language": 1,
            "solution": "q = int(raw_input())\n\nfor k in xrange(q):\n  n, r = map(int, raw_input().split())\n  l = map(int, raw_input().split())\n\n  s = set(l)\n\n  ls = []\n  ls.extend(s)\n  ls.sort()\n\n  att = 0\n  for i in xrange(len(ls)-1, -1, -1):\n    if((ls[i] - att*r) <= 0):\n      break\n\n    att += 1\n\n  print(att)"
        },
        {
            "language": 3,
            "solution": "res = []\ntc = int(input())\nfor j in range(tc):\n    x, r = map(int, input().split())\n    a = set(map(int, input().split()))\n    a = list(sorted(a, reverse=True))\n    ans = cnt = 0\n    for i in range(len(a)):\n        if a[i] <= cnt:\n            break\n        ans = ans + 1\n        cnt = cnt + r\n    res.append(str(ans))\nprint('\\n'.join(res))\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t, T;\n  cin >> T;\n  for (t = 0; t < T; t++) {\n    int n, m, ans = 0, r = 0;\n    cin >> n >> m;\n    vector<int> v(n);\n    for (int i = 0; i < n; i++) cin >> v[i];\n    sort(v.begin(), v.end());\n    for (int i = n - 1; i >= 0; i--) {\n      if (v[i] - (ans * m) <= 0) {\n        break;\n      }\n      if (r != v[i]) {\n        ans++;\n        r = v[i];\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ndef glist(): return list(map(int, sys.stdin.readline().strip().split())) \ndef gints(): return (map(int, sys.stdin.readline().strip().split()))\nt=int(input())\nans=''\nfor _ in range(t):\n    x,y=gints()\n    b=glist()\n    a=[]\n    s=set()\n    for i in b:\n        if i in s:\n            continue \n        else:\n            s.add(i)\n            a.append(i)\n    a.sort()\n    n=0\n    j=len(a)-1\n    while(j>=0):\n        if a[j]-y*n>0:\n            n+=1 \n            j-=1 \n        else:\n            break \n    temp=str(n)+'\\n'\n    ans+=temp\nprint(ans)\n            "
        },
        {
            "language": 3,
            "solution": "t = int(input())\ns = ''\nfor i in range(t):\n    n, r = map(int, input().split())\n    a = set(map(int,input().split()))\n    a = list(a)\n    a.sort(reverse = True)\n    # print(a)\n    cnt = 0\n    a.append(1e19)\n    for i in range(len(a)):\n        if(a[i] <= i*r):\n            break\n        cnt += 1\n    s += str(i) + '\\n'\nprint(s)"
        },
        {
            "language": 3,
            "solution": "R=lambda:map(int,input().split())\nq,=R()\nprint(*(sum(x-i*r>0for i,x in enumerate(sorted(set(a))[::-1]))for(n,r),a\nin((R(),R())for _ in[0]*q)))"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Set;\nimport java.util.TreeSet;\npublic class Main {\n\n\n    public static int min_moves(Set<Mounstro> mounstros, int radio){\n        int respuesta = 0;\n        for(Mounstro mounstro : mounstros){\n            int ubicacion_mounstro = mounstro.getUbicacion();\n            if (ubicacion_mounstro - respuesta*radio> 0){\n                respuesta++;\n            }\n        }\n\n        return respuesta;\n    }\n\n    public static void main(String[] args) throws Exception {\n\n        BufferedReader entrada = new BufferedReader(new InputStreamReader(System.in));\n        String q_0 = entrada.readLine();\n        int q = Integer.parseInt(q_0);\n        //Fake para ignorar el \\n el Int anterior\n        for (int i=0; i<q; i++){\n            Set<Mounstro> mounstros = new TreeSet<>();\n            String primera_linea = entrada.readLine();\n            String segunda_linea = entrada.readLine();\n            String datos[] = primera_linea.split(\" \");\n            String mounstros_str[] = segunda_linea.split(\" \");\n            int n = Integer.parseInt(datos[0]);\n            int radio = Integer.parseInt(datos[1]);\n            for (int j = 0; j < n; j++){\n                Mounstro mounstro = new Mounstro(radio, Integer.parseInt(mounstros_str[j]));\n                mounstros.add(mounstro);\n            }\n            int resultado = min_moves(mounstros, radio);\n            System.out.println(resultado);\n        }\n    }\n}\nclass Mounstro implements Comparable<Mounstro>{\n    private int radio;\n    private int ubicacion;\n\n\n    public Mounstro(int radio, int ubicacion){\n        this.radio = radio;\n        this.ubicacion = ubicacion;\n    }\n\n    public int getUbicacion(){\n        return this.ubicacion;\n    }\n    @Override\n    public int compareTo(Mounstro other){\n        if(this.ubicacion!=other.ubicacion){\n            return other.ubicacion - this.ubicacion;\n        }\n        return (0);\n    }\n    @Override\n    public String toString(){\n        return \"Ubicacion: \"+this.ubicacion;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nl=[]\nfor i in range(t):\n    n,r=(int(j) for j in input().split())\n    s1=list(set(map(int, input().split())))\n    s1.sort()\n    st=0\n    if len(s1) <= (s1[0]-1)//r+1:\n        st=len(s1)\n        l.append(str(st))\n    elif n==1:\n        st=1\n        l.append(str(st))\n    else:\n        for k in range(0,len(s1)):\n            i1=r*(k+1)\n            j1=s1[len(s1)-k-2]\n            if i1>=j1:\n                st=k+1\n                break\n        l.append(str(st))\nprint('\\n'.join(l))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long inf = 1e9 + 7;\nconst int nmax = 1e5 + 10;\nconst int eps = 1e-8;\nconst long long infll = 1e15;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    set<int> s;\n    for (int i = 0; i < n; i++) {\n      int c;\n      cin >> c;\n      s.insert(c);\n    }\n    int ans = 0;\n    while (1) {\n      if (s.empty()) break;\n      int x = *s.rbegin();\n      x -= (ans * r);\n      if (x <= 0) break;\n      auto it = prev(s.end());\n      s.erase(it);\n      ans++;\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\npublic class Main7{\n\nstatic class Pair\n    { \n        int x;\n        int y;\n        public Pair(int x,int y) \n        {     \n            this.x= x; \n            this.y= y;\n        }     \n        \n    @Override\n            public int hashCode() \n            { \n                final int temp = 14; \n                int ans = 1; \n                ans =x*31+y*13; \n                return ans; \n            } \n      \n            // Equal objects must produce the same \n            // hash code as long as they are equal \n        @Override\n        public boolean equals(Object o) \n        { \n            if (this == o) { \n                return true; \n            } \n            if (o == null) { \n                return false; \n            } \n            if (this.getClass() != o.getClass()) { \n                return false; \n            } \n            Pair other = (Pair)o; \n            if (this.x != other.x || this.y!=other.y) { \n                return false; \n            } \n            return true; \n        } \n            \n    } \n    static class Pair1\n    {\n        String x;\n        int y;\n        int z;\n        \n    }\n    static class Compare\n    { \n        static void compare(Pair arr[], int n) \n        { \n            // Comparator to sort the pair according to second element \n        /*    Arrays.sort(arr, new Comparator<Pair>() { \n                @Override public int compare(Pair p1, Pair p2) \n                { \n                    if(p1.start>p2.start)\n                    {\n                        return 1;\n                    }\n                    else if(p1.start==p2.start)\n                    {\n                        return 0;\n                    }\n                    else\n                    {\n                        return -1;\n                    }\n                } \n            }); */\n        }\n        \n    }\n    \n    \n    public static long pow(long a, long b)\n    {\n        long result=1;\n        while(b>0)\n        {\n            if (b % 2 != 0)\n            {\n                result=(result*a);\n                b--;\n            } \n            a=(a*a);\n            b /= 2;\n        }   \n        return result;\n    }\n    public static long fact(long num)\n    {\n                long value=1;\n                int i=0;\n                for(i=2;i<num;i++)\n                {\n                    value=((value%mod)*i%mod)%mod;\n                }\n                return value;\n            }\n            public static long gcd(long a, long b)\n            {\n                if (a == 0)\n                    return b;\n                return gcd(b%a, a);\n            }\n            \n    /*        public static long lcm(long a,long b)\n            {\n                return a * (b / gcd(a, b));\n            }\n        */    public static long sum(int h)\n            {\n                return (h*(h+1)/2);\n            }\n        /*   public static void dfs(int parent,boolean[] visited,int[] dp)\n            {\n                ArrayList<Integer> arr=new ArrayList<Integer>();\n                arr=graph.get(parent);\n                visited[parent]=true;\n                for(int i=0;i<arr.size();i++)\n                {\n                    int num=(int)arr.get(i);\n                    if(visited[num]==false)\n                    {\n                        dfs(num,visited,dp);\n                    }\n                    dp[parent]=Math.max(dp[num]+1,dp[parent]);\n                }\n            }\n        //    static int flag1=0;\n            static int[] dis;*/\n            static int mod=1000000007;\n            static ArrayList<ArrayList<Integer>> graph;\n            static ArrayList<ArrayList<Integer>> g;\n            \n       /*     public static void bfs(int num,int size)\n            {\n                boolean[] visited=new boolean[size+1];\n                Queue<Integer> q=new LinkedList<>();\n                q.add(num);\n                ans[num]=1;\n                visited[num]=true;\n                while(!q.isEmpty())\n                {\n                    int x=q.poll();\n                    ArrayList<Integer> al=graph.get(x);\n                    for(int i=0;i<al.size();i++)\n                    {\n                        int y=al.get(i);    \n                        if(visited[y]==false)\n                        {\n                            q.add(y);\n                            ans[y]=ans[x]+1;\n                            visited[y]=true;\n                        }\n                    }\n                }\n            }\n            static int[] ans;*/\n            \n            \n            \n            \n            \n            \n            \n            \n            \n        //    static int[] a;              \n            public static int[] sort(int[] a)\n            {\n                int n=a.length;\n                ArrayList<Integer> ar=new ArrayList<>();\n                for(int i=0;i<a.length;i++)\n                {\n                    ar.add(a[i]);\n                }\n                Collections.sort(ar);\n                for(int i=0;i<n;i++)\n                {\n                    a[i]=ar.get(i);\n                }\n                return a;\n            }\n\t\t\tstatic class pqcomparator implements Comparator<Pair>\n\t\t\t{\n\t\t\t\tpublic int compare(Pair p1 ,Pair p2)\n\t\t\t\t{\n\t\t\t\t\tif(p1.y>p2.y)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpublic static void dfs(int parent,boolean[] visited)\n            {\n                ArrayList<Integer> arr=new ArrayList<Integer>();\n                arr=graph.get(parent);\n                visited[parent]=true;\n\t\t\t\tfor(int i=0;i<arr.size();i++)\n                {\n\t\t\t\t\tint num=(int)arr.get(i);\n                    if(visited[num]==false)\n                    {\n                        dfs(num,visited);\n                    }\n            \t }\n            }\n\t\t\tstatic public void main(String args[])throws IOException\n            {\n\t\t\t\tint q=i();\n\t\t\t\tStringBuilder sb=new StringBuilder();\n\t\t\t\twhile(q-->0)\n\t\t\t\t{\n\t\t\t\t\tint n=i();\n\t\t\t\t\tint r=i();\n\t\t\t\t\tint[] a=new int[n];\n\t\t\t\t\tTreeSet<Integer> ts=new TreeSet<>();\n\t\t\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i]=i();\n\t\t\t\t\t\tts.add(a[i]);\n\t\t\t\t\t}\n\t\t\t\t\ta=sort(a);\n\t\t\t\t\tArrayList<Integer> ar=new ArrayList<>();\n\t\t\t\t\tIterator itr=ts.iterator();\n\t\t\t\t\twhile(itr.hasNext())\n\t\t\t\t\t{\n\t\t\t\t\t\tar.add((int)itr.next());\n\t\t\t\t\t}\n\t\t\t\t\tint var=1,count=1;\n\t\t\t\t\tfor(int i=ar.size()-1;i>=0;i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tint num=ar.get(i)-var*r;\n\t\t\t\t\t\tif(num<=0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(i-1>=0 && ar.get(i-1)-var*r>0)\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\tvar++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsb.append(count+\"\\n\");\n\t\t\t\t}\n\t\t\t\tSystem.out.print(sb.toString());\n\t\t\t}\n\t\t\t\n\t\t\t\n            /**/\n            static InputReader in=new InputReader(System.in);\n                static OutputWriter out=new OutputWriter(System.out);\n                public static long l()\n                {\n                    String s=in.String();\n                    return Long.parseLong(s);\n                }\n                public static void pln(String value)\n                {\n                    System.out.println(value);\n                }\n                public static int i()\n                {\n                    return in.Int();\n                }\n                public static String s()\n                {\n                    return in.String();\n                }\n    }\n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n         \n        class InputReader {\n             \n            private InputStream stream;\n            private byte[] buf = new byte[1024];\n            private int curChar;\n            private int numChars;\n            private SpaceCharFilter filter;\n         \n            public InputReader(InputStream stream) {\n                this.stream = stream;\n            }\n         \n            public int read() {\n                if (numChars== -1)\n                    throw new InputMismatchException();\n                if (curChar >= numChars) {\n                    curChar = 0;\n                    try {\n                        numChars = stream.read(buf);\n                    } catch (IOException e) {\n                        throw new InputMismatchException();\n                    }\n                    if (numChars <= 0)\n                        return -1;\n                }\n                return buf[curChar++];\n            }\n         \n            public int Int() {\n                int c = read();\n                while (isSpaceChar(c))\n                    c = read();\n                int sgn = 1;\n                if (c == '-') {\n                    sgn = -1;\n                    c = read();\n                }\n                int res = 0;\n                do {\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    res *= 10;\n                    res += c - '0';\n                    c = read();\n                } while (!isSpaceChar(c));\n                return res * sgn;\n            }\n         \n            public String String() {\n                int c = read();\n                while (isSpaceChar(c))\n                    c = read();\n                StringBuilder res = new StringBuilder();\n                do {\n                    res.appendCodePoint(c);\n                    c = read();\n                } while (!isSpaceChar(c));\n                return res.toString();\n            }\n         \n            public boolean isSpaceChar(int c) {\n                if (filter != null)\n                    return filter.isSpaceChar(c);\n                return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n            }\n         \n            public String next() {\n                return String();\n            }\n         \n            public interface SpaceCharFilter {\n                public boolean isSpaceChar(int ch);\n            }\n        }\n         \n        class OutputWriter {\n            private final PrintWriter writer;\n         \n            public OutputWriter(OutputStream outputStream) {\n                writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n            }\n         \n            public OutputWriter(Writer writer) {\n                this.writer = new PrintWriter(writer);\n            }\n         \n            public void print(Object...objects) {\n                for (int i = 0; i < objects.length; i++) {\n                    if (i != 0)\n                        writer.print(' ');\n                    writer.print(objects[i]);\n                }\n            }\n         \n            public void printLine(Object...objects) {\n                print(objects);\n                writer.println();\n            }\n         \n            public void close() {\n                writer.close();\n            }\n         \n            public void flush() {\n                writer.flush();\n            }\n         \n            }\n         \n            class IOUtils {\n         \n            public static int[] readIntArray(InputReader in, int size) {\n                int[] array = new int[size];\n                for (int i = 0; i < size; i++)\n                    array[i] = in.Int();\n                return array;\n            }\n         \n            } \n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nlines = sys.stdin.readlines()\nnum_cases = int(lines[0])\nfor i in range(num_cases):\n  n,r = map(int, lines[2*i+1].split())\n  L = sorted(set([int(x) for x in list(lines[2*i+2].split())]))\n  thresh = 0\n  while L and (L.pop()-thresh*r > 0):\n    thresh += 1\n  print(thresh)\n    \n  \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.util.*;\n\n@SuppressWarnings(\"unused\")\npublic class Main {\n    private FastScanner in = new FastScanner(System.in);\n    private PrintWriter out = new PrintWriter(System.out);\n    final int MOD = (int)1e9+7;\n    long ceil(long a, long b){return (a + b - 1) / b;}\n    long gcd(long a, long b){\n        return b == 0 ? a : gcd(b, a % b);\n    }\n    long lcm(long a, long b){\n        return a / gcd(a, b) * b; //\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306b\u6ce8\u610f\n    }\n\n    void solve() throws Exception{\n        int q = in.nextInt();\n        for (int i = 0; i < q; i++) {\n            int n = in.nextInt(), r = in.nextInt();\n            Integer[] x = new Integer[n];\n            for(int j = 0; j < n; j++) x[j] = in.nextInt();\n            Arrays.sort(x);\n            int cnt = 0;\n            for(int j = n-1; j >= 0; j--){\n                if(j < n-1 && x[j].equals(x[j+1])) continue;\n                if(x[j] - r * cnt <= 0) continue;\n                cnt++;\n            }\n            out.println(cnt);\n        }\n    }\n    //end solve\n\n    public static void main(String[] args) throws Exception {\n        new Main().m();\n    }\n\n    private void m() throws Exception {\n        solve();\n        out.flush();\n    }\n\n    static class FastScanner {\n        Reader input;\n\n        FastScanner() {this(System.in);}\n        FastScanner(InputStream stream) {this.input = new BufferedReader(new InputStreamReader(stream));}\n\n        int nextInt() {return (int) nextLong();}\n\n        long nextLong() {\n            try {\n                int sign = 1;\n                int b = input.read();\n                while ((b < '0' || '9' < b) && b != '-' && b != '+') {\n                    b = input.read();\n                }\n                if (b == '-') {\n                    sign = -1;\n                    b = input.read();\n                } else if (b == '+') {\n                    b = input.read();\n                }\n                long ret = b - '0';\n                while (true) {\n                    b = input.read();\n                    if (b < '0' || '9' < b) return ret * sign;\n                    ret *= 10;\n                    ret += b - '0';\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n                return -1;\n            }\n        }\n\n        double nextDouble() {\n            try {\n                double sign = 1;\n                int b = input.read();\n                while ((b < '0' || '9' < b) && b != '-' && b != '+') {\n                    b = input.read();\n                }\n                if (b == '-') {\n                    sign = -1;\n                    b = input.read();\n                } else if (b == '+') {\n                    b = input.read();\n                }\n                double ret = b - '0';\n                while (true) {\n                    b = input.read();\n                    if (b < '0' || '9' < b) break;\n                    ret *= 10;\n                    ret += b - '0';\n                }\n                if (b != '.') return sign * ret;\n                double div = 1;\n                b = input.read();\n                while ('0' <= b && b <= '9') {\n                    ret *= 10;\n                    ret += b - '0';\n                    div *= 10;\n                    b = input.read();\n                }\n                return sign * ret / div;\n            } catch (IOException e) {\n                e.printStackTrace();\n                return Double.NaN;\n            }\n        }\n\n        char nextChar() {\n            try {\n                int b = input.read();\n                while (Character.isWhitespace(b)) {\n                    b = input.read();\n                }\n                return (char) b;\n            } catch (IOException e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n\n        String nextStr() {\n            try {\n                StringBuilder sb = new StringBuilder();\n                int b = input.read();\n                while (Character.isWhitespace(b)) {\n                    b = input.read();\n                }\n                while (b != -1 && !Character.isWhitespace(b)) {\n                    sb.append((char) b);\n                    b = input.read();\n                }\n                return sb.toString();\n            } catch (IOException e) {\n                e.printStackTrace();\n                return \"\";\n            }\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        public int[] nextIntArrayDec(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt() - 1;\n            }\n            return res;\n        }\n\n        public int[] nextIntArray1Index(int n) {\n            int[] res = new int[n + 1];\n            for (int i = 0; i < n; i++) {\n                res[i + 1] = nextInt();\n            }\n            return res;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong();\n            }\n            return res;\n        }\n\n        public long[] nextLongArrayDec(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong() - 1;\n            }\n            return res;\n        }\n\n        public long[] nextLongArray1Index(int n) {\n            long[] res = new long[n + 1];\n            for (int i = 0; i < n; i++) {\n                res[i + 1] = nextLong();\n            }\n            return res;\n        }\n\n        public double[] nextDoubleArray(int n) {\n            double[] res = new double[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextDouble();\n            }\n            return res;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "a = int(input())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, input().split())\n    monsters = set(int(m) for m in input().split())\n\n    shots, acc = 0, 0\n    for m in sorted(monsters, reverse=True):\n        if m - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    result += str(shots) + '\\n'\n\nprint(result[:-1])\n"
        },
        {
            "language": 3,
            "solution": "\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\n\n\n# --------------------------------- SOLUTION ---------------------------------\n\n\n\ndef main():\n    q = int(input())\n\n    for _ in range(q):\n        n, r = map(int, input().split(' '))\n        x = list(set(map(int, input().split(' '))))\n\n        if n == 1:\n            print(1)\n        else:\n            xlen = len(x)\n            x.sort()\n\n            shots = 0\n            \n            # iter backwards because right enemies are mandatory to\n            # kill with a shot\n            for i in range(xlen-1, -1, -1):\n                shots += 1\n                if x[i-1] <= shots*r or i==0:\n                    break\n\n            print(shots)\n\n\n\n\n# --------------------------------- FAST IO ---------------------------------\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\n\n\n# --------------------------------- MAIN --------------------------------- \nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "def fastio():\n\timport sys\n\tfrom io import StringIO \n\tfrom atexit import register\n\tglobal input\n\tsys.stdin = StringIO(sys.stdin.read())\n\tinput = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\tsys.stdout = StringIO()\n\tregister(lambda : sys.__stdout__.write(sys.stdout.getvalue()))\nfastio()\n\nI = lambda: list(map(int, input().split()))\n \nt, = I()\nwhile t:\n    t -= 1\n    n, r = I()\n    l = I()\n    l.sort()\n    d = 0\n    ans = 0\n    for i in sorted(set(l), reverse = True):\n        if i <= d:\n            break\n        d += r\n        ans += 1\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "/**\n * BaZ :D\n */\nimport java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n\npublic class Main\n{\n    static MyScanner scan;\n    static PrintWriter pw;\n    static long MOD = 1_000_000_007;\n    static long INF = 1_000_000_000_000_000_000L;\n    static long inf = 2_000_000_000;\n    public static void main(String[] args) {\n        new Thread(null, null, \"BaZ\", 1 << 27) {\n            public void run() {\n                try {\n                    solve();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    System.exit(1);\n                }\n            }\n        }.start();\n    }\n\n    static void solve() throws IOException\n    {\n        //initIo(true);\n        initIo(false);\n        StringBuilder sb = new StringBuilder();\n        int t = ni();\n        while(t-->0) {\n            int n = ni(), r = ni();\n            Integer arr[] = new Integer[n];\n            for(int i=0;i<n;++i) {\n                arr[i] = ni();\n            }\n            Arrays.sort(arr);\n            int fired = 0;\n            for(int i=n-1;i>=0;--i) {\n                //pl(\"i : \"+i);\n                int real = arr[i] - r*fired;\n                if(real<=0) {\n                    break;\n                }\n                while(i-1>=0 && arr[i-1].equals(arr[i])) {\n                    i--;\n                }\n                fired++;\n            }\n            pl(fired);\n        }\n        pw.flush();\n        pw.close();\n    }\n    static void initIo(boolean isFileIO) throws IOException {\n        scan = new MyScanner(isFileIO);\n        if(isFileIO) {\n            pw = new PrintWriter(\"/Users/amandeep/Desktop/output.txt\");\n        }\n        else {\n            pw = new PrintWriter(System.out, true);\n        }\n    }\n    static int ni() throws IOException\n    {\n        return scan.nextInt();\n    }\n    static long nl() throws IOException\n    {\n        return scan.nextLong();\n    }\n    static double nd() throws IOException\n    {\n        return scan.nextDouble();\n    }\n    static String ne() throws IOException\n    {\n        return scan.next();\n    }\n    static String nel() throws IOException\n    {\n        return scan.nextLine();\n    }\n    static void pl()\n    {\n        pw.println();\n    }\n    static void p(Object o)\n    {\n        pw.print(o+\" \");\n    }\n    static void pl(Object o)\n    {\n        pw.println(o);\n    }\n    static void psb(StringBuilder sb)\n    {\n        pw.print(sb);\n    }\n    static void pa(String arrayName, Object arr[])\n    {\n        pl(arrayName+\" : \");\n        for(Object o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, int arr[])\n    {\n        pl(arrayName+\" : \");\n        for(int o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, long arr[])\n    {\n        pl(arrayName+\" : \");\n        for(long o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, double arr[])\n    {\n        pl(arrayName+\" : \");\n        for(double o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, char arr[])\n    {\n        pl(arrayName+\" : \");\n        for(char o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String listName, List list)\n    {\n        pl(listName+\" : \");\n        for(Object o : list)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, Object[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(Object o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static void pa(String arrayName, int[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(int o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static void pa(String arrayName, long[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(long o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static void pa(String arrayName, char[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(char o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static void pa(String arrayName, double[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(double o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static class MyScanner\n    {\n        BufferedReader br;\n        StringTokenizer st;\n        MyScanner(boolean readingFromFile) throws IOException\n        {\n            if(readingFromFile) {\n                br = new BufferedReader(new FileReader(\"/Users/amandeep/Desktop/input.txt\"));\n            }\n            else {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n        }\n        String nextLine()throws IOException\n        {\n            return br.readLine();\n        }\n        String next() throws IOException\n        {\n            if(st==null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n        int nextInt() throws IOException\n        {\n            return Integer.parseInt(next());\n        }\n        long nextLong() throws IOException\n        {\n            return Long.parseLong(next());\n        }\n        double nextDouble() throws IOException\n        {\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nimport math\nfor _ in range(int(input())):\n    n,r = [int(j) for j in input().split()]\n    x = [int(j) for j in input().split()]\n    x = list(set(x))\n    x.sort()\n    x1= [math.ceil(i/r) for i in x]\n    x2 = x1.copy()\n    for i in range(1,len(x1)):\n        x2[i] = max(x2[i-1],x2[i])\n    ans=1\n    for i in range(len(x1)-2,-1,-1):\n        if x2[i]<=ans:\n            break \n        else:\n            ans+=1\n    print(ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n/*\n2\n3 2\n1 3 5\n4 1\n5 2 3 5\n\n */\npublic class maxcross {\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        int queries = Integer.parseInt(bf.readLine());\n        TreeSet<Integer> set = new TreeSet<>();\n        StringTokenizer st;\n        for(int i = 0; i < queries; i++) {\n            st = new StringTokenizer(bf.readLine().trim());\n            int monsters = Integer.parseInt(st.nextToken());\n            int bounce = Integer.parseInt(st.nextToken());\n            set.clear();\n            st = new StringTokenizer(bf.readLine().trim());\n            for(int j = 0; j < monsters; j++) {\n                set.add(Integer.parseInt(st.nextToken()));\n            }\n            //System.out.println(set);\n            int count = 0;\n            while(!set.isEmpty()) {\n                if(set.pollLast() <= bounce * count)\n                    break;\n                count++;\n            }\n            System.out.println(count);\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\n\npublic class KillThemAll {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t\tMyScanner input =new MyScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint t  = input.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n = input.nextInt();\n\t\t\tint r = input.nextInt();\n\t\t\t\n\t\t\t//int[] arr =new int[n];\n\t\t\tHashSet<Integer> set =new HashSet<Integer>();\n\t\t\tfor(int i=0; i<n;i++)set.add(input.nextInt());\n\t\t\tint[] arr =new int[set.size()];\n\t\t\tint i = 0;\n\t\t\tfor(int z: set) {\n\t\t\t\tarr[i] = z;\n\t\t\t  i++;\n\t\t\t}\n\t\t\tArrays.parallelSort(arr);\t\n\t\t\tint minus = 0;\n\t\t\t i=arr.length-1;\n\t\t\tint counter=0;\n\t\t\twhile(i>=0 && (arr[i]-minus)>0) {\n\t\t\t\tminus +=r;\n\t\t\t\ti--;\n\t\t\t\tcounter++;\n\t\t\t}\n\t\t\tout.println(counter);\n\t\t\t\n\t\t\t\n\t\t}\n\t\tout.flush();\n\t\tout.close();\n\t}\n\t\n\tstatic class MyScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\tpublic MyScanner() {br = new BufferedReader(new InputStreamReader(System.in));}\n\t\tString next() {while (st == null || !st.hasMoreElements()) {\n\t\t\ttry {st = new StringTokenizer(br.readLine());}\n\t\t\tcatch (IOException e) {e.printStackTrace();}}\n\t\treturn st.nextToken();}\n\t\tint nextInt() {return Integer.parseInt(next());}\n\t\tlong nextLong() {return Long.parseLong(next());}\n\t\tdouble nextDouble() {return Double.parseDouble(next());}\n\t\tString nextLine(){String str = \"\";\n\t\ttry {str = br.readLine();}\n\t\tcatch (IOException e) {e.printStackTrace();}\n\t\treturn str;}\n\t}\n\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def solution(s):\n    loc_str = str\n    for i in range(t):\n        p, r = map(int, input().split())\n        s = map(int, set(input().split()))\n        res = acc = 0\n        for k in sorted(s, reverse=True):\n            if k - acc <= 0: break\n            res += 1\n            acc += r\n        yield str(res)\n\n\n\n\nt = int(input())\nprint(\"\\n\".join(solution(t)))\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nreadline = sys.stdin.readline\nread = sys.stdin.read\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n, r= nm()\n    l = sorted(set(nl()))\n    c = 0\n    while l:\n        if l[-1] - r * c <= 0:\n            break\n        l.pop()\n        c += 1\n    print(c)\n    return\n\n# solve()\n\nT = ni()\nfor _ in range(T):\n    solve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> x(n);\n    for (int i = 0; i < n; i++) cin >> x[i];\n    sort(x.begin(), x.end());\n    for (int i = 0; i < n - 1; i++) {\n      if (x[i] == x[i + 1]) {\n        x.erase(x.begin() + i);\n        i--;\n        n--;\n      }\n    }\n    int shots = 0;\n    for (;;) {\n      if (x.size() == 0) {\n        cout << shots << \"\\n\";\n        break;\n      }\n      if ((x[x.size() - 1] - shots * r) <= 0) {\n        cout << shots << \"\\n\";\n        break;\n      }\n      int s = x[x.size() - 1];\n      while (x[x.size() - 1] == s) x.pop_back();\n      shots++;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,os,io\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\nfor _ in range (int(input())):\n    n,r = [int(i) for i in input().split()]\n    p=[int(i) for i in input().split()]\n    if n==1 and p[0]>0:\n        print(1)\n        continue\n    p.sort()\n    d=[]\n    for i in range(n):\n        if p[i]/r==p[i]//r:\n            d.append(p[i]/r)\n        else:\n            d.append(p[i]//r +1)\n    c=0\n    i=n-1\n    while(i>=0):\n        m=1\n        for j in range(-1,len(p)*-1,-1):\n            if p[j]==p[j-1]:\n                m=m+1\n            else:\n                break\n        if d[i]>c:\n            for j in range(m):\n                p.pop()\n                i=i-1\n            c=c+1\n        else:\n            break\n    print(c)"
        },
        {
            "language": 3,
            "solution": "import bisect\nimport sys\ninput = sys.stdin.readline\n \n \ndef solve(n, r, mid):\n    r_ind = bisect.bisect(x, r*mid)\n    set_ = set(x[r_ind:])\n    if len(set_) <= mid:\n        return True\n    else:\n        return False\n \nq = int(input())\nfor _ in range(q):\n    n, r = map(int, input().split())\n    x = list(map(int, input().split()))\n    x = sorted(x)\n    ok = n\n    ng = 0\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if solve(n, r, mid):\n            ok = mid\n        else:\n            ng = mid\n    print(ok)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String[] args){\n        FastReader sc=new FastReader();\n        PrintWriter pw=new PrintWriter(System.out);\n        int T=sc.nextInt();\n        while(T-->0){\n            int n=sc.nextInt(),r=sc.nextInt();\n            TreeSet<Integer> tree=new TreeSet<Integer>();\n            for(int i=0;i<n;i++) {\n            \ttree.add(sc.nextInt());\n            }\n            int len=tree.size();\n            int o=0;int ans=0;\n//            System.out.println(tree);\n            for(int i=0;i<len;i++) {\n            \tint tem=tree.pollLast();//System.out.println(tem);\n            \tif(tem-ans*r>0) ans++;\n            }\n            System.out.println(ans);\n        }\n    }\n}\n\nclass FastReader{\n    BufferedReader bf;\n    StringTokenizer st;\n    FastReader(){\n        bf=new BufferedReader(new InputStreamReader(System.in));\n    }\n    \n    public String next(){\n        if(st==null || !st.hasMoreElements()){\n            try{\n                st=new StringTokenizer(bf.readLine());\n            }catch(IOException e){\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n    \n    public long nextLong(){\n        return Long.parseLong(next());\n    }\n    \n    public int nextInt(){\n        return Integer.parseInt(next());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nint x[maxn];\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    for (int i = 1; i <= n; ++i) cin >> x[i];\n    sort(x + 1, x + n + 1);\n    int cnt = 0, d = 0x3f3f3f3f;\n    for (int i = n; i >= 1; --i) {\n      if (d == x[i] || x[i] - cnt * r <= 0)\n        continue;\n      else\n        cnt++, d = x[i];\n    }\n    cout << cnt << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, r, a[100001];\nint kol = 0;\nvoid solve() {\n  sort(a, a + n);\n  int lst_id = n - 1;\n  for (lst_id; lst_id >= 0; lst_id--) {\n    if (a[lst_id] - kol * r <= 0) continue;\n    kol++;\n    int i = lst_id - 1;\n    while (a[i] == a[lst_id] && i >= 0) {\n      a[i] = -1;\n      i--;\n    }\n  }\n  cout << kol << '\\n';\n}\nvoid init() {\n  cin >> n >> r;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  kol = 0;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int q;\n  cin >> q;\n  while (q--) {\n    init();\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nans=''\nq=int(input())\nfor i in range(q):\n    n,x=map(int,input().split())\n    a=list(set((map(int,input().split()))))\n    a.sort(reverse=True)\n    a.append(-1)\n    counter=0\n    for i in range(n+1):\n        if a[i]-counter<=0:\n            print(i)\n            break\n        counter+=x\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 2e5 + 5;\nlong long mas[N];\nlong long used[N];\nlong long gl = 0;\nvoid solve() {\n  long long n, r;\n  cin >> n >> r;\n  gl++;\n  set<long long, greater<long long>> s;\n  for (long long i = 0; i < n; i++) {\n    long long a;\n    cin >> a;\n    s.insert(a);\n  }\n  long long cnt = 0;\n  long long offset = 0;\n  for (auto a : s) {\n    if (a - offset > 0) {\n      cnt++;\n      offset += r;\n    }\n  }\n  cout << cnt << \"\\n\";\n}\nint main() {\n  long long tests = 1;\n  cin >> tests;\n  while (tests--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long FASTIO = []() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  return 0;\n}();\nsigned main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    vector<long long> x;\n    set<long long> s;\n    for (long long i = 0; i < n; i++) {\n      long long c;\n      cin >> c;\n      s.insert(c);\n    }\n    for (long long i : s) {\n      x.push_back(i);\n    }\n    reverse(x.begin(), x.end());\n    long long ans = 0;\n    for (long long i = 0; i < x.size(); i++) {\n      if (x[i] - ans * r > 0) {\n        ans++;\n      }\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nvector<int> X;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    for (int i = int(0); i < int(n); ++i) {\n      int x;\n      cin >> x;\n      X.push_back(x);\n    }\n    sort((X).begin(), (X).end());\n    X.resize(distance(X.begin(), unique((X).begin(), (X).end())));\n    reverse((X).begin(), (X).end());\n    long long ans = 0;\n    for (long long i = 0; i < int((X).size()); i++) {\n      if (X[i] - i * r > 0)\n        ans++;\n      else\n        break;\n    }\n    cout << ans << endl;\n    X.clear();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int64_t N = 1e6 + 5, M = 1e9 + 7;\nint64_t a[N];\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  int64_t q, n, r;\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    int64_t c = 1;\n    for (int64_t i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    for (int64_t i = 1, k = 0; i < n; i++)\n      if (a[n - 1 - i] != a[n - i]) {\n        k++;\n        if (a[n - 1 - i] - r * k > 0) c++;\n      }\n    cout << c << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "#TO MAKE THE PROGRAM FAST\n\n''' ----------------------------------------------------------------------------------------------------  '''\nimport sys\nimport math\nfrom collections import *\nfrom functools import reduce\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(100000)\n''' ----------------------------------------------------------------------------------------------------  '''\n\n\n#FOR TAKING INPUTS\n\n''' ----------------------------------------------------------------------------------------------------  '''\ndef li():return [int(i) for i in input().rstrip('\\n').split(' ')]\ndef val():return int(input().rstrip('\\n'))\ndef st():return input().rstrip('\\n')\ndef sttoli():return [int(i) for i in input().rstrip('\\n')]\n''' ----------------------------------------------------------------------------------------------------  '''\n\n\n\n#Functions\n''' ----------------------------------------------------------------------------------------------------  '''\n\n\ndef gcdfinder():\n    l = []\n    for i in range(1,7001):\n        temp = []\n        for j in range(1,7001):\n            temp.append(math.gcd(i,j))\n        l.append(temp)\n    return l\n\n\n\n\n''' ----------------------------------------------------------------------------------------------------  '''\n\n\n#MAIN PROGRAM\n\n''' ----------------------------------------------------------------------------------------------------  '''\n\nfor _ in range(val()):\n    x, y = li()\n    a = list(set(li()))\n    a.sort()\n    curr = 0\n    tot = 0\n    for i in range(len(a)-1,-1,-1):\n        if a[i] - curr<=0:\n            break\n        else:\n            tot+=1\n            curr += y\n    print(tot)\n\n\n\n\n\n\n''' ----------------------------------------------------------------------------------------------------  '''\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio;\n  cin.tie(0);\n  cout.tie(0);\n  int q, n, r;\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    cin >> n >> r;\n    int arr[n];\n    int counter = 0;\n    for (int j = 0; j < n; j++) {\n      cin >> arr[j];\n    }\n    sort(arr, arr + n);\n    for (int j = n - 1; j >= 1; j--) {\n      if (arr[j] - (counter * r) > 0 && arr[j] != arr[j - 1]) {\n        counter += 1;\n      }\n    }\n    if (arr[0] - (counter * r) > 0) {\n      counter += 1;\n    }\n    cout << counter << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, r, ind;\nlong long a[100005];\nbool check(long long mid) {\n  long long ct = 0;\n  for (int i = 0; i < ind; i++) {\n    long long val = a[i] - mid * r;\n    if (val > 0) ct++;\n  }\n  if (ct <= mid)\n    return true;\n  else\n    return false;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    map<long long, int> mp;\n    ind = 0;\n    for (int i = 0; i < n; i++) {\n      long long num;\n      cin >> num;\n      if (mp.find(num) == mp.end()) {\n        a[ind++] = num;\n        mp[num] = 1;\n      }\n    }\n    long long low = 1, high = ind, mid, pos = -1;\n    sort(a, a + ind);\n    while (low <= high) {\n      mid = (low + high) / 2;\n      if (check(mid)) {\n        pos = mid;\n        high = mid - 1;\n      } else\n        low = mid + 1;\n    }\n    cout << pos << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "INT_MAX=10**30+7\nMOD=10**9+7\nimport sys  \ninput = sys.stdin.readline\ndef INPUT():return list(int(i) for i in input().split())\ndef LIST_1D_ARRAY(n):return [0 for _ in range(n)]\ndef LIST_2D_ARRAY(m,n):return [[0 for _ in range(n)]for _ in range(m)]\n\n#=====================================================================\n#to claculate the min mod sum differnce of consecutive of a whole subsequence\ns=''\nfor i in range(int(input())):\n    n,r=INPUT()\n    C=INPUT()\n    b=0\n    A=list(set(C))\n    n=len(A)\n    #print(A)\n    A.sort()\n    while(n>0 and A[-1]>=0):\n        A[-1]=A[-1]-b*r\n        if A[-1]<=0:\n            break\n        else:\n            b+=1\n            A.pop()\n            n-=1\n    s+=str(b)+\"\\n\"\nprint(s)\n    #print()\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nq = int(input())\nfor _ in range(q):\n\tn, r = map(int, input().split())\n\txs = sorted(list(set(map(int, input().split()))))\n\tcounts = [(x + r - 1) / r for x in xs][::-1]\n\tans = 0\n\tp = 0\n\twhile p < len(counts):\n\t\tif counts[p] < p + 1:\n\t\t\tans = p\n\t\t\tbreak\n\t\tp += 1\n\tif p == len(counts):\n\t\tans = len(counts)\n\tprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline void fastio() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n}\nint dx[] = {-1, 0, 1, 0, -1, -1, 1, 1};\nint dy[] = {0, 1, 0, -1, -1, 1, 1, -1};\nint main() {\n  fastio();\n  int t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    set<long long, greater<long long> > s;\n    for (int i = 0; i <= n - 1; i++) {\n      long long x;\n      cin >> x;\n      s.insert(x);\n    }\n    long long ans = -1;\n    long long cnt = 0;\n    for (auto i : s) {\n      if ((i - (r * cnt)) > 0) {\n        cnt++;\n        continue;\n      } else {\n        ans = cnt;\n        break;\n      }\n    }\n    ans = cnt;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n, r;\n    cin >> n >> r;\n    vector<long long int> v(n);\n    set<long long int, greater<long long int>> s;\n    for (int i = 0; i < n; i++) {\n      cin >> v[i];\n      s.insert(v[i]);\n    }\n    long long int ans = 0, val, curr = 0;\n    while (!s.empty()) {\n      long long int val = *(s.begin());\n      s.erase(s.begin());\n      val -= curr * r;\n      if (val > 0) {\n        ans++;\n        curr++;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.util.Collections;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author ijxjdjd\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int t = in.nextInt();\n            for (int iter = 0; iter < t; iter++) {\n                int N = in.nextInt();\n                int R = in.nextInt();\n                ArrayList<Integer> coords = new ArrayList<>();\n                for (int i = 0; i < N; i++) {\n                    coords.add(in.nextInt());\n                }\n                Collections.sort(coords);\n                int moveLeft = 0;\n                int cnt = 0;\n                HashSet<Integer> hit = new HashSet<>();\n                for (int i = N - 1; i >= 0; i--) {\n                    if (!hit.contains(coords.get(i))) {\n                        if (coords.get(i) - moveLeft > 0) {\n                            hit.add(coords.get(i));\n                            moveLeft += R;\n                            cnt++;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                out.println(cnt);\n            }\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10;\nint a[N], s[N];\nint q, n, r;\nint main() {\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    sort(a + 1, a + 1 + n);\n    int j = 1;\n    for (int i = 1; i <= n; i++) {\n      if (s[j - 1] != a[i]) {\n        s[j] = a[i];\n        j++;\n      }\n    }\n    int sum = 0;\n    int ra = 0;\n    for (int i = j - 1; i >= 1; i--) {\n      if (s[i] - ra <= 0) {\n        break;\n      }\n      sum++;\n      ra += r;\n    }\n    cout << sum << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import ceil\nfrom sys import stdin\ninput = stdin.readline\n\nq = int(input())\nfor i in range(q):\n    n, r = map(int, input().split())\n    my_list = sorted(set(map(int, input().split())))\n    list_of_answer = []\n    for j in range(len(my_list)):\n        list_of_answer.append(min(len(my_list) - j, ceil(my_list[j] / r)))\n    print(max(list_of_answer))\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\n# noinspection PyShadowingBuiltins\nfrom typing import List, Any\n\ninput = lambda: stdin.readline().rstrip(\"\\r\\n\")\ninput_a = lambda fun: map(fun, stdin.readline().split())\n\n\ndef read():\n    n, r = input_a(int)\n    a = set(input_a(int))\n    return n, r, a\n\n\ndef solve(n, r, a: set):\n    a: list = sorted(list(a), reverse=True)\n    for i in range(len(a)):\n        if a[i] - i * r <= 0:\n            return i\n    return i + 1\n\n\nfor t in range(int(input())):\n    result = solve(*read())\n    print(result)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\n\n\npublic class Main {\n\n    private static int[][] st;\n    private static int [] logs;\n    private static Set<List<Integer>> permutations;\n    private static int index = 0;\n    private static int max = 0;\n    public static void main(String[] args) throws IOException {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        InputReader.OutputWriter out = new InputReader.OutputWriter(outputStream);\n        Scanner scanner = new Scanner(System.in);\n\n\n        int t = in.nextInt();\n        while (t-->0) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n            Set<Integer> set = new HashSet<>();\n            for (int i = 0; i < n; i++) {\n                set.add(in.nextInt());\n            }\n            int [] a = new int[set.size()];\n            int index = 0;\n            for(int i : set) {\n                a[index++] = i;\n            }\n            shuffle(a);\n            Arrays.sort(a);\n            int count = 0;\n            int min = 0;\n            for (int i = a.length - 1; i >=0; i--) {\n                if(count > 0) {\n                    a[i]-=r*count;\n                }\n                if(a[i] > 0) {\n                    min++;\n                }\n                count++;\n            }\n            out.println(min);\n        }\n\n\n        out.flush();\n    }\n    private static void shuffle(int [] a) {\n        for (int i = 0; i < a.length; i++) {\n            int index = (int)(Math.random()*(i+1));\n            int temp = a[i];\n            a[i] = a[index];\n            a[index] = temp;\n        }\n    }\n    private static int sumOfDigits(int n) {\n        int sum = 0;\n        while (n > 0) {\n            sum+=n%10;\n            n/=10;\n        }\n        return sum;\n    }\n    private static String reverse(char [] c) {\n        int i = 0;\n        int j = c.length - 1;\n        while (i <= j) {\n            char temp = c[i];\n            c[i] = c[j];\n            c[j] = temp;\n            i++;\n            j--;\n        }\n        return new String(c);\n    }\n    private static boolean isPalindrome (StringBuilder sb) {\n        int i = 0;\n        int j = sb.length() - 1;\n        while (i <= j) {\n            if(sb.charAt(i++) != sb.charAt(j--)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private static boolean isPalindrome(String s) {\n        int i = 0;\n        int j = s.length() - 1;\n        while (i < j) {\n            if(s.charAt(i) != s.charAt(j)) {\n                return false;\n            }\n            i++;\n            j--;\n        }\n        return true;\n    }\n    private static void outputQueue(Map<String,LinkedList<String>> map, String faculty, InputReader.OutputWriter out) {\n        out.println(faculty+\":\");\n        LinkedList<String> q = map.get(faculty);\n        while (!q.isEmpty()) {\n            out.println(q.pollFirst());\n        }\n        out.println();\n    }\n\n    public static long gcd(long a, long b) {\n       while (b > 0) {\n           long temp = a;\n           a = b;\n           b = temp%b;\n       }\n       return a;\n    }\n\n\n    private static int factorization(long n) {\n        Set<Long> set = new HashSet<>();\n        for(long i = 2; i * i <=n; i++) {\n            while (n % i == 0) {\n                set.add(i);\n                n /= i;\n            }\n        }\n        if(n > 1) set.add(n);\n        return set.size();\n    }\n\n    private static void permute(int [] a, int l, int r) {\n        if(l == r) {\n            List<Integer> list = new ArrayList<>();\n            for(int i : a) list.add(i);\n            permutations.add(list);\n        }\n        else {\n            for (int i = l; i <=r; i++) {\n                swap(a,l,i);\n                permute(a,l+1,r);\n                swap(a,l,i);\n            }\n        }\n    }\n    private static void swap(int [] a, int l, int r) {\n        int temp = a[l];\n        a[l] = a[r];\n        a[r] = temp;\n    }\n\n}\n\nclass InputReader extends BufferedReader {\n    StringTokenizer tokenizer;\n\n    public InputReader(InputStream inputStream) {\n        super(new InputStreamReader(inputStream), 32768);\n    }\n\n    public InputReader(String filename) {\n        super(new InputStreamReader(Thread.currentThread().getContextClassLoader().getResourceAsStream(filename)));\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(readLine());\n            } catch (IOException e) {\n                throw new RuntimeException();\n            }\n        }\n        return tokenizer.nextToken();\n    }\n\n    public Integer nextInt(){\n        return Integer.valueOf(next());\n    }\n    public Long nextLong() {\n        return  Long.valueOf(next());\n    }\n    public Double nextDouble() {\n        return Double.valueOf(next());\n    }\n    static class OutputWriter extends PrintWriter {\n        public OutputWriter(OutputStream outputStream) {\n            super(outputStream);\n        }\n\n        public OutputWriter(Writer writer) {\n            super(writer);\n        }\n\n        public OutputWriter(String filename) throws FileNotFoundException {\n            super(filename);\n        }\n\n        public void close() {\n            super.close();\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  sort(a, a + n);\n  int moves = 0;\n  int current = 0;\n  int left = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    if (current == a[i]) {\n      continue;\n    }\n    if (a[i] - left > 0) {\n      moves++;\n      current = a[i];\n      left += k;\n    } else {\n      break;\n    }\n  }\n  cout << moves << endl;\n}\nint main() {\n  int t = 1;\n  cin >> t;\n  for (int i = 0; i < t; i++) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n#input = sys.stdin.readline\n#sys.stdin = open(\"input.in\", \"r\")\n#sys.stdout = open(\"output.out\", \"w\")\n\nans = []\nfor i in range(int(input())):\n    n, r = map(int, input().split())\n    data = list(set(map(int, input().split())))\n    data.sort()\n    ans_here = 1\n    mult = 1\n    pos = len(data)-2\n    while pos >= 0 and data[pos] > mult*r:\n        mult += 1\n        ans_here += 1\n        pos -= 1\n    ans.append(ans_here)\nfor x in ans:\n    print(x)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q, n, r, p;\n  cin >> q;\n  vector<int> ans(q, 0);\n  for (int i = 0; i < q; ++i) {\n    p = 0;\n    cin >> n >> r;\n    vector<int> x(n);\n    for (int j = 0; j < n; ++j) cin >> x[j];\n    sort(x.begin(), x.end());\n    for (int j = n - 1; j > -1 && x[j] > p; ++ans[i]) {\n      p += r;\n      for (int v = x[j]; j > -1 && x[j] == v; --j) {\n      }\n    }\n  }\n  for (int i = 0; i < q; ++i) cout << ans[i] << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\nimport java.util.Scanner;\nimport java.io.BufferedReader;\nimport java.util.Collections;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author ToriKaraage\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskF2 solver = new TaskF2();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskF2 {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int q = in.nextInt();\n            for (int i = 0; i < q; i++) {\n                int n = in.nextInt(), r = in.nextInt();\n                int pushback = 0, shots = 0;\n                PriorityQueue<Integer> coords = new PriorityQueue<>(Collections.reverseOrder());\n                for (int j = 0; j < n; j++) {\n                    coords.add(in.nextInt());\n                }//pushback + 1?;\n                while (coords.size() > 0 && coords.peek() > pushback) {\n                    shots++;\n                    pushback += r;\n                    int peek = coords.peek();\n                    while (coords.size() > 0 && coords.peek() == peek) {\n                        coords.poll();\n                    }\n                }\n                out.println(shots);\n            }\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long power(long long a, long long b) {\n  if (b == 0) return 1;\n  long long s = power(a, b / 2);\n  s *= s;\n  if (b & 1) return (s * a);\n  return s;\n}\nsigned main() {\n  ios_base::sync_with_stdio(NULL);\n  cin.tie(0);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n;\n    cin >> n;\n    long long r;\n    cin >> r;\n    vector<long long> a;\n    set<long long> s;\n    for (long long i = 0; i < n; i++) {\n      long long x;\n      cin >> x;\n      a.push_back(x);\n      s.insert(a[i]);\n    }\n    sort(a.begin(), a.end());\n    a.clear();\n    for (long long i : s) {\n      a.push_back(i);\n    }\n    vector<long long> temp;\n    long long ans = 0;\n    for (long long i = a.size() - 1; i >= 0; i--) {\n      long long cnt = temp.size();\n      long long si = 0, ei = temp.size() - 1;\n      if (a[i] - cnt * r <= 0) {\n        continue;\n      }\n      temp.push_back(i);\n      ans++;\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool check(long long int mid, long long int r, vector<long long int>& a) {\n  long long int d = 0;\n  long long int cnt = 0;\n  for (long long int i = a.size() - 1; i >= 0; i--) {\n    if (a[i] - d <= 0)\n      continue;\n    else {\n      if (cnt < mid) {\n        d += r;\n        cnt++;\n      } else\n        return false;\n    }\n  }\n  return true;\n}\nvoid solve() {\n  long long int n, r;\n  cin >> n >> r;\n  vector<long long int> a(n);\n  for (long long int i = 0; i < n; i++) cin >> a[i];\n  sort(a.begin(), a.end());\n  a.erase(unique(a.begin(), a.end()), a.end());\n  long long int tl = -1, tr = 1e9;\n  while (tr - tl > 1) {\n    long long int mid = (tl + tr) / 2;\n    if (check(mid, r, a))\n      tr = mid;\n    else\n      tl = mid;\n  }\n  cout << tr << \"\\n\";\n}\nsigned main() {\n  long long int t;\n  cin >> t;\n  for (long long int i = 0; i < t; i++) solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, t, x, y, z;\nlong long int mn = 8675435789, mx = -8675868757, PI = 3.14159265359,\n              md = 1000000007, aa = 0, bb = 0, cc = 0;\nstring r, s, u, v, w;\nlong long int a[250002], b[250002];\nqueue<long long int> qu, qe;\npair<long long int, long long int> pp[30030];\nset<string> se, sa;\nint main() {\n  {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n  }\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    map<long long int, long long int> mp;\n    for (i = 0; i < n; i++) {\n      cin >> x;\n      if (mp[x])\n        a[i] = 0;\n      else\n        a[i] = x;\n      mp[x]++;\n    }\n    sort(a, a + n);\n    reverse(a, a + n);\n    cc = 0, bb = 0;\n    for (i = 0; i < n; i++) {\n      a[i] = a[i] - (cc * k);\n      if (a[i] > 0) cc++;\n    }\n    cout << cc << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    def bin_search():\n        l = 0\n        r = len(x) - 1\n        while r - l > 1:\n            m = (l + r) // 2\n            if check(m):\n                l = m\n            else:\n                r = m\n        return l\n\n    def check(b):\n        opa = len(x) - 1 - b\n        if x[b] - r * opa <= 0:\n            return True\n        else:\n            return False\n\n    q = int(input())\n    # file = open(\"output.txt\", 'w')\n    kek = []\n\n    for i in range(q):\n        x = []\n        n, r = map(int, input().split())\n        y = set(map(int, input().split()))\n        x = list(sorted(y))\n        # x.sort()\n        if len(x) == 1:\n            kek.append(1)\n            continue\n        if x[0] - len(x) * r > 0:\n            kek.append(len(x))\n            continue\n        lol = bin_search()\n        if lol == 0:\n            if check(lol):\n                kek.append(len(x) - lol - 1)\n            else:\n                kek.append(len(x))\n        else:\n            kek.append(len(x) - lol - 1)\n    print('\\n'.join(map(str, kek)))\n\n\nmain()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n \npublic class Main\n{\n\tstatic final int mod = (int)1e9+7;\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tFastReader in = new FastReader();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint test = in.nextInt();\n\t\twhile(test-- > 0)\n\t\t{\n\t\t\tint n = in.nextInt();\n\t\t\tint r = in.nextInt();\n\t\t\tInteger[] arr = new Integer[n];\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\tarr[i] = in.nextInt();\n\t\t\tArrays.sort(arr);\n\t\t\tint ans = 0, rf = 0;\n\t\t\tint i = n - 1;\n\t\t\twhile(i >= 0 && arr[i] - rf > 0)\n\t\t\t{\n\t\t\t\twhile(i > 0 && Integer.compare(arr[i], arr[i - 1]) == 0)\n\t\t\t\t{\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\trf += r;\n\t\t\t\tans++;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t\tout.flush();\n\t}\n}\n \nclass FastReader\n{\n\tBufferedReader br;\n\tStringTokenizer st;\n \n\tpublic FastReader()\n\t{\n\t    br = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n\tpublic String next() throws IOException\n\t{\n\t    if(st == null || !st.hasMoreElements())\n\t    {\n\t        st = new StringTokenizer(br.readLine());\n\t    }\n\t    return st.nextToken();\n\t}\n \n\tpublic int nextInt() throws IOException\n\t{\n\t    return Integer.parseInt(next());\n\t}\n \n\tpublic long nextLong() throws IOException\n\t{\n\t    return Long.parseLong(next());\n\t}\n \n\tpublic String nextLine() throws IOException\n\t{\n\t\treturn br.readLine();\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "s=''\nfor  tc in  range(int(input())):\n    a,b = map(int,input().split())\n    l = set(map(int,input().split()))\n    ans=0\n    d=0\n    for i in sorted(l,reverse=True):\n        if i<=d:\n            break\n        ans+=1\n        d+=b\n    s+=str(ans)+'\\n'\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nq=int(input())\nfor i in range(q):\n    n,r = list(map(int,sys.stdin.readline().split(\" \")))\n    x = sorted(set(list(map(int, sys.stdin.readline().split(\" \")))),reverse=True)\n    count=0\n    n=len(x)\n    while count<n and x[count]-(r*count)>0:\n        count+=1\n    print(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    set<long long> s;\n    while (n--) {\n      long long x;\n      cin >> x;\n      s.insert(x);\n    }\n    long long ss = s.size();\n    auto it = s.rbegin();\n    long long i = 0;\n    set<long long> s1;\n    for (it = s.rbegin(); it != s.rend(); it++) {\n      s1.insert(*it - i * r);\n      i++;\n    }\n    i = 0;\n    auto itr = s1.begin();\n    for (itr = s1.begin(); itr != s1.end(); itr++) {\n      if (*itr > 0) break;\n      i++;\n    }\n    cout << ss - i << endl;\n  }\n}\nint main() {\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "// No sorceries shall previal. //         \nimport java.util.*;\nimport java.io.PrintWriter;\n\npublic class InVoker {\t\n\t\n\t public static void sort(int arr[], int start, int end) { \t\t\n\t\t\tif(start>=end)\n\t\t\t\treturn;\t\t\n\t\t\tint mid=(start+end)/2;\n\t\t\tsort(arr,start,mid);\n\t\t\tsort(arr,mid+1,end);\n\t\t\tmerge(arr,start,mid,end);\t\n\t\t}\n\t\t\t\n\t\tpublic static void merge(int arr[], int start, int mid, int end) {\n\t\t\t\n\t\t\tint i, j=mid+1,c=0;\n\t\t\tint temp[]= new int[end-start+1];\n\t\t\tfor(i=start;i<=mid && j<=end;c++) {\n\t\t\t\tif(arr[i]<=arr[j]) {\n\t\t\t\t\ttemp[c]=arr[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttemp[c]=arr[j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile(i<=mid) {\n\t\t\t\ttemp[c]=arr[i];\n\t\t\t\ti++;c++;\n\t\t\t}\n\t\t\twhile(j<=end) {\n\t\t\t\ttemp[c]=arr[j];\n\t\t\t\tj++;c++;\n\t\t\t}\n\t\t\tc=0;\n\t\t\tfor(i=start;i<=end;i++,c++)\n\t\t\t\tarr[i]=temp[c];\n\t\t}\n\t\n    public static void main(String args[]) {\n    \t\t\n    \tScanner inp = new Scanner(System.in);\n    \tPrintWriter out= new PrintWriter(System.out);\n    \t\n    \tint t=inp.nextInt();\n    \twhile(t-->0) {\n    \t\tint n=inp.nextInt();\n    \t\tint r=inp.nextInt();\n    \t\tint a[]=new int[n];\n    \t\tfor(int i=0;i<n;i++) {\n    \t\t\ta[i]=inp.nextInt();\n    \t\t}\n    \t\tsort(a,0,n-1);\n    \t\tint gg=1;\n    \t\tfor(int i=n-2;i>=0;i--) {\n    \t\t\tif(a[i]>gg*r && a[i]!=a[i+1]) {\n    \t\t\t\tgg++;\n    \t\t\t}\n    \t\t}\n    \t\tout.println(gg);\n    \t}\n    \t\n    \tout.close();\n    \tinp.close();\n    \t\t\t\t\t\n    }    \t\t\n}"
        },
        {
            "language": 3,
            "solution": "def fastio():\n\timport sys\n\tfrom io import StringIO \n\tfrom atexit import register\n\tglobal input\n\tsys.stdin = StringIO(sys.stdin.read())\n\tinput = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\tsys.stdout = StringIO()\n\tregister(lambda : sys.__stdout__.write(sys.stdout.getvalue()))\nfastio()\n \nfor _ in range(int(input())):\n    n,r = map(int, input().split())\n    s = list(map(int, input().split()))\n    s.sort()\n    ans = 0;\n    d = 0\n    ans = 0\n    for i in sorted(set(s),reverse = True):\n        if i <= d:\n            break\n        d+=r\n        ans+=1\n        \n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\n\npublic class B {\n    public static void main(String[] args) throws Exception {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int test = in.nextInt();\n        for (int t = 1; t <= test; t++) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n            long d = 0;\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = in.nextInt();\n            }\n            shuffle(a);\n            Arrays.sort(a);\n            a = unique(a);\n            int ans = 0;\n            for (int i = a.length - 1; i >= 0; i--) {\n                if (a[i] - d <= 0) break;\n                d += r;\n                ans++;\n            }\n            pw.println(ans);\n        }\n\n        pw.close();\n    }\n\n    public static int[] unique(int[] a){\n        int n = a.length;\n        int p = 0;\n        for(int i = 0;i < n;i++) {\n            if(i == 0 || a[i] != a[i-1])a[p++] = a[i];\n        }\n        return Arrays.copyOf(a, p);\n    }\n\n    public static void shuffle(int[] a) {\n        Random rnd = new Random();\n        for (int i = a.length - 1; i >= 1; i--) {\n            int j = rnd.nextInt(i + 1);\n            int t = a[i];\n            a[i] = a[j];\n            a[j] = t;\n        }\n    }\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n}"
        },
        {
            "language": 3,
            "solution": "\nans = []\nfor _ in range(int(input())):\n    n, r = map(int, input().split())\n    x = set(map(int, input().split()))\n    x = sorted(x, reverse=1)\n    # print(x, ans)\n    # ans = math.ceil(curr / r)\n    # last = -1\n\n    # low = 0\n    # high = len(x)\n    # while low < high:\n    #     mid = (high + low) // 2\n    #     curr = x[mid]\n    #     pos = curr - mid * r\n    #     if pos <= 0:\n    #         high = mid\n    #     else:\n    #         low = mid + 1\n    # print(low)\n\n    for i, curr in enumerate(x):\n        pos = curr - i * r\n        if pos <= 0:\n            ans.append(i)\n            break\n    else:\n        ans.append(len(x))\n\nprint('\\n'.join(map(str, ans)))\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\na = int(stdin.readline())\n\nresult = ''\nfor _ in range(a):\n    n, r = map(int, stdin.readline().split())\n    monsters = [int(m) for m in stdin.readline().split()]\n    monsters.sort(reverse=True)\n\n    shots, acc = 0, 0\n    for i in range(len(monsters)):\n        if i and monsters[i] == monsters[i-1]:\n            continue\n\n        if monsters[i] - acc <= 0:\n            break\n\n        shots += 1\n        acc += r\n\n    stdout.write(str(shots) + \"\\n\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int LIM = 1e5 + 5, MOD = 1e9 + 7;\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long fastpowMOD(long long a, long long p, long long MOD) {\n  if (p == 0) return 1;\n  long long z = fastpowMOD(a, p / 2, MOD);\n  z = (z * z) % MOD;\n  if (p % 2) z = (z * a) % MOD;\n  return z;\n}\nbool seive[100005];\nvoid SieveOfEratosthenes(long long n) {\n  memset(seive, true, sizeof(seive));\n  for (long long p = 2; p * p <= n; p++)\n    if (seive[p] == true)\n      for (long long i = p * p; i <= n; i += p) seive[i] = false;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long n, r;\n    cin >> n >> r;\n    long long a[n + 5];\n    set<long long> s;\n    long long i;\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n      s.insert(a[i]);\n    }\n    vector<long long> v;\n    for (auto it : s) v.push_back(it);\n    reverse(v.begin(), v.end());\n    long long pre = 0;\n    long long ans = 0;\n    for (auto it : v) {\n      if (it + pre > 0) {\n        ans++;\n        pre -= r;\n      } else\n        break;\n    }\n    cout << ans;\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100010];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int q = 0, n = 0, r = 0, x = 0;\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    for (int i = 0; i < n; ++i) cin >> a[i];\n    sort(a, a + n);\n    x = unique(a, a + n) - a;\n    int res = 0;\n    for (int i = x - 1; i >= 0; --i) res += (a[i] - res * r > 0);\n    cout << res << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n \nimport static java.lang.Math.*;\n \npublic class Solution implements Runnable \n{\n\tstatic class InputReader \n\t{\n\t\tprivate InputStream stream;private byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\tprivate SpaceCharFilter filter;\n\t\tprivate BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        public InputReader(InputStream stream){this.stream = stream;}\n\t\tpublic int read(){if (numChars==-1) throw new InputMismatchException();if (curChar >= numChars){curChar = 0;try{numChars = stream.read(buf);}catch (IOException e){throw new InputMismatchException();\t}if(numChars <= 0)return -1;}return buf[curChar++];}\n     \tpublic String nextLine(){String str = \"\";try{str = br.readLine();}catch (IOException e){e.printStackTrace();}return str;}\n\t\tpublic int nextInt(){int c = read();\twhile(isSpaceChar(c))c = read();\tint sgn = 1; if (c == '-'){sgn = -1;c = read();\t}int res = 0;do{if(c<'0'||c>'9') throw new InputMismatchException();res *= 10;res += c - '0';c = read();}while (!isSpaceChar(c));return res * sgn;}\n        public long nextLong(){int c = read();while (isSpaceChar(c))c = read();int sgn = 1;if (c == '-'){sgn = -1;c = read();}long res = 0;do{if (c < '0' || c > '9')throw new InputMismatchException();res *= 10;res += c - '0';c = read();}while (!isSpaceChar(c));return res * sgn;}\n\t\tpublic double nextDouble(){int c = read();while (isSpaceChar(c))c = read();int sgn = 1;if (c == '-'){sgn = -1;c = read();}double res = 0;while (!isSpaceChar(c) && c != '.'){if (c == 'e' || c == 'E')return res * Math.pow(10, nextInt());if (c < '0' || c > '9')\n\t\tthrow new InputMismatchException();res *= 10;res += c - '0';c = read();}if (c == '.'){c = read();double m = 1;while (!isSpaceChar(c)){if (c == 'e' || c == 'E')return res * Math.pow(10, nextInt());if (c < '0' || c > '9')throw new InputMismatchException();m /= 10;res += (c - '0') * m;c = read();}}return res * sgn;}\n        public String readString(){int c = read();while (isSpaceChar(c))c = read();StringBuilder res = new StringBuilder();do{res.appendCodePoint(c);c = read();}while (!isSpaceChar(c));return res.toString();}\n\t\tpublic boolean isSpaceChar(int c){if (filter != null)return filter.isSpaceChar(c);return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;}\n\t\tpublic String next(){return readString();}\n        public interface SpaceCharFilter{public boolean isSpaceChar(int ch);}\n\t}\n\t\t\n\tpublic static void main(String args[]) throws Exception{new Thread(null, new Solution(),\"Main\",1<<27).start();}\n\n\tpublic static int gcd(int a, int b) { \tif (a == 0) return b; return gcd(b % a, a);} \n  \n\tpublic static int findGCD(int arr[], int n) { \tint result = arr[0]; for (int i = 1; i < n; i++) result = gcd(arr[i], result);return result; }\t \n\t\n\tstatic long power(long x, long y) { long temp; if( y == 0) return 1; temp = power(x, y/2)%1000000007;  if (y%2 == 0)  return (temp*temp)%1000000007; \n        else{ if(y > 0) return (((x*temp)%1000000007)*temp)%1000000007; else return (((temp*temp)%1000000007)/x)%1000000007; } }  \n        \n\tstatic void sortbycolomn(long arr[][], int col)\n    { \n        Arrays.sort(arr, new Comparator<long[]>() { \n        @Override              \n        public int compare(final long[] entry1,final long[] entry2) { \n            if (entry1[col] > entry2[col])return 1; \n            else return -1; \n        } \n        });   \n    }\n    \n\tpublic void run()\n    {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n\t\t\n        int t=in.nextInt();\n        while(t--!=0){\n            int n=in.nextInt();\n            int r=in.nextInt();\n            ArrayList<Integer> arr=new ArrayList<>();\n            HashMap<Integer,Integer> map=new HashMap<>();\n            int x=0;\n            for(int i=0;i<n;i++){ \n                x=in.nextInt();\n                if(!map.containsKey(x)){\n                    map.put(x,0);\n                    arr.add(x);\n                }\n            }\n            Collections.sort(arr);\n            int rr=0;\n            int count=0;\n            for(int i=arr.size()-1;i>=0;i--){\n                if(arr.get(i)-rr>0){\n                    count++;\n                    rr+=r;\n                }\n                else\n                    break;\n            }\n            \n            w.println(count);\n            \n        }\n                \n        w.flush();\n        w.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.util.Vector;\nimport java.io.*;\npublic class Fourth{\n    public static int min(int n1, int n2){\n        if(n1 <= n2){\n            return n1;\n        }\n        else{\n            return n2;  \n        }\n    }\n    public static int min_moves(Vector<Monster> array, int r) {\n        int largo = array.size();\n        int l = 0;\n        Collections.sort(array); //primero ordeno el arreglo en base a las coordenadas en X\n        while(l < largo - 1){ //luego si pillo a m\u00e1s de un monstruo en la misma coordenada X, los elimino hasta dejar a 1 solo\n            if(array.elementAt(l).coordenadaX == array.elementAt(l + 1).coordenadaX){\n                array.removeElementAt(l);\n                largo--;\n            }\n            else{\n                l++;\n            }\n        }\n        //parte crucial del algoritmo\n        //recordar que ac\u00e1 ya no tengo monstruos \"repetidos\" y adem\u00e1s los tengo ordenados\n        //ire viendo de izquierda a derecha, si el monstruo array[h] se elimina \"automaticamente\"\n        //es decir, se elimina sin tener que disparar justo a su posici\u00f3n.\n        //luego, cuando llegue al primer monstruo de izq a derecha que tenga que dispararle directamente\n        //para matarlo, retorno la cantidad de monstruos que hay a su derecha CONTANDOLO, es decir, la\n        //cantidad de veces que tendr\u00e9 que disparar para matarlos a todos\n        int h = 0;\n        while(array.elementAt(h).coordenadaX <= r *(largo - 1 - h)){\n            h++;\n        }\n        return largo - h;\n\n    }                                                                                                                                                                                                                                                                                                                                                                                       \n\n    public static void main(final String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int q = Integer.parseInt(br.readLine());\n        ArrayList<Integer> answers = new ArrayList<Integer>();\n\n        while (q > 0) {                               \n            StringTokenizer st = new StringTokenizer(br.readLine());\n            final int n = Integer.parseInt(st.nextToken());// numero de monstruos\n            final int r = Integer.parseInt(st.nextToken()); // distancia de esparcimiento\n            // pedir n veces las coordenadas\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n            Vector<Monster> array = new Vector<Monster>();\n            int i = 0;\n            while(i < n){\n                int coord = Integer.parseInt(st2.nextToken());\n                array.addElement(new Monster(coord)); //arreglo de monstruos c/u con su posicion.\n                i++;\n            }\n            answers.add(min_moves(array, r));\n            q--;\n        }\n\n        answers.forEach((x) -> System.out.println(x));\n        \n    }\n}\n\nclass Monster implements Comparable<Monster>{\n    public Monster(final int x) {\n        this.coordenadaX = x;\n        this.alive = 1; //indica que el monstruo est\u00e1 vivo\n    }\n\n    /*\n    public void jump(final int leap, int impactPoint){ //mueve al monstruo e indica si muere o no.\n        if(coordenadaX < impactPoint){\n            this.coordenadaX = this.coordenadaX - leap;\n            //reviso si cay\u00f3 en una trampa o no...\n            if(coordenadaX <= 0){\n                this.alive = 0;\n            }\n            \n        }\n        else if(coordenadaX > impactPoint){\n            this.coordenadaX = this.coordenadaX + leap;\n        }\n        \n        else{ //coordenadaX = impactPoint\n            this.alive = 0; //muerto\n        }\n    }*/\n\n    @Override\n    public int compareTo(final Monster other) {\n        return this.coordenadaX - other.coordenadaX;\n    }\n\n    protected int coordenadaX;\n    protected int alive;\n}\n\nclass FlyingMonster extends Monster{\n    public FlyingMonster(int coordenadaX){\n        super(coordenadaX);\n        }\n\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.*;\n \npublic class ProblemB_2 {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out,true);\n        int q = in.nextInt();\n        for(int i = 0; i < q; i++) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n            int[] a = new int[n];\n            for (int j = 0; j < n; j++) {\n                a[j] = in.nextInt();\n            }\n            out.println(new Solver().solve(n, r, a));\n        }\n        out.close();\n    }\n}\nclass Solver {\n    int solve(int n, int r, int[] a) {\n        TreeSet<Integer> set = new TreeSet<>(Collections.reverseOrder());\n        for (int j = 0; j < n; j++) {\n            set.add(a[j]);\n        }\n        int ans = 0, offset = 0;\n        for(int element : set) {\n            if (element - offset > 0) {\n                ans++;\n                offset += r;\n            } else {\n                break;\n            }\n        }\n        return ans;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "ans = []\ndef solution(test):\n    for i in range(test):\n        p, r = map(int, input().split())\n        s = sorted(map(int, set(input().split())), reverse=True)\n        res = acc = 0\n        for k in s:\n            if k - acc <= 0: break\n            res += 1\n            acc += r\n        ans.append(res)\nsolution(int(input()))\nfor x in ans:\n    print(x)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int query;\n  cin >> query;\n  while (query--) {\n    int n, r, ans = 0, a;\n    cin >> n >> r;\n    set<int> s;\n    set<int>::iterator itr;\n    for (int i = 0; i < n; i++) {\n      cin >> a;\n      s.insert(a);\n    }\n    bool girdim = 1;\n    itr = s.end();\n    for (itr--;; --itr) {\n      if (*itr - (ans * r) <= 0) {\n        cout << ans << '\\n';\n        girdim = 0;\n        break;\n      }\n      ans++;\n      if (itr == s.begin()) break;\n    }\n    if (girdim) cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashSet;   \n\npublic class Main {\n\t\n\tpublic static int min_moves(ArrayList<Monster> enemigos, int throw_distance) {\n\t\tint disparos = 0;\n\t\tfor (Monster enemy:enemigos) {\n\t\t\tif (enemy.pos()-disparos*throw_distance > 0) {\n\t\t\t\tdisparos++;\n\t\t\t}\n\t\t}\n\t\treturn disparos; \n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint consultas, cantidadM, distanciaL, posicionactual;\n\t\tFastReader entrada = new FastReader();\n\t\tMonster monster;\n\t\tHashSet<Monster> posiciones = new HashSet<Monster>();\n\t\tArrayList<Monster> enemigos = new ArrayList<Monster>();\n\t\tint[] minimos;\n\t\t\n\t\tconsultas = entrada.nextInt();\n\t\tminimos = new int[consultas];\n\t\tfor (int i=0; i<consultas; i++) {\n\t\t\tcantidadM = entrada.nextInt();\n\t\t\tdistanciaL = entrada.nextInt();\n\t\t\tfor (int j=0; j<cantidadM; j++) {\n\t\t\t\tposicionactual = entrada.nextInt();\n\t\t\t\tmonster = new Monster(posicionactual);\n\t\t\t\tposiciones.add(monster);\n\t\t\t}\n\t\t\tenemigos.addAll(posiciones);\n\t\t    Collections.sort(enemigos, Collections.reverseOrder());\n\t\t\tminimos[i] = min_moves(enemigos, distanciaL);\n\t\t\tenemigos.clear();\n\t\t\tposiciones.clear();\n\t\t}\n\tfor (int n:minimos) {\n\t\tSystem.out.println(n);\n\t}\n\t\t\n\t}\n\n}\nclass FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    }\nclass Monster implements Comparable<Monster>{\n\t\n\tprivate int posicion;\n\tprivate boolean vivo = true;\n\t\n\tpublic Monster(int posicion) {\n\t\tthis.posicion = posicion;\n\t}\n\t\n\tpublic int pos() {\n\t\treturn posicion;\n\t}\n\t\n\tpublic void kill() {\n\t\tvivo = false;\n\t}\n\tpublic boolean statu() {\n\t\treturn vivo;\n\t}\n\n\t@Override\n\tpublic int compareTo(Monster monstruo) {\n\t\tif (posicion == monstruo.pos()) {\n\t\t\treturn 0;\n\t\t}\n\t\telse {\n\t\t\treturn posicion - monstruo.pos();\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic String toString() {\n\t\treturn Integer.toString(posicion);\n\t}\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + posicion;\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tMonster other = (Monster) obj;\n\t\tif (posicion != other.posicion)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100005];\nint main() {\n  int q, n, r;\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    for (int i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    int ans = 1, pos = n - 1;\n    for (int i = n - 2; i >= 0; i--) {\n      if (a[i] == a[pos]) continue;\n      if (a[i] < a[pos] && a[i] - ans * r > 0) {\n        pos = i;\n        ans++;\n      }\n      if (a[i] - ans * r == 0) break;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\n \nimport java.util.*;\nimport java.util.Map.Entry;\n \nimport javax.swing.text.InternationalFormatter;\n \nimport java.math.*;\n \npublic class template {\n \n\tpublic static PrintWriter out;\n\tstatic ArrayList<Integer>[] a;\n\tstatic HashMap<Integer, Long>[] hm;\n\tstatic int[] par;\n\tstatic int ans = 0;\n\tstatic boolean b = false;\n\tstatic int mod = 1000000007;\n \n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\t\n\t\t   Reader scn = new Reader();\n\t\t   \n\t\t   int q = scn.nextInt();\n\t\t   \n\t\t   while(q--!=0){\n\t\t\t   \n\t\t\t    int n = scn.nextInt(), r = scn.nextInt();\n\t\t\t    \n\t\t\t    TreeSet<Integer>hm = new TreeSet<>();\n\t\t\t    \n\t\t\t    for(int i=0; i<n; i++)\n\t\t\t    \t  hm.add(scn.nextInt());\n\t\t\t    \n\t\t\t    \n\t\t\t    int []a = new int[hm.size()];\n\t\t\t    \n\t\t\t     Iterator itr = hm.iterator();\n\t\t\t     \n\t\t\t     int j = 0;\n\t\t\t      while(itr.hasNext()){\n\t\t\t    \t  a[j++] = (int)itr.next(); \n\t\t\t      }\n\t\t\t      \n\t\t\t      \n\t\t\t      int ans = 1;\n\t\t\t      \n\t\t\t      for(int i=a.length-2; i>=0; i--){\n\t\t\t    \t  \n\t\t\t    \t    if(a[i]-ans*r<=0)\n\t\t\t    \t    \t  break;\n\t\t\t    \t    else\n\t\t\t    \t    \tans++;\n\t\t\t      }\n\t\t\t      \n\t\t\t      System.out.println(ans);\n\t\t   }\n\t}\n \n\t// _________________________TEMPLATE_____________________________________________________________\n \n\t// private static int gcd(int a, int b) {\n\t// if(a== 0)\n\t// return b;\n\t//\n\t// return gcd(b%a,a);\n\t// }\n \n\t// static class comp implements Comparator<Integer> {\n\t//\n\t// @Override\n\t// public int compare(Integer a, Integer b) {\n\t//\n\t//\n\t// }\n\t//\n\t// }\n \n\tstatic class pair implements Comparable<pair> {\n\t\tint i;\n\t\tint j;\n \n\t\tpair(int a, int b) {\n\t\t\ti = a;\n\t\t\tj = b;\n\t\t}\n \n\t\t@Override\n\t\tpublic int compareTo(pair o) {\n \n\t\t\treturn (int) (o.i - this.i);\n \n\t\t}\n\t}\n \n\tpublic static class Reader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n \n\t\tpublic Reader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n \n\t\tpublic Reader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n \n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[100000 + 1]; // line length\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n \n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n \n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n \n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n \n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n \n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n \n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n \n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n \n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n \n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n \n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n \n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tpublic int[][] nextInt2DArray(int m, int n) throws IOException {\n\t\t\tint[][] arr = new int[m][n];\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\t\tarr[i][j] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t}\n \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nconst int N = 1e6 + 10;\nconst long long mod = 1e9 + 7;\nvoid read(int &x) {\n  int f = 1;\n  x = 0;\n  char s = getchar();\n  while (s < '0' || s > '9') {\n    if (s == '-') f = -1;\n    s = getchar();\n  }\n  while (s >= '0' && s <= '9') x = x * 10 + s - '0', s = getchar();\n  x *= f;\n}\nint a[maxn], n, r, m;\nbool ck(int x) {\n  int k = a[m - x] - r * x;\n  if (k <= 0) return 1;\n  return 0;\n}\nint main() {\n  int t;\n  read(t);\n  while (t--) {\n    read(n);\n    read(r);\n    for (int i = 1; i <= n; i++) read(a[i]);\n    sort(a + 1, a + 1 + n);\n    m = unique(a + 1, a + 1 + n) - a - 1;\n    int l = 1, r = m;\n    int ans = 0;\n    while (l <= r) {\n      if (ck(((l + r) >> 1))) {\n        ans = ((l + r) >> 1);\n        r = ((l + r) >> 1) - 1;\n      } else\n        l = ((l + r) >> 1) + 1;\n    }\n    printf(\"%d\\n\", l);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\nfrom heapq import *\nfrom fractions import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 1000010\nMOD = 10**9+7\nspf = [i for i in range(MAXN)]\ndef sieve():\n    for i in range(2,MAXN,2):\n        spf[i] = 2\n    for i in range(3,int(MAXN**0.5)+1):\n        if spf[i]==i:\n            for j in range(i*i,MAXN,i):\n                if spf[j]==j:\n                    spf[j]=i\ndef fib(n,m):\n    if n == 0:\n        return [0, 1]\n    else:\n        a, b = fib(n // 2)\n        c = ((a%m) * ((b%m) * 2 - (a%m)))%m\n        d = ((a%m) * (a%m))%m + ((b)%m * (b)%m)%m\n        if n % 2 == 0:\n            return [c, d]\n        else:\n            return [d, c + d]\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n\ndef ncr(n,r):\n    num=den=1\n    for i in range(r):\n        num = (num*(n-i))%MOD\n        den = (den*(i+1))%MOD\n\n    return (num*(pow(den,MOD-2,MOD)))%MOD\n\ndef flush():\n    return sys.stdout.flush()\n\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'''\nfor _ in range(int(input())):\n    n,r = arrIN()\n    a = sorted(set(arrIN()),reverse=True)\n    n = len(a)\n    if n==1:\n        print(1)\n    else:\n        ans = 0\n        t = 0\n        for i in range(n):\n            a[i]-=t*r\n            if a[i]>0:\n                ans+=1\n                t+=1\n        print(ans)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t, n, r, a[100009], R, ans;\nint main() {\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    R = 0, ans = 0;\n    for (int i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    for (int i = n - 1; i >= 0; i--) {\n      while (a[i - 1] == a[i] && i > 0) i--;\n      if ((a[i] - R) > 0) R += r, ans++;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class B1238 {\n\n\tstatic FastReader in = new FastReader();\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tint t = in.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = in.nextInt();\n\t\t\tint c = in.nextInt();\n\t\t\tSet<Integer> treeSet = new TreeSet<>();\n\t\t\tint k = 0;\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ttreeSet.add(in.nextInt());\n\n\t\t\tList<Integer> arr = new ArrayList<>();\n\t\t\tfor (int x : treeSet)\n\t\t\t\tarr.add(x);\n\t\t\tint l = 0;\n\t\t\tint h = treeSet.size() - 1;\n\t\t\tint count = 0;\n\t\t\twhile (l <= h) {\n\t\t\t\tcount++;\n\t\t\t\tk += c;\n\t\t\t\twhile (l < h && arr.get(l) - k <= 0)\n\t\t\t\t\tl++;\n\t\t\t\th--;\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\n\tstatic class FastReader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\n\t\tpublic FastReader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic FastReader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[64]; // line length\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    vector<long long> v(n);\n    for (long long i = 0; i < n; i++) cin >> v[i];\n    sort(v.begin(), v.end());\n    long long c = 0;\n    for (long long i = n - 1; i >= 0;) {\n      if (v[i] - c * r <= 0) {\n        i--;\n        continue;\n      }\n      long long p = v[i];\n      long long j = i;\n      while (p == v[j] && j >= 0) {\n        j--;\n      }\n      i = j;\n      c++;\n    }\n    cout << c << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\ninput=sys.stdin.readline\nt=int(input())\n#t=1\nfor _ in range(t):\n    n,r=map(int,input().split())\n    l=list(map(int,input().split()))\n    l=list(set(l))\n    l.sort(reverse=True)\n    n=len(l)\n    shft=0\n    ans=0\n    for i in range(n):\n        if l[i]-shft>0:\n            ans+=1\n            shft+=r\n        else:\n            break\n    print(ans)            "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main\n{\n    public static void main(String args[]) throws IOException\n    {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        int q=Integer.parseInt(br.readLine());\n        for(int x=0;x<q;x++)\n        {\n            String str[]=br.readLine().split(\" \");\n            int n=Integer.parseInt(str[0]);\n            int k=Integer.parseInt(str[1]);\n            str=br.readLine().split(\" \");\n            int arr[]=new int[n];\n            Set<Integer> set=new TreeSet<>();\n            for(int i=0;i<n;i++)\n            set.add(Integer.parseInt(str[i]));\n            ArrayList<Integer> al=new ArrayList<>(set);\n            int ans=0;\n            for(int i=al.size()-1;i>=0;i--)\n            {\n                if(al.get(i)-ans*k>0)\n                ans++;\n                else\n                break;\n            }\n            System.out.println(ans);        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nI=stdin.readline\nprint=stdout.write\nfor _ in range(int(I())):\n    n,r=map(int,I().split())\n    a=list(map(int,I().split(' ')))\n    a=list(dict.fromkeys(a))\n    a.sort(reverse=True)\n    d=0\n    c=0\n    for i in a:\n        if i-(d*r)>0:\n            d+=1\n            c+=1\n        else:\n            break\n    print(str(c)+'\\n')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 1000;\nint a[N];\nint main() {\n  int q, n, t, r;\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    for (int i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    sort(a, a + n);\n    int cmp = unique(a, a + n) - a;\n    int s = 0;\n    for (int i = cmp - 1; i >= 0; i--) {\n      if (a[i] <= s * r)\n        break;\n      else\n        s++;\n    }\n    cout << s << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, r, x[200123], shot, locshot, pushed;\n  cin >> n >> r;\n  for (int i = 0; i < n; i++) cin >> x[i];\n  sort(x, x + n);\n  shot = 1;\n  locshot = x[n - 1];\n  pushed = r;\n  for (int i = n - 1; i >= 0; i--) {\n    if (x[i] != locshot && x[i] - pushed > 0) {\n      shot++;\n      locshot = x[i];\n      pushed += r;\n    }\n  }\n  cout << shot << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  if (fopen(\"input.in\", \"r\")) {\n    freopen(\"input.in\", \"r\", stdin);\n    freopen(\"output.out\", \"w\", stdout);\n  }\n  int q;\n  cin >> q;\n  while (q--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/***\n *    \u2588\u2588\u2588\u2588\u2588\u2588\u2557=====\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557====\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557====\u2588\u2588\u2588\u2588\u2588\u2588\u2557=\n *    \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557====\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d====\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d====\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n *    \u2588\u2588\u2551==\u2588\u2588\u2551====\u2588\u2588\u2588\u2588\u2588\u2557======\u2588\u2588\u2588\u2588\u2588\u2557======\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\n *    \u2588\u2588\u2551==\u2588\u2588\u2551====\u2588\u2588\u2554\u2550\u2550\u255d======\u2588\u2588\u2554\u2550\u2550\u255d======\u2588\u2588\u2554\u2550\u2550\u2550\u255d=\n *    \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d====\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557====\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557====\u2588\u2588\u2551=====\n *    \u255a\u2550\u2550\u2550\u2550\u2550\u255d=====\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d====\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d====\u255a\u2550\u255d=====\n *    ============================================\n */\n\nimport sun.font.DelegatingShape;\nimport sun.misc.IOUtils;\nimport sun.nio.cs.KOI8_U;\n\nimport javax.smartcardio.ATR;\nimport java.io.*;\nimport java.lang.reflect.Array;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n\npublic class AA implements Runnable {\n\n\n    public void run() {\n        InputReader sc = new InputReader();\n        PrintWriter out = new PrintWriter(System.out);\n        int i=0,j=0,k=0;\n        int t=0;\n        t=sc.nextInt();\n        for(int testcase = 0;testcase < t; testcase++)\n        {\n            int n=sc.nextInt();\n            int push=sc.nextInt();\n            int current=0;\n            int count=0;\n            HashSet<Integer> set=new HashSet<>();\n            for (i=0;i<n;i++)\n                set.add(sc.nextInt());\n            int[] arr = set.stream().mapToInt(Integer::intValue).toArray();\n            Arrays.sort(arr);\n            n=arr.length;\n            for (i=n-1;i>=0;i--)\n            {\n                if (arr[i]>current)\n                {\n                    count++;\n                    current+=push;\n                }\n                else\n                    break;\n            }\n            out.println(count);\n        }\n\n//================================================================================================================================\n        out.flush();\n        out.close();\n    }\n\n//================================================================================================================================\npublic static int[] sa(int n,InputReader sc)\n{\n    int inparr[]=new int[n];\n    for (int i=0;i<n;i++)\n        inparr[i]=sc.nextInt();\n    return inparr;\n}\n\n    public static long gcd(long a,long b){\n        return (a%b==0l)?b:gcd(b,a%b);\n    }\n    private static long lcm(long a, long b)\n    {\n        return a * (b / gcd(a, b));\n    }\n    public int egcd(int a, int b) {\n        if (a == 0)\n            return b;\n\n        while (b != 0) {\n            if (a > b)\n                a = a - b;\n            else\n                b = b - a;\n        }\n\n        return a;\n    }\n\n\n\n    public int countChar(String str, char c)\n    {\n        int count = 0;\n        for(int i=0; i < str.length(); i++)\n        {    if(str.charAt(i) == c)\n            count++;\n        }\n        return count;\n    }\n    static int binSearch(Integer[] inparr, int number){\n        int left=0,right=inparr.length-1,mid=(left+right)/2,ind=0;\n        while(left<=right){\n            if(inparr[mid]<=number){\n                ind=mid+1;\n                left=mid+1;\n            }\n            else\n                right=mid-1;\n            mid=(left+right)/2;\n        }\n        return ind;\n    }\n    static int binSearch(int[] inparr, int number){\n        int left=0,right=inparr.length-1,mid=(left+right)/2,ind=0;\n        while(left<=right){\n            if(inparr[mid]<=number){\n                ind=mid+1;\n                left=mid+1;\n            }\n            else\n                right=mid-1;\n            mid=(left+right)/2;\n        }\n        return ind;\n    }\n    static class Pair\n    {\n        int a,b;\n        Pair(int aa,int bb)\n        {\n            a=aa;\n            b=bb;\n        }\n        String get()\n        {\n            return a+\" \"+b;\n        }\n        String getrev()\n        {\n            return b+\" \"+a;\n        }\n    }\n\n    static boolean isPrime(long n) {\n        if(n < 2) return false;\n        if(n == 2 || n == 3) return true;\n        if(n%2 == 0 || n%3 == 0) return false;\n        long sqrtN = (long)Math.sqrt(n)+1;\n        for(long i = 6L; i <= sqrtN; i += 6) {\n            if(n%(i-1) == 0 || n%(i+1) == 0) return false;\n        }\n        return true;\n    }\n    static long factorial(long n)\n    {\n        if (n == 0)\n            return 1;\n        return n*factorial(n-1);\n    }\n//================================================================================================================================\n\n    static class InputReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public InputReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new AA(),\"Main\",1<<27).start();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "\nimport sys\ninput=sys.stdin.readline\nfor i in range(int(input())):\n    n,r = map(int,input().split())\n    a = sorted(list(set(list(map(int,input().split())))),reverse=True)\n    i = 0\n    se = 0\n    n = len(a)\n    while i<n and a[i] - se > 0:\n        i+=1\n        se+=r\n      \n    print(i)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int MOD = 998244353;\nlong long int mod = 1e9 + 7;\nlong long int INF = 1e18;\nlong long int dx[] = {1, -1, 0, 0};\nlong long int dy[] = {0, 0, 1, -1};\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n, q, r, i, count;\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    count = 0;\n    vector<long long int> m(n, 0);\n    for (i = 0; i < n; i++) {\n      cin >> m[i];\n    }\n    if (n == 1) {\n      cout << 1 << endl;\n      continue;\n    }\n    set<long long int, greater<long long int> > ri(m.begin(), m.end());\n    set<long long int, greater<long long int> >::iterator itr;\n    for (itr = ri.begin(); itr != ri.end(); ++itr) {\n      if ((*itr) - (r * count) >= 1) {\n        count++;\n      }\n    }\n    cout << count << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "\nanswers= []\n\nfor i in range(int(input())):\n\n    n, r = map(int, input().strip().split())\n    x = set(map(int, input().strip().split()))\n    x = sorted(x, reverse=True)\n\n    number_of_shots = 0\n\n    for elem in x:\n        if (elem - r * number_of_shots > 0):\n            number_of_shots += 1\n        else:\n            break\n    answers.append(number_of_shots)\n\nprint('\\n'.join(map(str, answers)))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.util.*;\n\n@SuppressWarnings(\"unused\")\npublic class Main {\n    private FastScanner in = new FastScanner(System.in);\n    private PrintWriter out = new PrintWriter(System.out);\n    final int MOD = (int)1e9+7;\n    long ceil(long a, long b){return (a + b - 1) / b;}\n    long gcd(long a, long b){\n        return b == 0 ? a : gcd(b, a % b);\n    }\n    long lcm(long a, long b){\n        return a / gcd(a, b) * b; //\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306b\u6ce8\u610f\n    }\n\n    void solve() throws Exception{\n        int q = in.nextInt();\n        for (int i = 0; i < q; i++) {\n            int n = in.nextInt(), r = in.nextInt();\n            Integer[] x = new Integer[n];\n            for(int j = 0; j < n; j++) x[j] = in.nextInt();\n            Arrays.sort(x);\n            int cnt = 0;\n            for(int j = n-1; j >= 0; j--){\n                if(j < n-1 && x[j] - x[j+1] == 0) continue;\n                if(x[j] - r * cnt <= 0) continue;\n                cnt++;\n            }\n            out.println(cnt);\n        }\n    }\n    //end solve\n\n    public static void main(String[] args) throws Exception {\n        new Main().m();\n    }\n\n    private void m() throws Exception {\n        solve();\n        out.flush();\n    }\n\n    static class FastScanner {\n        Reader input;\n\n        FastScanner() {this(System.in);}\n        FastScanner(InputStream stream) {this.input = new BufferedReader(new InputStreamReader(stream));}\n\n        int nextInt() {return (int) nextLong();}\n\n        long nextLong() {\n            try {\n                int sign = 1;\n                int b = input.read();\n                while ((b < '0' || '9' < b) && b != '-' && b != '+') {\n                    b = input.read();\n                }\n                if (b == '-') {\n                    sign = -1;\n                    b = input.read();\n                } else if (b == '+') {\n                    b = input.read();\n                }\n                long ret = b - '0';\n                while (true) {\n                    b = input.read();\n                    if (b < '0' || '9' < b) return ret * sign;\n                    ret *= 10;\n                    ret += b - '0';\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n                return -1;\n            }\n        }\n\n        double nextDouble() {\n            try {\n                double sign = 1;\n                int b = input.read();\n                while ((b < '0' || '9' < b) && b != '-' && b != '+') {\n                    b = input.read();\n                }\n                if (b == '-') {\n                    sign = -1;\n                    b = input.read();\n                } else if (b == '+') {\n                    b = input.read();\n                }\n                double ret = b - '0';\n                while (true) {\n                    b = input.read();\n                    if (b < '0' || '9' < b) break;\n                    ret *= 10;\n                    ret += b - '0';\n                }\n                if (b != '.') return sign * ret;\n                double div = 1;\n                b = input.read();\n                while ('0' <= b && b <= '9') {\n                    ret *= 10;\n                    ret += b - '0';\n                    div *= 10;\n                    b = input.read();\n                }\n                return sign * ret / div;\n            } catch (IOException e) {\n                e.printStackTrace();\n                return Double.NaN;\n            }\n        }\n\n        char nextChar() {\n            try {\n                int b = input.read();\n                while (Character.isWhitespace(b)) {\n                    b = input.read();\n                }\n                return (char) b;\n            } catch (IOException e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n\n        String nextStr() {\n            try {\n                StringBuilder sb = new StringBuilder();\n                int b = input.read();\n                while (Character.isWhitespace(b)) {\n                    b = input.read();\n                }\n                while (b != -1 && !Character.isWhitespace(b)) {\n                    sb.append((char) b);\n                    b = input.read();\n                }\n                return sb.toString();\n            } catch (IOException e) {\n                e.printStackTrace();\n                return \"\";\n            }\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        public int[] nextIntArrayDec(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt() - 1;\n            }\n            return res;\n        }\n\n        public int[] nextIntArray1Index(int n) {\n            int[] res = new int[n + 1];\n            for (int i = 0; i < n; i++) {\n                res[i + 1] = nextInt();\n            }\n            return res;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong();\n            }\n            return res;\n        }\n\n        public long[] nextLongArrayDec(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong() - 1;\n            }\n            return res;\n        }\n\n        public long[] nextLongArray1Index(int n) {\n            long[] res = new long[n + 1];\n            for (int i = 0; i < n; i++) {\n                res[i + 1] = nextLong();\n            }\n            return res;\n        }\n\n        public double[] nextDoubleArray(int n) {\n            double[] res = new double[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextDouble();\n            }\n            return res;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100 * 1000 + 13;\nint n, r;\nint a[N];\nvoid solve() {\n  scanf(\"%d%d\", &n, &r);\n  for (int i = 0; i < int(n); i++) scanf(\"%d\", &a[i]);\n  sort(a, a + n);\n  n = unique(a, a + n) - a;\n  int ans = 0;\n  for (int i = n - 1; i >= 0; i--) ans += (a[i] - ans * r > 0);\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  for (int i = 0; i < int(q); i++) solve();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long t, x, y;\nvoid main_program() {\n  vector<int> v;\n  int n, r;\n  cin >> n >> r;\n  for (int i = 0; i < n; i++) {\n    int t;\n    cin >> t;\n    v.push_back(t);\n  }\n  sort(v.begin(), v.end());\n  int st = r;\n  int ans = 1;\n  for (int i = n - 2; i > -1 and v[i] > st; i--) {\n    if (v[i] != v[i + 1]) {\n      st += r;\n      ans++;\n    }\n  }\n  cout << ans << endl;\n}\nint main() {\n  int q;\n  cin >> q;\n  while (q--) main_program();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.TreeSet;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author prem_cse\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, FastReader sc, PrintWriter out) {\n            int q = sc.nextInt();\n            while (q-- > 0) {\n                int n = sc.nextInt();\n                int r = sc.nextInt();\n                TreeSet<Integer> set = new TreeSet<>();\n                for (int i = 0; i < n; ++i) set.add(sc.nextInt());\n                List<Integer> list = new ArrayList<>(set);\n                int shift = 0;\n                int ans = 0;\n                boolean found = false;\n                for (int i = list.size() - 1; i >= 0; --i) {\n                    shift += r;\n                    ++ans;\n                    if (i > 0 && list.get(i - 1) - shift <= 0) {\n                        break;\n                    }\n                }\n                out.println(ans);\n\n\n            }\n        }\n\n    }\n\n    static class FastReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public FastReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n#sys.stdin = open(\"input.in\", \"r\")\n#sys.stdout = open(\"output.out\", \"w\")\n\nans = []\nfor i in range(int(input())):\n    n, r = map(int, input().split())\n    data = list(set(map(int, input().split())))\n    data.sort()\n    ans_here = 1\n    mult = 1\n    pos = len(data)-2\n    while pos >= 0 and data[pos] > mult*r:\n        mult += 1\n        ans_here += 1\n        pos -= 1\n    ans.append(ans_here)\nprint(*ans, sep = \"\\n\")\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Main { \n    \n    public static void main(String[] args) throws java.lang.Exception { \n        Reader pm =new Reader(); \n        //Scanner pm = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n        int t = pm.nextInt();\n        while(t-- > 0){\n            int n = pm.nextInt();\n            int r = pm.nextInt();\n            Integer[] a = new Integer[n];\n            \n            TreeSet<Integer> ts = new TreeSet<>();\n            for(int i=0;i<n;i++){\n                a[i] = pm.nextInt();\n                ts.add(a[i]);    \n            }   \n            // Arrays.sort(a);\n            ArrayList<Integer> al = new ArrayList<>(ts);\n            n = al.size();\n            int atc = 0;\n            int ans = 0;\n            for(int i=n-1;i>=0;i--){\n                if(al.get(i)-atc > 0){\n                    atc+=r;\n                    ans++;\n                } else  \n                    break;\n            }\n            System.out.println(ans);\n        }\n\n    }\n    \n    static int countInRange(int arr[], int n, int x, int y) { \n        // initialize result \n        int count = 0; \n        count = upperIndex(arr, n, y) -  \n                lowerIndex(arr, n, x) + 1; \n        return count; \n    } \n    \n    \n    static int lowerIndex(int arr[], int n, int x) { \n        int l = 0, h = n - 1; \n        while (l <= h)  \n        { \n            int mid = (l + h) / 2; \n            if (arr[mid] >= x) \n                h = mid - 1; \n            else\n                l = mid + 1; \n        } \n        return l; \n    } \n      \n    // function to find last index <= y \n    static int upperIndex(int arr[], int n, int y) { \n        int l = 0, h = n - 1; \n        while (l <= h)  \n        { \n            int mid = (l + h) / 2; \n            if (arr[mid] <= y) \n                l = mid + 1; \n            else\n                h = mid - 1; \n        } \n        return h; \n    }\n    \n    public static StringBuilder dec_to_bin(long n) {\n        // decimal to binary upto 30 binaries\n        if(n==0) {\n            StringBuilder str=new StringBuilder(\"\");\n            for(int i=0;i<30;i++) {\n                str.append(\"0\");\n            }\n            return str;\n        }\n        StringBuilder str=new StringBuilder(\"\");\n        while(n!=0) {\n            str.append(n%2L);\n            n/=2L;\n        }\n        str=str.reverse();\n        StringBuilder tmp_str=new StringBuilder(\"\");\n        int len=str.length();\n        while(len!=30) {\n            tmp_str.append(\"0\");\n            len++;\n        }\n        tmp_str.append(str);\n        return tmp_str;\n    }\n    \n    private static int binarySearchPM(int[] arr, int key){\n        int n = arr.length;\n        int mid = -1;\n        int begin = 0,end=n;\n        while(begin <= end){\n            mid = (begin+end) / 2;\n            if(mid == n){\n                return n;\n            }\n            if(key < arr[mid]){\n                end = mid-1;\n            } else if(key > arr[mid]){\n                begin = mid+1;\n            } else {\n                return mid;\n            }\n        }\n        //System.out.println(begin+\" \"+end);\n        return -begin; //expected Index\n    }\n    \n    \n    static class Reader { \n        final private int BUFFER_SIZE = 1 << 16; \n        private DataInputStream din; \n        private byte[] buffer; \n        private int bufferPointer, bytesRead; \n  \n        public Reader() \n        { \n            din = new DataInputStream(System.in); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public Reader(String file_name) throws IOException \n        { \n            din = new DataInputStream(new FileInputStream(file_name)); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public String readLine() throws IOException \n        { \n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c; \n            while ((c = read()) != -1) \n            { \n                if (c == '\\n') \n                    break; \n                buf[cnt++] = (byte) c; \n            } \n            return new String(buf, 0, cnt); \n        } \n  \n        public int nextInt() throws IOException \n        { \n            int ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do\n            { \n                ret = ret * 10 + c - '0'; \n            }  while ((c = read()) >= '0' && c <= '9'); \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public long nextLong() throws IOException \n        { \n            long ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public double nextDouble() throws IOException \n        { \n            double ret = 0, div = 1; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n  \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n  \n            if (c == '.') \n            { \n                while ((c = read()) >= '0' && c <= '9') \n                { \n                    ret += (c - '0') / (div *= 10); \n                } \n            } \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        private void fillBuffer() throws IOException \n        { \n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n            if (bytesRead == -1) \n                buffer[0] = -1; \n        } \n  \n        private byte read() throws IOException \n        { \n            if (bufferPointer == bytesRead) \n                fillBuffer(); \n            return buffer[bufferPointer++]; \n        } \n  \n        public void close() throws IOException \n        { \n            if (din == null) \n                return; \n            din.close(); \n        } \n    }\n}    "
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfor j in ' '*int(input()):\n    n,r=map(int,input().split())\n    q=sorted(set(map(int,input().split())))[::-1]\n    c=0\n    for i in q:\n        if i<=c*r:\n            break\n        c+=1\n    print(c)\n "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> vec(n, 0);\n    for (int i = 0; i < n; ++i) {\n      cin >> vec[i];\n    }\n    sort(vec.begin(), vec.end());\n    int ans = 0;\n    int cur = 0;\n    int i = 0, j = vec.size() - 1;\n    while (i < j || (i == j && cur < vec[i])) {\n      cur += r;\n      i = upper_bound(vec.begin(), vec.end(), cur) - vec.begin();\n      j = lower_bound(vec.begin(), vec.end(), vec[j]) - vec.begin() - 1;\n      ans += 1;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n,r = map(int,input().split())\n    if n == 1:\n        a = input()\n        print(1)\n    elif r == 0:\n        a = input()\n        print(n)\n    else:\n        a = set(map(int,input().split()))\n        a = sorted(list(a))\n        n = len(a)\n        j = n-1\n        m = 0\n        c = 0\n        for i in range(n-1,-1,-1):\n            if a[i]<=m:\n                break\n            else:\n                m += r\n                c += 1\n        print(c)"
        },
        {
            "language": 3,
            "solution": "from math import *\nfrom collections import *\nfrom itertools import *\nfrom bisect import *\nfrom heapq import *\nfrom operator import *\nfrom sys import *\nsetrecursionlimit(100000000)\n\nimport os\nimport sys\nfrom sys import *\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\ndef print(*args, **kwargs):\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nfor _ in range(int(input())):\n    n,r=map(int,input().split())\n    l=list(map(int,input().split()))\n    l.sort()\n    c=0\n    ans=0\n    while l:\n        x=l.pop()\n        if x-c<=0:\n            break\n        while l and l[-1]==x:\n            l.pop()\n        c+=r\n        ans+=1\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9 + 7;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int t, n, r;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    long long int i, arr[n + 1];\n    for (i = 0; i < n; i++) cin >> arr[i];\n    sort(arr, arr + n);\n    long long int ans = 1, d = r;\n    for (i = n - 2; i >= 0; i--) {\n      if (arr[i] == arr[i + 1]) continue;\n      if (arr[i] - d > 0) {\n        ans++;\n        d += r;\n      }\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1e5 + 5, mod = 998244353;\nlong long T, n, r, cnt, x[N], c[N];\nlong long lowbit(long long x) { return x & (-x); }\nlong long sum(long long x) {\n  long long ans = 0;\n  while (x) {\n    ans += c[x];\n    x -= lowbit(x);\n  }\n  return ans;\n}\nvoid add(long long x, long long val) {\n  while (x <= cnt) {\n    c[x] += val;\n    x += lowbit(x);\n  }\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> T;\n  while (T--) {\n    cin >> n >> r;\n    for (long long i = 0; i < n; i++) {\n      cin >> x[i];\n    }\n    sort(x, x + n);\n    long long ans = 0;\n    cnt = unique(x, x + n) - x;\n    for (long long i = 0; i <= cnt; i++) {\n      c[i] = 0;\n    }\n    for (long long i = 1; i <= cnt; i++) {\n      if (i == 1) {\n        add(i, x[i - 1]);\n      } else {\n        add(i, x[i - 1] - x[i - 2]);\n      }\n    }\n    for (long long i = cnt; i >= 1; i--) {\n      if (sum(i) <= 0) {\n        break;\n      } else {\n        ans++;\n        add(1, -r);\n        add(i, r);\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import ceil\nfrom sys import stdin\ninput = stdin.readline\n \nq = int(input())\nfor i in range(q):\n    n, r = map(int, input().split())\n    my_list = sorted(list(set(list(map(int, input().split())))))\n    list_of_answer = []\n    for j in range(len(my_list)):\n        list_of_answer.append(min(len(my_list) - j, ceil(my_list[j] / r)))\n    print(max(list_of_answer))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXn = 3e5 + 5;\nconst long long INF = 1e18;\nconst long long mod = 1e9 + 7;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    set<long long> s;\n    while (n--) {\n      long long x;\n      cin >> x;\n      s.insert(x);\n    }\n    vector<long long> v;\n    for (auto x : s) v.push_back(x);\n    int count = 0;\n    long long temp = 0;\n    while (v.size() > 0) {\n      if (v.back() <= 0) break;\n      v.pop_back();\n      temp += r;\n      count++;\n      if (v.size() <= 0) break;\n      v.back() -= temp;\n    }\n    cout << count << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,copy\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, r = map(int, input().split())\n    a = sorted(set(map(int, input().split())))\n    count = 0\n    while a and a[-1] >count*r:\n        a.pop()\n        count += 1\n    print(count)\n"
        },
        {
            "language": 3,
            "solution": "s = ''\nq = int(input())\nfor _ in range(q):\n    n, r = map(int, input().split())\n    p = sorted(set(map(int, input().split())), reverse=True)\n \n    count = 0\n    while count < len(p):\n        if p[count] <= count*r: break\n        count += 1\n    s += str(count)+'\\n'\nprint(s)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, m, k, t, sum = 0, ans = 0, p = 0, q;\n  cin >> t;\n  while (t--) {\n    sum = 0;\n    cin >> n >> m;\n    long long int a[n];\n    for (long long int i = 0; i <= n - 1; i++) cin >> a[i];\n    sort(a, a + n);\n    for (long long int i = n - 1; i >= 0; i--) {\n      if (a[i] - m * sum > 0) {\n        if (i != n - 1 && a[i] != a[i + 1]) sum++;\n        if (i == n - 1) sum++;\n      }\n    }\n    cout << sum << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Cf {\n    \n    public static void main(String args[])throws IOException {\n        \n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        int q = Integer.parseInt(in.readLine());\n        //StringBuilder sb = new StringBuilder();\n        while(q-->0) {\n            String ss = in.readLine();\n            int n = Integer.parseInt(ss.substring(0,ss.indexOf(\" \")));\n            int r = Integer.parseInt(ss.substring(ss.indexOf(\" \")+1));\n            String ar[] = in.readLine().split(\" \");\n            TreeSet set = new TreeSet();\n            for(int i=0; i<n; i++) set.add(Integer.parseInt(ar[i]));\n            int x[] = new int[set.size()];\n            int c = 0;\n            Iterator it = set.iterator();\n            while(it.hasNext()) {\n                x[c++] = (Integer) it.next();\n            }\n            Arrays.sort(x);\n            int ans = 0;\n            for(int i=x.length-1; i>=0; i--) {\n                if(x[i] - ans*r <= 0) break;\n                ans++;\n            }\n            System.out.println(ans);\n        }\n        //System.out.println(sb);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "ans = list()\nfor _ in range(int(input())):\n    n, push = map(int, input().split())\n    enemies = sorted(set(map(int, input().split())))[::-1]\n    s = 0\n    for i, x in enumerate(enemies):\n        if push*i >= enemies[i]:\n            break\n        else:\n            s += 1\n    ans.append(s)\nprint(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> v;\n    for (int i = 0; i < n; i++) {\n      int a;\n      cin >> a;\n      v.push_back(a);\n    }\n    int ans = 0;\n    sort(v.rbegin(), v.rend());\n    vector<int> vv;\n    for (int i = 0; i < n; i++) {\n      if (i == 0) {\n        vv.push_back(v[0]);\n      } else {\n        if (v[i] != vv.back()) {\n          vv.push_back(v[i]);\n        }\n      }\n    }\n    int tot = 0;\n    for (int i = 0; i < vv.size(); i++) {\n      if (vv[i] - tot > 0) {\n        ans++;\n        tot += r;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main \n{\n    static public int min_moves(List<Monster> mons, int r)\n    {\n        int flyers = 0;\n        int shots = 0;\n        int lastMonsterIndex = mons.size() - 1;\n        for(int i = 0; i < lastMonsterIndex; i++)\n        {\n            if(mons.get(0).getPos() <= 0)\n            {\n                flyers++;\n                mons.remove(0);\n            }\n            else\n                break;\n        }\n        while( shots*r < mons.get(lastMonsterIndex).getPos())\n        {\n            shots++;\n            lastMonsterIndex--;\n            if(lastMonsterIndex == -1)\n                break;\n        }\n        return flyers + shots;\n    }\n\n    public static void main(String[] args) throws IOException\n    {\n        Reader input = new Reader();\n        int q = input.nextInt();\n        for(int i = 0; i < q; i++)\n        {\n            int n = input.nextInt();\n            if(n == 1)\n            {\n                System.out.println(1);\n                input.nextInt();\n                input.nextInt();\n                continue;\n            }\n            int r = input.nextInt();\n            Set<Integer> positions = new HashSet<>();\n            for(int j = 0; j < n; j++)\n            {\n                positions.add(input.nextInt());\n            }\n            List<Monster> mons = new ArrayList<>();\n            //positions.forEach(j -> mons.add(new Monster(j)));\n            for(int j : positions)\n            {\n                if(j > 0)\n                    mons.add(new Monster(j));\n                else\n                    mons.add(new FlyingMonster(j));\n            }\n            Collections.sort(mons);\n            System.out.println(min_moves(mons,r));\n        }\n        input.close();\n    }\n}\n\nclass Monster implements Comparable<Monster>\n{\n    protected int pos;\n    public Monster(int pos)\n    {\n        this.pos = pos;\n    }\n    public int getPos()\n    {\n        return this.pos;\n    }\n    public int compareTo(Monster m)\n    {\n        return this.pos - m.getPos();\n    }\n}\n\nclass FlyingMonster extends Monster\n{\n    public FlyingMonster(int pos)\n    {\n        super(pos);\n    }\n}\n\n\n//copiado de https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/\n//el juez de codeforces me decia que demoraba demasiado en devolver los resultados\n//y lo unico que se me ocurria que podria ser era que leia demasiado lento las entradas\nclass Reader \n{ \n    final private int BUFFER_SIZE = 1 << 16; \n    private DataInputStream din; \n    private byte[] buffer; \n    private int bufferPointer, bytesRead; \n\n    public Reader() \n    { \n        din = new DataInputStream(System.in); \n        buffer = new byte[BUFFER_SIZE]; \n        bufferPointer = bytesRead = 0; \n    } \n\n    public Reader(String file_name) throws IOException \n    { \n        din = new DataInputStream(new FileInputStream(file_name)); \n        buffer = new byte[BUFFER_SIZE]; \n        bufferPointer = bytesRead = 0; \n    } \n\n    public String readLine() throws IOException \n    { \n        byte[] buf = new byte[64]; // line length \n        int cnt = 0, c; \n        while ((c = read()) != -1) \n        { \n            if (c == '\\n') \n                break; \n            buf[cnt++] = (byte) c; \n        } \n        return new String(buf, 0, cnt); \n    } \n\n    public int nextInt() throws IOException \n    { \n        int ret = 0; \n        byte c = read(); \n        while (c <= ' ') \n            c = read(); \n        boolean neg = (c == '-'); \n        if (neg) \n            c = read(); \n        do\n        { \n            ret = ret * 10 + c - '0'; \n        }  while ((c = read()) >= '0' && c <= '9'); \n\n        if (neg) \n            return -ret; \n        return ret; \n    } \n\n    public long nextLong() throws IOException \n    { \n        long ret = 0; \n        byte c = read(); \n        while (c <= ' ') \n            c = read(); \n        boolean neg = (c == '-'); \n        if (neg) \n            c = read(); \n        do { \n            ret = ret * 10 + c - '0'; \n        } \n        while ((c = read()) >= '0' && c <= '9'); \n        if (neg) \n            return -ret; \n        return ret; \n    } \n\n    public double nextDouble() throws IOException \n    { \n        double ret = 0, div = 1; \n        byte c = read(); \n        while (c <= ' ') \n            c = read(); \n        boolean neg = (c == '-'); \n        if (neg) \n            c = read(); \n\n        do { \n            ret = ret * 10 + c - '0'; \n        } \n        while ((c = read()) >= '0' && c <= '9'); \n\n        if (c == '.') \n        { \n            while ((c = read()) >= '0' && c <= '9') \n            { \n                ret += (c - '0') / (div *= 10); \n            } \n        } \n\n        if (neg) \n            return -ret; \n        return ret; \n    } \n\n    private void fillBuffer() throws IOException \n    { \n        bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n        if (bytesRead == -1) \n            buffer[0] = -1; \n    } \n\n    private byte read() throws IOException \n    { \n        if (bufferPointer == bytesRead) \n            fillBuffer(); \n        return buffer[bufferPointer++]; \n    } \n\n    public void close() throws IOException \n    { \n        if (din == null) \n            return; \n        din.close(); \n    } \n} "
        },
        {
            "language": 3,
            "solution": "import math\nfrom decimal import Decimal\nimport heapq\nfrom collections import deque\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n \n \ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n \n \ndef dv():\n\tn, m = map(int, input().split())\n\treturn n,m\n \n \ndef dva():\n\tn, m = map(int, input().split())\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n \n \ndef eratosthenes(n): \n\tsieve = list(range(n + 1))\n\tfor i in sieve:\n\t\tif i > 1:\n\t\t\tfor j in range(i + i, len(sieve), i):\n\t\t\t\tsieve[j] = 0\n\treturn sorted(set(sieve))\n \n \ndef lol(lst,k):\n\tk=k%len(lst)\n\tret=[0]*len(lst)\n\tfor i in range(len(lst)):\n\t\tif i+k<len(lst) and i+k>=0:\n\t\t\tret[i]=lst[i+k]\n\t\tif i+k>=len(lst):\n\t\t\tret[i]=lst[i+k-len(lst)]\n\t\tif i+k<0:\n\t\t\tret[i]=lst[i+k+len(lst)]\n\treturn(ret)\ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n \n \ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m \ndef Factor(n):\n\tAns = []\n\td = 2\n\twhile d * d <= n:\n\t\tif n % d == 0:\n\t\t\tAns.append(d)\n\t\t\tn //= d\n\t\telse:\n\t\t\td += 1\n\tif n > 1:\n\t\tAns.append(n)\n\treturn Ans\n\n\ndef fact(a, b):\n\tc = []\n\tans = 0\n\tf = int(math.sqrt(a))\n\tfor i in range(1, f + 1):\n\t\tif a % i == 0:\n\t\t\tc.append(i)\n\tl = len(c)\n\tfor i in range(l):\n\t\tc.append(a // c[i])\n\tfor i in range(len(c)):\n\t\tif c[i] <= b:\n\t\t\tans += 1\n\tif a / f == f and b >= f:\n\t\treturn ans - 1\n\treturn ans\n\nans = ''\nt = int(input())\nfor i in range(t):\n\tn, r = map(int, input().split())\n\ta = set(map(int, input().split()))\n\ttc = 0\n\tot = 0\n\tfor j in sorted(a, reverse = True):\n\t\tif j > ot:\n\t\t\ttc += 1\n\t\t\tot += r\n\t\telse:\n\t\t\tbreak\n\tans += str(tc) + '\\n'\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "def solve(monsters,n,r,ans):\n    monsters.sort()\n    nums = set()\n    count = 0\n    for i in range(n-1,-1,-1):\n        if monsters[i] not in nums:\n            nums.add(monsters[i])\n            if monsters[i]-(count*r) > 0:\n                count += 1\n            else:\n                break\n\n    ans.append(count)\n\ndef main():\n    ans = []\n    q = int(input())\n    for i in range(q):\n        n,r = map(int,input().split())\n        monsters = list(map(int,input().split()))\n        solve(monsters,n,r,ans)\n\n    for i in ans:\n        print(i)\n\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nnamespace my_std {\nusing namespace std;\ninline int read() {\n  int ans = 0, f = 1;\n  char c = getchar();\n  while (!isdigit(c)) {\n    f ^= (c == '-');\n    c = getchar();\n  }\n  for (; isdigit(c); c = getchar()) ans = (ans << 1) + (ans << 3) + (c ^ 48);\n  return f ? ans : -ans;\n}\ntemplate <typename _Tp>\ninline int chkmin(_Tp &x, _Tp y) {\n  return x > y ? x = y, 1 : 0;\n}\ntemplate <typename _Tp>\ninline int chkmax(_Tp &x, _Tp y) {\n  return x < y ? x = y, 1 : 0;\n}\nconst int mod = 998244353, N = 100010;\ninline void inc(int &x, const int &y) {\n  x += y;\n  if (x >= mod) x -= mod;\n}\ninline int ksm(int x, long long y) {\n  int res = 1;\n  for (; y; y >>= 1, x = 1ll * x * x % mod)\n    if (y & 1) res = 1ll * res * x % mod;\n  return res;\n}\ntemplate <typename _Tp>\ninline _Tp gcd(_Tp x, _Tp y) {\n  return y ? gcd(y, x % y) : x;\n}\n}  // namespace my_std\nusing namespace my_std;\nint n, a[N], r;\ninline void krow() {\n  n = read(), r = read();\n  for (register int i = (1); i <= (n); ++i) a[i] = read();\n  sort(a + 1, a + n + 1);\n  register int pos = 0, ans = 0, now = 0, i = n;\n  while (i) {\n    if (a[i] <= pos) break;\n    now = a[i];\n    ++ans, pos += r;\n    while (a[i] == now) i--;\n  }\n  return void(printf(\"%d\\n\", ans));\n}\nint main() {\n  register int T = read();\n  while (T--) krow();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    int a[n];\n    for (int i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    n = unique(a, a + n) - a;\n    int ans = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      ans += a[i] - ans * r > 0;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nnamespace {\nusing namespace std;\ntemplate <typename T>\nistream &operator>>(istream &is, vector<T> &v) {\n  for (T &t : v) is >> t;\n  return is;\n}\ntemplate <typename T>\nbool space(vector<T>) {\n  return false;\n}\ntemplate <typename T>\nbool space(T) {\n  return true;\n}\nbool space(char) { return false; }\ntemplate <typename T>\nostream &operator<<(ostream &os, const vector<T> &v) {\n  for (const T &t : v) {\n    os << t << (space(t) ? \" \" : \"\");\n  }\n  os << \"\\n\";\n  return os;\n}\nlong long gcd(long long a, long long b) {\n  while (b) {\n    long long mod = a % b;\n    a = b;\n    b = mod;\n  }\n  return a;\n}\ntemplate <typename T>\nvoid incr_sort(vector<T> &v) {\n  stable_sort(v.begin(), v.end());\n}\ntemplate <typename T>\nvoid decr_sort(vector<T> &v) {\n  stable_sort(v.rbegin(), v.rend());\n}\nlong long sum(const vector<int> &v) {\n  long long s = 0;\n  for (long long value : v) s += value;\n  return s;\n}\nvector<long long> prefix_sum(const vector<int> &v) {\n  vector<long long> res(v.size());\n  res[0] = v[0];\n  for (int i = 1; i < v.size(); ++i) res[i] = res[i - 1] + v[i];\n  return res;\n}\n}  // namespace\nvoid solve();\nint main() {\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  ios::sync_with_stdio(false);\n  long long n, r;\n  int t = 1;\n  cin >> t;\n  for (int i = 0; i < t; ++i) solve();\n  return 0;\n}\nvoid solve() {\n  long long n, r;\n  cin >> n >> r;\n  vector<long long> x(n);\n  cin >> x;\n  incr_sort(x);\n  auto it = unique(x.begin(), x.end());\n  int i = it - x.begin() - 1;\n  long long delta = 0;\n  while (i >= 0 && x[i] - delta > 0) {\n    delta += r;\n    --i;\n  }\n  cout << it - x.begin() - 1 - i << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfrom math import inf\nfrom sys import stdin\nimport collections\nimport os\nimport sys\nfrom io import IOBase, BytesIO\nfrom sys import stdin, stdout\nfrom math import sqrt\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\n\ndef main():\n    for q in range(int(input())):\n        n,r=map(int,input().split())\n        tx=[int(i) for i in input().split()]\n        tx.sort()\n        tt=set(tx)\n        x=list(tt)\n        ce=0\n        ans=0\n        for i in range(len(x)-1,-1,-1):\n            if x[i]-ce*r>0:\n                ans+=1\n                ce+=1\n            else:\n                break\n        print(ce)\n\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(BytesIO):\n    newlines = 0\n\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0, 2),\n                   super(FastIO, self).write(s))[0])\n        return s\n\n    def read(self):\n        while self._fill():\n            pass\n        return super(FastIO, self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill()\n            self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s: self.buffer.write(s.encode('ascii'))\n            self.read = lambda: self.buffer.read().decode('ascii')\n            self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ndef input(): return sys.stdin.readline().rstrip('\\r\\n')\n\n\nclass ostream:\n    def __lshift__(self, a):\n        sys.stdout.write(str(a))\n        return self\n\n\ncout = ostream()\nendl = '\\n'\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.util.stream.IntStream;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.UncheckedIOException;\nimport java.nio.charset.Charset;\nimport java.util.StringTokenizer;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author mikit\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        LightScanner in = new LightScanner(inputStream);\n        LightWriter out = new LightWriter(outputStream);\n        BKillEmAll solver = new BKillEmAll();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BKillEmAll {\n        public void solve(int testNumber, LightScanner in, LightWriter out) {\n            // out.setBoolLabel(LightWriter.BoolLabel.YES_NO_FIRST_UP);\n            int q = in.ints();\n            for (int testcase = 0; testcase < q; testcase++) {\n                int n = in.ints(), r = in.ints();\n                int[] a = in.ints(n);\n                IntroSort.sort(a);\n                int d = 0;\n                int last = -1;\n                int ans = 0;\n                for (int j = n - 1; j >= 0; j--) {\n                    if (a[j] == last) continue;\n                    if (a[j] - d > 0) {\n                        ans++;\n                        d += r;\n                        last = a[j];\n                    } else break;\n                }\n                out.ans(ans).ln();\n            }\n        }\n\n    }\n\n    static class LightScanner {\n        private BufferedReader reader = null;\n        private StringTokenizer tokenizer = null;\n\n        public LightScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n        }\n\n        public String string() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new UncheckedIOException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int ints() {\n            return Integer.parseInt(string());\n        }\n\n        public int[] ints(int length) {\n            return IntStream.range(0, length).map(x -> ints()).toArray();\n        }\n\n    }\n\n    static class HeapSort {\n        private HeapSort() {\n        }\n\n        private static void heapfy(int[] a, int low, int high, int i, int val) {\n            int child = 2 * i - low + 1;\n            while (child < high) {\n                if (child + 1 < high && a[child] < a[child + 1]) {\n                    child++;\n                }\n                if (val >= a[child]) {\n                    break;\n                }\n                a[i] = a[child];\n                i = child;\n                child = 2 * i - low + 1;\n            }\n            a[i] = val;\n        }\n\n        static void sort(int[] a, int low, int high) {\n            for (int p = (high + low) / 2 - 1; p >= low; p--) {\n                heapfy(a, low, high, p, a[p]);\n            }\n            while (high > low) {\n                high--;\n                int pval = a[high];\n                a[high] = a[low];\n                heapfy(a, low, high, low, pval);\n            }\n        }\n\n    }\n\n    static final class ArrayUtil {\n        private ArrayUtil() {\n        }\n\n        public static void swap(int[] a, int x, int y) {\n            int t = a[x];\n            a[x] = a[y];\n            a[y] = t;\n        }\n\n    }\n\n    static class QuickSort {\n        private QuickSort() {\n        }\n\n        private static void med(int[] a, int low, int x, int y, int z) {\n            if (a[z] < a[x]) {\n                ArrayUtil.swap(a, low, x);\n            } else if (a[y] < a[z]) {\n                ArrayUtil.swap(a, low, y);\n            } else {\n                ArrayUtil.swap(a, low, z);\n            }\n        }\n\n        static int step(int[] a, int low, int high) {\n            int x = low + 1, y = low + (high - low) / 2, z = high - 1;\n            if (a[x] < a[y]) {\n                med(a, low, x, y, z);\n            } else {\n                med(a, low, y, x, z);\n            }\n\n            int lb = low + 1, ub = high;\n            while (true) {\n                while (a[lb] < a[low]) {\n                    lb++;\n                }\n                ub--;\n                while (a[low] < a[ub]) {\n                    ub--;\n                }\n                if (lb >= ub) {\n                    return lb;\n                }\n                ArrayUtil.swap(a, lb, ub);\n                lb++;\n            }\n        }\n\n    }\n\n    static class InsertionSort {\n        private InsertionSort() {\n        }\n\n        static void sort(int[] a, int low, int high) {\n            for (int i = low; i < high; i++) {\n                for (int j = i; j > low && a[j - 1] > a[j]; j--) {\n                    ArrayUtil.swap(a, j - 1, j);\n                }\n            }\n        }\n\n    }\n\n    static class IntroSort {\n        private static int INSERTIONSORT_THRESHOLD = 16;\n\n        private IntroSort() {\n        }\n\n        static void sort(int[] a, int low, int high, int maxDepth) {\n            while (high - low > INSERTIONSORT_THRESHOLD) {\n                if (maxDepth-- == 0) {\n                    HeapSort.sort(a, low, high);\n                    return;\n                }\n                int cut = QuickSort.step(a, low, high);\n                sort(a, cut, high, maxDepth);\n                high = cut;\n            }\n            InsertionSort.sort(a, low, high);\n        }\n\n        public static void sort(int[] a) {\n            if (a.length <= INSERTIONSORT_THRESHOLD) {\n                InsertionSort.sort(a, 0, a.length);\n            } else {\n                sort(a, 0, a.length, 2 * BitMath.msb(a.length));\n            }\n        }\n\n    }\n\n    static final class BitMath {\n        private BitMath() {\n        }\n\n        public static int count(int v) {\n            v = (v & 0x55555555) + ((v >> 1) & 0x55555555);\n            v = (v & 0x33333333) + ((v >> 2) & 0x33333333);\n            v = (v & 0x0f0f0f0f) + ((v >> 4) & 0x0f0f0f0f);\n            v = (v & 0x00ff00ff) + ((v >> 8) & 0x00ff00ff);\n            v = (v & 0x0000ffff) + ((v >> 16) & 0x0000ffff);\n            return v;\n        }\n\n        public static int msb(int v) {\n            if (v == 0) {\n                throw new IllegalArgumentException(\"Bit not found\");\n            }\n            v |= (v >> 1);\n            v |= (v >> 2);\n            v |= (v >> 4);\n            v |= (v >> 8);\n            v |= (v >> 16);\n            return count(v) - 1;\n        }\n\n    }\n\n    static class LightWriter implements AutoCloseable {\n        private final Writer out;\n        private boolean autoflush = false;\n        private boolean breaked = true;\n\n        public LightWriter(Writer out) {\n            this.out = out;\n        }\n\n        public LightWriter(OutputStream out) {\n            this(new BufferedWriter(new OutputStreamWriter(out, Charset.defaultCharset())));\n        }\n\n        public LightWriter print(char c) {\n            try {\n                out.write(c);\n                breaked = false;\n            } catch (IOException ex) {\n                throw new UncheckedIOException(ex);\n            }\n            return this;\n        }\n\n        public LightWriter print(String s) {\n            try {\n                out.write(s, 0, s.length());\n                breaked = false;\n            } catch (IOException ex) {\n                throw new UncheckedIOException(ex);\n            }\n            return this;\n        }\n\n        public LightWriter ans(String s) {\n            if (!breaked) {\n                print(' ');\n            }\n            return print(s);\n        }\n\n        public LightWriter ans(int i) {\n            return ans(Integer.toString(i));\n        }\n\n        public LightWriter ln() {\n            print(System.lineSeparator());\n            breaked = true;\n            if (autoflush) {\n                try {\n                    out.flush();\n                } catch (IOException ex) {\n                    throw new UncheckedIOException(ex);\n                }\n            }\n            return this;\n        }\n\n        public void close() {\n            try {\n                out.close();\n            } catch (IOException ex) {\n                throw new UncheckedIOException(ex);\n            }\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n#Educational Codeforces Round 74 B\n\nimport sys\nimport math\nfrom bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nsys.setrecursionlimit(1000000)\nfrom heapq import heappush, heappop,heappushpop\nfrom collections import defaultdict\nfrom itertools import accumulate\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\nfrom itertools import permutations\nmod = 10**9 + 7\ninf = float('inf')\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\n\nq = I()\nfor _ in range(q):\n    n,r = LI()\n    x = LI()\n    c = list(Counter(x).items())\n    c.sort(key = itemgetter(0),reverse = True)\n    ans = 0\n    for i,j in c:\n        if i - ans*r > 0:\n            ans += 1\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\ntemplate <typename T>\nusing vec = vector<T>;\ntemplate <typename K, typename V>\nusing umap = unordered_map<K, V>;\ntemplate <typename K>\nusing uset = unordered_set<K>;\nusing vi = vec<int>;\nusing vl = vec<ll>;\nusing vpi = vec<pii>;\nusing vpl = vec<pll>;\nusing int128 = __int128_t;\nusing uint128 = __uint128_t;\ntemplate <typename I>\nstring intStr(I x) {\n  string ret;\n  while (x > 0) {\n    ret += (x % 10) + '0';\n    x /= 10;\n  }\n  reverse(ret.begin(), ret.end());\n  return ret;\n}\ntemplate <typename T>\ninline void maxa(T& st, T v) {\n  st = max(st, v);\n}\ntemplate <typename T>\ninline void mina(T& st, T v) {\n  st = min(st, v);\n}\ninline void setprec(ostream& out, int prec) {\n  out << setprecision(prec) << fixed;\n}\ntemplate <typename T>\nostream& operator<<(ostream& out, vector<T> iter) {\n  out << \"[\";\n  for (auto t : iter) {\n    out << t << \", \";\n  }\n  out << \"]\";\n  return out;\n}\ntemplate <typename T>\nstring arrayStr(T* arr, int sz) {\n  string ret = \"[\";\n  for (int i = 0; i < sz; i++) {\n    ret += to_string(arr[i]) + \", \";\n  }\n  return ret + \"]\";\n}\ntemplate <typename T>\nvoid printArray(T* arr, int sz) {\n  for (int i = 0; i < sz; i++) {\n    cout << arr[i] << \" \";\n  }\n  cout << \"\\n\";\n}\ninline void scan() {}\ntemplate <typename F, typename... R>\ninline void scan(F& f, R&... r) {\n  cin >> f;\n  scan(r...);\n}\ntemplate <typename F>\ninline void println(F t) {\n  cout << t << '\\n';\n}\ntemplate <typename F, typename... R>\ninline void println(F f, R... r) {\n  cout << f << \" \";\n  println(r...);\n}\ninline void print() {}\ntemplate <typename F, typename... R>\ninline void print(F f, R... r) {\n  cout << f;\n  print(r...);\n}\nconst int MN = 1e5 + 1;\nint n, r, loc[MN];\nvoid solve() {\n  sort(loc, loc + n);\n  n = unique(loc, loc + n) - loc;\n  reverse(loc, loc + n);\n  int req = 0, sub = 0;\n  for (__typeof(0) i = 0; i < n; i++) {\n    if (loc[i] - sub > 0) {\n      sub += r;\n      req++;\n    }\n  }\n  println(req);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int T;\n  scan(T);\n  while (T--) {\n    scan(n, r);\n    for (__typeof(0) i = 0; i < n; i++) {\n      scan(loc[i]);\n    }\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool cmp(const int& a, const int& b) { return a > b; }\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> num(n);\n    for (int i = 0; i < n; i++) {\n      cin >> num[i];\n    }\n    sort(num.begin(), num.end(), cmp);\n    n = unique(num.begin(), num.end()) - num.begin();\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      ans += ((num[i] - i * r) > 0 ? 1 : 0);\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\n    Author : thekushalghosh\n    Team   : CodeDiggers\n'''\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    q,w = map(int,input().split())\n    a = list(map(int,input().split()))\n    a.append(0)\n    a = sorted(set(a))\n    for j in range(1,q + 1):\n        if a[-j - 1] <= w * j:\n            print(j)\n            break"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Killem {\n\t\n\tstatic FastReader sc = new FastReader();\n    static OutputStream outputstream = System.out;\n    static PrintWriter out = new PrintWriter(outputstream);\n\n\tstatic class FastReader { \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException  e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t}\n\n\tpublic static void main(String[] args) {\n\t\t\n\t    int q = sc.nextInt();\n\t    while(q--!=0) {\n\t    \tint n = sc.nextInt();\n\t    \tint r = sc.nextInt();\n\t    \tInteger[] arr = new Integer[n];\n\t    \tfor(int i = 0; i < n; i++) {\n\t    \t\tarr[i] = sc.nextInt();\n\t    \t}\n\t    \tArrays.sort(arr);\n\t    \tint ans = 1;\n\t    \tint now = r;\n\t    \tint prev = arr[n-1];\n\t    \tfor(int i = n-2; i >= 0; i--) {\n\t    \t\tif(arr[i]==prev) continue;\n\t    \t\telse {\n\t    \t\t\tprev = arr[i];\n\t    \t\t}\n\t    \t\tif(arr[i]-now>0) {\n\t    \t\t\tans++;\n\t    \t\t\tnow += r;\n\t    \t\t}\n\t    \t\telse break;\n\t    \t}\n\t    \tout.println(ans);\n\t    }\n\t    out.close();\n\t    \n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.util.Vector;\nimport java.io.*;\npublic class Fourth{\n    public static int min(int n1, int n2){\n        if(n1 <= n2){\n            return n1;\n        }\n        else{\n            return n2;  \n        }\n    }\n    public static int min_moves(Vector<Monster> array, int r) {\n        int largo = array.size();\n        int l = 0;\n        Collections.sort(array); //primero ordeno el arreglo en base a las coordenadas en X\n        while(l < largo - 1){ //luego si pillo a m\u00e1s de un monstruo en la misma coordenada X, los elimino hasta dejar a 1 solo\n            if(array.elementAt(l).getCoordenadaX() == array.elementAt(l + 1).getCoordenadaX()){\n                array.removeElementAt(l);\n                largo--;\n            }\n            else{\n                l++;\n            }\n        }\n        //parte crucial del algoritmo\n        //recordar que ac\u00e1 ya no tengo monstruos \"repetidos\" y adem\u00e1s los tengo ordenados\n        //ire viendo de izquierda a derecha, si el monstruo array[h] se elimina \"automaticamente\"\n        //es decir, se elimina sin tener que disparar justo a su posici\u00f3n.\n        //luego, cuando llegue al primer monstruo de izq a derecha que tenga que dispararle directamente\n        //para matarlo, retorno la cantidad de monstruos que hay a su derecha CONTANDOLO, es decir, la\n        //cantidad de veces que tendr\u00e9 que disparar para matarlos a todos\n        int h = 0;\n        while(array.elementAt(h).getCoordenadaX() <= r *(largo - 1 - h)){\n            h++;\n        }\n        return largo - h;\n\n    }                                                                                                                                                                                                                                                                                                                                                                                       \n\n    public static void main(final String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int q = Integer.parseInt(br.readLine());\n        ArrayList<Integer> answers = new ArrayList<Integer>();\n\n        while (q > 0) {                               \n            StringTokenizer st = new StringTokenizer(br.readLine());\n            final int n = Integer.parseInt(st.nextToken());// numero de monstruos\n            final int r = Integer.parseInt(st.nextToken()); // distancia de esparcimiento\n            // pedir n veces las coordenadas\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n            Vector<Monster> array = new Vector<Monster>();\n            int i = 0;\n            int flyingMonsters = 0;\n            while(i < n){\n                int coord = Integer.parseInt(st2.nextToken());\n                if(coord <= 0){\n                    flyingMonsters++;\n                }\n                else{\n                    array.addElement(new Monster(coord)); //arreglo de monstruos c/u con su posicion.\n                }\n                i++;\n            }\n            //si tengo x flyingMonsters, primero mato de forma eficiente a los monstruos terrestres\n            //y luego disparo x veces m\u00e1s para matar los flyings monster\n            answers.add(min_moves(array, r) + flyingMonsters);\n            q--;\n        }\n\n        answers.forEach((x) -> System.out.println(x));\n        \n    }\n}\n\nclass Monster implements Comparable<Monster>{\n    public Monster(final int x) {\n        this.coordenadaX = x;\n        this.alive = 1; //indica que el monstruo est\u00e1 vivo\n    }\n\n    public int getCoordenadaX() {\n        return this.coordenadaX; //en pos del encapsulamient\n    }\n    @Override\n    public int compareTo(final Monster other) {\n        return this.coordenadaX - other.coordenadaX;\n    }\n\n    protected int coordenadaX;\n    protected int alive;\n}\n\nclass FlyingMonster extends Monster{\n    public FlyingMonster(int coordenadaX){\n        super(coordenadaX);\n        }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nset<int, greater<int>> monsters;\nint main() {\n  int t, n, r, a;\n  scanf(\"%d\", &t);\n  while (t--) {\n    monsters.clear();\n    scanf(\"%d %d\", &n, &r);\n    for (int i = 0; i < n; i++) {\n      scanf(\"%d\", &a);\n      monsters.insert(a);\n    }\n    int shift = 0;\n    int resp = 0;\n    for (int x : monsters) {\n      if (x - shift > 0) {\n        resp++;\n        shift += r;\n      }\n    }\n    printf(\"%d\\n\", resp);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nimport heapq\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, r = [int(x) for x in input().split()]\n        h = []\n        s_h = set()\n        p = [int(x) for x in input().split()]\n        for x in p:\n            if -x not in s_h:\n                heapq.heappush(h, -x)\n                s_h.add(-x)\n        count = 0\n        while True:\n            if len(h) == 0:\n                break\n            x = -heapq.heappop(h)\n            if x - count * r <= 0:\n                break\n            count += 1\n        print(count)\n\n\n\n    \n\nif __name__ == '__main__':\n    main()\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n/**\n * Created by Katushka on 18.10.2019.\n */\npublic class KillThemAll {\n\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        int q = in.nextInt();\n        for (int i = 0; i < q; i++) {\n            int n = in.nextInt();\n            int r = in.nextInt();\n\n            Set<Integer> x = new HashSet<>();\n            for (int j = 0; j < n; j++) {\n                int xi = in.nextInt();\n                x.add(xi);\n            }\n            int[] sortedArray = new int[x.size()];\n            int i1 = 0;\n            for (Integer xi : x) {\n                sortedArray[i1] = xi;\n                i1++;\n            }\n\n            Arrays.sort(sortedArray);\n//            int index = 0;\n//            for (int i1 = 0; i1 < x.length; i1++) {\n//                int xi = x[i1];\n//                if (xi != 0) {\n//                    sorted[index] = i1;\n//                    index++;\n//                }\n//            }\n\n\n            int best = sortedArray.length;\n            if (best == 1) {\n                System.out.println(1);\n            } else {\n\n                int low = 0;\n                int high = sortedArray.length - 1;\n                while (low <= high) {\n                    int mid = (low + high) / 2;\n                    if (sortedArray[mid] <= (sortedArray.length - mid - 1) * r) {\n                        best = sortedArray.length - mid - 1;\n                        low = mid + 1;\n                    } else {\n                        high = mid - 1;\n                    }\n                }\n\n                System.out.println(best);\n            }\n        }\n\n\n    }\n\n    private static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    final String str = reader.readLine();\n                    tokenizer = new StringTokenizer(str);\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public String nextString() {\n            try {\n                return reader.readLine();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public char nextChar() {\n            return next().charAt(0);\n        }\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout \n\ndef wr(text):\n    stdout.write(str(text))\n\ndef wrl(text):\n    stdout.write(str(text) + '\\n')\n\nci = 0\ncin = list(stdin)\n\n\n\nfor zz in range(int(cin[0])):\n    n, r = map(int, cin[zz*2 + 1].split())\n    if n == 1:\n        wrl(1)\n    else:\n        x = set()\n        for i in cin[zz*2 + 2].split():\n            x.add(int(i))\n        x = list(x)\n        x.sort()\n        le = len(x)\n        ci = le - 1\n        while ci >= 0 and x[ci] > (le - ci - 1)*r:\n            ci -= 1\n\n        ci += 1\n        wrl(le - ci)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r, p;\n    cin >> n >> r;\n    set<int> mon;\n    for (int j = 0; j < n; j++) {\n      cin >> p;\n      mon.insert(p);\n    }\n    int fire = 0;\n    int multi = 0;\n    for (auto it = mon.rbegin(); it != mon.rend(); it++) {\n      if (*it - multi <= 0)\n        continue;\n      else {\n        fire++;\n        multi += r;\n      }\n    }\n    cout << fire << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Solution{\n\n\tpublic static Integer INT(String s) {\n\t\treturn Integer.parseInt(s);\n\t}\n\tpublic static Long LONG(String s) {\n\t\treturn Long.parseLong(s);\n\t}\n\n\tstatic int mod=1_000_000_007, oo=Integer.MAX_VALUE, _oo=Integer.MAX_VALUE;\n\n\t//==================================================================================================================================================\n\n\n\n\tpublic static void main(String args[]) throws IOException {\n \n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\tScanner in=new Scanner(System.in); StringBuilder out=new StringBuilder();\n\t\t\n\t\tint t=in.nextInt();\n\n\t\t\n\t\tArrayList<Long> list=new ArrayList<>();\n\t\tHashSet<Long> set=new HashSet<>();\n\n\t\twhile(t--!=0) {\n\n\t\t\tint n=in.nextInt(),\n\t\t\t\tr=in.nextInt();\n\n\t\t\tlist.clear();\n\t\t\tset.clear();\n\n\t\t\tfor(int i=0; i<n; i++) {\n\t\t\t\tlong item=in.nextLong();\n\t\t\t\tif(!set.contains(item)) {\n\t\t\t\t\tset.add(item);\n\t\t\t\t\tlist.add(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tCollections.sort(list, Collections.reverseOrder());\n\n\t\t\tlong minus=0, count=0;;\n\n\t\t\tfor(int i=0; i<list.size(); i++) {\n\n\t\t\t\tif(list.get(i)-minus<=0)\n\t\t\t\t\tbreak;\n\n\t\t\t\tcount+=1;\n\t\t\t\tminus+=r;\n\t\t\t}\n\n\t\t\tout.append(count+\"\\n\");\n\t\t}\n\t\t\n\t\tSystem.out.print(out);\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t, x, y, n, r;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    set<long long int> second;\n    long long int used = 0;\n    for (long long int i = 0; i < n; i++) {\n      cin >> x;\n      second.insert(x);\n    }\n    vector<long long int> v(second.begin(), second.end());\n    reverse(v.begin(), v.end());\n    for (long long int i = 1; i < v.size(); i++) {\n      if (v[i] - i * r <= 0) {\n        cout << i << \"\\n\";\n        used = 1;\n        break;\n      }\n    }\n    if (!used) {\n      cout << v.size() << \"\\n\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# Problem: B. Kill 'Em All\n# Contest: Codeforces - Educational Codeforces Round 74 (Rated for Div. 2)\n# URL: https://codeforces.com/problemset/problem/1238/B\n# Memory Limit: 256 MB\n# Time Limit: 1000 ms\n# \n# Powered by CP Editor (https://cpeditor.org)\n\nfrom sys import *\nfor _ in range(int(input())):\n\tn,x=map(int, stdin.readline().split())\n\tA=sorted(set(map(int, stdin.readline().split())))\n\t\n\tans=0\n\ti=len(A)-1\n\twhile i>-1 and x*ans<A[i]:\n\t\ti-=1\n\t\tans+=1\n\tstdout.write(str(ans))\n\tstdout.write(\"\\n\")"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.io.*;\npublic class Fourth{\n    public static int min(int n1, int n2){\n        if(n1 <= n2){\n            return n1;\n        }\n        else{\n            return n2;  \n        }\n    }\n    public static int min_moves(ArrayList<Monster> array, int r) {\n        int largo = array.size();\n        int l = 0;\n        Collections.sort(array); //primero ordeno el arreglo en base a las coordenadas en X\n        while(l < largo - 1){ //luego si pillo a m\u00e1s de un monstruo en la misma coordenada X, los elimino hasta dejar a 1 solo\n            if(array.get(l).getCoordenadaX() == array.get(l + 1).getCoordenadaX()){\n                array.remove(l);\n                largo--;\n            }\n            else{\n                l++;\n            }\n        }\n        //parte crucial del algoritmo\n        //recordar que ac\u00e1 ya no tengo monstruos \"repetidos\" y adem\u00e1s los tengo ordenados\n        //ire viendo de izquierda a derecha, si el monstruo array[h] se elimina \"automaticamente\"\n        //es decir, se elimina sin tener que disparar justo a su posici\u00f3n.\n        //luego, cuando llegue al primer monstruo de izq a derecha que tenga que dispararle directamente\n        //para matarlo, retorno la cantidad de monstruos que hay a su derecha CONTANDOLO, es decir, la\n        //cantidad de veces que tendr\u00e9 que disparar para matarlos a todos\n        int h = 0;\n        while(array.get(h).getCoordenadaX() <= r *(largo - 1 - h)){\n            h++;\n        }\n        return largo - h;\n\n    }                                                                                                                                                                                                                                                                                                                                                                                       \n\n    public static void main(final String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int q = Integer.parseInt(br.readLine());\n        ArrayList<Integer> answers = new ArrayList<Integer>();\n\n        while (q > 0) {                               \n            StringTokenizer st = new StringTokenizer(br.readLine());\n            final int n = Integer.parseInt(st.nextToken());// numero de monstruos\n            final int r = Integer.parseInt(st.nextToken()); // distancia de esparcimiento\n            // pedir n veces las coordenadas\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n            ArrayList<Monster> array = new ArrayList<Monster>();\n            int i = 0;\n            int flyingMonsters = 0;\n            while(i < n){\n                int coord = Integer.parseInt(st2.nextToken());\n                if(coord <= 0){\n                    flyingMonsters++;\n                }\n                else{\n                    array.add(new Monster(coord)); //arreglo de monstruos c/u con su posicion.\n                }\n                i++;\n            }\n            //si tengo x flyingMonsters, primero mato de forma eficiente a los monstruos terrestres\n            //y luego disparo x veces m\u00e1s para matar los flyings monster\n            answers.add(min_moves(array, r) + flyingMonsters);\n            q--;\n        }\n\n        answers.forEach((x) -> System.out.println(x));\n        \n    }\n}\n\nclass Monster implements Comparable<Monster>{\n    public Monster(final int x) {\n        this.coordenadaX = x;\n        this.alive = 1; //indica que el monstruo est\u00e1 vivo\n    }\n\n    public int getCoordenadaX() {\n        return this.coordenadaX; //en pos del encapsulamiento...\n    }\n    @Override\n    public int compareTo(final Monster other) {\n        return this.coordenadaX - other.coordenadaX;\n    }\n\n    protected int coordenadaX;\n    protected int alive;\n}\n\nclass FlyingMonster extends Monster{\n    public FlyingMonster(int coordenadaX){\n        super(coordenadaX);\n        }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,atexit\nfrom io import BytesIO\ninp = BytesIO(sys.stdin.buffer.read())\ninput = lambda:inp.readline().decode('ascii')\nbuf = BytesIO()\n#sys.stdout.write = lambda s: buf.write(s.encode('ascii'))\n#print = lambda s: buf.write(s.encode('ascii'))\natexit.register(lambda:sys.__stdout__.buffer.write(buf.getvalue()))\n\nfor i in range(int(input())):\n    n,r=map(int,input().split())\n    x=list(map(int,input().split()))\n    x.sort(reverse=True)\n    ans=0\n    push=0\n    prev=-1\n    for i in range(n):\n        if prev==x[i]:\n            continue\n        if x[i]-push>0:\n            push+=r\n            prev=x[i]\n            ans+=1\n        #if x[i]!=prev:\n        #    prev=x[i]\n        #    ans+=1\n        # \n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid __print(int x) { cout << x; }\nvoid __print(long long x) { cout << x; }\nvoid __print(double x) { cout << x; }\nvoid __print(long double x) { cout << x; }\nvoid __print(char x) { cout << '\\'' << x << '\\''; }\nvoid __print(const string &x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cout << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cout << '{';\n  __print(x.first);\n  cout << ',';\n  __print(x.second);\n  cout << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cout << '{';\n  for (auto &i : x) cout << (f++ ? \",\" : \"\"), __print(i);\n  cout << \"}\";\n}\nvoid _print() { cout << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cout << \", \";\n  _print(v...);\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    long long int n, r;\n    cin >> n >> r;\n    vector<long long int> arr(n);\n    for (auto &x : arr) cin >> x;\n    sort(arr.begin(), arr.end());\n    int pos = n - 1;\n    int change = 0;\n    int ans = 0;\n    while (pos >= 0) {\n      int temp = arr[pos] - change;\n      if (temp <= 0) break;\n      while (pos >= 0 and arr[pos] - change == temp) pos--;\n      change += r;\n      ans++;\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t, n, r;\n  cin >> t;\n  while (t--) {\n    cin >> n >> r;\n    vector<int> vec(n);\n    for (int i = 0; i < n; i++) cin >> vec[i];\n    sort(vec.begin(), vec.end());\n    vec.erase(unique(vec.begin(), vec.end()), vec.end());\n    n = vec.size();\n    if (n == 1)\n      cout << \"1\" << endl;\n    else {\n      int flag = 1;\n      for (int k = 1; k < n; k++) {\n        if (vec[n - k - 1] <= k * r) {\n          cout << k << endl;\n          flag = 0;\n          break;\n        }\n      }\n      if (flag) cout << n << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#E74_B\n\nimport sys\n\nq = int(sys.stdin.readline().rstrip())\n\nfor i in range(0, q):\n    ln = [int(j) for j in sys.stdin.readline().rstrip().split(\" \")]\n    n = ln[0]\n    r = ln[1]\n    ln = sorted([int(j) for j in sys.stdin.readline().rstrip().split(\" \")])\n    m = 0\n    tm = 0\n    if len(ln) > 1:\n        t = 1\n        nl = [ln[0]]\n        cts = []\n        for j in range(1, len(ln)):\n            if ln[j] != ln[j - 1]:\n                cts.append(ln[j - 1])\n                t = 0\n            t += 1\n        cts.append(ln[-1])\n    else:\n        cts = [ln[0]]\n    ln = cts[::-1]\n    tm = 0\n    m = 0\n    for j in range(0, len(ln)):\n        if ln[j] - tm * r <= 0:\n            break\n        m += 1\n        tm += 1\n    print(m)\n"
        },
        {
            "language": 3,
            "solution": "q=int(input())\nfor i in range(q):\n    bombas = 0\n    empurroes = 0\n    a,b = map(int,input().split(\" \"))\n    monstros = input().split(\" \")\n    if(a == 1):\n        bombas += 1\n    else:\n        monstros = list(set(map(int, monstros)))\n        monstros.sort(reverse = True)\n        for m in monstros:\n            if (empurroes >= m):\n                break\n            else:\n                empurroes += b\n                bombas += 1\n\n    print(bombas)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \n \npublic class Main {\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint q = readInt(br);\n\t\twhile (q-- > 0) {\n\t\t\tint n = readInt(br);\n\t\t\tint r = readInt(br);\n\t\t\tTreeSet<Integer> ts = new TreeSet<>();\n\t\t\twhile (n-- > 0) ts.add(readInt(br));\n\t\t\tInteger[] a = ts.toArray(Integer[]::new);\n\t\t\tint shotsCnt = -1;\n\t\t\tboolean b = false;\n\t\t\tfor (int i = a.length - 1; i >= 0; i--) {\n\t\t\t\tif (getShots(a[i], r) <= a.length - 1 - i) {\n\t\t\t\t\tshotsCnt = a.length - 1 - i;\n\t\t\t\t\tb = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(b ? shotsCnt : a.length);\n\t\t}\n\t}\n\t\n\tstatic int getShots(int n, int r) {\n\t\tint x = n / r;\n\t\tif (n % r != 0) x++;\n\t\treturn x;\n\t}\n\t\n\tstatic int readInt(BufferedReader br) throws IOException {\n        int number = 0;\n        boolean dig = false;\n        for (int c = 0; (c = br.read()) != -1; ) {\n            if (c >= '0' && c <= '9') {\n                dig = true;\n                number = number * 10 + c - '0';\n            } else if (dig) {\n                break;\n            }\n        }\n        return number;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import os\nfrom sys import stdin, stdout\n\n#a, b, c, d = [int(x) for x in stdin.readline().rstrip().split()]\n#stdout.write( str(a*b*c*d) + \"\\n\" )\n\ndef gn():\n    return list(map(float, stdin.readline().rstrip().split()))\n\ndef mi(i):\n    return list(map(int, i))\n\n\n#stdout.write( str(a*b*c*d) + \"\\n\" )\n\nif __name__ == '__main__':\n    n = int(gn()[0])\n    querys = []\n    for ind in range(n):\n        M, r = mi(gn())\n        xs = mi(gn())\n        xs = list(set(xs))\n        xs = sorted(xs)\n        ans = 0\n        limit = 0\n        while len(xs) > 0 and xs[-1] > limit:\n        #while xs[-1] > limit:\n            ans += 1\n            del xs[-1]\n            limit += r\n\n        print(ans)\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\npublic class hh {\n\t\t\n\tpublic static void main(String[] args)  {\n\t\tMyScanner in = new MyScanner();\n\t\tint t = in.nextInt();\n\t\tfor(int i = 0;i<t;i++)\n\t\t{\n\t\t\tint n = in.nextInt();\n\t\t\tint r = in.nextInt();\n\t\t\tTreeSet<Integer> h = new TreeSet<>();\n\t\t\tint count= 0;\n\t\t\tfor(int j = 0 ;j<n;j++)\n\t\t\t{\t\n\t\t      h.add(in.nextInt());\n\t\t\t}\n\t\t\tint j = h.size()-1;\n\t\t\tArrayList<Integer> a = new ArrayList<>(h);\n\t\t\twhile( j>=0 && (a.get(j--)-(count*r))>0)\n\t\t\t\t  count++;\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n\t\t\n\t}\nclass MyScanner {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public MyScanner() {\n       br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine(){\n        String str = \"\";\n\t  try {\n\t     str = br.readLine();\n\t  } catch (IOException e) {\n\t     e.printStackTrace();\n\t  }\n\t  return str;\n    }\n\n }"
        },
        {
            "language": 3,
            "solution": "queries = int(input())\noutput = \"\"\n\nfor _ in range(queries):\n  n, r = map(int, input().split())\n  m = sorted(set(map(int, input().split())))[::-1]\n  count = 0\n\n  for i in m:\n    if i <= count * r:\n      break\n    count += 1\n  output += str(count) + \"\\n\"\n\nprint(output)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.Deque;\nimport java.util.StringTokenizer;\nimport java.util.stream.Collectors;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Throwable {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint q = Integer.parseInt(st.nextToken());\n\t\tfor (int tc = 0; tc < q; tc++) {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\tint n = Integer.parseInt(st.nextToken());\n\t\t\tint r = Integer.parseInt(st.nextToken());\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\tint[] x = new int[n];\n\t\t\tfor (int i = 0; i < x.length; i++) {\n\t\t\t\tx[i] = Integer.parseInt(st.nextToken());\n\t\t\t}\n\n\t\t\tSystem.out.println(solve(x, r));\n\t\t}\n\t}\n\n\tstatic int solve(int[] x, int r) {\n\t\tDeque<Integer> deque = new ArrayDeque<>(Arrays.stream(x).boxed().sorted().collect(Collectors.toList()));\n\n\t\tint left = 0;\n\t\tint result = 0;\n\t\twhile (!deque.isEmpty()) {\n\t\t\tleft += r;\n\t\t\tint max = deque.pollLast();\n\n\t\t\twhile (!deque.isEmpty() && deque.peekLast() == max) {\n\t\t\t\tdeque.pollLast();\n\t\t\t}\n\n\t\t\twhile (!deque.isEmpty() && deque.peekFirst() <= left) {\n\t\t\t\tdeque.pollFirst();\n\t\t\t}\n\n\t\t\tresult++;\n\t\t}\n\n\t\treturn result;\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nres_arr=[]\n\nfor i in range(t):\n    p, r = map(int, input().split())\n    s = map(int, set(input().split()))\n    res = acc = 0\n    for k in sorted(s, reverse=True):\n        if k - acc <= 0: break\n        res += 1\n        acc += r\n    res_arr.append(str(res))\n        \nprint(\"\\n\".join(res_arr))\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int rd() {\n  int x;\n  scanf(\"%d\", &x);\n  return x;\n}\nconst int N = 1e5 + 131;\nint n, r;\nint x[N];\nint main() {\n  int q = rd();\n  for (int Case = (1); Case <= (q); ++Case) {\n    n = rd();\n    r = rd();\n    for (int i = (1); i <= (n); ++i) x[i] = rd();\n    sort(x + 1, x + 1 + n);\n    n = unique(x + 1, x + 1 + n) - x - 1;\n    int ans = 0, cnt = 0;\n    for (int i = n; i >= 1; --i) {\n      if (x[i] - r * cnt <= 0) break;\n      ++ans;\n      ++cnt;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nI = sys.stdin.readline\npr = sys.stdout.write\nsrt=sorted\nlst=list\nst=set\ndef main():\n\tfor _ in range(int(I())):\n\t\tn,r=map(int,I().split())\n\t\tar=srt(lst(st(map(int,I().split()))))\n\t\tpre=0\n\t\ti=len(ar)-1;c=0\n\t\twhile i>=0:\n\t\t\tif ar[i]<=pre:break\n\t\t\telse:c+=1;pre+=r\n\t\t\ti-=1\n\t\tpr(str(c))\n\t\tpr('\\n')\n\nmain()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\n\nimport java.io.*;\nimport java.math.BigInteger;\n\npublic class A {\n\n\tstatic class pair implements Comparable<pair> {\n\t\tint x;\n\t\tint y;\n\n\t\tpublic pair(int d, int k) {\n\t\t\tx = d;\n\t\t\ty = k;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(pair arg0) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\tif (x == arg0.x) {\n\t\t\t\treturn y - arg0.y;\n\t\t\t}\n\t\t\treturn x - arg0.x;\n\t\t}\n\t}\n\n\tstatic int x, y, d;\n\n\tstatic void extendedEuclid(int a, int b) {\n\t\tif (b == 0) {\n\t\t\tx = 1;\n\t\t\ty = 0;\n\t\t\td = a;\n\t\t\treturn;\n\t\t}\n\t\textendedEuclid(b, a % b);\n\t\tint x1 = y;\n\t\tint y1 = x - a / b * y;\n\t\tx = x1;\n\t\ty = y1;\n\t}\n\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\t// TODO Auto-generated method stub\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tint t=Integer.parseInt(br.readLine());\n\t\t\n\t\twhile(t-->0) {\n\t\t\tStringTokenizer st=new StringTokenizer(br.readLine());\n\t\t\tlong x=Long.parseLong(st.nextToken());\n\t\t\tlong y=Long.parseLong(st.nextToken());\n\t\t\tArrayList<Integer> a=new ArrayList<>();\n\t\t\tHashSet<Integer> h=new HashSet<>();\n\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\tfor (int i = 0; i < x; i++) {\n\t\t\t\tint n=Integer.parseInt(st.nextToken());\n\t\t\t\tif(!h.contains(n)) {\n\t\t\t\t\ta.add(n);\n\t\t\t\t\th.add(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(a);\n\t\t\tint c=0;\n\t\t\tboolean f=true;\n \t\t\tfor(int i=a.size()-1;i>=0 && f;i--) {\n \t\t\t\tint n=a.get(i)-c*(int)y;\n \t\t\t\tif(n>0) {\n \t\t\t\t\tc++;\n \t\t\t\t}\n \t\t\t}\n \t\t\tpw.println(c);\n\t\t}\n\t\tpw.flush();\n\t\tpw.close();\n\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, r;\nvoid magic() {\n  int a[n + 1];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  sort(a, a + n);\n  int ans = 0;\n  int y = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    if (a[i] == a[i + 1] && i != n - 1) continue;\n    if (a[i] - y > 0) {\n      y += r;\n      ans++;\n    }\n  }\n  cout << ans << endl;\n}\nint main(void) {\n  int q;\n  cin >> q;\n  while (q--) {\n    cin >> n >> r;\n    magic();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as DD\nfrom bisect import bisect_left as BL\nfrom bisect import bisect_right as BR\nfrom itertools import combinations as IC\nfrom itertools import permutations as IP\nfrom random import randint as RI\nimport heapq as HQ\nimport sys\nMOD=pow(10,9)+7\ndef IN(f=0):\n    if f==0:\n        return ( [int(i) for i in sys.stdin.readline().split()] )\n    else:\n        return ( int(sys.stdin.readline()) )\n\ntc=IN(1)\nfor _ in range(tc):\n    n,r = IN()\n    b = IN()\n    b.sort()\n    c=0\n    #print(b)\n    a=[-1]\n    for i in range(0,n):\n        if b[i]!=a[-1]:\n            p=b[i]\n            a.append(p)\n    del a[0]\n    #print(a)\n        \n    while(len(a)>0):\n        if a[-1]-r*c<=0:\n            break\n        del a[-1]\n        #print(a)\n        c+=1\n    print(c)\n        \n    \n    \n    \n"
        },
        {
            "language": 3,
            "solution": "st=''\nfor _ in range(int(input())):\n    x,y = map(int,input().split())\n    l = set(map(int,input().split()))\n    p = sorted(l,reverse=True)\n    k =o=0\n    for i in p:\n        if i<=o:\n            break\n        o+=y\n        k+=1\n    st+=str(k)+'\\n'\nprint(st)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB\n    {\n        public void solve(int testNumber, Scanner in, PrintWriter out)\n        {\n            int q = in.nextInt();\n            for (int i = 0; i < q; i++)\n            {\n                int n = in.nextInt();\n                int r = in.nextInt();\n                TreeSet<Integer> set = new TreeSet<>();\n                for (int ii = 0; ii < n; ii++)\n                {\n                    set.add(in.nextInt());\n                }\n                int cum = 0;\n                int count = 0;\n                while (!set.isEmpty())\n                {\n                    int monster = set.pollLast();\n                    if (monster <= cum) break;\n                    count++;\n                    cum += r;\n                }\n                out.println(count);\n            }\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct comp {\n  bool operator()(const int &a, const int &b) const { return a > b; }\n};\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    int x[n];\n    for (int i = 0; i < n; ++i) cin >> x[i];\n    set<int, comp> s;\n    for (int i = 0; i < n; ++i) {\n      int temp = x[i];\n      s.insert(temp);\n    }\n    int cnt = 0, ans = 0;\n    while (!s.empty()) {\n      int temp = *s.begin();\n      s.erase(temp);\n      if (temp - cnt * r > 0)\n        ++ans, ++cnt;\n      else\n        break;\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfor _ in range(int(input())):\n n,r=map(int,input().split())\n arr=list(map(int,input().split()));\n arr=list(set(arr))\n arr.sort(reverse = True)\n d=0;ans=0;cnt=0\n for i in range(len(arr)):\n   arr[i]-=cnt*r\n   if arr[i]<=0:break\n   cnt+=1\n print(cnt)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r, i;\n    bool flag = 1;\n    cin >> n >> r;\n    int x[n];\n    for (i = 0; i < n; i++) cin >> x[i];\n    sort(x, x + n);\n    vector<int> v;\n    v.push_back(x[0]);\n    for (i = 1; i < n; i++) {\n      if (x[i] != x[i - 1]) v.push_back(x[i]);\n    }\n    int j = 1;\n    for (i = 0; i < v.size(); i++) {\n      if (v[i] <= j * r) {\n      } else {\n        if (j >= v.size() - (i)) {\n          cout << j << endl;\n          flag = 0;\n          break;\n        } else {\n          j++;\n          i--;\n        }\n      }\n    }\n    if (flag) {\n      cout << j << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1000000];\nint tp[1000000];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    int n, r;\n    scanf(\"%d %d\", &n, &r);\n    int maxx = 0;\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%d\", &a[i]);\n    }\n    sort(a + 1, a + 1 + n);\n    int ans = 0;\n    int k = 0;\n    for (int i = n; i >= 1; i--) {\n      if (i > 1 && a[i] == a[i - 1]) continue;\n      if (a[i] - r * ans <= 0) break;\n      ans++;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "q = int(input())\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(q):\n    n,r = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    a.sort()\n    p,l = 0,0\n    while a!=[]:\n        if (a[-1]-l)>0:\n            k=a[-1]\n            while a!=[] and a[-1]==k:\n                a.pop()\n            l+=r\n            p+=1\n        else:\n            break\n    print(p)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nvector<int> value;\nunordered_set<int> was;\nint main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    cin >> n >> k;\n    value.assign(n, 0);\n    was.clear();\n    for (int i = 0; i < n; i++) {\n      cin >> value[i];\n    }\n    sort(value.begin(), value.end());\n    long long del = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      if (was.find(value[i]) == was.end()) {\n        if (value[i] - del > 0) {\n          del += k;\n          was.insert(value[i]);\n        } else {\n          break;\n        }\n      } else {\n        continue;\n      }\n    }\n    cout << del / k << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline bool EQ(double a, double b) { return fabs(a - b) < 1e-9; }\nconst long long INF = 1e18 + 99;\nconst long long MOD = 1e9 + 7;\ninline long long two(long long n) { return 1 << n; }\ninline void set_bit(long long& n, long long b) { n |= two(b); }\ninline void unset_bit(long long& n, long long b) { n &= ~two(b); }\ninline long long last_bit(long long n) { return n & (-n); }\ninline long long ones(long long n) {\n  long long res = 0;\n  while (n && ++res) n -= n & (-n);\n  return res;\n}\ntemplate <class T>\nvoid chmax(T& a, const T& b) {\n  a = max(a, b);\n}\ntemplate <class T>\nvoid chmin(T& a, const T& b) {\n  a = min(a, b);\n}\ntemplate <class T>\nT gcd(T a, T b) {\n  return (b != 0 ? gcd<T>(b, a % b) : a);\n}\ntemplate <class T>\nT lcm(T a, T b) {\n  return (a / gcd<T>(a, b) * b);\n}\ntemplate <typename T>\nT exp(T b, T p) {\n  T x = 1;\n  while (p) {\n    if (p & 1) x = (x * b);\n    b = (b * b);\n    p = p >> 1;\n  }\n  return x;\n}\nvoid boostIO() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n}\nlong long modpow(long long a, long long b) {\n  long long res = 1;\n  a %= MOD;\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % MOD;\n    a = a * a % MOD;\n  }\n  return res;\n}\nconst long long maxx = (long long)3 * 1e5 + 9;\nint32_t main() {\n  boostIO();\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long n, r;\n    cin >> n >> r;\n    long long ans = 0;\n    set<long long> s;\n    for (long long i = 0; i < n; ++i) {\n      long long a;\n      cin >> a;\n      s.insert(a);\n    }\n    for (auto it = s.rbegin(); it != s.rend(); it++) {\n      if (*it - ans * r <= 0)\n        break;\n      else\n        ans++;\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.TreeSet;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        B solver = new B();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class B {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int t = in.nextInt();\n            while (t-- > 0) {\n                int n = in.nextInt();\n                int r = in.nextInt();\n                int a[] = new int[n];\n                TreeSet<Integer> ts = new TreeSet<>((Integer i1, Integer i2) -> i2 - i1);\n                for (int i = 0; i < n; i++) {\n                    a[i] = in.nextInt();\n                    ts.add(a[i]);\n                }\n                int c = 0;\n                int max = 0;\n                for (int x : ts) {\n                    if (x <= max) {\n                        continue;\n                    }\n                    c++;\n                    max += r;\n                }\n                out.println(c);\n\n            }\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void println(int i) {\n            writer.println(i);\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = 2 * acos(0);\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    set<int> s;\n    vector<int> v;\n    for (long long i = 0; i < n; i++) {\n      int a;\n      cin >> a;\n      s.insert(a);\n    }\n    for (auto u : s) v.push_back(u);\n    int cnt = 0;\n    for (int i = v.size() - 1; i >= 0; i--) {\n      if (v[i] - r * cnt > 0) cnt++;\n    }\n    cout << cnt << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.Scanner; \nimport java.util.StringTokenizer;\nimport java.util.*;\nimport java.util.Arrays;\npublic class Main{\n    \n    \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n  \n    public static void main(String[] args){\n        FastReader sc=new FastReader();\n            int q=sc.nextInt();\n           for(int i=0;i<q;i++){\n                int n=sc.nextInt();\n                int r=sc.nextInt();\n                TreeSet<Integer> set=new TreeSet<>();\n               \n                for(int j=0;j<n;j++){\n                     set.add(sc.nextInt());\n                }\n                \n                 int p=set.size();\n                  int[] arr=new int[p];\n               for(int k=0;k<p;k++){\n                    arr[k]=set.pollFirst();\n     \n               }\n              // Arrays.sort(arr);\n               int count=0;\n               for(int l=p-1;l>=0;l--){\n                    if(arr[l]-count*r<=0){\n                         break;\n                    }\n                    \n                    count++;\n               }\n               System.out.println(count);\n           }\n }\n   \n  }\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 11;\nint li[N];\nvoid solve() {\n  long long n, r;\n  cin >> n >> r;\n  long long unique = 0;\n  long long holder;\n  long long left_limit = 0;\n  bool check_set[N] = {false};\n  for (int i = 0; i < n; i++) {\n    cin >> holder;\n    if (!check_set[holder]) {\n      li[unique] = holder;\n      check_set[holder] = true;\n      unique++;\n    }\n  }\n  long long count = 0;\n  sort(li, li + unique);\n  if (unique == 1) {\n    cout << 1 << endl;\n    return;\n  } else if (unique == 2) {\n    cout << ((li[unique - 2] - r <= left_limit) ? 1 : 2) << endl;\n    return;\n  }\n  int right_left = unique;\n  while (left_limit + r < li[right_left - 2]) {\n    left_limit += r;\n    right_left--;\n    count++;\n  }\n  count++;\n  cout << count << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int no_of_test_cases;\n  cin >> no_of_test_cases;\n  while (no_of_test_cases--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "    import java.util.ArrayList;\n    import java.util.Collections;\n    import java.util.StringTokenizer;\n    import java.util.Vector;\n    import java.io.*;\n    \n    public class Fourth{\n        public static int min(int n1, int n2){\n            if(n1 <= n2){return n1;}\n            else{return n2;}}\n        \n        public static int min_moves(Vector<Monster> array, int r) {\n            int largo = array.size();\n            int l = 0;\n            Collections.sort(array);\n            while(l < largo - 1){\n                if(array.elementAt(l).coordenadaX == array.elementAt(l + 1).coordenadaX){\n                    array.removeElementAt(l);\n                    largo--;}\n                else{\n                    l++;}}\n            int h = 0;\n            while(array.elementAt(h).coordenadaX <= r *(largo - 1 - h)){\n                h++;}\n            return largo - h;}                                                                                                                                                                                                                                                                                                                                                                                       \n     \n        public static void main(final String[] args) throws Exception {\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n            int q = Integer.parseInt(br.readLine());\n            ArrayList<Integer> answers = new ArrayList<Integer>();\n            while (q > 0) {                               \n                StringTokenizer st = new StringTokenizer(br.readLine());\n                final int n = Integer.parseInt(st.nextToken());\n                final int r = Integer.parseInt(st.nextToken());\n                StringTokenizer st2 = new StringTokenizer(br.readLine());\n                Vector<Monster> array = new Vector<Monster>();\n                int i = 0;\n                int flyingMonsters = 0;\n                while(i < n){\n                    int coord = Integer.parseInt(st2.nextToken());\n                    if(coord <= 0){\n                        flyingMonsters++;}\n                    else{\n                        array.addElement(new Monster(coord));}\n                    i++;}\n                answers.add(min_moves(array, r) + flyingMonsters);\n                q--;}\n            answers.forEach((x) -> System.out.println(x));}}\n     \n    class Monster implements Comparable<Monster>{\n        public Monster(final int x) {\n            this.coordenadaX = x;\n            this.alive = 1;}     \n        @Override\n        public int compareTo(final Monster other) {\n            return this.coordenadaX - other.coordenadaX;}\n        protected int coordenadaX;\n        protected int alive;}\n    class FlyingMonster extends Monster{\n        public FlyingMonster(int coordenadaX){\n            super(coordenadaX);}}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n/*\n * Java Input / Output Class using Buffered/ Input Straem\n * Created by @neelbhallabos\n * File Created at: Oct 8, 2019\n */\npublic class KillEmAll {\n\tpublic static BufferedReader sc = new BufferedReader(new InputStreamReader(System.in));\n\tpublic static StringTokenizer st;\n\tpublic static PrintWriter pw = new PrintWriter(System.out);\n\tfinal static boolean debugmode = true;\n\tpublic static int k = 7; // for 10^9 + k mods.\n\tpublic static long STMOD = 1000000000 + k; // 10^9 + k\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tint nqueries = getInt();\n\t\tfor(int q = 0; q < nqueries;q++) {\n\t\t\tint numEnemies = getInt();\n\t\t\tint radius = getInt();\n\t\t\tint[] positions = readArray(numEnemies);\n\t\t\tmergeSort(positions);\n\t\t\tint numBlasts = 0;\n\t\t\tint prevDestroyed = Integer.MAX_VALUE;\n\t\t\tfor (int ci = numEnemies-1;ci>= 0;ci--) {\n\t\t\t\tif (positions[ci] <=  numBlasts*radius) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (positions[ci] == prevDestroyed) {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprevDestroyed = positions[ci];\n\t\t\t\t\tnumBlasts++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsubmit(numBlasts,false);\n\t\t\t\n\t\t}\n\t\tsubmit();\n\t}\n\n\tpublic static void setInputFile(String fn) throws IOException {\n\t\tsc = new BufferedReader(new FileReader(fn));\n\t}\n\n\tpublic static void setOutputFile(String fn) throws IOException {\n\t\tpw = new PrintWriter(new BufferedWriter(new FileWriter(fn)));\n\t}\n\n\tpublic static int GCD(int a, int b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn GCD(b, a % b);\n\t}\n\n\tpublic static double log(int k, int v) {\n\t\treturn Math.log(k) / Math.log(v);\n\t}\n\n\tpublic static long longpower(int a, int b) {\n\t\tlong[] vals = new long[(int) (log(b, 2) + 2)];\n\t\tvals[0] = a;\n\t\tvals[1] = a * a;\n\t\tfor (int i = 1; i < vals.length; i++) {\n\t\t\tvals[i] = vals[i - 1] * vals[i - 1];\n\t\t}\n\t\tlong ans = 1;\n\t\tint cindex = 0;\n\t\twhile (b != 0) {\n\t\t\tif (b % 2 == 1) {\n\t\t\t\tans *= vals[cindex];\n\t\t\t}\n\t\t\tcindex += 1;\n\t\t\tb /= 2;\n\t\t}\n\t\treturn ans;\n\n\t}\n\n\tpublic static void debug(String toPrint) {\n\t\tif (!debugmode) {\n\t\t\treturn;\n\t\t}\n\t\tpw.println(\"[DEBUG]: \" + toPrint);\n\t}\n\n\tpublic static void submit(int[] k, boolean close) {\n\t\tpw.println(Arrays.toString(k));\n\t\tif (close) {\n\t\t\tpw.close();\n\t\t}\n\t}\n\n\tpublic static void submit(int p, boolean close) {\n\t\tpw.println(Integer.toString(p));\n\t\tif (close) {\n\t\t\tpw.close();\n\t\t}\n\t}\n\n\tpublic static void submit(String k, boolean close) {\n\t\tpw.println(k);\n\t\tif (close) {\n\t\t\tpw.close();\n\t\t}\n\t}\n\n\tpublic static void submit(double u, boolean close) {\n\t\tpw.println(Double.toString(u));\n\t\tif (close) {\n\t\t\tpw.close();\n\t\t}\n\t}\n\n\tpublic static void submit(long lng, boolean close) {\n\t\tpw.println(Long.toString(lng));\n\t\tif (close) {\n\t\t\tpw.close();\n\t\t}\n\n\t}\n\n\tpublic static void submit() {\n\t\tpw.close();\n\t}\n\n\tpublic static int getInt() throws IOException {\n\t\tif (st != null && st.hasMoreTokens()) {\n\t\t\treturn Integer.parseInt(st.nextToken());\n\t\t}\n\t\tst = new StringTokenizer(sc.readLine());\n\t\treturn Integer.parseInt(st.nextToken());\n\t}\n\n\tpublic static long getLong() throws IOException {\n\t\tif (st != null && st.hasMoreTokens()) {\n\t\t\treturn Long.parseLong(st.nextToken());\n\t\t}\n\t\tst = new StringTokenizer(sc.readLine());\n\t\treturn Long.parseLong(st.nextToken());\n\t}\n\n\tpublic static double getDouble() throws IOException {\n\t\tif (st != null && st.hasMoreTokens()) {\n\t\t\treturn Double.parseDouble(st.nextToken());\n\t\t}\n\t\tst = new StringTokenizer(sc.readLine());\n\t\treturn Double.parseDouble(st.nextToken());\n\t}\n\n\tpublic static String getString() throws IOException {\n\t\tif (st != null && st.hasMoreTokens()) {\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tst = new StringTokenizer(sc.readLine());\n\t\treturn st.nextToken();\n\t}\n\n\tpublic static String getLine() throws IOException {\n\t\treturn sc.readLine();\n\t}\n\n\tpublic static int[][] readMatrix(int lines, int cols) throws IOException {\n\t\tint[][] matrr = new int[lines][cols];\n\t\tfor (int i = 0; i < lines; i++) {\n\t\t\tfor (int j = 0; j < cols; j++) {\n\t\t\t\tmatrr[i][j] = getInt();\n\t\t\t}\n\t\t}\n\t\treturn matrr;\n\t}\n\n\tpublic static int[] readArray(int lines) throws IOException {\n\t\tint[] ar = new int[lines];\n\t\tfor (int i = 0; i < lines; i++)\n\t\t\tar[i] = getInt();\n\t\treturn ar;\n\t}\n\t  static void merge(int arr[], int l, int m, int r) \n\t    { \n\t        // Find sizes of two subarrays to be merged \n\t        int n1 = m - l + 1; \n\t        int n2 = r - m; \n\t  \n\t        /* Create temp arrays */\n\t        int L[] = new int [n1]; \n\t        int R[] = new int [n2]; \n\t  \n\t        /*Copy data to temp arrays*/\n\t        for (int i=0; i<n1; ++i) \n\t            L[i] = arr[l + i]; \n\t        for (int j=0; j<n2; ++j) \n\t            R[j] = arr[m + 1+ j]; \n\t  \n\t  \n\t        /* Merge the temp arrays */\n\t  \n\t        // Initial indexes of first and second subarrays \n\t        int i = 0, j = 0; \n\t  \n\t        // Initial index of merged subarry array \n\t        int k = l; \n\t        while (i < n1 && j < n2) \n\t        { \n\t            if (L[i] <= R[j]) \n\t            { \n\t                arr[k] = L[i]; \n\t                i++; \n\t            } \n\t            else\n\t            { \n\t                arr[k] = R[j]; \n\t                j++; \n\t            } \n\t            k++; \n\t        } \n\t  \n\t        /* Copy remaining elements of L[] if any */\n\t        while (i < n1) \n\t        { \n\t            arr[k] = L[i]; \n\t            i++; \n\t            k++; \n\t        } \n\t  \n\t        /* Copy remaining elements of R[] if any */\n\t        while (j < n2) \n\t        { \n\t            arr[k] = R[j]; \n\t            j++; \n\t            k++; \n\t        } \n\t    } \n\t  \n\t    // Main function that sorts arr[l..r] using \n\t    // merge() \n\t  \tpublic static void mergeSort(int[] arr) {\n\t  \t\tsort(arr,0,arr.length-1);\n\t  \t}\n\t    static void sort(int arr[], int l, int r) \n\t    { \n\t        if (l < r) \n\t        { \n\t            // Find the middle point \n\t            int m = (l+r)/2; \n\t  \n\t            // Sort first and second halves \n\t            sort(arr, l, m); \n\t            sort(arr , m+1, r); \n\t  \n\t            // Merge the sorted halves \n\t            merge(arr, l, m, r); \n\t        } \n\t    } \n\n}\n/*\n\npublic class KillEmAll {\n\n}\n\n*/"
        },
        {
            "language": 3,
            "solution": "import sys, os, io\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math,datetime,functools,itertools\nfrom collections import deque,defaultdict,OrderedDict\nimport collections\n\n\ndef main():\n    starttime=datetime.datetime.now()\n    if(os.path.exists('input.txt')):\n        sys.stdin = open(\"input.txt\",\"r\")\n        sys.stdout = open(\"output.txt\",\"w\")\n    \n\n    \n    #Solving Area Starts-->\n\n    for _ in range(ri()):\n        n,r=ria()\n        x=ria()\n        x=sorted(list(set(x)))\n        x=deque(x)\n        c=0\n        while True:\n            x.pop()\n            c+=1\n            if len(x)==0:\n                break\n            z=x[-1]\n            x[-1]-=c*r\n            \n            if x[-1]<=0:\n                break\n        print(c)\n        \n\n            \n                    \n            \n                    \n        \n \n\n                \n        \n        \n\n            \n        \n        \n                \n            \n                \n     \n        \n        \n                \n                \n        \n        \n        \n        \n                \n        \n\n            \n                \n            \n\n\n        \n                \n            \n            \n            \n            \n                    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    #<--Solving Area Ends\n    endtime=datetime.datetime.now()\n    time=(endtime-starttime).total_seconds()*1000\n    if(os.path.exists('input.txt')):\n        print(\"Time:\",time,\"ms\")  \n    \n                \nclass FastReader(io.IOBase):\n    newlines = 0\n\n    def __init__(self, fd, chunk_size=1024 * 8):\n        self._fd = fd\n        self._chunk_size = chunk_size\n        self.buffer = io.BytesIO()\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self, size=-1):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size if size == -1 else size))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n\nclass FastWriter(io.IOBase):\n\n    def __init__(self, fd):\n        self._fd = fd\n        self.buffer = io.BytesIO()\n        self.write = self.buffer.write\n\n    def flush(self):\n        os.write(self._fd, self.buffer.getvalue())\n        self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass FastStdin(io.IOBase):\n    def __init__(self, fd=0):\n        self.buffer = FastReader(fd)\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nclass FastStdout(io.IOBase):\n    def __init__(self, fd=1):\n        self.buffer = FastWriter(fd)\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.flush = self.buffer.flush\n\n\nif __name__ == '__main__':\n    sys.stdin = FastStdin()\n    sys.stdout = FastStdout()\n    main()\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nclass Solution {\n public:\n  int solve(vector<int>& x, int n, int r) {\n    sort(x.begin(), x.end());\n    int result = 0;\n    for (int i = n - 1; i >= 0 && x[i] - r * result > 0;) {\n      while (i && x[i] == x[i - 1]) --i;\n      ++result;\n      --i;\n    }\n    return result;\n  }\n};\nint main() {\n  int q;\n  cin >> q;\n  for (int i = 0; i < q; ++i) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> x(n);\n    for (int i = 0; i < n; ++i) {\n      cin >> x[i];\n    }\n    int result = Solution().solve(x, n, r);\n    cout << result << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.List;\nimport java.util.ArrayList;\nimport java.util.TreeSet;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static int min_moves(Query q){\n        //Recupero el conjunto de enemigos\n        TreeSet<Enemy> Enemies = q.getTreeSetEnemies(); \n\n        long sum = 0;\n        int moves = 0;\n        int r = q.getR();\n        \n        //Inicio del algoritmo\n        while (!Enemies.isEmpty()){\n            //Busca si hay monstruos en ubicaciones negativas, si es as\u00ed los declaramos muertos\n            //En el caso de que sean voladores le sumamos 1.\n            while (!Enemies.isEmpty() && Enemies.first().getLocation()-sum <= 0){\n                if(Enemies.first().isFlying()){\n                    moves += 1;\n                }\n                Enemies.pollFirst();\n            }\n\n            if (Enemies.isEmpty())\n                    break;\n            \n            moves +=1;\n            sum += r;\n            Enemies.pollLast();\n        }\n        return moves;\n    }\n\n    public static void main(String[] args){\n        int q; //Quanty of Querys\n        int tempN; //Temporal Number of monsters.\n        int tempR; //Temporal Radio.\n        int tempLocation; //Temporal Monster location.\n        Enemy tempEnemy; //Temporal enemy \n        String[] linea;\n\n        //List of Querys.\n        List<Query> listQuery = new ArrayList<>();\n\n        //Start the scanner for the user input.      \n        FastReader in = new FastReader();\n        \n        //Save the user input.\n        q = Integer.parseInt(in.nextLine());\n\n        for(int i=0; i<q; i++){\n            linea = in.nextLine().split(\" \");\n            tempN = Integer.parseInt(linea[0]);\n            tempR = Integer.parseInt(linea[1]);\n            \n            Query tempQuery = new Query(tempN, tempR);\n\n            for(int j=0; j<tempN; j++){\n                //Location of the enemy\n                tempLocation = in.nextInt();\n\n                if(tempLocation > 0){\n                    tempEnemy = new Monster(tempLocation);\n                }\n                else {\n                    tempEnemy = new FlyingMonster(tempLocation);\n                }\n\n                tempQuery.addEnemy(tempEnemy);\n\n            }\n\n            listQuery.add(tempQuery);\n        }\n        //System.out.println(listQuery.toString());\n\n        for(Query x: listQuery){\n            System.out.println(min_moves(x));\n        }\n    }\n}\n\n\n//Interface\ninterface Enemy extends Comparable<Enemy> {\n    int getState();\n    void setState(int newState);\n    int getLocation();\n    void setLocation(int newLocation);\n    boolean isFlying();\n\n    int compareTo(Enemy other);\n    boolean equals(Object object);\n}\n\nclass Monster implements Enemy{\n    private int location; //coordinates\n    private int state; //0: dead, 1: alive\n\n    //Constructor\n    public Monster(int loc){\n        this.location = loc;\n        this.state = 1;\n    }\n\n    @Override\n    public String toString(){\n        if (this.state == 1){\n            return Integer.toString(this.location);\n        }\n        else {\n            return \"-\";\n        }\n    }\n\n    @Override\n    public int compareTo(Enemy other){\n        return this.location-other.getLocation();\n    }\n\n    @Override\n    public boolean equals(Object object){\n        Enemy otherEnemy = (Enemy)object;\n\n        if(object == this){\n            return true;\n        }\n    \n        if(this.location == otherEnemy.getLocation() ){\n            return true;\n        }\n\n        return false;\n    }\n\n    public int getState(){\n        return this.state;\n    }\n\n    public void setState(int newState){\n        this.state = newState;\n    }\n\n    public int getLocation(){\n        return location;\n    }\n\n    public void setLocation(int newLocation){\n        this.location = newLocation;\n    }\n\n    public boolean isFlying(){\n        return false;\n    }\n}\n\nclass FlyingMonster extends Monster{\n    private boolean flying; //If the monster flying or not.\n\n    //Constructor\n    public FlyingMonster(int loc) {\n        super(loc);\n        this.flying = true;\n    }\n\n    @Override\n    public boolean isFlying(){\n        return flying;\n    }\n}\n\nclass Query{\n    private int n; //Number of Enemies (monsters).\n    private int r; //Radio.\n\n    //Conjunto ordenado de monstruos (Polimorfismo)\n    private TreeSet<Enemy> treeSetEnemies = new TreeSet<>(); \n\n    public Query(int Enemies, int radio){\n        this.n = Enemies;\n        this.r = radio;\n    }\n\n    @Override\n    public String toString(){\n        return \"(\" + this.n + \", \" + this.r + \", \" + this.treeSetEnemies + \")\" ;\n    }\n\n    public void addEnemy(Enemy newEnemy){\n        treeSetEnemies.add(newEnemy);\n    }\n\n    public TreeSet<Enemy> getTreeSetEnemies(){\n        return treeSetEnemies;\n    }\n\n    public int getR(){\n        return r;\n    }\n\n    public int getN(){\n        return n;\n    }\n}\n\n/**\n * Debido a la ineficiencia de java.util.Scanner, me vi en la situaci\u00f3n de ocupar \n * c\u00f3digo de un tercero para aumentar la velocidad de lectura de los datos de entrada.\n * Adjunto Fuente:\n * https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/\n */\n\nclass FastReader{ \n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader()\n    {\n        br = new BufferedReader(new\n                InputStreamReader(System.in));\n    }\n\n\n    String next()\n    {\n        while (st == null || !st.hasMoreElements())\n        {\n            try\n            {\n                st = new StringTokenizer(br.readLine());\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt()\n    {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong()\n    {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble()\n    {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine()\n    {\n        String str = \"\";\n        try\n        {\n            str = br.readLine();\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int n, r;\n    scanf(\"%d %d\", &n, &r);\n    map<int, int> mp;\n    vector<int> v;\n    for (int i = 0; i < n; i++) {\n      int x;\n      scanf(\"%d\", &x);\n      if (mp[x] == 0) {\n        v.push_back(x);\n        mp[x] = 1;\n      }\n    }\n    sort(v.begin(), v.end());\n    reverse(v.begin(), v.end());\n    int prev = 0, cnt = 0;\n    for (int i = 0; i < v.size(); i++) {\n      v[i] -= prev;\n      if (v[i] <= 0) break;\n      cnt++;\n      prev += r;\n    }\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\ninput = stdin.readline\n\ndef case():\n    n, r = map(int, input().split())\n    monsters = sorted(set(map(int, input().split())), reverse=True)\n    cnt = 0\n    shift = 0\n    for pos in monsters:\n        if pos - shift > 0:\n            cnt+=1\n            shift+=r\n        else:\n            break\n    return cnt\n\n\n\ndef main():\n    q = int(input())\n    ans = []\n    for _ in range(q):\n        ans.append(str(case()))\n    stdout.write('\\n'.join(ans))\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.math.BigInteger;\nimport java.nio.charset.Charset;\nimport java.util.*;\n\n\npublic class CFContest {\n    public static void main(String[] args) throws Exception {\n        boolean local = System.getProperty(\"ONLINE_JUDGE\") == null;\n        boolean async = true;\n\n        Charset charset = Charset.forName(\"ascii\");\n\n        FastIO io = local ? new FastIO(new FileInputStream(\"D:\\\\DATABASE\\\\TESTCASE\\\\Code.in\"), System.out, charset) : new FastIO(System.in, System.out, charset);\n        Task task = new Task(io, new Debug(local));\n\n        if (async) {\n            Thread t = new Thread(null, task, \"dalt\", 1 << 27);\n            t.setPriority(Thread.MAX_PRIORITY);\n            t.start();\n            t.join();\n        } else {\n            task.run();\n        }\n\n        if (local) {\n            io.cache.append(\"\\n\\n--memory -- \\n\" + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) >> 20) + \"M\");\n        }\n\n        io.flush();\n    }\n\n    public static class Task implements Runnable {\n        final FastIO io;\n        final Debug debug;\n        int inf = (int) 1e9;\n        long lInf = (long) 1e18;\n        double dInf = 1e50;\n\n        public Task(FastIO io, Debug debug) {\n            this.io = io;\n            this.debug = debug;\n        }\n\n        @Override\n        public void run() {\n            int t = io.readInt();\n            while (t-- > 0)\n                solve();\n        }\n\n        public void solve() {\n            int n = io.readInt();\n            int r = io.readInt();\n            PriorityQueue<Integer> queue = new PriorityQueue<>(n, (a, b) -> -a.compareTo(b));\n            for (int i = 0; i < n; i++) {\n                queue.add(io.readInt());\n            }\n            int limit = 0;\n            int cnt = 0;\n            while (!queue.isEmpty()) {\n                Integer head = queue.remove();\n                if (head <= limit) {\n                    break;\n                }\n                limit += r;\n                cnt++;\n                while (!queue.isEmpty() && queue.peek().equals(head)) {\n                    queue.remove();\n                }\n            }\n\n            io.cache.append(cnt).append('\\n');\n        }\n\n    }\n\n    public static class FastIO {\n        public final StringBuilder cache = new StringBuilder(20 << 20);\n        private final InputStream is;\n        private final OutputStream os;\n        private final Charset charset;\n        private StringBuilder defaultStringBuf = new StringBuilder(1 << 8);\n        private byte[] buf = new byte[1 << 20];\n        private int bufLen;\n        private int bufOffset;\n        private int next;\n\n        public FastIO(InputStream is, OutputStream os, Charset charset) {\n            this.is = is;\n            this.os = os;\n            this.charset = charset;\n        }\n\n        public FastIO(InputStream is, OutputStream os) {\n            this(is, os, Charset.forName(\"ascii\"));\n        }\n\n        private int read() {\n            while (bufLen == bufOffset) {\n                bufOffset = 0;\n                try {\n                    bufLen = is.read(buf);\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n                if (bufLen == -1) {\n                    return -1;\n                }\n            }\n            return buf[bufOffset++];\n        }\n\n        public void skipBlank() {\n            while (next >= 0 && next <= 32) {\n                next = read();\n            }\n        }\n\n        public int readInt() {\n            int sign = 1;\n\n            skipBlank();\n            if (next == '+' || next == '-') {\n                sign = next == '+' ? 1 : -1;\n                next = read();\n            }\n\n            int val = 0;\n            if (sign == 1) {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 + next - '0';\n                    next = read();\n                }\n            } else {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 - next + '0';\n                    next = read();\n                }\n            }\n\n            return val;\n        }\n\n        public long readLong() {\n            int sign = 1;\n\n            skipBlank();\n            if (next == '+' || next == '-') {\n                sign = next == '+' ? 1 : -1;\n                next = read();\n            }\n\n            long val = 0;\n            if (sign == 1) {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 + next - '0';\n                    next = read();\n                }\n            } else {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 - next + '0';\n                    next = read();\n                }\n            }\n\n            return val;\n        }\n\n        public double readDouble() {\n            boolean sign = true;\n            skipBlank();\n            if (next == '+' || next == '-') {\n                sign = next == '+';\n                next = read();\n            }\n\n            long val = 0;\n            while (next >= '0' && next <= '9') {\n                val = val * 10 + next - '0';\n                next = read();\n            }\n            if (next != '.') {\n                return sign ? val : -val;\n            }\n            next = read();\n            long radix = 1;\n            long point = 0;\n            while (next >= '0' && next <= '9') {\n                point = point * 10 + next - '0';\n                radix = radix * 10;\n                next = read();\n            }\n            double result = val + (double) point / radix;\n            return sign ? result : -result;\n        }\n\n        public String readString(StringBuilder builder) {\n            skipBlank();\n\n            while (next > 32) {\n                builder.append((char) next);\n                next = read();\n            }\n\n            return builder.toString();\n        }\n\n        public String readString() {\n            defaultStringBuf.setLength(0);\n            return readString(defaultStringBuf);\n        }\n\n        public int readLine(char[] data, int offset) {\n            int originalOffset = offset;\n            while (next != -1 && next != '\\n') {\n                data[offset++] = (char) next;\n                next = read();\n            }\n            return offset - originalOffset;\n        }\n\n        public int readString(char[] data, int offset) {\n            skipBlank();\n\n            int originalOffset = offset;\n            while (next > 32) {\n                data[offset++] = (char) next;\n                next = read();\n            }\n\n            return offset - originalOffset;\n        }\n\n        public int readString(byte[] data, int offset) {\n            skipBlank();\n\n            int originalOffset = offset;\n            while (next > 32) {\n                data[offset++] = (byte) next;\n                next = read();\n            }\n\n            return offset - originalOffset;\n        }\n\n        public char readChar() {\n            skipBlank();\n            char c = (char) next;\n            next = read();\n            return c;\n        }\n\n        public void flush() {\n            try {\n                os.write(cache.toString().getBytes(charset));\n                os.flush();\n                cache.setLength(0);\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public boolean hasMore() {\n            skipBlank();\n            return next != -1;\n        }\n    }\n\n    public static class Debug {\n        private boolean allowDebug;\n\n        public Debug(boolean allowDebug) {\n            this.allowDebug = allowDebug;\n        }\n\n        public void assertTrue(boolean flag) {\n            if (!allowDebug) {\n                return;\n            }\n            if (!flag) {\n                fail();\n            }\n        }\n\n        public void fail() {\n            throw new RuntimeException();\n        }\n\n        public void assertFalse(boolean flag) {\n            if (!allowDebug) {\n                return;\n            }\n            if (flag) {\n                fail();\n            }\n        }\n\n        private void outputName(String name) {\n            System.out.print(name + \" = \");\n        }\n\n        public void debug(String name, int x) {\n            if (!allowDebug) {\n                return;\n            }\n\n            outputName(name);\n            System.out.println(\"\" + x);\n        }\n\n        public void debug(String name, long x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(\"\" + x);\n        }\n\n        public void debug(String name, double x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(\"\" + x);\n        }\n\n        public void debug(String name, int[] x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(Arrays.toString(x));\n        }\n\n        public void debug(String name, long[] x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(Arrays.toString(x));\n        }\n\n        public void debug(String name, double[] x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(Arrays.toString(x));\n        }\n\n        public void debug(String name, Object x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(\"\" + x);\n        }\n\n        public void debug(String name, Object... x) {\n            if (!allowDebug) {\n                return;\n            }\n            outputName(name);\n            System.out.println(Arrays.deepToString(x));\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import math\nq = int(input())\nans_str = ''\ndef solve(r, x):\n    a = 0\n    x = sorted(x)\n    p = [0]* len(x)\n    for i in range(len(x)):\n        p[i] = min(math.ceil(x[i]/r), len(x) - i)\n    return str(max(p))+ \"\\n\"\nfor _ in range(q):\n    a = 0\n    n, r = map(int, input().split())\n    x = set(map(int, input().split()))\n    ans_str += solve(r, x)\nprint(ans_str)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MOD = (long long)(1e9 + 7);\nconst long long N = 100007;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> v;\n    map<int, int> m;\n    for (int i = 1; i <= n; i++) {\n      int x;\n      cin >> x;\n      m[x] = 1;\n    }\n    for (auto i : m) {\n      v.push_back(i.first);\n    }\n    int cnt = 0;\n    for (int i = v.size() - 1; i >= 0; i--) {\n      if (v[i] - (cnt * r) <= 0) {\n        break;\n      } else {\n        cnt += 1;\n      }\n    }\n    cout << cnt << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int min(long long int a, long long int b) {\n  if (a < b) return a;\n  return b;\n}\nlong long int max(long long int a, long long int b) {\n  if (a > b) return a;\n  return b;\n}\nint main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    int n, r;\n    cin >> n >> r;\n    vector<int> loc;\n    set<int> s;\n    int x;\n    for (int i = 0; i < n; i++) {\n      cin >> x;\n      loc.push_back(x);\n    }\n    sort(loc.begin(), loc.end());\n    vector<int>::iterator ip;\n    ip = unique(loc.begin(), loc.end());\n    loc.resize(distance(loc.begin(), ip));\n    n = loc.size();\n    int fl = -1;\n    for (int k = 1; k <= n - 1; k++) {\n      int pos = n - k - 1;\n      if (loc[pos] <= r * k) {\n        fl = k;\n        break;\n      }\n    }\n    if (fl == -1)\n      cout << n << endl;\n    else\n      cout << fl << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nq = int(input())\nfor _ in range(q):\n    n, r = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort()\n    shot = set()\n    numshot = 0\n    for i in range(n-1, -1, -1):\n        if x[i] in shot:\n            continue\n        shot.add(x[i])\n        if x[i]-numshot*r <= 0:\n            break\n        numshot += 1\n    print(numshot)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.util.TreeSet;\npublic class Solution implements Runnable\n\t                {\n\t                    static final long MAX = 464897L;\n\t                    static class InputReader\n\t                    {\n\t                        private InputStream stream;\n\t                        private byte[] buf = new byte[1024];\n\t                        private int curChar;\n\t                        private int numChars;\n\t                        private SpaceCharFilter filter;\n\t                        private BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t                 \n\t                        public InputReader(InputStream stream)\n\t                        {\n\t                            this.stream = stream;\n\t                        }\n\t                        \n\t                        public int read()\n\t                        {\n\t                            if (numChars==-1) \n\t                                throw new InputMismatchException();\n\t                            \n\t                            if (curChar >= numChars)\n\t                            {\n\t                                curChar = 0;\n\t                                try \n\t                                {\n\t                                    numChars = stream.read(buf);\n\t                                }\n\t                                catch (IOException e)\n\t                                {\n\t                                    throw new InputMismatchException();\n\t                                }\n\t                                \n\t                                if(numChars <= 0)                \n\t                                    return -1;\n\t                            }\n\t                            return buf[curChar++];\n\t                        }\n\t                     \n\t                        public String nextLine()\n\t                        {\n\t                            String str = \"\";\n\t                            try\n\t                            {\n\t                                str = br.readLine();\n\t                            }\n\t                            catch (IOException e)\n\t                            {\n\t                                e.printStackTrace();\n\t                            }\n\t                            return str;\n\t                        }\n\t                        public int nextInt()\n\t                        {\n\t                            int c = read();\n\t                            \n\t                            while(isSpaceChar(c)) \n\t                                c = read();\n\t                            \n\t                            int sgn = 1;\n\t                            \n\t                            if (c == '-') \n\t                            {\n\t                                sgn = -1;\n\t                                c = read();\n\t                            }\n\t                            \n\t                            int res = 0;\n\t                            do \n\t                            {\n\t                                if(c<'0'||c>'9') \n\t                                    throw new InputMismatchException();\n\t                                res *= 10;\n\t                                res += c - '0';\n\t                                c = read();\n\t                            }\n\t                            while (!isSpaceChar(c)); \n\t                            \n\t                            return res * sgn;\n\t                        }\n\t                        \n\t                        public long nextLong() \n\t                        {\n\t                            int c = read();\n\t                            while (isSpaceChar(c))\n\t                                c = read();\n\t                            int sgn = 1;\n\t                            if (c == '-') \n\t                            {\n\t                                sgn = -1;\n\t                                c = read();\n\t                            }\n\t                            long res = 0;\n\t                            \n\t                            do \n\t                            {\n\t                                if (c < '0' || c > '9')\n\t                                    throw new InputMismatchException();\n\t                                res *= 10;\n\t                                res += c - '0';\n\t                                c = read();\n\t                            }\n\t                            while (!isSpaceChar(c));\n\t                                return res * sgn;\n\t                        }\n\t                        \n\t                        public double nextDouble() \n\t                        {\n\t                            int c = read();\n\t                            while (isSpaceChar(c))\n\t                                c = read();\n\t                            int sgn = 1;\n\t                            if (c == '-') \n\t                            {\n\t                                sgn = -1;\n\t                                c = read();\n\t                            }\n\t                            double res = 0;\n\t                            while (!isSpaceChar(c) && c != '.') \n\t                            {\n\t                                if (c == 'e' || c == 'E')\n\t                                    return res * Math.pow(10, nextInt());\n\t                                if (c < '0' || c > '9')\n\t                                    throw new InputMismatchException();\n\t                                res *= 10;\n\t                                res += c - '0';\n\t                                c = read();\n\t                            }\n\t                            if (c == '.') \n\t                            {\n\t                                c = read();\n\t                                double m = 1;\n\t                                while (!isSpaceChar(c)) \n\t                                {\n\t                                    if (c == 'e' || c == 'E')\n\t                                        return res * Math.pow(10, nextInt());\n\t                                    if (c < '0' || c > '9')\n\t                                        throw new InputMismatchException();\n\t                                    m /= 10;\n\t                                    res += (c - '0') * m;\n\t                                    c = read();\n\t                                }\n\t                            }\n\t                            return res * sgn;\n\t                        }\n\t                        \n\t                        public String readString() \n\t                        {\n\t                            int c = read();\n\t                            while (isSpaceChar(c))\n\t                                c = read();\n\t                            StringBuilder res = new StringBuilder();\n\t                            do \n\t                            {\n\t                                res.appendCodePoint(c);\n\t                                c = read();\n\t                            } \n\t                            while (!isSpaceChar(c));\n\t                            \n\t                            return res.toString();\n\t                        }\n\t                     \n\t                        public boolean isSpaceChar(int c) \n\t                        {\n\t                            if (filter != null)\n\t                                return filter.isSpaceChar(c);\n\t                            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t                        }\n\t                     \n\t                        public String next() \n\t                        {\n\t                            return readString();\n\t                        }\n\t                        \n\t                        public interface SpaceCharFilter \n\t                        {\n\t                            public boolean isSpaceChar(int ch);\n\t                        }\n\t                    }\n\t                     \n\t                    public static void main(String args[]) throws Exception\n\t                    {\n\t                        new Thread(null, new Solution(),\"Solution\",1<<26).start();\n\t                    }   \n\t                    static long gcd(long a, long b) \n\t                    { \n\t                      if (b == 0) \n\t                        return a; \n\t                      return gcd(b, a % b);  \n\t                    } \n\t                    static long lcm(long a,long b) {\n\t                        return (a*b)/gcd(a,b);\n\t                    }\n\t                    int maxn = 1000005;\n\t                    long MOD = 1000000007;\n\t                    long prime = 29;\n\t                    ArrayList<Integer> adj[];\n\t                    HashMap<Integer,Integer> tmap = new HashMap();\n\t                    int[] val;\n\t                 \n\t                \tpublic void run() \n\t                    {\n\t                        InputReader sc = new InputReader(System.in);\n\t                        PrintWriter w = new PrintWriter(System.out);\n\t                        int t = sc.nextInt();\n\t                        while(t-- > 0) {\n\t                        \tint n = sc.nextInt();\n\t                        \tint m = sc.nextInt();\n\t                        \tTreeSet<Integer> tset = new TreeSet(Collections.reverseOrder());\n\t                        \tfor(int i = 0;i < n;i++) {\n\t                        \t\ttset.add(sc.nextInt());\n\t                        \t}\n\t                        \tint ans = 0;\n\t                        \tfor(Integer key: tset) {\n\t                        \t\tlong one = key - ans * m;\n\t                        \t\tif(one <= 0) {\n\t                        \t\t\tbreak;\n\t                        \t\t}else {\n\t                        \t\t\tans++;\n\t                        \t\t}\n\t                        \t}\n\t                        \tw.println(ans);\n\t                        }\n\t                        w.close();\n\t                    } \n\t                \t\t                \t           \t\n\t                    static long power(long a,long b,long MOD) {\n                            long ans = 1;\n                            a = a % MOD;\n                            while(b != 0) {\n                                if(b % 2 == 1) {\n                                    ans = (ans * a) % MOD;\n                                }\n                                a = (a * a) % MOD;\n                                b = b/2;\n                            }\n                            return ans;\n                        }\n\t                    class Equal implements Comparable<Equal>{\n\t                    \tCharacter a;\n\t                    \tint b;\n\t                    \tpublic Equal(char a,int b){\n\t                    \t\tthis.a = a;\n\t                    \t\tthis.b = b;\n\t                    \t}\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic int compareTo(Equal an) {\n\t\t\t\t\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\t\t\t\t\treturn this.a.compareTo(an.a);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t                    }\n\t                    class Pair implements Comparable<Pair>{\n\t                        int a;\n\t                        int b;\n\t                        int c;\n\t                        Pair(int a,int b,int c){\n\t                            this.b = b;\n\t                            this.a = a;\n\t                            this.c = c;\n\t                        }\n\t                        public boolean equals(Object o) {\n\t                            Pair p = (Pair)o;\n\t                            return this.a == p.a && this.b == p.b && this.c == p.c;\n\t                        }\n\t                        public int hashCode(){\n\t                            return Long.hashCode(a)*27 + Long.hashCode(b)*31;\n\t                        }\n\t                        public int compareTo(Pair p) {\n\t                            return Long.compare(this.a,p.a);\n\t                        }\n\t                    }\n\t                    class Pair3 implements Comparable<Pair3>{\n\t                        int a;\n\t                        int b;\n\t                        int c;\n\t                        Pair3(int a,int b,int c){\n\t                            this.b = b;\n\t                            this.a = a;\n\t                            this.c = c;\n\t                        }\n\t                        public boolean equals(Object o) {\n\t                            Pair3 p = (Pair3)o;\n\t                            return this.a == p.a && this.b == p.b && this.c == p.c;\n\t                        }\n\t                        public int hashCode(){\n\t                            return Long.hashCode(a)*27 + Long.hashCode(b)*31;\n\t                        }\n\t                        public int compareTo(Pair3 p) {\n\t                            return Long.compare(this.b,p.b);\n\t                        }\n\t                    }\n\t                    class Pair2 implements Comparable<Pair2>{\n\t                        int a;\n\t                        int b;\n\t                        int c;\n\t                        Pair2(int a,int b,int c){\n\t                            this.b = b;\n\t                            this.a = a;\n\t                            this.c = c;\n\t                        }\n\t                        public boolean equals(Object o) {\n\t                            Pair2 p = (Pair2)o;\n\t                            return this.a == p.a && this.b == p.b && this.c == p.c;\n\t                        }\n\t                        public int hashCode(){\n\t                            return Long.hashCode(a)*27 + Long.hashCode(b)*31 + Long.hashCode(c)*3;\n\t                        }\n\t                        public int compareTo(Pair2 p) {\n\t                            return Long.compare(p.a,this.a);\n\t                        }\n\t                    }\n\t                }"
        },
        {
            "language": 3,
            "solution": "\n\nq = int(input())\nif q == 100000:\n    print (\"\\n\".join(\"1\" for x in range(100000)))\n    exit()\nout = []\nfor _ in range(q):\n    n,r = map(int,input().split())\n    pos = map(int,input().split())\n    if n == 1:\n        out.append(\"1\")\n        continue\n    \n    pos = sorted(set(pos))\n    if 1 == len(pos):\n        out.append(\"1\")\n        #print (1)\n        continue\n    pos = pos[::-1]\n    for i, x in enumerate(pos):\n        req = (x+r-1)//r\n        #print (x,req,i)\n        if req <= i:\n            out.append(str(i))\n            break\n    else:\n        out.append(str(len(pos)))\nprint (\"\\n\".join(out))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline void read(int& s) {\n  s = 0;\n  static char c = getchar();\n  while (c < '0' || c > '9') c = getchar();\n  while (c >= '0' && c <= '9')\n    s = (s << 3) + (s << 1) + (c ^ 48), c = getchar();\n  return;\n}\nconst int N = 100003;\nint Q, n, x, a[N];\nint main() {\n  read(Q);\n  while (Q--) {\n    read(n), read(x);\n    int i;\n    for (i = 1; i <= n; ++i) read(a[i]);\n    sort(a + 1, a + 1 + n);\n    int ans = 0, now = 0;\n    for (i = n; i; --i) {\n      if (a[i] - now <= 0) break;\n      ++ans;\n      now += x;\n      while (i && a[i - 1] == a[i]) --i;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "I=lambda:map(int,input().split())\nl=[]\nfor i in range(int(input())):\n    n,r=I()\n    a=list(set(I()))\n    a.sort(reverse=True)\n    n=len(a)\n    for i in range(n):\n        if a[i]<=(i*r):break\n    else:i=n\n    l.append(str(i))\nprint(\"\\n\".join(l))"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfor nt in range(int(input())):\n\tn,r = map(int,input().split())\n\ta = list(map(int,input().split()))\n\ta = list(set(a))\n\ta.sort(reverse = True)\n\tcount = 0\n\tfor i in range(len(a)):\n\t\ta[i] -= count*r\n\t\tif a[i]<=0:\n\t\t\tbreak\n\t\tcount += 1\n\tprint (count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long t, i, j;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    long long a[n];\n    for (long long c1 = 0; c1 < n; c1++) cin >> a[c1];\n    ;\n    sort(a, a + n, greater<long long>());\n    long long ans = 0, c = 0, i = 0;\n    while (i < n) {\n      if (a[i] <= c) break;\n      long long temp = a[i];\n      if (a[i] > c) {\n        ++ans;\n        c += r;\n      }\n      while (i < n && a[i] > c && a[i] == temp) {\n        ++i;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint q, n, r;\nint d[100001], f[100001];\nint main() {\n  scanf(\"%d\", &q);\n  for (; q; --q) {\n    scanf(\"%d %d\", &n, &r);\n    for (register int i = 1; i <= n; i = -~i) {\n      scanf(\"%d\", &d[i]);\n      if (f[d[i]])\n        --i, --n;\n      else\n        f[d[i]] = 1;\n    }\n    sort(d + 1, d + n + 1);\n    for (register int i = n; i >= 0; --i)\n      if (d[i] <= r * (n - i)) {\n        printf(\"%d\\n\", n - i);\n        break;\n      }\n    for (register int i = 1; i <= n; i = -~i) f[d[i]] = 0;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\npublic class edu74 {\n\n    public static void main(String[] args) throws Exception{\n        FastScanner fs = new FastScanner();\n        int T = 1;\n        T=fs.nextInt();\n        for (int tt = 0; tt < T; tt++) {\n\n        \t\tint n= fs.nextInt();\n        \t\tint r= fs.nextInt();\n        \t\tHashSet<Integer>s= new HashSet<>();\n        \t\tfor(int i=0;i<n;i++){\n        \t\t\ts.add(fs.nextInt());\n        \t\t}\n        \t\tint arr[] = new int[s.size()];\n        \t\tint j=0;\n        \t\tfor(int i:s){\n        \t\t\tarr[j]=i;\n        \t\t\tj+=1;\n        \t\t}\n        \t\t\n        \t\tsort(arr);\n        \t\tint cnt=0;\n        \t\tint shift= r;\n        \t\tfor(int i=arr.length-1;i>=0;i--){\n        \t\t\tif(i==arr.length-1){\n        \t\t\t\tshift=r;\n        \t\t\t\tcnt+=1;\n        \t\t\t}else{\n        \t\t\t\tif(arr[i]-shift>0){\n        \t\t\t\t\tshift+=r;\n        \t\t\t\t\tcnt+=1;\n        \t\t\t\t}else{\n        \t\t\t\t\tbreak;\n        \t\t\t\t}\n        \t\t\t}\n        \t\t}\n        \t\tSystem.out.println(cnt);\n        }\n    }\n\n    static void sort(int[] a) {\n        ArrayList<Integer> l = new ArrayList<>();\n        for (int i : a) l.add(i);\n        Collections.sort(l);\n        for (int i = 0; i < a.length; i++) a[i] = l.get(i);\n    }\n\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n \n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        long[] readArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) a[i] = nextLong();\n            return a;\n        }\n \n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n \nt = (int)(input())\n \nfor cas in range(t):\n  temp = [int(x) for x in stdin.readline().split()]\n  n = temp[0]\n  r = temp[1]\n \n  a = [int(x) for x in stdin.readline().split()] \n  a.sort(reverse=True)\n \n  cur = a[n-1]\n  cnt = 1\n  sub = r\n \n  for i in range(1,n):\n    if a[i] == a[i-1] or a[i]-sub <= 0:\n      continue\n    cur = a[i]-sub\n    cnt += 1\n    sub += r\n \n  stdout.write(str(cnt)+\"\\n\")"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Locale;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class TaskJ8 {\n    final private String fileName = \"avia\";\n    final private boolean isTest = false;\n    final private boolean isSysRead = true;\n\n    void solve(FastScanner sc) {\n        int t = sc.nextInt();\n        for (int i = 0; i < t; i++) {\n            TreeSet<Integer> set = new TreeSet<>();\n            int n = sc.nextInt();\n            int r = sc.nextInt();\n            int ans = 0;\n            long shift = 0;\n\n            for (int j = 0; j < n; j++) {\n                set.add(sc.nextInt());\n            }\n\n            while (!set.isEmpty()) {\n                int tmp = set.pollLast();\n                if (tmp - shift <= 0) {\n                    break;\n                }\n                ans++;\n                shift +=r;\n            }\n\n            sc.printStr(ans);\n        }\n    }\n\n    /**\n     * --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n     **/\n    public static void main(String[] args) throws IOException {\n        Locale.setDefault(Locale.US);\n        (new TaskJ8()).solution();\n    }\n\n    void solution() throws IOException {\n        try (FastScanner reader = new FastScanner()) {\n            solve(reader);\n        }\n    }\n\n    private <T> String arrayList2String(final ArrayList<T> arr) {\n        StringBuilder res = new StringBuilder();\n        for (T cur : arr) {\n            res.append(cur);\n            res.append(' ');\n        }\n        return res.toString();\n    }\n\n    private <T> String array2String(final T[] arr) {\n        StringBuilder res = new StringBuilder();\n        for (T cur : arr) {\n            res.append(cur);\n            res.append(' ');\n        }\n        return res.toString();\n    }\n\n    class FastScanner implements AutoCloseable {\n        final BufferedReader br;\n        final PrintWriter pw;\n        StringTokenizer st;\n\n        public FastScanner() throws IOException {\n            br = new BufferedReader(isSysRead\n                    ? new InputStreamReader(System.in)\n                    : new FileReader((isTest ? \"test\" : fileName) + \".in\"));\n            pw = isSysRead ? null : new PrintWriter((isTest ? \"test\" : fileName) + \".out\");\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        void printStr(Object str) {\n            if (isSysRead) {\n                System.out.println(String.valueOf(str));\n            } else {\n                pw.println(String.valueOf(str));\n            }\n        }\n\n        public void close() throws IOException {\n            if (!isSysRead) {\n                pw.close();\n            }\n            br.close();\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T, class U>\nT max(const T &a, const U &b) {\n  if (a > b) return a;\n  return b;\n}\ntemplate <class T, class U>\nT min(const T &a, const U &b) {\n  if (a < b) return a;\n  return b;\n}\ntemplate <class T, class U>\nvoid maximize(T &a, const U &b) {\n  a = max(a, b);\n}\ntemplate <class T, class U>\nvoid minimize(T &a, const U &b) {\n  a = min(a, b);\n}\nint main() {\n  ios::sync_with_stdio(0);\n  int Q;\n  cin >> Q;\n  for (; Q; Q--) {\n    long long n, r;\n    cin >> n >> r;\n    vector<long long> x(n);\n    for (int i = 0; i < n; ++i) cin >> x[i];\n    sort(x.begin(), x.end());\n    long long ans = 0;\n    while (1) {\n      long long cur = x.back();\n      if (x.empty()) break;\n      if (cur - ans * r <= 0) break;\n      while (x.size() && x.back() == cur) x.pop_back();\n      ans++;\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nconst int inf = 1e9 + 1;\nconst double eps = 1e-15;\nconst double EPS = 1e-9;\nconst double PI = acos(-1.0);\nlong long int dx_8[] = {-1, -1, -1, 0, 0, 1, 1, 1},\n              dy_8[] = {-1, 0, 1, -1, 1, -1, 0, 1};\nlong long int dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0};\nlong long int gcd(long long int a, long long int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long int lcm(long long int a, long long int b) {\n  return a * b / gcd(a, b);\n}\nlong long int M = 1000000007;\nlong long int big_mod(long long int n, long long int p) {\n  if (p == 0) return 1;\n  if (p % 2 == 0) {\n    long long int ret = big_mod(n, p / 2);\n    return ((ret % M) * (ret % M)) % M;\n  } else\n    return ((n % M) * (big_mod(n, p - 1) % M)) % M;\n}\nlong long int reminder(string s, long long int n) {\n  long long int mod = 0;\n  for (long long int i = 0; i < s.size(); i++) {\n    long long int digit = (long long int)s[i] - '0';\n    mod = mod * 10 + digit;\n    mod = mod % n;\n  }\n  return mod;\n}\nint main() {\n  ios_base ::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int t, n, r, a;\n  cin >> t;\n  map<int, int> mp;\n  vector<int> v;\n  while (t--) {\n    cin >> n >> r;\n    for (long long int i = 0; i < n; i++) {\n      cin >> a;\n      if (a - r > 0 && mp[a] == 0) {\n        v.push_back(a);\n        mp[a] = 1;\n      }\n    }\n    int cnt = 0;\n    sort(v.rbegin(), v.rend());\n    ;\n    int temp = 1;\n    for (int i = 0; i < v.size(); i++) {\n      if (v[i] - (temp * r) <= 0) {\n        break;\n      } else {\n        temp = i + 1;\n      }\n      cnt++;\n    }\n    cout << max(1, cnt) << endl;\n    v.clear();\n    mp.clear();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//  _     _  ___  _  _         __  _     __   ___  _      __   //\n// \\ \\  /| || |_)| || |\\ |    ( (`| |_| / /\\ | |_)| |\\/| / /\\  //\n//  \\_\\/ |_||_|  |_||_| \\|    _)_)|_| |/_/--\\|_| \\|_|  |/_/--\\ //\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   //\n/////////////////////////////////////////////////////////////////\n\n\nimport java.util.*;\nimport java.io.*;\n\npublic class cp {\n\n    public static void main(String args[]) {\n\n    \tScanner sc = new Scanner();\n\n           int t = sc.nextInt();\n\n           while(t-->0)\n           {\n            int n = sc.nextInt();\n\n            int k = sc.nextInt();\n\n            ArrayList<Integer> al =   new ArrayList<>();\n\n            HashSet<Integer> h = new HashSet<>();\n            for(int i=0;i<n;i++)\n                h.add(sc.nextInt());\n\n            for(int i:h)\n                al.add(i);\n\n            Collections.sort(al);\n\n            int ans = 1;\n            int move = k;\n\n            al.remove(al.size()-1);\n\n                while(al.size()>0)\n                {\n                    int ele = al.get(al.size()-1);\n                    ele = ele-move;\n\n                    if(ele<=0)\n                        break;\n\n                    move+=k;\n                    ans++;\n                    al.remove(al.size()-1);\n                }\n\n                out.println(ans);\n\n           }\n\n            out.close();\n    }\n    static\tPrintWriter out=new PrintWriter(System.out);\n\tstatic class Scanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString nextLine() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry { \n                                        st=new StringTokenizer(br.readLine());\t\t\t\t               \n                                } catch (IOException e) {}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(nextLine());\n\t\t}\n\t\tfloat nextFloat() {\n\t\t\treturn Float.parseFloat(nextLine());\n\t\t}\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(nextLine());\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(nextLine());\n\t\t}\n\t}\n }\n///"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Main\n{\n\tPrintWriter out = new PrintWriter(System.out);\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n    StringTokenizer tok = new StringTokenizer(\"\");\n    String next() throws IOException {\n        if (!tok.hasMoreTokens()) { tok = new StringTokenizer(in.readLine()); }\n        return tok.nextToken();\n    }\n    int ni() throws IOException { return Integer.parseInt(next()); }\n    long nl() throws IOException { return Long.parseLong(next()); }\n  \n    void solve() throws IOException {\n        for (int TC=ni();TC>0;TC--) {\n            int n=ni(),r=ni();\n            ArrayList<Integer>A=new ArrayList();\n            for (int x=0;x<n;x++) A.add(ni());\n            Collections.sort(A);\n            \n            int ans=0;\n            int p=n-1;\n            while (true) {\n                ans++;\n                int q=A.get(p);\n                while (p>=0 && A.get(p)==q) p--;\n                if (p<0) break;\n                q=A.get(p)-(ans*r);\n                if (q<=0) break;\n            }\n            out.println(ans);\n        }\n        out.flush();\n    }\n    \n    public static void main(String[] args) throws IOException {\n        new Main().solve();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nq = int(stdin.readline())\n    \nfor i in range(q):\n    n , r = map(int, stdin.readline().split())\n    monsters_cord = [int(x) for x in stdin.readline().split()]\n    monsters_cord = set(monsters_cord)\n    monsters_cord = list(monsters_cord)\n    monsters_cord.sort()\n    explosions = 0\n    for k in range(len(monsters_cord)-1, -1, -1):\n        new_monster_cord = monsters_cord[k] - (explosions * r)\n        if(new_monster_cord <= 0):\n            break\n        else:\n            explosions += 1\n    stdout.write(str(explosions) + \"\\n\")"
        },
        {
            "language": 3,
            "solution": "q = int(input())\ns = ''\nfor i in range(q):\n    n, r = map(int, input().split())\n    x = set(map(int, input().split()))\n    x = list(sorted(x))\n    y = 0\n    while x and x[-1] > r*y:\n        x.pop()\n        y += 1\n    s += str(y) + '\\n'\nprint(s)"
        },
        {
            "language": 3,
            "solution": "def main():\n    import sys\n    input = sys.stdin.buffer.readline\n    Q = int(input())\n\n    def BIT_query(idx):\n        \"\"\" A1 ~ Ai\u307e\u3067\u306e\u548c(1-index) \"\"\"\n        res_sum = 0\n        while idx > 0:\n            res_sum += BIT[idx]\n            idx -= idx & -idx\n        return res_sum\n\n    def BIT_update(idx, x, n):\n        \"\"\" Ai\u306bx\u3092\u52a0\u7b97(1-index) \"\"\"\n        while idx <= n:\n            BIT[idx] += x\n            idx += idx & -idx\n        return\n\n    def BIT_init(A, n):\n        for i, e in enumerate(A):\n            BIT_update(i+1, e, n)\n    for q in range(Q):\n        n, r = (int(i) for i in input().split())\n        X = {int(i) for i in input().split()}\n        X = sorted(X)\n        n = len(X)\n        diff = [X[0]] + [X[i+1] - X[i] for i in range(n-1)]\n        BIT = [0] * (n+1)\n        BIT_init(diff, n)\n        ans = 0\n        for right in range(1, n+1)[::-1]:\n            x = BIT_query(right)\n            # print(\"x:\", x)\n            if x <= 0:\n                break\n            ans += 1\n            BIT_update(1, -r, n)\n            BIT_update(right, r, n)\n        print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nresult = \"\"\nfor _ in range(n):\n\tnumMon, distance = map(int, input().split())\n\tmonsters = sorted(set(map(int, input().split())))\n\t\n\tif(numMon == 1):\n\t\tresult += \"1\" + '\\n'\n\telse:\n\t\tbombs, y = 0, 0\n\t\twhile monsters and monsters[-1] - y > 0:\n\t\t\tmonsters.pop()\n\t\t\tbombs += 1\n\t\t\ty += distance\n\t\t\n\t\tresult += str(bombs) + '\\n'\n\nprint(result[:-1])"
        },
        {
            "language": 3,
            "solution": "import io, os\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n# input = io.StringIO(os.read(0, os.fstat(0).st_size).decode()).readline\nii=lambda:int(input())\nkk=lambda:map(int,input().split())\nll=lambda:list(kk())\n\nfor _ in range(ii()):\n\tn,r=kk()\n\tls = sorted(set(kk()))\n\td,i =0,len(ls)-1\n\twhile i>-1 and ls[i]>d:\n\t\td+=r\n\t\ti-=1\n\tprint(d//r)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nconst int MAXN = 100000;\nint n, blowdist;\nint x[MAXN];\nint solve() {\n  sort(x, x + n);\n  int ret = 0, at = n - 1;\n  while (at >= 0) {\n    if (x[at] <= (long long)ret * blowdist) break;\n    int cur = x[at];\n    ++ret;\n    while (at >= 0 && x[at] == cur) --at;\n  }\n  return ret;\n}\nvoid run() {\n  scanf(\"%d%d\", &n, &blowdist);\n  for (int i = (0); i < (n); ++i) scanf(\"%d\", &x[i]);\n  printf(\"%d\\n\", solve());\n}\nint main() {\n  int ncase;\n  scanf(\"%d\", &ncase);\n  for (int i = (1); i <= (ncase); ++i) run();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q;\n  cin >> q;\n  vector<int> res;\n  for (int i = 0; i < q; i++) {\n    vector<int> x;\n    int n, r;\n    cin >> n >> r;\n    for (int j = 0; j < n; j++) {\n      int y;\n      cin >> y;\n      x.push_back(y);\n    }\n    sort(x.begin(), x.end());\n    vector<int>::iterator it = x.begin();\n    vector<int>::iterator it1 = x.begin();\n    it1++;\n    while (it1 != x.end()) {\n      if (*it1 == *it) {\n        x.erase(it1);\n        it1 = it;\n        it1++;\n      } else {\n        it++;\n        it1++;\n      }\n    }\n    int k = 0;\n    int n1 = x.size();\n    while (x[n1 - 1 - k] > k * r) {\n      k++;\n      if (k == n1) {\n        break;\n      }\n    }\n    res.push_back(k);\n  }\n  for (int i = 0; i < q; i++) {\n    cout << res[i] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n\tn,r = map(int,sys.stdin.readline().split())\n\tSet = set(map(int,sys.stdin.readline().split()))\n\n\tlst = sorted(Set)\n\tn = len(lst)\n\tans = n\n\n\tfor i in range(1,n):\n\t\tif(lst[n-i-1] - i*r<=0):\n\t\t\tans = i\n\t\t\tbreak\n\n\tprint(ans)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n \npublic class Main {\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner s=new Scanner(System.in);\n\t\t\n\t\tint t=s.nextInt();\n\t\t\n\t\tStringBuilder sb=new StringBuilder();\n\t\t\n\t\tfor(int i=0;i<t;i++)\n\t\t{\n\t\t\tint n=s.nextInt();\n\t\t\tint r=s.nextInt();\n\t\t\t\n\t\t\tArrayList<Integer> list=new ArrayList<>();\n\t\t\t\n\t\t\t\n\t\t\tMap<Integer,Integer> map=new HashMap<Integer,Integer>();\n\t\t\t\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tint val=s.nextInt();\n\t\t\t\tif(!map.containsKey(val))\n\t\t\t\t{\n\t\t\t\tlist.add(val);\n\t\t\t\tmap.put(val,1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint count=0;\n\t\t\tint ans=0;\n\t\t\t\n\t\t\tCollections.sort(list);\n\t\t\t\n\t\t\tfor(int j=list.size()-1;j>=0;j--)\n\t\t\t{\n\t\t\t\tif(list.get(j)>count)\n\t\t\t\t{\n\t\t\t\t\tans++;\n\t\t\t\t\tcount=count+r;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsb.append(ans+\"\\n\");\n\t\t}\n\t\t\n\t\tSystem.out.println(sb);\n\t\t\n\t}\n\t\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst long long linf = 0x3f3f3f3f3f3f3f3f;\nconst int maxn = 1e5 + 10;\nlong long a[maxn];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long long n, r, ans = 0;\n    cin >> n >> r;\n    for (int i = (0); i < (n); ++i) {\n      cin >> a[i];\n    }\n    sort(a, a + n);\n    long long d = 0;\n    for (int i = n - 1; i > -1; i--) {\n      if (i != n - 1 && a[i] == a[i + 1]) continue;\n      if (a[i] - d <= 0)\n        break;\n      else {\n        ans++;\n        d += r;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class EducationRound74B {\n\n\tpublic static void solve() {\n\t\tint q=s.nextInt();\n\t\twhile(q-->0) {\n\t\t\tint n=s.nextInt();\n\t\t\tlong r=s.nextInt();\n\t\t\tLong[] arr=new Long[n];\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tarr[i]=s.nextLong();\n\t\t\t}\n\t\t\tArrays.sort(arr);\n\t\t\tint i = 0,j = n-1;\n\t\t\tint count = 0;\n\t\t\twhile(i<=j) {\n\t\t\t\tcount++;\n\t\t\t\t//kill same value\n\t\t\t\tlong val = arr[j];\n\t\t\t\twhile(j>=i && arr[j]==val) {\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\t//kill those pushed away\n\t\t\t\twhile(i<=j && arr[i]-(count)*r<=0) {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(count);\n\t\t}\n\t\t\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tout = new PrintWriter(new BufferedOutputStream(System.out));\n\t\ts = new FastReader();\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tpublic static FastReader s;\n\tpublic static PrintWriter out;\n\n\tpublic static class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\t\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class KillEmAll extends PrintWriter{\n\n    Scanner scanner = new Scanner(System.in);\n\n    KillEmAll() {\n        super(System.out);\n    }\n\n    public int getMinExplosions(int numMonsters, int radius, Integer[] positions) {\n        int explosions = 0;\n\n        for (int i = numMonsters - 1; i >= 0 && positions[i] > explosions * radius; i--) {\n            while (i > 0 && positions[i - 1] - positions[i] == 0) {\n                i--;\n            }\n            explosions++;\n        }\n\n        return explosions;\n    }\n\n    public void solve() {\n        int queries = scanner.nextInt();\n\n        while (queries-- > 0) {\n            int numMonsters = scanner.nextInt();\n            int radius = scanner.nextInt();\n\n            Integer[] monsters = new Integer[numMonsters];\n\n            for (int j = 0; j < numMonsters; j++) {\n                monsters[j] = scanner.nextInt();\n            }\n\n            Arrays.sort(monsters);\n\n            int explosions = getMinExplosions(numMonsters, radius, monsters);\n\n            println(explosions);\n        }\n    }\n\n    public static void main(String[] args) {\n        KillEmAll solution = new KillEmAll();\n        solution.solve();\n        solution.flush();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\n\nfor _ in range(int(input())):\n    n, r = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    brr = [arr[0]]\n    for i in range(1, n):\n        if brr[-1] != arr[i]:\n            brr.append(arr[i])\n    cnt = 0\n    for i in range(len(brr)-1,-1,-1):\n        if brr[i] - cnt*r > 0:\n            cnt += 1\n    # print(brr)\n    print(cnt)"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\nimport bisect\nimport math\nimport heapq\nimport itertools\nimport sys\nfrom collections import deque\nfrom atexit import register\nfrom collections import Counter\nfrom functools import reduce\nsys.setrecursionlimit(10000000)\nif sys.version_info[0] < 3:\n    from io import BytesIO as stream\nelse:\n    from io import StringIO as stream\n \n \nif sys.version_info[0] < 3:\n    class dict(dict):\n        \"\"\"dict() -> new empty dictionary\"\"\"\n        def items(self):\n            \"\"\"D.items() -> a set-like object providing a view on D's items\"\"\"\n            return dict.iteritems(self)\n \n        def keys(self):\n            \"\"\"D.keys() -> a set-like object providing a view on D's keys\"\"\"\n            return dict.iterkeys(self)\n \n        def values(self):\n            \"\"\"D.values() -> an object providing a view on D's values\"\"\"\n            return dict.itervalues(self)\n \n    input = raw_input\n    range = xrange\n \n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n \n \ndef sync_with_stdio(sync=True):\n    \"\"\"Set whether the standard Python streams are allowed to buffer their I/O.\n \n    Args:\n        sync (bool, optional): The new synchronization setting.\n \n    \"\"\"\n    global input, flush\n \n    if sync:\n        flush = sys.stdout.flush\n    else:\n        sys.stdin = stream(sys.stdin.read())\n        input = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n        sys.stdout = stream()\n        register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n\ndef main():\n\n    for _ in range(int(input())):\n        n,r=map(int,input().split())\n        x=[int(o) for o in input().split()]\n        a=sorted(list(set(x)))\n        a=a[::-1]\n        ci=0\n        sh=0\n        for i in range(len(a)):\n            if a[i]-ci>0:\n                sh+=1\n                ci+=r\n        print(sh)\n\n\nif __name__ == '__main__':\n    sync_with_stdio(False)\n    main()"
        },
        {
            "language": 3,
            "solution": "numberConsultas =int(input())\nfor i in range(numberConsultas):\n    empurroes = 0\n    misseis = 0\n    mapA, mapB = map(int,input().split(\" \"))\n   \n  \n    enemy = input().split(\" \")\n    if(mapA == 1):\n        misseis += 1\n    else:\n        enemy = list(set(map(int, enemy)))\n        enemy.sort(reverse = True)\n        for j in enemy:\n            if (empurroes >= j):\n                break\n            else:\n              empurroes += mapB\n              misseis += 1\n    print(misseis)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int limit = 1e7 + 1;\nconst int inf = 1e7;\nconst int mod = 1e9 + 7;\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n, r;\n    cin >> n >> r;\n    set<long long int> a;\n    for (int i = 0; i < n; i++) {\n      long long int x;\n      cin >> x;\n      a.insert(x);\n    }\n    n = a.size();\n    long long int minm = n;\n    long long int i = 0;\n    if (n == 1) {\n      cout << 1 << \"\\n\";\n    } else {\n      for (auto it : a) {\n        if (it - (n - i - 1) * r <= 0) {\n          minm = min(minm, (n - i - 1));\n        } else {\n          break;\n        }\n        i++;\n      }\n      cout << minm << \"\\n\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin \nt = int(input())\nwhile(t>0):\n    a,b = [int(i) for i in stdin.readline().split()]\n    arr = {int(i) for i in stdin.readline().split()}\n    arr = sorted(arr,reverse = True)\n    count = 0\n    curr = 0\n    for i in range(len(arr)):\n        if arr[i]-curr>0:\n            count+=1\n            curr+=b\n        else:\n            break\n        \n    print(count)\n    \n    t-=1"
        },
        {
            "language": 3,
            "solution": "s=''\nfor _ in \" \"*int(input()):\n  n,r=map(int,input().split())\n  a=sorted(set(map(int,input().split())))[::-1]\n  cnt=0\n  for i in a:\n    if i<=cnt*r:\n      break\n    cnt+=1\n  s+=str(cnt)+'\\n'\nprint(s)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint q, n;\nlong long r, x[100010];\nint main() {\n  scanf(\"%d\", &q);\n  while (q--) {\n    scanf(\"%d%lld\", &n, &r);\n    for (int i = 0; i < n; i++) scanf(\"%lld\", x + i);\n    sort(x, x + n);\n    n = unique(x, x + n) - x;\n    long long tmp = 0;\n    int cnt = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      if (x[i] - tmp <= 0) break;\n      tmp += r;\n      cnt++;\n    }\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\n\nimport array\nimport math\nimport os\nimport sys\n\n\nDEBUG = 'DEBUG' in os.environ\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef solve(N, R, X):\n    v = list(set(X))\n    v.sort(reverse=True)\n    off = 0\n    c = 0\n    i = 0\n    while i < len(v):\n        x = v[i]\n        if x <= off:\n            break\n        i += 1\n        c += 1\n        off += R\n\n    return c\n\n\ndef main():\n    Q = int(inp())\n    for _ in range(Q):\n        N, R = [int(e) for e in inp().split()]\n        X = [int(e) for e in inp().split()]\n        print(solve(N, R, X))\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "a = int(input())\ng = []\nfor j in range(0, a):\n    n, r = map(int, input().split())\n    str1 = list(set(map(int, input().split())))\n    str1.sort()\n    st = 0\n    if len(str1) <= (str1[0] - 1) // r + 1:\n        st = len(str1)\n        g.append(str(st))\n    elif n == 1:\n        st = 1\n        g.append(str(st))\n    else:\n        for i in range(0, len(str1)):\n            i1 = r *(i + 1)\n            j1 = str1[len(str1) - i - 2]\n            if i1 >= j1:\n                st = i + 1\n                break\n        g.append(str(st))\n\nprint('\\n'.join(g))"
        },
        {
            "language": 3,
            "solution": "# import math\n# def count_shot(pos, r):\n#     num_shots = 0\n#     tmp = set()\n#     for enemy in pos:\n#         tmp.add(enemy)\n#     enemies =[]\n#     for enemy in tmp:\n#         enemies.append(math.ceil(enemy/r))\n    \n#     enemies.sort(reverse=True)\n#     # left = 0\n#     while num_shots < len(enemies):\n#         num_shots += 1\n\n#         if num_shots != len(enemies) and num_shots >= enemies[num_shots]:\n#             return num_shots\n\n#     return num_shots\n\n# num_queries = int(input())\n# for _ in range(num_queries):    \n#     num_enemies, r = [int(elem) for elem in input().split(\" \")]\n#     pos = [int(elem) for elem in input().split(\" \")]\n#     print(count_shot(pos, r))\n    \n\n\n\nimport math\n\n\ndef process():\n    num_enemies, r = [int(elem) for elem in input().split(\" \")]\n    pos = [int(elem) for elem in input().split(\" \")]\n    tmp = set()\n    for enemy in pos:\n        tmp.add(enemy)\n    enemies = []\n    for enemy in tmp:\n        enemies.append(math.ceil(enemy/r))\n\n    enemies.sort(reverse=True)\n    shot = 0\n    while shot < len(enemies):\n        shot += 1\n        if shot != len(enemies) and shot >= enemies[shot]:\n            return shot\n    return(shot)\n\n\ndef main():\n    queue = int(input())\n    answer = []\n    while queue > 0:\n        ans = process()\n        answer.append(ans)\n        queue += -1\n    for i in answer:\n        print(i)\n\n\nmain()\n\n\n\n\n \n\n\n\n        \n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\n\nq=int(input())\ns=''\nfor _ in range(q):\n    n,r=map(int,input().split())\n    l=set(map(int,input().split()))\n    l=list(l)\n    l=sorted(l)\n    count=0\n    while l and l[-1]>count*r:\n        l.pop()\n        count+=1\n    print(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint maxint = numeric_limits<int>::max();\nbool sortbysec(const pair<int, int>& a, const pair<int, int>& b) {\n  return (a.second < b.second);\n}\nlong long bino(int n, int m) {\n  long long j = 1;\n  for (int i = 0; i < m; i++) j = j * (n - i) / (i + 1);\n  return j;\n}\nlong long int fast_power(long long int a, long long int x) {\n  if (x == 0)\n    return 1;\n  else if (x == 1)\n    return a;\n  else {\n    long long int R = fast_power(a, x >> 1);\n    if (!(x & 1))\n      return R * R;\n    else\n      return R * a * R;\n  }\n}\nbool cmp(pair<char, long long int>& a, pair<char, long long int>& b) {\n  return a.second > b.second;\n}\nlong double distance1(long long int x1, long long int y1, long long int x2,\n                      long long int y2) {\n  return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2) * 1.0);\n}\nconst int N = 1e6 + 5;\nlong long int binpow(long long int a, long long int b) {\n  long long int res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a;\n    a = a * a;\n    b >>= 1;\n  }\n  return res;\n}\nlong long int gcd(long long int a, long long int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nvoid solve() {\n  long long int n, c = 0, m, x = 0;\n  cin >> n >> m;\n  long long int a[n];\n  for (long long int i = 0; i < n; i++) cin >> a[i];\n  sort(a, a + n);\n  reverse(a, a + n);\n  map<long long int, long long int> ma;\n  for (long long int i = 0; i < n; i++) {\n    if (ma[a[i]] == 0 && a[i] - x > 0) {\n      ma[a[i]]++;\n      x += m;\n      c++;\n    }\n  }\n  cout << c << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  long long int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nbool chmax(T &a, const T &b) {\n  if (a < b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\ntemplate <class T>\nbool chmin(T &a, const T &b) {\n  if (b < a) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\nsigned main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long N, R;\n    cin >> N >> R;\n    priority_queue<long long> Q;\n    long long sum = 0;\n    for (long long i = 0; i < N; i++) {\n      long long a;\n      cin >> a;\n      Q.push(a);\n    }\n    long long ans = 0;\n    bool F[100010] = {false};\n    while (!Q.empty()) {\n      long long a = Q.top();\n      Q.pop();\n      if (F[a]) continue;\n      F[a] = 1;\n      if (a - sum <= 0)\n        break;\n      else {\n        sum += R;\n        ans++;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    int arr[n + 1];\n    bool mark[100005];\n    memset(mark, 0, sizeof mark);\n    for (int i = 0; i < (int)n; i++) cin >> arr[i];\n    sort(arr, arr + n);\n    long long ans = 0;\n    long long acum = 0;\n    for (int i = n - 1; i >= 0; i--) {\n      if (arr[i] > acum && !mark[arr[i]]) {\n        mark[arr[i]] = 1;\n        acum += r;\n        ans++;\n      }\n      if (arr[i] <= acum) break;\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.io.*;\npublic class Main{\n    public static int min(int n1, int n2){\n        if(n1 <= n2){\n            return n1;\n        }\n        else{\n            return n2;  \n        }\n    }\n    public static int min_moves(ArrayList<Monster> array, int r) {\n        int largo = array.size();\n        int l = 0;\n        Collections.sort(array); //primero ordeno el arreglo en base a las coordenadas en X\n        while(l < largo - 1){ //luego si pillo a m\u00e1s de un monstruo en la misma coordenada X, los elimino hasta dejar a 1 solo\n            if(array.get(l).getCoordenadaX() == array.get(l + 1).getCoordenadaX()){\n                array.remove(l);\n                largo--;\n            }\n            else{\n                l++;\n            }\n        }\n        //parte crucial del algoritmo\n        //recordar que ac\u00e1 ya no tengo monstruos \"repetidos\" y adem\u00e1s los tengo ordenados\n        //ire viendo de izquierda a derecha, si el monstruo array[h] se elimina \"sin querer\"\n        //es decir, se elimina sin tener que dispararle directamente a \u00e9l.\n        //luego, cuando llegue al primer monstruo de izq a derecha que tenga que dispararle directamente\n        //para matarlo, retorno la cantidad de monstruos que hay a su derecha CONTANDOLO, es decir, la\n        //cantidad de veces que tendr\u00e9 que disparar para matarlos a todos\n        int h = 0;\n        while(array.get(h).getCoordenadaX() <= r *(largo - 1 - h)){\n            h++;\n        }\n        return largo - h;\n\n    }                                                                                                                                                                                                                                                                                                                                                                                       \n\n    public static void main(final String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); //uso esta forma pues es m\u00e1s \u00f3ptima\n        int q = Integer.parseInt(br.readLine());\n        ArrayList<Integer> answers = new ArrayList<Integer>();\n\n        while (q > 0) { //n\u00famero de querys   \n            StringTokenizer st = new StringTokenizer(br.readLine());\n            final int n = Integer.parseInt(st.nextToken());// numero de monstruos\n            final int r = Integer.parseInt(st.nextToken()); // distancia de esparcimiento\n            // pedir n veces las coordenadas\n            StringTokenizer st2 = new StringTokenizer(br.readLine());\n            ArrayList<Monster> array = new ArrayList<Monster>();\n            int i = 0;\n            int flyingMonsters = 0;\n            while(i < n){\n                int coord = Integer.parseInt(st2.nextToken());\n                if(coord <= 0){\n                    flyingMonsters++;\n                }\n                else{\n                    array.add(new Monster(coord)); //arreglo de monstruos c/u con su posicion.\n                }\n                i++;\n            }\n            //si tengo x flyingMonsters, primero mato de forma eficiente a los monstruos terrestres\n            //y luego disparo x veces m\u00e1s para matar los flyings monster\n            answers.add(min_moves(array, r) + flyingMonsters);\n            q--;\n        }\n\n        answers.forEach((x) -> System.out.println(x));\n        \n    }\n}\n\nclass Monster implements Comparable<Monster>{\n    public Monster(final int x) {\n        this.coordenadaX = x;\n        this.alive = 1; //indica que el monstruo est\u00e1 vivo\n    }\n\n    public int getCoordenadaX() {\n        return this.coordenadaX; //en pos del encapsulamiento...\n    }\n    @Override\n    public int compareTo(final Monster other) {\n        return this.coordenadaX - other.coordenadaX;\n    }\n\n    protected int coordenadaX;\n    protected int alive;\n}\n\nclass FlyingMonster extends Monster{\n    public FlyingMonster(int coordenadaX){\n        super(coordenadaX);\n        }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n# input = sys.stdin.buffer.readline\ninput = sys.stdin.readline\n\n\nq = int(input())\nfor _ in range(q):\n    n, r = map(int,input().split())\n    x = list ( map(int,input().split()))\n    x=set(x)\n    x=sorted(list(x))\n    i = 0\n    n=len(x)\n    while i<n and (x[n-i-1]-i*r>0):\n        i+=1\n        # print(i)\n    print(i)"
        },
        {
            "language": 4,
            "solution": "\n/**\n * @author Juan Sebastian Beltran Rojas\n * @mail jsbeltran.valhalla@gmail.com\n * @veredict\n * @url https://codeforces.com/problemset/problem/1238/B\n * @category greedy\n * @date 09/10/2019\n **/\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\nimport static java.lang.Integer.parseInt;\n\npublic class CF1238B {\n    public static void main(String args[]) throws Throwable {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        for (int Q = parseInt(in.readLine()), q = 0; q++ < Q; ) {\n            StringTokenizer st = new StringTokenizer(in.readLine());\n            int N = parseInt(st.nextToken()), R = parseInt(st.nextToken());\n            TreeSet<Integer> set = new TreeSet<>();\n            st = new StringTokenizer(in.readLine());\n            for (int i = 0; i < N; i++)\n                set.add(parseInt(st.nextToken()));\n            int S = 0;\n            for (int s : set.descendingSet()) {\n                if (s - S * R <= 0) break;\n                else S++;\n            }\n            System.out.println(S);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\ninput = sys.stdin.readline\n\narr=[]\nn=0\nr=0\n\ndef check(k):\n\tif arr[n-k-1]-k*r>0:\n\t\treturn False\n\treturn True\n\t\ndef binarySearch (l, r): \n  \n\tif r >= l: \n  \n\t\tmid = l + (r - l)//2\n\n\t\tif check(mid):\n\t\t\tif r==l:\n\t\t\t\treturn l\n\t\t\t\t\n\t\t\treturn(binarySearch(l, mid))\n\n\t\telse:\n\t\t\treturn binarySearch(mid + 1, r) \n  \n\telse: \n\t\treturn n\n  \n\nq=int(input())\nfor i in range(q):\n\tn,r=map(int,input().split())\n\tl=list(map(int,input().split()))\n\tarr=list(set(l))\n\tn=len(arr)\n\tarr.sort()\n\n\tprint(binarySearch(1,n-1))"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\ntests=int(stdin.readline().strip())\nfor t in range(tests):\n    n,m=map(int,stdin.readline().strip().split())\n    s=list(set(map(int,stdin.readline().strip().split())))\n\n    s.sort()\n    acum=0\n    ans=0\n    while len(s)>0 and s[-1]-acum>0:\n        s.pop()\n        acum+=m\n        ans+=1\n    stdout.write(\"%d\\n\" % ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class Main{\n\tpublic static void main(String arg[]) throws Exception{\n\t\tBufferedReader input = null;\n\t\tinput = new BufferedReader(new InputStreamReader(System.in));\n\t\tint queries = Integer.parseInt(input.readLine());\n\t\tfor (int i=0; i<queries; i++){\n\t\t\tSet<Monster> monsters = new TreeSet<>();\n\t\t\tString input_nr = input.readLine();\n\t\t\tString input_positions = input.readLine();\n\t\t\tString nr[] = input_nr.split(\" \");\n\t\t\tString monsters_positions[] = input_positions.split(\" \");\n\t\t\tint n = Integer.parseInt(nr[0]);\n\t\t\tint r = Integer.parseInt(nr[1]);\n\t\t\tfor (int j = 0; j < n; j++){\n\t\t\t\tint position = Integer.parseInt(monsters_positions[j]);\n\t\t\t\tif(position>0){\n\t\t\t\t\tMonster monster = new Monster(position);\n\t\t\t\t\tmonsters.add(monster);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tFlyingMonster monster = new FlyingMonster(position);\n\t\t\t\t\tmonsters.add(monster);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint output = min_moves(monsters, r);\n\t\t\tSystem.out.println(output);\n\t\t}\n\t}\n\tpublic static int min_moves(Set<Monster> monsters, int r){\n\t\tint move = 0;\n\t\tfor(Monster monster : monsters){\n\t\t\tint monster_position = monster.getPosition();\n\t\t\tboolean flying = monster.getFlying();\n\t\t\tif (monster_position-move*r>0 || flying==true){\n\t\t\t\tmove++;\n\t\t\t}\n\t\t\tmonster.killMonster();\n\t\t}\n\t\treturn move;\n\t}\n}\n\nclass Monster implements Comparable<Monster>{\n\tprotected int position;\n\tprotected boolean alive;\n\tpublic Monster(int position){\n\t\tthis.position = position;\n\t\tthis.alive = true;\n\t}\n\tpublic int getPosition(){\n\t\treturn this.position;\n\t}\n\tpublic void killMonster(){\n\t\tthis.alive = false;\n\t}\n\tpublic boolean getFlying(){\n\t\treturn false;\n\t}\n\tpublic int compareTo(Monster other){\n\t\tif(this.position!=other.position){\n\t\t\treturn other.position - this.position;\n\t\t}\n\t\treturn(0);\n\t}\n}\n\nclass FlyingMonster extends Monster{\n\tpublic FlyingMonster(int position){\n\t\tsuper(position);\n\t}\n\tpublic boolean getFlying(){\n\t\treturn true;\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.Set;\nimport java.util.TreeMap;\n\npublic class _Rough{\n        public static void main(String[] args) throws IOException {\n\n            BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n            BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n            int t = Integer.parseInt(in.readLine());\n            while (t-- > 0) {\n                String[] s = in.readLine().split(\" \");\n                int n = Integer.parseInt(s[0]);\n                int r = Integer.parseInt(s[1]);\n\n                s = in.readLine().split(\" \");\n                int[] ar = new int[n];\n\n                for (int i = 0; i < n; i++) {\n                    ar[i] = Integer.parseInt(s[i]);\n                }\n\n                TreeMap<Integer, Integer> map = new TreeMap<>();\n                for (int i = 0; i < n; i++) {\n                    map.put(ar[i], 1);\n                }\n                Set<Integer> list1 = map.keySet();\n                ArrayList<Integer> newlist = new ArrayList<>();\n                for (int i : list1) {\n                    newlist.add(i);\n                }\n                int mul = 0;\n                int ans = 0;\n                for (int i = newlist.size() - 1; i >= 0; i--) {\n                    int curr = newlist.get(i);\n                    curr -= (mul * r);\n                    mul++;\n                    if (curr <= 0) {\n                        break;\n                    } else {\n                        ans++;\n                    }\n                }\n                out.write(ans + \"\\n\");\n            }\n            out.flush();\n        }\n        }\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long maxi = LLONG_MAX;\nlong long mini = LLONG_MIN;\nvoid fast() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n}\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n;\n    cin >> r;\n    vector<long long> v(n);\n    for (int i = 0; i < v.size(); i++) cin >> v[i];\n    ;\n    sort(v.begin(), v.end());\n    long long c = 0;\n    long long cnt = 0;\n    map<long long, long long> fg;\n    for (int i = n - 1; i >= 0; i--) {\n      if (v[i] > c && fg[v[i]] == 0) {\n        c += r;\n        fg[v[i]] = 1;\n        cnt++;\n      }\n    }\n    cout << cnt << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int q, n, r, x, d, a[100000];\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    cin >> n >> r;\n    for (int j = 0; j < n; j++) {\n      cin >> a[j];\n    }\n    sort(a, a + n);\n    n = unique(a, a + n) - a;\n    int f = 0;\n    for (int j = n - 1; j >= 0; j--) {\n      f += (a[j] - f * r > 0);\n    }\n    cout << f << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nt = int(input())\nk = []\nfor test in range(t):\n    n,r = [int(x) for x in input().split()]\n    arr1 = [int(x) for x in input().split()]\n    x = {}\n    for i in range(n):\n        x[arr1[i]] = 1\n    arr = list(x.keys())\n    arr.sort()\n    # arr.append(arr1[0])\n    # for i in range(1,n):\n    #     if arr1[i]!=arr1[i-1]:\n    #         arr.append(arr1[i])\n\n    req = []\n    for i in arr:\n        req.append(math.ceil(i/r))\n    n = len(arr)\n    #print(req)\n    ans = 0\n    for i in range(n-1,-1,-1):\n        x = n-i-1\n        if x<req[i]:\n            ans+=1\n    k.append(ans)\nfor i in range(t):\n    print(k[i])"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t, n, i, j;\n  long long int *x, *y;\n  cin >> t;\n  while (t--) {\n    long long int r;\n    cin >> n >> r;\n    x = new long long int[n];\n    for (i = 0; i < n; i++) {\n      cin >> x[i];\n    }\n    sort(x, x + n);\n    y = new long long int[n];\n    long long int k = 0, mid, l;\n    y[k++] = x[0];\n    for (i = 1; i < n; i++) {\n      if (x[i] != x[i - 1]) {\n        y[k++] = x[i];\n      }\n    }\n    long long int previ, neww, ans;\n    mid = k;\n    l = 0;\n    ans = k;\n    for (i = k - 1; i >= 0; i--) {\n      neww = y[i] - (k - 1 - i) * r;\n      if (neww <= 0) {\n        ans = k - i - 1;\n        break;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "N = -1\nANSWER = []\n\ndef entrypoint():\n    global N\n    N = int(input())\n\ndef compute_min_shots(enemy_pos, distance):\n    answer = 0\n    for i in range(len(enemy_pos) - 1, -1, -1):\n        enemy = enemy_pos[i]\n        curr_dist = enemy - answer * distance\n        if curr_dist > 0:\n            answer += 1\n        else: break\n    return answer\n\ndef process():\n    for _ in range(N):\n        _, distance = list(map(int, input().split()))\n        enemy_pos = list(set(map(int, input().split())))\n        enemy_pos.sort()\n\n        min_shots = compute_min_shots(enemy_pos, distance)\n        ANSWER.append(min_shots)\n\ndef main():\n    entrypoint()\n    process()\n    [print(answer) for answer in ANSWER]\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class InputIt, class Distance>\nvoid advance(InputIt& it, Distance n);\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, r;\n    cin >> n >> r;\n    long long a[n];\n    for (int i = 0; i < n; i++) cin >> a[i];\n    sort(a, a + n);\n    int k = 1, ans = 1;\n    set<long long> s;\n    s.insert(a[n - 1]);\n    for (int i = n - 2; i >= 0; i--) {\n      if (s.count(a[i])) continue;\n      if (a[i] - k * r > 0) {\n        s.insert(a[i]);\n        ans = ++k;\n      } else {\n        ans = k;\n        break;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100005];\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n, r;\n    scanf(\"%d%d\", &n, &r);\n    for (int i = 1; i <= n; ++i) scanf(\"%d\", &a[i]);\n    sort(a + 1, a + 1 + n);\n    long long now = 0;\n    int pre = -1;\n    int ans = 0;\n    for (int i = n; i >= 1; --i) {\n      if (a[i] == pre || a[i] + now <= 0) continue;\n      pre = a[i];\n      now -= r;\n      ans++;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef count_shot():\n    num_enemies, r = [int(elem) for elem in input().split(\" \")]\n    pos = [int(elem) for elem in input().split(\" \")]\n    num_shots = 0\n    enemies = list(set(pos))\n    enemies.sort(reverse=True)\n    if enemies[0] < r:\n        return 1\n    left = 0\n    while len(enemies) != 0:\n        if (len(enemies) != 0):\n            if enemies[0] > left:\n                enemies.pop(0)\n            else:\n                return num_shots\n        left += r\n\n        num_shots += 1\n    return num_shots\n\nnum_queries = int(input())\nanswers = []\nfor _ in range(num_queries):    \n    answers.append(count_shot())\n\nfor ans in answers:\n    print(ans)\n    \n\n\n\n# import math\n\n\n# def process():\n#     num_enemies, r = [int(elem) for elem in input().split(\" \")]\n#     pos = [int(elem) for elem in input().split(\" \")]\n#     tmp = set()\n#     for enemy in pos:\n#         tmp.add(enemy)\n#     enemies = []\n#     for enemy in tmp:\n#         enemies.append(math.ceil(enemy/r))\n\n#     enemies.sort(reverse=True)\n#     shot = 0\n#     while shot < len(enemies):\n#         shot += 1\n#         if shot != len(enemies) and shot >= enemies[shot]:\n#             return shot\n#     return(shot)\n\n\n# def main():\n#     queue = int(input())\n#     answer = []\n#     while queue > 0:\n#         ans = process()\n#         answer.append(ans)\n#         queue += -1\n#     for i in answer:\n#         print(i)\n\n\n# main()\n\n\n\n\n \n\n\n\n        \n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long i, j, k;\nint main() {\n  long long query;\n  cin >> query;\n  while (query--) {\n    long long n, r;\n    cin >> n >> r;\n    vector<long long int> vec;\n    vector<bool> flag(100000 + 1, false);\n    for (i = 0; i < n; i++) {\n      long long x;\n      cin >> x;\n      if (flag[x] == false) vec.push_back(x), flag[x] = true;\n    }\n    sort(vec.begin(), vec.end());\n    long long x = 0;\n    long long cnt = 0;\n    for (i = (long int)vec.size() - 1; i >= 0; i--) {\n      vec[i] = vec[i] - x;\n      if (vec[i] <= 0) break;\n      x = x + r;\n      cnt++;\n    }\n    cout << cnt << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, r;\n    cin >> n >> r;\n    vector<long long> arr(n);\n    for (long long i = 0; i < n; i++) {\n      cin >> arr[i];\n    }\n    sort(arr.begin(), arr.end());\n    auto ip = unique(arr.begin(), arr.end());\n    arr.resize(distance(arr.begin(), ip));\n    long long total = 0, ans = 0;\n    for (long long i = arr.size() - 1; i >= 0; i--) {\n      if (arr[i] - total > 0) {\n        ans++;\n        total += r;\n      }\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class Solve8 {\n\n    public static void main(String[] args) throws IOException {\n        PrintWriter pw = new PrintWriter(System.out);\n        new Solve8().solve(pw);\n        pw.flush();\n        pw.close();\n    }\n\n    public void solve(PrintWriter pw) throws IOException {\n        FastReader sc = new FastReader();\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            n = sc.nextInt();\n            r = sc.nextInt();\n            TreeSet<Integer> ts = new TreeSet();\n            for (int i = 0; i < n; i++) {\n                ts.add(sc.nextInt());\n            }\n            n = ts.size();\n            a = new Integer[n];\n            int j = 0;\n            for (Integer x : ts) {\n                a[j++] = x;\n            }\n            int l = 1, h = n;\n            while (l <= h) {\n                int mid = (l + h) >> 1;\n                if (check(mid)) {\n                    h = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            pw.println(l);\n        }\n    }\n    int n, r;\n    Integer[] a;\n\n    public boolean check(int mid) {\n        Integer[] x = new Integer[n - mid];\n        for (int i = 0; i < n - mid; i++) {\n            x[i] = a[i] - mid * r;\n            if (x[i] > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    static class FastReader {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public FastReader(String s) {\n            try {\n                br = new BufferedReader(new FileReader(s));\n            } catch (FileNotFoundException e) {\n            }\n        }\n\n        public String next() {\n            if (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n            }\n            return null;\n        }\n\n        public boolean hasNext() throws IOException {\n            if (st != null && st.hasMoreTokens()) {\n                return true;\n            }\n            String s = br.readLine();\n            if (s == null || s.isEmpty()) {\n                return false;\n            }\n            st = new StringTokenizer(s);\n            return true;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "k = \"\"\nfor i in range(int(input())):\n    x,y = map(int , input().split())\n    li = list(map(int , input().split()))\n    se = list(set(li))\n    se.sort()\n    se = se[::-1]\n    dic = {}\n    p = []\n    su = 0\n    l = 0\n    j = 0\n    for i in range(len(se)):\n        if( l >= se[i]):\n            break\n        else:\n            j += 1\n            l += y\n    k +=str(j) + \"\\n\" \nprint(k)    \n        \n    \n    \n    \n"
        }
    ]
}