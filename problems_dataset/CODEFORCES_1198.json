{
    "name": "1198_A. MP3",
    "source": "CODEFORCES",
    "description": "One common way of digitalizing sound is to record sound intensity at particular time moments. For each time moment intensity is recorded as a non-negative integer. Thus we can represent a sound file as an array of n non-negative integers.\n\nIf there are exactly K distinct values in the array, then we need k = \u2308 log_{2} K \u2309 bits to store each value. It then takes nk bits to store the whole file.\n\nTo reduce the memory consumption we need to apply some compression. One common way is to reduce the number of possible intensity values. We choose two integers l \u2264 r, and after that all intensity values are changed in the following way: if the intensity value is within the range [l;r], we don't change it. If it is less than l, we change it to l; if it is greater than r, we change it to r. You can see that we lose some low and some high intensities.\n\nYour task is to apply this compression in such a way that the file fits onto a disk of size I bytes, and the number of changed elements in the array is minimal possible.\n\nWe remind you that 1 byte contains 8 bits.\n\nk = \u2308 log_{2} K \u2309 is the smallest integer such that K \u2264 2^{k}. In particular, if K = 1, then k = 0.\n\nInput\n\nThe first line contains two integers n and I (1 \u2264 n \u2264 4 \u22c5 10^{5}, 1 \u2264 I \u2264 10^{8}) \u2014 the length of the array and the size of the disk in bytes, respectively.\n\nThe next line contains n integers a_{i} (0 \u2264 a_{i} \u2264 10^{9}) \u2014 the array denoting the sound file.\n\nOutput\n\nPrint a single integer \u2014 the minimal possible number of changed elements.\n\nExamples\n\nInput\n\n\n6 1\n2 1 2 3 4 3\n\n\nOutput\n\n\n2\n\n\nInput\n\n\n6 2\n2 1 2 3 4 3\n\n\nOutput\n\n\n0\n\n\nInput\n\n\n6 1\n1 1 2 2 3 3\n\n\nOutput\n\n\n2\n\nNote\n\nIn the first example we can choose l=2, r=3. The array becomes 2 2 2 3 3 3, the number of distinct elements is K=2, and the sound file fits onto the disk. Only two values are changed.\n\nIn the second example the disk is larger, so the initial file fits it and no changes are required.\n\nIn the third example we have to change both 1s or both 3s.",
    "difficulty": "A",
    "tags": [
        "sortings",
        "two pointers"
    ],
    "rating": 1600,
    "public_test": [
        {
            "input": "6 1\n2 1 2 3 4 3\n",
            "output": "2\n"
        },
        {
            "input": "6 1\n1 1 2 2 3 3\n",
            "output": "2\n"
        },
        {
            "input": "6 2\n2 1 2 3 4 3\n",
            "output": "0\n"
        }
    ],
    "generated_test": [
        {
            "input": "10 500\n1 2 3 4 5 9 7 8 9 10\n",
            "output": "0\n"
        },
        {
            "input": "9 2\n1 2 1 2 1 2 1 2 1000000000\n",
            "output": "1\n"
        },
        {
            "input": "50 20\n592183311 362557946 154127088 616872926 395353745 675069471 509655682 79915471 356656666 937992998 304422065 724106263 472338455 792258113 796069631 663370025 201799298 566151622 722278085 508905399 703159587 690854023 925377265 11010958 69791159 990158269 535460930 167415727 999216963 237203826 693974848 530462137 555061429 744123832 887168514 479773974 575345653 282142246 899762676 446274594 338501746 168668673 408947684 226311538 645441958 258972430 216333311 658394075 123733185 539429791\n",
            "output": "42\n"
        },
        {
            "input": "10 1\n589934963 440265648 161048053 196789927 951616256 63404428 660569162 779938975 139312880 31052281\n",
            "output": "9\n"
        },
        {
            "input": "6 1\n1 1 4 2 3 3\n",
            "output": "3\n"
        },
        {
            "input": "9 2\n1 2 1 2 1 0 1 2 1000000000\n",
            "output": "2\n"
        },
        {
            "input": "8 32\n1 2 3 4 5 2 7 8\n",
            "output": "0\n"
        },
        {
            "input": "1 4\n0\n",
            "output": "0\n"
        },
        {
            "input": "8 64\n1 1 0 1 1 1 1 1\n",
            "output": "0\n"
        },
        {
            "input": "8 63\n1 2 3 4 9 6 7 8\n",
            "output": "0\n"
        },
        {
            "input": "2 1001000\n1 1\n",
            "output": "0\n"
        },
        {
            "input": "2 100000\n2 4\n",
            "output": "0\n"
        },
        {
            "input": "10 100\n2 2 3 4 5 6 7 8 9 10\n",
            "output": "0\n"
        },
        {
            "input": "10 100\n1 1 2 2 2 3 3 1 3 4\n",
            "output": "0\n"
        },
        {
            "input": "3 288383\n2 0 2\n",
            "output": "0\n"
        },
        {
            "input": "4 2\n2 2 2 2\n",
            "output": "0\n"
        },
        {
            "input": "2 8\n2 2\n",
            "output": "0\n"
        },
        {
            "input": "100 1000\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
            "output": "0\n"
        },
        {
            "input": "7 999992\n1 2 3 7 5 6 7\n",
            "output": "0\n"
        },
        {
            "input": "8 64\n1 2 3 4 5 6 6 8\n",
            "output": "0\n"
        },
        {
            "input": "3 10000000\n1 2 4\n",
            "output": "0\n"
        },
        {
            "input": "8 33\n1 2 3 4 5 6 13 8\n",
            "output": "0\n"
        },
        {
            "input": "6 100000\n2 1 2 4 4 3\n",
            "output": "0\n"
        },
        {
            "input": "10 1000000\n1 2 3 4 5 6 6 8 9 10\n",
            "output": "0\n"
        },
        {
            "input": "8 31\n1 1 2 2 3 0 4 4\n",
            "output": "0\n"
        },
        {
            "input": "81 800\n2 8 5 1 10 5 9 9 3 5 6 6 2 8 2 2 6 3 8 7 2 5 3 4 3 3 2 7 9 6 8 7 2 9 10 3 8 10 6 5 4 2 3 4 4 5 2 2 4 9 8 5 3 8 8 10 4 2 10 9 7 6 1 3 9 7 1 4 5 9 7 6 1 10 1 1 7 2 4 9 10\n",
            "output": "0\n"
        },
        {
            "input": "2 2\n1 3\n",
            "output": "0\n"
        },
        {
            "input": "64 40\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n",
            "output": "0\n"
        },
        {
            "input": "8 65\n1 2 0 4 5 6 7 8\n",
            "output": "0\n"
        },
        {
            "input": "9 100000000\n1 2 3 4 9 6 7 8 9\n",
            "output": "0\n"
        },
        {
            "input": "100 800\n1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 3 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\n",
            "output": "0\n"
        },
        {
            "input": "6 2168\n1 1 2 2 3 3\n",
            "output": "0\n"
        },
        {
            "input": "8 18\n1 1 1 1 1 1 1 1\n",
            "output": "0\n"
        },
        {
            "input": "100 1249\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 33 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n",
            "output": "0\n"
        },
        {
            "input": "2 10000\n1 4\n",
            "output": "0\n"
        },
        {
            "input": "5 1234567\n0 2 3 4 5\n",
            "output": "0\n"
        },
        {
            "input": "3 11\n2 2 3\n",
            "output": "0\n"
        },
        {
            "input": "8 30\n1 2 3 8 5 6 7 8\n",
            "output": "0\n"
        },
        {
            "input": "5 1010000\n1 2 3 3 4\n",
            "output": "0\n"
        },
        {
            "input": "5 100000\n1 2 3 5 4\n",
            "output": "0\n"
        },
        {
            "input": "100 1000\n1 2 3 3 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\n",
            "output": "0\n"
        },
        {
            "input": "20 8\n1 1 1 0 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2\n",
            "output": "0\n"
        },
        {
            "input": "6 48\n2 1 2 3 8 3\n",
            "output": "0\n"
        },
        {
            "input": "5 100100\n1 2 3 3 4\n",
            "output": "0\n"
        },
        {
            "input": "5 100\n1 2 5 4 5\n",
            "output": "0\n"
        },
        {
            "input": "8 15\n2 8 5 1 10 5 9 9\n",
            "output": "0\n"
        },
        {
            "input": "8 31\n1 2 3 4 5 6 7 7\n",
            "output": "0\n"
        },
        {
            "input": "50 400\n0 30 60 90 120 150 180 210 240 270 300 330 360 390 420 450 480 510 540 570 600 630 660 690 720 750 780 810 840 870 900 930 960 990 1020 1050 1353 1110 1140 1170 1200 1230 1260 1290 1320 1350 1380 1410 1440 1470\n",
            "output": "0\n"
        },
        {
            "input": "2 64\n2 2\n",
            "output": "0\n"
        },
        {
            "input": "3 125\n1 2 3\n",
            "output": "0\n"
        },
        {
            "input": "1 10000000\n2\n",
            "output": "0\n"
        },
        {
            "input": "5 100000000\n0 1 2 2 5\n",
            "output": "0\n"
        },
        {
            "input": "2 42611638\n3 9\n",
            "output": "0\n"
        },
        {
            "input": "2 30000000\n3 5\n",
            "output": "0\n"
        },
        {
            "input": "1 100000010\n69\n",
            "output": "0\n"
        },
        {
            "input": "3 100000000\n2 1 2\n",
            "output": "0\n"
        },
        {
            "input": "5 100000000\n1 2 3 4 10\n",
            "output": "0\n"
        },
        {
            "input": "2 30000000\n1 1\n",
            "output": "0\n"
        },
        {
            "input": "2 100000000\n1 4\n",
            "output": "0\n"
        },
        {
            "input": "1 100000000\n0\n",
            "output": "0\n"
        },
        {
            "input": "6 100000000\n2 1 2 3 1 3\n",
            "output": "0\n"
        },
        {
            "input": "10 500\n1 2 5 4 5 9 7 8 9 10\n",
            "output": "0\n"
        },
        {
            "input": "8 32\n1 2 3 4 5 2 7 14\n",
            "output": "0\n"
        },
        {
            "input": "1 7\n0\n",
            "output": "0\n"
        },
        {
            "input": "8 64\n1 1 0 1 1 1 0 1\n",
            "output": "0\n"
        },
        {
            "input": "8 104\n1 2 3 4 9 6 7 8\n",
            "output": "0\n"
        },
        {
            "input": "10 100\n2 2 6 4 5 6 7 8 9 10\n",
            "output": "0\n"
        },
        {
            "input": "10 101\n1 1 2 2 2 3 3 1 3 4\n",
            "output": "0\n"
        },
        {
            "input": "3 288383\n0 0 2\n",
            "output": "0\n"
        },
        {
            "input": "4 2\n2 2 2 0\n",
            "output": "0\n"
        },
        {
            "input": "2 10\n2 2\n",
            "output": "0\n"
        },
        {
            "input": "100 1000\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1\n",
            "output": "0\n"
        },
        {
            "input": "7 999992\n2 2 3 7 5 6 7\n",
            "output": "0\n"
        },
        {
            "input": "8 51\n1 2 3 4 5 6 6 8\n",
            "output": "0\n"
        }
    ]
}