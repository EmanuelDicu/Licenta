{
    "name": "1342_C. Yet Another Counting Problem",
    "source": "CODEFORCES",
    "description": "You are given two integers a and b, and q queries. The i-th query consists of two numbers l_i and r_i, and the answer to it is the number of integers x such that l_i \u2264 x \u2264 r_i, and ((x mod a) mod b) \u2260 ((x mod b) mod a). Calculate the answer for each query.\n\nRecall that y mod z is the remainder of the division of y by z. For example, 5 mod 3 = 2, 7 mod 8 = 7, 9 mod 4 = 1, 9 mod 9 = 0.\n\nInput\n\nThe first line contains one integer t (1 \u2264 t \u2264 100) \u2014 the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains three integers a, b and q (1 \u2264 a, b \u2264 200; 1 \u2264 q \u2264 500).\n\nThen q lines follow, each containing two integers l_i and r_i (1 \u2264 l_i \u2264 r_i \u2264 10^{18}) for the corresponding query.\n\nOutput\n\nFor each test case, print q integers \u2014 the answers to the queries of this test case in the order they appear.\n\nExample\n\nInput\n\n\n2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n\n\nOutput\n\n\n0 0 0 2 4 \n0 91 ",
    "difficulty": "C",
    "tags": [
        "math",
        "number theory"
    ],
    "rating": 1600,
    "public_test": [
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0\n0\n0\n2\n4\n0\n91\n"
        }
    ],
    "generated_test": [
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 91 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n7 8\n100 186\n",
            "output": "0 0 0 0 4 \n0 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n7 13\n100 186\n",
            "output": "0 0 0 0 4 \n4 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n7 22\n100 186\n",
            "output": "0 0 0 0 4 \n13 77 \n"
        },
        {
            "input": "1\n2 1 1\n1 1000000000000000000\n",
            "output": "0 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 2\n1 7\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 0 2 4 \n0 91 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n13 13\n100 186\n",
            "output": "0 0 0 0 4 \n1 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 3\n7 10 2\n7 22\n100 186\n",
            "output": "0 0 0 0 0 \n13 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 2\n1 7\n1 9\n7 10 2\n7 8\n100 364\n",
            "output": "0 0 0 2 4 \n0 225 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 2\n1 7\n1 9\n7 10 2\n7 8\n101 364\n",
            "output": "0 0 0 2 4 \n0 224 \n"
        },
        {
            "input": "1\n200 173 1\n1 1000000000000000000\n",
            "output": "994219653179190601 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 286\n",
            "output": "0 0 0 2 4 \n0 160 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n11 10 2\n7 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 90 \n"
        },
        {
            "input": "2\n4 2 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n7 8\n100 186\n",
            "output": "0 0 0 0 0 \n0 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 4 2\n7 13\n100 186\n",
            "output": "0 0 0 0 4 \n7 66 \n"
        },
        {
            "input": "2\n5 9 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n13 13\n100 186\n",
            "output": "0 0 0 0 1 \n1 77 \n"
        },
        {
            "input": "2\n1 6 5\n1 1\n1 3\n1 2\n1 7\n1 9\n7 10 2\n7 8\n101 364\n",
            "output": "0 0 0 0 0 \n0 224 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 4 2\n7 13\n100 368\n",
            "output": "0 0 0 0 4 \n7 201 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n7 10 2\n11 22\n100 186\n",
            "output": "0 0 0 0 4 \n12 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n2 2\n1 7\n1 9\n7 15 2\n7 8\n100 200\n",
            "output": "0 0 0 2 4 \n0 86 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n4 10\n1 2\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 5 0 4 \n0 91 \n"
        },
        {
            "input": "2\n4 8 5\n1 1\n1 3\n1 5\n1 2\n1 9\n11 10 2\n4 8\n100 200\n",
            "output": "0 0 0 0 0 \n0 90 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n7 10 2\n11 22\n100 284\n",
            "output": "0 0 0 0 4 \n12 160 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n2 2\n1 7\n1 9\n7 15 2\n7 8\n100 277\n",
            "output": "0 0 0 2 4 \n0 148 \n"
        },
        {
            "input": "2\n6 6 5\n1 1\n2 3\n1 5\n1 2\n1 9\n7 10 2\n9 13\n100 186\n",
            "output": "0 0 0 0 0 \n4 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 0\n1 5\n1 2\n1 9\n10 4 2\n7 13\n100 368\n",
            "output": "0 0 0 0 4 \n4 130 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n5 10 2\n11 22\n100 284\n",
            "output": "0 0 0 0 4 \n0 0 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n2 2\n1 1\n1 9\n7 15 2\n7 8\n100 277\n",
            "output": "0 0 0 0 4 \n0 148 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n4 10\n1 2\n2 9\n14 10 2\n7 8\n100 200\n",
            "output": "0 0 5 0 4 \n0 87 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n5 11 2\n11 22\n100 284\n",
            "output": "0 0 0 0 4 \n12 142 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n2 2\n1 1\n1 9\n7 15 2\n7 8\n100 537\n",
            "output": "0 0 0 0 4 \n0 365 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n4 10\n1 2\n2 9\n14 10 2\n7 15\n100 200\n",
            "output": "0 0 5 0 4 \n2 87 \n"
        },
        {
            "input": "2\n4 8 5\n1 0\n1 5\n1 5\n1 2\n1 7\n11 10 2\n4 13\n100 200\n",
            "output": "0 0 0 0 0 \n3 90 \n"
        },
        {
            "input": "2\n5 6 5\n1 2\n2 3\n1 5\n1 4\n1 9\n8 10 2\n5 9\n100 186\n",
            "output": "0 0 0 0 4 \n0 67 \n"
        },
        {
            "input": "1\n199 200 1\n1 1000000000000100000\n",
            "output": "994974874371958601 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 0\n7 8\n100 200\n",
            "output": "0 0 0 0 4 \n\n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 11\n7 10 2\n7 22\n100 186\n",
            "output": "0 0 0 0 6 \n13 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n2 7\n1 2\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 2 0 4 \n0 91 \n"
        },
        {
            "input": "2\n5 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 13 2\n13 13\n100 186\n",
            "output": "0 0 0 0 4 \n1 78 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 2\n1 7\n1 4\n7 10 2\n7 8\n101 364\n",
            "output": "0 0 0 2 0 \n0 224 \n"
        },
        {
            "input": "1\n200 173 1\n1 1000000000000000100\n",
            "output": "994219653179190701 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n13 10 2\n7 8\n100 286\n",
            "output": "0 0 0 2 4 \n0 161 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n11 12 2\n7 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 89 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 6\n1 2\n1 9\n7 4 2\n7 13\n100 186\n",
            "output": "0 0 1 0 4 \n7 66 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n4 5\n1 2\n1 9\n4 10 2\n7 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 50 \n"
        },
        {
            "input": "2\n5 9 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n13 17\n100 186\n",
            "output": "0 0 0 0 1 \n5 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 5 2\n7 13\n100 368\n",
            "output": "0 0 0 0 4 \n7 213 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n7 10 2\n11 22\n100 310\n",
            "output": "0 0 0 0 4 \n12 181 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n2 3\n1 5\n1 2\n1 9\n7 10 2\n9 13\n101 186\n",
            "output": "0 0 0 0 4 \n4 76 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 0\n1 5\n1 2\n1 9\n7 4 2\n7 13\n110 368\n",
            "output": "0 0 0 0 4 \n7 191 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n7 10 2\n17 22\n100 284\n",
            "output": "0 0 0 0 4 \n6 160 \n"
        },
        {
            "input": "2\n4 5 5\n1 1\n1 3\n4 10\n1 2\n2 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 6 0 5 \n0 91 \n"
        },
        {
            "input": "1\n1 1 1\n1 3\n",
            "output": "0 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n2 5\n1 2\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 91 \n"
        },
        {
            "input": "1\n1 1 1\n1 1\n",
            "output": "0 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n3 5\n1 2\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 91 \n"
        },
        {
            "input": "2\n5 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n7 10 2\n13 13\n100 186\n",
            "output": "0 0 0 0 4 \n1 77 \n"
        },
        {
            "input": "1\n1 2 1\n1 2\n",
            "output": "0 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n7 10 2\n7 22\n100 186\n",
            "output": "0 0 0 0 4 \n13 77 \n"
        },
        {
            "input": "1\n2 1 1\n1 1000000001000000000\n",
            "output": "0 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n2 2\n1 7\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 0 2 4 \n0 91 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n2 3\n1 5\n1 2\n1 9\n7 10 2\n13 13\n100 186\n",
            "output": "0 0 0 0 4 \n1 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 2\n1 2\n1 7\n1 9\n7 10 2\n7 8\n100 364\n",
            "output": "0 0 0 2 4 \n0 225 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n4 5\n1 2\n1 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 91 \n"
        },
        {
            "input": "1\n2 2 1\n1 2\n",
            "output": "0 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n1 9\n11 10 2\n4 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 90 \n"
        },
        {
            "input": "2\n4 2 5\n1 1\n1 1\n1 5\n1 2\n1 9\n7 10 2\n7 8\n100 186\n",
            "output": "0 0 0 0 0 \n0 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n2 3\n1 5\n1 2\n1 9\n7 10 2\n9 13\n100 186\n",
            "output": "0 0 0 0 4 \n4 77 \n"
        },
        {
            "input": "2\n1 6 5\n1 0\n1 3\n1 2\n1 7\n1 9\n7 10 2\n7 8\n101 364\n",
            "output": "0 0 0 0 0 \n0 224 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 0\n1 5\n1 2\n1 9\n7 4 2\n7 13\n100 368\n",
            "output": "0 0 0 0 4 \n7 201 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n4 10\n1 2\n2 9\n7 10 2\n7 8\n100 200\n",
            "output": "0 0 5 0 4 \n0 91 \n"
        },
        {
            "input": "2\n4 8 5\n1 0\n1 3\n1 5\n1 2\n1 9\n11 10 2\n4 8\n100 200\n",
            "output": "0 0 0 0 0 \n0 90 \n"
        },
        {
            "input": "2\n6 6 5\n1 1\n2 3\n1 5\n1 2\n1 9\n7 10 2\n5 13\n100 186\n",
            "output": "0 0 0 0 0 \n4 77 \n"
        },
        {
            "input": "2\n4 8 5\n1 0\n1 3\n1 5\n1 2\n1 7\n11 10 2\n4 8\n100 200\n",
            "output": "0 0 0 0 0 \n0 90 \n"
        },
        {
            "input": "2\n5 6 5\n1 1\n2 3\n1 5\n1 2\n1 9\n7 10 2\n5 13\n100 186\n",
            "output": "0 0 0 0 4 \n4 77 \n"
        },
        {
            "input": "2\n4 8 5\n1 0\n1 5\n1 5\n1 2\n1 7\n11 10 2\n4 8\n100 200\n",
            "output": "0 0 0 0 0 \n0 90 \n"
        },
        {
            "input": "2\n5 6 5\n1 1\n2 3\n1 5\n1 2\n1 9\n7 10 2\n5 5\n100 186\n",
            "output": "0 0 0 0 4 \n0 77 \n"
        },
        {
            "input": "2\n5 6 5\n1 1\n2 3\n1 5\n1 4\n1 9\n7 10 2\n5 5\n100 186\n",
            "output": "0 0 0 0 4 \n0 77 \n"
        },
        {
            "input": "2\n5 6 5\n1 1\n2 3\n1 5\n1 4\n1 9\n7 10 2\n5 9\n100 186\n",
            "output": "0 0 0 0 4 \n0 77 \n"
        },
        {
            "input": "2\n5 6 5\n1 2\n2 3\n1 5\n1 4\n1 9\n7 10 2\n5 9\n100 186\n",
            "output": "0 0 0 0 4 \n0 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n3 8\n100 200\n",
            "output": "0 0 0 2 4 \n0 91 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 3\n1 2\n1 9\n7 10 2\n7 13\n100 186\n",
            "output": "0 0 0 0 4 \n4 77 \n"
        },
        {
            "input": "1\n2 1 1\n1 1000000000010000000\n",
            "output": "0 \n"
        },
        {
            "input": "2\n4 6 5\n1 0\n1 3\n1 5\n1 2\n1 3\n7 10 2\n7 22\n100 186\n",
            "output": "0 0 0 0 0 \n13 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n3 5\n1 2\n1 9\n7 10 2\n7 8\n101 200\n",
            "output": "0 0 0 0 4 \n0 90 \n"
        },
        {
            "input": "2\n3 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n7 10 2\n7 22\n100 186\n",
            "output": "0 0 0 0 0 \n13 77 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n2 2\n1 7\n1 9\n7 10 2\n7 8\n100 280\n",
            "output": "0 0 0 2 4 \n0 160 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 2\n1 2\n1 7\n1 9\n7 20 2\n7 8\n100 364\n",
            "output": "0 0 0 2 4 \n0 225 \n"
        },
        {
            "input": "2\n1 2 5\n1 1\n1 3\n1 2\n1 7\n1 9\n7 10 2\n7 8\n101 364\n",
            "output": "0 0 0 0 0 \n0 224 \n"
        },
        {
            "input": "1\n2 2 1\n1 1\n",
            "output": "0 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n1 3\n1 5\n1 2\n2 9\n11 10 2\n4 8\n100 200\n",
            "output": "0 0 0 0 4 \n0 90 \n"
        },
        {
            "input": "2\n4 2 5\n2 1\n1 1\n1 5\n1 2\n1 9\n7 10 2\n7 8\n100 186\n",
            "output": "0 0 0 0 0 \n0 77 \n"
        },
        {
            "input": "2\n1 6 5\n1 0\n1 3\n1 2\n1 7\n1 15\n7 10 2\n7 8\n101 364\n",
            "output": "0 0 0 0 0 \n0 224 \n"
        },
        {
            "input": "2\n4 8 5\n1 1\n1 3\n1 5\n1 2\n1 3\n11 10 2\n4 8\n100 200\n",
            "output": "0 0 0 0 0 \n0 90 \n"
        },
        {
            "input": "2\n4 6 5\n1 1\n2 3\n2 2\n1 7\n1 9\n7 15 2\n7 8\n100 277\n",
            "output": "0 0 0 2 4 \n0 148 \n"
        },
        {
            "input": "2\n6 6 5\n1 1\n2 3\n1 5\n1 2\n1 4\n7 10 2\n9 13\n100 186\n",
            "output": "0 0 0 0 0 \n4 77 \n"
        }
    ],
    "solution": [
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\nt = int(input())\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    mi = min(a, b)\n    ma = max(a, b)\n    for j in range(q):\n        l, r = map(int, input().split())\n        l = max(l, ma)\n        if a == b or mi == 1 or l > r:\n            print(0, end=\" \")\n        else:\n            ans = r - l + 1\n            g = ((a * b) // gcd(a, b))\n            k = r // g\n            lev = l // g\n            if g * lev + ma - 1 < l:\n                lev += 1\n            if k >= lev:\n                ans -= (k - lev) * ma\n                ans -= min(r - g * k + 1, ma)\n                ans += max(0, l - g * lev)\n            if ans <= 0:\n                ans = 0\n            print(ans, end=\" \")\n    print()\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput=stdin.readline\nimport bisect\nimport math\n#i = bisect.bisect_left(a, k)\n#list=input().split(maxsplit=1)\nfor xoxo in range(1):\n    #a=[]\n    for _ in range (int(input())):\n    #n=int(input()) \n    #ans=[]\n        a,b,q=map(int, input().split())\n        g=math.gcd(a,b)\n        a,b=min(a,b),max(a,b)\n        ans=0\n        if a==b:\n            for i in range(q):\n                l,r=map(int, input().split())\n            ans=[0]*q\n            print(*ans)\n        else:\n            k=(a*b)//g\n            \n            a=[]\n            for i in range(q):\n                ans=0\n                l,r=map(int, input().split())\n                t=l-r+1\n                ll=(l//k)*k\n                rr=(r//k)*k\n                ans=0\n                if ll==rr:\n                    ans+=(max(0,(r-max(l-1,(ll+b-1)))))\n                    a.append(ans)\n                else:\n                    l=max(l,ll+b)\n                    if rr+b>r:\n                        r=rr-1\n                    t=r-l+1\n                    #print(l,r,((((l-1)//k)-(r//k))*b))\n                    ans+=(t+((((l-1)//k)-(r//k))*b))\n                    a.append(ans)\n            print(*a)\n    #a=list(map(int, input().split()))a\n    #ans=0 \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\ntemplate <typename T>\nvoid MACRO_VAR_Scan(T& t) {\n  std::cin >> t;\n}\ntemplate <typename First, typename... Rest>\nvoid MACRO_VAR_Scan(First& first, Rest&... rest) {\n  std::cin >> first;\n  MACRO_VAR_Scan(rest...);\n}\ntemplate <typename T>\nvoid MACRO_VEC_ROW_Init(int n, T& t) {\n  t.resize(n);\n}\ntemplate <typename First, typename... Rest>\nvoid MACRO_VEC_ROW_Init(int n, First& first, Rest&... rest) {\n  first.resize(n);\n  MACRO_VEC_ROW_Init(n, rest...);\n}\ntemplate <typename T>\nvoid MACRO_VEC_ROW_Scan(int p, T& t) {\n  std::cin >> t[p];\n}\ntemplate <typename First, typename... Rest>\nvoid MACRO_VEC_ROW_Scan(int p, First& first, Rest&... rest) {\n  std::cin >> first[p];\n  MACRO_VEC_ROW_Scan(p, rest...);\n}\ntemplate <typename T>\nvoid MACRO_OUT(const T t) {\n  std::cout << t;\n}\ntemplate <typename First, typename... Rest>\nvoid MACRO_OUT(const First first, const Rest... rest) {\n  std::cout << first << \" \";\n  MACRO_OUT(rest...);\n}\ntemplate <class S, class T, class U>\nbool IN(S a, T x, U b) {\n  return a <= x && x < b;\n}\ntemplate <class T>\ninline T CHMAX(T& a, const T b) {\n  return a = (a < b) ? b : a;\n}\ntemplate <class T>\ninline T CHMIN(T& a, const T b) {\n  return a = (a > b) ? b : a;\n}\ntemplate <class T>\nusing V = std::vector<T>;\ntemplate <class T>\nusing VV = V<V<T>>;\ntemplate <typename S, typename T>\nstd::ostream& operator<<(std::ostream& os, std::pair<S, T> p) {\n  os << \"(\" << p.first << \", \" << p.second << \")\";\n  return os;\n}\nusing i64 = std::int_fast64_t;\nusing u64 = std::uint_fast64_t;\nusing ll = long long;\nusing ull = unsigned long long;\nusing ld = long double;\nusing PAIR = std::pair<i64, i64>;\nusing PAIRLL = std::pair<ll, ll>;\nconstexpr int INFINT = (1 << 30) - 1;\nconstexpr int INFINT_LIM = (1LL << 31) - 1;\nconstexpr ll INFLL = 1LL << 60;\nconstexpr ll INFLL_LIM = (1LL << 62) - 1 + (1LL << 62);\nconstexpr double eps = 1e-6;\nconstexpr i64 MOD = 1000000007;\nconstexpr double PI = 3.141592653589793238462643383279;\ntemplate <class T, size_t N>\nvoid FILL(T (&a)[N], const T& val) {\n  for (auto& x : a) x = val;\n}\ntemplate <class ARY, size_t N, size_t M, class T>\nvoid FILL(ARY (&a)[N][M], const T& val) {\n  for (auto& b : a) FILL(b, val);\n}\ntemplate <class T>\nvoid FILL(std::vector<T>& a, const T& val) {\n  for (auto& x : a) x = val;\n}\ntemplate <class ARY, class T>\nvoid FILL(std::vector<std::vector<ARY>>& a, const T& val) {\n  for (auto& b : a) FILL(b, val);\n}\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\nsigned main() {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(0);\n  ;\n  int Q;\n  MACRO_VAR_Scan(Q);\n  ;\n  for (int _ = (0); _ < (Q); ++_) {\n    int a, b, q;\n    MACRO_VAR_Scan(a, b, q);\n    ;\n    if (a > b) std::swap(a, b);\n    int L = lcm(a, b);\n    auto f = [&](i64 x) {\n      i64 res = 0;\n      i64 q = x / L;\n      i64 r = x % L;\n      res += q * (L - b);\n      res += std::max((i64)0, r - b + 1);\n      return res;\n    };\n    for (int i_ = (0); i_ < (q); ++i_) {\n      i64 l, r;\n      MACRO_VAR_Scan(l, r);\n      ;\n      MACRO_OUT(f(r) - f(l - 1));\n      std::cout << \" \";\n      ;\n    }\n    std::cout << \"\\n\";\n    ;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint T;\nlong long a, b, q, l, r;\nint main() {\n  cin >> T;\n  while (T--) {\n    cin >> a >> b >> q;\n    bool tab[a * b];\n    long long sum = 0LL;\n    long long sus[a * b + 1];\n    sus[0] = 0;\n    for (int i = 0; i < a * b; i++) {\n      tab[i] = ((i % b) % a != (i % a) % b);\n      if (tab[i]) sus[i]++;\n      sus[i + 1] = sus[i];\n      if (tab[i]) sum++;\n    }\n    long long res;\n    while (q--) {\n      res = 0;\n      cin >> l >> r;\n      if (l % (a * b) > 0) res -= sus[l % (a * b) - 1];\n      l -= l % (a * b);\n      res += sus[r % (a * b)];\n      r -= r % (a * b);\n      res += sum * ((r - l) / (a * b));\n      cout << res << \" \\n\"[q == 0];\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n/*\nprocrastinating\n*/\n\npublic class Main {\n\n    static FastReader in;\n    static PrintWriter out;\n    static Random rand = new Random();\n    static final int INF = (int) (1e9 + 10), MOD = (int) (1e9 + 7), LOGN = 60;\n    static final long IINF = (long) (2e18 + 10);\n\n    static int gcd(int a, int b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n    static void solve() {\n        int a = in.nextInt();\n        int b = in.nextInt();\n        int q = in.nextInt();\n\n        int lcm = a * b / gcd(a, b);\n        int[] arr = new int[lcm];\n        for (int i = 0; i < lcm; i++) {\n            if ((i % a) % b != (i % b) % a) {\n                arr[i] = 1;\n            }\n        }\n        int[] pre = new int[lcm];\n        pre[0] = arr[0];\n        for (int i = 1; i < lcm; i++) {\n            pre[i] = pre[i - 1] + arr[i];\n        }\n        int sum = pre[lcm - 1];\n\n        for (int i = 0; i < q; i++) {\n            long l = in.nextLong();\n            long r = in.nextLong();\n            long l1 = l / lcm;\n            int l2 = (int) (l % lcm);\n            long r1 = r / lcm;\n            int r2 = (int) (r % lcm);\n\n            if (l1 == r1) {\n                out.print(pre[r2] - (l2 == 0 ? 0 : pre[l2 - 1]));\n            } else {\n                out.print(sum - (l2 == 0 ? 0 : pre[l2 - 1]) + pre[r2] + (long) sum * (r1 - l1 - 1));\n            }\n            out.print(' ');\n        }\n        out.println();\n\n    }\n\n    public static void main(String[] args) throws FileNotFoundException, InterruptedException {\n        in = new FastReader(System.in);\n//        in = new FastReader(new FileInputStream(\"sometext.txt\"));\n        out = new PrintWriter(System.out);\n//        out = new PrintWriter(new FileOutputStream(\"output.txt\"));\n\n        Thread thread = new Thread(null, () -> {\n            int tests = 1;\n            tests = in.nextInt();\n\n            while (tests-- > 0) {\n                solve();\n            }\n        }, \"Go\", 1 << 28);\n        thread.start();\n        thread.join();\n\n//        out.flush();\n        out.close();\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        FastReader(InputStream is) {\n            br = new BufferedReader(new InputStreamReader(is));\n        }\n\n        Integer nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        Long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        Double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(nextLine());\n            }\n            return st.nextToken();\n        }\n\n        String nextLine() {\n            String s = \"\";\n            try {\n                s = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return s;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import math\n\nt = int(input())\n\ndef gcd(a,b):\n    while(b!=0):\n        a,b = b,a%b    \n    return a\n\nfor _ in range(t):\n    a,b,q = map(int, input().split())\n    boiled_down_to = [ 0 for x in range(a*b)]\n    \n    for i in range(1,a*b):\n        boiled_down_to[i]=boiled_down_to[i-1]\n        \n        if( (i%a)%b != (i%b)%a ):\n            boiled_down_to[i]+=1\n        #print(i,boiled_down_to[i],end='')\n        #print(' ' ,end='')\n         \n    prod=a*b\n    sm= boiled_down_to[-1]\n    for _ in range(q):\n        l,r= map(int, input().split())   \n        \n        temp = (r) // (a*b)\n        ans = sm * temp + boiled_down_to[(r) % (a*b)]\n        temp = (l-1) // (a * b)\n        ans -= (sm * temp + boiled_down_to[(l-1) % (a*b)])\n            \n        print(ans,end=' ')\n        \n    print()\n        \n\n\n'''\nt = int(input())\n\ndef gcd(a,b):\n    while(b!=0):\n        a,b = b,a%b    \n    return a\n\nfor _ in range(t):\n    a,b,q = map(int, input().split())\n    lcm = (a//gcd(a,b))*b\n    \n    for _ in range(q):\n        l,r= map(int, input().split())\n        \n        if(a<=b):\n            if(r<b):\n                print(0,end=' ')\n                \n            elif(l<b):\n                non = r//lcm - b//lcm\n                if(non!=0):\n                    non =  (non-1)*(b) + min(b,r%lcm)\n                count = r-b+1 -non\n                print(count, end=' ')\n                \n            else:\n                non = r//lcm - l//lcm\n                if(non!=0):\n                    non =  (non-1)*(b) + min(b,r%lcm)\n                count = r-l+1 -non\n                print(count, end=' ')\n                \n        else:\n            if(r<a):\n                print(0,end=' ')\n                \n            elif(l<a):\n                non = r//lcm - a//lcm\n                if(non!=0):\n                    non = non+ (non-1)*(a-1) + min(a-1,r%lcm)\n                count = r-a+1 -non\n                print(count, end=' ')\n                \n            else:\n                non = r//lcm - l//lcm\n                if(non!=0):\n                    non = non+ (non-1)*(a-1) + min(a-1,r%lcm)\n                count = r-l+1 -non\n                print(count, end=' ')\n                \n                \n    print()\n'''    \n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\ndef gcd(a,b):\n    if a>b:a,b=b,a\n    while True:\n        a,b=b%a,a\n        if a==0:return b\ndef solve(l,r,a,b,lcm):\n    mx=max(a,b)\n    d1=l//lcm\n    d2=r//lcm\n    lr=l%lcm\n    rr=r%lcm\n    c=0\n    if lr>mx:c+=(lcm-lr)\n    else:c+=(lcm-mx)\n    if rr>=mx:c+=(rr-mx+1)\n    c+=(d2-d1-1)*(lcm-mx)\n    return c\nfor i in ' '*int(input()):\n    a,b,q=map(int,input().split())\n    g=gcd(a,b)\n    lcm=a*b//g\n    mx=max(a,b)\n    for j in ' '*q:\n        l,r=map(int,input().split())\n        print(solve(l,r,a,b,lcm),end=' ')\n    print()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\ninline T bigMod(T p, T e, T M) {\n  T ret = 1;\n  for (; e > 0; e >>= 1) {\n    if (e & 1) ret = (ret * p) % M;\n    p = (p * p) % M;\n  }\n  return (T)ret;\n}\ntemplate <class T>\ninline T modInverse(T a, T M) {\n  return bigMod(a, M - 2, M);\n}\ntemplate <class T>\ninline T gcd(T a, T b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\ntemplate <class T>\ninline T lcm(T a, T b) {\n  a = abs(a);\n  b = abs(b);\n  return (a / gcd(a, b)) * b;\n}\ntemplate <class T>\ninline T SQR(T a) {\n  return a * a;\n}\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    long long int a, b, q;\n    scanf(\"%lld %lld\", &a, &b);\n    scanf(\"%lld\", &q);\n    ;\n    if (a > b) swap(a, b);\n    long long int lc = lcm(a, b);\n    while (q--) {\n      long long int x, y;\n      scanf(\"%lld %lld\", &x, &y);\n      if (y < b)\n        printf(\"0 \");\n      else if (y == b) {\n        if (lc == b)\n          printf(\"0 \");\n        else\n          printf(\"1 \");\n      } else {\n        long long int total = 0;\n        long long int c = (x / lc);\n        long long int d = (y / lc);\n        total += (d - c) * b;\n        total -= max(0LL, d * lc + b - 1 - y);\n        total += max(0LL, c * lc + b - x);\n        total = y - x + 1 - total;\n        printf(\"%lld\", total);\n        printf(\" \");\n      }\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b):\n    if(a==0):\n        return b\n    return gcd(b%a,a)\n\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    lcm = (a*b)//gcd(a,b)\n    cnt,arr,ansArr = 0,[0],[]\n    for i in range(1,lcm+1):\n        if((i%a)%b != (i%b)%a):\n            cnt+=1\n        arr.append(cnt)\n    for _ in range(q):\n        l,r = map(int,input().split())\n        ans = (r//lcm)*cnt + arr[r%lcm]\n        ans -= (l//lcm)*cnt + arr[l%lcm]\n        if((l%a)%b != (l%b)%a):\n            ans+=1\n        ansArr.append(str(ans))\n    print(' '.join(ansArr))"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    static FastReader s = new FastReader();\n    static PrintWriter out = new PrintWriter(System.out);\n\n    private static int[] rai(int n) {\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = s.nextInt();\n        }\n        return arr;\n    }\n\n    private static long[] ral(int n) {\n        long[] arr = new long[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = s.nextLong();\n        }\n        return arr;\n    }\n\n    private static int ri() {\n        return s.nextInt();\n    }\n\n    private static long rl() {\n        return s.nextLong();\n    }\n\n    private static String rs() {\n        return s.next();\n    }\n    static int gcd(int a, int b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    public static void main(String[] args) {\n        int t=ri();\n        StringBuilder ans=new StringBuilder();\n        while(t-->0)\n        {\n            int p=ri();\n            int e=ri();\n            int q=ri();\n            int n=p*e;\n            int[] arr=new int[n];\n            for(int i=1;i<n;i++)\n            {\n                arr[i]=arr[i-1];\n                if(((i%p)%e)!=((i%e)%p))\n                {\n                    arr[i]++;\n                }\n            }\n            for(int i=0;i<q;i++)\n            {\n                long l=rl();\n                long r=rl();\n                long val1=arr[n-1]*(r/n)+arr[(int) (r%n)];\n                long val2=arr[n-1]*((l-1)/n)+arr[(int) ((l-1)%n)];\n                ans.append(val1-val2).append(\" \");\n\n            }\n            ans.append(\"\\n\");\n\n        }\n        out.print(ans.toString());\n        out.flush();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 5;\nconst long long MOD = 1e9 + 7;\nint N, M, K, Q;\nint a, b, q;\nlong long psum[MAXN];\nlong long query(long long n) {\n  long long m = (long long)a * (long long)b;\n  return n / m * psum[m] + psum[n % m];\n}\nvoid solve(int testNum) {\n  int i, j;\n  scanf(\"%d%d%d\", &a, &b, &q);\n  for (int i = 1; i <= a * b; ++i) {\n    int x = i;\n    psum[x] = psum[x - 1];\n    if (x % a % b != x % b % a) ++psum[x];\n  }\n  long long l, r;\n  for (i = 1; i <= q; ++i) {\n    scanf(\"%lld%lld\", &l, &r);\n    long long ans = query(r) - query(l - 1LL);\n    printf(\"%lld \", ans);\n  }\n  printf(\"\\n\");\n  return;\n}\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  for (int t = 1; t <= T; ++t) {\n    solve(t);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef kgv(a,b):\n    k = a\n    while(1):\n        if k % b == 0:\n            return k\n        k += a\n\n\nt = int(input())\n\nres = []\nfor ite in range(t):\n    a, b, q = map(int, input().split())\n\n    k = kgv(a,b)\n    j = max(a,b)\n    delta = k - j\n\n\n    re = []\n    for it in range(q):\n        l, r = map(int, input().split())\n\n        x = l//k\n        l -= x*k\n        r -= x*k\n\n        dl = 0\n        dr = r + (k-r%k)\n\n        upper = (dr//k) * delta\n\n        if l - j > 0:\n            upper-= (l-j)\n\n        if ( (dr-r) - delta) > 0:\n            upper -= delta\n        else:\n            upper -= (dr-r-1)\n\n\n        re.append(upper)\n    res.append(re)\n\nfor el in res:\n    print(*el)\n"
        },
        {
            "language": 3,
            "solution": "n_cases = int(input())\nfor case_num in range(n_cases):\n    a, b, q = [int(x) for x in input().split()]\n    k = a*b\n    pref = [0] * k\n    for i in range(1, k):\n        pref[i] = pref[i-1]\n        if (i % a) % b != (i % b) % a:\n            pref[i] += 1\n    for i, query in enumerate(range(q)):\n        l, r = [int(x) for x in input().split()]\n        count = 0\n        if l % k != 0:\n            count += pref[k-1] - pref[(l % k) - 1]\n            l = ((l // k) + 1) * k\n        if r % k != k-1:\n            count += pref[(r % k)]\n            r = (r // k) * k - 1\n        assert (r - l + 1) % k == 0\n        count += pref[k-1] * ((r - l + 1) // k)\n        if i > 0:\n            print(' ', end='')\n        print(count, end='')\n    print()"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef gcd(a, b):\n    while b: a, b = b, a % b\n    return a\n\ndef calc(b, c, x):\n    ans = x\n    k = x // (b * c)\n    ans -= k * b\n    ans -= min(x - k * b * c + 1, b)\n    return ans\n\nT = int(input())\nfor _ in range(T):\n    a, b, q = map(int, input().split())\n    L = []\n    if a == b:\n        for _ in range(q):\n            l, r = map(int, input().split())\n            L.append(0)\n    else:\n        if a > b:\n            a, b = b, a\n        c = a // gcd(a, b)\n        for _ in range(q):\n            l, r = map(int, input().split())\n            L.append(calc(b, c, r) - calc(b, c, l - 1))\n    print(*L)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 10;\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nlong long solve(long long x, long long d, long long num) {\n  long long res = x / d * num, left = x / d * d;\n  return res + min(num, x - left + 1);\n}\nint main() {\n  long long T;\n  scanf(\"%lld\", &T);\n  while (T--) {\n    long long a, b, q;\n    scanf(\"%lld %lld %lld\", &a, &b, &q);\n    if (a > b) swap(a, b);\n    long long d = a * b / gcd(a, b);\n    while (q--) {\n      long long x, y;\n      cin >> x >> y;\n      if (a == b) {\n        puts(\"0\");\n        continue;\n      }\n      long long x0 = x % d, y0 = y - x + x0;\n      if (x0 == 0)\n        printf(\"%lld \", y - x + 1 - solve(y0, d, b));\n      else\n        printf(\"%lld \", y - x + 1 - solve(y0, d, b) + solve(x0 - 1, d, b));\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "q = int(input())\n\nfor _ in range(q):\n    a, b, q1 = map(int, input().split())\n    s = [0]*(a*b)\n    for x in range(a*b):\n        s[x] = 1 if (x%a)%b != (x%b)%a else 0\n    for i in range(1, a*b):\n        s[i] += s[i-1]\n    \n    for q_ in range(q1):\n        l, r = map(int, input().split())\n        li = l%(a*b)\n        lsum = s[-1]-s[li-1] if li else s[-1]\n        l += (a*b)-li+1\n        sz = r-l+1\n        msum = (sz//(a*b))*s[-1]\n        ri = r%(a*b)\n        rsum = s[ri]\n        print(lsum+msum+rsum, end=\" \")\n    print()\n        \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    xs = [0] * (a * b)\n    for x in range(a * b):\n        if (x % a) % b != (x % b) % a:\n            xs[x] = 1\n    s = [0] * (a * b + 1)\n    for j in range(a * b):\n        s[j + 1] = xs[j] + s[j]\n    for j in range(q):\n        l, r = map(int, input().split())\n        y = (l - 1) // (a * b) * s[a * b]\n        z = r // (a * b) * s[a * b]\n        y += s[(l - 1) % (a * b) + 1]\n        z += s[r % (a * b) + 1]\n        print(z - y, end=' ')\n    print()\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class Yet_Another_Counting_Problem {\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tFastReader t = new FastReader();\n\t\tPrintWriter o = new PrintWriter(System.out);\n\t\tint test = t.nextInt();\n\n\t\twhile (test-- > 0) {\n\t\t\tlong a = t.nextLong();\n\t\t\tlong b = t.nextLong();\n\t\t\tint q = t.nextInt();\n\t\t\tlong gcd = gcd(a < b ? a : b, a > b ? a : b);\n\t\t\tlong lcm = (a * b) / gcd;\n\t\t\tlong m = a > b ? a : b;\n\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong l = t.nextLong();\n\t\t\t\tlong r = t.nextLong() + 1;\n\t\t\t\tlong v1 = (l / lcm) * lcm;\n\t\t\t\tlong v2 = (r / lcm) * lcm;\n\t\t\t\tlong left = (l / lcm) * m + (l > (v1 + m) ? (v1 + m) : l) - v1;\n\t\t\t\tlong right = (r / lcm) * m + (r > (v2 + m) ? (v2 + m) : r) - v2;\n\n\t\t\t\to.print(r - l - right + left + \" \");\n\t\t\t}\n\n\t\t\to.println();\n\t\t}\n\n\t\to.flush();\n\t\to.close();\n\t}\n\n\tprivate static long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\n\t\treturn gcd(b % a, a);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n#\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n#\n# range=xrange\nfrom math import gcd\n\n\ndef go():\n    # n = int(input())\n    a,b,q = map(int, input().split())\n    # a, b = map(int, input().split())\n\n    g=a*b//gcd(a,b)\n    m=max(a,b)\n\n    def until(v):\n        result = ((v+1)//g)*m + min((v+1)%g,m)\n        result = v+1-result\n        # print ('-',v,result)\n        return result\n\n    res = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        res.append(until(r)-until(l-1))\n\n\n    return ' '.join(map(str,res))\n\n# x,s = map(int,input().split())\nt = int(input())\n# t = 1\nans = []\nfor _ in range(t):\n    # print(go())\n    ans.append(str(go()))\n#\nprint('\\n'.join(ans))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e2 + 5;\nconst long long mod = 1e9 + 7;\nlong long powermodm(long long x, long long n, long long M) {\n  long long result = 1;\n  while (n > 0) {\n    if (n % 2 == 1) result = (result * x) % M;\n    x = (x * x) % M;\n    n = n / 2;\n  }\n  return result;\n}\nlong long power(long long x, long long y) {\n  long long z = 1;\n  while (y) {\n    if (y % 2 == 1) z = (z * x);\n    y /= 2;\n    x = (x * x);\n  }\n  return z;\n}\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lcm(long long a, long long b) {\n  return (max(a, b) / gcd(a, b)) * min(a, b);\n}\nlong long calc(long long x, long long a, long long b) {\n  long long l = (a * b) / gcd(a, b);\n  if (a < b) swap(a, b);\n  long long ans = (x / l - 1) * a + min(x % l + 1, a);\n  return ans;\n}\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    while (q--) {\n      long long l, r, m;\n      cin >> l >> r;\n      cout << r - l + 1 - calc(r, a, b) + calc(l - 1, a, b) << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef f(R, a, b):\n    complete_periods = (R + 1) // lcm(a, b)\n    return complete_periods * (lcm(a, b) - b) + max(0, R + 1 - lcm(a, b) * complete_periods - b)\n\nfor _ in range(int(input())):\n    a, b, q = [int(x) for x in input().split()]\n    if a > b:\n        a, b = b, a\n    for __ in range(q):\n        L, R = [int(x) for x in input().split()]\n        print(f(R, a, b) - f(L - 1, a, b), end=' ')\n    print()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class EducationalRound86C {\n\n\tpublic static void solve() {\n\t\tint t = s.nextInt();\n\t\twhile(t-- > 0) {\n\t\t\tlong a = s.nextLong();\n\t\t\tlong b = s.nextLong();\n\t\t\tlong lcm = a * b / gcd(a, b);\n\t\t\tlong temp = Long.min(a, b);\n\t\t\tlong temp2 = Long.max(a, b);\n\t\t\ta = temp;\n\t\t\tb = temp2;\n\t\t\tint q = s.nextInt();\n\t\t\twhile(q-- > 0) {\n\t\t\t\tlong l = s.nextLong();\n\t\t\t\tlong r = s.nextLong();\n\t\t\t\tlong tempans = ans(r, lcm, b, a);\n\t\t\t\ttempans = tempans - ans(l - 1, lcm, b, a);\n\t\t\t\tout.print(tempans+\" \");\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t}\n\t\n\tpublic static long ans(long i, long lcm, long b, long a) {\n\t\tif(i == 0) return 0;\n\t\tlong ans = 0;\n\t\tlong tempi = i;\n\t\tif(((i%a)%b) == ((i%b)%a)) {\n\t\t\tans += i%lcm + 1;\n\t\t\ti -= i%lcm + 1; \n\t\t}\n\t\tif(i < 0) return tempi - ans + 1;\n//\t\tif(i == 0) return tempi - ans;\n\t\tlong times = i/lcm;\n\t\tans += times * b;\n\t\tfor(int j = 0; j <= Long.min(i, b - 1); j++) {\n\t\t\tans++;\n\t\t}\n\t\treturn tempi - ans + 1;\n\t}\n\n\tpublic static long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tout = new PrintWriter(new BufferedOutputStream(System.out));\n\t\ts = new FastReader();\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tpublic static FastReader s;\n\tpublic static PrintWriter out;\n\n\tpublic static class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\t\n}\n"
        },
        {
            "language": 4,
            "solution": "//package Codeforces.EducationalRound86;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class C {\n    static long gcd(long a, long b){\n        if(a%b==0)\n            return b;\n        else return gcd(b, a%b);\n    }\n    static long lcm(long a, long b){\n        long g = gcd(a, b);\n        return (a*b)/g;\n    }\n    static long count(long a, long b, long n){\n        long mul = lcm(a, b);\n        long factors = n/mul;\n        long rem = n%mul;\n        long equals = (factors*Math.max(a, b)) + (Math.min(Math.max(a, b), rem+1));\n        return n - equals;\n    }\n    public static void main(String[] args) throws IOException {\n        Soumit sc = new Soumit();\n\n        int t = sc.nextInt();\n        StringBuilder sb = new StringBuilder();\n        while (t-->0){\n            long a = sc.nextLong();\n            long b = sc.nextLong();\n            int q = sc.nextInt();\n\n            while(q-->0){\n                long l = sc.nextLong();\n                long r = sc.nextLong();\n\n                if(a==b){\n                    sb.append(\"0 \");\n                }\n                else{\n                    long ans = count(a, b, r)-count(a, b, l-1);\n                    sb.append(ans).append(\" \");\n                }\n            }\n            sb.append(\"\\n\");\n        }\n\n        System.out.println(sb);\n\n        sc.close();\n    }\n\n    static class Soumit {\n        final private int BUFFER_SIZE = 1 << 18;\n        final private DataInputStream din;\n        final private byte[] buffer;\n        private PrintWriter pw;\n        private int bufferPointer, bytesRead;\n        StringTokenizer st;\n\n        public Soumit() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Soumit(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public void streamOutput(String file) throws IOException {\n            FileWriter fw = new FileWriter(file);\n            BufferedWriter bw = new BufferedWriter(fw);\n            pw = new PrintWriter(bw);\n        }\n\n        public void println(String a) {\n            pw.println(a);\n        }\n\n        public void print(String a) {\n            pw.print(a);\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[3000064]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public void sort(int[] arr) {\n            ArrayList<Integer> arlist = new ArrayList<>();\n            for (int i : arr)\n                arlist.add(i);\n\n            Collections.sort(arlist);\n            for (int i = 0; i < arr.length; i++)\n                arr[i] = arlist.get(i);\n        }\n\n        public void sort(long[] arr) {\n            ArrayList<Long> arlist = new ArrayList<>();\n            for (long i : arr)\n                arlist.add(i);\n\n            Collections.sort(arlist);\n            for (int i = 0; i < arr.length; i++)\n                arr[i] = arlist.get(i);\n        }\n\n        public int[] nextIntArray(int n) throws IOException {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n\n            return arr;\n        }\n\n        public long[] nextLongArray(int n) throws IOException {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextLong();\n            }\n\n            return arr;\n        }\n\n        public double[] nextDoubleArray(int n) throws IOException {\n            double[] arr = new double[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextDouble();\n            }\n\n            return arr;\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            /*if (din == null)\n                return;*/\n            if (din != null) din.close();\n            if (pw != null) pw.close();\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\n\ndef count(z, c, d):\n    m = z // c\n    return m * d + min((z - (c * m)) + 1, d)\n\n\nfor _ in range(int(input())):\n    a, b, q = [int(i) for i in input().split()]\n    lcm = (a * b) // gcd(a, b)\n    for qry in range(q):\n        x, y = [int(i) for i in input().split()]\n        k = (count(y, lcm, max(a, b)) - count(x - 1, lcm, max(a, b)))\n        print(y - x + 1 - k, end=' ')\n    print()\n"
        },
        {
            "language": 3,
            "solution": "def presum(a, b):\n    res = [0 for i in range(a*b)]\n    \n    for m in range(1, a*b):\n        if m % a % b != m % b % a:\n            res[m] = res[m-1] + 1\n        else:\n            res[m] = res[m-1]\n            \n    return res\n\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    ans = []\n    pre = presum(a, b)\n    \n    def counts(m):\n        return m // (a*b) * pre[-1] + pre[m % (a*b)]\n    \n    for __ in range(q):\n        left, right = map(int, input().split())\n        ans.append(counts(right) - counts(left-1))\n        \n    print(*(ans))\n    "
        },
        {
            "language": 3,
            "solution": "\ndef wt(x,g,a):\n\n    if x % g >= a:\n        #print (x,g,a,(x//g+1)*a)\n        return (x//g+1)*a\n    else:\n        #print (x,g,a,(x//g)*a + (x%g+1))\n        return (x//g)*a + (x%g+1)\n\n\nimport fractions\nt = int(input())\n\nfor loop in range(t):\n\n    a,b,q = map(int,input().split())\n    if b < a:\n        tmp = a\n        a = b\n        b = tmp\n    \n    g = a * b // (fractions.gcd(a,b))\n    ans = []\n\n    for lp2 in range(q):\n\n        l,r = map(int,input().split())\n        ans.append(r-l+1 - (wt(r,g,b) - wt(l-1,g,b)))\n\n    print (*ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.io.FileNotFoundException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class C {\n\tstatic Scanner sc;\n    // Driver method \n\tpublic static void main(String args[]) throws FileNotFoundException\n\t{ \n\t\tsc = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\t\t//File f= new File(\"stringobits.txt\");\n\t\t//Scanner sc = new Scanner(f);\n\t\t\n\t\tint t = sc.nextInt();\n\t\t\n\t\t\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint a = sc.nextInt();\n\t\t\tint b = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\t\n\t\t\tint[] rem = new int[a*b];\n\t\t\tfor (int j = 0; j < a; j++) {\n\t\t\t\tfor (int k = 0; k < b; k++) {\n\t\t\t\t\tif (j*b + k != 0) rem[j*b+ k] = rem[j*b + k - 1];\n\t\t\t\t\tint x = j*b +k;\n\t\t\t\t\tif ((x%a)%b != ((x%b)%a)) {\n\t\t\t\t\t\trem[x]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int j = 0; j < q; j++) {\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong r = sc.nextLong();\n\t\t\t\t\n\t\t\t\tint mod = a*b;\n\t\t\t\tlong low = l - (l % mod);\n\t\t\t\tlong high = r - (r % mod);\n\t\t\t\t\n\t\t\t\tlong toret  = 0;\n\t\t\t\t\n\t\t\t\ttoret = toret + (high-low)/mod*rem[a*b-1];\n\t\t\t\tif (l % mod == 0) {}\n\t\t\t\telse toret = toret - rem[(int)(l - low - 1)];\n\t\t\t\ttoret = toret + rem[(int)(r - high)];\n\n\t\t\t\t\n\t\t\t\tif (j == q -1) System.out.println(toret);\n\t\t\t\telse System.out.print(toret + \" \");\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a, b, q;\nlong long lcm;\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long f(long long x) {\n  long long cnt = x / lcm;\n  long long re = x % lcm + 1;\n  return x - cnt * a - min(re, a);\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    if (a <= b) swap(a, b);\n    lcm = a / gcd(a, b) * b;\n    for (register int i = (1); i <= (q); i++) {\n      long long l, r;\n      cin >> l >> r;\n      cout << f(r) - f(l - 1) << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def get_gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\nfor test_i in range(int(input())):\n    a, b, q = map(int, input().split())\n    gcd = get_gcd(a, b)\n    dx = a // gcd * b\n    c = dx - max(a, b)\n    ans = []\n    for qi in range(q):\n        l, r = map(int, input().split())\n        if c > 0:\n            max_x = r // dx\n            min_x = (l - 1) // dx + 1\n            if max_x < min_x:\n                ans.append(min(max(r - max_x * dx + 1 - max(a, b), 0), r - l + 1))\n            else:\n                ans.append(c * (max_x - min_x) + min(min_x * dx - l, c) + max(r - max_x * dx + 1 - max(a, b), 0))\n        else:\n            ans.append(0)\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "import io, os\nimport sys\nfrom atexit import register\n\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\nsys.stdout = io.BytesIO()\nregister(lambda: os.write(1, sys.stdout.getvalue()))\n\ntokens = []\ntokens_next = 0\n\n\ndef next_str():\n    global tokens, tokens_next\n    while tokens_next >= len(tokens):\n        tokens = input().split()\n        tokens_next = 0\n    tokens_next += 1\n    return tokens[tokens_next - 1]\n\n\ndef nextInt():\n    return int(next_str())\n\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return (a // gcd(a, b)) * b\n\n\ndef calcIntersection(interval1, interval2):\n    if interval1 > interval2:\n        interval1, interval2 = interval2, interval1\n    if interval1[1] < interval2[0]:\n        return 0\n\n    first = max(interval1[0], interval2[0])\n    second = min(interval1[1], interval2[1])\n    return second - first + 1\n\n\ndef myRangeLen(r):\n    return (r.stop - r.start - 1) // r.step + 1\n\n\nT = nextInt()\nfor _ in range(T):\n    a = nextInt()\n    b = nextInt()\n    if a > b:\n        a, b = b, a\n\n    q = nextInt()\n    for i in range(q):\n        l = nextInt()\n        r = nextInt()\n\n        n = lcm(a, b)\n        allRelevantIntervals = range(l - (l % n), r + 1, n)\n\n        res = r - l + 1\n        if allRelevantIntervals and allRelevantIntervals[0] < l:\n            cur = allRelevantIntervals[0]\n            res -= calcIntersection((cur, cur + b - 1), (l, r))\n            allRelevantIntervals = allRelevantIntervals[1:]\n\n        if allRelevantIntervals and allRelevantIntervals[-1] + b - 1 > r:\n            cur = allRelevantIntervals[-1]\n            res -= calcIntersection((cur, cur + b - 1), (l, r))\n            allRelevantIntervals = allRelevantIntervals[:-1]\n\n        if allRelevantIntervals:\n            res -= myRangeLen(allRelevantIntervals) * b\n\n        sys.stdout.write((str(res) + ' ').encode())\n    sys.stdout.write('\\n'.encode())\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef solve(r, lcm, b):\n    total = r\n    div = int(r // lcm)\n    prod = div * lcm\n    if div != 0:\n        total -= (div - 1) * b\n        total -= min(b, r - prod + 1)\n    total -= min(r, b - 1)\n    return total\n\nt = int(input())\nwhile t:\n    t = t - 1\n    a, b, q = map(int, input().split())\n    for w in range(q):\n        l, r = map(int, input().split())\n        a, b = min(a, b), max(a,b)\n        lcm = int((a * b) // math.gcd(a, b))\n        if r < b or lcm == b:\n            print(0, end=' ')\n            continue\n        ans = solve(r, lcm, b)\n        if l > 1:\n            ans -= solve(l - 1, lcm, b)\n        print(ans, end=' ')\n    print()"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    \"\"\"Compute the greatest common divisor of a and b\"\"\"\n    while b > 0:\n        a, b = b, a % b\n    return a\n\n\ndef lcmf(a, b):\n    \"\"\"Compute the lowest common multiple of a and b\"\"\"\n    return a * b // gcd(a, b)\n\n\ndef main():\n    cc = int(input())\n    for ccc in range(cc):\n        a, b, q = [int(v) for v in input().split()]\n        data = []\n        lcm = lcmf(a, b)\n        sums = []\n        s = 0\n        for i in range(0, lcm + 1):\n            if (i % a) % b != (i % b) % a:\n                data.append(1)\n                s += 1\n            else:\n                data.append(0)\n            sums.append(s)\n        res = []\n        sums1 = sum(data[0:lcm])\n        for cccc in range(q):\n            l, r = [int(v) for v in input().split()]\n            c = 0\n            start = l - l % lcm\n            end = r - r % lcm\n            if end != r:\n                end += lcm\n\n            c = (end - start) // lcm * sums1\n            c -= sums[(l-1) % lcm] if l % lcm > 0 else 0\n            c -= (sums1 - sums[r%lcm]) if r % lcm != 0 else 0\n            res.append(str(c))\n        print(\" \".join(res))\n\n\nif __name__ == \"__main__\":\n    # sys.setrecursionlimit(10 ** 6)\n    # threading.stack_size(10 ** 8)\n    # t = threading.Thread(target=main)\n    # t.start()\n    # t.join()\n    main()\n"
        },
        {
            "language": 3,
            "solution": "# python3\n\n##=====================================================\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter\nfrom functools import lru_cache\nfrom math import gcd, floor, ceil\n \ndef ilist():\n    return [int(x) for x in stdin.readline().strip().split(\" \")]\ndef iint():\n    return int(stdin.readline().strip())\ndef istr():\n    return stdin.readline().strip()\n##=====================================================\n\n\nif __name__ == '__main__':\n    t = iint()\n    for _ in range(t):\n        a, b, q = ilist()\n        res = []\n        x = 1\n        limit = (a * b) // gcd(a, b)\n        p = [0] * (limit)\n        for x in range(1, limit):\n            if ((x%a)%b) != ((x%b)%a):\n                p[x] = 1\n            p[x] += p[x-1]\n        for _ in range(q):\n            l, r = ilist()\n            s = 0\n            l -= 1\n            s += (r//limit) * p[-1] + p[r%limit]\n            s -= (l//limit) * p[-1] + p[l%limit]\n            res.append(str(s))\n        print(\" \".join(res))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int gcd(long long int a, long long int b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long int lcm(long long int a, long long int b) {\n  return (a * b) / gcd(a, b);\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.precision(16);\n  int t;\n  cin >> t;\n  for (int ii = 0; ii < t; ii++) {\n    long long int a, b, q;\n    cin >> a >> b >> q;\n    long long int g = lcm(a, b);\n    for (int j = 0; j < q; j++) {\n      long long int l, r;\n      cin >> l >> r;\n      long long int m = (r - l) / g;\n      long long int ans = 0;\n      long long int f, last;\n      f = (l / g) * g;\n      last = (r / g) * g;\n      if (a > b) {\n        if (f + a - l > 0) ans += (f + a - l);\n        ans += ((last - f) / g - 1) * a;\n        if (r - last + 1 >= a) {\n          ans += a;\n        } else {\n          ans += r - last + 1;\n        }\n        ans = (r - l + 1) - ans;\n      } else {\n        if (f + b - l > 0) ans += (f + b - l);\n        ans += ((last - f) / g - 1) * b;\n        if (r - last + 1 >= b) {\n          ans += b;\n        } else {\n          ans += r - last + 1;\n        }\n        ans = (r - l + 1) - ans;\n      }\n      cout << ans << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef lcount(a, lcm, ma):\n    lastcm = (a//lcm) * lcm\n    count = (lcm - ma) * (a//lcm)\n    count += max(0, (a-lastcm)-ma)\n    return count\n\nt = int(input())\nfor tt in range(t):\n    a,b,q = map(int, input().split())\n    lcm = a*b//gcd(a,b)\n    ma = max(a,b)\n    ans = []\n    for qq in range(q):\n        l,r = map(int, input().split())\n        ans.append(lcount(r+1, lcm, ma) - lcount(l, lcm, ma))\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "# encoding: utf-8\nimport sys\nsys.setrecursionlimit(10**6)\n\n\ndef gcd(a, b):\n    while b != 0: r = b; b = a % b; a = r\n    return a\n\n\ndef f(a, b, s, e):\n    if a == b: return 0\n    beishu = a * b // gcd(a, b)\n    if a > b: a, b = b, a\n    if s == 1: s = 0\n    si = s // beishu\n    if s % beishu != 0: si += 1\n    start = si * beishu\n    ei = e // beishu\n    end = ei * beishu\n    if start > e:\n        start -= beishu\n        start += b\n        if e < start: return 0\n        return e - max(start, s) + 1\n    if end < s:\n        end += b\n        if e < end: return 0\n        return e - max(end, s) + 1\n    ans = 0\n    ans += (beishu - b) * (ei - si)\n    ne = start - 1\n    start -= beishu\n    start += b\n    if e < start: pass\n    else: ans += ne - max(start, s) + 1\n    end += b\n    if e < end: pass\n    else: ans += e - end + 1\n    return ans\n\n\ndef g(a, b, s, e):\n    cnt = 0\n    for i in range(s, e+1):\n        if i%a%b != i%b%a: cnt+=1\n        # else: print(i)\n    if f(a, b, s, e) != cnt:\n        print(a, b, s, e, f(a, b, s, e), cnt)\n\n\nif __name__ == '__main__':\n    # for b in range(2, 300):\n    #     for a in range(3, 40):\n    #         for s in range(4, 50):\n    #             for e in range(s, 500):\n    #                 g(a, b, s, e)\n    # g(3, 2, 7, 9)\n    # sys.stdin = open('1.txt', 'r')\n    nofkase = int(input())\n    for kase in range(nofkase):\n        a, b, q = [int(i) for i in input().split()]\n        for i in range(q):\n            s, e = [int(i) for i in input().split()]\n            print(f(a, b, s, e), end=' ')\n        print(\"\")"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.Random;\nimport java.util.Scanner;\n\npublic class ProblemC {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tScanner s = new Scanner(System.in);\n\t\tint t = s.nextInt();\n\t\t\n\t\tfor(int a=0;a<t;a++) {\n\t\t\tint x = s.nextInt();\n\t\t\tint y = s.nextInt();\n\t\t\tint q = s.nextInt();\n\t\t\t\n\t\t\tint lc = getl(x, y);\n\t\t\tint count = 0;\n\t\t\tint[] pre = new int[lc + 1];\n\t\t\tint[] suf = new int[lc + 1];\n\t\t\tfor(int i=1;i<=lc;i++) {\n\t\t\t\tif((i%x)%y != (i%y)%x)\n\t\t\t\t\tcount++;\n\t\t\t\t\n\t\t\t\tpre[i] = count;\n\t\t\t}\n\t\t\tint cc = 0;\n\t\t\tfor(int i=lc;i>=1;i--) {\n\t\t\t\tif((i%x)%y != (i%y)%x)\n\t\t\t\t\tcc++;\n\t\t\t\t\n\t\t\t\tsuf[lc - i] = cc;\n\t\t\t}\n\t\t\t//System.out.println(count + \" \"+lc);\n\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\tlong l = s.nextLong();\n\t\t\t\tlong r = s.nextLong();\n\t\t\t\t\n\t\t\t\tlong ceil = l/lc;\n\t\t\t\tif(l%lc !=0)\n\t\t\t\t\tceil++;\n\t\t\t\tlong low = (long)ceil * lc;\n\t\t\t\t\n\t\t\t\tlong high = (long)(r/lc) * lc;\n\t\t\t\n\t\t\t\t//System.out.println(low+\"- \"+high);\n\t\t\t\tlong div = (high - low)/lc + 1;\n\t\t\t\t\n\t\t\t\tif(div == 0) {\n\t\t\t\t\tint c = pre[(int)(r%lc)] - pre[(int)((l-1)%lc)];\n\t\t\t\t\t\n\t\t\t\t\t//System.out.println(\"hey\");\n\t\t\t\t\tSystem.out.print(c+\" \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse {\n\t\t\t\t\tint c = suf[(int)(low - l)] + pre[(int)(r - high)];\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.print(((div-1) * count + c)+\" \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n\t\n\tpublic static int getl(int x, int y) {\n\t\treturn (x * y)/geth(Math.max(x,y), Math.min(x, y));\n\t}\n\t\n\tpublic static int geth(int x, int y) {\n\t\tif(y == 0)\n\t\t\treturn x;\n\t\telse\n\t\t\treturn geth(y, x%y);\n\t}\n\n\t\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    A,B,Q = map(int,input().split())\n    queries = [list(map(int,input().split())) for _ in range(Q)]\n    ans=[]\n\n    CM = A*B\n    CNT = [0]*(CM+1)\n    for i in range(1,CM+1):\n        if (i%A)%B != (i%B)%A:\n            CNT[i]+=1\n\n    for i in range(1,CM+1):\n        CNT[i] += CNT[i-1]\n\n\n    for l,r in queries:#[0~r]-[0~l-1]\n        ACC_R = r//CM * CNT[-1] + CNT[r%CM]\n        ACC_L = (l-1)//CM *CNT[-1] + CNT[(l-1)%CM]\n        ans.append(str(ACC_R-ACC_L))\n    print(\" \".join(ans))\n\n\n\nT = int(input())\nfor _ in range(T):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nfrom collections import OrderedDict\nimport math\n#data = sys.stdin.readlines()\nimport sys\nimport os\nfrom io import BytesIO\n\n \n \n#input = sys.stdin.readline\n#sys.setrecursionlimit(200005) \n \n#print((9%3)%5)\nnumbar=0\nfor t in range(int(input())):\n    a,b,q = map(int,input().split())\n    ab = a*b\n    isTrue = [0]*(ab+1)\n    preFixSum = [0]*(ab+1)\n    countO = 0;\n    for i in range(1, ab+1):\n        val1 = (i%a)%b\n        val2 = (i%b)%a\n        if val1!=val2:\n            countO+=1\n            isTrue[i]=1\n        #print(val1, val2)\n    for i in range(1,len(preFixSum)):\n        preFixSum[i]=preFixSum[i-1]+isTrue[i]\n        #print(preFixSum[i])\n    for q1 in range(q):\n        l,r = map(int, input().split())\n        answer = 0\n       # if(r<=ab*3):\n          #  for i in range(l, r+1):\n               # answer+=isTrue[i%ab]\n           # print(answer)\n          #  continue  \n        sumL = 0\n        sumR = 0 \n        if (r-l<=ab):\n         #   for i in range(l, r+1):1\n              #  answer+=isTrue[i%ab]\n            #print(answer)\n            \n            #sumL=preFixSum[ab]-preFixSum[(l%ab)-1]\n            distation = ab-(l%ab)\n            #print(ab%l)\n            #print(distation)\n           # sys.exit(0)\n            if r%ab==0:\n                answer+=preFixSum[ab]-preFixSum[(l%ab)-1]\n            elif l%ab==0:\n                answer=preFixSum[r%ab]\n            elif r-l<=distation:\n                answer=preFixSum[r%ab]-preFixSum[(l%ab)-1]\n            else:\n                answer=preFixSum[ab]-preFixSum[(l%ab)-1]+preFixSum[r%ab]\n            try:\n                if numbar==7266 and l<-99999:\n                    raise Exception\n            except Exception:\n                print(str(l)+\"-\"+str(r)+\"-\"+str(a)+\"-\"+str(b))\n            numbar+=1\n            #492-552-2-41\n            print(answer)\n            continue\n        coutNumber  = r//ab-l//ab;\n        if l%ab!=0:\n            sumL=preFixSum[ab]-preFixSum[(l%ab)-1]\n            coutNumber-=1\n        if r%ab!=0:\n            sumR = preFixSum[r%ab]\n       # print(l%ab, r%ab, sumL, sumR)\n        \n        if(coutNumber>0):\n            answer+=countO*coutNumber\n        numbar+=1\n        print(answer+sumL+sumR)\n            \n        \n        \n       \n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma loop_opt(on)\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\nusing pll = pair<long long, long long>;\nusing ld = long double;\nmt19937 mtrd(chrono::steady_clock::now().time_since_epoch().count());\nconst int mod = 1000000007;\nconst int mod2 = 998244353;\nconst ld PI = acos(-1);\nlong long qpow(long long x, long long powcnt, long long tomod) {\n  long long res = 1;\n  for (; powcnt; powcnt >>= 1, x = (x * x) % tomod)\n    if (1 & powcnt) res = (res * x) % tomod;\n  return (res % tomod);\n}\nlong long inv(long long x) { return qpow(x, mod - 2, mod); }\nlong long a, b, q;\ntuple<long long, long long, long long> exgcd(long long x, long long y) {\n  if (y == 0) return make_tuple(1, 0, x);\n  long long X, Y, G;\n  tie(X, Y, G) = exgcd(y, x % y);\n  return make_tuple(Y, X - (x / y) * Y, G);\n}\nvoid solve() {\n  cin >> a >> b >> q;\n  if (a > b) swap(a, b);\n  vector<long long> v;\n  v.push_back(0);\n  for (long long i = 1; i < a * b; i++)\n    v.push_back(v.back() + ((i % a) != ((i % b) % a)));\n  while (q--) {\n    long long l, r;\n    cin >> l >> r;\n    long long ans = 0;\n    long long x = l % (a * b);\n    if (l / (a * b) == r / (a * b)) {\n      long long y = r % (a * b);\n      ans = v[y] - (x ? v[x - 1] : 0);\n    } else {\n      if (x) ans += v.back() - v[x - 1];\n      l = (l + a * b - 1) / (a * b);\n      l *= a * b;\n      ans += (r - l) / (a * b) * v.back();\n      ans += v[r % (a * b)];\n    }\n    cout << ans << ' ';\n  }\n  cout << '\\n';\n}\nsigned main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  long long t = 1;\n  cin >> t;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\n    Auther: ghoshashis545 Ashis Ghosh\n    College: jalpaiguri Govt Enggineerin College\n    Date:26/04/2020\n\n'''\nfrom bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil,sqrt,log,gcd\ndef ii():return int(input())\ndef si():return input()\ndef mi():return map(int,input().split())\ndef li():return list(mi())\n\n\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\n\ndef powmod(a,b):\n    a%=mod\n    if(a==0):\n        return 0\n    res=1\n    while(b>0):\n        if(b&1):\n            res=(res*a)%mod\n        a=(a*a)%mod\n        b>>=1\n    return res\n\n\n\n\ndef func(x,y,c):\n    c1=x//y\n    ans=(c1*c)\n    x%=y\n    x+=1\n    if(x<c):\n        ans+=(x-c)\n    # print(ans)\n    return ans\n    \n    \n    \ndef main():\n    \n    for _ in range(ii()):\n        a,b,q=mi()\n        if(b>a):\n            a,b=b,a\n        x=a\n        y=(a*b)//gcd(a,b)\n        for i in range(q):\n            l,r=mi()\n            l-=1\n            if(a==b or r<a):\n                print('0',end=\" \")\n                continue\n            if(r>=y):\n                ans=r-func(r,y,x)-a+1\n            else:\n                ans=(r-a+1)\n            if(l>=y):\n                ans1=l-func(l,y,x)-a+1\n            else:\n                if(l<a):\n                    ans1=0\n                else:\n                    ans1=(l-a+1)\n            # print(ans,ans1)\n            print(ans-ans1,end=\" \")\n        print()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "from math import gcd\ndef findTileCount(x, y, l, r) : \n    lcm = (x * y) // gcd(x, y) \n    count1 = (l - 1) // lcm \n    countr = r // lcm \n    # print(count1,countr)\n    return lcm,countr - count1\n\nt = int(input())\nwhile t:\n\ta, b, q = map(int,input().split())\n\t# lcm = compute_lcm(a,b)\n\tfor i in range(q):\n\t\tl,r = map(int,input().split())\n\t\tlcm,ctr = findTileCount(a,b,max(a,max(b, l)),r)\n\t\t# print(lcm, ctr)\n\t\ttemp = (r - max(a,max(b,l)) + 1)\n\t\ttemp2 = (ctr-1)*max(a,b)\n\t\tif(temp2 < 0):\n\t\t\ttemp2 = 0\n\t\tlastmul = (r//lcm)*lcm\n\t\tif(lastmul <= r and lastmul >= l):\n\t\t\ttemp2 += min(r- lastmul+1, max(a,b))\n\t\tfirstmul = (l//lcm)*lcm\n\t\tif(l%lcm != 0 and firstmul < l and firstmul != 0):\n\t\t\ttemp2 += max(0,firstmul - l + max(a,b))\n\t\tprint(max(0, temp - temp2), end = \" \")\n\tprint()\n\tt-=1\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\ndef getInt(): return int(input())\ndef getVars(): return map(int, input().split())\ndef getList(): return list(map(int, input().split()))\ndef getStr(): return input().strip()\n## -------------------------------\n\ndef nokAB(a,b):\n    m = a*b\n    while a != 0 and b != 0:\n        if a > b:\n            a %= b\n        else:\n            b %= a\n    return m // (a+b)\n\ntt = getInt()\nfor _ in range(tt):\n    a, b, q = getVars()\n    nok = nokAB(a, b)\n    arr = []\n    for i in range(q):\n        l, r = getVars()\n        res = max((l//nok) * nok + max(a, b) - l, 0)\n        res += (r // nok - l // nok) * max(a, b)\n        res -= max((r // nok) * nok + max(a, b) - r - 1, 0)\n        arr.append(r - l + 1 - res)\n    print(*arr)\n            \n\n        \n                        \n                    \n                \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    long long int a, b, q;\n    cin >> a >> b >> q;\n    long long int len = a * b;\n    int prefix[len + 1];\n    prefix[0] = 0;\n    for (int i = 1; i <= len; i++) {\n      if ((i % a) % b != (i % b) % a) {\n        prefix[i] = 1 + prefix[i - 1];\n      } else {\n        prefix[i] = prefix[i - 1];\n      }\n    }\n    while (q--) {\n      long long int l, r;\n      cin >> l >> r;\n      long long int ans = 0;\n      ans += r / len * prefix[len];\n      ans += prefix[r % len];\n      ans -= (l - 1) / len * prefix[len];\n      ans -= prefix[(l - 1) % len];\n      cout << ans << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Objects;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Double.parseDouble;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\n\npublic class Solution {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n    static boolean isLocal = false;\n\n\n    private int lcm(int a, int b) {\n        return a * (b / gcd(a, b));\n    }\n\n    long get(long l, int len, int b, int a) {\n        if (l < b) return 0;\n        long ans = (l / (b + len)) * len;\n        l %= (b + len);\n        long rest = max(0, l - b + 1);\n        return ans + rest;\n    }\n\n    int get_max_len(int a, int b) {\n        return lcm(a, b) - b;\n    }\n\n    private int gcd(int a, int b) {\n        while (b > 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n\n    void Case() throws IOException {\n        int t[] = sort(na(2));\n        int a = t[0], b = t[1], q = nextInt();\n        int len = get_max_len(a, b);\n        while (q-- > 0) {\n            long l = nextLong(), r = nextLong();\n            if (len == 0)\n                out.print(\"0 \");\n            else {\n                long ans = get(r, len, b, a) - get(l - 1, len, b, a);\n                out.print(ans + \" \");\n            }\n        }\n        out.println();\n    }\n\n    void solve() throws Exception {\n        int t = nextInt();\n        for (int i = 1; i <= t; i++) {\n            Case();\n        }\n    }\n\n    int min(int x, int y) {\n        return Integer.min(x, y);\n    }\n\n    int max(int x, int y) {\n        return Integer.max(x, y);\n    }\n\n    long min(long x, long y) {\n        return Long.min(x, y);\n    }\n\n    long max(long x, long y) {\n        return Long.max(x, y);\n    }\n\n    int[] sort(int[] arr) {\n        sort(arr, 0, arr.length - 1);\n        return arr;\n    }\n\n    void sort(int arr[], int l, int r) {\n        if (l < r) {\n            int m = (l + r) / 2;\n            sort(arr, l, m);\n            sort(arr, m + 1, r);\n            merge(arr, l, m, r);\n        }\n    }\n\n    void merge(int arr[], int l, int m, int r) {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[l + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[m + 1 + j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            } else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    class Seg implements Comparable<Seg> {\n        int st, end;\n\n        public Seg(int st, int end) {\n            this.st = st;\n            this.end = end;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            Seg seg = (Seg) o;\n            return st == seg.st &&\n                    end == seg.end;\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(st, end);\n        }\n\n        @Override\n        public int compareTo(Seg seg) {\n            return st == seg.st ? Integer.compare(end, seg.end) : Integer.compare(st, seg.st);\n        }\n    }\n\n    private int[] na(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n\n    private long[] nal(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n\n    int nextInt() throws IOException {\n        return parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n\n    String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    public static void main(String[] args) throws Exception {\n        try {\n            if (isLocal) {\n                in = new BufferedReader(new FileReader(\"src/tests/sol.in\"));\n                out = new PrintWriter(new BufferedWriter(new FileWriter(\"src/tests/sol.out\")));\n            } else {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n//            long lStartTime = System.currentTimeMillis();\n            new Solution().solve();\n//            long lEndTime = System.currentTimeMillis();\n//            out.println(\"Elapsed time in seconds: \" + (double) (lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        FastReader sc = new FastReader();\n        StringBuilder sb = new StringBuilder();\n        int t=sc.nextInt();\n        while(t-->0){\n            int a=sc.nextInt(),b=sc.nextInt(),q=sc.nextInt();\n            if(a>b){\n                int temp=b;\n                b=a;\n                a=temp;\n            }\n            int lcm=a*b/gcd(a,b);\n            int s=lcm-b;\n            while(q-->0){\n                long l=sc.nextLong(),r=sc.nextLong();\n                long x=((l-1)/lcm)*s;\n                long x1=(l-1)%lcm;\n                if(x1>=b)x+=(x1-b+1);\n\n                long y=(r/lcm)*s;\n                long y1=r%lcm;\n                if(y1>=b)y+=(y1-b+1);\n\n                sb.append((y-x)+\" \");\n            }\n            sb.append(\"\\n\");\n        }\n        System.out.println(sb);\n    }\n    static int gcd(int a,int b){\n        if(b==0)return a;\n        else return gcd(b,a%b);\n    }\n}\nclass FastReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() { br = new BufferedReader(new InputStreamReader(System.in)); }\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n    int nextInt() { return Integer.parseInt(next()); }\n    long nextLong() { return Long.parseLong(next()); }\n    double nextDouble() { return Double.parseDouble(next()); }\n    String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import math\n\n\ndef not_equal(a, b, i):\n    if i <= b-1:\n        return 0\n\n    # Get the lcm of a and b\n    l = a*b // math.gcd(a, b)\n\n    # The numbers up to the minimum always satisfy the condition\n    out = i - b + 1\n\n    # Subtract the terms k*l + c, k \\in N, c < b\n    n_seqs = (i - b) // l\n    out -= n_seqs * b\n\n    # Add the terms that you may have missed when the modulus is close\n    mod = i % l\n    if mod < b:\n        out -= (mod+1)\n\n    return out\n\n\ndef naive_not_equal(a, b, val):\n    count = 0\n    for i in range(val+1):\n        if (i % a) % b != (i % b) % a:\n            count += 1\n    return count\n\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n\n    # Put a and b in order (a < b)\n    if a > b:\n        a, b = b, a\n\n    out = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        lhs = not_equal(a, b, l-1)\n        rhs = not_equal(a, b, r)\n        ans = rhs - lhs\n        out.append(str(ans))\n\n    print(' '.join(out))\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b):\n    while b:\n        a,b = b, a%b\n    return a\n\n\nt = int(input())\n\nfor _ in range(t):\n    a, b, q = list(map(int, input().split()))\n    if a > b:\n        a, b = b, a\n    nok = (a * b) // gcd(a, b)\n    ans = []\n    for _ in range(q):\n        l, r = list(map(int, input().split()))\n        left_p = l - l % nok\n        right_p = r + (nok - r % nok)\n        eq = max(0, (right_p - nok - (left_p + nok)) // nok) * b\n        ll = max(0, min(r + 1, left_p + b) - l)\n        eq += ll\n        r_p = r - r % nok\n        if l < r_p <= r:\n            rr = max(0, min(r_p + b, r + 1) - r_p)\n            eq += rr\n        ans.append(r - l + 1 - eq)\n    print(\" \".join(map(str, ans)))\n\n\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b):\n    if b==0:\n        return a\n    else:\n        return gcd(b,a%b)\ndef lcm(a,b):\n    return a*(b//gcd(a,b))\nfor _ in range(int(input())):\n    a,b,s=list(map(int,input().split()))\n    p=lcm(a,b)\n    q=max(a,b)\n    lis=[]\n    for _ in range(s):\n        l,r=map(int,input().split())\n        a1=l//p\n        a2=r//p\n        b1=l%p\n        b2=r%p\n        ans=0\n        if a1==a2:\n            if b1<q:\n                if b2<q:\n                    ans+=b2-b1+1\n                else:\n                    ans+=q-b1\n        else:\n            ans+=(a2-a1-1)*q\n            if b1<q:\n                ans+=q-b1\n            if b2>=q:\n                ans+=q\n            if b2<q:\n                ans+=b2+1\n        lis.append(r-l+1-ans)\n    print(*lis)\n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  long long t;\n  cin >> t;\n  for (long long q = 0; q < t; q++) {\n    long long a, b, k;\n    cin >> a >> b >> k;\n    vector<long long> x(a * b);\n    for (long long i = 0; i < a * b; i++) {\n      x[i] = (i % a % b != i % b % a);\n    }\n    long long all = 0;\n    for (long long i = 0; i < a * b; i++) {\n      all += x[i];\n    }\n    vector<long long> sum_pref(a * b + 1, 0);\n    for (long long i = 0; i < a * b; i++) {\n      sum_pref[i + 1] = sum_pref[i] + x[i];\n    }\n    for (long long i = 0; i < k; i++) {\n      long long l, r;\n      cin >> l >> r;\n      r++;\n      long long ans = (r / (a * b) - l / (a * b)) * all;\n      ans += sum_pref[r % (a * b)];\n      ans -= sum_pref[l % (a * b)];\n      cout << ans << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "def build(L,a,b):\n\tL[0]=0\n\n\tfor i in range(1,a*b+1):\n\t\tL[i]+=L[i-1]\n\t\tif ((i%a)%b)!=((i%b)%a):\n\t\t\tL[i]+=1\n\ndef query2(l,a,b,L):\n\tcnt=l/(a*b)\n\trem=l%(a*b)\n\n\treturn L[a*b]*cnt+L[rem]\n\ndef query(l,r,a,b,L):\n\treturn query2(r,a,b,L)-query2(l-1,a,b,L)\n\nt=int(raw_input())\n\nfor i in range(t):\n\ta,b,q=list(map(int,raw_input().strip().split()))\n\tL=[0]*(a*b+1)\n\tbuild(L,a,b)\n\tLL=[]\n\tfor j in range(q):\n\t\tl,r=list(map(int,raw_input().strip().split()))\n\t\tcnt=query(l,r,a,b,L)\n\t\tLL.append(cnt)\n\tprint(\" \".join(map(str,LL)))\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class YetAnotherCountingProblemCF {\n    static boolean[] condn = new boolean[40001];\n    static int[] count = new int[40001];\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while(t-- != 0) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int q = sc.nextInt();\n            Arrays.fill(condn, false);\n            Arrays.fill(count, 0);\n            preComp(a, b);\n            while(q-- != 0) {\n                long l = sc.nextLong();\n                long r = sc.nextLong();\n                System.out.print(solve(l, r, a, b) + \" \");\n            }\n            System.out.println();\n        }\n    }    \n\n    static void preComp(int a, int b) {\n        int cnt = 0;\n        for(int i=0; i<=(a*b); i++) {\n            int c1 = (i%a)%b;\n            int c2 = (i%b)%a;\n            if(c1 != c2) {\n                condn[i] = true;\n                cnt++;\n            }\n            count[i] = cnt;\n        }\n    }\n\n    static long solve(long l, long r, int a, int b) {\n        long cntr = count(r, a, b);\n        long cntl = count(l-1, a, b);\n        return cntr - cntl;\n    }\n    //Count from 0 to r\n    static long count(long r, int a, int b) {\n        int x = a * b;\n        long ans = (long)(r/x) * (long)count[x-1];\n        ans += count[(int)(r%x + x)%x];\n        return ans;\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\n\npublic class cf_edu86 {\n\n\tstatic class Reader {\n\n\t\tfinal private int BUFFER_SIZE = 1 << 12;\n\t\tboolean consume = false;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\t\tprivate boolean reachedEnd = false;\n\n\t\tpublic Reader() {\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = 0;\n\t\t\tbytesRead = 0;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\treturn !reachedEnd;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = System.in.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1) {\n\t\t\t\tbuffer[0] = -1;\n\t\t\t\treachedEnd = true;\n\t\t\t}\n\t\t}\n\n\t\tprivate void consumeSpaces() throws IOException {\n\t\t\twhile (read() <= ' ' && reachedEnd == false)\n\t\t\t\t;\n\t\t\tbufferPointer--;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead) {\n\t\t\t\tfillBuffer();\n\t\t\t}\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tconsumeSpaces();\n\t\t\tbyte c = read();\n\t\t\tdo {\n\t\t\t\tsb.append((char) c);\n\t\t\t} while ((c = read()) > ' ');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\t;\n\t\t\tif (sb.length() == 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tString str = br.readLine();\n\t\t\treturn str;\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10L + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tdouble ret = 0;\n\t\t\tdouble div = 1;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = nextInt();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[][] nextIntMatrix(int n, int m) throws IOException {\n\t\t\tint[][] grid = new int[n][m];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tgrid[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn grid;\n\t\t}\n\n\t\tpublic char[][] nextCharacterMatrix(int n) throws IOException {\n\t\t\tchar[][] a = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = next().toCharArray();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (System.in == null) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tSystem.in.close();\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic Reader r = new Reader();\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tprivate static void solve1() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tlong x = r.nextLong();\n\t\t\tlong y = r.nextLong();\n\n\t\t\tlong a = r.nextLong();\n\t\t\tlong b = r.nextLong();\n\n\t\t\tlong x_ = Math.min(x, y);\n\t\t\tlong y_ = Math.max(x, y);\n\n\t\t\tlong tot = a * (y_ - x_);\n\t\t\ttot += Math.min(2 * x_ * a, b * x_);\n\t\t\tres.append(tot).append(\"\\n\");\n\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static void solve2() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tString s = r.next();\n\n\t\t\tif (s.indexOf('0') < 0 || s.indexOf('1') < 0) {\n\t\t\t\tres.append(s);\n\t\t\t} else {\n\t\t\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\t\t\tres.append(\"10\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.append(\"\\n\");\n\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static long gcd(long a, long b) {\n\t\tif (b == 0) {\n\t\t\treturn a;\n\t\t}\n\t\treturn gcd(b, a % b);\n\t}\n\n\tprivate static long getAns(long lcm, long b, long till) {\n\t\tlong complete = (till / lcm) * (lcm - b);\n\t\tlong remaining = Math.max(0, ((till % lcm) + 1) - b);\n\t\treturn complete + remaining;\n\t}\n\n\tprivate static void solve3() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tlong a = r.nextLong();\n\t\t\tlong b = r.nextLong();\n\t\t\tlong q = r.nextLong();\n\n\t\t\tif (a > b) {\n\t\t\t\tlong temp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = temp;\n\t\t\t}\n\n\t\t\tlong lcm = (a * b) / gcd(a, b);\n\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong ans = -getAns(lcm, b, r.nextLong() - 1) + getAns(lcm, b, r.nextLong());\n\t\t\t\tres.append(ans).append(\" \");\n\t\t\t}\n\t\t\tres.append(\"\\n\");\n\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static void solve4() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\n\t}\n\n\tprivate static void solve5() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static void solve6() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\n//\t\tsolve1();\n\n//\t\tsolve2();\n\n\t\tsolve3();\n\n\t\t// solve4();\n\n\t\t// solve5();\n\n\t\t// solve6();\n\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "//This code is written by \u092a\u094d\u0930\u0935\u093f\u0923 \u0936\u0902\u0916\u092a\u093e\u0933 \n\n// package wizard;\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.text.DecimalFormat;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Arrays;\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.Stack;\nimport java.util.Queue;\nimport java.util.PriorityQueue;\nimport java.util.List;\nimport java.util.HashSet;\nimport java.util.LinkedHashSet;\nimport java.util.TreeSet;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.StringTokenizer;\nimport java.util.Vector;\n\npublic class Dobby {\n\n\tstatic long gcd(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tpublic static void main(String[] args) {\n\n\t\ttry {\n\n\t\t\tFastReader fr = new FastReader();\n\t\t\tPrintWriter pt = new PrintWriter(System.out);\n\n\t\t\tint t = fr.nextInt();\n\n\t\t\twhile (t > 0) {\n\n\t\t\t\tlong a = fr.nextLong(), b = fr.nextLong(), q = fr.nextLong();\n\t\t\t\tlong gcd = gcd(a, b), lcm = (a * b) / gcd, max = Math.max(a, b), min = Math.min(a, b);\n\n\t\t\t\twhile (q > 0) {\n\n\t\t\t\t\tlong l = fr.nextLong(), r = fr.nextLong();\n\n\t\t\t\t\tpt.print((r - l + 1 - (((r + 1) / lcm) * max + Math.min((r + 1) % lcm, max) - (l / lcm) * max\n\t\t\t\t\t\t\t- Math.min(l % lcm, max))) + \" \");\n\n\t\t\t\t\tq--;\n\t\t\t\t}\n\n\t\t\t\tpt.println();\n\t\t\t\tt--;\n\t\t\t}\n\t\t\tpt.close();\n\n\t\t} catch (\n\n\t\tException e) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tstatic void merge(long arr[], int l, int m, int r) {\n\n\t\tint n1 = m - l + 1;\n\t\tint n2 = r - m;\n\n\t\tlong L[] = new long[n1];\n\t\tlong R[] = new long[n2];\n\n\t\tfor (int i = 0; i < n1; ++i)\n\t\t\tL[i] = arr[l + i];\n\t\tfor (int j = 0; j < n2; ++j)\n\t\t\tR[j] = arr[m + 1 + j];\n\n\t\tint i = 0, j = 0;\n\n\t\tint k = l;\n\t\twhile (i < n1 && j < n2) {\n\t\t\tif (L[i] <= R[j]) {\n\t\t\t\tarr[k] = L[i];\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tarr[k] = R[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\n\t\twhile (i < n1) {\n\t\t\tarr[k] = L[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\n\t\twhile (j < n2) {\n\t\t\tarr[k] = R[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\n\tstatic void sort(long arr[], int l, int r) {\n\t\tif (l < r) {\n\n\t\t\tint m = l + (r - l) / 2;\n\n\t\t\tsort(arr, l, m);\n\t\t\tsort(arr, m + 1, r);\n\n\t\t\tmerge(arr, l, m, r);\n\t\t}\n\t}\n\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint a, b;\n\n\t\tPair(int a, int b) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t}\n\n\t\tpublic int compareTo(Pair o) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\tif (this.a != o.a)\n\t\t\t\treturn Integer.compare(this.a, o.a);\n\t\t\telse\n\t\t\t\treturn Integer.compare(this.b, o.b);\n\t\t\t// return 0;\n\t\t}\n\n\t\tpublic boolean equals(Object o) {\n\t\t\tif (o instanceof Pair) {\n\t\t\t\tPair p = (Pair) o;\n\t\t\t\treturn p.a == a && p.b == b;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tstatic int binarySearch(long arr[], int first, int last, long key) {\n\t\tint mid = (first + last) / 2;\n\t\twhile (first <= last) {\n\t\t\tif (arr[mid] < key) {\n\t\t\t\tfirst = mid + 1;\n\t\t\t} else if (arr[mid] == key) {\n\t\t\t\treturn mid;\n\t\t\t} else {\n\t\t\t\tlast = mid - 1;\n\t\t\t}\n\t\t\tmid = (first + last) / 2;\n\t\t}\n\t\treturn -1;\n//\t\treturn mid;\n//\t\treturn mid if want to find key greater than or less than arr[mid] if exact value is not given\n\t}\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n\n    count = 0\n    cum = []\n    for i in range(0, (a*b)): # cycle of ab\n        if ((i % a) % b) != ((i % b) % a):\n            count += 1\n        cum.append(count)\n\n    one_cycle_total = cum[a*b-1]\n\n    for _ in range(q):\n        l, r = map(int, input().split())\n\n        # solve from 0 to r (imagine l=0)\n        complete_cycles = r // (a*b)\n        extra_right_part = r % (a*b)\n        answer = one_cycle_total * complete_cycles + cum[extra_right_part]\n\n        # solve from 0 to l-1\n        complete_cycles = (l-1) // (a*b)\n        extra_right_part = (l-1) % (a*b)\n        answer2 = one_cycle_total * complete_cycles + cum[extra_right_part]\n\n        print(answer - answer2)\n\n        # \n        # # cycles of ab\n        # biggest = 0\n        # for i in range(l, r+1):\n        #     if i % (a*b) == 0:\n        #         biggest = i # largest multiple of ab\n        # smallest = 0\n        # for i in range(l, r+1):\n        #     if i % (a*b) == 0:\n        #         smallest = i\n        #         break # smallest multiple of ab\n        # len = (biggest - 1 - smallest) // (a * b) + 1 # number of ab lengths\n        # total = len * count # number of x that satisfy in ab lengths\n        #\n        # # numbers not in the cycles of ab\n        # for i in range(l, smallest):\n        #     if (i % (a*b))\n        #         total += 1 # front\n        # for i in range(biggest, r+1):\n        #     if\n        #         total += 1 # back\n        #\n        # print(total)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom math import gcd\ninput=sys.stdin.readline\nt=int(input())\nfor ii in range(t):\n    a,b,q=map(int,input().split())\n    c=a*b//gcd(a,b)\n    f=0\n    d=[0]\n    for i in range(c):\n        if (i%a)%b!=(i%b)%a:\n            f+=1\n        d.append(f)\n    ans=[]\n    for i in range(q):\n        l,r=map(int,input().split())\n        nl=l-l%c\n        nr=r+(c-r%c)-1\n        p=(nr-nl+1)//c\n        ff=0\n        tmp=p*f\n        tmp-=(d[(l%c)]+d[-1]-d[r%c+1])\n        ans.append(tmp)\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Apr 11 09:32:52 2020\n\n@author: Saurav Sihag\n\"\"\"\n\nrr = lambda: input().strip()\nrri = lambda: int(rr())\n# rri = lambda: int(stdin.readline())\nrrm = lambda: [int(x) for x in rr().split()]\n\nfrom math import gcd\nfrom sys import stdin, stdout\n\ndef sol():\n    a, b, q = rrm()\n    # x=gcd(a, b);\n    x=a*b\n    lis=[0 for i in range(x+1)]\n    tmp=0\n    for i in range(x+1):\n        if (i%a)%b!=(i%b)%a:\n            tmp+=1\n        lis[i]=tmp\n    res=0\n    # print(lis)\n    # print(x)\n    for i in range(q):\n        res=0\n        l, r=rrm()\n        res+=lis[x]*(r//x)+lis[r%x]\n        if l!=0:\n            l-=1\n            res-=(lis[x]*(l//x)+lis[l%x])\n        stdout.write(str(res)+\" \")\n    stdout.write(\"\\n\")\n\nT = rri()\nfor _ in range(T):\n    sol()\n    # print(ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class C {\n    static final boolean RUN_TIMING = false;\n    static PushbackReader in = new PushbackReader(new BufferedReader(new InputStreamReader(System.in)), 1024);\n    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\n    public void go() throws IOException {\n        // in = new PushbackReader(new BufferedReader(new FileReader(new File(\"test.txt\"))), 1024);\n        // out = new PrintWriter(new FileWriter(new File(\"output.txt\")));\n        int zzz = ipar();\n        for (int zz = 0; zz < zzz; zz++) {\n            int a = ipar();\n            int b = ipar();\n            int q = ipar();\n            int ab = a*b;\n            int[] prefix = new int[ab+1];\n            for (int i = 1; i <= ab; i++) {\n                prefix[i] = prefix[i-1];\n                if ((i-1) % a % b != (i-1) % b % a) {\n                    prefix[i]++;\n                }\n            }\n            // out.println(Arrays.toString(prefix));\n            for (int i = 0; i < q; i++) {\n                long l = lpar()-1;\n                long r = lpar();\n                long lWhole = l / ab;\n                int lRem = (int)(l % ab);\n                long rWhole = r / ab;\n                int rRem = (int)(r % ab);\n                out.print(rWhole * prefix[ab] + prefix[rRem+1] - (lWhole * prefix[ab] + prefix[lRem+1]));\n                out.print(\" \");\n            }\n            out.println();\n        }\n    }\n\n    public int ipar() throws IOException {\n        return Integer.parseInt(spar());\n    }\n\n    public int[] iapar(int n) throws IOException {\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = ipar();\n        }\n        return arr;\n    }\n\n    public long lpar() throws IOException {\n        return Long.parseLong(spar());\n    }\n\n    public long[] lapar(int n) throws IOException {\n        long[] arr = new long[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = lpar();\n        }\n        return arr;\n    }\n\n    public double dpar() throws IOException {\n        return Double.parseDouble(spar());\n    }\n\n    public String spar() throws IOException {\n        StringBuilder sb = new StringBuilder(1024);\n        int c;\n        do {\n            c = in.read();\n        } while (Character.isWhitespace(c) && c != -1);\n        if (c == -1) {\n            throw new NoSuchElementException(\"Reached EOF\");\n        }\n        do {\n            sb.append((char)c);\n            c = in.read();\n        } while (!Character.isWhitespace(c) && c != -1);\n        while (c != '\\n' && Character.isWhitespace(c) && c != -1) {\n            c = in.read();\n        }\n        if (c != -1 && c != '\\n') {\n            in.unread(c);\n        }\n        return sb.toString();\n    }\n\n    public String linepar() throws IOException {\n        StringBuilder sb = new StringBuilder(1024);\n        int c;\n        while ((c = in.read()) != '\\n' && c != -1) {\n            if (c == '\\r') {\n                continue;\n            }\n            sb.append((char)c);\n        }\n        return sb.toString();\n    }\n\n    public boolean haspar() throws IOException {\n        String line = linepar();\n        if (line.isEmpty()) {\n            return false;\n        }\n        in.unread('\\n');\n        in.unread(line.toCharArray());\n        return true;\n    }\n\n    public static void main(String[] args) throws IOException {\n        long time = 0;\n        time -= System.nanoTime();\n        new C().go();\n        time += System.nanoTime();\n        if (RUN_TIMING) {\n            System.out.printf(\"%.3f ms%n\", time/1000000.0);\n        }\n        out.flush();\n        in.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom math import gcd\nt = int(input())\n\nfor it in range(t):\n    a, b, q = [int(i) for i in stdin.readline().split()]\n    if a > b:\n        a, b = b, a\n    v = a * b // gcd(a, b)\n    res = \"\"\n    for it2 in range(q):\n        l, r = [int(i) for i in stdin.readline().split()]\n        sm = 0\n        for m in range(b):\n            l1, r1 = l - m, r - m\n            sm += max(0, r1 // v - (l1 + v - 1) // v + 1)\n        res += str(r - l + 1 - sm) + \" \"\n    stdout.write(res + \"\\n\")\n    \n        "
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\n\nimport java.util.*;\n\n\npublic class Solution {\n\n    public static void main(String[] args) throws IOException {\n        Reader.init(System.in);\n        int t = Reader.nextInt();\n        PrintWriter out = new PrintWriter(System.out);\n//        int t = 1;\n        for (int i = 1 ; i<= t ; i++){\n//            out.print(\"Case #\" + i + \": \");\n            solve(out);\n        }\n        out.close();\n    }\n    static double ans;\n    static int[][] arr;\n    static boolean[][] v;\n    static int[][] dp;\n    static long x;\n    static int n;\n    static long y;\n    static int k;\n    static StringBuilder[][] my;\n    static int cnt;\n    static void solve(PrintWriter out)throws IOException{\n        int a = Reader.nextInt();\n        int b = Reader.nextInt();\n        int size = (a*b);\n        int pre[] = new int[a*b];\n        int cnt = 0;\n        for (int i = 0 ; i < size ; i++){\n            if ((i%a)%b!=(i%b)%a){\n                cnt++;\n            }\n            pre[i] = cnt;\n        }\n//        System.out.println(Arrays.toString(pre));\n        int q = Reader.nextInt();\n        while (q-->0){\n            long l = Reader.nextLong();\n            long r = Reader.nextLong();\n            long l1 = l/size;\n            long l2 = (r/size) +1 ;\n//            System.out.println(l1 + \" \" + l2);\n            long ans = Math.max(0,cnt*(l2-l1));\n            ans-=pre[(l-1)%size!=size-1?(int)((l-1)%size):0];\n//            System.out.println(pre[(int)((r)%size)]);\n//            System.out.println(l2*size);\n            ans-=-1*pre[(int)(r%size)] + pre[size-1];\n//            System.out.println(ans);\n            System.out.println(ans);\n\n        }\n    }\n\n\n    static long gcd(long a, long b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n\n    }\n    public static void sortbyColumn(int arr[][], int col)\n    {\n        Arrays.sort(arr, new Comparator<int[]>() {\n\n            @Override\n            public int compare(final int[] entry1,\n                               final int[] entry2) {\n\n                if (entry1[col] > entry2[col])\n                    return 1;\n                else\n                    return -1;\n            }\n        });\n    }\n}\n\nclass Reader {\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n\n    /** call this method to initialize reader for InputStream */\n    static void init(InputStream input) {\n        reader = new BufferedReader(\n                new InputStreamReader(input) );\n        tokenizer = new StringTokenizer(\"\");\n    }\n    /** get next word */\n    static String next() throws IOException {\n        while ( ! tokenizer.hasMoreTokens() ) {\n            //TODO add check for eof if necessary\n            tokenizer = new StringTokenizer(\n                    reader.readLine() );\n        }\n        return tokenizer.nextToken();\n    }\n\n    static int nextInt() throws IOException {\n        return Integer.parseInt( next() );\n    }\n    static long nextLong() throws IOException {\n        return Long.parseLong( next() );\n    }\n\n    static double nextDouble() throws IOException {\n        return Double.parseDouble( next() );\n    }\n}\nclass MergeSort\n{\n    // Merges two subarrays of arr[].\n    // First subarray is arr[l..m]\n    // Second subarray is arr[m+1..r]\n\n    void merge(int arr[], int l, int m, int r)\n    {\n        // Find sizes of two subarrays to be merged\n        int n1 = m - l + 1;\n        int n2 = r - m;\n\n        /* Create temp arrays */\n        int L[] = new int [n1];\n        int R[] = new int [n2];\n\n        /*Copy data to temp arrays*/\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n\n\n        /* Merge the temp arrays */\n\n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n\n        // Initial index of merged subarry array\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i] <= R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n\n        /* Copy remaining elements of L[] if any */\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n\n        /* Copy remaining elements of R[] if any */\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    // Main function that sorts arr[l..r] using\n    // merge()\n    void sort(int arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            // Find the middle point\n            int m = (l+r)/2;\n\n            // Sort first and second halves\n            sort(arr, l, m);\n            sort(arr , m+1, r);\n\n            // Merge the sorted halves\n            merge(arr, l, m, r);\n        }\n    }\n\n    /* A utility function to print array of size n */\n    static void printArray(int arr[])\n    {\n        int n = arr.length;\n        for (int i=0; i<n; ++i)\n            System.out.print(arr[i] + \" \");\n        System.out.println();\n    }\n\n    // Driver method\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.ArrayList;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class YetAnotherCountingProblem {\n\t\n\tstatic final int MAXN = 1000_006;\n\t\n\tstatic final long MOD = (long) 1e9 + 7;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tMyScanner s = new MyScanner();\n\t\tPrint p = new Print();\n\t\tHelper hp = new Helper();\n\t\tint t = s.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint a = s.nextInt();\n\t\t\tint b = s.nextInt();\n\t\t\tif (a > b) {\n\t\t\t\tint tmp = b;\n\t\t\t\tb = a;\n\t\t\t\ta = tmp;\n\t\t\t}\n\t\t\tint q = s.nextInt();\n\t\t\tint lcm = (a * b) / hp.gcd(a, b);\n\t\t\t\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong l = s.nextLong();\n\t\t\t\tlong r = s.nextLong();\n\t\t\t\tif (lcm == b || (r < b)) {\n\t\t\t\t\tSystem.out.print(0 + \" \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong c1 = find(r, lcm, b);\n\t\t\t\tif (l > 1)\n\t\t\t\t\tc1 -= find(l - 1, lcm, b);\n\t\t\t\tSystem.out.print(c1 + \" \");\n\t\t\t}\n\t\t\tSystem.out.println(\"\");\n\t\t}\n\t}\n\t\n\tpublic static long find(long r, long lcm, long b) {\n\t\tlong div = r / lcm;\n\t\tlong num = div * lcm;\n\t\tlong tot = r;\n\t\tif (div != 0) {\n\t\t\ttot -= Math.min(b, r - num + 1);\n\t\t\ttot -= (div - 1) * b;\n\t\t}\n\t\treturn tot - Math.min(r, b - 1);\n\t\t\n\t}\n\tpublic static class Pair implements Comparable<Pair> {\n\t\t\n\t\tint first;\n\t\t\n\t\tint second;\n\t\t\n\t\tpublic Pair(int a, int b) {\n\t\t\tthis.first = a;\n\t\t\tthis.second = b;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + first;\n\t\t\tresult = prime * result + second;\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tPair other = (Pair) obj;\n\t\t\tif (first != other.first)\n\t\t\t\treturn false;\n\t\t\tif (second != other.second)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn o.first - first;\n\t\t}\n\t\t\n\t}\n\t\n\tpublic static class Helper {\n\t\t\n\t\tlong MOD = (long) 1e9 + 7;\n\t\t\n\t\tint MAXN = 1000_006;;\n\t\t\n\t\tRandom rnd;\n\t\t\n\t\tpublic Helper(long mod, int maxn) {\n\t\t\tMOD = mod;\n\t\t\tMAXN = maxn;\n\t\t\trnd = new Random();\n\t\t}\n\t\t\n\t\tpublic Helper() {\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic static int[] sieve;\n\t\t\n\t\tpublic static ArrayList<Integer> primes;\n\t\t\n\t\tpublic void setSieve() {\n\t\t\tprimes = new ArrayList<>();\n\t\t\tsieve = new int[MAXN];\n\t\t\tint i, j;\n\t\t\tfor (i = 2; i < MAXN; ++i)\n\t\t\t\tif (sieve[i] == 0) {\n\t\t\t\t\tprimes.add(i);\n\t\t\t\t\tfor (j = i; j < MAXN; j += i) {\n\t\t\t\t\t\tsieve[j] = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static long[] factorial;\n\t\t\n\t\tpublic void setFactorial() {\n\t\t\tfactorial = new long[MAXN];\n\t\t\tfactorial[0] = 1;\n\t\t\tfor (int i = 1; i < MAXN; ++i)\n\t\t\t\tfactorial[i] = factorial[i - 1] * i % MOD;\n\t\t}\n\t\t\n\t\tpublic long getFactorial(int n) {\n\t\t\tif (factorial == null)\n\t\t\t\tsetFactorial();\n\t\t\treturn factorial[n];\n\t\t}\n\t\t\n\t\tpublic long ncr(int n, int r) {\n\t\t\tif (r > n)\n\t\t\t\treturn 0;\n\t\t\tif (factorial == null)\n\t\t\t\tsetFactorial();\n\t\t\tlong numerator = factorial[n];\n\t\t\tlong denominator = factorial[r] * factorial[n - r] % MOD;\n\t\t\treturn numerator * pow(denominator, MOD - 2, MOD) % MOD;\n\t\t}\n\t\t\n\t\tpublic long[] getLongArray(int size, MyScanner s) throws Exception {\n\t\t\tlong[] ar = new long[size];\n\t\t\tfor (int i = 0; i < size; ++i)\n\t\t\t\tar[i] = s.nextLong();\n\t\t\treturn ar;\n\t\t}\n\t\t\n\t\tpublic int[] getIntArray(int size, MyScanner s) throws Exception {\n\t\t\tint[] ar = new int[size];\n\t\t\tfor (int i = 0; i < size; ++i)\n\t\t\t\tar[i] = s.nextInt();\n\t\t\treturn ar;\n\t\t}\n\t\t\n\t\tpublic int[] getIntArray(String s) throws Exception {\n\t\t\ts = s.trim().replaceAll(\"\\\\s+\", \" \");\n\t\t\tString[] strs = s.split(\" \");\n\t\t\tint[] arr = new int[strs.length];\n\t\t\tfor (int i = 0; i < strs.length; i++) {\n\t\t\t\tarr[i] = Integer.parseInt(strs[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tpublic long gcd(long a, long b) {\n\t\t\treturn b == 0 ? a : gcd(b, a % b);\n\t\t}\n\t\t\n\t\tpublic int gcd(int a, int b) {\n\t\t\treturn b == 0 ? a : gcd(b, a % b);\n\t\t}\n\t\t\n\t\tpublic long max(long[] ar) {\n\t\t\tlong ret = ar[0];\n\t\t\tfor (long itr : ar)\n\t\t\t\tret = Math.max(ret, itr);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tpublic int max(int[] ar) {\n\t\t\tint ret = ar[0];\n\t\t\tfor (int itr : ar)\n\t\t\t\tret = Math.max(ret, itr);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tpublic long min(long[] ar) {\n\t\t\tlong ret = ar[0];\n\t\t\tfor (long itr : ar)\n\t\t\t\tret = Math.min(ret, itr);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tpublic int min(int[] ar) {\n\t\t\tint ret = ar[0];\n\t\t\tfor (int itr : ar)\n\t\t\t\tret = Math.min(ret, itr);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tpublic long sum(long[] ar) {\n\t\t\tlong sum = 0;\n\t\t\tfor (long itr : ar)\n\t\t\t\tsum += itr;\n\t\t\treturn sum;\n\t\t}\n\t\t\n\t\tpublic long sum(int[] ar) {\n\t\t\tlong sum = 0;\n\t\t\tfor (int itr : ar)\n\t\t\t\tsum += itr;\n\t\t\treturn sum;\n\t\t}\n\t\t\n\t\tpublic long pow(long base, long exp, long MOD) {\n\t\t\tbase %= MOD;\n\t\t\tlong ret = 1;\n\t\t\twhile (exp > 0) {\n\t\t\t\tif ((exp & 1) == 1)\n\t\t\t\t\tret = ret * base % MOD;\n\t\t\t\tbase = base * base % MOD;\n\t\t\t\texp >>= 1;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t}\n\t\n\tstatic class Print {\n\t\t\n\t\tprivate BufferedWriter bw;\n\t\t\n\t\tpublic Print() {\n\t\t\tthis.bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\t\t}\n\t\t\n\t\tpublic void print(Object object) throws IOException {\n\t\t\tbw.append(\"\" + object);\n\t\t}\n\t\t\n\t\tpublic void println(Object object) throws IOException {\n\t\t\tprint(object);\n\t\t\tbw.append(\"\\n\");\n\t\t}\n\t\t\n\t\tpublic void close() throws IOException {\n\t\t\tbw.close();\n\t\t}\n\t}\n\t\n\tpublic static class MyScanner {\n\t\t\n\t\tBufferedReader br;\n\t\t\n\t\tStringTokenizer st;\n\t\t\n\t\tpublic MyScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\t\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\t\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n}\n"
        },
        {
            "language": 1,
            "solution": "def gcd(x,y):\n\tif y == 0:\n\t\treturn x\n\treturn gcd(y,x%y)\n\ndef calc(lim,d,a,b):\n\tif(lim < 0):\n\t\treturn 0\n\tif(lim == 0):\n\t\treturn 1\n\ttemp = 0\n\ttemp += (lim/d)*b\n\ti = (lim/d)*d\n\ttemp += min(lim - i+1, b)\n\treturn temp\n\nfor _ in range(int(raw_input())):\n\ta,b,q = map(int,raw_input().split())\n\tif(a>b):\n\t\ta,b = b,a\n\tlcm = (a*b)/gcd(a,b)\n\t#print lcm\t\n\tans = []\n\tfor i in range(q):\n\t\tl,r = map(int,raw_input().split())\n\t\tif(b%a == 0):\n\t\t\tans.append(0)\n\t\telse:\n\t\t\t#print calc(b,lcm,a,b), calc(a,lcm,a,b)\n\t\t\tans.append(r - l + 1 - calc(r,lcm,a,b) + calc(l-1,lcm,a,b))\n\n\tprint ' '.join([str(i) for i in ans])\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Main\n{\n\tPrintWriter out = new PrintWriter(System.out);\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n    StringTokenizer tok = new StringTokenizer(\"\");\n    String next() throws IOException {\n        if (!tok.hasMoreTokens()) { tok = new StringTokenizer(in.readLine()); }\n        return tok.nextToken();\n    }\n    int ni() throws IOException { return Integer.parseInt(next()); }\n    long nl() throws IOException { return Long.parseLong(next()); }\n  \n    void solve() throws IOException {\n        for (int tc=ni();tc>0;tc--) {\n            int a=ni(),b=ni(),quer=ni();\n            if (a>b) { int tmp=a; a=b; b=tmp; }\n            \n            long lcm=(a*b)/gcd(a,b);\n            \n            for (int x=0;x<quer;x++) {\n                long p=nl()-1,q=nl();\n                long a1=(p/lcm)*(lcm-b);\n                a1+=(p%lcm>=b?(p%lcm)-b+1:0);\n                long a2=(q/lcm)*(lcm-b);\n                a2+=(q%lcm>=b?(q%lcm)-b+1:0);\n                //out.println(a1+\" \"+a2);\n                out.println(a2-a1);\n            }\n        }\n        out.flush();\n    }\n    \n    int gcd(int a,int b) { return(b==0?a:gcd(b,a%b)); }\n    \n    public static void main(String[] args) throws IOException {\n        new Main().solve();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a, b, q, c, d;\nint gcd(int a, int b) {\n  if (a == 0) return b;\n  if (b == 0) return a;\n  if (a == b) return a;\n  if (a > b) return gcd(a - b, b);\n  return gcd(a, b - a);\n}\nlong long cal(long long x) {\n  long long tmp1 = x / d, tmp2 = x % d;\n  long long ans = tmp1 * (d - c) + max(tmp2 - c + 1, 0ll);\n  return ans;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int f = 0; f < t; f++) {\n    int q;\n    cin >> a >> b;\n    cin >> q;\n    c = max(a, b);\n    d = (a * b) / gcd(a, b);\n    for (int i = 0; i < q; i++) {\n      long long l, r;\n      cin >> l >> r;\n      cout << cal(r) - cal(l - 1) << endl;\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nt = int(input())\n\nfor _ in range(t):\n    a,b,q = map(int,input().split())\n    lcm = a * b // math.gcd(a,b)\n    check = [0]*lcm\n    rui = [0]*(lcm+1)\n    aa = 0\n    for i in range(lcm):\n        if (i%a)%b != (i%b)%a:\n            check[i] = 1\n            aa += 1\n            rui[i+1] = aa\n    onel = rui[lcm]\n            \n    ans = []\n    for i in range(q):\n        l,r = map(int,input().split())\n        ll = l % lcm\n        rr = r % lcm\n        loops = (r-l) // lcm\n        \n        if rr < ll:\n            ans.append((loops * onel + (rui[lcm] - rui[ll]) + rui[rr+1]))\n        elif rr > ll:\n            ans.append(loops * onel + (rui[rr+1] - rui[ll]))\n        else:\n            ans.append(loops * onel + check[rr])\n            \n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "// package EducationalRound86;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class ProblemC {\n    public static void main(String[] args)throws IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st;\n        StringBuilder print=new StringBuilder();\n        int test=Integer.parseInt(br.readLine());\n        while(test--!=0){\n            st=new StringTokenizer(br.readLine());\n            int a=Integer.parseInt(st.nextToken());\n            int b=Integer.parseInt(st.nextToken());\n            if(a>b){\n                int temp=b;\n                b=a;\n                a=temp;\n            }\n            int lcm=(a*b)/gcd(a,b);\n            int q=Integer.parseInt(st.nextToken());\n            while(q--!=0){\n                st=new StringTokenizer(br.readLine());\n                long l=Long.parseLong(st.nextToken());\n                long r=Long.parseLong(st.nextToken());\n                if(lcm==b){\n                    print.append(\"0 \");\n                }\n                else{\n                    print.append(getAns(l,r,lcm,b)+\" \");\n                }\n            }\n            print.append(\"\\n\");\n        }\n        System.out.print(print.toString());\n    }\n    public static int gcd(int a,int b){\n        if(b==0){\n            return a;\n        }\n        return gcd(b,a%b);\n    }\n    public static long getAns(long l,long r,int lcm,int b){\n        long s=l/lcm;\n        long del=0;\n        if(l%lcm!=0){\n            long start=s*lcm;\n//            System.out.println(start);\n            for(int i=0;i<b;i++){\n                long temp=start+i;\n                if(temp>=l&&temp<=r){\n                    del++;\n                }\n            }\n            s++;\n        }\n        long e=r/lcm;\n        long total=r-l+1;\n//        System.out.println(s+\" \"+e+\" \"+del);\n        if(s>e){\n            return total-del;\n        }\n        long trust=e-s;\n        del+=trust*b;\n        long end=e*lcm;\n        for(int i=0;i<b;i++){\n            if(end+i>r){\n                break;\n            }\n            del++;\n        }\n//        System.out.println(del);\n        return total-del;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nt=int(input())\nfor i in range(t):\n    a,b,q=map(int,input().split())\n    lcm=a*b//math.gcd(a,b)\n    arr=[]\n    for i in range(q):\n        ans=0\n        l,r=map(int,input().split())\n        total=r-l+1\n        last=(r//lcm)\n        first=((l//lcm)+1)\n        pq=math.inf\n        if r%lcm<max(a,b):\n            pq=(r%lcm)+1\n        ans+=min((last-first)*max(a,b)+pq,((last-first)+1)*max(a,b))\n        ans=max(0,ans)\n        if l%lcm<max(a,b):\n            ans+=((max(a,b)-1)-(l%lcm)+1)\n        f_ans=max(0,total-ans)\n        arr.append(f_ans)\n    print(*arr)\n\n\n    \n    \n    \n       \n       \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int a, b, q, l, r;\n    cin >> a >> b >> q;\n    long long int ab = a * b;\n    vector<long long int> v(ab, 0);\n    long long int cnt = 0;\n    for (int i = 1; i <= ab; i++) {\n      if ((i % a) % b != (i % b) % a) {\n        cnt++;\n      }\n      v[i - 1] = cnt;\n    }\n    while (q--) {\n      cin >> l >> r;\n      long long int c, d, ans = 0;\n      c = r % ab;\n      d = (l - 1) % ab;\n      ans = (r / ab) * v[ab - 1] - ((l - 1) / ab) * v[ab - 1];\n      if (c != 0) ans += v[r % ab - 1];\n      if (d != 0) ans -= v[(l - 1) % ab - 1];\n      cout << ans << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nimport os\nfrom sys import stdin\n\n\ndef gcd(a, b):\n    while a > 0:\n        b, a = a, b % a\n    return b\n\n\ndef solve(tc):\n    a, b, q = map(int, stdin.readline().split())\n    if a > b:\n        a, b = b, a\n\n    g = a*b//gcd(a, b)\n    ans = []\n    for i in range(q):\n        l, r = map(int, stdin.readline().split())\n\n        group = r // g\n        if group > 0:\n            cnt = group * b + min(r % g, b-1)\n        else:\n            cnt = min(r % g, b-1)\n        res = r - cnt\n\n        l -= 1\n        group = l // g\n        if group > 0:\n            cnt = group * b + min(l % g, b-1)\n        else:\n            cnt = min(l % g, b-1)\n        res -= l - cnt\n        ans.append(res)\n\n    print(' '.join([str(x) for x in ans]))\n\n\ntcs = int(stdin.readline())\n\ntc = 1\nwhile tc <= tcs:\n    solve(tc)\n    tc += 1\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    return gcd(b, a % b) if b != 0 else a\n\nfor t in range(int(input())):\n    a, b, q = map(int, input().split())\n    lcm = a * b // gcd(a, b)\n    cnt = 0\n    till = [0 for _ in range(lcm+1)] # for till[-1] = 0\n    for x in range(lcm):\n        if (x % a) % b != (x % b) % a:\n            cnt += 1\n        till[x] = cnt\n    till[lcm] = 0\n    for i in range(q):\n        l, r = map(int, input().split())\n        n = (r - l) // lcm\n        r -= n * lcm\n        l, r = l % lcm, r % lcm\n        ans = n * cnt + till[r] - till[l-1]\n        if l > r:\n            ans += cnt\n        print(ans, end=' ')\n    print()"
        },
        {
            "language": 4,
            "solution": "/*\n *created by Kraken on 27-04-2020 at 02:11\n */\n//package com.kraken.cf.practice;\n\nimport java.util.*;\nimport java.io.*;\n\npublic class C1342 {\n\n  public static void main(String[] args) {\n    FastReader sc = new FastReader();\n    int tt = sc.nextInt();\n    StringBuilder sb = new StringBuilder();\n    while (tt-- > 0) {\n      int a = sc.nextInt(), b = sc.nextInt(), q = sc.nextInt();\n      if (a > b) {\n        a += b;\n        b = a - b;\n        a -= b;\n      }\n      long lcm = (a * b) / gcd(a, b);\n      long res, bad;\n      while (q-- > 0) {\n        long l = sc.nextLong(), r = sc.nextLong();\n        if (lcm == b) {\n          sb.append(\"0 \");\n          continue;\n        }\n        res = r - l + 1;\n        bad = 0;\n//        long cnt = (l / lcm) * lcm;\n//        if (cnt + b >= l) {\n//          bad += cnt + b - l;\n//          l = cnt + b;\n//        }\n//        cnt = (r / lcm) * lcm;\n//        if (cnt + b >= r) {\n//          bad += r - cnt + 1;\n//          r = cnt - 1;\n//        }\n        while (l <= r && l % lcm < b) {\n          bad++; l++;\n        }\n        while (r >= l && r % lcm < b) {\n          bad++; r--;\n        }\n        long l1 = l / lcm + 1;\n        long r1 = r / lcm;\n        bad += (r1 - l1 + 1) * b;\n        sb.append(Math.max(0, res - bad) + \" \");\n      }\n      sb.append(\"\\n\");\n    }\n    System.out.print(sb);\n  }\n\n  private static long gcd(int a, int b) {\n    if (a == 0) return b;\n    return gcd(b % a, a);\n  }\n\n  static class FastReader {\n\n    BufferedReader br;\n\n    StringTokenizer st;\n\n    public FastReader() {\n      br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n      while (st == null || !st.hasMoreElements()) {\n        try {\n          st = new StringTokenizer(br.readLine());\n        }\n        catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      return st.nextToken();\n    }\n\n    int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n      return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n      String str = \"\";\n      try {\n        str = br.readLine();\n      }\n      catch (IOException e) {\n        e.printStackTrace();\n      }\n      return str;\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C1342 {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int T = in.nextInt();\n        for (int t=0; t<T; t++) {\n            int A = in.nextInt();\n            int B = in.nextInt();\n            int M = A*B;\n            int[] count = new int[M+1];\n            for (int r=1; r<=M; r++) {\n                count[r] = count[r-1] + (((r%A)%B == (r%B)%A) ? 0 : 1);\n            }\n            int Q = in.nextInt();\n            StringBuilder sb = new StringBuilder();\n            for (int q=0; q<Q; q++) {\n                long L = in.nextLong();\n                long R = in.nextLong();\n                long answer = R/M*count[M]+count[(int)(R%M)]-(L-1)/M*count[M]-count[(int)((L-1)%M)];\n                sb.append(answer).append(' ');\n            }\n            System.out.println(sb);\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "input = __import__(\"sys\").stdin.buffer.readline\n\nt = int(input())\n\nfor tc in range(t):\n    a, b, q = map(int, input().split())\n    \n    c = [1]\n    for x in range(1, a*b):\n        c.append(c[-1])\n        if (x % a) % b == (x % b) % a:\n            c[-1] += 1\n    \n    def pre(x):\n        full = x // (a*b)\n        right = x % (a*b)\n        \n        return full * c[a*b-1] + c[right]\n    \n    output = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        \n        sol = pre(r) - pre(l-1)\n        output.append(str(r-l+1-sol))\n        \n    print(\" \".join(output))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    vector<int> v(a * b + 1, 0);\n    for (int i = 1; i <= a * b; i++) {\n      if ((i % a) % b != (i % b) % a) {\n        v[i] = v[i - 1] + 1;\n      } else\n        v[i] = v[i - 1];\n    }\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      long long l_cycle = l / (a * b);\n      long long r_cycle = r / (a * b);\n      long long ans = (r_cycle - l_cycle) * v[a * b];\n      ans = ans + v[r % (a * b)];\n      if (l % (a * b) != 0) ans = ans - v[(l % (a * b)) - 1];\n      cout << ans << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author sumit\n */\npublic class Main {\n      public static void main(String[] args) {\n            InputStream inputStream = System.in;\n            OutputStream outputStream = System.out;\n            InputReader in = new InputReader(inputStream);\n            OutputWriter out = new OutputWriter(outputStream);\n            CYetAnotherCountingProblem solver = new CYetAnotherCountingProblem();\n            solver.solve(1, in, out);\n            out.close();\n      }\n\n      static class CYetAnotherCountingProblem {\n            long[] arr;\n            int len = 0;\n\n            void count(int a, int b) {\n                  len = a * b;\n                  arr = new long[len + 1];\n                  for (int i = 1; i <= len; i++) {\n                        if ((i % a) % b != (i % b) % a) {\n                              arr[i] = 1;\n                        }\n                        arr[i] += arr[i - 1];\n                  }\n\n            }\n\n            long query(long l) {\n                  long div = l / (1L * len);\n                  int rem = (int) (l % (1L * len));\n\n                  long ans = div * (long) arr[len] + (long) arr[rem];\n                  return ans;\n            }\n\n            public void solve(int testNumber, InputReader in, OutputWriter out) {\n                  int t = in.nextInt();\n                  while (t-- > 0) {\n                        int a = in.nextInt();\n                        int b = in.nextInt();\n                        if (a > b) {\n                              int temp = a;\n                              a = b;\n                              b = temp;\n                        }\n\n                        int q = in.nextInt();\n                        StringBuilder ans = new StringBuilder();\n                        count(a, b);\n                        while (q-- > 0) {\n                              long l = in.nextLong();\n                              long r = in.nextLong();\n                              if (a % b == 0 || b % a == 0) {\n                                    ans.append(\"0 \");\n                                    continue;\n                              }\n\n                              long aa = query(r) - query(l - 1);\n                              ans.append(aa + \" \");\n                        }\n                        out.printLine(ans);\n\n                  }\n            }\n\n      }\n\n      static class InputReader {\n            private InputStream stream;\n            private byte[] buf = new byte[1024];\n            private int curChar;\n            private int numChars;\n\n            public InputReader(InputStream stream) {\n                  this.stream = stream;\n            }\n\n            public int read() {\n                  if (numChars == -1)\n                        throw new InputMismatchException();\n\n                  if (curChar >= numChars) {\n                        curChar = 0;\n                        try {\n                              numChars = stream.read(buf);\n                        } catch (IOException e) {\n                              throw new InputMismatchException();\n                        }\n                        if (numChars <= 0)\n                              return -1;\n                  }\n\n                  return buf[curChar++];\n            }\n\n            public int nextInt() {\n                  int c = read();\n\n                  while (isSpaceChar(c))\n                        c = read();\n\n                  int sgn = 1;\n\n                  if (c == '-') {\n                        sgn = -1;\n                        c = read();\n                  }\n\n                  int res = 0;\n\n                  do {\n                        if (c < '0' || c > '9')\n                              throw new InputMismatchException();\n\n                        res *= 10;\n                        res += c & 15;\n\n                        c = read();\n                  } while (!isSpaceChar(c));\n\n                  return res * sgn;\n            }\n\n            public long nextLong() {\n                  int c = read();\n\n                  while (isSpaceChar(c))\n                        c = read();\n\n                  int sign = 1;\n\n                  if (c == '-') {\n                        sign = -1;\n\n                        c = read();\n                  }\n\n                  long result = 0;\n\n                  do {\n                        if (c < '0' || c > '9')\n                              throw new InputMismatchException();\n\n                        result *= 10;\n                        result += c & 15;\n\n                        c = read();\n                  } while (!isSpaceChar(c));\n\n                  return result * sign;\n            }\n\n            public boolean isSpaceChar(int c) {\n                  return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n            }\n\n      }\n\n      static class OutputWriter {\n            private final PrintWriter writer;\n\n            public OutputWriter(OutputStream outputStream) {\n                  writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n            }\n\n            public OutputWriter(Writer writer) {\n                  this.writer = new PrintWriter(writer);\n            }\n\n            public void print(Object... objects) {\n                  for (int i = 0; i < objects.length; i++) {\n                        if (i != 0) {\n                              writer.print(' ');\n                        }\n                        writer.print(objects[i]);\n                  }\n            }\n\n            public void printLine(Object... objects) {\n                  print(objects);\n                  writer.println();\n            }\n\n            public void close() {\n                  writer.close();\n            }\n\n      }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport io, os\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n# import sys\n# input = sys.stdin.readline\n\nM = mod = 10**9 + 7 \ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n\ndef li():return [int(i) for i in input().rstrip().split()]\ndef st():return str(input().rstrip())[2:-1]\ndef val():return int(input().rstrip())\ndef li2():return [str(i)[2:-1] for i in input().rstrip().split()]\ndef li3():return [int(i) for i in input().rstrip()]\n\n \ndef giveab(a,b):\n    l = []\n    for i in range(1,a * b + 1,1):\n        l.append(1 if ((i%a)%b) != ((i%b)%a) else 0)\n    return l[:]\n \ndef giveforanum(r,s,l):\n    temp = r//(a * b)\n    up = temp*s\n    r %= (a * b)\n    \n    return up + l[r]\n \n \nfor _ in range(val()):\n    a,b,q = li()\n    \n    l1 = giveab(a,b)\n    pref = [0]\n    for i in l1:pref.append(pref[-1] + i)\n \n    s = sum(l1)\n    ans = []\n    for i in range(q):\n        l,r = li()\n        ans.append(giveforanum(r,s,pref) - giveforanum(l-1,s,pref))\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd,ceil\nfor _ in range(int(input())):\n  a,b,q=map(int,input().split())\n  m=(a*b)//gcd(a,b)\n  n=max(a,b)\n  for _ in range(q):\n    l,r=map(int,input().split())\n    print(r-l-(((r//m)-(l//m)+1)*n-min(n,l%m)-max(0,n-r%m-1))+1)\n"
        },
        {
            "language": 3,
            "solution": "import math\n\nt = int(input())\nfor i in range(t):\n    a,b,q = map(int,input().split())\n    answer = \"\"\n    for j in range(q):\n        l,r = map(int,input().split())\n        timesEqual = 0\n        lcm = (a*b)//math.gcd(a,b)\n        fullRotations = (r-l+1)//lcm\n        timesEqual += max(a,b)*fullRotations\n        lmod = l%lcm\n        rmod = r%lcm\n        if (r-l+1)%lcm != 0:\n            if lmod < max(a,b):\n                if rmod > lmod:\n                    timesEqual += min(rmod+1,max(a,b))-lmod\n                elif rmod < lmod:\n                    timesEqual += max(a,b)-lmod + rmod + 1\n                else:\n                    timesEqual += 1\n            else:\n                if rmod < lmod:\n                    timesEqual += min(rmod+1,max(a,b))\n        answer += str(r-l+1-timesEqual) + \" \"\n    print(answer)\n\n   "
        },
        {
            "language": 4,
            "solution": "//package cf;\n\nimport java.util.*;\nimport java.io.*;\n\npublic class Cf{\n    static class Node{\n        int sum,occur;\n        Node(int sum){\n            this.sum=sum;\n        }\n    }\n    \n    \n    public static void main(String[]args){\n        Scanner in=new Scanner(System.in);\n        PrintWriter out=new PrintWriter(System.out);\n        long t=in.nextLong();\n        while(t-->0){\n            int a=in.nextInt();\n            int b=in.nextInt();\n            \n            int q=in.nextInt();\n            \n            long prefix[]=new long[a*b+1];\n            \n            for(int i=0;i<=a*b;i++){\n                if(((i%a)%b)!=((i%b)%a)){\n                    prefix[i]=1;\n                }\n            }\n            for(int i=1;i<=a*b;i++){\n                prefix[i]+=prefix[i-1];\n            }\n            while(q-->0){\n                long l=in.nextLong()-1;\n                long r=in.nextLong();\n                long ans=prefix[a*b]*(l/(a*b))+prefix[(int)(l%(a*b))];\n                ans=prefix[a*b]*(r/(a*b))+prefix[(int)(r%(a*b))]-ans;\n               out.print(ans+\" \");\n            \n            }\n            out.println();\n            \n            \n            \n        }\n        in.close();\n        out.close();\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python3\n# Submit as pypy2\n\n\nfrom __future__ import print_function, division, unicode_literals\n\n__metaclass__ = type\n\ntry:\n    input = raw_input\n    range = xrange\nexcept NameError:\n    pass\n\n\nimport sys\n\n\n# Test code requires python3\n# from hypothesis import given\n# from hypothesis import strategies as st\n#\n#\n#def debug(*args, **kwargs):\n#    print(*args, *('{}={}'.format(k, v) for k, v in kwargs.items()),\n#          sep='; ', file=sys.stderr)\n\n\ndef pshow(a, k=10):\n    ans = \"[0: \" + ', '.join(map(str, a[:k])) + \"\\n\"\n    for i in range(1, len(a) // k):\n        ans += \" {}: \".format(k * i) + ', '.join(map(str, a[k*i:k*(i+1)])) + \"\\n\"\n    ans += \"]\"\n    return ans\n\n\nfrom fractions import gcd\n\n\ndef lcm(a, b):\n    return a // gcd(a, b) * b\n\n\ndef main():\n    #import numpy as np\n    T = int(input())\n    for _ in range(T):\n        A, B, Q = map(int, input().split())\n        C = lcm(A, B)\n        psum = [0] * (C + 1)\n        for x in range(C):\n            psum[x + 1] = psum[x] + (x % A % B != x % B % A)\n        #debug(C=C)\n        #debug(pshow(np.diff(psum)))\n        for _ in range(Q):\n            L, R = map(int, input().split())\n            R += 1\n            qL = L // C\n            qR = R // C\n            #debug(qL=qL, qR=qR)\n            if qL == qR:\n                print(psum[R % C] - psum[L % C], end=' ')\n            else:\n                #debug(left=psum[C] - psum[L % C], middle=(qR - qL) * psum[C], right=psum[R % C])\n                print(psum[C] - psum[L % C] + (qR - qL - 1) * psum[C] + psum[R % C], end=' ')\n        print()\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nfrom math import gcd\ninput = stdin.buffer.readline\n\ndef f(R, b, x):\n    ans = 0\n    if R // b % x == 0:\n        ans += R % b + 1\n    R -= R % b + 1\n    ans += b * (R // b // x)\n    return ans\n\ndef g(l, r, b, x):\n    return r - l + 1 - f(r, b, x) + f(l - 1, b, x)\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    x = a // gcd(a, b)\n    for __ in range(q):\n        l, r = map(int, input().split())\n        print(g(l, r, b, x), end=' ')\n    print()"
        },
        {
            "language": 3,
            "solution": "def gcd(x,y):\n    if y==0:\n        return x\n    else:\n        return gcd(y,x%y)\n    \nt=int(input())\n\nfor i in range(t):\n    a,b,q=map(int,input().split())\n    lcm=(a*b)//gcd(a,b)\n    if a>b:\n        a+=b\n        b=a-b\n        a-=b\n    for j in range(q):\n        l,r=map(int,input().split())\n        if r<b:\n            print(0,end=' ')\n        else:\n            n=r//lcm\n            s=b-1\n            s1=0\n            if n:\n                s+=(n-1)*(b)+min(r-n*lcm+1,b)\n            if l>1:\n                l-=1\n                if l<b:\n                    s1=l\n                else:\n                    s1=b-1\n                    n1=l//lcm\n                    if n1:\n                        s1+=(n1-1)*(b)+min(l-n1*lcm+1,b)\n                l+=1\n            print(r-l+1-s+s1,end=' ')\n    print()"
        },
        {
            "language": 3,
            "solution": "def cal(x,y):\n    #\u6700\u5c0f\u516c\u500d\u6570\n    a,b = x,y\n    while b>0:\n        a,b = b,a%b\n    return int(a*((x/a)*(y/a)))\ndef do(num,M,maxx):\n    ans = 0\n    if (num%M)>maxx:ans += (num%M)-maxx\n    ans += (num//M)*(M-maxx)\n    return int(ans)\n\nN = int(input())\nfor _ in range(N):\n    a,b,q = list(map(int,input().split(' ')))\n    M = cal(a,b)\n    tmp = []\n    for i in range(q):\n        l,r = list(map(int,input().split(' ')))\n        res = do(r+1,M,max(a,b))-do(l,M,max(a,b))\n        tmp.append(res)\n    for i in range(len(tmp)-1):\n        print(tmp[i],end=' ')\n    print(tmp[len(tmp)-1])\n"
        },
        {
            "language": 3,
            "solution": "def f(x, a, b):\n  global prefixes\n  return (x // (a * b) * prefixes[a * b]) + prefixes[x % (a * b)] \n\nfor _ in range(int(input())):\n  a, b, q = map(int, input().split())\n  prefixes = [0] * (a * b + 1)\n  for i in range(2, a * b + 1):\n    prefixes[i] = prefixes[i - 1]\n    if (i % a) % b != (i % b) % a:\n      prefixes[i] += 1\n  for i in range(q):\n    l, r = map(int, input().split())\n    print(f(r, a, b) - f(l - 1, a, b), end=' ')\n  print()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class C1342 {\n\t\n\tpublic static int gcd(int n, int m) {\n\t\treturn n == 0 ? m : gcd(m % n, n);\n\t}\n\t\n\tpublic static int lcm(int n, int m) {\n\t\treturn n * (m / gcd(n, m));\n\t}\n\t\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\t\n\t\tint t = sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint u = sc.nextInt(), v = sc.nextInt();\n\t\t\tint a = Math.min(u, v), b = Math.max(u, v);\n\t\t\tint g = lcm(a, b);\n\t\t\tint[] pre = new int[g];\n\t\t\tfor(int i = 0; i < g; i++) {\n\t\t\t\tif((i % a) % b != (i % b) % a)\n\t\t\t\t\tpre[i] = (i == 0 ? 0 : pre[i - 1]) + 1;\n\t\t\t\telse\n\t\t\t\t\tpre[i] = (i == 0 ? 0 : pre[i - 1]);\n\t\t\t}\n\t\t\t\n\t\t\tint diff = pre[g - 1];\n\t\t\tint q = sc.nextInt();\n\t\t\twhile(q-->0) {\n\t\t\t\tlong l = sc.nextLong(), r = sc.nextLong();\n\t\t\t\tlong cnt = 0;\n\t\t\t\tif(r - l + 1 < g) {\n\t\t\t\t\t//System.out.println(\"hi\");\n\t\t\t\t\tint i = (int)(l % g);\n\t\t\t\t\tint j = (int)(r % g);\n\t\t\t\t\tif(i == 0)\n\t\t\t\t\t\tcnt = pre[j];\n\t\t\t\t\telse if(j >= i) {\n\t\t\t\t\t\tif(j == 0)\n\t\t\t\t\t\t\tj = diff;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tj = pre[j];\n\t\t\t\t\t\tcnt = j - (i == 0 ? 0 : pre[i - 1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcnt = pre[j];\n\t\t\t\t\t\tcnt += pre[g - 1] - pre[i - 1];\n\t\t\t\t\t}\n\t\t\t\t\tpw.print(cnt + \" \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcnt += (l % g == 0 ? 0 : pre[g - 1] - pre[(int)(l % g) - 1]);\n\t\t\t\t//System.out.println(cnt);\n\t\t\t\tcnt += pre[(int)(r % g)];\n\t\t\t\t//System.out.println(cnt);\n\t\t\t\tl = 1l * ((l + (g - 1)) / g) * g + 1;\n\t\t\t\tr = 1l * (r / g) * g;\n\t\t\t\tcnt += 1l * Math.max(0, (r - l + 1)) / g * diff;\n\t\t\t\t\n\t\t\t\t//System.out.println(l + \" \" + r);\n\t\t\t\tpw.print(cnt + \" \");\n\t\t\t}\n\t\t\tpw.print(\"\\n\");\n\t\t}\t\n\t\t\n\t\t\n\t\tpw.flush();\n\t}\n\n\tpublic static class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic Long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic Integer[] nextIntegerArray(int n) throws IOException {\n\t\t\tInteger[] array = new Integer[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = new Integer(nextInt());\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) throws IOException {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\ninput = stdin.readline\nfrom math import gcd\n\ndef main():\n    t = int(input())\n    #t=1\n    for i in range(t):\n        #n = int(input())\n        a, b, q = map(int,input().split())\n        #ai = list(map(int,input().split()))\n        #ar = [[0]*a for i in range(b)]\n        ab = a * b // gcd(a,b)\n        ar = [0] * (ab)\n        for num in range(ab):\n            ar[num] = int(num % a % b != num % b % a)\n        ar2 = [0] * (ab+1)\n        for i in range(ab):\n            ar2[i] = ar2[i-1] + ar[i]\n        for i in range(q):\n            l,r = map(int,input().split())\n            l2  = l % ab\n            r2  = r % ab\n            if r - l + 1 <= ab - l2:\n                print(ar2[r2] - ar2[l2-1],end=\" \")\n            else:\n                ans = (r-l+1 - ab + l2 - r2)//ab * ar2[-2]\n                ans += ar2[-2] - ar2[l2-1]\n                ans += ar2[r2]\n                print(ans,end=\" \")\n        print()\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[201];\nlong long upb(long long x, long long y) {\n  long long res = (x / y) * y;\n  return res == x ? res : res + y;\n}\nlong long lwb(long long x, long long y) {\n  long long res = (x / y) * y;\n  return res == (x - y + 1) ? x + 1 : res;\n}\nvoid run() {\n  int a, b, q;\n  cin >> a >> b >> q;\n  int c = a * b;\n  int sum = 0;\n  memset(cnt, 0, b * sizeof(int));\n  for (int i = 0; i < c; ++i) cnt[i / a] += (i % a % b != i % b % a);\n  for (int i = 0; i < b; ++i) sum += cnt[i];\n  for (int z = 0; z < q; ++z) {\n    long long l, r;\n    long long ans = 0;\n    cin >> l >> r;\n    long long k = upb(l, c), p = lwb(r, c);\n    if (k > r) {\n      long long g = upb(l, a);\n      if (g > r) {\n        for (long long i = l; i <= r; ++i) ans += (i % a % b != i % b % a);\n      } else {\n        for (long long i = l; i < g; ++i) ans += (i % a % b != i % b % a);\n        for (; g + a - 1 <= r; g += a) ans += cnt[(g / a) % b];\n        for (; g <= r; ++g) ans += (g % a % b != g % b % a);\n      }\n    } else {\n      long long g = upb(l, a);\n      for (long long i = l; i < g; ++i) ans += (i % a % b != i % b % a);\n      for (; g + a <= k; g += a) ans += cnt[(g / a) % b];\n      ans += ((p - k) / c) * sum;\n      for (; p + a - 1 <= r; p += a) ans += cnt[(p / a) % b];\n      for (; p <= r; ++p) ans += (p % a % b != p % b % a);\n    }\n    cout << ans << ' ';\n  }\n  cout << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) run();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom math import ceil\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a%b)\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, stdin.readline().split())\n\n    if max(a, b)%min(a, b) == 0:\n        for _ in range(q):\n            l, r = map(int, stdin.readline().split())\n            print(0)\n\n    else:\n        lcm = (a*b)//gcd(a, b)\n        m = max(a, b)\n        how = lcm - m\n        ans = []\n        for _ in range(q):\n            l, r = map(int, stdin.readline().split())\n\n            # From solution page. if b>=a, the statement is NOT satisfied for every LCM-b quantities. We have to find out how many LCM-b quantities exist in [l, r]. Find the quantity in [0, l-1]. Find it in [0, r]. Subtract the two to get [l, r]\n            \n            # for [0, l-1]\n            x1 = ((l-1)//lcm)*how\n            final1 = (l-1)%lcm\n            x1 += max(0, final1 - m + 1)\n\n            # repeat above steps for [0, r]\n            x2 = ((r)//lcm)*how\n            final2 = (r)%lcm\n            x2 += max(0, final2 - m + 1)\n\n            ans.append(x2-x1)\n        print(*ans)"
        },
        {
            "language": 3,
            "solution": "from math import gcd\ndef ans(numa,numb,gran):\n    return (gran//numa)*numb + min(gran%numa,numb)\nfor t in range(int(input())):\n    a,b,q=map(int,input().split())\n    num1 = gcd(a, b)\n    num2 = a*b//num1\n    num3 = max(a,b)\n    if a%b==0 or b%a==0:\n        for i in range(q):\n            input()\n        print('0 ' * q)\n    else:\n        for i in range(q):\n            l,r = map(int,input().split())\n            arra = ans(num2,num3,r+1)-ans(num2,num3,l)\n            print(r-l-arra+1,end=' ')\n        print()\n"
        },
        {
            "language": 3,
            "solution": "from math import *\ndef main():\n\n    from bisect import bisect_left as bl, bisect_right as br, insort\n    import sys\n    import heapq\n\n    from collections import defaultdict as dd, deque\n    def data(): return sys.stdin.readline().strip()\n    def mdata(): return map(int, data().split())\n    out = sys.stdout.write\n    # sys.setrecursionlimit(100000)\n\n    for t in range(int(data())):\n        a,b,q=mdata()\n        g=gcd(a,b)\n        lcm=a//g*b\n        ans=[]\n        for i in range(q):\n            l,r=mdata()\n            k1=l//lcm\n            k2=r//lcm\n            ans.append((k2-k1)*(lcm-max(a,b))-max(0,l-k1*lcm-max(a,b))+max(0,r-k2*lcm-max(a,b)+1))\n        out(' '.join(map(str,ans))+'\\n')\n\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 1,
            "solution": "#####################################   \nimport atexit, io, sys \nbuffer = io.BytesIO() \nsys.stdout = buffer\n@atexit.register \ndef write(): sys.__stdout__.write(buffer.getvalue())   \n##################################### \ndef gcd(a,b):\n\treturn a if b == 0 else gcd(b, a%b)\ndef lcm(a,b):\n\treturn a * b / gcd(a,b)\n\ndef compute(a,b):\n\tl = lcm(a,b)\n\th = [0] * l\n\tc = 0\n\tfor ii in xrange(l):\n\t\tif (ii % a) % b == (ii %b) % a: c +=1\n\t\th[ii] = c\n\treturn h\ndef f(n,h):\n\tt = len(h)\n\treturn ((n/t) * h[t-1]) + h[n%t]\nnt = int(raw_input())\n\nfor _ in xrange(nt):\n\ta,b,nq = map(int ,raw_input().split())\n\th = compute(a,b)\n\tfor __ in xrange(nq):\n\t\tl,r = map(int, raw_input().split())\n\t\tprint r- l +1 - (f(r,h) - f(l-1,h)),\n\tprint\n"
        },
        {
            "language": 3,
            "solution": "import math\n#from functools import lru_cache\n#import heapq\n#from collections import defaultdict\n#from collections import Counter\n#from collections import deque\n#from sys import stdout\n#from sys import setrecursionlimit\n#setrecursionlimit(10**7)\nfrom sys import stdin\ninput = stdin.readline\n\nINF = 10**9 + 7\nMAX = 10**7 + 7\nMOD = 10**9 + 7\n\ndef solve(x, l, c):\n    ans = (x//l)*c\n    ans += min(x%l+1, c)\n    return x - ans + 1\n    \nfor Ti in range(int(input().strip())):\n    a, b, q = [int(x) for x in input().strip().split()]\n    g = math.gcd(a, b)\n    l = a*b//g\n    c = max(a, b)\n    for qi in range(q):\n        ans = 0\n        s, e = [int(x) for x in input().strip().split()]\n        print(-solve(s-1, l, c) + solve(e, l, c), end = ' ')\n    print('')\n"
        },
        {
            "language": 3,
            "solution": "def soln_slow(a, b, n, l):\n    ct = 0\n    for x in range(1, n+1):\n        if (((x % a) % b) == ((x % b) % a)):\n            print(x, \"yes\")\n        else:\n            ct += 1\n            print(x, \"no\")\n    return ct\n\n# after every multliple of _b_ that is not a multiple of _a_ we see _b_\ndef soln(a, b, n, l):\n    mb = n // b \n    mbn = mb * b\n    ml = n // l \n    #print(locals())\n    if (mbn != (ml * l)):\n        return max(((mb - 1) - ml)*b + min((n - mbn) + 1, b), 0)\n    else:\n        return max((mb - ml)*b, 0)\n\ndef gcd(a,b):\n    while b:\n        a,b = b, a % b\n    return a\n        \ndef lcm(a,b):\n    return (a * b) // gcd(a, b)\n\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a,b = b,a\n    lc = lcm(a,b)\n    solns= []\n    for __ in range(q):\n        l, r = map(int, input().split())\n        solns.append(soln(a, b, r, lc) - soln(a, b, l - 1, lc))\n    print(\" \".join(map(str, solns)))\n\n        \n\n#import itertools\n#\n#for a, b in itertools.product(range(1,10), range(1, 10)):\n#    for z in range(1, a*b + 1):\n#        if a > b:\n#            a,b = b,a\n#        lc = lcm(a,b)\n#        s_slow = soln_slow(a,b,z,lc)\n#        s_fast = soln(a,b,z,lc) \n#        if soln(a,b,z,lc) != soln_slow(a,b,z,lc):\n#            print(\"ERROR\", locals())\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint nxt() {\n  int x;\n  cin >> x;\n  return x;\n}\nlong long int nxtl() {\n  long long int x;\n  cin >> x;\n  return x;\n}\nvoid SieveOfEratosthenes(int n, vector<int> &primes) {\n  bool prime[n + 1];\n  memset(prime, true, sizeof(prime));\n  for (int p = 2; p * p <= n; p++) {\n    if (prime[p] == true) {\n      for (int i = p * p; i <= n; i += p) prime[i] = false;\n    }\n  }\n  for (int p = 2; p <= n; p++)\n    if (prime[p]) primes.push_back(p);\n}\nlong long int max(long long int a, long long int b) {\n  if (a > b) return a;\n  return b;\n}\nlong long int power(long long int x, long long int y, long long int mod) {\n  long long int temp;\n  if (y == 0) return 1;\n  temp = power(x, y / 2, mod);\n  if (y % 2 == 0)\n    return (temp * temp) % mod;\n  else\n    return (((x * temp) % mod) * temp) % mod;\n}\nlong long int cal(vector<long long int> &prefix, long long int a,\n                  long long int b, long long int x);\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t = nxt();\n  while (t--) {\n    long long int a = nxtl(), b = nxt(), q = nxtl();\n    vector<int> v(a * b + 1, 0);\n    for (int i = 1; i <= a * b; i++) {\n      if ((i % a) % b != (i % b) % a) v[i] = 1;\n    }\n    vector<long long int> prefix(a * b + 1);\n    prefix[0] = 0;\n    for (int i = 1; i <= a * b; i++) prefix[i] = prefix[i - 1] + v[i];\n    while (q--) {\n      long long int test = 0;\n      long long int l = nxtl(), r = nxtl();\n      test = cal(prefix, a, b, r) - cal(prefix, a, b, l - 1);\n      cout << test << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\nlong long int cal(vector<long long int> &prefix, long long int a,\n                  long long int b, long long int x) {\n  long long int ret = 0;\n  ret = prefix[a * b] * (x / (a * b));\n  long long int rem = x % (a * b);\n  ret += prefix[rem];\n  return ret;\n}\n"
        },
        {
            "language": 3,
            "solution": "# Whatever the mind of man can conceive and believe, it can achieve. Napoleon Hill\n# by : Blue Edge - Create some chaos\n\ndef gcd(a,b):\n    if b==0:\n        return a\n    return gcd(b,a%b)\n\ndef lcm(a,b):\n    return (a*b)//gcd(a,b)\n\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    m,n=max(a,b),min(a,b)\n    lm=lcm(m,n)\n    p=[]\n    while q:\n        q-=1\n        l,r=map(int,input().split())\n        l1=l//lm + int(l%lm!=0)\n        l2=r//lm\n        if l%lm==0:\n            p1=0\n        else:\n            p1=lm-max(m,l%lm)\n\n        p2=max(m-1,r%lm)-m+1\n        mid=(l2-l1)*(lm-m)\n        # print(p1,mid,p2,l1,l2)\n        p.append(p1+p2+mid)\n\n    print(*p)\n"
        },
        {
            "language": 3,
            "solution": "from math import inf\n\ndef gcd(a, b):\n    if not b:\n        return a\n    return gcd(b, a % b)\n\nt = int(input())\n\n\nfor qq in range(t):\n    a, b, q = [int(i) for i in input().split()]\n    if a < b:\n        a, b = b, a\n    g = gcd(a, b)\n    e = b // g\n    #print(e)\n    for h in range(q):\n        l, r = [int(i) for i in input().split()]\n        if a % b:\n            s = r - l + 1\n            k = l // a \n            j = r // a\n            #print(j, k)\n            if not k % e:\n                s -= min((k + 1) * a - l, s)\n                k += 1\n            if not j % e:\n                s -= min(r - (j * a) + 1, s)\n                j -= 1\n            if j == k - 2:\n                print(0, end = ' ')\n                continue\n            j -= j % e\n            k += (e - k % e)\n            #print(j, k)\n            s -= ((j - k) // e + 1) * a\n            print(s, end = ' ')\n        else:\n            print(0, end = ' ')\n    print('')\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd,ceil,floor\nimport io,os\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\ndef lcm(a, b):\n    return abs(a*b) // gcd(a, b)\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    l=[]\n    for i in range(q):\n        l.append(list(map(int,input().split())))\n    fr1,fr2=lcm(a,b),max(a,b)\n    for s,e in l:\n        ans=0\n        t1=(s//fr1 +(1 if s % fr1 != 0 else 0))*fr1\n        t2=t1-fr1\n        if t1 < e:\n            kk=max(s,fr2+t2)\n            ans+=t1-kk\n            t3=(e//fr1 + (1 if e % fr1 != 0 else 0 ))*fr1\n            t4=t3-fr1\n            if e % fr1 == 0:\n                e-=1\n            if fr2 <= 0:\n                ans+=1\n            tt=e-(fr2+t4)\n            if tt >=0:\n                ans+=tt+1\n            else:\n                pass\n            ans+=((t4-t1)//fr1)*(fr1-fr2)\n            print(ans,end=\" \")\n        else:\n            if e % fr1 == 0:\n                e-=1\n            if fr2 <= 0:\n                ans+=1\n            kk=max(s,fr2+t2)\n            kk2=min(e,t1-1)\n            ans+=max(kk2-kk+1,0)\n            print(ans,end=\" \")\n    print()"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nlist_ = [0] * 201 * 201\n\ndef getSolve(list, n, target):\n\treturn list[n-1]*(target//n) + list[target % n]\n\nfor _ in range(num):\n\ta, b, q = [int(i) for i in input().split()]\n\tres = []\n\tfor i in range(1, a * b+1):\n\t\tlist_[i] = list_[i - 1]\n\t\tif i % a % b != i % b % a:\n\t\t\tlist_[i] += 1\n\n\tfor _ in range(q):\n\t\tl, r = [int(i) for i in input().split()]\n\t\tres.append(str(getSolve(list_, a*b, r) - getSolve(list_, a*b, l-1)))\n\tprint(\" \".join(res))"
        },
        {
            "language": 3,
            "solution": "import math \ndef func(a,b,l):\n\tstart = max(a,b)\n\tif start>l:\n\t\treturn 0 \n\tgc = (a*b)//math.gcd(a,b)\n\n\ttime = l//gc \n\tcount = 0 \n\tif time > 0 and gc*time+max(a,b)-1 <= l:\n\t\tcount = time+(max(a,b)-1)*time\n\telif time > 0 :\n\t\tcount = time+(max(a,b)-1)*(time-1)+(l%max(a,b))\n\t# print(gc,time,count)\n\treturn l-(count+start-1) \t\n\n\n\n\nfor _ in range(int(input())):\n\t(a,b,q) = map(int,input().split())\n\tli = []\n\tfor _ in range(q):\n\t\t(l,r) = map(int,input().split())\n\t\tli.append(func(a,b,r)-func(a,b,l-1))\n\tprint(*li)\n\n\n# a = 7\n# b = 10\n\n# count = 0 \n# for i in range(1,100):\n# \tif (i%a)%b != (i%b)%a:\n# \t\tcount+=1 \n# \telse:\n# \t\tprint(i)\n# print(25,count)\n# count = 0\n# for i in range(1,201):\n# \tif (i%a)%b != (i%b)%a:\n# \t\tcount+=1 \n# \telse:\n# \t\tprint(i)\n# print(25,count)\n"
        },
        {
            "language": 3,
            "solution": "\nimport sys\nfrom os import path\nif(path.exists('C:/Users/prana/Desktop/sublime/input.txt')):\n    sys.stdin = open(\"C:/Users/prana/Desktop/sublime/input.txt\",\"r\")\n    sys.stdout = open(\"C:/Users/prana/Desktop/sublime/output.txt\",\"w\")\n\n# ----------------------------------------------------------------------\nimport math\n\ndef solve():\n\n    abq=list(map(int,input().split()))\n    a=abq[0]\n    b=abq[1]\n    q=abq[2]\n    if a>b:\n        a^=b\n        b^=a\n        a^=b\n\n    an=[]\n    for i in range(q):\n        lr=list(map(int,input().split()))\n        l=lr[0]\n        r=lr[1]\n        # for i in range(l,r+1):\n        #     print(i,((i%a)%b),((i%b)%a),file = sys.stderr)\n        lc=(a*b)//math.gcd(a,b)\n        print(a,b,lc,file = sys.stderr)\n        ans=max(b,r)\n        if(b==lc):\n            an.append(0)\n        else:\n            if(ans==b and b!=r):\n                an.append(0)\n            else:\n                p=max(b,l)\n                \n                rm=r%lc\n                \n                lm=p%lc\n                \n                \n                ch=(r//lc-p//lc)\n                temp1=(ch)*(b)\n                templ=max(0,b-lm)\n                tempr=max(1,b-rm)-1\n                temp=temp1-tempr+templ\n                n=r-p+1\n                print(temp1,templ,tempr,file = sys.stderr)\n    \n                \n                ans=n-temp\n               \n                an.append(ans)\n                print(lm,rm,ch,r-p,temp1,file = sys.stderr)\n                \n\n    for i in an:\n        print(i,end=\" \")\n    print(end=\"\\n\")\n\nT = 1\nT = int(input())\nfor _ in range(1,T+1):\n    print(\"Case #\", _ , file = sys.stderr)\n    solve()\n                \n    "
        },
        {
            "language": 3,
            "solution": "def gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\ndef ec(x,y):\n    return x*y/gcd(x,y)\n\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    for __ in range(q):\n        l,r = map(int,input().split())\n        tem = int(ec(a,b))\n        if r >= b:\n            l = max(l,b)\n            res = r-l+1\n            n = r//tem-(l-1)//tem\n            res -= n*max(a,b)\n            res += max(a,b)-r%tem-1 if r%tem < max(a,b) else 0\n            res -= max(a,b)-l%tem if l%tem < max(a,b) and l % tem != 0 else 0\n            print(res)\n        else:\n            print(0)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\nconst long long int INFLL = 0x3f3f3f3f3f3f3f3fLL;\nconst long double PI = 3.141592653589793;\nconst int MAX = 4e4 + 5;\nint v[MAX], n;\nvoid build(int a, int b) {\n  n = a * b;\n  v[0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    v[i] = v[i - 1] + (((i % a) % b) != ((i % b) % a));\n  }\n}\nlong long int query(long long int p) {\n  long long int aux = p / n;\n  int rem = p % n;\n  return v[n] * 1LL * aux + v[rem];\n}\nlong long int query(long long int l, long long int r) {\n  return query(r) - query(l - 1);\n}\nvoid solve() {\n  int a, b, q;\n  cin >> a >> b >> q;\n  build(a, b);\n  for (int i = 0; i < q; ++i) {\n    long long int l, r;\n    cin >> l >> r;\n    cout << query(l, r) << \" \\n\"[i == q - 1];\n  }\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n# import sys\n# input=sys.stdin.buffer.readline\n\ndef lcm(a,b):\n    return (a*b)//math.gcd(a,b)\n\ndef solve(r,y,b):\n    if r == 0:\n        return 0\n    else:\n        # y is the lcm\n        div=r//y\n        tot=r\n        prod=div*y\n        if div != 0 :\n            tot=tot-(min(b,r-prod+1))\n            tot=tot-(div-1)*(b)\n        tot=tot-min(r,b-1)\n        return tot\n\n\nt=int(input())\nfor _ in range(t):\n    a,b,q=[int(c) for c in input().split()]\n    a,b=min(a,b),max(a,b)\n    for i in range(q):\n        l,r=[int(c) for c in input().split()]\n        lc=lcm(a,b)\n        if lc == b or r < b:\n            print(0,end=\" \")\n        else:\n            ans=solve(r,lc,b)\n            if l > 1:\n                ans-=solve(l-1,lc,b)\n            print(ans,end=\" \")\n    print()\n                        "
        },
        {
            "language": 3,
            "solution": "import math\nt = int(input())\nfor i in range(t):\n    a,b,q = map(int,input().split())\n    m = (a*b)//math.gcd(a,b)\n    n = max(a,b)\n    for j in range(q):\n        l,r = map(int,input().split())\n        print(r-l+1-(n*(r//m-l//m+1) - min(n,l%m) - max(0,n-r%m-1)))"
        },
        {
            "language": 4,
            "solution": "/**\n * ******* Created  on 26/4/20 8:02 PM*******\n */\n\nimport java.io.*;\nimport java.util.*;\n\npublic class C1342 implements Runnable {\n\n    private static final int MAX = (int) (1E5 + 5);\n    private static final int MOD = (int) (1E9 + 7);\n    private static final long Inf = (long) (1E14 + 10);\n    private static final double eps = (double) (1E-9);\n\n    private void solve() throws IOException {\n        int t = 1;\n        t = reader.nextInt();\n        while (t-- > 0) {\n            long a = reader.nextInt();\n            long b =reader.nextInt();\n            if(a >b ){\n                long temp = a;\n                a =b;\n                b=temp;\n            }\n            long gcd = gcd(a,b);\n            long lcm = (a*b)/gcd;\n            int q =reader.nextInt();\n            while (q-- >0){\n                long l = reader.nextLong();\n                long r = reader.nextLong();\n                long ans =0;\n                long res = get(r,a,b,lcm);\n                res -=get(l-1,a,b,lcm);\n\n                writer.print(res +\" \");\n            }\n            writer.println();\n        }\n    }\n\n    private long get(long r, long a, long b, long lcm) {\n\n        long mod = r%lcm;\n        long ans = (r/ lcm) *1L*(lcm -Math.max(a,b));\n        ans += Math.max(0, mod - b+1);\n        return ans;\n    }\n\n\n    private long gcd(long a, long b) {\n        if(b ==0 )return a;\n        return gcd(b, a%b);\n    }\n\n    public static void main(String[] args) throws IOException {\n        try (Input reader = new StandardInput(); PrintWriter writer = new PrintWriter(System.out)) {\n            new C1342().run();\n        }\n    }\n\n    StandardInput reader;\n    PrintWriter writer;\n\n    @Override\n    public void run() {\n        try {\n            reader = new StandardInput();\n            writer = new PrintWriter(System.out);\n            solve();\n            reader.close();\n            writer.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    interface Input extends Closeable {\n        String next() throws IOException;\n\n        String nextLine() throws IOException;\n\n        default int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        default long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        default double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        default int[] readIntArray() throws IOException {\n            return readIntArray(nextInt());\n        }\n\n        default int[] readIntArray(int size) throws IOException {\n            int[] array = new int[size];\n            for (int i = 0; i < array.length; i++) {\n                array[i] = nextInt();\n            }\n            return array;\n        }\n\n        default long[] readLongArray(int size) throws IOException {\n            long[] array = new long[size];\n            for (int i = 0; i < array.length; i++) {\n                array[i] = nextLong();\n            }\n            return array;\n        }\n    }\n\n    private static class StandardInput implements Input {\n        private final BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\n        private StringTokenizer stringTokenizer;\n\n        @Override\n        public void close() throws IOException {\n            reader.close();\n        }\n\n        @Override\n        public String next() throws IOException {\n            if (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {\n                stringTokenizer = new StringTokenizer(reader.readLine());\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        @Override\n        public String nextLine() throws IOException {\n            return reader.readLine();\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def compute_gcd(x, y):\n\n   while(y):\n       x, y = y, x % y\n   return x\n\n# This function computes LCM\ndef compute_lcm(x, y):\n   lcm = (x*y)//compute_gcd(x,y)\n   return lcm\n\n\n\n\n\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    l=[]\n    if a>b:\n        a,b=b,a\n    lcm=compute_lcm(a,b)\n    ans=[]\n    for i in range(q):\n        l.append(list(map(int,input().split())))\n        \n        quo=l[i][1]//lcm\n        rem=l[i][1]%lcm\n        val=lcm-b\n        val2=max(0,rem-b+1)\n        x=quo*val+val2\n\n        quo=(l[i][0]-1)//lcm\n        rem=(l[i][0]-1)%lcm\n        val=lcm-b\n        val2=max(0,rem-b+1)\n        x-=quo*val+val2\n        ans.append(x)\n\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "import sys, os, io\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math,datetime,functools,itertools,operator,bisect,fractions,statistics\nfrom collections import deque,defaultdict,OrderedDict,Counter\nfrom fractions import Fraction\nfrom decimal import Decimal\nfrom sys import stdout\nfrom heapq import heappush, heappop, heapify ,_heapify_max,_heappop_max,nsmallest,nlargest\n\ndef main():\n    mod=1000000007\n    # InverseofNumber(mod)\n    # InverseofFactorial(mod)\n    # factorial(mod)\n    starttime=datetime.datetime.now()\n    if(os.path.exists('input.txt')):\n        sys.stdin = open(\"input.txt\",\"r\")\n        sys.stdout = open(\"output.txt\",\"w\")\n    def findcount(r,lcm,b):\n        div=r//lcm\n        prod=div*lcm\n        tot=r\n        if div!=0:\n            tot-=min(b,r-prod+1)\n            tot-=(div-1)*b\n        return tot-min(r,b-1)\n    tc=ri()\n    for _ in range(tc):\n        a,b,q= ria()\n        ansq=[]\n        a,b=min(a,b),max(a,b)\n        lcm=(a*b)//(math.gcd(a,b))\n        for i in range(q):\n            l,r=ria()\n            if lcm==b or r<b:\n                ansq.append(0)\n                continue\n            cnt=findcount(r,lcm,b)\n            if l>1:\n                cnt-=findcount(l-1,lcm,b)\n            ansq.append(cnt)\n        print(*ansq)\n                      \n\n      \n                            \n            \n        \n        \n            \n            \n            \n            \n            \n        \n        \n        \n            \n        \n        \n        \n            \n        \n        \n        \n        \n            \n            \n        \n        \n        \n        \n        \n        \n        \n                \n                \n                    \n        \n        \n            \n            \n        \n                \n            \n            \n        \n        \n        \n        \n                \n        \n            \n        \n                \n        \n        \n            \n        \n       \n            \n\n                \n        \n        \n        \n   \n            \n        \n        \n        \n        \n            \n        \n                \n        \n        \n        \n            \n            \n        \n        \n            \n        \n        \n\n        \n        \n            \n        \n        \n            \n        \n                        \n\n        \n        \n            \n     \n        \n        \n            \n        \n        \n                \n            \n        \n        \n        \n                \n            \n        \n\n            \n             \n        \n            \n        \n        \n        \n                \n        \n            \n        \n        \n        \n        \n                \n        \n        \n            \n        \n        \n        \n        \n                \n        \n    #<--Solving Area Ends\n    endtime=datetime.datetime.now()\n    time=(endtime-starttime).total_seconds()*1000\n    if(os.path.exists('input.txt')):\n        print(\"Time:\",time,\"ms\")  \n    \n                \nclass FastReader(io.IOBase):\n    newlines = 0\n\n    def __init__(self, fd, chunk_size=1024 * 8):\n        self._fd = fd\n        self._chunk_size = chunk_size\n        self.buffer = io.BytesIO()\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self, size=-1):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size if size == -1 else size))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n\nclass FastWriter(io.IOBase):\n\n    def __init__(self, fd):\n        self._fd = fd\n        self.buffer = io.BytesIO()\n        self.write = self.buffer.write\n\n    def flush(self):\n        os.write(self._fd, self.buffer.getvalue())\n        self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass FastStdin(io.IOBase):\n    def __init__(self, fd=0):\n        self.buffer = FastReader(fd)\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nclass FastStdout(io.IOBase):\n    def __init__(self, fd=1):\n        self.buffer = FastWriter(fd)\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.flush = self.buffer.flush\n\n\nif __name__ == '__main__':\n    sys.stdin = FastStdin()\n    sys.stdout = FastStdout()\n    main()\n    "
        },
        {
            "language": 3,
            "solution": "import io\nimport os\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nif __name__== \"__main__\":\n    for _ in range(int(input())):\n        a,b,q=map(int,input().split())\n        c=[0]\n        for i in range(1,a*b+1):\n            c.append(c[-1])\n            if (i%a)%b!=(i%b)%a:\n                c[-1]+=1\n        for i in range(q):\n            l,r=map(int,input().split())\n            l=l-1\n            print((r//(a*b))*c[-1]+c[r%(a*b)]-((l//(a*b))*c[-1]+c[l%(a*b)]),end=\" \")\n        print(\"\")"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nimport math\nfor _ in range(t):\n    a,b,q = map(int,input().split())\n    if a>b:\n        a,b = b,a\n    ans = []\n\n    lr = [tuple(map(int, input().split())) for i in range(q)]\n    if a == b:\n        print(*[0]*q)\n        continue\n\n    for l,r in lr:\n        if r < b:\n            ans.append(0)\n        else:\n\n            x = (a*b)//math.gcd(a,b)\n            R = (r // x) * (x - b)\n            R += max(0,(r % x) - b + 1)\n\n            L = ((l-1) // x) * (x - b)\n            L += max(0, ((l-1) % x) - b +1)\n\n            # print(R,L)\n\n            ans.append(R - L)\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    while a and b:\n        if a > b:\n            a %= b\n        else:\n            b %= a\n    return a + b\n\n\nt = int(input())\nfor ii in range(t):\n    a, b, q = map(int, input().split())\n    a, b = max(a, b), min(a, b)\n    nok = a * b // gcd(a, b)\n    #print(nok)\n    for j in range(q):\n        l, r = map(int, input().split())\n        if a % b == 0:\n            print(0, end=' ')\n        else:\n            cnt = 0\n            if l % nok < a:\n                cnt += min(a - l % nok, r - l + 1)\n            left = (l // nok + 1) * nok\n            if r >= left and r % nok < a:\n                cnt += r % nok + 1\n                right = (r // nok) * nok - 1\n            else:\n                right = r\n            if right >= left:\n                cnt += ((right // nok - left // nok + 1) * a)\n            #print(left, right, cnt)\n            print(r - l + 1 - cnt, end=' ')\n    print()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \npublic class C implements Runnable {\n\tboolean judge = false;\n\tFastReader scn;\n\tPrintWriter out;\n\tString INPUT = \"\";\n \n\tpublic static int getl(int x, int y) {\n\t\treturn (x * y)/geth(Math.max(x,y), Math.min(x, y));\n\t}\n\t\n\tpublic static int geth(int x, int y) {\n\t\tif(y == 0)\n\t\t\treturn x;\n\t\telse\n\t\t\treturn geth(y, x%y);\n\t}\n\t\n\tvoid solve() {\n\t\t//System.out.println(\"hello\");\n\t\tint t = scn.nextInt();\n\t\t\n\t\tfor(int a=0;a<t;a++) {\n\t\t\tint x = scn.nextInt();\n\t\t\tint y = scn.nextInt();\n\t\t\tint q = scn.nextInt();\n\t\t\t\n\t\t\tint lc = getl(x, y);\n\t\t\tint count = 0;\n\t\t\tint[] pre = new int[lc + 1];\n\t\t\tint[] suf = new int[lc + 1];\n\t\t\tfor(int i=1;i<=lc;i++) {\n\t\t\t\tif((i%x)%y != (i%y)%x)\n\t\t\t\t\tcount++;\n\t\t\t\t\n\t\t\t\tpre[i] = count;\n\t\t\t}\n\t\t\tint cc = 0;\n\t\t\tfor(int i=lc;i>=1;i--) {\n\t\t\t\tif((i%x)%y != (i%y)%x)\n\t\t\t\t\tcc++;\n\t\t\t\t\n\t\t\t\tsuf[lc - i] = cc;\n\t\t\t}\n\t\t\t//System.out.println(count + \" \"+lc);\n\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\tlong l = scn.nextLong();\n\t\t\t\tlong r = scn.nextLong();\n\t\t\t\t\n\t\t\t\tlong ceil = l/lc;\n\t\t\t\tif(l%lc !=0)\n\t\t\t\t\tceil++;\n\t\t\t\tlong low = (long)ceil * lc;\n\t\t\t\t\n\t\t\t\tlong high = (long)(r/lc) * lc;\n\t\t\t\n\t\t\t\t//System.out.println(low+\"- \"+high);\n\t\t\t\tlong div = (high - low)/lc + 1;\n\t\t\t\t\n\t\t\t\tif(div == 0) {\n\t\t\t\t\tint c = pre[(int)(r%lc)] - pre[(int)((l-1)%lc)];\n\t\t\t\t\t\n\t\t\t\t\t//System.out.println(\"hey\");\n\t\t\t\t\tout.print(c+\" \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse {\n\t\t\t\t\tint c = suf[(int)(low - l)] + pre[(int)(r - high)];\n\t\t\t\t\t\n\t\t\t\t\tout.print(((div-1) * count + c)+\" \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t\t\n\t\tout.flush();\n\t}\n \n\tlong f(int a, int b, int p, long x, long diff, long[] pre) {\n\t\tlong times = x / p;\n\t\tlong rv = diff * times + pre[(int) (x % p)];\n\t\treturn rv;\n\t}\n \n\tint gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n \n\tpublic void run() {\n\t\tlong time = System.currentTimeMillis();\n\t\tboolean oj = System.getProperty(\"ONLINE_JUDGE\") != null || judge;\n\t\tout = new PrintWriter(System.out);\n\t\tscn = new FastReader(true);\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!oj) {\n\t\t\tSystem.out.println(Arrays.deepToString(new Object[] { System.currentTimeMillis() - time + \" ms\" }));\n\t\t}\n\t}\n \n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new C(), \"Main\", 1 << 28).start();\n\t}\n \n\tclass FastReader {\n\t\tInputStream is;\n \n\t\tpublic FastReader(boolean onlineJudge) {\n\t\t\tis = onlineJudge ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\t}\n \n\t\tbyte[] inbuf = new byte[1024];\n\t\tpublic int lenbuf = 0, ptrbuf = 0;\n \n\t\tint readByte() {\n\t\t\tif (lenbuf == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (ptrbuf >= lenbuf) {\n\t\t\t\tptrbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn inbuf[ptrbuf++];\n\t\t}\n \n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n \n\t\tint skip() {\n\t\t\tint b;\n\t\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t\t;\n\t\t\treturn b;\n\t\t}\n \n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n \n\t\tchar nextChar() {\n\t\t\treturn (char) skip();\n\t\t}\n \n\t\tString next() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n \n\t\tString nextLine() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((!isSpaceChar(b) || b == ' ')) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n \n\t\tchar[] next(int n) {\n\t\t\tchar[] buf = new char[n];\n\t\t\tint b = skip(), p = 0;\n\t\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t\t}\n \n\t\tint nextInt() {\n\t\t\tint num = 0, b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n \n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n \n\t\tlong nextLong() {\n\t\t\tlong num = 0;\n\t\t\tint b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n \n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n \n\t\tchar[][] nextMatrix(int n, int m) {\n\t\t\tchar[][] map = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next(m);\n\t\t\treturn map;\n\t\t}\n \n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n \n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n \n\t\tint[][] next2DInt(int n, int m) {\n\t\t\tint[][] arr = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tlong[][] next2DLong(int n, int m) {\n\t\t\tlong[][] arr = new long[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLongArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tint[] shuffle(int[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tint c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tlong[] shuffle(long[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tlong c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tint[] uniq(int[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tint[] rv = new int[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n \n\t\tlong[] uniq(long[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tlong[] rv = new long[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n \n\t\tint[] reverse(int[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tlong[] reverse(long[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tint[] compress(int[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tint[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tlong[] compress(long[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tlong[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n \n\t\tvoid deepFillInt(Object array, int val) {\n\t\t\tif (!array.getClass().isArray()) {\n\t\t\t\tthrow new IllegalArgumentException();\n\t\t\t}\n\t\t\tif (array instanceof int[]) {\n\t\t\t\tint[] intArray = (int[]) array;\n\t\t\t\tArrays.fill(intArray, val);\n\t\t\t} else {\n\t\t\t\tObject[] objArray = (Object[]) array;\n\t\t\t\tfor (Object obj : objArray) {\n\t\t\t\t\tdeepFillInt(obj, val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n \n\t\tvoid deepFillLong(Object array, long val) {\n\t\t\tif (!array.getClass().isArray()) {\n\t\t\t\tthrow new IllegalArgumentException();\n\t\t\t}\n\t\t\tif (array instanceof long[]) {\n\t\t\t\tlong[] intArray = (long[]) array;\n\t\t\t\tArrays.fill(intArray, val);\n\t\t\t} else {\n\t\t\t\tObject[] objArray = (Object[]) array;\n\t\t\t\tfor (Object obj : objArray) {\n\t\t\t\t\tdeepFillLong(obj, val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "#for _ in range(int(input())):\n#dt = {} for i in x: dt[i] = dt.get(i,0)+1\n#dt = {k:v for k,v in sorted(x.items(), key=lambda i: i[1])}\nipnl = lambda n: [int(input()) for _ in range(n)]\ninp = lambda :int(input())\nip = lambda :[int(w) for w in input().split()]\nmp = lambda :map(int,input().split())\nfrom math import gcd\nfor _ in range(int(input())):\n    a,b,q = mp()\n    flag = 0\n    if max(a,b)%min(a,b) == 0:\n        flag = 1\n    f = []\n    for i in range(q):\n        l,r = mp()\n        if flag: \n            f.append(0)\n            continue\n        match = 0\n        mx = max(a,b)\n        p = a*b//gcd(a,b)\n        p1 = l//p\n        p2 = r//p\n        t1 = p*p1\n        for j in range(mx):\n            if t1 >= l:\n                match += 1\n            t1 += 1\n        t2 = p*p2\n        for j in range(mx):\n            if t2 <= r:\n                match += 1\n            t2 += 1\n        ans = 0\n        match += ((p2-p1)-1)*mx\n        tt = r-l+1\n        ans = tt - match\n        f.append(ans)\n    print(*f)\n        "
        },
        {
            "language": 4,
            "solution": "/*\nSome say the world will end in fire,\nSome say in ice.\nFrom what I've tasted of desire\nI hold with those who favor fire.\nBut if it had to perish twice,\nI think I know enough of hate\nTo say that for destruction ice\nIs also great\nAnd would suffice.\n*/\nimport java.io.*;\nimport java.util.*;\n \npublic final class Main{\n    \n    static class DSU{\n        int[] parent;\n        int[] size;\n        DSU(int n){\n            parent = new int[n + 1];\n            size = new int[n + 1];\n            for(int i = 0; i <= n; i++){\n                parent[i] = i;\n                size[i] = 1;\n            }\n        }\n        int getRoot(int i){\n            while(i != parent[i]){\n                parent[i] = parent[parent[i]];\n                i = parent[i];\n            }\n            return i;\n        }\n        boolean find(int i, int j){\n            return (getRoot(i) == getRoot(j)) ? true : false;\n        }\n        void union(int i, int j){\n            if(find(i, j))  return;\n            int rooti = getRoot(i);\n            int rootj = getRoot(j);\n            if(size[rooti] > size[rootj]){\n                parent[rootj] = rooti;\n                size[rooti] += size[rootj];\n            }\n            else{\n                parent[rooti] = rootj;\n                size[rootj] += size[rooti];\n            }\n        }\n    }\n    \n    public static final long MOD = 1000000007;\n    public static final int limit = 1000005;\n    \n    public static void buildSatisfied(int[] satisfied, int a, int b){\n        for(int i = 1; i < satisfied.length; i++){\n            satisfied[i] += satisfied[i - 1] + ( ( ( (i % a) % b) == ( (i % b) % a)  ) ? 0 : 1 ) ;\n        }\n    }\n    \n    public static long getCountTillX(int[] satisfied, int len, long x){\n        long result = (long) (x / len) * (long) satisfied[len];\n        result += (long) satisfied[(int) (x % len)];\n        return result;\n    }\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n \n        int t = in.nextInt();\n        //int t=1;\n        while (t-- > 0) {\n            //w.println(n);\n            int a, b, q;\n            a = in.nextInt();\n            b = in.nextInt();\n            q = in.nextInt();\n            \n            int len = a * b;\n            int[] satisfied = new int[len + 5];\n            buildSatisfied(satisfied, a, b);\n            \n            while(q-- > 0){\n                long l = in.nextLong();\n                long r = in.nextLong();\n                long answer = getCountTillX(satisfied, len, r) - getCountTillX(satisfied, len, l - 1);\n                w.print(answer + \" \");\n            }\n            w.println();\n        }\n        w.close();\n    }\n    \n    static class InputReader {\n \n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n        private SpaceCharFilter filter;\n \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n \n        public int snext() {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) {\n                curChar = 0;\n                try {\n                    snumChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n \n        public int nextInt() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = snext();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n \n        public long nextLong() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = snext();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n \n        public int[] nextIntArray(int n) {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n \n        public String readString() {\n            int c = snext();\n            while (isSpaceChar(c)) {\n                c = snext();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n \n        public String nextLine() {\n            int c = snext();\n            while (isSpaceChar(c))\n                c = snext();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n \n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n \n        private boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n \n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\n\ndef lcm(p, q):\n    return p*q//gcd(p, q)\n\n\ndef solve(mod, cmax, l, r):\n    lmod, ldiv = l % mod, l // mod\n    rmod, rdiv = (r + 1) % mod, (r + 1) // mod\n    return  r - l - ((rdiv - ldiv) * cmax - min(cmax, lmod) + min(cmax, rmod)) + 1\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = [int(i) for i in input().split()]\n    ans = []\n    for _ in range(q):\n        m, c = lcm(a, b), max(a, b)\n        left, right = [int(i) for i in input().split()]\n        ans.append(solve(m, c, left, right))\n    print(' '.join([str(i) for i in ans]))\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys,math\ninput = sys.stdin.buffer.readline\n\n\ndef f(x,b,g,lcm):\n    seq,rest = divmod(x,lcm)\n    return seq*(lcm-b) + max(0,rest-b+1)\n\n\nT = int(input())\nfor testcase in range(T):\n    a,b,q = map(int,input().split())\n    if a > b:\n        a,b = b,a\n    g = math.gcd(a,b)\n    lcm = a*b//g\n\n\n    res = []\n    for i in range(q):\n        ll,rr = map(int,input().split())\n        res.append(f(rr,b,g,lcm)-f(ll-1,b,g,lcm))\n    print(*res)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int T = in.nextInt();\n            while (T-- > 0) {\n                int a = in.nextInt();\n                int b = in.nextInt();\n                int q = in.nextInt();\n                while (q-- > 0) {\n\n                    long l = in.nextLong();\n                    long r = in.nextLong();\n                    if (a == b) {\n                        out.println(0);\n                    } else {\n                        if (a < b) {\n                            int temp = a;\n                            a = b;\n                            b = temp;\n                        }\n                        long every = b / MathUtils.gcd(a, b);\n                        long rCount = cnt(r, every, a);\n                        long lCount = cnt(l - 1, every, a);\n                        out.println((r - l + 1) - (rCount - lCount));\n                    }\n                }\n            }\n        }\n\n        long cnt(long r, long every, long a) {\n            long less = r / a;\n            if (less % every == 0) {\n                return a * ((less) / every) + r - less * a + 1;\n            }\n            return a * ((less) / every) + a;\n        }\n\n    }\n\n    static class MathUtils {\n        public static int gcd(int a, int b) {\n            if (a == 0) {\n                return b;\n            }\n            return gcd(b % a, a);\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nimport sys\nfrom math import gcd\nfrom itertools import accumulate\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\ndef lcm(x, y): return (x * y) // gcd(x, y)\n\nfor _ in range(INT()):\n    mod1, mod2, Q = MAP()\n\n    N = lcm(mod1, mod2)\n    ok = [0] * N\n    for i in range(N):\n        if i%mod1%mod2 != i%mod2%mod1:\n            ok[i] = 1\n    acc = [0] + list(accumulate(ok))\n\n    ans = [0] * Q\n    for i in range(Q):\n        l, r = MAP()\n        ln = l // N\n        rn = r // N\n        segcnt = rn - ln\n        modl = l % N\n        modr = r % N\n        cnt = acc[N] - acc[modl] - (acc[N] - acc[modr+1])\n        ans[i] = segcnt * acc[N] + cnt\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nfrom sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\nfrom bisect import bisect_left \nfrom bisect import bisect_right\n \ndef L():\n    return list(map(int, stdin.readline().split()))\n \ndef In():\n    return map(int, stdin.readline().split())\n \ndef I():\n    return int(stdin.readline())\n \nP = 1000000007\n    \ndef main():\n    for t in range(I()):\n        a, b, q = In()\n        pd = a*b\n        arr = [0 for i in range(pd)]\n        for i in range(1, pd):\n            arr[i] = arr[i-1] + (((i)%a)%b != ((i)%b)%a)\n        ans = []\n        for i in range(q):\n            l, r = In()\n            val = (r//pd)*arr[-1] + arr[r%pd]\n            val -= ((l-1)//pd)*arr[-1] + arr[(l-1)%pd]\n            ans.append(val)\n        print(*ans)\n        \n    \nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 3,
            "solution": "import math\nfrom sys import stdin\ninput = stdin.readline\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n\n    if a > b:\n        a, b = b, a\n\n    bb = b\n    \n    g = math.gcd(a, b)\n    m = a // g\n    gg = b * m\n\n    for x in range(q):\n        l, r = map(int, input().split())\n\n        m1, m2 = l // gg, r // gg\n        n1, n2 = l % gg, r % gg\n\n        if m1 != m2:\n            c1 = 0 if (bb - n1) < 0 else bb - n1\n            c2 = bb if (n2 + 1) > bb else n2 + 1\n            pp = m2 - m1 - 1\n            ga = c1 + c2 + pp * bb\n\n        else:\n            if n2 > b - 1:\n                n2 = b - 1\n\n            ga = 0 if n2 - n1 + 1 < 0 else n2 - n1 + 1\n\n        print(r - l + 1 - ga, end = ' ')\n\n    print()"
        },
        {
            "language": 3,
            "solution": "import math\nt=int(input())\nfor _ in range(t):\n    a,b,q=[int(x) for x in input().split()]\n    g=math.gcd(a,b)\n    for _ in range(q):\n        l,r=[int(x) for x in input().split()]\n        a,b=min(a,b),max(a,b)\n        x=r//b\n        y=l//b\n        ct=0\n        A=a//g\n        if x==y:\n            if x%A==0: ct=r-l+1\n            else: ct=0\n        else:\n            if y%A==0: ct+=b*(y+1)-l\n            if x%A==0: ct+=r-b*x+1\n            ct+=b*((x-1)//A-y//A)\n        print(r-l+1-ct,end=\" \")\n    print()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class YetAnotherCountingProblemCF {\n    static boolean[] condn = new boolean[40001];\n    static int[] count = new int[40001];\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while(t-- != 0) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int q = sc.nextInt();\n            Arrays.fill(condn, false);\n            Arrays.fill(count, 0);\n            preComp(a, b);\n            while(q-- != 0) {\n                long l = sc.nextLong();\n                long r = sc.nextLong();\n                System.out.print(solve(l, r, a, b) + \" \");\n            }\n            System.out.println();\n        }\n    }    \n\n    static void preComp(int a, int b) {\n        int cnt = 0;\n        for(int i=0; i<=(a*b); i++) {\n            int c1 = (i%a)%b;\n            int c2 = (i%b)%a;\n            if(c1 != c2) {\n                condn[i] = true;\n                cnt++;\n            }\n            count[i] = cnt;\n        }\n    }\n\n    static long solve(long l, long r, int a, int b) {\n        long cntr = count(r, a, b);\n        long cntl = count(l-1, a, b);\n        return cntr - cntl;\n    }\n    //Count from 0 to r\n    static long count(long r, int a, int b) {\n        int x = a * b;\n        long ans = 0;\n        if(x >= 1)\n            ans = (long)(r/x) * (long)count[x-1];\n        ans += count[(int)(r%x + x)%x];\n        return ans;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\ndef gcd(l,r):\n\tif l == 0:\n\t\treturn r\n\treturn gcd(r%l, l)\n\ndef fun(x,lcm,b):\n\tquo = x//lcm\n\tsub = quo*b\n\tsub += min(b,x - lcm*quo)\n\t#print(\"sub :\",sub)\n\treturn x - sub\n\nfor _ in range(t):\n\ta,b,q = list(map(int, input().strip().split()))\n\tif a>b:\n\t\ta,b = b,a\n\tans = []\n\tfor i in range(q):\n\t\tres = 0\n\t\tl,r = list(map(int, input().strip().split()))\n\t\tlcm = (a*b)//gcd(a,b)\n\t\t\n\t\tres = fun(r+1,lcm,b) - fun(l,lcm,b)\n\t\tans.append(max(0,res))\n\tfor i in ans:\n\t\tprint(i, end = ' ')\n\tprint()"
        },
        {
            "language": 4,
            "solution": "/**\n * @author egaeus\n * @mail sebegaeusprogram@gmail.com\n * @veredict Accepted\n * @url <https://codeforces.com/problemset/problem/1342/C>\n * @category math\n * @date 27/04/2012\n **/\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Integer.parseInt;\n\npublic class CF1342C {\n    public static void main(String args[]) throws Throwable {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        int T = parseInt(in.readLine());\n        StringBuilder sb = new StringBuilder();\n        for (int t = 0; t++ < T;) {\n            StringTokenizer st = new StringTokenizer(in.readLine());\n            long A = parseInt(st.nextToken()), B = parseInt(st.nextToken()), Q = parseInt(st.nextToken()), MOD = A*B;\n            long s = 0;\n            long[] values = new long[(int)MOD];\n            for(long i = 0; i < MOD; i++) {\n                if ((i % A) % B != (i % B) % A) {\n                    s++;\n                }\n                values[(int)i]=s;\n            }\n\n            for(int q = 0; q < Q; q++) {\n                st = new StringTokenizer(in.readLine());\n                long L = Long.parseLong(st.nextToken()), R = Long.parseLong(st.nextToken());\n                if(q>0)sb.append(\" \");\n                sb.append(f(s, MOD, R, A, B, values)-f(s, MOD, L-1, A, B, values));\n            }\n            sb.append(\"\\n\");\n        }\n        System.out.print(new String(sb));\n    }\n\n    static long f(long s, long MOD, long I, long A, long B, long[] values) {\n        long result = (I / MOD) * s;\n        return result + values[(int)(I%MOD)];\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "def main_function():\n    from sys import stdin\n    from sys import stdout\n    input = stdin.readline\n    print = stdout.write\n\n    def count_good(bound: int):\n        return bound // pack * good_in_pack[-1] + good_in_pack[bound % pack]\n\n    t = int(input())\n    for _ in range(t):\n        a, b, query = list(map(int, input().split()))\n        a, b = min(a, b), max(a, b)\n        pack = a * b\n        ans = ['0'] * query\n        good_in_pack = [0] * pack\n        for x in range(1, pack):\n            if x % a % b != x % b % a:\n                good_in_pack[x] = good_in_pack[x - 1] + 1\n            else:\n                good_in_pack[x] = good_in_pack[x - 1]\n        for q_ix in range(query):\n            l, r = list(map(int, input().split()))\n            ans[q_ix] = str(count_good(r) - count_good(l - 1))\n        print(' '.join(ans) + '\\n')\n\n\nif __name__ == '__main__':\n    main_function()"
        },
        {
            "language": 3,
            "solution": "import sys\nimport heapq\nimport math\nimport bisect\n\ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n \ndef rinput():\n    return map(int, input().split())\n\ndef rlinput():\n    return list(map(i, input().split()))\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef main():\n    def pro(x):\n        return len(w) * (x//(a * b)) + bisect.bisect_right(w, x % (a * b))\n    a, b, q = rinput()\n    w = []\n    for i in range(a*b):\n        if (i % a) % b != (i % b) % a:\n            w.append(i)\n    for i in range(q):\n        l,r=rinput()\n        print(pro(r) - pro(l - 1), end=\" \")\n    print()\n    \n            \nfor i in range(iinput()):\n    main()"
        },
        {
            "language": 3,
            "solution": "#   Stay Home Stay Safe\n\ndef kyu(pt,n):\n    return (pt//n)*f[n-1] + f[pt%n] \n    \nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    pr = a*b\n    f  = [0] * pr \n    for i in range(pr):\n        f[i] = f[i-1]\n        if i%a%b != i%b%a :\n            f[i] += 1\n    while q:\n        l,r = map(int,input().split())\n        print(kyu(r,pr)-kyu(l-1,pr),end=\" \")\n        q -= 1\n    print()"
        },
        {
            "language": 3,
            "solution": "from math import gcd as g\nt = int(input())\nwhile t:\n    t += -1\n    a, b, q = map(int, input().split())\n    if a > b: a, b = b, a\n    a = a\n    b = b\n    lcm = (a * b) // g(a, b)\n    while q:\n        q += -1\n        l, r = map(int, input().split())\n        if b % a == 0: \n            print(0, end = \" \")\n        else:\n            k = r // (lcm)\n            ans = 0\n            if k != 0: ans += min(r, lcm * k + b - 1) - lcm * k + 1\n            if k >= 1:\n                ans += b * (k - 1) + b - 1\n            else: \n                ans += min(b - 1, r)\n            l = l - 1\n            k = l // (lcm)\n            ans1 = 0\n            if k != 0: ans1 = min(l, lcm * k + b - 1) - lcm * k + 1\n            if k >= 1:\n                ans1 += b * (k - 1) + b - 1\n            else: ans1 += min(b - 1, l)\n            l = l + 1\n            tt = r - l + 1 - (ans - ans1)\n            print(tt, end = \" \")\n    print()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n \npublic class Main\n{\n    static long f(long lcm, long seg, long n){\n        long mx = (n / lcm ) * lcm; \n\n        long total = 0l;\n\n        if(mx + seg - 1 >= n)\n            total = n - mx + 1;\n        else\n            total = seg;\n\n        total += (n / lcm) * seg;\n        return n + 1 - total;\n    }\n\n    public static void process(int test_number)throws IOException\n    {\n       int a = ni(), b = ni(), q = ni();\n\n       for(int i = 1; i <= q; i++){\n            long l = nl(), r = nl();\n\n            long lcm = a * b / gcd(a, b);\n            long seg = Math.max(a, b);\n\n            long left = f(lcm, seg, l - 1), right = f(lcm, seg, r);\n            //if(i == 4) trace(right, left);\n            p(right - left); p(\" \");\n       } \n       p('\\n');\n    }\n \n    static final long mod = (long)1e9+7l;\n    \n    static FastReader sc;\n    static PrintWriter out;\n    public static void main(String[]args)throws IOException\n    {\n        out = new PrintWriter(System.out);\n        sc = new FastReader();\n \n        long s = System.currentTimeMillis();\n        int t = 1;\n        t = ni();\n        for(int i = 1; i <= t; i++)\n            process(i);\n \n        out.flush();\n        System.err.println(System.currentTimeMillis()-s+\"ms\");\n    }\n\n    static void trace(Object... o){ System.err.println(Arrays.deepToString(o)); };\n    static void pn(Object o){ out.println(o); }\n    static void p(Object o){ out.print(o); }\n    static int ni()throws IOException{ return Integer.parseInt(sc.next()); }\n    static long nl()throws IOException{ return Long.parseLong(sc.next()); }\n    static double nd()throws IOException{ return Double.parseDouble(sc.next()); }\n    static String nln()throws IOException{ return sc.nextLine(); }\n    static long gcd(long a, long b)throws IOException{ return (b==0)?a:gcd(b,a%b);}\n    static int gcd(int a, int b)throws IOException{ return (b==0)?a:gcd(b,a%b); }\n    static int bit(long n)throws IOException{ return (n==0)?0:(1+bit(n&(n-1))); }\n    \n    static class FastReader{ \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader(){ \n            br = new BufferedReader(new InputStreamReader(System.in)); \n        } \n  \n        String next(){ \n            while (st == null || !st.hasMoreElements()){ \n                try{ st = new StringTokenizer(br.readLine()); } catch (IOException  e){ e.printStackTrace(); } \n            } \n            return st.nextToken(); \n        } \n  \n        String nextLine(){ \n            String str = \"\"; \n            try{ str = br.readLine(); } catch (IOException e) { e.printStackTrace(); } \n            return str; \n        } \n    } \n}\n"
        },
        {
            "language": 3,
            "solution": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\n# import io, os\n# input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nimport sys\ninput = sys.stdin.readline\n\nM = mod = 10**9 + 7\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n\ndef li():return [int(i) for i in input().split()]\ndef st():return input()\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\ndef giveab(a,b):\n    l = []\n    for i in range(1,a * b + 1,1):\n        l.append(1 if ((i%a)%b) != ((i%b)%a) else 0)\n    return l[:]\n\ndef giveforanum(r,s,l):\n    temp = r//(a * b)\n    up = temp*s\n    r %= (a * b)\n    \n    return up + l[r]\n\n\nfor _ in range(val()):\n    a,b,q = li()\n    \n    l1 = giveab(a,b)\n    pref = [0]\n    for i in l1:pref.append(pref[-1] + i)\n\n    s = sum(l1)\n    for i in range(q):\n        l,r = li()\n        print(giveforanum(r,s,pref) - giveforanum(l-1,s,pref))\n"
        },
        {
            "language": 1,
            "solution": "def GCD(x,y):\n    while(y):\n       x, y = y, x % y\n\n    return x\nfor _ in range(input()):\n    a,b,q=map(int,raw_input().split())\n    s=(a*b)/GCD(a,b)\n    if b<a:\n        b,a=a,b\n\n    for __ in range(q):\n        l,r=map(int,raw_input().split())\n        k=l/s\n        p=s*k\n        k1=r/s\n        p1=k1*s\n        k2=k1-k\n        tot=r-l+1\n        if k2==0:\n            w=min(r,p+b-1)\n            w2=max(w-l,-1)\n            ans=w2+1\n        else:\n            w=min(r,p+b-1)\n            w2=max(w-l,-1)\n            ans=w2+1\n            ans+=(k2-1)*b\n            ww=min(r,p1+b-1)\n            ans+=ww-p1+1\n        print tot-ans,\n\n\n\n        \"\"\"w=min(p+b-1,r)\n        ww=min(w-l,-1)\n        ans=ww+1\n        print ans,'ans'\n        k2=k1-k\n        ans+=b*k2\n        w1=p1+b-1\n        w2=max(w1-r,0)\n        ans-=w2\n        print l-r+1-ans,\"\"\"\n    print\n\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    Author : thekushalghosh\n    Team   : CodeDiggers\n\"\"\"\nimport sys,math,cmath,time\nstart_time = time.time()\n\n################# ---- USER DEFINED INPUT FUNCTIONS ---- #################\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(s[:len(s)])\ndef invr():\n    return(map(int,input().split()))\n##########################################################################\n################# ---- THE ACTUAL CODE STARTS BELOW ---- #################\n\ndef solve():\n    a,b,q = invr()\n    w = a * b // math.gcd(a,b)\n    qw = []\n    for i in range(w):\n        if not qw:\n            qw.append(0)\n        qq = qw[-1]\n        if ((i + 1) % a) % b != ((i + 1) % b) % a:\n            qq = qq + 1\n        qw.append(qq)\n    qwqw = []\n    for i in range(q):\n        l,r = invr()\n        l = l - 1\n        lc = math.floor(l // w) * qw[-1]\n        rc = math.floor(r // w) * qw[-1]\n        qwqw.append(max(0,rc - lc + qw[r % w] - qw[l % w]))\n    print(*qwqw)\n    \n################## ---- THE ACTUAL CODE ENDS ABOVE ---- ##################\n##########################################################################\ndef main():\n    ONLINE_JUDGE = __debug__\n    if not ONLINE_JUDGE:\n        sys.stdin = open('input.txt','r')\n        sys.stdout = open('output.txt','w')\n    else:\n        input = sys.stdin.readline\n    t = 1\n    t = inp()\n    for tt in range(t):\n        solve()\n    if not ONLINE_JUDGE:\n        print(\"Time Elapsed:\",time.time() - start_time,\"seconds\")\n\n############## ---- USER DEFINED PROGRAMMING FUNCTIONS ---- ##############\ndef counter(a):\n    q = [0] * max(a)\n    for i in range(len(a)):\n        q[a[i] - 1] = q[a[i] - 1] + 1\n    return(q)\n\nmain()\nsys.stdout.close()\n"
        },
        {
            "language": 3,
            "solution": "import sys, math\ninput = sys.stdin.buffer.readline\n\ndef read():\n    return map(int, input().split())\n\ndef solve(x, b, lcm):\n    d, r = divmod(x, lcm)\n    return d*(lcm-b) + max(0, r-b+1)\n\nfor _ in range(int(input())):\n    a, b, q = read()\n    if a > b:\n        a, b = b, a\n    g = math.gcd(a, b)\n    lcm = a*b//g\n    ans = []\n    for i in range(q):\n        l, r = read()\n        ans.append(solve(r, b, lcm) - solve(l-1, b, lcm))\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class EdC {\n\n\tpublic static void main(String[] args) throws Exception{\n\t\tint num = 998244353;\n\n\t\t// TODO Auto-generated method stub\n \t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\n \t\tint t = Integer.parseInt(bf.readLine());\n \t\tfor(int i = 0;i<t;i++){\n \t\t\tStringTokenizer st = new StringTokenizer(bf.readLine());\n \t\t\tint a = Integer.parseInt(st.nextToken());\n \t\t\tint b = Integer.parseInt(st.nextToken());\n \t\t\tint q = Integer.parseInt(st.nextToken());\n \t\t\tlong[][] query = new long[q][2];\n \t\t\tint divisor = 1;\n \t\t\tfor(int j = 1;j<= Math.min(a,  b);j++){\n \t\t\t\tif (a%j == 0 && b%j == 0)\n \t\t\t\t\tdivisor = j;\n \t\t\t}\n \t\t\tint lcm = a*b/divisor;\n \t\t\tint min = Math.max(a,  b);\n \t\t\tfor(int j =0;j<q;j++){\n \t\t\t\tStringTokenizer st1 = new StringTokenizer(bf.readLine());\n \t\t\t\tquery[j][0] = Long.parseLong(st1.nextToken());\n \t\t\t\tquery[j][1] = Long.parseLong(st1.nextToken());\n \t\t\t\tlong div = query[j][1]/lcm;\n \t\t\t\tlong mod = query[j][1]%lcm;\n \t\t\t\tlong ans = 0;\n \t\t\t\tans+= div*min;\n \t\t\t\tif (mod >=min)\n \t\t\t\t\tans+= min;\n \t\t\t\telse\n \t\t\t\t\tans+= (mod+1);\n \t\t\t\t\n \t\t\t\t\n \t\t\t\tlong div1 = (query[j][0]-1)/lcm;\n \t\t\t\tlong mod1 = (query[j][0]-1)%lcm;\n \t\t\t\tlong ans1 = 0;\n \t\t\t\tans1+= div1*min;\n \t\t\t\tif (mod1 >=min)\n \t\t\t\t\tans1+= min;\n \t\t\t\telse\n \t\t\t\t\tans1+= (mod1+1);\n \t\t\t\t\n \t\t\t\tSystem.out.print(((query[j][1]-query[j][0]+1)-(ans-ans1)) + \" \");\n \t\t\t\t\n \t\t\t\t\n \t\t\t}\n \t\t\tSystem.out.println();\n \t\t\t\n \t\t\t\n \t\t\t\n \t\t}\n \t\n }\n//\tpublic static int compareS(String a, String b){\n//\t\tif (a.length() > b.length())\n//\t\t\treturn 1;\n//\t\telse if (b.length() > a.length())\n//\t\t\treturn -1;\n//\t\telse{\n//\t\t\tfor(int i = 0;i<a.length();i++){\n//\t\t\t\tif (Integer.parseInt(a.charAt(i) + \"\") > Integer.parseInt(b.charAt(i)+ \"\"))\n//\t\t\t\t\treturn 1;\n//\t\t\t\telse if (Integer.parseInt(a.charAt(i) + \"\") < Integer.parseInt(b.charAt(i)+ \"\"))\n//\t\t\t\t\treturn -1;\n//\t\t\t}\n//\t\t\treturn 0;\n//\t\t}\n//\t\t\t\n//\t}\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n \t\t\n\t}\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\nimport math\ndef gift():\n    for _ in range(t):\n        a,b,q=map(int,input().split())\n        lcm=a*b//math.gcd(a,b)\n        maxdog=max(a,b)\n        for i in range(q):\n            \n            s,e=map(int,input().split())\n            ans=(e-s+1)\n\n            startq,startm=s//lcm,s%lcm\n            endq,endm=e//lcm,e%lcm\n            if startq==endq:\n                if startm<maxdog:\n                    if endm<maxdog:\n                        ans-=(endm-startm+1)\n                    else:\n                        ans-=(maxdog-startm)\n            else:\n                if startm<maxdog:\n                    ans-=(maxdog-startm)\n                #print(ans)\n                ans-=((endq-startq-1)*maxdog)\n                if endm<maxdog:\n                    ans-=(endm+1)\n                else:\n                    ans-=maxdog\n            yield ans\n\n                \nif __name__ == '__main__':\n    t= int(input())\n    ans = gift()\n    print(*ans,sep='\\n')\n            \n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nread = sys.stdin.buffer.read\ninput = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nt = int(input())\nfor case in range(t):\n    a, b, q = map(int, input().split())\n    # \u4e8b\u524d\u8a08\u7b97\n    mod_dif = [0] * (a * b)\n    for i in range(a * b):\n        if (i % a) % b != (i % b) % a:\n            mod_dif[i] = mod_dif[i - 1] + 1\n        else:\n            mod_dif[i] = mod_dif[i - 1]\n    ans = [0] * q\n    for query in range(q):\n        x, y = map(int, input().split())\n        x_d, x_m = divmod(x - 1, a * b)\n        y_d, y_m = divmod(y, a * b)\n        ans[query] = (y_d - x_d) * mod_dif[-1] + mod_dif[y_m] - mod_dif[x_m]\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "T = int(input())\n\nfor t in range(T):\n    a, b, q = [int(i) for i in input().split()]\n    queries = []\n    for j in range(q):\n        li, ri = [int(i) for i in input().split()]\n        queries.append((li, ri))\n\n    if a == b:\n        print(' '.join(['0'] * len(queries)))\n        continue\n\n    a, b = min(a, b), max(a, b)\n\n    count = 0\n    V = [0]\n    for x in range(1, a*b):\n        if (x % a) % b != (x % b) % a:\n            count += 1\n        V.append(count)\n\n    # print('a=', a, ' b=', b, ' V=', V)\n\n    results = []\n    for query in queries:\n        l, r = query[0], query[1]\n\n        ll = l - l % (a*b)\n        lr = r - r % (a*b)\n        # print('query (', l, ',', r, ') => (ll=', ll, ', lr=', lr)\n        answer = ((lr-ll) // (a*b)) * count + V[r % (a*b)]\n        if ll != l:\n            answer -= V[(l-1) % (a*b)]\n        results.append(answer)\n\n    print(' '.join([str(r) for r in results]))\n"
        },
        {
            "language": 1,
            "solution": "def gcd(x, y): \n   while(y): \n       x, y = y, x % y \n  \n   return x \nfor _ in range(input()):\n    a,b,query = map(int,raw_input().split())\n    p = max(a,b)\n    q = a*b/gcd(a,b)\n    for _ in range(query):\n        l,r = map(int,raw_input().split())\n        o = l;oo = r\n        ans = 0\n        ll = l/q\n        rr = r/q\n        if ll==rr:\n            l = l%q\n            r = r%q\n            if l<=p-1:\n                r = min(r,p-1)\n                ans += r-l+1\n        else:\n            l = l%q\n            r = r%q\n            if l<=p-1:\n                ans += p-l\n            r = min(p-1,r)\n            ans += r+1\n            ans += p*(rr-ll-1)\n        print oo-o+1-ans,\n    print\n    \n                \n"
        },
        {
            "language": 3,
            "solution": "from sys import  stdin, stdout\nfrom math import *\nfrom heapq import *\nfrom collections import *\n        \ndef main():\n    ntest=int(stdin.readline())\n    for testcase in range(ntest):\n        a,b,q=[int(x) for x in stdin.readline().split()]\n        f={-1:0}\n        for i in range((a*b)+2):\n            f[i]=f[i-1]+(0 if (((i%a)%b)==((i%b)%a)) else  1)\n        F=lambda n: ((f[a*b]*(n//(a*b))) + f[n%(a*b)])\n        for case in range(q):\n            l,r=[int(x) for x in stdin.readline().split()]\n            stdout.write(\"%d \"%(F(r)-F(l-1)))\n        stdout.write(\"\\n\")\n    return 0\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\n\npublic class Contest {\n    public static class pair implements Comparable<pair> {\n        int u;\n        long val;\n\n        public pair(int a, long value) {\n            u = a;\n            val = value;\n        }\n\n        @Override\n        public int compareTo(pair p) {\n            return Long.compare(val, p.val);\n        }\n    }\n\n    static int n, m;\n    static ArrayList<Integer>[] adj;\n    static int dist[];\n    static int parent[];\n    static long inf = (long) 1e16;\n    static int INF = (int) 1e9;\n\n    public static int[] bfs(int s) {\n        dist = new int[n];\n        Arrays.fill(dist, -1);\n        dist[s] = 0;\n        Queue<Integer> q = new LinkedList<>();\n        q.add(s);\n        while (!q.isEmpty()) {\n            int u = q.poll();\n            for (int v : adj[u])\n                if (dist[v] == -1) {\n                    dist[v] = dist[u] + 1;\n                    q.add(v);\n                }\n        }\n        return dist;\n    }\n\n    public static long calc(long[] acc, int single, int Dbl) {\n        if (single + Dbl > m) return inf;\n        return acc[Dbl] + acc[single + Dbl];\n    }\n\n    public static boolean subset(TreeSet<Integer> small, TreeSet<Integer> big) {\n        for (int x : small)\n            if (!big.contains(x))\n                return false;\n        return true;\n    }\n\n    public static TreeSet<Integer> subset2(TreeSet<Integer> small, TreeSet<Integer> big) {\n        TreeSet<Integer> ts = new TreeSet<>();\n        for (int x : small)\n            if (!big.contains(x))\n                ts.add(x);\n        return ts;\n    }\n\n    public static boolean CanBeStart(int x, TreeSet<Integer>[] Arr) {\n        TreeSet<Integer> last = new TreeSet<>();\n        for (int j = 0; j < n - 1; j++)\n            if (Arr[j].contains(x)) {\n                if (!subset(last, Arr[j]))\n                    return false;\n                last = Arr[j];\n            }\n        return true;\n    }\n\n    public static boolean check(TreeSet<Integer> sublist, ArrayList<Integer> arr) {\n        int len = sublist.size(), n = arr.size();\n        for (int i = 0; i < n - len + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < len; j++)\n                if (!sublist.contains(arr.get(i + j)))\n                    flag = false;\n            if (flag) return true;\n        }\n        return false;\n    }\n\n    public static boolean check(TreeSet<Integer>[] Arr, ArrayList<Integer> arr) {\n        boolean ans = true;\n        for (int i = 0; i < n - 1; i++)\n            ans &= check(Arr[i], arr);\n        return ans;\n    }\n\n    public static boolean alltrue(boolean[] arr) {\n        for (boolean flag : arr)\n            if (flag) return false;\n        return true;\n    }\n\n    public static boolean sep(boolean[] arr) {\n        boolean open = false;\n        int cnt = 0;\n        for (int i = 0; i < arr.length; i++)\n            if (open) {\n                if (!arr[i]) open = false;\n            } else {\n                if (arr[i]) {\n                    open = true;\n                    cnt++;\n                }\n            }\n        return cnt <= 1;\n    }\n\n\n    static int[] dx = new int[]{-1, 1, 0, 0};\n    static int[] dy = new int[]{0, 0, -1, 1};\n    static boolean[][] Matrix, vis;\n\n    static boolean valid(int i, int j) {\n        return i != -1 && j != -1 && i != n && j != m && Matrix[i][j];\n    }\n\n    static void dfs2(int i, int j) {\n        vis[i][j] = true;                        //mark as visited\n        for (int k = 0; k < 4; ++k) {\n            int x = i + dx[k], y = j + dy[k];\n            if (valid(x, y) && !vis[x][y])\n                dfs2(x, y);\n        }\n    }\n\n    public static boolean isSimilar(char[] Arr, int s, int k) {\n        for (int i = s; i < k - 1; i++) {\n            if (Arr[i + 1] != Arr[i])\n                return false;\n        }\n        return true;\n    }\n\n    public static int ciel(int d, int mod) {\n        if (d % mod == 0)\n            return d / mod;\n        return d / mod + 1;\n    }\n\n    public static long lcm(long u, long v) {\n        return (v / gcd(u, v)) * u;\n    }\n\n    public static long gcd(long u, long v) {\n        if (v == 0)\n            return u;\n        return gcd(v, u % v);\n    }\n    public static long calc(long dist, long u,long v){\n        long lcm=lcm(u,v);\n        long num=dist/lcm;\n        long ans=num*u+min(u,1+dist%lcm);\n        return ans;\n    }\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            long max = max(a, b);\n            long min = min(a, b);\n            int q = sc.nextInt();\n            while (q-- > 0) {\n                long l=sc.nextLong();\n                long r=sc.nextLong();\n                long ans=r-l+1-(calc(r,max,min)-calc(l-1,max,min));\n                pw.print(ans+\" \");\n            }\n            pw.println();\n        }\n\n\n        pw.close();\n\n    }\n\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if (x.charAt(0) == '-') {\n                neg = true;\n                start++;\n            }\n            for (int i = start; i < x.length(); i++)\n                if (x.charAt(i) == '.') {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                } else {\n                    sb.append(x.charAt(i));\n                    if (dec)\n                        f *= 10;\n                }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg ? -1 : 1);\n        }\n\n        public boolean ready() throws IOException, IOException {\n            return br.ready();\n        }\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\ndef check(arr, a, b):\n    d = []\n    ll = a*b//math.gcd(a, b)\n    for i in range(1, ll+1):\n        if i%a%b != i%b%a:\n            d.append(1)\n        else:\n            d.append(0)\n   \n    \n    for i in range(1, len(d)):\n        if d[i] == 1:\n            d[i] = d[i-1] + 1\n        else:\n            d[i] = d[i-1]\n    \n    \n    result = []\n    last = d[-1]\n    for l, r in arr:\n        p = 1\n        q = 1\n        \n        kk = last*((r//ll) - (l-1)//ll)\n       \n        l -= 1\n        r = r % ll\n        if r == 0:\n            p = 0\n        else:\n            r -= 1\n        l = l % ll\n        if l == 0:\n            q = 0\n        else:\n            l -= 1\n        \n        result.append(p*d[r] - q*d[l] + kk)\n    return result\n            \n        \n    \n    \n            \n    \nt = int(input())\nwhile t:\n    a, b, q = list(map(int, input().split()))\n    arr = []\n    for i in range(q):\n        arr.append(list(map(int, input().split())))\n    result = check(arr, a, b)\n    for i in result:\n        print(i, end=\" \" )\n    print()\n        \n    \n   \n\n    t-= 1\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long pref(long long x, vector<long long> &d, long long a, long long b) {\n  long long res = ((long long)d.size()) * (x / (a * b));\n  res += upper_bound(d.begin(), d.end(), x % (a * b)) - d.begin();\n  return res;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    long long a, b;\n    int q;\n    cin >> a >> b >> q;\n    vector<long long> d;\n    for (long long i = 0; i < a * b; ++i) {\n      if ((i % a) % b != (i % b) % a) d.push_back(i);\n    }\n    for (int w = 0; w < q; ++w) {\n      long long l, r;\n      cin >> l >> r;\n      cout << pref(r, d, a, b) - pref(l - 1, d, a, b) << ' ';\n    }\n    cout << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Main {\n\tstatic long query(long l,int a,int b,int[] p)\n\t{\t\n\t\tint len=a*b;\n\t\tlong cnt = l / len;\n\t\tint rem = (int) (l % len);\n\t\treturn p[len]*cnt + p[rem]; \n\t}\n\tpublic static void main(String[] args) throws IOException \n\t{ \n\t\tFastScanner f = new FastScanner(); \n\t\tint t=1;\n\t\tt=f.nextInt();\n\t\tPrintWriter out=new PrintWriter(System.out);\n\t\tfor(int tt=0;tt<t;tt++) {\n\t\t\tint a=f.nextInt();\n\t\t\tint b=f.nextInt();\n\t\t\tint q=f.nextInt();\n\t\t\tint len = a * b;\n\t\t\tint[] p=new int[len+1];\n\t\t\tp[0] = 0;\n\t\t\tfor(int i = 1; i <= len; i++)\n\t\t\t{\n\t\t\t\tp[i] = p[i-1];\n\t\t\t\tif((i % a) % b != (i % b) % a)\n\t\t\t\t\tp[i]++;\n\t\t\t}\n\t\t\tfor(int j = 0; j < q; j++)\n\t\t\t{\n\t\t\t\tlong l=f.nextLong();\n\t\t\t\tlong r=f.nextLong();\n\t\t\t\tSystem.out.print(query(r,a,b,p)-query(l-1,a,b,p)+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tout.close();\n\t} \n\tstatic void sort(int [] a) {\n        ArrayList<Integer> q = new ArrayList<>();\n        for (int i: a) q.add(i);\n        Collections.sort(q);\n        for (int i = 0; i < a.length; i++) a[i] = q.get(i);\n    }\n    \n\tstatic class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tlong[] readLongArray(int n) {\n\t\t\tlong[] a=new long[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextLong();\n\t\t\treturn a;\n\t\t}\n\t}\n} \t\n//Some things to notice\n//Check for the overflow\n//Binary Search\n//Bitmask"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport bisect\n\ndef query_sum_value(A, p):\n    n = len(A)\n    ans = (p + 1) // n * A[-1]\n    if (p + 1) % n:\n        ans += A[(p + 1) % n - 1]\n    return ans\n\ndef solve(a, b, q):\n    A = [0] * (a * b)\n    for i in range(len(A)):\n        if i % a % b != i % b % a:\n            A[i] = 1\n    for i in range(1, len(A)):\n        A[i] += A[i-1]\n    #print('A: %s' % (str(A)))\n    ans = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        val = query_sum_value(A, r) - query_sum_value(A, l - 1)\n        ans.append(val)\n    return ans\n\ndef main():\n    for _ in range(int(input())):\n        a, b, q = map(int, input().split())\n        ans = solve(a, b, q)\n        print(' '.join(list(str(a) for a in ans)))\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline  \nt=int(input())\nfrom math import gcd\nwhile t:\n    t-=1\n    a,b,q=map(int,input().split())\n    lcm=(a*b)//gcd(a,b)\n    ans=[None]*q\n    if a>b: a,b=b,a\n    if gcd(a,b)==a:\n        for _ in range(q):\n           l,r=map(int,input().split())\n        print(*[0]*q)\n    else:\n        for _ in range(q):\n            l,r=map(int,input().split())\n            d=0\n            last=min(r+1,((l-1)//lcm+1)*lcm)\n            for i in range(l,last):\n                if (i%a)%b==(i%b)%a:\n                    d+=1\n                else: break\n            if last==r+1:\n                ans[_]=(r-l+1-d)\n                continue\n            nl=(l-1)//lcm\n            nr=r//lcm\n            nb=nr-nl\n            d+=max(0,(nb-1)*b)+min(b,r-nr*lcm+1)\n            ans[_]=r-l+1-d\n        print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Objects;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Double.parseDouble;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\n\npublic class Solution {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n    static boolean isLocal = false;\n\n    long get(long l, int len, int b, int a) {\n        if (l < b) return 0;\n        long ans = (l / (b + len)) * len;\n        l %= (b + len);\n        long rest = max(0, l - b + 1);\n        return ans + rest;\n    }\n\n    private int gcd(int a, int b) {\n        while (b > 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n\n    private int lcm(int a, int b) {\n        return a * (b / gcd(a, b));\n    }\n\n\n    int get_max_len(int a, int b) {\n        int len = 0, mx = 0;\n        for (long i = 0; i <= lcm(a, b); i++) {\n            if ((i % a) % b != (i % b) % a) mx++;\n            else mx = 0;\n            len = max(len, mx);\n        }\n        return len;\n    }\n\n    void Case() throws IOException {\n        int t[] = sort(na(2));\n        int a = t[0], b = t[1], q = nextInt();\n        int len = get_max_len(a, b);\n        while (q-- > 0) {\n            long l = nextLong(), r = nextLong();\n            if (len == 0)\n                out.print(\"0 \");\n            else {\n                long ans = get(r, len, b, a) - get(l - 1, len, b, a);\n//                long ans2 = get(r, len, a, b) - get(l - 1, len, a, b);\n                out.print(ans + \" \");\n            }\n        }\n        out.println();\n    }\n\n    void solve() throws Exception {\n        int t = nextInt();\n        for (int i = 1; i <= t; i++) {\n            Case();\n        }\n    }\n\n    int min(int x, int y) {\n        return Integer.min(x, y);\n    }\n\n    int max(int x, int y) {\n        return Integer.max(x, y);\n    }\n\n    long min(long x, long y) {\n        return Long.min(x, y);\n    }\n\n    long max(long x, long y) {\n        return Long.max(x, y);\n    }\n\n    int[] sort(int[] arr) {\n        sort(arr, 0, arr.length - 1);\n        return arr;\n    }\n\n    void sort(int arr[], int l, int r) {\n        if (l < r) {\n            int m = (l + r) / 2;\n            sort(arr, l, m);\n            sort(arr, m + 1, r);\n            merge(arr, l, m, r);\n        }\n    }\n\n    void merge(int arr[], int l, int m, int r) {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[l + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[m + 1 + j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            } else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    class Seg implements Comparable<Seg> {\n        int st, end;\n\n        public Seg(int st, int end) {\n            this.st = st;\n            this.end = end;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            Seg seg = (Seg) o;\n            return st == seg.st &&\n                    end == seg.end;\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(st, end);\n        }\n\n        @Override\n        public int compareTo(Seg seg) {\n            return st == seg.st ? Integer.compare(end, seg.end) : Integer.compare(st, seg.st);\n        }\n    }\n\n    private int[] na(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n\n    private long[] nal(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n\n    int nextInt() throws IOException {\n        return parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n\n    String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    public static void main(String[] args) throws Exception {\n        try {\n            if (isLocal) {\n                in = new BufferedReader(new FileReader(\"src/tests/sol.in\"));\n                out = new PrintWriter(new BufferedWriter(new FileWriter(\"src/tests/sol.out\")));\n            } else {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n//            long lStartTime = System.currentTimeMillis();\n            new Solution().solve();\n//            long lEndTime = System.currentTimeMillis();\n//            out.println(\"Elapsed time in seconds: \" + (double) (lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nreadline = sys.stdin.readline\n\ndef calc(x):\n    D = len(table)\n    J = table[-1]\n    return x//D*J + table[x%D]\n\nQ = int(readline())\nAns = [None]*Q\nfor qu in range(Q):\n    A, B, T = map(int, readline().split())\n    table = [0]*(A*B)\n    for i in range(1, A*B):\n        if (i%A)%B != (i%B)%A:\n            table[i] = 1 + table[i-1]\n        else:\n            table[i] = table[i-1]\n    ans = [None]*T\n    for t in range(T):\n        l, r = map(int, readline().split())\n        l -= 1\n        ans[t] = calc(r) - calc(l)\n    Ans[qu] = ' '.join(map(str, ans))\nprint('\\n'.join(map(str, Ans)))        "
        },
        {
            "language": 3,
            "solution": "import io, os\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nimport sys\n\ndef gdc(a, b):\n\twhile b != 0:\n\t\ta, b = b, a%b\n\treturn a\n\n\nt = int(input())\nfor _ in range(t):\n\ta, b, q = map(int, input().split())\n\tif a < b:\n\t\ta, b = b, a\n\t# print(\"a\", a)\n\t# print(\"b\", b)\n\tfor i in range(q):\n\t\tl, r = map(int, input().split())\n\t\tnok = a * b // gdc(a, b)\n\t\t# if a % b  == 0:\n\t\t# \tprint(0, end = \" \")\n\t\t# else:\n\t\tleft_border  = (l // nok) * nok\n\n\t\tright_border = (r // nok ) * nok\n\t\tans = a * ( (right_border- left_border) // nok + 1)\n\t\t# print(\"inside ans\", ans)\n\n\t\t# delete extra from rigth\n\t\tif right_border + a - 1 > r:\n\t\t\tans -= (right_border + a - 1) - r\n\t\t# print(\"deleted from right\", ans)\n\n\t\t# delete extra from left\n\t\tif left_border < l:\n\t\t\tans -= min(a, l - left_border)\n\t\t# print(\"deleted from left\", ans)\n\t\tprint(r-l+1-ans, end = \" \")\n\tprint()\n\n\n# sys.stdout.write(str(n)+\"\\n\")"
        },
        {
            "language": 3,
            "solution": "import math\nn = int(input())\n\nfor i in range(n):\n    a,b,q = [int(x) for x in input().split()]\n    a,b = min(a,b), max(a,b)\n    \n    lcm = int(a*b/math.gcd(a,b))\n    k = max(a,b)\n    res = []\n    \n    for j in range(q):\n        l,r = [int(x) for x in input().split()]\n        l, r = min(l,r), max(l,r)\n        \n        ret = 0\n        idl = int(l//lcm)\n        idr = int(r//lcm)\n        \n        if (idr - idl > 0):\n            ret +=  (idr-idl-1)*b\n            ret += max(0,b-(l%lcm))\n            ret += max(0,min(r%lcm,b-1)+1)\n        elif(idl == idr):\n            ret += max(min(b-1,r%lcm)-(l%lcm)+1,0)\n        \n        res.append(r-l+1-ret)\n    \n    for j in range(q-1):\n        print(res[j], end = \" \")\n    print(res[q-1])"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C { //WA 3\n\n    static long[] addCnt = new long[4000110];\n\n    public static void main(String[] args) {\n        try {\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n            int testCnt = Integer.parseInt(br.readLine());\n            int start = 1;\n            for (int i = 0; i < testCnt; i++) {\n                String[] line = br.readLine().split(\" \");\n                int a = Integer.parseInt(line[0]);\n                int b = Integer.parseInt(line[1]);\n                int queryCnt = Integer.parseInt(line[2]);\n\n                if (a > b) {\n                    int temp = a;\n                    a = b;\n                    b = temp;\n                }\n                int len = a * b;\n                for (int j = 0; j < len; j++) {\n                    addCnt[start + j] = addCnt[start + j - 1];\n                    if (j%a != (j%b)%a) {\n                        addCnt[start + j]++;\n                    }\n                }\n\n                for (int j = 0; j < queryCnt; j++) {\n                    line = br.readLine().split(\" \");\n                    long l = Long.parseLong(line[0]);\n                    long r = Long.parseLong(line[1]);\n                    long cnt = (r / len - (l / len)) * (addCnt[start + len - 1]);\n                    cnt -= addCnt[start + ((int) (l % len)) - 1];\n                    cnt += addCnt[start + ((int) (r % len))];\n                    bw.write(cnt + \" \");\n                }\n\n                bw.newLine();\n\n                start += a * b + 1;\n            }\n            br.close();\n            bw.close();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void dbug(String s, long ... a) { // /*\n        String[] line = s.split(\"<>\");\n        for (int i = 0; i < a.length; i++) {\n            System.out.print(line[i] + a[i]);\n        }\n        System.out.println(line[a.length]); // */\n    }\n\n    public static void print(int[] a) { // /*\n        for (int i = 0; i < a.length; i++) {\n            System.out.print(a[i] + \" \");\n        }\n        System.out.println(); // */\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        CYetAnotherCountingProblem solver = new CYetAnotherCountingProblem();\n        int testCount = Integer.parseInt(in.next());\n        for (int i = 1; i <= testCount; i++)\n            solver.solve(i, in, out);\n        out.close();\n    }\n\n    static class CYetAnotherCountingProblem {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            long a = in.nextLong(), b = in.nextLong();\n            int q = in.nextInt();\n\n            long lcm = lcm(a, b);\n            long[] lc = new long[(int) (lcm + 1)];\n            for (int i = 1; i <= lcm; i++) {\n                lc[i] = lc[i - 1];\n                if (((i % a) % b) != ((i % b) % a)) lc[i]++;\n            }\n            for (int i = 0; i < q; i++) {\n                long l = in.nextLong();\n                long r = in.nextLong();\n                long count = 0;\n                long t1 = r / lcm;\n                long t2 = (l - 1) / lcm;\n                count += t1 * lc[(int) lcm] - t2 * lc[(int) lcm];\n                count += lc[(int) (r % lcm)] - lc[(int) ((l - 1) % lcm)];\n                out.print(count + \" \");\n            }\n            out.println();\n\n        }\n\n        public long lcm(long a, long b) {\n            return (a * b) / gcd(a, b);\n        }\n\n        public long gcd(long a, long b) {\n            if (b == 0) return a;\n            return gcd(b, a % b);\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void println() {\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n\n    static class InputReader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    l=[]\n    l.append(0)\n    for i in range(1,(a*b)+1):\n        x=l[-1]\n        l.append(x)\n        if((i%a)%b!=(i%b)%a):\n            l[i]+=1\n    t=a*b\n    x=l[-1]\n    lf=[]\n    for i in range(q):\n        left,r=map(int,input().split())\n        a1=r//t\n        a2=(left-1)//t\n        ans=((a1*x) + l[r%t])\n        ans-=((a2*x) + l[(left-1)%t])\n        lf.append(ans)\n    for i in lf:\n        print(i,end=\" \")\n    print()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Yet_Another_Counting_Problem {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tScanner s = new Scanner(System.in);\n\t\t\n\t\tint t = s.nextInt();\n\t\ts.nextLine();\n\t\twhile(t--!=0) {\n\t\t\t\n\t\t\tString str = s.nextLine();\n\t\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\t\tint a = Integer.valueOf(strArr[0]);\n\t\t\tint b = Integer.valueOf(strArr[1]);\n\t\t\tint q = Integer.valueOf(strArr[2]);\n\t\t\t\n\t\t\tint[] arr = new int[(a*b)];\n\t\t\tint[] sum_arr = new int[(a*b)];\n\t\t\t\n\t\t\tfor(int i=1; i<arr.length; i++) {\n\t\t\t\tif((i%a)%b != (i%b)%a) {\n\t\t\t\t\tarr[i]=1;\n\t\t\t\t}\n\t\t\t\tsum_arr[i] = sum_arr[i-1]+arr[i];\n\t\t\t}\n\t\t\t\n\t\t\t//display(arr);\n\t\t\t//display(sum_arr);\n\t\t\t\n\t\t\twhile(q--!=0) {\n\t\t\t\tString qstr = s.nextLine();\n\t\t\t\tString[] qstrArr = qstr.split(\"\\\\s+\");\n\t\t\t\tlong li = Long.valueOf(qstrArr[0]);\n\t\t\t\tlong ri = Long.valueOf(qstrArr[1]);\n\t\t\t\t\n\t\t\t\tlong no_of_arr = (li/(a*b));\n\t\t\t\tlong left_part = li%(a*b);\n\t\t\t\tlong li_sum = 0;\n\t\t\t\t\n\t\t\t\tif(left_part != 0) {\n\t\t\t\t\tli_sum = no_of_arr*sum_arr[(a*b)-1] + sum_arr[(int)left_part-1];\n\t\t\t\t} else {\n\t\t\t\t\tli_sum = no_of_arr*sum_arr[(a*b)-1];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tno_of_arr = (ri/(a*b));\n\t\t\t\tleft_part = ri%(a*b);\n\t\t\t\tlong ri_sum = no_of_arr*sum_arr[(a*b)-1] + sum_arr[(int)left_part];\n\t\t\t\tSystem.out.println(ri_sum-li_sum);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t}\n\t\n\tstatic void display(int[] arr) {\n\t\tfor(int i=0; i<arr.length; i++) {\n\t\t\tSystem.out.print(arr[i]+\", \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\n\ndef f(l, x):\n    return l[-1] * (x // k) + l[x % k]\n\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    k = lcm(a, b)\n    l = [0] * k\n    for x in range(1, k):\n        if (x % a) % b != (x % b) % a:\n            l[x] = l[x - 1] + 1\n    ans = [0] * q\n    for i in range(q):\n        le, r = map(int, input().split())\n        ans[i] = f(l, r) - f(l, le - 1)\n    print(' '.join(map(str, ans)))\n"
        },
        {
            "language": 4,
            "solution": "// package name;\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic final long mod = 1000000007;\n\tstatic final long lmx = 9223372036854775807l, lmn = -9223372036854775808l;\n\tstatic final int imx = 2147483647, imn = -2147483648;\n\tstatic final String Y = \"YES\", NO = \"NO\", LN = \"\\n\", SPC = \" \";\n\tstatic Scanner s = new Scanner(System.in);\n\t//static Reader s = new Reader();\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tint t = 1;\n\t\t//System.out.println(-1337%3);\n\t\tt = s.nextInt();\n\t\tString xy = slinp();\n\t\tStringBuffer sb = new StringBuffer();\n\t\twhile (t > 0) {\n\t\t\tt--;\n\t\t\tint a = iinp(), b = iinp(), q = iinp();\n\t\t\tint m = a * b;\n\t\t\tint arr[] = new int[m];\n\t\t\tfor(int i = 1; i < m; i++) {\n\t\t\t\tint o1 = (i % a) % b;\n\t\t\t\tint o2 = (i % b) % a;\n\t\t\t\tarr[i] = arr[i - 1];\n\t\t\t\tif(o1 != o2) arr[i]++;\n\t\t\t\t//if(i < 7)\n\t\t\t\t//System.out.print(arr[i] + \" \");\n\t\t\t}\n\t\t\t//System.out.println();\n\t\t\twhile(q-- > 0) {\n\t\t\t\tlong l = linp(), r = linp();\n\t\t\t\tlong seg = (r / m) * arr[m - 1];\n\t\t\t\tseg += arr[(int) (r % m)]; \n\t\t\t\t//System.out.println(seg);\n\t\t\t\tl--;\n\t\t\t\tseg -= (l / m) * arr[m - 1];\n\t\t\t\tseg -= arr[(int) (l % m)];\t\n\t\t\t\tsb.append(seg + SPC);\n\t\t\t}\n\t\t\tsb.append(LN);\n\t\t}\n\t\tout.print(sb);\n\t\tout.flush();\n\t}\n\n\tstatic int iinp() throws IOException {\n\t\treturn s.nextInt();\n\t}\n\n\tstatic long linp() throws IOException {\n\t\treturn s.nextLong();\n\t}\n\n\tstatic double dinp() throws IOException {\n\t\treturn s.nextDouble();\n\t}\n\n\tstatic String sinp() throws IOException {\n\t\treturn s.next();\n\t}\n\n\tstatic String slinp() throws IOException {\n\t\treturn s.nextLine();\n\t}\n\n\tstatic int[] iarr(int n) {\n\t\treturn new int[n];\n\t}\n\n\tstatic long[] larr(int n) {\n\t\treturn new long[n];\n\t}\n\n\tstatic double[] darr(int n) {\n\t\treturn new double[n];\n\t}\n\n\tstatic boolean[] barr(int n) {\n\t\treturn new boolean[n];\n\t}\n\n\tstatic String[] sarr(int n) {\n\t\treturn new String[n];\n\t}\n\n\tstatic int[][] iarr(int n, int m) {\n\t\treturn new int[n][m];\n\t}\n\n\tstatic long[][] larr(int n, int m) {\n\t\treturn new long[n][m];\n\t}\n\n\tstatic int[] iinp(int n, int st, int size) throws IOException {\n\t\tint a[] = iarr(n);\n\t\tfor (int i = st; i < st + size; i++)\n\t\t\ta[i] = iinp();\n\t\treturn a;\n\t}\n\n\tstatic long[] linp(int n, int st, int size) throws IOException {\n\t\tlong a[] = larr(n);\n\t\tfor (int i = st; i < st + size; i++)\n\t\t\ta[i] = linp();\n\t\treturn a;\n\t}\n\n\tstatic String[] sinp(int n, int st, int size, String str) throws IOException {\n\t\tString a[] = sarr(n);\n\t\tfor (int i = st; i < st + size; i++)\n\t\t\tif (str.equalsIgnoreCase(SPC))\n\t\t\t\ta[i] = sinp();\n\t\t\telse\n\t\t\t\ta[i] = slinp();\n\t\treturn a;\n\t}\n\n\tstatic int[][] iinp(int n, int m, int row, int rows, int col, int cols) throws IOException {\n\t\tint a[][] = iarr(n, m);\n\t\tfor (int i = row; i < row + rows; i++)\n\t\t\tfor (int j = col; j < col + cols; j++)\n\t\t\t\ta[i][j] = iinp();\n\t\treturn a;\n\t}\n\n\tstatic long[][] linp(int n, int m, int row, int rows, int col, int cols) throws IOException {\n\t\tlong a[][] = larr(n, m);\n\t\tfor (int i = row; i < row + rows; i++)\n\t\t\tfor (int j = col; j < col + cols; j++)\n\t\t\t\ta[i][j] = linp();\n\t\treturn a;\n\t}\n\n\tstatic void ginp(ArrayList<Integer> g[], int m) throws IOException {\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tint u = iinp(), v = iinp();\n\t\t\tg[u].add(u);\n\t\t\tg[v].add(u);\n\t\t}\n\t}\n\n\tstatic long min(long... a) {\n\t\tlong min = lmx;//Long.MAX_VALUE;\n\t\tfor (long i : a)\n\t\t\tif (i < min)\n\t\t\t\tmin = i;\n\t\treturn min;\n\t}\n\n\tstatic int min(int... a) {\n\t\tint min = imx;//Long.MAX_VALUE;\n\t\tfor (int i : a)\n\t\t\tif (i < min)\n\t\t\t\tmin = i;\n\t\treturn min;\n\t}\n\n\tstatic long max(long... a) {\n\t\tlong max = lmn;//Long.MIN_VALUE;\n\t\tfor (long i : a)\n\t\t\tif (i > max)\n\t\t\t\tmax = i;\n\t\treturn max;\n\t}\n\n\tstatic int max(int... a) {\n\t\tint max = imn;//Long.MIN_VALUE;\n\t\tfor (int i : a)\n\t\t\tif (i > max)\n\t\t\t\tmax = i;\n\t\treturn max;\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tstatic int gcd(int a, int b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tstatic void sort(int a[]) {\n\t\tArrays.sort(a);\n\t};\n\n\tstatic void sort(long a[]) {\n\t\tArrays.sort(a);\n\t};\n\n\tstatic void sort(String a[]) {\n\t\tArrays.sort(a);\n\t};\n\n\tstatic void sort(int a[], int st, int e) {\n\t\tArrays.sort(a, st, e);\n\t};\n\n\tstatic void sort(long a[], int st, int e) {\n\t\tArrays.sort(a, st, e);\n\t};\n\n\tstatic void sort(String a[], int st, int e) {\n\t\tArrays.sort(a, st, e);\n\t};\n\n\tstatic void sortbycol(int arr[][]) {\n\t\tArrays.sort(arr, new Comparator<int[]>() {\n\t\t\tpublic int compare(int[] x, int[] y) {\n\t\t\t\tif (x[1] == y[1])\n\t\t\t\t\treturn x[2] - y[2];\n\t\t\t\treturn x[1] - y[1]; // sort in increasing order on the basis of first column\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic StringBuffer printarr(long a[], String str) {\n\t\tStringBuffer ans = new StringBuffer();\n\t\tfor (long i : a)\n\t\t\tans.append(i + str);\n\t\treturn ans;\n\t}\n\n}\n\nclass Pair implements Comparator<Pair> {\n\tlong a, b;\n\n\tPair(long x, long y) {\n\t\ta = x;\n\t\tb = y;\n\t}\n\n\tpublic int compare(Pair p1, Pair p2) {\n\t\tif (p1.a != p2.a)\n\t\t\treturn (p1.a - p2.a > 0) ? 1 : -1;\n\t\treturn (p1.b - p2.b > 0) ? 1 : -1;\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor u in range(t):\n\ta,b,q = list(map(int,input().split()))\n\tc = int(a)\n\td = int(b)\n\tcnt = 19\n\twhile a*b != 0:\n\t\tif a < b:\n\t\t\ta,b = b,a\n\t\ta = a%b\n\tnok = (c*d)//max(a,b)\n\tact = [0]*nok\n\tfor i in range(1,nok+1):\n\t\tif ((i%c)%d == (i%d)%c):\n\t\t\tact[i-1] = 0\n\t\telse:\n\t\t\tact[i-1] = 1\n\tdp = [0]*(len(act)+1)\n\tdp[0] = 0\n\tdp[1] = act[0]\n\tfor i in range(1,len(act)):\n\t\tdp[i+1] = dp[i] + act[i]\n\tres = ''\n\tfor i in range(q):\n\t\tl,r = list(map(int,input().split()))\n\t\tif r < (nok):\n\t\t\tres += str(dp[r]-dp[l-1]) + \" \"\n\t\telse:\n\t\t\tif l%nok == 0:\n\t\t\t\tdpl = (dp[-1]*(l//(nok)))\n\t\t\telse:\n\t\t\t\tdpl = (dp[-1]*(l//(nok)) + dp[l%(nok)-1])\n\t\t\tres += str(dp[-1]*(r//(nok)) + dp[r%(nok)] - dpl) + \" \"\n\tprint(res)"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nimport math\n\ndef gcd(a,b):\n    if a==0:\n        return b\n    if b==0:\n        return a\n    return gcd(b%a,a)\n    \ndef calc(l,lcm,a,b):\n    num = l//lcm\n    ans = num*(max(a,b))\n    ans += min(l - (num*lcm)+1,max(a,b))\n    return ans\n\ndef main():\n    for q in range(int(input())):\n        a,b,q = map(int,input().split())\n        lcm = (a*b)//gcd(a,b)\n        for i in range(q):\n            l,r = map(int,input().split())\n            ans = ((r+1) - calc(r,lcm,a,b)) - (l - calc(l-1,lcm,a,b))\n            print(ans,end=\" \")\n        print(\"\")\n        \n    \nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ull = unsigned long long;\null p[10000000], m;\nvoid build(short a, short b) {\n  p[0] = 0;\n  m = a * b;\n  for (int i = 1; i <= m; i++) {\n    p[i] = p[i - 1];\n    if ((i % a) % b != (i % b) % a) p[i]++;\n  }\n}\null fun(ull s) {\n  ull full = s / m;\n  ull rem = s % m;\n  return p[m] * full + p[rem];\n}\null fun(ull l, ull r) { return fun(r) - fun(l - 1); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    short a, b, q;\n    cin >> a >> b >> q;\n    build(a, b);\n    ull l, r;\n    while (q--) {\n      cin >> l >> r;\n      cout << fun(l, r) << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  long long t;\n  cin >> t;\n  for (long long q = 0; q < t; q++) {\n    long long a, b, k;\n    cin >> a >> b >> k;\n    vector<long long> x(a * b);\n    for (long long i = 0; i < a * b; i++) {\n      x[i] = (i % a % b != i % b % a);\n    }\n    long long all = 0;\n    for (long long i = 0; i < a * b; i++) {\n      all += x[i];\n    }\n    vector<long long> sum_pref(a * b + 1, 0);\n    for (long long i = 0; i < a * b; i++) {\n      sum_pref[i + 1] = sum_pref[i] + x[i];\n    }\n    vector<long long> sum_suf(a * b + 1, 0);\n    for (long long i = a * b - 1; i >= 0; i--) {\n      sum_suf[i] = sum_suf[i + 1] + x[i];\n    }\n    for (long long i = 0; i < k; i++) {\n      long long l, r;\n      cin >> l >> r;\n      r++;\n      long long ans = (r / (a * b) - l / (a * b) - 1) * all;\n      ans += sum_suf[l % (a * b)];\n      ans += sum_pref[r % (a * b)];\n      cout << ans << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\nt = int(sys.stdin.readline())\n\nfor _ in xrange(t):\n    a, b, q = map(int, sys.stdin.readline().split())\n\n    qq = [None] * q\n    for i in xrange(q):\n        l, r = map(int, sys.stdin.readline().split())\n        qq[i] = (l, r)\n\n    count = 0\n\n    counts = [0] * (a * b)\n\n    for i in xrange(a * b):\n        if (i % a) % b != (i % b) % a:\n            count += 1\n            counts[i] = 1\n\n    for i in xrange(1, len(counts)):\n        counts[i] += counts[i -1]\n\n    # for i in xrange(len(counts) - 2, -1, -1):\n    #     neg_counts[i] += neg_counts[i + 1]\n\n    for (l, r) in qq:\n        l_rem = l % (a * b)\n        l_div = l / (a * b)\n\n        if l_rem != 0:\n            ll = (l_div + 1) * (a * b)\n        else:\n            ll = l_div * (a * b)\n\n        r_rem = r % (a * b)\n        r_div = r / (a * b)\n\n        if r_rem != 0:\n            rr = r_div * (a * b)\n        else:\n            rr = r_div * a * b\n\n        res = 0\n        if rr >= ll:\n            res = ((rr - ll) / (a * b)) * count\n            # for i in xrange(l, ll):\n            if l_rem != 0:\n                res += count - counts[l_rem - 1]\n\n            res += counts[r_rem]\n            # for i in xrange(ll - l):\n            #     x = i + l\n            #     if (x % a) % b != (x % b) % a:\n            #         res += 1\n            #\n            # # for i in xrange(rr, r + 1):\n            # for i in xrange(r + 1 - rr):\n            #     x = i + rr\n            #     if (x % a) % b != (x % b) % a:\n            #         res += 1\n\n        else:\n\n            res = counts[r % (a*b)] - counts[l % (a * b) - 1]\n\n        sys.stdout.write(str(res) + ' ')\n    sys.stdout.write('\\n')\n"
        },
        {
            "language": 3,
            "solution": "##a, b = map(int, input().split())\n##k = False\n##for i in range(10000):\n##    if (i % a) % b != (i % b) % a and k == False:\n##        print(i, i % a, i % b, (i % a) % b, (i % b) % a)\n##        k = True\n##    elif (i % a) % b == (i % b) % a and k == True:\n##        print(i)\n##        k = False\ndef gcd(a, b):\n    a, b = max(a, b), min(a, b)\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef f(a, b, x):\n    g = a * b // gcd(a, b)\n    #print(g)\n    a, b = min(a, b), max(a, b)\n    if g == b or x < b:\n        return 0\n    nn = (x - b) // g + 1\n    #print(nn, (nn - 1) * g + b)\n    if x - ((nn - 1) * g + b) >= g - b:\n        return nn * (g - b)\n    else:\n        return (nn - 1) * (g - b) + x - ((nn - 1) * g + b) + 1\n\ndef ff(a, b, x):\n    a, b = min(a, b), max(a, b)\n    ans = 0\n    for i in range(x + 1):\n        if (i % a) % b != (i % b) % a:\n            ans += 1\n    return ans\n\n\n##from random import randint\n##while True:\n##    a = randint(1, 200)\n##    b = randint(1, 200)\n##    x = randint(1, 100000)\n##    #print(f(a, b, x), ff(a, b, x))\n##    if f(a, b, x) != ff(a, b, x):\n##        print(a, b, x)\ngans = []\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    ansi = []\n    for i in range(q):\n        L, R = map(int, input().split())\n        ansi.append(f(a, b, R) - f(a, b, L - 1))\n    gans.append(' '.join(map(str, ansi)))\nprint('\\n'.join(gans))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring char_to_str(char c) {\n  string tem(1, c);\n  return tem;\n}\nlong long max(long long a, long long b) {\n  if (a > b) {\n    return a;\n  }\n  return b;\n}\nlong long min(long long a, long long b) {\n  if (a < b) {\n    return a;\n  }\n  return b;\n}\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    long long lcm1 = lcm(a, b);\n    long long max1 = max(a, b);\n    long long last_num_tot = max1 - 1;\n    for (int i = 0; i < q; ++i) {\n      long long ans = 0;\n      long long start, end;\n      cin >> start >> end;\n      long long q1 = start / lcm1;\n      long long q2 = end / lcm1;\n      if (q1 != q2) {\n        long long bet = q2 - q1 - 1;\n        ans = ans + bet * (last_num_tot + 1);\n        long long last_one = last_num_tot + (q2 * lcm1);\n        if (last_one <= end) {\n          ans = ans + last_num_tot + 1;\n        } else {\n          long long l_first_one = q2 * lcm1;\n          ans = ans + (end - l_first_one) + 1;\n        }\n        long long last_first_one = last_num_tot + (q1 * lcm1);\n        if (last_first_one >= start) {\n          ans = ans + (last_first_one - start) + 1;\n        }\n        long long last_last_first_one = q2 * lcm1;\n        if (last_first_one >= last_last_first_one) {\n          ans = ans - (last_first_one - last_last_first_one) - 1;\n        }\n      } else {\n        long long q = q1;\n        long long start_one = lcm1 * q;\n        long long last_one = last_num_tot + (lcm1 * q);\n        if ((start_one > end) || (last_one < start)) {\n          ans = 0;\n        } else {\n          if ((start_one >= start) && (last_one <= end)) {\n            ans = last_one - start_one + 1;\n          } else if ((start_one < start) && (last_one > end)) {\n            ans = end - start + 1;\n          } else {\n            if (last_one >= start) {\n              ans = ans + (last_one - start) + 1;\n            } else {\n              ans = ans + (end - start_one) + 1;\n            }\n          }\n        }\n      }\n      long long fin = end - start - ans + 1;\n      if (fin <= 0) {\n        cout << 0 << \" \";\n      } else {\n        cout << end - start - ans + 1 << \" \";\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def check_root(n, d):\n\t\"\"\"check if discriminant is non-negative\"\"\"\n\treturn (n*n + 2*n + 1 >= 4*d)\n\t\ndef mod_expo(n, p, m):\n\t\"\"\"find (n^p)%m\"\"\"\n\tresult = 1\n\twhile p != 0:\n\t\tif p%2 == 1:\n\t\t\tresult = (result * n)%m\n\t\tp //= 2\n\t\tn = (n * n)%m\n\treturn result\n\t\ndef find_product(n, m, arr):\n\t\"\"\"find |arr i - arr j| mod m\"\"\"\n\tproduct=1\n\tif n <= m:\n\t\tfor i in range(n):\n\t\t\tfor j in range(i+1, n):\n\t\t\t\t product = (product * abs(arr[i] - arr[j]))%m\n\t\treturn product\n\treturn 0\n\ndef find_subarrays(n, k, word):\n\t\"\"\"find subarrays with sum k\"\"\"\n\tcurr_sum = 0\n\tcount = 0\n\tmp = {}\n\tfor i in range(n):\n\t\tcurr_sum += int(word[i])\n\t\tif curr_sum not in mp:\n\t\t\tmp[curr_sum] = 0\n\t\tmp[curr_sum] += 1\n\t\tif curr_sum == k:\n\t\t\tcount += 1\n\t\telif (curr_sum - k) in mp:\n\t\t\tcount += mp[(curr_sum - k)]\n\treturn count\n\t\ndef construct(a, b):\n\tunequal = []\n\tfor i in range(a*b):\n\t\tunequal.append(False)\n\tfor i in range(a*b):\n\t\tif (i%a)%b  != (i%b)%a:\n\t\t\tunequal[i] = True\n\treturn unequal\n\t\ndef __init__(a, b):\n\tpref_sum = []\n\tunequal = construct(a, b)\n\tpref_sum.append(int(unequal[0]))\n\tfor i in range(1, a*b):\n\t\tpref_sum.append(pref_sum[i-1] + int(unequal[i]))\n\treturn pref_sum\n\t\ndef get_count(a, b, n, pref_sum):\n\ttotal = (n//(a*b))*pref_sum[a*b-1] + pref_sum[n%(a*b)]\n\treturn total\nt = 1\nt = int(input())\nwhile t:\n\tt = t - 1\n\t# k = int(input())\n\t# a, b, m = map(int, input().split())\n\tl = list(map(int, input().strip().split()))[:3]\n\ta = int(l[0])\n\tb = int(l[1])\n\tm = int(l[2])\n\t\n\tans = []\n\tpref_sum = __init__(a, b)\n\tfor i in range(m):\n\t\tx, y = map(int, input().split())\n\t\tans.append(get_count(a, b, y, pref_sum) - \n\t\t\t\t   get_count(a, b, x-1, pref_sum))\n\tprint(*ans, sep=' ')\n\t\n"
        },
        {
            "language": 3,
            "solution": "import math\nt=int(input())\nfor i in range(t):\n    a,b,q=map(int,input().split())\n    if b>a:\n        a,b=b,a\n    res=[]\n    for i in range(q):\n        l,r=map(int,input().split())\n        temp=a*b\n        temp//=math.gcd(a,b)\n        x=(r+1)//temp\n        ans=x*a\n        temp1=x*temp\n        ans+=min(a,r-temp1+1)\n        x=(l)//temp\n        ans-=x*a\n        temp1=x*temp\n        ans-=min(a,l-temp1)\n        res.append(r-l+1-ans)\n\n    print(*res) \n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys;input=sys.stdin.readline\nfrom math import gcd\ndef ff(x, a, b, c):\n    k = x//c\n    return (k-1)*b+min(x-k*c+1, b)\nt, = map(int, input().split())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    R = []\n    a, b = min(a, b), max(a, b)\n    c = a*b//gcd(a, b)\n    for _ in range(q):\n        l, r = map(int, input().split())\n        k1 = ff(l-1, a, b, c) \n        k2 = ff(r, a, b, c) \n        k = k2-k1\n        R.append(r-l+1-k)\n    print(*R)\n"
        },
        {
            "language": 3,
            "solution": "tc = int(input())\n\n\ndef build(a, b):\n    m = [0] * (a * b)\n    for i in range(a * b):\n        if i % a % b != i % b % a:\n            m[i] = 1\n    for i in range(1, len(m)):\n        m[i] += m[i - 1]\n    return m\n\n\ndef solve(l, m):\n    s = m[-1] * (l // len(m))\n    return s + m[l % len(m)]\n\nfor _ in range(tc):\n    a, b, q = map(int, input().split())\n    m = build(a, b)\n    ans = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        ans.append(solve(r, m) - solve(l - 1, m))\n    print(' '.join(map(str, ans)))\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    a,b,q = list(map(int, input().split()))\n    table = []\n    cumulative_sum = []\n    count = 0\n    for i in range(a*b):\n        if i % a % b == i % b % a:\n            table.append(0)\n        else:\n            table.append(1)\n    for r in table:\n        count += r\n        cumulative_sum.append(count)\n    for _ in range(q):\n        l,r = list(map(int, input().split()))\n        l = l-1\n        until_r = (r//(a*b)) * cumulative_sum[a*b-1] + cumulative_sum[r%(a*b)]\n        until_l = (l//(a*b)) * cumulative_sum[a*b-1] + cumulative_sum[l%(a*b)]\n        print(until_r - until_l)\n"
        },
        {
            "language": 4,
            "solution": "\n\n\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic long sx = 0, sy = 0, mod = (long) (1e9 + 7);\n\n\tstatic ArrayList<pair>[] a;\n\tstatic ArrayList<pair>[] p;\n\tstatic int[][] dp;\n\tstatic long[] fa;\n\tstatic long[] farr;\n\tpublic static PrintWriter out = new PrintWriter(System.out);\n\tstatic ArrayList<pair> pa = new ArrayList<>();\n\tstatic long[] fact = new long[(int) 1e6];\n\tstatic StringBuilder sb = new StringBuilder();\n\tstatic boolean cycle = false;\n\tstatic long m = 998244353;\n\tstatic int[] no, col;\n\tstatic int k = 0, n = 0;\n\tstatic int[] coin;\n\tstatic int[] time;\n\tstatic long[] ans;\n\tstatic TreeMap<Long, Integer> hm = new TreeMap<>();\n\n\tpublic static void main(String[] args) throws IOException {\n\n//\t\tScanner scn = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\n\t\t Reader scn = new Reader();\n\n\t\tint t = scn.nextInt();\n\t\t\n\t\t   while(t--!=0){\n\t\t\t   \n\t\t\t   long a = scn.nextLong(), b = scn.nextLong(), q = scn.nextLong();\n\t\t\t   \n\t\t\t   if(a < b){\n\t\t\t\t   long te = a;\n\t\t\t\t   a = b;\n\t\t\t\t   b = te;\n\t\t\t   }\n\t\t\t    long gcd = gcd(a, b);\n\t\t\t    long lcm = a * b / gcd;\n\n\t\t\t    long c = 0;\n\t\t\t    for(int i = 1; i <= 200; i++)\n\t\t\t    {\n\t\t\t        // cout<<i<<\" \"<<((i % a) % b)<<' '<<((i % b) % a)<<endl;\n\t\t\t        if(((i % a) % b) != ((i % b) % a)) c++;\n\t\t\t    }\n\t\t\t    // cout << c << endl;\n\n\t\t\t    while(q--!=0)\n\t\t\t    {\n\t\t\t        long l = scn.nextLong(), r = scn.nextLong();\n\t\t\t        \n\n\t\t\t        long t1 = lcm * (l / lcm + 1L);\n\n\t\t\t        long ans = calc(l, r, a, b, lcm);\n\n\t\t\t        if(t1 > r)\n\t\t\t        {\n\t\t\t            out.print(ans+\" \");\n\t\t\t            continue;\n\t\t\t        }\n\t\t\t        long cnt = (r - t1 + 1);\n\t\t\t        long period = cnt / lcm;\n\t\t\t        long rem = cnt % lcm;\n\n\t\t\t        ans += (lcm - a) * period;\n\t\t\t        if(rem > a) ans += (rem - a);\n\n\t\t\t        out.print(ans+\" \");\n\t\t\t    }    \n\t\t\t    out.println();\n\t\t   }\n\n\t\t    out.close();\n\t}\n\n\t\n\n\tpublic static long calc(long l, long r, long a, long b, long lcm)\n\t{\n\t    long t1 = lcm * (l / lcm + 1L);\n\t    long ans = 0;\n\t    if(r < t1)\n\t    {\n\t        if(r % lcm < a) return 0;\n\t        ans += r - l + 1;\n\t        if(l % lcm < a) ans -= a - (l % lcm);\n\t    }\n\t    else\n\t    {\n\t        ans += (t1 - l);\n\t        if(l % lcm < a) ans -= a - (l % lcm);\n\t    }\n\n\t    return ans;\n\t}\n\n\t// _________________________TEMPLATE_____________________________________________________________\n\n\t// public static long lcm(long x, long y) {\n\t//\n\t// return (x * y) / gcd(x, y);\n\t// }\n\t//\n\tprivate static long gcd(long x, long y) {\n\t\tif (x == 0)\n\t\t\treturn y;\n\n\t\treturn gcd(y % x, x);\n\t}\n\t//\n\t// static class comp implements Comparator<Integer> {\n\t//\n\t// @Override\n\t// public int compare(Integer p1, Integer p2) {\n\t//\n\t// return p2 - p1;\n\t//\n\t// }\n\t// }\n\t//\n\t// }\n\t//\n\t// public static long pow(long a, long b) {\n\t//\n\t// if (b < 0)\n\t// return 0;\n\t// if (b == 0 || b == 1)\n\t// return (long) Math.pow(a, b);\n\t//\n\t// if (b % 2 == 0) {\n\t//\n\t// long ret = pow(a, b / 2);\n\t// ret = (ret % mod * ret % mod) % mod;\n\t// return ret;\n\t// }\n\t//\n\t// else {\n\t// return ((pow(a, b - 1) % mod) * a % mod) % mod;\n\t// }\n\t// }\n\n\tprivate static class pair implements Comparable<pair> {\n\n\t\tint v, coin, time;\n\n\t\tpair(int a, int b, int c) {\n\n\t\t\tv = a;\n\t\t\tcoin = b;\n\t\t\ttime = c;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(pair o) {\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t\t// @Override\n\t\t//\n\t\t// public int hashCode() {\n\t\t// return i;\n\t\t// }\n\t\t//\n\t\t// @Override\n\t\t//\n\t\t// public boolean equals(Object o) {\n\t\t//\n\t\t// pair p = (pair) o;\n\t\t// return this.i == p.i;\n\t\t// }\n\n\t}\n\n\tprivate static class pair1 {\n\n\t\tint c, t;\n\n\t\tpair1(int a, int b) {\n\t\t\tc = a;\n\t\t\tt = b;\n\t\t}\n\t}\n\n\tprivate static String reverse(String s) {\n\n\t\treturn new StringBuilder(s).reverse().toString();\n\t}\n\n\tpublic static class Reader {\n\t\tfinal private int BUFFER_SIZE = 1 << 16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\n\t\tpublic Reader() {\n\t\t\tdin = new DataInputStream(System.in);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic Reader(String file_name) throws IOException {\n\t\t\tdin = new DataInputStream(new FileInputStream(file_name));\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String readLine() throws IOException {\n\t\t\tbyte[] buf = new byte[1000000 + 1]; // line length\n\t\t\tint cnt = 0, c;\n\t\t\twhile ((c = read()) != -1) {\n\t\t\t\tif (c == '\\n')\n\t\t\t\t\tbreak;\n\t\t\t\tbuf[cnt++] = (byte) c;\n\t\t\t}\n\t\t\treturn new String(buf, 0, cnt);\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tdouble ret = 0, div = 1;\n\t\t\tbyte c = read();\n\t\t\twhile (c <= ' ')\n\t\t\t\tc = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg)\n\t\t\t\tc = read();\n\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (neg)\n\t\t\t\treturn -ret;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1)\n\t\t\t\tbuffer[0] = -1;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead)\n\t\t\t\tfillBuffer();\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (din == null)\n\t\t\t\treturn;\n\t\t\tdin.close();\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic int[][] nextInt2DArray(int m, int n) throws IOException {\n\t\t\tint[][] arr = new int[m][n];\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\t\tarr[i][j] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic long[][] nextInt2DArrayL(int m, int n) throws IOException {\n\t\t\tlong[][] arr = new long[m][n];\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\t\tarr[i][j] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t// kickstart - Solution\n\t\t// atcoder - Main\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "import math\nimport os,io\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\ndef findv(lcm,l,r,b):\n    p = max(min(r,b),l)\n    s = r-p+1\n    x1 = p//lcm\n    x2 = r//lcm\n    if x1*lcm+b > p:\n        s -= b-p%lcm\n    x1 += 1\n    if x2*lcm+b <= r:\n        s -= b*(x2-x1+1)\n    else:\n        s -= b*(x2-x1)+ r%lcm + 1\n    return s\n\ncases = int(input())\nfor t in range(cases):\n    a,b,q = list(map(int,input().split()))\n    a,b = min(a,b),max(a,b)\n    lcm = (a*b)//math.gcd(a,b)\n    out = []\n    for i in range(q):\n        l,r = list(map(int,input().split()))\n        if b>r:\n            out.append(0)\n        else:\n            out.append(findv(lcm, l, r, b))\n    print(*out)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int tc;\n  cin >> tc;\n  while (tc--) {\n    int a, b, q, n;\n    cin >> a >> b >> q;\n    n = a * b;\n    vector<int> query(n, 0);\n    int counter = 0;\n    for (int i = 0; i < n; i++) {\n      if (((i % b) % a) != ((i % a) % b)) {\n        ++counter;\n      }\n      query[i] = counter;\n    }\n    for (int i = 0; i < q; i++) {\n      long long x, y;\n      cin >> x >> y;\n      long long q1, q2;\n      x--;\n      q1 = x / n * counter + query[(x) % n];\n      q2 = y / n * counter + query[y % n];\n      cout << q2 - q1 << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom math import gcd,sqrt\nfrom collections import deque\ninput=stdin.readline\nR=lambda:map(int,input().split())\nI=lambda:int(input())\nS=lambda:input().rstrip('\\n')\nL=lambda:list(R())\nP=lambda x:stdout.write(x)\nlcm=lambda x,y:(x*y)//gcd(x,y)\nhg=lambda x,y:((y+x-1)//x)*x\npw=lambda x:1 if x==1 else 1+pw(x//2)\nchk=lambda x:chk(x//2) if not x%2 else True if x==1 else False\nsm=lambda x:(x**2+x)//2\nN=10**9+7\nfor _ in range(I()):\n\ta,b,q=R()\n\tlm=lcm(a,b)\n\tm=max(a,b)\n\tfor i in range(q):\n\t\tl,r=R()\n\t\tu=(r//lm)*lm\n\t\td=(l//lm)*lm\n\t\tif u==d:\n\t\t\td=u\n\t\t\tu+=m-1\n\t\t\tif u>=r:P(str(max(l,d)-l)+' ')\n\t\t\telse:P(str(min(r-l+1,r-u))+' ')\n\t\telse:\n\t\t\td=max(l-1,m-1+d)\n\t\t\tif u+m<=r:P(str(r-d-(r//lm-l//lm)*m)+' ')\n\t\t\telse:P(str(u-1-d-(r//lm-l//lm-1)*m)+' ')\n\tP('\\n')"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Tarek\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CYetAnotherCountingProblem solver = new CYetAnotherCountingProblem();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CYetAnotherCountingProblem {\n        long gcd(int a, int b) {\n            if (a == 0)\n                return b;\n            return gcd(b % a, a);\n        }\n\n        long lcm(int a, int b) {\n            return 1l * (a * b) / gcd(a, b);\n        }\n\n        long solve2(long x, long lcm, int a) {\n            long res = (x / lcm) * (lcm - a);\n            x %= lcm;\n            if (x >= a) res += (x - a + 1);\n            return res;\n        }\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int q = in.nextInt();\n            while (q-- > 0) {\n                int a = in.nextInt(), b = in.nextInt();\n                if (b > a) {\n                    int temp = a;\n                    a = b;\n                    b = temp;\n                }\n                int queries = in.nextInt();\n                long LCM = lcm(a, b);\n                while (queries-- > 0) {\n                    long l = in.nextLong(), r = in.nextLong();\n                    out.print(solve2(r, LCM, a) - solve2(l - 1, LCM, a) + \" \");\n                }\n                out.println();\n            }\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "## necessary imports\nimport sys\ninput = sys.stdin.readline\nfrom math import log2, log, ceil\n\n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp\n\n## gcd function\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n    if(k > n - k): \n        k = n - k \n    res = 1\n    for i in range(k): \n        res = res * (n - i) \n        res = res / (i + 1) \n    return res \n\n## upper bound function code -- such that e in a[:i] e < x;\ndef upper_bound(a, x, lo=0):\n    hi = len(a)\n    while lo < hi:\n        mid = (lo+hi)//2\n        if a[mid] < x:\n            lo = mid+1\n        else:\n            hi = mid\n    return lo\n\n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n\n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n\n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b\n\n# find function\ndef find(x, link):\n    while(x != link[x]):\n        x = link[x]\n    return x\n\n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n\n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e6 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n\n################## un-comment below 2 lines when using factorization #################\n# spf = [0 for i in range(MAXN)] \n# spf_sieve() \ndef factoriazation(x):\n    ret = {};\n    while x != 1:\n        ret[spf[x]] = ret.get(spf[x], 0) + 1;\n        x = x//spf[x]\n    return ret\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()))\n## taking string array input\ndef str_array():\n    return input().strip().split();\n\n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n\n\n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n\nfor _ in range(int(input())):\n    a,b,q = int_array();\n    prd = (a*b)//gcd(a,b); hsh = [];\n    for x in range(prd):\n        if ((x%a)%b) == ((x%b)%a):\n            hsh.append(0);\n        else:\n            hsh.append(1);\n    for i in range(1, prd):\n        hsh[i] += hsh[i-1];\n    prdcount = hsh[-1];\n    for qq in range(q):\n        l,r = int_array();\n        ans = (((r-r%prd) - (l - l%prd))//prd)*prdcount\n        if (l%prd) > 1:\n            ans -= hsh[(l%prd) - 1];\n        ans += hsh[r%prd];\n        if qq == q-1:\n            print(ans);\n        else:\n            print(ans, end = ' ');"
        },
        {
            "language": 3,
            "solution": "MI = lambda : map(int,input().split())\nII = lambda : int(input())\nfor _ in range(II()):\n    a,b,q = MI()\n    precalc = [0]*(a*b)\n    r=0\n    sums=[]\n    for i in range(a*b):\n        if(i%a%b != i%b%a):\n            precalc[i]=1\n            r+=1\n        sums.append(r)\n    temp = sums[-1]\n    for query in range(q):\n        l,r = MI()\n        ans=0\n        l-=1\n        ans =(r//(a*b))*temp + sums[r%(a*b)] -  (l//(a*b))*temp - sums[l%(a*b)]\n        print(ans,end=\" \")\n    print('')\n\n\n"
        },
        {
            "language": 3,
            "solution": "def gcd(j, k):\n    if j == 0:\n        return k\n    return gcd(k % j, j)\n\n\ndef lcm(j, k):\n    return (j*k)//gcd(j, k)\n\n\nt = int(input())\nwhile t:\n    a, b, q = map(int, input().split())\n    while q:\n        l, r = map(int, input().split())\n        if max(a, b) % min(a, b) == 0:\n            print(0, end=\" \")\n            q -= 1\n            continue\n        lcm_ = lcm(a, b)\n        # print(lcm_)\n        bol = 0\n        if (l / lcm_ >= 1) and (l - (l // lcm_ * lcm_) < max(a, b)):\n            bol = 1\n        else:\n            bol = 0\n        p = ((max(a, b) * (l // lcm_)) - (bol * (((l // lcm_) * lcm_) + max(a, b) - max(l, ((l // lcm_) * lcm_)))))\n        no_of_equal_mod_above_lcm = (((r // lcm_ - 1)*max(a, b)) + (min((r // lcm_) * lcm_ + max(a, b) - 1, r) - ((r // lcm_) * lcm_)) + 1) - p\n        # print(no_of_equal_mod_above_lcm, 'k = ', p)\n        if r < max(a, b):\n            print(0, end=\" \")\n        elif r // lcm_ == 0:\n            print((r - max(a, b, l) + 1), end=\" \")\n        else:\n            print(r - no_of_equal_mod_above_lcm + (-max(a, b, l) + 1), end=\" \")\n\n        q -= 1\n    print()\n    t -= 1"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nfor i in range(int(n)):\n    a,b,q = input().split()\n    a,b,q = int(a), int(b), int(q)\n    a,b = min(a,b), max(a,b)\n    \n    minn = min(a,b)\n    maxx = max(a,b)\n    mult = a*b\n    den = 0\n    \n    for h in range(2,300):\n        if a%h==0 and b%h==0:\n           den = h\n        if h==minn:\n            break\n           \n    if den>0:\n        a //= den\n        \n    minn = min(a,b)\n    maxx = max(a,b)\n    mult = a*b\n    \n    topri = []\n    \n    for j in range(q):\n        l,r = input().split()\n        l,r = int(l), int(r)\n        \n        x = max(l,r) - min(l,r)\n        n1 = x+1\n       \n        score = (r//mult - l//mult) * maxx\n        if r%mult < maxx:\n            score -=maxx\n            score += r%mult\n            score += 1\n        score += max(0,maxx - l%mult)\n        #print(n1 - score, a,b)\n        to_add = str(n1 - score)\n        if a==1:\n            to_add = '0'\n        \n        topri.append(to_add)\n        \n    print(' '.join(topri))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n# Function to return LCM of two numbers\ndef lcm(a,b):\n    return (a*b) / gcd(a,b)\n\n\nfor p in range(0,t):\n    ans = []\n    a,b,q = map(int,input().split())\n    chota = min(a,b)\n    bada = max(a,b)\n    for i in range(0,q):\n        l,r = map(int,input().split())\n        # print(l,r)\n        if(r<=chota):\n            ans.append(0)\n        else:\n            lc = int(lcm(chota,bada))\n            # print(lc)\n            # print(chota,bada)\n            x = l//lc\n            # print(x,'  = x')\n\n            y = r//lc\n            # print(y,' = y')\n            if(y == 0):\n                if(r < bada):\n                    ans.append(0)\n                else:\n                    if(l > bada):\n                        ans.append(r-l+1)\n                    else:\n                        ans.append(r - bada + 1)\n                # print('here')\n            else:\n                if((x*lc)+bada <= l and (y*lc)+bada <= r):\n                    # print('here',l)\n                    temp = y-x\n                    ans.append((r-l+1) - (temp*bada))\n                    # print((r-l+1) - (temp*bada))\n\n                else:\n                    temp = (y-x)*bada\n                    extra = 0\n                    # print(temp)\n                    # print(temp)\n                    if((x*lc)+bada > l):\n                        extra += ((x*lc)+bada) - l\n                    # print(extra,'lol')\n                    if((y*lc)+bada > r):\n                        extra -= ((y*lc)+bada) - r - 1\n                    # print(extra,'lol')\n                    ans.append((r-l+1) - (temp+extra))\n                    # print((r-l+1) - (temp+extra),end='***')\n                    # print()\n    print(*ans)\n\n\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef lcm(a, b):\n    return (a * b) // math.gcd(a, b)\n\nt = int(input())\n\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    k = lcm(a, b) // b\n    nt = b\n    t = (k - 1) * b\n    f = k * b\n    ab = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        s = 0\n        \n        lf = l // f\n        rf = r // f\n        cm = (lf + 1) * f\n        s += min(t, cm - l)\n        s += (rf - lf - 1) * t\n        s += max(0, r - rf * f - nt + 1)\n            \n        ab.append(s)\n    print(\" \".join(map(str,ab)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int cnt(long long int n, int* arr, int* csum, long long int a,\n                  long long int b) {\n  long long int a1 = (n / (a * b)) * csum[a * b - 1];\n  long long int q = n % (a * b);\n  long long int a2 = csum[q];\n  return a1 + a2;\n}\nint main() {\n  long long int t, a, b, q, l, r;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    int arr[a * b];\n    int csum[a * b];\n    for (int i = 0; i < a * b; i++) {\n      if ((i % a) % b != (i % b) % a) {\n        arr[i] = 1;\n      } else {\n        arr[i] = 0;\n      }\n      csum[i] = arr[i] + csum[i - 1];\n    }\n    csum[0] = arr[0];\n    for (int i = 1; i < a * b; i++) {\n      csum[i] = arr[i] + csum[i - 1];\n    }\n    while (q--) {\n      cin >> l >> r;\n      long long int ans = cnt(r, arr, csum, a, b) - cnt(l - 1, arr, csum, a, b);\n      cout << ans << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class C {\n    public static void main(String[] args) throws IOException{\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        int t = Integer.parseInt(f.readLine());\n        while(t-->0){\n            StringTokenizer st = new StringTokenizer(f.readLine());\n            int a = Integer.parseInt(st.nextToken());\n            int b = Integer.parseInt(st.nextToken());\n            int q = Integer.parseInt(st.nextToken());\n            int[] arr = new int[a*b];\n            long sum = 0;\n            for(int i = 0; i < a*b; i++){\n                if((i % a)%b != (i % b) % a){\n                    arr[i] = 1;\n                    sum++;\n                }\n            }\n            long[] prefs = new long[a*b+1];\n            prefs[0] = 0;\n            for(int i = 1; i <= a*b; i++){\n                prefs[i] = prefs[i-1]+arr[i-1];\n            }\n            StringBuilder ot = new StringBuilder();\n            for(int i = 0; i < q; i++){\n                st = new StringTokenizer(f.readLine());\n                long l = Long.parseLong(st.nextToken());\n                long r = Long.parseLong(st.nextToken());\n                long sum1 = 0;\n                if(l < (a*b) && r < (a*b)){\n                    ot.append(prefs[(int)r+1]-prefs[(int)l]+\" \");\n                    continue;\n                }\n                if(l%(a*b) != 0) sum1 = prefs[a*b]-prefs[(int)(l%(a*b))];\n                long sum2 = 0;\n                if(r%(a*b) != 0){\n                    sum2 = prefs[(int)(r%(a*b))+1];\n                }\n                long lb = (l/(a*b));\n                if(l % (a*b) != 0) lb++;\n                long rb = (r/(a*b));\n                long ans = sum1+sum2+(sum*(rb-lb));\n                ot.append(ans+\" \");\n            }\n            out.println(ot.toString().trim());\n        }\n\n\n        out.close();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 4e4 + 5;\nint cnt[N];\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    int x = a * b;\n    for (int i = 1; i <= x; i++) cnt[i] = cnt[i - 1] + (i % a % b != i % b % a);\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      l--;\n      cout << (r / x - l / x) * cnt[x] - cnt[l % x] + cnt[r % x] << ' ';\n    }\n    cout << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(x, y): \n   while(y): \n       x, y = y, x % y \n  \n   return x\n \n \n \nt = int(input())\nfor i in range(t):\n    inp = input().split(\" \")\n    a = int(inp[0])\n    b = int(inp[1])\n    q = int(inp[2])\n    GCD = gcd(a, b)\n    LCM = (a*b)//GCD\n    minst = a if a <= b else b\n    mest = a if a >= b else b\n    result = \"\"\n    for k in range(q):\n        inp2 = input().split(\" \")\n        l = int(inp2[0])\n        r = int(inp2[1]) +1 \n        innr = (r-r%LCM)\n        innl = (l+(LCM - l%LCM))\n       \n        ans = 0\n        if (innr > innl):\n            ans = ((innr - innl + 1)//LCM)*(LCM-mest) # alle hele cycles som er i intervallet\n        \n        if r//LCM == l//LCM: # de er i samme cycle\n            tmp = r%LCM - (l%LCM if l%LCM > mest else mest)\n            ans += tmp if tmp > 0 else 0\n        else:\n            tmpl = LCM - (l%LCM if l%LCM > mest else mest)\n            tmpr = r%LCM - mest\n            ans += tmpl if tmpl > 0 else 0\n            ans += tmpr if tmpr > 0 else 0\n        \n        result += str(ans) + \" \"\n    print(result)"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    ans = [0]*q\n    lcm= (a*b)//gcd(a,b)\n    z = min(a, b) + abs(a - b)\n    #print(z)\n    for i in range(q):\n        l,r = map(int,input().split())\n        s = 0\n        x =l//lcm\n        y = r//lcm\n\n        if x*lcm + z -1>=l:\n            ans[i]+= x*lcm + z - l\n        #print(ans)\n\n        ans[i]+=(y-x-1)*z\n        #print(ans)\n        if y*lcm +z -1<=r:\n            ans[i]+=z\n        else:\n            ans[i]+= z-(y*lcm + z -1 -r)\n        #print(ans)\n\n        ans[i]=abs(l-r)+1 - ans[i]\n\n    print(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) { return (b == 0) ? a : gcd(b, a % b); }\nvoid solve() {\n  long long a, b, q;\n  cin >> a >> b >> q;\n  long long mx = max(a, b);\n  long long lcm = a / gcd(a, b) * b;\n  long long num = lcm - mx;\n  long long l, r, d1, d2;\n  long long ans;\n  long long sub;\n  while (q--) {\n    cin >> l >> r;\n    d1 = l / lcm;\n    d2 = r / lcm;\n    ans = (d2 - d1) * num;\n    ans = ans - max(0ll, l - d1 * lcm - mx) + max(0ll, r + 1 - d2 * lcm - mx);\n    cout << ans << \" \";\n  }\n  cout << endl;\n}\nint32_t main() {\n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  long long tc = 1;\n  cin >> tc;\n  while (tc--) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfrom math import gcd\nfor i in range(t):\n    a,b,q=map(int,input().split())\n    ans=[]\n    g=gcd(a,b)\n    a,b=min(a,b),max(a,b)\n    lcm=(a*b)//g\n    for j in range(q):\n        l,r=map(int,input().split())\n        if a==b or r<b:\n            ans.append(0)\n        else:\n            t1,t2=0,0\n            x=r-max(l,b)+1\n            y=r//lcm-l//lcm\n            if r%lcm==0:\n                y-=1\n                t1=-1\n            else:\n                if r%lcm<b-1 and r//lcm>0:\n                        t1=b-r%lcm-1      \n            if l%lcm==0:\n                y+=1\n            else:\n                if l%lcm<=b-1 and l//lcm>0:\n                    t2=-b+l%lcm\n            ans.append(x-y*b+t1+t2)\n    print(*ans)\n\n            \n"
        },
        {
            "language": 3,
            "solution": "def count(f,i,n):\n    #print(f'f[-1]*{i//n}+f[{i%n}]='+str(f[-1]*(i//n)+f[i%n]))\n    return f[-1]*(i//n)+f[i%n]\n\nfor _ in range(int(input())):\n    a,b,q=[int(x)for x in input().split()]\n    f=[0]\n    n=a*b\n    for i in range(1,n):\n        f.append(f[i-1])\n        if (i%a)%b != (i%b)%a:\n            f[i] = f[i] + 1\n    #print(f)\n    res = []\n    for _ in range(q):\n        l, r = [int(x) for x in input().split()]\n        res.append(count(f,r,n)-count(f,l-1,n))\n\n    print(' '.join([str(x) for x in res]))\n"
        },
        {
            "language": 3,
            "solution": "import math\nn = int(input())\nfor i in range(n):\n    a,b,q = map(int,input().split())\n    m = a*b//math.gcd(a,b)\n    d= max(a,b)\n    for j in range(q):\n        l,r = map(int,input().split())\n        print(r+1-l-(d*((r//m)-(l//m)+1)- min(d,l%m) - max(0,d-r%m-1)))\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nimport threading \nfrom math import floor,ceil\nfrom bisect import bisect_right\nfrom collections import Counter\nfrom math import gcd\n\n\nmod=10**9+7\n\n\ndef main():\n\n    for _ in  range(int (input())):\n        a,b,q=map(int,input().split())\n        arr=[0]*(a*b+1)\n        for i in range(0,a*b+1):\n            if (i%a)%b!=(i%b)%a:\n                arr[i]=1\n        # print(arr)\n        for i in range(1,a*b+1):\n            arr[i]+=arr[i-1]\n        ans=[]\n        # print(arr)\n        for i in range(q):\n            l,r=map(int,input().split())\n            t1=arr[-1]*(r//(a*b))+arr[r%(a*b)]\n            l-=1\n            t2=arr[-1]*(l//(a*b))+arr[l%(a*b)]\n            ans.append(t1-t2)\n        print(*ans)\n\n\n\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n  public class Task {\n     \nstatic BufferedReader s1;\nstatic BufferedWriter out;\nstatic String read() throws IOException{String line=\"\";while(line.length()==0){line=s1.readLine();continue;}return line;}\nstatic int int_v (String s1){return Integer.parseInt(s1);}\nstatic long long_v(String s1){return Long.parseLong(s1);}\nstatic int[] int_arr() throws IOException{String[] a=read().split(\" \");int[] b=new int[a.length];for(int i=0;i<a.length;i++){b[i]=int_v(a[i]);}return b;}\nstatic long[] long_arr() throws IOException{String[] a=read().split(\" \");long[] b=new long[a.length];for(int i=0;i<a.length;i++){b[i]=long_v(a[i]);}return b;}\nstatic void assign(){s1=new BufferedReader(new InputStreamReader(System.in));out=new BufferedWriter(new OutputStreamWriter(System.out));}\nstatic long gcd(long a,long b){if(b==0){return a;}return gcd(b,a%b);}\n\n static long get ( long up,int b,int x) {\n  if (up < b) return up + 1;\n   long lim = (up - b + 1) / (b * x);\n   long ret = b * (lim + 1) + Math.max(0, up - b * x * (lim + 1) + 1);\n  return ret;\n}\n  public static void main(String args[]) throws  IOException {\n        assign();\n        int t=int_v(read());\n        while(t--!=0){\n            int[] n1=int_arr();\n            int b=Math.max(n1[0],n1[1]),a=Math.min(n1[0],n1[1]);\n            a=a/((int)gcd((long)a,(long)b));\n            while(n1[2]--!=0){\n                long[] lr=long_arr();\n                lr[0]--;\n                long ans=lr[1]-lr[0]-get(lr[1],b,a)+get(lr[0],b,a);\n                out.write(ans+\" \");\n            }\n            out.write(\"\\n\");\n        }\n            \n            \n\n             out.flush();\n    }\n           \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.*;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.util.*;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.util.function.*;\nimport java.util.stream.*;\n\n\npublic class C {\n\n    private static final FastReader in = new FastReader();\n    private static final FastWriter out = new FastWriter();\n\n    public static void main(String[] args) {\n        new C().run();\n    }\n\n    private void run() {\n        var t = in.nextInt();\n        while (t-- > 0) {\n            solve();\n        }\n\n        out.flush();\n    }\n\n    int a;\n    int b;\n    long lcm;\n\n    private void solve() {\n        a = in.nextInt();\n        b = in.nextInt();\n        var q = in.nextInt();\n\n        if (a > b) {\n            var t = a;\n            a = b;\n            b = t;\n        }\n\n        lcm = lcm(a, b);\n\n        while (q-- > 0) {\n            var l = in.nextLong();\n            var r = in.nextLong();\n\n            out.print(count(r) - count(l - 1));\n            out.print(' ');\n        }\n\n        out.println();\n    }\n\n    long count(long x) {\n        var r = x / lcm;\n        var d = x % lcm + 1;\n        if (d > b) d = b;\n        return x - (r * b + d);\n    }\n\n    int gcd(int a, int b)\n    {\n        while (b > 0) {\n            int t = a % b;\n            a = b;\n            b = t;\n        }\n        return a;\n    }\n\n    int lcm(int a, int b)\n    {\n        return a / gcd(a, b) * b;\n    }\n\n}\n\n\nclass FastReader {\n\n    private static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    private static StringTokenizer in;\n\n    public String next() {\n        while (in == null || !in.hasMoreTokens()) {\n            try {\n                in = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                return null;\n            }\n        }\n        return in.nextToken();\n    }\n\n    public BigDecimal nextBigDecimal() {\n        return new BigDecimal(next());\n    }\n\n    public BigInteger nextBigInteger() {\n        return new BigInteger(next());\n    }\n\n    public boolean nextBoolean() {\n        return Boolean.valueOf(next());\n    }\n\n    public byte nextByte() {\n        return Byte.valueOf(next());\n    }\n\n    public double nextDouble() {\n        return Double.valueOf(next());\n    }\n\n    public double[] nextDoubleArray(int length) {\n        var a = new double[length];\n        for (var i = 0; i < length; i++) {\n            a[i] = nextDouble();\n        }\n        return a;\n    }\n\n    public int nextInt() {\n        return Integer.valueOf(next());\n    }\n\n    public int[] nextIntArray(int length) {\n        var a = new int[length];\n        for (var i = 0; i < length; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    public long nextLong() {\n        return Long.valueOf(next());\n    }\n\n    public long[] nextLongArray(int length) {\n        var a = new long[length];\n        for (var i = 0; i < length; i++) {\n            a[i] = nextLong();\n        }\n        return a;\n    }\n\n}\n\n\nclass FastWriter extends PrintWriter {\n\n    public FastWriter() {\n        super(System.out);\n    }\n\n    public void println(boolean[] a) {\n        for (var i = 0; i < a.length; i++) {\n            print(a[i]);\n            print(i + 1 < a.length ? ' ' : '\\n');\n        }\n    }\n\n    public void println(double[] a) {\n        for (var i = 0; i < a.length; i++) {\n            print(a[i]);\n            print(i + 1 < a.length ? ' ' : '\\n');\n        }\n    }\n\n    public void println(int[] a) {\n        for (var i = 0; i < a.length; i++) {\n            print(a[i]);\n            print(i + 1 < a.length ? ' ' : '\\n');\n        }\n    }\n\n    public void println(long[] a) {\n        for (var i = 0; i < a.length; i++) {\n            print(a[i]);\n            print(i + 1 < a.length ? ' ' : '\\n');\n        }\n    }\n\n    public void println(Object... a) {\n        for (var i = 0; i < a.length; i++) {\n            print(a[i]);\n            print(i + 1 < a.length ? ' ' : '\\n');\n        }\n    }\n\n    public <T> void println(List<T> l) {\n        println(l.toArray());\n    }\n\n    public void debug(String name, Object o) {\n        String value = Arrays.deepToString(new Object[] { o });\n        value = value.substring(1, value.length() - 1);\n        System.err.println(name + \" => \" + value);\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef pgcd(a,b) :  \n   while a%b != 0 : \n      a, b = b, a%b \n   return b\n   \n    \n    \nt = int(input())\nfor _ in range(t):\n    c = input().split()\n    a = int(c[0])\n    b = int(c[1])\n    q = int(c[2])\n    if a > b:\n        b,a = a,b\n    p = a//pgcd(a,b)\n    out = []\n    for _ in range(q):\n        lr = input().split()\n        l = int(lr[0])\n        r = int(lr[1])\n        v = r-l+1\n        if (l//b)%p == 0:\n            v -= min(b-l%b,r-l+1)\n        if (r//b) != (l//b) and (r//b)%p == 0:\n            v -= r%b+1\n        minl = l//b +1\n        if minl%p > 0:\n            minl += p - minl%p\n        maxr = r//b-1\n        maxr -= maxr%p\n        if maxr >= minl:\n            v -= b*((maxr-minl)//p+1)\n        out.append(v)\n    \n                \n                \n                \n        \n        \n    print(*out,sep=\" \")\n        \n            "
        },
        {
            "language": 4,
            "solution": "/**\n * @author vivek\n * programming is thinking, not typing\n */\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n    private static void solveTC(int __) {\n\n        /* For Google */\n//\t\tans.append(\"Case #\").append(__).append(\": \");\n\n        //code start\n\n        int a = scn.nextInt(), b = scn.nextInt(), q = scn.nextInt();\n        int[] arr = new int[a * b + 1];\n        for (int i = 1; i < arr.length; i++) {\n            if ((i % a) % b != (i % b) % a) {\n                arr[i] = 1;\n            }\n            arr[i] += arr[i - 1];\n        }\n\n        while (q-- > 0) {\n            long l = scn.nextLong();\n            long r = scn.nextLong();\n            print(getCount(r, arr) - getCount(l - 1, arr) + \" \");\n        }\n\n        //code end\n\n        print(\"\\n\");\n    }\n\n    private static long getCount(long n, int[] arr) {\n\n        long ans = (n / (arr.length - 1)) * arr[arr.length - 1];\n        ans += arr[(int) (n % (arr.length - 1))];\n\n        return ans;\n    }\n\n    /**\n     * Don't copy other's templates, make your own <br>\n     * It would be much more beneficial\n     */\n\n    public static void main(String[] args) {\n        scn = new Scanner();\n        ans = new StringBuilder();\n        int t = scn.nextInt();\n//\t\tint t = 1;\n\n//        int limit=               ;\n//        sieve(limit);\n\n        /*\n        try {\n            System.setOut(new PrintStream(new File(\"file_i_o\\\\output.txt\")));\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n*/\n        for (int i = 1; i <= t; i++) {\n            solveTC(i);\n        }\n        System.out.print(ans);\n    }\n    //Stuff for prime start\n\n    /**\n     * List containing prime numbers <br>\n     * <b>i<sup>th</sup></b> position contains <b>i<sup>th</sup></b> prime number <br>\n     * 0th index is <b>null</b>\n     */\n    private static ArrayList<Integer> listOfPrimes;\n\n    /**\n     * query <b>i<sup>th</sup></b> element to get if its prime of not\n     */\n    private static boolean[] isPrime;\n\n    /**\n     * Performs Sieve of Erathosnesis and initialise isPrime array and listOfPrimes list\n     *\n     * @param limit the number till which sieve is to be performed\n     */\n    private static void sieve(int limit) {\n        listOfPrimes = new ArrayList<>();\n        listOfPrimes.add(null);\n        boolean[] array = new boolean[limit + 1];\n\n        Arrays.fill(array, true);\n        array[0] = false;\n        array[1] = false;\n\n        for (int i = 2; i <= limit; i++) {\n            if (array[i]) {\n                for (int j = i * i; j <= limit; j += i) {\n                    array[j] = false;\n                }\n            }\n        }\n        isPrime = array;\n        for (int i = 0; i <= limit; i++) {\n            if (array[i]) {\n                listOfPrimes.add(i);\n            }\n        }\n    }\n    //stuff for prime end\n\n    /**\n     * Calculates the Least Common Multiple of two numbers\n     *\n     * @param a First number\n     * @param b Second Number\n     * @return Least Common Multiple of <b>a</b> and <b>b</b>\n     */\n    private static long lcm(long a, long b) {\n        return a * b / gcd(a, b);\n    }\n\n    /**\n     * Calculates the Greatest Common Divisor of two numbers\n     *\n     * @param a First number\n     * @param b Second Number\n     * @return Greatest Common Divisor of <b>a</b> and <b>b</b>\n     */\n    private static long gcd(long a, long b) {\n        return (b == 0) ? a : gcd(b, a % b);\n    }\n\n    static void print(Object obj) {\n        ans.append(obj.toString());\n    }\n\n\n    static Scanner scn;\n    static StringBuilder ans;\n\n    //Fast Scanner\n    static class Scanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n/*\n            try {\n                br = new BufferedReader(new\n                        InputStreamReader(new FileInputStream(new File(\"file_i_o\\\\input.txt\"))));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n*/\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextInt();\n            }\n            return array;\n        }\n\n        Integer[] nextIntegerArray(int n) {\n            Integer[] array = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextInt();\n            }\n            return array;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] array = new long[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextLong();\n            }\n            return array;\n        }\n\n        String[] nextStringArray() {\n            return nextLine().split(\" \");\n        }\n\n        String[] nextStringArray(int n) {\n            String[] array = new String[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = next();\n            }\n            return array;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\ndef lcm(a,b):\n    return a*b//gcd(a,b)\n\ndef cnt(n,l,x):\n    llim=n-n%l\n    return (llim//l)*x+ min(n-llim+1,x)\n\nt=int(input())\nfor _ in range(t):\n    a,b,q=map(int,input().split())\n    l=lcm(a,b)\n    x=max(a,b)\n    for i in range(q):\n        lt,r=map(int,input().split())\n        print(r-lt+1-cnt(r,l,x)+cnt(lt-1,l,x),end=' ')\n    print('')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Main {\n\n\tprivate static FastReader fastReader = new FastReader();\n\tpublic static void main(String[] args) {\n\t\tTask solver = new Task();\n\t\tsolver.solve();\n\t}\n \n\tstatic class Task{\n\t\t\n\t\tprivate long getGCD(long a, long b){\n\t\t\tif(b==0) return a;\n\t\t\treturn getGCD(b, a%b);\n\t\t}\n\t\t\n\t\tprivate long getCount(long r, long lcm, long b){\n\t\t\tlong blocks = r/lcm;\n\t\t\tlong count = r;\n\t\t\tlong pd = blocks*lcm;\n\t\t\tif(blocks != 0){\n\t\t\t\tcount -= Math.min(b, r-pd + 1);\n\t\t\t\tcount -= (blocks-1)*b;\n\t\t\t}\n\t\t\treturn (count-Math.min(r, b-1));\n\t\t}\n\t\t\n\t\tpublic void solve() {\n\t\t\tint nt = fastReader.nextInt();\n\t\t\tStringBuilder result = new StringBuilder();\n\t\t\twhile(nt-- > 0){\n\t\t\t\tlong a = fastReader.nextLong();\n\t\t\t\tlong b = fastReader.nextLong();\n\t\t\t\tint q = fastReader.nextInt();\n\t\t\t\tif(a>b){\n\t\t\t\t\tlong temp = a;\n\t\t\t\t\ta = b;\n\t\t\t\t\tb = temp;\n\t\t\t\t}\n\t\t\t\tStringBuilder ans = new StringBuilder();\n\t\t\t\twhile(q-- > 0){\n\t\t\t\t\tlong l = fastReader.nextLong();\n\t\t\t\t\tlong r = fastReader.nextLong();\n\t\t\t\t\tlong count = 0;\n\t\t\t\t\tlong lcm = (a*b)/getGCD(a, b);\n\t\t\t\t\tcount = getCount(r, lcm, b);\n\t\t\t\t\tcount -= getCount(l-1, lcm, b);\n\t\t\t\t\tans.append(String.valueOf(count)+\" \");\n\t\t\t\t}\n\t\t\t\tresult.append(ans+\"\\n\");\n\t\t\t}\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}\n \n\tstatic class FastReader {\n\t\tpublic BufferedReader reader;\n\t\tpublic StringTokenizer tokenizer;\n \n\t\tpublic FastReader() {\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\t\ttokenizer = null;\n\t\t}\n \n\t\tpublic String next() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n \n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\t\n\t\tpublic String readLine() {\n\t\t\ttry {\n\t\t\t\treturn reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "# Contest No.: Edu 86\n# Problem No.: C\n# Solver:      JEMINI\n# Date:        20200426\n\nimport sys\n\ndef gcd(a: int, b: int) -> int:\n    if a < b:\n        a, b = b, a\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        a, b, q = map(int, sys.stdin.readline().split())\n        modVal = None\n        modVal = a * b // gcd(a, b)\n        checkList = [0] * modVal\n        loopSum = 0\n        for i in range(modVal):\n            if ((i % a) % b) != ((i % b) % a):\n                loopSum += 1\n            checkList[i] = loopSum\n        \n        for i in range(q):\n            l, r = map(int, sys.stdin.readline().split())\n            def calcSum(n: int) -> int:\n                return loopSum * (n // modVal) + checkList[n % modVal]\n            ans = calcSum(r) - calcSum(l - 1)\n            print(ans, end = \" \")\n        print(\"\")\n    return\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "def compute_gcd(x, y):\n    while (y):\n        x, y = y, x % y\n    return x\n\n\n# This function computes LCM\ndef compute_lcm(x, y):\n    lcm = (x * y) // compute_gcd(x, y)\n    return lcm\n\n\nfor t in range(int(input())):\n    a, b, q = map(int, input().split())\n    mx = max(a, b)\n    lcm = compute_lcm(a, b)\n    a=[]\n    for i in range(q):\n        x, y = map(int, input().split())\n        wran = y - x + 1\n        st = x // lcm\n        fn = y // lcm\n        ans=0\n        #first in:\n        if st*lcm<=x<=y<st*lcm+mx or lcm==mx:\n            a.append(\"0\")\n            continue\n        if st*lcm<=x<=st*lcm+mx:\n            ans+=st*lcm+mx-x\n        st+=1\n        if fn*lcm<=y<fn*lcm+mx:\n            ans+=y-(fn*lcm)+1\n            fn-=1\n        ans+=(fn-st+1)*mx\n        a.append(str(wran-ans))\n    print(\" \".join(a))\n"
        },
        {
            "language": 3,
            "solution": "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\n# import io, os\n# input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nimport sys\ninput = sys.stdin.readline\n\nM = mod = 10**9 + 7\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n\ndef li():return [int(i) for i in input().split()]\ndef st():return input()\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\ndef giveab(a,b):\n    l = []\n    for i in range(1,a * b + 1,1):\n        l.append(1 if ((i%a)%b) != ((i%b)%a) else 0)\n    return l[:]\n\ndef giveforanum(r,s,l):\n    temp = r//(a * b)\n    up = temp*s\n    r %= (a * b)\n    \n    return up + l[r]\n\n\nfor _ in range(val()):\n    a,b,q = li()\n    \n    l1 = giveab(a,b)\n    pref = [0]\n    for i in l1:pref.append(pref[-1] + i)\n\n    s = sum(l1)\n    ans = []\n    for i in range(q):\n        l,r = li()\n        ans.append(giveforanum(r,s,pref) - giveforanum(l-1,s,pref))\n    print(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1e6 + 1e5, inf = 3e18, mod = 1e9 + 7;\nlong long tc, n, m, q, a, b, c, d, i, j, k;\nlong long sum[N];\nvector<long long> vec;\nstring s;\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  cin >> tc;\n  while (tc--) {\n    cin >> a >> b >> q;\n    for (i = 1; i <= 2 * a * b; i++)\n      sum[i] = sum[i - 1] + (((i % a) % b) != ((i % b) % a));\n    while (q--) {\n      long long L, R;\n      cin >> L >> R;\n      cout << (R - L + 1) / (a * b) * sum[a * b] + sum[a * b + R % (a * b)] -\n                  sum[a * b + R % (a * b) - (R - L + 1) % (a * b)]\n           << ' ';\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nNTC here\n\"\"\"\n \n\n#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\ndef iin(): return int(input())\n \n \ndef lin(): return list(map(int, input().split()))\n\ndef main():\n    from math import gcd\n    def lcm(a, b):\n        return (a*b)//gcd(a, b)\n    T = iin()\n    while T:\n        T-=1\n        a, b, q = lin()\n        if a>b:a, b= b, a\n        lcm1 = lcm(a, b)\n        ans = []\n        for i in range(q):\n            sol = 0\n            l, r = lin()\n            l1 = l\n            r1 = r\n            sol += max(min(r, b-1)-l+1, 0)\n            # print('s1-', sol)\n            l = max(lcm1, l)\n            if l<=r:\n                x1 = (r)//lcm1-(l-1)//lcm1\n                # print(l, r, lcm1)\n                sol += x1*b\n                x2 = (r//lcm1)*lcm1\n                if x1 and x2+b>r:\n                    sol -= b\n                    sol += min(r-x2+1, b)\n                    # print('i1-', min(r-x2+1, b))\n                x2 = ((l-1)//lcm1)*lcm1\n                if x2+b>l:\n                    sol += min(x2+b-1, r)-l+1\n                    # print('i2-', x2, l, min(x2+b-1, r)-l+1)\n            # print('s2-', sol)\n            ans.append(r1-l1+1-sol)\n        print(*ans)\n        \n\n\n\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Solution{\n  public static void main(String[] args) throws IOException{\n    StringBuilder print = new StringBuilder();\n    BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n    int t = Integer.parseInt(input.readLine());\n    while(t-- > 0){\n      StringTokenizer st = new StringTokenizer(input.readLine());\n      long a = Long.parseLong(st.nextToken());\n      long b = Long.parseLong(st.nextToken());\n      long tempA = a;\n      long tempB = b;\n      long q = Long.parseLong(st.nextToken());\n      long lcm = 1;\n      for(int prime = 2; prime < 15; prime++){\n        boolean divide = true;\n        while(divide){\n          if( tempA%prime != 0 ){\n            divide = false;\n          }\n          if( tempB%prime != 0){\n            divide = false;;\n          }\n          if(divide){\n            tempA /= prime;\n            tempB /= prime;\n            lcm *= prime;\n          }\n        }\n      }\n      lcm = (a * b)/lcm;\n      long total = 0;\n      ArrayList<Long> totalList = new ArrayList<Long>();\n      for(int j = 0; j < lcm; j++){\n        if(((j%b)%a) != ((j%a)%b)){\n          total++;\n        }\n        totalList.add(total);\n      }\n\n      long period = Math.min(a,b);\n      for(long i = 0; i < q; i++){\n        st = new StringTokenizer(input.readLine());\n        long l = Long.parseLong(st.nextToken());\n        long r = Long.parseLong(st.nextToken());\n\n        long firstPeriod = l/lcm;\n        long lastPeriod = r/lcm;\n        long totalPeriodValue = (lastPeriod - firstPeriod + 1) * total;\n        long subtractL = l%lcm;\n        if(subtractL != 0){\n          subtractL = totalList.get((int)(subtractL - 1));\n        }\n        long subtractR = total - totalList.get((int)(r%lcm));\n        //System.out.printf(\"firstPeriod: %d, lastPeriod: %d, totalPeriodValue: %d, subLeft: %d, subRight: %d%n\", firstPeriod, lastPeriod, totalPeriodValue, subtractL, subtractR);\n        print.append(totalPeriodValue - subtractL - subtractR + \" \");\n      }\n      print.append(\"\\n\");\n    }\n    System.out.println(print.toString());\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int MAX_LEN = 1010;\nusing namespace std;\ntemplate <typename U, typename V>\nstring to_string(pair<U, V>);\nstring to_string(const string& e_) { return \"\\\"\" + e_ + \"\\\"\"; }\nstring to_string(char e_) { return \"\\'\" + string(1, e_) + \"\\'\"; }\nstring to_string(bool e_) { return e_ ? \"true\" : \"false\"; }\ntemplate <typename T>\nstring to_string(T e_) {\n  string s_ = \"[ \";\n  for (const auto& x_ : e_) s_ += to_string(x_) + \" \";\n  return s_ + \"]\";\n}\ntemplate <typename U, typename V>\nstring to_string(pair<U, V> e_) {\n  return \"(\" + to_string(e_.first) + \", \" + to_string(e_.second) + \")\";\n}\nvoid dbg_str() { ; }\ntemplate <typename U, typename... V>\nvoid dbg_str(U u, V... v) {\n  ;\n  dbg_str(v...);\n}\nlong long int gcd(long long int a, long long int b) {\n  return b == 0 ? a : gcd(b, a % b);\n}\nlong long int lcm(long long int a, long long int b) {\n  return a * (b / gcd(a, b));\n}\nint t, q;\nlong long int a, b, l, r;\nint main() {\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%lld %lld\", &a, &b);\n    scanf(\"%d\", &q);\n    vector<long long int> till;\n    long long int lc = lcm(a, b);\n    till.assign(lc + 1, 0);\n    till[0] = 0;\n    for (int i = 1; i <= lc; i++) {\n      till[i] = till[i - 1];\n      if ((i % a) % b != (i % b) % a) till[i]++;\n    }\n    for (int i = 1; i <= lc; i++)\n      ;\n    while (q--) {\n      long long int ans = 0;\n      scanf(\"%lld %lld\", &l, &r);\n      l--;\n      long long int left = (l / lc) * till[lc] + till[l % lc];\n      long long int right = (r / lc) * till[lc] + till[r % lc];\n      printf(\"%lld \", right - left);\n    }\n    printf(\"\\n\");\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "def gcd(a,b):\n    while b:\n        a,b=b,a%b\n    return a\ndef func(a,c,m):\n    x=(a/c -1)*(m)\n    if a/c==0:\n        return 0\n    x+=min(m,a%c+1)\n    return x\nfor _ in range(input()):\n    a,b,q=[int(i) for i in raw_input().split()]\n    l=[[int(i) for i in raw_input().split()] for j in range(q)]\n    o=[]\n    ct=(a*b)/gcd(a,b)\n    val=max(a,b)-1\n    if b%a==0 or a%b==0:\n        o=[0]*q\n        for i in o:\n            print i,\n        print\n        continue\n    for i in l:\n        v1=max(0,i[0]-1-val-func(i[0]-1,ct,val+1))\n        v2=max(0,i[1]-val-func(i[1],ct,val+1))\n        o.append(v2-v1)\n    for i in o:\n        print i,\n    print\n"
        },
        {
            "language": 3,
            "solution": "# import sys\n# sys.stdin = open('input.txt', 'r') \n# sys.stdout = open('output.txt', 'w')\n \nimport math\nimport collections\nfrom sys import *\nT = int(stdin.readline())\nfor _ in range(T):\n    a,b,q = list(map(int,stdin.readline().split()))\n    gc = math.gcd(a,b)\n    lc = (a*b)//gc\n    c = [0]*(lc+1)\n    co = 0\n    for i in range(1,lc+1,1):\n        if((i%a)%b != (i%b)%a):\n            co += 1\n            c[i] = co\n        else:\n            c[i] = co\n    c[-1] = co\n    # print(c)\n    for g in range(q):\n        l,r = list(map(int,stdin.readline().split()))\n        rsum = (r//lc)*co + c[r%lc]\n        lsum = ((l-1)//lc)*co + c[(l-1)%lc]\n        print(rsum-lsum,end= ' ')\n    print('')"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class edu86 {\n\tpublic static long a,b,g;\n\tpublic static long gcd(long a,long b){\n\t\tif(b==0)return a;\n\t\telse return gcd(b,a%b);\n\t}\n\tpublic static long find(long n){\n\t\tlong k=a*b/g;\n\t\tlong ans=Math.max(n, 0)/k;\n\t\tlong add=Math.min(n%k+1, Math.max(a, b));\n\t\treturn n-ans*Math.max(a, b)-add;\n\t}\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0){\n\t\t\ta=sc.nextLong();b=sc.nextLong();long q=sc.nextLong();\n\t\t\tg=gcd(a,b);\n\t\t\twhile(q-->0){\n\t\t\t\tlong l=sc.nextLong();\n\t\t\t\tlong r=sc.nextLong();\n\t\t\t\tSystem.out.print(find(r)-find(l-1)+(q==0?\"\":\" \"));\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\n# def the_number_of_matching_numbers(border):\n#     ...\n\n\ndef lcm(a, b):\n    least_common_multiple = max(a, b)\n    while least_common_multiple % a != 0 or least_common_multiple % b != 0:\n        least_common_multiple += 1\n\n    return least_common_multiple\n\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    lcm_of_a_and_b = lcm(a, b)\n    x = 0\n    for ___ in range(q):\n        l, r = map(int, input().split())\n        if (l - 1) // lcm_of_a_and_b * lcm_of_a_and_b == 0:\n            if l - 1 >= max(a, b):\n                subtractible = l - max(a, b)\n            else:\n                subtractible = 0\n        elif (l - 1) // lcm_of_a_and_b * lcm_of_a_and_b == l - 1:\n            subtractible = (l - 1) // lcm_of_a_and_b * (lcm_of_a_and_b - max(a, b))\n        elif (l - 1) // lcm_of_a_and_b * lcm_of_a_and_b < l - 1:\n            subtractible = (l - 1) // lcm_of_a_and_b * (lcm_of_a_and_b - max(a, b))\n            if l - 1 >= max(a, b) + (l - 1) // lcm_of_a_and_b * lcm_of_a_and_b:\n                subtractible += l - (max(a, b) + (l - 1) // lcm_of_a_and_b * lcm_of_a_and_b)\n\n        if r // lcm_of_a_and_b * lcm_of_a_and_b == 0:\n            if r >= max(a, b):\n                minuend = r - max(a, b) + 1\n            else:\n                minuend = 0\n        elif r // lcm_of_a_and_b * lcm_of_a_and_b == r:\n            minuend = r // lcm_of_a_and_b * (lcm_of_a_and_b - max(a, b))\n        elif r // lcm_of_a_and_b * lcm_of_a_and_b < r:\n            minuend = r // lcm_of_a_and_b * (lcm_of_a_and_b - max(a, b))\n            if r >= max(a, b) + r // lcm_of_a_and_b * lcm_of_a_and_b:\n                minuend += r + 1 - (max(a, b) + r // lcm_of_a_and_b * lcm_of_a_and_b)\n\n        # print(minuend, subtractible)\n        print(minuend - subtractible, end=' ')\n    print()\n"
        },
        {
            "language": 3,
            "solution": "import sys\nLI=lambda:list(map(int, sys.stdin.readline().split()))\nMI=lambda:map(int, sys.stdin.readline().split())\nSI=lambda:sys.stdin.readline().strip('\\n')\nII=lambda:int(sys.stdin.readline())\n\nfrom math import gcd\nfor _ in range(II()):\n    a, b, q=MI()\n    lcm=a*b//gcd(a, b)\n    m=max(a, b)\n    res=[]\n    for __ in range(q):\n        l, r=MI()\n        n1, n2=l//lcm, r//lcm\n        cnt=0\n        for i in range(lcm*n1, lcm*n1+m):\n            if l<=i<=r:\n                cnt+=1\n        #print(cnt)\n        #print(cnt)\n        if n2!=n1:\n            for i in range(lcm*n2, lcm*n2+m):\n                if l<=i<=r:\n                    cnt+=1\n            cnt+=(n2-n1-1)*m\n        #print(cnt)\n        res.append(r-l+1-cnt)\n    print(*res)\n"
        },
        {
            "language": 3,
            "solution": "'''\n2bth april 2020 sunday\n'''\n\n\nimport sys\n\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    lcm = a * b // gcd(a, b)\n\n    count = [0] * lcm\n    for i in range(lcm):\n        if (i % b) % a != (i % a) % b:\n            count[i] = 1\n        count[i] += count[i - 1]\n\n    out = [0] * q\n\n    def func(x):\n        quo, mod = x // lcm, x % lcm\n        return quo * count[lcm - 1] + count[mod]\n\n    for j in range(q):\n        l, r = map(int, input().split())\n        out[j] = func(r) - func(l - 1)\n\n    print(*out)\n"
        },
        {
            "language": 3,
            "solution": "# bhut time lga tha\n\ndef gcd(j, k):\n    if j == 0:\n        return k\n    return gcd(k % j, j)\n\n\ndef lcm(j, k):\n    return (j*k)//gcd(j, k)\n\n\nt = int(input())\nwhile t:\n    a, b, q = map(int, input().split())\n    while q:\n        l, r = map(int, input().split())\n        if max(a, b) % min(a, b) == 0:\n            print(0, end=\" \")\n            q -= 1\n            continue\n        lcm_ = lcm(a, b)\n        # print(lcm_)\n        bol = 0\n        if (l / lcm_ >= 1) and (l - (l // lcm_ * lcm_) < max(a, b)):\n            bol = 1\n        else:\n            bol = 0\n        p = ((max(a, b) * (l // lcm_)) - (bol * (((l // lcm_) * lcm_) + max(a, b) - l)))\n        no_of_equal_mod_above_lcm = (((r // lcm_ - 1)*max(a, b)) + (min((r // lcm_) * lcm_ + max(a, b) - 1, r) - ((r // lcm_) * lcm_)) + 1) - p\n        # print(no_of_equal_mod_above_lcm, 'k = ', p)\n        if r < max(a, b):\n            print(0, end=\" \")\n        elif r // lcm_ == 0:\n            print((r - max(a, b, l) + 1), end=\" \")\n        else:\n            print(r - no_of_equal_mod_above_lcm + (-max(a, b, l) + 1), end=\" \")\n\n        q -= 1\n    print()\n    t -= 1"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint mod(string s, int a) {\n  int ans = 0;\n  for (int i = 0; i < s.length(); i++) ans = (ans * 10 + (int)s[i] - '0') % a;\n  return ans;\n}\nlong long min(long long x, long long y) {\n  if (x < y) return x;\n  return y;\n}\nlong long max(long long x, long long y) {\n  if (x > y) return x;\n  return y;\n}\nlong long power(long long x, unsigned long long y) {\n  if (y == 0)\n    return 1;\n  else if (y % 2 == 0)\n    return power(x, y / 2) * power(x, y / 2);\n  else\n    return x * power(x, y / 2) * power(x, y / 2);\n}\nlong long hcf(long long a, long long b) {\n  if (b == 0) return a;\n  return hcf(b, a % b);\n}\nlong long f(long long n, long long a, long long b) {\n  long long x, lcm = (a * b) / hcf(a, b), ans = n;\n  if (n < b) return 0;\n  ans -= b - 1;\n  x = n / lcm;\n  if (n < x * lcm + b) {\n    ans -= (x - 1) * b;\n    ans -= n - (x * lcm) + 1;\n  } else\n    ans -= (x) * (b);\n  return ans;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long TT = 1;\n  cin >> TT;\n  while (TT--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      if (b % a == 0)\n        cout << \"0 \";\n      else\n        cout << f(r, a, b) - f(l - 1, a, b) << \" \";\n    }\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\ndef I(): return(list(map(int,input().split())))\ndef sieve(n):\n\ta=[1]*n\n\tfor i in range(2,n):\n\t    if a[i]:\n\t        for j in range(i*i,n,i):\n\t            a[j]=0\n\treturn a\n\nfor __ in range(int(input())):\n\ta,b,q=I()\n\tpref=[0]*(a*b)\n\tpref[0]=1\n\n\tfor i in range(1,a*b):\n\t\tif i%a%b==i%b%a:\n\t\t\tpref[i]=pref[i-1]+1\n\t\telse:\n\t\t\tpref[i]=pref[i-1]\n\n\n\tfor lol in range(q):\n\t\tl,r=I()\n\t\tl-=1\n\t\ttillL=pref[-1]*(l//(a*b))+pref[l%(a*b)]\n\t\ttillR=pref[-1]*(r//(a*b))+pref[r%(a*b)]\n\t\tprint(r-l-(tillR-tillL),end=\" \")\n\tprint()\n\n\n\t\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import math\ndef call(x,lcm,b):\n    return (lcm-b)*(x//lcm)\nt=int(input())\nfor _ in range(t):\n    a,b,q=map(int,input().split())\n    a,b=min(a,b),max(a,b)\n    lcm=(a*b)//(math.gcd(a,b))\n    dp=[0]*(lcm)\n    for i in range(b,lcm):\n        dp[i]+=dp[i-1]+1\n    ans=[]\n    for _ in range(q):\n        l,r=map(int,input().split())\n        ans.append(call(r,lcm,b)+dp[r%lcm]-call(l-1,lcm,b)-dp[(l-1)%lcm])\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\nimport java.math.BigInteger;\n\npublic class test\n{\n\tpublic static long HCF(long a, long b)\n\t{\n\t\tif (a==0)\n\t\treturn b;\n\t\treturn HCF(b%a,a);\n\t}\n\tpublic static long LCM(long a, long b)\n\t{\n\t\tlong hcf = HCF(a,b);\n\t\treturn ((a*b)/hcf);\n\t}\n\n\tpublic static long find(long r, long lcm, long a, long b)\n\t{\n\t\tlong d = r/lcm - 1;\n\n\t\tlong var = (r/lcm);\n\t\tvar = lcm*var;\n\t\tlong sub3 = Math.min(Math.max(a,b), (r-var+1));\n\n\t\tlong sub1 = d*Math.max(a,b);\n\t\tlong sub2 = Math.max(a,b)-1;\n\n\t\t// System.out.println(sub1+\" \"+sub2+\" \"+sub3+\" \"+var+\" \"+lcm);\n\n\t\treturn (r-sub1-sub2-sub3);\n\t}\n\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tint t=in.nextInt();\n\t\twhile(--t>=0)\n\t\t{\n\t\t\tlong a = in.nextLong();\n\t\t\tlong b = in.nextLong();\n\n\t\t\tint q = in.nextInt();\n\n\t\t\tlong lcm = LCM(a,b);\n\t\t\tStringBuilder str = new StringBuilder();\n\t\t\twhile(--q>=0)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tlong l =in.nextLong();\n\t\t\t\tlong r = in.nextLong();\n\n\t\t\t\tlong cnt1 = find(l-1,lcm, a, b);\n\t\t\t\tlong cnt2 = find(r,lcm, a, b);\n\n\t\t\t\t// System.out.println(cnt2-cnt1);\n\t\t\t\tstr.append((cnt2-cnt1)+\" \");\n\t\t\t}\n\t\t\tSystem.out.println(str);\n\n\t\t\t\n\n\t\t\t\n\t\t}\n\n\t\t\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\nimport java.util.StringTokenizer;\n\npublic class Solution {\n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} \n\n\t\n\tpublic static void main(String[] args) \n\t{ \n\t\tFastReader in=new FastReader(); \n\t\tint t  = in.nextInt();\n\t\tStringBuilder st =new StringBuilder();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tlong a = in.nextInt();\n\t\t\tlong b = in.nextInt();\n\t\t\tlong q = in.nextInt();\n\t\t\tlong max = Math.max(a, b);\n\t\t\tlong min = Math.min(a, b);\n\t\t\ta = max;\n\t\t\tb = min;\n\t\t\tboolean flag = false;\n\t\t\tif(a%b==0)\n\t\t\t\tflag = true;\n\t\t\tlong m = a/b; \n\t\t\tlong div = b/gcd(a,b);\n\t\t\tfor(int i = 0;i<q;i++)\n\t\t\t{\n\t\t\t\tlong l = in.nextLong();\n\t\t\t\tlong r = in.nextLong();\n\t\t\t\tif(flag)\n\t\t\t\t{\n\t\t\t\t\tst.append(0+\" \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong ans = 0;\n\t\t\t\tlong pstart = l/a;\n\t\t\t\tlong mstart = (l-a*pstart)/b;\n\t\t\t\tlong fstart = l-a*pstart-b*mstart;\n\t\t\t\tif((pstart*a)%b!=0)\n\t\t\t\t{\n\t\t\t\t\tans += a - mstart*b-fstart;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlong pend = r/a;\n\t\t\t\tlong mend = (r-a*pend)/b;\n\t\t\t\tlong fend = r-a*pend-b*mend;\n\t\t\t\tif(pstart!=pend)\n\t\t\t\t{\n\t\t\t\t\tif((pend*a)%b!=0)\n\t\t\t\t\t{\n\t\t\t\t\t\tans += mend*b + fend+1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tans = 0;\n\t\t\t\t\tif((pstart*a)%b!=0)\n\t\t\t\t\t{\n\t\t\t\t\t\tans += r-l+1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(pstart+1<pend) {\n\t\t\t\tlong val = find(pstart+1, pend-1, div);\n\t\t\t\tans += val*a;\n\t\t\t\t}\n\t\t\t\tst.append(ans+\" \");\n\t\t\t}\n\t\t\tst.append(\"\\n\");\n\t\t}\n\t\tSystem.out.println(st.toString());\n\t}\n\n\tprivate static long find(long pstart, long pend, long div) {\n\t\tlong muls = (pstart)/div;\n\t\tif(pstart%div==0)muls--;\n\t\tlong mule = (pend)/div;\n\t\treturn pend-pstart-(mule-muls)+1;\n\t\t\n\t}\n\n\tstatic long gcd(long a, long b)\n\t{\n\t\tif(b==0)\n\t\t\treturn a;\n\t\treturn gcd(b,a%b);\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing LL = long long;\nusing namespace std;\nint t, n;\nint gcd(int a, int b) {\n  if (a == 0) {\n    return b;\n  }\n  int d = gcd(b % a, a);\n  return d;\n}\nint main(void) {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> t;\n  for (LL ii = 0; ii < t; ii++) {\n    LL a, b, q;\n    cin >> a >> b >> q;\n    LL l, r;\n    for (LL i = 0; i < q; i++) {\n      cin >> l >> r;\n      LL full_cnt = 0;\n      if (r - l + 1 <= 200) {\n        for (LL j = l; j <= r; ++j) {\n          if ((j % a) % b == (j % b) % a) full_cnt++;\n        }\n        cout << r - l + 1ll - full_cnt << \" \";\n        continue;\n      }\n      LL min_lcm_left = a * b / gcd(a, b),\n         lcm_right = min_lcm_left + max(a, b) - 1;\n      LL min_k_left = l / min_lcm_left, max_k_left = r / min_lcm_left;\n      LL min_k_left_full = min_k_left;\n      LL max_k_left_full = max_k_left;\n      if (min_k_left * min_lcm_left < l) min_k_left_full++;\n      if (max_k_left * min_lcm_left + max(a, b) > r) max_k_left_full--;\n      if (max_k_left_full >= min_k_left_full)\n        full_cnt = (max_k_left_full - min_k_left_full + 1) * max(a, b);\n      if (min_k_left != min_k_left_full)\n        for (LL j = max(l, min_k_left * min_lcm_left);\n             j < min(r + 1, min_k_left * min_lcm_left + max(a, b)); ++j) {\n          if (j >= l && j <= r && (j % a) % b == (j % b) % a) full_cnt++;\n        }\n      if (max_k_left != max_k_left_full && max_k_left_full >= 0)\n        for (LL j = max(l, max_k_left * min_lcm_left);\n             j < min(r + 1, max_k_left * min_lcm_left + max(a, b)); ++j) {\n          if (j >= l && j <= r && (j % a) % b == (j % b) % a) full_cnt++;\n        }\n      cout << r - l + 1ll - full_cnt << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\ndef print(val):\n    sys.stdout.write(str(val) + '\\n')\ndef yo():\n    for _ in range(int(input().strip())):\n        a,b,q = map(int,input().split())\n        bad = [0 for i in range(a*b)]\n        for x in range(a*b):\n            if (x%a) % b == (x%b) % a:\n                bad[x] = 1\n        for i in range(1,a*b):\n            bad[i] += bad[i-1]\n        for _ in range(q):\n            l, r = map(int,input().split())\n            total = r - l + 1\n            total_bad = 0\n            if l// (a*b) == r//(a*b):\n                if l%(a*b) == 0:\n                    total_bad += bad[r%(a*b)]\n                else:\n                    total_bad += bad[r%(a*b)] - bad[l%(a*b) -1]\n                total -= total_bad\n                print(total)\n            else:\n                if l%(a*b) == 0:\n                    total_bad += bad[-1]\n                else:\n                    total_bad += bad[-1] - bad[l%(a*b) -1]\n                total_bad += bad[r%(a*b)] \n                q = l// (a*b)\n                bottom = (q + 1)\n                top = r//(a*b)\n                total_bad += (top - bottom)*bad[-1]\n                total -= total_bad\n                print(total)\nyo()\n        \n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom math import gcd\nt = int(input())\n\nfor it in range(t):\n    a, b, q = [int(i) for i in stdin.readline().split()]\n    if a > b:\n        a, b = b, a\n    v = a * b // gcd(a, b)\n    res = []\n    for it2 in range(q):\n        l, r = [int(i) for i in stdin.readline().split()]\n        sm = 0\n        for m in range(b):\n            l1, r1 = l - m, r - m\n            sm += max(0, r1 // v - (l1 + v - 1) // v + 1)\n        res.append(str(r - l + 1 - sm))\n    stdout.write(\" \".join(res) + \"\\n\")\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\n\npublic class Main{\n    static int a = 0, b = 0, g = 0;\n    public static void main(String args[]) throws Exception{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringBuffer sb = new StringBuffer();\n        int t = Integer.parseInt(br.readLine());\n        while(t-- > 0){\n            String s[] = (br.readLine()).split(\" \");\n            a = Integer.parseInt(s[0]);\n            b = Integer.parseInt(s[1]);\n            g = (a * b) / gcd(a, b);\n            int q = Integer.parseInt(s[2]);\n            for(int i = 0; i < q; i++){\n                s = (br.readLine()).split(\" \");\n                long l = Long.parseLong(s[0]);\n                long r = Long.parseLong(s[1]);\n                long temp = calc(r);\n                long tminus = calc(l - 1);\n                sb.append(temp - tminus+\" \");\n            }\n            sb.append(\"\\n\");\n        }\n        System.out.println(sb);\n    }\n    public static long calc(long x){\n        long temp = 0; \n        long div = x / g;\n        long rem = x - (div * g);\n        if(rem - Math.max(a, b) + 1 > 0) temp += rem - Math.max(a, b) + 1;\n        long mul = g - Math.max(a, b);\n        temp += div * mul;\n        return temp;\n    }\n    public static int gcd(int x, int y){ \n      if (y == 0) return x; \n      return gcd(y, x % y);  \n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import deque, defaultdict, Counter\nfrom bisect import bisect_left, bisect #bisect(list, num, beg, end)\nimport math\ndef test_case():\n    # n = int(input())\n    info = list(map(int, input().split()))\n    a, b, q = info\n    # a = list(map(int, input().split()))\n    ans = []\n    u = [0]*(a*b)\n    for i in range(1, a*b):\n        u[i] = u[i-1] + int(i % a %b != i % b % a)\n    for _ in range(q):\n        l, r = map(int, input().split())\n        count = 0\n        count += r//(a*b) * u[-1] + u[r%(a*b)]\n        count -= (l-1)//(a*b) * u[-1] + u[(l-1)%(a*b)]\n        ans.append(count)\n    print(*ans)\nfor _ in range(int(input())):\n\n    ret = test_case()\n    if ret != None:\n        print(ret)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main {\n    public static int gcd(int p, int q){\n        if(q == 0) {\n            return p;\n        }\n        while(p%q != 0){\n            int r = p % q;\n            p = q;\n            q = r;\n        }\n        return q;\n    }\n    public static void main(String[] args) {\n        BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));\n        int n,i,xMin=Integer.MAX_VALUE,xMax=Integer.MIN_VALUE,yMax=xMax,yMin=xMin,t,j;\n        String[] input;\n        try{\n            t=Integer.parseInt(reader.readLine());\n            for (i=0;i<t;i++){\n                int a,b,q,minCommonMultiple;\n                long l,r,count=0,multipleCount;\n                input=reader.readLine().split(\" \");\n                a=Integer.parseInt(input[0]);\n                b=Integer.parseInt(input[1]);\n                q=Integer.parseInt(input[2]);\n                minCommonMultiple=a*b/gcd(a,b);\n                if (a>b){\n                    n=a;\n                    a=b;\n                    b=n;\n                }\n                for (j=0;j<q;j++){\n                    input=reader.readLine().split(\" \");\n                    l=Long.parseLong(input[0]);\n                    r=Long.parseLong(input[1]);\n                    multipleCount=r/minCommonMultiple-l/minCommonMultiple;\n                    if (l%minCommonMultiple<b){\n                        count-=b-l%minCommonMultiple;\n                    }\n                    if (r%minCommonMultiple<b){\n                        count+=b-r%minCommonMultiple-1;\n                    }\n                    count+=r-l+1-multipleCount*b;\n                    System.out.print(count+\" \");\n                    count=0;\n                }\n                System.out.println();\n            }\n        }catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n \t\t\t    \t\t\t\t  \t \t\t\t    \t"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as dc\nfrom heapq import *\nimport math\nimport bisect\nimport sys\nfrom collections import deque as dq\nfrom heapq import heapify,heappush,heappop\nmod=10**9 +7\ndef inp(): \n    p=int(input())\n    return p\ndef line():\n    p=list(map(int,input().split()))\n    return p\ndef read_mat():\n    n=inp()\n    a=[]\n    for i in range(n):\n        a.append(line())\n    return a\ndef digit(n):\n    s=str(n)\n    p=0\n    for i in s:\n        p+=(int(i))**2\n    return p\ndef check(l,r):\n    ans=0\n    c=0\n    for i in range(l,r+1):\n        if (i%a)%b!=(i%b)%a:\n            ans+=1\n        else:\n            #print(i,end=' ')\n            c+=1\n    #print(c)\n    return ans\ndef solve(l,r,a,b,p):\n    if r<max(a,b):\n        return 0\n    if l==r:\n        if (l%a)%b==(l%b)%a:\n            return 0\n        return 1\n    x=max(p*((l//p)+1),1)\n    tot=r-l+1\n    y=max((p*(r//p)),l)\n    extra=0\n    #print(p,x,y)\n    for i in range(l,min(l+b,x,r+1)):\n            if (i%a)%b==(i%b)%a:\n                #print(i,end=' ')\n                extra+=1    \n            else:\n                break\n    if l!=y:\n        for i in range(y,min(r+1,y+b),1):\n            if (i%a)%b==(i%b)%a:\n                #print(i,end=' ')\n                extra+=1\n            else:\n                break\n    rem=((y-x)//p)*b if (y-x) >=0 else 0\n    return tot-(rem+extra)\nfor _ in range(inp()):\n    a,b,q=line()\n    ans=[]\n    x=min(a,b)\n    y=max(a,b)\n    p=(a*b)//(math.gcd(a,b))\n    for i in range(q):\n        l,r=line()\n        t=solve(l,r,x,y,p)\n        #print(check(l,r))\n        ans.append(t)\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C {\n\n\tprivate static Scanner sc;\n\tprivate static StringBuilder sb = new StringBuilder();\n\n\tprivate static void solve(int test) {\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint q = sc.nextInt();\n\n\t\tint gcd = gcd(a, b);\n\t\tint lcm = a * b / gcd;\n\t\tboolean[] diff = new boolean[lcm + 1];\n\t\tfor (int i = 2; i <= lcm; ++i) {\n\t\t\tdiff[i] = ((i % a) % b) != ((i % b) % a);\n\t\t}\n\t\tint[] sum1 = new int[diff.length], sum2 = new int[diff.length];\n\t\tfor (int i = 2; i <= lcm; ++i) {\n\t\t\tsum1[i] = sum1[i-1];\n\t\t\tif (diff[i]) ++sum1[i];\n\t\t}\n\t\tfor (int i = lcm - 1; i >= 0; --i) {\n\t\t\tsum2[i] = sum2[i + 1];\n\t\t\tif (diff[i]) ++sum2[i];\n\t\t}\n\n\t\tfor (int i = 0; i < q; ++i) {\n\t\t\tlong l = sc.nextLong(), r = sc.nextLong();\n\t\t\tlong cnt = 0;\n\n//\t\t\tfor (long j = l; j < Math.min(l + lcm, r + 1); ++j) {\n//\t\t\t\tif (!diff[(int) (j % lcm)]) continue;\n//\t\t\t\tcnt += (r - j) / lcm + 1;\n//\t\t\t}\n\n\t\t\tlong x = (l % lcm == 0) ? l : ((l / lcm) + 1) * lcm;\n\t\t\tlong y = (r / lcm) * lcm;\n\n\t\t\tif (x > r) {\n\t\t\t\tcnt += sum1[(int) (r % lcm)] - sum1[(int) (l % lcm) - 1];\n\t\t\t} else {\n\t\t\t\tif (x > l) cnt += sum1[lcm] - sum1[(int) (l % lcm) - 1];\n\t\t\t\tcnt += sum1[lcm] * ((y - x) / lcm);\n\t\t\t\tif (y < r) cnt += sum1[(int) (r % lcm)];\n\t\t\t}\n\n\t\t\tsb.append(cnt).append(' ');\n\t\t}\n\t\tsb.append('\\n');\n\t}\n\n\tprivate static int gcd(int a, int b) {\n\t\tint m;\n\t\twhile (b > 0) {\n\t\t\tm = a % b;\n\t\t\ta = b;\n\t\t\tb = m;\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static void main(String[] args) {\n\n\t\tsc = new Scanner(System.in);\n//\t\tsolve(0);\n\t\tint numTest = sc.nextInt();\n\t\tfor (int test = 0; test < numTest; ++test) {\n\t\t\tsolve(test);\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t\tsc.close();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import *\nt=int(input())\nfor _ in range(t):\n    a,b,q=map(int,input().split())\n    d=gcd(a,b)\n    p=(a*b)//d\n    ar=[]\n    for i in range(q):\n        l,r=map(int,input().split())\n        if a==b:\n            ar.append(0)\n        else:\n            if a>b:\n                a,b=b,a\n            if r<b:\n                ar.append(0)\n            else:\n                c=(r-l)+1\n                x=(r//p)-((l-1)//p)\n                x=x*b\n                x=x+min((r%p)+1,b) -min((l-1)%p+1,b)\n                c=c-x\n                \n                ar.append(max(c,0))\n    for i in range(q):\n        print(ar[i],end=' ')\n    print()\n    \n                \n        \n        \n    \n    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n  a, b, q = map(int, input().split())\n  prefix_sum = [0]\n  length = a * b\n  summary = 0\n  \n  for x in range(1, length + 1):\n    if ((x % a) % b) != ((x % b) % a):\n      summary += 1\n      prefix_sum.append(summary)\n    else:\n      prefix_sum.append(summary)\n  \n  for i in range(q):\n    l, r = map(int, input().split())\n    right = summary * (r // length) + prefix_sum[r % length]\n    left = summary * ((l - 1) // length) + prefix_sum[(l - 1) % length]\n    print(right - left, end=' ')\n  print()"
        },
        {
            "language": 3,
            "solution": "def compress(string):\n    string.append(\"#\")\n    n = len(string)\n    begin, end, cnt = 0, 1, 1\n    ans = []\n    while end < n:\n        if string[begin] == string[end]:\n            end, cnt = end + 1, cnt + 1\n        else:\n            ans.append((string[begin], cnt))\n            begin, end, cnt = end, end + 1, 1\n    return ans\n  \n  \ndef solve(num):\n    if num <= init:\n        return num\n      \n    num -= init\n    tmp = init\n    tmp += (num // diff) * res[2][1]\n    num = num - (num // diff) * diff\n    tmp += max(num - res[1][1], 0)\n    return tmp\n    \nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    tmp = [False] * (10 ** 5)\n    for i in range(1, 10 ** 5 + 1):\n        tmp[i - 1] = (((i) % a) % b == ((i) % b) % a)\n    res = compress(tmp)\n    \n    if len(res) == 1:\n        ans = []\n        for _ in range(q):\n            l, r = map(int, input().split())\n            ans.append(0)\n        print(*ans) \n        continue\n    init = res[0][1]\n    diff = res[1][1] + res[2][1]\n    ans = []\n    # print(init, diff)\n    # print(res)\n    for _ in range(q):\n        l, r = map(int, input().split())\n        ans.append((r - solve(r)) - (l - 1 - solve(l - 1)))\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfrom math import gcd\ndef main():\n    t = int( input())\n    ANS = []\n    for _ in range(t):\n        a, b, q = map( int, input().split())\n        lr = [ tuple( map( int, input().split())) for _ in range(q)]\n        lcm = a*b//gcd(a,b)\n        G = []\n        now = 0\n        for i in range(lcm):\n            if i%a%b != i%b%a:\n                now += 1\n            G.append(now)\n\n        ans = []\n        for l, r in lr:\n            rans = r//lcm*now + G[r%lcm]\n            lans = (l-1)//lcm*now + G[(l-1)%lcm]\n            ans.append( rans - lans)\n\n        ANS.append(ans)\n\n    for ans in ANS:\n        print(\" \".join( map( str, ans)))\n            \nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "# list(map(int, input().split()))\ndef nok(a, b):\n    x = a\n    while x % b != 0:\n        x += a\n    return x\n\nrw = int(input())\nfor weqeq in range(rw):\n    a, b, q = map(int, input().split())\n    lr = [[] for i in range(q)]\n    for i in range(q):\n        x, y = map(int, input().split())\n        lr[i].append(x)\n        lr[i].append(y)\n    abmod = [0]\n    bamod = [0]\n    c = nok(a, b)\n    pref = [0] * c\n    for i in range(1, c):\n        abmod.append((i % a) % b)\n        bamod.append((i % b) % a)\n        if abmod[i] != bamod[i]:\n            pref[i] = pref[i - 1] + 1\n        else:\n            pref[i] = pref[i - 1]\n    for i in lr:\n        x = (i[0] - 1) % c\n        y = i[1] % c\n        xp = pref[x] + pref[c - 1] * ((i[0] - 1) // c)\n        yp = pref[y] + pref[c - 1] * (i[1] // c)\n        n = yp - xp\n        print(n, end = ' ')\n    print('')\n    "
        },
        {
            "language": 4,
            "solution": "\npublic class Main {\n\n  private static void solve() {\n    int t = ni();\n    for (int i = 0; i < t; i++) {\n      int a = ni();\n      int b = ni();\n      int q = ni();\n      long[] l = new long[q];\n      long[] r = new long[q];\n      for (int j = 0; j < q; j++) {\n        l[j] = nl();\n        r[j] = nl();\n      }\n      out.println(solve(a, b, l, r));\n    }\n\n  }\n\n  private static String solve(int a, int b, long[] l, long[] r) {\n    int c = a * b;\n    boolean[] ok = new boolean[c];\n    for (int i = 0; i < c; i++) {\n      ok[i] = i % a % b != i % b % a;\n    }\n\n    long[] sum = new long[c + 1];\n    for (int i = 0; i < a * b; i++) {\n      sum[i + 1] += sum[i] + (ok[i] ? 1 : 0);\n    }\n\n    int q = l.length;\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < q; i++) {\n      long x = ((l[i] - 1) / c * sum[c]) + sum[(int) ((l[i] - 1) % c) + 1];\n      long y = (r[i] / c * sum[c]) + sum[(int) (r[i] % c) + 1];\n      long ret = y - x;\n      sb.append(ret);\n      if (i < q - 1) {\n        sb.append(\" \");\n      }\n    }\n    return sb.toString();\n  }\n\n\n\n  public static void main(String[] args) {\n    new Thread(null, new Runnable() {\n      @Override\n      public void run() {\n        long start = System.currentTimeMillis();\n        String debug = args.length > 0 ? args[0] : null;\n        if (debug != null) {\n          try {\n            is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\n          } catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\n        solve();\n        out.flush();\n        tr((System.currentTimeMillis() - start) + \"ms\");\n      }\n    }, \"\", 64000000).start();\n  }\n\n  private static java.io.InputStream is = System.in;\n  private static java.io.PrintWriter out = new java.io.PrintWriter(System.out);\n  private static java.util.StringTokenizer tokenizer = null;\n  private static java.io.BufferedReader reader;\n\n  public static String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n\n  private static double nd() {\n    return Double.parseDouble(next());\n  }\n\n  private static long nl() {\n    return Long.parseLong(next());\n  }\n\n  private static int[] na(int n) {\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++)\n      a[i] = ni();\n    return a;\n  }\n\n  private static char[] ns() {\n    return next().toCharArray();\n  }\n\n  private static long[] nal(int n) {\n    long[] a = new long[n];\n    for (int i = 0; i < n; i++)\n      a[i] = nl();\n    return a;\n  }\n\n  private static int[][] ntable(int n, int m) {\n    int[][] table = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[i][j] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int[][] nlist(int n, int m) {\n    int[][] table = new int[m][n];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        table[j][i] = ni();\n      }\n    }\n    return table;\n  }\n\n  private static int ni() {\n    return Integer.parseInt(next());\n  }\n\n  private static void tr(Object... o) {\n    if (is != System.in)\n      System.out.println(java.util.Arrays.deepToString(o));\n  }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    x, y = a, b\n    while y != 0:\n        x, y = y, x % y\n    return x\ndef equalize(x, a, b, l):\n    m = max(a, b)\n    if a == b:\n        return x\n    else:\n        y = x // l\n        z = min(x % l + 1, m)\n        return y * m + z\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    g = gcd(a, b)\n    L = (a // g) * b\n    for i in range(q):\n        l, r = map(int, input().split())\n        if i != q - 1:\n            print(r - l + 1 - equalize(r, a, b, L) + equalize(l-1, a, b, L), end = ' ')\n        else:\n            print(r - l + 1 - equalize(r, a, b, L) + equalize(l-1, a, b, L))"
        },
        {
            "language": 3,
            "solution": "#author: raghav_0901\nfrom math import *\n\n\ndef _in():\n    return [int(x) for x in input().split(' ')]\n\n\ndef main():\n    a, b, q = _in()\n    lc = a * (b // gcd(a, b))\n    arr = [0, ]\n    for i in range(1, lc + 1):\n        x = int(((i % a) % b) != ((i % b) % a))\n        prev = arr[-1]\n        arr.append(prev + x)\n    # print(arr)\n    for i in range(q):\n        l, r = _in()\n        ans = 0\n        p = r // lc\n        ans = ans + arr[r - (lc * p)]\n        if(l % lc == 0):\n            b = (l) // lc\n            ans = ans + ((p - b) * arr[-1])\n        else:\n            b = (l) // lc\n            extra = l - (b * lc) - 1\n            ans = ans + arr[-1] - arr[extra]\n            ans = ans + ((p - b - 1) * arr[-1])\n        print(ans, end=\" \")\n    print()\n\n\nif __name__ == \"__main__\":\n    tt = 1\n    tt = int(input())\n    for _ in range(tt):\n        main()\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom math import log2,floor,ceil,sqrt,gcd\n# import bisect\n# from collections import deque\nsys.setrecursionlimit(7*10**4)\n\nRi = lambda : [int(x) for x in sys.stdin.readline().split()]\nri = lambda : sys.stdin.readline().strip()\n \ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10 ** 18\nMOD =  998244353\n\ndef no(n,b,lcm):\n    ans = n\n    div = n//lcm\n    # print(div)\n    last = div*lcm\n    # ans=  0\n    if div != 0 :\n        ans -= (div-1)*b\n        ans-=(min(n-lcm*div+1,b))\n    # print(ans)\n    return ans-min(n,b-1)\n\nfor _ in range(int(ri())):\n    a,b,q  = Ri()\n    if a > b:\n        a,b = b,a\n    for qq in range(q):\n        l,r = Ri()\n        if l == r:\n            if (l%a)%b != (l%b)%a:\n                print(\"1\", end = \" \")\n            else:\n                print('0', end = \" \")\n        elif r < b:\n            print(\"0\" , end = \" \")\n        else:\n            if b%a == 0:\n                print(\"0\",end = \" \")\n            else:\n                minn = l\n                maxx =  r\n                lcm = a*b//gcd(a,b)\n                # print(lcm)\n                left = no(maxx,b,lcm)\n                right = no(minn-1,b,lcm)\n                # print(right,left)\n                cnt = left-right\n                print(cnt,end=\" \")\n\n    print()\n            \n            \n\n"
        },
        {
            "language": 3,
            "solution": "\nN=int(input())\n    \nfor _ in range(N):\n#    n=list(map(str,input()))\n#    x,y=map(int,input().split())\n    \n    a,b,q=map(int,input().split())\n    l=[0]\n#    s=list(map(int,input().split()))\n#    \n    for i in range(1,(a*b)+1):\n            if((i%a)%b != (i%b)%a):\n                l.append(l[-1]+1)\n            else:\n                l.append(l[-1])\n    c=0\n    ls=[]\n    for i in range(q):\n        l1,r1=map(int,input().split())\n        c=(r1//(a*b))*l[-1] + l[r1%(a*b)] -(l1//(a*b)*l[-1]) - l[l1%(a*b)]\n        if ((l1%a)%b)!=((l1%b)%a):\n            c = c + 1\n        ls.append(c)\n    print(*ls)"
        },
        {
            "language": 3,
            "solution": "from math import ceil, gcd\n\ndef brute(a, b, n):\n    cnt = 0\n    for x in range(1, n):\n        if (x%a)%b != (x%b)%a:\n            cnt += 1\n    return cnt\n\ndef solve(a, b, n):\n    l = a * b//gcd(a, b)\n    return n - (n//l)*b + max(0, b - (n%l))\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    arr = []\n    for i in range(q):\n        l, r = map(int, input().split())\n        # ans = brute(a, b, r) - brute(a, b, l - 1)\n        ans = solve(a, b, r + 1) - solve(a, b, l)\n        arr.append(ans)\n    print(*arr)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C implements Runnable {\n\tboolean judge = false;\n\tFastReader scn;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tvoid solve() {\n\t\tint t = scn.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint a = scn.nextInt(), b = scn.nextInt();\n\t\t\tif (a > b) {\n\t\t\t\ta = a ^ b;\n\t\t\t\tb = a ^ b;\n\t\t\t\ta = a ^ b;\n\t\t\t}\n\t\t\tint p = a * b;\n\t\t\tlong diff = 0;\n\t\t\tlong[] pre = new long[p];\n\t\t\tfor (int i = 0; i < p; i++) {\n\t\t\t\tif (i % a != (i % b) % a) {\n\t\t\t\t\tdiff++;\n\t\t\t\t}\n\t\t\t\tpre[i] = diff;\n\t\t\t}\n\n\t\t\tfor (int q = scn.nextInt(); q > 0; q--) {\n\t\t\t\tlong l = scn.nextLong(), r = scn.nextLong();\n\t\t\t\tlong ans = f(a, b, p, r, diff, pre);\n\t\t\t\tans -= f(a, b, p, l - 1, diff, pre);\n\t\t\t\tout.print(ans + \" \");\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t}\n\n\tlong f(int a, int b, int p, long x, long diff, long[] pre) {\n\t\tlong times = x / p;\n\t\tlong rv = diff * times + pre[(int) (x % p)];\n\t\treturn rv;\n\t}\n\n\tint gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\n\tpublic void run() {\n\t\tlong time = System.currentTimeMillis();\n\t\tboolean oj = System.getProperty(\"ONLINE_JUDGE\") != null || judge;\n\t\tout = new PrintWriter(System.out);\n\t\tscn = new FastReader(oj);\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!oj) {\n\t\t\tSystem.out.println(Arrays.deepToString(new Object[] { System.currentTimeMillis() - time + \" ms\" }));\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new C(), \"Main\", 1 << 28).start();\n\t}\n\n\tclass FastReader {\n\t\tInputStream is;\n\n\t\tpublic FastReader(boolean onlineJudge) {\n\t\t\tis = onlineJudge ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\t}\n\n\t\tbyte[] inbuf = new byte[1024];\n\t\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\t\tint readByte() {\n\t\t\tif (lenbuf == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (ptrbuf >= lenbuf) {\n\t\t\t\tptrbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn inbuf[ptrbuf++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tint skip() {\n\t\t\tint b;\n\t\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t\t;\n\t\t\treturn b;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tchar nextChar() {\n\t\t\treturn (char) skip();\n\t\t}\n\n\t\tString next() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint b = skip();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\twhile ((!isSpaceChar(b) || b == ' ')) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tchar[] next(int n) {\n\t\t\tchar[] buf = new char[n];\n\t\t\tint b = skip(), p = 0;\n\t\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t\t}\n\n\t\tint nextInt() {\n\t\t\tint num = 0, b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\tlong num = 0;\n\t\t\tint b;\n\t\t\tboolean minus = false;\n\t\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t\t;\n\t\t\tif (b == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tb = readByte();\n\t\t\t}\n\n\t\t\twhile (true) {\n\t\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t\t} else {\n\t\t\t\t\treturn minus ? -num : num;\n\t\t\t\t}\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t}\n\n\t\tchar[][] nextMatrix(int n, int m) {\n\t\t\tchar[][] map = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next(m);\n\t\t\treturn map;\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tint[][] next2DInt(int n, int m) {\n\t\t\tint[][] arr = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[][] next2DLong(int n, int m) {\n\t\t\tlong[][] arr = new long[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLongArray(m);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] shuffle(int[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tint c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] shuffle(long[] arr) {\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 1, j; i < arr.length; i++) {\n\t\t\t\tj = r.nextInt(i);\n\t\t\t\tlong c = arr[i];\n\t\t\t\tarr[i] = arr[j];\n\t\t\t\tarr[j] = c;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] uniq(int[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tint[] rv = new int[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tlong[] uniq(long[] arr) {\n\t\t\tarr = scn.shuffle(arr);\n\t\t\tArrays.sort(arr);\n\t\t\tlong[] rv = new long[arr.length];\n\t\t\tint pos = 0;\n\t\t\trv[pos++] = arr[0];\n\t\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\t\tif (arr[i] != arr[i - 1]) {\n\t\t\t\t\trv[pos++] = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Arrays.copyOf(rv, pos);\n\t\t}\n\n\t\tint[] reverse(int[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] reverse(long[] arr) {\n\t\t\tint l = 0, r = arr.length - 1;\n\t\t\twhile (l < r) {\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tarr[r] = arr[l] ^ arr[r];\n\t\t\t\tarr[l] = arr[l] ^ arr[r];\n\t\t\t\tl++;\n\t\t\t\tr--;\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tint[] compress(int[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tint[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong[] compress(long[] arr) {\n\t\t\tint n = arr.length;\n\t\t\tlong[] rv = Arrays.copyOf(arr, n);\n\t\t\trv = uniq(rv);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Arrays.binarySearch(rv, arr[i]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tvoid deepFillInt(Object array, int val) {\n\t\t\tif (!array.getClass().isArray()) {\n\t\t\t\tthrow new IllegalArgumentException();\n\t\t\t}\n\t\t\tif (array instanceof int[]) {\n\t\t\t\tint[] intArray = (int[]) array;\n\t\t\t\tArrays.fill(intArray, val);\n\t\t\t} else {\n\t\t\t\tObject[] objArray = (Object[]) array;\n\t\t\t\tfor (Object obj : objArray) {\n\t\t\t\t\tdeepFillInt(obj, val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvoid deepFillLong(Object array, long val) {\n\t\t\tif (!array.getClass().isArray()) {\n\t\t\t\tthrow new IllegalArgumentException();\n\t\t\t}\n\t\t\tif (array instanceof long[]) {\n\t\t\t\tlong[] intArray = (long[]) array;\n\t\t\t\tArrays.fill(intArray, val);\n\t\t\t} else {\n\t\t\t\tObject[] objArray = (Object[]) array;\n\t\t\t\tfor (Object obj : objArray) {\n\t\t\t\t\tdeepFillLong(obj, val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef getCnt(a, b, x):\n    l = 0\n    r = 10 ** 20\n    while(r - l > 1):\n        mid = (l + r) // 2\n        if(mid * a * b <= x):\n            l = mid\n        else:\n            r = mid\n    cnt = l * b\n    RBorder = min(x, (l * a + 1) * b - 1)\n    cnt += RBorder - l * a * b + 1\n    return cnt\n\ndef solve():\n    a, b, q = map(int, input().split())\n    if(a > b):\n        c = a\n        a = b\n        b = c\n    a //= gcd(a, b)\n    for i in range(q):\n        l, r = map(int, input().split())\n        print((r - l + 1) - (getCnt(a, b, r) - getCnt(a, b, l - 1)), end = \" \")\n    print()\n\n\nt = int(input())\nfor i in range(t):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "from math import *\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    lis = []\n    val = (a*b)//gcd(a,b)\n    k = max(a,b)\n    for i in range(q):\n        l,r = map(int,input().split())\n        if a==b:\n            lis.append(0)\n        else:\n            cnt=((r//val)*(val-k))+max(0,r%val-(k-1))\n            cnt-=(((l-1)//val)*(val-k))+max(0,(l-1)%val-(k-1))\n            lis.append(cnt)\n    print(*lis)"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b): \n    if a == 0: \n        return b \n    return gcd(b % a, a) \n  \n# Function to return LCM of two numbers \ndef lcm(a,b): \n    return (a*b) / gcd(a,b) \n\ndef check(f,t,x):\n    ans = (x//(f+t)) * f\n    if x%(f+t) > t:\n        ans += x%(f+t) - t +1\n    return x//(f+t) * f + max(x%(f+t) - t ,0)\n\ndef out():\n    a,b,q= map(int,input().split())\n    am = max(a,b)\n    bm = min(a,b)\n    \n    Time = am*( bm//gcd(a,b) )\n    f = Time - am\n    t = am\n    # print(f,t,a,b)\n    for i in range(q):\n        l,r = map(int,input().split())\n        # print(\"dsf\",t+f,l)\n        # print(\"left\",check(f,t,l))\n        # print(\"right\",check(f,t,r))\n        z = int(check(f,t,r+1)-check(f,t,l)) \n        print( z,end=' ')\n    print()\n\nans = 0 \nfor i in range(int(input())):\n    out()"
        },
        {
            "language": 3,
            "solution": "import sys, math\nreader = (line.rstrip() for line in sys.stdin)\ninput = reader.__next__\n\ndef getInts():\n    return [int(s) for s in input().split()]\n\ndef getInt():\n    return int(input())\n\ndef getStrs():\n    return [s for s in input().split()]\n\ndef getStr():\n    return input()\n\ndef listStr():\n    return list(input())\n\nimport collections as col\nimport math\n\ndef solve():\n    #in our range, we're interested in (up to a maximum of) a*b numbers, after which the pattern will recur\n    #so we calculate the answer for the range L <= X < L+a*b, storing the prefix counts, and then add on the required number of multiples, plus the final prefix\n    A, B, Q = getInts()\n    ans = []\n    prefix = []\n    curr_num = 0\n    for x in range(A*B):\n        if (x % A) % B != (x % B) % A:\n            curr_num += 1\n        prefix.append(curr_num)\n    for q in range(Q):\n        L, R = getInts()\n        whole = (R-L+1)//(A*B)\n        extra = (R-L+1)%(A*B)\n        #curr_num*whole takes us to L % A*B not inclusive. Suppose R % A*B < L % A*B\n        add_on = 0\n        R %= (A*B)\n        L %= (A*B)\n        if extra:\n            if R >= L:\n                add_on = prefix[R]-(prefix[L-1] if L > 0 else 0)\n            else:\n                add_on = curr_num - prefix[L-1] + prefix[R]\n        # ans.append(curr_num*whole+add_on)\n        # extra numbers begin at L % (A*B) and end at R % (A*B)\n        # suppose A*B == 12\n        # [0,1,2,3,4,5,6,7,8,9,10,11]\n        # now suppose L = 3, R = 7\n        # we need pref[R]-(pref[L-1] if L > 0 else 0)\n        \n        # what if L = 7, R = 3\n        # we need 7-11 and 0-3\n        # curr_num - pref[L-1] + pref[R]\n        ans.append(curr_num*whole+add_on)\n    print(*ans)\n    return\n    \n    \nfor t in range(getInt()):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if (a == 0): return b\n    return gcd(b % a, a)\n\ndef lcm(a, b): return int((a * b) / gcd(a, b))\n\nt=int(input())\nfor tt in range(t):\n    a, b, q = [int(i) for i in str.split(input(), ' ')]\n    # print(a, b)\n\n    ctr = [0]\n    lcm_res = lcm(a, b)\n    for i in range(1, lcm_res):\n        # print(i, (i % a) % b, (i % b) % a, end=\"\\t\")\n        if (i % a) % b != (i % b) % a:\n            ctr.append(ctr[-1]+1)\n        else:\n            ctr.append(ctr[-1])\n    # print()\n    # print(ctr)\n    res = []\n    for qq in range(q):\n        l, r = [int(i) for i in str.split(input(), ' ')]\n        cur_res = 0\n        prev_l = l // lcm_res * lcm_res\n        next_l = (1 + l // lcm_res) * lcm_res\n        prev_r = r // lcm_res * lcm_res\n        # print(prev_l, prev_r)\n\n        if prev_l == prev_r:\n            # print('a')\n            if l - prev_l - 1 < 0:\n                cur_res += ctr[r - prev_r]\n            else:\n                cur_res += ctr[r - prev_r] - ctr[l - prev_l - 1]\n        else:\n            # print('b',(ctr[-1] - ctr[l - prev_l - 1]), ctr[r - prev_r])\n            if l - prev_l - 1 < 0:\n                cur_res += ctr[-1] + ctr[r - prev_r]\n            else:\n                cur_res += (ctr[-1] - ctr[l - prev_l - 1]) + ctr[r - prev_r]\n\n        if next_l < prev_r:\n            # print('c', next_l, prev_r)\n            cur_res += (prev_r - next_l) // lcm_res * ctr[-1]\n        res.append(int(cur_res))\n    print(' '.join(map(str, res)))\n    # print()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid debug_out() { cerr << endl; }\ntemplate <typename H, typename... T>\nvoid debug_out(H h, T... t) {\n  cerr << \" \" << (h);\n  debug_out(t...);\n}\nusing int64 = long long int;\nclass CYetAnotherCountingProblem {\n public:\n  void solve(std::istream& in, std::ostream& out) {\n    int t;\n    in >> t;\n    while (t--) {\n      int64 a, b, q;\n      in >> a >> b >> q;\n      if (a > b) swap(a, b);\n      if ((b % a) == 0) {\n        while (q--) {\n          int64 l, r;\n          in >> l >> r;\n          out << 0 << \" \";\n        }\n        out << endl;\n        continue;\n      }\n      int period = 0;\n      while (((period % a) % b) == ((period % b) % a)) {\n        period++;\n        assert(period < (3 * (a * b)));\n      }\n      int len = period;\n      while (((len % a) % b) != ((len % b) % a)) {\n        len++;\n        assert(len < (3 * (a * b)));\n      }\n      int extra = len - period;\n      while (q--) {\n        int64 l, r;\n        in >> l >> r;\n        int64 ans = 0;\n        int64 r_begin = (r / len) * len;\n        int64 l_begin = (l / len) * len;\n        if (l_begin != r_begin) {\n          int64 dist = max(0LL, r_begin / len - l_begin / len - 1);\n          ans += dist * extra;\n          l -= l_begin;\n          ans += extra - max(0LL, (l - period));\n          r -= r_begin;\n          ans += max(0LL, r - period + 1);\n        } else {\n          l -= l_begin;\n          r -= r_begin;\n          if (l >= period && r >= period) {\n            ans += r - l + 1;\n          } else if (l < period && r < period) {\n          } else {\n            ans += r - period + 1;\n          }\n        }\n        out << ans << \" \";\n      }\n      out << endl;\n    }\n  }\n};\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  CYetAnotherCountingProblem solver;\n  std::istream& in(std::cin);\n  std::ostream& out(std::cout);\n  solver.solve(in, out);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class First {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        //int a = 1;\n        int t;\n        t = in.nextInt();\n        //t = 1;\n        while (t > 0) {\n            //out.print(\"Case #\"+(a++)+\": \");\n            solver.call(in, out);\n            t--;\n        }\n        out.close();\n\n    }\n\n    static class TaskA {\n        long c;\n        int a, b, q;\n        public void call(InputReader in, PrintWriter out) {\n\n            a = in.nextInt();\n            b = in.nextInt();\n            q = in.nextInt();\n\n            if(a>b){\n                c = a;\n                a = b;\n                b = (int)c;\n            }\n\n            c = lcm(a,b);\n\n            long l, r;\n\n            for (int i = 0; i < q; i++) {\n                l = in.nextLong();\n                r = in.nextLong();\n                out.print((r-l+1 - (get(r) - get(l-1)))+\" \");\n\n            }\n            out.println();\n\n        }\n\n        public long get(long n) {\n            long cnt=(n/c);\n            return (cnt*b+Math.min(b,n+1-cnt*c));\n        }\n\n    }\n\n    static int gcd(int a, int b)\n    {\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    static int lcm(int a, int b)\n    {\n        return (a / gcd(a, b)) * b;\n    }\n\n    static class answer implements Comparable<answer>{\n        int a;\n        int b;\n\n        public answer(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(answer o) {\n            return this.a - o.a;\n        }\n    }\n\n    static class answer1 implements Comparable<answer1>{\n        int a, b, c;\n\n        public answer1(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n\n        }\n\n        @Override\n        public int compareTo(answer1 o) {\n            return this.a - o.a;\n        }\n    }\n\n    static long gcd(long a, long b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static void sort(long[] a) {\n        ArrayList<Long> l=new ArrayList<>();\n        for (long i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n\n    static final Random random=new Random();\n\n    static void shuffleSort(int[] a) {\n        int n=a.length;\n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n), temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        Arrays.sort(a);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, setrecursionlimit, stdout\n#setrecursionlimit(1000000)\nfrom collections import deque\nfrom math import sqrt, floor, ceil, log, log2, log10, pi, gcd, sin, cos, asin\ndef ii(): return int(stdin.readline())\ndef fi(): return float(stdin.readline())\ndef mi(): return map(int, stdin.readline().split())\ndef fmi(): return map(float, stdin.readline().split())\ndef li(): return list(mi())\ndef lsi():\n    x=list(stdin.readline())\n    x.pop()\n    return x\ndef si(): return stdin.readline().rstrip()\n#mod=1000000007\nres=['YES', 'NO']\n############# CODE STARTS HERE #############\ntest_case=ii()\nwhile test_case:\n    test_case-=1\n\n\n\n    ans=[]\n    a, b, q=mi()\n    m=a*b//gcd(a, b)\n    if a>b:\n        a, b=b, a\n    #print(m, a, b)\n    for _ in range(q):\n        l, r=mi()\n        x=l//m\n        y=r//m\n        l=max(l, x*m+b)\n        if r<y*m+b:\n            r=y*m-1\n            y-=1\n        cnt=max(0, r-l+1)\n        if cnt:\n            cnt-=b*(y-x)\n        #print(l, r)\n        ans.append(cnt)\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(map(int,input().split()))\n\ndef print_list_int(l):\n    print(\"\".join(map(str, map(int, l))))\n\ndef compute_lcm(x, y):\n\n    # choose the greater number\n    if x > y:\n        greater = x\n    else:\n        greater = y\n\n    while(True):\n        if((greater % x == 0) and (greater % y == 0)):\n            lcm = greater\n            break\n        greater += 1\n\n    return lcm\n\nif __name__ == \"__main__\":\n    t = inp()\n    for test in range(t):\n        a,b,q = inlt()\n        c,d = min(a,b), max(a,b)\n        a,b = c,d\n        lcm = compute_lcm(a,b)\n        out = []\n        for i in range(q):\n            l,r =inlt()\n            if lcm == b:\n                out.append(\"0\")\n            elif r<b:\n                out.append(\"0\")\n            elif r<lcm:\n                out.append(str(r-max(l,b)+1))\n            else:\n                if l%lcm < b:\n                    l = int(l//lcm)*lcm + b\n                if r%lcm < b:\n                    r = int(r//lcm)*lcm - 1\n                between = int((r)//lcm)-int(l//lcm)\n                num = r-l+1 - (b*between)\n                out.append(str(num))\n        print(\" \".join(out))\n\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfrom math import *\nt=int(input())\ndef bo(x):\n    global a,b,l\n\n    if x==0:\n        return 0\n    h=x//l\n\n    u=0\n    if h>0:\n        u+=(h)*max(a,b) \n        u-=1\n    #print(u)\n    if h!=0:\n        u+=(min(max(a,b),x+1-h*l))\n    else:\n         u+=(min(max(a,b),x-h*l))\n        \n    #print(u,h)\n    if h==0 and max(a,b)<=x-h*l:\n        u-=1\n    \n    return x-u\nwhile t>0:\n    t-=1\n    a,b,q=map(int,input().split())\n    g=gcd(a,b)\n    l=(a*b)//g\n    #print(l)\n    for _ in range(q):\n        x,y=map(int,input().split())\n        if g==min(a,b):\n            print(0,end=\" \")\n        else:\n            #print(bo(y),bo(x-1))\n            print(bo(y)-bo(x-1),end=\" \")\n        \n    print()   "
        },
        {
            "language": 3,
            "solution": "import sys\n\ninput = sys.stdin.readline\n\nimport math\n\n\ndef solve(n, lc, a, b):\n    x = n // lc\n    ans = 0\n    if x > 0:\n        ans += ((n // lc) - 1) * max(a, b)\n        ans += min(n % lc + 1, max(a, b))\n    ans += min(max(a, b) - 1, n)\n    return ans\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        A, B, Q = [int(x) for x in input().split()]\n        LR = [[int(x) for x in input().split()] for _ in range(Q)]\n\n        ans = []\n        lc = (A * B) // math.gcd(A, B)\n        for l, r in LR:\n            rn = solve(r, lc, A, B)\n            ln = solve(l - 1, lc, A, B)\n\n            ans.append((r - l + 1) - (rn - ln))\n\n        print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n    # print(solve(140, 70, 7, 10))\n"
        },
        {
            "language": 1,
            "solution": "from fractions import gcd\n\nfor _ in range(input()):\n    a, b, q = map(int, raw_input().split())\n    lc = (a*b)\n    cnt = [0 for i in range(lc + 1)]\n    for i in range(1, lc + 1):\n        cnt[i] = cnt[i - 1] + ((i%a)%b != (i%b)%a)\n\n    for i in range(q):\n        l, r = map(int, raw_input().split())\n        print (r/lc - (l - 1)/lc)*cnt[lc] - cnt[(l - 1)%lc] + cnt[r%lc],\n    print"
        },
        {
            "language": 3,
            "solution": "# HEY STALKER\nimport math\nfor _ in range(int(input())):\n    a, b, n = map(int, input().split())\n    if b < a:\n        a, b = b, a\n    g = (a*b)//math.gcd(a, b)\n    for tt in range(n):\n        l, r = map(int, input().split())\n        q1 = r % g\n        q2 = (l-1) % g\n        q = (r//g)*b + min(q1+1, b) - ((l-1)//g)*b - min(q2+1, b)\n        tot = r-l+1\n        print(max(0, tot-q))"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfrom math import gcd\nt= int(input())\nfor i in range(t):\n    a,b,q = map(int,input().split())\n    a1 = min(a,b)\n    b1 = max(a,b)\n    arr=[]\n    for queries in range(q):\n        l,r = map(int,input().split())\n        ans = r-l+1\n        lcm = (a*b)//(gcd(a,b))\n        l1 = l-(l%lcm)\n        if(l1+b1>l):\n            ans -= (l1+b1-l)\n        if(ans<=0):\n            arr.append(0)\n            continue\n        r1 = r-(r%lcm)\n        if(r1==l1):\n            arr.append(ans)\n            continue\n        ans -= min(b1,r-r1+1)\n        l2 = l + lcm - (l%lcm)\n        terms = (r1-l2)//lcm\n        ans -= (terms*b1)\n        arr.append(ans)\n    print(*(arr),sep=\" \")\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "def query(p, div, prefix_sum):\n    return (p // div) * prefix_sum[div] + prefix_sum[p % div]\n\n\ndef solve(a, b, queries):\n    prefix_sum = [0]\n    for i in range(1, (a * b) + 1):\n        curr = 1 if ((i % a) % b) != ((i % b) % a) else 0\n        prefix_sum.append(prefix_sum[i - 1] + curr)\n    result = []\n    for q in queries:\n        result.append(query(q[1], a * b, prefix_sum) - query(q[0] - 1, a * b, prefix_sum))\n    return result\n\n\nif __name__ == \"__main__\":\n    for i in range(int(input())):\n        a, b, q = map(int, input().split())\n        queries = [[int(x) for x in input().split()] for y in range(q)]\n        print(\" \".join(map(str, solve(a, b, queries))))\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nfrom math import gcd\ntest=int(input())\n\nfor t in range(test):\n\ta,b,q=map(int,input().split())\n\tm=(a*b)//gcd(a,b)\n\n\ts=0\n\tnarr=[0]*m\n\tfor j in range(m):\n\t\tif (j%a)%b!=((j%b)%a):\n\t\t\ts+=1\n\t\tnarr[j]=s\n\tfor i in range(q):\t\t\n\t\tl,r=map(int,input().split())\n\t\tcnt=0\n\t\tcnt=(r // m) * s + narr[r % m]-(((l-1) // m) * s + narr[(l-1) % m])\n\t\tprint(cnt,end=\" \")\n\tprint()\n\t\t# fin=0\n\n\t\t# if l+m<=r:\n\t\t# \tfin=r+1\n\t\t# else:\n\t\t# \tfin=l+m\n\t\t# for j in range(l,fin):\n\n\t\t# \tif (j%a)%b!=((j%b)%a):\n\t\t# \t\tcnt+=1\n\t\t# if fin!=l+m:\n\t\t# \tcnt=cnt*((r-l)//m)\n\t\t# \tfor j in range(r,(r-l)%m):\n\t\t# \t\tif (j%a)%b!=((j%b)%a):\n\t\t# \t\t\tcnt+=1\n\t\t# print(cnt)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n\ta,b,q = map(int,input().split())\n\tprzyg = [0] * (a*b)\n\tfor i in range(a*b):\n\t\tif (i%a)%b != (i%b)%a:\n\t\t\tprzyg[i] = 1\n\tcyk = sum(przyg)\n\tpref = [0]*(a*b)\n\tpref[0] = przyg[0]\n\tfor i in range(1,a*b):\n\t\tpref[i] = pref[i-1] + przyg[i]\n\tfor query in range(q):\n\t\tl,r = map(int,input().split())\n\t\tll = l%(a*b)\n\t\trr = r%(a*b)\n\t\twynik = cyk * (r//(a*b) - l//(a*b))\n\t\twynik += pref[rr]\n\t\tif ll > 0:\n\t\t\twynik -= pref[ll-1]\n\t\tif query < q-1:\n\t\t\tprint(wynik, end = \" \")\n\t\telse:\n\t\t\tprint(wynik)"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a * b) / gcd(a, b)\n\n\nt = int(input())\n\nfor test in range(t):\n    a, b, q = list(map(int, input().split()))\n\n    if a == b:\n        for query in range(q):\n            l, r = list(map(int, input().split()))\n            print(int(0), end=\" \")\n        print()\n\n    else:\n        greater = max(a, b)\n        smaller = min(a, b)\n        lc = int(lcm(greater, smaller))\n        count = 0\n        valid_list = [0] * lc\n        valid_count = [0] * lc\n\n        for i in range(0, lc):\n            if ((i % smaller) % greater) != ((i % greater) % smaller):\n                count += 1\n                valid_list[i] = 1\n            valid_count[i] = count\n\n        for query in range(q):\n            l, r = list(map(int, input().split()))\n\n            #total_range = r - l + 1\n            #num_to_check = total_range % lc\n            ans = 0\n\n            cycles_l = (l-1) // lc\n            rem_l = (l-1) % lc\n            ans_l = (cycles_l * count) + valid_count[rem_l]\n            if(l == 1):\n                ans_l = 0\n\n            cycles_r = r // lc\n            rem_r = r % lc\n            ans_r = (cycles_r * count) + valid_count[rem_r]\n\n            ans = ans_r - ans_l\n\n\n            print(int(ans), end=\" \")\n        print()\n"
        },
        {
            "language": 3,
            "solution": "\n\ndef gcd(a,b): \n    if a == 0: \n        return b \n    return gcd(b % a, a) \n  \n\ndef compute_lcm(a,b): \n    return (a*b) // gcd(a,b) \ndef find(r,a,b):\n    lcm=compute_lcm(a,b)\n    t=((r//(lcm))+1)\n    if r%(lcm)<max(a,b):\n        t-=1\n\n        ans=((r//(lcm))*(lcm)-t*max(a,b))\n    else:\n        ans=(r-t*max(a,b))+1\n    return ans\nn=int(input())\nfor _ in range(n):\n    a,b,q=map(int,input().split())\n    final=[]\n    for k in range(q):\n        l,r=map(int,input().split())\n        if a>b and a%b==0:\n            final.append(0)\n        elif a<=b and b%a==0:\n            final.append(0)\n        else:\n            final.append(find(r,a,b)-find(l-1,a,b))\n    print(\" \".join(map(str,final)))\n\n\n##a,b=4,6\n##for l in range(1,1000):\n##    for r in range(l+1,1000):\n##        #r=100\n##        count=0\n##        for i in range(l,r+1):\n##            if (i%a)%b!=(i%b)%a:\n##                #print(i)\n##                count+=1\n##    \n##        ansA=(count)\n##        ans=find(r,a,b)-find(l-1,a,b)\n##        #print(ans,ansA)\n##        if(ansA!=ans):\n##            print(l,r,ansA,ans)\n##count=0\n##l,r=0,158\n##for i in range(l,r+1):\n##    if (i%a)%b!=(i%b)%a:\n##        print(i)\n##        count+=1\n##    else:\n##        print(\"sad \" +str(i))\n##print(count,find(r,a,b)-find(l-1,a,b))\n"
        },
        {
            "language": 3,
            "solution": "nt = int(input())\nfor _ in range(nt):\n    a, b, q = map(int, input().split())\n    xs = 0\n    index_x = []\n\n    for x in range(a*b):\n        if (x % a) % b != (x % b) % a:\n            xs += 1\n            #print(x, end=\" \")\n        index_x.append(xs)\n\n    for t in range(q):\n        l, r = map(int, input().split())\n        s = 0\n        ll = l % (a * b)\n        rr = r % (a * b)\n\n        if (r // (a * b)) == (l // (a * b)):\n            if ll > 0:\n                s = index_x[rr] - index_x[ll-1]\n            else:\n                s = index_x[rr]\n                    #print(x)\n            print(s, end=\" \")\n            continue\n\n        s += xs\n        if ll != 0:\n            s -= index_x[ll-1]\n\n        if rr != 0:\n            s += index_x[rr]\n        s += ((r // (a*b)) - (l // (a*b)) - 1) * xs\n        print(s, end=\" \")\n\n    print()\n\n"
        },
        {
            "language": 3,
            "solution": "\ndef gcd(a, b) : \n      \n    if (a == 0) : \n        return b \n          \n    return gcd(b % a, a) \n\n    \ndef fun(num, a, b):\n    g = gcd(a,b)\n    g = (a*b)//g\n    chk = (num//(g))\n    ans = 0\n    \n    ans += chk*b\n    \n    ans += min(num-(chk*g)+1,b)\n    \n    \n    return ans    \n \nt = int(input())\n \nfor _ in range(t):\n    \n    a, b, q = list(map(int,input().split()))\n    \n    if(a>b):\n        a, b = b, a\n    ans = []\n    for i in range(q):\n        l, r = list(map(int,input().split()))\n        \n        ans = fun(r,a,b) - fun(l-1,a,b)\n        \n        \n        #print(cnt)\n        print(r-l+1 - ans,end=' ')\n    print()\n"
        },
        {
            "language": 3,
            "solution": "def R(): return map(int, input().split())\ndef I(): return int(input())\ndef S(): return str(input())\n\ndef L(): return list(R())\n\nfrom collections import Counter \n\nimport math\nimport sys\n\nfrom itertools import permutations\n\nimport bisect\n\ndef func(x):\n    return s[x%(a*b)]+(x//(a*b))*s[a*b-1]\n\nfor _ in range(I()):\n    \n    a,b,q=R()\n\n    s=[0]*(a*b)\n\n    for i in range(1,a*b):\n        s[i]=s[i-1]\n\n        if (i%a)%b!=(i%b)%a:\n            s[i]+=1\n\n    #print('*')\n\n    for i in range(q):\n        l,r=R()\n\n        print(func(r)-func(l-1),end=' ')\n\n    print()"
        },
        {
            "language": 3,
            "solution": "p=[0]*40002   \ndef count(k):\n    return (k//(a*b))*p[a*b -1] + p[k%(a*b)]\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    p[0]=0\n    for j in range(1,a*b):\n        a1=(j%a)%b\n        a2=(j%b)%a\n        p[j]=p[j-1]\n        if(a1!=a2):p[j]+=1\n        \n    for i in range(0,q):\n        l,r=map(int,input().split())\n        ans=count(r)-count(l-1)\n        print(ans,end=\" \")\n    print()    "
        },
        {
            "language": 3,
            "solution": "import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ndef gcd(a,b):\n    while b:a,b=b,a%b\n    return a\n\ndef lcm(a,b):\n    return a*b//gcd(a,b)\n\ndef main():\n    def f(x):\n        x+=1\n        p,r=divmod(x,L)\n        res=p*d+max(0,r-mx)\n        return res\n\n    for _ in range(II()):\n        a,b,q=MI()\n        L=lcm(a,b)\n        mx=max(a,b)\n        d=L-mx\n        ans=[]\n        for _ in range(q):\n            l,r=MI()\n            ans.append(f(r)-f(l-1))\n        print(*ans)\n\nmain()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1001001001;\nconst long long int LINF = 100100100100100100;\nconst double EPS = 1e-10;\nconst long double PI = acos(-1.0L);\n__attribute__((constructor)) void initial() {\n  cin.tie(nullptr);\n  ios::sync_with_stdio(false);\n  cout << fixed << setprecision(15);\n}\nlong long int gcd(long long int a, long long int b) {\n  if (b == 0)\n    return a;\n  else\n    return gcd(b, a % b);\n}\nlong long int lcm(long long int a, long long int b) {\n  return a / gcd(a, b) * b;\n}\nsigned main() {\n  int q;\n  cin >> q;\n  while (q--) {\n    long long int a, b, q;\n    cin >> a >> b >> q;\n    long long int n = a * b;\n    long long int f[n + 1];\n    f[0] = 0LL;\n    for (int i = 1; i < n; i++) {\n      f[i] = f[i - 1];\n      if (i % a % b != i % b % a) f[i]++;\n    }\n    while (q--) {\n      long long int l, r;\n      cin >> l >> r;\n      cout << f[n - 1] * (r / n) + f[r % n] - f[n - 1] * ((l - 1) / n) -\n                  f[(l - 1) % n]\n           << ' ';\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nfor i in range(int(input())):\n\ta,b,q=[int(i)for i in input().split()]\n\tans=[]\n\tfor _ in range(q):\n\t\tl,r=[int(i)for i in input().split()]\n\t\tif a == b:\n\t\t\tans += [0]\n\t\telse:\n\t\t\tsame = 0\n\t\t\tif a > b: a,b = b,a\n\t\t\tc = (a*b)//gcd(a,b)\n\t\t\tk = l % c\n\t\t\tif k < b:\n\t\t\t\tif r-l+1 <= b-k:\n\t\t\t\t\tans += [0]\n\t\t\t\t\tcontinue\n\t\t\t\telse:\n\t\t\t\t\tsame += b-k\n\n\t\t\tm = r // c - l // c\n\t\t\tsame += m*b\n\t\t\tk = r % c\n\t\t\tif k < b:\n\t\t\t\tsame -=  b-(k+1)\n\t\t\tans += [r-l+1 - same]\n\tprint(*ans)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\n\ntest=int(input())\n\nfor t in range(test):\n\ta,b,q=map(int,input().split())\n\tm=(a*b)\n\n\ts=0\n\tnarr=[0]*m\n\tfor j in range(m):\n\t\tif (j%a)%b!=((j%b)%a):\n\t\t\ts+=1\n\t\tnarr[j]=s\n\tfor i in range(q):\t\t\n\t\tl,r=map(int,input().split())\n\t\tcnt=0\n\t\tcnt=(r // m) * s + narr[r % m]-(((l-1) // m) * s + narr[(l-1) % m])\n\t\t# ncnt=0\n\t\t# if arr[l%m]==-1:\n\t\t# \tfor j in range(l,l+m):\n\t\t# \t\tif (j%a)%b!=((j%b)%a):\n\t\t# \t\t\tcnt+=1\n\t\t# \tarr[l%m]=cnt\n\t\t# else:\n\t\t# \tcnt=arr[l%m]\n\t\t# cnt=cnt*fin\n\t\t# cnt+=ncnt\n\t\t# for j in range(r,r-lef-1,-1):\n\t\t# \tif (j%a)%b!=((j%b)%a):\n\t\t# \t\tcnt+=1\n\t\tprint(cnt,end=\" \")\n\tprint()\n\t\t# fin=0\n\n\t\t# if l+m<=r:\n\t\t# \tfin=r+1\n\t\t# else:\n\t\t# \tfin=l+m\n\t\t# for j in range(l,fin):\n\n\t\t# \tif (j%a)%b!=((j%b)%a):\n\t\t# \t\tcnt+=1\n\t\t# if fin!=l+m:\n\t\t# \tcnt=cnt*((r-l)//m)\n\t\t# \tfor j in range(r,(r-l)%m):\n\t\t# \t\tif (j%a)%b!=((j%b)%a):\n\t\t# \t\t\tcnt+=1\n\t\t# print(cnt)"
        },
        {
            "language": 3,
            "solution": "import math\nI=lambda : list(map(int,input().split()))\nfor _ in range(int(input())):\n  a,b,q=I()\n  lc=a*b//math.gcd(a,b);k=lc-max(a,b)\n  an=[]\n  for i in range(q):\n    l,r=I()\n    if a==b:\n      an.append(0)\n    else:\n      x=(r//(lc))*k+max(0,r%(lc)-max(a,b)+1)\n      x-=((l-1)//(lc))*k+max(0,(l-1)%(lc)-max(a,b)+1)\n      an.append(x)\n  print(*an) "
        },
        {
            "language": 4,
            "solution": "\n\n\n\nimport java.io.*;\nimport java.util.*;\nimport java.math.BigInteger; \nimport java.lang.Object;\n\n\npublic class Main {\n    \n    \n   static class sort implements Comparator<int[]>\n   {\n        public int compare(int[] a,int[] b)\n        {\n            //if(a[0] == b[0]) return a[1]-b[1];\n           /*if(a[1] < b[1]) return -1;\n           else if(a[1] > b[1]) return 1;\n           return a[0]-b[0];*/\n           int l1,l2;\n           l1=(a[1]-a[0]);\n           l2=(b[1]-b[0]);\n           if(l1>l2)\n           {\n                return -1;\n           }\n           else if(l2>l1)\n           {\n                return 1;\n           }\n           else \n           {\n               if(a[1]<=b[0])\n               {\n                    return -1;\n               }\n               return 1;\n           }\n        }\n   }\n   static class sort1 implements Comparator<double[]>\n   {\n        public int compare(double[] a,double[] b)\n        {\n            //if(a[0] == b[0]) return a[1]-b[1];\n           if(a[1] < b[1]) return -1;\n           else if(a[1] > b[1]) return 1;\n           return 0;\n        }\n   }\n   public static String[] F(BufferedReader bf) throws Exception\n    {\n        return (bf.readLine().split(\" \"));\n    }\n    \n   public static void pr(PrintWriter out,Object o)\n   {\n      \n    out.println(o.toString());out.flush();\n    \n   }\n   public static void prW(PrintWriter out,Object o)\n   {\n      \n    out.print(o.toString());out.flush();\n    \n   }\n   public static int intIn(String st)\n   {\n      return Integer.parseInt(st);\n   }\n   \n   \n    \n    public static void pr(Object o)\n    {\n        System.out.println(o.toString());\n    }\n    public static void prW(Object o)\n    {\n        System.out.print(o.toString());\n    }\n    \n   \n    public static int inInt(String s)\n    {\n        return Integer.parseInt(s);\n    }\n    public static long in(String s)\n    {\n        return Long.parseLong(s);\n    }\n\n\n    static int[] toIntArray(String[] m) \n    { \n        int[] p=new int[m.length];\n        for(int o=0;o<m.length;o++)\n        {\n            p[o]= inInt(m[o]);\n        }\n        return p;\n    }\n    static double[] toDArray(String[] m) \n    { \n        double[] p=new double[m.length];\n        for(int o=0;o<m.length;o++)\n        {\n            p[o]= Double.parseDouble(m[o]);\n        }\n        return p;\n    }\n    static long[] toLArray(String[] m) \n    { \n       long[] p=new long[m.length];\n        for(int o=0;o<m.length;o++)\n        {\n            p[o]= in(m[o]);\n        }\n        return p;\n    }\n    \n    static int[][] di={{0,1},{1,0},{0,-1},{-1,0}};\n    static int[] dir = {4,3,2,-4,-3,-2};\n    public static void F(int i,int c,int[] vis,List<Integer> res,int n)\n    {\n        vis[i]=1;\n        res.add(i);\n        for(int x : dir)\n        {\n            int v = i+x;\n            if(v<=0 || v>n) continue;\n\n            if(vis[v] == 0)\n            {\n                F(v,c,vis,res,n);\n            }\n        }\n    }\n     static long gcd(long a, long b)\n        {\n          if (b == 0)\n            return a;\n          return gcd(b, a % b); \n        }\n        static long Gp(long l,long b,long lcm)\n        {\n            long c1,c2;\n                c1 = (l/lcm);\n                long sum=0l;\n                sum += (c1-1l)*(b);\n                long las = (l/lcm)*lcm;\n                sum += Math.min(l-las+1l,b);\n                return sum;\n        }\n    public static void main (String[] args) throws Exception {\n        \n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);;;\n        \n        //int[] map=new int[1000001];\n      \n       int yy=Integer.parseInt(bf.readLine());\n        for(int w=0;w<yy;w++)\n        {\n\n            String[] xlp = bf.readLine().split(\" \");;;;;;\n            //String st = bf.readLine();\n           long n,t;//boolean bol=false;\n           long m;//long a,b,c;\n           int k;\n           //int ans=0;\n            n=in(xlp[0]);m=in(xlp[1]);k=inInt(xlp[2]);//t=inInt(xlp[3]);\n            long a,b;\n            a=n;b=m;\n            if(a>b)\n            {\n                long tem=b;\n                b=a;\n                a=tem;\n            }\n            long lcm = (a*b)/(gcd(a,b));\n            for(int o=0;o<k;o++)\n            {\n                long[] ar = toLArray(F(bf));\n                long le,r;\n                le=ar[0];r=ar[1];\n                long res = Gp(r,b,lcm);\n                if(le>0) res = (res - Gp(le-1,b,lcm));\n                prW(out,(r-le+1l-res)+\" \");\n\n            }\n         pr(out,\"\");\n\n    }\n    out.close();\n}}\n\n\n/*\n\n\n1\n8\n7 4\n9 10\n4 8\n3 1\n1 7\n9 5\n1 4\n2 5\n\n100663319,201326611,402653189,805306457,1610612741\nKickstart\n String rp;\n            rp = \"Case #\"+(w+1)+\": \"+(n-ans)+\" \";\nstatic int[][] dir={{0,1},{1,0},{-1,0},{0,-1}};\n\nstatic class SegmentTreeRMQ \n    { \n    int st[]; \n    int minVal(int x, int y) { \n        return (x > y) ? x : y; \n    } \n  \n    \n    int getMid(int s, int e) { \n        return s + (e - s) / 2; \n    } \n  \n    \n    int RMQUtil(int ss, int se, int qs, int qe, int index) \n    { \n        \n        if (qs <= ss && qe >= se) \n            return st[index]; \n  \n        // If segment of this node is outside the given range \n        if (se < qs || ss > qe) \n            return Integer.MIN_VALUE; \n  \n        // If a part of this segment overlaps with the given range \n        int mid = getMid(ss, se); \n        return minVal(RMQUtil(ss, mid, qs, qe, 2 * index + 1), \n                RMQUtil(mid + 1, se, qs, qe, 2 * index + 2)); \n    } \n  \n    // Return minimum of elements in range from index qs (query \n    // start) to qe (query end).  It mainly uses RMQUtil() \n    int RMQ(int n, int qs, int qe) \n    { \n        // Check for erroneous input values \n        \n  \n        return RMQUtil(0, n - 1, qs, qe, 0); \n    } \n  \n    // A recursive function that constructs Segment Tree for \n    // array[ss..se]. si is index of current node in segment tree st \n    int constructSTUtil(int arr[], int ss, int se, int si) \n    { \n        // If there is one element in array, store it in current \n        //  node of segment tree and return \n        if (ss == se) { \n            st[si] = arr[ss]; \n            return arr[ss]; \n        } \n  \n        // If there are more than one elements, then recur for left and \n        // right subtrees and store the minimum of two values in this node \n        int mid = getMid(ss, se); \n        st[si] = minVal(constructSTUtil(arr, ss, mid, si * 2 + 1), \n                constructSTUtil(arr, mid + 1, se, si * 2 + 2)); \n        return st[si]; \n    } \n  \n    \n    void con(int arr[]) \n    { \n        // Allocate memory for segment tree \n  \n        //Height of segment tree \n        int n = (arr.length);\n        int x = (int) (Math.ceil(Math.log(n) / Math.log(2))); \n  \n        //Maximum size of segment tree \n        int max_size = 2 * (int) Math.pow(2, x) - 1; \n        st = new int[max_size]; // allocate memory \n  \n        // Fill the allocated memory st \n        constructSTUtil(arr, 0, n - 1, 0); \n    }\n    }\n     static class DSU {\n    \n    int[] p;int[] sz;int op;int c;;\n    int[] last;\n    public void G(int n)\n    {\n        last=new int[n];\n        p=new int[n];\n        sz=new int[n];c=n;\n        op=n;\n        for(int h=0;h<n;h++)\n        {\n            sz[h]=1;p[h]=h;\n            last[h]=h;\n        }\n    }\n    public int find(int x)\n    {\n        int y=x;\n        while(x!=p[x]) x=p[x];\n        while(y!=p[y])\n        {\n            int tem=p[y];\n            p[y]=x;y=tem;\n        }\n        return p[y];\n    }\n    public void union(int a,int b)\n    {\n        int x,y;\n        x=find(a);y=find(b);\n        if(x==y) return;\n        if(sz[x]>sz[y])\n        {\n            p[y] = x;\n            sz[x]+=sz[y];\n            last[x]=Math.max(last[x],last[y]);\n        }\n        else\n        {\n            p[x]=y;sz[y]+=sz[x];\n            last[y]=Math.max(last[y],last[x]);\n        }\n        c--;\n        \n    }}\n\n    static long pow(long x, long y, long p)\n      {\n        long res = 1; // Initialize result\n     \n        x = x % p; // Update x if it is more than or\n        // equal to p\n     \n        if (x == 0)\n          return 0l; // In case x is divisible by p;\n     \n        while (y > 0)\n        {\n     \n          // If y is odd, multiply x with result\n          if ((y & 1) != 0)\n            res = (res * x) % p;\n     \n          // y must be even now\n          y = y >> 1; // y = y/2\n          x = (x * x) % p;\n        }\n        return res;\n      }\n      static long gcd(long a, long b)\n        {\n          if (b == 0)\n            return a;\n          return gcd(b, a % b); \n        }\n        static int gcd(int a, int b,int o)\n        {\n          if (b == 0)\n            return a;\n          return gcd(b, a % b,o); \n        }\n\nGeometric median\n\npublic static double F(double[] x,double[] w)\n    {\n        double d1,d2;\n        double S=0.00;\n        for(double dp : w) S += dp;\n        int k = 0;\n        double sum = S - w[0]; // sum is the total weight of all `x[i] > x[k]`\n\n        while(sum > S/2)\n        {\n            ++k;\n            sum -= w[k];\n        }\n        d1=x[k];\n        return d1;\n        k = w.length-1;\n       sum = S - w[k]; // sum is the total weight of all `x[i] > x[k]`\n\n        while(sum > S/2)\n        {\n            --k;\n            sum -= w[k];\n        }\n        d2=x[k];\n        return new double[]{d1,d2};\n    }\n*/"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long compute(vector<int> pre, long long l, long long a, long long b) {\n  long long ans = (l / (a * b)) * ((long long)pre[a * b - 1]);\n  long long i = (l) % (a * b);\n  ans += (long long)pre[i];\n  return ans;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    vector<int> pre(a * b, 0);\n    if (a > b) swap(a, b);\n    for (int i = 0; i < a * b; i++) {\n      if ((i % b) % a != i % a) pre[i] = 1;\n    }\n    for (int i = 1; i <= a * b - 1; i++) pre[i] += pre[i - 1];\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      if (a == 1 && b == 1) {\n        cout << 0 << \" \";\n        continue;\n      }\n      cout << compute(pre, r, a, b) - compute(pre, l - 1, a, b) << \" \";\n    }\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\n\ndef solve(a, b, queries):\n    a, b = min(a, b), max(a, b)\n    period = a * b // int(math.gcd(a, b))\n    same, diff = b, period - b\n\n    def f(n):\n        parts = n // period\n        reminder = n % period\n        return parts * diff + max(0, reminder - same)\n\n    for left, right in queries:\n        yield f(right + 1) - f(left)\n\n\ndef main():\n    T = int(input())\n    for t in range(T):\n        a, b, q = map(int, input().split())\n        queries = []\n        for _ in range(q):\n            left, right = map(int, input().split())\n            queries.append((left, right))\n\n        print(' '.join(map(str, solve(a, b, queries))))\n\n\nif __name__ == '__main__':\n    main()\n    # a, b = 3, 9\n    # for i in range(100):\n    #     x = (i % a) % b\n    #     y = (i % b) % a\n    #     print(f'{\"E\" if x == y else \"NE\"} {i}: {x} VS {y}')\n"
        },
        {
            "language": 3,
            "solution": "cases = int(input())\n\nfor t in range(cases):\n    a, b, q = map(int, input().split())\n    l = [0]*(a*b)\n    for i in range(1, a*b):\n        l[i] = l[i-1] + ((i%a)%b != (i%b)%a)\n    r = []\n    for _ in range(q):\n        li, ri = map(int, input().split())\n        s = ri//(a*b)*l[-1] + l[ri%(a*b)]\n        s -= (li-1)//(a*b)*l[-1] + l[(li-1)%(a*b)]\n        r.append(s)\n    print(*r)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    int r1 = a * b;\n    int c[r1];\n    c[0] = 0;\n    for (int j = 1; j < r1; j++) {\n      if (((j % a) % b) != ((j % b) % a)) {\n        c[j] = c[j - 1] + 1;\n      } else\n        c[j] = c[j - 1];\n    }\n    for (int j = 0; j < q; j++) {\n      long long int l, r;\n      cin >> l >> r;\n      long long int count = 0;\n      long long int x = (l - 1) / r1;\n      long long int y = (l - 1) % r1;\n      long long int x1 = r / r1;\n      long long int y1 = r % r1;\n      long long int z = (x * c[r1 - 1]) + c[y];\n      long long int z1 = (x1 * c[r1 - 1]) + c[y1];\n      count = z1 - z;\n      cout << count << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"no-stack-protector\")\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing ull = unsigned long long;\nusing str = string;\nusing pll = pair<ll, ll>;\nconst ll INF = 0x7fffffffffffffffLL;\nconst ll BASE = 1000000007LL;\ntemplate <class T>\nT MAX() {\n  return std::numeric_limits<T>::max();\n}\ntemplate <class T>\nT MIN() {\n  return std::numeric_limits<T>::min();\n}\ntemplate <class T>\nvoid chMax(T &a, T b) {\n  if (a < b) a = b;\n}\ntemplate <class T>\nvoid chMin(T &a, T b) {\n  if (b < a) a = b;\n}\ninline ll divUp(ll a, ll b) { return (a + b - 1) / b; }\nvoid solve() {\n  ll a, b, q;\n  cin >> a >> b >> q;\n  vector<ll> preSum(a * b);\n  for (ll i = 0; i < a * b; i++) {\n    if (i % a % b != i % b % a) preSum[i]++;\n  }\n  for (ll i = 0; i < preSum.size() - 1; i++) {\n    preSum[i + 1] += preSum[i];\n  }\n  auto ask = [&](ll v) {\n    return (v / preSum.size() * preSum.back()) + preSum[v % preSum.size()];\n  };\n  while (q--) {\n    ll l, r;\n    cin >> l >> r;\n    cout << ask(r) - ask(l - 1) << \"\\n\";\n  }\n}\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  cout << setprecision(10) << fixed;\n  ll t;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nfor _ in range(int(input())):\n  a,b,q=[int(i) for i in input().split()]\n  a,b=min(a,b),max(a,b)\n  lcm=(a*b//math.gcd(a,b))\n  s=lcm-b\n  for Q in range(q):\n    l,r=[int(i) for i in input().split()]\n    if r<b or b%a==0:\n      print(0,end=' ')\n    else:\n      ans=s*(r//lcm-l//lcm)\n      r=r%lcm\n      l=l%lcm\n      ans+=max(0,r+1-b)-max(0,l-b)\n      print(ans,end=' ')\n  print()\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b): \n    if a == 0: \n        return b \n    return gcd(b % a, a) \n  \n# Function to return LCM of two numbers \ndef lcm(a,b): \n    return (a*b) // gcd(a,b)\n\n\ndef solve(m,l,c):\n\tif l==0:\n\t\treturn 0\n\tr = l%m\n\treturn (l//m)*c[m] + c[r]\n\n\nt = int(input().strip())\nfor __ in range(t):\n\ta,b,q = [int(x) for x in input().strip().split()]\n\tm = lcm(a,b)\n\tc = [0]\n\tfor i in range(1,m+1):\n\t\tif (i%a)%b!=(i%b)%a:\n\t\t\tc.append(c[len(c)-1]+1)\n\t\telse:\n\t\t\tc.append(c[len(c)-1])\n\t# print(c)\n\tans = []\n\tfor _ in range(q):\n\t\tl,r = [int(x) for x in input().strip().split()]\n\t\tans.append(str(int(solve(m,r,c)-solve(m,l-1,c))))\n\tprint(\" \".join(ans))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfrom math import gcd\ndef solve(x,m,lcm):\n    ans = x//lcm*(lcm-m)+max(0,x%lcm-m+1)\n    return ans\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    lcm = a*b//gcd(a,b)\n    m = max(a,b)\n    ans = []\n    for i in range(q):\n        l, r = map(int, input().split())\n        ans.append(solve(r,m,lcm)-solve(l-1,m,lcm))\n    print(*ans, sep=' ')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class C {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tint T = Integer.parseInt(in.readLine());\n\t\tfor (int i = 0; i < T; i++) {\n\t\t\tStringTokenizer token = new StringTokenizer(in.readLine());\n\t\t\tint A = Integer.parseInt(token.nextToken());\n\t\t\tint B = Integer.parseInt(token.nextToken());\n\t\t\tint q = Integer.parseInt(token.nextToken());\n\t\t\tboolean[] mod = new boolean[A * B + 1];\n\t\t\tfor (int a = 1; a <= A * B; a++) {\n\t\t\t\tmod[a] = (a % A) % B != (a % B) % A;\n\t\t\t}\n\t\t\tint[] pre = new int[A * B + 1];\n\t\t\tfor (int a = 1; a <= A * B; a++)\n\t\t\t\tpre[a] = pre[a - 1] + (mod[a] ? 1 : 0);\n\t\t\tfor (int a = 0; a < q; a++) {\n\t\t\t\ttoken = new StringTokenizer(in.readLine());\n\t\t\t\tlong l = Long.parseLong(token.nextToken());\n\t\t\t\tlong r = Long.parseLong(token.nextToken());\n\t\t\t\tl--;\n\t\t\t\tlong c1 = pre[(int)(l % (A * B))] + (long) pre[A * B] * (l / (A * B));\n\t\t\t\tlong c2 = pre[(int)(r % (A * B))] + (long) pre[A * B] * (r / (A * B));\n\t\t\t\tSystem.out.print(c2 - c1 + (a == q - 1 ? \"\\n\" : \" \"));\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nfrom sys import stdin\ninput=stdin.readline\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    ans=[]\n    c=max(a,b)\n    d=min(a,b)\n    x=c*d//gcd(c,d)\n    m=0\n    z=[0]\n    for i in range(1,x+1):\n        if (i%c)%d!=(i%d)%c:\n            m+=1\n        z.append(m)\n    for i in range(q):\n        l,r=map(int,input().split())\n        p=-z[l%x-1]\n        p+=z[r%x]\n        r-=r%x\n        p+=((r-l)//x+1)*m\n        ans.append(p)\n    print(*ans)\n        "
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n# region fastio\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ------------------------------\n\nfrom math import factorial\nfrom collections import Counter, defaultdict\nfrom heapq import heapify, heappop, heappush\n\ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\ndef comb(n, m): return factorial(n) / (factorial(m) * factorial(n - m)) if n >= m else 0\ndef perm(n, m): return factorial(n) // (factorial(n - m)) if n >= m else 0\ndef mdis(x1, y1, x2, y2): return abs(x1 - x2) + abs(y1 - y2)\nmod = 1000000007\nINF = float('inf')\n\n# ------------------------------\n\n\ndef main():\n    for _ in range(N()):\n        a, b, q = RL()\n        rec = []\n        def c(num, a, b):\n            return (num%a%b, num%b%a)\n\n        i = 0\n        while i<a*b:\n            now = c(i, a, b)\n            rec.append(now)\n            i+=1\n\n        sm = [0]\n        als = 0\n        for a, b in rec:\n            if a!=b:\n                als+=1\n                sm.append(sm[-1]+1)\n            else:\n                sm.append(sm[-1])\n        sm = sm[1:]\n        ret = []\n\n        def c(x):\n            le = len(sm)\n            s = sm[-1]\n            return x//le*s+sm[x%le]\n        # print(sm)\n        for _ in range(q):\n            l, r = RL()\n            ret.append(c(r)-c(l-1))\n        print(\" \".join([str(i) for i in ret]))\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a,b,q=map(int, input().split())\n    vals=[0]\n    curr=0\n    for i in range(1,a*b+1):\n        if (i%a)%b!=(i%b)%a:\n            curr+=1\n        vals.append(curr)\n    for i in range(q):\n        l,r=map(int,input().split())\n        f=0\n        s=0\n        f+=curr*((l-1)//(a*b))\n        l-=1\n        l%=(a*b)\n        #print(l)\n        f+=vals[l]\n        s += curr * ((r) // (a * b))\n        r %= (a * b)\n        s += vals[r]\n        print(s-f,end=' ')\n    print('')\n\n\n"
        },
        {
            "language": 3,
            "solution": "import math\n\n\ndef not_equal(a, b, lcm, i):\n    if i <= b-1:\n        return 0\n\n    # The numbers up to the minimum always satisfy the condition\n    out = i - b + 1\n\n    # Subtract the terms k*l + c, k \\in N, c < b\n    n_seqs = (i - b) // lcm\n    out -= n_seqs * b\n\n    # Add the terms that you may have missed when the modulus is close\n    mod = i % lcm\n    if mod < b:\n        out -= (mod+1)\n\n    return out\n\n\ndef naive_not_equal(a, b, val):\n    count = 0\n    for i in range(val+1):\n        if (i % a) % b != (i % b) % a:\n            count += 1\n    return count\n\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n\n    # Put a and b in order (a < b)\n    if a > b:\n        a, b = b, a\n\n    lcm = a * b // math.gcd(a, b)\n\n    out = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        lhs = not_equal(a, b, lcm, l-1)\n        rhs = not_equal(a, b, lcm, r)\n        ans = rhs - lhs\n        out.append(str(ans))\n\n    print(' '.join(out))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long div_up(long long x, long long y) {\n  if (x == 0) return 0;\n  return (x - 1) / y + 1;\n}\nbool is_prime(long long a) {\n  for (long long i = 2; i <= sqrt(a); i++)\n    if (a % i == 0) return false;\n  return true;\n}\nbool borders(int x, int y, int n, int m) {\n  return x >= 0 && y >= 0 && x < n && y < m;\n}\nlong long aba(vector<int> f, long long pos, long long n) {\n  return f[n - 1] * (pos / n) + f[pos % n];\n}\nvoid solve() {\n  long long a, b, q, l, r;\n  cin >> a >> b >> q;\n  vector<int> f(a * b);\n  for (int i = 1; i < a * b; i++) {\n    f[i] = f[i - 1];\n    if ((i % a) % b != (i % b) % a) f[i]++;\n  }\n  vector<long long> ans;\n  while (q--) {\n    cin >> l >> r;\n    cout << (aba(f, r, a * b) - aba(f, l - 1, a * b)) << \" \";\n  }\n  cout << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie();\n  cout.tie();\n  int T;\n  cin >> T;\n  while (T--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nt = int(input())\nfor q in range(t):\n    a, b, q = map(int,input().strip().split())\n    ans = []\n    grid = []\n    for i in range(a*b+1):\n        if i == 0:\n            grid.append(0)\n        else:\n            grid.append(grid[i-1] + ((i%a)%b != (i%b)%a))\n    for i in range(q):\n        l, r = map(int,input().strip().split())\n        l -= 1\n        ans1 = grid[a*b]*(r//(a*b)) + grid[r%(a*b)]\n        ans2 = grid[a*b]*(l//(a*b)) + grid[l%(a*b)]\n        ans.append(ans1-ans2)\n    print(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int A[40005];\nlong long int _gcd(long long int a, long long int b) {\n  return b == 0 ? a : _gcd(b, a % b);\n}\nlong long int _lcm(long long int a, long long int b) {\n  return a * b / _gcd(a, b);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cout.tie(0);\n  cin.tie(0);\n  long long int i, j, k, x, y, z, a, b, l, r, q, t;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    long long int n = _lcm(a, b);\n    for (i = 1; i <= n; ++i) {\n      x = (i % a) % b;\n      y = (i % b) % a;\n      A[i] = x != y;\n      A[i] += A[i - 1];\n    }\n    while (q--) {\n      cin >> l >> r;\n      x = r % n;\n      y = r / n;\n      a = y * A[n] + A[x];\n      x = (l - 1) % n;\n      y = (l - 1) / n;\n      b = y * A[n] + A[x];\n      cout << a - b << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    p = a * b\n    ps = []\n    rs = 0\n    for i in range(p):\n        if i % a % b != i % b % a:\n            rs += 1\n        ps.append(rs)\n    ans = []\n    for qqq in range(q):\n        l, r = map(int, input().split())\n        l -= 1\n        v1 = ps[-1] * (l//p) + ps[l%p]\n        v2 = ps[-1] * (r // p) + ps[r % p]\n        ans.append(v2-v1)\n    print(*ans)\n"
        },
        {
            "language": 4,
            "solution": "//package extras;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class edu86c {\n\n    static final long mod = (long) 1e9 + 7l;\n    static long lc;\n\n    private static void solve(int t) {\n        long a = fs.nextLong(), b = fs.nextLong(), q = fs.nextLong();\n        if (a > b) a = a ^ b ^ (b = a);\n        lc = (a * b) / gcd(a, b);\n        while (q-- > 0) {\n            long l = fs.nextLong(), r = fs.nextLong();\n            out.print(r - l + 1 - (get(r, a, b) - get(l - 1, a, b)));\n            out.print(\" \");\n        }\n        out.println();\n    }\n\n    static long get(long n, long a, long b) {\n        long cnt = (n / lc);\n        return (cnt * b + Math.min(b, n + 1 - cnt * lc));\n    }\n\n    public static void main(String[] args) {\n        fs = new FastScanner();\n        out = new PrintWriter(System.out);\n        long s = System.currentTimeMillis();\n        int t = fs.nextInt();\n        for (int i = 1; i <= t; i++) solve(t);\n        out.close();\n//        System.err.println( System.currentTimeMillis() - s + \"ms\" );\n    }\n\n    static boolean DEBUG = true;\n    static PrintWriter out;\n    static FastScanner fs;\n\n    static void trace(Object... o) {\n        if (!DEBUG) return;\n        System.err.println(Arrays.deepToString(o));\n    }\n\n    static void pl(Object o) {\n        out.println(o);\n    }\n\n    static void p(Object o) {\n        out.print(o);\n    }\n\n    static long gcd(long a, long b) {\n        return (b == 0) ? a : gcd(b, a % b);\n    }\n\n    static int gcd(int a, int b) {\n        return (b == 0) ? a : gcd(b, a % b);\n    }\n\n    static void sieveOfEratosthenes(int n, int factors[]) {\n        factors[1] = 1;\n        for (int p = 2; p * p <= n; p++) {\n            if (factors[p] == 0) {\n                factors[p] = p;\n                for (int i = p * p; i <= n; i += p)\n                    factors[i] = p;\n            }\n        }\n    }\n\n    static long mul(long a, long b) {\n        return a * b % mod;\n    }\n\n    static long fact(int x) {\n        long ans = 1;\n        for (int i = 2; i <= x; i++) ans = mul(ans, i);\n        return ans;\n    }\n\n    static long fastPow(long base, long exp) {\n        if (exp == 0) return 1;\n        long half = fastPow(base, exp / 2);\n        if (exp % 2 == 0) return mul(half, half);\n        return mul(half, mul(half, base));\n    }\n\n    static long modInv(long x) {\n        return fastPow(x, mod - 2);\n    }\n\n    static long nCk(int n, int k) {\n        return mul(fact(n), mul(modInv(fact(k)), modInv(fact(n - k))));\n    }\n\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        public String next() {\n            while (!st.hasMoreElements())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A\n{\n    static int a, b, q;\n    static long l, r;\n    static long[] cnt;\n    static char[] s;\n    public static void main(String[] args) throws IOException\n    {\n        Flash f = new Flash();\n        int T = f.ni();\n        for(int tc = 1; tc <= T; tc++){\n            a = f.ni(); b = f.ni(); q = f.ni();\n            calc();\n            long[] ans = new long[q];\n            for(int i = 0; i < q; i++){\n                l = f.nl(); r = f.nl();\n                ans[i] = fn();\n            }\n            \n            print(ans);\n        }\n    }\n    \n    static void calc(){\n        int lcm = (a*b)/gcd(a, b);\n        cnt = new long[lcm+1];\n        cnt[0] = 0;\n        for(int i = 1; i <= lcm; i++){\n            cnt[i] = cnt[i-1];\n            if((i%a)%b != (i%b)%a) cnt[i]++;\n        }\n    }\n    \n    //any common multiple will never satisfy the given equation.\n    //very obvious common multiple is a*b\n    //let x = a*b\n    //(x%a)%b = (x%b)%a = 0\n    //but (x%a)%b should be not equal to (x%b)%a\n    //a and b are very small\n    //so we can simply find the cnt for [0, lcm] and find cnt for every range till R and \n    //similarly find for (L-1), then subtract ans(L-1) from ans(R)\n    static long fn()\n    {\n        int lcm = (a*b)/gcd(a, b);\n        \n        long ans = 0;\n        long seg = r/lcm;\n        long rem = r%lcm;\n        ans += cnt[lcm]*seg + cnt[(int)rem];\n        \n        seg = (l-1)/lcm;\n        rem = (l-1)%lcm;\n        ans -= cnt[lcm]*seg + cnt[(int)rem];\n        \n        return ans;\n    }\n    \n    static int gcd(int a, int b){\n        if(a == 0) return b;\n        if(b == 0) return a;\n        \n        if(a <= b) return gcd(b%a, a);\n        return gcd(a%b, b);\n    }\n    \n    static void sort(int[] a){\n        List<Integer> A = new ArrayList<>();\n        for(int i : a) A.add(i);\n        Collections.sort(A);\n        for(int i = 0; i < A.size(); i++) a[i] = A.get(i);\n    }\n    \n    static int swap(int itself, int dummy){\n        return itself;\n    }\n    \n    static void sop(Object o){ System.out.println(o); }\n    \n    static void print(long[] a){\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length; i++) sb.append(a[i] + \" \");\n        System.out.println(sb);\n    }\n    \n    static class Flash\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n        \n        String next(){\n            while(!st.hasMoreTokens()){\n                try{\n                    st = new StringTokenizer(br.readLine());\n                }catch(IOException e){\n                    e.printStackTrace();\n                }\n            }\n            \n            return st.nextToken();\n        }\n        \n        String ns(){\n            String s = new String();\n            try{\n                s = br.readLine().trim();\n            }catch(IOException e){\n                e.printStackTrace();\n            }\n            \n            return s;\n        }\n        \n        int ni(){\n            return Integer.parseInt(next());\n        }\n        \n        int[] arr(int n){\n            int[] a = new int[n];\n            for(int i = 0; i < n; i++) a[i] = ni();\n            return a;\n        }\n\n        long nl(){\n            return Long.parseLong(next());\n        }\n        \n        double nd(){\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Sol {\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint a = sc.nextInt();\n\t\twhile (a-- > 0) {\n\t\t\tint x = sc.nextInt();\n\t\t\tint y = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\tint max = x*y;\n\t\t\tint arr[] = new int[max+1];\n\t\t\tfor (int i = 1; i < max+1; i++) {\n\t\t\t\tif (((i % x) % y) != ((i % y) % x)) {\n\t\t\t\t\tarr[i]=arr[i-1]+1;\n\t\t\t\t}else{\n\t\t\t\t\tarr[i]=arr[i-1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tlong sol=0;\n\t\t\tfor (int i = 0; i < q; i++) {\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong k = sc.nextLong();\n\t\t\t\tlong ans = k/max;\n\t\t\t\tsol=ans*arr[max];\n\t\t\t\tans=k%max;\n\t\t\t\tsol+=arr[(int)ans];\n\t\t\t\tl--;\n\t\t\t\tans = l/max;\n\t\t\t\tsol-=ans*arr[max];\n\t\t\t\tans=l%max;\n\t\t\t\tsol-=arr[(int)ans];\n\t\t\t\tSystem.out.print(sol+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n\tprivate static long lcm(long l, long m) {\n\t\tlong gcd = Gcd(l, m);\n\t\treturn (l * m) / gcd;\n\t}\n\n\tprivate static long Gcd(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\telse\n\t\t\treturn Gcd(b, a % b);\n\n\t}\n\n\tpublic static int[] readInt(int n, Scanner sc) {\n\t\tint arr[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\treturn arr;\n\t}\n\n\tpublic static long[] readLong(int n, Scanner sc) {\n\t\tlong arr[] = new long[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\treturn arr;\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "from fractions import gcd\nget=lambda x,lcm,b:x-b*(x//lcm)-min(b,x%lcm+1)\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    lcm=a*b//gcd(a,b)\n    for i in range(q):\n        l,r=map(int,input().split())\n        print(get(r,lcm,max(a,b))-get(l-1,lcm,max(a,b)))"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b):\n    if b==0:\n        return a\n    return gcd(b,a%b)\nn = int(input())\nfor k in range(n):\n    a,b, q = map(int, input().split())\n    m = a*b//gcd(a,b)\n    f = [0]*m\n    for i in range(1,m):\n        f[i] = f[i-1]\n        if i%a%b != i%b%a:\n            f[i] += 1\n    res_list = []\n    for _ in range(q):\n        l,r = map(int, input().split())\n        l -= 1\n\n        res = (r//m)*f[m-1] + f[r%m]\n        res -= (l//m)*f[m-1] + f[l%m]\n        res_list.append(res)\n    print(\" \".join(map(str,res_list)))"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.Random;\nimport java.util.Scanner;\n\npublic class ProblemC {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tScanner s = new Scanner(System.in);\n\t\tint t = s.nextInt();\n\t\t\n\t\tfor(int a=0;a<t;a++) {\n\t\t\tint x = s.nextInt();\n\t\t\tint y = s.nextInt();\n\t\t\tint q = s.nextInt();\n\t\t\t\n\t\t\tint lc = getl(x, y);\n\t\t\tint count = 0;\n\t\t\tint[] pre = new int[lc + 1];\n\t\t\tint[] suf = new int[lc + 1];\n\t\t\tfor(int i=1;i<=lc;i++) {\n\t\t\t\tif((i%x)%y != (i%y)%x)\n\t\t\t\t\tcount++;\n\t\t\t\t\n\t\t\t\tpre[i] = count;\n\t\t\t}\n\t\t\tint cc = 0;\n\t\t\tfor(int i=lc;i>=1;i--) {\n\t\t\t\tif((i%x)%y != (i%y)%x)\n\t\t\t\t\tcc++;\n\t\t\t\t\n\t\t\t\tsuf[lc - i] = cc;\n\t\t\t}\n\t\t\t//System.out.println(count + \" \"+lc);\n\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\tlong l = s.nextLong();\n\t\t\t\tlong r = s.nextLong();\n\t\t\t\t\n\t\t\t\tlong ceil = l/lc;\n\t\t\t\tif(l%lc !=0)\n\t\t\t\t\tceil++;\n\t\t\t\tlong low = (long)ceil * lc;\n\t\t\t\t\n\t\t\t\tlong high = (long)(r/lc) * lc;\n\t\t\t\n\t\t\t\t//System.out.println(low+\"- \"+high);\n\t\t\t\tlong div = (high - low)/lc + 1;\n\t\t\t\t\n\t\t\t\tif(div == 0) {\n\t\t\t\t\tint c = pre[(int)(r%lc)] - pre[(int)((l-1)%lc)];\n\t\t\t\t\t\n\t\t\t\t\t//System.out.println(\"hey\");\n\t\t\t\t\tout.print(c+\" \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse {\n\t\t\t\t\tint c = suf[(int)(low - l)] + pre[(int)(r - high)];\n\t\t\t\t\t\n\t\t\t\t\tout.print(((div-1) * count + c)+\" \");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t\t\n\t\tout.flush();\n\t}\n\t\n\tpublic static int getl(int x, int y) {\n\t\treturn (x * y)/geth(Math.max(x,y), Math.min(x, y));\n\t}\n\t\n\tpublic static int geth(int x, int y) {\n\t\tif(y == 0)\n\t\t\treturn x;\n\t\telse\n\t\t\treturn geth(y, x%y);\n\t}\n\n\t\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nfor nt in range(int(input())):\n\ta,b,q=map(int,input().split())\n\tlcm = (a*b)//math.gcd(a,b)\n\tfor i in range(q):\n\t\tl,r=map(int,input().split())\n\t\tif b%a==0 or a%b==0:\n\t\t\tprint (0,end=\" \")\n\t\t\tcontinue\n\t\tans=r-l+1\n\t\tm=max(a,b)\n\t\tx=l//lcm+1\n\t\ty=r//lcm\n\t\tans-=max(0,y-x+1)*m\n\t\ti=l\n\t\t# print (ans,y,x)\n\t\twhile ((i%a)%b)==((i%b)%a) and i<=r:\n\t\t\tans-=1\n\t\t\ti+=1\n\t\tj=r+1\n\t\tif x<=y and j%lcm!=0:\n\t\t\twhile ((j%a)%b)==((j%b)%a):\n\t\t\t\tans+=1\n\t\t\t\tj+=1\n\t\tprint (ans,end=\" \")\n\tprint ()\n"
        },
        {
            "language": 3,
            "solution": "def compute_lcm(x, y):\n \n   # choose the greater number\n   if x > y:\n       greater = x\n   else:\n       greater = y\n \n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n \n   return lcm\n\ndef diffsum(x, r):\n    return max(0, x-r+1)\n\nt = int(input())\nfor tt in range(t):\n    a, b, q = map(int, input().split())\n    a, b = min(a, b), max(a, b)\n\n    lcm = compute_lcm(a, b)\n    lcmsum = lcm-b\n \n    sol = []\n    for qq in range(q):\n        l, r = map(int, input().split())\n        lm = (l-1) % lcm\n        sol.append(-diffsum(lm, b))\n \n        rm = (r % lcm)\n        sol[-1] -= lcmsum - diffsum(rm, b)#sum(c[-rm:])\n \n        sol[-1] += (r+lcm-rm - l+lm+1)//lcm * lcmsum\n \n    print(' '.join(map(str, sol)))"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nlist_ = [0] * 200 * 200\n\ndef getSolve(list, n, target):\n\treturn list[n-1]*(target//n) + list[target % n]\n\nfor _ in range(num):\n\ta, b, q = [int(i) for i in input().split()]\n\tres = []\n\tfor i in range(1, a * b):\n\t\tlist_[i] = list_[i - 1]\n\t\tif i % a % b != i % b % a:\n\t\t\tlist_[i] += 1\n\n\tfor _ in range(q):\n\t\tl, r = [int(i) for i in input().split()]\n\t\tres.append(str(getSolve(list_, a*b, r) - getSolve(list_, a*b, l-1)))\n\tprint(\" \".join(res))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    a,b,q = map(int,input().split())\n    p = [0 for i in range(a*b)]\n    j = 1\n    for j in range(1,a*b):\n        p[j]=p[j-1]\n        if(((j%a)%b) != ((j%b)%a)):\n            p[j]=p[j]+1\n        j+=1\n    m=[]\n    for k in range(q):\n        l,r = map(int,input().split())\n        x = r//len(p)\n        y = (l-1)//len(p)\n        m.append(p[r%(len(p))] - p[(l-1)%(len(p))]+(x-y)*p[-1])\n    print(*m)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CYetAnotherCountingProblem solver = new CYetAnotherCountingProblem();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CYetAnotherCountingProblem {\n        public void solve(int testNumber, FastReader s, PrintWriter out) {\n            int t = s.nextInt();\n            while (t-- > 0) {\n                long a = s.nextLong();\n                long b = s.nextLong();\n                int q = s.nextInt();\n                long lcm = (a * b) / CYetAnotherCountingProblem.Maths.gcd(a, b);\n                long min = Math.min(a, b);\n                long max = Math.max(a, b);\n                a = min;\n                b = max;\n                while (q-- > 0) {\n                    long l = s.nextLong();\n                    long r = s.nextLong();\n\n//                if (lcm == b) {\n//                    out.print(0L + \" \");\n//                    continue;\n//                }\n\n                    if (r / lcm == l / lcm) {\n                        long ans = r % lcm;\n                        if (ans >= b) {\n                            ans = ans - b + 1L;\n                        } else {\n                            ans = 0;\n                        }\n\n                        if (l % lcm >= b) {\n                            ans -= (l % lcm - b);\n                        }\n\n                        out.print(ans + \" \");\n                        continue;\n                    }\n\n                    long ans = 0L;\n                    if (l % lcm < b) {\n                        l = (l / lcm) * lcm;\n                    } else {\n                        ans += lcm - ((l % lcm));\n                        l = (l / lcm + 1L) * lcm;\n                    }\n\n                    if (r % lcm >= b) {\n                        ans += (r % lcm) - b + 1L;\n                    }\n\n                    r = (r / lcm) * lcm;\n\n                    ans += (r / lcm - l / lcm) * (lcm - b);\n\n\n                    out.print(ans + \" \");\n                }\n                out.println();\n            }\n        }\n\n        private static class Maths {\n            private static long gcd(long a, long b) {\n                if (b == 0) {\n                    return a;\n                }\n\n                return gcd(b, a % b);\n            }\n\n        }\n\n    }\n\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private FastReader.SpaceCharFilter filter;\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import math\nt=int(input())\ndef check1(l,r,aa,bb):\n    if (l<=aa and aa<=r and r<=bb) or (aa<=l and l<=bb and bb<=r):\n        return True\n    return False\nfor __ in range(t):\n    a,b,q=list(map(int,input().split()))\n    if a>b:\n        a,b=b,a\n    gap=b\n    inter=(a*b)//math.gcd(a,b)\n    #aaaa=[]\n    for _ in range(q):\n        l,r=list(map(int,input().split()))\n        \n        #inter*i   l   inter*i+1\n        idx1=l//inter\n        idx2=r//inter\n        #print(l,inter,idx1,idx2,\"here\")\n        #i1,f1=[inter*idx1,inter*idx1+b-1]\n        #i2,f2=[inter*idx2,inter*idx2+b-1]\n        if inter*idx1+b-1<l:\n            idx1+=1\n        #i1,f1=[inter*idx1,inter*idx1+b-1]\n        \n        #i2,f2=[inter*idx2,inter*idx2+b-1]\n        #print(idx1,idx2)\n        res=0\n        if idx2-idx1>6:\n            rng=[]\n            \n            #print(l,r,aa,bb,idx1)\n            while idx1>=0:\n                #print(idx1)\n                aa=inter*idx1\n                bb=inter*idx1+b-1\n                if check1(l,r,aa,bb):\n                    rng.append(idx1)\n                else:\n                    break\n                idx1+=1\n            \n            while idx2>=0:\n                aa=inter*idx2\n                bb=inter*idx2+b-1\n                if check1(l,r,aa,bb):\n                    rng.append(idx2)\n                else:\n                    break\n                idx2-=1\n            res=(b)*(idx2-idx1+1)\n            #print(len(rng),\"here\")\n            for idx in rng:\n                aa=inter*idx\n                bb=inter*idx+b-1\n                fl=0\n                if aa==0:\n                    fl=1\n                    aa+=1\n                \n                #print(aa,bb)\n                if l>=aa and bb>=r:\n                    res+=r-l+1\n                elif l<=aa and bb<=r:\n                    res+=b-fl\n                elif aa<=l and bb>=l:\n                    res+=(bb-l+1)\n                elif aa<=r and bb>=r:\n                    res+=(r-aa+1)\n\n\n            print(r-l+1-res,end=\" \")\n            continue\n\n        for idx in range(idx1,idx2+1):\n            aa=inter*idx\n            bb=inter*idx+b-1\n            fl=0\n            if aa==0:\n                fl=1\n                aa+=1\n            \n            #print(aa,bb)\n            if l>=aa and bb>=r:\n                res+=r-l+1\n            elif l<=aa and bb<=r:\n                res+=b-fl\n            elif aa<=l and bb>=l:\n                res+=(bb-l+1)\n            elif aa<=r and bb>=r:\n                res+=(r-aa+1)\n        print(r-l+1-res,end=\" \")\n    #print(*aaaa)\n    print()\n\n\"\"\"\n2 3 4 5 6 7\n\n\n\"\"\""
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef lcm(x,y):\n  return x*y/(gcd(x,y))\n\nt=int(input())\nfor _ in range(t):\n  a,b,q=map(int,(input().split()))\n  x=int(lcm(a,b))\n  for i in range(q):\n    count=0\n    \n    l,r=map(int,(input().split()))\n    lp=(l//(x)+1)*x\n    rp=(r//(x))*x\n    count+=((rp-lp)//x+1)*max(a,b)\n    if l%(x)<max(a,b):\n      count+=max(a,b)-l%(x)\n    if r%(x)<max(a,b):\n      count-=max(a,b)-r%(x)-1\n    print(int(r-l-count+1),end=\" \")\n    #print(int(count))\n  print()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class YetAnotherCountingEfficientEduRound86C{\n\tstatic class FastReader {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        private FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n\t int[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t}\n\n\tint[] nextIntArrayOne(int n) {\n\t\t\t\tint[] a = new int[n+1];\n\t\t\t\tfor (int i = 0; i < n+1; i++)\n\t\t\t\t\ta[i] = nextInt();\n\t\t\t\treturn a;\n\t}\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n\tpublic static void main(String[] args) {\n\t\tFastReader s =new FastReader();\n\t\tint t = s.nextInt();\n\t\tStringBuilder str = new StringBuilder();\n\t\twhile(t-- >0) {\n\t\t\tlong a = s.nextLong();\n\t\t\tlong b = s.nextLong();\n\t\t\tint q = s.nextInt();\n\t\t\tlong g = gcd(a,b);\n\t\t\tlong l = (a*b)/g;\n\t\t\t//System.out.println(g+\" \"+l);\n\t\t\tlong poss =l-Math.max(a, b);\n\t\t\tlong notposs = l-poss; \n\t\t\t//System.out.println(poss+\" \"+notposs);\n\t\t\twhile(q-- >0) {\n\t\t\t\tlong  left= s.nextLong();\n\t\t\t\tlong right = s.nextLong();\n\t\t\t\tif(l==b||right<b) {\n\t\t\t\t\tstr.append(0).append(\" \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t    long ans = range(right,l,poss,notposs);\n\t\t\t\tans-=range(left-1, l, poss, notposs);\n\t\t\t    str.append(ans).append(\" \");\n\t\t\t\t}\n\t\t\tstr.append(\"\\n\");\n\t\t\t\n\t\t}\n\t\tSystem.out.println(str);\n\t}\n\n\t\n\t\n\t\n\tprivate static long range(long right, long l,long poss, long notposs) {\n\t\tlong q = right/l;\n\t\tlong r = right%l;\n\t\tlong ans  = 0;\n\t\tif(q!=0) {\n\t\t\tans = q*poss;\n\t\t\t}\n\t\tif(r!=0) {\n\t\t\tans += Math.max(r-notposs+1,0);\n\t\t}\n\t\t//System.out.println(ans);\n\t\treturn ans;\n\t}\n\n\n\n\tprivate static long gcd(long a, long b) {\n\t\tif(b==0) return a;\n\t\treturn gcd(b,a%b);\n\t}\n\n\t\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import factorial as fac\nfrom collections import defaultdict\nfrom copy import deepcopy\nimport sys, math\nf = None\ntry:\n\tf = open('q1.input', 'r')\nexcept IOError:\n\tf = sys.stdin\nsys.setrecursionlimit(10**6)\n\n\ndef print_case_iterable(case_num, iterable):\n\tprint(\"Case #{}: {}\".format(case_num,\" \".join(map(str,iterable))))\n\ndef print_case_number(case_num, iterable):\n\tprint(\"Case #{}: {}\".format(case_num,iterable))\n\ndef print_iterable(A):\n\tprint (' '.join(A))\n\ndef read_int():\n\treturn int(f.readline())\ndef read_int_array():\n\treturn [int(x) for x in f.readline().strip().split(\" \")]\ndef rns():\n\ta =  [x for x in f.readline().split(\" \")]\n\treturn int(a[0]), a[1].strip()\ndef read_string():\n\treturn list(f.readline().strip())\n\nNUMBER = 10**9 + 7\n# NUMBER = 998244353\ndef factorial(n) : \n\tM = NUMBER\n\tf = 1\n  \n\tfor i in range(1, n + 1):  \n\t\tf = (f * i) % M # Now f never can  \n\t\t\t\t\t\t# exceed 10^9+7  \n\treturn f\ndef mult(a,b):\n\treturn (a * b) % NUMBER\n\ndef minus(a , b):\n\treturn (a - b) % NUMBER\n\ndef plus(a , b):\n\treturn (a + b) % NUMBER\n\ndef egcd(a, b):\n\tif a == 0:\n\t\treturn (b, 0, 1)\n\telse:\n\t\tg, y, x = egcd(b % a, a)\n\t\treturn (g, x - (b // a) * y, y)\n\ndef modinv(a):\n\tm = NUMBER\n\tg, x, y = egcd(a, m)\n\tif g != 1:\n\t\traise Exception('modular inverse does not exist')\n\telse:\n\t\treturn x % m\nfrom collections import deque, defaultdict \nimport heapq\n\ndef bfs(V, E):\n\ts = set()\n\tprint('\\n'.join(map(str,E.items())))\n\tcnt = 0 \n\tfor v in V:\n\t\tif v in s:\n\t\t\tcontinue\n\t\tq = deque([])\n\t\ts.add(v)\n\t\tq.append(v)\n\t\twhile len(q) > 0:\n\t\t\tx = q.popleft()\n\t\t\tfor e in E[x]:\n\t\t\t\tif e not in s:\n\t\t\t\t\ts.add(e)\n\t\t\t\t\tq.append(e)\n\t\t\tprint(q)\n\t\tcnt += 1\n\treturn cnt\n\t\t\nfrom typing import List, Tuple\n\ndef regular_bs(L,x,l=None,r=None):\n\tl = 0 if l == None else l\n\tr = len(L) if r == None else r\n\twhile (r-l) > 1:\n\t\tm = (r+l)//2\n\t\tl = m if L[m] <= x else l\n\t\tr = m if L[m] > x else r\n\tcnt = 0\n\treturn l\n\ndef binary_count_smaller(L, x):\n\tl = 0\n\tif x < L[0]:\n\t\treturn 0\n\tr = len(L)\n\twhile r - l > 1:\n\t\tmid = (l+r)//2\n\t\tif L[mid] < x:\n\t\t\tl = mid\n\t\telse:\n\t\t\tr = mid\n\treturn l + 1\ndef binary_count_larger(L, x):\n\tl = 0\n\tif x > L[-1]:\n\t\treturn 0\n\tr = len(L)\n\twhile r - l > 1:\n\t\tmid = (l+r)//2\n\t\tif L[mid] <= x:\n\t\t\tl = mid\n\t\telse:\n\t\t\tr = mid\n\treturn len(L) - (r-1)\n\nfrom itertools import product\n\ndef preprocess(A):\n\tdp = [0]\n\tfor x in A:\n\t\tdp.append(dp[-1] + (1 if not x else 0))\n\treturn dp\ndef solution(a,b,Q,q):\n\tres = []\n\tA = []\n\tm = a*b\n\tfor i in range(m):\n\t\tA.append((i % a) %b == (i % b) %a)\n\tdp = preprocess(A)\n\tcnt = dp[m]\n\tfor l,r in Q:\n\t\ttotal_cnt = 0\n\t\tlength = (r-l+1)\n\t\ttotal_cnt += (length // m) * cnt\n\t\tremaining = length - m * (length//m) \n\t\tl_m = l % m\n\t\tfirst_part = m - (l_m)\n\t\t# print(length, total_cnt, remaining, l_m, first_part, dp)\n\t\t# print(dp)\n\t\t# print(A)\n\t\t# print(f'lm={l_m}')\n\t\tif remaining > first_part:\n\t\t\t# print('bla')\n\t\t\t# print(f'dp[m] - dp[l_m] = {dp[m] - dp[l_m]}')\n\t\t\t# print(f'dp[(remaining - first_part) + 1] = {dp[(remaining - first_part) + 1]}')\n\t\t\t# print(f'(remaining - first_part) + 1 = {(remaining - first_part) + 1}')\n\t\t\ttotal_cnt += dp[m] - dp[l_m]\n\t\t\ttotal_cnt += dp[(remaining - first_part)]\n\t\telse:\n\t\t\t# print('bla')\n\t\t\ttotal_cnt += dp[l_m+remaining] - dp[l_m]\n\t\tres.append(str(total_cnt))\n\treturn ' '.join(res)\n\t\t# with dp, calculate from l_m+1 to end, and then from start until remaining\n\n\n\n\n\t\n\n\n\t\n\n\t\n\ndef main():\n\tT = read_int()\n\tfor i in range(T):\n\t\ta,b,q=read_int_array()\n\t\tQ = []\n\t\tfor j in range(q):\n\t\t\tQ.append(read_int_array())\n\t\tprint(solution(a,b,Q,q))\n\n\nif __name__ == '__main__':\n\tmain()\n# print(regular_bs([1,2],1))"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n#input = sys.stdin.buffer.readline\ndef lcm(aa,bb):\n\tg = max(aa,bb)\n\n\twhile not ((g%aa==0) and (g%bb==0)):\n\t\tg+=1\n\treturn g\n\nfor _ in range(int(input())):\n\ta,b,q = map(int,input().split())\n\t\n\tLCM = lcm(a,b)\n\n\tgreater = max(a,b)\n\tfor _ in range(q):\n\t\tl,r = map(int,input().split())\n\n\n\t\ttimes = r//LCM - l//LCM + 1\n\n\t\tnewr = r//LCM*LCM+greater-1\n\t\tnewl = l//LCM*LCM\n\n\t\t#print(newl,newr,times)\n\t\t\n\t\ttotal = newr - newl + 1\n\t\t#print(total)\n\t\ttotal -= times*greater\n\t\t#print(total)\n\n\t\tif newr<=r:\n\t\t\ttotal += r-newr\n\t\t#print(total)\n\t\tif newl+greater<=l:\n\t\t\ttotal -= (l - (greater+newl)) \n\t\tprint(total,end=\" \")\n\t\t#print()\n\n\n\n\n\tprint()\n\n\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd, ceil, floor\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = list(map(int, input().split()))\n    if a > b:\n        a, b = b, a\n    lcm = (a * b) // gcd(a, b)\n    ans = []\n    for i in range(q):\n        l,r=list(map(int, input().split()))\n        x=r//lcm-l//lcm\n        res=x*b\n        if l%lcm<b:\n            res+=b-l%lcm\n        if r%lcm<b:\n            res-=(b-r%lcm-1)\n        ans.append(r-l+1-res)\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        solve(in, out);\n        out.close();\n    }\n\n    public static void solve(InputReader in, PrintWriter out) {\n        int t = in.nextInt();\n        while (t-- > 0) {\n            int a = in.nextInt();\n            int b = in.nextInt();\n            int q = in.nextInt();\n            long[] arr = new long[a*b];\n            arr[0] = 0;\n            for (int i = 1; i < a*b; ++i) {\n                if ((i % a)%b != (i%b)%a) {\n                    arr[i] = arr[i-1] + 1;\n                } else {\n                    arr[i] = arr[i-1];\n                }\n            }\n            int ab = a*b;\n            while (q-- > 0) {\n                long l = in.nextLong();\n                long r = in.nextLong();\n                long res = 0;\n                long lab = l / ab;\n                long rab = r / ab;\n                int leftIndex = Math.max(0, (int) (l % ab) - 1);\n                int rightIndex = (int) (r % ab);\n                if (lab == rab) {\n                    res = arr[rightIndex] - arr[leftIndex];\n                } else if (rab - lab == 1) {\n                    res = arr[ab-1] - arr[leftIndex] + arr[rightIndex];\n                } else {\n                    res = arr[ab-1] - arr[leftIndex] + arr[rightIndex];\n                    res += arr[ab-1] * (rab - lab - 1);\n                }\n                out.print(res);\n                out.print(' ');\n            }\n            out.println();\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public void skip() {\n            tokenizer = null;\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> v;\nint len;\nvoid build(int a, int b) {\n  len = a * b;\n  v.resize(len + 1);\n  for (int i = 1; i <= len; i++) {\n    v[i] = v[i - 1];\n    if ((i % a) % b != (i % b) % a) v[i]++;\n  }\n}\nlong long query(long long x) { return v[len] * 1LL * (x / len) + v[x % len]; }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    build(a, b);\n    while (q--) {\n      long long x, y;\n      cin >> x >> y;\n      cout << query(y) - query(x - 1) << \" \\n\"[q == 0];\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    private static int gcd(int a, int b) {\n        if(b == 0) {\n            return a;\n        }\n        return gcd(b, a%b);\n    }\n    public static void main(String[] args) throws IOException {\n        //Scanner f = new Scanner(new File(\"uva.in\"));\n        //Scanner f = new Scanner(System.in);\n        //BufferedReader f = new BufferedReader(new FileReader(\"uva.in\"));\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        int t = Integer.parseInt(f.readLine());\n        while(t-- > 0) {\n            StringTokenizer st = new StringTokenizer(f.readLine());\n            int a = Integer.parseInt(st.nextToken());\n            int b = Integer.parseInt(st.nextToken());\n            int[] mod1 = new int[a];\n            for(int i = 0; i < a; i++) {\n                mod1[i] = i%a%b;\n            }\n            int[] mod2 = new int[b];\n            for(int i = 0; i < b; i++) {\n                mod2[i] = i%b%a;\n            }\n            int lcm = a*b/gcd(a, b);\n            int[] mod = new int[lcm+1];\n            for(int i = 0; i < lcm; i++) {\n                mod[i+1] = mod1[i%a] == mod2[i%b] ? 0 : 1;\n            }\n            for(int i = 1; i <= lcm; i++) {\n                mod[i] += mod[i-1];\n            }\n            int q = Integer.parseInt(st.nextToken());\n            long[] res = new long[q];\n            for(int i = 0; i < q; i++) {\n                st = new StringTokenizer(f.readLine());\n                long l = Long.parseLong(st.nextToken());\n                long r = Long.parseLong(st.nextToken());\n                if(r-l < lcm) {\n                    int ll = (int) (l%lcm);\n                    int rr = (int) (r%lcm);\n                    if(ll > rr) {\n                        res[i] = mod[lcm]-mod[ll]+mod[rr+1];\n                    } else {\n                        res[i] = mod[rr+1]-mod[ll];\n                    }\n                    continue;\n                }\n                int temp1 = (int) (lcm-l%lcm);\n                int temp2 = (int) (r%lcm+1);\n                long ll = l+temp1;\n                long rr = r-temp2;\n                long ans = (rr-ll+1)/lcm*mod[lcm];\n                ans += mod[lcm]-mod[lcm-temp1];\n                ans += mod[temp2];\n                res[i] = ans;\n            }\n            out.print(res[0]);\n            for(int i = 1; i < q; i++) {\n                out.print(\" \" + res[i]);\n            }\n            out.println();\n        }\n        f.close();\n        out.close();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.nio.CharBuffer;\nimport java.util.NoSuchElementException;\n\npublic class P1342C {\n\n    public static void main(String[] args) {\n        SimpleScanner scanner = new SimpleScanner(System.in);\n        PrintWriter writer = new PrintWriter(System.out);\n\n        int caseNum = scanner.nextInt();\n        while (caseNum-- > 0) {\n            int a = scanner.nextInt();\n            int b = scanner.nextInt();\n            if (a > b) {\n                int t = a;\n                a = b;\n                b = t;\n            }\n            int q = scanner.nextInt();\n            int lcm = a / gcd(a, b) * b;\n            while (q-- > 0) {\n                long l = scanner.nextLong();\n                long r = scanner.nextLong();\n                long l0 = l / lcm + (l % lcm == 0 ? 0 : 1);\n                long r0 = r / lcm;\n                long ans = (r0 - l0) * (lcm - b);\n                if (r % lcm >= b)\n                    ans += r % lcm - b + 1;\n                ans += l0 * lcm - Math.max((l0 - 1) * lcm + b, l);\n                writer.print(ans + \" \");\n            }\n            writer.println();\n        }\n        writer.close();\n    }\n\n    private static int gcd(int a, int b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n    private static class SimpleScanner {\n\n        private static final int BUFFER_SIZE = 10240;\n\n        private Readable in;\n        private CharBuffer buffer;\n        private boolean eof;\n\n        private SimpleScanner(InputStream in) {\n            this.in = new BufferedReader(new InputStreamReader(in));\n            buffer = CharBuffer.allocate(BUFFER_SIZE);\n            buffer.limit(0);\n            eof = false;\n        }\n\n\n        private char read() {\n            if (!buffer.hasRemaining()) {\n                buffer.clear();\n                int n;\n                try {\n                    n = in.read(buffer);\n                } catch (IOException e) {\n                    n = -1;\n                }\n                if (n <= 0) {\n                    eof = true;\n                    return '\\0';\n                }\n                buffer.flip();\n            }\n            return buffer.get();\n        }\n\n        private void checkEof() {\n            if (eof)\n                throw new NoSuchElementException();\n        }\n\n        private char nextChar() {\n            checkEof();\n            char b = read();\n            checkEof();\n            return b;\n        }\n\n        private String next() {\n            char b;\n            do {\n                b = read();\n                checkEof();\n            } while (Character.isWhitespace(b));\n            StringBuilder sb = new StringBuilder();\n            do {\n                sb.append(b);\n                b = read();\n            } while (!eof && !Character.isWhitespace(b));\n            return sb.toString();\n        }\n\n        private int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        private long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        private double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\n    Auther: ghoshashis545 Ashis Ghosh\n    College: jalpaiguri Govt Enggineerin College\n    Date:26/04/2020\n\n'''\nfrom bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil,sqrt,log,gcd\ndef ii():return int(input())\ndef si():return input()\ndef mi():return map(int,input().split())\ndef li():return list(mi())\n\n\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\n\ndef powmod(a,b):\n    a%=mod\n    if(a==0):\n        return 0\n    res=1\n    while(b>0):\n        if(b&1):\n            res=(res*a)%mod\n        a=(a*a)%mod\n        b>>=1\n    return res\n\n\n\n\ndef func(x,y,c):\n    c1=x//y\n    ans=(c1*c)\n    x%=y\n    x+=1\n    if(x<c):\n        ans+=(x-c)\n    return ans\n    \n    \n    \ndef main():\n    \n    for _ in range(ii()):\n        a,b,q=mi()\n        if(b>a):\n            a,b=b,a\n        x=a\n        y=(a*b)//gcd(a,b)\n        for i in range(q):\n            l,r=mi()\n            l-=1\n            if(a==b or r<a):\n                print('0',end=\" \")\n                continue\n            ans=(r-l)-(func(r,y,x)-func(l,y,x))\n            print(ans,end=\" \")\n        print()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"-O3\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\nusing namespace std;\nint gcd(int a, int b) {\n  while (b) {\n    a %= b;\n    swap(a, b);\n  }\n  return a;\n}\nint lcm(int a, int b) { return a * b / gcd(a, b); }\ninline long long get(long long ind, long long c, long long b) {\n  long long full = (ind + 1) / c;\n  long long res = full * b;\n  if ((ind + b) / c != full) {\n    res += ind % c - (c - b) + 1;\n  }\n  return res;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    int c = lcm(a, b);\n    if (a > b) {\n      swap(a, b);\n    }\n    for (int i = (0); i < (q); i++) {\n      long long l, r;\n      cin >> l >> r;\n      cout << get(r, c, c - b) - get(l - 1, c, c - b) << \" \";\n    }\n    cout << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "class SegmentTree:\n    def __init__(self, data, default=0, func=lambda a,b:a+b):\n        \"\"\"initialize the segment tree with data\"\"\"\n        self._default = default\n        self._func = func\n        self._len = len(data)\n        self._size = _size = 1 << (self._len - 1).bit_length()\n\n        self.data = [default] * (2 * _size)\n        self.data[_size:_size + self._len] = data\n        for i in reversed(range(_size)):\n            self.data[i] = func(self.data[i + i], self.data[i + i + 1])\n\n    def __delitem__(self, idx):\n        self[idx] = self._default\n\n    def __getitem__(self, idx):\n        return self.data[idx + self._size]\n\n    def __setitem__(self, idx, value):\n        idx += self._size\n        self.data[idx] = value\n        idx >>= 1\n        while idx:\n            self.data[idx] = self._func(self.data[2 * idx], self.data[2 * idx + 1])\n            idx >>= 1\n\n    def __len__(self):\n        return self._len\n\n    def query(self, start, stop):\n        if start == stop:\n            return self.__getitem__(start)\n        stop += 1\n        start += self._size\n        stop += self._size\n\n        res = self._default\n        while start < stop:\n            if start & 1:\n                res = self._func(res, self.data[start])\n                start += 1\n            if stop & 1:\n                stop -= 1\n                res = self._func(res, self.data[stop])\n            start >>= 1\n            stop >>= 1\n        return res\n\n    def __repr__(self):\n        return \"SegmentTree({0})\".format(self.data)\n\n\n# cook your dish here\n# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ------------------- fast io --------------------\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    next = [1]*(a*b)\n    bruh = 0\n    next[0] = 0\n    for i in range(1, a*b):\n        if (i % a) % b == (i % b) % a:\n            next[i] = 0\n        else:\n            bruh += 1\n            continue\n    #print(sum(next))\n    for i in range(a*b):\n        next += [next[i]]\n    #print(len(next))\n    arr = [0]*q\n    st = SegmentTree(next)\n    for __ in range(q):\n        x, y = map(int, input().split())\n        start = x % (a*b)\n        move = (y-x+1) % (a*b)\n        atleast = (y-x+1) // (a*b)\n        #print(\"Atleast\",atleast, bruh)\n        ans = atleast*bruh\n\n        #print(start,move, ans)\n        #print(bruh)\n        #print(ans, start, move)\n        ans += st.query(start, start+move-1)\n        arr[__] = ans\n    print(\" \".join(str(k) for k in arr))"
        },
        {
            "language": 1,
            "solution": "from random import randint\nimport sys\n\n__author__ = 'ratmir'\n\n[t] = [int(x) for x in sys.stdin.readline().split()]\n\nfor ti in range(0, t):\n    a, b, q = [int(x1) for x1 in sys.stdin.readline().split()]\n    res = []\n    all = 0\n    results = []\n    cr = []\n    for i in range(0, a * b):\n        cr.append(all)\n        if (i % a) % b != (i % b) % a:\n            res.append(1)\n            all += 1\n        else:\n            res.append(0)\n    cr.append(all)\n    # print cr\n    for qi in range(0, q):\n        l, r = [int(x1) for x1 in sys.stdin.readline().split()]\n\n        l1 = l\n        r1 = r\n        result = 0\n\n        #   result += res[i]\n        #print len(cr)\n        #print a*b\n        #print l%(a*b)\n        if (r +0) / (a * b) == l / (a * b):\n            result = cr[((r ) % (a * b)) + 1] - cr[l % (a * b)]\n            results.append(result)\n            continue\n        result += cr[a * b] - cr[l % (a * b)]\n        l += a * b - l % (a * b)\n        result += cr[(r + 1) % (a * b)]\n        r -= (r + 0) % (a * b)\n        if r > l:\n            result += all * ((r + 1 - l) / (a * b))\n        if r1%(a*b)==a*b-1:\n            result += all \n        results.append(result)\n        #print result\n\n    print(''.join('{} '.format(k) for k in results))\n\n# 994974874371859201\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nfrom math import gcd\n\ndef func(b, n):\n    if n < b or n == 1:\n        return 0\n    m = n//lcm\n    count = (m-1)*b\n    if n - (m*lcm) >=b:\n        count += b\n    else:\n        count += n-(m*lcm)+1\n    return n - b+1-count\n    \nfor _ in range(int(stdin.readline())):\n    #n = int(stdin.readline())\n    #l = list(map(int, stdin.readline().split()))\n    w = list(map(int, stdin.readline().split()))\n    #arr = list(map(int, stdin.readline().split()))\n    b = max(w[0], w[1])\n    lcm = (w[0]*w[1])//gcd(w[0], w[1])\n    ans = []\n    for i in range(w[2]):\n        l, r = map(int, stdin.readline().split())\n        if lcm == b:\n            ans.append(0)\n        else:\n            ans.append(func(b, r)-func(b, l-1))\n    print(*ans)\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long long INF = LLONG_MAX;\nconst long long MOD = 1e9 + 7;\nusing namespace std;\nvoid fastio() {}\nlong long gcd(long long r, long long b) {\n  long long x = 1;\n  while (b != 0) {\n    x = b;\n    b = r % b;\n    r = x;\n  }\n  return x;\n}\nvoid solve() {\n  long long a, b, q;\n  cin >> a >> b >> q;\n  long long c = gcd(a, b);\n  c = (a * b) / c;\n  if (a > b) swap(a, b);\n  while (q--) {\n    long long l, r;\n    cin >> l >> r;\n    long long right = r / c;\n    long long left = l / c;\n    long long ans = (right - left) * (c - b);\n    right = r % c;\n    left = l % c;\n    if (right >= b) ans += right - b + 1;\n    if (left >= b) ans -= left - b;\n    cout << ans << ' ';\n  }\n  cout << endl;\n  return;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b):\n    if a % b == 0: return b\n    return gcd(b, a%b)\n\ndef calc_lcm(a,b):\n    g = gcd(a,b)\n    return g * (a // g) * (b // g)\n\ndef same(l,r,a,b,lcm):\n    left = a * (l // lcm) + min(a, l % lcm)\n    right = a * ((r+1) // lcm) + min(a, (r+1) % lcm)\n    # print(left,right)\n    return right - left \n\n\ntest_cases = int(input())\nfor test_case in range(test_cases):\n    a,b,q = [int(x) for x in input().split()]\n    a,b = max(a,b), min(a,b)\n    lcm = calc_lcm(a,b)\n    ans = []\n    for qr in range(q):\n        l,r = [int(inp) for inp in input().split()]\n        ans.append(r - l + 1 - same(l,r,a,b,lcm))\n    print(*ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\n\npublic class Main{\n    static long [][] memo;\n    static long [] pow = new long[33];\n    static ArrayList <Integer> [] graph;\n    static Integer [] d;\n    static int [] dist;\n    static boolean[][] visited;\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n        out = new PrintWriter(new BufferedOutputStream(System.out));\n\n        // Start writing your solution here. -------------------------------------\n        long MOD = 1000000007;\n        int mod = 2019;\n        int t = sc.nextInt();\n        //int t = 1;\n        while(t -- > 0)\n        {\n            int a = sc.nextInt(), b = sc.nextInt();\n            int q = sc.nextInt();\n            int GCD = gcd(a, b), LCP = a * b / GCD;\n            long res[] = new long[LCP];\n            for(int i = 1; i < LCP; i++)\n            {\n                res[i] = res[i - 1];\n                int r1 = (i % a) % b, r2 = (i % b) % a;\n                if(r1 != r2) res[i]++;\n            }\n            //System.out.println(Arrays.toString(res));\n            for(int i = 0; i < q; i++)\n            {\n                long l = sc.nextLong(), r = sc.nextLong();\n                long ans = solve(r, res) - solve(l - 1, res);\n                out.print(ans + \" \");\n            }\n            out.println(\"\");\n        }\n        out.close();\n    }\n    public static int gcd(int a, int b)\n    {\n        if(a % b == 0) return b;\n        return gcd(b, a % b);\n    }\n    public static long solve(long x, long[] res){\n        int n = res.length;\n        long a = x / n;\n        int b = (int)(x % n);\n        return res[n - 1] * a + res[b];\n    }\n    //-----------PrintWriter for faster output---------------------------------\n    public static PrintWriter out;\n    //-----------MyScanner class for faster input----------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n        String nextLine(){\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n    //--------------------------------------------------------\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\npublic class c{\n\n    public static void main(String[] args) {\n      MyScanner sc = new MyScanner();\n      out = new PrintWriter(new BufferedOutputStream(System.out));\n\n      int t = sc.nextInt();\n      for(int i=0; i<t; i++) {\n          int a = sc.nextInt();\n          int b = sc.nextInt();\n          int q = sc.nextInt();\n          int temp_min = Math.min(a,b);\n          a = Math.max(a,b);\n          b = temp_min;\n          int gcd = 1;\n          for(int j=1; j<=b; j++) {\n              if(a%j==0 && b%j==0) {\n                  gcd = j;\n              }\n          }\n          int lcm = a*b/gcd;\n          int modulus = b/gcd;\n          for(int j=0; j<q; j++) {\n              long l = sc.nextLong();\n              long r = sc.nextLong();\n              long extrarounds = (r-l) / lcm;\n              long totalcount = extrarounds * (lcm-a);\n              r -= extrarounds * lcm;\n              long lowerfloor = l/a;\n              long upperfloor = r/a;\n              long lowercount = a - l%a;\n              long uppercount = r%a + 1;\n              if(lowerfloor == upperfloor) {\n                  if(lowerfloor%modulus != 0) {\n                      totalcount += (r-l+1);\n                  }\n              } else {\n                  if(lowerfloor%modulus != 0) {\n                      totalcount += lowercount;\n                  }\n                  if(upperfloor%modulus != 0) {\n                      totalcount += uppercount;\n                  }\n                  for(long k=lowerfloor + 1; k < upperfloor; k++) {\n                      if(k%modulus != 0) {\n                          totalcount += a;\n                      }\n                  }\n              }\n              out.println(totalcount);\n          }\n      }\n\n\n\n\n      \n      \n      \n\n      // Start writing your solution here. -------------------------------------\n   \n      /*\n      int n      = sc.nextInt();        // read input as integer\n      long k     = sc.nextLong();       // read input as long\n      double d   = sc.nextDouble();     // read input as double\n      String str = sc.next();           // read input as String\n      String s   = sc.nextLine();       // read whole line as String\n\n      int result = 3*n;\n      out.println(result);                    // print via PrintWriter\n      */\n\n      // Stop writing your solution here. -------------------------------------\n      out.close();\n   }\n\n   public static int match(char[] a, char[] b) {\n      int count = 0;\n      for(int i =0; i<a.length; i++) {\n          if(a[i]==b[i]) {\n              count++;\n          }\n      }\n      return a.length-count;\n   }\n\n   static  class pair{\n    int u;\n    int v;\n    int w;\n    int x;\n    pair(int u, int v, int w, int x) {\n        this.u=u;\n        this.v=v;\n        this.w=w;\n        this.x=x;\n    }\n    \n}\n\nstatic class sortbyarr implements Comparator<pair> \n{ \n    // Used for sorting in ascending order of \n    // roll number \n    public int compare(pair a, pair b) \n    { \n        return a.u - b.u; \n    } \n}\n\nstatic class sortbyi implements Comparator<pair> \n{ \n    // Used for sorting in ascending order of \n    // roll number \n    public int compare(pair a, pair b) \n    { \n        return a.x - b.x; \n    } \n}\n\n   //-----------PrintWriter for faster output---------------------------------\n   public static PrintWriter out;\n      \n   //-----------MyScanner class for faster input----------\n   public static class MyScanner {\n      BufferedReader br;\n      StringTokenizer st;\n \n      public MyScanner() {\n         br = new BufferedReader(new InputStreamReader(System.in));\n      }\n \n      String next() {\n          while (st == null || !st.hasMoreElements()) {\n              try {\n                  st = new StringTokenizer(br.readLine());\n              } catch (IOException e) {\n                  e.printStackTrace();\n              }\n          }\n          return st.nextToken();\n      }\n \n      int nextInt() {\n          return Integer.parseInt(next());\n      }\n \n      long nextLong() {\n          return Long.parseLong(next());\n      }\n \n      double nextDouble() {\n          return Double.parseDouble(next());\n      }\n \n      String nextLine(){\n          String str = \"\";\n\t  try {\n\t     str = br.readLine();\n\t  } catch (IOException e) {\n\t     e.printStackTrace();\n\t  }\n\t  return str;\n      }\n\n   }\n   //--------------------------------------------------------\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.math.*;\n\npublic class C {\n        public static void main(String[] args) throws Exception {\n                BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n                PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n                int t = Integer.parseInt(bf.readLine());\n                StringTokenizer st;\n                long a, b, q, li, ri;\n                for (int i = 0; i < t; i++) {\n                        st = new StringTokenizer(bf.readLine());\n                        a = Long.parseLong(st.nextToken());\n                        b = Long.parseLong(st.nextToken());\n                        if (a > b) {\n                                long tmp = a;\n                                a = b;\n                                b = tmp;\n                        } // a is smaller\n                        q = Long.parseLong(st.nextToken());\n                        long l = lcm(a, b);\n                        StringBuilder sb = new StringBuilder();\n                        for (int j = 0; j < q; j++) {\n                                st = new StringTokenizer(bf.readLine());\n                                li = Long.parseLong(st.nextToken());\n                                ri = Long.parseLong(st.nextToken());\n                                long cutL = (li / l);\n                                long cutR = (ri / l);\n                                long equalTo = (cutR - cutL) * b;\n                                equalTo -= min(li - cutL * l, b);\n                                equalTo += min(ri - cutR * l + 1, b);\n                                sb.append(ri - li + 1 - equalTo);\n                                if (j != q - 1) {\n                                        sb.append(' ');\n                                }\n                        }\n                        out.println(sb.toString());\n                }\n                out.close();\n                System.exit(0);\n        }\n\n        public static long lcm(long a, long b) {\n                return (a / gcd(a, b)) * b;\n        }\n\n        public static long gcd(long a, long b) {\n                long t;\n                while (a > 0) {\n                        t = b % a;\n                        b = a;\n                        a = t;\n                }\n                return b;\n        }\n\n        public static long min(long a, long b) {\n                return a < b ? a : b;\n        }\n\n        public static long max(long a, long b) {\n                return a > b ? a : b;\n        }\n\n        public static long abs(long a) {\n                return a > 0 ? a : -a;\n        }\n}"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\n\nfrom collections import Counter, defaultdict, deque\n\n\ndef solve(A, B, Q, LR):\n    cumsum = [0]\n    for x in range(0, A * B):\n        val = 0\n        if (x % A) % B != (x % B) % A:\n            val = 1\n        cumsum.append(cumsum[-1] + val)\n    ans = []\n    for l, r in LR:\n        lq, lr = divmod(l, A * B)\n        rq, rr = divmod(r, A * B)\n        count = cumsum[-1] * (rq - lq) + cumsum[rr + 1] - cumsum[lr]\n        ans.append(count)\n\n    return ' '.join(map(str, ans))\n\n\nif __name__ == \"__main__\":\n    input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n    T = int(input())\n    for t in range(T):\n        A, B, Q = [int(x) for x in input().split()]\n        LR = [[int(x) for x in input().split()] for i in range(Q)]\n        ans = solve(A, B, Q, LR)\n        print(ans)\n"
        },
        {
            "language": 3,
            "solution": "#  =========     /\\       /|    |====/|\n#      |        /  \\       |    |   / |\n#      |       /____\\      |    |  /  |\n#      |      /      \\     |    | /   |\n#  ========= /        \\  =====  |/====|  \n#  code\n\nfrom math import gcd\ndef main():\n    t = int(input())\n    for _ in range(t):\n        a,b,q = map(int , input().split())\n        M = a * b\n        M //= gcd(a , b)\n        if a > b:\n            a,b = b,a\n        aa = []\n        for i in range(q):\n            x,y = map(int , input().split())\n            ans = 0\n            k = (x - 1) // M\n            ans -= k * (M - 1 - b + 1)\n\n            k = y // M\n            ans += k * (M - 1 - b + 1)\n\n            z = (x - 1)\n            z %= M\n\n            ans -= max(0 , z - b + 1)\n\n            y %= M\n            ans += max(0 , y - b + 1)\n            aa.append(ans if b % a != 0 else 0)\n        print(*aa)            \n    return\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "ok = [0] * 50000\npf = [0] * 50000\nfor t in range(int(input())):\n\ta, b, q = map(int, input().split())\n\tpf[-1] = 0\n\tfor i in range(a * b):\n\t\tok[i] = i % a % b != i % b % a\n\t\tpf[i] = pf[i - 1] + ok[i]\n\tfor tt in range(q):\n\t\tl, r = map(int, input().split())\n\t\tcl = (((l - 1) // (a * b) + 1) * (a * b))\n\t\tcr = r - r % (a * b)\n\t\tif cl > cr:\n\t\t\tprint(pf[r % (a * b)] - (0 if l % (a * b) == 0 else pf[l % (a * b) - 1]), end=' ')\n\t\telse:\n\t\t\tc = (cr - cl) // (a * b)\n\t\t\tans = c * pf[a * b - 1]\n\t\t\ttli = cl - l\n\t\t\ttri = r - cr\n\t\t\tprint(ans + pf[tri] + pf[a * b - 1] - pf[a * b - 1 - tli], end=' ')\n\tprint()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t;\n  cin >> t;\n  for (long long int o = 0; o < t; o = o + 1) {\n    long long int a, b, q;\n    cin >> a >> b >> q;\n    long long int c = a * b + 1;\n    long long int d[c];\n    d[0] = 0;\n    for (long long int i = 1; i < c; i = i + 1) {\n      d[i] = d[i - 1];\n      if (((i % a) % b) != ((i % b) % a)) {\n        d[i]++;\n      }\n    }\n    c--;\n    long long int l[q], r[q];\n    long long int e, f;\n    for (long long int i = 0; i < q; i = i + 1) {\n      cin >> l[i] >> r[i];\n      e = d[r[i] % c] + (r[i] / c) * d[c];\n      l[i]--;\n      f = d[l[i] % c] + (l[i] / c) * d[c];\n      cout << e - f << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "def gcd(a, b):\n    while b: a, b = b, a % b\n    return a\n    \ndef lcm(a, b):\n    return a * b // gcd(a, b)\n    \ndef cal(a, b, ab, x):\n    t = x // ab\n    cnt = t * (ab - b)\n    x -= t * ab\n    x -= b - 1\n    if x > 0:\n        cnt += x\n    return cnt\n\ndef calc(a, b, ab, l, r):\n    if a == b: return 0\n    if a == 1: return 0\n    return cal(a, b, ab, r) - cal(a, b, ab, l-1)\n    \n\nt = int(raw_input())\nfor _ in xrange(t):\n    a, b, q = map(int, raw_input().split())\n    a, b = min(a, b), max(a, b)\n    ab = lcm(a, b)\n    ans = [calc(a, b, ab, *map(int, raw_input().split())) for i in xrange(q)]\n    print ' '.join(map(str, ans))\n"
        },
        {
            "language": 3,
            "solution": "from __future__ import division, print_function\nimport sys\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\nimport os, sys, bisect, copy\nfrom collections import defaultdict, Counter, deque\n#from functools import lru_cache   #use @lru_cache(None)\nif os.path.exists('in.txt'): sys.stdin=open('in.txt','r')\nif os.path.exists('out.txt'): sys.stdout=open('out.txt', 'w')\n#\ndef input(): return sys.stdin.readline()\ndef mapi(arg=0): return map(int if arg==0 else str,input().split())\n#------------------------------------------------------------------\nfrom math import*\nfor _ in range(int(input())):\n    a,b,q = mapi()\n    lcm =  (a*b)//gcd(a,b)\n    ans = []\n    b = max(a,b)\n    for qe in range(q):\n        x,y = mapi()\n        res = 0\n        #res = max(y-max(x,b)+1,0)\n        res = (y//lcm)*(lcm-b)\n        rem = y%lcm\n        if rem >=b:\n            res+=(rem-b+1)\n        x-=1\n        tmp = (x//lcm)*(lcm-b)\n        rem = x%lcm\n        if rem >=b:\n            tmp+=(rem-b+1)\n        res-=tmp\n        ans.append(res)\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef lcm(a, b):\n    return abs(a * b) // math.gcd(a, b)\n\ndef func(n, a, b):\n    mx = max(a, b)\n    lc = lcm(a, b)\n    c = n // lc\n    g = n % lc\n    if(g >= mx):\n        res = (n - (c + 1) *  mx) + 1\n    else:\n        res = c * lc - c * mx\n    return(res)\n\nt = int(input())\nres = []\n\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    temp = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        if(lcm(a, b) == max(a, b)):\n            temp.append(str(0))\n        else:\n            temp.append(str(func(r, a, b) - func(l - 1, a, b)))\n    res.append(' '.join(temp))\n\nfor r in res:\n    print(r)\n                \n"
        },
        {
            "language": 3,
            "solution": "import math\nR=lambda:map(int,input().split())\nt,=R()\nfor _ in[0]*t:\n a,b,q=R();m=a*b//math.gcd(a,b);a=max(a,b);f=lambda x:x//m*(m-a)+max(0,x%m-a+1)\n for _ in[0]*q:l,r=R();print(f(r)-f(l-1))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Objects;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Double.parseDouble;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\n\npublic class Solution {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n    static boolean isLocal = false;\n\n    long get(long l, int len, int b, int a) {\n        if (l < b) return 0;\n        long ans = (l / (b + len)) * len;\n        l %= (b + len);\n        long rest = max(0, l - b + 1);\n        return ans + rest;\n    }\n\n    int get_max_len(int a, int b) {\n        int len = 0, mx = 0;\n        for (long i = 0; i <= a*b; i++) {\n            if ((i % a) % b != (i % b) % a) mx++;\n            else mx = 0;\n            len = max(len, mx);\n        }\n        return len;\n    }\n\n    void Case() throws IOException {\n        int t[] = sort(na(2));\n        int a = t[0], b = t[1], q = nextInt();\n        int len = get_max_len(a, b);\n        while (q-- > 0) {\n            long l = nextLong(), r = nextLong();\n            if (len == 0)\n                out.print(\"0 \");\n            else {\n                long ans = get(r, len, b, a) - get(l - 1, len, b, a);\n//                long ans2 = get(r, len, a, b) - get(l - 1, len, a, b);\n                out.print(ans + \" \");\n            }\n        }\n        out.println();\n    }\n\n    void solve() throws Exception {\n        int t = nextInt();\n        for (int i = 1; i <= t; i++) {\n            Case();\n        }\n    }\n\n    int min(int x, int y) {\n        return Integer.min(x, y);\n    }\n\n    int max(int x, int y) {\n        return Integer.max(x, y);\n    }\n\n    long min(long x, long y) {\n        return Long.min(x, y);\n    }\n\n    long max(long x, long y) {\n        return Long.max(x, y);\n    }\n\n    int[] sort(int[] arr) {\n        sort(arr, 0, arr.length - 1);\n        return arr;\n    }\n\n    void sort(int arr[], int l, int r) {\n        if (l < r) {\n            int m = (l + r) / 2;\n            sort(arr, l, m);\n            sort(arr, m + 1, r);\n            merge(arr, l, m, r);\n        }\n    }\n\n    void merge(int arr[], int l, int m, int r) {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[l + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[m + 1 + j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            } else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    class Seg implements Comparable<Seg> {\n        int st, end;\n\n        public Seg(int st, int end) {\n            this.st = st;\n            this.end = end;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            Seg seg = (Seg) o;\n            return st == seg.st &&\n                    end == seg.end;\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(st, end);\n        }\n\n        @Override\n        public int compareTo(Seg seg) {\n            return st == seg.st ? Integer.compare(end, seg.end) : Integer.compare(st, seg.st);\n        }\n    }\n\n    private int[] na(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n\n    private long[] nal(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n\n    int nextInt() throws IOException {\n        return parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n\n    String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    public static void main(String[] args) throws Exception {\n        try {\n            if (isLocal) {\n                in = new BufferedReader(new FileReader(\"src/tests/sol.in\"));\n                out = new PrintWriter(new BufferedWriter(new FileWriter(\"src/tests/sol.out\")));\n            } else {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n//            long lStartTime = System.currentTimeMillis();\n            new Solution().solve();\n//            long lEndTime = System.currentTimeMillis();\n//            out.println(\"Elapsed time in seconds: \" + (double) (lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\ndef lcm(a,b):\n    return a*b//gcd(a,b)\nimport sys\ninput = sys.stdin.buffer.readline\ndef print(val):\n    sys.stdout.write(str(val) + '\\n')\ndef quic():\n    for _ in range(int(input().strip())):\n        a,b,q = map(int,input().split())\n        period = lcm(a,b)\n        maxx = max(a,b)\n        for _ in range(q):\n            l,r = map(int,input().split())\n            total = r - l + 1\n            total_bad = 0 \n            bottom = (l // period) + 1\n            top = r // period\n            x = l % period\n            y = r % period\n            if top < bottom:\n                total_bad += max(0,min(maxx,y+1) - x)\n                total -= total_bad\n                print(total)\n            else:\n                total_bad += (top - bottom) * maxx\n                total_bad += min(maxx,y+1)\n                total_bad += max(0,maxx - x)\n                total -= total_bad\n                print(total)\nquic()\n                \n        \n        \n"
        },
        {
            "language": 3,
            "solution": "def calc(arr, p, n):\n    return(arr[n - 1] * (p // n) + arr[p % n])\n\n\nt = int(input())\nfor T in range(t):\n    a, b, q = [int(x) for x in input().split()]\n    if a > b:\n        a, b = b, a\n    ans = [0] * q\n    arr = [0] * (b * a)\n    for i in range(1, a * b):\n        arr[i] = arr[i - 1]\n        if(i % a % b != i % b % a):\n            arr[i] += 1\n    \n    for Q in range(q):\n        l, r = [int(x) for x in input().split()]\n        ans[Q] = calc(arr, r, a * b) - calc(arr, l - 1, a * b)\n\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nimport sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    lcm = a * b // gcd(a, b)\n    ans = [0]*q\n\n    for i in range(q):\n        l, r = map(int, input().split())\n        edge = r // lcm * lcm\n        sub = (r // lcm) * b + min(b, r-edge+1)\n        l -= 1\n        edge_l = l // lcm * lcm\n        sub -= (l // lcm) * b + min(b, l-edge_l+1)\n        ans[i] = r - l - sub\n\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter, OrderedDict\nfrom itertools import permutations as perm\nfrom collections import deque\nfrom sys import stdin\nfrom bisect import *\nfrom heapq import *\nimport math\n\ng   = lambda : stdin.readline().strip()\ngl  = lambda : g().split()\ngil = lambda : [int(var) for var in gl()]\ngfl = lambda : [float(var) for var in gl()]\ngcl = lambda : list(g())\ngbs = lambda : [int(var) for var in g()]\nmod = int(1e9)+7\ninf = float(\"inf\")\n\n\ndef getVal(x, a, b):\n\treturn 1 if (x%a)%b != (x%b)%a else 0\n\n\nt, = gil()\nfor _ in range(t):\n\ta, b, q = gil()\n\ta, b = max(a, b), min(a, b)\n\tn = a*b; base = [0]*n\n\tbase[0] = getVal(0, a, b)\n\tfor i in range(1, n):\n\t\tbase[i] += base[i-1] + getVal(i, a, b)\n\tbase.append(0)\n\tfor _ in range(q):\n\t\tl, r = gil()\n\t\tif a==b or r < a:\n\t\t\tprint(0, end=\" \")\n\t\telse:\n\t\t\tans = 0\n\t\t\tans += base[r%n]\n\t\t\tans -= base[l%n - 1\t]\n\t\t\tans += base[-2]*((r-(r%n)-l+(l%n)+1)//n)\n\t\t\tprint(ans, end=\" \")\n\tprint()"
        },
        {
            "language": 3,
            "solution": "import math as mt\nimport collections as cc\nimport sys;input=sys.stdin.readline\nI=lambda:list(map(int,input().split()))\nfor tc in range(int(input())):\n    a,b,q=I()\n    lcm=(a*b)//mt.gcd(a,b)\n    mul=lcm-max(a,b)\n    tf=[]\n    for tt in range(q):\n        l,r=I()\n        if a==b:\n            tf.append(0)\n        else:\n            ans=((r//lcm)*mul)+max(0,r%(lcm)-max(a,b)+1)\n            ans-=((l-1)//lcm)*mul+max(0,(l-1)%(lcm)-max(a,b)+1)\n            tf.append(ans)\n    print(*tf)\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import defaultdict as dd\ninput=sys.stdin.readline\nmod=1000000007\ndef power(x,y): \n    res = 1\n    while (y > 0):  \n        if ((y & 1) == 1) : \n            res = (res * x )%m\n        y = y >> 1\n        x =( x * x )%m\n      \n    return res%m\ndef gcd(a,b): \n    if a == 0: \n        return b \n    return gcd(b % a, a)\ndef solve(r,mx,lc):\n    mulp=0\n    ul=int(r//lc)*lc\n    le=mx-1\n##            fm=(int(l//lc))*lc\n##            le=max(fm+mx-l,0)\n            \n            \n##            if(l%lc==0):\n##                le=0\n    if(ul+mx>r):\n        le+=r-ul+1\n    else:\n        le+=mx\n##            print(le)    \n##            if(r%lc==0):\n##                mulp+=1\n            \n    mulp=int(r//lc)-1\n    le+=mulp*mx\n    return(r-le+1)\n\ndef lcm(a,b): \n    return (a*b)//gcd(a,b)\nfor _ in range(int(input())):   \n    a,b,q=map(int,input().split())\n    lc=lcm(a,b)\n    mx=max(a,b)\n    f=0\n    if(mx%min(a,b)==0):\n        f=1\n    for gf in range(q):\n        c=0\n        l,r=map(int,input().split())\n        if(mx%min(a,b)==0):\n            ans=0\n        elif(r<mx):\n            ans=0\n        else:\n            su1=solve(r,mx,lc)\n            su2=solve(l-1,mx,lc)\n##            print(su1-su2,su1,su2)\n            ans=su1-su2\n        print(ans,end=\" \")\n    print()\n        \n##            for i in range(l,r+1):\n##                x=(i%a)%b;y=(i%b)%a\n##                if(x != y ):\n##                    c+=1\n####'''\n####6 15 1\n####1 100\n####45\n####4 5 1\n####1 1000\n####750\n####4 6 1\n####100 200\n####51'''\n######                    print(i,x,y)\n######                else:\n######                    print(i)\n##            print(\"final\",c)\n##            print(r-l+1-le,le)\n##    if(f==0):\n##         print(*li)\n##            print(r-l+1-le)\n            \n##            le=r-ul+1\n##            le=le+max((mulp-1)*mx,0)\n##            c+=fm-l+1\n##            le+=max(\n            \n\n##    print(min((abs(x-y)*a + min(x,y)*b),(x+y)*a))\n"
        },
        {
            "language": 3,
            "solution": "from math import *\nfrom bisect import bisect_left, bisect_right\nfrom queue import Queue\nfrom sys import stdin, stdout\nfrom collections import Counter\ninput = lambda: stdin.readline().strip()\nfast_print = stdout.write\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    prefix = []\n    cnt = 0\n    for i in range(a*b):\n        if (i%b)%a!=(i%a)%b:\n            cnt+=1\n        prefix.append(cnt)\n    for i in range(q):\n        l, r = map(int, input().split())\n        minicnt = 0\n        if l%(a*b)!=0:\n            minicnt+=cnt-prefix[(l%(a*b))-1]\n        else:\n            minicnt+=cnt\n        minicnt+=prefix[r%(a*b)]\n        cnt_front = (a*b-(l%(a*b)))\n        cnt_back = (r%(a*b))+1\n        if r-l+1<=a*b:\n            if r-l+1==cnt_front+cnt_back:\n                fast_print(str(minicnt)+' ')\n            else:\n                if l%(a*b)!=0:\n                    fast_print(str(prefix[r%(a*b)]-prefix[(l%(a*b))-1])+' ')\n                else:\n                    fast_print(str(prefix[r%(a*b)])+' ')\n        else:\n            leftover = r-l+1-(cnt_front+cnt_back)\n            fast_print(str(minicnt+cnt*(leftover//(a*b)))+' ')\n    fast_print('\\n')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n\n        int t = input.nextInt();\n\n        int tCount = 0;\n\n        for(int u=0; u < t; u++) {\n\n            int a = input.nextInt();\n            int b = input.nextInt();\n\n            int q = input.nextInt();\n            long[] l = new long[q];\n            long[] r = new long[q];\n\n            for(int i=0; i < q; i++) {\n                l[i] = input.nextLong();\n                r[i] = input.nextLong();\n            }\n\n\n\n            int lcm = lcm(a, b);\n\n            for(int i=0; i < q; i++) {\n                long withinCount = countDivisibles(l[i], r[i], lcm);\n                withinCount = withinCount * Math.max(a, b);\n\n                long backCounts = 0;\n\n                long actual = r[i] - l[i] + 1;\n\n                long j = l[i] - 1;\n                boolean found = false;\n                for(; j >= l[i] - 1 - Math.max(a,b); j--) {\n                    if (j % lcm == 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (found) {\n                    long k = j;\n                    for(; k < j + Math.max(a, b); k++) {\n                        if (k >= l[i] && k <= r[i]) {\n                            backCounts++;\n                        }\n                    }\n                }\n\n                if (withinCount > 0) {\n                    long extraCounts = 0;\n                    j = r[i];\n                    found = false;\n                    for (; j >= r[i] - Math.max(a, b); j--) {\n                        if (j % lcm == 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (found) {\n                        long k = j;\n                        for (; k < j + Math.max(a, b); k++) {\n                            if (k > r[i]) {\n                                extraCounts++;\n                            }\n                        }\n                    }\n\n                    withinCount -= Math.max(0, extraCounts);\n                }\n                long unequals = actual - backCounts - withinCount;\n\n                if (i == 0) {\n                    System.out.print(unequals);\n                } else {\n                    System.out.print(\" \" + unequals);\n                }\n\n            }\n\n            System.out.println(\"\");\n        }\n    }\n\n    public static long countDivisibles(long a, long b, int m) {\n        if (a % m == 0)\n            return (b / m) - (a / m) + 1;\n\n        return (b / m) - (a / m);\n    }\n\n    public static int gcd(int a, int b){\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    public static int lcm(int a, int b) {\n        return (a*b)/gcd(a, b);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "def preComp(a, b, p):\n    p[0] = 0\n    for i in range(1, a*b + 1):\n        p[i] = p[i - 1]\n        if((i % a) % b != ((i % b) % a)):\n            p[i] += 1\n\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    p = [0 for i in range(a*b + 1)]\n    preComp(a, b, p)\n    for i in range(q):\n        l, r = map(int, input().split())\n        temp = r // (a*b)\n        ans = p[a*b] * temp + p[r % (a*b)]\n        temp = (l - 1) // (a * b)\n        ans -= (p[a*b] * temp + p[(l - 1) % (a*b)])\n        print(ans, end=' ')\n    print('')"
        },
        {
            "language": 3,
            "solution": "def gcd(x, y): \n   while(y): \n       x, y = y, x % y \n  \n   return x\n\n\n\ncases = int(input())\nfor i in range(cases):\n    inp = input().split(\" \")\n    a = int(inp[0])\n    b = int(inp[1])\n    q = int(inp[2])\n    GCD = gcd(a, b)\n    LCM = (a*b)//GCD\n    minst = a if a <= b else b\n    mest = a if a >= b else b\n    result = \"\"\n    for k in range(q):\n        inp2 = input().split(\" \")\n        l = int(inp2[0])\n        r = int(inp2[1]) +1 \n        innr = (r-r%LCM)\n        innl = (l+(LCM - l%LCM))\n       \n        ans = 0\n        if (innr > innl):\n            ans = ((innr - innl + 1)//LCM)*(LCM-mest) # alle hele cycles som er i intervallet\n        \n        if r//LCM == l//LCM: # de er i samme cycle\n            tmp = r%LCM - (l%LCM if l%LCM > mest else mest)\n            ans += tmp if tmp > 0 else 0\n        else:\n            tmpl = LCM - (l%LCM if l%LCM > mest else mest)\n            tmpr = r%LCM - mest\n            ans += tmpl if tmpl > 0 else 0\n            ans += tmpr if tmpr > 0 else 0\n        \n        result += str(ans) + \" \"\n    print(result)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\ndef gcd(x, y):\n    if x < y:\n        x, y = y, x\n    while y:\n        x, y = y, x % y\n    return x\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    lcm = a * b // gcd(a,b)\n    g = gcd(a,b)\n    m = max(a,b)\n\n    def f(x):\n        total = x // lcm\n        extra = x % lcm\n        return x - (m * total + min(m,extra))\n        \n    \n    out = [0] * q\n    for i in range(q):\n        l, r = map(int, input().split())\n        out[i] = f(r + 1) - f(l)\n        \n    print(*out, sep = ' ')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nunsigned long long mod = 1e9 + 7;\nunsigned long long ncr(long long int n, long long int k) {\n  unsigned long long res = 1;\n  if (k > n - k) k = n - k;\n  for (int i = 0; i < k; ++i) {\n    res *= (n - i);\n    res /= (i + 1);\n    res = res;\n  }\n  return res;\n}\nbool prime(unsigned long long num) {\n  bool flag = true;\n  for (unsigned long long i = 2; i * i <= num; i++) {\n    if (num % i == 0) {\n      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\nlong long ipow(long long base, long long exp) {\n  long long result = 1;\n  for (;;) {\n    if (exp & 1) {\n      result *= base;\n      result = result % mod;\n    }\n    exp >>= 1;\n    if (!exp) break;\n    base *= base;\n    base = base % mod;\n  }\n  return result % mod;\n}\nlong long abs(long long a, long long b) {\n  if ((a - b) > 0)\n    return (a - b);\n  else\n    return (b - a);\n}\nlong long MOD = 998244353;\nlong long add(long long a, long long b) {\n  a += b;\n  if (a >= mod) a -= mod;\n  if (a < 0) a += mod;\n  return a;\n}\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long der(int k) {\n  long long res = 0;\n  long long fact = 1;\n  for (int i = 2; i <= k; i++) fact *= i;\n  int s = 1;\n  long long j = 1;\n  for (int i = 2; i <= k; i++) {\n    j = j * i;\n    long long first = (fact / j) * s;\n    res += first;\n    s = s * -1;\n  }\n  return res;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    long long h = (a * b) / gcd(a, b);\n    long long ind = h / b;\n    long long eq = b;\n    long long neq = h - eq;\n    if (h == b) {\n      neq = 0;\n      eq = h;\n    }\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      if (neq == 0) {\n        cout << \"0\" << endl;\n        continue;\n      }\n      long long left = (l - 1) / h;\n      long long lefteq = min((l - 1) % h, b - 1);\n      long long leftneq = (l - 1) % h - lefteq;\n      lefteq += left * eq;\n      leftneq += left * neq;\n      long long rht = r / h;\n      long long req = min(r % h, b - 1);\n      long long rneq = r % h - req;\n      req += rht * eq;\n      rneq += rht * neq;\n      cout << rneq - leftneq << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n * Author: pranay.agra\n * Time: 2020-04-26 10:36:17\n*/\n\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.util.Scanner;\n\npublic class c {\n    public static void main(String[] args) throws IOException {\n        Scanner std = new Scanner(System.in);\n        BufferedWriter log = new BufferedWriter(new OutputStreamWriter(System.out));\n        StringBuilder strBu = new StringBuilder();        \n\n        int t = std.nextInt();\n        while (t-- > 0) {\n            int a = std.nextInt();\n            int b = std.nextInt();\n            int q = std.nextInt();\n            long lcm = lcm(a, b);\n            long subranges = lcm - Math.max(a, b);\n            while (q-- > 0) {\n                long ti = std.nextLong();\n                long ri = std.nextLong();\n                long firstVal = 0;\n                long secondVal = 0;\n                if (a%b == 0 || b%a == 0) {\n                    log.write(\"0 \");\n                } else {\n                    ti -= 1;\n                    long totalranges = ti/lcm;\n                    long rem = (ti % lcm) - (long)(Math.max(a, b)) + 1;\n                    if (rem < 0) rem = 0;\n                    firstVal += (totalranges*subranges + rem);\n\n                    totalranges = ri/lcm;\n                    rem = (ri % lcm) - (long)(Math.max(a, b)) + 1;\n                    if (rem < 0) rem = 0;\n                    secondVal += (totalranges*subranges + rem);\n\n                    log.write((secondVal-firstVal) + \" \");\n                }\n            }\n            log.write(\"\\n\");\n        }\n        log.flush();\n\t\n\n    }\n\n    private static int gcd(int a, int b) {\n        if (a == 0) return b;\n        return gcd(b % a, a);\n    }\n\n    private static int lcm(int a, int b) {\n        return (a*b)/gcd(a, b);\n    }\n}\n\n/**\nRemember to check for overflow (long)\nDoes number need to be greater than a lower bound?\n**/\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring char_to_str(char c) {\n  string tem(1, c);\n  return tem;\n}\nlong long max(long long a, long long b) {\n  if (a > b) {\n    return a;\n  }\n  return b;\n}\nlong long min(long long a, long long b) {\n  if (a < b) {\n    return a;\n  }\n  return b;\n}\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    long long lcm1 = lcm(a, b);\n    long long max1 = max(a, b);\n    long long last_num_tot = max1 - 1;\n    for (int i = 0; i < q; ++i) {\n      long long ans = 0;\n      long long start, end;\n      cin >> start >> end;\n      long long q1 = start / lcm1;\n      long long q2 = end / lcm1;\n      if (q1 != q2) {\n        long long bet = q2 - q1 - 1;\n        ans = ans + bet * (last_num_tot + 1);\n        long long last_one = last_num_tot + (q2 * lcm1);\n        if (last_one <= end) {\n          ans = ans + last_num_tot + 1;\n        } else {\n          long long l_first_one = q2 * lcm1;\n          ans = ans + (end - l_first_one) + 1;\n        }\n        long long last_first_one = last_num_tot + (q1 * lcm1);\n        if (last_first_one >= start) {\n          ans = ans + (last_first_one - start) + 1;\n        }\n        long long last_last_first_one = q2 * lcm1;\n        if (last_first_one >= last_last_first_one) {\n          ans = ans - (last_first_one - last_last_first_one) - 1;\n        }\n      } else {\n        long long q = q1;\n        long long start_one = lcm1 * q;\n        long long last_one = last_num_tot + (lcm1 * q);\n        if ((start_one > end) || (last_one < start)) {\n          ans = 0;\n        } else {\n          if ((start_one >= start) && (last_one <= end)) {\n            ans = last_one - start_one + 1;\n          } else if ((start_one < start) && (last_one > end)) {\n            ans = end - start + 1;\n          } else {\n            if (last_one >= start) {\n              ans = ans + (last_one - start) + 1;\n            } else {\n              ans = ans + (end - start_one) + 1;\n            }\n          }\n        }\n      }\n      long long fin = end - start - ans + 1;\n      if (fin <= 0) {\n        cout << 0 << \" \";\n      } else {\n        cout << end - start - ans + 1 << \" \";\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconstexpr int inf = 0x3f3f3f3f;\nconstexpr long long INF = 9123456789123456789;\nconstexpr long long MOD = 1000000007LL;\nunsigned int gcd(unsigned int a, unsigned int b) {\n  while (b != 0) {\n    int r = a % b;\n    a = b;\n    b = r;\n  }\n  return a;\n}\nunsigned int lcm(unsigned int a, unsigned int b) { return a * b / gcd(a, b); }\nunsigned int a, b, q;\nvoid sol() {\n  cin >> a >> b >> q;\n  if (a > b) swap(a, b);\n  unsigned int period = lcm(a, b);\n  vector<int> mark(period);\n  unsigned int cnt(0);\n  for (unsigned int i = 0; i < period; i++) {\n    if (i < b)\n      mark[i] = cnt;\n    else\n      mark[i] = (++cnt);\n  }\n  for (unsigned int i = 0; i < q; i++) {\n    long long int l, r;\n    cin >> l >> r;\n    l--;\n    long long int rn = (r / period) * cnt + mark[r % period];\n    long long int ln = (l / period) * cnt + mark[l % period];\n    cout << (rn - ln) << ' ';\n  }\n  cout << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cout << fixed << setprecision(12);\n  cin.tie(nullptr);\n  int t;\n  cin >> t;\n  while (t--) sol();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MAXN = (long long)((1e5) + 100);\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long max(long long a, long long b) {\n  if (a > b)\n    return a;\n  else\n    return b;\n}\nlong long min(long long a, long long b) {\n  if (a < b)\n    return a;\n  else\n    return b;\n}\nvoid pr(long long x) { cout << x; }\nvoid prl(long long x) { cout << x << \"\\n\"; }\nlong long cbrt(long long x) {\n  long long lo = 1, hi = min(2000000ll, x);\n  while (hi - lo > 1) {\n    long long mid = (lo + hi) / 2;\n    if (mid * mid * mid < x) {\n      lo = mid;\n    } else\n      hi = mid;\n  }\n  if (hi * hi * hi <= x)\n    return hi;\n  else\n    return lo;\n}\nconst long long dx[4] = {-1, 1, 0, 0};\nconst long long dy[4] = {0, 0, -1, 1};\nlong long XX[] = {-1, -1, -1, 0, 0, 1, 1, 1};\nlong long YY[] = {-1, 0, 1, -1, 1, -1, 0, 1};\nconst long long N = (long long)(2 * 1e5 + 10);\nlong long findcount(long long r, long long lcm, long long b) {\n  long long div = r / lcm;\n  long long prod = div * lcm;\n  long long tot = r;\n  if (div != 0) {\n    tot -= min(b, r - prod + 1);\n    tot -= (div - 1) * b;\n  }\n  return tot - min(r, (b - 1));\n}\nsigned main() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n  long long T = 1;\n  cin >> T;\n  while (T--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    long long lc = a * b;\n    long long gg = gcd(a, b);\n    lc /= gg;\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      if (lc == b || (r < b)) {\n        cout << 0 << \" \";\n        continue;\n      }\n      long long cnt = findcount(r, lc, b);\n      if (l > 1) cnt -= findcount(l - 1, lc, b);\n      cout << cnt << \" \";\n    }\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class First {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        //int a = 1;\n        int t;\n        t = in.nextInt();\n        //t = 1;\n        while (t > 0) {\n            //out.print(\"Case #\"+(a++)+\": \");\n            solver.call(in, out);\n            t--;\n        }\n        out.close();\n\n    }\n\n    static class TaskA {\n        long c;\n        int a, b, q;\n        public void call(InputReader in, PrintWriter out) {\n            a = in.nextInt();\n            b = in.nextInt();\n            q = in.nextInt();\n\n            if(a>b){\n                c = a;\n                a = b;\n                b = (int)c;\n            }\n\n            c = lcm(a,b);\n\n            long l, r ,ans;\n\n            for (int i = 0; i < q; i++) {\n                l = in.nextLong();\n                r = in.nextLong();\n\n                if(a==b){\n                    out.print(0+\" \");\n                    continue;\n                }\n\n                long d = r/c;\n                ans = d*b;\n                ans-= Math.max((d*c + b-1) - r  , 0);\n\n                d = (l-1)/c;\n                ans -= d*b;\n                ans += Math.max((d*c + b-1) - l +1 , 0);\n\n                out.print(r-l+1 - ans+\" \");\n            }\n            out.println();\n        }\n    }\n\n    static int gcd(int a, int b)\n    {\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    static int lcm(int a, int b)\n    {\n        return (a / gcd(a, b)) * b;\n    }\n\n    static class answer implements Comparable<answer>{\n        int a;\n        int b;\n\n        public answer(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(answer o) {\n            return this.a - o.a;\n        }\n    }\n\n    static class answer1 implements Comparable<answer1>{\n        int a, b, c;\n\n        public answer1(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n\n        }\n\n        @Override\n        public int compareTo(answer1 o) {\n            return this.a - o.a;\n        }\n    }\n\n    static long gcd(long a, long b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static void sort(long[] a) {\n        ArrayList<Long> l=new ArrayList<>();\n        for (long i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n\n    static final Random random=new Random();\n\n    static void shuffleSort(int[] a) {\n        int n=a.length;\n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n), temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        Arrays.sort(a);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nint1 = lambda x: int(x) - 1\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\n\ndef solve():\n    a, b, q = nm()\n    qu = [nl() for _ in range(q)]\n    g = [int((i%a)%b != (i%b)%a) for i in range(a*b+1)]\n    for i in range(a*b):\n        g[i+1] += g[i]\n    def cnt(x):\n        return (x//(a*b))*g[a*b] + g[x%(a*b)]\n    print(*[cnt(r) - cnt(l-1) for l, r in qu])\n\n\n# solve()\n\nT = ni()\nfor _ in range(T):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a%b)\n\ndef lcm(a, b):\n    return a*b//gcd(a, b)\n\nt = int(input())\nfor k in range (t):\n    a, b, q = map(int, input().split())\n    if b > a:\n        temp = b\n        b = a\n        a = temp\n    least_common_multiple = lcm(a, b)\n    for i in range (q):\n        start, end = map(int, input().split())\n        total = end - start + 1\n        starting = start//least_common_multiple\n        ending = end//least_common_multiple\n        answer = 0\n\n        if starting*least_common_multiple + a >= start:\n            answer += starting*least_common_multiple + a - start\n        if ending*least_common_multiple + a <= end:\n            answer += a\n        else:\n            answer += end - ending*least_common_multiple + 1\n        \n        answer += (ending-starting-1)*a\n\n        if i != q-1:\n            print(max(0, total-answer), end = ' ')\n        else:\n             print(max(0, total-answer))\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class main\n{\n static Hashtable<Integer ,Integer>hash=new Hashtable<>();\n static int dp[][];\n static int ans[]=new int[2001];\n\tpublic static void main(String args[]) throws java.lang.Exception\n\t{\n\t  \n \tBufferedReader inp = new BufferedReader (new InputStreamReader(System.in));\nint t=Integer.parseInt(inp.readLine());\nwhile(t-->0)\n{\n  String h[]=inp.readLine().split(\" \");\n  int a=Integer.parseInt(h[0]);\n  int b=Integer.parseInt(h[1]);\n  int q=Integer.parseInt(h[2]);\n  int lc=lcm(a,b);\n  StringBuilder sb=new StringBuilder();\n  for(int i=0;i<q;i++)\n  {\n  \t  \n\n  \tString hh[]=inp.readLine().split(\" \");\n  \tlong l=Long.parseLong(hh[0]);\n  \tlong r=Long.parseLong(hh[1]);\n  \tif(r<Math.max(a,b) || (a==1 || b==1) ||(a==b) ||(Math.max(b,a)%Math.min(a,b)==0)){sb.append(0+\" \");}\n  \telse{\n\nl=Math.max(Math.max((l/lc)*lc+Math.max(a,b),Math.max(a,b)),l);\nlong g=((r/lc)*lc)+Math.max(a,b)-1;\nlong u=0;\nif(g>r){u+=g-r;}\n// System.out.println((-(r)/lc+l/lc)*Math.max(a,b)+\" \"+u+\" \"+(r-l+1));\nlong kk=l<=r?r-l+1+(-(r)/lc+l/lc)*Math.max(a,b)+u:0;;\n  \tsb.append(kk+\" \");\n  long c=0;\n//   \tfor(long j=l;j<=r;j++){if(((j%a)%b)!=((j%b)%a)){System.out.print(j+\" \");c+=1;}}\n// System.out.println((kk==c)+\" \"+kk+\" \"+c);\n  }\n  \t\n  }\n  System.out.println(sb);\n  // System.out.println(sb);\n}\n\t   \n\t   \n\t}\n\tstatic int lcm(int a, int b)\n\t{\n\t\treturn a*b/gcd(Math.min(a,b),Math.max(b,a));\n\t}\n\tstatic int gcd(int a, int b)\n\t{\n\t\tif(a==0){return b;}\n\t\treturn gcd(b%a,a);\n\t}\n\n}\n\n  class Pair\n  {\n     String a;\n     int b;\n     Pair(String c , int d){a=c;b=d;}\n  }"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    a, b, q = map(int, input().split())\n    check = [0 for _ in range(a * b)]\n    for i in range(1, a * b):\n        check[i] = check[i - 1]\n        if (i % a) % b != (i % b) % a:\n            check[i] += 1\n    for _ in range(q):\n        ans = 0\n        l, r = map(int, input().split())\n        ch = l % (a * b)\n        if ch == 0:\n            ch = b * a\n        helpp = (l - 1) % (a * b)\n        ch = a * b - ch\n        if l + ch <= r:\n            l += ch\n            ans += check[a * b - 1] - check[helpp]\n            ch = r - l\n            ans += check[-1] * (ch // (a * b))\n            ch = ch % (a * b)\n            ans += check[ch]\n        else:\n            ans = check[r % (a * b)] - check[(l - 1) % (a * b)]\n        print(ans, end=' ')\n    print()"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\n\n\ndef gcd(a,b):\n    while (b):\n        a,b=b,a%b\n    \n    return a\n\ndef lcm(a,b):\n    return (a*b)//gcd(a,b);  \n\nt=int(input())\nfor _ in range(t):\n    a,b,q=map(int,input().split(' '))\n    ans=[]\n    for i in range(q):\n        l,r=map(int,input().split(\" \"))\n        count=0\n        m=lcm(a,b)\n        \n        if l>max(a,b):\n            x=r//(m)\n            #print(x)\n            \n            y=(l-1)//m\n            if y*m+max(a,b)-1>=l:\n                l=y*m+max(a,b)\n                #print(l,\"lll\")\n                \n            \n            \n            z=0\n            if r%m==0:\n                x-=1\n                z+=1\n            else:\n                x1=x*(m)+max(a,b)-1\n                if x1>=r:\n                    r=x*m-1\n                    x-=1\n            \n            x=x-(l-1)//m\n            x1=x*(max(a,b))+z\n            ans.append(r-l-x1+1)\n        else:\n            if r>=max(a,b):\n                x=r//m\n                z=0\n                if r%m==0:\n                    x-=1\n                    z+=1\n                else:\n                    x1=x*(m)+max(a,b)-1\n                    if x1>=r:\n                        r=x*m-1\n                        x-=1\n                \n                x1=x*(max(a,b))+z\n                ans.append(r-x1-max(a,b)+1)\n            else:\n                ans.append(0)\n    \n    print(*ans)\n                    \n    "
        },
        {
            "language": 3,
            "solution": "from math import gcd\ndef rn():\n    a = int(input())\n    return a\ndef rl():\n    a = list(map(int, input().split()))\n    return a\nfor _ in range(int(input())):\n    [a,b,q] = rl()\n    c = int((a*b)//gcd(a,b))\n    l = []\n    for i in range(c):\n        if (i%a)%b != (i%b)%a:\n            l.append(1)\n        else:\n            l.append(0)\n    lf = l.copy()\n    lb = l.copy()\n    for i in range(1,c):\n        lf[i] += lf[i-1]\n    for i in range(c-2,-1,-1):\n        lb[i] += lb[i+1]\n    tt = lb[0]\n    for _ in range(q):\n        ans = 0\n        [x,y] = rl()\n        bg = (x+c)-(x+c)%c\n        sm = y-y%c\n        ans += tt*((sm-bg)//c)\n        ans += lb[x%c]\n        ans += lf[y%c]\n        print(ans,end=' ')\n    print('')\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nll gcd(ll x, ll y) { return y ? gcd(y, x % y) : x; }\nll lcm(ll x, ll y) { return x / gcd(x, y) * y; }\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    vector<ll> x(lcm(a, b));\n    for (int i = 1; i <= x.size(); i++) {\n      if (i % a % b != i % b % a) x.at(i - 1)++;\n    }\n    for (int i = 1; i < x.size(); i++) x.at(i) += x.at(i - 1);\n    while (q--) {\n      ll l, r;\n      cin >> l >> r;\n      l--;\n      ll low = 0, high = 0;\n      low += l / lcm(a, b) * x.back();\n      if (l % lcm(a, b) > 0) low += x.at(l % lcm(a, b) - 1);\n      high += r / lcm(a, b) * x.back();\n      if (r % lcm(a, b) > 0) high += x.at(r % lcm(a, b) - 1);\n      cout << high - low;\n      if (q > 0) cout << \" \";\n    }\n    cout << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef gcd(a, b): return gcd(b, a % b) if b else abs(a)\ndef lcm(a, b): return abs(a // gcd(a, b) * b)\n\nt = int(sys.stdin.readline().rstrip())\n\ndef main():\n  for _ in range(t):\n    a, b, q = map(int, sys.stdin.readline().split())\n    if a > b: a, b = b, a\n    L = lcm(a, b)\n    res = []\n    for _ in range(q):\n      l, r = map(int, sys.stdin.readline().split())\n      (c, d), (e, f) = divmod(r, L), divmod(l-1, L)\n      tmp = c * (L - b) + max(d - b + 1, 0)\n      tmp -= e * (L - b) + max(f - b + 1, 0)\n      res.append(tmp)\n    print(*res, sep=' ')\n\nif __name__ == '__main__':\n  main()"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    ans = [0 for j in range(a * b + 1)]\n    for j in range(1, a * b + 1):\n        if ((j % a) % b != (j % b) % a):\n            ans[j] = 1\n    for j in range(1, a * b + 1):\n        ans[j] += ans[j - 1]\n    for j in range(q):\n        l, r = map(int, input().split())\n        if (r // (a * b) == l // (a * b)):\n            lll = l % (a * b)\n            if (lll == 0):\n                lll = 1\n            print(ans[r % (a * b)] - ans[lll - 1], end = ' ')\n            continue\n        ll = (l + a * b - 1) // (a * b)\n        rr = r // (a * b)\n        answ = ans[-1] * (max(0, rr - ll))\n        lll = l % (a * b)\n        if (lll == 0):\n            lll = a * b\n        answ += ans[a * b - 1] - ans[lll - 1]\n        answ += ans[(r % (a * b))]\n        print(answ, end = ' ')\n    print(' ')\n"
        },
        {
            "language": 3,
            "solution": "# Why do we fall ? So we can learn to pick ourselves up.\n\nfrom math import gcd\ndef lcm(a,b):\n    return (a*b)//gcd(a,b)\n\ndef solve(n):\n    return (lc-b)*(n//lc) + max(0,n%lc-b+1)\n\nt = int(input())\nfor tc in range(0,t):\n    aa,bb,q = map(int,input().split())\n    a,b = min(aa,bb),max(aa,bb)\n    lc = lcm(a,b)\n    ans = []\n    for i in range(0,q):\n        l,r = map(int,input().split())\n        ans1,ans2 = solve(r),solve(l-1)\n        ans.append(ans1-ans2)\n    print(*ans)\n\n\n\n\n\n\"\"\"\n\n2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n\n1\n7 10 1\n100 200\n\n\n\n\n\n\"\"\"\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n#asdf l;jasdifn a;sdlkfj asdfasdg asdrewasdf\ndef gcd(x, y):\n    if x < y:\n        x, y = y, x\n    while y:\n        x, y = y, x % y\n    return x\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    lcm = a * b // gcd(a,b)\n    g = gcd(a,b)\n    m = max(a,b)\n\n    def f(x):\n        total = x // lcm\n        extra = x % lcm\n        return x - (m * total + min(m,extra))\n        \n    \n    out = [0] * q\n    for i in range(q):\n        l, r = map(int, input().split())\n        out[i] = f(r + 1) - f(l)\n        \n    print(*out, sep = ' ')"
        },
        {
            "language": 3,
            "solution": "import math\n\nt = int(input())\n\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    lr = []\n    ans = []\n    \n    for i in range(q):\n        lr.append(list(map(int, input().split())))\n        \n    for i in lr:\n        if i[1] < a or i[1] < b or b%a == 0 or a%b == 0:\n            ans.append(0)\n        else:\n            lc = (a*b)//math.gcd(a, b)\n            lb = max(i[0], max(a, b))\n            rb = i[1]\n            \n            if lb%lc < max(a, b):\n                lb += max(a, b)-(lb%lc)\n            if rb%lc < max(a, b):\n                rb = rb-(rb%lc)-1\n            \n            m = rb//lc - lb//lc\n            m *= max(a,b)\n\n            if lb%lc < max(a,b):\n                m -= lb%lc\n\n            if rb%lc < max(a,b):\n                m -= max(a, b) - rb%lc - 1\n\n            ans.append(1+rb-lb-m)\n            \n    print(\" \".join(map(str, ans)))\n            \n            \n    "
        },
        {
            "language": 1,
            "solution": "'''input\n2\n4 10 1\n1 100\n7 10 2\n7 8\n100 200\n'''\nfrom sys import stdin,stdout\nI = lambda : map(int,stdin.readline().split())\nimport bisect\nimport math\n \ndef gcd(a,b): \n\tif (b == 0): \n\t\treturn a \n\treturn gcd(b, a%b) \n \nfor _ in range(input()):\n\ta,b,q = I()\n\tx = min(a,b)\n\ty = max(a,b)\n\tg = x/gcd(x,y)\n\t# print g,y\n\tfor v in range(q):\n\t\tl,r = I()\n\t\tcnt = 0\n\t\tans = 0\n\t\tif ((l/(g*y))*(g*y)+y) > l:\n\t\t\tans += (((l/(g*y))*(g*y)+y) - l)\n\t\t\t# print (((l/(g*y)*(g*y))+y)),\n\t\tif ((r/(g*y))*(g*y)+y) > r:\n\t\t\tans -= (((r/(g*y))*(g*y)+y) - r-1)\n\t\t\t# print (((r/(g*y)*(g*y))+y)),\n\t\tans+=((((r/(g*y))) - ((l/(g*y))))*y)\n\t\tprint (r-l+1) - ans,\n\t\t# for i in range(l,r+1):\n\t\t# \tif (i%a)%b != (i%b)%a:\n\t\t# \t\tcnt+=1\n\t\t\t\t# print i,\n\t\t# print cnt\n\tprint"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\n//import Number_theory.pair;\n\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\n//import graph_representation.edge;\npublic class hacker49 {\n\tpublic static int r1=0;\n\tstatic class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n\n\tstatic ArrayList<Integer>[] f=new ArrayList[1001];\n\tpublic static void main(String[] args) {\n\t\tOutputStream outputStream =System.out;\n\t    PrintWriter out =new PrintWriter(outputStream);\n\t\tFastReader s=new FastReader();\nint t=s.nextInt();\nwhile(t>0) {\n\tlong a=s.nextLong();\n\tlong b=s.nextLong();\n\tlong q=s.nextLong();\n\tlong gcd=GCD(a,b);\n\tlong lcm=(a*b)/gcd;\n\twhile(q>0) {\n\t\tlong l=s.nextLong();\n\t\tlong r=s.nextLong();\n\t\tlong ans=0;\n\t\tif(a==b) {\n\t\t\tout.print(0+\" \");\n\t\t}else {\n\t\t\tlong max=Math.max(a, b);\n\t\t\t\n\t\t\tif(l%lcm!=0) {\n\t\t\t\tlong h=(l/lcm)+1;\n\t\t\t\th*=lcm;\n\t\t\t\tif(h<=r) {\n\t\t\t\tans+=(Math.max(0,h-Math.max(l,h-(lcm-max))));\n//\t\t\t\tSystem.out.println(ans);\n\t\t\t\tif(h!=r) {\n\t\t\t\t\tlong f=r/lcm;\n\t\t\t\t\th/=lcm;\n\t\t\t\t\tf-=h;\n\t\t\t\t\tans+=f*(lcm-max);\n//\t\t\t\t\tSystem.out.println(ans);\n\t\t\t\t\tif(r%lcm!=0) {\n\t\t\t\t\t\tlong p=r/lcm+1;\n\t\t\t\t\t\tlong z=p*lcm;\n\t\t\t\t\t\tans+=(Math.max(0, r-(z-(lcm-max))+1));\n\t\t\t\t\t}\n\t\t\t\t}\n//\t\t\t\tSystem.out.println(ans);\n\t\t\t}else {\n\t\t\t\tans+=Math.max(0, (r-Math.max(l, h-(lcm-max))+1));\n\t\t\t}\n\t\t\t\n\t\t\t}else {\n\t\t\t\tlong f=r/lcm;\n\t\t\t\tl/=lcm;\n\t\t\t\tf-=l;\n\t\t\t\tans+=f*(lcm-max);\n\t\t\t\tif(r%lcm!=0) {\n\t\t\t\t\tlong p=r/lcm+1;\n\t\t\t\t\tlong z=p*lcm;\n\t\t\t\t\tans+=(Math.max(0, r-(z-(lcm-max))+1));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\tout.print(ans+\" \");\n\t\t}\n\t\n\t\tq--;\n\t}\nout.println();\t\t\n\tt--;\n}\nout.close();\n\t}\n\tpublic static int lower_bound(ArrayList<Long> a ,int n,long x) {\n\t\tint l=0;\n\t\tint r=n;\n\t\twhile(r>l+1) {\n\t\t\tint mid=(l+r)/2;\n\t\t\tif(a.get(mid)<=x) {\n\t\t\t\tl=mid;\n\t\t\t}else {\n\t\t\t\tr=mid;\n\t\t\t}\n\t\t}\n\t\treturn l;\n\t\t\t\t\n\t}\n\n\tpublic static int[] is_prime=new int[1000001];\n\tpublic static ArrayList<Long> primes=new ArrayList<>();\n \tpublic static void sieve() {\n\t\tlong maxN=1000000;\n\t\tfor(long i=1;i<=maxN;i++) {\n\t\t\tis_prime[(int) i]=1;\n\t\t}\n\t\tis_prime[0]=0;\n\t\tis_prime[1]=0;\n\t\tfor(long i=2;i*i<=maxN;i++) {\n\t\t\tif(is_prime[(int) i]==1) {\n//\t\t\t\tprimes.add((int) i);\n\t\t\t\tfor(long j=i*i;j<=maxN;j+=i) {\n\t\t\t\t\tis_prime[(int) j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(long i=0;i<=maxN;i++) {\n\t\t\tif(is_prime[(int) i]==1) {\n\t\t\t\tprimes.add(i);\n\t\t\t}\n\t\t}\n//\t\t\n\t}\n\tstatic class pair implements Comparable<pair>{\n\t\tprivate long a;\n\t\tpair(long a){\n\t\t\tthis.a=a;\n\t\t}\n\t\tpublic int compareTo(pair o) {\n\t\t\treturn Long.compare(this.a, o.a);\n\t\t}\n\t}\n\t\n\t\n\t\n\t\n\tstatic int[] vis=new int[1001];\n\tstatic int[] deg=new int[1001];\n\tstatic int[] sub=new int[1001];\n\tstatic int dfs(int node) {\n\t\tvis[node]=1;\t\n\t\tfor(int i=0;i<f[node].size();i++) {\n\t\t\tif(vis[f[node].get(i)]==0) {\n\t\t\t\tsub[node]+=dfs(f[node].get(i));\n\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn (sub[node]+1);\n\t\t\n\t}\n//\tstatic class pair implements Comparable<pair>{\n//\t\tprivate int l;\n//\t\tprivate int r;\n//\t\tprivate long c;\n//\t\tpair(int l,int r,long c){\n//\t\t\tthis.l=l;\n//\t\t\tthis.r=r;\n//\t\t\tthis.c=c;\n//\t\t}\n//\t\tpublic int compareTo(pair o) {\n//\t\t\treturn Long.compare(this.c, o.c);\n//\t\t}\n//\t}\n\t\n\t\n\t\t\tpublic static long[] merge_sort(long[] A, int start, int end) {\n\t\tif (end > start) {\n\t\t\tint mid = (end + start) / 2;\n\t\t\tlong[] v = merge_sort(A, start, mid);\n\t\t\tlong[] o = merge_sort(A, mid + 1, end);\n\t\t\treturn (merge(v, o));\n\t\t} else {\n\t\t\tlong[] y = new long[1];\n\t\t\ty[0] = A[start];\n\t\t\treturn y;\n\t\t}\n\t}\n\tpublic static long[] merge(long a[], long b[]) {\n//\t\tint count=0;\n\t\tlong[] temp = new long[a.length + b.length];\n\t\tint m = a.length;\n\t\tint n = b.length;\n\t\tint i = 0;\n\t\tint j = 0;\n\t\tint c = 0;\n\t\twhile (i < m && j < n) {\n\t\t\tif (a[i] < b[j]) {\n\t\t\t\ttemp[c++] = a[i++];\n\t\t\t\n\t\t\t} else {\n\t\t\t\ttemp[c++] = b[j++];\n\t\t\t}\n\t\t}\n\t\twhile (i < m) {\n\t\t\ttemp[c++] = a[i++];\n\t\t}\n\t\twhile (j < n) {\n\t\t\ttemp[c++] = b[j++];\n\t\t}\n\t\treturn temp;\n\t}\n\t\n\t\n\tpublic static long im(long a) {\n\t\treturn binary_exponentiation_1(a,mod-2)%mod;\n\t}\n\tpublic static long binary_exponentiation_1(long a,long n) {\n\t\tlong res=1;\n\t\twhile(n>0) {\n\t\t\tif(n%2!=0) {\n\t\t\t\tres=((res)%(1000000007) * (a)%(1000000007))%(1000000007);\n\t\t\t\tn--;\n\t\t\t}else {\n\t\t\t\ta=((a)%(1000000007) *(a)%(1000000007))%(1000000007);\n\t\t\t\tn/=2;\n\t\t\t}\n\t\t}\n\t\treturn (res)%(1000000007);\n\t\t\n\t}\n\n\tpublic static long[] fac=new long[100001];\n\tpublic static void find_factorial() {\n\t\tfac[0]=1;\n\t\tfac[1]=1;\n\t\tfor(int i=2;i<=100000;i++) {\n\t\t\tfac[i]=(fac[i-1]*i)%(mod);\n\t\t}\n\t}\n\n\t\n\tstatic long mod=1000000007;\n\tpublic static long GCD(long a,long b) {\n\t\tif(b==(long)0) {\n\t\t\treturn a;\n\t\t}\n\t\treturn GCD(b , a%b);\n\t}\n\tstatic long c=0;\n\t\n\t\t\n\t\n}"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\nimport sys, string\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial, gcd, ceil, atan, pi, log2\n# def input(): return sys.stdin.readline()[:-1] # warning not \\n\n# def input(): return sys.stdin.buffer.readline().strip() # warning bytes\ndef input(): return sys.stdin.buffer.readline().decode('utf-8')\n# string.ascii_lowercase\nfrom bisect import bisect_left, bisect_right\nfrom operator import add\nMOD = int(1e9)+7\nINF = float('inf')\n\n# sys.setrecursionlimit(int(1e6))\n\n\n\n\ndef solve():\n    # n = int(input())\n    a, b, q = [int(x) for x in input().split()]\n    n = a * b + 1\n    m = [0] * n\n    for x in range(1, n):\n        if (x % a) % b != (x % b) % a:\n            m[x] = 1\n        m[x] += m[x - 1]\n\n    cur = [0] * q\n    for i in range(q):\n        l, r = [int(x) for x in input().split()]\n        l -= 1\n        ans = r // (a * b) * m[a * b] + m[r % (a * b)]\n        ans -= l // (a * b) * m[a * b] + m[l % (a * b)]\n        cur[i] = ans\n    print(*cur)\n    \n    \n\nT = 1\nT = int(input())\nfor case in range(1,T+1):\n    # try:\n        ans = solve()\n    # except:\n    #     import traceback\n    #     print(traceback.format_exc())\n\n\"\"\"\n\n5\n\n1 1\n1 1 1\n2 2 2 2\n\n0 0 1 1 2\n2 0 1 0 0\n\n1 \n\n2\n\n\"\"\"\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Objects;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Double.parseDouble;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\n\npublic class Solution {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n    static boolean isLocal = false;\n\n    private int gcd(int a, int b) {\n        while (b > 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n\n    long get(long l, int b, int a) {\n        int len = a * (b / gcd(a, b));\n        long ans = (l / len) * (len - b);\n        l %= len;\n        long rest = max(0, l - b + 1);\n        return ans + rest;\n    }\n\n    void Case() throws IOException {\n        int t[] = sort(na(2));\n        int a = t[0], b = t[1], q = nextInt();\n        while (q-- > 0) {\n            long l = nextLong(), r = nextLong();\n            long ans = get(r, b, a) - get(l - 1, b, a);\n            out.print(ans + \" \");\n        }\n        out.println();\n    }\n\n    void solve() throws Exception {\n        int t = nextInt();\n        for (int i = 1; i <= t; i++) {\n            Case();\n        }\n    }\n\n    int min(int x, int y) {\n        return Integer.min(x, y);\n    }\n\n    int max(int x, int y) {\n        return Integer.max(x, y);\n    }\n\n    long min(long x, long y) {\n        return Long.min(x, y);\n    }\n\n    long max(long x, long y) {\n        return Long.max(x, y);\n    }\n\n    int[] sort(int[] arr) {\n        sort(arr, 0, arr.length - 1);\n        return arr;\n    }\n\n    void sort(int arr[], int l, int r) {\n        if (l < r) {\n            int m = (l + r) / 2;\n            sort(arr, l, m);\n            sort(arr, m + 1, r);\n            merge(arr, l, m, r);\n        }\n    }\n\n    void merge(int arr[], int l, int m, int r) {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[l + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[m + 1 + j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            } else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    class Seg implements Comparable<Seg> {\n        int st, end;\n\n        public Seg(int st, int end) {\n            this.st = st;\n            this.end = end;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            Seg seg = (Seg) o;\n            return st == seg.st &&\n                    end == seg.end;\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(st, end);\n        }\n\n        @Override\n        public int compareTo(Seg seg) {\n            return st == seg.st ? Integer.compare(end, seg.end) : Integer.compare(st, seg.st);\n        }\n    }\n\n    private int[] na(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n\n    private long[] nal(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n\n    int nextInt() throws IOException {\n        return parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n\n    String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    public static void main(String[] args) throws Exception {\n        try {\n            if (isLocal) {\n                in = new BufferedReader(new FileReader(\"src/tests/sol.in\"));\n                out = new PrintWriter(new BufferedWriter(new FileWriter(\"src/tests/sol.out\")));\n            } else {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n//            long lStartTime = System.currentTimeMillis();\n            new Solution().solve();\n//            long lEndTime = System.currentTimeMillis();\n//            out.println(\"Elapsed time in seconds: \" + (double) (lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import javax.print.DocFlavor;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class TaskC {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st;\n        PrintWriter pw = new PrintWriter(System.out);\n        \n        try {\n            int t = Integer.parseInt(br.readLine());\n            while(t-->0) {\n                st = new StringTokenizer(br.readLine());\n                int a = Integer.parseInt(st.nextToken());\n                int b = Integer.parseInt(st.nextToken());\n                int q = Integer.parseInt(st.nextToken());\n                long lcm = lcm(a, b);\n                long max = Math.max(a, b);\n                while(q-->0) {\n                    st = new StringTokenizer(br.readLine());\n                    long l = Long.parseLong(st.nextToken());\n                    long r = Long.parseLong(st.nextToken());\n\n                    long nums = r-l+1;\n\n\n                        long lbb = l/lcm*lcm;\n                        long lbu = lbb+max;\n                        long rbb = r/lcm*lcm;\n                        long rbu = rbb+max;\n\n                        nums -= (rbb+lcm-lbb)/lcm*max;\n\n                        if(lbu <= l) {\n                            nums += max;\n                        }\n                        else {\n                            nums += l-lbb;\n                        }\n\n                        if(rbu > r) {\n                            nums += rbu-r-1;\n                        }\n\n                        pw.print(nums + \" \");\n                }\n                pw.println();\n            }\n        }\n        finally {\n            pw.flush();\n            pw.close();\n        }\n    }\n\n    static long gcd(long a, long b) {\n        return b==0?a:gcd(b, a%b);\n    }\n\n    static long lcm(long a, long b) {\n        return a*b/gcd(a, b);\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "'''input\n2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n'''\n\n\n \nfrom bisect import bisect_right as bl\nfrom random import randint as R\nRI = lambda : [int(_x) for _x in raw_input().split()]\ndef gcd(a,b):\n\tif b ==0:\n\t\treturn a\n\treturn gcd(b,a%b)\ndef lcm(a,b):\n\treturn a*b/gcd(a,b)\ndef get2(l,lc):\n\tm = ((l+1)/lc)*max(a,b)\n\trem = (l+1)%lc\n\treturn min(rem,max(a,b))+m\n\nfor _ in range(input()):\n\ta,b,q = RI()\n\tlc = lcm(a,b)\n\tfor i in range(q):\n\t\tl,r = RI()\n\t\tprint r-l+1 - (get2(r,lc)-get2(l-1,lc)),\n\tprint \n\n\n\t"
        },
        {
            "language": 3,
            "solution": "#p.sort(key=lambda x:(-x[0],-x[1]))\n#alp='#abcdefghijklmnopqrstuvwxyz'\nfor t in range(int(input())):\n    #n=int(input())\n    a,b,Q=map(int,input().split())\n    #l=list(map(int,input().split()))\n    t=a*b\n    cnt=0\n    dp=[0]\n    for i in range(1,t+1):\n        if ((i%a)%b)!=((i%b)%a):\n            cnt+=1\n        dp.append(cnt)\n    ans=[]\n    for i in range(Q):\n        l,r=map(int,input().split())\n        l-=1\n        cnt1=0\n        '''if a==1 or b==1:\n            ans.append(0)\n            continue'''\n            \n\n        cnt1=dp[l-(l//t)*t]\n\n        cnt2=dp[r-(r//t)*t]\n        p1=l//t\n        p2=r//t\n        #print(p2,p1,cnt,cnt2,cnt1)\n        tmp=((p2-p1)*cnt+cnt2-cnt1)\n        ans.append(tmp)\n    print(*ans)\n    "
        },
        {
            "language": 3,
            "solution": "import sys\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\nt = int(input())\nfor _ in range(t):\n\ta, b, q = map(int, input().split())\n\tans = [0 for _ in range(q)]\n\tres = [0 for _ in range(a*b)]\n\tfor i in range(1, a*b):\n\t\tif (i%a)%b != (i%b)%a:\n\t\t\tres[i] = res[i-1] + 1\n\t\telse:\n\t\t\tres[i] = res[i-1]\n\tdef func(x):\n\t\tquo, mod = x//(a*b), x%(a*b)\n\t\treturn quo * res[-1] + res[mod]\n\tfor i in range(q):\n\t\tl, r = map(int, input().split())\n\t\tans[i] = func(r) - func(l-1)\n\tprint(*ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Objects;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Double.parseDouble;\nimport static java.lang.Integer.max;\nimport static java.lang.Long.max;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\n\npublic class Solution {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n    static boolean isLocal = false;\n\n    long test(long l, int len, int b, int a) {\n        long ans = (l / (b + len)) * len;\n        l %= (b + len);\n        long rest = max(0, l - b + 1);\n        return ans + rest;\n    }\n\n    int getx(int a, int b) {\n        int res = 0, tmp = 0;\n        for (long i = 0; i <= 41000; i++) {\n            if ((i % a) % b != (i % b) % a) tmp++;\n            else tmp = 0;\n            res = max(res, tmp);\n        }\n        return res;\n    }\n\n\n    void solve() throws Exception {\n        int t = nextInt();\n        for (int tt = 1; tt <= t; tt++) {\n            int arr[] = sort(na(2));\n            int a = arr[0], b = arr[1], q = nextInt();\n            int len = getx(a, b);\n            while (q-- > 0) {\n                long l = nextLong(), r = nextLong();\n//            if (b % a == 0) out.print(\"0 \");\n                {\n                    out.print(test(r, len, b, a) - test(l - 1, len, b, a) + \" \");\n//                for (long i = 1; i <= 200; i++) if ((i % a) % b != (i % b) % a) out.print(i + \" \");out.flush();\n                }\n\n            }\n            out.println();\n        }\n    }\n\n    int[] sort(int[] arr) {\n        sort(arr, 0, arr.length - 1);\n        return arr;\n    }\n\n    void sort(int arr[], int l, int r) {\n        if (l < r) {\n            int m = (l + r) / 2;\n            sort(arr, l, m);\n            sort(arr, m + 1, r);\n            merge(arr, l, m, r);\n        }\n    }\n\n    void merge(int arr[], int l, int m, int r) {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[l + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[m + 1 + j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            } else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n\n    private int[] na(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n\n    private long[] nal(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n\n    int nextInt() throws IOException {\n        return parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n\n    String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    public static void main(String[] args) throws Exception {\n        try {\n            if (isLocal) {\n                in = new BufferedReader(new FileReader(\"src/tests/sol.in\"));\n                out = new PrintWriter(new BufferedWriter(new FileWriter(\"src/tests/sol.out\")));\n            } else {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n//            long lStartTime = System.currentTimeMillis();\n            new Solution().solve();\n//            long lEndTime = System.currentTimeMillis();\n//            out.println(\"Elapsed time in seconds: \" + (double) (lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.StringTokenizer;\n// given a, b and q queries\n// each queries consist of 2 integer Li, Ri;\n// find the number of integer between Li, Ri such that ((x % a) % b) != ((x % b ) % a);\n/**\n@author Tran Anh Tai\n Ideas: if (a == b): return 0 directly;\n else WLOG, a > b -> let x = by + d with d is the remainder when x is divided by b;\n hence, the condition is equivalent to (by) not divided by a;\n hence, y is divided by (b / gcd(a, b));\n x = lcm(a, b) * t + d; with d < b;\n //what to do now is calculating the number of x such that by is divided by a; (1)\n Then the answer is the complement of (1) = (total number of number in range [Li, Ri] - (1));\n */\npublic class AnotherCountingProb {\n    public static void main(String[] args) {\n        InputReader in = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        Task solver = new Task();\n        solver.solve(in, out);\n        out.close();\n    }\n    static class Task{\n        public void solve(InputReader in, PrintWriter out) {\n            int test = in.nextInt();\n            int a,b,q;\n            long r, l;\n            for (int i = 0; i < test; i++) {\n                a = in.nextInt();\n                b = in.nextInt();\n                q = in.nextInt();\n                int lcm = (a * b) / gcd(a, b);\n                if (b < a){\n                    b = a;\n                }\n                for (int j = 0; j < q; j++){\n                    l = in.nextLong();\n                    r = in.nextLong();\n                    long au = 0;\n                    for (int re = 0; re < b; re++){\n                        au += (cnt(r, re, lcm) - cnt(l - 1, re, lcm));\n                    }\n                    // the result is the total number - (the number of number in range[l, r] that satisfied the reverse condition);\n                    long result = (r - l + 1) - au;\n                    out.print(result + \" \");\n                }\n                out.println();\n            }\n        }\n        // count the total number of integer x < l such that (x % a == d);\n        public static long cnt(long l, int d, int a){\n            if (l < d){\n                return 0;\n            }\n            int start = 0;\n            long end = (l - d) / a;\n            return (end - start + 1);\n        }\n        // gcd function\n        public static int gcd(int a, int b){\n            if (a == 0){\n                return b;\n            }\n            else{\n                return gcd(b % a, a);\n            }\n        }\n    }\n\n    static class InputReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public InputReader(InputStream stream) {\n            br = new BufferedReader(new InputStreamReader(stream));\n        }\n\n        public String nextToken() {\n            while (st == null || !st.hasMoreTokens()) {\n                String line = null;\n                try {\n                    line = br.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n                if (line == null) {\n                    return null;\n                }\n                st = new StringTokenizer(line);\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(nextToken());\n        }\n        public long nextLong(){\n            return Long.parseLong(nextToken());\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\nimport java.io.Closeable;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Thread thread = new Thread(null, new TaskAdapter(), \"\", 1 << 27);\n        thread.start();\n        thread.join();\n    }\n\n    static class TaskAdapter implements Runnable {\n        @Override\n        public void run() {\n            InputStream inputStream = System.in;\n            OutputStream outputStream = System.out;\n            FastInput in = new FastInput(inputStream);\n            FastOutput out = new FastOutput(outputStream);\n            CYetAnotherCountingProblem solver = new CYetAnotherCountingProblem();\n            int testCount = Integer.parseInt(in.next());\n            for (int i = 1; i <= testCount; i++)\n                solver.solve(i, in, out);\n            out.close();\n        }\n    }\n\n    static class CYetAnotherCountingProblem {\n        public void solve(int testNumber, FastInput in, FastOutput out) {\n            int a = in.readInt();\n            int b = in.readInt();\n            if (a < b) {\n                int tmp = a;\n                a = b;\n                b = tmp;\n            }\n            int c = (int) LCMs.lcm(a, b);\n            int q = in.readInt();\n            while (q-- > 0) {\n                long l = in.readLong();\n                long r = in.readLong();\n\n                long ans = solve(a, b, c, r) - solve(a, b, c, l - 1);\n                out.append(r - l + 1 - ans).append(' ');\n            }\n            out.println();\n        }\n\n        public long solve(long a, long b, long c, long n) {\n            long block = n / c;\n            long ans = block * a;\n            long remain = n % c;\n            if (remain >= a) {\n                ans += a;\n            } else {\n                ans += remain + 1;\n            }\n            return ans;\n        }\n\n    }\n\n    static class GCDs {\n        private GCDs() {\n        }\n\n        public static long gcd(long a, long b) {\n            return a >= b ? gcd0(a, b) : gcd0(b, a);\n        }\n\n        private static long gcd0(long a, long b) {\n            return b == 0 ? a : gcd0(b, a % b);\n        }\n\n    }\n\n    static class FastOutput implements AutoCloseable, Closeable, Appendable {\n        private StringBuilder cache = new StringBuilder(10 << 20);\n        private final Writer os;\n\n        public FastOutput append(CharSequence csq) {\n            cache.append(csq);\n            return this;\n        }\n\n        public FastOutput append(CharSequence csq, int start, int end) {\n            cache.append(csq, start, end);\n            return this;\n        }\n\n        public FastOutput(Writer os) {\n            this.os = os;\n        }\n\n        public FastOutput(OutputStream os) {\n            this(new OutputStreamWriter(os));\n        }\n\n        public FastOutput append(char c) {\n            cache.append(c);\n            return this;\n        }\n\n        public FastOutput append(long c) {\n            cache.append(c);\n            return this;\n        }\n\n        public FastOutput println() {\n            cache.append(System.lineSeparator());\n            return this;\n        }\n\n        public FastOutput flush() {\n            try {\n                os.append(cache);\n                os.flush();\n                cache.setLength(0);\n            } catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n            return this;\n        }\n\n        public void close() {\n            flush();\n            try {\n                os.close();\n            } catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n        }\n\n        public String toString() {\n            return cache.toString();\n        }\n\n    }\n\n    static class FastInput {\n        private final InputStream is;\n        private StringBuilder defaultStringBuf = new StringBuilder(1 << 13);\n        private byte[] buf = new byte[1 << 20];\n        private int bufLen;\n        private int bufOffset;\n        private int next;\n\n        public FastInput(InputStream is) {\n            this.is = is;\n        }\n\n        private int read() {\n            while (bufLen == bufOffset) {\n                bufOffset = 0;\n                try {\n                    bufLen = is.read(buf);\n                } catch (IOException e) {\n                    bufLen = -1;\n                }\n                if (bufLen == -1) {\n                    return -1;\n                }\n            }\n            return buf[bufOffset++];\n        }\n\n        public void skipBlank() {\n            while (next >= 0 && next <= 32) {\n                next = read();\n            }\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public int readInt() {\n            int sign = 1;\n\n            skipBlank();\n            if (next == '+' || next == '-') {\n                sign = next == '+' ? 1 : -1;\n                next = read();\n            }\n\n            int val = 0;\n            if (sign == 1) {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 + next - '0';\n                    next = read();\n                }\n            } else {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 - next + '0';\n                    next = read();\n                }\n            }\n\n            return val;\n        }\n\n        public long readLong() {\n            int sign = 1;\n\n            skipBlank();\n            if (next == '+' || next == '-') {\n                sign = next == '+' ? 1 : -1;\n                next = read();\n            }\n\n            long val = 0;\n            if (sign == 1) {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 + next - '0';\n                    next = read();\n                }\n            } else {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 - next + '0';\n                    next = read();\n                }\n            }\n\n            return val;\n        }\n\n        public String readString(StringBuilder builder) {\n            skipBlank();\n\n            while (next > 32) {\n                builder.append((char) next);\n                next = read();\n            }\n\n            return builder.toString();\n        }\n\n        public String readString() {\n            defaultStringBuf.setLength(0);\n            return readString(defaultStringBuf);\n        }\n\n    }\n\n    static class LCMs {\n        private LCMs() {\n        }\n\n        public static long lcm(long x, long y) {\n            return x / GCDs.gcd(x, y) * y;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nt = int(stdin.readline())\n\nfor _ in range(t):\n    a, b, q = map(int, stdin.readline().split())\n\n    ab = a * b\n\n    counts = [0]\n    for x in range(1, ab):\n        counts.append(counts[-1])\n        if (x%a)%b != (x%b)%a:\n            counts[-1] += 1\n    \n    for __ in range(q):\n        l, r = map(int, stdin.readline().split())\n\n        count_r = counts[-1] * (r // ab) + counts[r % ab]\n        count_l = counts[-1] * ((l - 1) // ab) + counts[(l-1) % ab]\n        count = str(count_r - count_l)\n\n        stdout.write(count + \" \")\n    \n    stdout.write('\\n')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long t, a, b, q, l, r, l0, r0, mi, ma, tot, ans, x[40005];\nlong long calc2(long long r) {\n  int pos = lower_bound(x + 1, x + tot + 1, r) - x;\n  return x[pos] == r ? pos : pos - 1;\n}\nlong long calc1(long long l) {\n  return tot + 1 - (lower_bound(x + 1, x + tot + 1, l) - x);\n}\nint main() {\n  for (scanf(\"%lld\", &t); t--;) {\n    scanf(\"%lld%lld%lld\", &a, &b, &q);\n    mi = a * b + 1, ma = -1, tot = 0;\n    for (long long i = 1; i <= a * b; i++)\n      if (i % a % b != i % b % a)\n        mi = min(mi, i), ma = max(ma, i), x[++tot] = i;\n    while (q--) {\n      scanf(\"%lld%lld\", &l, &r);\n      if (ma == -1) {\n        printf(\"0 \");\n        continue;\n      }\n      l0 = l / (a * b), r0 = r / (a * b), l %= (a * b), r %= (a * b);\n      printf(\"%lld \", (r0 - l0 - 1) * tot + calc1(l) + calc2(r));\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C324C\n{\n\nprivate static StringTokenizer st;\n    \n    public static void nextLine(BufferedReader br) throws IOException\n    {\n        st = new StringTokenizer(br.readLine());\n    }\n    \n    public static int nextInt()\n    {\n        return Integer.parseInt(st.nextToken());\n    }\n    \n    public static String next()\n    {\n        return st.nextToken();\n    }\n    \n    public static long nextLong()\n    {\n        return Long.parseLong(st.nextToken());\n    }\n\n    public static double nextDouble()\n    {\n        return Double.parseDouble(st.nextToken());\n    }\n    \n    public static void main(String[] args) throws IOException\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        nextLine(br);\n        int t=nextInt();\n        while(t!=0){\n        \tnextLine(br);\n        \tlong a=nextLong();\n        \tlong b=nextLong();\n        \tlong q=nextLong();\n        \t\n        if(a>b){\n        \ta=a^b;\n  \tb=a^b;\n  \ta=a^b;\n        }\n        long lc=a*b;\n        long gc=gcd(a,b);\n        lc=lc/gc;\n        while(q!=0){\n        \tnextLine(br);\n        \tlong l=nextLong();\n        \tlong r=nextLong();\n        \tif(lc==b||r<b){\n        \t\tSystem.out.print(\"0 \");\n        \t\tq--;\n        \t\tcontinue;\n        \t}\n        \tlong not=find(r,lc,b);\n        \tif(l>1) not-=find(l-1,lc,b);\n        \tSystem.out.print(not+\" \");\n        \tq--;\n        }\n        \tSystem.out.println();\n        \tt--;\n        }\n         \n    \n    }\n  \t\n  static long gcd(long a,long b){\n  \tif(b==0)\n  \treturn a;\n  \t\n  \treturn gcd(b,a%b);\n  }\n  \n  static long find(long r,long lc,long b){\n  \tlong blo=r/lc;\n  \tlong last=blo*lc;\n  \tlong not=r;\n  \tif(blo!=0){\n  \t\tnot=not-(blo-1)*b;\n  \t\tnot=not-(long)Math.min(b,r-last+1);\n  \t}\n  \treturn not-(long)Math.min(r,(b-1));\n  }\n}\n    "
        },
        {
            "language": 3,
            "solution": "import math\nimport os,io\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\ndef findv(lcm,l,r,b):\n    p = max(min(r,b),l)\n    s = r-p+1\n    x1 = p//lcm\n    x2 = r//lcm\n    if x1*lcm+b > p:\n        s -= b-p%lcm\n    x1 += 1\n    s -= b*(x2-x1+1) if (x2*lcm+b <= r) else (b*(x2-x1)+r%lcm+1)\n    # if x2*lcm+b <= r:\n    #     s -= b*(x2-x1+1)\n    # else:\n    #     s -= b*(x2-x1)+ r%lcm + 1\n    return s\n\ncases = int(input())\nfor t in range(cases):\n    a,b,q = list(map(int,input().split()))\n    a,b = min(a,b),max(a,b)\n    a = (a*b)//math.gcd(a,b)\n    out = []\n    for i in range(q):\n        l,r = list(map(int,input().split()))\n        if b>r:\n            out.append(0)\n        else:\n            out.append(findv(a, l, r, b))\n    print(*out)"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef max(x, y):\n    if (x > y):\n        return x\n    return y\n    \n\ndef calc(p, a, b):\n    ans = (p - p % (a * b // gcd(a, b))) // (a * b // gcd(a, b)) * int(max(a, b))\n    cur = (p - p % (a * b // gcd(a, b)))\n    ans += int(max(a, b))\n    if (cur + int(max(a, b)) - 1 > p):\n        ans -= (cur + int(max(a, b)) - 1 - p)\n    return ans\n    \nt = int(input())\nwhile t > 0:\n    t -= 1\n    a, b, q = input().split()\n    a = int(a)\n    b = int(b)\n    if (a > b):\n        p = a\n        a = b\n        b = p\n    q = int(q)\n    while q > 0:\n        q -= 1\n        l, r = input().split()\n        l = int(l)\n        r = int(r)\n        print((r - l + 1) - (int(calc(r, a, b)) - int(calc(l - 1, a, b))), end = ' ')\n        \n    print(end = '\\n')"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\n\npublic class cf_edu86 {\n\n\tstatic class Reader {\n\n\t\tfinal private int BUFFER_SIZE = 1 << 12;\n\t\tboolean consume = false;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer, bytesRead;\n\t\tprivate boolean reachedEnd = false;\n\n\t\tpublic Reader() {\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = 0;\n\t\t\tbytesRead = 0;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\treturn !reachedEnd;\n\t\t}\n\n\t\tprivate void fillBuffer() throws IOException {\n\t\t\tbytesRead = System.in.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\tif (bytesRead == -1) {\n\t\t\t\tbuffer[0] = -1;\n\t\t\t\treachedEnd = true;\n\t\t\t}\n\t\t}\n\n\t\tprivate void consumeSpaces() throws IOException {\n\t\t\twhile (read() <= ' ' && reachedEnd == false)\n\t\t\t\t;\n\t\t\tbufferPointer--;\n\t\t}\n\n\t\tprivate byte read() throws IOException {\n\t\t\tif (bufferPointer == bytesRead) {\n\t\t\t\tfillBuffer();\n\t\t\t}\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tconsumeSpaces();\n\t\t\tbyte c = read();\n\t\t\tdo {\n\t\t\t\tsb.append((char) c);\n\t\t\t} while ((c = read()) > ' ');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\t;\n\t\t\tif (sb.length() == 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tString str = br.readLine();\n\t\t\treturn str;\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tint ret = 0;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tlong ret = 0;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10L + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tconsumeSpaces();\n\t\t\tdouble ret = 0;\n\t\t\tdouble div = 1;\n\t\t\tbyte c = read();\n\t\t\tboolean neg = (c == '-');\n\t\t\tif (neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret * 10 + c - '0';\n\t\t\t} while ((c = read()) >= '0' && c <= '9');\n\t\t\tif (c == '.') {\n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') {\n\t\t\t\t\tret += (c - '0') / (div *= 10);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (consume) {\n\t\t\t\tconsumeSpaces();\n\t\t\t}\n\t\t\tif (neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = nextInt();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[][] nextIntMatrix(int n, int m) throws IOException {\n\t\t\tint[][] grid = new int[n][m];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tgrid[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn grid;\n\t\t}\n\n\t\tpublic char[][] nextCharacterMatrix(int n) throws IOException {\n\t\t\tchar[][] a = new char[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = next().toCharArray();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic void close() throws IOException {\n\t\t\tif (System.in == null) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tSystem.in.close();\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic Reader r = new Reader();\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tprivate static void solve1() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tlong x = r.nextLong();\n\t\t\tlong y = r.nextLong();\n\n\t\t\tlong a = r.nextLong();\n\t\t\tlong b = r.nextLong();\n\n\t\t\tlong x_ = Math.min(x, y);\n\t\t\tlong y_ = Math.max(x, y);\n\n\t\t\tlong tot = a * (y_ - x_);\n\t\t\ttot += Math.min(2 * x_ * a, b * x_);\n\t\t\tres.append(tot).append(\"\\n\");\n\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static void solve2() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tString s = r.next();\n\n\t\t\tif (s.indexOf('0') < 0 || s.indexOf('1') < 0) {\n\t\t\t\tres.append(s);\n\t\t\t} else {\n\t\t\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\t\t\tres.append(\"10\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.append(\"\\n\");\n\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static long gcd(long a, long b) {\n\t\tif (b == 0) {\n\t\t\treturn a;\n\t\t}\n\t\treturn gcd(b, a % b);\n\t}\n\n\tprivate static long getAns(long lcm, long b, long till) {\n\t\tlong complete = (till / lcm) * (lcm - b);\n\t\tlong remaining = Math.max(0, ((till % lcm) + 1) - b);\n\t\treturn complete + remaining;\n\t}\n\n\tprivate static void solve3() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tlong a = r.nextLong();\n\t\t\tlong b = r.nextLong();\n\t\t\tlong q = r.nextLong();\n\n\t\t\tif (a > b) {\n\t\t\t\tlong temp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = temp;\n\t\t\t}\n\n\t\t\tlong lcm = (a * b) / gcd(a, b);\n\n\t\t\twhile (q-- > 0) {\n\n\t\t\t\tlong lt = r.nextLong();\n\t\t\t\tlong rt = r.nextLong();\n\n\t\t\t\tlong ans = getAns(lcm, b, rt) - getAns(lcm, b, lt - 1);\n\t\t\t\tres.append(ans).append(\" \");\n\n\t\t\t}\n\t\t\tres.append(\"\\n\");\n\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static void solve4() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\n\t}\n\n\tprivate static void solve5() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tprivate static void solve6() throws IOException {\n\n\t\tint t = r.nextInt();\n\t\tStringBuilder res = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\n\t\t\tint n = r.nextInt();\n\n\t\t\tres.append(false).append(\"\\n\");\n\t\t}\n\n\t\tout.print(res);\n\t\tout.close();\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\n//\t\tsolve1();\n\n//\t\tsolve2();\n\n\t\tsolve3();\n\n\t\t// solve4();\n\n\t\t// solve5();\n\n\t\t// solve6();\n\n\t}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class c>\nstruct rge {\n  c b, e;\n};\ntemplate <class c>\nrge<c> range(c i, c j) {\n  return rge<c>{i, j};\n}\ntemplate <class c>\nauto dud(c* x) -> decltype(cerr << *x, 0);\ntemplate <class c>\nchar dud(...);\nstruct debug {\n  template <class c>\n  debug& operator<<(const c&) {\n    return *this;\n  }\n};\nconst long long mxn = 200 * 200 + 10;\nlong long dp[mxn];\nlong long len;\nvoid precompute(long long a, long long b) {\n  len = a * b;\n  for (long long i = 1; i <= len; i++) {\n    dp[i] = dp[i - 1];\n    if ((i % a) % b != (i % b) % a) {\n      dp[i]++;\n    }\n  }\n}\nlong long query(long long x) {\n  long long rep = x / len;\n  long long rem = x % len;\n  return dp[len] * rep + dp[rem];\n}\nlong long query(long long l, long long r) { return query(r) - query(l - 1); }\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    precompute(a, b);\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      cout << query(l, r) << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ntest = int(input())\n\n\ndef my_cnt(x, c, b):\n    m = x//c\n    return m * b + min((x - (c * m)) + 1, b)\n\n\nfor case in range(test):\n    a, b, q = [int(i) for i in input().split()]\n    lcm = (a*b)//math.gcd(a, b)\n    for qry in range(q):\n        x, y = [int(i) for i in input().split()]\n        true_cnt = (my_cnt(y, lcm, max(a, b)) - my_cnt(x-1, lcm, max(a, b)))\n        print(y - x + 1 - true_cnt, end=' ')\n    print()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  long long t;\n  cin >> t;\n  for (long long q = 0; q < t; q++) {\n    long long a, b, k;\n    cin >> a >> b >> k;\n    vector<long long> z(a * b);\n    for (long long i = 0; i < a * b; i++) {\n      z[i] = (i % a % b != i % b % a);\n    }\n    long long s = 0;\n    for (long long i = 0; i < a * b; i++) {\n      s += z[i];\n    }\n    vector<long long> d(a * b + 1, 0);\n    for (long long i = 0; i < a * b; i++) {\n      d[i + 1] = d[i] + z[i];\n    }\n    for (long long i = 0; i < k; i++) {\n      long long l, r;\n      cin >> l >> r;\n      r++;\n      long long o = (r / (a * b) - l / (a * b)) * s;\n      o -= d[l % (a * b)];\n      o += d[r % (a * b)];\n      cout << o << \" \";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom itertools import product\nfrom math import gcd\nstrings = iter(sys.stdin.read().split())\nints = (int(x) for x in strings)\nsys.setrecursionlimit(3000)\n\ndef test():\n  n = 100\n  for a in range(1, n+1):\n    for b in range(a, n+1):\n      s = sum((i%a)%b==(i%b)%a for i in range((a*b)//gcd(a,b)))\n      s2 = sum((i%a)%b==(i%b)%a for i in range(b))\n      print(a, b, s, s2)\n      assert s==b==s2\n#test()\n\nntc = next(ints)\nfor tc in range(ntc):\n  a,b,q = (next(ints) for i in range(3))\n  if a>b: a,b=b,a\n  lcm = (a*b)//gcd(a,b)\n  def f(x):\n    q, r = divmod(x, lcm)\n    return q*(lcm-b) + max(0, r-b)\n  ans = []\n  for q in range(q):\n    l,r = next(ints), next(ints)\n    ans.append(f(r+1)-f(l))\n  print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "import io, sys, atexit, os\nimport math as ma\nfrom sys import exit\nfrom decimal import Decimal as dec\nfrom itertools import permutations\nfrom itertools import combinations\n\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\n\ndef num():\n    return map(int, sys.stdin.readline().split())\n\n\ndef nu():\n    return int(input())\n\n\ndef find_gcd(x, y):\n    while (y):\n        x, y = y, x % y\n    return x\n\n\ndef lcm(x, y):\n    gg = find_gcd(x, y)\n    return (x * y // gg)\n\n\nmm = 1000000007\ndef count(x,lcm,big):\n    p=x//lcm\n    hot=p*lcm\n    done=x\n    if(p!=0):\n        done-=min(big,x-hot+(1 if p!=0 else 0))\n    done-=(p-1)*big if p!=0 else 0\n    return done\n\n\ndef solve():\n    t = nu()\n    for tt in range(t):\n        a,b,q=num()\n        lc = lcm(a, b)\n        big=max(a,b)\n        for i in range(q):\n            l, r = num()\n            if(find_gcd(a,b)==min(a,b)):\n                print(0,end=\" \")\n                continue\n            if(r<big):\n                print(0, end=\" \")\n                continue\n            hola=count(r,lc,big)\n            l=max(l,big)\n            if(l>1):\n                hola-=count(l-1,lc,big)\n            print(hola,end=\" \")\n        print(\"\")\n\n\n\n\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "#codingalways\n\nimport io, sys, atexit, os\nimport math as ma\nfrom sys import exit\nfrom decimal import Decimal as dec\nfrom itertools import permutations\nfrom itertools import combinations\n\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\n\ndef num():\n    return map(int, sys.stdin.readline().split())\n\n\ndef nu():\n    return int(input())\n\n\ndef find_gcd(x, y):\n    while (y):\n        x, y = y, x % y\n    return x\n\n\ndef lcm(x, y):\n    gg = find_gcd(x, y)\n    return (x * y // gg)\n\n\nmm = 1000000007\ndef count(x,lcm,big):\n    p=x//lcm\n    hot=p*lcm\n    done=x\n    if(p!=0):\n        done-=min(big,x-hot+(1 if p!=0 else 0))\n    done-=(p-1)*big if p!=0 else 0\n    return done\n\n\ndef solve():\n    t = nu()\n    for tt in range(t):\n        a,b,q=num()\n        lc = lcm(a, b)\n        big=max(a,b)\n        for i in range(q):\n            l, r = num()\n            if(find_gcd(a,b)==min(a,b)):\n                print(0,end=\" \")\n                continue\n            if(r<big):\n                print(0, end=\" \")\n                continue\n            hola=count(r,lc,big)\n            l=max(l,big)\n            if(l>1):\n                hola-=count(l-1,lc,big)\n            print(hola,end=\" \")\n        print(\"\")\n\n\n\n\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "import io,os\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nimport sys\nfrom itertools import accumulate\ndef gcd(x,y):\n    if x<y:\n        x,y=y,x\n    if y==0:\n        return x\n    return gcd(y,x%y)\ndef lcm(x,y):\n    return x*y//gcd(x,y)\n\ndef main():\n    t=int(input())\n    for _ in range(t):\n        a,b,q=map(int,input().split())\n        lcm_ab=lcm(a,b)\n        Cycle=[None]*lcm_ab\n        for i in range(lcm_ab):\n            Cycle[i]=int((i%a)%b!=((i%b)%a))\n        Acc=[0]+list(accumulate(Cycle))\n        Ans=[]\n        for _ in range(q):\n            l,r=map(int,input().split())\n            l_cycle=l//lcm_ab\n            l_idx=l%lcm_ab\n            r_cycle=r//lcm_ab\n            r_idx=r%lcm_ab\n            ans=Acc[-1]*(r_cycle-l_cycle)+Acc[r_idx+1]-Acc[l_idx]\n            Ans.append(ans)\n        sys.stdout.write(' '.join(map(str,Ans))+'\\n')\n    \nif __name__=='__main__':\n    main()"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput=stdin.readline\nt=int(input())\nfor _ in range(t):\n  a,b,q=map(int,input().split())\n  c=a*b\n  s=[0]*c\n  for i in range(c):\n    if (i%a)%b!=(i%b)%a:\n      s[i]+=1\n  for i in range(1,c):\n    s[i]+=s[i-1]\n  ans=[]\n  for __ in range(q):\n    l,r=map(int,input().split())\n    l-=1\n    rp=r//c\n    rm=r%c\n    lp=l//c\n    lm=l%c\n    rx=rp*s[-1]\n    if rm>0:\n      rx+=s[rm]\n    lx=lp*s[-1]\n    if lm>0:\n      lx+=s[lm]\n    ans.append(rx-lx)\n  print(*ans)"
        },
        {
            "language": 3,
            "solution": "import math\nimport os,io\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\ndef findv(lcm,l,r,b):\n    p = max(min(r,b),l)\n    s = r-p+1\n    x1 = p//lcm\n    x2 = r//lcm\n    x1s = p%lcm\n    if x1*lcm+b > p:\n        s -= b-x1s\n    x1 += 1\n    if x2*lcm+b <= r:\n        s -= b*(x2-x1+1)\n    else:\n        s -= b*(x2-x1)+r%lcm+1\n    return s\n\ncases = int(input())\nfor t in range(cases):\n    a,b,q = list(map(int,input().split()))\n    a,b = min(a,b),max(a,b)\n    lcm = (a*b)//math.gcd(a,b)\n    out = []\n    for i in range(q):\n        l,r = list(map(int,input().split()))\n        if b>r:\n            out.append(0)\n        else:\n            out.append(findv(lcm, l, r, b))\n    print(*out)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Random;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        try (PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out))) {\n            _Scanner sc = new _Scanner(System.in);\n\n            int t = sc.nextInt();\n            for (int i = 0; i < t; i++) {\n                int x = sc.nextInt();\n                int y = sc.nextInt();\n                long a = Math.max(x, y);\n                long b = Math.min(x, y);\n\n                long lcm = a * b / gcm(a, b);\n\n                int q = sc.nextInt();\n                for (int j = 0; j < q; j++) {\n                    long l = sc.nextLong();\n                    long r = sc.nextLong();\n\n                    long ret1 = calc(a, lcm, r);\n                    long ret2 = calc(a, lcm, l-1);\n                    long ret = (r - l + 1) - (ret1 - ret2);\n                    out.println(ret);\n                }\n            }\n        }\n    }\n\n    private static long calc(long mult, long lcm, long domain) {\n        long x1 = domain / lcm;\n        long main = (x1 + 1) * mult;\n        return main - Math.max(0, (x1 * lcm + mult) - domain - 1);\n    }\n\n    private static long gcm(long a, long b) {\n        while (b > 0) {\n            long t = a % b;\n            a = b;\n            b = t;\n        }\n        return a;\n    }\n\n\n    private static void reverse(int[] vs) {\n        for (int i = 0; i < vs.length / 2; i++) {\n            swap(vs, i, vs.length - 1 - i);\n        }\n    }\n\n    static class _Scanner {\n        InputStream is;\n        _Scanner(InputStream is) {\n            this.is = is;\n        }\n        byte[] bb = new byte[1 << 15];\n        int k, l;\n        byte getc() {\n            try {\n                if (k >= l) {\n                    k = 0;\n                    l = is.read(bb);\n                    if (l < 0) return -1;\n                }\n                return bb[k++];\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        byte skip() {\n            byte b;\n            while ((b = getc()) <= 32)\n                ;\n            return b;\n        }\n\n        int nextInt() {\n            int n = 0;\n            int sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        long nextLong() {\n            long n = 0;\n            long sig = 1;\n            for (byte b = skip(); b > 32; b = getc()) {\n                if (b == '-') {\n                    sig = -1;\n                } else {\n                    n = n * 10 + b - '0';\n                }\n            }\n            return sig * n;\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String next() {\n            StringBuilder sb = new StringBuilder();\n            for (int b = skip(); b > 32; b = getc()) {\n                sb.append(((char) b));\n            }\n            return sb.toString();\n        }\n    }\n\n    private static void shuffle(int[] ar) {\n        Random rnd = new Random();\n        shuffle(ar, rnd);\n    }\n\n    private static void shuffle(int[] ar, Random rnd) {\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void shuffle(Object[] ar) {\n        Random rnd = new Random();\n        for (int i = 0; i < ar.length; i++) {\n            int j = i + rnd.nextInt(ar.length - i);\n            swap(ar, i, j);\n        }\n    }\n\n    private static void swap(int[] ar, int i, int j) {\n        int t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n    private static void swap(Object[] ar, int i, int j) {\n        Object t = ar[i];\n        ar[i] = ar[j];\n        ar[j] = t;\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b):\n    if(b==0):\n        return a\n    return gcd(b,a%b)\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    lcm=(a*b)//gcd(a,b)\n    fr=[0]*(lcm+1)\n    ct=0\n    for i in range(1,lcm+1):\n        if((i%a)%b!=(i%b)%a):\n            ct+=1\n            fr[i]=ct\n        else:\n            fr[i]=fr[i-1]\n    for i in range(q):\n        ans=0\n        l,r=map(int,input().split())\n        ans=(r//lcm)*ct+fr[(r%lcm)]\n        ans-=((l//lcm)*ct+fr[l%lcm])\n        if((l%a)%b!=(l%b)%a):\n            ans+=1\n        print(ans,end=\" \")\n    print()\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef lcm(x, y):\n   return (x * y) // math.gcd(x, y)\n\ndef solve2(a, b, x):\n    if x < max(a, b):\n        return 0\n    sol = x + 1 - max(a, b)\n    ll = lcm(a, b)\n    sol -= x//ll * max(a, b)\n    if (x // ll) * ll + max(a, b) - 1 >= x:\n        sol += ((x // ll) * ll + max(a, b) - 1) - x\n    return sol\n\ndef solve(a, b, l, r):\n    return solve2(a, b, r) - solve2(a, b, l-1)\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    sol = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        sol.append(solve(a, b, l, r))\n    print(' '.join(map(str, sol)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long cs, a, b, q, i, l, r;\nlong long S[40001];\nlong long f(long long n) { return n / (a * b) * S[a * b - 1] + S[n % (a * b)]; }\nint main() {\n  cin >> cs;\n  while (cs--) {\n    cin >> a >> b >> q;\n    for (i = 1; i < a * b; i++) {\n      S[i] = S[i - 1];\n      if (i % a % b != i % b % a) S[i]++;\n    }\n    while (q--) {\n      cin >> l >> r;\n      cout << f(r) - f(l - 1) << \" \";\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\nINPUT SHORTCUTS\nN, K = map(int,input().split())\nN ,A,B = map(int,input().split())\nstring = str(input())\narr = list(map(int,input().split()))\nN = int(input())\n'''\n\ndef cont(a,b,dp,x):\n\treturn (dp[(a*b)-1]*(x//(a*b)))+dp[x%(a*b)]\n\n\ndef main():\n\ta,b,q = map(int,input().split())\n\tdp = [0 for _ in range(a*b)]\n\tfor i in range(a*b):\n\t\tif i==0:\n\t\t\tdp[i]=0\n\t\telse:\n\t\t\tlhs = (i%a)%b\n\t\t\trhs = (i%b)%a\n\t\t\tif lhs!=rhs:\n\t\t\t\tdp[i]=1\n\tfor i in range(1,a*b):\n\t\tdp[i]+=dp[i-1]\n\twhile q:\n\t\tl,r = map(int,input().split())\n\t\tif a==b:\n\t\t\tprint(\"0\",end=' ')\n\t\telse:\n\t\t\t# print(dp)\n\t\t\t# print(cont(a,b,dp,r),cont(a,b,dp,l-1))\n\t\t\tprint(cont(a,b,dp,r)-cont(a,b,dp,l-1),end=' ')\n\t\tq-=1\n\n\n\t\nn = int(input())\nwhile n:\t\n\tmain()\n\t# print()\n\tn-=1"
        },
        {
            "language": 3,
            "solution": "import math\ndef r(ri,l,a,b):\n    s=0\n    k=ri//l\n    s=k*(max(a,b))-1\n    # for i in range(k*l+1,ri+1):\n    #     if((i%a)%b==(i%b)%a):\n    #         s+=1\n    m=ri-k*l+1\n    s+=max(a,b) if(m>max(a,b)) else m\n    return s\ndef main():\n    for _ in range(int(input())):\n        a,b,q=list(map(int,input().split()))\n        qu=[list(map(int,input().split())) for i in range(q)]\n        lcm=a*b//math.gcd(a,b)\n        for i in qu:\n            k=0\n            k=r(i[1],lcm,a,b)-r(i[0]-1,lcm,a,b)\n            print(i[1]-i[0]+1-k,end=\" \")\n        print()\n\nmain()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.awt.font.GraphicAttribute;\nimport java.io.*;\nimport java.nio.channels.AcceptPendingException;\nimport java.time.Period;\n \npublic class Main {\n//    static long[] di;\n//    static  pair [] path;\n//    static ArrayList<pair>[] graph;\n//    public static void Dijkstra(int a) {\n//    \tPriorityQueue<pair>q=new PriorityQueue<Main.pair>();\n//    \tpath[a]=new pair((long) 0, a+1);\n//    \tq.add(new pair((long)0, a));\n//    \twhile(!q.isEmpty()) {\n//    \t//\tpw.println(q+\" \"+Arrays.toString(path));\n//    \t\tpair z=q.poll();\n//    \t\tif(di[z.y]!=-1) {\n//    \t\t\tcontinue;\n//    \t\t}\n//    \t\tdi[z.y]=z.x;\n//    \t\tfor(pair i:graph[z.y]) {\n//    \t\t\tif(di[i.y]==-1) {\n//    \t\t\t\tq.add(new pair(i.x+z.x, i.y));\n//    \t\t\t\tif(path[i.y]==null||path[i.y].x>i.x+z.x)\n//    \t\t\t\tpath[i.y]=new pair(i.x+z.x, z.y+1);\n//    \t\t\t\t\n//    \t\t\t}\n//    \t\t}\n//    \t}\n//    }\n\n\tpublic static void main(String[] args) throws Exception {\n\tint t=sc.nextInt();\n\twhile(t-->0) {\n\t\tint a=sc.nextInt();\n\t\tint b=sc.nextInt();\n\t\tint q=sc.nextInt();\n\t\tlong LCM=a*b;\n\t\tint[] T=new int[(int) LCM];\n\t\tfor(int i=1;i<=LCM;i++) {\n\t\t\tif((i%a)%b!=(i%b)%a) {\n\t\t\t\tT[i-1]++;\n\t\t\t}\n\t\t}\n\t//\tpw.println(Arrays.toString(T));\n\t\tlong sum=T[0];\n\t\tfor(int i=1;i<LCM;i++) {\n\t\t\tsum+=T[i];\n\t\t\tT[i]+=T[i-1];\n\t\t\t\n\t\t}\n\t\t//pw.println(LCM);\n\t\twhile(q-->0) {\n\t\t\tlong l=sc.nextLong();\n\t\t\tlong r=sc.nextLong();\n\t\t\tlong Sum=1l*sum*((1l*r-l+1)/(LCM));\n\t\t\tif(r%LCM>0)\n\t\t\t\tSum+=T[(int) ((r%LCM)-1)];\n\t\t\tif(l%LCM>1) \n\t\t\t\t\t\n\t\t\t\tSum-=T[(int)((l%LCM)-2)];\n\t\t\tif(r%LCM<l%LCM-1) {\n\t\t\t\t\tSum+=sum;\n\t\t\t\t}\n\t\t\tpw.print(Sum+\" \");\n\t\t}\n\t\tpw.println();\n\t}\n\t\tpw.close();\n\t}\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n \n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n \n\t\tpublic Scanner(FileReader r) {\n\t\t\tbr = new BufferedReader(r);\n\t\t}\n \n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n \n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n \n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n \n\t\tpublic double nextDouble() throws IOException {\n\t\t\tString x = next();\n\t\t\tStringBuilder sb = new StringBuilder(\"0\");\n\t\t\tdouble res = 0, f = 1;\n\t\t\tboolean dec = false, neg = false;\n\t\t\tint start = 0;\n\t\t\tif (x.charAt(0) == '-') {\n\t\t\t\tneg = true;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\tfor (int i = start; i < x.length(); i++)\n\t\t\t\tif (x.charAt(i) == '.') {\n\t\t\t\t\tres = Long.parseLong(sb.toString());\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t\tdec = true;\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(x.charAt(i));\n\t\t\t\t\tif (dec)\n\t\t\t\t\t\tf *= 10;\n\t\t\t\t}\n\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\treturn res * (neg ? -1 : 1);\n\t\t}\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\t\tpublic Integer[] nextIntegerArray(int n) throws IOException {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n \n\t}\n \n\tstatic class pair implements Comparable<pair> {\n\t\tLong x;\n\t\tint y;\n \n\t\tpublic pair(Long x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n \n\t\tpublic String toString() {\n\t\t\treturn x + \" \" + y;\n\t\t}\n\t\tpublic boolean equals(Object o) {\n            if (o instanceof pair) {\n                pair p = (pair)o;\n                return p.x == x && p.y == y;\n            }\n            return false;\n        }\n        public int hashCode() {\n            return new Double(x).hashCode() * 31 + new Double(y).hashCode();\n        }\n        public int compareTo(pair other) {\n\t\t\treturn Long.compare(this.x, other.x);\n\t\t}\n\t}\n \n\tstatic class tuble implements Comparable<tuble> {\n\t\tint x;\n\t\tint y;\n\t\tint z;\n \n\t\tpublic tuble(int x, int y, int z) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n \n\t\tpublic String toString() {\n\t\t\treturn x + \" \" + y + \" \" + z;\n\t\t}\n \n\t\tpublic int compareTo(tuble other) {\n\t\t\tif (this.x == other.x) {\n\t\t\t\treturn this.y - other.y;\n\t\t\t} else {\n\t\t\t\treturn this.x - other.x;\n\t\t\t}\n\t\t}\n\t}\n \n\tpublic static long GCD(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn (a > b) ? GCD(a % b, b) : GCD(a, b % a);\n\t}\n \n\tpublic static long LCM(long a, long b) {\n\t\treturn a * b / GCD(a, b);\n\t}\n \n\tstatic long Pow(long a, int e, int mod) // O(log e)\n\t{\n\t\ta %= mod;\n\t\tlong res = 1;\n\t\twhile (e > 0) {\n\t\t\tif ((e & 1) == 1)\n\t\t\t\tres = (res * a) % mod;\n\t\t\ta = (a * a) % mod;\n\t\t\te >>= 1;\n\t\t}\n\t\treturn res;\n\t}\n \n\tstatic long nc(int n, int r) {\n\t\tif (n < r)\n\t\t\treturn 0;\n\t\tlong v = fac[n];\n\t\tv *= Pow(fac[r], mod - 2, mod);\n\t\tv %= mod;\n\t\tv *= Pow(fac[n - r], mod - 2, mod);\n\t\tv %= mod;\n\t\treturn v;\n\t}\n \n\tpublic static boolean isprime(long a) {\n\t\tif (a == 0 || a == 1) {\n\t\t\treturn false;\n\t\t}\n\t\tif (a == 2) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (int i = 2; i < Math.sqrt(a) + 1; i++) {\n\t\t\tif (a % i == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n \n\tpublic static boolean isPal(String s) {\n\t\tboolean t = true;\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tif (s.charAt(i) != s.charAt(s.length() - 1 - i)) {\n\t\t\t\tt = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn t;\n\t}\n \n\tpublic static long RandomPick(long[] a) {\n\t\tint n = a.length;\n\t\tint r = rn.nextInt(n);\n\t\treturn a[r];\n\t}\n \n\tpublic static int RandomPick(int[] a) {\n\t\tint n = a.length;\n\t\tint r = rn.nextInt(n);\n\t\treturn a[r];\n\t}\n \n\tpublic static void PH(String s, boolean reverse) {\n\t\tprelen = s.length();\n\t\tHashsArray[HashsArrayInd] = new int[prelen + 1];\n\t\tprepow = new int[prelen];\n\t\tif (HashsArrayInd == 0) {\n\t\t\tint[] mods = { 1173017693, 1173038827, 1173069731, 1173086977, 1173089783, 1173092147, 1173107093,\n\t\t\t\t\t1173114391, 1173132347, 1173144367, 1173150103, 1173152611, 1173163993, 1173174127, 1173204679,\n\t\t\t\t\t1173237343, 1173252107, 1173253331, 1173255653, 1173260183, 1173262943, 1173265439, 1173279091,\n\t\t\t\t\t1173285331, 1173286771, 1173288593, 1173298123, 1173302129, 1173308827, 1173310451, 1173312383,\n\t\t\t\t\t1173313571, 1173324371, 1173361529, 1173385729, 1173387217, 1173387361, 1173420799, 1173421499,\n\t\t\t\t\t1173423077, 1173428083, 1173442159, 1173445549, 1173451681, 1173453299, 1173454729, 1173458401,\n\t\t\t\t\t1173459491, 1173464177, 1173468943, 1173470041, 1173477947, 1173500677, 1173507869, 1173522919,\n\t\t\t\t\t1173537359, 1173605003, 1173610253, 1173632671, 1173653623, 1173665447, 1173675577, 1173675787,\n\t\t\t\t\t1173684683, 1173691109, 1173696907, 1173705257, 1173705523, 1173725389, 1173727601, 1173741953,\n\t\t\t\t\t1173747577, 1173751499, 1173759449, 1173760943, 1173761429, 1173762509, 1173769939, 1173771233,\n\t\t\t\t\t1173778937, 1173784637, 1173793289, 1173799607, 1173802823, 1173808003, 1173810919, 1173818311,\n\t\t\t\t\t1173819293, 1173828167, 1173846677, 1173848941, 1173853249, 1173858341, 1173891613, 1173894053,\n\t\t\t\t\t1173908039, 1173909203, 1173961541, 1173968989, 1173999193};\n\t\t\tmod = RandomPick(mods);\n\t\t\tint[] primes = { 59, 61, 67, 71, 73, 79, 83, 89, 97, 101 };\n\t\t\tprime = RandomPick(primes);\n\t\t}\n\t\tprepow[0] = 1;\n\t\tif (!reverse) {\n \n\t\t\tfor (int i = 1; i < prelen; i++) {\n\t\t\t\tprepow[i] = (int) ((1l * prepow[i - 1] * prime) % mod);\n \n\t\t\t}\n\t\t\tfor (int i = 0; i < prelen; i++) {\n\t\t\t\tif (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n\t\t\t\t\tHashsArray[HashsArrayInd][i + 1] = (int) ((1l * HashsArray[HashsArrayInd][i]\n\t\t\t\t\t\t\t+ ((1l * s.charAt(i) - 'a' + 1) * prepow[i]) % mod) % mod);\n\t\t\t\telse\n\t\t\t\t\tHashsArray[HashsArrayInd][i + 1] = (int) ((1l * HashsArray[HashsArrayInd][i]\n\t\t\t\t\t\t\t+ ((1l * s.charAt(i) - 'A' + 27) * prepow[i]) % mod) % mod);\n\t\t\t}\n \n\t\t} else {\n\t\t\tfor (int i = 1; i < prelen; i++) {\n\t\t\t\tprepow[i] = (int) ((1l * prepow[i - 1] * prime) % mod);\n \n\t\t\t}\n\t\t\tfor (int i = 0; i < prelen; i++) {\n\t\t\t\tif (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n\t\t\t\t\tHashsArray[HashsArrayInd][i + 1] = (int) ((1l * HashsArray[HashsArrayInd][i]\n\t\t\t\t\t\t\t+ ((1l * s.charAt(i) - 'a' + 1) * prepow[prelen - 1 - i]) % mod) % mod);\n\t\t\t\telse\n\t\t\t\t\tHashsArray[HashsArrayInd][i + 1] = (int) ((1l * HashsArray[HashsArrayInd][i]\n\t\t\t\t\t\t\t+ ((1l * s.charAt(i) - 'A' + 27) * prepow[prelen - 1 - i]) % mod) % mod);\n\t\t\t}\n \n\t\t}\n \n\t\tHashsArrayInd++;\n \n\t}\n \n\tpublic static int PHV(int l, int r, int n, boolean reverse) {\n\t\tif (l > r) {\n\t\t\treturn 0;\n\t\t}\n\t\tint val = (int) ((1l * HashsArray[n - 1][r] + mod - HashsArray[n - 1][l - 1]) % mod);\n\t\tif (!reverse) {\n \n\t\t\tval = (int) ((1l * val * prepow[prelen - l]) % mod);\n\t\t} else {\n\t\t\tval = (int) ((1l * val * prepow[r - 1]) % mod);\n\t\t}\n\t\treturn val;\n\t}\n \n\tstatic int[][] HashsArray;\n\tstatic int HashsArrayInd = 0;\n\tstatic int[] prepow;\n\tstatic int prelen = 0;\n\tstatic int prime = 31;\n\tstatic long fac[];\n\tstatic int mod = 998244353;\n\tstatic Random rn = new Random();\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic PrintWriter pw = new PrintWriter(System.out);\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint p[40010];\nint len;\nvoid build(int a, int b) {\n  p[0] = 0;\n  len = a * b;\n  for (int i = 1; i <= len; i++) {\n    p[i] = p[i - 1];\n    if ((i % a) % b != (i % b) % a) p[i]++;\n  }\n}\nlong long query(long long l) {\n  long long cnt = l / len;\n  int rem = l % len;\n  return p[len] * 1ll * cnt + p[rem];\n}\nint main() {\n  int t, a, b, q;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    build(a, b);\n    long long l, r;\n    while (q--) {\n      cin >> l >> r;\n      cout << query(r) - query(l - 1) << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom math import gcd\n\ninput=sys.stdin.readline\n\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    lcm=a*b//(gcd(a,b))\n    data=[((i%a)%b!=(i%b)%a) for i in range(lcm)]\n    for i in range(1,lcm):\n        data[i]+=data[i-1]\n    def func(num):\n        s=(num+1)//lcm\n        t=(num+1)%lcm\n        if t!=0:\n            return data[-1]*s+data[t-1]\n        else:\n            return data[-1]*s\n    ans=[]\n    for i in range(q):\n        l,r=map(int,input().split())\n        ans.append(func(r)-func(l-1))\n    print(*ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\n\tstatic int gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\n\tstatic int lcm(int a, int b) {\n\t\treturn a * b / gcd(a, b);\n\t}\n\n\tstatic long solve(long r, int a, int b, long lcm, int[][] first, ArrayList<int[]> loop) {\n\t\tlong ans = 0;\n\t\tfor (int[] x : loop) {\n\t\t\tint i = x[0], j = x[1];\n\t\t\tif (first[i][j] <= r && first[i][j] != 0)\n\t\t\t\tans += (r - first[i][j]) / lcm + 1;\n\t\t}\n\n\t\treturn ans;\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint tc = sc.nextInt();\n\t\twhile (tc-- > 0) {\n\t\t\tint a = sc.nextInt(), b = sc.nextInt(), q = sc.nextInt();\n\t\t\tint[][] first = new int[a][b];\n\t\t\tboolean[][] cnt = new boolean[a][b];\n\t\t\tint test = 0;\n\t\t\tfor (int i = a * b; i > 0; i--) {\n\n\t\t\t\tfirst[i % a][i % b] = i;\n\t\t\t}\n\t\t\tArrayList<int[]> loop = new ArrayList();\n\t\t\tfor (int i = 0; i < a; i++)\n\t\t\t\tfor (int j = 0; j < b; j++) {\n\t\t\t\t\tif (i % b != j % a) {\n\t\t\t\t\t\tcnt[i][j] = true;\n\n\t\t\t\t\t} else\n\t\t\t\t\t\tloop.add(new int[] { i, j });\n\n\t\t\t\t}\n//\t\t\tSystem.err.println(a*b-test);\n\t\t\tint lcm = lcm(a, b);\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong l = sc.nextLong(), r = sc.nextLong();\n\t\t\t\tlong ans = r - l + 1 - (solve(r, a, b, lcm, first, loop) - solve(l - 1, a, b, lcm, first, loop));\n\t\t\t\tout.print(ans + \" \");\n\n\t\t\t}\n\t\t\tout.println();\n\n\t\t}\n\t\tout.close();\n\n\t}\n\n\tstatic class Scanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tScanner(String fileName) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(fileName));\n\t\t}\n\n\t\tString next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tString nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tint nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() throws NumberFormatException, IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() throws NumberFormatException, IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tboolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tint[] nxtArr(int n) throws IOException {\n\t\t\tint[] ans = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tans[i] = nextInt();\n\t\t\treturn ans;\n\t\t}\n\n\t}\n\n\tstatic void sort(int[] a) {\n\t\tshuffle(a);\n\t\tArrays.sort(a);\n\t}\n\n\tstatic void shuffle(int[] a) {\n\t\tint n = a.length;\n\t\tRandom rand = new Random();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint tmpIdx = rand.nextInt(n);\n\t\t\tint tmp = a[i];\n\t\t\ta[i] = a[tmpIdx];\n\t\t\ta[tmpIdx] = tmp;\n\t\t}\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "import math\ndef gcd(a, b) : \n      \n    if (b == 0) : \n        return a \n          \n    return gcd(b, a%b) \n\n    \ndef fun(num, a, b):\n    g = gcd(a,b)\n    g = (a*b)//g\n    chk = num//(g)\n    ans = 0\n    \n    ans += chk*b\n    \n    ans += min(num-(chk*g)+1,b)\n    \n    \n    return ans    \n \nt = int(input())\n \nfor _ in range(t):\n    \n    a, b, q = list(map(int,input().split()))\n    \n    if(a>b):\n        a, b = b, a\n    ans = []\n    for i in range(q):\n        l, r = list(map(int,input().split()))\n        \n        ans = fun(r,a,b) - fun(l-1,a,b)\n        \n        \n        #print(cnt)\n        print(r-l+1 - ans,end=' ')\n    print()\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\n# import threading\n# threading.stack_size(2**27)\n# import sys\n# sys.setrecursionlimit(10**4)\nfrom sys import stdin, stdout\nimport bisect            #c++ upperbound\nimport math\nimport heapq\ni_m=9223372036854775807\ndef modinv(n,p):\n    return pow(n,p-2,p)\ndef cin():\n    return map(int,sin().split())\ndef ain():                           #takes array as input\n    return list(map(int,sin().split()))\ndef sin():\n    return input()\ndef inin():\n    return int(input())\nimport math  \ndef GCD(x, y): \n    x=abs(x)\n    y=abs(y)\n    if(min(x,y)==0):\n        return max(x,y)\n    while(y): \n        x, y = y, x % y \n    return x \ndef Divisors(n) : \n    l = []  \n    for i in range(1, int(math.sqrt(n) + 1)) :\n        if (n % i == 0) : \n            if (n // i == i) : \n                l.append(i) \n            else : \n                l.append(i)\n                l.append(n//i)\n    return l\nprime=[]\ndef SieveOfEratosthenes(n): \n    global prime\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    f=[]\n    for p in range(2, n): \n        if prime[p]: \n            f.append(p)\n    return f\nq=[]       \ndef dfs(n,d,v,c):\n    global q\n    v[n]=1\n    if n not in d:\n        return v\n    x=d[n]\n    q.append(n)\n    j=c\n    for i in x:\n        if i not in v:\n            v=dfs(i,d,v,c+1)\n            # print(f)\n    return v\n\n        \n\"\"\"*******************************************************\"\"\"\ndef main():\n    t=inin()\n    for _ in range(t):\n        a,b,q=cin()\n        x=GCD(a,b)\n        x=(a*b)//x\n        p=max(a,b)\n        anss=[]\n        for i in range(q):\n            c,d=cin()\n            c-=1\n            f=c//x\n            an=f*p\n            g=d//x\n            ans=g*p\n            h=g*x\n            hh=f*x\n            an+=min(p,c-hh+1)\n            ans+=min(p,d-h+1)\n            # print(an,ans,d-c)\n            ans=ans-an\n            anss.append(d-c-ans)\n        print(*anss)        \n######## Python 2 and 3 footer by Pajenegod and c1729\n \n# Note because cf runs old PyPy3 version which doesn't have the sped up\n# unicode strings, PyPy3 strings will many times be slower than pypy2.\n# There is a way to get around this by using binary strings in PyPy3\n# but its syntax is different which makes it kind of a mess to use.\n \n# So on cf, use PyPy2 for best string performance.\n \npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n \nimport os, sys\nfrom io import IOBase, BytesIO\n \nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n \n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n \n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n \n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n \n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s:self.buffer.write(s.encode('ascii'))\n            self.read = lambda:self.buffer.read().decode('ascii')\n            self.readline = lambda:self.buffer.readline().decode('ascii')\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n# Cout implemented in Python\nimport sys\nclass ostream:\n    def __lshift__(self,a):\n        sys.stdout.write(str(a))\n        return self\ncout = ostream()\nendl = '\\n'\n \n# Read all remaining integers in stdin, type is given by optional argument, this is fast\ndef readnumbers(zero = 0):\n    conv = ord if py2 else lambda x:x\n    A = []; numb = zero; sign = 1; i = 0; s = sys.stdin.buffer.read()\n    try:\n        while True:\n            if s[i] >= b'R' [0]:\n                numb = 10 * numb + conv(s[i]) - 48\n            elif s[i] == b'-' [0]: sign = -1\n            elif s[i] != b'\\r' [0]:\n                A.append(sign*numb)\n                numb = zero; sign = 1\n            i += 1\n    except:pass\n    if s and s[-1] >= b'R' [0]:\n        A.append(sign*numb)\n    return A\n \n# threading.Thread(target=main).start()\nif __name__== \"__main__\":\n  main()"
        },
        {
            "language": 3,
            "solution": "p=[0]*40043\n\ndef build(a,b):\n\tlength=a*b\n\tp[0]=0\n\tfor i in range(1,length+1):\n\t\tp[i]=p[i-1]\n\t\tif ((i%a)%b!=(i%b)%a):\n\t\t\tp[i]+=1\n\n\t\t#print(\"p[\",i,\"] = \",p[i])\n\ndef query(l,length):\n\tcnt=l//length\n\trem=l%length\n\treturn p[length]*cnt+p[rem]\n\ndef query2(l,r,length):\n\treturn query(r,length)-query(l-1,length)\n\nt=int(input())\nfor _ in range(t):\n\ta,b,q=map(int,input().split())\n\tbuild(a,b)\n\tlength=a*b\n\tfor j in range(q):\n\t\tl,r=map(int,input().split())\n\t\tprint(query2(l,r,length))"
        },
        {
            "language": 3,
            "solution": "def NOD(a, b):\n    if(a == 0):\n        return b\n    return NOD(b%a, a)\ndef f(a, b, x):\n    a, b = max(a,b), min(a, b)\n    if(a%b==0):\n        return 0\n    ans = x//(a*b//NOD(a, b))* (a*b//NOD(a, b) - a) +  max(0, x%(a*b//NOD(a, b)) - a+1)\n    return ans\nt = int(input())\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    a, b = max(a,b), min(a, b)\n\n    for j in range(q):\n        l, r = map(int, input().split())\n        print(f(a, b, r) - f(a, b, l-1), end = \" \")\n    print()"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor you in range(t):\n\tl=input().split()\n\ta=int(l[0])\n\tb=int(l[1])\n\tq=int(l[2])\n\tarr=[0 for i in range(a*b)]\n\tfor i in range(a*b):\n\t\tif(((i%b)%a)!=((i%a)%b)):\n\t\t\tarr[i]=1\n\tprefsum=[0 for i in range(a*b)]\n\tsumnow=0\n\tfor i in range(a*b):\n\t\tsumnow+=arr[i]\n\t\tprefsum[i]=sumnow\n\tfull=prefsum[-1]\n\tarr=[0 for i in range(q)]\n\tfor i in range(q):\n\t\tans=0\n\t\tl=input().split()\n\t\tL=int(l[0])\n\t\tR=int(l[1])\n\t\tansl=full*((L-1)//(a*b))\n\t\tx=(L-1)%(a*b)\n\t\tansl=ansl+prefsum[x]-prefsum[0]\n\t\tansr=full*((R)//(a*b))\n\t\tx=(R)%(a*b)\n\t\tansr=ansr+prefsum[x]-prefsum[0]\n\t\tarr[i]=ansr-ansl\n\tfor i in arr:\n\t\tprint(i,end=\" \")\n\tprint()"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\n\nimport math\n#from functools import reduce\ndef lcm_base(x, y):\n    return (x * y) // math.gcd(x, y)\n\nfrom itertools import accumulate\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    L = lcm_base(a, b)\n    A = [0]*L\n    for x in range(1, L):\n        if (x%a)%b != (x%b)%a:\n            A[x-1] = 1\n    #print(A)\n    B = [0]+A\n    B = list(accumulate(B))\n    #print(B)\n    p = B[-1]\n    ans = [-1]*q\n    for i in range(q):\n        l, r = map(int, input().split())\n        ql, rl = divmod(l-1, L)\n        qr, rr = divmod(r, L)\n        ans[i] = p*qr+B[rr] - (p*ql+B[rl])\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef solve(r, a, b, g):\n\n\tnum = r//g\n\n\tmaxg = num*g\n\n\t# print(\"AA\", maxg, r)\n\n\tret = 0\n\tret += num*(max(a, b))\n\n\tif maxg+max(a, b) <= r:\n\t\tret += max(a, b)\n\telse:\n\t\tret += r-maxg+1 \n\n\treturn ret\n\n\nt = int(input())\nfor _ in range(t):\n\ta, b, q = map(int, input().split())\n\tg = a*b//gcd(a, b)\n\tfor i in range(q):\n\t\tl, r = map(int, input().split())\n\t\tcount = 0\n\t\tif a == b:\n\t\t\tprint(0)\n\t\t\tcontinue\n\n\t\t# for j in range(l, r+1):\n\t\t# \tif (j%a)%b == (j%b)%a:\n\t\t# \t\tcount += 1\n\t\t# \t\tprint(j)\n\n\t\t# print('C', count)\n\n\t\tprint(r-l+1 - (solve(r, a, b, g) - solve(l-1, a, b, g)), end=' ')\n\n\t\t# num = r//g\n\t\t# print(num)\n\n\t\t# maxg = num*g\n\t\t# print(maxg, r)\n\tprint('')\n\n\t\t\n"
        },
        {
            "language": 3,
            "solution": "from itertools import accumulate\ndef f(i):\n    global a,b,pre\n    x=i//(a*b)\n    y=i%(a*b)\n    return x*pre[-1]+pre[y]\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    pre=[int((i%a)%b!=(i%b)%a) for i in range(a*b)]\n    pre=list(accumulate(pre))\n    ans=[]\n    for i in range(q):\n        l,r=map(int,input().split())\n        ans.append(str(f(r)-f(l-1)))\n        #print(f(r),f(l-1))\n    print(\" \".join(map(str,ans)))"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef findv(lcm,l,r,b):\n    p = max(min(r,b),l)\n    s = r-p+1\n    x1 = p//lcm\n    x2 = r//lcm\n    x1s = p%lcm\n    if x1*lcm+b <= p:\n        x1 += 1\n    else:\n        s -= b-x1s\n        x1 += 1\n    if x2*lcm+b <= r:\n        s -= b*(x2-x1+1)\n    else:\n        s -= b*(x2-x1)+r%lcm+1\n    return s\n\ncases = int(input())\nfor t in range(cases):\n    a,b,q = list(map(int,input().split()))\n    a,b = min(a,b),max(a,b)\n    lcm = (a*b)//math.gcd(a,b)\n    for i in range(q):\n        l,r = list(map(int,input().split()))\n        if b>r:\n            print(0,end=\" \")\n        else:\n            p = findv(lcm, l, r, b)\n            print(p, end=\" \")\n    print()"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef solve(x,lcm,b):\n\n \treturn max(0,(x//lcm )*b) + min(b, x - (x//lcm)*lcm+1)\n\n\n\nfor t in range(int(input())):\n\ta, b, n = map(int,input().split())\n\tans = [0]*n\n\tlcm = a*b//math.gcd(a,b)\n\tb=max(a,b)\n\tfor i in range(n):\n\t\tl,r = map(int,input().split())\n\t\t# if t == 1:\n\t\t# \tprint( a,b,n,l,r)\n\t\tans[i] = r-l+1 - (solve(r,lcm,b) - solve(l-1,lcm,b))\n\tprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "def gcd(x,y):\n    while y:\n        x,y =y,x % y\n    return x\n\n\n\nt = int(input())\nfor i in range(0,t):\n    a , b , q = map(int,input().split())\n    gatsu = max(a,b)\n    gop = a*b//gcd(a,b)\n    line = []\n    for j in range(0,q):\n        line.append(list(map(int,input().split())))\n    sm = 0\n    d = []\n    for k in line:\n        sm = 0\n        start,end = (k[0]//gop)*gop,((k[1]//gop)+1)*gop\n        sm += (end - start)//gop*gatsu\n        if 0 <= k[0] % gop <= gatsu - 1:\n            sm -= k[0] - start\n        else:\n            sm -= gatsu\n        if 0 <= k[1] % gop <= gatsu -1:\n            sm -= gatsu -1 - (k[1] % gop)\n        else:\n            sm -= 0\n        d.append(k[1]-k[0]+1 - sm)\n    for kk in d:\n        print(kk,end=' ')\n    print()\n                \n                \n                \n    \n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long quick_power_mod(long long a, long long b, long long m) {\n  a %= m;\n  long long result = 1;\n  while (b > 0) {\n    if (b & 1) result = (result * a) % m;\n    a = (a * a) % m;\n    b >>= 1;\n  }\n  return result;\n}\nlong long comp(long long a, long long b, long long p) {\n  if (a < b) return 0;\n  if (a == b) return 1;\n  if (b > a - b) b = a - b;\n  long long ans = 1, ca = 1, cb = 1;\n  for (long long i = 0; i < b; i++) {\n    ca = (ca * (a - i)) % p;\n    cb = (cb * (b - i)) % p;\n  }\n  ans = (ca * quick_power_mod(cb, p - 2, p)) % p;\n  return ans;\n}\nlong long lucas(long long n, long long m, long long p) {\n  long long ans = 1;\n  while (n && m && ans) {\n    ans = (ans * comp(n % p, m % p, p)) % p;\n    n /= p;\n    m /= p;\n  }\n  return ans;\n}\nlong long ssum(long long x) {\n  long long s = 0;\n  for (long long i = 0; i < x; i++) {\n    s += i;\n  }\n  return s;\n}\nlong long visss[1005];\nvoid Prime() {\n  for (long long i = 2; i < 1000; i++) {\n    if (visss[i] == 0) {\n      for (long long j = 2 * i; j < 1000; j += i) {\n        visss[j] = 1;\n      }\n    }\n  }\n}\nconst long long N = 3e5 + 10;\nlong long a, b, q, lcmm;\nlong long s[N];\nlong long calc(long long x) { return s[lcmm] * (x / lcmm) + s[x % lcmm]; }\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  long long t;\n  cin >> t;\n  lucas(1000, 100, 10007);\n  while (t--) {\n    lucas(1000, 100, 10007);\n    cin >> a >> b >> q;\n    lucas(1000, 100, 10007);\n    lcmm = a * b / gcd(a, b);\n    lucas(1000, 100, 10007);\n    for (long long i = 1; i <= lcmm; i++)\n      s[i] = s[i - 1] + (i % a % b != i % b % a);\n    lucas(1000, 100, 10007);\n    while (q--) {\n      long long tmp1 = quick_power_mod(10000, 1000, 100007);\n      long long l, r;\n      cin >> l >> r;\n      cout << calc(r) - calc(l - 1) << \" \";\n    }\n    lucas(1000, 100, 10007);\n    cout << '\\n';\n  }\n  lucas(1000, 100, 10007);\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "\"\"\"\n// Author : snape_here - Susanta Mukherjee\n     \n \"\"\"\n \nfrom __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().split())\ndef li(): return list(mi())\n \n \ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n \ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(a , b):\n    return (a*b)//gcd(a,b)\n\nmod=1000000007\n\nimport math\n\nimport bisect\n\nabc=\"abcdefghijklmnopqrstuvwxyz\"\n\ndef main():\n\n    for _ in range(ii()):\n        a,b,qu=mi()\n        x=lcm(a,b)\n        d=max(a,b)\n        for i in range(qu):\n            l,r=mi()\n            y=l//x \n            z=r//x\n            c=(z-y)*d\n            y*=x \n            z*=x\n            p=l%x\n            f=g=1\n            if p>=0 and p<=d-1:\n                p+=(d-1-p)\n                f=0\n            q=r%x \n            if q>=0 and q<=d-1:\n                q+=(d-1-q)\n                g=0\n            ans=0\n            ans+=(z-y-p+q)\n            ans-=c \n            if f:\n                ans+=1\n            print(ans,end=\" \")\n        print()\n\n# region fastio\n\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    main()"
        },
        {
            "language": 4,
            "solution": "/*\n     D    A    R    K    L      _                 _         O    R    D    D    A\n         K                    / |                 | \\        L    O    R         D\n        A         R         _ / |                 | \\ _       K    L         O    R\n  D         A    R    K     _ / |         _       | \\ _        L    O    R    D    D\n      R    K    L       _ / _   |       _ | \\\\    |   _ \\       O    R    D    D\n     R         K        _ / _   |       _ | \\ \\   |   _ \\        L    O    R\n    D    A    R     _ / _ / |   /     /         \\ \\   | \\ _ \\ _        K    L    O\n   D    D           _ / _ / |   /     /          \\ \\   | \\ _ \\ _             A\n       K        _ / _ /     | /     /     _       \\ \\ |     \\ _ \\ _      L    O    R\n D    A        _ / _ /      | /     /     _       \\ \\ |      \\ _ \\ _      R         K\n            _ / _ /         | |     |   |   \\ (O) / | |         \\ _ \\ _         O\n    D      _ / _ /          | |     |   |    \\   /  | |          \\ _ \\ _         D\n   A      / _ /     |   |   | \\     |   \\ _   \\|/   / |   |   |     \\ _ \\\n  K      / _ /      |   |   | \\     |   \\ _    V    / |   |   |      \\ _ \\         L\n        / /         |   |   |   \\ _ /       \\ _ _ /   |   |   |         \\ \\\n       / /          |   |   |                         |   | | |          \\ \\\n      / /       |   | | \\     \\       ROWECHEN      /     / | |   |       \\ \\\n     / /    _ _ |   | | \\     \\        ZHONG        /     / | |   | _ _    \\ \\\n    / / _ /   \\ | | | |   \\ / \\ \\                 / / \\ /   | | | | /   \\ _ \\ \\\n   / / _ /    \\ | | | |       \\ \\                 / /       | | | | /    \\ _ \\ \\\n  / / /         \\ \\ \\ \\ /       /                 \\       \\ / / / /         \\ \\ \\\n \\ / /          \\ \\ \\ \\ /       /                 \\       \\ / / / /          \\ \\ /\n  \\|/             \\|/         |         |         |           \\|/             \\|/\n  L         O     \\|/         |         |   |     |           \\|/        R    D\n A    R    K    L             / _ |     |   | _     \\      O    R    D    D    A    R\n     L    O         R         / _ |     |   | _     \\       D    D         A    R\n    L    O    R    D        / / / _     | _ | | \\ _   \\      D    A    R         K\n   O    R    D              / / / _ |   | _ | | \\ _   \\       D    A    R    K    L\n  R    D    D    A    R     | / / | | / | | \\ / | | \\ |        K    L    O    R    D\n A         R         K      | / / | | / | | \\ / | | \\ |              L    O         R\n     D    A         R         /   \\ / | | | / | | / \\ /     K    L         O    R\n         D    D         A     /   \\ / | | | / | | / \\/            R    K    L    O\n             R         D    D     / | / \\ |   \\ /        A    R    K    L    O    R\n       D    A    R    K    L      / | / \\ |    \\/              O    R    D    D\n R    K    L    O    R    D       \\ /     |      D    A    R         K    L    O    R\n          D    A    R             \\/      |            K    L    O    R    D    D\n\n*/\n//TEMPLATE V2\n\timport java.io.*;\n\timport java.util.*;\n\timport java.math.*;\n\n    public class Main {\n    //Solution goes below: ------------------------------------\n    public static void solution() throws IOException{\n        int t=nextInt();\n        for(int test=0;test<t;test++){\n            int a = nextInt();\n            int b = nextInt();\n            int q = nextInt();\n            int[] beeg = new int[a*b+1];\n            //Note 0 always works.\n            for(int i=1;i<=a*b;i++){\n                beeg[i] = beeg[i-1];\n                if((i%a)%b!=(i%b)%a) beeg[i] += 1;\n            }\n            for(int qu=0;qu<q;qu++){\n                long l = nextLong()-1;\n                long r = nextLong();\n                print(((r / (a*b))-(l / (a*b)))*beeg[a*b]+beeg[(int)(r % (a*b))]-beeg[(int)(l % (a*b))]);print(\" \");\n            }\n            println();\n        }\n    }\n\n    //Solution goes above: ------------------------------------\n    \n    //IO\n    public static BufferedReader br;\n    public static StringTokenizer st;\n    public static BufferedWriter bw;\n    public static void main(String[] args) throws IOException{\n        br = new BufferedReader(new InputStreamReader(System.in));\n        bw = new BufferedWriter(new OutputStreamWriter(System.out));\n        solution();\n        bw.close();//Flushes too.\n    }\n\n    public static String nextToken() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    public static int nextInt() { return Integer.parseInt(nextToken());}\n\n    public static long nextLong() { return Long.parseLong(nextToken()); }\n    \n    public static void println() throws IOException{bw.newLine(); }\n    \n    public static void print(Object s) throws IOException{bw.write(s.toString());}\n}"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nfrom fractions import gcd\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    lcm = (a * b) // gcd(a, b)\n    cumsum = [0]\n    for i in range(lcm):\n        cumsum.append(cumsum[-1] + int((i % a) % b != (i % b) % a))\n    ans = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        r += 1\n        l_loop = l // lcm; l_rest = l % lcm\n        l_val = cumsum[-1] * l_loop + cumsum[l_rest]\n        r_loop = r // lcm; r_rest = r % lcm\n        r_val = cumsum[-1] * r_loop + cumsum[r_rest]\n        ans.append(r_val - l_val)\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "import math\n\nt = int(input())\n \n\ndef gcd(a,b):\n    while(b!=0):\n        a,b = b,a%b    \n    return a\n\nfor _ in range(t):\n    a,b,q = map(int, input().split())\n    boiled_down_to = [ 0 for x in range(a*b)]\n    \n    for i in range(1,a*b):\n        boiled_down_to[i]=boiled_down_to[i-1]\n        \n        if( (i%a)%b != (i%b)%a ):\n            boiled_down_to[i]+=1\n         \n    prod=a*b\n    sm= boiled_down_to[-1]\n    for _ in range(q):\n        l,r= map(int, input().split())   \n        \n        temp = (r) // (prod)\n        ans = sm * temp + boiled_down_to[(r) % (prod)]\n        temp = (l-1) // (prod)\n        ans -= (sm * temp + boiled_down_to[(l-1) % (prod)])\n            \n        print(ans,end=' ')\n        \n    print()\n        \n\n\n'''\nt = int(input())\n\ndef gcd(a,b):\n    while(b!=0):\n        a,b = b,a%b    \n    return a\n\nfor _ in range(t):\n    a,b,q = map(int, input().split())\n    lcm = (a//gcd(a,b))*b\n    \n    for _ in range(q):\n        l,r= map(int, input().split())\n        \n        if(a<=b):\n            if(r<b):\n                print(0,end=' ')\n                \n            elif(l<b):\n                non = r//lcm - b//lcm\n                if(non!=0):\n                    non =  (non-1)*(b) + min(b,r%lcm)\n                count = r-b+1 -non\n                print(count, end=' ')\n                \n            else:\n                non = r//lcm - l//lcm\n                if(non!=0):\n                    non =  (non-1)*(b) + min(b,r%lcm)\n                count = r-l+1 -non\n                print(count, end=' ')\n                \n        else:\n            if(r<a):\n                print(0,end=' ')\n                \n            elif(l<a):\n                non = r//lcm - a//lcm\n                if(non!=0):\n                    non = non+ (non-1)*(a-1) + min(a-1,r%lcm)\n                count = r-a+1 -non\n                print(count, end=' ')\n                \n            else:\n                non = r//lcm - l//lcm\n                if(non!=0):\n                    non = non+ (non-1)*(a-1) + min(a-1,r%lcm)\n                count = r-l+1 -non\n                print(count, end=' ')\n                \n                \n    print()\n'''    \n"
        },
        {
            "language": 3,
            "solution": "def answer(x,y,z):\n    p=x//y\n    s=p*y\n    ans=x\n    if p!=0:\n        ans-=(p-1)*z\n        ans-=min(z,x-s+1)\n    return ans-min(z-1,x)\ndef gcd(a,b):\n    if a==0:\n        return b\n    else:\n        return gcd(b%a,a)\nt=int(input())\nfor i in range(t):\n    num1=list(map(int,input().split()))\n    a=num1[0]\n    b=num1[1]\n    q=num1[2]\n    lcm=(a*b)//gcd(a,b)\n    m=max(a,b)\n    lis=[]\n    for j in range(q):\n        l,r=list(map(int,input().split()))\n        lis.append(answer(r,lcm,m)-answer(l-1,lcm,m))\n    print(\" \".join(str(x) for x in lis))"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\nimport java.util.TreeMap;\nimport java.math.BigInteger;\n\n\n\npublic class App {\n\tpublic static void main(String[] args) {\n\t\t\n\t    Scanner input=new Scanner(System.in);\n\t\t    \n\t\t\n\t\tlong t=input.nextInt();\n\t\t\n\t\twhile(t-->0){\n\t\t  \n\t\t\tlong a=input.nextLong();\n\t\t\tlong b=input.nextLong();\n\t\t\tlong c=input.nextLong();\n\t\t    \n\t\t\tlong p=(a*b);\n\t\t\tlong f= gcd(a,b);\n\t\t\t\n\t\t\tlong lcmp=p/f;\n\t\t    \n\t\t\tlong count=0;\n\t\t\tlong[] arr = new long[(int)lcmp];\n\t\t    \n\t\t    for(long i=0; i<lcmp; i++){\n\t\t        \n\t\t        if(  ((i%a)%b) != ((i%b)%a) ){\n\t\t            count++;\n\t\t        }\n\t\t        arr[(int)i]=count;\n\t\t        \n\t\t    }\n\t\t    \n\t\t    for(long i=0; i<c; i++){\n\t\t        \n\t\t    \tlong x=input.nextLong();\n\t\t    \tlong y=input.nextLong();\n\t\t        \n\t\t    \tlong l=((x-1)/lcmp)*count + arr[(int)((x-1)%lcmp)];\n\t\t    \tlong r=(y/lcmp)*count + arr[(int)(y%lcmp)];\n\t\t        \n\t\t        System.out.print(r-l+ \" \");\n\t\t    }\n\t\t    System.out.println();\n\t\t    \n\t\t    \n\t\t    \n\t\t}\n\t}\n\t\n\t static long gcd(long a, long b) \n\t\t    { \n\t\t      if (b == 0) \n\t\t        return a; \n\t\t      return gcd(b, a % b);  \n\t\t    } \t\t\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\t\n\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\n\n\n\t\n\t\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\n/**\n * @author Mubtasim Shahriar\n */\n\npublic class CountingProblem {\n\n\n\tpublic static void main(String[] args) {\n\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader sc = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tSolver solver = new Solver();\n\t\tint t = sc.nextInt();\n//\t\tlong cas = 1;\n//\t\tint t = 1;\n\t\twhile(t--!=0) {\n\t\t\tsolver.solve(sc, out);\n\t\t}\t\t\n\t\tout.close();\n\n\t}\n\t\n\tstatic long cas = 0;\n\n\tstatic class Solver {\n\t\tpublic void solve(InputReader sc, PrintWriter out) {\n\t\t\tlong a = sc.nextLong();\n\t\t\tlong b = sc.nextLong();\n\t\t\tif(a>b) {\n\t\t\t\tlong tmp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = tmp;\n\t\t\t}\n\t\t\tint q = sc.nextInt();\n\t\t\twhile(q--!=0) {\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong r = sc.nextLong();\n//\t\t\t\t++cas;\n//\t\t\t\tif(cas==1853) {\n//\t\t\t\t\tout.print(a+\",\"+b+\",\"+l+\",\"+r + \" \");\n//\t\t\t\t}\n\t\t\t\tif(r<b) {\n\t\t\t\t\tout.print(\"0 \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong lcm = lcm(a,b);\n\t\t\t\tlong tot = get(r,lcm,b);\n\t\t\t\tlong minus = l<=1 ? 0 : get(l-1,lcm,b);\n//\t\t\t\tout.println(tot + \" \" + minus);\n//\t\t\t\tminus += Math.min((l-1-((l-1)/lcm)*lcm), b);\n\t\t\t\ttot -= minus;\n\t\t\t\tout.print(r-l+1-tot + \" \");\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\n\t}\n\t\n\tstatic long get(long r, long lcm, long b) {\n\t\tlong ret = r/lcm;\n\t\tret *= b;\n\t\tret += b;\n\t\tret--;\n\t\tlong out = r/lcm*lcm+b-1;\n\t\tlong baad = Math.max(0, out-r);\n\t\tret -= baad;\n\t\treturn ret;\n\t}\n\t\n\tstatic long gcd(long a, long b) \n    { \n    if (a == 0) \n        return b;  \n    return gcd(b % a, a);  \n    } \n      \n    // method to return LCM of two numbers \n    static long lcm(long a, long b) \n    { \n        return (a*b)/gcd(a, b); \n    } \n\n\tstatic class InputReader { \n\t\tprivate boolean finished = false;\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\tprivate SpaceCharFilter filter;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (numChars == -1) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int peek() {\n\t\t\tif (numChars == -1) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buf[curChar];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tif (Character.isValidCodePoint(c)) {\n\t\t\t\t\tres.appendCodePoint(c);\n\t\t\t\t}\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\tif (filter != null) {\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\t}\n\t\t\treturn isWhitespace(c);\n\t\t}\n\n\t\tpublic static boolean isWhitespace(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tprivate String readLine0() {\n\t\t\tStringBuilder buf = new StringBuilder();\n\t\t\tint c = read();\n\t\t\twhile (c != '\\n' && c != -1) {\n\t\t\t\tif (c != '\\r') {\n\t\t\t\t\tbuf.appendCodePoint(c);\n\t\t\t\t}\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\treturn buf.toString();\n\t\t}\n\n\t\tpublic String readLine() {\n\t\t\tString s = readLine0();\n\t\t\twhile (s.trim().length() == 0) {\n\t\t\t\ts = readLine0();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\n\t\tpublic String readLine(boolean ignoreEmptyLines) {\n\t\t\tif (ignoreEmptyLines) {\n\t\t\t\treturn readLine();\n\t\t\t} else {\n\t\t\t\treturn readLine0();\n\t\t\t}\n\t\t}\n\n\t\tpublic BigInteger readBigInteger() {\n\t\t\ttry {\n\t\t\t\treturn new BigInteger(nextString());\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tpublic char nextCharacter() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\treturn (char) c;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdouble res = 0;\n\t\t\twhile (!isSpaceChar(c) && c != '.') {\n\t\t\t\tif (c == 'e' || c == 'E') {\n\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tif (c == '.') {\n\t\t\t\tc = read();\n\t\t\t\tdouble m = 1;\n\t\t\t\twhile (!isSpaceChar(c)) {\n\t\t\t\t\tif (c == 'e' || c == 'E') {\n\t\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\t\t}\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\t}\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = read();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic boolean isExhausted() {\n\t\t\tint value;\n\t\t\twhile (isSpaceChar(value = peek()) && value != -1) {\n\t\t\t\tread();\n\t\t\t}\n\t\t\treturn value == -1;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\treturn nextString();\n\t\t}\n\n\t\tpublic SpaceCharFilter getFilter() {\n\t\t\treturn filter;\n\t\t}\n\n\t\tpublic void setFilter(SpaceCharFilter filter) {\n\t\t\tthis.filter = filter;\n\t\t}\n\n\t\tpublic interface SpaceCharFilter {\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t\tpublic int[] nextIntArray(int n){\n\t\t\tint[] array=new int[n];\n\t\t\tfor(int i=0;i<n;++i)array[i]=nextInt();\n\t\t\treturn array;\n\t\t}\n\t\tpublic int[] nextSortedIntArray(int n){\n\t\t\tint array[]=nextIntArray(n);\n\t\t\tArrays.sort(array);\n\t\t\treturn array;\n\t\t}\n\t\tpublic int[] nextSumIntArray(int n){\n\t\t\tint[] array=new int[n];\n\t\t\tarray[0]=nextInt();\n\t\t\tfor(int i=1;i<n;++i)array[i]=array[i-1]+nextInt();\n\t\t\treturn array;\n\t\t}\n\t\tpublic long[] nextLongArray(int n){\n\t\t\tlong[] array=new long[n];\n\t\t\tfor(int i=0;i<n;++i)array[i]=nextLong();\n\t\t\treturn array;\n\t\t}\n\t\tpublic long[] nextSumLongArray(int n){\n\t\t\tlong[] array=new long[n];\n\t\t\tarray[0]=nextInt();\n\t\t\tfor(int i=1;i<n;++i)array[i]=array[i-1]+nextInt();\n\t\t\treturn array;\n\t\t}\n\t\tpublic long[] nextSortedLongArray(int n){\n\t\t\tlong array[]=nextLongArray(n);\n\t\t\tArrays.sort(array);\n\t\t\treturn array;\n\t\t}\n\t}\n\n\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    z = gcd(a, b)\n    target = (a * b)//z\n    pref = [0]\n    for j in range(1, target + 1):\n        if (j%a)%b != (j%b)%a:\n            pref.append(pref[-1]+1)\n        else:\n            pref.append(pref[-1])\n    \n    result = []\n    for i in range(q):\n        l , r = map(int, input().split())\n        temp_r = (r//target) * pref[-1]\n        r = r%target\n        l -= 1\n        temp_l = (l//target) * pref[-1]\n        l = l%target\n        temp_r += pref[r]\n        temp_l += pref[l]\n        result.append(temp_r - temp_l)\n    print(*result)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C {\n\n\tstatic long m = (long) (1e9 + 7);\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner scn = new Scanner(System.in);\n\t\tStringBuilder tal = new StringBuilder();\n\t\tfor (int i = 1; i <= 200; i++)\n\t\t\tfor (int j = 1; j <= 200; j++) {\n\t\t\t\tint gc = fd(i, j);\n\t\t\t\ttalib[i][j] = g(i, j);\n\t\t\t}\n\t\tint T = scn.nextInt(), tcs = 0;\n\t\tC: while (tcs++ < T) {\n\t\t\tint a = scn.nextInt(), b = scn.nextInt(), q = scn.nextInt();\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong l = scn.nextLong(), r = scn.nextLong();\n\t\t\t\tint fgh = talib[a][b];\n\t\t\t\tlong ga = fn(fgh, r, a, b), anl = fn(fgh, l - 1, a, b);\n\t\t\t\ttal.append((ga - anl) + \" \");\n\t\t\t}\n\t\t\ttal.append(\"\\n\");\n\t\t}\n\t\tSystem.out.print(tal);\n\t}\n\n\tstatic int fd(int a, int b) {\n\t\treturn (a == 0) ? b : fd(b % a, a);\n\t}\n\n\tstatic int g(int a, int b) {\n\t\treturn (a * b) / fd(a, b);\n\t}\n\n\tstatic int talib[][] = new int[201][201];\n\n\tstatic long fn(int ll, long r, int a, int b) {\n\t\tif (r == 0)\n\t\t\treturn 0;\n\t\tint max = Math.max(a, b);\n\t\tlong ct = (r / ll) * (ll - max), rem = r % ll;\n\t\tif (rem >= max)\n\t\t\tct = ct + (rem - max) + 1;\n\t\treturn ct;\n\t}\n\n\tstatic class Scanner {\n\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "\nfrom bisect import *\nfrom collections import *\nfrom math import gcd,ceil,sqrt,floor,inf\nfrom heapq import *\nfrom itertools import *\n#from operator import add,mul,sub,xor,truediv,floordiv\nfrom functools import *\n\nfrom collections import deque\n#------------------------------------------------------------------------\nimport os\nimport sys\n\nfrom io import BytesIO, IOBase\n# region fastio\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n\n#------------------------------------------------------------------------\ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\n#------------------------------------------------------------------------\n\n\nfrom types import GeneratorType\n \n \ndef bootstrap(f, stack=[]):\n    def wrappedfunc(*args, **kwargs):\n        if stack:\n            return f(*args, **kwargs)\n        else:\n            to = f(*args, **kwargs)\n            while True:\n                if type(to) is GeneratorType:\n                    stack.append(to)\n                    to = next(to)\n                else:\n                    stack.pop()\n                    if not stack:\n                        break\n                    to = stack[-1].send(to)\n            return to\n \n    return wrappedfunc\n\n\nfarr=[1]\nifa=[]\n \ndef fact(x,mod=0):\n    if mod:\n        while x>=len(farr):\n            farr.append(farr[-1]*len(farr)%mod)\n    else:\n        while x>=len(farr):\n            farr.append(farr[-1]*len(farr))\n    return farr[x]\n \ndef ifact(x,mod):\n    global ifa\n    fact(x,mod)\n    ifa.append(pow(farr[-1],mod-2,mod))\n    for i in range(x,0,-1):\n        ifa.append(ifa[-1]*i%mod)\n    ifa.reverse()\n \ndef per(i,j,mod=0):\n    if i<j: return 0\n    if not mod:\n        return fact(i)//fact(i-j)\n    return farr[i]*ifa[i-j]%mod\n    \ndef com(i,j,mod=0):\n    if i<j: return 0\n    if not mod:        \n        return per(i,j)//fact(j)\n    return per(i,j,mod)*ifa[j]%mod\n \ndef catalan(n):\n    return com(2*n,n)//(n+1)\n \ndef isprime(n):\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            return False\n    return True\n \ndef lowbit(n):\n    return n&-n\n \ndef inverse(a,m):\n    a%=m\n    if a<=1: return a\n    return ((1-inverse(m,a)*m)//a)%m\n \nclass BIT:\n    def __init__(self,arr):\n        self.arr=arr\n        self.n=len(arr)-1\n        \n    def update(self,x,v):\n        while x<=self.n:\n            self.arr[x]+=v\n            x+=x&-x\n \n    def query(self,x):\n        ans=0\n        while x:\n            ans+=self.arr[x]\n            x&=x-1\n        return ans\n'''\nclass SMT:\n    def __init__(self,arr):\n        self.n=len(arr)-1\n        self.arr=[0]*(self.n<<2)\n        self.lazy=[0]*(self.n<<2)\n        def Build(l,r,rt):\n            if l==r:\n                self.arr[rt]=arr[l]\n                return\n            m=(l+r)>>1\n            Build(l,m,rt<<1)\n            Build(m+1,r,rt<<1|1)\n            self.pushup(rt)\n        Build(1,self.n,1)\n \n    def pushup(self,rt):\n        self.arr[rt]=self.arr[rt<<1]+self.arr[rt<<1|1]\n \n    def pushdown(self,rt,ln,rn):#lr,rn\u8868\u533a\u95f4\u6570\u5b57\u6570\n        if self.lazy[rt]:\n            self.lazy[rt<<1]+=self.lazy[rt]\n            self.lazy[rt<<1|1]+=self.lazy[rt]\n            self.arr[rt<<1]+=self.lazy[rt]*ln\n            self.arr[rt<<1|1]+=self.lazy[rt]*rn\n            self.lazy[rt]=0\n            \n    def update(self,L,R,c,l=1,r=None,rt=1):#L,R\u8868\u793a\u64cd\u4f5c\u533a\u95f4\n        if r==None: r=self.n\n        if L<=l and r<=R:\n            self.arr[rt]+=c*(r-l+1)\n            self.lazy[rt]+=c\n            return\n        m=(l+r)>>1\n        self.pushdown(rt,m-l+1,r-m)\n        if L<=m: self.update(L,R,c,l,m,rt<<1)\n        if R>m: self.update(L,R,c,m+1,r,rt<<1|1)\n        self.pushup(rt)\n \n    def query(self,L,R,l=1,r=None,rt=1):\n        if r==None: r=self.n\n        #print(L,R,l,r,rt)\n        if L<=l and R>=r:\n            return self.arr[rt]\n        m=(l+r)>>1\n        self.pushdown(rt,m-l+1,r-m)\n        ans=0\n        if L<=m: ans+=self.query(L,R,l,m,rt<<1)\n        if R>m: ans+=self.query(L,R,m+1,r,rt<<1|1)\n        return ans\n'''       \nclass DSU:#\u5bb9\u91cf+\u8def\u5f84\u538b\u7f29\n    def __init__(self,n):\n        self.c=[-1]*n\n \n    def same(self,x,y):\n        return self.find(x)==self.find(y)\n \n    def find(self,x):\n        if self.c[x]<0:\n            return x\n        self.c[x]=self.find(self.c[x])\n        return self.c[x]\n \n    def union(self,u,v):\n        u,v=self.find(u),self.find(v)\n        if u==v:\n            return False\n        if self.c[u]>self.c[v]:\n            u,v=v,u\n        self.c[u]+=self.c[v]\n        self.c[v]=u\n        return True\n \n    def size(self,x): return -self.c[self.find(x)]\n    \nclass UFS:#\u79e9+\u8def\u5f84\n    def __init__(self,n):\n        self.parent=[i for i in range(n)]\n        self.ranks=[0]*n\n \n    def find(self,x):\n        if x!=self.parent[x]:\n            self.parent[x]=self.find(self.parent[x])\n        return self.parent[x]\n \n    def union(self,u,v):\n        pu,pv=self.find(u),self.find(v)\n        if pu==pv:\n            return False\n        if self.ranks[pu]>=self.ranks[pv]:\n            self.parent[pv]=pu\n            if self.ranks[pv]==self.ranks[pu]:\n                self.ranks[pu]+=1\n        else:\n            self.parent[pu]=pv\n \ndef Prime(n):\n    c=0\n    prime=[]\n    flag=[0]*(n+1)\n    \n    for i in range(2,n+1):\n        if not flag[i]:\n            prime.append(i)\n            c+=1\n        for j in range(c):\n            if i*prime[j]>n: break\n            flag[i*prime[j]]=prime[j]\n            if i%prime[j]==0: break\n    return prime\n \ndef dij(s,graph):\n    d={}\n    d[s]=0\n    heap=[(0,s)]\n    seen=set()\n    while heap:\n        dis,u=heappop(heap)\n        if u in seen:\n            continue\n        seen.add(u)\n        for v,w in graph[u]:\n            if v not in d or d[v]>d[u]+w:\n                d[v]=d[u]+w\n                heappush(heap,(d[v],v))\n    return d\n \ndef GP(it): return [[ch,len(list(g))] for ch,g in groupby(it)]\ndef lcm(a,b): return a*b//gcd(a,b) \n \nclass DLN:\n    def __init__(self,val):\n        self.val=val\n        self.pre=None\n        self.next=None\n\ndef nb(i,j):\n    for ni,nj in [[i+1,j],[i-1,j],[i,j-1],[i,j+1]]:\n        if 0<=ni<n and 0<=nj<m:\n            yield ni,nj\n            \n@bootstrap\ndef gdfs(r,p):\n    if len(g[r])==1 and p!=-1:\n        yield None\n    for ch in g[r]:\n        if ch!=p:\n            yield gdfs(ch,r)\n    yield None\n\n\n\ndef topo(n):\n    q=deque()\n    res=[]\n    for i in range(1,n+1):\n        if ind[i]==0:\n            q.append(i)\n            res.append(i)\n    while q:\n        u=q.popleft()\n        for v in g[u]:\n            ind[v]-=1\n            if ind[v]==0:\n                q.append(v)\n                res.append(v)\n    return res\n\ndef cal(x):\n    d,m=divmod(x,p)\n    ans=d*b\n    if m:\n        if m<b:\n            ans+=m\n        else:\n            ans+=b-1\n    return ans\n\nt=N()\nfor i in range(t):\n    a,b,q=RL()\n    if a>b:\n        a,b=b,a\n    ans=[]\n    p=lcm(a,b)\n    if b%a==0:\n        for i in range(q):\n            l,r=RL()\n            ans.append(0)\n    else:\n        for i in range(q):\n            l,r=RL()\n            tmp=r-l+1-(cal(r)-cal(l-1))\n            ans.append(tmp)\n    print(*ans)\n        \n    \n            \n            \n        \n        \n            \n            \n        \n \n\n\n''' \nsys.setrecursionlimit(200000)\nimport threading\nthreading.stack_size(10**8)\nt=threading.Thread(target=main)\nt.start()\nt.join()\n'''\n\n''' \nsys.setrecursionlimit(200000)\nimport threading\nthreading.stack_size(10**8)\nt=threading.Thread(target=main)\nt.start()\nt.join()\n'''\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n\"\"\"\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\ndef ec(x,y):\n    return x*y/gcd(x,y)\n\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    for __ in range(q):\n        l,r = map(int,input().split())\n        tem = int(ec(a,b))\n        if r >= b:\n            l = max(l,b)\n            res = r-l+1\n            n = r//tem-(l-1)//tem\n            res -= n*max(a,b)\n            res += max(a,b)-r%tem-1 if r%tem < max(a,b) else 0\n            res -= max(a,b)-l%tem if l%tem < max(a,b) and l % tem != 0 else 0\n            print(res)\n        else:\n            print(0)\n \t\t\t\t  \t\t\t\t\t      \t    \t\t\t\t\t"
        },
        {
            "language": 1,
            "solution": "import sys\nif sys.subversion[0] == \"PyPy\":\n    import io, atexit\n    sys.stdout = io.BytesIO()\n    atexit.register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n    \n    sys.stdin = io.BytesIO(sys.stdin.read())\n    input = lambda: sys.stdin.readline().rstrip()\n \nRS = raw_input\nRI = lambda x=int: map(x,RS().split())\nRN = lambda x=int: x(RS())\n''' ...................................................................... '''\n\ndef lcm(a,b):\n    def gcd(a,b):\n        while b:\n            a,b = b,a%b\n        return a\n\n    return a*b/gcd(a,b)\n\ndef count(L,freq,per):\n    same = (L/per)*freq[per]\n    same += freq[L%per]\n    return L-same\n\nfor _ in xrange(RN()):\n    a,b,q = RI()\n    per = lcm(a,b)\n\n    freq = [0]*(per+1)\n    #freq[0] = 1\n    for i in xrange(1,per+1):\n        freq[i] = freq[i-1]\n        if (i%a)%b == (i%b)%a:\n            freq[i]+=1\n\n    out = []\n    for Q in xrange(q):\n        l,r = RI()\n        ans = count(r,freq,per)-count(l-1,freq,per)\n        out.append(ans)\n    print ' '.join(map(str,out))\n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long ar[40005];\nlong long a, b;\nvoid build(long long a, long long b) {\n  for (long long i = 1; i <= a * b; i++) {\n    ar[i] = ar[i - 1];\n    if (i % a % b != i % b % a) ar[i]++;\n  }\n}\nlong long fun(long long l, long long r) {\n  return ar[r % (a * b)] + r / (a * b) * ar[a * b] -\n         (ar[l % (a * b)] + l / (a * b) * ar[a * b]);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long i, q, l, r;\n    cin >> a >> b >> q;\n    build(a, b);\n    for (i = 0; i < q; i++) {\n      cin >> l >> r;\n      cout << fun(l - 1, r) << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from fractions import gcd\nget=lambda x,lcm,b:x-b*(x//lcm)-min(b,x%lcm+1)\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    lcm=a*b//gcd(a,b)\n    for i in range(q):\n        l,r=map(int,input().split())\n        print(get(r,lcm,max(a,b))-get(l-1,lcm,max(a,b)),end=' ')\n    print()"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef solve(r, a, b, g):\n\n\tnum = r//g\n\n\tmaxg = num*g\n\n\tret = num*max(a, b)\n\n\tif maxg+max(a, b) <= r:\n\t\tret += max(a, b)\n\telse:\n\t\tret += r-maxg+1 \n\n\treturn ret\n\n\nt = int(input())\nfor _ in range(t):\n\ta, b, q = map(int, input().split())\n\tg = a*b//gcd(a, b)\n\tfor i in range(q):\n\t\tl, r = map(int, input().split())\n\t\tif a == b:\n\t\t\tprint(0)\n\t\t\tcontinue\n\n\t\tprint(r-l+1 - (solve(r, a, b, g) - solve(l-1, a, b, g)))\n\n\tprint('')\n\n\t\t\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b):\n    if b==0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nt=int(input())\nfor _ in range(t):\n    a,b,q=map(int,input().split())\n    d=max(a,b)\n    lcm=(a*b)//gcd(a,b)\n    ans=[]\n    for _ in range(q):\n        l,r=map(int,input().split())\n        tmp=max(min(d-1,r)-l+1,0)\n        tmp+=(r//lcm-l//lcm)*d\n        if l//lcm!=0 and (l//lcm)*lcm+d-1>=l:\n            tmp+=(l//lcm)*lcm+d-1-l+1\n        if r//lcm!=0 and (r//lcm)*lcm+d-1>=r:\n            tmp-=(r//lcm)*lcm+d-1-r\n        ans.append(r-l+1-tmp)\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class YetAnotherCountingProblem {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int T = sc.nextInt();\n        for (int i = 0; i < T; i++) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int q = sc.nextInt();\n            int lcm = a * b / gcd(a, b);\n            int[] pref = new int[lcm];\n            for (int j = 1; j < lcm; j++) {\n                if ((j % a) % b != (j % b) % a) {\n                    pref[j] = pref[j - 1] + 1;\n                } else {\n                    pref[j] = pref[j - 1];\n                }\n            }\n            for (int j = 0; j < q; j++) {\n                long l = sc.nextLong();\n                long r = sc.nextLong();\n                int l1 = (int) (l % lcm);\n                int r1 = (int) (r % lcm);\n                int add = pref[r1];\n                int sub = pref[(l1 - 1 + lcm) % lcm];\n                r = r - r1;\n                if (l1 != 0) {\n                    l = l + lcm - l1;\n                }\n                long mult = ((r - l) / lcm) * pref[lcm - 1];\n                mult = mult + add + pref[lcm - 1] - sub;\n                out.print(mult + \" \");\n\n            }\n            out.println();\n        }\n        out.close();\n\n    }\n\n    public static int gcd(int a, int b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gcd(int a, int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long func(long long l, long long lcm, long long a, long long b) {\n  long long ans = 0;\n  long long d = max(a, b), c = min(a, b);\n  for (long long i = 1; i < min(l, d); i++)\n    if ((i % a) % b == (i % b) % a) ans++;\n  long long div = (l - 1) / lcm;\n  if (div >= 1) ans += (div - 1) * d;\n  if (div >= (long long)1) ans += min(((l - 1) % lcm) + 1, d);\n  return ans;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      long long lcm = a * b / gcd(a, b);\n      long long left = func(l, lcm, a, b);\n      long long right = func(r + 1, lcm, a, b);\n      long long ans = r - l + 1 - right + left;\n      cout << ans << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> ps(1000000);\nlong long int a, b, q;\nlong long int get(long long int x) {\n  return ps[a * b - 1] * (x / (a * b)) + ps[x % (a * b)];\n}\nvoid solve() {\n  ps.clear();\n  cin >> a >> b >> q;\n  for (int i = 1; i < a * b; i++) {\n    ps[i] = ps[i - 1];\n    if ((i % a) % b != (i % b) % a) ps[i]++;\n  }\n  while (q--) {\n    long long int l, r;\n    cin >> l >> r;\n    cout << get(r) - get(l - 1) << \" \";\n  }\n  cout << \"\\n\";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# This sequence is periodic every A*B queries.\n\nt = int(input())\n\nfor case in range(1, t+1):\n    a, b, q = list(map(int, input().split()))\n    # generate cases\n    res = [((x % a) % b) != ((x % b) % a) for x in range(a*b)]\n    running_total = [0 for x in range(a*b)]\n    running_total[0] = 0\n    for x in range(1, a*b):\n        running_total[x] = running_total[x-1] + int(res[x])\n\n    totals = []\n    for _ in range(q):\n        l, r = list(map(int, input().split()))\n        total = 0\n        total += (r // (a*b)) * running_total[-1]\n        total -= ((l-1) // (a*b)) * running_total[-1]\n        total += running_total[r % (a*b)]\n        total -= running_total[(l+a*b-1) % (a*b)]\n        totals.append(str(total))\n    print(' '.join(totals))\n"
        },
        {
            "language": 3,
            "solution": "def gcd(u, v):\n    if u < v:\n        return gcd(v, u)\n    if v == 0:\n        return u\n    return gcd(v, u%v)\n\ndef case(a, b, ld):\n    l, r = map(int, input().split())\n    if a % b == 0:\n        return 0\n    if r < max(a, b):\n        return 0\n    \n    low = l // ld \n    high = r // ld\n    raw = (high-low)*a\n    raw -= min(l-(low*ld),a)\n    raw += min(r-(high*ld)+1, a)\n    return r-l+1-raw\n    \n\ndef sol():\n    a, b, q = map(int, input().split())\n    if a < b:\n        a, b = b, a \n    d = gcd(a, b)\n    b_ = b // d \n    ld = b_*a\n    res = []\n    for _ in range(q):\n        res.append(str(case(a, b, ld)))\n    return res\n\nt = int(input())\nfor _ in range(t):\n    print(' '.join(sol()))"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nfrom fractions import *\n\ndef f(a, b, c):\n    if a<c:\n        return 0\n    else:\n        return (a-c)//b+1\n\nt = int(input())\n\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    a, b = min(a, b), max(a, b)\n    L = a*b//gcd(a, b)\n    ans = []\n    \n    for _ in range(q):\n        l, r = map(int, input().split())\n        eq = 0\n        \n        for x in range(a):\n            m = 0\n            \n            while a*m+x<=b-1:\n                c = a*m+x\n                eq += f(r, L, c)-f(l-1, L, c)\n                m += 1\n            \n        ans.append(r-l+1-eq)\n    \n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "from math import gcd,ceil\nfor _ in range(int(input())):\n  a,b,q=map(int,input().split());lcm=(a*b)//gcd(a,b);n=max(a,b)\n  for _ in range(q):\n    l,r=map(int,input().split())\n    print(r-l-(((r//lcm)-(l//lcm)+1)*n-min(n,l%lcm)-max(0,n-r%lcm-1))+1)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\ndef getValue(x, maxm, lcm):\n    ans = x // lcm * (lcm - maxm) + max(0, x % lcm - maxm + 1)\n    return ans\nfor _ in range(int(sys.stdin.readline())):\n    a, b, q = map(int, input().split())\n    lcm = (a * b) // math.gcd(a, b)\n    ans = []\n    maxm = max(a, b)\n    for i in range(q):\n        l, r = map(int, input().split())\n        t1 = getValue(r, maxm, lcm)\n        t2 = getValue(l - 1, maxm, lcm)\n        ans.append(t1 - t2)\n    print(\" \".join(map(str, ans)))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.text.CollationElementIterator;\nimport java.util.*;\nimport java.lang.*;\n\npublic class Main implements Runnable {\n    public static void main(String[] args) {\n        new Thread(null, new Main(), \"Check2\", 1 << 28).start();// to increse stack size in java\n    }\n    // CandidateCode\n    static long mod = (long) (1e9 + 7);\n    public void run() {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n\n        int t = in.nextInt();\n\n        while (t-- > 0){\n            int a = in.nextInt();\n            int b = in.nextInt();\n            int q = in.nextInt();\n\n\n            if (a > b){\n                int tmp = a;\n                a = b;\n                b = tmp;\n            }\n\n            long lcm = lcm(a,b);\n\n            while (q-- > 0){\n\n                long l = in.nextLong();\n                long r = in.nextLong();\n                int co = 0;\n         /*       for (long i=l;i<=r;i++){\n                    if ((i%a)%b == (i%b)%a){\n            //            w.println(a+\" \"+b+\" \"+l+\" \"+r+\" \"+i+\" \"+(i%a)%b+\" \"+(i%a)+\" \"+(i%b));\n                        co++;\n                    }\n                }\n    //            w.println(co);\n                w.println(r-l + 1 -co);\n*/\n    //             l = in.nextLong();\n     //            r = in.nextLong();\n\n                long count = countDivisibles(l,r,lcm);\n                long ans = count * (b);\n                long val = r / lcm;\n                val *= lcm;\n        //        debug(count,ans,val);\n                if (count != 0 && val + b - 1 > r){\n                    long oth = val + b - 1 - r;\n                    ans -= oth;\n                }\n   //             debug(ans);\n                long ll = l / lcm;\n                ll *= lcm;\n                if (ll + b - 1 >= l && ll < l) {\n                    ans += Math.min(r,ll+b-1) - l + 1;\n                }\n      //          debug(ans);\n            //    w.println(ans);\n                ans = (r - l + 1 - ans);\n                w.print(ans+\" \");\n\n            }\n\n            w.println();\n       }\n        w.close();\n    }\n    static long countDivisibles(long A, long B, long M)\n    {\n        // Add 1 explicitly as A is divisible by M\n        if (A % M == 0)\n            return (B / M) - (A / M) + 1;\n\n        // A is not divisible by M\n        return (B / M) - (A / M);\n    }\n\n    long lcm (long a,long b){\n        return (a * b) / gcd(a,b);\n    }\n    class pair implements Comparable<pair>{\n        int id,val;\n        pair(int id,int val){\n            this.id = id;\n            this.val = val;\n        }\n        public int compareTo(pair o){\n            return this.val != o.val ? -(this.val - o.val) : this.id - o.id;\n        }\n    }\n    void debug(Object...args) {\n        System.out.println(Arrays.deepToString(args));\n    }\n    long modinv(long a,long b) {\n        long p=power(b,mod-2,mod);\n        p=a%mod*p%mod;\n        p%=mod;\n        return p;\n    }\n    long power(long x,long y,long mod){\n        if(y==0)return 1%mod;\n        if(y==1)return x%mod;\n        long res=1;\n        x=x%mod;\n        while(y>0)\n        {\n            if((y%2)!=0){\n                res=(res*x)%mod;\n            }\n            y=y/2;\n            x=(x*x)%mod;\n        }\n        return res;\n    }\n    long gcd(long a,long b){\n\n        if(b==0)return a;\n        return gcd(b,a%b);\n    }\n    void sev(int a[],int n){\n\n        for(int i=2;i<=n;i++)a[i]=i;\n        for(int i=2;i<=n;i++){\n\n            if(a[i]!=0){\n                for(int j=2*i;j<=n;){\n\n                    a[j]=0;\n                    j=j+i;\n                }\n            }\n\n        }\n\n    }\n    static class InputReader\n    {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n\n        public int read()\n        {\n            if (numChars==-1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars){\n                curChar = 0;\n                try\n                {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n\n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine()\n        {\n            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n            String stock = \"\";\n            try\n            {\n                stock = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return stock;\n        }\n        public int nextInt()\n        {\n            int c = read();\n\n            while(isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do\n            {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.')\n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.')\n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c)\n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next()\n        {\n            return readString();\n        }\n\n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class C {\n\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc = new FastScanner();\n\t\tint t = sc.nextInt();\n\t\tfor(int tt = 0; tt < t ;tt++) {\n\t\t\tint a = sc.nextInt() , b = sc.nextInt() , q = sc.nextInt();\n\t\t\tif(a > b) {\n\t\t\t\tint temp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = temp;\n\t\t\t}\n\t\t\tint lcm = a * b / gcd(a,b);\n\t\t\tint s = lcm - b;\n\t\t\tfor(int i = 0 ; i < q ; i++) {\n\t\t\t\tlong l = sc.nextLong() , r = sc.nextLong();\n\t\t\t\tlong x = (( l - 1) / lcm) * s;\n                long x1 = (l - 1) % lcm;\n                if(x1 >= b) x += (x1 - b + 1);\n \n                long y=(r/lcm)*s;\n                long y1=r%lcm;\n                if(y1>=b)y+=(y1-b+1);\n                \n                System.out.print(y - x + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\t\n\t static int gcd(int a,int b){\n\t        if(b==0)return a;\n\t        else return gcd(b,a%b);\n\t }\n\t\n\tstatic class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\t\n\t\tpublic String next() {\n\t\t\twhile (!st.hasMoreElements())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() {return Long.parseLong(next());}\n \n\t\tpublic double nextDouble() {return Double.parseDouble(next());}\n\t\t\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef findv(lcm,l,r,b):\n    p = max(min(r,b),l)\n    s = r-p+1\n    x1 = p//lcm\n    x2 = r//lcm\n    x1s = p%lcm\n    if x1*lcm+b > p:\n        s -= b-x1s\n    x1 += 1\n    if x2*lcm+b <= r:\n        s -= b*(x2-x1+1)\n    else:\n        s -= b*(x2-x1)+r%lcm+1\n    return s\n\ncases = int(input())\nfor t in range(cases):\n    a,b,q = list(map(int,input().split()))\n    a,b = min(a,b),max(a,b)\n    lcm = (a*b)//math.gcd(a,b)\n    out = []\n    for i in range(q):\n        l,r = list(map(int,input().split()))\n        if b>r:\n            out.append(0)\n        else:\n            out.append(findv(lcm, l, r, b))\n    print(*out)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mxn = 40003;\nlong long len, i;\nlong long p[mxn];\nvoid build(long long a, long long b) {\n  len = a * b;\n  p[0] = 0;\n  for (i = 1; i <= len; i++) {\n    p[i] = p[i - 1];\n    if ((i % a) % b != (i % b) % a) {\n      p[i]++;\n    }\n  }\n}\nlong long query(long long l) {\n  long long cnt = l / len;\n  int rem = l % len;\n  return p[len] * 1ll * cnt + p[rem];\n}\nlong long query(long long l, long long r) { return query(r) - query(l - 1); }\nint main() {\n  int t;\n  cin >> t;\n  for (int te = 0; te < t; te++) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    build(a, b);\n    long long l, r;\n    for (i = 0; i < q; i++) {\n      cin >> l >> r;\n      cout << query(l, r) << \" \";\n    }\n    cout << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfor t in range(T):\n    a, b, Q = [int(i) for i in input().split()]\n    prod = a*b\n    precompute = [(i%a)%b != (i%b)%a for i in range(prod+1)]\n    prefix = [0 for i in range(prod+1)]\n    prefix[0] = 0\n    for i in range(1, prod+1):\n        prefix[i] = prefix[i-1] + (1 if precompute[i] else 0)\n    def total_seg(x):\n        ans = x // prod * prefix[-1]\n        tmp = x % prod\n        if tmp > 0:\n            ans += prefix[tmp]\n        return ans\n    final = []\n    for q in range(Q):\n        l, r = [int(i) for i in input().split()]\n        final.append(total_seg(r) - total_seg(l-1))\n    print(*final)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys,math\ninput = sys.stdin.readline\n\n############ ---- USER DEFINED INPUT FUNCTIONS ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(s[:len(s) - 1])\ndef invr():\n    return(map(int,input().split()))\n################################################################\n############ ---- THE ACTUAL CODE STARTS BELOW ---- ############\n\nt = inp()\ndef lcm(a, b):\n    return abs(a*b) // math.gcd(a, b)\n\ndef find_left(l,lc):\n    low,high = 0,10**18 + 1\n   \n    while low < high:\n        mid = (low + high)//2\n        if mid*lc>= l:\n            high = mid\n        else:\n            low = mid + 1\n        #print(low)\n    return low*lc\n\ndef find_right(l,lc,r):\n    low,high = 1,10**18 + 1\n    \n    while low < high:\n        mid = (low + high)//2\n        if l + mid*lc - 1 >= r:\n            high = mid\n        else:\n            low = mid + 1\n\n    return (low,l + low*lc - 1)\nfor _ in range(t):\n    a,b,q = invr()\n    ans = []\n    ma = max(a,b)\n    lc = lcm(a,b)\n    for each in range(q):\n        l,r = invr()\n        left = find_left(l,lc)\n        if left > r:\n            ol = left - lc\n            if ol + ma > r:\n                ans.append(0)\n            else:\n                ans.append(r -  max(ol + ma - 1,l - 1))\n        else:\n            num,right = find_right(left,lc,r)\n            lremain = left - l\n            if right > r:\n                num -= 1\n            lr = min(lremain,lc - ma)\n            rr = 0 if right == r else max(0,r - ((right - lc) + ma))\n            result = num*(lc - ma) + lr + rr\n            ans.append(result)\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "import math\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = list(map(int, input().split()))\n    lcm = a * b // (math.gcd(a, b))\n    count = 0\n    # for i in range(lcm):\n    #     if (i % a) % b != (i % b) % a:\n    #         count += 1\n    #         print(\"{}\".format(i), end = \",\")\n    count += (lcm - max(a, b))\n    # print(\"count is {}\".format(count))\n    for _ in range(q):\n        l, r = list(map(int, input().split()))\n        r += 1\n        result = ((r // lcm) - (l // lcm)) * count\n        result -= l % lcm - min(l % lcm, max(a, b))\n        result += r % lcm - min(r % lcm, max(a, b))\n        print(result, end=' ')\n    print()\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"Template for Python Competitive Programmers prepared by pa.n.ik and Kabeer seth \"\"\"\n\n# to use the print and division function of Python3\nfrom __future__ import division, print_function\n\n\"\"\"value of mod\"\"\"\nMOD = 998244353\nmod = 10**9 + 7\n\n\"\"\"use resource\"\"\"\n# import resource\n# resource.setrlimit(resource.RLIMIT_STACK, [0x100000000, resource.RLIM_INFINITY])\n\n\"\"\"for factorial\"\"\"\n\n# def prepare_factorial():\n#     fact = [1]\n#     for i in range(1, 2005):\n#         fact.append((fact[-1] * i) % mod)\n#     ifact = [0] * 2005\n#     ifact[2004] = pow(fact[2004], mod - 2, mod)\n#     for i in range(2004, 0, -1):\n#         ifact[i - 1] = (i * ifact[i]) % mod\n#\n#     return fact, ifact\n\n\"\"\"uncomment next 4 lines while doing recursion based question\"\"\"\n# import threading\n# threading.stack_size(1<<27)\nimport sys\n# sys.setrecursionlimit(10000)\n\n\n\"\"\"uncomment modules according to your need\"\"\"\n# from bisect import bisect_left, bisect_right, insort\nfrom itertools import repeat\n# from math import floor, ceil, sqrt, degrees, atan, pi, log\nfrom heapq import heappop, heapify, heappush\n# from random import randint as rn\n# from Queue import Queue as Q\nfrom collections import Counter, defaultdict, deque\n# from copy import deepcopy\n'''\ndef modinv(n, p):\n    return pow(n, p - 2, p)\n'''\n\n#\n# def ncr(n, r,  fact, ifact):  # for using this uncomment the lines calculating fact and ifact\n#     t = (fact[n] * (ifact[r]*ifact[n-r]) % mod)% mod\n#     return t\n\n\n\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\n\n\"\"\"*****************************************************************************************\"\"\"\n\ndef GCD(x, y):\n    while (y):\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return (x*y)//(GCD(x, y))\n\n# def get_xor(n):\n#     return [n,1,n+1,0][n%4]\n\n# def pow(a, b, d):\n#     # print(a, b, d)\n#     res = 1\n#     while b:\n#         if b&1:\n#             res = (res%d * a%d)%d\n#             b -= 1\n#         else:\n#             a = (a%d * a%d)%d\n#             b>>=1\n#\n#     return res\n\n\"\"\" ********************************************************************************************* \"\"\"\n\n\n\ndef main():\n\n    def solve(n):\n        LCM = lcm(a, b)\n        till = n//LCM\n        ans = till * (LCM - b)\n\n        \"\"\"This loop is giving me TLE, I will destroy it\"\"\"\n        # for i in range(till*LCM + 1, n+1):\n        #     if (i%a)%b != (i%b)%a:\n        #         ans += 1\n\n        ans += max(n - till*LCM - b + 1, 0)\n\n        return ans\n\n    T = int(input())\n    while T:\n        a, b, q = get_ints()\n        a, b = min(a, b), max(a, b)\n        ans = []\n        while q:\n            l, r = get_ints()\n            ans.append(solve(r) - solve(l-1))\n            q-=1\n        print(*ans)\n        T-=1\n\n\n    #     a, b = get_ints()\n    # for i in range(1, 201):\n    #     if (i%a)%b != (i%b)%a:\n    #         print(i)\n\n\n\"\"\" -------- Python 2 and 3 footer by Pajenegod and c1729 ---------\"\"\"\n\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n    range = xrange\n\nimport os, sys\nfrom io import IOBase, BytesIO\n\nBUFSIZE = 8192\n\n\nclass FastIO(BytesIO):\n    newlines = 0\n\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0, 2), super(FastIO, self).write(s))[0])\n        return s\n\n    def read(self):\n        while self._fill(): pass\n        return super(FastIO, self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill();\n            self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s: self.buffer.write(s.encode('ascii'))\n            self.read = lambda: self.buffer.read().decode('ascii')\n            self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\n\"\"\" main function\"\"\"\n\nif __name__ == '__main__':\n    main()\n    # threading.Thread(target=main).start()"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    // https://codeforces.com/problemset/problem/1342/C\n    // creating flag array , 1 where condition satisfies\n    // length = 40000 bcz 1<=a,b <=200\n    public static int[] flag = new int[40005];\n    public static int a;\n    public static int b;\n\n    public static void create_flag(){\n        flag[0] = 0;\n        //1->ab-1...ab->2ab-1\n        //accumulative sum array\n        for(int i = 1;i<a*b;i++){\n            if((i%a)%b != (i%b)%a){\n                flag[i] = flag[i-1]+1;\n            }\n            else{\n                flag[i] = flag[i-1];\n            }\n        }\n    }\n    public static long countNoOfX(long n){\n        if(n < a*b){\n            return flag[(int)n];\n        }\n        long count = (n/(a*b))*flag[a*b-1];\n        count += flag[(int)(n%(a*b))];\n        return count;\n    }\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            a = sc.nextInt();\n            b = sc.nextInt();\n            int q = sc.nextInt();\n            // (x % a) % b = ((ab+x) % a) % b => x%a = (ab+x)%a\n            // (x % b) % a = ((ab+x) % b) % a\n            // values repeat after ab\n            // create flag array till ab\n            create_flag();\n            while (q-- > 0) {\n                long l = sc.nextLong();\n                long r = sc.nextLong();\n                System.out.print(countNoOfX(r)-countNoOfX(l-1)+\" \");\n            }\n            System.out.println();\n            Arrays.fill(flag,0);\n        }\n        sc.close();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int a, b, q, i, j, n, x, y, z, ans, z1, ans1, m;\n    cin >> a >> b >> q;\n    n = a * b;\n    m = n;\n    n++;\n    long long int a1[n];\n    for (i = 0; i <= n; i++) {\n      a1[i] = 0;\n    }\n    for (i = 1; i <= n; i++) {\n      x = i % a;\n      x = x % b;\n      y = i % b;\n      y = y % a;\n      if (x != y) {\n        a1[i] = 1;\n      } else {\n        a1[i] = 0;\n      }\n    }\n    for (i = 1; i <= n; i++) {\n      a1[i] = a1[i] + a1[i - 1];\n    }\n    while (q--) {\n      cin >> x >> y;\n      x--;\n      ans = 0;\n      ans1 = 0;\n      z = y / m;\n      ans = a1[m] * z;\n      z = y % m;\n      ans = ans + a1[z];\n      z = x / m;\n      ans1 = a1[m] * z;\n      z = x % m;\n      ans1 = ans1 + a1[z];\n      cout << ans - ans1 << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from fractions import gcd\nfrom sys import stdin\n\nlcm = lambda a, b: a // gcd(a, b) * b\nrints = lambda: [int(x) for x in stdin.readline().split()]\nout = []\n\nfor _ in range(int(input())):\n    a, b, q = rints()\n    ans, qur, lc = [], [rints() for _ in range(q)], lcm(a, b)\n    a, b = min(a, b), max(a, b)\n\n    for l, r in qur:\n        all = ((r // lc) * (lc - (b - 1))) + (max(r % lc - (b - 1), 0))\n\n        if r >= lc:\n            all -= (r // lc)\n        l -= 1\n        ext = ((l // lc) * (lc - (b - 1))) + (max(l % lc - (b - 1), 0))\n\n        if l >= lc:\n            ext -= (l // lc)\n\n        ans.append(str(all - ext))\n    out.append(' '.join(ans))\nprint('\\n'.join(out))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst long long LINF = 4557430888798830399;\nint a, b, q;\nint c[80005];\nvoid TestCase() {\n  scanf(\"%d%d%d\", &a, &b, &q);\n  int T = a * b;\n  for (int i = 1; i <= 2 * T; ++i) {\n    int c1 = i % a % b;\n    int c2 = i % b % a;\n    c[i] = c[i - 1] + (c1 != c2);\n  }\n  while (q--) {\n    long long l, r;\n    scanf(\"%lld%lld\", &l, &r);\n    long long t = (r - l) / T;\n    long long ans = t * c[T];\n    l %= T;\n    r %= T;\n    if (r < l) r += T;\n    ans += c[r] - (l >= 1 ? c[l - 1] : 0);\n    printf(\"%lld \", ans);\n  }\n  puts(\"\");\n  return;\n}\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int tid = 1; tid <= t; ++tid) {\n    TestCase();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader file = new BufferedReader(new InputStreamReader(System.in));\n\t\tint inputs = Integer.parseInt(file.readLine());\n\t\twhile(inputs-->0) {\n\t\t\tStringTokenizer st = new StringTokenizer(file.readLine());\n\t\t\tint a = Integer.parseInt(st.nextToken());\n\t\t\tint b = Integer.parseInt(st.nextToken());\n\t\t\tint q = Integer.parseInt(st.nextToken());\n//\t\t\tSystem.out.println(LCM(a, b));\n\t\t\tint[] preSum = new int[LCM(a, b)+1];\n\t\t\tfor(int i = 1; i < preSum.length; i++) {\n\t\t\t\tpreSum[i] = preSum[i-1];\n\t\t\t\tif(i%a%b != i%b%a)\n\t\t\t\t\tpreSum[i]++;\n\t\t\t}\n//\t\t\tSystem.out.println(Arrays.toString(preSum));\n\t\t\tStringBuilder ans = new StringBuilder();\n\t\t\twhile(q-->0) {\n\t\t\t\tst = new StringTokenizer(file.readLine());\n\t\t\t\tlong l = Long.parseLong(st.nextToken());\n\t\t\t\tlong r = Long.parseLong(st.nextToken());\n\t\t\t\tans.append(getAns(r, preSum)-getAns(l-1, preSum) + \" \");\n\t\t\t}\n\t\t\tSystem.out.println(ans.toString().trim());\n\t\t}\n\n\t}\n\n\tpublic static int GCD(int a, int b) {\n\t\tif(b == 0)\n\t\t\treturn a;\n\t\treturn GCD(b, a%b);\n\t}\n\t\n\tpublic static int LCM(int a, int b) {\n\t\treturn a * b / GCD(a, b);\n\t}\n\t\n\tpublic static long getAns(long n, int[] preSum) {\n\t\treturn n/(preSum.length-1)*preSum[preSum.length-1]+preSum[(int) (n%(preSum.length-1))];\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "def cnt(x, p, ps):\n    return ps[x % p] +  (x // p) * ps[p - 1]\n\nfor t in range(int(input().strip())):\n    a, b, q = tuple(map(int, input().strip().split()))\n    p = a * b\n    ps = [0]\n    for i in range(1, p):\n        vab = (i % a) % b\n        vba = (i % b) % a\n        ps.append(ps[i-1])\n        if vba != vab:\n            ps[i] += 1\n    res = []\n    for i in range(q):\n        l, r = tuple(map(int, input().strip().split()))\n        res.append(str(cnt(r, p, ps) - cnt(l-1, p, ps)))\n    print(\" \".join(res))\n"
        },
        {
            "language": 4,
            "solution": "\n// Problem : C. Yet Another Counting Problem\n// Contest : Codeforces - Educational Codeforces Round 86 (Rated for Div. 2)\n// URL : https://codeforces.com/contest/1342/problem/C\n// Memory Limit : 256 MB\n// Time Limit : 3500 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\nimport java.io.*;\nimport java.util.*;\n\npublic class a implements Runnable{\n\t\n    public static void main(String[] args) {\n        new Thread(null, new a(), \"process\", 1<<26).start();\n    }\n\tpublic void run() {\n\t\tFastReader scan = new FastReader();\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\t\t//PrintWriter out = new PrintWriter(\"file.out\");\n\t\tTask solver = new Task();\n\t\tint t = scan.nextInt();\n\t\t//int t = 1;\n\t\tfor(int i = 1; i <= t; i++) solver.solve(i, scan, out);\n\t\tout.close();\n\t}\n\n\tstatic class Task {\n\t\tstatic final int inf = Integer.MAX_VALUE;\n\n\t\tpublic void solve(int testNumber, FastReader sc, PrintWriter pw) {\n\t\t\t//CHECK FOR QUICKSORT TLE\n\t\t\t//***********************//\n\t\t\t//CHECK FOR INT OVERFLOW\n\t\t\t//***********************//\n\t\t\tint a = sc.nextInt();\n\t\t\tint b = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\tint x = lcm(a, b);\n\t\t\tint z = Math.max(a, b);\n\t\t\tfor(int i = 0; i < q;i++){\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong r = sc.nextLong();\n\t\t\t\tlong lower = l / x * x;\n\t\t\t\tlong tr = (l + x - 1) / x;\n\t\t\t\tlong hr = r / x;\n\t\t\t\tlong sum  = 0;\n\t\t\t\tif(hr < tr){\n\t\t\t\t\tlong rr = Math.max(l, lower + z);\n\t\t\t\t\tpw.print(Math.max(0,r - rr + 1) + \" \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(hr > tr)\n\t\t\t\tsum += 1l * (hr - tr) * (x - z);\n\t\t\t\tsum += Math.max(Math.min(tr * x, r) - Math.max(lower + z, l), 0);\n\t\t\t\tsum += Math.max(r - Math.max(hr * x + z, l) + 1, 0);\n\t\t\t\tpw.print(sum + \" \");\n\t\t\t}\n\t\t\tpw.println();\n\t\t\t\n\t\t}\n\t\tint gcd(int a, int b){\n\t\t\treturn b == 0 ? a : gcd(b, a%b);\n\t\t}\n\t\tint lcm(int a, int b){\n\t\t\tint gcd = gcd(a, b);\n\t\t\treturn (a * b / gcd);\n\t\t}\n\t}\n\tstatic long binpow(long a, long b, long m) {\n\t\ta %= m;\n\t\tlong res = 1;\n\t\twhile (b > 0) {\n\t\t\tif ((b & 1) == 1)\n\t\t\t\tres = res * a % m;\n\t\t\ta = a * a % m;\n\t\t\tb >>= 1;\n\t\t}\n\t\treturn res;\n\t}\n\tstatic void sort(int[] x){\n\t\tshuffle(x);\n\t\tArrays.sort(x);\n\t}\n\tstatic void sort(long[] x){\n\t\tshuffle(x);\n\t\tArrays.sort(x);\n\t}\n\tstatic class tup implements Comparable<tup>{\n\t\tint a, b;\n\t\ttup(int a,int b){\n\t\t\tthis.a=a;\n\t\t\tthis.b=b;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(tup o){\n\t\t\treturn Integer.compare(o.b,b);\n\t\t}\n\t}\n\tstatic void shuffle(int[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tint temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\n\tstatic void shuffle(long[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tlong temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastReader(String s) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(new File(s)));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "\nclass Soln:\n    def __init__(self, a, b):\n        self.a, self.b = a, b\n        pSum = []\n        for x in range(a * b):\n            if len(pSum) == 0:\n                curr = 0\n            else:\n                curr = pSum[-1]\n            if (x % a) % b != (x % b) % a:\n                curr += 1\n            pSum.append(curr)\n        self.pSum = pSum\n    \n    def brute(self, l, r):\n        a, b = self.a, self.b\n        result = 0\n        for x in range(l, r + 1):\n            if (x % a) % b != (x % b) % a:\n                result += 1\n        return result\n\n    def mod(self, n):\n        a, b = self.a, self.b\n        return n % (a * b)\n\n    def npSum(self, l, i):\n        mod = self.mod\n        a, b = self.a, self.b\n        pSum = self.pSum\n        lVal = 0 if l - 1 < 0 else pSum[l - 1]\n        if i < a * b - l:\n            return pSum[l + i] - lVal\n        return pSum[a * b - 1] - lVal + pSum[ mod(l + i) ]\n\n    def fast(self, l, r):\n        mod = self.mod\n        a, b = self.a, self.b\n        if r - l < a * b:\n            return self.npSum(\n                mod(l), \n                mod(r - l),\n            )\n        N = (r - l) // (a * b)\n        return N * self.npSum(\n            mod(l),\n            a * b - 1\n        ) + self.npSum(\n            mod(l),\n            mod(r - l),\n        )\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        a, b, q = [int(x) for x in input().split(' ')]\n        soln = Soln(a, b)\n        result = []\n        for _ in range(q):\n            l, r = [int(x) for x in input().split(' ')]\n            # curr = soln.brute(l, r)\n            curr = soln.fast(l, r)\n            result.append(curr)\n        print(' '.join(str(x) for x in result))\n\n# import random\n# def randomTest():\n#     T = 100\n#     for i in range(1, T + 1):\n#         a = random.randint(1, 20)\n#         b = random.randint(1, 20)\n#         l = random.randint(1, 1000)\n#         r = random.randint(l + 1, 2000)\n#         print(f'Case #{i}, {(a, b, l, r) = }')\n#         s = Soln(a, b)\n#         brute = s.brute(l, r)\n#         fast = s.fast(l, r)\n#         try:\n#             assert(brute == fast)\n#         except:\n#             print('ERROR!')\n#             print(f'{(brute, fast) = }')\n#             break\n\nif __name__ == '__main__':\n    main()\n    # randomTest()"
        },
        {
            "language": 4,
            "solution": "// Magic. Do not touch.\nimport java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class Main {\n    static class FastReader\n    {\n        private InputStream mIs;private byte[] buf = new byte[1024];private int curChar,numChars;public FastReader() { this(System.in); }public FastReader(InputStream is) { mIs = is;}\n        public int read() {if (numChars == -1) throw new InputMismatchException();if (curChar >= numChars) {curChar = 0;try { numChars = mIs.read(buf);} catch (IOException e) { throw new InputMismatchException();}if (numChars <= 0) return -1; }return buf[curChar++];}\n        public String nextLine(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isEndOfLine(c));return res.toString() ;}\n        public String next(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isSpaceChar(c));return res.toString();}\n        public long l(){int c = read();while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }long res = 0; do{ if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read();}while(!isSpaceChar(c));return res * sgn;}\n        public int i(){int c = read() ;while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }int res = 0;do{if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read() ;}while(!isSpaceChar(c));return res * sgn;}\n        public double d() throws IOException {return Double.parseDouble(next()) ;}\n        public boolean isSpaceChar(int c) { return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1; }\n        public boolean isEndOfLine(int c) { return c == '\\n' || c == '\\r' || c == -1; }\n        public void scanIntArr(int [] arr){ for(int li=0;li<arr.length;++li){ arr[li]=i();}}\n        public void scanIntIndexArr(int [] arr){ for(int li=0;li<arr.length;++li){ arr[li]=i()-1;}}\n        public void scanLongArr(long [] arr){for (int i=0;i<arr.length;++i){arr[i]=l();}}\n        public void shuffle(int [] arr){ for(int i=arr.length;i>0;--i) { int r=(int)(Math.random()*i); int temp=arr[i-1]; arr[i-1]=arr[r]; arr[r]=temp; } }\n        public int swapIntegers(int a,int b){return a;} //Call it like this: a=swapIntegers(b,b=a)\n    }\n    public static void main(String[] args) throws IOException {\n\n        FastReader fr = new FastReader();\n        PrintWriter pw = new PrintWriter(System.out);\n        /*\ninputCopy\n2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\noutputCopy\n0 0 0 2 4\n0 91   */\n        //Press Ctrl+Win+Alt+L for reformatting indentation\n\n        int t = fr.i();\n        for (int ti = 0; ti < t; ++ti) {\n            int a=fr.i();\n            int b=fr.i();\n            int [] count=new int[a*b];\n            for(int i=0;i<a*b;++i)\n                if(i%a%b == i%b%a)++count[i];\n            for(int i=1;i<a*b;++i)\n                count[i]+=count[i-1];\n            int q=fr.i();\n            for(int qi=0;qi<q;++qi){\n                long l=fr.l();\n                long r=fr.l();\n                long invalid=cal(count,r)-cal(count,l-1);\n                pw.print(r-l+1-invalid + \" \");\n            }\n            pw.println();\n        }\n        pw.flush();\n        pw.close();\n    }\n\n    private static long cal(int[] count, long n) {\n        long whole=n/count.length;\n        return whole*count[count.length-1]+count[(int)(n%count.length)];\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class I {\n\n\n    public I(FastScanner in, PrintWriter out, int test) {\n        int a = in.nextInt();\n        int b = in.nextInt();\n        if (a > b) {\n            int tmp = a;\n            a = b;\n            b = tmp;\n        }\n        int lcm = a * b / gcd(a, b);\n\n        // ((k * lcm + x) % a) % b = (x % a) % b\n        // ((k * lcm + x) % b) % a = (x % b) % a\n        // for we find how many valid numbers in range [0, lcm - 1].\n        int[] A = new int[lcm + 1];\n        for (int i = 0; i < lcm; i++) {\n            A[i + 1] = A[i];\n            if (i % a % b != i % b % a)\n                A[i + 1]++;\n        }\n\n        int q = in.nextInt();\n        List<String> res = new ArrayList<>(q);\n        for (int i = 0; i < q; i++) {\n            long l = in.nextLong();\n            long r = in.nextLong() + 1;\n            long x = l / lcm * A[lcm] + A[(int)(l % lcm)];\n            long y = r / lcm * A[lcm] + A[(int)(r % lcm)];\n            res.add(String.valueOf(y - x));\n        }\n        out.println(String.join(\" \", res));\n    }\n\n    private int gcd(int a, int b) {\n        if (b == 0) return a;\n        return gcd(b, a % b);\n    }\n\n    public static void main(String[] args) {\n        PrintWriter out = new PrintWriter(System.out);\n        // Scanner in = new Scanner(\n                // new BufferedReader(new InputStreamReader(System.in)));\n        FastScanner in = new FastScanner(System.in);\n\n        int T = in.nextInt();\n        for (int t = 1; t <= T; t++) {\n            I sol = new I(in, out, t);\n        }\n\n        out.close();\n    }\n}\n\n\nclass FastScanner{\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n\n    public FastScanner(InputStream stream)\n    {\n        this.stream = stream;\n    }\n\n    int read()\n    {\n        if (numChars == -1)\n            throw new InputMismatchException();\n        if (curChar >= numChars){\n            curChar = 0;\n            try{\n                numChars = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (numChars <= 0)\n                return -1;\n        }\n        return buf[curChar++];\n    }\n\n    boolean isSpaceChar(int c)\n    {\n        return c==' '||c=='\\n'||c=='\\r'||c=='\\t'||c==-1;\n    }\n\n    boolean isEndline(int c)\n    {\n        return c=='\\n'||c=='\\r'||c==-1;\n    }\n\n    int nextInt()\n    {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong()\n    {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble()\n    {\n        return Double.parseDouble(next());\n    }\n\n    String next(){\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        StringBuilder res = new StringBuilder();\n        do{\n            res.appendCodePoint(c);\n            c = read();\n        }while(!isSpaceChar(c));\n        return res.toString();\n    }\n\n    String nextLine(){\n        int c = read();\n        while (isEndline(c))\n            c = read();\n        StringBuilder res = new StringBuilder();\n        do{\n            res.appendCodePoint(c);\n            c = read();\n        }while(!isEndline(c));\n        return res.toString();\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "input = raw_input\n\nfrom fractions import gcd\n\ndef calc_diff_num(nums, lcd, innum):\n    r = innum // lcd\n    q = innum % lcd\n    ret = nums[lcd-1] * r + nums[q]\n    return ret\n\n\ndef answer():\n    a, b, q = map(int, input().split(\" \"))\n    g = gcd(a, b)\n    lcd = a * b // g\n\n    \n    cur = 0\n    nums = [0] * lcd\n    for val in range(0, lcd):\n        i = val\n        out1 = ((val) % a) % b\n        out2 = ((val) % b) % a\n        if out1 != out2:\n            cur += 1\n        nums[i] = cur\n\n\n\n    for i in range(q):\n        l, r = map(int, input().split(\" \"))\n        tmp1 = calc_diff_num(nums, lcd, l-1)\n        tmp2 = calc_diff_num(nums, lcd, r)\n        print tmp2-tmp1,\n    print\n\n\nt = int(input())\nfor _ in range(t):\n    out = answer()"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\ndef ii():\n    return sys.stdin.readline().strip()\n\ndef idata():\n    return [int(x) for x in ii().split()]\n\ndef solve_of_problem():\n    a, b, q = idata()\n    a, b = min(a, b), max(a, b)\n    ans = []\n    for i in range(q):\n        l, r = idata()\n        qw = a * b // math.gcd(a, b)\n        l1, r1 = l // qw, r // qw\n        l1, r1 = l1 * (qw - b), r1 * (qw - b)\n        l, r = max(0, l % qw - b), max(0, r % qw - b + 1)\n        ans += [r1 + r - l1 - l]\n    print(*ans)\n    return\n\nfor ______ in range(int(ii())):\n    solve_of_problem()\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\n\nfor _ in range(t):\n    a, b, q = list(map(int, input().split()))\n\n    d = []\n    for i in range(a * b):\n        if (i % a) % b != (i % b) % a:\n            d.append(1)\n        else:\n            d.append(0)\n\n    sums = [0]\n    for i in range(a * b):\n        sums.append(sums[-1] + d[i])\n\n    for _ in range(q):\n        l, r = list(map(int, input().split()))\n        ans = ((r - l) // (a * b)) * sums[-1]\n        l %= a * b\n        r %= a * b\n\n        extra = sums[max(l, r) + 1] - sums[min(l, r)]\n\n        if l <= r:\n            ans += extra\n        else:\n            ans = ans - extra + sums[-1] + d[r] + d[l]\n\n        print(ans, end=\" \")\n    print()\n\n\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nimport sys\nfrom copy import copy, deepcopy\ninput = sys.stdin.readline\n'''\nn, m = map(int, input().split())\nn = int(input())\nA = list(map(int, input().split()))\nS = input().strip()\nfor CASES in range(int(input())):\n'''\ninf = 100000000000000000  # 1e17\nmod = 998244353\n\n'''\n# example input\n\n\n'''\n\n\nfor CASES in range(int(input())):\n    a, b, q = map(int, input().split())\n    lcm = b // gcd(a, b) * a\n    A = [0] * (lcm + 3)\n    for i in range(lcm):\n        A[i + 1] = A[i]\n        if i % a % b != i % b % a:\n            A[i + 1] += 1\n    ANS = []\n    for QUERY in range(q):\n        l, r = map(int, input().split())\n        divl, resl = divmod(l, lcm)\n        divr, resr = divmod(r, lcm)\n        ANS.append((divr - divl) * A[lcm] - A[resl] + A[resr + 1])\n\n    print(*ANS)\n"
        },
        {
            "language": 3,
            "solution": "# a = 14 \n# b = 6\n# \n# for x in range(1, 100):\n# \tif (x % a) % b == (x % b) % a:\n# \t\tprint ((x % a) % b == (x % b) % a, x, x % a, x % b,  (x % a) % b, ( x % b ) % a)\n\n\n# Numbers that are the same: Find the least common multiple, then all numbers up to\n# ( that number + biggest - 1 ).\n\ntest= False\nfrom math import gcd\n\ndef lcm(a, b):\n\treturn a * b // gcd(a, b)\n\nfor _ in range(int(input())):\n\ta, b, q = map(int, input().split())\n\tmult = lcm(a, b)\n\tgr = max(a, b)\n\tfor __ in range(q):\n\t\tl, r = map(int, input().split())\n\t\t\n\t\tgood = r - l + 1\n\t\t\n\t\tlow_bound = int((l // mult) * mult)\n\t\t\n\t\thigh_bound = int((r // mult) * mult)\n\t\t\n\t\t\n\t\tostensible = (( high_bound - low_bound ) // mult  +  1) * gr\n\t\t\n\t\tif test:\n\t\t\tprint()\n\t\t\tprint(\"l: \", l, \"r: \", r, \"a: \", a, \"b: \", b, \"low_bound: \", low_bound, \"high_bound: \", high_bound,\n\t\t\t\t\"ostensible: \", ostensible\n\t\t\t) \n\t\t\n\t\t\tprint(\"good: \", good)\n\n\t\tgood -= ostensible\n\t\t\n\t\tbefore = max(0, min(gr, l - low_bound))\n\t\t\n\t\tif test:\n\t\t\tprint(\"good: \" , good)\n\n\t\tgood += before\n\t\t\n\t\tif test:\n\t\t\tprint(\"before: \", before)\n\t\t\n\t\t\tprint(\"good: \" , good)\n\t\t\n\t\tafter = max(0, min(gr, high_bound + gr - 1 - r))\n\t\t\n\t\tgood += after\n\t\t\n\t\tif test:\n\t\t\tprint(\"after: \", after)\n\t\t\tprint(\"good: \" , good)\n\t\t\n\t\tprint(good, end=' ')\n\t\t\t\n\tprint()\n\t\t\n\t\t\n\t\t\n\t\t"
        },
        {
            "language": 3,
            "solution": "from bisect import bisect_left\n\ndef GCD(x, y): \n    while(y): \n        x, y = y, x % y \n    return x\n# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------- fast io --------------------\n\ntestcases=int(input())\n\nfor j in range(testcases):\n    vals=list(map(int,input().split()))\n    a=vals[0]\n    b=vals[1]\n    q=vals[2]\n    output=[]\n    values=[]\n    lcm=a*b//GCD(a,b)\n    for k in range(a*b//GCD(a,b)):\n        if (k%a)%b!=(k%b)%a:\n            values.append(k)\n    #\n    for s in range(q):\n        qs=list(map(int,input().split()))\n        l=qs[0]-1\n        r=qs[1]\n        count=0\n        val1=0\n        val2=0\n        if len(values)==0:\n            output.append(str(0))\n        #\n        else:\n            if r>=lcm:\n                val1=(r//lcm)*len(values)\n            r1=(r%lcm)\n            rem1=bisect_left(values,r1)\n            if rem1>len(values)-1:\n                rem1-=1\n            if values[rem1]==r1:\n                rem1+=1\n            #\n            if l>=lcm:\n                val2=(l//lcm)*len(values)\n            r2=(l%lcm)\n            rem2=bisect_left(values,r2)\n            if rem2>len(values)-1:\n                rem2-=1\n            if values[rem2]==r2:\n                rem2+=1\n            #\n            count+=(val1+rem1)-(val2+rem2)\n            output.append(str(count))\n    #\n    print(\" \".join(output))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t;\nlong long int a, b, q;\nlong long int l, r;\nlong long int ans[510];\nlong long int gcd(long long int n, long long int m) {\n  if (m == 0) return n;\n  if (n < m) return gcd(m, n);\n  return gcd(m, n % m);\n}\nlong long int lcm(long long int n, long long int m) {\n  return n * m / gcd(n, m);\n}\nlong long int count(long long int n) {\n  long long int x = n / lcm(a, b);\n  long long int y = n % lcm(a, b);\n  x *= b;\n  if (y >= b) y = b - 1;\n  return x + y;\n}\nint main() {\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    if (a > b) {\n      int tmp = a;\n      a = b;\n      b = tmp;\n    }\n    long long int m = lcm(a, b);\n    for (int i = 1; i <= q; i++) {\n      cin >> l >> r;\n      long long int s = count(r) - count(l - 1);\n      ans[i] = (r - l + 1) - s;\n    }\n    for (int i = 1; i <= q; i++) cout << ans[i] << \" \";\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n *  Created by Andrei Arhire 18/09/2020\n *  Copyright \u00a9 2020 Andrei Arhire. All rights reserved.\n */\n\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Task solver = new Task();\n        solver.solve(in, out);\n        out.close();\n    }\n\n    static class Task   {\n        long n, t , sw , a , b , q , x , y ;\n        int NR = (int)(1e5+10);\n        long[] p = new long[NR] ;\n\n        public void solve (InputReader in, PrintWriter out)   {\n            int i ;\n            t = in.nextLong() ;\n            for ( long t1 = 1 ; t1 <= t ; ++ t1 )    {\n                a = in.nextLong();\n                b = in.nextLong();\n                q = in.nextLong();\n                for ( i = 1 ; i <= a * b ; ++ i )   {\n                    p [ i ] = 0 ;\n                    if ( ( i % a ) % b != ( i % b ) % a )   {\n                        ++ p [ i ] ;\n                    }\n                    p [ i ] += p [ i - 1 ] ;\n                }\n                for ( long q1 = 1 ; q1 <= q ; ++ q1 )    {\n                    x = in.nextLong() ;\n                    y = in.nextLong() ;\n                    out.print ( (query(y)-query(x-1)) ) ;\n                    out.print ( \" \" ) ;\n                }\n                out.print(\"\\n\");\n            }\n        }\n        long query ( long x ) {\n            return ((x/(a*b)))*p[(int)(a*b)]+p[(int)((long)(x%(a*b)))];\n        }\n    }\n\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public long nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = [int(i) for i in input().split()]\n    if a == b:\n        for s1 in range(q):\n            l, r = [int(i) for i in input().split()]\n            print(0, end=\" \")\n    else:\n        for s1 in range(q):\n            l, r = [int(i) for i in input().split()]\n            rem = max(a, b)\n            den = (a * b) // gcd(a, b)\n            start = l // den\n            end = r // den\n            tot = (end - start) * rem\n            tot += 1\n            # print(tot)\n            end_val = end * den\n            end_diff = (r - end_val)\n            tot += min(rem - 1, end_diff)\n            # print(tot)\n            start_val = start * den\n            start_diff = (l - start_val)\n            tot -= min(rem, start_diff)\n            print((r - l + 1) - tot, end=\" \")\n    print()\n### 2 5\n# 1 2 3 4 10 11 12 13 14\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport heapq as hq\nfrom collections import defaultdict\n\ndef lcm(x,y):\n    m=max(x,y)\n    while m%x>0 or m%y>0:\n        m+=1\n    return m\n\ndef truths(inp,m,higher):\n    inp+=1\n    resu=0\n    resu+=(inp//m)*(m-higher)\n    inp-=m*(inp//m)\n    resu+=max(inp-higher,0)\n    return resu\n\nt = int(input())\nfor tc in range(t):\n    a,b,q = list(map(int, stdin.readline().split()))\n\n    m=lcm(a,b)\n    higher=max(a,b)\n    allEq=False\n    if m==higher:\n        allEq=True\n    for qc in range(q):\n        l,r = list(map(int, stdin.readline().split()))\n        if allEq:\n            res=r-l+1\n            res=0 # !!!\n        else:\n            #print(\"\\n#\",truths(r,m,higher),truths(l-1,m,higher))\n            res=truths(r,m,higher)-truths(l-1,m,higher)\n        stdout.write(str(res) + \" \")\n\n    stdout.write(\"\\n\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid print(vector<long long int> v) {\n  for (long long int i = 0; i < (v.size()); ++i) cout << v[i] << \" \";\n  cout << \"\\n\";\n}\nvoid show(int a[], int arraysize) {\n  for (int i = 0; i < arraysize; ++i) cout << a[i] << \" \";\n  cout << \"\\n\";\n}\nvoid show(unordered_set<int> s) {\n  for (auto it = s.begin(); it != s.end(); it++) {\n    cout << *it << \" \";\n  }\n  cout << \"\\n\";\n}\nvoid show(unordered_map<int, int> make_pair) {\n  for (auto it = make_pair.begin(); it != make_pair.end(); it++) {\n    cout << it->first << \" \" << it->second << \"\\n\";\n  }\n  cout << \"\\n\";\n}\nbool isPerfectSquare(long double x) {\n  long double sr = sqrt(x);\n  return ((sr - floor(sr)) == 0);\n}\nlong long int gcd(long long int a, long long int b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long int lcm(long long int a, long long int b) {\n  return (a * b) / gcd(a, b);\n}\nint main() {\n  long long int t, a, b, q, l, r, nl, cl, cr, nr;\n  cin >> t;\n  while (t) {\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    long long int lm = lcm(a, b);\n    for (long long int i = 0; i < (q); ++i) {\n      cin >> l >> r;\n      l--;\n      nl = l / lm;\n      nr = r / lm;\n      cl = nl * b;\n      cr = nr * b;\n      for (long long int j = 0; j < (b); ++j) {\n        if (lm * nl + j <= l) cl++;\n        if (lm * nr + j <= r) cr++;\n      }\n      cout << r - l - cr + cl << \" \";\n    }\n    cout << \"\\n\";\n    t--;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = (int)2e5 + 123;\nconst int K = 500;\nconst int maxn = (int)2e9;\nconst int mod = 100000007;\nconst long long inf = 1ll * 1e18 + 123;\nint a, b, qq;\nint dp[40022];\nlong long solve2(long long p) {\n  long long t = p / (a * b);\n  int k = p % (a * b);\n  return 1ll * dp[a * b] * t + dp[k];\n}\nvoid solve() {\n  cin >> a >> b >> qq;\n  for (int i = 1; i <= a * b; ++i) {\n    dp[i] = dp[i - 1];\n    if ((i % a) % b != (i % b) % a) {\n      dp[i]++;\n    }\n  }\n  while (qq--) {\n    long long l, r;\n    cin >> l >> r;\n    cout << solve2(r) - solve2(l - 1) << ' ';\n  }\n  cout << '\\n';\n}\nint main() {\n  ios_base ::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int q;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# Contest No.: Edu 86\n# Problem No.: C\n# Solver:      JEMINI\n# Date:        20200426\n \nimport sys\n \ndef gcd(a: int, b: int) -> int:\n    if a < b:\n        a, b = b, a\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n \ndef main():\n    t = int(input())\n    for _ in range(t):\n        a, b, q = map(int, sys.stdin.readline().split())\n        flag = None\n        modVal = None\n        if a == 1 or b == 1 or a == b:\n            flag = 0\n        elif max(a, b) % min(a, b) == 0:\n            flag = 0\n            modVal = min(a, b)\n        else:\n            flag = 2\n            modVal = a * b // gcd(a, b)\n            checkList = [0] * modVal\n            loopSum = 0\n            for i in range(modVal):\n                if ((i % a) % b) != ((i % b) % a):\n                    loopSum += 1\n                checkList[i] = loopSum\n        \n        for i in range(q):\n            x, y = map(int, sys.stdin.readline().split())\n            if flag == 0:\n                print(0, end = \" \")\n            elif flag == 1:\n                ans = y - x + 1\n                ans = ans - y // modVal + x // modVal\n                if not x % modVal:\n                    ans -= 1\n                print(ans, end = \" \")\n            else:\n                def calcSum(n: int) -> int:\n                    return checkList[-1] * (n // modVal) + checkList[n % modVal]\n                ans = calcSum(y) - calcSum(x - 1)\n                print(ans, end = \" \")\n        print(\"\")\n    return\n \nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "import math\nR=lambda:map(int,input().split())\nt,=R()\nfor _ in[0]*t:\n a,b,q=R();m=a*b//math.gcd(a,b);a=max(a,b);f=lambda x:x//m*(m-a)-min(1,a-x%m)\n for _ in[0]*q:l,r=R();print(f(r)-f(l-1))"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nimport math\nt = int(input())\n# li = [int(i) for i in input().split(' ')]\nfor _ in range(t):\n    a,b,q = map(int,input().split(' '))\n    if a<b:\n        b,a = a,b\n    if a%b==0 or b%a==0:\n        for j in range(q):\n            l,r = map(int,input().split(' '))\n        print(*(0 for ___ in range(q)))\n    else:\n        for __ in range(q):\n            l,r = map(int,input().split(' '))\n            if math.gcd(a,b)!=1:\n                mu = b//math.gcd(a,b)*a\n            else:\n                mu = a*b\n            ra = max(r%mu-a+1,0)+r//mu*(mu-a)\n            la = max(l%mu-a+1,0)+l//mu*(mu-a)\n            if l%a%b!=l%b%a:\n                print(ra-la+1,end=' ')\n            else:\n                print(ra-la,end=' ')\n        print()"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n * Spend 5 to 10 minutes analyzing different approaches to solve Don't rush and\n * start coding first solution that comes to mind Right now best strategy is\n * analyze for 20 minutes and code 20 minutes 3 question 2 hour. Remaining 30\n * minutes is miscellaneous Simply coding and coding won't solve problem,\n * analyzing then coding will solve it\n */\npublic class Codeforces {\n\n\tpublic static void main(String args[]) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint t = in.nextInt();\n\t\twhile (t-->0) {\n\t\t\tint a = in.nextInt(), b = in.nextInt();\n\t\t\tlong p[] = new long[a*b+1];\n\t\t\tbuild(p, a, b);\n\t\t\tint q = in.nextInt();\n\t\t\tfor (int i=0;i<q;i++) {\n\t\t\t\tlong l = in.nextLong(), r = in.nextLong();\n\t\t\t\tSystem.out.print(query(l, r, p, a, b) + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tin.close();\n\t}\n\n\tprivate static long query(long l, long r, long[] p, int a, int b) {\n\t\treturn query(r,p,a,b) - query(l-1, p,a,b);\n\t}\n\n\tprivate static long query(long l, long[] p, int a, int b) {\n\t\tint len = a*b;\n\t\tlong cnt = l/len;\n\t\tint rem = (int)(l%len);\n\t\treturn p[len]*cnt+p[rem];\n\t}\n\n\tprivate static void build(long[] p, int a, int b) {\n\t\tint len = a*b;\n\t\tp[0] = 0;\n\t\tfor (int i=1;i<=len;i++) {\n\t\t\tp[i] = p[i-1];\n\t\t\tif (i%a%b != i%b%a) p[i]++;\n\t\t}\n\t}\n\t\n}"
        },
        {
            "language": 1,
            "solution": "from collections import Counter, defaultdict, deque\nimport bisect\nfrom sys import stdin, stdout\nfrom itertools import repeat\nimport math\nimport random\n\n# sys.stdin = open('input')\n\ndef inp():\n    return map(int, raw_input().split())\n\ndef inst():\n    return raw_input().strip()\n\ndef gcd(x, y):\n   while(y):\n       x, y = y, x % y\n   return x\n\ndef my_main():\n        t = inp()[0]\n        for _ in range(t):\n            a, b, q = inp()\n            if b>a:\n                a, b = b, a\n            lcm = a*b / gcd(a, b)\n            # print lcm\n            pr = []\n            for _ in range(q):\n                l, r = inp()\n                ll = l/lcm\n                rr = r/lcm\n\n                ans = (rr-ll+1)*(a)\n                for i in range(ll*lcm, ll*lcm+a):\n                    if i<l:\n                        ans -= 1\n                for i in range(rr*lcm, rr*lcm+a):\n                    if i>r:\n                        ans -= 1\n                pr.append(r-l+1-ans)\n            print ' '.join(map(str, pr))\n\n        # for i in range(30):\n        #     if (i%4)%6 == (i%6)%4:\n        #         print i\n\n\n\n\n\nmy_main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Stack;\nimport java.util.ArrayList;\nimport java.util.Vector;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.util.ArrayDeque;\nimport java.io.InputStream;\nimport java.util.HashSet;\nimport java.util.HashMap;\nimport java.util.TreeSet;\nimport java.awt.Point;\n \npublic class Z_C {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Autocompletion solver = new Autocompletion();\n        solver.solve(1, in, out);\n        out.close();\n    }\n \n    static class Autocompletion {\n        \n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n        \tint t=in.nextInt();\n        \tfor(int z=0;z<t;z++) {\n        \t\tlong a=in.nextLong();\n        \t\tlong b=in.nextLong();\n        \t\tlong q=in.nextLong();\n        \t\tlong prod=a*b/gcd(a,b);\n        \t\tStringBuilder sb=new StringBuilder();\n        \t\tfor(int y=0;y<q;y++) {\n        \t\t\tlong l=in.nextLong();\n        \t\t\tlong r=in.nextLong();\n        \t\t\tlong total=r-l+1;\n        \t\t\tlong min=l/prod;\n        \t\t\tlong max=r/prod;\n        \t\t\tlong e=(l/prod)*prod;\n        \t\t\tlong upper= Math.min(r-max*prod+1, Math.max(a, b));\n        \t\t\tlong lower= Math.max(0, Math.max(a, b)-(l-e));\n        \t\t\tsb.append(total-(max-min-1)*Math.max(a, b)-upper-lower+\" \");\n//        \t\t\tSystem.out.println(total+\" \"+(max-min-1)*Math.max(a, b)+\" \"+upper+\" \"+lower+\" \"+min+\" \"+max);\n        \t\t}\n        \t\tout.println(sb.toString().trim());\n        \t}\n        }\n\n\t\tprivate long gcd(long a, long b) {\n\t\t\tif (b == 0)return a; \n\t\t\treturn gcd(b, a % b);\n\t\t}\n        \n    }\n    \n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n \n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n \n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n \n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n        \treturn Long.parseLong(next());\n        }\n \n    }\n}\n        "
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n\n\ndef get_gcd(u, v):\n    while v != 0:\n        r = u % v\n        u = v\n        v = r\n    return u\n\n\ndef cnt(l, a, b):\n    i = a * b // get_gcd(a, b)\n    c = l // i * max(a, b)\n    i = l % i\n    c += min(i + 1, max(a, b))\n    return l - c\n\ndef cnt2(l, a, b):\n    c = 0\n    print('l:', l, 'a:', a, 'b:', b)\n    for i in range(0, l + 1):\n        if i % a % b == i % b % a:\n            print('i:', i)\n            c += 1\n    print()\n    return l - c\n\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    s = ''\n    for i in range(q):\n        l, r = map(int, input().split())\n        c = cnt(r, a, b) - cnt(l - 1, a, b)\n        # c = cnt2(r, a, b) - cnt2(l - 1, a, b)\n        if s != '':\n            s += ' '\n        s += str(c)\n    print(s)\n"
        },
        {
            "language": 4,
            "solution": "\n\n\nimport java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\n\n\npublic class COVID {\n\n\tstatic ArrayList<Integer>[] adjList;\n\n\n\n\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter pw =new PrintWriter(System.out);\n//\t\tint a= 4;int b=8;\n//\t\tint n=100;\n//\t\tint c=0;\n//\t\tfor(int i=1;i<=n;i++)\n//\t\t\tif((i%a)%b!=(i%b)%a) {\n//\t\t\t\tSystem.out.print(i+\" \");\n//\t\t\t\tc++;\n//\t\t\t}\n//\t\t\n//\t\tSystem.out.println();\n//\t\tSystem.out.println(c);\n//\t\tlong lcm=lcm(a,b);\n//\t\tlong ans=(n/lcm)*(lcm-Math.max(a, b))+Math.max(0, (n%lcm)-Math.max(a, b)+1);\n//\t\tSystem.out.println(ans);\n\t\t\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint a=sc.nextInt();\n\t\t\tint b=sc.nextInt();\n\t\t\tint q=sc.nextInt();\n\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\tlong l =sc.nextLong();\n\t\t\t\tlong r =sc.nextLong();\n\t\t\t\tlong lcm=lcm(a,b);\n\t\t\t\tl--;\n\t\t\t\tlong rans=(r/lcm)*(lcm-Math.max(a, b))+Math.max(0, (r%lcm)-Math.max(a, b)+1);\n\t\t\t\tlong ans=(l/lcm)*(lcm-Math.max(a, b))+Math.max(0, (l%lcm)-Math.max(a, b)+1);\n\t\t\tans=rans-ans;\n\t\t\tpw.print(ans+\" \");\n\t\t\t}\n\t\t\tpw.println();\n\t\t\t\n\t\t}\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n\tstatic long gcd(long a, long b) {\n\t\treturn (b==0)?a:gcd(b,a%b);\n\t}\n\tstatic long lcm(long a, long b) {\n\t\treturn a/gcd(a,b)*b;\n\t}\n\tpublic static int log(int n , int base) {\n\t\tint ans=0;\n\t\twhile(n+1>base) {\n\t\t\tans++;\n\t\t\tn/=base;\n\t\t}\n\t\treturn ans;\n\t}\n\tstatic long square(long l) {\n\t\treturn l*l;\n\t}\n\n\n\n\n\n\tstatic class Pair implements Comparable<Pair>{\n\t\tint  x;int y;\n\n\t\tpublic Pair(int a,int b) {\n\t\t\tthis.x=a;y=b;\n\t\t}\n\n\n\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn (x==o.x)?((y>o.y)?1:(y==o.y)?0:-1):((x>o.x)?1:-1);\n\t\t}\n\n\n\t\t@Override\n\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + x;\n\t\t\tresult = prime * result + y;\n\t\t\treturn result;\n\t\t}\n\n\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tPair other = (Pair) obj;\n\t\t\tif (x != other.x)\n\t\t\t\treturn false;\n\t\t\tif (y != other.y)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\n\t}\n\n\n\n\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\t\tpublic Scanner(String s) throws FileNotFoundException{\tbr = new BufferedReader(new FileReader(s));}\n\n\t\tpublic long[] nextLongArr(int n) throws IOException {\n\t\t\tlong[] arr=new long[n];\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tarr[i]=nextLong();\n\t\t\treturn arr;\n\t\t}\n\t\tpublic int[] nextIntArr(int n) throws IOException {\n\t\t\tint[] arr=new int[n];\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tarr[i]=nextInt();\n\t\t\treturn arr;\n\t\t}\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine(),\" ,\");\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tString x = next();\n\t\t\tStringBuilder sb = new StringBuilder(\"0\");\n\t\t\tdouble res = 0, f = 1;\n\t\t\tboolean dec = false, neg = false;\n\t\t\tint start = 0;\n\t\t\tif (x.charAt(0) == '-') {\n\t\t\t\tneg = true;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\tfor (int i = start; i < x.length(); i++) {\n\t\t\t\tif (x.charAt(i) == '.') {\n\t\t\t\t\tres = Long.parseLong(sb.toString());\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t\tdec = true;\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(x.charAt(i));\n\t\t\t\t\tif (dec)\n\t\t\t\t\t\tf *= 10;\n\t\t\t\t}\n\t\t\t\tif (sb.length() == 18) {\n\t\t\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\treturn res * (neg ? -1 : 1);\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t}\n\n\tpublic static void shuffle(int[] a) {\n\t\tint n = a.length;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint r = i + (int) (Math.random() * (n - i));\n\t\t\tint tmp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = tmp;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n\ta,b,q=map(int,input().split())\n\tp=[0 for i in range(a*b)]\t\n\tj=1\n\tfor j in range(1,a*b):\n\t\tp[j]=p[j-1]\n\t\tif(((j%a)%b)!=((j%b)%a)):\n\t\t\tp[j]=p[j]+1\n\t\t#j=j+1\n\tm=[]\n\tfor k in range(q):\n\t\tl,r=map(int,input().split())\n\t\tx=r//(len(p))\n\t\ty=(l-1)//len(p)\n\t\tm.append(p[r%(len(p))]-p[(l-1)%(len(p))]+(x-y)*p[-1])\n\tprint(*m)"
        },
        {
            "language": 3,
            "solution": "def LCM(a,b):\n    lar=max(a,b)\n    small=min(a,b)\n    i=lar\n    while True:\n        if (i%small==0):\n            return i\n        i+=lar        \n\ndef solve():\n    a,b,q=[int(x) for x in input().split()]    \n    lcm=LCM(a,b)\n    maxx=max(a,b)    \n    for i in range(q):        \n        l,r=[int(x) for x in input().split()]      \n        count=maxx-1\n        l-=1\n        left=(l//lcm)*lcm\n        lft=l//lcm\n        lcount=(lft-1)*maxx+count\n        if left+maxx-1<=l:\n            lcount+=maxx\n        else:\n            lcount+=l-left+1\n        \n        right=(r//lcm)*lcm\n        rgt=r//lcm\n        rcount=(rgt-1)*maxx+count\n        if right+maxx-1<=r:\n            rcount+=maxx\n        else:\n            rcount+=r-right+1\n        print(r-rcount-l+lcount,end=' ')         \n   \n\nt=int(input())\nfor i in range(t):\n    solve()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\tstatic int arr[], a, b;\n\n\tstatic int[] preprocess(int a, int b) {\n\t\tint arr[] = new int[a * b + 5];\n\t\tfor (int i = 1; i <= a * b; i++) {\n\t\t\tarr[i] = arr[i - 1];\n\t\t\tarr[i] += ((i % a) % b != (i % b) % a) ? 1 : 0;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic long query(long r) {\n\t\tint len = a * b;\n\t\tlong ret = r / len;\n\t\tret *= arr[len];\n\t\treturn ret + arr[(int) (r % len + len) % len];\n\t}\n\n\tstatic void solve() throws Exception {\n\t\ta = sc.nextInt();\n\t\tb = sc.nextInt();\n\t\tarr = preprocess(a, b);\n\t\tint q = sc.nextInt();\n\t\twhile (q-- > 0) {\n\t\t\tlong l = sc.nextLong(), r = sc.nextLong();\n\t\t\tout.print((query(r) - query(l - 1)) + \" \");\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tsolve();\n\t\t\tout.println();\n\t\t}\n\t\tout.close();\n\t}\n}\n\nclass Scanner {\n\tStringTokenizer st;\n\tBufferedReader br;\n\n\tpublic Scanner(InputStream system) {\n\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t}\n\n\tpublic Scanner(String file) throws Exception {\n\t\tbr = new BufferedReader(new FileReader(file));\n\t}\n\n\tpublic String next() throws IOException {\n\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\treturn st.nextToken();\n\t}\n\n\tpublic String nextLine() throws IOException {\n\t\treturn br.readLine();\n\t}\n\n\tpublic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(next());\n\t}\n\n\tpublic Long nextLong() throws IOException {\n\t\treturn Long.parseLong(next());\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.InputMismatchException;\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\npublic class Main{\n    public static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n     \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n     \n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n     \n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n     \n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n     \n            while(isSpaceChar(c))\n                c = read();\n     \n            int sgn = 1;\n     \n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n     \n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n     \n            return res * sgn;\n        }\n     \n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n     \n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n     \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n     \n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n     \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next() {\n            return readString();\n        }\n     \n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n \n    static long gcd(long a, long b){\n        if (a == 0)\n            return b;  \n        return gcd(b % a, a);  \n    }\n    static long lcm(long a, long b)  {\n        return (a*b)/gcd(a, b);  \n    }\n    public static void sortbyColumn(int arr[][], int col) \n    { \n        \n        Arrays.sort(arr, new Comparator<int[]>() { \n            \n          @Override              \n          \n          public int compare(final int[] entry1,  \n                             final int[] entry2) { \n  \n            \n            if (entry1[col] > entry2[col]) \n                return 1; \n            else\n                return -1; \n          } \n        });  \n    } \n    static long func(long a[],long size,int s){\n        long max1=a[s];\n        long maxc=a[s];\n        for(int i=s+1;i<size;i++){\n            maxc=Math.max(a[i],maxc+a[i]);\n            max1=Math.max(maxc,max1);\n        }\n        return max1;\n    }\n    public static class Pair<U extends Comparable<U>, V extends Comparable<V>> implements Comparable<Pair<U, V>> {\n        public U x;\n        public V y;\n    \n        public Pair(U x, V y) {\n            this.x = x;\n            this.y = y;\n        }\n    \n        public int hashCode() {\n            return (x == null ? 0 : x.hashCode() * 31) + (y == null ? 0 : y.hashCode());\n        }\n    \n        public boolean equals(Object o) {\n            if (this == o)\n                return true;\n            if (o == null || getClass() != o.getClass())\n                return false;\n            Pair<U, V> p = (Pair<U, V>) o;\n            return (x == null ? p.x == null : x.equals(p.x)) && (y == null ? p.y == null : y.equals(p.y));\n        }\n    \n        public int compareTo(Pair<U, V> b) {\n            int cmpU = x.compareTo(b.x);\n            return cmpU != 0 ? cmpU : y.compareTo(b.y);\n        }\n    \n        public String toString() {\n            return String.format(\"(%s, %s)\", x.toString(), y.toString());\n        }\n    \n    }\n    //static LinkedList<Integer> li[]=new LinkedList[100001];\n    static int ans1=0,ans2=0;\n    static int dist[];\n    static int visited[];\n    //static int arr[];\n    static ArrayList<Integer> adj[];\n    \n    public static void main(String args[]){\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n        int t,k,i,j;\n        t=in.nextInt();\n        while(t-->0){\n            int a,b,q;\n            a=in.nextInt();\n            b=in.nextInt();\n            q=in.nextInt();\n            if(a>b){\n                int temp=a;\n                a=b;\n                b=temp;\n            }\n            long lcm=lcm(a,b);\n            for(i=0;i<q;i++){\n                long l,r;\n                l=in.nextLong();\n                r=in.nextLong();\n                long first,last,total=r-l+1;\n                first=l/lcm;\n                last=r/lcm;\n                total=Math.max(total-Math.max(first*lcm+b-l,0L),0L);\n                if(last!=first){\n                    total-=Math.min(r-last*lcm+1,b);\n                }\n                long count=Math.max(last-first-1,0L);\n                total-=(count*b);\n                w.print(total+\" \");\n            }\n            w.println();\n        }\n        w.close();\n    }\n   \n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\n\ndef gcd(a,b): \n\tif a == 0: \n\t\treturn b \n\treturn gcd(b % a, a) \n  \ndef lcm(a,b): \n\treturn (a*b) / gcd(a,b)\n\nt=int(input())\n\nfor i in range(t):\n\n\ta,b,q=list(map(int,stdin.readline().split()))\n\n\td=(int(lcm(a,b)))\n\n\tlist1=[]\n\n\tmaxi=max(a,b)\n\n\tfor i in range(q):\n\n\t\tl,r=list(map(int,stdin.readline().split()))\n\n\t\tif a==b or d==a or d==b:\n\n\t\t\tlist1.append(0)\n\n\n\t\telif r<=maxi or (r-l)<=maxi:\n\n\t\t\tcnt=0\n\n\t\t\tfor i in range(l,r+1):\n\n\t\t\t\tif (i%a)%b!=(i%b)%a:\n\t\t\t\t\tcnt+=1\n\n\t\t\tlist1.append(cnt)\n\n\t\telse:\n\n\t\t\trem1=l%d\n\n\t\t\t# print(rem1)\n\n\t\t\tquo1=l//d\n\n\t\t\trem2=r%d\n\n\t\t\tquo2=r//d\n\n\t\t\tsum1=0\n\n\t\t\tif rem1<=maxi:\n\n\t\t\t\tsum1=sum1+maxi-rem1\n\n\t\t\tif rem2<maxi:\n\n\t\t\t\tsum1+=(quo2-quo1-1)*(maxi)\n\t\t\t\tsum1+=rem2+1\n\n\t\t\telse:\n\n\t\t\t\tsum1+=(quo2-quo1)*(maxi)\n\n\n\t\t\tsum2=r-l+1\n\n\t\t\tlist1.append(sum2-sum1)\n\n\n\tfor i in list1:\n\n\t\tprint(i,end=\" \")\n\n\tprint()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C1342 {\n\tprivate static int length;\n\tprivate static long[] p = new long [41000];\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint cases = scanner.nextInt();\n\t\tfor(int i = 0; i < cases; i++) {\n\t\t\tint a = scanner.nextInt();\n\t\t\tint b = scanner.nextInt();\n\t\t\tint q = scanner.nextInt();\n\t\t\tconstruct(a, b);\n\t\t\tfor(int j = 0; j < q; j++) {\n\t\t\t\tlong l = scanner.nextLong();\n\t\t\t\tlong r = scanner.nextLong();\n\t\t\t\tSystem.out.print(query(l, r) + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\t\n\tstatic void construct(int a, int b) {\n\t\tlength = a * b;\n\t\tp[0] = 0;\n\t\tfor(int i = 1; i <= length; i++) {\n\t\t\tp[i] = p[i - 1];\n\t\t\tif((i % a) % b != (i % b) % a)\n\t\t\t\tp[i]++;\n\t\t}\n\t}\n\t\n\tprivate static long query(long temp) {\n\t\tlong count = temp / length;\n\t\tlong remainder = temp % length;\n\t\treturn 1l * p[length] * count + p[(int) remainder]; \n\t}\n\t\n\tstatic long query(long temp1, long temp2) {\n\t\treturn query(temp2) - query(temp1 - 1);\n\t}\t\n}\n"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\nimport java.lang.*;\nimport java.io.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.*;\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Codechef\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\t// your code goes here\n\t\tFastReader sc = new FastReader();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint test = sc.nextInt();\n\t\twhile(test-->0)\n\t\t{\n\t\t    int a = sc.nextInt();\n\t\t    int b = sc.nextInt();\n\t\t    int lcm = (a*b)/gcd(a,b);\n\t\t    int max=Math.max(a,b);\n\t\t    int q = sc.nextInt();\n\t\t    while(q-->0)\n\t\t    {\n\t\t        long l = sc.nextLong();\n\t\t        long r = sc.nextLong();\n\t\t        long total=r-l+1;\n\t\t        long multiples=(r/lcm)-((l-1)/lcm);\n\t\t        long ans = total-multiples*max;\n\t\t        long lastMultiple=(r/lcm)*lcm;\n\t\t        long firstMultiple=((l-1)/lcm)*lcm;\n\t\t        if(l>=lcm && l<=firstMultiple+max-1) ans=ans-(firstMultiple+max-l);\n\t\t        if(r>=lcm && lastMultiple+max-1>r) ans=ans+lastMultiple+max-1-r;\n\t\t        if(l<max) ans=ans-(max-l);\n\t\t        if(r<max) ans=ans+max-r-1;\n\t\t        out.print(ans +\" \");\n\t\t    }\n\t\t    out.println();\n\t\t}\n\t\t\n\t\t\n\t\tout.close();\n\t}\n\tstatic int gcd(int a, int b) \n    { \n        if (b == 0) \n            return a; \n        return gcd(b, a % b);  \n      \n    }\n}\n\nclass FastReader \n{ \n    BufferedReader br; \n    StringTokenizer st; \n \n    public FastReader() \n    { \n        br = new BufferedReader(new\n                 InputStreamReader(System.in)); \n    } \n \n    String next() \n    { \n        while (st == null || !st.hasMoreElements()) \n        { \n            try\n            { \n                st = new StringTokenizer(br.readLine()); \n            } \n            catch (IOException  e) \n            { \n                e.printStackTrace(); \n            } \n        } \n        return st.nextToken(); \n    } \n \n    int nextInt() \n    { \n        return Integer.parseInt(next()); \n    } \n \n    long nextLong() \n    { \n        return Long.parseLong(next()); \n    } \n \n    double nextDouble() \n    { \n        return Double.parseDouble(next()); \n    } \n \n    String nextLine() \n    { \n        String str = \"\"; \n        try\n        { \n            str = br.readLine(); \n        } \n        catch (IOException e) \n        { \n            e.printStackTrace(); \n        } \n        return str; \n    } \n}"
        },
        {
            "language": 3,
            "solution": "from math import gcd\ndef fn(l, r, a, b):\n    g = a*b//gcd(a, b)\n    m = max(a, b)\n    if l//g == r//g:\n        l %= g\n        r %= g\n        l = max(l, m)\n        r = max(r, m)\n        return r-l\n\n    d = r//g - l//g\n    l %= g\n    r %= g\n\n    total = (d-1) * (g-m)\n    total += max(r-m, 0)\n    l = min(g-l, g-m)\n    total += l\n    return total\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    arr = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        arr.append(fn(l, r+1, a, b))\n    print(*arr)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\n\npublic class ct1 {\n\n    static long lcm(long a, long b){\n        long num1 = a, num2=b;\n        while (num1 != num2) {\n            if(num1 > num2)\n                num1 = num1 - num2;\n            else\n                num2 = num2 - num1;\n        }\n        return (a*b)/num2;\n    }\n\n    static long calc(long x, int a, int b){\n        if(x<b)\n            return 0;\n        long lCM = lcm(a,b);\n        long times = (((x/lCM) + 1)*(b))-1;\n        long extra = (x%lCM);\n        if(extra<b)\n            times -= (b-extra-1);\n        return x-times;\n    }\n\n    public static void main(String[] args) {\n//        System.out.println((long)(Integer.MAX_VALUE)+1);\n        Scanner inp = new Scanner(System.in);\n        int n = inp.nextInt();\n        while (n-- > 0) {\n            int a = inp.nextInt();\n            int b = inp.nextInt();\n            int q = inp.nextInt();\n            if(a > b){\n                int temp = b;\n                b= a;\n                a = temp;\n            }\n            for (int i = 0; i < q; i++) {\n                long m = inp.nextLong();\n                long nn = inp.nextLong();\n                if(lcm(a, b) == b)\n                    System.out.print(0 + \" \");\n                else\n                    System.out.print(calc(nn, a, b) - calc(m-1, a, b) + \" \");\n            }\n            System.out.println();\n\n        }\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nimport sys\nfrom math import gcd\nfrom itertools import accumulate\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\ndef lcm(x, y): return (x * y) // gcd(x, y)\n\nfor _ in range(INT()):\n    mod1, mod2, Q = MAP()\n\n    N = lcm(mod1, mod2)\n    ok = [0] * N\n    for i in range(N):\n        if i%mod1%mod2 != i%mod2%mod1:\n            ok[i] = 1\n    acc = [0] + list(accumulate(ok))\n\n    ans = [0] * Q\n    for i in range(Q):\n        l, r = MAP()\n        ln = l // N\n        rn = r // N\n        segcnt = rn - ln\n        modl = l % N\n        modr = r % N\n        cnt = acc[modr+1] - acc[modl]\n        ans[i] = segcnt * acc[N] + cnt\n    print(*ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class YetAnotherCountingProblem {\n\n\t\n\tpublic static long gcd(long a, long b) \n    { \n        if (a == 0) \n            return b; \n          \n        return gcd(b%a, a); \n    } \n\t\n\tpublic static void main(String[] args) {\n\n\t\tScanner input = new Scanner(System.in);\n\t\tint test= input.nextInt();\n\t\tlong a,b,que,l,r;\n\n\t\twhile(test-->0)\n\t\t{\n\t\t\ta=input.nextLong();\n\t\t\tb=input.nextLong();\n\t\t\tque=input.nextLong();\n\t\t\t\n\t\t\tif(a<b)\n\t\t\t{\n\t\t\t\tlong temp=a;\n\t\t\t\ta=b;\n\t\t\t\tb=temp;\n\t\t\t}\n\t\t\tlong hcf=a*b/(gcd(a,b));\n\t\t\twhile(que-->0)\n\t\t\t{\n\t\t\t\tl=input.nextLong();\n\t\t\t\tr=input.nextLong();\n\t\t\t\tlong ans=calculate(r,hcf,a)-calculate(l-1,hcf,a);\n\t\t\t\tSystem.out.print(ans+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\t\n\t}\n\n\tprivate static long calculate(long x, long hcf, long a) {\n\t\tlong ans=0;\n\t\tans=(x/hcf)*(hcf-a);\n\t\tx%=hcf;\n\t\tif(x>=a) ans+=(x-a+1);\n\t\treturn ans;\n\t\t\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math, collections\nmod = 998244353\nfor _ in range(int(stdin.readline())):\n    a, b, q = map(int, stdin.readline().split())\n    a, b = max(a, b), min(a, b)\n    c = (a*b)//math.gcd(a, b)\n    for i in range(q):\n        l, r= map(int, stdin.readline().split())\n        t1 = l - (l//c*c)\n        ans = r-l\n        print(ans-(r//c-l//c+1)*a+min(a, l%c)+max(0, a-r%c-1)+1)"
        },
        {
            "language": 3,
            "solution": "# Author: S Mahesh Raju\n# Username: maheshraju2020\n# Date: 27/04/2020\n\nfrom sys import stdin,stdout\nfrom math import gcd, ceil, sqrt\nii1 = lambda: int(stdin.readline().strip())\nis1 = lambda: stdin.readline().strip()\niia = lambda: list(map(int, stdin.readline().strip().split()))\nisa = lambda: stdin.readline().strip().split()\nmod = 1000000007\n\ntc = ii1()\nfor _ in range(tc):\n    a, b, q = iia()\n    lcm = a * b // gcd(a, b)\n    res = []\n    for i in range(q):\n        l, r = iia()\n        l -= 1\n        right = r - (r // lcm) * max(a, b) - min(max(a, b), r % lcm + 1)\n        left = l - (l // lcm) * max(a, b) - min(max(a, b), l % lcm + 1)\n        res.append(right - left)\n    print(*res)\n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    vector<long long> prefixsum;\n    prefixsum.push_back(0);\n    for (long long j = 1; j <= a * b; j++) {\n      if ((j % a) % b != (j % b) % a) {\n        prefixsum.push_back(prefixsum[j - 1] + 1);\n      } else {\n        prefixsum.push_back(prefixsum[j - 1]);\n      }\n    }\n    for (long long j = 0; j < q; j++) {\n      long long l, r;\n      cin >> l >> r;\n      if (r <= a * b) {\n        cout << prefixsum[r] - prefixsum[l - 1] << \" \";\n      } else {\n        long long right =\n            (r / (a * b)) * prefixsum[a * b] + prefixsum[r % (a * b)];\n        long long left = ((l - 1) / (a * b)) * prefixsum[a * b] +\n                         prefixsum[(l - 1) % (a * b)];\n        ;\n        cout << right - left << \" \";\n      }\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ninput = sys.stdin.readline\n\ncase = int(input())\nfor _ in range(case):\n    a, b, q = map(int, input().split())\n    length = a * b\n    prefix = [0]\n\n    def compute(x: int) -> int:\n        segments = x // length\n        return prefix[length] * segments + prefix[x % length]\n\n    def query(l: int, r: int) -> int:\n        return compute(r) - compute(l - 1)\n\n    for i in range(1, length + 1):\n        cur = 1 if i % a % b != i % b % a else 0\n        prefix.append(prefix[-1] + cur)\n\n    for _ in range(q):\n        l, r = map(int, input().split())\n        print(query(l, r), end=' ')\n    \n    print()\n\n    \n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename Arg1>\nvoid __f(const char* name, Arg1&& arg1) {\n  std::cerr << name << \" : \" << arg1 << '\\n';\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char* names, Arg1&& arg1, Args&&... args) {\n  const char* comma = strchr(names + 1, ',');\n  std::cerr.write(names, comma - names) << \" : \" << arg1 << \" | \";\n  __f(comma + 1, args...);\n}\nlong long int gcd(long long int a, long long int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nvoid solve() {\n  map<long long int, long long int> m;\n  long long int a, b, q;\n  cin >> a >> b >> q;\n  for (long long int i = 0; i < (a * b) / gcd(a, b) + 1; i++) {\n    if (i == 0) continue;\n    if ((i % a) % b == (i % b) % a)\n      m[i] = m[i - 1];\n    else\n      m[i] = m[i - 1] + 1;\n  }\n  long long int lcm = (a * b) / gcd(a, b);\n  for (long long int i = 0; i < q; i++) {\n    long long int l, r;\n    cin >> l >> r;\n    long long int k = (r / lcm) * m[lcm] + m[r % lcm];\n    if (l != 1) {\n      l--;\n      k -= (l / lcm) * m[lcm] + m[l % lcm];\n    }\n    cout << k << \" \";\n  }\n  cout << '\\n';\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long int t1;\n  t1 = 1;\n  cin >> t1;\n  while (t1--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# import sys\n# sys.stdin = open('input.txt', 'r') \n# sys.stdout = open('output.txt', 'w')\n \nimport math\nimport collections\nfrom sys import *\nT = int(stdin.readline())\nfor _ in range(T):\n    a,b,q = list(map(int,stdin.readline().split()))\n    gc = math.gcd(a,b)\n    lc = (a*b)//gc\n    c = [0]*(lc+1)\n    co = 0\n    for i in range(1,lc+1,1):\n        if((i%a)%b != (i%b)%a):\n            co += 1\n            c[i] = co\n        else:\n            c[i] = co\n    c[-1] = co\n    \n    for g in range(q):\n        l,r = list(map(int,stdin.readline().split()))\n        ans = 0\n        lm = l%lc if l%lc > 0 else lc\n        rm = r%lc if r%lc > 0 else lc\n        \n        if(lm != lc):\n            near = (l//lc+1)*lc\n        else:\n            near = (l//lc)*lc\n\n        if(r <= near):\n            print(c[rm]-c[lm-1],end = ' ')\n            continue\n        ans = ans + c[lc]-c[lm-1]\n        tot = (r-near)//lc\n        ans = ans+tot*co\n        if(rm == lc):\n            print(ans,end= ' ')\n            continue\n        ans = ans + c[rm]\n        print(ans,end= ' ')\n    print('')\n"
        },
        {
            "language": 3,
            "solution": "import math\na = 0\nb = 0\np = 0\n\n\ndef get(x):\n    k = x // p\n\n    return (x-(k*max(a, b)+min(max(a, b), (x % p+1))))\n\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    p = math.gcd(a, b)\n    p = a * b // p\n    for k in range(q):\n        l, r = map(int, input().split())\n        print(get(r) - get(l-1), end=' ')\n    print(\" \")\n"
        },
        {
            "language": 3,
            "solution": "import math\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split());lcm=a*b//math.gcd(a,b);t=max(a,b)\n    for i in range(q):\n        l,r=map(int,input().split());Ans=0\n        Ans+=(r-l+1);n=(l-1)//lcm;m=r//lcm;tem=min(r-m*lcm+1,t);Ans-=(m-n-1)*t;Ans-=tem;Ans-=max(t-(l-lcm*n),0);print(Ans,end=' ')\n    print()\n        "
        },
        {
            "language": 3,
            "solution": "line = input()\nt = int(line)\nfor _ in range(t):\n    line = input()\n    a, b, q = (int(i) for i in line.split(' '))\n    memo = [0] * (a * b)\n    for i in range(1, a * b):\n        if (i % a) % b != (i % b) % a:\n            memo[i] = memo[i-1] + 1\n        else:\n            memo[i] = memo[i - 1]\n    for i in range(q):\n        line = input()\n        l, r = (int(i) for i in line.split(' '))\n        l -= 1\n        res = r // (a * b) * memo[-1] + memo[r % (a * b)]\n        res -= l // (a * b) * memo[-1] + memo[l % (a * b)]\n        print(res)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long power(long long a, long long b) {\n  long long res = 1;\n  a = a % 998244353;\n  while (b > 0) {\n    if (b & 1) {\n      res = (res * a) % 998244353;\n      b--;\n    }\n    a = (a * a) % 998244353;\n    b >>= 1;\n  }\n  return res;\n}\nlong long fermat_inv(long long y) { return power(y, 998244353 - 2); }\nlong long gcd(long long a, long long b) { return (b == 0) ? a : gcd(b, a % b); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int T = 1;\n  cin >> T;\n  while (T--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    long long d = (a * b) / gcd(a, b);\n    vector<long long> v(d, 0);\n    for (long long i = 0; i < d; i++) {\n      if ((i % a) % b != (i % b) % a) v[i]++;\n      if (i > 0) v[i] += v[i - 1];\n    }\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      long long ans = 0;\n      ans -= v[d - 1] * ((l - 1) / d) + v[(l - 1) % d];\n      ans += v[d - 1] * ((r) / d) + v[(r) % d];\n      cout << ans << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\npref = [0]\ndef solve(x,L):\n\tk = x//L\n\treturn k*pref[L-1] + pref[x%L]\nfor _ in range(t):\n\ta,b,q = map(int,input().split())\n\tpref=list()\n\tpref=[0]\n\tfor i in range(1,a*b):\n\t\tpref.append(pref[i-1])\n\t\tif(((i%a)%b)!=((i%b)%a)):\n\t\t\tpref[i]+=1\n\t\t\n\tfor __ in range(q):\n\t\tl,r = map(int,input().split())\n\t\tprint(solve(r,a*b)-solve(l-1,a*b),end=\" \")\n\tprint('')"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Objects;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Double.parseDouble;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\n\npublic class Solution {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n    static boolean isLocal = false;\n\n    long get(long l, int len, int b) {\n        long ans = (l / len) * (len - b);\n        l %= len;\n        long rest = max(0, l - b + 1);\n        return ans + rest;\n    }\n\n    int get_max_len(int a, int b) {\n        return a * (b / gcd(a, b));\n    }\n\n    private int gcd(int a, int b) {\n        while (b > 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n\n    void Case() throws IOException {\n        int t[] = sort(na(2));\n        int a = t[0], b = t[1], q = nextInt();\n        int len = get_max_len(a, b);\n        while (q-- > 0) {\n            long l = nextLong(), r = nextLong();\n            long ans = get(r, len, b) - get(l - 1, len, b);\n            out.print(ans + \" \");\n        }\n        out.println();\n    }\n\n    void solve() throws Exception {\n        int t = nextInt();\n        for (int i = 1; i <= t; i++) {\n            Case();\n        }\n    }\n\n    int min(int x, int y) {\n        return Integer.min(x, y);\n    }\n\n    int max(int x, int y) {\n        return Integer.max(x, y);\n    }\n\n    long min(long x, long y) {\n        return Long.min(x, y);\n    }\n\n    long max(long x, long y) {\n        return Long.max(x, y);\n    }\n\n    int[] sort(int[] arr) {\n        sort(arr, 0, arr.length - 1);\n        return arr;\n    }\n\n    void sort(int arr[], int l, int r) {\n        if (l < r) {\n            int m = (l + r) / 2;\n            sort(arr, l, m);\n            sort(arr, m + 1, r);\n            merge(arr, l, m, r);\n        }\n    }\n\n    void merge(int arr[], int l, int m, int r) {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[l + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[m + 1 + j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            } else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    class Seg implements Comparable<Seg> {\n        int st, end;\n\n        public Seg(int st, int end) {\n            this.st = st;\n            this.end = end;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            Seg seg = (Seg) o;\n            return st == seg.st &&\n                    end == seg.end;\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(st, end);\n        }\n\n        @Override\n        public int compareTo(Seg seg) {\n            return st == seg.st ? Integer.compare(end, seg.end) : Integer.compare(st, seg.st);\n        }\n    }\n\n    private int[] na(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n\n    private long[] nal(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n\n    int nextInt() throws IOException {\n        return parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n\n    String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    public static void main(String[] args) throws Exception {\n        try {\n            if (isLocal) {\n                in = new BufferedReader(new FileReader(\"src/tests/sol.in\"));\n                out = new PrintWriter(new BufferedWriter(new FileWriter(\"src/tests/sol.out\")));\n            } else {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n//            long lStartTime = System.currentTimeMillis();\n            new Solution().solve();\n//            long lEndTime = System.currentTimeMillis();\n//            out.println(\"Elapsed time in seconds: \" + (double) (lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "// Accepted on CodeForces\n\nimport java.util.*;\npublic class Yet_Another_Counting_Problem {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tScanner s = new Scanner(System.in);\n\t\t\n\t\tint t = s.nextInt();\n\t\ts.nextLine();\n\t\twhile(t--!=0) {\n\t\t\t\n\t\t\tString str = s.nextLine();\n\t\t\tString[] strArr = str.split(\"\\\\s+\");\n\t\t\tint a = Integer.valueOf(strArr[0]);\n\t\t\tint b = Integer.valueOf(strArr[1]);\n\t\t\tint q = Integer.valueOf(strArr[2]);\n\t\t\t\n\t\t\tint[] arr = new int[(a*b)];\n\t\t\tint[] sum_arr = new int[(a*b)];\n\t\t\t\n\t\t\tfor(int i=1; i<arr.length; i++) {\n\t\t\t\tif((i%a)%b != (i%b)%a) {\n\t\t\t\t\tarr[i]=1;\n\t\t\t\t}\n\t\t\t\tsum_arr[i] = sum_arr[i-1]+arr[i];\n\t\t\t}\n\t\t\t\n\t\t\t//display(arr);\n\t\t\t//display(sum_arr);\n\t\t\t\n\t\t\twhile(q--!=0) {\n\t\t\t\tString qstr = s.nextLine();\n\t\t\t\tString[] qstrArr = qstr.split(\"\\\\s+\");\n\t\t\t\tlong li = Long.valueOf(qstrArr[0]);\n\t\t\t\tlong ri = Long.valueOf(qstrArr[1]);\n\t\t\t\t\n\t\t\t\tlong no_of_arr = (li/(a*b));\n\t\t\t\tlong left_part = li%(a*b);\n\t\t\t\tlong li_sum = 0;\n\t\t\t\t\n\t\t\t\tif(left_part != 0) {\n\t\t\t\t\tli_sum = no_of_arr*sum_arr[(a*b)-1] + sum_arr[(int)left_part-1];\n\t\t\t\t} else {\n\t\t\t\t\tli_sum = no_of_arr*sum_arr[(a*b)-1];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tno_of_arr = (ri/(a*b));\n\t\t\t\tleft_part = ri%(a*b);\n\t\t\t\tlong ri_sum = 0;\n\t\t\t\t\n\t\t\t\tif(left_part != 0) {\n\t\t\t\t\tri_sum = no_of_arr*sum_arr[(a*b)-1] + sum_arr[(int)left_part];\n\t\t\t\t} else {\n\t\t\t\t\tri_sum = no_of_arr*sum_arr[(a*b)-1];\n\t\t\t\t}\n\t\t\t\t//long ri_sum = no_of_arr*sum_arr[(a*b)-1] + sum_arr[(int)left_part];\n\t\t\t\t//System.out.println(\"li sum: \"+li_sum);\n\t\t\t\t//System.out.println(\"ri sum: \"+ri_sum);\n\t\t\t\tSystem.out.println(ri_sum-li_sum);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t}\n\t\n\tstatic void display(int[] arr) {\n\t\tfor(int i=0; i<arr.length; i++) {\n\t\t\tSystem.out.print(arr[i]+\", \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\nfrom sys import stdout\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nif __name__== \"__main__\":\n    for _ in range(int(input())):\n        a,b,q=map(int,input().split())\n        c=[0]\n        for i in range(1,a*b+1):\n            c.append(c[-1])\n            if (i%a)%b!=(i%b)%a:\n                c[-1]+=1\n        for i in range(q):\n            l,r=map(int,input().split())\n            l=l-1\n            print((r//(a*b))*c[-1]+c[r%(a*b)]-((l//(a*b))*c[-1]+c[l%(a*b)]),end=\" \")\n        stdout.write(\"\\n\")"
        },
        {
            "language": 3,
            "solution": "import functools\nimport math\nimport sys\n\n# sys.stdin = open('c.in')\nt = int(sys.stdin.readline())\n\n\ndef solve(a, b, queries):\n    if a > b:\n        a, b = b, a\n    gcd = math.gcd(a, b)\n    lcm = gcd * (a // gcd) * (b // gcd)\n    result = []\n\n    @functools.lru_cache(None)\n    def count_to_x(x):\n        if x < lcm:\n            return 0 if x < b else x - b + 1\n        else:\n            r = (x // lcm) * b + min(x - (x // lcm * lcm) + 1, b)\n        return (x + 1) - r\n\n    for li, ri in queries:\n        result.append(count_to_x(ri) - count_to_x(li - 1))\n    return result\n\n\nfor _ in range(t):\n    a, b, q = map(int, sys.stdin.readline().split())\n    queries = []\n    for _ in range(q):\n        queries.append(list(map(int, sys.stdin.readline().split())))\n    r = solve(a, b, queries)\n    print(' '.join(map(str, r)))\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    while b > 0:\n        (a, b) = (b, a % b)\n    return a\n\n# print(gcd(17, 27))\n\n\ndef play(a, b, l, r):\n\n    print(f\"a = {a}, b = {b}\")\n\n    for i in range(l, r+1):\n\n        j = (i % a) % b\n        k = (i % b) % a\n        print(f\"{i}: {j} {k} {'YES' if j == k else ''}\")\n\n    print()\n\n# play(4, 6, 1, 20)\n# play(4, 5, 1, 40)\n# play(7, 10, 100, 200)\n\ndef solve(a, b, q, l, r):\n\n    def val(n):\n        return (cyc - a) * ((n + 1)// cyc) + max(((n + 1) % cyc) - a, 0)\n\n    a, b = max(a, b), min(a, b)    \n    cyc = a * b // gcd(a, b)\n\n    # for i in range(q):\n    #     print(f\"{i}: {l[i]} {r[i]} {val(l[i])} {val(r[i])}\")\n        \n    return [ val(r[i]) - val(l[i]-1) for i in range(q) ]\n        \n\n\nt = int(input().strip())\n\nfor _ in range(t):\n\n    a, b, q = list(map(int, input().strip().split()))\n\n    l = []\n    r = []\n    for _ in range(q):\n        x = list(map(int, input().strip().split()))\n        l.append(x[0])\n        r.append(x[1])\n\n    print(' '.join(map(str, solve(a, b, q, l, r))))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C {\n\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc = new FastScanner();\n\t\tint T = sc.nextInt();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(T-- > 0) {\n\t\t\tlong a = sc.nextInt();\n\t\t\tlong b = sc.nextInt();\n\t\t\tlong c = a*b;\n\t\t\tlong[] count = new long[(int)c];\n\t\t\tlong cnt = 0;\n\t\t\tfor(int i = 0; i < c; i++) {\n\t\t\t\tif(i % a % b != i % b % a) {\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\tcount[i] = cnt;\n\t\t\t}\n\t\t\tint Q = sc.nextInt();\n\t\t\twhile(Q-- > 0) {\n\t\t\t\tlong L = sc.nextLong();\n\t\t\t\tlong R = sc.nextLong();\n\t\t\t\t//calc for L-1\n\t\t\t\tlong ans1 = cnt * ((L-1) / c) + count[(int)((L-1) % c)];\n\t\t\t\tlong ans2 = cnt * (R / c) + count[(int)(R % c)];\n\t\t\t\tsb.append(ans2-ans1+\" \");\n\t\t\t}\n\t\t\tsb.replace(sb.length()-1, sb.length(), \"\\n\");\n\t\t}\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tpw.print(sb.toString());\n\t\tpw.flush();\n\t}\n\t\n\tstatic class FastScanner {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        public FastScanner() {\n            reader = new BufferedReader(new InputStreamReader(System.in), 32768);\n            tokenizer = null;\n        }\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n        \treturn Long.parseLong(next());\n        }\n        public double nextDouble() {\n        \treturn Double.parseDouble(next());\n        }\n        public String nextLine() {\n        \ttry {\n        \t\treturn reader.readLine();\n        \t} catch(IOException e) {\n        \t\tthrow new RuntimeException(e);\n        \t}\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    ans=[]\n    if(a==b):\n        for i in range(q):\n            l,r=map(int,input().split())\n        ans=[0]*q\n        print(*ans)\n    else:\n        aa=max(a,b)\n        bb=min(a,b)\n        lc=(a*b)//(math.gcd(a,b))\n        div=lc-aa\n        ans=[]\n        for i in range(q):\n            l,r=map(int,input().split())\n            count=0\n            ist=l%lc\n            sec=r%lc\n            iist=l//lc\n            ssec=r//lc\n            count+=(ssec-iist)*div\n            count-=max(0,(ist-aa))\n            count+=(max(0,(sec-aa)+1))\n            ans.append(count)\n        print(*ans)\n        "
        },
        {
            "language": 3,
            "solution": "from math import gcd,ceil\n\ndef work(z,lcm,v_nums):\n\tm = z // lcm  \n\tm += 1 \n\ttemp = m*lcm \n\ttran = temp - v_nums \n\tans = (m-1)*v_nums  \n\tif(tran <= z) :  \n\t\tans += (z-tran)+1 \n\treturn ans\n\n# for i in range(110):\n# \tprint(i,work(i,14,7))\n\nt = int(input()) \n\nfor ll in range(t):\n\ta,b,q  = map(int,input().split()) \n\tlcm = (a*b) // gcd(a,b)\n\tv_nums = lcm - max(a,b) \n\tfor llb in range(q):\n\t\tans = 0 \n\t\tr,z = map(int,input().split()) \n\t\tans += work(z,lcm,v_nums)\n\t\tans -= work(r-1,lcm,v_nums)\n\t\tprint(ans,end=' ')\n\tprint()\n\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef gcd(x, y):\n    \"\"\"greatest common divisor of x and y\"\"\"\n    while y:\n        x, y = y, x % y\n    return x\n\n\nlcm = lambda a, b: a * b // gcd(a, b)\n\n\ndef main():\n    t = int(input())\n\n    def query(i, l, m):\n        a = i - ((i // l) * m)\n        return a - min(m - 1, i - ((i // l) * l))\n\n    for _ in range(t):\n        a, b, q = map(int, input().split())\n        l = lcm(a, b)\n\n        for _ in range(q):\n            li, ri = map(int, input().split())\n            print(query(ri, l, max(a, b)) - query(li - 1, l, max(a, b)), end=' ')\n\n        print()\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "import io, os\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n\nfor T in range(int(input())):\n    a, b, q = [int(s) for s in input().split()]\n    l = (a*b)\n\n    s = list(range(1,l+1))\n    cp = 0\n\n\n    for i,x in enumerate(s):\n        if ((x%a)%b)!=((x%b)%a):\n            cp += 1\n        s[i] = cp\n\n    def count(r):\n        rt = (r//l)*cp\n        if r%l:\n            rt += s[r%l-1]\n        return rt\n\n    ans = []\n    for _ in range(q):\n        r1, r2 =  [int(s) for s in input().split()]\n        ans.append(count(r2) - count(r1-1))\n\n    print(' '.join(str(num) for num in ans))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CodingLegacy {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        ScanReader in = new ScanReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Palindrome solver = new Palindrome();\n\n        int t = 1;\n        t = in.nextInt();\n\n        for (int i = 0; i < t; i++) {\n            solver.solve(i + 1, in, out);\n        }\n\n        out.close();\n    }\n\n    static class Palindrome {\n\n        static long mod = 1000000007;\n        static long maxX = (long) 1e18;\n        static long mod2 = 998244353;\n\n        int[] ar;\n        void solve(int testNumber, ScanReader in, PrintWriter out) {\n            int a = in.nextInt(),b = in.nextInt(),q =in.nextInt();\n            int n = a*b;\n\n            ar = new int[n +1];\n\n            for(int i = 1;i<n;i++) {\n                ar[i] = ar[i-1];\n                if((i%a)%b != (i%b)%a) {\n                    ar[i]++;\n                }\n            }\n\n            while (q-- > 0) {\n                long l = in.nextLong(),r = in.nextLong();\n\n//                System.out.println(n);\n\n//                System.out.println(r%n + \" \" + l%n);\n\n                long ans = (long) ar[n - 1] * (r / n) + (long)ar[(int)(r%n)];\n                l--;\n                ans = ans - (long) ar[n - 1] * (l / n) - (long)ar[(int)(l%n)];\n                out.print(ans + \" \");\n\n            }\n\n            out.println();\n\n        }\n\n    }\n\n    static class ScanReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public ScanReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        public int nextInt() {\n            int c = read();\n\n            while (isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import math,sys\ninput=sys.stdin.readline\nT=int(input())\nfor _ in range(T):\n    a,b,q=map(int,input().split())\n    if (b<a):\n        a,b=b,a\n    c=(a*b)//math.gcd(a,b)\n    A=[0 for i in range(c)]\n    #print(c)\n    for i in range(c):\n        if (i>=b):\n            A[i]=A[i-1]+1\n    B=[]\n    for i in range(q):\n        v=0\n        l1,r1=map(int,input().split())\n        l=max(l1%c,1)\n        r=r1%c\n        l2=l1//c\n        r2=r1//c\n        vc=A[r]-A[l-1]+(A[c-1]*(r2-l2))\n        #print(vc)\n        B.append(vc)\n    print(*B)\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \n\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Unstoppable solver = new Unstoppable();\n\t\tint t=in.nextInt();\n\t\twhile(t-->0)\n        solver.solve(in, out);\n        out.close();\n    }\n \n    static class Unstoppable {\n        static int gcd(int a,int b){\n            if(b==0) return a;\n            else return gcd(b,a%b);\n        } \n        public void solve(InputReader sc, PrintWriter out) {\n        \tint a = sc.nextInt();\n\t\t\tint b = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\tint m = a / gcd(a, b) * b;\n\t\t\tint[] kk = new int[m + 1];\n\t\t\tfor (int r = 0; r < m; r++)\n\t\t\t\tif (r % a % b != r % b % a)\n\t\t\t\t\tkk[r + 1]++;\n\t\t\tfor (int cnt = 1; cnt <= m; cnt++)\n\t\t\t\tkk[cnt] += kk[cnt - 1];\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong r = sc.nextLong() + 1;\n\t\t\t\tint l_ = (int) (l % m);\n\t\t\t\tint r_ = (int) (r % m);\n\t\t\t\tlong kl = l / m * kk[m] + kk[l_];\n\t\t\t\tlong kr = r / m * kk[m] + kk[r_];\n\t\t\t\tout.print(kr - kl + \" \");\n\t\t\t}\n\t\t\tout.println(\"\");\n        \n        }\n \n    }\n\n \n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n \n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n \n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n    }\n}\n "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class TestClass {\n    static long gcd(long a,long b)\n    {\n        if(b==0)\n        return a;\n        return gcd(b,a%b);\n    }\n    public static void main(String args[] ) throws Exception {\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n        int t=Integer.parseInt(br.readLine());\n        while(t-->0)\n        {\n           String str[]=br.readLine().split(\" \");\n           long a=Long.parseLong(str[0]);\n           long b=Long.parseLong(str[1]);\n           int q=Integer.parseInt(str[2]);\n           long p=(a*b)/gcd(a,b);\n           while(q-->0)\n           {\n               long max=Math.max(a,b);\n               String mystr[]=br.readLine().split(\" \");\n               long l=Long.parseLong(mystr[0]);\n               long r=Long.parseLong(mystr[1]);\n               long start=(l%p==0)?(l/p):(l/p+1);\n               long end=r/p;\n               long ans=0; \n               \n               if(Math.min(max,r+1)-l>0)\n               ans=ans+Math.min(max,r+1)-l;\n               \n               if(end>=start)\n               {\n                   ans=ans+(end-start)*max;\n                   ans=ans+Math.min(r-p*end+1,max);\n                  \n               }\n               \n              if(p*(l/p)<l&&(l/p)>0)\n               {\n                   ans=ans+Math.max(0,Math.min(r+1,p*(l/p)+max)-l);\n                   \n               }\n             \n               \n               \n               \n               \n               ans=r-l+1-ans;\n               bw.write(ans+\" \");\n               \n           }\n           bw.newLine();\n          \n           \n        }\n        \n       \n       bw.close();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    vector<long long> x(2 * a * b);\n    for (int i = 0; i < 2 * a * b; i++) {\n      if ((i % a) % b != (i % b) % a) x[i]++;\n      if (i) x[i] += x[i - 1];\n    }\n    while (q--) {\n      long long l, r, s;\n      cin >> l >> r;\n      if (a == b && a == 1) {\n        cout << \"0 \";\n        continue;\n      }\n      s = x[l % (a * b) + a * b - 1];\n      if (l % (a * b)) s -= x[l % (a * b) - 1];\n      s *= (r - l + 1) / (a * b);\n      long long temp = l + ((r - l + 1) / (a * b)) * (a * b);\n      s += x[temp % (a * b) + r - temp];\n      if (temp % (a * b)) s -= x[temp % (a * b) - 1];\n      cout << s << \" \";\n    }\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\ndef gcd(a,b): \n    if(b==0): \n        return a \n    else: \n        return gcd(b,a%b)\n\nfor xx in range(t):\n\ta,b,q = map(int,input().split())\n\tcf = (a*b)//gcd(a,b)\n\tans = []\n\tfor i in range(q):\n\t\tl,r = map(int,input().split())\n\t\tif l%cf <= max(a,b):\n\t\t\tl = ((l//cf)*cf)+max(a,b)\n\t\tif r%cf < max(a,b):\n\t\t\tr = ((r//cf)*cf)-1\n\t\tif l > r or a%b == 0 or b%a == 0:\n\t\t\t\tans.append(0)\n\t\t\t\tcontinue\n\t\tl1 = (l-1)//cf\n\t\tr1 = r//cf\n\t\tan = max(r1-l1,0)\n\t\tgiv = r-l+1\n\t\tgiv -= an*max(a,b)\n#\t\tprint(l,r,l1,r1)\n\t\tans.append(giv)\n\tlel = \" \".join([str(i) for i in ans])\n\tprint(lel)"
        },
        {
            "language": 3,
            "solution": "def lcm(x, y):\n    if x > y:\n       greater = x\n    else:\n       greater = y\n    while(True):\n        if((greater % x == 0) and (greater % y == 0)):\n            lcm = greater\n            break\n        greater += 1\n    return lcm\n\nT = int(input())\n\nfor tc in range(T):\n    a, b, q = map(int, input().split())\n    res = []\n    maxx = max(a, b)\n    mf = lcm(a, b)\n\n    for i in range(q):\n        l, r = map(int, input().split())\n        count = 0\n        counte = 0\n        if maxx > r:\n            count = 0\n        elif maxx == r:\n            count = 1\n        elif maxx > l:\n            counte = maxx - l\n            counte += (r//mf - 1) * maxx\n            counte += min(maxx, r - (r//mf)*mf + 1)\n            count = (r - l + 1) - counte\n        else:\n            counte += (r//mf - 1) * maxx - (l//mf) * maxx + max(0, ((l//mf)*mf+maxx - l))\n            counte += min(maxx, r - (r//mf)*mf + 1)\n            count = (r-l+1) - counte\n\n\n\n\n\n        res.append(str(count))\n\n    print(\" \".join(res))\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import math\nt = int(input())\n\ndef get(A,B,N):\n    if(N==-1):\n        return 0;\n    if(max(A,B) > N):\n        return N + 1\n    GCD = int(math.gcd(A,B))\n    X = GCD * (A//GCD) * (B//GCD)\n    Delta = min(max(A,B), N - N//X*X + 1)\n    return max(A,B) + max(N//X-1,0)*max(A,B) + (Delta * int(N>=X))\n\nfor _ in range(t):\n    a,b,q = map(int,input().split())\n    for _ in range(q):\n        l,r = map(int,input().split())\n        ans = abs(l-r) + 1 - (get(a,b,r) - get(a,b,l-1))\n        print(int(ans),end=' ')\n    print()\n"
        },
        {
            "language": 3,
            "solution": "def lcm(x, y):  \n   if x > y:  \n       greater = x  \n   else:  \n       greater = y  \n   while(True):  \n       if((greater % x == 0) and (greater % y == 0)):  \n           lcm = greater  \n           break  \n       greater += 1  \n   return lcm  \n \nt=int(input())\nfor _ in range(t):\n  a,b,q=map(int,(input().split()))\n  x=lcm(a,b)\n  for i in range(q):\n    count=0\n    \n    l,r=map(int,(input().split()))\n    lp=(l//(x)+1)*x\n    rp=(r//(x))*x\n    count+=((rp-lp)//(x)+1)*max(a,b)\n    #print([rp,lp])\n    if l%(x)<max(a,b):\n      count+=max(a,b)-l%(x)\n    if r%(x)<max(a,b):\n      count-=max(a,b)-r%(x)-1\n    print(int(r-l-count+1),end=\" \")\n    #print(int(count))\n  print()"
        },
        {
            "language": 3,
            "solution": "def swap(a, b):\n    temp = a\n    a = b\n    b = temp\n\n\nfor _ in range(int(input())):\n    a, b, q = [int(i) for i in input().split()]\n    if a > b:\n        swap(a, b)\n    pre = [0 for i in range(a * b + 2)]\n\n    for i in range(1, a * b ):\n        if (i % a) % b != (i % b) % a:\n            pre[i] = pre[i - 1] + 1\n        else:\n            pre[i] = pre[i - 1]\n    # print(pre)\n    # print([i for i in range(a*b+2)])\n    for i in range(q):\n        l, r = [int(i) for i in input().split()]\n\n        l_gr = l // (a * b)\n        r_gr = r // (a * b)\n        ans = (r_gr - l_gr + 1) * pre[a * b - 1]\n        ans = ans - pre[a*b - 1] + pre[r % (a * b)]\n        if l % (a * b) != 0:\n            ans = ans - pre[l % (a * b) - 1]\n        print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconstexpr int MOD = 1000000007;\nusing ll = long long;\nusing Pii = std::pair<int, int>;\nusing Pll = std::pair<ll, ll>;\nnamespace std {\ntemplate <class T>\nstring to_string(T s);\ntemplate <class S, class T>\nstring to_string(pair<S, T> p);\nstring to_string(string s) { return s; }\nstring to_string(const char s[]) { return to_string(string(s)); }\ntemplate <class T>\nstring to_string(T v) {\n  if (v.empty()) return \"{}\";\n  string ret = \"{\";\n  for (auto x : v) ret += to_string(x) + \",\";\n  ret.back() = '}';\n  return ret;\n}\ntemplate <class S, class T>\nstring to_string(pair<S, T> p) {\n  return \"{\" + to_string(p.first) + \":\" + to_string(p.second) + \"}\";\n}\n}  // namespace std\nvoid debug() { std::cerr << std::endl; }\ntemplate <class Head, class... Tail>\nvoid debug(Head head, Tail... tail) {\n  std::cerr << std::to_string(head) << \" \";\n  debug(tail...);\n}\nstruct IO {\n  std::string separator = \" \";\n  template <class T>\n  inline void read(T& x) {\n    char c;\n    do {\n      c = getchar_unlocked();\n    } while (c != '-' && (c < '0' || '9' < c));\n    bool minus = 0;\n    if (c == '-') {\n      minus = 1;\n      c = getchar_unlocked();\n    }\n    x = 0;\n    while ('0' <= c && c <= '9') {\n      x *= 10;\n      x += c - '0';\n      c = getchar_unlocked();\n    }\n    if (minus) x = -x;\n  }\n  inline void read(std::string& x) {\n    char c;\n    do {\n      c = getchar_unlocked();\n    } while (c == ' ' || c == '\\n');\n    x.clear();\n    do {\n      x += c;\n      c = getchar_unlocked();\n    } while (c != ' ' && c != '\\n' && c != EOF);\n  }\n  template <class T>\n  inline void read(std::vector<T>& v) {\n    for (auto& x : v) read(x);\n  }\n  template <class Head, class... Tail>\n  inline void read(Head& head, Tail&... tail) {\n    read(head);\n    read(tail...);\n  }\n  template <class T>\n  inline void write(T x) {\n    char buf[32];\n    int p = 0;\n    if (x < 0) {\n      x = -x;\n      putchar_unlocked('-');\n    }\n    if (x == 0) putchar_unlocked('0');\n    while (x > 0) {\n      buf[p++] = (x % 10) + '0';\n      x /= 10;\n    }\n    while (p) {\n      putchar_unlocked(buf[--p]);\n    }\n  }\n  inline void write(std::string x) {\n    for (char c : x) putchar_unlocked(c);\n  }\n  inline void write(const char s[]) {\n    for (int i = 0; s[i] != 0; ++i) putchar_unlocked(s[i]);\n  }\n  template <class T>\n  inline void write(std::vector<T> v) {\n    for (auto itr = v.begin(); itr + 1 != v.end(); ++itr) {\n      write(*itr);\n      write(separator);\n    }\n    write(v.back());\n  }\n  template <class Head, class... Tail>\n  inline void write(Head head, Tail... tail) {\n    write(head);\n    write(separator);\n    write(tail...);\n  }\n  template <class Head, class... Tail>\n  inline void writeln(Head head, Tail... tail) {\n    write(head, tail...);\n    write(\"\\n\");\n  }\n  void set_separator(std::string s) { separator = s; }\n} io;\nusing namespace std;\nint main() {\n  int t;\n  io.read(t);\n  while (t--) {\n    int a, b, q;\n    io.read(a, b, q);\n    vector<int> table(a * b + 1);\n    for (int i = 0; i < (int)a * b; i++) {\n      table[i + 1] = table[i];\n      if ((i % a) % b != (i % b) % a) table[i + 1]++;\n    }\n    ll sum = table[a * b];\n    while (q--) {\n      ll l, r;\n      io.read(l, r);\n      l--;\n      ll ansl = sum * (l / (a * b)) + table[l % (a * b) + 1];\n      ll ansr = sum * (r / (a * b)) + table[r % (a * b) + 1];\n      io.write(ansr - ansl);\n      io.write(q == 0 ? \"\\n\" : \" \");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nfrom math import gcd\nimport sys\ninput = sys.stdin.readline\n \nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    lcm = a * b // gcd(a, b)\n    ans = [0]*q\n \n    for i in range(q):\n        l, r = map(int, input().split())\n        edge = r // lcm * lcm\n        sub = (r // lcm) * b + min(b, r-edge+1)\n        #print(sub)\n        l -= 1\n        edge_l = l // lcm * lcm\n        sub -= (l // lcm) * b + min(b, l-edge_l+1)\n        #print(sub)\n        ans[i] = r - l - sub\n \n    print(*ans)\n'''for i in range(100,201):\n    \n    print(((i)%7)%10,((i)%10)%7,i)\n    if ((i)%7)%10==((i)%10)%7:\n        print(\"yes\")'''\n    \n    \n    \n    \n       \n       \n"
        },
        {
            "language": 3,
            "solution": "\ndef gcd(a,b):\n    if(a%b==0):\n        return b\n    return int(gcd(b,a%b))\n\ndef lcm(a,b):\n    return int(a*b/gcd(a,b))\n\ndef cnt(l,a,b):\n    t1 = lcm(a,b)\n    n = (l//t1)*max(a,b) + min((l%t1 + 1),max(a,b))\n    return int(n)\n\n\nt = int(input())\nfor i in range(0,t):\n    a,b,q = map(int,input().split())\n    for j in range(0,q):\n        l,r = map(int,input().split())\n        ans = r - l + 1 - cnt(r,a,b) + cnt(l-1,a,b)\n        print(ans, end = ' ')\n    print('')\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C \n{\n\t \n\tpublic static void main(String[] args)throws IOException \n\t{\t\n\t\tBufferedReader ob=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringBuffer sb=new StringBuffer();\n\t\t\n\t\tint t=Integer.parseInt(ob.readLine());\n        while(t-->0) \n        {\n        \tString s[]=ob.readLine().split(\" \");\n            int a=Integer.parseInt(s[0]);\n            int b=Integer.parseInt(s[1]);\n            int q=Integer.parseInt(s[2]);\n            int LCM=(int)lcm(a,b);\n            int cnt=0;\n            int sum[]=new int[LCM];\n            for (int x=0;x<LCM;x++) \n            {\n                if(((x%a)%b)!=((x%b)%a)) \n                {\n                    cnt++;\n                }\n                sum[x]=cnt;\n            }\n            while(q-->0)\n            {\t\n            \tString str[]=ob.readLine().split(\" \");\n                long l=Long.parseLong(str[0]);\n                long r=Long.parseLong(str[1]);\n                sb.append(count(r,LCM,sum)-count(l-1,LCM,sum) + \" \");\n            }\n            sb.append('\\n');\n        }\n        System.out.print(sb);\n    }\n \n    private static long count(long y, int lcm, int[] sum) {\n        return y/lcm*sum[lcm-1]+sum[(int)(y%lcm)];\n    }\n \n    private static long lcm(long a, long b) {\n        return a*b/gcd(a,b);\n    }\n \n    private static long gcd(long a, long b) {\n        return b > 0 ? gcd(b,a%b) : a;\n    }\n\t\n\t\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long power(long long a, long long n) {\n  long long p = 1;\n  while (n > 0) {\n    if (n % 2) {\n      p = p * a;\n    }\n    n >>= 1;\n    a *= a;\n  }\n  return p;\n}\nlong long power(long long a, long long n, long long mod) {\n  long long p = 1;\n  while (n > 0) {\n    if (n % 2) {\n      p = p * a;\n      p %= mod;\n    }\n    n >>= 1;\n    a *= a;\n    a %= mod;\n  }\n  return p % mod;\n}\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nlong long max(long long a, long long b) {\n  if (a > b) {\n    return a;\n  } else {\n    return b;\n  }\n}\nlong long lcm(long long a, long long b) { return a * (b / gcd(a, b)); }\nvoid out(vector<long long> arr) {\n  for (auto i : arr) {\n    cout << i << ' ';\n  }\n  cout << \"\\n\";\n}\nvoid out(vector<pair<long long, long long>> par) {\n  for (auto i : par) {\n    cout << i.first << ' ';\n  }\n  cout << endl;\n  for (auto i : par) {\n    cout << i.second << ' ';\n  }\n  cout << endl;\n}\nvoid out(set<long long> arr) {\n  for (auto i : arr) {\n    cout << i << ' ';\n  }\n  cout << endl;\n}\nvoid inp(vector<long long> &arr) {\n  for (long long i = 0; i < arr.size(); i++) {\n    cin >> arr[i];\n  }\n}\nvoid inp(long long &n) { cin >> n; }\nvoid inp(long long &a, long long &b, long long &c) { cin >> a >> b >> c; }\nvoid inp(long long &a, long long &b) { cin >> a >> b; }\nvoid inp(long long &a, long long &b, long long &c, long long &d) {\n  cin >> a >> b >> c >> d;\n}\nlong long MOD = 1e9 + 7;\nconst long long N = 2 * 100000 + 10;\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    long long gg = gcd(a, b);\n    gg = (a * b) / gg;\n    for (long long i = 0; i < q; i++) {\n      long long l, r;\n      cin >> l >> r;\n      long long v1 = l / gg;\n      long long v2 = r / gg;\n      long long ans = (v2 - v1 + 1) * b;\n      v1 = l - v1 * gg;\n      v1 = min(b, v1);\n      v2 = v2 * gg + b - 1 - (r);\n      v2 = max(0, v2);\n      ans = ans - v1 - v2;\n      cout << (r - l + 1) - ans << \"\\n\";\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math as mt \nimport sys,string\ninput=sys.stdin.readline\n#print=sys.stdout.write\n#import random\nfrom heapq import heappush,heapify,heappop\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : map(int,input().split())\nI=lambda :int(input())\ndef lcm(a,b):\n    return (a*b)//mt.gcd(a,b)\nt=I()\nfor _ in range(t):\n    a,b,q=M()\n    x=lcm(a,b)\n    for i in range(q):\n        l,r=M()\n        d=r-l+1\n        ans1=(r//x)*max(a,b)\n        \n        r%=x\n        ans1+=min(max(a,b)-1,r)\n        l-=1\n        ans2=(l//x)*max(a,b)\n        l%=x\n        ans2+=min(max(a,b)-1,l)\n        equal=ans1-ans2\n        print(d-equal,end=\" \")\n    print()\n    \n"
        },
        {
            "language": 3,
            "solution": "import math\nfor ii in range(int(input())):\n    t = [int(i) for i in input().split()]\n    a = max(t[0],t[1])\n    b = min(t[0],t[1])\n    q = t[2]\n    size = 1 \n    arr = [0 for i in range(a*b)]\n    y = a*b\n    arr[0] = 1\n    for i in range(1,a*b):\n        if (i%a)%b == (i%b)%a:\n            size += 1\n        arr[i] = size\n    ans = []\n    for i in range(q):\n        x = [int(i)for i in input().split()]\n        l = x[0]\n        r = x[1]\n        #print((r//y)*size+arr[(r+1)%y],'and',((l-1)//y)*size+arr[(l)%y])\n        ans.append((r-l+1-((r//y)*size+arr[(r)%y]-((l-1)//y)*size-arr[(l-1)%y])))\n    print(*ans)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\nt = int(input())\n\nfor _ in range(t):\n    a, b, q = [int(c) for c in input().split()]\n    a, b = min(a, b), max(a, b)\n    pgcd = math.gcd(a, b)\n    ppcm = a*b//pgcd\n\n    cumulative_count = [0 for i in range(ppcm)]\n    count = 0\n    for i in range(ppcm):\n        if i % a % b != i % b % a:\n            count += 1\n        cumulative_count[i] = count\n\n    cumul_per_period = cumulative_count[-1]\n    for i in range(q):\n        li, ri = [int(c) for c in input().split()]\n\n        count_li = cumul_per_period * ((li-1) // ppcm) + cumulative_count[(li-1) % ppcm]\n        count_ri = cumul_per_period * (ri // ppcm) + cumulative_count[ri % ppcm]\n        count = count_ri - count_li\n        \n        print(count, end=' ')\n    print('')\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = signed long long int;\nconst int N = 1e5;\nll a, b, ab, q, l, r, res, x[N];\nvoid solve() {\n  cin >> a >> b >> q;\n  ab = a * b;\n  for (int i = 1; i <= ab; i++) {\n    x[i] = x[i - 1];\n    if (((i % a) % b) != ((i % b) % a)) {\n      x[i]++;\n    }\n  }\n  while (q--) {\n    cin >> l >> r;\n    res = 0LL;\n    if (r - l + 1LL >= ab) {\n      if (l % ab != 1LL) {\n        res += x[ab] - x[(l % ab) - 1];\n        l += ab - (l % ab) + 1LL;\n      }\n      if (r % ab != 1LL) {\n        res += x[r % ab];\n        r -= r % ab;\n      }\n      res += max(r - l + 1, 0LL) / ab * x[ab];\n    } else {\n      if (r % ab >= (l % ab) - 1) {\n        res = x[r % ab] - x[(l % ab) - 1];\n      } else {\n        res = x[r % ab] + x[ab] - x[(l % ab) - 1];\n      }\n    }\n    cout << res << ' ';\n  }\n  cout << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cout.tie(nullptr);\n  cin.tie(nullptr);\n  cout << fixed;\n  cout.precision(12);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def get_shift_freq(M, m):\n    k = 1\n    while 1:\n        if (k * (M % m)) % m == 0:\n            return k\n        k += 1\n\nfor testcase in range(int(input())):\n    a, b, q = map(int, input().split())\n    M = max(a, b)\n    m = min(a, b)\n    shift = M % m\n    shift_freq = get_shift_freq(M, m)\n    shift_freq_i = shift_freq * M\n    answers = []\n    for ii in range(q):\n        ans = 0\n        l, r = map(int, input().split())\n        if (l % shift_freq_i) < M:\n            pass\n        else:\n            ans -= (l % shift_freq_i)\n            ans += M\n        l -= l % shift_freq_i\n        rpos = r % shift_freq_i\n        if rpos < M:\n            ans -= M * (shift_freq - 1)\n        else:\n            ans -= shift_freq_i - rpos - 1\n        r += shift_freq_i - rpos\n        ans += ((r - l) // shift_freq_i) * ((shift_freq - 1) * M)\n        answers.append(ans)\n    print(*answers)"
        },
        {
            "language": 1,
            "solution": "\n'''\na, b = 4, 6\nprint a, b\nfor x in range(36) :\n  print x, ((x % a) % b), '!=', ((x % b) % a), \" : \", ((x % a) % b) != ((x % b) % a)\n'''\n\ndef gcd(a, b) :\n  while b :\n    a, b = b, a % b\n  return a\n\nT = input()\nfor t in range(T) :\n  A, B, Q = map(int,raw_input().split())\n  period = min(A, B) // gcd(A, B) * max(A, B)\n\n  for q in range(Q) :\n    l, r = map(int,raw_input().split())\n  \n    if max(A,B) % min(A,B) == 0 : print 0\n    else :\n      lp = l // period\n      rp = r // period\n\n      begin, middle, end = 0, 0, 0\n      \n      if lp < rp : \n        nxt = (lp+1)*period\n        begin = min(period-max(A,B), nxt - l)\n        rb = r-rp*period\n        end = max(0, rb - max(A, B)+1)\n      elif lp == rp :\n        lb = max(l-lp*period, max(A,B))\n        rb = r-rp*period\n        begin = max(0, rb - lb + 1)\n\n      if rp - lp > 1 : \n        middle = (rp - (lp+1)) * (period-max(A, B))\n\n      print begin + middle + end,\n  \n  print \"\"\n"
        },
        {
            "language": 3,
            "solution": "## necessary imports\nimport sys\ninput = sys.stdin.readline\nfrom math import log2, log, ceil\n\n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp\n\n## gcd function\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n    if(k > n - k): \n        k = n - k \n    res = 1\n    for i in range(k): \n        res = res * (n - i) \n        res = res / (i + 1) \n    return res \n\n## upper bound function code -- such that e in a[:i] e < x;\ndef upper_bound(a, x, lo=0):\n    hi = len(a)\n    while lo < hi:\n        mid = (lo+hi)//2\n        if a[mid] < x:\n            lo = mid+1\n        else:\n            hi = mid\n    return lo\n\n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n\n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n\n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b\n\n# find function\ndef find(x, link):\n    while(x != link[x]):\n        x = link[x]\n    return x\n\n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n\n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e6 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n\n################## un-comment below 2 lines when using factorization #################\n# spf = [0 for i in range(MAXN)] \n# spf_sieve() \ndef factoriazation(x):\n    ret = {};\n    while x != 1:\n        ret[spf[x]] = ret.get(spf[x], 0) + 1;\n        x = x//spf[x]\n    return ret\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()))\n## taking string array input\ndef str_array():\n    return input().strip().split();\n\n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n\n\n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n\n## million times neater than my other solutions of this problem\ndef solve(x):\n    this = (x//lcm)*prd_cunt;\n    this += hsh[x%lcm];\n    return this;\n\nfor _ in range(int(input())):\n    a,b,q = int_array();\n    lcm = (a*b)//gcd(a,b);\n    maxi = max(a,b); hsh = [];\n    for x in range(lcm):\n        if (x%a)%b == (x%b)%a:\n            hsh.append(0);\n        else:\n            hsh.append(1);\n    for i in range(1, lcm):\n        hsh[i] += hsh[i-1];\n    prd_cunt = hsh[-1];\n    for _ in range(q):\n        l, r = int_array();\n        ans = solve(r) - solve(l-1);\n        print(ans, end = ' ');\n    print('\\n')"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class First {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        //int a = 1;\n        int t;\n        t = in.nextInt();\n        //t = 1;\n        while (t > 0) {\n            //out.print(\"Case #\"+(a++)+\": \");\n            solver.call(in, out);\n            t--;\n        }\n        out.close();\n\n    }\n\n    static class TaskA {\n        long c;\n        int a, b, q;\n        public void call(InputReader in, PrintWriter out) {\n            a = in.nextInt();\n            b = in.nextInt();\n            q = in.nextInt();\n\n            if(a>b){\n                c = a;\n                a = b;\n                b = (int)c;\n            }\n\n            c = lcm(a,b);\n\n            long l, r ,ans;\n\n            for (int i = 0; i < q; i++) {\n                l = in.nextLong();\n                r = in.nextLong();\n\n                long d = r/c;\n                ans = d*b;\n                ans-= Math.max((d*c + b-1) - r  , 0);\n\n                d = (l-1)/c;\n                ans -= d*b;\n                ans += Math.max((d*c + b-1) - l +1 , 0);\n\n                out.print(r-l+1 - ans+\" \");\n            }\n            out.println();\n        }\n    }\n\n    static int gcd(int a, int b)\n    {\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    static int lcm(int a, int b)\n    {\n        return (a / gcd(a, b)) * b;\n    }\n\n    static class answer implements Comparable<answer>{\n        int a;\n        int b;\n\n        public answer(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(answer o) {\n            return this.a - o.a;\n        }\n    }\n\n    static class answer1 implements Comparable<answer1>{\n        int a, b, c;\n\n        public answer1(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n\n        }\n\n        @Override\n        public int compareTo(answer1 o) {\n            return this.a - o.a;\n        }\n    }\n\n    static long gcd(long a, long b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static void sort(long[] a) {\n        ArrayList<Long> l=new ArrayList<>();\n        for (long i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n\n    static final Random random=new Random();\n\n    static void shuffleSort(int[] a) {\n        int n=a.length;\n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n), temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        Arrays.sort(a);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor x in range(t):\n    a,b,q=map(int,input().split())\n    pre=[0]\n    for y in range(1,a*b):\n        pre.append(pre[y-1])\n        if(y%a)%b!=(y%b)%a:\n            pre[y]+=1\n\n    List=[]\n    for Q in range(q):\n        l,r=map(int,input().split())\n        low=((l-1)//(a*b))*pre[len(pre)-1]+pre[(l-1)%(a*b)]\n        \n        high=(r//(a*b))*pre[len(pre)-1]+pre[r%(a*b)]\n       \n        List.append(high-low)\n    print(*List)"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nimport sys\ninput=sys.stdin.readline\nfrom collections import defaultdict as dd\nt=int(input())\nwhile t:\n    a,b,q=map(int,input().split())\n    lcm=a*b//gcd(a,b)\n    le=max(a,b)\n    re=lcm-1\n    m=le\n    for i in range(q):\n        l,r=map(int,input().split())\n        res=(re-le+1)*(r//(m+re-le+1))\n        li=m+(m+re-le+1)*(r//(m+re-le+1))\n        if(r>=li):\n            res+=r-li+1\n        #l,r=map(int,input().split())\n        l-=1\n        res1=(re-le+1)*(l//(m+re-le+1))\n        li=m+(m+re-le+1)*(l//(m+re-le+1))\n        if(l>=li):\n            res1+=l-li+1\n        print(res-res1,end=\" \")\n    print()\n    t-=1\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    a, b, q = map(int, input().split())\n    c = a * b\n    x = [0] * (c + 1)\n    for i in range(c):\n        if (i % a) % b != (i % b) % a:\n            x[i] = 1\n        x[i] += x[i - 1]\n\n    def get(y):\n        if y < 0:\n            return 0\n        cnt = y // c * x[c - 1]\n        return cnt + x[y % c]\n\n    ans = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        ans.append(get(r) - get(l - 1))\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b) :\n    if(a==0) :\n        return b\n    else:\n        return gcd(b%a,a)\n\ndef go (a,b,n) :\n    lcmm=(a*b)//gcd(a,b)\n    ans=((n)//lcmm)*max(a,b)\n    p=((n)//lcmm)*lcmm\n    \n    ans+=min(n-p+1,max(a,b))\n    return ans\n\nt=int(input())\nwhile t>0 :\n    t-=1\n    s=input().split()\n    a=int(s[0])\n    b=int(s[1])\n    q=int(s[2])\n    \n    list1= [] \n    for i in range (0,q):\n        p=input().split()\n        l=int(p[0])\n        r=int(p[1])\n        list1.append((r-l+1)-(go(a,b,r)-go(a,b,l-1)))\n        list1[i]=int(list1[i])\n    \n    for i in range (0,len(list1)) :\n        print(int(list1[i]),end=\" \")\n    print(\"\",end=\"\\n\")"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.util.StringTokenizer;\n\npublic class code1 {\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new\n\t\t\t                        InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException  e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\tpublic static void main(String[] args) {\n\t\tFastReader sc = new FastReader();\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tlong a = sc.nextLong();\n\t\t\tlong b = sc.nextLong();\n\t\t\tint q = sc.nextInt();\n\t\t\tlong prefix[] = new long[(int)(a * b) + 1];\n\t\t\tfor (int i = 1; i <= (int)(a * b); i++) {\n\t\t\t\tif (((i % a) % b) != ((i % b % a))) {\n\t\t\t\t\tprefix[i] = (long)1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 1; i <= (int)(a * b); i++) {\n\t\t\t\tprefix[i] += prefix[i - 1];\n\t\t\t}\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong r = sc.nextLong();\n\t\t\t\tl--;\n\t\t\t\tlong u = a * b;\n\t\t\t\tlong p = (l / u) * prefix[(int)u] + prefix[(int)(l % u)];\n\t\t\t\tlong s = (r / u) * prefix[(int)u] + prefix[(int)(r % u)];\n\t\t\t\tSystem.out.print((s - p) + \" \");\n\n\t\t\t}\n\t\t\tSystem.out.println();\n\n\n\n\n\t\t}\n\t\tSystem.out.println();\n\n\n\n\t}\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef find(n,terms,a,b):\n    if n <= 0:\n        return 0\n    \n    x = n//terms\n    good = terms-max(a,b)\n    total = good*x\n    n %= terms\n    total += min(good,n)\n\n    return total\n\ndef solve(a,b,q,ans):\n    g = math.gcd(max(a,b),min(a,b))\n    x = max(a,b)\n    terms = a*b//g\n    arr = []\n    for i in range(q):\n        l,r = map(int,input().split())\n        l -= max(a,b)-1\n        r -= max(a,b)-1\n        arr.append(find(r,terms,a,b)-find(l-1,terms,a,b))\n    \n    ans.append(arr)\n\ndef main():\n    t = int(input())\n    ans = []\n    for i in range(t):\n        a,b,q = map(int,input().split())\n        solve(a,b,q,ans)\n\n    for i in ans:\n        for j in i:\n            print(j,end = ' ')\n\n        print()\n\n\nmain()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Objects;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class Solution{\n\t\n\tpublic static void main(String[] args) throws Exception{\n\n\t\tFastScanner fs = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\n\t\tint tt = fs.nextInt();\n\t\twhile(tt-->0) {\n\t\t\tint a = fs.nextInt(), b = fs.nextInt(), q = fs.nextInt();\n\t\t\tif(b<a) {\n\t\t\t\tint temp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = temp;\n\t\t\t}\n\t\t\tint lcm = a*b/gcd(a,b);\n\t\t\twhile(q-->0) {\n\t\t\t\tlong l = fs.nextLong(), r = fs.nextLong();\n\t\t\t\tif(a==b) {\n\t\t\t\t\tout.println(0);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tout.print((r-l+1)-(fun(r,lcm,b)-fun(l-1,lcm,b)));\n\t\t\t\tout.print(\" \");\n\t\t\t}\n\t\t\tout.println(\"\");\n\t\t}\n\t\t\n\t\tout.close();\n\t}\n\t\n\t\n\tstatic long fun(long n, int lcm , int b) {\n\t\tlong count = (n/lcm)*b + b;\n\t\tlong num = (n/lcm)*lcm;\n\t\tcount += Math.min(0, (n-num+1)-b);\n\t\treturn count;\n\t}\n\t\n\tstatic int gcd(int a, int b) {\n\t\treturn (a==0)?b:gcd(b%a,a);\n\t}\n\t\n\t\n\t\n\t\n\t\n\tstatic final Random random=new Random();\n\t\n\tstatic void ruffleSort(int[] a) {\n\t\tint n=a.length;//shuffle, then sort \n\t\tfor (int i=0; i<n; i++) {\n\t\t\tint oi=random.nextInt(n), temp=a[oi];\n\t\t\ta[oi]=a[i]; a[i]=temp;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\t\n\t\n\tstatic class FastScanner{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\n\t\tpublic String next(){\n\t\t\twhile(!st.hasMoreElements()){\n\t\t\t\ttry{\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\t\t\n\t\tpublic int nextInt(){\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic int[] readArray(int n){\n\t\t\tint[] a = new int[n];\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n\t\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint cnt[40005];\nint t, a, b, q;\nlong long calc(long long x) {\n  return x / (a * b) * cnt[a * b - 1] + cnt[x % (a * b)];\n}\nint main() {\n  long long l, r;\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d%d%d\", &a, &b, &q);\n    for (int i = 1; i < a * b; i++) {\n      cnt[i] = cnt[i - 1];\n      if (i % a % b != i % b % a) cnt[i]++;\n    }\n    while (q--) {\n      scanf(\"%lld%lld\", &l, &r);\n      if (q)\n        printf(\"%lld \", calc(r) - calc(l - 1));\n      else\n        printf(\"%lld\\n\", calc(r) - calc(l - 1));\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class p1342C {\n    public static void main(String[] args) {\n        Scanner scn=new Scanner(System.in);\n        int t=scn.nextInt();\n        for(int i=0;i<t;i++){\n            long a=scn.nextLong();\n            long b=scn.nextLong();\n            long val=a*b/gcd1((int)a,(int)b);\n            int q=scn.nextInt();\n            for(int i1=0;i1<q;i1++){\n                long l=scn.nextLong();\n                long r=scn.nextLong();\n                if(a>b){\n                    System.out.print(ans(r,val,a)-ans(l-1,val,a)+\" \");\n                }\n                else{\n                    System.out.print(ans(r,val,b)-ans(l-1,val,b)+\" \");\n                }\n            }\n            System.out.println();\n        }\n\n    }\n    public static int gcd1(int a,int b){\n        if(a>=b){\n            while(b>0){\n                int m=a%b;\n                a=b;\n                b=m;\n            }\n            return(a);\n        }\n        else{\n            return(gcd1(b,a));\n        }\n    }\n    public static long ans(long l,long lcm,long a){\n        long x=l/lcm;\n        long ans=a*x;\n        if(l%lcm>a-1){\n            ans=ans+a;\n        }\n        else{\n            ans=ans+l%lcm+1;\n        }\n        return((l+1)-ans);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    lcm = a * b\n\n    table = [0] * lcm\n\n    for i in range(1, lcm):\n        if ((i % a) % b) != ((i % b) % a):\n            table[i] = table[i - 1] + 1\n        else:\n            table[i] = table[i - 1]\n\n    answers = []\n\n    for _ in range(q):\n        x, y = map(int, input().split())\n\n        lcmsInside = (y // lcm) - (x // lcm)\n        t = lcmsInside * table[-1]\n\n        x = x % lcm\n        y = y % lcm\n\n        if x != 0:\n            t -= table[x - 1]\n\n        t += table[y]\n\n        answers.append(t)\n\n    print(*answers)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nfrom collections import deque\nmod = 10**9 + 7\nimport sys\nimport random\n# sys.setrecursionlimit(10**6)\nfrom queue import PriorityQueue\n# def rl():\n#     return [int(w) for w in stdin.readline().split()]\nfrom bisect import bisect_right\nfrom bisect import bisect_left\nfrom collections import defaultdict\nfrom math import sqrt,factorial,gcd,log2,inf,ceil\n# map(int,input().split())\n# # l = list(map(int,input().split()))\n# from itertools import permutations\nimport heapq\n# input = lambda: sys.stdin.readline().rstrip()\ninput = lambda : sys.stdin.readline().rstrip()\nfrom sys import stdin, stdout\nfrom heapq import heapify, heappush, heappop\nfrom itertools import permutations\nfrom math import factorial as f\n\n# def ncr(x, y):\n#     return f(x) // (f(y) * f(x - y))\ndef ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = (num * (n - i)) % p\n        den = (den * (i + 1)) % p\n    return (num * pow(den,\n                      p - 2, p)) % p\n\n\nt = int(input())\n\nfor _ in range(t):\n\n    a,b,q = map(int,input().split())\n    ha = []\n    a,b = min(a,b),max(a,b)\n    for i in range(10**5):\n        if (i%a)%b == (i%b)%a:\n            ha.append(i)\n\n\n    d,l = 1,1\n    for i in range(1,len(ha)):\n        if ha[i]-ha[i-1]!=1:\n            d = ha[i]-ha[i-1]\n            l = i\n            break\n\n    z = d + l - 1\n    ans = []\n    # print(z)\n    for i in range(q):\n\n        z1,z2 = map(int,input().split())\n        f = z2-z1+1\n        fa = z1\n        z1-=1\n        d1 = (z1)//z + 1\n        d2 = (d1-1)*l\n        d3 = ((d1-1)*z) + l-1\n        if z1>=d3:\n            final1 = d2 + l\n        else:\n            final1 = d2 + z1 - ((d1-1)*z) + 1\n\n\n        # print(final1)\n        z1 = z2\n        d1 = (z1)//z + 1\n        d2 = (d1-1)*l\n        d3 = ((d1-1)*z) + l-1\n        if z1>=d3:\n            final2 = d2 + l\n        else:\n            final2 = d2 + z1 - ((d1-1)*z) + 1\n        # print(final2)\n        ans.append(f-(final2-final1))\n        # print(f-(final2-final1))\n    print(*ans)\n    # print(ha)\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nfor _ in range(int(input())):\n    a,b,q = list(map(int,input().split()))\n    lcm = (a*b)//(gcd(a,b))\n    arr = [0 for i in range(lcm)]\n    pref = [0 for i in range(lcm)]\n    for i in range(lcm):\n        v1 = (i%a)%b\n        v2 = (i%b)%a\n        if v1!=v2:\n            arr[i] = 1\n    for i in range(1,lcm):\n        pref[i]+=(arr[i]+pref[i-1])\n    final = []\n    for i in range(q):\n        l,r = list(map(int,input().split()))\n        x = pref[-1]\n        num = r-l+1\n        y = l%lcm\n        ans = 0\n        if(num<=(lcm-y)):\n            ans+=(pref[y+num-1]-pref[y])\n            if arr[y]:\n                ans+=1\n            num-=(min(num,lcm-y))\n        else:\n            num-=(lcm-y)\n            ans+=(x-pref[y])\n            if arr[y]:\n                ans+=1\n            ans+=(x*(num//lcm))\n            # print('mul',num//lcm,num)\n            num = num%lcm\n        if num>0:\n            ans+=pref[num-1]\n        final.append(ans)\n    print(*final)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long di[100001], n;\nlong long sum(long long p) { return p / n * di[n] + di[p % n]; }\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    n = a * b;\n    for (long long i = 1; i <= n; i++) {\n      di[i] = di[i - 1];\n      if ((i % a) % b != (i % b) % a) di[i]++;\n    }\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      cout << sum(r) - sum(l - 1) << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "r=lambda : map(int,input().split())\ndef PrefixSum(a,b):\n    l=[0]\n    for i in range(1,a*b+1):\n        t=l[-1]\n        if (i%a)%b!=(i%b)%a:\n            t+=1\n        l.append(t)\n    return l\ndef Query(arr,l,n):\n    return (arr[n])*(l//n)+arr[l%n]\nfor _ in range(int(input())):\n    a,b,q=r()\n    arr=PrefixSum(a,b)\n    n=a*b\n    #print(arr)\n    for _ in range(q):\n        l,m=r()\n        print(Query(arr,m,n)-Query(arr,l-1,n))\n    \n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\nt = int(input())\nans = []\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    res = []\n    pred = []\n    gcw = a * b // gcd(a, b)\n    for j in range(gcw):\n        pred.append(int((j % a) % b == (j % b) % a))\n    prefixes = [0]\n    suffixes = [0] * (gcw + 1)\n    summ = 0\n    for j in range(gcw):\n        summ += pred[j]\n        prefixes.append(summ)\n    summ = 0\n    for j in range(gcw - 1, -1, -1):\n        summ += pred[j]\n        suffixes[j] = summ\n    for j in range(q):\n        l, r = map(int, input().split())\n        res.append(r - l + 1 - ((r // gcw - l // gcw + 1) * prefixes[-1] - prefixes[l % gcw] - suffixes[r % gcw + 1]))\n    ans.append(res)\nfor i in ans:\n    print(*i)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t, a, b, q, ans = 0, nww;\nlong long l, r, razem, odejmij;\nint NWD(int x, int y) {\n  if (x % y == 0) return y;\n  return NWD(y, x % y);\n}\nint NWW(int x, int y) { return (x * y) / NWD(x, y); }\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    if (b < a) swap(a, b);\n    nww = NWW(a, b);\n    for (int i = 0; i < q; i++) {\n      cin >> l >> r;\n      razem = (r / nww) * b;\n      for (int j = 0; j < b; j++) {\n        if ((((r / nww) * nww) + j) > r) razem--;\n      }\n      odejmij = (l / nww) * b;\n      for (int j = 0; j < b; j++) {\n        if ((((l / nww) * nww) + j) >= l) odejmij--;\n      }\n      cout << r - l + 1 - (razem - odejmij) << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n\ta,b,q=map(int,input().split())\n\tp=[0 for i in range(a*b)]\t\n\tj=1\n\tfor j in range(1,a*b):\n\t\tp[j]=p[j-1]\n\t\tif(((j%a)%b)!=((j%b)%a)):\n\t\t\tp[j]=p[j]+1\n\t\tj=j+1\n\tm=[]\n\tfor k in range(q):\n\t\tl,r=map(int,input().split())\n\t\tx=r//(len(p))\n\t\ty=(l-1)//len(p)\n\t\tm.append(p[r%(len(p))]-p[(l-1)%(len(p))]+(x-y)*p[-1])\n\tprint(*m)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    arr=[0]\n    mul=a*b\n    x=0 # a*b is the length of arr[]\n    for j in range(1,mul+1):\n        if (j%a)%b!=(j%b)%a:\n            x+=1\n            arr.append(x)\n        else:arr.append(x)\n    for i in range(q):\n        l,r=map(int,input().split())\n        right=x*(r//mul) + arr[r%mul]\n        left=x*((l-1)//mul) + arr[(l-1)%mul]\n        print(right-left,end=' ')\n    print()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.nio.file.*;\n\npublic class binaryperiod {\n    static FastScanner in;\n    static FastPrinter out;\n\n    public static void main(String[] uselessScrub) throws Exception {\n        in = new FastScanner();\n        out = new FastPrinter();\n\n        int t=in.nextInt();\n        for (int i=1; i<=t; i++) {\n            solve();\n        }\n\n        out.close();\n    }\n\n    public static void solve() throws Exception {\n        int a=in.nextInt(), b=in.nextInt(), q=in.nextInt(), lcm=0;\n        for (int i=1; i<=a && i<=b; i++) {\n            if (a%i==0 && b%i==0) lcm=i;\n        }\n        lcm=a*b/lcm;\n        int[] x=new int[lcm];\n        for (int i=0; i<lcm; i++) {\n            if (i>0) x[i]=x[i-1];\n            if ((i%a)%b != (i%b)%a) {\n                x[i]+=1;\n            }\n        }\n\n        for (int i=0; i<q; i++) {\n            long ans=0;\n            long l=in.nextLong(), r=in.nextLong();\n            long ul=l+lcm-l%lcm;\n            if (ul <= r) {\n                ans += x[lcm - 1];\n                if (l % lcm > 0) ans -= x[(int) ((l % lcm) - 1)];\n            } else {\n                ans += x[(int) (r % lcm)];\n                if (l % lcm > 0) ans -= x[(int) ((l % lcm) - 1)];\n                out.print(ans + \" \");\n                continue;\n            }\n//            while (l%lcm!=0 && l<=r) {\n//                if ((l%a)%b != (l%b)%a) ans++;\n//                l++;\n//            }\n//            while (r%lcm!=lcm-1 && r>l) {\n//                if ((r%a)%b != (r%b)%a) ans++;\n//                r--;\n//            }\n\n            ans += x[(int)(r%lcm)];\n            r -=r%lcm;\n\n            ans+=(r-ul+1)/lcm * x[lcm-1];\n            out.print(ans+\" \");\n        }\n        out.println();\n    }\n\n    private static class FastPrinter {\n        static final char ENDL = '\\n';\n        StringBuilder buf;\n        PrintWriter pw;\n\n        public FastPrinter() {\n            buf = new StringBuilder();\n            pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        }\n\n        public FastPrinter(OutputStream stream) {\n            buf = new StringBuilder();\n            pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(stream)));\n        }\n\n        public FastPrinter(String fileName) throws Exception {\n            buf = new StringBuilder();\n            pw = new PrintWriter(new BufferedWriter(new FileWriter(fileName)));\n        }\n\n        public FastPrinter(StringBuilder buf) {\n            this.buf = buf;\n        }\n\n        public void print(int a) {\n            buf.append(a);\n        }\n\n        public void print(long a) {\n            buf.append(a);\n        }\n\n        public void print(char a) {\n            buf.append(a);\n        }\n\n        public void print(char[] a) {\n            buf.append(a);\n        }\n\n        public void print(double a) {\n            buf.append(a);\n        }\n\n        public void print(String a) {\n            buf.append(a);\n        }\n\n        public void print(Object a) {\n            buf.append(a.toString());\n        }\n\n        public void println() {\n            buf.append(ENDL);\n        }\n\n        public void println(int a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(long a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(char a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(char[] a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(double a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(String a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(Object a) {\n            buf.append(a.toString());\n            buf.append(ENDL);\n        }\n\n        public void close() {\n            pw.print(buf);\n            pw.close();\n        }\n\n        public void flush() {\n            pw.print(buf);\n            pw.flush();\n            buf.setLength(0);\n        }\n\n    }\n\n    private static class FastScanner {\n        final private int BUFFER_SIZE = 1 << 10;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public FastScanner() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public FastScanner(InputStream stream) {\n            din = new DataInputStream(stream);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public FastScanner(String fileName) throws IOException {\n            Path p = Paths.get(fileName);\n            buffer = Files.readAllBytes(p);\n            bytesRead = buffer.length;\n        }\n\n        int[] nextIntArray(int N) throws IOException {\n            int[] arr = new int[N];\n            for (int i = 0; i < N; i++) arr[i] = nextInt();\n            return arr;\n        }\n\n        int[][] nextDoubleIntArray(int n, int m) throws IOException {\n            int[][] arr = new int[n][m];\n            for (int i=0; i<n; i++) for (int j=0; j<m; j++) arr[i][j]=nextInt();\n            return arr;\n        }\n\n        String nextLine() throws IOException {\n            int c = read();\n            while (c != -1 && isEndline(c))\n                c = read();\n            if (c == -1) {\n                return null;\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (c >= 0) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isEndline(c));\n            return res.toString();\n        }\n\n        boolean isEndline(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        String next() throws Exception {\n            int c = readOutSpaces();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg) return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg) return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg) return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1) buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead) fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        private int readOutSpaces() throws IOException {\n            while (true) {\n                if (bufferPointer == bytesRead) fillBuffer();\n                int c = buffer[bufferPointer++];\n                if (!isSpaceChar(c)) {\n                    return c;\n                }\n            }\n        }\n\n        public void close() throws IOException {\n            if (din == null) return;\n            din.close();\n        }\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nfrom  collections import defaultdict\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\n\ndef solve(t):\n\ta, b, q = map(int, input().split())\n\tx = min(a, b)\n\ty = max(a, b)\n\ta, b = x, y\n\n\tans = []\n\tfor i in range(q):\n\t\tl, r = map(int, input().split())\n\t\tlow = max(l, b)\n\t\thigh = r\n\t\tres = high - low + 1\n\t\tlcm = (a * b) // math.gcd(a, b)\n\t\tres -= (high // lcm - (low - 1) // lcm) * b\n\t\tstart = low - ((low - 1) // lcm) * lcm\n\t\tend = high - (high // lcm) * lcm + 1\n\t\tif start < b:\n\t\t\tres -= b - (start)\n\t\tif end < b:\n\t\t\tres += b - (end)\n\t\tans.append(str(res))\n\tprint(' '.join(ans))\n\n\n\nif __name__ == \"__main__\":\n\ttest_cases = int(input())\n\tfor t in range(1, test_cases + 1):\n\t\tsolve(t)\n"
        },
        {
            "language": 3,
            "solution": "from itertools import accumulate\n\nt = int(input())\nbuf = []\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    ab = a * b\n    memo = [k % a % b != k % b % a for k in range(ab)]\n    loop = sum(memo)\n    acc = list(accumulate(memo))\n    ans = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        dr, mr = divmod(r, ab)\n        dl, ml = divmod(l - 1, ab)\n        ans.append(loop * (dr - dl) + acc[mr] - acc[ml])\n\n    buf.append(' '.join(map(str, ans)))\n\nprint('\\n'.join(map(str, buf)))\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.buffer.readline #FOR READING PURE INTEGER INPUTS (space separation ok)\n\ndef getCounts(r): #return counts up to r\n    nCycles=r//cycleLength\n    remainder=r-nCycles*cycleLength\n    return nCycles*tot+cycleCounts[remainder]\n\nt=int(input())\nfor _ in range(t):\n    a,b,q=[int(x) for x in input().split()]\n    cycleLength=a*b\n    cycleCounts=[0]*(cycleLength)\n    tot=0\n    for x in range(cycleLength):\n        if (x%a)%b!=(x%b)%a:\n            tot+=1\n        cycleCounts[x]=tot\n    \n    ans=[]\n    for __ in range(q):\n        l,r=[int(x) for x in input().split()]\n        ans.append(getCounts(r)-getCounts(l-1))\n    print(' '.join([str(x) for x in ans]))"
        },
        {
            "language": 1,
            "solution": "from sys import stdin, stdout\nT = int(stdin.readline())\n\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a / gcd(a, b))*b\n\n\nfor p in xrange(T):\n    a, b, q = map(int, stdin.readline().split())\n    if a > b:\n        a, b = b, a\n    L = lcm(a, b)\n    resL = resR = 0\n    for m in xrange(q):\n        l, r = map(int, stdin.readline().split())\n        l -= 1\n        if L == b:\n            stdout.write('0 ')\n            continue\n\n        resR = (r/L)*(L-b) + max(0, (r-((r/L)*L+b))+1)\n        resL = (l/L)*(L-b) + max(0, (l-((l/L)*L+b))+1)\n\n        stdout.write(str(resR-resL)+' ')\n    stdout.write('\\n')\n"
        },
        {
            "language": 3,
            "solution": "# python3\n\n##=====================================================\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter\nfrom functools import lru_cache\nfrom math import gcd, floor, ceil\n \ndef ilist():\n    return [int(x) for x in stdin.readline().strip().split(\" \")]\ndef iint():\n    return int(stdin.readline().strip())\ndef istr():\n    return stdin.readline().strip()\n##=====================================================\n\n\nif __name__ == '__main__':\n    t = iint()\n    for _ in range(t):\n        a, b, q = ilist()\n        res = []\n        x = 1\n        lcm = (a * b) // gcd(a, b)\n        p = [0] * (lcm)\n        for x in range(1, lcm):\n            if ((x % a) % b) != ((x % b) % a):\n                p[x] = 1\n            p[x] += p[x-1]\n        for _ in range(q):\n            l, r = ilist()\n            s = 0\n            l -= 1\n            s += (r // lcm) * p[-1] + p[r % lcm]\n            s -= (l // lcm) * p[-1] + p[l % lcm]\n            res.append(str(s))\n        print(\" \".join(res))\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\ndef lcm(a, b):\n        return abs(a*b) // math.gcd(a, b)\n\ndef F(n, a, b):\n    return (n // lcm(a, b))*a + min(a, n % lcm(a, b))\n\nt = int(input())\n\nfor i in range(0, t):\n    a, b, q = map(int, input().split())\n    if(a < b):\n        temp = a\n        a = b\n        b = temp\n    for j in range(0, q):\n        l, r = map(int, input().split())\n        r += 1\n        ans = (r-F(r, a, b)) - (l-F(l, a, b))\n        print(ans, end = ' ')\n    print()\n\n#a, b = map(int, input().split())\n#\n#A = [0] * 10000\n#A[0] = 0;\n#\n#for i in range(1, 10000):\n#    A[i] = A[i-1]\n#    if(i%a%b != i%b%a):\n#        A[i] += 1\n#    if(A[i] != i-F(i, a, b)):\n#        print(\"wrong\")\n#        print(i)\n#        print(i-F(i, a, b))\n#        print(A[i])\n#        break\n#\n"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import Counter\nL=lambda:list(map(int,input().split()))\nM=lambda:map(int,input().split())\nI=lambda:int(input())\nIN=lambda:input()\nmod=10**9+7\ndef s(a):\n    print(\" \".join(list(map(str,a))))\n#______________________-------------------------------_____________________#\nfor i in range(int(input())):\n    a,b,q=map(int,input().split())\n    lcm=a*b//math.gcd(a,b)\n    x=max(a,b)\n    y=min(a,b)\n    for i in range(q):\n        l,r=map(int,input().split())\n        r+=1\n        X=r-((r//lcm)*x+min(x,r%lcm))-(l-((l//lcm)*x+min(x,l%lcm)))\n        print(X,end=\" \")\n    print()"
        },
        {
            "language": 3,
            "solution": "def gcd(aa, bb):\n    if bb == 0:\n        return aa\n    return gcd(bb, aa % bb)\n\n\ndef get_ans(x):\n    y = x // c\n    ans = y * max(a, b)\n    next_num = y * c\n    z = min(x, next_num + max(a, b) - 1)\n    ans += (z - next_num + 1)\n    return ans\n\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = [int(x) for x in input().split()]\n    c = (a * b) // gcd(a, b)\n    for i in range(q):\n        l, r = [int(x) for x in input().split()]\n        if a == b:\n            print(0, end=\" \")\n        else:\n            p = get_ans(r) - get_ans(l - 1)\n            print((r - l + 1) - p, end=\" \")\n    print()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CYetAnotherCountingProblem solver = new CYetAnotherCountingProblem();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CYetAnotherCountingProblem {\n        long gcd(int a, int b) {\n            if (a == 0)\n                return b;\n            return gcd(b % a, a);\n        }\n\n        long lcm(int a, int b) {\n            return 1l * (a * b) / gcd(a, b);\n        }\n\n        long solve2(long x, long lcm, int a) {\n            long res = (x / lcm) * (lcm - a);\n            x %= lcm;\n            if (x >= a) res += (x - a + 1);\n            return res;\n        }\n\n        public void solve(int testNumber, Scanner sc, PrintWriter pw) {\n            int q = sc.nextInt();\n            while (q-- > 0) {\n                int a = sc.nextInt(), b = sc.nextInt();\n                if (b > a) {\n                    int temp = a;\n                    a = b;\n                    b = temp;\n                }\n                int queries = sc.nextInt();\n                long LCM = lcm(a, b);\n                while (queries-- > 0) {\n                    long l = sc.nextLong(), r = sc.nextLong();\n                    pw.print(solve2(r, LCM, a) - solve2(l - 1, LCM, a) + \" \");\n                }\n                pw.println();\n            }\n        }\n\n    }\n\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(FileReader r) {\n            br = new BufferedReader(r);\n        }\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long T;\nlong long a, b, q;\nlong long sum[40005];\nlong long get(long long x) {\n  long long ret = x / (a * b) * sum[a * b];\n  ret += sum[x % (a * b)];\n  return ret;\n}\nint main(void) {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    sum[0] = 0;\n    for (int i = 1; i <= a * b; i++) {\n      sum[i] = sum[i - 1];\n      if (i % a % b != i % b % a) sum[i]++;\n    }\n    long long l, r;\n    for (int i = 0; i < q; i++) {\n      cin >> l >> r;\n      cout << get(r) - get(l - 1) << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def getSol(list_,n,target):\n    return list_[n-1]*(target//n)+list_[target%n]\nlist_ = [0]*200*200\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    res = []\n    for y in range(1,a*b):\n        list_[y] = list_[y-1]\n        if (y%a)%b != y%b%a:\n            list_[y] += 1\n    for _ in range(q):\n        l,r = map(int,input().split())\n        out = getSol(list_,a*b,r) - getSol(list_,a*b,l-1)\n        res.append(str(out))\n    print(\" \".join(res))\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef lcm(a, b):\n    return (a*b) // math.gcd(a, b)\n\n\ndef f(x,a,b):\n  lc = lcm(a,b)\n  m = max(a,b)\n  return (x // lc) * m + min(m, x%lc+1)\n\ndef solve(a,b,l,r):\n  ll = f(l-1,a,b)\n  rr = f(r,a,b)\n  return r - l + 1 - (rr-ll)\n\n\nt = int(input())\nfor _ in range(t):\n  a, b, q = map(int, input().split())\n  sol = []\n  for i in range(q):\n    l, r = map(int, input().split())\n    sol.append(solve(a,b,l,r))\n  print(*sol)"
        },
        {
            "language": 4,
            "solution": "\n\n\n\nimport java.io.*;\nimport java.util.*;\nimport java.math.BigInteger; \nimport java.lang.Object;\n\n\npublic class Main {\n    \n    \n   static class sort implements Comparator<int[]>\n   {\n        public int compare(int[] a,int[] b)\n        {\n            //if(a[0] == b[0]) return a[1]-b[1];\n           /*if(a[1] < b[1]) return -1;\n           else if(a[1] > b[1]) return 1;\n           return a[0]-b[0];*/\n           int l1,l2;\n           l1=(a[1]-a[0]);\n           l2=(b[1]-b[0]);\n           if(l1>l2)\n           {\n                return -1;\n           }\n           else if(l2>l1)\n           {\n                return 1;\n           }\n           else \n           {\n               if(a[1]<=b[0])\n               {\n                    return -1;\n               }\n               return 1;\n           }\n        }\n   }\n   static class sort1 implements Comparator<double[]>\n   {\n        public int compare(double[] a,double[] b)\n        {\n            //if(a[0] == b[0]) return a[1]-b[1];\n           if(a[1] < b[1]) return -1;\n           else if(a[1] > b[1]) return 1;\n           return 0;\n        }\n   }\n   public static String[] F(BufferedReader bf) throws Exception\n    {\n        return (bf.readLine().split(\" \"));\n    }\n    \n   public static void pr(PrintWriter out,Object o)\n   {\n      \n    out.println(o.toString());out.flush();\n    \n   }\n   public static void prW(PrintWriter out,Object o)\n   {\n      \n    out.print(o.toString());out.flush();\n    \n   }\n   public static int intIn(String st)\n   {\n      return Integer.parseInt(st);\n   }\n   \n   \n    \n    public static void pr(Object o)\n    {\n        System.out.println(o.toString());\n    }\n    public static void prW(Object o)\n    {\n        System.out.print(o.toString());\n    }\n    \n   \n    public static int inInt(String s)\n    {\n        return Integer.parseInt(s);\n    }\n    public static long in(String s)\n    {\n        return Long.parseLong(s);\n    }\n\n\n    static int[] toIntArray(String[] m) \n    { \n        int[] p=new int[m.length];\n        for(int o=0;o<m.length;o++)\n        {\n            p[o]= inInt(m[o]);\n        }\n        return p;\n    }\n    static double[] toDArray(String[] m) \n    { \n        double[] p=new double[m.length];\n        for(int o=0;o<m.length;o++)\n        {\n            p[o]= Double.parseDouble(m[o]);\n        }\n        return p;\n    }\n    static long[] toLArray(String[] m) \n    { \n       long[] p=new long[m.length];\n        for(int o=0;o<m.length;o++)\n        {\n            p[o]= in(m[o]);\n        }\n        return p;\n    }\n    \n    static int[][] di={{0,1},{1,0},{0,-1},{-1,0}};\n    static int[] dir = {4,3,2,-4,-3,-2};\n    public static void F(int i,int c,int[] vis,List<Integer> res,int n)\n    {\n        vis[i]=1;\n        res.add(i);\n        for(int x : dir)\n        {\n            int v = i+x;\n            if(v<=0 || v>n) continue;\n\n            if(vis[v] == 0)\n            {\n                F(v,c,vis,res,n);\n            }\n        }\n    }\n     static long gcd(long a, long b)\n        {\n          if (b == 0)\n            return a;\n          return gcd(b, a % b); \n        }\n        static long Gp(long l,long b,long lcm)\n        {\n            long c1,c2;\n                c1 = (l/lcm);\n                long sum=0l;\n                sum += (c1-1l)*(b);\n                long las = (l/lcm)*lcm;\n                sum += Math.min(l-las+1l,b);\n                return sum;\n        }\n    public static void main (String[] args) throws Exception {\n        \n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);;;\n        \n        //int[] map=new int[1000001];\n      \n       int yy=Integer.parseInt(bf.readLine());\n        for(int w=0;w<yy;w++)\n        {\n\n            String[] xlp = bf.readLine().split(\" \");;;;;;\n            //String st = bf.readLine();\n           long n,t;//boolean bol=false;\n           long m;//long a,b,c;\n           int k;\n           //int ans=0;\n            n=in(xlp[0]);m=in(xlp[1]);k=inInt(xlp[2]);//t=inInt(xlp[3]);\n            long a,b;\n            a=n;b=m;\n            if(a>b)\n            {\n                long tem=b;\n                b=a;\n                a=tem;\n            }\n            long lcm = (a*b)/(gcd(a,b));\n            for(int o=0;o<k;o++)\n            {\n                long[] ar = toLArray(F(bf));\n                long le,r;\n                le=ar[0];r=ar[1];\n                long res = Gp(r,b,lcm);\n                if(le>0) res = (res - Gp(le-1,b,lcm));;;;;;\n                prW(out,(r-le+1l-res)+\" \");\n\n            }\n         pr(out,\"\");\n\n    }\n    out.close();\n}}\n\n\n/*\n\n\n1\n8\n7 4\n9 10\n4 8\n3 1\n1 7\n9 5\n1 4\n2 5\n\n100663319,201326611,402653189,805306457,1610612741\nKickstart\n String rp;\n            rp = \"Case #\"+(w+1)+\": \"+(n-ans)+\" \";\nstatic int[][] dir={{0,1},{1,0},{-1,0},{0,-1}};\n\nstatic class SegmentTreeRMQ \n    { \n    int st[]; \n    int minVal(int x, int y) { \n        return (x > y) ? x : y; \n    } \n  \n    \n    int getMid(int s, int e) { \n        return s + (e - s) / 2; \n    } \n  \n    \n    int RMQUtil(int ss, int se, int qs, int qe, int index) \n    { \n        \n        if (qs <= ss && qe >= se) \n            return st[index]; \n  \n        // If segment of this node is outside the given range \n        if (se < qs || ss > qe) \n            return Integer.MIN_VALUE; \n  \n        // If a part of this segment overlaps with the given range \n        int mid = getMid(ss, se); \n        return minVal(RMQUtil(ss, mid, qs, qe, 2 * index + 1), \n                RMQUtil(mid + 1, se, qs, qe, 2 * index + 2)); \n    } \n  \n    // Return minimum of elements in range from index qs (query \n    // start) to qe (query end).  It mainly uses RMQUtil() \n    int RMQ(int n, int qs, int qe) \n    { \n        // Check for erroneous input values \n        \n  \n        return RMQUtil(0, n - 1, qs, qe, 0); \n    } \n  \n    // A recursive function that constructs Segment Tree for \n    // array[ss..se]. si is index of current node in segment tree st \n    int constructSTUtil(int arr[], int ss, int se, int si) \n    { \n        // If there is one element in array, store it in current \n        //  node of segment tree and return \n        if (ss == se) { \n            st[si] = arr[ss]; \n            return arr[ss]; \n        } \n  \n        // If there are more than one elements, then recur for left and \n        // right subtrees and store the minimum of two values in this node \n        int mid = getMid(ss, se); \n        st[si] = minVal(constructSTUtil(arr, ss, mid, si * 2 + 1), \n                constructSTUtil(arr, mid + 1, se, si * 2 + 2)); \n        return st[si]; \n    } \n  \n    \n    void con(int arr[]) \n    { \n        // Allocate memory for segment tree \n  \n        //Height of segment tree \n        int n = (arr.length);\n        int x = (int) (Math.ceil(Math.log(n) / Math.log(2))); \n  \n        //Maximum size of segment tree \n        int max_size = 2 * (int) Math.pow(2, x) - 1; \n        st = new int[max_size]; // allocate memory \n  \n        // Fill the allocated memory st \n        constructSTUtil(arr, 0, n - 1, 0); \n    }\n    }\n     static class DSU {\n    \n    int[] p;int[] sz;int op;int c;;\n    int[] last;\n    public void G(int n)\n    {\n        last=new int[n];\n        p=new int[n];\n        sz=new int[n];c=n;\n        op=n;\n        for(int h=0;h<n;h++)\n        {\n            sz[h]=1;p[h]=h;\n            last[h]=h;\n        }\n    }\n    public int find(int x)\n    {\n        int y=x;\n        while(x!=p[x]) x=p[x];\n        while(y!=p[y])\n        {\n            int tem=p[y];\n            p[y]=x;y=tem;\n        }\n        return p[y];\n    }\n    public void union(int a,int b)\n    {\n        int x,y;\n        x=find(a);y=find(b);\n        if(x==y) return;\n        if(sz[x]>sz[y])\n        {\n            p[y] = x;\n            sz[x]+=sz[y];\n            last[x]=Math.max(last[x],last[y]);\n        }\n        else\n        {\n            p[x]=y;sz[y]+=sz[x];\n            last[y]=Math.max(last[y],last[x]);\n        }\n        c--;\n        \n    }}\n\n    static long pow(long x, long y, long p)\n      {\n        long res = 1; // Initialize result\n     \n        x = x % p; // Update x if it is more than or\n        // equal to p\n     \n        if (x == 0)\n          return 0l; // In case x is divisible by p;\n     \n        while (y > 0)\n        {\n     \n          // If y is odd, multiply x with result\n          if ((y & 1) != 0)\n            res = (res * x) % p;\n     \n          // y must be even now\n          y = y >> 1; // y = y/2\n          x = (x * x) % p;\n        }\n        return res;\n      }\n      static long gcd(long a, long b)\n        {\n          if (b == 0)\n            return a;\n          return gcd(b, a % b); \n        }\n        static int gcd(int a, int b,int o)\n        {\n          if (b == 0)\n            return a;\n          return gcd(b, a % b,o); \n        }\n\nGeometric median\n\npublic static double F(double[] x,double[] w)\n    {\n        double d1,d2;\n        double S=0.00;\n        for(double dp : w) S += dp;\n        int k = 0;\n        double sum = S - w[0]; // sum is the total weight of all `x[i] > x[k]`\n\n        while(sum > S/2)\n        {\n            ++k;\n            sum -= w[k];\n        }\n        d1=x[k];\n        return d1;\n        k = w.length-1;\n       sum = S - w[k]; // sum is the total weight of all `x[i] > x[k]`\n\n        while(sum > S/2)\n        {\n            --k;\n            sum -= w[k];\n        }\n        d2=x[k];\n        return new double[]{d1,d2};\n    }\n*/"
        },
        {
            "language": 3,
            "solution": "from math import *\ndef main():\n\tfor _ in range(int(input())):\n\t\ta,b,q=map(int,input().split())\n\t\tif a>b:\n\t\t\ta,b=b,a\n\t\tma=max(a,b)\n\t\t_gcd=int(gcd(a,b))\n\t\t_lcm=int((a*b)/_gcd)\n\t\tfor qq in range(q):\n\t\t\tl,r=map(int,input().split())\n\t\t\t\n\t\t\tl1=(l-1)//_lcm-1\n\t\t\tleft=(l-1)//_lcm*_lcm\n\t\t\tr1=r//_lcm-1\n\t\t\tright=r//_lcm*_lcm\n\t\t\tans=r-l+1\n\t\t\tans-=(r1-l1)*ma\n\t\t\tans-=min(ma,r-right+1)\n\t\t\tans+=min(ma,l-left)\n\t\t\tprint(ans,end=' ')\n\t\tprint()\n\t\t\t\t\nmain()\n\n"
        },
        {
            "language": 3,
            "solution": "\nMOD = 10 ** 9 + 7\n\ndef main():\n    for _ in inputt():\n        a, b, q = inputi()\n        c = a * b // gcd(a, b)\n        a = max(a, b)\n        R = []\n        for _ in range(q):\n            l, r = inputi()\n            m = r - l + 1\n            lp, rp = l // c, r // c\n            m -= (rp - lp + 1) * a\n            if 0 <= l % c < a:\n                m += l % c\n            else:\n                m += a\n            if 0 <= r % c < a:\n                m += a - r % c - 1\n            R.append(m)\n        print(*R)\n\n# region M\n\n\n# region import\n# \u6240\u6709import\u90e8\u5206\n\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom functools import reduce, lru_cache, partial\nfrom collections import Counter, defaultdict\nimport re, copy, operator, cmath\nimport sys, io, os, builtins\nsys.setrecursionlimit(1000)\n\n# endregion\n\n# region fastio\n\nBUFSIZE = 8192\nclass FastIO(io.IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = io.BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(io.IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\ndef print(*args, **kwargs):\n    if args:\n        sys.stdout.write(str(args[0]))\n        split = kwargs.pop(\"split\", \" \")\n        for arg in args[1:]:\n            sys.stdout.write(split)\n            sys.stdout.write(str(arg))\n    sys.stdout.write(kwargs.pop(\"end\", \"\\n\"))\ndef debug(*args, **kwargs):\n    print(\"debug\", *args, **kwargs)\n    sys.stdout.flush()\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip()\ninputt = lambda t = 0: range(t) if t else range(int(input()))\ninputs = lambda: input().split()\ninputi = lambda: map(int, inputs())\ninputl = lambda t = 0, k = lambda: list(inputi()): [k() for _ in range(t)] if t else list(k())\n\n# endregion\n\n# region bisect\n\ndef len(a):\n    if isinstance(a, range):\n        return -((a.start - a.stop) // a.step)\n    return builtins.len(a)\ndef bisect_left(a, x, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    while lo < hi:\n        mid = (lo + hi) // 2\n        if key(a[mid]) < x: lo = mid + 1\n        else: hi = mid\n    return lo\ndef bisect_right(a, x, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    while lo < hi:\n        mid = (lo + hi) // 2\n        if x < key(a[mid]): hi = mid\n        else: lo = mid + 1\n    return lo\ndef insort_left(a, x, key = None, lo = 0, hi = None):\n    lo = bisect_left(a, x, key, lo, hi)\n    a.insert(lo, x)\ndef insort_right(a, x, key = None, lo = 0, hi = None):\n    lo = bisect_right(a, x, key, lo, hi)\n    a.insert(lo, x)\ndo_nothing = lambda x: x\nbisect = bisect_right\ninsort = insort_right\ndef index(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    i = bisect_left(a, x, key, lo, hi)\n    if lo <= i < hi and key(a[i]) == x: return a[i]\n    if default != None: return default\n    raise ValueError\ndef find_lt(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_left(a, x, key, lo, hi)\n    if lo < i <= hi: return a[i - 1]\n    if default != None: return default\n    raise ValueError\ndef find_le(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_right(a, x, key, lo, hi)\n    if lo < i <= hi: return a[i - 1]\n    if default != None: return default\n    raise ValueError\ndef find_gt(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_right(a, x, key, lo, hi)\n    if lo <= i < hi: return a[i]\n    if default != None: return default\n    raise ValueError\ndef find_ge(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_left(a, x, key, lo, hi)\n    if lo <= i < hi: return a[i]\n    if default != None: return default\n    raise ValueError\n\n# endregion\n\n# region csgraph\n# TODO\n\nclass Tree:\n    def __init__(n):\n        self._n = n\n        self._conn = [[] for _ in range(n)]\n        self._list = [0] * n\n    def connect(a, b):\n        pass\n\n# endregion\n\n# region ntheory\n# TODO\n\nclass Sieve:\n    def __init__(self):\n        self._n = 6\n        self._list = [2, 3, 5, 7, 11, 13]\n    def extend(self, n):\n        pass\n\n\nsieve = Sieve()\ndef isprime(n):\n    pass\ndef prime(n):\n    pass\ndef factorint(n):\n    factordict = defaultdict(int)\n    for i in sieve:\n        if n <= i * i:\n            break\n        while not n % i:\n            factordict[i] += 1\n            n //= i\n    if n != 1:\n        factordict[n] += 1\n    return factordict\n\n# endregion\n\n# region main\n\nif __name__ == \"__main__\":\n    main()\n\n# endregion\n\n\n# endregion"
        },
        {
            "language": 4,
            "solution": "/*\nIf you want to aim high, aim high\nDon't let that studying and grades consume you\nJust live life young\n******************************\nIf I'm the sun, you're the moon\nBecause when I go up, you go down\n*******************************\nI'm working for the day I will surpass you\nhttps://www.a2oj.com/Ladder16.html\n*/\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\n\n   public class C\n   {\n      public static void main(String omkar[]) throws Exception\n      {\n         BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));  \n         StringTokenizer st = new StringTokenizer(infile.readLine());\n         int T = Integer.parseInt(st.nextToken());\n         StringBuilder sb = new StringBuilder();\n         while(T-->0)\n         {\n            st = new StringTokenizer(infile.readLine());\n            int A = Integer.parseInt(st.nextToken());\n            int B = Integer.parseInt(st.nextToken());\n            if(A > B)\n            {\n               int t = A;\n               A = B;\n               B = t;\n            }\n            int lcm = (A*B)/((int)gcd(A,B));\n            long cnt = 0L;\n            pref = new long[lcm];\n            for(int x=B; x < lcm; x++)\n            {\n               pref[x] += pref[x-1];\n               int a = (x%B)%A;\n               int b = (x%A)%B;\n               if(a != b)\n               {\n                  pref[x]++;\n                  cnt++;\n               }\n            }\n            int Q = Integer.parseInt(st.nextToken());\n            while(Q-->0)\n            {\n               st = new StringTokenizer(infile.readLine());\n               long L = Long.parseLong(st.nextToken());\n               long R = Long.parseLong(st.nextToken());\n               long res = solve(R, cnt, A, B)-solve(L-1, cnt, A, B);\n               sb.append(res+\" \");\n            }\n            sb.append(\"\\n\");\n         }\n         System.out.print(sb);\n      }\n      static long[] pref;\n      public static long solve(long R, long cnt, int A, int B)\n      {\n         int lcm = (A*B)/((int)gcd(A,B));\n         long res = cnt*(R/lcm);\n         long temp = R%lcm;\n         if(temp >= B)\n            res += pref[(int)temp]-pref[B-1];\n         return res;\n      }\n      public static long gcd(long a, long b)\n      {\n         if(a > b)\n         {\n            long t = a;\n            a = b;\n            b = t;\n         }\n         if(a == 0L)\n            return b;\n         return gcd(b%a, a);\n      }\n   }"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.LinkedHashMap;\nimport java.util.StringTokenizer;\nimport java.util.Map;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Nikita Mikhailov\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        COcherednayaZadachaNaPodschet solver = new COcherednayaZadachaNaPodschet();\n        int testCount = Integer.parseInt(in.next());\n        for (int i = 1; i <= testCount; i++)\n            solver.solve(i, in, out);\n        out.close();\n    }\n\n    static class COcherednayaZadachaNaPodschet {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n\n            int a = in.readInt(), b = in.readInt();\n            int q = in.readInt();\n\n            for (int i = 0; i < q; i++) {\n                long l = in.readLong();\n                long r = in.readLong();\n                out.println(calc2(a, b, l, r));\n            }\n        }\n\n        static long calc2(long a, long b, long from, long to) {\n            return calc(a, b, to) - calc(a, b, from - 1);\n        }\n\n        static long calc(long a, long b, long to) {\n            to++;\n            long mi = Math.min(a, b);\n            long ma = Math.max(a, b);\n\n            long period = getPeriod(a, b) * ma;\n\n            long res = 0;\n            long numFullPeriods = to / period;\n\n            res += numFullPeriods * ma;\n\n            long remPeriod = to - numFullPeriods * period;\n\n            if (remPeriod > 0) {\n                res += Math.min(remPeriod, ma);\n            }\n\n            return to - res;\n        }\n\n        static long getPeriod(long a, long b) {\n            long max = Math.max(a, b);\n            long min = Math.min(a, b);\n            Map<Long, Integer> fMax = Factorization.factorize(max);\n            Map<Long, Integer> fMin = Factorization.factorize(min);\n\n            for (long base : fMax.keySet()) {\n                int val = fMax.get(base);\n\n                if (fMin.containsKey(base)) {\n                    fMin.put(base, fMin.get(base) - val);\n                }\n            }\n\n            long res = 1;\n\n            for (long base : fMin.keySet()) {\n\n                int val = fMin.get(base);\n                while (val > 0) {\n                    res *= base;\n                    val--;\n                }\n            }\n\n            return res;\n        }\n\n    }\n\n    static class Factorization {\n        public static Map<Long, Integer> factorize(long n) {\n            Map<Long, Integer> factors = new LinkedHashMap<>();\n            for (long d = 2; n > 1; ) {\n                int power = 0;\n                while (n % d == 0) {\n                    ++power;\n                    n /= d;\n                }\n                if (power > 0) {\n                    factors.put(d, power);\n                }\n                ++d;\n                if (d * d > n) {\n                    d = n;\n                }\n            }\n            return factors;\n        }\n\n    }\n\n    static class FastScanner {\n        private StringTokenizer st;\n        private BufferedReader in;\n\n        public FastScanner(final InputStream in) {\n            this.in = new BufferedReader(new InputStreamReader(in));\n        }\n\n        public String readToken() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(in.readLine());\n                } catch (final IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int readInt() {\n            return Integer.parseInt(readToken());\n        }\n\n        public long readLong() {\n            return Long.parseLong(readToken());\n        }\n\n        public String next() {\n            return readToken();\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class C {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int T = in.nextInt();\n        while (T-- > 0) {\n            int a = in.nextInt(), b = in.nextInt(), q = in.nextInt();\n            int s = 0;\n            int[] prefix = new int[a*b];\n            for (int k=0;k<a*b;k++) {\n                prefix[k] = (k%a)%b != (k%b)%a ? 1 : 0;\n                s += prefix[k];\n            }\n            for (int i=1;i<a*b;i++) prefix[i] += prefix[i-1];\n            for (int i=0;i<q;i++) {\n                long l = in.nextLong(), r = in.nextLong();\n                long ret = 0;\n                if (l % (a*b) != 0) {\n                    ret += s - prefix[(int)((l-1)%(a*b))];\n                    l = l - l % (a*b) + a*b;\n                }\n                if (r % (a*b) != a*b-1) {\n                    ret += prefix[(int)(r%(a*b))];\n                    r = r - r % (a*b) - 1;\n                }\n                ret += (r - l + 1) / (a*b) * s;\n                System.out.print(ret);\n                System.out.print(\" \");\n            }\n            System.out.println();\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic class ProblemC {\n\n    public static InputStream inputStream = System.in;\n\n    public static OutputStream outputStream = System.out;\n\n    public static void main(String[] args) {\n        MyScanner scanner = new MyScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n\n        int t = scanner.nextInt();\n        for (int p = 0; p < t; p++) {\n            int a = scanner.nextInt();\n            int b = scanner.nextInt();\n            int q = scanner.nextInt();\n\n            long[] dp = new long[a * b + 1];\n            long s = 0;\n            for (int j = 0; j < a * b; j++) {\n                if (j % a % b != j % b % a) {\n                    s++;\n                }\n                dp[j] = s;\n            }\n\n            for (int i = 0; i < q; i++) {\n                long l = scanner.nextLong();\n                long r = scanner.nextLong();\n                int x = (int) (l % (a * b));\n                int y = (int) (r % (a * b));\n\n                long ans = s * ((r - l) / (a * b));\n                if (x <= y) {\n                    ans = ans + dp[y] - (x == 0 ? 0 : dp[x - 1]);\n                } else {\n                    ans = ans + dp[y] - (x == 0 ? 0 : dp[x- 1]) + s;\n                }\n                out.print(ans + \" \");\n            }\n            out.println();\n        }\n\n\n\n\n        out.flush();\n    }\n\n    private static class MyScanner {\n        private BufferedReader bufferedReader;\n        private StringTokenizer stringTokenizer;\n\n        private MyScanner(InputStream inputStream) {\n            bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        private String next() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        private int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        private long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        private double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        private String nextLine() {\n            String str = \"\";\n            try {\n                str = bufferedReader.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    private static class Pair<F, S> {\n\n        private F first;\n\n        private S second;\n\n        public Pair() {}\n\n        public Pair(F first, S second) {\n            this.first = first;\n            this.second = second;\n        }\n    }\n\n    private static class Triple<F, S, T> {\n\n        private F first;\n\n        private S second;\n\n        private T third;\n\n        public Triple() {}\n\n        public Triple(F first, S second, T third) {\n            this.first = first;\n            this.second = second;\n            this.third = third;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\nt = int(input())\nfor __ in range(t):\n    a,b,q = map(int,input().split())\n    if a > b:\n        a, b = b, a\n    g = a * b // gcd(a, b)\n\n    # 1\u4ee5\u4e0am\u4ee5\u4e0b\n    def solve(m):\n        if m == 0:\n            return 1\n        aa,bb = divmod(m + 1, g)\n        ret = aa * b\n        ret += min(bb, b)\n        return ret\n    \n    def br(l, r):\n        ret = 0\n        for i in range(l, r + 1):\n            if (i % a) % b != (i % b) % a:\n                ret += 1\n        return ret\n\n    res = []\n    # brt = []\n    for _ in range(q):\n        l,r = map(int,input().split())\n        if b % a == 0:\n            res.append(0)\n        else:\n            res.append(r - l + 1 - (solve(r) - solve(l - 1)))\n        # brt.append(br(l, r))\n    print(*res)\n    # print(*brt)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    t=a*b\n    pre=[0]*(t+3)\n    for i in range(1,t+1):\n        pre[i]=pre[i-1]\n        if (i%a)%b!=(i%b)%a:\n            pre[i]+=1\n    ans=[]\n    for _ in range(q):\n        l,r=map(int,input().split())\n        cntl=(l-1)//t\n        rel=(l-1)%t\n        cntr=r//t\n        rer=r%t\n        temp=0\n        temp+=pre[t]*cntr+pre[rer]\n        temp-=pre[t]*cntl+pre[rel]\n        ans.append(temp)\n    print(*ans)\n        \n        \n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    static long MOD = 0;\n    static long[] fact = new long[1];\n\n    public static void main(String[] args) throws Exception {\n        long startTime = System.nanoTime();\n        int t = in.nextInt();\n        while (t-- > 0) {\n            //15 37 2 7\n            //6 50 2 3\n           // solve_cmp(2, 3, 6, 50);\n            //3 50 2 3\n            //solve_cmp(2, 3, 3, 50);\n            solve();\n        }\n        long endTime = System.nanoTime();\n        err.println(\"Execution Time : +\" + (endTime - startTime) / 1000000 + \" ms\");\n        exit(0);\n    }\n\n    static void solve_n() {\n        for (int i = 1; i <= 50; i++) {\n            for (int j = i; j <= 50; j++) {\n                for (int k = 1; k <= 50; k++) {\n                    for (int l = k; l <= 50; l++) {\n                        solve_cmp(i, j, k, l);\n                    }\n                }\n            }\n        }\n    }\n\n    static void solve() {\n        int a = in.nextInt();\n        int b = in.nextInt();\n        if (a > b) {\n            int temp = b;\n            b = a;\n            a = temp;\n        }\n        int q = in.nextInt();\n        while (q-- > 0) {\n            long l = in.nextLong();\n            long r = in.nextLong();\n            if (r < l) {\n                long temp = r;\n                r = l;\n                l = temp;\n            }\n            long ans = r - l + 1;\n            if (l < b) {\n                ans -= b - l;\n            }\n            if (a % b == 0 || b % a == 0 || ans <= 0) {\n                out.print(0);\n                out.print(' ');\n            } else {\n                long l_count = count(l-1, a, b);\n                long r_count = count(r , a, b);\n                long diff = r_count - l_count ;\n                ans -= diff;\n                out.print(ans);\n                out.print(' ');\n                //                if (ans != bf(l, r, a, b)) {\n                //                    out.println(ans + \" \" + l + \" \" + r + \" \" + a + \" \" + b + \" \" + bf(l, r, a, b));\n                //                }\n            }\n        }\n        out.println(\"\");\n    }\n\n    //GCD Long\n    static long gcd(long a, long b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n\n    static void solve_cmp(int a, int b, long l, long r) {\n        if (a > b) {\n            int temp = b;\n            b = a;\n            a = temp;\n        }\n\n        if (r < l) {\n            long temp = r;\n            r = l;\n            l = temp;\n        }\n        long ans = r - l + 1;\n        if (l < b) {\n            ans -= b - l;\n        }\n        if (a % b == 0 || b % a == 0 || ans <= 0) {\n            ans = 0;\n            if (ans != bf(l, r, a, b)) {\n                out.println(ans + \" \" + l + \" \" + r + \" \" + a + \" \" + b + \" \" + bf(l, r, a, b));\n            }\n        } else {\n            long l_count = count(l-1, a, b);\n            long r_count = count(r , a, b);\n            //out.println(l_count + \" COUNTS \" + r_count + \" \" + ans);\n            long diff = r_count - l_count;\n            ans -= diff;\n            if (ans != bf(l, r, a, b)) {\n                out.println(ans + \" \" + l + \" \" + r + \" \" + a + \" \" + b + \" \" + bf(l, r, a, b));\n            }\n        }\n\n    }\n\n    static long count(long n, long a, long b) {\n        long x = a * b;\n        if (gcd(a, b) != 1) {\n            x /= gcd(a, b);\n        }\n        long mul = n / x;\n        if (mul == 0) {\n            return 0;\n        } else {\n            // out.println( n + \" \" + x + \"   \" + mul + \" MUL \" );\n            if (mul * x + b - 1 <= n) {\n                return mul * b;\n            }\n            int count = 0;\n            for (long i = b; i >= 1; i--) {\n                if (mul * x + b - i <= n) {\n                    count++;\n                } else {\n                    break;\n                }\n            }\n          //  out.println( n + \" \" + x + \"   \" + mul + \" MUL \" + count);\n            mul--;\n            return mul * b + count;\n        }\n    }\n\n    static int bf(long l, long r, int a, int b) {\n        int ans = 0;\n        for (long i = l; i <= r; i++) {\n            if ((i % a) % b != (i % b) % a) {\n              //  out.println(i);\n                ans++;\n            }\n        }\n        return ans;\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public int[] readAllInts(int n) {\n            int[] p = new int[n];\n            for (int i = 0; i < n; i++) {\n                p[i] = in.nextInt();\n            }\n            return p;\n        }\n\n        public int[] readAllInts(int n, int s) {\n            int[] p = new int[n + s];\n            for (int i = s; i < n + s; i++) {\n                p[i] = in.nextInt();\n            }\n            return p;\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    static void exit(int a) {\n        out.close();\n        err.close();\n        System.exit(a);\n    }\n\n    static InputStream inputStream = System.in;\n    static OutputStream outputStream = System.out;\n    static OutputStream errStream = System.err;\n    static InputReader in = new InputReader(inputStream);\n    static PrintWriter out = new PrintWriter(outputStream);\n    static PrintWriter err = new PrintWriter(errStream);\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def z(a, b):\n    x = a * b\n    p = [0] * (x+1)\n    for i in range(1, x + 1):\n        p[i] = p[i - 1]\n        if ((i % a) % b) != ((i % b) % a):\n            p[i] += 1\n    return p\n\ndef query(k):\n    cnt=k//(a*b)\n    rem=k%(a*b)\n    return p[a*b]*cnt+p[rem]\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int,input().split())\n    p=z(a, b)\n    for _ in range(q):\n        l, r = map(int,input().split())\n        print(query(r)-query(l-1), end=\" \")\n    print()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Solution {\n\n    static boolean found = false;\n    static String ans = \"\";\n    public static void main(String[] args) throws IOException {\n        Reader fs=new Reader();\n        PrintWriter out = new PrintWriter(System.out);\n        int T=fs.nextInt();\n        for (int tt=0; tt<T; tt++) {\n            int a = fs.nextInt();\n            int b = fs.nextInt();\n            int q = fs.nextInt();\n            int low=Math.min(a,b);\n            int high=Math.max(a,b);\n            int gcd = gcd(a,b);\n            long lcm = low*high/gcd;\n            StringBuilder ans = new StringBuilder();\n            for (int i=0; i<q; i++) {\n\n                long l = fs.nextLong()-1;\n                long r = fs.nextLong();\n                if (a==b) {\n                    ans.append(0+\" \");\n                    continue;\n                }\n                long lres = (l/lcm)*(lcm-(high))+(Math.max(0, l%lcm-(high-1)));\n                long rres = (r/lcm)*(lcm-(high))+(Math.max(0, r%lcm-(high-1)));\n                // System.out.println(\"    \"+lres+\",\"+rres);\n                ans.append((rres-lres)+\" \");\n                \n            }\n            out.println(ans);\n        }\n\n        out.close();\n    }\n\n    \n    static int gcd(int a, int b) {\n        if (b==0) {\n            return a;\n        }\n        return gcd(b,a%b);\n    }\n\n\n    static final Random random=new Random();\n\n    static void ruffleSort(int[] a) {\n        int n=a.length;//shuffle, then sort\n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n), temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        Arrays.sort(a);\n    }\n\n    /** Faster input **/\n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;\n        public Reader(){din=new DataInputStream(System.in);buffer=new byte[BUFFER_SIZE];bufferPointer=bytesRead=0;}\n        public Reader(String file_name)throws IOException{din=new DataInputStream(new FileInputStream(file_name));buffer=new byte[BUFFER_SIZE];bufferPointer=bytesRead=0;}\n        public String readLine()throws IOException{byte[] buf=new byte[1024];int cnt=0,c;\n            while((c= read())!=-1){if(c=='\\n')break;buf[cnt++]=(byte)c;}return new String(buf,0,cnt);}\n        public int nextInt()throws IOException{int ret=0;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');\n            if(neg)c=read();do{ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');if(neg)return -ret;return ret;}\n        public long nextLong()throws IOException{long ret=0;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');\n            if(neg)c=read();do{ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');if(neg)return -ret;return ret;}\n        public double nextDouble()throws IOException{double ret=0,div=1;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');if(neg)c = read();do {ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');\n            if(c=='.')while((c=read())>='0'&&c<='9')ret+=(c-'0')/(div*=10);if(neg)return -ret;return ret;}\n        private void fillBuffer()throws IOException{bytesRead=din.read(buffer,bufferPointer=0,BUFFER_SIZE);if(bytesRead==-1)buffer[0]=-1;}\n        private byte read()throws IOException{if(bufferPointer==bytesRead)fillBuffer();return buffer[bufferPointer++];}\n        public void close()throws IOException{if(din==null) return;din.close();}\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    p = [0]*(a*b)\n    for j in range(1,a*b):\n        p[j] = p[j-1]\n        if (((j % a) % b) != ((j % b) % a)):\n            p[j] = p[j] + 1\n\n    m = []\n    for k in range(q):\n        l,r = map(int,input().split())\n        x = r//len(p)\n        y = (l-1)//len(p)\n        m.append(p[r % (len(p))] - p[(l - 1) % (len(p))] + (x - y) * p[-1])\n    print(*m)"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nfinaans=[]\nfor t in range(int(input())):\n    a,b,q=[int(x) for x in input().split()]\n    l=(a*b)//gcd(a,b)\n    ans=[]\n    for k in range(q):\n        q1,q2=[int(x) for x in input().split()]\n        p=(q1-1)//l\n        q=q2//l\n        s1=q2-(q*max(a,b)+min(max(a,b),(q2%l)+1))\n        s2=q1-1-(p*max(a,b)+min(max(a,b),((q1-1)%l)+1))\n        ans.append(s1-s2)\n    finaans.append(ans)\nfor it in finaans:\n    print(*it)\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\t/*\t/ \uff8c\uff8c\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u30e0\n\t\t/ )\\\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800  Y\n\t\t(\u2800\u2800| ( \u0361\u00b0 \u035c\u0296 \u0361\u00b0\uff09\u2800\u2312(\u2800 \u30ce\n\t\t(\u2800 \uff89\u2312 Y \u2312\u30fd-\u304f __\uff0f\n\t\t| _\u2800\uff61\u30ce| \u30ce\uff61 |/\n\t\t(\u2800\u30fc '_\u4eba`\u30fc \uff89\n\t\t\u2800|\\ \uffe3 _\u4eba'\u5f61\uff89\n\t\t\u2800 )\\\u2800\u2800 \uff61\u2800\u2800 /\n\t\t\u2800\u2800(\\\u2800 #\u2800 /\n\t\t\u2800/\u2800\u2800\u2800/\u1f63====================D-\n\t\t/\u2800\u2800\u2800/\u2800 \\ \\\u2800\u2800\\\n\t\t( (\u2800)\u2800\u2800\u2800\u2800 ) ).\u2800)\n\t\t(\u2800\u2800)\u2800\u2800\u2800\u2800\u2800( | /\n\t\t|\u2800 /\u2800\u2800\u2800\u2800\u2800\u2800 | /\n\t\t[_] \u2800\u2800\u2800\u2800\u2800[___]                     */\n\t// Main Code at the Bottom\n\timport java.util.*;\n\timport java.lang.*;\n\timport java.io.*;\n\timport java.math.BigInteger; \n\tpublic class Main {\n\t\t//Fast IO class\n\t    static class FastReader {\n\t        BufferedReader br; \n\t        StringTokenizer st; \n\t        public FastReader() {\n\t        \tboolean env=System.getProperty(\"ONLINE_JUDGE\") != null;\n\t        \tif(!env) {\n\t        \t\ttry {\n\t\t\t\t\t\tbr=new BufferedReader(new FileReader(\"src\\\\input.txt\"));\n\t\t\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t}\n\t        \t}\n\t        \telse br = new BufferedReader(new InputStreamReader(System.in)); \n\t        } \n\t        String next() {\n\t            while (st == null || !st.hasMoreElements()) {\n\t                try {\n\t                    st = new StringTokenizer(br.readLine()); \n\t                } \n\t                catch (IOException  e) {\n\t                    e.printStackTrace(); \n\t                } \n\t            } \n\t            return st.nextToken(); \n\t        } \n\t        int nextInt() {\n\t            return Integer.parseInt(next()); \n\t        } \n\t        long nextLong() {\n\t            return Long.parseLong(next()); \n\t        } \n\t        double nextDouble() {\n\t            return Double.parseDouble(next()); \n\t        } \n\t        String nextLine() {\n\t            String str = \"\"; \n\t            try {\n\t                str = br.readLine(); \n\t            } \n\t            catch (IOException e) {\n\t                e.printStackTrace(); \n\t            } \n\t            return str; \n\t        } \n\t    }     \n\t    static long MOD=1000000000+7;\n\t    //Euclidean Algorithm\n\t    static long gcd(long A,long B){\n\t    \treturn (B==0)?A:gcd(B,A%B);\n\t    }\n\t    //Modular Exponentiation\n\t    static long fastExpo(long x,long n){\n\t        if(n==0) return 1;\n\t        if((n&1)==0) return fastExpo((x*x)%MOD,n/2)%MOD;\n\t        return ((x%MOD)*fastExpo((x*x)%MOD,(n-1)/2))%MOD;\n\t    }\n\t    //Modular Inverse\n\t    static long inverse(long x) {\n\t    \treturn fastExpo(x,MOD-2);\n\t    }\n\t    //Prime Number Algorithm\n\t    static boolean isPrime(long n){\n\t        if(n<=1) return false;\n\t        if(n<=3) return true;\n\t        if(n%2==0 || n%3==0) return false;\n\t        for(int i=5;i*i<=n;i+=6) if(n%i==0 || n%(i+2)==0) return false;\n\t        return true;\n\t    }\n\t    //Reverse an array\n\t    static void reverse(char arr[],int l,int r){\n\t    \twhile(l<r) {\n\t    \t\tchar tmp=arr[l];\n\t    \t\tarr[l++]=arr[r];\n\t    \t\tarr[r--]=tmp;\n\t    \t}\n\t    }\n\t    //Print array\n\t    static void print1d(int arr[]) {\n\t    \tout.println(Arrays.toString(arr));\n\t    }\n\t    static void print2d(int arr[][]) {\n\t    \tfor(int a[]: arr) out.println(Arrays.toString(a));\n\t    }\n\t    // Pair\n\t    static class pair{\n\t    \tint x,y;\n\t    \tpair(int a,int b){\n\t    \t\tthis.x=a;\n\t    \t\tthis.y=b;\n\t    \t}\n\t    \tpublic boolean equals(Object obj) {\n\t    \t\tif(obj == null || obj.getClass()!= this.getClass()) return false;\n\t            pair p = (pair) obj;\n\t            return (this.x==p.x && this.y==p.y);\n\t        }\n\t    \tpublic int hashCode() {\n\t            return Objects.hash(x,y);\n\t        }\n\t    }\n\t    static FastReader sc=new FastReader();\n\t    static PrintWriter out=new PrintWriter(System.out);  \n\t    //Main function(The main code starts from here\n\t    static long a,b,q,z;\n\t    static long solve(long x) {\n\t    \tlong ans=(x/z)*(z-a);\n\t    \tx%=z;\n\t    \tif(x>=a) ans+=(x-a+1);\n\t    \treturn ans;\n\t    }\n\t    public static void main (String[] args) throws java.lang.Exception {\n\t    \tint test=1;\n\t    \ttest=sc.nextInt();\n\t    \twhile(test-->0){\n\t    \t\ta=sc.nextInt();b=sc.nextInt();q=sc.nextInt();\n\t    \t\tif(b>a) {\n\t    \t\t\tlong tmp=a;\n\t    \t\t\ta=b;\n\t    \t\t\tb=tmp;\n\t    \t\t}\n\t    \t\tz=(a*b)/gcd(a,b);\n\t    \t\twhile(q-->0) {\n\t    \t\t\tlong l=sc.nextLong(),r=sc.nextLong();\n\t    \t\t\tout.print((solve(r)-solve(l-1))+\" \");\n\t    \t\t}\n\t    \t\tout.println();\n\t    \t}\n\t        out.flush();\n\t        out.close();\n\t    }\n\t}"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):  \n    if a == 0 : \n        return b    \n    return gcd(b%a, a) \ndef lcm(a,b):\n    g=gcd(a,b)\n    return a*b//g\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    tmp = lcm(a,b)\n    mi=max(a,b)\n    for i in range(q):\n        ans=0\n        l,r = map(int,input().split())\n        l=max(l,a,b)\n        if l>r:\n            print(0,end=' ')\n            continue\n        ans=((r//tmp)-(l//tmp))*mi\n        ans=ans-max(0,mi-r%tmp-1)+max(0,mi-l%tmp)\n        print(max(r-l+1-ans,0),end=' ')\n    print()                \n            \n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n \npublic class main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile (t-->0) {\n\t\t\tint a = sc.nextInt();\n\t\t\tint b = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\t\n\t\t\tlong rmin = Math.max(a, b);\n\t\t\tlong rmax = lcm(a, b) -1;\n\t\t\t\n\t\t\twhile(q-->0) {\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong r = sc.nextLong();\n\t\t\t\t\n\t\t\t\tif (a == b) {\n\t\t\t\t\tSystem.out.print(0 + \" \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tSystem.out.print((ans(r, rmax, rmin) - ans(l-1, rmax, rmin)) + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\t\n\tpublic static long ans (long r, long rmax, long rmin) {\n\t\t\n\t\tlong lcmvalue = rmax + 1;\n\t\tlong s = single(lcmvalue, rmax, rmin);\n\t\tlong residue = r/lcmvalue;\n\t\tlong total = s*residue + single(r%lcmvalue, rmax, rmin);\n\t\treturn total;\n\t}\n\t\n\tpublic static long single (long r, long rmax, long rmin) {\n\t\tlong lsub = Math.max(rmin, 1);\n\t\tlong rsub = Math.min(rmax, r);\n\t\tif(rsub < lsub)\n\t\t\treturn 0;\n\t\tlong res = rsub-lsub+1;\n\t\treturn res;\n\t}\n\t\n\tpublic static int lcm (int a, int b) {\n\t\treturn (a*b)/gcd(a,b);\n\t}\n\t\n\tpublic static int gcd (int a, int b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\tif (a > b)\n\t\t\treturn gcd (a%b, b);\n\t\telse\n\t\t\treturn gcd (b%a, a);\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "//package learning;\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\npublic class NitsLocal {\n    static ArrayList<String> s1;\n    static boolean[] prime;\n    static int n = (int)1e7;\n    \n     static void sieve() {\nArrays.fill(prime\t, true);\nprime[0] = prime[1] = false;\nfor(int i = 2 ; i * i <= n ; ++i) {\nif(prime[i]) {\nfor(int k = i * i; k<= n ; k+=i) {\nprime[k] = false;\n}\n}\n}\n \n}\n    public static void main(String[] args) {\n        InputReader sc = new InputReader(System.in);\n        n *= 2;\n           prime  = new boolean[n + 1];\n           //sieve();\n                prime[1] = false;\n              \n                  \n             /*    \n        int n = sc.ni();\n        int k = sc.ni();\n        int []vis = new int[n+1];\n        int []a = new int[k];\n        for(int i=0;i<k;i++)\n        {\n            a[i] = i+1;\n        }\n        int j = k+1;\n        int []b = new int[n+1];\n        for(int i=1;i<=n;i++)\n        {\n            b[i] = -1;\n        }\n        int y = n - k +1;\n        int tr = 0;\n        int y1 = k+1;\n        while(y-- > 0)\n        {\n        System.out.print(\"? \");\n        for(int i=0;i<k;i++)\n        {\n            System.out.print(a[i] + \" \");\n        }\n        \n        System.out.flush();\n        int pos = sc.ni();\n        int a1 = sc.ni();\n        b[pos] = a1;\n        \n        \n        for(int i=0;i<k;i++)\n        {\n            if(a[i] == pos)\n            {\n                a[i] = y1;\n                y1++;\n            }\n        }\n        }\n        ArrayList<Integer> a2 = new ArrayList<>();\n        if(y >= k)\n        {\n            \n        int c = 0;\n        int k1 = 0;\n            for(int i=1;i<=n;i++)\n            {\n                if(b[i] != -1)\n                {\n                    c++;\n                    a[k1] = i;\n                    a2.add(b[i]);\n                    k1++;\n                }\n                if(c==k)\n                    break;\n            }\n            \n            Collections.sort(a2);\n            System.out.print(\"? \");\n        for(int i=0;i<k;i++)\n        {\n            System.out.print(a[i] + \" \");\n        }\n        System.out.println();\n        System.out.flush();\n        int pos = sc.ni();\n        int a1 = sc.ni();\n        int ans = -1;\n        for(int i=0;i<a2.size();i++)\n        {\n            if(a2.get(i) == a1)\n            {\n                ans = i+1;\n                break;\n            }\n        }\n        System.out.println(\"!\" + \" \" + ans);\n           System.out.flush();  \n        }\n        else\n        {\n            int k1 = 0;\n            a = new int[k];\n             for(int i=1;i<=n;i++)\n            {\n                if(b[i] != -1)\n                {\n                    \n                    a[k1] = i;\n                    a2.add(b[i]);\n                    k1++;\n                }\n             \n            }\n              for(int i=1;i<=n;i++)\n            {\n                if(b[i] == -1)\n                {\n                    \n                    a[k1] = i;\n                    \n                    k1++;\n                    if(k1==k)\n                        break;\n                }\n             \n            }\n              int ans = -1;\n              while(true)\n              {\n                   System.out.print(\"? \");\n                     for(int i=0;i<k;i++)\n                   {\n                         System.out.print(a[i] + \" \");\n                  }\n                   System.out.println();\n                   System.out.flush();\n                   int pos = sc.ni();\n                   int a1 = sc.ni();\n                   int f = 0;\n                   \n                   if(b[pos] != -1)\n                   {\n                       Collections.sort(a2);\n                       for(int i=0;i<a2.size();i++)\n                       {\n                           if(a2.get(i) == a1)\n                           {\n                               ans = i+1;\n                               f = 1;\n                               System.out.println(\"!\" + \" \" + ans);\n                               System.out.flush();\n                               break;\n                           }\n                       }\n                       if(f==1)\n                           break;\n                   }\n                   else\n                   {\n                       b[pos] = a1;\n                        a = new int[k];\n                        a2.add(a1);\n             for(int i=1;i<=n;i++)\n            {\n                if(b[i] != -1)\n                {\n                    \n                    a[k1] = i;\n                    a2.add(b[i]);\n                    k1++;\n                }\n             \n            }\n              for(int i=1;i<=n;i++)\n            {\n                if(b[i] == -1)\n                {\n                    \n                    a[k1] = i;\n                    \n                    k1++;\n                    if(k1==k)\n                        break;\n                }\n             \n                       \n                   }\n              }\n        }  \n          */\n             \n \n    /*\n          int n = sc.ni();\n          int []a = sc.nia(n);\n          int []b = sc.nia(n);\n          Integer []d = new Integer[n];\n          int []d1 = new int[n];\n          for(int i=0;i<n;i++)\n          {\n              d[i] = (a[i] - b[i]);\n             \n          }\n          int l = 0;\n          int r = n-1;\n          Arrays.sort(d);\n          long res = 0;\n          while(l < r)\n          {\n              if(d[l] + d[r] > 0)\n              {\n                  res += (long) (r-l);\n                  r--;\n              }\n              else \n                  l++;\n          }\n          \n          w.println(res);\n*/\n      /*\n      int n = sc.ni();\n     \n      ArrayList<Integer> t1 = new ArrayList<>();\n      int []p1 = new int[n+1];\n      int []q1 = new int[n-1];\n      int []q2 = new int[n-1];\n      for(int i=0;i<n-1;i++)\n      {\n          int p = sc.ni();\n          int q = sc.ni();\n          t1.add(q);\n          p1[p]++;\n          q1[i] = p;\n          q2[i] = q;\n          \n      }\n      int res = 0;\n      for(int i=0;i<t1.size();i++)\n      {\n          if(p1[t1.get(i)] == 0)\n          {\n              res = t1.get(i);\n              //break;\n          }\n      }\n      \n    int y = 1;\n    for(int i=0;i<n-1;i++)\n    {\n        if(q2[i] == res)\n        {\n            w.println(\"0\");\n        }\n        else\n        {\n            w.println(y + \" \");\n            y++;\n        }\n    }\n      */\n /*\n   int n = sc.ni();\n   int k = sc.ni();\n   Integer []a = new Integer[n];\n   for(int i=0;i<n;i++)\n   {\n       a[i] = sc.ni();\n       a[i] = a[i]%k;\n   }\n   HashMap<Integer,Integer> hm = new HashMap<>();\n   for(int i=0;i<n;i++)\n   {\n       if(!hm.containsKey(a[i]))\n           hm.put(a[i], 1);\n       else\n           hm.put(a[i], hm.get(a[i]) + 1);\n   }\n  Arrays.sort(a);\n  int z = 0;\n  long res = 0;\n  HashMap<Integer,Integer> v = new HashMap<>();\n  for(int i=0;i<n;i++)\n  {\n      if(a[i] == 0)\n          res++;\n      else\n      {\n          if(a[i] == k-a[i] && !v.containsKey(a[i]))\n          {\n              res += (long) hm.get(a[i]) / 2;\n              v.put(a[i],1);\n          }\n          else\n          {\n          if(hm.containsKey(a[i]) && hm.containsKey(k-a[i]))\n          {\n          int temp = a[i];\n          \n          if(!v.containsKey(a[i]) && !v.containsKey(k-a[i]))\n          {\n             res += (long) Math.min(hm.get(temp), hm.get(k-temp));\n             v.put(temp,1);\n             v.put(k-temp,1);\n          }\n          }\n          }\n      }\n  }\n  w.println(res);\n*/\n /*\nint []a = new int[4];\n//G0\na[0] = 0;\na[1] = 1;\na[2] = 0;\na[3] = 1;\nint []b = new int[4];\n//g1\nb[0] = 0;\nb[1] = 1;\nb[2] = 1;\nb[3] = 0;\nint [][]dp1 = new int[4][4];\nint [][]dp2 = new int[4][4];\nfor(int i=0;i<4;i++)\n{\n    for(int j=0;j<4;j++)\n    {\n        dp1[i][j] = (a[i] | a[j]);\n    }\n   // w.println();\n}\nw.println();\nfor(int i=0;i<4;i++)\n{\n    for(int j=0;j<4;j++)\n    {\n        dp2[i][j] = (b[i] | b[j]);\n    }\n    //w.println();\n}\nint a1 = 0;\nint b1 = 0;\nint c1 = 0;\nint d1 = 0;\nfor(int i=0;i<4;i++)\n{\n    for(int j=0;j<4;j++)\n    {\n        if(dp1[i][j] == 0 && dp2[i][j] == 0)\n            a1++;\n        else  if(dp1[i][j] == 1 && dp2[i][j] == 1)\n            b1++;\n        else  if(dp1[i][j] == 0 && dp2[i][j] == 1)\n            c1++;\n        else\n            d1++;\n       \n    }\n}\nw.println(a1+ \" \" + b1 + \" \" + c1 +\" \"+ d1);\n\nScanner sc = new Scanner(System.in);\n    int q = sc.nextInt();\n    while(q-- > 0)\n    {\n        long x = sc.nextLong();\n        long y = sc.nextLong();\n        long a = (x - y)/2;  \n        long a1 = 0, b1 = 0; \n        \n        \n        int lim     = 8; \n  \n   \n    int f = 0;\n    \n    for (int i=0; i<8*lim; i++)  \n    {  \n        long pi = (y & (1 << i));  \n        long qi = (a & (1 << i));  \n        if (pi == 0 && qi == 0)  \n        {  \n             \n        }  \n        else if (pi == 0 && qi > 0)  \n        {  \n            a1 = ((1 << i) | a1);  \n            b1 = ((1 << i) | b1);  \n        }  \n        else if (pi > 0 && qi == 0)  \n        {  \n            a1 = ((1 << i) | a1);  \n  \n           \n        }  \n        else\n        {  \n            f = 1;  \n            \n        }  \n    }  \n    if(a1+b1 != x)\n        f  =1;\n  if(f==1)\n            System.out.println(\"-1\");\n  else\n  {\n       if(a1 > b1)\n       {\n           long temp = a1;\n           a1 = b1;\n           b1 = temp;\n       }\n    System.out.println(a1 + \" \" + b1);\n   \n  }\n  \n  \n    }\n     \n     */\n int t = sc.ni();\n while(t-- > 0)\n {\n    /*\n    int c = 0;\n    for(int i=1;i<=100;i++)\n    {\n        int p = (i%3)%6;\n        int q = (i%6)%3;\n        if(p==q)\n            w.println(i + \" \");\n    }\n//w.println(c);\n     */\n     \n   long a = sc.nl();\n   long b = sc.nl();\n   int q = sc.ni();\n  \n   long gc = gcd(a,b);\n   long lc = (a*b)/gc;\n   long max = Math.max(a,b);\n   \n   while(q-- > 0)\n   {\n       long l = sc.nl();\n       long r = sc.nl();\n       long res = r/lc;\n       long temp = l/lc;\n       if(l%lc==0)\n           temp--;\n       res -= temp;\n       \n      \n       //w.println(res);\n        for(int i=1;i<max;i++)\n        {\n            if(r >= i)\n            {\n            long t1 = ((r-i)/lc) + 1;\n        if(l-1 >= i)\n        {\n            long t2 = (l-1-i)/lc + 1;\n            \n            t1 -= t2;\n        }\n        //w.println(t1);\n            res += t1;\n            }\n        }\n     long fin = r-l+1;\n     fin -= res;\n     w.print(fin + \" \");\n       \n     //w.println(res);\n\n     \n   }\nw.println();\n    \n }\n   \n\n\n \n       w.close();\n       \n        \n    \n    \n} \n public static final BigInteger MOD = BigInteger.valueOf(998244353L);\n    \n    static BigInteger fact(int x)\n    {\n        BigInteger res = BigInteger.ONE;\n        for(int i=2;i<=x;i++)\n        {\n            res = res.multiply(BigInteger.valueOf(i)).mod(MOD);\n        }\n        return res;\n    }\n   \n    public static long calc(int x,int y,int z)\n    {\n        long res = ((long) (x-y) * (long) (x-y)) + ((long) (z-y) * (long) (z-y)) + ((long) (x-z) * (long) (x-z));\n        return res;\n    }\n    \n    public static int upperBound(ArrayList<Integer>arr, int length, int value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = (low + high) / 2;\n            if (value >= arr.get(mid)) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    \n     public static int lowerBound(ArrayList<Integer> arr, int length, int value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = (low + high) / 2;\n            //checks if the value is less than middle element of the array\n            if (value <= arr.get(mid)) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    static HashMap<Long,Integer> map;\n  \n          \n    static class Coin{\n        long a;\n        long b;\n        \n        Coin(long a, long b)\n        {\n            this.a = a;\n            this.b = b;\n           \n        }\n    }\n    static ArrayList<Long> fac;\n    static HashSet<Long> hs;\n    public static void primeFactors(long n) \n    { \n        // Print the number of 2s that divide n \n        while (n % 2 == 0) { \n            fac.add(2l);\n            hs.add(2l);\n            n /= 2; \n        } \n  \n        // n must be odd at this point.  So we can \n        // skip one element (Note i = i +2) \n        for (long i = 3; i*i <= n; i += 2) { \n            // While i divides n, print i and divide n \n            while (n % i == 0) { \n                fac.add(i);\n                hs.add(i);\n                n /= i; \n            } \n        } \n  \n        // This condition is to handle the case whien \n        // n is a prime number greater than 2 \n        if (n > 2) \n            fac.add(n);\n    } \n   static int smallestDivisor(int n)  \n{  \n    // if divisible by 2  \n    if (n % 2 == 0)  \n        return 2;  \n  \n    // iterate from 3 to sqrt(n)  \n    for (int i = 3; i * i <= n; i += 2) {  \n        if (n % i == 0)  \n            return i;  \n    }  \n  \n    return n;  \n}  \n static boolean IsP(String s,int l,int r)\n {\n      while(l <= r)\n      {\n          if(s.charAt(l) != s.charAt(r))\n          {\n              return false;\n          }\n         l++;\n         r--;\n      }\n      return true;\n }\n  \n\t\n\n    \n    \n static class Student{\n    int id;\n    int val;\n     Student(int id,int val)\n     {\n      this.id = id;\n      this.val = val;\n     }\n }\n   \n   \n   \n \n     static int upperBound(ArrayList<Integer> a, int low, int high, int element){\n    while(low < high){\n        int middle = low + (high - low)/2;\n        if(a.get(middle) >= element)\n            high = middle;\n        else \n            low = middle + 1;\n    }\n    return low;\n}\n   static long func(long t,long e,long h,long a, long b)\n   {\n       if(e*a >= t)\n           return t/a;\n       else\n       {\n           return e + Math.min(h,(t-e*a)/b);\n       }\n   }\n         \n      \n   \n    public static int countSetBits(int number){\n        int count = 0;\n        while(number>0){\n            ++count;\n            number &= number-1;\n        }\n        return count;\n    }\n    \n     \n      \n \n    \n   \n     static long modexp(long x,long n,long M)\n{\n    long power = n;\n    long result=1;\n    x = x%M;\n    while(power>0)\n    {\n        if(power % 2 ==1)\n            result=(result * x)%M;\n        x=(x*x)%M;\n        power = power/2;\n    }\n    return result;\n}\n      static long modInverse(long A,long M)\n{\n    return modexp(A,M-2,M);\n}\n    static long gcd(long a,long b)\n    {\n        if(a==0)\n            return b;\n        else\n            return gcd(b%a,a);\n    }\n    static class Temp{\n        int a;\n        int b;\n        int c;\n        int d;\n      \n        Temp(int a,int b,int c,int d)\n        {\n            this.a = a;\n            this.b = b;\n            this.c  =c;\n            this.d = d;\n            //this.d = d;\n        }\n    }\n   \n    \n    \n   static long sum1(int t1,int t2,int x,int []t)\n   {\n       int mid = (t2-t1+1)/2;\n  if(t1==t2)\n      return 0;\n    \n   else\n   return sum1(t1,mid-1,x,t) + sum1(mid,t2,x,t);\n    \n     \n   }\n  \n   \n    static String replace(String s,int a,int n)\n    {\n        char []c = s.toCharArray();\n        for(int i=1;i<n;i+=2)\n        {\n            int num = (int) (c[i] - 48);\n            num += a;\n            num%=10;\n            c[i] = (char) (num+48);\n        }\n        return new String(c);\n    }\n    static String move(String s,int h,int n)\n    {\n        h%=n;\n        char []c = s.toCharArray();\n        char []temp = new char[n];\n        for(int i=0;i<n;i++)\n        {\n            temp[(i+h)%n] = c[i];\n        }\n        return new String(temp);\n    }\n    \n     public static int ip(String s){\nreturn Integer.parseInt(s);\n}\n     static class multipliers implements Comparator<Long>{\n  \n         \n  public int compare(Long a,Long b) {\n   if(a<b)\n    return 1;\n   else if(b<a)\n    return -1;\n   else\n    return 0;\n  }\n }\n     \n     static class multipliers1 implements Comparator<Coin>{\n  \n  public int compare(Coin a,Coin b) {\n   if(a.a < b.a)\n       return 1;\n   else if(a.a > b.a)\n       return -1;\n   else{ \n       if(a.b < b.b)\n       return 1;\n   else if(a.b > b.b)\n       return -1;\n       else\n       return 0;\n   }\n       \n  \n \n     }\n     }\n     \n// Java program to generate power set in \n// lexicographic order. \n \n    \n    \n    \n      static class InputReader {\n \nprivate final InputStream stream;\nprivate final byte[] buf = new byte[8192];\nprivate int curChar, snumChars;\n \npublic InputReader(InputStream st) {\nthis.stream = st;\n}\n \npublic int read() {\nif (snumChars == -1)\nthrow new InputMismatchException();\nif (curChar >= snumChars) {\ncurChar = 0;\ntry {\nsnumChars = stream.read(buf);\n} catch (IOException e) {\nthrow new InputMismatchException();\n}\nif (snumChars <= 0)\nreturn -1;\n}\nreturn buf[curChar++];\n}\n \npublic int ni() {\nint c = read();\nwhile (isSpaceChar(c)) {\nc = read();\n}\nint sgn = 1;\nif (c == '-') {\nsgn = -1;\nc = read();\n}\nint res = 0;\ndo {\nres *= 10;\nres += c - '0';\nc = read();\n} while (!isSpaceChar(c));\nreturn res * sgn;\n}\n \npublic long nl() {\nint c = read();\nwhile (isSpaceChar(c)) {\nc = read();\n}\nint sgn = 1;\nif (c == '-') {\nsgn = -1;\nc = read();\n}\nlong res = 0;\ndo {\nres *= 10;\nres += c - '0';\nc = read();\n} while (!isSpaceChar(c));\nreturn res * sgn;\n}\n \npublic int[] nia(int n) {\nint a[] = new int[n];\nfor (int i = 0; i < n; i++) {\na[i] = ni();\n}\nreturn a;\n}\n \npublic String rs() {\nint c = read();\nwhile (isSpaceChar(c)) {\nc = read();\n}\nStringBuilder res = new StringBuilder();\ndo {\nres.appendCodePoint(c);\nc = read();\n} while (!isSpaceChar(c));\nreturn res.toString();\n}\n \npublic String nextLine() {\nint c = read();\nwhile (isSpaceChar(c))\nc = read();\nStringBuilder res = new StringBuilder();\ndo {\nres.appendCodePoint(c);\nc = read();\n} while (!isEndOfLine(c));\nreturn res.toString();\n}\n \npublic boolean isSpaceChar(int c) {\nreturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n}\n \nprivate boolean isEndOfLine(int c) {\nreturn c == '\\n' || c == '\\r' || c == -1;\n}\n \n}\n \n \n \n \n \n   \nstatic PrintWriter w = new PrintWriter(System.out);\n                  static class Student1\n    {\n        int id;\n        //int x;\n       \n       int b;\n      \n        //long z;\n        \n        Student1(int id,int b)\n        {\n            this.id = id;\n            //this.x = x;\n            //this.s = s;\n            this.b = b;\n          \n           // this.z = z;\n            \n            \n            \n           \n        }\n        \n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\nlong long nok, a, b, q;\nlong long nod(long long x, long long y) {\n  while (x > 0 && y > 0) {\n    if (x > y)\n      x %= y;\n    else\n      y %= x;\n  }\n  return x + y;\n}\nlong long f(long long x) {\n  long long xx = x;\n  long long ans = 0;\n  if (x >= nok - 1) {\n    x -= nok - 1;\n    ans += max(a, b) - 1;\n  } else {\n    ans += min(x, max(a, b) - 1);\n    return xx - ans;\n  }\n  ans += x / nok * max(a, b);\n  x = x % nok;\n  ans += min(x, max(a, b));\n  return xx - ans;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  long long t;\n  cin >> t;\n  while (t > 0) {\n    t--;\n    cin >> a >> b >> q;\n    nok = a * b / nod(a, b);\n    for (long long i = 1; i <= q; i++) {\n      long long l, r;\n      cin >> l >> r;\n      cout << f(r) - f(l - 1) << ' ';\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = acos(-1.0);\nint dx4[] = {+1, -1, +0, +0};\nint dy4[] = {+0, +0, +1, -1};\nint dx8[] = {+0, +0, -1, +1, -1, -1, +1, +1};\nint dy8[] = {-1, +1, +0, +0, -1, +1, -1, +1};\nint dr[] = {-1, 1, -2, -2, -1, 1, 2, 2};\nint dc[] = {-2, -2, -1, 1, 2, 2, 1, -1};\nbool isNotEqual(int x, int a, int b) { return (x % a) % b != (x % b) % a; }\nlong long calculate(long long val, long long tot, long long maxi,\n                    long long cnt) {\n  long long div = val / tot;\n  long long rem = val % tot;\n  long long ans = div * cnt;\n  rem = rem - (maxi - 1);\n  if (rem > 0) ans += rem;\n  return ans;\n}\nvoid test_case() {\n  int a, b;\n  cin >> a >> b;\n  int maxi = max(a, b);\n  int mini = min(a, b);\n  int cnt = 0;\n  for (int i = maxi; isNotEqual(i, a, b); ++i) cnt++;\n  int tot = maxi + cnt;\n  int query;\n  cin >> query;\n  while (query-- > 0) {\n    long long lft, rgt;\n    cin >> lft >> rgt;\n    cout << calculate(rgt, tot, maxi, cnt) - calculate(lft - 1, tot, maxi, cnt)\n         << \" \\n\"[query == 0];\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  cout.precision(15);\n  cout << fixed;\n  int T = 1;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    test_case();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b): \n    if a == 0: \n        return b \n    return gcd(b % a, a)\n\ndef lcm(a,b): \n    return (a*b) // gcd(a,b)\n\ndef find_numbers(l,r,c,a,b):\n\tleast_multiple=(l-(l%c))\n\tnum=(r-least_multiple)//c\n\tfinal_multiple=least_multiple+(c*num)\n\treturn max(b-(l%c),0)+(num-1)*b+min(b,r-final_multiple+1)\n\nfor i in range(int(input())):\n\ta,b,q=map(int,input().split())\n\t\n\tfor j in range(q):\n\n\t\tl,r=map(int,input().split())\n\t\tif(a==b):\n\t\t\tprint(\"0\",end=\" \")\n\t\telse:\n\t\t\tif(r<max(a,b)):\n\t\t\t\tprint(\"0\",end=\" \")\n\t\t\telse:\n\t\t\t\tif(l<max(a,b)):\n\t\t\t\t\tans=find_numbers(max(a,b),r,lcm(a,b),min(a,b),max(a,b))\n\t\t\t\t\tprint(int((r-max(a,b)+1)-ans),end=\" \")\n\t\t\t\telse:\n\t\t\t\t\tans=find_numbers(l,r,lcm(a,b),min(a,b),max(a,b))\n\t\t\t\t\tprint(int((r-l+1)-ans),end=\" \")\n\tprint()"
        },
        {
            "language": 3,
            "solution": "import math\nimport os,io\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\ndef findv(lcm,l,r,b):\n    p = max(min(r,b),l)\n    s = r-p+1\n    x1 = p//lcm\n    x2 = r//lcm\n    if x1*lcm+b > p:\n        s -= b-p%lcm\n    x1 += 1\n    if x2*lcm+b <= r:\n        s -= b*(x2-x1+1)\n    else:\n        s -= b*(x2-x1)+ r%lcm + 1\n    return s\n\ncases = int(input())\nfor t in range(cases):\n    a,b,q = list(map(int,input().split()))\n    a,b = min(a,b),max(a,b)\n    a = (a*b)//math.gcd(a,b)\n    out = []\n    for i in range(q):\n        l,r = list(map(int,input().split()))\n        if b>r:\n            out.append(0)\n        else:\n            out.append(findv(a, l, r, b))\n    print(*out)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid _R(T &x) {\n  cin >> x;\n}\nvoid _R(int &x) { scanf(\"%d\", &x); }\nvoid _R(long long &x) { scanf(\"%lld\", &x); }\nvoid _R(double &x) { scanf(\"%lf\", &x); }\nvoid _R(char &x) { scanf(\" %c\", &x); }\nvoid _R(char *x) { scanf(\"%s\", x); }\nvoid R() {}\ntemplate <class T, class... U>\nvoid R(T &head, U &...tail) {\n  _R(head);\n  R(tail...);\n}\ntemplate <class T>\nvoid _W(const T &x) {\n  cout << x;\n}\nvoid _W(const int &x) { printf(\"%d\", x); }\nvoid _W(const long long &x) { printf(\"%lld\", x); }\nvoid _W(const double &x) { printf(\"%.16f\", x); }\nvoid _W(const char &x) { putchar(x); }\nvoid _W(const char *x) { printf(\"%s\", x); }\ntemplate <class T, class U>\nvoid _W(const pair<T, U> &x) {\n  _W(x.F);\n  putchar(' ');\n  _W(x.S);\n}\ntemplate <class T>\nvoid _W(const vector<T> &x) {\n  for (auto i = x.begin(); i != x.end(); _W(*i++))\n    if (i != x.cbegin()) putchar(' ');\n}\nvoid W() {}\ntemplate <class T, class... U>\nvoid W(const T &head, const U &...tail) {\n  _W(head);\n  putchar(sizeof...(tail) ? ' ' : '\\n');\n  W(tail...);\n}\nconst int MAXN = 1e6 + 10, MAXM = 4e6 + 10;\nconst int INF = INT_MAX, SINF = 0x3f3f3f3f;\nconst long long llINF = LLONG_MAX;\nconst int MOD = 1e9 + 7, mod = 998244353;\nconst int inv2 = 5e8 + 4;\nconst int Lim = 1 << 20;\nlong long a, b, q;\nlong long dp[MAXN];\nlong long calc(long long x) {\n  long long ans = 0;\n  ans = dp[a * b] * (x / (a * b));\n  return ans + dp[x % (a * b)];\n}\nvoid solve() {\n  R(a, b, q);\n  vector<long long> ans;\n  for (int i = 1; i <= a * b; i++) {\n    dp[i] = (((i % a) % b) != ((i % b) % a));\n    dp[i] += dp[i - 1];\n  }\n  while (q--) {\n    long long x, y;\n    R(x, y);\n    ans.push_back(calc(y) - calc(x - 1));\n  }\n  W(ans);\n}\nint main() {\n  int t = 1;\n  R(t);\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Template {\n\n\tstatic int mod = 1000000007;\n\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint yo = sc.nextInt();\n\t\twhile (yo-- > 0) {\n\t\t\tint a = sc.nextInt(), b = sc.nextInt();\n\t\t\tif(a > b) {\n\t\t\t\tint temp = a;\n\t\t\t\ta = b;\n\t\t\t\tb = temp;\n\t\t\t}\n\t\t\tlong lcm = a*b;\n\t\t\tlong gcd = gcd(a,b);\n\t\t\tlcm /= gcd;\n\t\t\tint q = sc.nextInt();\n\t\t\twhile(q-->0) {\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong r = sc.nextLong();\n\t\t\t\t\n\t\t\t\tif(lcm == b || (r < b)) {\n\t\t\t\t\tout.print(0 + \" \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlong count = find(r,lcm,b);\n\t\t\t\tif(l > 1) count -= find(l-1,lcm,b);\n\t\t\t\tout.print(count + \" \");\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t\tout.close();\n\t}\n\t\n\tstatic long find(long r, long lcm, long b) {\n\t\tlong div = r/lcm;\n\t\tlong prod = div * lcm;\n\t\tlong total = r;\n\t\tif(div != 0) {\n\t\t\ttotal -= Math.min(b, r-prod+1);\n\t\t\ttotal -= (div-1)*b;\n\t\t}\n\t\treturn total -= Math.min(r, b-1);\n\t}\n\n\tstatic class Pair {\n\t\tint x;\n\t\tint y;\n\n\t\tpublic Pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t}\n\n\tstatic void ruffleSort(int[] a) {\n\t\tint n = a.length;\n\t\tRandom r = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint oi = r.nextInt(n), temp = a[i];\n\t\t\ta[i] = a[oi];\n\t\t\ta[oi] = temp;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tstatic boolean[] sieve(int N) {\n\t\tboolean[] sieve = new boolean[N + 1];\n\t\tfor (int i = 2; i <= N; i++)\n\t\t\tsieve[i] = true;\n\n\t\tfor (int i = 2; i <= N; i++) {\n\t\t\tif (sieve[i]) {\n\t\t\t\tfor (int j = 2 * i; j <= N; j += i) {\n\t\t\t\t\tsieve[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sieve;\n\t}\n\n\tstatic long pow(int a, long b) {\n\t\tif (b == 0) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (b == 1) {\n\t\t\treturn a;\n\t\t}\n\t\tif (b % 2 == 0) {\n\t\t\tlong ans = pow(a, b / 2);\n\t\t\treturn ans * ans;\n\t\t} else {\n\t\t\tlong ans = pow(a, (b - 1) / 2);\n\t\t\treturn a * ans * ans;\n\t\t}\n\n\t}\n\n\tstatic class FastScanner {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] readArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n\n\t//\tFor Input.txt and Output.txt\t\n\t//\tFileInputStream in = new FileInputStream(\"input.txt\");\n\t//\tFileOutputStream out = new FileOutputStream(\"output.txt\");\n\t//\tPrintWriter pw = new PrintWriter(out);\n\t//\tScanner sc = new Scanner(in);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nint main() {\n  long long a, b, q;\n  long long l, r;\n  int t;\n  long long ans;\n  scanf(\"%d\", &t);\n  while (t--) {\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    long long lcm = b / gcd(a, b) * a, tmp, num;\n    while (q--) {\n      scanf(\"%I64d%I64d\", &l, &r);\n      if (a == b || b % a == 0)\n        printf(\"0\\n\");\n      else {\n        ans = (r - l + 1) / lcm * (lcm - b);\n        num = (r - l + 1) % lcm;\n        if (num > 0) {\n          tmp = l % lcm;\n          if (tmp + num - 1 >= b)\n            ans += min(lcm - 1, tmp + num - 1) - max(b, tmp) + 1;\n          if (tmp + num - 1 >= lcm) {\n            num -= lcm - tmp;\n            tmp = 0;\n            ans += max(0LL, num - b);\n          }\n        }\n        printf(\"%I64d%c\", ans, q ? ' ' : '\\n');\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MOD = 1000 * 1000 * 1000 + 7;\nconst long long INF = 1ll * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 + 7;\nconst long long MOD2 = 998244353;\nconst long long N = 1000 * 100 + 10;\nconst long long N2 = 70;\nconst long double PI = 3.141592653589793;\nlong long gcd(long long a, long long b) {\n  if (!b) return a;\n  return gcd(b, a % b);\n}\nlong long power(long long x, long long y, long long p) {\n  long long res = 1;\n  x %= p;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nlong long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }\nlong long a, b, q, lc;\nlong long calc(long long n) {\n  long long dum = n / lc;\n  long long ans = (dum)*a;\n  long long dum2 = lc * dum;\n  ans += (min(n - dum2 + 1, a));\n  return ans;\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    if (b > a) swap(a, b);\n    lc = a * b;\n    lc /= (gcd(a, b));\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      if (a == b) {\n        cout << 0 << \" \";\n        continue;\n      }\n      long long total = r - l + 1;\n      total -= calc(r);\n      total += calc(l - 1);\n      cout << total << \" \";\n    }\n    cout << \"\\n\";\n  }\n  cerr << \"Time : \" << 1000 * (long double)clock() / (long double)CLOCKS_PER_SEC\n       << \"ms\\n\";\n  ;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\nusing namespace std;\nusing i64 = long long;\nusing i32 = int;\nusing f64 = long double;\ntemplate <class Key>\nusing vec = vector<Key>;\ntemplate <class Key>\nusing heap = priority_queue<Key>;\ntemplate <class Key>\nusing hash_set = unordered_set<Key>;\ntemplate <class Key, class Value>\nusing hash_map = unordered_map<Key, Value>;\nusing str = string;\nusing p64 = pair<i64, i64>;\nusing v64 = vec<i64>;\nusing vv64 = vec<v64>;\nusing s64 = set<i64>;\nusing m64 = map<i64, i64>;\nconst i64 inf = numeric_limits<i64>::max() / 2;\ntemplate <typename T>\ninline i64 sz(const T& a) {\n  return (i64)(a.size());\n}\ninline void fast() { ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0); }\ntemplate <typename T>\ninline bool check_min(T& a, T b) {\n  if (a > b) return a = b, 1;\n  return 0;\n}\ntemplate <typename T>\ninline bool check_max(T& a, T b) {\n  if (a < b) return a = b, 1;\n  return 0;\n}\nstruct Problem {\n  Problem(bool multitest = 0) {\n    read();\n    if (!multitest) solve();\n  }\n  void solve(), read();\n};\nsigned main() {\n  fast();\n  Problem(1);\n  return 0;\n}\ni64 a, b, q;\ni64 gcd(i64 a, i64 b) {\n  while (b != 0) {\n    a %= b;\n    swap(a, b);\n  }\n  return a;\n}\ni64 lcm(i64 a, i64 b) { return a * b / gcd(a, b); }\nvoid Problem::solve() {\n  i64 from = max(a, b);\n  i64 to = lcm(a, b);\n  for (i64 i = 0; i < q; i++) {\n    i64 l, r;\n    cin >> l >> r;\n    i64 dl = (l - 1) / to;\n    i64 countl = dl * (to - from);\n    if ((l - 1) % to >= from) countl += (l - 1) % to - from + 1;\n    i64 dr = r / to;\n    i64 countr = dr * (to - from);\n    if (r % to >= from) countr += r % to - from + 1;\n    i64 ans = countr - countl;\n    cout << ans << \"\\n\";\n  }\n}\nvoid Problem::read() {\n  i64 tests;\n  cin >> tests;\n  while (tests--) {\n    cin >> a >> b >> q;\n    solve();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class one {\n\n\tpublic static void main(String[] args) throws IOException, FileNotFoundException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\t//BufferedReader in = new BufferedReader(new FileReader(\"one\"));\n\n\t\tint t = Integer.parseInt(in.readLine());\n\t\tfor (int j = 0; j < t; j++) {\n\t\t\tStringTokenizer st = new StringTokenizer(in.readLine());\n\t\t\tint a = Integer.parseInt(st.nextToken());\n\t\t\tint b = Integer.parseInt(st.nextToken()); \n\t\t\tint q = Integer.parseInt(st.nextToken());\n\t\t\t\n\t\t\tArrayList<Integer> uptolcm = new ArrayList<>();\n\t\t\tlong lcm = lcm(a, b);\n\t\t\tuptolcm.add(0);\n\t\t\tfor (int i = 1; i < lcm; i++) {\n\t\t\t\tif (((i % b)%a) != ((i % a) %b)) {\n\t\t\t\t\tuptolcm.add(uptolcm.get(i-1)+1);\n\t\t\t\t}\n\t\t\t\telse uptolcm.add(uptolcm.get(i-1));\n\t\t\t}\n\t\t\tArrayList<Long> ans = new ArrayList<>();\n\t\t\tfor (int i = 0; i < q; i++) {\n\t\t\t\tst = new StringTokenizer(in.readLine());\n\t\t\t\tlong l = Long.parseLong(st.nextToken());\n\t\t\t\tlong r = Long.parseLong(st.nextToken());\t\t\t\t\n\t\t\t\t\n\t\t\t\tlong total = (r/lcm) * uptolcm.get(uptolcm.size()-1) + uptolcm.get((int)(r % lcm));\n\t\t\t\ttotal -= ((l-1)/lcm) * uptolcm.get(uptolcm.size()-1) + uptolcm.get((int)((l-1) % lcm));\n\t\t\t\t\t\t\n\t\t\t\tif (a == b) total = 0;\n\t\t\t\tans.add(total);\n\t\t\t}\n\t\t\tfor (int i = 0; i < q; i++) {\n\t\t\t\tSystem.out.print(ans.get(i) + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\t\n\tpublic static int gcd(int a, int b) { \n        if (a == 0) return b; \n        if (b == 0) return a; \n        return gcd(b, a%b); \n    } \n\t\n\tpublic static int lcm(int a, int b) { \n        return (a*b)/gcd(a, b); \n    } \n}\n"
        },
        {
            "language": 3,
            "solution": "##############--->>>>> Deepcoder Amit Kumar Bhuyan <<<<<---##############\n\n\"\"\"\n Perfection is achieved not when there is nothing more to add, but rather when there is nothing more to take away.\n\"\"\"\nfrom __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii():  return int(input())\ndef si():  return input()\ndef mi():  return map(int,input().strip().split(\" \"))\ndef msi(): return map(str,input().strip().split(\" \"))\ndef li():  return list(mi())\n \ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import log,sqrt,factorial,cos,tan,sin,radians\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *\n#import threading\n#from itertools import permutations\n#Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\nimport sys\ninput = sys.stdin.readline\nscanner = lambda: int(input())\nstring = lambda: input().rstrip()\nget_list = lambda: list(read())\nread = lambda: map(int, input().split())\nget_float = lambda: map(float, input().split())\n# from bisect import bisect_left as lower_bound;\n# from bisect import bisect_right as upper_bound;\n# from math import ceil, factorial;\n\n \ndef ceil(x):\n    if x != int(x):\n        x = int(x) + 1\n    return x\n \ndef factorial(x, m):\n\tval = 1\n\twhile x>0:\n\t\tval = (val * x) % m\n\t\tx -= 1\n\treturn val\n\ndef fact(x):\n\tval = 1\n\twhile x > 0:\n\t\tval *= x\n\t\tx -= 1\n\treturn val\n    \n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n \n## gcd function\ndef gcd(a,b):\n    if b == 0:\n        return a;\n    return gcd(b, a % b);\n\n## lcm function\ndef lcm(a, b):\n\treturn (a * b) // math.gcd(a, b)\n\ndef is_integer(n):\n\treturn math.ceil(n) == math.floor(n)\n \n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n\tif k > n:\n\t\treturn 0\n\tif(k > n - k):\n\t\tk = n - k\n\tres = 1\n\tfor i in range(k):\n\t\tres = res * (n - i)\n\t\tres = res / (i + 1)\n\treturn int(res)\n \n## upper bound function code -- such that e in a[:i] e < x;\n\n \n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0 and n > 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0 and n > 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n \n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n \n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b;\n \n# find function with path compression included (recursive)\n# def find(x, link):\n#     if link[x] == x:\n#         return x\n#     link[x] = find(link[x], link);\n#     return link[x];\n \n# find function with path compression (ITERATIVE)\ndef find(x, link):\n    p = x;\n    while( p != link[p]):\n        p = link[p];\n    \n    while( x != p):\n        nex = link[x];\n        link[x] = p;\n        x = nex;\n    return p;\n \n \n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n \n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    prime[0], prime[1] = False, False\n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n# Euler's Toitent Function phi\ndef phi(n) : \n  \n    result = n \n    p = 2\n    while(p * p<= n) : \n        if (n % p == 0) : \n            while (n % p == 0) : \n                n = n // p \n            result = result * (1.0 - (1.0 / (float) (p))) \n        p = p + 1\n    if (n > 1) : \n        result = result * (1.0 - (1.0 / (float)(n))) \n   \n    return (int)(result) \n\ndef is_prime(n):\n\tif n == 0:\n\t\treturn False\n\tif n == 1:\n\t\treturn True\n\tfor i in range(2, int(n ** (1 / 2)) + 1):\n\t\tif not n % i:\n\t\t\treturn False\n \n\treturn True\n\ndef next_prime(n, primes):\n\twhile primes[n] != True:\n\t\tn += 1\n\treturn n\n\n \n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e5 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n \n################## un-comment below 2 lines when using factorization #################\nspf = [0 for i in range(MAXN)]\n# spf_sieve();\ndef factoriazation(x):\n    res = []\n    for i in range(2, int(x ** 0.5) + 1):\n    \twhile x % i == 0:\n    \t\tres.append(i)\n    \t\tx //= i\n    if x != 1:\n   \t\tres.append(x)\n    return res\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\ndef factors(n):\n\tres = []\n\tfor i in range(1, int(n ** 0.5) + 1):\n\t\tif n % i == 0:\n\t\t\tres.append(i)\n\t\t\tres.append(n // i)\n\treturn list(set(res))\n \n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()));\n \ndef float_array():\n    return list(map(float, input().strip().split()));\n \n## taking string array input\ndef str_array():\n    return input().strip().split();\n\ndef binary_search(low, high, w, h, n):\n\twhile low < high:\n\t\tmid = low + (high - low) // 2\n\t\t# print(low, mid, high)\n\t\tif check(mid, w, h, n):\n\t\t\tlow = mid + 1\n\t\telse:\n\t\t\thigh = mid\n\treturn low\n\n## for checking any conditions\ndef check(moves, n):\n\tval = (moves + 1) // 2\n\trem = moves - val\n\tsol = (val + 1) * (rem + 1)\n\treturn sol < n\n\t\n\n## for sorting according to second position\ndef sortSecond(val):\n\treturn val[1]\n\t\n\n \n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\nalphs = \"abcdefghijklmnopqrstuvwxyz\"\n \n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n \nfrom itertools import permutations\nimport math\nimport bisect as bis\nimport random\nimport sys\nimport collections as collect\nimport functools as fnt\n# from sys import stdout\n# import numpy as np\n\n\n\ndef solve():\n\ta, b, q = read()\n\tn = max(a, b)\n\tm = lcm(a, b)\n\tans = []\n\tfor i in range(q):\n\t\tl, r = read()\n\t\tans.append(r - l + 1 - (n * ((r // m) - (l // m) + 1) - min(n, l%m) - max(0, n - r%m - 1)))\n\tprint(*ans)\n\n\n\n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    # sys.stdin = open(\"input.txt\", \"r\")\n    # sys.stdout = open(\"output.txt\", \"w\")\n    t = scanner()\n    for i in range(t):\n    \tsolve()\n    #dmain()\n \n# Comment Read()\n\t# fin_time = datetime.now()\n# \tprint(\"Execution time (for loop): \", (fin_time-init_time))\n"
        },
        {
            "language": 3,
            "solution": "from math import *\n\nfor zz in range(int(input())):\n    a, b, q = map(int, input().split())\n    x = max(a, b)\n    y = min(a, b)\n    a = x\n    b = y\n    #print(a, b)\n    if a == b:\n        for i in range(q):\n            input()\n        print('0 ' * q)\n    else:\n        res = []\n        for xx in range(q):\n        #for l in range(1, 100):\n            #for r in range(l, 101):\n            #print(l, r)\n            l, r = map(int, input().split())\n            ans = r - l + 1\n            cb = (a * b)//gcd(a,b)\n            lb = l // cb\n            if l % cb > 0:\n                lb += 1\n            ub = (r - a + 1) // cb\n            #print(cb, lb, ub)\n            #print(ans)\n            ans -= a * max(0, (ub - lb + 1))\n            #print(ans, (ub + 1) * cb, min(r, (ub + 1)*cb + a - 1))\n            ans -= max(0, (lb - 1)*cb + a - 1 - max((lb - 1) * cb, l) + 1)\n            if (ub - lb) > -2: \n                ans -= max(0, min(r, (ub + 1)*cb + a - 1) - (ub + 1) * cb + 1)\n            x = max(ans, 0)\n            #x2 = 0\n            #for i in range(l, r + 1):\n            #    if ((i % a) % b) != ((i % b) % a):\n            #        x2 += 1\n            #if (x != x2):\n            #    print(l, r, x, x2)\n            res.append(x)\n                #res.append(ans)\n        print(*res)\n        \n"
        },
        {
            "language": 3,
            "solution": "pref = [0 for i in range(40005)]\n\ndef build(a, b):\n    l = a * b\n    for i in range(1, l + 1):\n        pref[i] = pref[i - 1]\n        if (i % a) % b != (i % b) % a:\n            pref[i] += 1\n    \ndef query(l):\n    ln = a * b\n    cnt = l // ln\n\n    rem = l % ln\n    return cnt * pref[ln] + pref[rem]\n\n\nt = int(input())\n\nfor i in range(t):\n    a, b, q = [int(x) for x in input().split()]\n\n\n    build(a, b)\n    for i in range(q):\n        l, r = [int(x) for x in input().split()]\n        print(query(r) - query(l - 1), end = ' ')\n    print()\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        FastReader input=new FastReader();\n        PrintWriter out=new PrintWriter(System.out);\n        int t=input.nextInt();\n        while(t-->0)\n        {\n            int a,b,q;\n            a=input.nextInt();\n            b=input.nextInt();\n            q=input.nextInt();\n            for(int i=0;i<q;i++)\n            {\n                long l=input.nextLong();\n                long r=input.nextLong();\n                int lcm=lcm(a,b);\n                int max=Math.max(a,b);\n                long count=0;\n                long x=l/lcm;\n                long ll=l/lcm;\n                ll=ll*lcm;\n                long ul=ll+max-1;\n                ll=Math.max(ll,l);\n                ul=Math.min(ul,r);\n                if(ll<=ul)\n                {\n                    count+=ul-ll+1;\n                }\n                long y=r/lcm;\n                if(y>x)\n                {\n                    ll=y;\n                    ll=ll*lcm;\n                    ul=ll+max-1;\n                    ll=Math.max(ll,l);\n                    ul=Math.min(ul,r);\n                    if(ll<=ul)\n                    {\n                        count+=ul-ll+1;\n                    }\n                }\n                x++;\n                y--;\n                if(x<=y)\n                {\n                    count+=(y-x+1)*max;\n                }\n                out.print(((r-l+1)-count)+\" \");\n            }\n            out.println();\n        }\n        out.close();\n    }\n    static int gcd(int a, int b)\n    {\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    // method to return LCM of two numbers\n    static int lcm(int a, int b)\n    {\n        return (a / gcd(a, b)) * b;\n    }\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long p[40009];\nlong long a, b;\nlong long cnt(long long x) {\n  return (p[a * b - 1] * (x / (a * b)) + p[x % (a * b)]);\n}\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long q, l, r;\n    cin >> a >> b >> q;\n    p[0] = 0;\n    for (int i = 1; i < (a * b); i++) {\n      p[i] = p[i - 1];\n      if (((i % a) % b) != ((i % b) % a)) p[i]++;\n    }\n    while (q--) {\n      cin >> l >> r;\n      if (a == b)\n        cout << 0 << \" \";\n      else\n        cout << cnt(r) - cnt(l - 1) << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\n\ndef main():\n    t = int(input())\n    while t > 0:\n        a, b, q = input().split(' ')\n        a = int(a)\n        b = int(b)\n        q = int(q)\n        if a > b:\n            a, b = b, a\n        gc = math.gcd(a, b)\n        lc = a * b // gc\n        cnt = 0\n        for i in range(0, lc):\n            if i % a % b == i % b % a:\n                cnt += 1\n        while q > 0:\n            q -= 1\n            l, r = input().split()\n            l = int(l)\n            r = int(r)\n            ans = int(r - l + 1)\n            if l % lc < cnt:\n                ans -= min(cnt - l % lc, r - l + 1)\n            l += lc - l % lc\n            if l > r:\n                print(ans, end=' ')\n                continue\n            ans -= (r - l + 1) // lc * cnt\n            ans -= min(cnt, ((r - l + 1) % lc))\n            print(ans, end=' ')\n        print()\n        t -= 1\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lec(long long a, long long b) { return (a * b) / gcd(a, b); }\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    if (a < b) {\n      swap(a, b);\n    }\n    long long lcm = lec(a, b);\n    for (int i = 0; i < q; i++) {\n      long long l, r;\n      cin >> l >> r;\n      if (a == b) {\n        cout << \"0 \";\n        continue;\n      }\n      long long res = 0;\n      long long l1 = (l / lcm);\n      long long r1 = (r / lcm);\n      if (r1 == l1) {\n        if (l1 * lcm + a > l) {\n          res += min(l1 * lcm + a - l, r - l + 1);\n        }\n      } else {\n        res += (r1 - l1) * a;\n        if (l > l1 * lcm) {\n          res -= min(l - l1 * lcm, a);\n        }\n        if (r >= r1 * lcm) {\n          res += min(a, r - r1 * lcm + 1);\n        }\n      }\n      long long k = r - l + 1 - res;\n      cout << k << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#a,b=map(int,input().split())\n#k=0\n#i=0\n#l=1\n#r=10000\n#while(l<=r):\n#    if((l%a)%b != (l%b)%a):\n#        k+=1\n#    else:\n#        print((l%a)%b,l)\n#        i+=1\n#    l+=1\n#print(k,i)\ndef f(a,b,r):\n    d=GCD(a,b)\n    m=a*b//d\n    p=(r%m)\n    if d == min(a,b):\n        return 0\n    if p>max(a,b)-1:\n        p-=max(a,b)-1\n    else:\n        p=0\n    return (r//m)*(m-max(a,b)) + p \n\ndef GCD(a,b):\n    while(a!=0 and b!=0):\n        if a<b:\n            b%=a\n        else:\n            a%=b\n    return a+b\n\nt=int(input())\nfor  i in range(t):\n    a,b,q=map(int,input().split())\n    for j in range(q):\n        l,r=map(int,input().split())\n        if l==1:\n            print(f(a,b,r),end=\" \")\n        else:\n            print(f(a,b,r)-f(a,b,l-1),end=\" \")\n    print()\n\n#print(f(7,10,200))\n#print(f(7,10,100))\n\n"
        },
        {
            "language": 3,
            "solution": "#\u8a2d\u5b9a\nimport sys\ninput = sys.stdin.buffer.readline\n\n#\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom collections import defaultdict\nfrom fractions import gcd\n\ncon = 10 ** 9 + 7\n#\u5165\u529b\u53d7\u3051\u53d6\u308a\ndef getlist():\n\treturn list(map(int, input().split()))\n\n#\u51e6\u7406\u5185\u5bb9\ndef main():\n\tt = int(input())\n\tfor _ in range(t):\n\t\ta, b, q = getlist()\n\t\t#\u524d\u51e6\u7406\n\t\tGCD = gcd(a, b)\n\t\tLCM = int(a * b // GCD)\n\t\tL = [0] * (LCM + 1)\n\t\tfor i in range(LCM):\n\t\t\tif (i % a) % b != (i % b) % a:\n\t\t\t\tL[i + 1] = 1\n\t\tfor i in range(LCM):\n\t\t\tL[i + 1] += L[i]\n\t\t# print(L)\n\n\t\tansL = [0] * q\n\t\tfor i in range(q):\n\t\t\tl, r = getlist()\n\t\t\tx = int(l // LCM)\n\t\t\tp = l % LCM\n\t\t\ty = int(r // LCM)\n\t\t\tq = r % LCM\n\t\t\tans = (y - x) * L[-1] + L[q + 1] - L[p]\n\t\t\tansL[i] = ans\n\n\t\tprint(\" \".join(list(map(str, ansL))))\n\n\nif __name__ == '__main__':\n\tmain()"
        },
        {
            "language": 1,
            "solution": "from fractions import gcd\nt=input()\n\nfor i in range(t):\n    a,b,q=map(int,raw_input().split())\n    lcm=(a*b)/gcd(a,b)\n    mini=min(a,b)\n    maxi=max(a,b)\n    for i in range(q):\n\n        l,r=map(int,raw_input().split())\n        p=l/lcm  \n        q=r/lcm\n        d=q-p\n        \n        \n        #print d,maxi\n        ans=r-l+1-d*(maxi)\n        \n        l=l%lcm\n        r=r%lcm\n        #print ans\n        if maxi>l:\n            ans-=maxi-l\n\n        if maxi>r:\n            ans+=maxi-r-1\n\n        print ans,\n    print"
        },
        {
            "language": 3,
            "solution": "import math\n\nT = int(input())\n\nfor _ in range(T):\n\ta, b, q = [int(v) for v in input().split(' ')]\n\tlcm = a // math.gcd(a, b) * b\n\tif b > a:\n\t\ta, b = b, a\n\tfor _ in range(q):\n\t\tl, r = [int(v) for v in input().split(' ')]\n\t\t#bf = 0\n\t\t#for i in range(l, r + 1):\n\t\t#\tif (i % a) % b != (i % b) % a:\n\t\t#\t\tbf += 1\n\t\t\n\t\tnl = l // lcm\n\t\tnr = r // lcm\n\t\tans = (nr - nl - 1) * (lcm - a)\n\t\tans += max((r % lcm) - a + 1, 0)\n\t\tans += lcm - max(l % lcm, a)\n\t\t#print(nl, nr, max((r % lcm) - a, 0), lcm - max(l % lcm, a))\n\t\tprint(ans)\n\t\t#assert bf == ans\n"
        },
        {
            "language": 4,
            "solution": "//package codeforces.contests.eduround86;\n\nimport java.io.*;\nimport java.util.*;\n\n/**\n * @author tainic on Apr 26, 2020\n */\npublic class C {\n\n    private static boolean LOCAL;\n    static {\n        try { LOCAL = \"aurel\".equalsIgnoreCase(System.getenv().get(\"USER\")); } catch (Exception e){}\n    }\n\n    private static final String TEST = gen();\n\n    private static String gen() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(100).append(\"\\n\");\n        for (int i = 0; i < 100; i++) {\n            sb.append(143 + \" \" + 72 + \" \" + 500 + \"\\n\");\n            for (int j = 0; j < 500; j++) {\n                sb.append(439 + \" \" + 2000000000 + \"\\n\");\n            }\n        }\n        return sb.toString();\n    }\n        /*\"2\\n\" +\n        \"4 6 5\\n\" +\n        \"1 1\\n\" +\n        \"1 3\\n\" +\n        \"1 5\\n\" +\n        \"1 7\\n\" +\n        \"1 9\\n\" +\n        \"7 10 2\\n\" +\n        \"7 8\\n\" +\n        \"100 200\";*/\n\n    void solve(InputReader in, PrintWriter out) {\n        int t = in.nextInt();\n        while (t-- > 0) {\n            long a = in.nextLong();\n            long b = in.nextLong();\n            int q = in.nextInt();\n\n            long[] dxy = extendedGcd(a, b);\n            long z = a / dxy[0] * b;\n\n            Set<Long> x0s = new HashSet<>();\n            for (int k1 = 0; k1 < a; k1++) {\n                for (int k2 = 0; k2 < b; k2++) {\n                    if (k1 % dxy[0] != k2 % dxy[0]) continue;\n\n                    if (k1 % b != k2 % a) {\n                        x0s.add(x0(k1, a, k2, b, dxy, z));\n                    }\n                }\n            }\n\n\n            Set<Long> y0s = new HashSet<>();\n            boolean useY = false;\n            if (x0s.size() > z / 2) {\n                useY = true;\n                for (int i = 0; i < z; i++) {\n                    if (!x0s.contains((long)i)) y0s.add((long) i);\n                }\n            }\n\n            /*System.out.println(\"z=\"+z);\n            System.out.println(x0s.size());\n            System.out.println(y0s.size());*/\n\n            while (q-- > 0) {\n                long L = in.nextLong();\n                long R = in.nextLong();\n                long ans = 0;\n\n                if (!useY) {\n                    for (long x0 : x0s) {\n                        ans += ff(L, R, x0, z);\n                    }\n                } else {\n                    ans = R- L +1;\n                    for (long y0 : y0s) {\n                        ans -= ff(L, R, y0, z);\n                    }\n                }\n                out.print(ans + (q > 0 ? \" \" : \"\"));\n            }\n            out.println();\n        }\n    }\n\n    private long ff(long L, long R, long x0, long z) {\n        if (x0 > R) return 0;\n        long c1 = (L <= x0) ? 0 : (L - x0) / z + ((L - x0) % z > 0 ? 1 : 0);\n        long c2 = (R - x0) / z;\n        return c2 - c1 + 1;\n    }\n\n    private long f(long L, long R, long a, long b) {\n        long ans = 0;\n        for (int k1 = 0; k1 < a; k1++) {\n            for (int k2 = 0; k2 < b; k2++) {\n                if (k1 % b != k2 % a) {\n                    ans += g(L, R, k1, a, k2, b);\n                    /*if (g(L, R, k1, a, k2, b) != g2(L, R, k1, a, k2, b)) {\n                        System.out.println(L + \" \" + R + \" \" + k1 +\" \"+ a+\" \"+ k2+\" \"+ b);\n                        g(L, R, k1, a, k2, b);\n                        g2(L, R, k1, a, k2, b);\n                    }*/\n                }\n            }\n        }\n        return ans;\n    }\n\n    private long g2(long L, long R, long k1, long a, long k2, long b) {\n        long x = L;\n        long ans = 0;\n        while (x <= R) {\n            if (x % a == k1 && x % b == k2) {\n                ans++;\n            }\n            x++;\n        }\n        return ans;\n    }\n\n    private long g(long L, long R, long k1, long a, long k2, long b) {\n        long[] dxy = extendedGcd(a, b);\n        if (k1 % dxy[0] != k2 % dxy[0]) return 0;\n        long z = a / dxy[0] * b;\n        long x0 = ((k1 * dxy[2] * b + k2 * dxy[1] * a) / dxy[0]);\n        if (x0 < 0) x0 += z * (-x0 / z + 1);\n        x0 %= z;\n        if (x0 > R) return 0;\n        long c1 = (L <= x0) ? 0 : (L - x0) / z + ((L - x0) % z > 0 ? 1 : 0);\n        long c2 = (R - x0) / z;\n        return c2 - c1 + 1;\n    }\n\n    private long x0(long k1, long a, long k2, long b, long[] dxy, long z) {\n        long x0 = ((k1 * dxy[2] * b + k2 * dxy[1] * a) / dxy[0]);\n        if (x0 < 0) x0 += z * (-x0 / z + 1);\n        x0 %= z;\n        return x0;\n    }\n\n    /**\n     * Returns [d, x, y], where\n     *   d = gcd(a, b)\n     *   a * x + b * y = d\n     */\n    public static long[] extendedGcd(long a, long b) {\n        // d = gcd(a, b) = a * x + b * y\n        //   = gcd(b, a % b) = b * x' + (a % b) * y' = b * x' + (a - b * (a / b)) * y' = a * y' + b(x' - (a / b) * y')\n        // => x = y'\n        //    y = x' - (a / b) * y'\n        if (b == 0) {\n            return new long[]{a, 1, 0};\n        } else {\n            long[] dxy = extendedGcd(b, a % b);\n            return new long[]{dxy[0], dxy[2], dxy[1] - (a / b) * dxy[2]};\n        }\n    }\n\n    //region util\n    static class Util {\n\n        private static final Random R = new Random();\n\n        public static void sort(int[] a) {\n            sort(a, 0, a.length - 1);\n        }\n\n        private static void sort(int[] a, int from, int to) {\n            if (from >= to) {\n                return;\n            }\n\n            // partition\n            int pivotIndex = R.nextInt(to - from + 1) + from;\n            int pivot = a[pivotIndex];\n            // maintain this invariant, at each step i:\n            // a[j] <  pivot, for j = fromIndex to lt - 1\n            // a[j] == pivot, for j = lt to i - 1\n            // a[j] >  pivot, for j = gt + 1 to toIndex\n            int lt = from;\n            int gt = to;\n            int i = lt;\n            while (i <= gt) {\n                int cmp = a[i] - pivot;\n                if (cmp < 0) {\n                    swap(a, i, lt);\n                    i++;\n                    lt++;\n                } else if (cmp > 0) {\n                    swap(a, i, gt);\n                    gt--;\n                } else {\n                    i++;\n                }\n            }\n\n            // sort left and right\n            sort(a, from, lt - 1);\n            sort(a, gt + 1, to);\n        }\n\n        public static int findFirst(int[] a, int key) {\n            return findFirstOrLast(a, key, 0, a.length - 1, -1);\n        }\n\n        public static int findLast(int[] a, int key) {\n            return findFirstOrLast(a, key, 0, a.length - 1, 1);\n        }\n\n        static int findFirstOrLast(int[] a, int key, int fromIndex, int toIndex, int dir) {\n            int left = fromIndex;\n            int right = toIndex;\n            while (left <= right) {\n                int mid = (left + right) >>> 1;\n                int cmp = key - a[mid];\n                if (cmp > 0) {\n                    left = mid + 1;\n                } else if (cmp < 0) {\n                    right = mid - 1;\n                } else if (dir == -1 && mid > fromIndex && a[mid - 1] == key) {\n                    right = mid - 1;\n                } else if (dir == 1 && mid < toIndex && a[mid + 1] == key) {\n                    left = mid + 1;\n                } else {\n                    return mid;\n                }\n            }\n            return -left - 1;\n        }\n\n        public static int findFirst(long[] a, long key) {\n            return findFirstOrLast(a, key, 0, a.length - 1, -1);\n        }\n\n        public static int findLast(long[] a, long key) {\n            return findFirstOrLast(a, key, 0, a.length - 1, 1);\n        }\n\n        static int findFirstOrLast(long[] a, long key, int fromIndex, int toIndex, int dir) {\n            int left = fromIndex;\n            int right = toIndex;\n            while (left <= right) {\n                int mid = (left + right) >>> 1;\n                int cmp = Long.compare(key,a[mid]);\n                if (cmp > 0) {\n                    left = mid + 1;\n                } else if (cmp < 0) {\n                    right = mid - 1;\n                } else if (dir == -1 && mid > fromIndex && a[mid - 1] == key) {\n                    right = mid - 1;\n                } else if (dir == 1 && mid < toIndex && a[mid + 1] == key) {\n                    left = mid + 1;\n                } else {\n                    return mid;\n                }\n            }\n            return -left - 1;\n        }\n\n        public static <T extends Comparable<T>> int findFirst(List<T> a, T key) {\n            return findFirstOrLast(a, key, 0, a.size() - 1, -1);\n        }\n\n        public static <T extends Comparable<T>> int findLast(List<T> a, T key) {\n            return findFirstOrLast(a, key, 0, a.size() - 1, 1);\n        }\n\n        static <T extends Comparable<T>> int findFirstOrLast(List<T> a, T key, int fromIndex, int toIndex, int dir) {\n            int left = fromIndex;\n            int right = toIndex;\n            while (left <= right) {\n                int mid = (left + right) >>> 1;\n                int cmp = key.compareTo(a.get(mid));\n                if (cmp > 0) {\n                    left = mid + 1;\n                } else if (cmp < 0) {\n                    right = mid - 1;\n                } else if (dir == -1 && mid > fromIndex && a.get(mid - 1) == key) {\n                    right = mid - 1;\n                } else if (dir == 1 && mid < toIndex && a.get(mid + 1) == key) {\n                    left = mid + 1;\n                } else {\n                    return mid;\n                }\n            }\n            return -left - 1;\n        }\n\n        public static void swap(int[] a, int i, int j) {\n            if (i != j) {\n                int ai = a[i];\n                a[i] = a[j];\n                a[j] = ai;\n            }\n        }\n\n        public static int[] readInts(InputReader in, int k) {\n            int[] a = new int[k];\n            for (int i = 0; i < k; i++) {\n                a[i] = in.nextInt();\n            }\n            return a;\n        }\n\n    }\n    //endregion\n\n    //region main\n    public static void main(String[] args) throws Exception {\n        long t = System.currentTimeMillis();\n\n        try (\n            InputReader in = new StreamInputReader(!LOCAL ? System.in : new ByteArrayInputStream(TEST.getBytes()));\n            PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out, 2048), false)\n        ) {\n            new C().solve(in, out);\n        }\n\n        System.err.println(\"time: \" + (System.currentTimeMillis() - t) + \"ms\");\n    }\n    //endregion\n\n    //region fast io\n    abstract static class InputReader implements AutoCloseable {\n\n        public abstract int read();\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n\n    static class StreamInputReader extends InputReader {\n\n        private InputStream stream;\n        private byte[] buf;\n        private int curChar, numChars;\n\n        public StreamInputReader(InputStream stream) {\n            this(stream, 2048);\n        }\n\n        public StreamInputReader(InputStream stream, int bufSize) {\n            this.stream = stream;\n            this.buf = new byte[bufSize];\n        }\n\n        @Override\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        @Override\n        public void close() throws Exception {\n            stream.close();\n        }\n\n    }\n    //endregion\n\n    //region imports\n    //endregion\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b, x, arr[40002], i, c = 0, mul;\n    cin >> a >> b >> x;\n    mul = a * b;\n    for (i = 1; i <= a * b; i++) {\n      if ((i % a) % b != (i % b) % a) c++;\n      arr[i] = c;\n    }\n    arr[0] = 0;\n    while (x--) {\n      c = 0;\n      long long p1, p2, total, per, rem, p, sum, f1, f2;\n      cin >> p1 >> p2;\n      f1 = (p1 - 1) / mul + 1;\n      f1 *= mul;\n      f2 = p2 / mul;\n      f2 *= mul;\n      sum = (f2 - f1) / mul * arr[mul];\n      if (f1 != p1) sum += arr[mul] - arr[p1 % mul - 1];\n      if (f2 != p2) sum += arr[p2 - f2];\n      cout << sum << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing lli = long long int;\nusing vi = vector<int>;\nusing vll = vector<long long int>;\nint pref[500001];\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    int A, B, Q;\n    cin >> A >> B >> Q;\n    pref[0] = 0;\n    for (int i = 1; i < (A * B); i++) {\n      pref[i] = pref[i - 1];\n      if ((i % A) % B != (i % B) % A) {\n        pref[i]++;\n      }\n    }\n    while (Q--) {\n      lli L, R;\n      cin >> L >> R;\n      int len = A * B;\n      lli tillR = (R / len) * pref[len - 1] + pref[R % len];\n      L--;\n      lli tillL = (L / len) * pref[len - 1] + pref[L % len];\n      cout << tillR - tillL << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    prefix=[0]*(a*b+2)\n    v=[]\n    for i in range(1,a*b):\n        if ((i%a)%b)!=((i%b)%a):\n            v.append(i)\n            prefix[i]=prefix[i-1]+1\n        else:\n            prefix[i]=prefix[i-1]\n            \n    for _ in range(q):\n        l,r=map(int,input().split())\n        \n        l_grp=l//(a*b)\n        r_grp=r//(a*b)\n        ans=(r_grp-l_grp+1)*prefix[a*b-1]\n        ans-=prefix[a*b-1]-prefix[r%(a*b)]\n        if l%(a*b)!=0:\n            ans-=prefix[l%(a*b)-1]\n        print(ans,end=\" \")\n    print()"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nfrom math import gcd\n\n\ndef lcm(a, b):\n    return abs(a*b) // gcd(a, b)\n\n\ndef solution(a, b, mx):\n    if a < b:\n        a, b = b, a\n\n    major = mx // lcm(a, b) * a\n    minor = min(mx % lcm(a, b), a - 1)\n\n    return mx - (major + minor)\n\n\nn_test = int(input())\n\nfor _ in range(n_test):\n    a, b, q = map(int, input().split())\n\n    for _ in range(q):\n        l, r = map(int, input().split())\n        print(solution(a, b, r) - solution(a, b, l - 1), end=\" \")\n    print()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class c>\nstruct rge {\n  c b, e;\n};\ntemplate <class c>\nrge<c> range(c i, c j) {\n  return rge<c>{i, j};\n}\ntemplate <class c>\nauto dud(c *x) -> decltype(cerr << *x, 0);\ntemplate <class c>\nchar dud(...);\nstruct debug {\n  template <class c>\n  debug &operator<<(const c &) {\n    return *this;\n  }\n};\ninline int two(int n) { return 1 << n; }\ninline int test(int n, int b) { return (n >> b) & 1; }\ninline void set_bit(int &n, int b) { n |= two(b); }\ninline void unset_bit(int &n, int b) { n &= ~two(b); }\ninline int last_bit(int n) { return n & (-n); }\ninline int ones(int n) {\n  int res = 0;\n  while (n && ++res) n -= n & (-n);\n  return res;\n}\nconst double pi = acos(-1);\nint cmp(double x, double y = 0, double tol = 1e-9) {\n  return (x <= y + tol) ? (x + tol < y) ? -1 : 0 : 1;\n}\ntemplate <class T>\nbool uin(T &a, T b) {\n  return a > b ? (a = b, true) : false;\n}\ntemplate <class T>\nbool uax(T &a, T b) {\n  return a < b ? (a = b, true) : false;\n}\nint main() {\n  int TC;\n  scanf(\"%d\", &TC);\n  while (TC--) {\n    int a, b, q;\n    scanf(\"%d%d%d\", &a, &b, &q);\n    vector<int> V(a * b + 1);\n    for (int num = 1; num <= int(a * b); num++) {\n      if ((num % a) % b != (num % b) % a) V[num]++;\n      V[num] += V[num - 1];\n    }\n    while (q--) {\n      long long l, r;\n      scanf(\"%lld%lld\", &l, &r);\n      l--;\n      int ab = a * b;\n      long long ans = (r / ab) * V[ab] + V[r % ab];\n      ans -= ((l / ab) * V[ab] + V[l % ab]);\n      printf(\"%lld \", ans);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> marr(400000);\nlong long a, b, q;\nlong long summ(long long bruh) {\n  long long res = (bruh / (a * b)) * marr[a * b] + marr[bruh % (a * b)];\n  return res;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int notc;\n  cin >> notc;\n  while (notc--) {\n    cin >> a >> b >> q;\n    for (int i = 0; i < a * b; i++) {\n      marr[i] = 0;\n    }\n    for (int i = 0; i < a * b; i++)\n      marr[i + 1] = marr[i] + (((i % a) % b) != ((i % b) % a));\n    while (q--) {\n      long long li, ri;\n      cin >> li >> ri;\n      cout << (summ(ri + 1) - summ(li)) << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int mod = 1e9 + 7;\nconst int N = 40043;\nint len;\nint p[N];\nvoid builds(int a, int b) {\n  len = a * b;\n  p[0] = 0;\n  for (int i = 1; i <= len; i++) {\n    p[i] = p[i - 1];\n    if ((i % a) % b != (i % b) % a) p[i]++;\n  }\n}\nlong long query(long long l) {\n  long long cnt = l / len;\n  int rem = l % len;\n  return p[len] * 1ll * cnt + p[rem];\n}\nlong long query(long long l, long long r) { return query(r) - query(l - 1); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    builds(a, b);\n    long long l, r;\n    for (int j = 0; j < q; j++) {\n      cin >> l >> r;\n      cout << query(l, r) << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\n\npublic class Codeforces {\n\n    static Scanner sc = new Scanner(System.in);\n\n    static Long gcd(Long a, Long b) {\n        if(b == 0) return a;\n        return gcd(b,a%b);\n    }\n\n    static Long getCount(Long lim, Long period, Long range) {\n        long ans = 0L;\n        long blocks = lim/period;\n        ans += blocks*range;\n        long last = blocks*period;\n        ans += Math.min(last+range-1,lim)-last+1;\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        int t = sc.nextInt();\n\n        for(int i=0;i<t;i++) {\n            long a,b;\n            int q;\n            a = sc.nextLong();\n            b = sc.nextLong();\n            q = sc.nextInt();\n            var lcm = (a*b)/gcd(a,b);\n            var max = Math.max(a,b);\n\n\n            for(int j=0;j<q;j++) {\n                long l,r;\n                l = sc.nextLong();\n                r = sc.nextLong();\n                var R = getCount(r,lcm,max);\n                var L = getCount(l-1,lcm,max);\n                var ans = r-l+1-(R-L);\n                System.out.print(ans);\n                if(j<q-1) System.out.print(\" \");\n                else System.out.println();\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CF1342C extends PrintWriter {\n\tCF1342C() { super(System.out); }\n\tScanner sc = new Scanner(System.in);\n\tpublic static void main(String[] $) {\n\t\tCF1342C o = new CF1342C(); o.main(); o.flush();\n\t}\n\n\tint gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\tvoid main() {\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint a = sc.nextInt();\n\t\t\tint b = sc.nextInt();\n\t\t\tint q = sc.nextInt();\n\t\t\tint m = a / gcd(a, b) * b;\n\t\t\tint[] kk = new int[m + 1];\n\t\t\tfor (int r = 0; r < m; r++)\n\t\t\t\tif (r % a % b != r % b % a)\n\t\t\t\t\tkk[r + 1]++;\n\t\t\tfor (int cnt = 1; cnt <= m; cnt++)\n\t\t\t\tkk[cnt] += kk[cnt - 1];\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong l = sc.nextLong();\n\t\t\t\tlong r = sc.nextLong() + 1;\n\t\t\t\tint l_ = (int) (l % m);\n\t\t\t\tint r_ = (int) (r % m);\n\t\t\t\tlong kl = l / m * kk[m] + kk[l_];\n\t\t\t\tlong kr = r / m * kk[m] + kk[r_];\n\t\t\t\tprint(kr - kl + \" \");\n\t\t\t}\n\t\t\tprintln();\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\nfrom math import sqrt, floor, factorial, gcd, log\nfrom collections import deque, Counter, defaultdict\nfrom bisect import bisect\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda: list(map(int, input().strip().split(\" \")))\n\n\ndef solve():\n    for _ in range(int(input())):\n        a, b, q = read()\n        _lcm = (a*b)//gcd(a, b)\n        b = max(a, b)\n        ans = []\n        for i in range(q):\n            l, r = read()\n            l-=1\n            left = l - (b-1 + ((l//_lcm)-1)*b + min(b, l%_lcm + 1))\n \n            right = r - (b-1 + ((r//_lcm)-1)*b + min(b, r%_lcm + 1))\n            # print(left, right, l, r, \"\\n\")\n            if r != l:\n                ans.append(right - left)# + [1, 0][l%_lcm < b ])\n            else:\n                ans.append(0)\n        print(*ans)\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n        \n\nif __name__ == \"__main__\":\n\tsolve()"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    a1,b1,q1=input().split(\" \")\n    a=int(a1)\n    b=int(b1)\n    q=int(q1)\n    m=max(a,b)\n    n=min(a,b)\n    lcm=0\n    k=(n // 2)\n    if (m % n==0):\n        lcm=m \n    else:\n        while (k>=1):\n            if (m % k==0 and n % k==0):\n                lcm=(m*n // k) \n                break\n            k=k-1 \n    for i in range(q):\n        l1,r1=input().split(\" \")\n        l=int(l1)\n        r=int(r1)\n        i=(l // lcm)\n        j=(r // lcm)\n        s=0\n        s=s+(max(0,j-i-1)*m )\n        if (i!=j):\n            if (l<=(i*lcm)+m-1):\n                s=s+(i*lcm)+m-l\n            if (r<=(j*lcm)+m-1):\n                s=s+r-(j*lcm)+1\n            if (r>(j*lcm)+m-1):\n                s=s+m \n        else:\n            if (l>(i*lcm)+m-1):\n                s=s\n            else:\n                s=s+min(r,(i*lcm)+m-1)-l+1 \n        print(r-l-s+1,end=\" \")\n    print()"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\n# input = stdin.readline\nfrom math import *\n# print = stdout.write\n\nfor __ in range(int(input())):\n\ta,b,q=map(int,input().split())\n\tar=[0]*a*b\n\tfor i in range(1,a*b):\n\t\tar[i]=ar[i-1]\n\t\tif(i%a%b!=i%b%a):\n\t\t\tar[i]+=1\n\t# print(len(ar))\n\t# print(ar)\n\trslt=[]\n\tfor i in range(q):\n\t\tl,r=map(int,input().split())\n\t\tans=r//(a*b)*ar[-1]+ar[r%(a*b)]\n\t\tans-=(l-1)//(a*b)*ar[-1]+ar[(l-1)%(a*b)]\n\t\trslt.append(ans)\n\tprint(*rslt)\n"
        },
        {
            "language": 3,
            "solution": "## necessary imports\nimport sys\ninput = sys.stdin.readline\nfrom math import log2, log, ceil\n\n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp\n\n## gcd function\ndef gcd(a,b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n    if(k > n - k): \n        k = n - k \n    res = 1\n    for i in range(k): \n        res = res * (n - i) \n        res = res / (i + 1) \n    return res \n\n## upper bound function code -- such that e in a[:i] e < x;\ndef upper_bound(a, x, lo=0):\n    hi = len(a)\n    while lo < hi:\n        mid = (lo+hi)//2\n        if a[mid] < x:\n            lo = mid+1\n        else:\n            hi = mid\n    return lo\n\n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n\n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p): \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n\n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b\n\n# find function\ndef find(x, link):\n    while(x != link[x]):\n        x = link[x]\n    return x\n\n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n\n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e6 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n\n################## un-comment below 2 lines when using factorization #################\n# spf = [0 for i in range(MAXN)] \n# spf_sieve() \ndef factoriazation(x):\n    ret = {};\n    while x != 1:\n        ret[spf[x]] = ret.get(spf[x], 0) + 1;\n        x = x//spf[x]\n    return ret\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()))\n## taking string array input\ndef str_array():\n    return input().strip().split();\n\n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\n\n\n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n\nfor _ in range(int(input())):\n    a,b,q = int_array();\n    lcm = (a*b)//gcd(a,b);\n    maxi = max(a,b); hsh = [];\n    for x in range(lcm):\n        if (x%a)%b == (x%b)%a:\n            hsh.append(0);\n        else:\n            hsh.append(1);\n    for i in range(1, lcm):\n        hsh[i] += hsh[i-1];\n    prd_cunt = hsh[-1];\n    for _ in range(q):\n        l, r = int_array();\n        l_ = l - l%lcm; r_ = r - r%lcm;\n        ans = ((r_ - l_)//lcm)*prd_cunt;\n        if l % lcm > 0:\n            ans -= hsh[l%lcm - 1];\n        ans += hsh[r%lcm];\n        print(ans, end = ' ');\n    print('\\n')"
        },
        {
            "language": 3,
            "solution": "import math\n \ndef check(a,b,k):\n\tg=math.gcd(a,b)\n\tl=(a*b)//g\n\ta,b=max(a,b),min(a,b)\n\tif g==b:\n\t\treturn 0\n\telse:\n\t    ans=(k//l)*(l-a)\n\t    k%=l\n\t   # print(k,l,g,ans)\n\t    ans+=max(k-a+1,0)\n\t   # print(k,l,g)\n\treturn ans\n\t\t\n \nfor i in range(int(input())):\n    a,b,q=map(int,input().split())\n    ans=[]\n    for i in range(q):\n        x,y=map(int,input().split())\n        print(check(a,b,y) - check(a,b,x-1),end=\" \")\n    print()    "
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import *\nfrom bisect import *\nfrom math import *\ninput=sys.stdin.readline\nt=int(input())\nwhile(t):\n    t-=1\n    a,b,q=map(int,input().split())\n    fac=(a*b)//gcd(a,b)\n    \"\"\"for i in range(1,201):\n        z=((i%a)%b)\n        z1=((i%b)%a)\n        if(z==z1):\n            print(i)\"\"\"\n    rrr=[]\n    for i in range(q):\n        s1=0\n        s2=0\n        l,r=map(int,input().split())\n        s=max(a,b)\n        if(l<s):\n            s1+=l\n        else:\n            s1+=s-1\n            q1=max(0,(l//(fac)))\n            if(q1!=0):\n                s1+=max(0,(q1-1))*(s)\n            if(q1!=0):\n                s1+=min(s,(l%(fac))+1)   \n        if(r<s):\n            s2+=r\n        else:\n            s2+=s-1\n            q2=max(0,(r//(fac)))\n            if(q2!=0):\n                s2+=max(0,q2-1)*(s)\n            if(q2!=0):\n                s2+=min(s,(r%(fac))+1)\n       # print(s1,s2)\n        s2=s2-s1\n        #print(s2)\n        if(((l%a)%b)==((l%b)%a)):\n            zz=1\n        else:\n            zz=0\n        rrr.append(r-l-s2+1-zz)\n        #print(rrr[-1])\n    print(*rrr)\n        \n            \n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef scanf():\n    return list(map(int,input().split()))\n\ndef f(p,a,b):\n    lcm = a*b//gcd(a,b)\n    res = (p//lcm)*(lcm-b) + max(0,p%lcm-b)\n    return res\n\nfor t in range(int(input())):\n    a,b,q = scanf()\n    if(a>b):\ta,b = b,a\n    for _ in range(q):\n        l,r = scanf()\n        if(b%a==0):\tprint('0')\n        else: \t\tprint( int(f(r+1,a,b)-f(l,a,b)) )"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    if b > a:\n        a, b = b, a\n    x = 0\n    for i in range(1, b+1):\n        if (i * a) % b == 0:\n            x = i\n            break\n\n    def cnt(n):\n        tmp = n // a\n        if tmp % x == 0:\n            return n + 1 - (tmp // x) * a - (n % a + 1)\n        else:\n            return n + 1 - (tmp // x + 1) * a\n\n\n    ans = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        ans.append(cnt(r) - cnt(l-1))\n\n    print(*ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n \nimport java.math.BigInteger;\n \npublic class test\n{\n\tpublic static long HCF(long a, long b)\n\t{\n\t\tif (a==0)\n\t\treturn b;\n\t\treturn HCF(b%a,a);\n\t}\n\tpublic static long LCM(long a, long b)\n\t{\n\t\tlong hcf = HCF(a,b);\n\t\treturn ((a*b)/hcf);\n\t}\n \n\tpublic static long find(long r, long lcm, long a, long b)\n\t{\n\t\tlong d = r/lcm - 1;\n \n\t\tlong var = (r/lcm);\n\t\tvar = lcm*var;\n\t\tlong sub3 = Math.min(Math.max(a,b), (r-var+1));\n \n\t\tlong sub1 = d*Math.max(a,b);\n\t\tlong sub2 = Math.max(a,b)-1;\n \n\t\t// System.out.println(sub1+\" \"+sub2+\" \"+sub3+\" \"+var+\" \"+lcm);\n \n\t\treturn (r-sub1-sub2-sub3);\n\t}\n \n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tint t=in.nextInt();\n\t\twhile(--t>=0)\n\t\t{\n\t\t\tlong a = in.nextLong();\n\t\t\tlong b = in.nextLong();\n \n\t\t\tint q = in.nextInt();\n \n\t\t\tlong lcm = LCM(a,b);\n\t\t\tStringBuilder str = new StringBuilder();\n\t\t\twhile(--q>=0)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tlong l =in.nextLong();\n\t\t\t\tlong r = in.nextLong();\n \n\t\t\t\tlong cnt1 = find(l-1,lcm, a, b);\n\t\t\t\tlong cnt2 = find(r,lcm, a, b);\n \n\t\t\t\t// System.out.println(cnt2-cnt1);\n\t\t\t\tstr.append((cnt2-cnt1)+\" \");\n\t\t\t}\n\t\t\tSystem.out.println(str);\n \n\t\t\t\n \n\t\t\t\n\t\t}\n \n\t\t\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\n\ndef solve(rf):\n    r1 = rf // b\n    ans = (r1 - (r1 - 1) // a) * b\n    if r1 % a:\n        ans += rf - r1 * b\n    return ans\n\n\ndef input_and_solve(_):\n    li, r = map(int, input().split())\n    return solve(r + 1) - solve(li)\n\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    # x % a % b != x % b % a <=> x % a != x % b % a <=> (x - x % b) % a <=> x // b * b % a\n    a //= gcd(a, b)\n    # x // b % a\n    print(*map(input_and_solve, range(q)))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class C {\n    static final boolean RUN_TIMING = false;\n    static PushbackReader in = new PushbackReader(new BufferedReader(new InputStreamReader(System.in)), 1024);\n    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\n    public void go() throws IOException {\n        // in = new PushbackReader(new BufferedReader(new FileReader(new File(\"test.txt\"))), 1024);\n        // out = new PrintWriter(new FileWriter(new File(\"output.txt\")));\n        int zzz = ipar();\n        for (int zz = 0; zz < zzz; zz++) {\n            int a = ipar();\n            int b = ipar();\n            int q = ipar();\n            int ab = a*b;\n            int[] prefix = new int[ab+1];\n            for (int i = 1; i <= ab; i++) {\n                prefix[i] = prefix[i-1];\n                if ((i-1) % a % b != (i-1) % b % a) {\n                    prefix[i]++;\n                }\n            }\n            // out.println(Arrays.toString(prefix));\n            for (int i = 0; i < q; i++) {\n                long l = lpar();\n                long r = lpar();\n                long lWhole = l / ab;\n                int lRem = (int)(l % ab);\n                long rWhole = r / ab;\n                int rRem = (int)(r % ab);\n                if (lWhole == rWhole) {\n                    out.print(prefix[rRem+1] - prefix[lRem]);\n                    out.print(\" \");\n                    continue;\n                }\n                long between = rWhole - lWhole - 1;\n                out.print(prefix[ab] - prefix[lRem] + prefix[rRem+1] + between * prefix[ab]);\n                out.print(\" \");\n            }\n            out.println();\n        }\n    }\n\n    public int ipar() throws IOException {\n        return Integer.parseInt(spar());\n    }\n\n    public int[] iapar(int n) throws IOException {\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = ipar();\n        }\n        return arr;\n    }\n\n    public long lpar() throws IOException {\n        return Long.parseLong(spar());\n    }\n\n    public long[] lapar(int n) throws IOException {\n        long[] arr = new long[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = lpar();\n        }\n        return arr;\n    }\n\n    public double dpar() throws IOException {\n        return Double.parseDouble(spar());\n    }\n\n    public String spar() throws IOException {\n        StringBuilder sb = new StringBuilder(1024);\n        int c;\n        do {\n            c = in.read();\n        } while (Character.isWhitespace(c) && c != -1);\n        if (c == -1) {\n            throw new NoSuchElementException(\"Reached EOF\");\n        }\n        do {\n            sb.append((char)c);\n            c = in.read();\n        } while (!Character.isWhitespace(c) && c != -1);\n        while (c != '\\n' && Character.isWhitespace(c) && c != -1) {\n            c = in.read();\n        }\n        if (c != -1 && c != '\\n') {\n            in.unread(c);\n        }\n        return sb.toString();\n    }\n\n    public String linepar() throws IOException {\n        StringBuilder sb = new StringBuilder(1024);\n        int c;\n        while ((c = in.read()) != '\\n' && c != -1) {\n            if (c == '\\r') {\n                continue;\n            }\n            sb.append((char)c);\n        }\n        return sb.toString();\n    }\n\n    public boolean haspar() throws IOException {\n        String line = linepar();\n        if (line.isEmpty()) {\n            return false;\n        }\n        in.unread('\\n');\n        in.unread(line.toCharArray());\n        return true;\n    }\n\n    public static void main(String[] args) throws IOException {\n        long time = 0;\n        time -= System.nanoTime();\n        new C().go();\n        time += System.nanoTime();\n        if (RUN_TIMING) {\n            System.out.printf(\"%.3f ms%n\", time/1000000.0);\n        }\n        out.flush();\n        in.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class cf1342c {\n    static BufferedReader __in;\n    static PrintWriter __out;\n    static StringTokenizer input;\n\n    public static void main(String[] args) throws IOException {\n        __in = new BufferedReader(new InputStreamReader(System.in));\n        __out = new PrintWriter(new OutputStreamWriter(System.out));\n        \n        int t = readInt();\n        while(t --> 0) {\n            read();\n            int a = nextInt(), b = nextInt(), q = nextInt();\n            /* if(a > b) {\n                int swap = a;\n                a = b;\n                b = swap;\n            }*/\n            long[] cyc = new long[a * b + 1];\n            for(int k = 1; k <= a * b; ++k) {\n                cyc[k] = cyc[k - 1];\n                if(((k - 1) % a) % b != ((k - 1) % b) % a) {\n                    ++cyc[k];\n                }\n            }\n            for(int i = 0; i < q; ++i) {\n                read();\n                long l = nextLong(), r = nextLong() + 1, lastM = r / (a * b) * (a * b), prevM = l / (a * b) * (a * b);\n                // if(lastM <= r && lastM > l) {\n                println(cyc[(int)(r - lastM)] + (lastM - prevM) / (a * b) * cyc[a * b] - cyc[(int)(l - prevM)]);\n                // } else {\n                //     assert lastM == prevM;\n                // println(cyc[(int)(r - prevM)] - cyc[(int)(l - prevM)]);\n                // }\n            }\n        }\n        \n        close();\n    }\n\n    static final int IBIG = 1000000007;\n    static final int IMAX = 2147483647;\n    static final long LMAX = 9223372036854775807L;\n    static void read() throws IOException {input = new StringTokenizer(__in.readLine());}\n    static String readLine() throws IOException {return __in.readLine();}\n    static int nextInt() {return Integer.parseInt(input.nextToken());}\n    static int readInt() throws IOException {return Integer.parseInt(__in.readLine());}\n    static long nextLong() {return Long.parseLong(input.nextToken());}\n    static void print(String s) {__out.print(s);}\n    static void println(String s) {__out.println(s);}\n    static void print(Object o) {__out.print(o);}\n    static void println(Object o) {__out.println(o);}\n    static void printy() {__out.println(\"Yes\");}\n    static void printY() {__out.println(\"YES\");}\n    static void printn() {__out.println(\"No\");}\n    static void printN() {__out.println(\"NO\");}\n    static void printyn(boolean b) {__out.println(b ? \"Yes\" : \"No\");}\n    static void printYN(boolean b) {__out.println(b ? \"YES\" : \"NO\");}\n    static void println(int... a) {for(int i = 0, len = a.length - 1; i < len; __out.print(a[i]), __out.print(' '), i++); __out.println(a[a.length - 1]);}\n    static void println(long... a) {for(int i = 0, len = a.length - 1; i < len; __out.print(a[i]), __out.print(' '), i++); __out.println(a[a.length - 1]);}\n    static void println() {__out.println();}\n    static void close() {__out.close();}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  unsigned long long int t, a, b, q, l, r, cnt, c;\n  cin >> t;\n  while (t--) {\n    vector<unsigned long long int> cont;\n    cin >> a >> b >> q;\n    int arr[40001] = {0};\n    c = a * b;\n    for (int i = 0; i < c; i++) {\n      if ((i % a) % b != (i % b) % a) arr[i] = 1;\n    }\n    unsigned long long int sum[40002];\n    sum[0] = 0;\n    for (int i = 1; i < c; i++) {\n      sum[i] = sum[i - 1] + arr[i];\n    }\n    while (q--) {\n      cin >> l >> r;\n      cnt = (r / c) * sum[a * b - 1];\n      cnt += sum[r % c];\n      cnt = cnt - ((l / c) * sum[c - 1]);\n      if (l % c == 0)\n        cnt = cnt - sum[l % c];\n      else\n        cnt -= sum[l % c - 1];\n      cont.push_back(cnt);\n    }\n    for (auto it : cont) cout << it << \" \";\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):  \n    if a == 0 : \n        return b  \n        \n    return gcd(b%a, a) \ndef lcm(a,b):\n    g=gcd(a,b)\n    return a*b//g\n\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    an=[];c=lcm(a,b)\n    #print(a,b,c)\n    mi=max(a,b)\n    for i in range(q):\n        l,r=map(int,input().split())\n        l=max(l,a,b)\n        if(l>r):\n            an.append(0)\n            continue\n        x=l//c;y=r//c\n        ans=(y-x)*mi+max(0,mi-l%c)-max(0,mi-r%c-1)\n        #print(ans)\n        temp=max(r-l-ans+1,0)\n        an.append(temp)\n        #print(temp)\n    print(*an)\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nt=int(input())\ndef fn(a, b, r):\n    lcm=(a*b)//gcd(a,b)\n    result=min(b-1, r)\n    k=r//lcm\n    if k>0:\n        result+=(k-1)*b\n        result+=min(b, r-k*lcm+1)\n    return result\n\nfor _ in range(t):\n    a,b,q=map(int,input().split())\n    if a>b:\n        a,b=b,a\n    res=[]\n    for __ in range(q):\n        l,r=map(int,input().split())\n        ans=fn(a, b, r)-fn(a, b, l-1)\n        total=r-l+1\n        res.append(total-ans)\n    print(' '.join(map(str, res)))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\nusing namespace std;\nint in() {\n  int x;\n  cin >> x;\n  return x;\n}\nlong long lin() {\n  long long x;\n  cin >> x;\n  return x;\n}\nstring stin() {\n  string s;\n  cin >> s;\n  return s;\n}\ntemplate <class T>\ninline bool chmax(T& a, T b) {\n  if (a < b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\ntemplate <class T>\ninline bool chmin(T& a, T b) {\n  if (a > b) {\n    a = b;\n    return 1;\n  }\n  return 0;\n}\nvector<int> iota(int n) {\n  vector<int> a(n);\n  iota(begin(a), end(a), 0);\n  return a;\n}\nvoid print() { putchar(' '); }\nvoid print(bool a) { cout << a; }\nvoid print(int a) { cout << a; }\nvoid print(long long a) { cout << a; }\nvoid print(char a) { cout << a; }\nvoid print(string& a) { cout << a; }\nvoid print(double a) { cout << a; }\ntemplate <class T>\nvoid print(const vector<T>&);\ntemplate <class T, size_t size>\nvoid print(const array<T, size>&);\ntemplate <class T, class L>\nvoid print(const pair<T, L>& p);\ntemplate <class T, size_t size>\nvoid print(const T (&)[size]);\ntemplate <class T>\nvoid print(const vector<T>& a) {\n  if (a.empty()) return;\n  print(a[0]);\n  for (auto i = a.begin(); ++i != a.end();) {\n    cout << \" \";\n    print(*i);\n  }\n  cout << endl;\n}\ntemplate <class T>\nvoid print(const deque<T>& a) {\n  if (a.empty()) return;\n  print(a[0]);\n  for (auto i = a.begin(); ++i != a.end();) {\n    cout << \" \";\n    print(*i);\n  }\n}\ntemplate <class T, size_t size>\nvoid print(const array<T, size>& a) {\n  print(a[0]);\n  for (auto i = a.begin(); ++i != a.end();) {\n    cout << \" \";\n    print(*i);\n  }\n}\ntemplate <class T, class L>\nvoid print(const pair<T, L>& p) {\n  cout << '(';\n  print(p.first);\n  cout << \",\";\n  print(p.second);\n  cout << ')';\n}\ntemplate <class T, size_t size>\nvoid print(const T (&a)[size]) {\n  print(a[0]);\n  for (auto i = a; ++i != end(a);) {\n    cout << \" \";\n    print(*i);\n  }\n}\ntemplate <class T>\nvoid print(const T& a) {\n  cout << a;\n}\nint out() {\n  putchar('\\n');\n  return 0;\n}\ntemplate <class T>\nint out(const T& t) {\n  print(t);\n  putchar('\\n');\n  return 0;\n}\ntemplate <class Head, class... Tail>\nint out(const Head& head, const Tail&... tail) {\n  print(head);\n  putchar(' ');\n  out(tail...);\n  return 0;\n}\nlong long gcd(long long a, long long b) {\n  while (b) {\n    long long c = b;\n    b = a % b;\n    a = c;\n  }\n  return a;\n}\nlong long lcm(long long a, long long b) {\n  if (!a || !b) return 0;\n  return a * b / gcd(a, b);\n}\nconst int INF = 1061109567;\nconst long long LINF = 4557430888798830399LL;\nsigned main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  ;\n  int t = in();\n  for (long long i = 0; i < t; i++) {\n    long long a = lin(), b = lin(), q = lin();\n    if (a > b) swap(a, b);\n    long long m = lcm(a, b);\n    for (long long j = 0; j < q; j++) {\n      long long l = lin(), r = lin();\n      if (b % a == 0ll) {\n        cout << \"0 \";\n        continue;\n      }\n      if (l % m < b) l = l - l % m + b;\n      if (r % m < b) r = r - r % m - 1;\n      if (l > r) {\n        cout << \"0 \";\n      } else {\n        long long diff = r / m - l / m;\n        cout << (r - l + 1) - diff * b << \" \";\n      }\n    }\n    cout << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vi = vector<int>;\nusing pi = pair<int, int>;\nconst int mxn = 200 * 200 + 10;\nint a, b, q, p[mxn], len;\nll query(ll i) {\n  ll cnt = i / (a * b);\n  return p[len] * 1ll * cnt + p[i % len];\n}\nvoid solve() {\n  cin >> a >> b >> q;\n  len = a * b;\n  for (int i = 1; i <= len; ++i) {\n    p[i] = p[i - 1];\n    if ((i % a) % b != (i % b) % a) ++p[i];\n  }\n  while (q--) {\n    ll l, r;\n    cin >> l >> r;\n    cout << query(r) - query(l - 1) << ' ';\n  }\n  cout << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin, stdout\nfrom collections import Counter, defaultdict\nfrom itertools import permutations, combinations\nfrom fractions import gcd\nraw_input = stdin.readline\npr = stdout.write\n\n\ndef in_num():\n    return int(raw_input())\n\n\ndef in_arr():\n    return map(int,raw_input().split())\n\n\ndef pr_num(n):\n    stdout.write(str(n)+'\\n')\n\n\ndef pr_arr(arr):\n    pr(' '.join(map(str,arr))+'\\n')\n\n# fast read function for total integer input\n\ndef inp():\n    # this function returns whole input of\n    # space/line seperated integers\n    # Use Ctrl+D to flush stdin.\n    return map(int,stdin.read().split())\n\nrange = xrange # not for python 3.0+\n\n# main code\n\nfor t in range(in_num()):\n    a,b,q=in_arr()\n    l=(a*b)/gcd(a,b)\n    mx=max(a,b)\n    for q in range(q):\n        x,y=in_arr()\n        ans=y-x+1\n        temp=(y/l)*mx\n        temp-=((x-1)/l)*mx\n        if (x%l):\n            \n            temp+=max(0,mx-(x%l))\n        if (y+1)%l:\n            \n            temp-=max(0,mx-((y+1)%l))\n        #print x,y,temp,ans\n        ans-=temp\n        pr(str(ans)+' ')\n    pr('\\n')\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.FilterInputStream;\nimport java.io.BufferedInputStream;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        ScanReader in = new ScanReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CYetAnotherCountingProblem solver = new CYetAnotherCountingProblem();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CYetAnotherCountingProblem {\n        public void solve(int testNumber, ScanReader in, PrintWriter out) {\n            int t = in.scanInt();\n\n\n            while (t-- > 0) {\n                int a = in.scanInt();\n                int b = in.scanInt();\n                int q = in.scanInt();\n\n\n                int lcm = (int) CodeX.LCM(a, b);\n\n\n                int arr[] = new int[lcm];\n                for (int i = 0; i < lcm; i++) arr[i] = (((i % a) % b) != ((i % b) % a)) ? 1 : 0;\n\n                long pre[] = new long[lcm];\n                pre[0] = arr[0];\n                for (int i = 1; i < lcm; i++) pre[i] = pre[i - 1] + arr[i];\n\n\n                while (q-- > 0) {\n                    long l = in.scanLong();\n                    long r = in.scanLong();\n                    long ans = 0;\n\n                    int right = (int) (r % lcm);\n                    int left = (int) (l % lcm);\n\n                    if (r - l + 1 <= lcm) {\n                        if (left <= right) {\n                            ans += pre[right] - ((left - 1) >= 0 ? pre[left - 1] : 0);\n                        } else {\n                            ans += pre[right];\n                            ans += (pre[lcm - 1] - ((left - 1) >= 0 ? pre[left - 1] : 0));\n                        }\n                    } else {\n\n                        ans += pre[right];\n                        ans += (pre[lcm - 1] - ((left - 1) >= 0 ? pre[left - 1] : 0));\n\n                        long nextL = (long) (l + (lcm - (l % lcm)));\n                        long nextR = r - (r % lcm) - 1;\n                        if (nextL <= nextR) {\n                            long count = (nextR - nextL + 1) / lcm;\n                            ans += (count * pre[lcm - 1]);\n                        }\n\n\n                    }\n\n                    out.print(ans + \" \");\n\n\n                }\n                out.println();\n\n            }\n\n        }\n\n    }\n\n    static class ScanReader {\n        private byte[] buf = new byte[4 * 1024];\n        private int INDEX;\n        private BufferedInputStream in;\n        private int TOTAL;\n\n        public ScanReader(InputStream inputStream) {\n            in = new BufferedInputStream(inputStream);\n        }\n\n        private int scan() {\n            if (INDEX >= TOTAL) {\n                INDEX = 0;\n                try {\n                    TOTAL = in.read(buf);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                if (TOTAL <= 0) return -1;\n            }\n            return buf[INDEX++];\n        }\n\n        public int scanInt() {\n            int I = 0;\n            int n = scan();\n            while (isWhiteSpace(n)) n = scan();\n            int neg = 1;\n            if (n == '-') {\n                neg = -1;\n                n = scan();\n            }\n            while (!isWhiteSpace(n)) {\n                if (n >= '0' && n <= '9') {\n                    I *= 10;\n                    I += n - '0';\n                    n = scan();\n                }\n            }\n            return neg * I;\n        }\n\n        private boolean isWhiteSpace(int n) {\n            if (n == ' ' || n == '\\n' || n == '\\r' || n == '\\t' || n == -1) return true;\n            else return false;\n        }\n\n        public long scanLong() {\n            long I = 0;\n            int n = scan();\n            while (isWhiteSpace(n)) n = scan();\n            int neg = 1;\n            if (n == '-') {\n                neg = -1;\n                n = scan();\n            }\n            while (!isWhiteSpace(n)) {\n                if (n >= '0' && n <= '9') {\n                    I *= 10;\n                    I += n - '0';\n                    n = scan();\n                }\n            }\n            return neg * I;\n        }\n\n    }\n\n    static class CodeX {\n        public static long GCD(long A, long B) {\n            if (B == 0)\n                return A;\n            else\n                return GCD(B, A % B);\n        }\n\n        public static long LCM(long A, long B) {\n            return ((A * B) / GCD(A, B));\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    a,b,q=map(int,input().split())\n    s=[]\n    for x in range(a*b):\n        if (x%a)%b==(x%b)%a:\n            s.append(0)\n        else:\n            s.append(1)\n    n=sum(s)\n    listofsum=[0]\n    temp=0\n    for x in range(a*b):\n        temp+=s[x]\n        listofsum.append(temp)\n    for j in range(q):\n        l,r=map(int,input().split())\n        rtemp=(r//(a*b))\n        ltemp=(l//(a*b))\n        if (rtemp+1)*(a*b)<=r:\n            rtemp+=1\n        if (ltemp+1)*(a*b)<=l:\n            ltemp+=1\n        print((rtemp-ltemp)*n+listofsum[(r%(a*b))+1]-listofsum[l%(a*b)])"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__\nilele = lambda: map(int,input().split())\nalele = lambda: list(map(int, input().split()))\nimport math\nfrom itertools import accumulate\n\nfor _ in range(int(input())):\n    a,b,q = ilele()\n    x = math.gcd(a,b)\n    y = (a*b)//x\n    A = []\n    for i in range(1,y+1):\n        d = (i%a)%b\n        e = (i%b)%a\n        if d==e:\n            A.append(0)\n        else:\n            A.append(1)\n    #print(A)\n    T = [0] +list(accumulate(A))\n    t = T[-1]\n    for i in range(q):\n        xx,yy = ilele()\n        Ans = 0\n        if yy<=y:\n            #for i in range(xx-1,yy):\n            #    Ans += A[i]\n            Ans = T[yy] - T[xx-1]\n        else:\n            z = yy// y;zz = yy%y\n            Ans += z*t\n            #for i in range(zz):\n            #    Ans += A[i]\n            Ans+=T[zz]\n            Ans2 =0\n            z = (xx-1)// y;zz = (xx-1)%y\n            Ans2 += z*t\n            #for i in range(zz):\n            #    Ans2 += A[i]\n            Ans2 += T[zz]\n            Ans -= Ans2\n        print(Ans,end = \" \")\n    print()\n                "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    int rem = a * b;\n    vector<int> pref(rem + 1);\n    pref[0] = 0;\n    for (int x = 1; x <= rem; x++) {\n      pref[x] = pref[x - 1];\n      if ((x % a) % b != (x % b) % a) pref[x]++;\n    }\n    vector<long long> res;\n    for (int i = 0; i < q; i++) {\n      long long L, R;\n      cin >> L >> R;\n      res.push_back(((R / rem) * 1LL * pref[rem] + pref[R % rem]) -\n                    (((L - 1) / rem) * 1LL * pref[rem] + pref[(L - 1) % rem]));\n    }\n    for (long long i : res) cout << i << ' ';\n    cout << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n    \nclass Cnt:\n    def __init__(self, x, y):\n        self.n = max(x, y)\n        self.m = lcm(x, y)\n    def v(self, a):\n        p, q = a % self.m, a // self.m\n        return a - min(p, self.n) - q * self.n\n        \nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    cnt = Cnt(a, b)\n    res = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        res.append(cnt.v(r+1) - cnt.v(l))\n    print(*res)"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    Template written to be used by Python Programmers.\n    Use at your own risk!!!!\n    Owned by adi0311(rating - 5 star at CodeChef and Specialist at Codeforces).\n\"\"\"\nimport sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf\nfrom collections import defaultdict as dd, deque, Counter as c\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\n# sys.setrecursionlimit(2*pow(10, 5)+1)\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(var): sys.stdout.write(str(var))\ndef outln(var): sys.stdout.write(str(var)+\"\\n\")\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return map(int, data().split())\ndef ssp(): return map(str, data().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nfor _ in range(int(data())):\n    a, b, q = sp()\n    a, b = min(a, b), max(a, b)\n    answer = []\n    lcm = (a * b) // gcd(a, b)\n    mul = lcm - b\n    for i in range(q):\n        left, right = sp()\n        left -= 1\n        t1, t2 = (left // lcm) * mul, (right // lcm) * mul\n        if left % lcm != 0:\n            t1 += max(0, (left % lcm) - b + 1)\n        if right % lcm != 0:\n            t2 += max(0, (right % lcm) - b + 1)\n        answer.append(t2 - t1)\n    print(*answer)\n"
        },
        {
            "language": 3,
            "solution": "# region fastio  # from https://codeforces.com/contest/1333/submission/75948789\nimport sys, io, os\n\nBUFSIZE = 8192\n\n\nclass FastIO(io.IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = io.BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(io.IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# endregion\n\n\nT = int(input())\nfor _ in range(T):\n    A, B, Q = map(int, input().split())\n    if A>B:\n        A,B = B,A\n    AB = A*B\n    L = [i%A != i%B%A for i in range(AB)]\n    cumL = [0]*(AB+1)\n    for i in range(AB):\n        cumL[i+1] = cumL[i] + L[i]\n    s = cumL[AB]\n    def solve(N):\n        return N//AB*s + cumL[N%AB]\n    Ans = []\n    for _ in range(Q):\n        L, R = map(int, input().split())\n        Ans.append(solve(R+1)-solve(L))\n    print(*Ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    static long MOD = 0;\n    static long[] fact = new long[1];\n\n    public static void main(String[] args) throws Exception {\n        long startTime = System.nanoTime();\n        int t = in.nextInt();\n        while (t-- > 0) {\n            solve();\n        }\n        long endTime = System.nanoTime();\n        err.println(\"Execution Time : +\" + (endTime - startTime) / 1000000 + \" ms\");\n        exit(0);\n    }\n\n    static void solve() {\n        int a = in.nextInt();\n        int b = in.nextInt();\n        if (a > b) {\n            int temp = b;\n            b = a;\n            a = temp;\n        }\n        int q = in.nextInt();\n        while (q-- > 0) {\n            long l = in.nextLong();\n            long r = in.nextLong();\n            if (r < l) {\n                long temp = r;\n                r = l;\n                l = temp;\n            }\n            long ans = r - l + 1;\n            if (l < b) {\n                ans -= b - l;\n            }\n            if (a % b == 0 || b % a == 0 || ans <= 0) {\n                out.print(0);\n                out.print(' ');\n            } else {\n                long l_count = count(l - 1, a, b);\n                long r_count = count(r, a, b);\n                long diff = r_count - l_count;\n                ans -= diff;\n                out.print(ans);\n                out.print(' ');\n            }\n        }\n        out.println(\"\");\n    }\n\n    //GCD Long\n    static long gcd(long a, long b) {\n        while (b != 0) {\n            long t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n\n    static long count(long n, long a, long b) {\n        long x = a * b;\n        if (gcd(a, b) != 1) {\n            x /= gcd(a, b);\n        }\n        long mul = n / x;\n        if (mul == 0) {\n            return 0;\n        } else {\n            if (mul * x + b - 1 <= n) {\n                return mul * b;\n            }\n            int count = 0;\n            for (long i = b; i >= 1; i--) {\n                if (mul * x + b - i <= n) {\n                    count++;\n                } else {\n                    break;\n                }\n            }\n            mul--;\n            return mul * b + count;\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public int[] readAllInts(int n) {\n            int[] p = new int[n];\n            for (int i = 0; i < n; i++) {\n                p[i] = in.nextInt();\n            }\n            return p;\n        }\n\n        public int[] readAllInts(int n, int s) {\n            int[] p = new int[n + s];\n            for (int i = s; i < n + s; i++) {\n                p[i] = in.nextInt();\n            }\n            return p;\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    static void exit(int a) {\n        out.close();\n        err.close();\n        System.exit(a);\n    }\n\n    static InputStream inputStream = System.in;\n    static OutputStream outputStream = System.out;\n    static OutputStream errStream = System.err;\n    static InputReader in = new InputReader(inputStream);\n    static PrintWriter out = new PrintWriter(outputStream);\n    static PrintWriter err = new PrintWriter(errStream);\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.stream.Stream;\n\n/**\n * @author madi.sagimbekov\n */\npublic class C1342C {\n\n    private static BufferedReader in;\n    private static BufferedWriter out;\n\n    private static List<Integer>[] list;\n    private static int[] arr;\n    private static int[][] dir = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\n    private static boolean[] used;\n\n    public static void main(String[] args) throws IOException {\n        open();\n\n        int t = readInt();\n        while (t-- > 0) {\n            int[] abq = readInts();\n            int a = abq[0];\n            int b = abq[1];\n            int q = abq[2];\n            int max = Math.max(a, b);\n            int min = Math.min(a, b);\n            int mult = lcm(min, max);\n            while (q-- > 0) {\n                long[] lr = readLongs();\n                long l = lr[0];\n                long r = lr[1];\n\n                long sum = 0;\n                for (int i = 0; i < max; i++) {\n                    for (int j = 0; j < min; j++) {\n                        int x = min * i + j;\n                        if (x < max) {\n                            long ll = l - x;\n                            long rr = r - x;\n                            long right = rr / mult + 1;\n                            long left = (ll - 1) / mult + 1;\n                            sum += (rr >= 0 ? right : 0) - (ll > 0 ? left : 0);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n\n                out.write((r - l + 1 - sum) + \" \");\n            }\n            out.write(\"\\n\");\n        }\n\n        close();\n    }\n\n    private static int lcm(int a, int b) {\n        return (a * b) / gcd(a, b);\n    }\n\n    private static int gcd(int a, int b) {\n        if (a < b) {\n            return gcd(b, a);\n        }\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    private static int[] readInts() throws IOException {\n        return Stream.of(in.readLine().split(\" \")).mapToInt(Integer::parseInt).toArray();\n    }\n\n    private static int readInt() throws IOException {\n        return Integer.parseInt(in.readLine());\n    }\n\n    private static long[] readLongs() throws IOException {\n        return Stream.of(in.readLine().split(\" \")).mapToLong(Long::parseLong).toArray();\n    }\n\n    private static long readLong() throws IOException {\n        return Long.parseLong(in.readLine());\n    }\n\n    private static double[] readDoubles() throws IOException {\n        return Stream.of(in.readLine().split(\" \")).mapToDouble(Double::parseDouble).toArray();\n    }\n\n    private static double readDouble() throws IOException {\n        return Double.parseDouble(in.readLine());\n    }\n\n    private static String readString() throws IOException {\n        return in.readLine();\n    }\n\n    private static List<Integer>[] buildAdjacencyList(int n, int m) throws IOException {\n        List<Integer>[] list = new ArrayList[n + 1];\n        for (int i = 0; i <= n; i++) {\n            list[i] = new ArrayList<>();\n        }\n\n        for (int i = 0; i < m; i++) {\n            int[] e = readInts();\n            list[e[0]].add(e[1]);\n            list[e[1]].add(e[0]);\n        }\n\n        return list;\n    }\n\n    private static void open() {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new BufferedWriter(new OutputStreamWriter((System.out)));\n    }\n\n    private static void close() throws IOException {\n        out.flush();\n        out.close();\n        in.close();\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nt=int(input())\ndef fn(a, b, r):\n    lcm=(a*b)//gcd(a,b)\n    upperlimit=(r//lcm)*lcm\n    result=(upperlimit//lcm)*b\n    result+=min(b,r-upperlimit+1)\n    return result\n\nfor _ in range(t):\n    a,b,q=map(int,input().split())\n    res=[]\n    if a>b:\n        a,b=b,a\n    for __ in range(q):\n        l,r=map(int,input().split())\n        ans=fn(a, b, r)-fn(a, b, l-1)\n        total=r-l+1\n        res.append(total-ans)\n    print(' '.join(map(str, res)))"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;  \npublic class Main \n{\n/*\n    HashMap<> map=new HashMap<>();\n    TreeMap<> map=new TreeMap<>();\n    map.put(p,map.getOrDefault(p,0)+1);\n    for(Map.Entry<> mx:map.entrySet()){\n          int v=mx.getValue(),k=mx.getKey();\n    }for (int i = 1; i <= 1000; i++)\n    fac[i] = fac[i - 1] * i % mod;\n    ArrayList<Pair<Character,Integer>> l=new ArrayList<>();\n    ArrayList<> l=new ArrayList<>();\n    HashSet<> has=new HashSet<>();*/ \n    PrintWriter out;\n    FastReader sc;\n    long mod=(long)(1e9+7);\n    int maxint= Integer.MAX_VALUE;\n    int minint= Integer.MIN_VALUE;\n    long maxlong=Long.MAX_VALUE;\n    long minlong=Long.MIN_VALUE;\n    public void sol(){\n          int testCase=ni();  \n          while(testCase-->0){\n                long a=nl(),b=nl();\n                int q=ni();\n                if(a>b){\n                      a=swap(b,b=a);\n                }long lcm=lcm(a,b);\n                long x=0;\n                long[] sum=new long[(int)lcm+1];\n                sum[0]=0;\n                for(int i=1;i<=(int)lcm;i++){\n                      sum[i]=sum[i-1];\n                      if((i % a) % b != (i % b) % a)\n                      sum[i]++;\n                }\n                while(q-->0){\n                      long l=nl(),r=nl(),ans=0;\n                      if(a==b){\n                            pr(\"0 \");\n                            continue;\n                      }\n                      long p=r/lcm;\n                      ans+=(p*sum[(int)lcm])+sum[(int)(r%lcm)];\n                  //     p=lcm*p+b-1;\n                  //     if(p<r){\n                  //           ans+=(r-p);\n                  //     }l--;\n                      l--;\n                      p=l/lcm;\n                      ans=ans-((p*sum[(int)lcm])+sum[(int)(l%lcm)]);\n                  //     p=p*lcm+b-1;\n                  //     if(p<l){\n                  //           ans-=(l-p);\n                  //     }\n                      pr(max(ans,0)+\" \");\n                }out.println();\n          }\n    }\n    public static void main(String[] args) \n\t{ \n\t      Main g=new Main();\n\t\tg.out=new PrintWriter(System.out);\n\t\tg.sc=new FastReader();\n\t\tg.sol();\n\t\tg.out.flush();\n\t}\n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n \n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n \n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n \n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n \n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n \n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n \n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} public int ni(){\n\t      return sc.nextInt();\n\t}public long nl(){\n\t      return sc.nextLong();\n\t}public double nd(){\n\t      return sc.nextDouble();\n\t}public char[] rl(){\n\t      return sc.nextLine().toCharArray();\n\t}public String rl1(){\n\t      return sc.nextLine();\n\t}\n\tpublic void pl(Object s){\n\t      out.println(s);\n\t}public void ex(){\n\t      out.println();\n\t}\n\tpublic void pr(Object s){\n\t      out.print(s);\n\t}public String next(){\n\t      return sc.next();\n\t}public long abs(long x){\n\t      return Math.abs(x);\n\t}\n\tpublic int abs(int x){\n\t      return Math.abs(x);\n\t}\n\tpublic double abs(double x){\n\t      return Math.abs(x);\n\t}\n      public long pow(long x,long y){\n            return (long)Math.pow(x,y);\n      }\n      public int pow(int x,int y){\n            return (int)Math.pow(x,y);\n      }\n      public double pow(double x,double y){\n            return Math.pow(x,y);\n      }public long min(long x,long y){\n            return (long)Math.min(x,y);\n      }\n      public int min(int x,int y){\n            return (int)Math.min(x,y);\n      }\n      public double min(double x,double y){\n            return Math.min(x,y);\n      }public long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}public long lcm(long a, long b) {\n            return (a / gcd(a, b)) * b;\n      }\n\tstatic void sort(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort(long[] a) {\n\t\tArrayList<Long> l = new ArrayList<>();\n\t\tfor (long i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort(double[] a) {\n\t\tArrayList<Double> l = new ArrayList<>();\n\t\tfor (double i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}int  swap(int a,int b){\n\t      return a;\n\t}long  swap(long a,long b){\n\t      return a;\n\t}double  swap(double a,double b){\n\t      return a;\n\t}\n\tboolean isPowerOfTwo (int x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }boolean isPowerOfTwo (long x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }public long max(long x,long y){\n            return (long)Math.max(x,y);\n      }\n      public int max(int x,int y){\n            return (int)Math.max(x,y);\n      }\n      public double max(double x,double y){\n            return Math.max(x,y);\n      }long sqrt(long x){\n            return (long)Math.sqrt(x);\n      }int sqrt(int x){\n            return (int)Math.sqrt(x);\n      }void input(int[] ar,int n){\n            for(int i=0;i<n;i++)ar[i]=ni();\n      }void input(long[] ar,int n){\n            for(int i=0;i<n;i++)ar[i]=nl();\n      }void fill(int[] ar,int k){\n            Arrays.fill(ar,k);\n      }void yes(){\n            pl(\"YES\");\n      }void no(){\n            pl(\"NO\");\n      }\n    int[] sieve(int n) \n    { \n        boolean prime[] = new boolean[n+1]; \n        int[] k=new int[n+1];\n        for(int i=0;i<=n;i++) {\n            prime[i] = true; \n            k[i]=i;\n        }\n          \n        for(int p = 2; p <=n; p++) \n        { \n            if(prime[p] == true) \n            { \n               // sieve[p]=p;\n                for(int i = p*2; i <= n; i += p) {\n                    prime[i] = false; \n                  //  sieve[i]=p;\n                    while(k[i]%(p*p)==0){\n                          k[i]/=(p*p);\n                    }\n                }\n            } \n        }return k;\n    }\n    int strSmall(int[] arr, int target)  \n    {  \n        int start = 0, end = arr.length-1;  \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;   \n            if (arr[mid] >= target) {  \n                end = mid - 1;  \n            }   \n            else {  \n                ans = mid;  \n                start = mid + 1;  \n            }  \n        }  \n        return ans;  \n    } int strSmall(ArrayList<Integer> arr, int target)  \n    {  \n        int start = 0, end = arr.size()-1;  \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;   \n            if (arr.get(mid) > target) {  \n                start = mid + 1; \n                ans=start;\n            }   \n            else {\n                end = mid - 1;  \n            }  \n        }  \n        return ans;  \n    }long mMultiplication(long a,long b) \n    { \n        long res = 0;    \n        a %= mod; \n  \n        while (b > 0)  \n        {  \n            if ((b & 1) > 0)  \n            { \n                res = (res + a) % mod; \n            }  \n            a = (2 * a) % mod; \n  \n            b >>= 1;  \n        } \n        return res; \n    }long nCr(int n, int r,\n                             long p)\n    {\n \n          if (n<r) \n              return 0;\n        if (r == 0)\n            return 1;\n            long[] fac = new long[n + 1];\n        fac[0] = 1;\n \n        for (int i = 1; i <= n; i++)\n            fac[i] = fac[i - 1] * i % p;\n        return (fac[n] * modInverse(fac[r], p)\n                % p * modInverse(fac[n - r], p)\n                % p)\n            % p;\n    }long power(long x, long y, long p)\n    {\n        long res = 1;\n        x = x % p;\n \n        while (y > 0) {\n            if (y % 2 == 1)\n                res = (res * x) % p;\n            y = y >> 1; \n            x = (x * x) % p;\n        }\n \n        return res;\n    }long modInverse(long n, long p)\n    {\n        return power(n, p - 2, p);\n    }\n      public static class Pair implements Comparable<Pair> {\n\t\tint x;\n\t\tint y;\n \n\t\tpublic Pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n \n\t\tpublic String toString() {\n\t\t\treturn x + \",\" + y;\n\t\t}\n \n\t\tpublic boolean equals(Object o) {\n\t\t\tif (o instanceof Pair) {\n\t\t\t\tPair p = (Pair) o;\n\t\t\t\treturn p.x == x && p.y == y;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n \n\t\tpublic int hashCode() {\n\t\t\treturn new Double(x).hashCode() * 31 + new Double(y).hashCode();\n\t\t}\n \n\t\tpublic int compareTo(Pair other) {\n\t\t\tif (this.x == other.x) {\n\t\t\t\treturn Long.compare(this.y, other.y);\n\t\t\t}\n\t\t\treturn Long.compare(this.x, other.x);\n\t\t}\n      }\n\t \n} "
        },
        {
            "language": 3,
            "solution": "\nfrom math import gcd\n\n\nt=int(input())\nfor _ in range(t):\n    a,b,q=map(int,input().split())\n    x=(a*b)//gcd(a,b)\n    e=max(a,b)\n    k=[]\n    for i in range(q):\n        l,r=map(int,input().split())\n\n        ans=r-l+1\n        d=r//x-(l-1)//x\n        ans-=d*e\n        d=(l-1)//x\n        d=d*x\n        c=l-d\n        if e>=c:\n            ans-=(e-c)\n        d=r//x\n        d=d*x-1\n        c=r-d\n        if c<=e:\n            ans+=e-c\n        k.append(ans)\n    print(*k)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Solve8 {\n\n    public static void main(String[] args) throws IOException {\n        PrintWriter pw = new PrintWriter(System.out);\n        new Solve8().solve(pw);\n        pw.flush();\n        pw.close();\n    }\n\n    public void solve(PrintWriter pw) throws IOException {\n        FastReader sc = new FastReader();\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            int a = sc.nextInt(), b = sc.nextInt(), q = sc.nextInt();\n            long lcm = lcm(a, b), max = Math.max(a, b);\n            for (int i = 0; i < q; i++) {\n                long l = sc.nextLong(), r = sc.nextLong();\n                long s = max * (r / lcm - (l - 1) / lcm);\n                long x = (l - 1) / lcm * lcm;\n                s += Math.max(0, Math.min(r + 1, x + max) - l);\n                x = r / lcm * lcm;\n                s -= x >= l ? Math.max(0, (x + max - r - 1)) : 0;\n                s = (r - l + 1) - s;\n                pw.print(s + (i + 1 == q ? \"\\n\" : \" \"));\n            }\n        }\n    }\n\n    public long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    public long lcm(long a, long b) {\n        return a / gcd(a, b) * b;\n    }\n\n    static class FastReader {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public FastReader(String s) {\n            try {\n                br = new BufferedReader(new FileReader(s));\n            } catch (FileNotFoundException e) {\n            }\n        }\n\n        public String next() {\n            if (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n            }\n            return null;\n        }\n\n        public boolean hasNext() throws IOException {\n            if (st != null && st.hasMoreTokens()) {\n                return true;\n            }\n            String s = br.readLine();\n            if (s == null || s.isEmpty()) {\n                return false;\n            }\n            st = new StringTokenizer(s);\n            return true;\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long mod = 1e9 + 7;\nlong long INF = 1e7;\ndouble EPS = 1e-12;\nlong double tick() {\n  static clock_t oldt;\n  clock_t newt = clock();\n  long double diff = 1.0L * (newt - oldt) / CLOCKS_PER_SEC;\n  oldt = newt;\n  return diff;\n}\ninline long long int sc() {\n  long long int a;\n  scanf(\"%lld\", &a);\n  return a;\n}\ninline int scd() {\n  int a;\n  scanf(\"%d\", &a);\n  return a;\n}\ninline double scf() {\n  double a;\n  scanf(\"%lf\", &a);\n  return a;\n}\ntemplate <typename T1>\nvoid printIt(T1 t1) {\n  cout << t1 << \" )\" << endl;\n}\ntemplate <typename T1, typename... T2>\nvoid printIt(T1 t1, T2... t2) {\n  cout << t1 << \" , \";\n  printIt(t2...);\n}\nlong long int powP(long long int x, long long int y) {\n  long long int ans = 1, po = x % mod;\n  while (y > 0) {\n    if (y & 1) ans = ans * po % mod;\n    y >>= 1;\n    po = po * po % mod;\n  }\n  return ans;\n}\nbool bitSet(long long int n, long long int bit) {\n  if ((n & (1LL << bit)) != 0)\n    return true;\n  else\n    return false;\n}\nlong long int findGcd(long long int a, long long int b) {\n  while (a != 0) {\n    long long int temp = b % a;\n    b = a;\n    a = temp;\n  }\n  return b;\n}\nlong long int find(long long int x, long long int a, long long int b) {\n  long long int comm = a * b / findGcd(a, b);\n  long long int times = x / comm, rem = x % comm;\n  long long int val = times * b + min(rem, b - 1);\n  return val;\n}\nint main() {\n  long long int T = sc();\n  while (T--) {\n    long long int a = sc(), b = sc(), q = sc();\n    if (a > b) swap(a, b);\n    while (q--) {\n      long long int l = sc(), r = sc();\n      long long int eq = find(r, a, b) - find(l - 1, a, b);\n      printf(\"%lld \", (r - l + 1) - eq);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\n# import time,random,resource\n\n# sys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\ndef IF(c, t, f): return t if c else f\ndef YES(c): return IF(c, \"YES\", \"NO\")\ndef Yes(c): return IF(c, \"Yes\", \"No\")\n\n\ndef main():\n    t = I()\n\n    rr = []\n    for _ in range(t):\n        a,b,q = LI()\n        qa = [LI() for _ in range(q)]\n\n        ab = a * b\n        t = [0] * (ab+1)\n        for i in range(1,ab+1):\n            if i % a % b != i % b % a:\n                t[i] = t[i-1] + 1\n            else:\n                t[i] = t[i-1]\n\n        r = []\n        tt = t[-1]\n        for c,d in qa:\n            c -= 1\n            e = c // ab * tt + t[c % ab]\n            f = d // ab * tt + t[d % ab]\n            r.append(f-e)\n\n        rr.append(JA(r, \" \"))\n\n\n    return JA(rr, \"\\n\")\n\n\nprint(main())\n\n\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nfrom itertools import accumulate\n\nT = int(input().strip())\nfor t in range(T):\n    a, b, q = list(map(int, input().split()))\n    V = a * b // gcd(a,b)\n    pr = [0 if (x % a) % b == (x%b)%a else 1  for x in range(V)  ]\n    spr = list(accumulate(pr))\n    # print(spr)\n    totalv = sum(pr)\n    rout = []\n    for i in range(q):\n        l, r = list(map(int, input().split()))\n        L = l // V\n        R = r // V\n        res  = totalv * (R-L)\n        res -= spr[(l % V)] - pr[l % V]\n        res += spr[(r % V)]\n        rout.append(res)\n        # print('V=', V, 'L=', L, 'R=', R, '   l=',l, ' r=',r, pr)\n    print(*rout)\n\n\"\"\"\n2\n4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n\n\n\"\"\""
        },
        {
            "language": 3,
            "solution": "import math\nnumcases = int(input())\n\ndef lcm(a, b):\n    return a*b // math.gcd(a, b)\n\ndef solve(a, b, l, r):\n    cm = lcm(a, b)\n    l = l - 1\n    desync = cm - a\n    sum1 = (r//cm)*desync + max(0, r%cm + 1 - a)\n    sum2 = (l//cm)*desync + max(0, l%cm + 1 - a)\n    print(sum1 - sum2, end = \" \")\nfor i in range(numcases):\n    z, x, q = map(int, input().split())\n    for i in range(q):\n        a = max(z, x)\n        b = min(z, x)\n        l, r = map(int, input().split())\n        solve(a, b, l, r)\n    print()"
        },
        {
            "language": 3,
            "solution": "def nok(x, y):\n\tx1, y1 = x, y\n\tx, y = max(x,y), min(x,y)\n\twhile y:\n\t\tx, y = y, x%y\n\treturn int(x1*y1/x)\n\n\nfor t in range(int(input())):\n\ta, b, q = list(map(int, input().split()))  # 7, 10\n\ta, b = min(a, b), max(a, b)\n\tk = []\n\tfor i in range(q):\n\t\tl, r = list(map(int, input().split()))  # 75, 215\n\t\ts = r - l + 1  # 141\n\t\tn = nok(a, b)  # 70\n\t\tml = l // n  # 1\n\t\tl1 = ml * n  # 70\n\t\tmr = r // n  # 3\n\t\tr1 = mr * n  # 210\n\t\tif l1 + b > l:  # 80 > 75\n\t\t\ts -= l1 + b - l  # 5\n\t\tif r1 + b > r:  # 220 > 215\n\t\t\ts -= r - r1 + 1  # 6\n\t\t\tdm = mr - ml - 1  # 1\n\t\telse:\n\t\t\tdm = mr - ml  # --\n\t\ts -= dm * b  # 10\n\t\tk.append(s)  # 120\n\tprint(*k)"
        },
        {
            "language": 3,
            "solution": "import math\ndef num(a,b,x):\n    l = a*b//math.gcd(a,b)\n    k = l - max(a,b)\n    k*= (x//l)\n    n = x - x//l * l - max(a,b) + 1\n    if (n > 0):\n        k += n\n    \n    return k\n    \nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    ans = []\n    for _ in range(q):\n        li, ri = map(int,input().split())\n        n = num(a,b,ri) - num(a,b,li-1)\n        ans.append(str(n))\n    print(\" \".join(ans))"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef check(a,b,k):\n\tg=math.gcd(a,b)\n\tl=(a*b)//g\n\ta,b=max(a,b),min(a,b)\n\tif g==b:\n\t\treturn 0\n\telse:\n\t    ans=(k//l)*(l-a)\n\t    k%=l\n\t   # print(k,l,g,ans)\n\t    ans+=max(k-a+1,0)\n\t   # print(k,l,g)\n\treturn ans\n\t\t\n\nfor i in range(int(input())):\n    a,b,q=map(int,input().split())\n    ans=[]\n    for i in range(q):\n        x,y=map(int,input().split())\n        print(check(a,b,y) - check(a,b,x-1),end=\" \")\n    print()    \n# print(check(a,b,100))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = acos(-1.0);\nint dx4[] = {+1, -1, +0, +0};\nint dy4[] = {+0, +0, +1, -1};\nint dx8[] = {+0, +0, -1, +1, -1, -1, +1, +1};\nint dy8[] = {-1, +1, +0, +0, -1, +1, -1, +1};\nint dr[] = {-1, 1, -2, -2, -1, 1, 2, 2};\nint dc[] = {-2, -2, -1, 1, 2, 2, 1, -1};\nbool isNotEqual(int x, int a, int b) { return (x % a) % b != (x % b) % a; }\nlong long calculate(long long val, long long tot, long long maxi,\n                    long long cnt) {\n  long long div = val / tot;\n  long long rem = val % tot;\n  long long ans = div * cnt;\n  rem = rem - (maxi - 1);\n  if (rem > 0) ans += rem;\n  return ans;\n}\nvoid test_case() {\n  int a, b;\n  cin >> a >> b;\n  int maxi = max(a, b);\n  int mini = min(a, b);\n  int cnt = 0;\n  for (int i = maxi; isNotEqual(i, a, b); ++i) cnt++;\n  int tot = maxi + cnt;\n  int query;\n  cin >> query;\n  while (query-- > 0) {\n    long long lft, rgt;\n    cin >> lft >> rgt;\n    cout << calculate(rgt, tot, maxi, cnt) - calculate(lft - 1, tot, maxi, cnt)\n         << \" \\n\"[query == 0];\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  cout.precision(15);\n  cout << fixed;\n  int T = 1;\n  cin >> T;\n  for (int tc = 1; tc <= T; ++tc) {\n    test_case();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long sum[100010], a, b;\nlong long calc(long long n) {\n  long long ans = n + 1;\n  ans -= n / (a * b) * sum[a * b];\n  ans -= sum[n % (a * b)];\n  return ans;\n}\nint main() {\n  long _ = 1, __ = 1, n, i;\n  long long x, y;\n  for (((1) ? scanf(\"%ld\", &_) : EOF); _; _--, __++) {\n    scanf(\"%lld%lld%ld\", &a, &b, &n);\n    for (i = 1; i <= a * b; i++) {\n      sum[i] = sum[i - 1];\n      if (i % a % b == i % b % a) sum[i]++;\n    }\n    for (i = 1; i <= n; i++) {\n      scanf(\"%lld%lld\", &x, &y);\n      printf(\"%lld \", calc(y) - calc(x - 1));\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a,b): \n    if a == 0: \n        return b \n    return gcd(b % a, a) \ndef lcm(a,b): \n    return (a*b) // gcd(a,b) \n\ndef getAns(equalcount,r,lcmm):\n    basecount=r//lcmm\n    baseans=basecount*equalcount\n    rem=r%lcmm\n    if rem>=(equalcount-1):\n        baseans+=(equalcount-1)\n    else:\n        baseans+=rem\n    return baseans\n\nt=int(input())\nfor hh in range(0,t):\n    a,b,q=[int(x) for x in input().split()]\n    a1=[]\n    b1=[]\n    for i in range(0,201):\n        a1.append(i)\n        b1.append(i)\n    mx=max(a,b)\n    equalcount=0\n    for i in range(1,mx+1):\n        a1[i]=(a1[i]%a)%b\n        b1[i]=(b1[i]%b)%a\n        if(a1[i]==b1[i]):\n            equalcount+=1\n    lcmm=lcm(a,b)\n    equalcount+=1\n    # lcmm=lcm(a,b)\n    # print(equalcount,lcmm)\n    for i in range(0,q):\n        l,r=[int(x) for x in input().split()]\n        if(a==b or a%b==0 or b%a==0):\n            ans=0\n        else:\n            second=getAns(equalcount,l-1,lcmm)\n            first=getAns(equalcount,r,lcmm)\n            ans=(r-first)-(l-1-second)\n            # print(second,first)\n        print(ans,end=\" \")\n    print()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.BitSet;\nimport java.util.Calendar;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.PriorityQueue;\nimport java.util.SortedSet;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\n/**\n * #\n *\n * @author pttrung\n */\npublic class C_Edu_Round_86 {\n    public static long MOD = 1000000007;\n    static int[][] dp;\n\n    public static void main(String[] args) throws FileNotFoundException {\n        // PrintWriter out = new PrintWriter(new FileOutputStream(new File(\n        // \"output.txt\")));\n        PrintWriter out = new PrintWriter(System.out);\n        Scanner in = new Scanner();\n        int T = in.nextInt();\n        for (int z = 0; z < T; z++) {\n            int a = in.nextInt();\n            int b = in.nextInt();\n            int q = in.nextInt();\n            int tmp = a*b/(int)gcd(a, b);\n            int[]count = new int[tmp];\n            for(int i = 1; i < tmp; i++){\n                if((i % a) % b != (i % b) % a){\n                    count[i]++;\n                }\n                count[i] += count[i - 1];\n            }\n            for(int i = 0; i < q; i++){\n                long l = in.nextLong();\n                long r = in.nextLong();\n\n                long result = cal(r, count, tmp) - cal(l - 1, count, tmp);\n                out.print(result + \" \");\n\n            }\n            out.println();\n        }\n\n        out.close();\n    }\n    static long cal(long v, int[]count, int mod){\n        long result = (v/mod)*count[mod - 1] + count[(int)(v % mod)];\n        return result;\n    }\n\n    public static int[] KMP(String val) {\n        int i = 0;\n        int j = -1;\n        int[] result = new int[val.length() + 1];\n        result[0] = -1;\n        while (i < val.length()) {\n            while (j >= 0 && val.charAt(j) != val.charAt(i)) {\n                j = result[j];\n            }\n            j++;\n            i++;\n            result[i] = j;\n        }\n        return result;\n\n    }\n\n    public static boolean nextPer(int[] data) {\n        int i = data.length - 1;\n        while (i > 0 && data[i] < data[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return false;\n        }\n        int j = data.length - 1;\n        while (data[j] < data[i - 1]) {\n            j--;\n        }\n        int temp = data[i - 1];\n        data[i - 1] = data[j];\n        data[j] = temp;\n        Arrays.sort(data, i, data.length);\n        return true;\n    }\n\n    public static int digit(long n) {\n        int result = 0;\n        while (n > 0) {\n            n /= 10;\n            result++;\n        }\n        return result;\n    }\n\n    public static double dist(long a, long b, long x, long y) {\n        double val = (b - a) * (b - a) + (x - y) * (x - y);\n        val = Math.sqrt(val);\n        double other = x * x + a * a;\n        other = Math.sqrt(other);\n        return val + other;\n\n    }\n\n    public static class Point implements Comparable<Point> {\n\n        int x, y;\n\n        public Point(int start, int end) {\n            this.x = start;\n            this.y = end;\n        }\n\n        @Override\n        public int hashCode() {\n            int hash = 5;\n            hash = 47 * hash + this.x;\n            hash = 47 * hash + this.y;\n            return hash;\n        }\n\n        @Override\n        public boolean equals(Object obj) {\n            if (obj == null) {\n                return false;\n            }\n            if (getClass() != obj.getClass()) {\n                return false;\n            }\n            final Point other = (Point) obj;\n            if (this.x != other.x) {\n                return false;\n            }\n            if (this.y != other.y) {\n                return false;\n            }\n            return true;\n        }\n\n        @Override\n        public int compareTo(Point o) {\n            return Integer.compare(x, o.x);\n        }\n    }\n\n    public static class FT {\n\n        long[] data;\n\n        FT(int n) {\n            data = new long[n];\n        }\n\n        public void update(int index, long value) {\n            while (index < data.length) {\n                data[index] += value;\n                index += (index & (-index));\n            }\n        }\n\n        public long get(int index) {\n            long result = 0;\n            while (index > 0) {\n                result += data[index];\n                index -= (index & (-index));\n            }\n            return result;\n\n        }\n    }\n\n    public static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    public static long pow(long a, int b) {\n        if (b == 0) {\n            return 1;\n        }\n        if (b == 1) {\n            return a;\n        }\n\n        long val = pow(a, b / 2);\n        if (b % 2 == 0) {\n            return val * val;\n        } else {\n            return val * (val * a);\n\n        }\n    }\n\n    static class Scanner {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() throws FileNotFoundException {\n            // System.setOut(new PrintStream(new BufferedOutputStream(System.out), true));\n            br = new BufferedReader(new InputStreamReader(System.in));\n            //  br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(\"input.txt\"))));\n        }\n\n        public String next() {\n\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                    throw new RuntimeException();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            st = null;\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n\n        public boolean endLine() {\n            try {\n                String next = br.readLine();\n                while (next != null && next.trim().isEmpty()) {\n                    next = br.readLine();\n                }\n                if (next == null) {\n                    return true;\n                }\n                st = new StringTokenizer(next);\n                return st.hasMoreTokens();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, gettrace\nfrom math import gcd\n\n\nif not gettrace():\n    def input():\n        return next(stdin)[:-1]\n\n\n# def input():\n#    return stdin.buffer.readline()\n\ndef main():\n    def solve():\n        a, b, q = map(int, input().split())\n        lcm = (a * b)//gcd(a, b)\n        res = []\n        mx = max(a, b)\n        for _ in range(q):\n            l, r = map(int, input().split())\n            left = max(0, mx - l%lcm)\n            right = max(0, mx - (r+1)%lcm)\n            res.append(r+1 - l - ((r+1)//lcm - l//lcm)*mx - left + right)\n        print(' '.join(map(str, res)))\n\n    t = int(input())\n    for _ in range(t):\n        solve()\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Objects;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n  static MyScanner scanner = new MyScanner();\n  static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n  static final int MOD = 1000000007;\n  static final boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n  static final int[][] d4 = new int[][]{{-1, 0}, {0, -1}, {1, 0}, {0, 1}};\n  static final int[][] d8 = new int[][]{{-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 1}, {1, -1}, {1, 0}, {1, 1}};\n\n  public static void main(String[] args) {\n    int tc = scanner.nextInt();\n    for(int t=0; t<tc; t++) {\n      int a = scanner.nextInt();\n      int b = scanner.nextInt();\n      int lcm = (a*b)/(int) gcd(a, b);\n      int[] mem = new int[lcm+1];\n      for(int i=1; i<=lcm; i++) {\n        if((i%a)%b != (i%b)%a) mem[i] = mem[i-1]+1;\n        else mem[i] = mem[i-1];\n      }\n      int q = scanner.nextInt();\n      for(int j=0; j<q; j++) {\n        long v1 = scanner.nextLong();\n        long v2 = scanner.nextLong();\n        long v1l = v1%lcm;\n        long v2l = v2%lcm;\n        long v1q = v1/lcm;\n        long v2q = v2/lcm;\n        if(v1q == v2q) {\n          out.println(mem[(int) v2l] - (v1l > 0 ? mem[(int) (v1l - 1)] : 0));\n        } else if(v1q+1 == v2q) {\n          out.println(mem[(int) v2l] + mem[lcm] - (v1l > 0 ? mem[(int) (v1l-1)] : 0));\n        } else {\n          long res = mem[lcm] - (v1l > 0 ? mem[(int) (v1l-1)] : 0);\n          res += mem[(int) v2l];\n          res += (v2q - v1q - 1)*mem[lcm];\n          out.println(res);\n        }\n      }\n    }\n    out.close();\n  }\n\n  public static void print(Object o) {\n    if(!oj) {\n      out.println(o);\n    }\n  }\n\n  //Find the GCD of two numbers\n  public static long gcd(long a, long b) {\n    if (a < b) return gcd(b,a);\n    if (b == 0)\n      return a;\n    else\n      return gcd(b,a%b);\n  }\n\n  //Fast exponentiation (x^y mod m)\n  public static long power(long x, long y, long m) {\n    if (y < 0) return 0L;\n    long ans = 1;\n    x %= m;\n    while (y > 0) {\n      if(y % 2 == 1)\n        ans = (ans * x) % m;\n      y /= 2;\n      x = (x * x) % m;\n    }\n    return ans;\n  }\n\n  public static int[] shuffle(int[] array) {\n    Random rgen = new Random();\n    for (int i = 0; i < array.length; i++) {\n      int randomPosition = rgen.nextInt(array.length);\n      int temp = array[i];\n      array[i] = array[randomPosition];\n      array[randomPosition] = temp;\n    }\n    return array;\n  }\n\n  public static long[] shuffle(long[] array) {\n    Random rgen = new Random();\n    for (int i = 0; i < array.length; i++) {\n      int randomPosition = rgen.nextInt(array.length);\n      long temp = array[i];\n      array[i] = array[randomPosition];\n      array[randomPosition] = temp;\n    }\n    return array;\n  }\n\n  public static int[][] shuffle(int[][] array) {\n    Random rgen = new Random();\n    for (int i = 0; i < array.length; i++) {\n      int randomPosition = rgen.nextInt(array.length);\n      int[] temp = array[i];\n      array[i] = array[randomPosition];\n      array[randomPosition] = temp;\n    }\n    return array;\n  }\n\n  public static int[][] sort(int[][] array) {\n    //Sort an array (immune to quicksort TLE)\n\n    Arrays.sort(array, new Comparator<int[]>() {\n      @Override\n      public int compare(int[] a, int[] b) {\n        return a[1]-b[1]; //ascending order\n      }\n    });\n    return array;\n  }\n\n  public static long[][] sort(long[][] array) {\n    //Sort an array (immune to quicksort TLE)\n    Random rgen = new Random();\n    for (int i = 0; i < array.length; i++) {\n      int randomPosition = rgen.nextInt(array.length);\n      long[] temp = array[i];\n      array[i] = array[randomPosition];\n      array[randomPosition] = temp;\n    }\n    Arrays.sort(array, new Comparator<long[]>() {\n      @Override\n      public int compare(long[] a, long[] b) {\n        if (a[0] < b[0])\n          return -1;\n        else if (a[0] > b[0])\n          return 1;\n        else\n          return 0;\n      }\n    });\n    return array;\n  }\n\n  static class MyScanner {\n    private BufferedReader br;\n    private StringTokenizer st;\n\n    MyScanner() {\n      br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n      while (st == null || !st.hasMoreElements()) {\n        try {\n          st = new StringTokenizer(br.readLine());\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      return st.nextToken();\n    }\n\n    int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n      return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    String nextLine(){\n      String str = \"\";\n      try {\n        str = br.readLine();\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n      return str;\n    }\n  }\n\n  static class Pair<K,V> {\n\n    public K key;\n    public V value;\n\n    public Pair(K key, V value) {\n      this.key = key;\n      this.value = value;\n    }\n\n    @Override\n    public String toString() {\n      return key + \":\" + value;\n    }\n\n    @Override\n    public int hashCode() {\n      return key.hashCode() * 13 + (value == null ? 0 : value.hashCode());\n    }\n\n    @Override\n    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o instanceof Pair) {\n        Pair pair = (Pair) o;\n        return Objects.equals(key, pair.key) && Objects.equals(value, pair.value);\n      }\n      return false;\n    }\n  }\n\n  static class Triple<A, B, C> {\n    public A a;\n    public B b;\n    public C c;\n\n    public Triple(A a, B b, C c) {\n      this.a = a;\n      this.b = b;\n      this.c = c;\n    }\n\n    @Override\n    public String toString() {\n      return a + \":\" + b + \":\" + c;\n    }\n\n    @Override\n    public int hashCode() {\n      return (a == null ? 0 : a.hashCode()) * 13 + (b == null ? 0 : b.hashCode()) * 41 + (c == null ? 0 : c.hashCode());\n    }\n\n    @Override\n    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o instanceof Triple) {\n        Triple triple = (Triple) o;\n        return Objects.equals(a, triple.a) && Objects.equals(b, triple.b) && Objects.equals(c, triple.c);\n      }\n      return false;\n    }\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "#####################################   \nimport atexit, io, sys \nbuffer = io.BytesIO() \nsys.stdout = buffer\n@atexit.register \ndef write(): sys.__stdout__.write(buffer.getvalue())   \n##################################### \n \n\ndef compute(a,b):\n\th = [0] * (a*b)\n\tc = 0\n\tfor ii in range(a*b):\n\t\tif (ii % a) % b == (ii %b) % a: c +=1\n\t\th[ii] = c\n\treturn h\ndef f(n,h):\n\tt = len(h)\n\treturn ((n/t) * h[t-1]) + h[n%t]\nnt = int(raw_input())\n\nfor _ in xrange(nt):\n\ta,b,nq = map(int ,raw_input().split())\n\th = compute(a,b)\n\tfor __ in xrange(nq):\n\t\tl,r = map(int, raw_input().split())\n\t\tprint r- l +1 - (f(r,h) - f(l-1,h)),\n\tprint\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic class EasyCodeforces {\n    public static void main(String[] args) throws IOException {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\n        StringTokenizer stk = new StringTokenizer(in.readLine());\n        int t = Integer.parseInt(stk.nextToken());\n\n        while (t-- > 0) {\n            stk = new StringTokenizer(in.readLine());\n            int a = Integer.parseInt(stk.nextToken());\n            int b = Integer.parseInt(stk.nextToken());\n            int q = Integer.parseInt(stk.nextToken());\n\n            int product = a * b;\n            int[] equals = new int[product];\n            for (int i = 0; i < product; i++) {\n                int x = (i % a) % b;\n                int y = (i % b) % a;\n                if (x == y) {\n                    equals[i] = 1;\n                }\n                if (i > 0) {\n                    equals[i] += equals[i - 1];\n                }\n            }\n\n            while (q-- > 0) {\n                stk = new StringTokenizer(in.readLine());\n                long l = Long.parseLong(stk.nextToken());\n                long r = Long.parseLong(stk.nextToken());\n\n                long ans = r - l + 1;\n                long equalsBefore = equals[product - 1] * ((l - 1) / product) + equals[(int) ((l - 1) % product)];\n                long equalsTill = equals[product - 1] * (r / product) + equals[(int) (r % product)];\n                ans -= (equalsTill - equalsBefore);\n                out.print(ans + \" \");\n\n            }\n            out.println();\n        }\n\n        out.close();\n        in.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\n\n\ndef calc_ts(a, b):\n    r = [0] * (a * b)\n    s = 0\n    for x in range(a * b):\n        s += (x % a % b) != (x % b % a)\n        r[x] = s\n\n    return r\n\ndef f(a, b, l, r, ts):\n    nr, mr = divmod(r, a * b)\n    nl, ml = divmod(l - 1, a * b)\n    return ts[-1] * nr + ts[mr] - (ts[-1] * nl + ts[ml])\n\n\n\ndef bf(a, b, l, r):\n    return sum((x % a % b) != (x % b % a) for x in range(l, r + 1))\n\n\nif False:\n    import numpy as np\n\n    for i in range(100):\n        a, b = np.random.choice(100, 2) + 1\n        ts = calc_ts(a, b)\n        l, r = sorted(np.random.choice(100000, 2, replace=False) + 1)\n        assert f(a, b, l, r, ts) == bf(a, b, l, r)\n\n\ndef pp(input):\n    n_test = int(input())\n    for i in range(n_test):\n        a, b, q = map(int, input().split())\n        res = [0] * q\n        ts = calc_ts(a, b)\n        for idx in range(q):\n            l, r = map(int, input().split())\n            res[idx] = f(a, b, l, r, ts)\n\n        print(\" \".join(map(str, res)))\n\n\nif \"paalto\" in os.getcwd():\n    from string_source import string_source\n\n    pp(\n        string_source(\n            \"\"\"2\n4 6 5\n1 3\n1 1\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\"\"\"\n        )\n    )\n\n\nelse:\n    pp(iter(sys.stdin.buffer.read().decode().splitlines()).__next__)\n"
        },
        {
            "language": 3,
            "solution": "from math import *\ndef io():\n    return map(int,input().split())\ndef op():\n    return list(map(int,input().split()))\ndef cal(r,b,x):\n    ans=r\n    div=r//x\n    prod=div*x\n    if div>0:\n        ans-=min(b,r-prod+1)\n        ans-=(div-1)*b\n    return ans-min(b-1,r)\nfor _ in range(int(input())):\n    a,b,q=io()\n    if a > b:\n        a,b = b , a\n    x=(a*b)//gcd(a,b)\n    for i in range(q):\n        l,r=io()\n        if r<b or x==b:\n            print(0,end=' ')\n        else:\n            va=cal(r,b,x)-cal(l-1,b,x)\n            print(va,end=' ')\n    print()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint f[210 * 210];\nint ab;\nlong long solve(long long n) {\n  long long res = f[ab - 1] * (n / ab);\n  int m = n % ab;\n  res += f[m];\n  return res;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b;\n    cin >> a >> b;\n    ab = a * b;\n    memset(f, 0, sizeof f);\n    for (int i = (1); i < (ab); ++i) f[i] += (i % a % b) != (i % b % a);\n    for (int i = (1); i < (ab); ++i) f[i] += f[i - 1];\n    int q;\n    cin >> q;\n    while (q--) {\n      long long q1, q2;\n      cin >> q1 >> q2;\n      long long res = solve(q2) - solve(q1 - 1);\n      cout << res << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    a,b,q=map(int,input().strip().split(\" \"))\n    def gcd(a,b): \n        if a == 0: \n            return b \n        return gcd(b % a, a) \n  \n# Function to return LCM of two numbers \n    def lcm(a,b): \n        return (a*b) // gcd(a,b) \n    lcm_=lcm(a,b)\n    for j in range(q):\n        l,r=map(int,input().strip().split(\" \"))\n        def calculate(l,lcm_,a,b):\n            k=l//lcm_\n            count=k*max(a,b)\n            if(lcm_*k+max(a,b)-1<=l):\n                count+=max(a,b)\n            else:\n                count+=(l-lcm_*k+1)\n            return count\n        res=calculate(r,lcm_,a,b)-calculate(l-1,lcm_,a,b)\n        print(r-l+1-res,end=\" \")\n    print()\n"
        },
        {
            "language": 3,
            "solution": "def hcf(a, b):  \n    if a == 0 : \n        return b        \n    return hcf(b%a, a)\nfor t in range(int(input())):\n    a,b,q1=map(int,input().split())\n    if b<a:\n        a,b=b,a\n    lcm=(a*b)//hcf(a,b)\n    for i in range(q1):\n        l,r=map(int,input().split())\n        c1=r//lcm\n        l=l-1\n        if l==0:\n            c2=0\n        else:\n            c2=l//lcm\n        if c1==0:\n            p=0\n        else:\n            p=(c1-1)*b\n        if r>=b:\n            p=p+b-1\n        else:\n            p=p+r\n        if r-(c1*lcm)>=b and c1>0:\n            p=p+b\n        else:\n            if c1>0:\n                p=p+(r-(c1*lcm)+1)\n        if c2>0:\n            q=(c2-1)*b\n        else:\n            q=0\n        if l>=b:\n            q=q+b-1\n        else:\n            q=q+l\n        if l-(c2*lcm)>=b and c2>0:\n            q=q+b\n        else:\n            if c2>0:\n                q=q+(l-(c2*lcm)+1)\n        ans=r-l\n        ans=ans-(p-q)\n        print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class c>\nstruct rge {\n  c b, e;\n};\ntemplate <class c>\nrge<c> range(c i, c j) {\n  return rge<c>{i, j};\n}\ntemplate <class c>\nauto dud(c *x) -> decltype(cerr << *x, 0);\ntemplate <class c>\nchar dud(...);\nstruct debug {\n  ~debug() { cerr << endl; }\n  template <class c>\n  typename enable_if<sizeof dud<c>(0) != 1, debug &>::type operator<<(c i) {\n    cerr << boolalpha << i;\n    return *this;\n  }\n  template <class c>\n  typename enable_if<sizeof dud<c>(0) == 1, debug &>::type operator<<(c i) {\n    return *this << range(begin(i), end(i));\n  }\n  template <class c, class b>\n  debug &operator<<(pair<b, c> d) {\n    return *this << \"(\" << d.first << \", \" << d.second << \")\";\n  }\n  template <class c>\n  debug &operator<<(rge<c> d) {\n    *this << \"[\";\n    for (auto it = d.b; it != d.e; ++it) *this << \", \" + 2 * (it == d.b) << *it;\n    return *this << \"]\";\n  }\n};\nlong long mod = 1000000007;\nint INF = 1e9 + 1e8 + 1e7;\nlong long INF64 = 1e18;\nvoid add(int &a, int &b) {\n  a += b;\n  if (a > mod) a -= mod;\n}\nlong long binpow(long long a, long long b, long long m) {\n  long long res = 1;\n  while (b > 0) {\n    if (b & 1) {\n      res = (res * a) % m;\n    }\n    a = (a * a) % m;\n    b >>= 1;\n  }\n  return res;\n}\nvoid test_case(int test) {\n  int a, b, q;\n  cin >> a >> b >> q;\n  vector<int> ca(a * b);\n  vector<int> cb(a * b);\n  vector<int> pref(a * b + 1);\n  for (int i = 0; i < a; i++) {\n    ca[i] = i % b;\n  }\n  for (int i = 0; i < b; i++) {\n    cb[i] = i % a;\n  }\n  for (int i = 0; i < a * b; i++) {\n    ca[i] = ca[i % a];\n    cb[i] = cb[i % b];\n  }\n  for (int i = 0; i < a * b; i++) {\n    pref[i + 1] = pref[i] + (ca[i] != cb[i]);\n  }\n  auto get = [&](long long x) {\n    long long m = x % (a * b);\n    long long d = x / (a * b);\n    long long ans = d * pref[a * b];\n    if (m != 0) {\n      ans += pref[m + 1];\n    }\n    return ans;\n  };\n  for (int i = 0; i < q; i++) {\n    long long l, r;\n    cin >> l >> r;\n    cout << (get(r) - get(l - 1)) << ' ';\n  }\n  cout << '\\n';\n}\nint main() {\n  cin.tie(0);\n  cout.tie(0);\n  ios_base::sync_with_stdio(false);\n  int t = 1;\n  cin >> t;\n  for (int test = 1; test <= t; test++) {\n    test_case(test);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gcd(int a, int b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nint lcm(int a, int b) { return (a * b) / gcd(a, b); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int a, b, q, l, r;\n    cin >> a >> b;\n    cin >> q;\n    long long int mul = a * b;\n    long long int xx = lcm(a, b);\n    while (q--) {\n      cin >> l >> r;\n      long long int total;\n      long long int m1 = max(a, b);\n      long long int m2 = min(a, b);\n      if (r < m1) {\n        cout << 0 << \" \";\n      } else {\n        if (l < m1) {\n          l = m1;\n        }\n        total = (r - l + 1);\n        long long int k = l % xx;\n        long long int f = 0;\n        if (k < m1) {\n          l += (m1 - k);\n          total -= (m1 - k);\n          if (r < l) {\n            f = 1;\n            total += (l - (r + 1));\n          }\n        }\n        if (!f) {\n          k = r % xx;\n          if (k < m1) {\n            r -= (k + 1);\n            total -= (k + 1);\n            if (r < l) total += (l - (r + 1));\n          }\n        }\n        if (l < r) {\n          long long int x1 = r / xx;\n          long long int x2 = (l - 1) / xx;\n          long long int t2 = x1 - x2;\n          total -= t2 * (m1);\n        }\n        cout << total << \" \";\n      }\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\nfor _ in range(int(input())):\n    a, b, q = tuple(map(int, input().split()))\n    a, b = min(a, b), max(a, b)\n    nok = a * b // gcd(a, b)\n\n    answers = []\n    for _ in range(q):\n        left, right = tuple(map(int, input().split()))\n\n        delta = 0\n        if left % nok != 0:\n            ost = left % nok\n            left -= ost\n\n            delta += max(ost - b, 0)\n        if right % nok != nok - 1:\n            ost = right % nok\n            right += (nok - ost - 1)\n\n            if ost >= b:\n                delta += nok - ost - 1\n            else:\n                delta += nok - b\n\n        answers.append((right - left + 1) - delta - ((right - left + 1) // nok) * b)\n\n    print(*answers)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\ndef gcd(a,b): \n    if(b==0): \n        return a \n    else: \n        return gcd(b,a%b) \nfor _ in range(int(stdin.readline())):\n    a,b,q=map(int,stdin.readline().split())\n    a,b=sorted([a,b])\n    z=a*b//gcd(a,b)\n    ar=[0]*(z+1)\n    for i in range(1,z+1):\n        if (i%a)%b!=(i%b)%a:\n            ar[i]=ar[i-1]+1\n        else:\n            ar[i]=ar[i-1]\n    for _ in range(q):\n        l,r=map(int,stdin.readline().split())\n        s=ar[z]*((r-l)//z)\n        l+=z*((r-l)//z)\n        if r==l:\n            if r%z==0:\n                s+=(ar[z]-ar[z-1])\n            else:\n                s+=(ar[r%z]-ar[r%z-1])\n        elif r%z==0:\n            s+=(ar[z]-ar[l%z-1])\n        elif l%z==0:\n            s+=(ar[z]-ar[z-1]+ar[r%z])\n        elif l%z>r%z:\n            s+=(ar[r%z]+ar[z]-ar[l%z-1])\n        else:\n            s+=(ar[r%z]-ar[l%z-1])\n        stdout.write(str(s)+' ')\n    print()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tstatic long lcm(long a,long b) {\n    \treturn (a/gcd(a,b))*b;\n    }\n    static long gcd(long a, long b) {\n\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\tpublic static void main(String[] args) throws Exception{\n\t\tPrintWriter pw=new PrintWriter(System.out);\n\t\tMScanner sc = new MScanner(System.in);\n\t\tint tc=sc.nextInt();\n\t\twhile(tc-->0) {\n\t\t\tint a=sc.nextInt(),b=sc.nextInt(),q=sc.nextInt();\n\t\t\tint lcm=(int)lcm(a, b);\n\t\t\tboolean[]yes=new boolean[lcm];\n\t\t\tlong cnt=0;\n\t\t\tlong[]prefCnt=new long[lcm];\n\t\t\tfor(int i=0;i<lcm;i++) {\n\t\t\t\tif((i%a)%b!=(i%b)%a) {\n\t\t\t\t\tyes[i]=true;\n\t\t\t\t\tcnt++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tprefCnt[i]=cnt;\n\t\t\t}\n//\t\t\tSystem.out.println(arrToString(prefCnt));\n\t\t\twhile(q-->0) {\n\t\t\t\tlong l=sc.nextLong()-1,r=sc.nextLong();\n\t\t\t\tlong ans=(r/lcm)*cnt+prefCnt[(int)(r%lcm)];\n\t\t\t\tans-=((l/lcm)*cnt+prefCnt[(int)(l%lcm)]);\n\t\t\t\tpw.print(ans+\" \");\n\t\t\t}\n\t\t\tpw.println();\n\t\t}\n\t\t\n\t\tpw.flush();\n\t}\n\tstatic class MScanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\t\tpublic MScanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n \n\t\tpublic MScanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n \n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tpublic int[] intArr(int n) throws IOException {\n\t        int[]in=new int[n];for(int i=0;i<n;i++)in[i]=nextInt();\n\t        return in;\n\t\t}\n\t\tpublic long[] longArr(int n) throws IOException {\n\t        long[]in=new long[n];for(int i=0;i<n;i++)in[i]=nextLong();\n\t        return in;\n\t\t}\n\t\tpublic int[] intSortedArr(int n) throws IOException {\n\t        int[]in=new int[n];for(int i=0;i<n;i++)in[i]=nextInt();\n\t        shuffle(in);\n\t        Arrays.sort(in);\n\t        return in;\n\t\t}\n\t\tpublic long[] longSortedArr(int n) throws IOException {\n\t        long[]in=new long[n];for(int i=0;i<n;i++)in[i]=nextLong();\n\t        shuffle(in);\n\t        Arrays.sort(in);\n\t        return in;\n\t\t}\n\t\tpublic Integer[] IntegerArr(int n) throws IOException {\n\t        Integer[]in=new Integer[n];for(int i=0;i<n;i++)in[i]=nextInt();\n\t        return in;\n\t\t}\n\t\tpublic Long[] LongArr(int n) throws IOException {\n\t        Long[]in=new Long[n];for(int i=0;i<n;i++)in[i]=nextLong();\n\t        return in;\n\t\t}\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n \n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n \n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n \n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n \n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n \n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n\tstatic void shuffle(int[]in) {\n\t\tfor(int i=0;i<in.length;i++) {\n\t\t\tint idx=(int)(Math.random()*in.length);\n\t\t\tint tmp=in[i];\n\t\t\tin[i]=in[idx];\n\t\t\tin[idx]=tmp;\n\t\t}\n\t}\n\tstatic void shuffle(long[]in) {\n\t\tfor(int i=0;i<in.length;i++) {\n\t\t\tint idx=(int)(Math.random()*in.length);\n\t\t\tlong tmp=in[i];\n\t\t\tin[i]=in[idx];\n\t\t\tin[idx]=tmp;\n\t\t}\n\t}\n\tstatic String arrToString(int[]x) {\n\t\treturn Arrays.toString(x);\n\t}\n\tstatic String arrToString(long[]x) {\n\t\treturn Arrays.toString(x);\n\t}\n\tstatic String arrToString(Integer[]x) {\n\t\treturn Arrays.toString(x);\n\t}\n\tstatic String arrToString(Long[]x) {\n\t\treturn Arrays.toString(x);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\nfrom sys import stdout\ninput=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nif __name__== \"__main__\":\n    for _ in range(int(input())):\n        a,b,q=map(int,input().split())\n        c=[0]\n        for i in range(1,a*b+1):\n            c.append(c[-1])\n            if (i%a)%b!=(i%b)%a:\n                c[-1]+=1\n        for i in range(q):\n            l,r=map(int,input().split())\n            l=l-1\n            stdout.write(str((r//(a*b))*c[-1]+c[r%(a*b)]-((l//(a*b))*c[-1]+c[l%(a*b)]))+\"  \")\n        stdout.write(\"\\n\")"
        },
        {
            "language": 1,
            "solution": "from sets import Set\n\nT = int(raw_input())\nfor t in range(T):\n\ta,b,q = map(int, raw_input().split())\n\tmaxab = max(a,b)\n\tminab = min(a,b)\n\tgcf = 1\t\n\tfor i in reversed(range(minab+1)):\n\t\tif maxab%i == 0 and minab%i == 0:\n\t\t\tgcf = i\n\t\t\tbreak\n\tlcm = (maxab*minab)/gcf\n\tnum_diff = lcm - maxab\t\n\tq_ans = []\n\tfor i in range(q):\n\t\tl,r = map(int, raw_input().split())\n\t\tif lcm == maxab:\n\t\t\tq_ans.append(0)\n\t\t\tcontinue\t\t\n\t\tlmod = l%lcm\n\t\trmod = r%lcm\n\t\tlq = l/lcm\n\t\trq = r/lcm\n\t\tleft_remove = max(0, lmod-maxab)\n\t\tright_remove = num_diff\n\t\tif rmod >= maxab:\n\t\t\tright_remove = lcm-rmod-1\n\n\t\tq_ans.append((rq-lq+1)*num_diff - left_remove - right_remove)\n\tprint ' '.join(map(str,q_ans))\n\t\t\n\n\t\n\t"
        },
        {
            "language": 3,
            "solution": "import math\nfor i in range(int(input())):\n    a , b, q = list(map(int,input().split()))\n    a,b = min(a,b),max(a,b)\n    for i in range(q):\n        s = 0\n        l,r = list(map(int,input().split()))\n#         if(r<b):\n#             print(0)\n#             continue\n        \n        if(b%a == 0):\n            print(0)\n            continue\n        j = b*a//math.gcd(a,b)\n        u = l//(j)\n        v = r//j\n        s+=(v-u)*b\n        if(l%(j)<b):\n            s+=b - l%j\n        if(r%j < b):\n            s-=b - r%j-1\n        print(r-l+1-s, end = \" \")\n    print()"
        },
        {
            "language": 4,
            "solution": "\t\t/*\t/ \uff8c\uff8c\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u30e0\n\t\t\t/ )\\\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800  Y\n\t\t\t(\u2800\u2800| ( \u0361\u00b0 \u035c\u0296 \u0361\u00b0\uff09\u2800\u2312(\u2800 \u30ce\n\t\t\t(\u2800 \uff89\u2312 Y \u2312\u30fd-\u304f __\uff0f\n\t\t\t| _\u2800\uff61\u30ce| \u30ce\uff61 |/\n\t\t\t(\u2800\u30fc '_\u4eba`\u30fc \uff89\n\t\t\t\u2800|\\ \uffe3 _\u4eba'\u5f61\uff89\n\t\t\t\u2800 )\\\u2800\u2800 \uff61\u2800\u2800 /\n\t\t\t\u2800\u2800(\\\u2800 #\u2800 /\n\t\t\t\u2800/\u2800\u2800\u2800/\u1f63====================D-\n\t\t\t/\u2800\u2800\u2800/\u2800 \\ \\\u2800\u2800\\\n\t\t\t( (\u2800)\u2800\u2800\u2800\u2800 ) ).\u2800)\n\t\t\t(\u2800\u2800)\u2800\u2800\u2800\u2800\u2800( | /\n\t\t\t|\u2800 /\u2800\u2800\u2800\u2800\u2800\u2800 | /\n\t\t\t[_] \u2800\u2800\u2800\u2800\u2800[___]                     */\n\t\t// Main Code at the Bottom\n\t\timport java.util.*;\n\t\timport java.lang.*;\n\t\timport java.io.*;\n\t\timport java.math.BigInteger; \n\t\tpublic class Main {\n\t\t\t//Fast IO class\n\t\t    static class FastReader {\n\t\t        BufferedReader br; \n\t\t        StringTokenizer st; \n\t\t        public FastReader() {\n\t\t        \tboolean env=System.getProperty(\"ONLINE_JUDGE\") != null;\n\t\t        \tif(!env) {\n\t\t        \t\ttry {\n\t\t\t\t\t\t\tbr=new BufferedReader(new FileReader(\"src\\\\input.txt\"));\n\t\t\t\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t}\n\t\t        \t}\n\t\t        \telse br = new BufferedReader(new InputStreamReader(System.in)); \n\t\t        } \n\t\t        String next() {\n\t\t            while (st == null || !st.hasMoreElements()) {\n\t\t                try {\n\t\t                    st = new StringTokenizer(br.readLine()); \n\t\t                } \n\t\t                catch (IOException  e) {\n\t\t                    e.printStackTrace(); \n\t\t                } \n\t\t            } \n\t\t            return st.nextToken(); \n\t\t        } \n\t\t        int nextInt() {\n\t\t            return Integer.parseInt(next()); \n\t\t        } \n\t\t        long nextLong() {\n\t\t            return Long.parseLong(next()); \n\t\t        } \n\t\t        double nextDouble() {\n\t\t            return Double.parseDouble(next()); \n\t\t        } \n\t\t        String nextLine() {\n\t\t            String str = \"\"; \n\t\t            try {\n\t\t                str = br.readLine(); \n\t\t            } \n\t\t            catch (IOException e) {\n\t\t                e.printStackTrace(); \n\t\t            } \n\t\t            return str; \n\t\t        } \n\t\t    }     \n\t\t    static long MOD=1000000000+7;\n\t\t    //Euclidean Algorithm\n\t\t    static long gcd(long A,long B){\n\t\t    \treturn (B==0)?A:gcd(B,A%B);\n\t\t    }\n\t\t    //Modular Exponentiation\n\t\t    static long fastExpo(long x,long n){\n\t\t        if(n==0) return 1;\n\t\t        if((n&1)==0) return fastExpo((x*x)%MOD,n/2)%MOD;\n\t\t        return ((x%MOD)*fastExpo((x*x)%MOD,(n-1)/2))%MOD;\n\t\t    }\n\t\t    //Modular Inverse\n\t\t    static long inverse(long x) {\n\t\t    \treturn fastExpo(x,MOD-2);\n\t\t    }\n\t\t    //Prime Number Algorithm\n\t\t    static boolean isPrime(long n){\n\t\t        if(n<=1) return false;\n\t\t        if(n<=3) return true;\n\t\t        if(n%2==0 || n%3==0) return false;\n\t\t        for(int i=5;i*i<=n;i+=6) if(n%i==0 || n%(i+2)==0) return false;\n\t\t        return true;\n\t\t    }\n\t\t    //Reverse an array\n\t\t    static void reverse(char arr[],int l,int r){\n\t\t    \twhile(l<r) {\n\t\t    \t\tchar tmp=arr[l];\n\t\t    \t\tarr[l++]=arr[r];\n\t\t    \t\tarr[r--]=tmp;\n\t\t    \t}\n\t\t    }\n\t\t    //Print array\n\t\t    static void print1d(int arr[]) {\n\t\t    \tout.println(Arrays.toString(arr));\n\t\t    }\n\t\t    static void print2d(int arr[][]) {\n\t\t    \tfor(int a[]: arr) out.println(Arrays.toString(a));\n\t\t    }\n\t\t    // Pair\n\t\t    static class pair{\n\t\t    \tint x,y;\n\t\t    \tpair(int a,int b){\n\t\t    \t\tthis.x=a;\n\t\t    \t\tthis.y=b;\n\t\t    \t}\n\t\t    \tpublic boolean equals(Object obj) {\n\t\t    \t\tif(obj == null || obj.getClass()!= this.getClass()) return false;\n\t\t            pair p = (pair) obj;\n\t\t            return (this.x==p.x && this.y==p.y);\n\t\t        }\n\t\t    \tpublic int hashCode() {\n\t\t            return Objects.hash(x,y);\n\t\t        }\n\t\t    }\n\t\t    static FastReader sc=new FastReader();\n\t\t    static PrintWriter out=new PrintWriter(System.out);  \n\t\t    //Main function(The main code starts from here\n\t\t    static int a,b,q,lcm,dp[];\n\t\t    static long f(long x) {\n\t\t    \treturn dp[lcm-1]*(x/lcm)+dp[(int)(x%lcm)];\n\t\t    }\n\t\t    public static void main (String[] args) throws java.lang.Exception {\n\t\t    \tint test=1;\n\t\t    \ttest=sc.nextInt();\n\t\t    \twhile(test-->0){\n\t\t    \t\ta=sc.nextInt();b=sc.nextInt();q=sc.nextInt();\n\t\t    \t\tlcm=(a*b)/(int)gcd(a,b);\n\t\t    \t\tdp=new int[lcm];\n\t\t    \t\tfor(int i=1;i<lcm;i++) dp[i]=dp[i-1]+((i%a)%b!=(i%b)%a?1:0);\n\t\t    \t\twhile(q-->0) {\n\t\t    \t\t\tlong l=sc.nextLong(),r=sc.nextLong();\n\t\t    \t\t\tout.print((f(r)-f(l-1))+\" \");\n\t\t    \t\t}\n\t\t    \t\tout.println();\n\t\t    \t}\n\t\t        out.flush();\n\t\t        out.close();\n\t\t    }\n\t\t}"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nimport io,os\ninput = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\ndef lcm(a, b):\n    return abs(a*b) // gcd(a, b)\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    l=[]\n    for i in range(q):\n        l.append(list(map(int,input().split())))\n    fr1,fr2=lcm(a,b),max(a,b)\n    for s,e in l:\n        ans=0\n        t1=(s//fr1 +(1 if s % fr1 != 0 else 0))*fr1\n        t2=t1-fr1\n        if t1 < e:\n            kk=max(s,fr2+t2)\n            ans+=t1-kk\n            t3=(e//fr1 + (1 if e % fr1 != 0 else 0 ))*fr1\n            t4=t3-fr1\n            if e % fr1 == 0:\n                e-=1\n            tt=e-(fr2+t4)\n            if tt >=0:\n                ans+=tt+1\n            ans+=((t4-t1)//fr1)*(fr1-fr2)\n \n        else:\n            if e % fr1 == 0:\n                e-=1\n            kk=max(s,fr2+t2)\n            kk2=min(e,t1-1)\n            ans+=max(kk2-kk+1,0)\n        print(ans,end=\" \")\n    print() "
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.function.LongUnaryOperator;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CYetAnotherCountingProblem solver = new CYetAnotherCountingProblem();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CYetAnotherCountingProblem {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int t = in.nextInt();\n            for (int i = 0; i < t; i++) {\n                solve(in, out);\n            }\n        }\n\n        private void solve(InputReader in, PrintWriter out) {\n            long a = in.nextLong(), b = in.nextLong();\n\n            int q = in.nextInt();\n\n            long lcm = NumberTheory.lcm(a, b);\n            long max = Math.max(a, b);\n\n            LongUnaryOperator same = n -> {\n                long ans = 0;\n                ans += (n / lcm) * max;\n                n %= lcm;\n                ans += Math.min(n, max);\n                return ans;\n            };\n\n            for (int i = 0; i < q; i++) {\n                long l = in.nextLong(), r = in.nextLong() + 1;\n                long answer = same.applyAsLong(r) - same.applyAsLong(l);\n                answer = (r - l) - answer;\n                out.print(answer + \" \");\n            }\n            out.println();\n        }\n\n    }\n\n    static class NumberTheory {\n        public static long gcd(long a, long b) {\n            a = Math.abs(a);\n            b = Math.abs(b);\n            long c;\n            while (a != 0) {\n                c = a;\n                a = b % a;\n                b = c;\n            }\n            return b;\n        }\n\n        public static long lcm(long a, long b) {\n            return (a / gcd(a, b)) * b;\n        }\n\n    }\n\n    static class InputReader {\n        public final BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a * b) / gcd(a, b)\n\n\nt = int(input())\n\nfor test in range(t):\n    a, b, q = list(map(int, input().split()))\n\n    if a == b:\n        for query in range(q):\n            l, r = list(map(int, input().split()))\n            print(int(0), end=\" \")\n        print()\n\n    else:\n        greater = max(a, b)\n        smaller = min(a, b)\n        lc = int(lcm(greater, smaller))\n        count = 0\n        valid_list = [0] * lc\n        valid_count = [0] * lc\n\n        for i in range(0, lc):\n            if ((i % smaller) % greater) != ((i % greater) % smaller):\n                count += 1\n                valid_list[i] = 1\n            valid_count[i] = count\n\n        for query in range(q):\n            l, r = list(map(int, input().split()))\n\n            #total_range = r - l + 1\n            #num_to_check = total_range % lc\n            ans = 0\n\n            cycles_l = (l-1) // lc\n            rem_l = (l-1) % lc\n            ans_l = (cycles_l * count) + valid_count[rem_l]\n            \n\n            cycles_r = r // lc\n            rem_r = r % lc\n            ans_r = (cycles_r * count) + valid_count[rem_r]\n\n            ans = ans_r - ans_l\n\n\n            print(int(ans), end=\" \")\n        print()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"O3\")\nusing namespace std;\nconst double eps = 1e-9;\nconst double pi = acos(-1.0);\nlong long mod = 1e9 + 7;\nconst int MAXN = 10005;\nconst long double INF = 1e18 + 9;\nint s = 1024;\nint gcd(int a, int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nint lcm(int a, int b) { return a * b / gcd(a, b); }\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(10);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    if (a > b) swap(a, b);\n    int c = lcm(a, b);\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      int l1 = l % c;\n      l += c - l1;\n      int r1 = r % c;\n      r -= r1;\n      long long res = 0;\n      if (l <= r) {\n        long long k = r / c - l / c;\n        res += k * (c - b);\n        res += c - max(b, l1);\n        res += max(0, r1 - b + 1);\n      } else {\n        l1 = max(l1, b);\n        if (l1 <= r1) res += r1 - l1 + 1;\n      }\n      cout << res << ' ';\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\npublic class C {\n\n    static class SegmentTree {\n\n        /**\n         * Provides interface to perform operations on range queue like sum, min or max\n         */\n\n        interface Operation {\n            int perform(int a, int b);\n        }\n\n        static class SumOperation implements Operation {\n            @Override\n            public int perform(int a, int b) {\n                return a + b;\n            }\n        }\n\n\n        public int[] createTree(int[] input, Operation operation) {\n            int height = (int) Math.ceil(Math.log(input.length) / Math.log(2));\n            int[] segmentTree = new int[(int) (Math.pow(2, height + 1) - 1)];\n            createTreeUtil(segmentTree, input, 0, input.length - 1, 0, operation);\n            return segmentTree;\n        }\n\n        private void createTreeUtil(int[] segmentTree, int[] input, int low, int high, int pos, Operation operation) {\n            if (low == high) {\n                segmentTree[pos] = input[low];\n                return;\n            }\n            int mid = (low + high) / 2;\n            createTreeUtil(segmentTree, input, low, mid, 2 * pos + 1, operation);\n            createTreeUtil(segmentTree, input, mid + 1, high, 2 * pos + 2, operation);\n            segmentTree[pos] = operation.perform(segmentTree[2 * pos + 1], segmentTree[2 * pos + 2]);\n        }\n\n        /**\n         * RangeQuery segment tree for certain range (when not applied with lazy)\n         */\n\n        public int rangeQuery(int[] segmentTree, int qlow, int qhigh, int len, Operation operation) {\n            return rangeQueryUtil(segmentTree, 0, len - 1, qlow - 1, qhigh - 1, 0, operation);\n        }\n\n        private int rangeQueryUtil(int[] segmentTree, int low, int high, int qlow, int qhigh, int pos, Operation operation) {\n            if (qlow <= low && qhigh >= high) {\n                return segmentTree[pos];\n            }\n            if (qlow > high || qhigh < low) {\n                return 0;\n            }\n            int mid = (low + high) / 2;\n            return operation.perform(rangeQueryUtil(segmentTree, low, mid, qlow, qhigh, 2 * pos + 1, operation),\n                    rangeQueryUtil(segmentTree, mid + 1, high, qlow, qhigh, 2 * pos + 2, operation));\n        }\n    }\n        public static void main(String[] args) throws IOException {\n        BufferedReader inp = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n\n        int t = Integer.parseInt(inp.readLine());\n        while (t-->0){\n            String[] s1 = inp.readLine().split(\" \");\n            int a = Integer.parseInt(s1[0]);\n            int b = Integer.parseInt(s1[1]);\n            int q = Integer.parseInt(s1[2]);\n\n            long sum = 0;\n            int[] check = new int[a*b+1];\n            long[] at = new long[a*b+1];\n\n            int size = a*b+1;\n            for(int i=1;i<size;i++){\n                if((i%a)%b!=(i%b)%a){\n                    check[i]++;\n                    sum++;\n                }\n                at[i] = sum;\n            }\n\n            size--;\n            while (q-->0){\n\n\n                long ans = 0;\n                s1 = inp.readLine().split(\" \");\n                long l = Long.parseLong(s1[0]);\n                long r = Long.parseLong(s1[1]);\n\n                long rem = l%size;\n                long rem2 = r%size;\n                long x = 0;\n                if(rem==0){\n                    x = (l / size) * sum - check[size];\n                }\n                else {\n                    x = (l / size) * sum + at[(int) rem - 1];\n                }\n                long y =  (r/size) *sum + at[(int)rem2];\n\n                ans = y-x;\n                out.write(ans+\" \");\n\n\n\n            }\n            out.write(\"\\n\");\n\n\n\n\n        }\n\n        out.flush();\n\n\n    }\n\n\n    private static void merge(int[] arr, int left, int middle, int right) {\n\n        int size1 = middle - left + 1;\n        int size2 = right - middle;\n\n        /* Create temp arrays */\n        int[] Left = new int [size1];\n        int[] Right = new int [size2];\n\n        /*Copy data to temp arrays*/\n        for (int i=0; i<size1; ++i) {\n            Left[i] = arr[left + i];\n        }\n        for (int j=0; j<size1; ++j) {\n            Right[j] = arr[middle + 1 + j];\n        }\n\n        /* Merge the temp arrays */\n\n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n\n        // Initial index of merged subarry array\n        int k = left;\n        while (i < size1 && j < size2)\n        {\n            if (Left[i] <= Right[j])\n            {\n                arr[k] = Left[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = Right[j];\n                j++;\n            }\n            k++;\n        }\n\n        /* Copy remaining elements of L[] if any */\n        while (i < size1)\n        {\n            arr[k] = Left[i];\n            i++;\n            k++;\n        }\n\n        /* Copy remaining elements of R[] if any */\n        while (j < size2)\n        {\n            arr[k] = Right[j];\n            j++;\n            k++;\n        }\n    }\n\n    // Main function that sorts arr[l..r] using\n// merge()\n    static void sort(int[] arr, int left, int right) {\n        if (left < right)\n        {\n            // Find the middle point\n            int m = (left+right)/2;\n\n            // Sort first and second halves\n            sort(arr, left, m);\n            sort(arr , m+1, right);\n\n            // Merge the sorted halves\n            merge(arr, left, m, right);\n        }\n    }\n\n    private static void merge(long[] arr, int left, int middle, int right) {\n\n        int size1 = middle - left + 1;\n        int size2 = right - middle;\n\n        /* Create temp arrays */\n        long[] Left = new long [size1];\n        long[] Right = new long [size2];\n\n        /*Copy data to temp arrays*/\n        for (int i=0; i<size1; ++i) {\n            Left[i] = arr[left + i];\n        }\n        for (int j=0; j<size1; ++j) {\n            Right[j] = arr[middle + 1 + j];\n        }\n\n        /* Merge the temp arrays */\n\n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n\n        // Initial index of merged subarry array\n        int k = left;\n        while (i < size1 && j < size2)\n        {\n            if (Left[i] <= Right[j])\n            {\n                arr[k] = Left[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = Right[j];\n                j++;\n            }\n            k++;\n        }\n\n        /* Copy remaining elements of L[] if any */\n        while (i < size1)\n        {\n            arr[k] = Left[i];\n            i++;\n            k++;\n        }\n\n        /* Copy remaining elements of R[] if any */\n        while (j < size2)\n        {\n            arr[k] = Right[j];\n            j++;\n            k++;\n        }\n    }\n\n    // Main function that sorts arr[l..r] using\n// merge()\n    static void sort(long[] arr, int left, int right) {\n        if (left < right)\n        {\n            // Find the middle point\n            int m = (left+right)/2;\n\n            // Sort first and second halves\n            sort(arr, left, m);\n            sort(arr , m+1, right);\n\n            // Merge the sorted halves\n            merge(arr, left, m, right);\n        }\n    }\n\n    static long[] decToBinary(long n,long k)\n    {\n        // array to store binary number\n        long[] binaryNum = new long[64];\n\n        // counter for binary array\n        int i = 0;\n        while (n > 0L) {\n            // storing remainder in binary array\n            binaryNum[i] = n % k;\n            n = n / k;\n            i++;\n        }\n        return binaryNum;\n    }\n    static void print(int[] array){\n        for(int j=0;j<array.length;j++){\n            System.out.print(array[j]+\" \");\n        }\n        System.out.println();\n    }\n    static void print(int[][] array){\n        for(int i=0;i< array.length;i++) {\n            for (int j = 0; j < array[0].length; j++) {\n                System.out.print(array[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n    static void print(boolean[] array){\n        for(int j=0;j<array.length;j++){\n            System.out.print(array[j]+\" \");\n        }\n        System.out.println();\n    }\n    static void print(boolean[][] array){\n        for(int i=0;i< array.length;i++) {\n            for (int j = 0; j < array[0].length; j++) {\n                System.out.print(array[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n    static void print(long[] array){\n        for(int j=0;j<array.length;j++){\n            System.out.print(array[j]+\" \");\n        }\n        System.out.println();\n    }\n    static void print(long[][] array){\n        for(int i=0;i< array.length;i++) {\n            for (int j = 0; j < array[0].length; j++) {\n                System.out.print(array[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n    static void print(String[] array){\n        for(int j=0;j<array.length;j++){\n            System.out.print(array[j]+\" \");\n        }\n        System.out.println();\n    }\n    static void print(String[][] array){\n        for(int i=0;i< array.length;i++) {\n            for (int j = 0; j < array[0].length; j++) {\n                System.out.print(array[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n    static long calc(int a,int b){\n        long c = b-a+1;\n        c = c*(c+1);\n        c/=2l;\n        return c;\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\npublic class Main {\n    static FastReader in=new FastReader();\n    static StringBuilder Sd=new StringBuilder();\n    static List<Integer>Gr[]; \n    static int a[],b[];\n    static boolean visit[];\n    public static void main(String [] args) {\n    \t//Dir by MohammedElkady\n    \tint t=in.nextInt();\n    \twhile(t-->0) {\n    \t\tlong a=in.nextLong(),b=in.nextLong(),q=in.nextLong();\n    \t\tlong max=Math.max(a, b),min=Math.min(a, b);\n    \t\tboolean B=false;\n    \t\tif(min==1) {B=true;}\n    \t\twhile(q-->0) {\n    \t\t\tlong l=in.nextLong(),r=in.nextLong();\n    \t\t\tif(B||(max%min)==0) Sout(\"0 \");\n    \t\t\telse {\n    \t\t\t\tlong xx=0;\n    \t\t\t\tlong ans=xx;\n    \t\t\t\tif(l%min!=((l%max)%min)) {\n    \t\t\t\t\tlong mod=l%(min*max/gcd(min,max));\n    \t\t\t\t\tl-=mod;\n    \t\t\t\t\tmod-=max;\n    \t\t\t\t\tans-=mod;\n    \t\t\t\t}\n    \t\t\t\telse {\n    \t\t\t\t\tl-=(l%(min*max/gcd(min,max)));\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t\tif(r%min!=((r%max)%min)){\n    \t\t\t\t\tlong mod=r%(min*max/gcd(min,max));\n    \t\t\t\t\tr-=mod;\n    \t\t\t\t\tmod-=max;\n    \t\t\t\t\tans+=mod+1;\n    \t\t\t\t}\n    \t\t\t\telse {\n    \t\t\t\t\tr-=(r%(min*max/gcd(min,max)));\n    \t\t\t\t}\n    \t\t\t\tr-=l;\n    \t\t\t\tlong have=r/(min*max/gcd(min,max));\n    \t\t\t\tans+=r-(have*max);\n    \t\t\t\tSout(ans+\" \");\n    \t\t\t}\n    \t\t}\n    \tSoutln(\"\");\n    \t}\n    \t\n    Sclose();\n    \n    }\n    static long gcd(long g,long x){\n        if(x<1)return g;\n        else return gcd(x,g%x);\n    }\n    //array fill\n    static long[]filllong(int n){long a[]=new long[n];for(int i=0;i<n;i++)a[i]=in.nextLong();return a;}\n    static int[]fillint(int n){int a[]=new int[n];for(int i=0;i<n;i++)a[i]=in.nextInt();return a;}\n    //OutPut Line\n    static void Sout(String S) {Sd.append(S);}\n    static void Soutln(String S) {Sd.append(S+\"\\n\");}\n    static void Soutf(String S) {Sd.insert(0, S);}\n    static void Sclose() {System.out.println(Sd);}\n    static void Sclean() {Sd=new StringBuilder();}\n}\n \nclass node implements Comparable<node>{\nint x,p;\n\tnode(int x,int p){\n\t\tthis.x=x;\n\t\tthis.p=p;\n\t}\n\t@Override\n\tpublic int compareTo(node o) {\n       return (x-p)-(o.x-o.p);\n\t}\n}\nclass FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public FastReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n}\n \nclass Sorting{\n \n public static int[] bucketSort(int[] array, int bucketCount) {\n \n if (bucketCount <= 0) throw new IllegalArgumentException(\"Invalid bucket count\");\n \n if (array.length <= 1) return array; //trivially sorted\n \n \n \n int high = array[0];\n \n int low = array[0];\n \n for (int i = 1; i < array.length; i++) { //find the range of input elements\n \n if (array[i] > high) high = array[i];\n \n if (array[i] < low) low = array[i];\n \n }\n \n double interval = ((double)(high - low + 1))/bucketCount; //range of one bucket\n \n \n ArrayList<Integer> buckets[] = new ArrayList[bucketCount];\n \n for (int i = 0; i < bucketCount; i++) { //initialize buckets\n \n buckets[i] = new ArrayList();\n \n }\n \n \n \n for (int i = 0; i < array.length; i++) { //partition the input array\n \n buckets[(int)((array[i] - low)/interval)].add(array[i]);\n \n }\n \n \n int pointer = 0;\n \n for (int i = 0; i < buckets.length; i++) {\n \n Collections.sort(buckets[i]); //mergeSort\n \n for (int j = 0; j < buckets[i].size(); j++) { //merge the buckets\n \n array[pointer] = buckets[i].get(j);\n \n pointer++;\n \n }\n \n}\n \nreturn array;\n \n}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.lang.*;\npublic class Codechef{\n    public static void main(String[] args) throws Exception{\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        int T=Integer.parseInt(br.readLine());\n        StringBuffer sb=new StringBuffer();\n        while(T-->0){\n            String[] str=br.readLine().split(\" \");\n            int a=Integer.parseInt(str[0]);\n            int b=Integer.parseInt(str[1]);\n            int q=Integer.parseInt(str[2]);\n            int[] arr=new int[a*b];\n            for(int i=0;i<a*b;i++)\n                if((i%a)%b!=(i%b)%a) arr[i]=1;\n            for(int i=1;i<a*b;i++) arr[i]=arr[i-1]+arr[i];\n            int t=arr[a*b-1];\n            while(q-->0){\n                String[] s=br.readLine().split(\" \");\n                long l=Long.parseLong(s[0])-1;\n                long r=Long.parseLong(s[1]);\n                long count1=t*(l/(a*b));\n                int pos1=(int)(l%(a*b));\n                count1+=arr[pos1];\n                long count2=t*(r/(a*b));\n                int pos2=(int)(r%(a*b));\n                count2+=arr[pos2];\n                long ans=count2-count1;\n                sb.append(ans+\" \");\n            }\n            sb.append(\"\\n\");\n        }\n        System.out.print(sb);\n    }\n}\n            "
        },
        {
            "language": 4,
            "solution": "// package com.company;\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n//****Use Integer Wrapper Class for Arrays.sort()****\npublic class CR3 {\n    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));\n    public static void main(String[] Args){\n        FastReader scan=new FastReader();\n        int t=1;\n        t=scan.nextInt();\n        while(t-->0){\n            int a=scan.nextInt();\n            int b=scan.nextInt();\n            int q=scan.nextInt();\n            long v=(a*b)/gcd(a,b);\n            while(q-->0){\n                long l=scan.nextLong();\n                long r=scan.nextLong();\n                if(a==b||r<Math.max(a,b)){\n                    out.print(0+\" \");\n                }else{\n                    long max=Math.max(a,b);\n                    l=Math.max(l,max);\n                    long lv=l/v*v;\n                    if(l%v!=0){\n                        lv+=v;\n                    }\n                    long ms=0;\n                    if(lv<=r){\n                        ms++;\n                    }\n                    ms+=Math.max(0,(r-lv)/v);\n                    long ans=0;\n                    ans+=Math.max(0,(ms-1)*max);\n                    long re=r/v*v;\n                    if(re>=l){\n                        ans+=Math.min(max,r-re+1);\n                    }\n                    long ls=l/v*v;\n                    if(ls!=l){\n                        ls+=max-1;\n                        ans+=Math.min(r-l+1,Math.max(0,ls-l+1));\n                    }\n                    out.print((r-l+1-ans)+\" \");\n                }\n            }\n            out.println();\n        }\n        out.flush();\n        out.close();\n    }\n    public static long gcd(long a,long b){\n        if(a==0||b==0){\n            return 1;\n        }\n        if(a%b==0||b%a==0){\n            return a%b==0?b:a;\n        }\n        return a>b?gcd(b,a%b):gcd(a,b%a);\n    }\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "import math as mt\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split(' '))\n    a, b = (b, a) if a > b else (a, b)\n    k = (a * b) // mt.gcd(a, b)\n    for _ in range(q):\n        l, r = map(int, input().split(' '))\n        i = b if b > l else l\n        x=0 if i%k<b else k-(i%k)\n        c=(((r-(i-(i%k) if i%k<b else i+x))//k)*(k-b))+max(0,((r-(i-(i%k) if i%k<b else i+x))%k)-(b-1))\n        print(c+x,'',end='')\n    print()"
        },
        {
            "language": 3,
            "solution": "\nimport math\nt = int(input())\nwhile t!=0:\n\n        a,b,q= map(int,input().split())\n        lcm = (a*b)//math.gcd(a,b)\n\n        arr = [0]*(lcm)\n        for i in range(lcm):\n                if ((i+1)%a)%b != ((i+1)%b)%a:\n                        arr[i]=1\n        prefixsum = [arr[0]]\n        for i in range(1,len(arr)):\n                prefixsum.append(arr[i]+prefixsum[-1])\n        sum1 = prefixsum[-1]\n\n        list1 = []\n        for i in range(q):\n\n            l,r = map(int,input().split())\n            l-=2\n            r-=1\n            div = r//(lcm)\n            mod = r%(lcm)\n            t1 = div*sum1 + prefixsum[mod]\n\n            div2 = l//(lcm)\n            mod2 = l%(lcm)\n\n            t2 = div2*sum1 + prefixsum[mod2]\n            list1.append(t1-t2)\n        print(*list1)\n\n\n\n\n        t-=1\n"
        },
        {
            "language": 3,
            "solution": "import math\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split());lcm=a*b//math.gcd(a,b);t=max(a,b)\n    for i in range(q):\n        l,r=map(int,input().split());Ans=0\n        if r<t:print(0,end=' ')\n        else:\n            Ans+=(r-l+1)\n            n=(l-1)//lcm;m=r//lcm;tem=min(r-m*lcm+1,t);Ans-=(m-n-1)*t;Ans-=tem;Ans-=max(t-(l-lcm*n),0)\n            print(Ans,end=' ')\n    print()    \n        "
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.util.Scanner;\n\npublic class C_YetAnotherCountingProblem {\n\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        int T = sc.nextInt();\n        for (int __ = 0; __ < T; __++) {\n            final int a = sc.nextInt();\n            final int b = sc.nextInt();\n            final int q = sc.nextInt();\n\n            final int period = a * b;\n            final int[] ab = new int[period];\n            int sum = 0;\n            for (int i = 0; i < period; i++) {\n                if ((i % a) % b != (i % b) % a) {\n                    sum++;\n                }\n                ab[i] = sum;\n            }\n            // now sum is the total number during one period.\n\n            for (int i = 0; i < q; i++) {\n                long l = sc.nextLong();\n                long r = sc.nextLong();\n\n                System.out.println(r / period * sum + ab[(int) ((r % period))]\n                        - (l - 1) / period * sum - ab[(int) (((l - 1) % period))]\n                );\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\n\npublic class C {\n\tpublic static long a, b;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t// TODO Auto-generated method stub\n\t\tInputReader s = new InputReader(System.in);\n\t\tPrintWriter p = new PrintWriter(System.out);\n\t\tint t = s.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\ta = s.nextLong();\n\t\t\tb = s.nextLong();\n\t\t\tif (a > b) {\n\t\t\t\ta ^= b;\n\t\t\t\tb ^= a;\n\t\t\t\ta ^= b;\n\t\t\t}\n\t\t\tlong lcm = lcm(a, b);\n\t\t\tint q = s.nextInt();\n\t\t\twhile (q-- > 0) {\n\t\t\t\tlong l = s.nextLong();\n\t\t\t\tlong r = s.nextLong();\n\t\t\t\tif (r < b || a == b) {\n\t\t\t\t\tp.print(0 + \" \");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlong ans = get(r, lcm) - get(l - 1, lcm);\n\t\t\t\tp.print(ans + \" \");\n\t\t\t}\n\t\t\tp.println();\n\t\t}\n\t\tp.flush();\n\t\tp.close();\n\t}\n\n\tpublic static long get(long val, long lcm) {\n\t\tif (val == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tlong rem0 = val / lcm * b;\n\t\trem0 += Math.min(val - (val / lcm) * lcm + 1, b);\n\t\treturn val + 1 - rem0;\n\t}\n\n\tstatic long lcm(long a, long b) {\n\t\treturn (a * b) / gcd(a, b);\n\t}\n\n\tstatic long findLCM(long a, long b) {\n\t\tlong lar = Math.max(a, b);\n\t\tlong small = Math.min(a, b);\n\t\tfor (long i = lar;; i += lar) {\n\t\t\tif (i % small == 0)\n\t\t\t\treturn i;\n\t\t}\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}\n\n\tstatic class Pair<T, V> {\n\t\tT first; // maximum distance Node\n\t\tV second; // distance of maximum distance node\n\n\t\t// Constructor\n\t\tPair(T first, V second) {\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n\t}\n\n\tpublic static int BinarySearch(long[] a, long k) {\n\t\tint n = a.length;\n\t\tint i = 0, j = n - 1;\n\t\tint mid = 0;\n\n\t\tif (k < a[0])\n\t\t\treturn 0;\n\t\telse if (k >= a[n - 1])\n\t\t\treturn n;\n\t\telse {\n\t\t\twhile (j - i > 1) {\n\t\t\t\tmid = (i + j) / 2;\n\n\t\t\t\tif (k >= a[mid])\n\t\t\t\t\ti = mid;\n\t\t\t\telse\n\t\t\t\t\tj = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn i + 1;\n\t}\n\n\tpublic static long GCD(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\telse\n\t\t\treturn GCD(b, a % b);\n\t}\n\n\tpublic static long LCM(long a, long b) {\n\t\treturn (a * b) / GCD(a, b);\n\t}\n\n\tstatic class InputReader {\n\n\t\tprivate final InputStream stream;\n\t\tprivate final byte[] buf = new byte[8192];\n\t\tprivate int curChar, snumChars;\n\t\tprivate SpaceCharFilter filter;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic int snext() {\n\t\t\tif (snumChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= snumChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (snumChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tstatic class pair implements Comparable<pair> {\n\t\t\tInteger x, y;\n\n\t\t\tpair(int x, int y) {\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t}\n\n\t\t\tpublic int compareTo(pair o) {\n\t\t\t\tint result = x.compareTo(o.x);\n\t\t\t\tif (result == 0)\n\t\t\t\t\tresult = y.compareTo(o.y);\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tpublic String toString() {\n\t\t\t\treturn x + \" \" + y;\n\t\t\t}\n\n\t\t\tpublic boolean equals(Object o) {\n\t\t\t\tif (o instanceof pair) {\n\t\t\t\t\tpair p = (pair) o;\n\t\t\t\t\treturn p.x - x == 0 && p.y - y == 0;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tpublic int hashCode() {\n\t\t\t\treturn new Long(x).hashCode() * 31 + new Long(y).hashCode();\n\t\t\t}\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint a[] = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = nextInt();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic String readString() {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = snext();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = snext();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\tif (filter != null)\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tprivate boolean isEndOfLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tpublic interface SpaceCharFilter {\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t}\n\n\tstatic class CodeX {\n\t\tpublic static void sort(long arr[]) {\n\t\t\tmerge_sort(arr, 0, arr.length - 1);\n\t\t}\n\n\t\tprivate static void merge_sort(long A[], long start, long end) {\n\t\t\tif (start < end) {\n\t\t\t\tlong mid = (start + end) / 2;\n\t\t\t\tmerge_sort(A, start, mid);\n\t\t\t\tmerge_sort(A, mid + 1, end);\n\t\t\t\tmerge(A, start, mid, end);\n\t\t\t}\n\n\t\t}\n\n\t\tprivate static void merge(long A[], long start, long mid, long end) {\n\t\t\tlong p = start, q = mid + 1;\n\t\t\tlong Arr[] = new long[(int) (end - start + 1)];\n\t\t\tlong k = 0;\n\n\t\t\tfor (int i = (int) start; i <= end; i++) {\n\t\t\t\tif (p > mid)\n\t\t\t\t\tArr[(int) k++] = A[(int) q++];\n\n\t\t\t\telse if (q > end)\n\t\t\t\t\tArr[(int) k++] = A[(int) p++];\n\n\t\t\t\telse if (A[(int) p] < A[(int) q])\n\t\t\t\t\tArr[(int) k++] = A[(int) p++];\n\n\t\t\t\telse\n\t\t\t\t\tArr[(int) k++] = A[(int) q++];\n\t\t\t}\n\t\t\tfor (int i = 0; i < k; i++) {\n\t\t\t\tA[(int) start++] = Arr[i];\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if (a == 0):\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return (a * b) // gcd(a, b)\n\ndef f(x, lcm, max_ab):\n    return (x // lcm) * (lcm - max_ab) + max(x % lcm - (max_ab - 1), 0)\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    c = lcm(a, b)\n    d = max(a, b)\n    ending = ' '\n    for i in range(q):\n        li, ri = map(int, input().split())\n        if i == q-1:\n            ending = '\\n'\n        print(f(ri, c, d) - f(li - 1, c, d), end=ending)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.*;\npublic class Main {\nInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\"; \n//class  Declaration\n\nstatic class pair {\n\tint x;\n\tboolean[] pre ;\n\t\n\t\n\tpair (int i,boolean[] p)\n\t{ x=i; \n\t\tpre = p;\n\t\t\n\t}\n\t// public int compareTo(pair p){\n\t// \tif(this.x!=p.x) { return this.x-p.x;}\n\t// \telse { return this.y-p.y;}\n\t// }\n\t// public int hashCode() { return (x+\" \"+y).hashCode();}\n\tpublic String toString(){ return x+\"\";} \n\t// public boolean equals(Object o){ \n\t// \tpair x = (pair) o ;\n\t// \treturn (x.x==this.x&&x.y==this.y);}\n}\n\nlong mod  = (long)1e9 + 7 ;\n\nvoid solve() throws Exception{\n\tint t=ni();\n\twhile(t-->0){\n\t\tlong a=nl(),b=nl(),q=nl();\n\t\t\tlong lcm  =(a*b)/gcd(a,b) ; \n\t\t\tlong[] cnt = new long[(int)lcm] ; \n\t\t\tcnt[0] =0 ;\n\t\t\tfor(int i=1;i<lcm;++i){\n\t\t\t\tcnt[i]= cnt[i-1]  ;\n\t\t\t\tlong left = (i%a)%b  ;\n\t\t\t\tlong right = (i%b)%a  ; \n\t\t\t\tif(left != right){\n\t\t\t\t\tcnt[i]++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile(q-->0){\n\t\t\t\tlong l =nl(),r=nl();\n\t\t\t\tlong lhl =(l/lcm)*lcm ;\n\t\t\t\tlong rhl = (r/lcm)*lcm + lcm ; \n\n\t\t\t\t\n\t\t\t\tlong ans =((rhl - lhl )/lcm)* cnt[(int)lcm-1] ; \n\t\t\t\t//print(\"lhl : rhl \"+lhl+\" \"+rhl+\" ans : \"+ans);\n\t\t\t\t//print(\"\");\n\t\t\t\t// long ta = ans ;\n\t\t\t\t// for(long i = lhl; i<l;++i){\n\t\t\t\t// \tlong left = (i%a)%b  ;\n\t\t\t\t// \tlong right = (i%b)%a  ; \n\t\t\t\t// \tif(left != right){\n\t\t\t\t// \t\tta--;\n\n\t\t\t\t// \t}\n\n\t\t\t\t// }\n\t\t\t\t// //print(\"ans after left shoud : \"+ta);\n\t\t\t\t// for(long i=r+1;i<=rhl;++i){\n\t\t\t\t// \tlong left = (i%a)%b  ;\n\t\t\t\t// \tlong right = (i%b)%a  ; \n\t\t\t\t// \tif(left != right){\n\t\t\t\t// \t\tta--;\n\n\t\t\t\t// \t}\n\n\t\t\t\t// }\n\t\t\t\t//print(\"ans after right shoud : \"+ta);\n\n\t\t\t\tif(l%lcm!=0)\n\t\t\t\tans = ans - cnt[(int)((l-lhl-1)%lcm)];\n\t\t\t\t//print(\"ans after left : \"+ans);\n\t\t\t\tif(r%lcm==0){\n\t\t\t\t\tans = ans - cnt[cnt.length-1];\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans = ans - (cnt[cnt.length-1]- cnt[(int)(r%lcm)]);\n\t\t\t\t}\n\t\t\t\t//print(\"ans after right :\"+ans);\n\t\t\t\t//print(\"\");\n\t\t\t\t//ans = ans - (cnt[(rhl-r)])\n\t\t\t\tp(ans+\" \");\n\n\n\t\t\t}\n\t\t\tpn(\"\");\n\n\n\t}\n\n\n}\n\nvoid print(Object o){\nSystem.out.println(o);\nSystem.out.flush();\n}\n\nlong gcd(long a, long b) \n{ \nif (b == 0) \nreturn a; \nreturn gcd(b, a % b);  \n}\nvoid run() throws Exception{\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\nout = new PrintWriter(System.out);\n\t\t\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n}\n\t\n\t\npublic static void main(String[] args) throws Exception { new Main().run(); }\n\t\n//output methods\nprivate void pn(Object o)\n{\n\tout.println(o);\n}\nprivate void p(Object o)\n{\n\tout.print(o);\n}\n\n\n\n//input methods\n\t\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\t\n\n\tprivate int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\t\n\t\n\t\n\tprivate boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n\tprivate int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate double nd() { return Double.parseDouble(ns()); }\n\tprivate char nc() { return (char)skip(); }\n\t\n\tprivate String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){ // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\t\n\tprivate char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate void tr(Object... o) { if(INPUT.length() > 0)System.out.println(Arrays.deepToString(o)); }\n\tvoid watch(Object ... a) throws Exception{\n\t\tint i=1;\n\t\tpn(\"watch starts :\");\n\t\tfor(Object o : a ) {\n\t\t\t//print(o);\n\t\t\tboolean notfound = true;\n\t\t\tif(o.getClass().isArray()){\n\t\t\t\t\n\t\t\t\tString type = o.getClass().getName().toString();\n\t\t\t\t//print(\"type is \"+type);\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase \"[I\":{\n\t\t\t\t\t\tint[] test = (int[])o ;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.toString(test));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"[[I\":{\n\t\t\t\t\t\tint[][] obj = (int[][])o;\n\t\t\t\t\t\t\n\t\t\t\t\t\tpn(i+\" \"+Arrays.deepToString(obj));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"[J\" : {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlong[] obj  = (long[])o ;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.toString(obj));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"[[J\": {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlong[][] obj = (long[][])o;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.deepToString(obj));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"[D\" :{\n\t\t\t\t\t\t\n\t\t\t\t\t\tdouble[] obj= (double[])o;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.toString(obj));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"[[D\" :{\n\t\t\t\t\t\t\n\t\t\t\t\t\tdouble[][] obj = (double[][])o;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.deepToString(obj));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"[Ljava.lang.String\": {\n\t\t\t\t\t\t\n\t\t\t\t\t\tString[] obj = (String[])o ;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.toString(obj));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"[[Ljava.lang.String\": {\n\t\t\t\t\t\t\n\t\t\t\t\t\tString[][] obj = (String[][])o ;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.deepToString(obj));\n\t\t\t\t\t\tbreak ; \n\t\t\t\t\t}\n\t\t\t\t\tcase \"[C\" :{\n\t\t\t\t\t\tchar[] obj = (char[])o ;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.toString(obj));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"[[C\" :{\n\t\t\t\t\t\t\n\t\t\t\t\t\tchar[][] obj = (char[][])o;\n\t\t\t\t\t\tpn(i+\" \"+Arrays.deepToString(obj));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tdefault:{\n\t\t\t\t\t\tpn(i+\" type not identified\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnotfound = false;\n\t\t\t\t\n\t\t\t}\n\t\t\tif(o.getClass() == ArrayList.class){\n\t\t\t\tpn(i+\" al: \"+o);\n\t\t\t\tnotfound = false;\n\t\t\t}\n\t\t\tif(o.getClass() == HashSet.class){\n\t\t\t\tpn(i+\" hs: \"+o);\n\t\t\t\tnotfound = false;\n\t\t\t}\n\t\t\tif(o.getClass() == TreeSet.class){\n\t\t\t\tpn(i+\" ts: \"+o);\n\t\t\t\tnotfound = false;\n\t\t\t}\n\t\t\tif(o.getClass() == TreeMap.class){\n\t\t\t\tpn(i+\" tm: \"+o);\n\t\t\t\tnotfound = false;\n\t\t\t}\n\t\t\tif(o.getClass() == HashMap.class){\n\t\t\t\tpn(i+\" hm: \"+o);\n\t\t\t\tnotfound = false;\n\t\t\t}\n\t\t\tif(o.getClass() == LinkedList.class){\n\t\t\t\tpn(i+\" ll: \"+o);\n\t\t\t\tnotfound = false;\n\t\t\t}\n\t\t\tif(o.getClass() == PriorityQueue.class){\n\t\t\t\tpn(i+\" pq : \"+o);\n\t\t\t\tnotfound = false;\n\t\t\t}\n\t\t\tif(o.getClass() == pair.class){\n\t\t\t\tpn(i+\" pq : \"+o);\n\t\t\t\tnotfound = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(notfound){\n\t\t\t\tpn(i+\" unknown: \"+o);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\tpn(\"watch ends \");\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class YetAnotherCountingProblem {\n\n    static long lcm(long a, long b) {\n        long t1 = a;\n        long t2 = b;\n        while (b != 0) {\n            long t = a;\n            a = b;\n            b = t % b;\n        }\n        return (t1 * t2) / a;\n    }\n\n    public static void main(String args[]) {\n        Scanner scan = new Scanner(System.in);\n        int t = scan.nextInt();\n        while (t-- > 0) {\n            long a = scan.nextInt();\n            long b = scan.nextInt();\n            long q = scan.nextInt();\n            long p = Math.max(a, b);\n            long lcm = lcm(a, b);\n\n            while (q-- > 0) {\n                long l = scan.nextLong() - 1;\n                long r = scan.nextLong();\n                long res = r - p + 1;\n                long e = (r / lcm) - 1;\n                res -= (e * p);\n                res -= Math.min((r - ((e + 1) * lcm)) + 1, p);\n\n                long res2 = l - p + 1;\n                long e2 = (l / lcm) - 1;\n                res2 -= (e2 * p);\n                res2 -= Math.min((l - ((e2 + 1) * lcm)) + 1, p);\n                res -= res2;\n\n                System.out.print(Math.max(0, res) + \" \");\n            }\n            System.out.println();\n        }\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    if(a>b):\n        a,b=b,a\n    lcm=a*b//math.gcd(a,b)\n    for qq in range(q):\n        L,R=map(int,input().split())\n        if(b%a==0):\n            print(0,end=\" \")\n        else:\n            res=R;\n            temp=min(R,b-1);\n            res-=temp;\n            res-=(R//lcm)*b;\n            temp1=(R//lcm)*lcm;\n            if(temp1):temp1+=b-1;\n            if(temp1>R):res+=temp1-R;\n            if(L>1):\n                L-=1;\n                res1=L;\n                temp=min(L,b-1);\n                res1-=temp;\n                res1-=(L//lcm)*b;\n                temp1=(L//lcm)*lcm;\n                if(temp1):temp1+=b-1;\n                if(temp1>L):res1+=temp1-L;\n                res-=res1;\n            print(res,end=\" \")\n    print()\n        \n"
        },
        {
            "language": 3,
            "solution": "def compute_hcf(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\nt = int(input())\nfor i in range(t):\n    a,b,q = map(int,input().split())\n    lc = (a*b)//compute_hcf(a,b)\n    ans = []\n    for j in range(q):\n        l,r = map(int,input().split())\n        if r%lc<max(a,b):\n            yes = max(a,b)*(-1+r//lc) + r%lc + max(a,b) \n        else:\n            yes = max(a,b)*(r//lc) + max(a,b) - 1\n        ans_r = r - yes\n        if l%lc<max(a,b):\n            yes = max(a,b)*(-1+l//lc) + l%lc + max(a,b) \n        else:\n            yes = max(a,b)*(l//lc) + max(a,b) - 1\n        ans_l = l - yes\n        if (l%a)%b!=(l%b)%a:\n            ans.append(ans_r-ans_l+1)\n        else:\n            ans.append(ans_r-ans_l)\n    for j in range(q):\n        if j!=q-1:\n            print(ans[j],end=' ')\n        else:\n            print(ans[j])"
        },
        {
            "language": 3,
            "solution": "import math\nt = int(input())\n\ndef solve(a,b,l,r):\n\tlcm  = a*b//math.gcd(a,b)\n\tf = l//lcm\n\ts = r//lcm\n\t\n\tif s>f:\n\t\tcount = (s-f-1)*b\n\telse:\n\t\tcount = 0\n\n\tif s!=f:\n\t\tfor j in range(f*lcm,min(f*lcm+b,r+1)):\n\t\t\tif l<=j<=r:\n\t\t\t\tcount+=1\n\t\tfor j in range(s*lcm,min(s*lcm+b,r+1)):\n\t\t\tif l<=j<=r:\n\t\t\t\tcount+=1\n\telse:\n\t\tfor j in range(f*lcm,min(f*lcm+b,r+1)):\n\t\t\tif l<=j<=r:\n\t\t\t\tcount+=1\n\n\treturn r-l+1-count\n\n\n\nwhile t:\n\ta,b,q = list(map(int,input().split()))\n\tfor j in range(q):\n\t\tl,r = list(map(int,input().split()))\n\t\tif b>a:\n\t\t\tprint(solve(a,b,l,r))\n\t\telse:\n\t\t\tprint(solve(b,a,l,r))\n\n\tt-=1"
        },
        {
            "language": 1,
            "solution": "import atexit, io, sys \n\n  \n# A stream implementation using an in-memory bytes  \n# buffer. It inherits BufferedIOBase. \n\nbuffer = io.BytesIO() \n\nsys.stdout = buffer\n\n  \n# print via here \n\n@atexit.register \n\n\ndef write(): \n\n    sys.__stdout__.write(buffer.getvalue()) \ndef gcd(a,b):\n    a,b=min(a,b),max(a,b)\n    while b:\n        a,b=b,a%b\n    return a\nv=[[0 for j in range(201)]for j in range(201)]\nfor j in range(1,201):\n    for k in range(1,201):\n        v[j][k]+=(j*k)/gcd(j,k)\n\nfor _ in range(input()):\n    \n    a,b,q=map(int,raw_input().split())\n    fs=0\n    for j in range(1,v[a][b]):\n        if (j%a)%b!=(j%b)%a:\n            fs+=1\n    pref=[0]*(v[a][b]+1)\n    for j in range(1,v[a][b]+1):\n        pref[j]=pref[j-1]\n        if (j%a)%b!=(j%b)%a:\n            pref[j]+=1\n    \n    \n    for i in range(q):\n        l,r=map(int,raw_input().split())\n        ans=0\n        \n        if l%v[a][b]:\n            ans+=(fs-pref[l%v[a][b]-1])\n        if r%v[a][b]:\n            ans+=(pref[r%v[a][b]])\n        k=r/v[a][b]\n        y=(l-1)/v[a][b]+1\n        \n        ans+=((k-y)*fs)\n        print ans,\n    print \"\"\n    "
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n \nimport static java.lang.Math.*;\n\npublic class Cf294 implements Runnable \n{\n\tstatic class InputReader \n\t{\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\tprivate SpaceCharFilter filter;\n\t\tprivate BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tpublic InputReader(InputStream stream) \n\t\t{\n\t\t\tthis.stream = stream;\n\t\t}\n\t\t\n\t\tpublic int read()\n\t\t{\n\t\t\tif (numChars==-1) \n\t\t\t\tthrow new InputMismatchException();\n            \n\t\t\tif (curChar >= numChars) \n\t\t\t{\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n                \n\t\t\t\tif(numChars <= 0)               \n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n     \n\t\tpublic String nextLine()\n\t\t{\n\t\t\tString str = \"\";\n\t\t\ttry\n\t\t\t{\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\t\n\t\t\treturn str;\n\t\t}\n\t\tpublic int[] nextArray(int n)\n\t\t{\n\t\t\tint arr[] = new int[n];\n\t\t\tint i;\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\tpublic int nextInt() \n\t\t{\n\t\t\tint c = read();\n            \n\t\t\twhile(isSpaceChar(c)) \n\t\t\t\tc = read();\n\t\t\n\t\t\tint sgn = 1;\n        \n\t\t\tif (c == '-') \n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n            \n\t\t\tint res = 0;\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif(c<'0'||c>'9') \n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\twhile (!isSpaceChar(c)); \n        \n\t\t\treturn res * sgn;\n\t\t}\n        \n\t\tpublic long nextLong() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-')\n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\t\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\t\n\t\t\twhile (!isSpaceChar(c));\n\t\t\t\treturn res * sgn;\n\t\t}\n\t\t\n\t\tpublic double nextDouble() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-')\n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdouble res = 0;\n\t\t\twhile (!isSpaceChar(c) && c != '.') \n\t\t\t{\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tif (c == '.') \n\t\t\t{\n\t\t\t\tc = read();\n\t\t\t\tdouble m = 1;\n\t\t\t\twhile (!isSpaceChar(c))\n\t\t\t\t{\n\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = read();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res * sgn;\n\t\t}\n    \n\t\tpublic String readString() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo \n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} \n\t\t\twhile (!isSpaceChar(c));\n            \n\t\t\treturn res.toString();\n\t\t}\n     \n\t\tpublic boolean isSpaceChar(int c) \n\t\t{\n\t\t\tif (filter != null)\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n     \n\t\tpublic String next()\n\t\t{\n\t\t\treturn readString();\n\t\t}\n        \n\t\tpublic interface SpaceCharFilter\n\t\t{\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t\t\n\t\tpublic int[] nextIntArray(int n)\n\t\t{\n\t\t\tint i;\n\t\t\tint arr[] = new int[n];\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tpublic long[] nextLongArray(int n)\n\t\t{\n\t\t\tint i;\n\t\t\tlong arr[] = new long[n];\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tpublic double[] nextDoubleArray(int n)\n\t\t{\n\t\t\tint i;\n\t\t\tdouble arr[] = new double[n];\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tarr[i] = nextDouble();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tpublic Integer[] IntegerArray(int n)\n\t\t{\n\t\t\tint i;\n\t\t\tInteger arr[] = new Integer[n];\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tpublic Long[] LongArray(int n)\n\t\t{\n\t\t\tint i;\n\t\t\tLong arr[] = new Long[n];\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tpublic Double[] DoubleArray(int n)\n\t\t{\n\t\t\tint i;\n\t\t\tDouble arr[] = new Double[n];\n\t\t\tfor(i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tarr[i] = nextDouble();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tpublic ArrayList<ArrayList<Integer>> getGraph(int n,int m)\n\t\t{\n\t\t\tArrayList<ArrayList<Integer>> g =new ArrayList<>();\n\t\t\tint i;\n\t\t\tfor(i=0;i<=n;i++)\n\t\t\t{\n\t\t\t\tg.add(new ArrayList<>());\n\t\t\t}\n\t\t\tfor(i=0;i<m;i++)\n\t\t\t{\n\t\t\t\tint x = nextInt();\n\t\t\t\tint y = nextInt();\n\t\t\t\tg.get(x).add(y);\n\t\t\t\tg.get(y).add(x);\n\t\t\t}\n\t\t\treturn g;\n\t\t}\n\t\t\n\t\tpublic ArrayList<ArrayList<Integer>> getTree(int n)\n\t\t{\n\t\t\tArrayList<ArrayList<Integer>> g =new ArrayList<>();\n\t\t\tint i;\n\t\t\tfor(i=0;i<=n;i++)\n\t\t\t{\n\t\t\t\tg.add(new ArrayList<>());\n\t\t\t}\n\t\t\tfor(i=0;i<n-1;i++)\n\t\t\t{\n\t\t\t\tint x = nextInt();\n\t\t\t\tint y = nextInt();\n\t\t\t\tg.get(x).add(y);\n\t\t\t\tg.get(y).add(x);\n\t\t\t}\n\t\t\treturn g;\n\t\t}\n\t}\n\t\n\tpublic static int maxInt(int arr[])\n\t{\n\t\tint max = Integer.MIN_VALUE;\n\t\tfor(int i : arr)\n\t\t{\n\t\t\tmax = Math.max(i,max);\n\t\t}\n\t\treturn max;\n\t}\n\t\n\tpublic static int minInt(int arr[])\n\t{\n\t\tint min = Integer.MAX_VALUE;\n\t\tfor(int i : arr)\n\t\t{\n\t\t\tmin = Math.min(i,min);\n\t\t}\n\t\treturn min;\n\t}\n\t\n\tpublic static long maxLong(long arr[])\n\t{\n\t\tlong max = Long.MIN_VALUE;\n\t\tfor(long i : arr)\n\t\t{\n\t\t\tmax = Math.max(i,max);\n\t\t}\n\t\treturn max;\n\t}\n\t\n\tpublic static long minLong(long arr[])\n\t{\n\t\tlong min = Long.MAX_VALUE;\n\t\tfor(long i : arr)\n\t\t{\n\t\t\tmin = Math.min(i,min);\n\t\t}\n\t\treturn min;\n\t}\n\t\n\tpublic static double maxDouble(double arr[])\n\t{\n\t\tdouble max = Double.MIN_VALUE;\n\t\tfor(double i : arr)\n\t\t{\n\t\t\tmax = Math.max(i,max);\n\t\t}\n\t\treturn max;\n\t}\n\t\n\tpublic static double minDouble(double arr[])\n\t{\n\t\tdouble min = Double.MAX_VALUE;\n\t\tfor(double i : arr)\n\t\t{\n\t\t\tmin = Math.min(i,min);\n\t\t}\n\t\treturn min;\n\t}\n\t\n\tvoid merge(int arr[], int l, int m, int r) \n\t{ \n\t\tint n1 = m - l + 1; \n\t\tint n2 = r - m; \n\t  \n\n\t\tint L[] = new int [n1]; \n\t\tint R[] = new int [n2]; \n\t  \n\n\t\tfor (int i=0; i<n1; ++i) \n\t\t    L[i] = arr[l + i]; \n\t\tfor (int j=0; j<n2; ++j) \n\t\t    R[j] = arr[m + 1+ j]; \n  \n  \n  \n\n\t\tint i = 0, j = 0; \n\t  \n\n\t\tint k = l; \n\t\twhile (i < n1 && j < n2) \n\t\t{ \n\t\t    if (L[i] <= R[j]) \n\t\t    { \n\t\t\tarr[k] = L[i]; \n\t\t\ti++; \n\t\t    } \n\t\t    else\n\t\t    { \n\t\t\tarr[k] = R[j]; \n\t\t\tj++; \n\t\t    } \n\t\t    k++; \n\t\t} \n\n\t\twhile (i < n1) \n\t\t{ \n\t\t    arr[k] = L[i]; \n\t\t    i++; \n\t\t    k++; \n\t\t} \n\t  \n   \n\t\twhile (j < n2) \n\t\t{ \n\t\t    arr[k] = R[j]; \n\t\t    j++; \n\t\t    k++; \n\t\t} \n\t} \n  \n    \n\tvoid sort(int arr[], int l, int r) \n\t{ \n\t\tif (l < r) \n\t\t{ \n\t\t\tint m = (l+r)/2; \n\t\t\tsort(arr, l, m); \n\t\t\tsort(arr , m+1, r); \n\t\t\tmerge(arr, l, m, r); \n\t\t} \n\t}\n\t\n\tstatic class Pair\n\t{\n\t\tint x,y;\n\t\tpublic Pair(int f,int s)\n\t\t{\n\t\t\tthis.x = y;\n\t\t\tthis.x = y;\n\t\t}\n\t\tpublic static Comparator<Pair> sortX = new Comparator<Pair>(){\n\t\t\tpublic int compare(Pair p1,Pair p2)\n\t\t\t{\n\t\t\t\tif(p1.x==p2.x)\n\t\t\t\t{\n\t\t\t\t\treturn p1.y-p2.y;\n\t\t\t\t}\n\t\t\t\treturn p1.x-p2.x;\n\t\t\t}\n\t\t};\n\t\t\n\t\tpublic static Comparator<Pair> sortY = new Comparator<Pair>(){\n\t\t\tpublic int compare(Pair p1,Pair p2)\n\t\t\t{\n\t\t\t\tif(p1.y==p2.y)\n\t\t\t\t{\n\t\t\t\t\treturn p1.x-p2.x;\n\t\t\t\t}\n\t\t\t\treturn p1.y-p2.y;\n\t\t\t}\n\t\t};\n\t}\n\t\n\tpublic static void main(String args[]) throws Exception \n\t{\n\t\tnew Thread(null, new Cf294(),\"Main\",1<<27).start();\n\t}\t\n\t\n\tpublic static long gcd(long a, long b) \n\t{ \n\t\tif (b == 0) \n\t\t\treturn a; \n\t\treturn gcd(b, a % b);  \n\t} \t\n\tpublic static long range(long a,long b,long l)\n\t{\n\t\tlong g = (a/(gcd(a,b)));\n\t\tlong rem = l/b;\n\t\tlong res = (rem/g)*b;\n\t\tif(rem%g>0)\n\t\t{\n\t\t\tres+=b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tres+=(l%b);\n\t\t}\n\t\treturn (l-res);\n\t}\n\t\n\tpublic void run()\t\n\t{\n\t\tInputReader in = new InputReader(System.in);\n\t\tPrintWriter w = new PrintWriter(System.out);\n\t\tint t = in.nextInt();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tlong a = in.nextLong();\n\t\t\tlong b = in.nextLong();\n\t\t\tlong a1=a;\n\t\t\tlong a2=b;\n\t\t\ta=a1<a2?a1:a2;\n\t\t\tb=a1>a2?a1:a2;\n\t\t\tint q = in.nextInt();\n\t\t\twhile(q-->0)\n\t\t\t{\n\t\t\t\tlong l = in.nextLong();\n\t\t\t\tlong r = in.nextLong();\n\t\t\t\tlong nl = range(a,b,l);\n\t\t\t\tlong nr = range(a,b,r+1);\n\t\t\t\tw.print((nr-nl)+\" \");\n\t\t\t}\n\t\t\tw.println();\n\t\t}\n\t\tw.flush();\n\t\tw.close();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\ndef solve(x,m,lcm):\n    ans = x//lcm*(lcm-m)+max(0,x%lcm-m+1)\n    return ans\nfor i in range(int(input())):\n    a, b, q = map(int, input().split())\n    lcm = a*b//gcd(a,b)\n    m = max(a,b)\n    ans = []\n    for i in range(q):\n        l, r = map(int, input().split())\n        ans.append(solve(r,m,lcm)-solve(l-1,m,lcm))\n    print(*ans, sep=' ')\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom math import gcd\nt=int(stdin.readline().strip())\ndef f(a,b):\n    v=[]\n    for i in range(0,100000):\n        if (i%a)%b!=(i%b)%a:\n            v.append(i)\n\n    print(v)\n    return v\nfor caso in range(t):\n    a,b,q=map(int,stdin.readline().strip().split())\n    arr=[0 for i in range(max(a,b)+1)]\n    v=[]\n    g=gcd(a,b)\n\n    if g!=a and g!=b :\n        lim=max(a,b)\n        for i in range(lim,10**6):\n            if (i%a)%b!=(i%b)%a:\n                v.append(i)\n            else:\n                break\n\n    else:\n        for i in range(q):\n            l,r=map(int,stdin.readline().strip().split())\n        ans=[0 for i in range(q)]\n        print(*ans)\n        continue\n    ans=[]\n    \n    x=v[-1]+1\n    for i in range(q):\n        l,r=map(int,stdin.readline().strip().split())\n        \n        l=max(l,v[0])\n        y=-((l-1)//x)+(r//x)\n        res=y*v[0]\n        z=(r//x)*x+v[0]-1\n        if((r//x)*x>=l and (r//x)*x<=r):\n        \n            res-=max(0,z-r)\n        u=((l-1)//x)*x\n        u1=u+v[0]-1\n        if (u1>=l and u1<=r):\n            res+=u1-l+1\n        if (u<=r and u1>=r):\n            res=10**20\n        ans.append(max(r-l+1-res,0))\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "import math\ndef countDivisibles(A, B, M): \n      \n    # Add 1 explicitly as A is divisible by M \n    if (A % M == 0): \n        return ((B // M) - (A // M)) + 1\n  \n    # A is not divisible by M \n    return ((B // M) - (A // M))  \ndef lcm(A, B):\n    lc=(A*B)//math.gcd(A,B)\n    return lc\nfor i in range(int(input())):\n    a,b,q=map(int,input().split())\n    lc=lcm(a,b)\n    for j in range(q):\n        l,r=map(int,input().split())\n        e=(r//lc)*lc\n        e1=(l//lc)*lc\n        tm=0\n        ta=0\n        if e+max(a,b)-1>r:\n            tm=e+max(a,b)-r-1\n        if e1+max(a,b)-1>=l and e1<l:\n            ta=e1+max(a,b)-l\n        rw=countDivisibles(l, r, lc)*max(a,b)\n        rw=rw-tm+ta\n        print(max(0,r-l+1-rw))\n        \n        "
        },
        {
            "language": 3,
            "solution": "def Gcd(n, m):\n    if m==0:return n\n    else: return Gcd(m, n%m)\ndef Lcm(n, m):\n    return int((n*m)//Gcd(n,m))\nt = int(input())\nwhile t!=0:\n    a, b, q = map(int, input().split())\n    dl = Lcm(a, b)\n    if a < b:a, b = b, a\n    n = int(q)\n    ar = list()\n    while q != 0:\n        L, R = map(int, input().split())\n        L = max(L, a)\n        num = int(0)\n        if (L<=R) and (a%b)!=0:\n            L = L - 1\n            cut = int(L//dl)\n            d = (L+1) - (cut*dl)\n            if d <= a and cut>0:\n                L -= d\n                cut = cut - 1\n            L -= cut*a\n            cut = int(R//dl)\n            d = (R+1) - (cut*dl)\n            if (d <= a) and cut>0:\n                R -= d\n                cut = cut - 1\n            R -= cut*a\n            num = R - L\n        ar.append(int(num))\n        q = q - 1\n    for i in range(0, n):\n        print(ar[i], end=' ')\n    print('\\n')\n    t = t - 1\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\n\ndef gcd(a,b):\n    if not b:\n        return a\n    return gcd(b,a%b)\n\ndef LCM(a,b):\n    return (a*b)//gcd(a,b)\n\nfor _ in range(t):\n    a,b,q=map(int,input().split())\n    lcm = LCM(a,b)\n    temp = [0]\n    for x in range(1,lcm+1):\n        ab = (x%a)%b\n        ba = (x%b)%a\n        if ab!=ba:\n            temp.append(1)\n        else:\n            temp.append(0)\n    for x in range(1,lcm+1):\n        temp[x]+=temp[x-1]\n    while q:\n        l,r=map(int,input().split())\n        ansR = (r//lcm)*(temp[-1]) + temp[r%lcm]\n        l-=1\n        ansL = (l//lcm)*(temp[-1]) + temp[l%lcm]\n        print(ansR-ansL,end=\" \")\n        q-=1\n    print()"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\nans=[]\nfor _ in range(int(input())):\n\ta,b,q=map(int,input().split())\n\tm=a*b\n\tret=[]\n\tc=[int(i%a%b!=i%b%a) for i in range(m)]\n\ts=sum(c)\n\tfor i in range(m-1):\n\t\tc[i+1]+=c[i]\n\tfor _ in range(q):\n\t\tl,r=map(int,input().split())\n\t\trr=(r//m)*s+c[r%m]\n\t\tll=((l-1)//m)*s+c[(l-1)%m]\n\t\tret.append(rr-ll)\n\tans.append(\" \".join(map(str,ret)))\nprint(\"\\n\".join(ans))\n"
        },
        {
            "language": 3,
            "solution": "import math\ntll=int(input())\nwhile(tll>0):\n\ttll-=1\n\ta,b,q=map(int,input().split())\n\twhile(q>0):\n\t\tq-=1\n\t\tl,r=map(int,input().split())\n\t\tif (a>b):\n\t\t\ta,b=b,a\n\t\tif (l<b and r<b):\n\t\t\tprint(0, sep=\" \")\n\t\t\tcontinue\n\t\tans=r-l+1\n\t\tif (l<b):\n\t\t\tans-=(b-l)\n\t\tlcm=(a*b)//math.gcd(a,b)\n\t\tl=max(l,b)\n\t\tn1=l//lcm\n\t\tn2=r//lcm\n\t\tn=n2-n1\n\t\tif (l==(n1*lcm)):\n\t\t\tn+=1\n\t\tans-=(n*b)\n\t\tif ((n2*lcm)+b-1>r):\n\t\t\tans+=((n2*lcm)+b-1)-r\n\t\tif (((n1-1)*lcm)+b-1>=l):\n\t\t\tans-=((n1-1)*lcm)+b-l\n\t\tif (n1*lcm<l and n1*lcm+b-1>=l):\n\t\t\tans-=n1*lcm+b-l\n\t\t# if (r>lcm):\n\t\t# \tn1=r//lcm\n\t\t# \tn2=l//lcm\n\t\t# \ttemp=r%lcm\n\t\t# \tif ((n1*lcm)+b-1>=r):\n\t\t# \t\tans-=(n1-1)*b\n\t\t# \t\tans-=r-(n1*lcm)+1\n\t\t# \telse:\n\t\t# \t\tans-=(n1)*b\n\t\t# \tif (l>lcm):\n\t\t# \t\tans+=n2*b\n\t\t# \t\tif ((n2*lcm)+b-1>=l):\n\t\t# \t\t\tans-=(n2*lcm)+b-l\n\t\tprint(ans,sep=\" \")\n\tprint()\n\n\n\n\n\t\t\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n * Spend 5 to 10 minutes analyzing different approaches to solve Don't rush and\n * start coding first solution that comes to mind Right now best strategy is\n * analyze for 20 minutes and code 20 minutes 3 question 2 hour. Remaining 30\n * minutes is miscellaneous Simply coding and coding won't solve problem,\n * analyzing then coding will solve it\n */\npublic class Codeforces {\n\n\tpublic static void main(String args[]) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint t = in.nextInt();\n\t\twhile (t-->0) {\n\t\t\tint a = in.nextInt(), b = in.nextInt();\n\t\t\tlong p[] = new long[a*b+1];\n\t\t\tbuild(p, a, b);\n\t\t\tint q = in.nextInt();\n\t\t\tfor (int i=0;i<q;i++) {\n\t\t\t\tlong l = in.nextLong(), r = in.nextLong();\n\t\t\t\tSystem.out.print(query(l, r, p) + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tin.close();\n\t}\n\n\tprivate static long query(long l, long r, long[] p) {\n\t\treturn query(r,p) - query(l-1, p);\n\t}\n\n\tprivate static long query(long l, long[] p) {\n\t\tint len = p.length-1;\n\t\tlong cnt = l/len;\n\t\tint rem = (int)(l%len);\n\t\treturn p[len]*cnt+p[rem];\n\t}\n\n\tprivate static void build(long[] p, int a, int b) {\n\t\tint len = a*b;\n\t\tp[0] = 0;\n\t\tfor (int i=1;i<=len;i++) {\n\t\t\tp[i] = p[i-1];\n\t\t\tif (i%a%b != i%b%a) p[i]++;\n\t\t}\n\t}\n\t\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tstatic class Reader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic Reader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\tstatic class Node implements Comparable<Node>{\n\t\tint i, h;\n\n\t\t@Override\n\t\tpublic int compareTo(Node o) {\n\t\t\treturn i - o.i;\n\t\t}\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tReader r = new Reader();\n\n\t\tint t = r.nextInt();\n\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint a = r.nextInt();\n\t\t\tint b = r.nextInt();\n\t\t\tint q = r.nextInt();\n\t\t\t\n\t\t\tint sub = Integer.min(a, b);\n\t\t\tb = Integer.max(a, b);\n\t\t\ta = sub;\n\t\t\tlong lcm = a * b / gcd(a, b);\n\t\t\t\t\t\t\n\t\t\tfor (int j = 0; j < q; j++) {\n\t\t\t\tlong left = r.nextLong();\n\t\t\t\tlong right = r.nextLong();\n\t\t\t\t\n//\t\t\t\tfor (long k = left; k <= right; k++) {\n//\t\t\t\t\tif (k % a % b != k % b % a) {\n//\t\t\t\t\t\tSystem.out.println(k);\n//\t\t\t\t\t}\n//\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlong tot = right - left + 1;\n\t\t\t\t\n\t\t\t\tlong t1 = left / lcm;\n\t\t\t\tlong t2 = right / lcm;\n\t\t\t\t\n\t\t\t\ttot -= (t2 - t1) * b;\n\t\t\t\t\n\t\t\t\tif (left < b) {\n\t\t\t\t\ttot -= b - left;\n\t\t\t\t} else if (left % a % b == left % b % a) {\n\t\t\t\t\ttot -= t1 * lcm + b - left;\n\t\t\t\t}\n\t\t\t\tif (right % a % b == right % b % a) {\n\t\t\t\t\ttot += t2 * lcm + b - 1 - right;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.print(tot + \" \");\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println();\n\t\t\t\n\t\t}\n\n\t}\n\t\n\tstatic long gcd(long a, long b) {\n\t\tif (a == 0) {\n\t\t\treturn b;\n\t\t} else {\n\t\t\treturn gcd(b % a, a);\n\t\t}\n\t}\n\t\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Objects;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Double.parseDouble;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\n\npublic class Solution {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n    static boolean isLocal = false;\n\n    long get(long l, int len, int b) {\n        long ans = (l / (b + len)) * len;\n        l %= (b + len);\n        long rest = max(0, l - b + 1);\n        return ans + rest;\n    }\n\n    int get_max_len(int a, int b) {\n        return a * (b / gcd(a, b)) - b;\n    }\n\n    private int gcd(int a, int b) {\n        while (b > 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n\n    void Case() throws IOException {\n        int t[] = sort(na(2));\n        int a = t[0], b = t[1], q = nextInt();\n        int len = get_max_len(a, b);\n        while (q-- > 0) {\n            long l = nextLong(), r = nextLong();\n            if (len == 0)\n                out.print(\"0 \");\n            else {\n                long ans = get(r, len, b) - get(l - 1, len, b);\n//                long ans2 = get(r, len, a, b) - get(l - 1, len, a, b);\n                out.print(ans + \" \");\n            }\n        }\n        out.println();\n    }\n\n    void solve() throws Exception {\n        int t = nextInt();\n        for (int i = 1; i <= t; i++) {\n            Case();\n        }\n    }\n\n    int min(int x, int y) {\n        return Integer.min(x, y);\n    }\n\n    int max(int x, int y) {\n        return Integer.max(x, y);\n    }\n\n    long min(long x, long y) {\n        return Long.min(x, y);\n    }\n\n    long max(long x, long y) {\n        return Long.max(x, y);\n    }\n\n    int[] sort(int[] arr) {\n        sort(arr, 0, arr.length - 1);\n        return arr;\n    }\n\n    void sort(int arr[], int l, int r) {\n        if (l < r) {\n            int m = (l + r) / 2;\n            sort(arr, l, m);\n            sort(arr, m + 1, r);\n            merge(arr, l, m, r);\n        }\n    }\n\n    void merge(int arr[], int l, int m, int r) {\n        int n1 = m - l + 1;\n        int n2 = r - m;\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n        for (int i = 0; i < n1; ++i)\n            L[i] = arr[l + i];\n        for (int j = 0; j < n2; ++j)\n            R[j] = arr[m + 1 + j];\n        int i = 0, j = 0;\n        int k = l;\n        while (i < n1 && j < n2) {\n            if (L[i] <= R[j]) {\n                arr[k] = L[i];\n                i++;\n            } else {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n        while (i < n1) {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n        while (j < n2) {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n\n    class Seg implements Comparable<Seg> {\n        int st, end;\n\n        public Seg(int st, int end) {\n            this.st = st;\n            this.end = end;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            Seg seg = (Seg) o;\n            return st == seg.st &&\n                    end == seg.end;\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(st, end);\n        }\n\n        @Override\n        public int compareTo(Seg seg) {\n            return st == seg.st ? Integer.compare(end, seg.end) : Integer.compare(st, seg.st);\n        }\n    }\n\n    private int[] na(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n\n    private long[] nal(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n\n    int nextInt() throws IOException {\n        return parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n\n    String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    public static void main(String[] args) throws Exception {\n        try {\n            if (isLocal) {\n                in = new BufferedReader(new FileReader(\"src/tests/sol.in\"));\n                out = new PrintWriter(new BufferedWriter(new FileWriter(\"src/tests/sol.out\")));\n            } else {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n//            long lStartTime = System.currentTimeMillis();\n            new Solution().solve();\n//            long lEndTime = System.currentTimeMillis();\n//            out.println(\"Elapsed time in seconds: \" + (double) (lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env pypy3\n\nclass DenseBlock:\n    def __init__(self, block):\n        self.block = block\n    def getSum(self, l, r):\n        assert(0 <= l <= r <= len(self))\n        return sum(self.block[l:r])\n    def __len__(self):\n        return len(self.block)\n\nclass SumBlock:\n    def __init__(self, b1, b2):\n        self.b1 = b1\n        self.b2 = b2\n    def getSum(self, l, r):\n        assert(0 <= l <= r <= len(self))\n        m = len(self.b1) - l\n        if m < 0:\n            return self.b2.getSum(l - len(self.b1), r - len(self.b1))\n        else:\n            if r - len(self.b1) > 0:\n                return self.b1.getSum(l, l+m) + self.b2.getSum(0, r - len(self.b1))\n            else:\n                return self.b1.getSum(l, r)\n    def __len__(self):\n        return len(self.b1) + len(self.b2)\n\nclass AllSameBlock:\n    def __init__(self, val, count):\n        self.val = val\n        self.count = count\n    def getSum(self, l, r):\n        assert(0 <= l <= r <= len(self))\n        return self.val * (r - l)\n\n    def __len__(self):\n        return self.count\n\ns1 = SumBlock(DenseBlock([1,2,3,4]), DenseBlock([5,6]))\ns2 = DenseBlock([1,2,3,4,5,6])\n\nclass InfiniteRepeatBlock:\n    def __init__(self, block):\n        self.block = block\n    def getSum(self, l, r):\n        block_size = len(self.block)\n\n        left_block_id = l // block_size\n        right_block_id = r // block_size\n\n        left_id = l % block_size\n        right_id = r % block_size\n\n        if left_block_id == right_block_id:\n            return self.block.getSum(left_id, right_id)\n\n        num_full_blocks = right_block_id - left_block_id - 1\n\n        return num_full_blocks*self.block.getSum(0, len(self.block)) + self.block.getSum(left_id, len(self.block)) + self.block.getSum(0, right_id)\n\nimport math\n\ndef ans2(a, b, l, r):\n    ret = 0\n    for x in range(l, r+1):\n        if x % a % b != x % b % a:\n            ret += 1\n    return ret\n\ndef ans(a, b, l, r):\n    if a > b:\n        return ans(b, a, l, r)\n\n    a = a // math.gcd(a, b)\n\n    arr = InfiniteRepeatBlock(\n        SumBlock(\n            AllSameBlock(1, b),\n            AllSameBlock(0,b*(a-1))\n        ))\n\n    return r - l + 1 - arr.getSum(l,r+1)\n\n# import random\n# for i in range(100):\n#     a = random.randint(1, 20)\n#     b = random.randint(1, 20)\n\n#     l = random.randint(1, 100)\n#     r = random.randint(l, 10000000000000000000000)\n\n#     ans(a, b, l, r)\n\nT = int(input())\n\nfor _ in range(T):\n    a, b, q = input().split(' ')\n    a = int(a)\n    b = int(b)\n    q = int(q)\n\n    res = []\n\n    for _ in range(q):\n        l, r = input().split(' ')\n        l = int(l)\n        r = int(r)\n\n        res += [str(ans(a, b, l, r))]\n    \n    print(' '.join(res))\n"
        },
        {
            "language": 3,
            "solution": "\ndef gcd(a, b): return a if b == 0 else gcd(b, a%b)\n\nT = int(input())\nfor _ in range(T):\n    a, b, q = map(int, input().split())\n    g = gcd(a, b)\n    lcm = a*b//g\n\n    cc = []\n    for u in range(lcm):\n        cc.append(1 if u%a%b != u%b%a else 0)\n        if len(cc) > 1: cc[-1] += cc[-2]\n    def get_count(u):\n        return cc[-1]*(u//lcm) + cc[u%lcm]\n\n    res = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        res.append(get_count(r)-get_count(l-1))\n    print(' '.join(map(str, res)))\n\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\nimport sys\nfrom collections import Counter\nfrom math import gcd\n# sys.setrecursionlimit(100000)\n# input = sys.stdin.buffer.readline\nINF = 2**62-1\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_int_n():\n    return list(map(int, input().split()))\n\n\ndef read_float():\n    return float(input())\n\n\ndef read_float_n():\n    return list(map(float, input().split()))\n\n\ndef read_str():\n    return input().strip()\n\n\ndef read_str_n():\n    return list(map(str, input().split()))\n\n\ndef error_print(*args):\n    print(*args, file=sys.stderr)\n\n\ndef mt(f):\n    import time\n\n    def wrap(*args, **kwargs):\n        s = time.time()\n        ret = f(*args, **kwargs)\n        e = time.time()\n\n        error_print(e - s, 'sec')\n        return ret\n\n    return wrap\n\n\ndef ref(A, B, Q):\n    L = 0\n    for l, r in Q:\n        L = max(L, l)\n        L = max(L, r)\n    s = [0] * (L+1)\n    for i in range(len(s)):\n        if (i % A) % B != (i % B) % A:\n            s[i] = 1\n\n    ans = []\n    for l, r in Q:\n        ans.append(sum(s[:r+1]) - sum(s[:l]))\n    return ans\n\n# @mt\ndef slv(A, B, Q):\n    if max(A, B) % min(A, B) == 0:\n        return [0] * len(Q)\n\n\n    A, B = min(A, B), max(A, B)\n    cycle = A * B // gcd(A, B)\n    ans = []\n\n    def q(n):\n        cn = n // cycle\n        r = cn * (cycle - B) + max(0, (n % cycle + 1) - B)\n        # error_print(n, r, cn)\n        return r\n\n    for l, r in Q:\n        ans.append(q(r) - q(l-1))\n\n    return ans\n\n\n\ndef main():\n    T = read_int()\n    for _ in range(T):\n        A, B, N = read_int_n()\n        Q = [read_int_n() for _ in range(N)]\n        print(*slv(A, B, Q))\n        # print(*ref(A, B, Q))\n\n    # import random\n    # A = random.randint(1, 20)\n    # B = random.randint(1, 20)\n    # Q = []\n    # N = 10\n    # for _ in range(N):\n    #     l = random.randint(1, 100)\n    #     r = random.randint(1, 100)\n    #     l, r = min(l, r), max(l, r)\n    #     Q.append([l, r])\n    # print(A, B, N)\n    # print(Q)\n    # print(*slv(A, B, Q))\n    # print(*ref(A, B, Q))\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n \npublic class C {\n    public static long lcm;\n    public static void main(String[] args) throws IOException {\n        FastScanner input = new FastScanner(System.in);\n        PrintWriter output = new PrintWriter(System.out);\n\n        int T = input.nextInt();\n        for (int t = 0; t < T; t++) {\n            long a = input.nextLong(), b = input.nextLong(), q = input.nextInt();\n            if (a < b) {\n                long temp = a;\n                a = b;\n                b = temp;\n            }\n            lcm = lcm(a, b);\n\n            for (int i = 0; i < q; i++) {\n                long l = input.nextLong(), r = input.nextLong();\n                if (i == 0)\n                    System.out.print(getCount(a, b, l, r));\n                else\n                    System.out.print(\" \" + getCount(a, b, l, r));\n            }\n            System.out.println();\n        }\n\n        output.close();\n    }\n \n    public static long getCount(long a, long b, long l, long r) {\n        if (a == b)\n            return 0;\n\n\n        long start = l / lcm * lcm;\n        long finish = r / lcm * lcm;\n        long count = (finish - start) / lcm * a;\n        if (start + a <= l)\n            count -= a;\n        else \n            count -= (l - start);\n\n        if (r - finish >= a)\n            count += a;\n        else \n            count += (r - finish + 1);\n\n        return r - l + 1 - count;\n    }\n\n    public static long gcd(long x, long y) {\n        if (x == 0 || y == 0)\n            return x + y;\n        \n        if (x > y)\n            return gcd(x % y, y);\n\n        return gcd(x, y % x);\n    }\n\n    public static long lcm(long x, long y) {\n        return x * y / gcd(x, y);\n    }\n\n    static class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n \n        FastScanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n \n        FastScanner(FileReader s) {\n            br = new BufferedReader(s);\n        }\n \n        String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n \n        String nextLine() throws IOException {\n            return br.readLine();\n        }\n \n        double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n \n        int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    tmp = (a*b)//math.gcd(a,b)\n    n=max(a,b)\n    for i in range(q):\n        ans=0\n        l,r = map(int,input().split())\n        ans+=(r//tmp)*(n)\n        ans-=(l//tmp)*(n)\n        ans=ans-max(0,n-r%tmp-1)+max(0,n-l%tmp)\n        print(r-l+1-ans,end=' ')\n    print()                \n            "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long count(long long d, long long ab, long long arr[]) {\n  long long v = (d / ab) * arr[ab - 1];\n  long long q = d % ab;\n  v += arr[q];\n  return v;\n}\nint main(int argc, char const *argv[]) {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b, q;\n    cin >> a >> b >> q;\n    long long arr[40000] = {0};\n    for (long long i = 1; i < a * b; ++i) {\n      long long v1 = (i % a) % b;\n      long long v2 = (i % b) % a;\n      if (v1 != v2) {\n        arr[i]++;\n      }\n      arr[i] += arr[i - 1];\n    }\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      cout << count(r, a * b, arr) - count(l - 1, a * b, arr) << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        StringBuilder ans = new StringBuilder();\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int q = sc.nextInt();\n            int LCM = (int)lcm(a,b);\n            int cnt = 0;\n            int[] sum = new int[LCM];\n            for (int x = 0; x < LCM; x++) {\n                if (((x%a)%b)!=((x%b)%a)) {\n                    cnt++;\n                }\n                sum[x] = cnt;\n            }\n            for (int i = 0; i < q; i++) {\n                long l = sc.nextLong();\n                long r = sc.nextLong();\n                ans.append(count(r,LCM,sum)-count(l-1,LCM,sum)).append(' ');\n            }\n            ans.append('\\n');\n        }\n        System.out.print(ans);\n    }\n\n    private static long count(long y, int lcm, int[] sum) {\n        return y/lcm*sum[lcm-1]+sum[(int)(y%lcm)];\n    }\n\n    private static long lcm(long a, long b) {\n        return a*b/gcd(a,b);\n    }\n\n    private static long gcd(long a, long b) {\n        return b > 0 ? gcd(b,a%b) : a;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nT = int(stdin.readline())\n\nfor _ in range(T):\n    [a, b, q] = [int(x) for x in stdin.readline().split()]\n    maxAB = max(a, b)\n    aGCD = a\n    bGCD = b\n    while aGCD != 0 and bGCD != 0:\n        if aGCD > bGCD:\n            aGCD %= bGCD\n        else:\n            bGCD %= aGCD\n\n    gcd = aGCD + bGCD\n\n    nok = a * b // gcd\n\n    batch = nok - maxAB\n    resArr = []\n\n    for __ in range(q):\n        [l, r] = [int(x) for x in stdin.readline().split()]\n        res = 0\n        if a == 1 and b == 1:\n            res = 0\n        else:\n            res += ((r - l) // nok) * batch\n\n            if r % nok >= l % nok:\n                if r % nok >= maxAB:\n                    if l % nok >= maxAB:\n                        res += r % nok - l % nok + 1\n                    else:\n                        res += r % nok - maxAB + 1\n            else:\n                if r % nok >= maxAB:\n                    res += r % nok - maxAB + 1\n                res += min(batch, nok - l % nok)\n        resArr.append(str(res))\n\n    stdout.write(' '.join(resArr) + \"\\n\")\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nt=int(sys.stdin.readline())\nfor _ in range(t):\n    x,y,q=map(int,sys.stdin.readline().split())\n    a=min(x,y)\n    b=max(x,y)\n    lcm=(a*b)//math.gcd(a,b)\n    #print(lcm,'lcm')\n    res=[]\n    for i in range(q):\n        l,r=map(int,sys.stdin.readline().split())\n        \n        A=l//lcm\n        B=l%lcm\n        left=(A)*b + min(b-1,B)+1\n        C=r//lcm\n        D=r%lcm\n        right=(C)*b + min(b-1,D) + 1\n        #print(l,'l',r,'r',A,'A',B,'B',C,'C',D,'D')\n        left-=1\n        right-=1\n        #print(A,'A',B,'B')\n        #print(left,'left')\n        #print(C,'C',D,'D')\n        #print(right,'right')\n        #print(left,'left',right,'right')\n        \n        if 0<=l%lcm<=b-1:\n            ans=right - left + 1\n        else:\n            ans = right - left\n        ans=(r-l+1-ans)\n        res.append(ans)\n    print(*res)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n\ta, b, q = map(int, input().split())\n\tp = a*b\n\tcount = [0]\n\tfor x in range(p):\n\t\tif (x % a) % b != (x % b) % a:\n\t\t\tcount.append(count[-1]+1)\n\t\telse:\n\t\t\tcount.append(count[-1])\n\tres = []\n\tfor _ in range(q):\n\t\tl, r = map(int, input().split())\n\t\tsol = count[r%p+1] - count[l%p] + count[-1] * (r // p - l // p)\n\t\tres.append(sol)\n\n\tprint(\" \".join(str(r) for r in res))"
        },
        {
            "language": 1,
            "solution": "from sys import stdin,stdout\nfrom fractions import gcd\nread,write = stdin.readline,stdout.write\niread = lambda: int(read())\nsread = lambda: read().strip()\nspread = lambda func=int: map(func,read().split())\nlcm = lambda x,y: x*y/gcd(x,y)\n\ndef calculate(r,nax,LCM):\n    int_div = r/LCM\n    return r - ((int_div-1)*(nax) + min(nax,r-int_div*LCM+1) + min(r,nax-1)) if int_div else r - min(r,nax-1)\n\nt = iread()\nfor _ in xrange(t):\n    a,b,q = spread()\n    nax = max(a,b)\n    LCM = lcm(a,b)\n    res = []\n    for _ in xrange(q):\n        l,r = spread()\n        res.append(calculate(r,nax,LCM) - calculate(l-1,nax,LCM))\n    print ' '.join(map(str,res))"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return s\ndef invr():\n    return(map(int,input().split()))\n\n\n\ndef from_file(f):\n    return f.readline\n\n\ndef solve(l, r, a, b, lcm, c_lcm, dp: list):\n    l_count = l // lcm\n    r_count = r // lcm\n\n    tmp = (r_count-l_count) * c_lcm\n\n    # [l_count ... l) check and deduce\n    left = dp[l % lcm-1] if l%lcm > 0 else 0\n    right = dp[r % lcm]\n\n    result = tmp - left + right\n    return (r-l+1) - result\n\n\n\ndef get_lcm(a, b):\n    def get_gcd(x, y):\n        if y > x:\n            x, y = y, x\n        r = x % y\n        if r == 0:\n            return y\n        return get_gcd(r, y)\n\n    return (a * b) // get_gcd(a, b)\n\ndef count_interval(l, r, a, b, dp):\n    count = 0\n    while l <= r:\n        if l % a % b == l % b % a:\n            count += 1\n        dp[l] = count\n        l += 1\n\n    return count\n\n# with open('3.txt') as f:\n#     input = from_file(f)\nt = inp()\nfor _ in range(t):\n    a, b, q = invr()\n    result = []\n    lcm = get_lcm(a, b)\n    dp = [0] * lcm\n    c_lcm = count_interval(0, lcm-1, a, b, dp)\n    for _ in range(q):\n        l, r = invr()\n\n        res = solve(l, r, a, b, lcm, c_lcm, dp)\n        result.append(str(res))\n    print(\" \".join(result))\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\npublic final class CF\n{\n    public static long gcd(long a,long b)\n    {\n        if(b==0)\n        return a;\n        return gcd(b,a%b);\n    }\n    public static long ans(long r,long lcm,long a,long b)\n    {\n            long y=Math.max(a,b);\n            long x=r/lcm;\n            x=(x*(lcm-y));\n            \n            if((r%lcm)>=y)\n            x+=(r%lcm)-y+1;\n            return x;\n    }\n     static int K=(int)Math.pow(10,9)+7;\n     public static void main(String[]args)throws IOException\n\t{\n        FastReader ob=new FastReader();\n        StringBuffer sb=new StringBuffer();\n        int T=ob.nextInt();\n        while(T-->0)\n        {\n            long a=ob.nextLong();\n            long b=ob.nextLong();\n            long q=ob.nextLong();\n            long lcm=(a*b)/gcd(a,b);\n            while(q-->0)\n            {\n                long l=ob.nextLong();\n                long r=ob.nextLong();\n                if(a==b)\n                {\n                    sb.append(\"0 \");\n                    continue;\n                }\n                long x=ans(r,lcm,a,b)-ans(l-1,lcm,a,b);\n                sb.append(x+\" \");\n            }\n            sb.append(\"\\n\");\n            \n        }\n        System.out.println(sb);\n\t}\n}\nclass Pair\n{\n\tint x,y;\n\tPair(int x,int y)\n\t{\n\t\tthis.x=x;\n\t\tthis.y=y;\n\t}\n}\nclass PairComparator implements Comparator<Pair>\n{\n\tpublic int compare(Pair a,Pair b)\n\t{\n\t\treturn a.x-b.x;\n\t}\n}\nclass FastReader {\n    BufferedReader br;\n    StringTokenizer st;\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    public String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e)  {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n    public String nextLine()\n    {\n        String s=\"\";\n        try {\n        s=br.readLine();\n        } catch (IOException e)  {\n                e.printStackTrace();\n            }\n        return s;\n    }\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n    public long nextLong() {\n        return Long.parseLong(next());\n    }\n    public double nextDouble() {\n        return Double.parseDouble(next());\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfrom math import gcd\nfrom itertools import accumulate\n\nt=int(input())\nfor tests in range(t):\n    a,b,q=map(int,input().split())\n\n    LCM=a*b//gcd(a,b)\n    LIST=[0]*LCM\n\n    for i in range(LCM):\n        if (i%a)%b!=(i%b)%a:\n            LIST[i]+=1\n\n    S=[0]+list(accumulate(LIST))\n\n    for queries in range(q):\n        l,r=map(int,input().split())\n\n        lq,lr=divmod(l,LCM)\n        rq,rr=divmod(r,LCM)\n\n        print(S[-1]*(rq-lq)-S[lr]+S[rr+1],end=\" \")\n    print()\n    \n    \n        \n        \n\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tMain m = new Main();\n\n\t\tm.func(new Scanner(System.in));\n\n\t}\n\n\tlong gcd(long a, long b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\n\tArrayList<Integer> get_primes(int limit) {\n\t\tArrayList<Integer> res = new ArrayList<>();\n\t\ta:\n\t\tfor (int i = 2; i <= limit; i++) {\n\t\t\tint temp = (int) Math.sqrt(i);\n\n\t\t\tfor (int j = 2; j <= temp; j++) {\n\t\t\t\tif (i % j == 0) {\n\t\t\t\t\tcontinue a;\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.add(i);\n\t\t}\n\t\treturn res;\n\t}\n\n\tArrayList<Long> get_factor(ArrayList<Integer> ps, long x) {\n\n\t\tArrayList<Long> res = new ArrayList<>();\n\t\tfor (int y : ps) {\n\t\t\tboolean enter = false;\n\t\t\twhile (x % y == 0) {\n\n\t\t\t\tenter = true;\n\t\t\t\tx /= y;\n\t\t\t}\n\t\t\tif (enter) {\n\t\t\t\tres.add((long) y);\n\t\t\t}\n\t\t\tif (x == 1) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\tres.add(x);\n\t\treturn res;\n\t}\n\n\n\tvoid func(Scanner s) {\n\t\tint T = s.nextInt();\n\t\twhile (T-- != 0) {\n\t\t\tint a = s.nextInt();\n\t\t\tint b = s.nextInt();\n\t\t\tint min = Math.max(a, b);\n\t\t\tint q = s.nextInt();\n\t\t\tint lcm = (int) (a * b / gcd(a, b));\n\t\t\twhile (q-- != 0) {\n\t\t\t\tlong l = s.nextLong();\n\t\t\t\tlong r = s.nextLong();\n\t\t\t\tlong down = l / lcm * lcm;\n\t\t\t\tlong up = r / lcm * lcm;\n\t\t\t\tlong res = (up - down) / lcm * min + Math.min(min, r - up + 1) - Math.min(min, l - down);\n\t\t\t\tSystem.out.println(r - l + 1 - res);\n\n\t\t\t}\n\t\t}\n\t}\n\n\tint[][] temp = new int[][]{{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\n}\n\nclass Node {\n\tint gap;\n\n\tint be;\n\n\tpublic Node(int gap, int be) {\n\t\tthis.gap = gap;\n\n\t\tthis.be = be;\n\t}\n}\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\ndef compute_gcd(x, y):\n   while(y):\n       x, y = y, x % y\n   return x\n\ndef compute_lcm(x, y):\n    lcm = (x*y)//compute_gcd(x,y)\n    return lcm\n\ndef computeResult(a, b, lcm, x, y):\n    # x >= y\n    first = a // lcm\n    last = b // lcm\n    # print(a, b, lcm, first, last)\n    if first == last:\n        if (a > first * lcm + x):\n            return (b - a + 1)\n        return (b - a + 1) - (min(b, first * lcm + x - 1) - (max(a, first * lcm) - 1))\n    # print(lcm)\n    # print(max((last - first - 1),0))\n    # print(min(last * lcm + x, b) - last * lcm)\n    # print(min(b, max(first * lcm + x, a)) - a)\n    return (b - a + 1) - ((last - first - 1) * x + (min(last * lcm + x - 1, b) - (last * lcm - 1)) + max(first * lcm + x - 1, a - 1) - a + 1)\n\nfor i in range(t):\n    (x, y, q) = [int(u) for u in input().split(' ')]\n    lcm =compute_lcm(x, y)\n    if (x < y):\n        qw = x\n        x = y\n        y = qw\n    results = \"\"\n    for j in range(q):\n        (a, b) = [int(u) for u in input().split(' ')]\n        result = computeResult(a, b, lcm, x, y)\n        results += str(result) + \" \"\n    print(results)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    dp = [0]\n    for j in range(1,a*b):\n        if ((j%a)%b)!=((j%b)%a):\n            dp.append(dp[-1]+1)\n        else:\n            dp.append(dp[-1])\n\n    # print(dp)\n    for j in range(q):\n        l, r = map(int, input().split())\n        print((r//(a*b) - (l-1)//(a*b))*dp[-1]+dp[r%(a*b)]-dp[(l-1)%(a*b)], end= \" \")\n    print()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class C_countingProblem {\n\tstatic long gcd(long a, long b) \n    { \n    if (a == 0) \n        return b;  \n    return gcd(b % a, a);  \n    } \n      \n    // method to return LCM of two numbers \n    static long lcm(long a, long b) \n    { \n        return (a*b)/gcd(a, b); \n    } \n    public static void main(String[] args) throws IOException {\n        FastScanner sc = new FastScanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        \n        int queries = sc.nextInt();\n        while (queries --> 0) {\n        \tlong a = sc.nextLong();\n        \tlong b = sc.nextLong();\n        \tlong q = sc.nextLong();\n        \tlong lcm = lcm(a,b);\n        \twhile (q --> 0) {\n        \t\tlong l = sc.nextLong();\n        \t\tlong r = sc.nextLong();\n        \t\tlong same = 0;\n        \t\tfor (long i = (long)Math.max(a, b)-1; i >= l; i--) {\n        \t\t\tif (i <= r) {\n        \t\t\t\tsame++;\n        \t\t\t\t//pw.println(i);\n        \t\t\t}\n        \t\t}\n        \t\t//pw.println(same);\n        \t\tlong place1 = ((l)/(long)lcm)*(long)lcm;\n        \t\tif (place1 > 0) {\n        \t\tsame += (l-place1 < (long)Math.max(a, b))?((long)Math.max(a, b)-(l-place1)):0;\n        \t\t}\n        \t\t//pw.println(same);\n        \t\tlong place2 = ((r)/(long)lcm)*(long)lcm;\n        \t\tif (place2 < l || place2 == place1) {\n        \t\t\tplace2 += (long)lcm;\n        \t\t}\n        \t\tif (place2 > place1 && place2 <= r) {\n        \t\tsame += (place2+Math.max(a, b)-1 <= r)?Math.max(a, b):(r-place2+1);\n        \t\t}\n        \t\t//pw.println(same);\n        \t\tlong diff = (place2-place1)/(long)lcm-1;\n        \t\tif (diff > 0) {\n        \t\tsame += (long)Math.max(a, b)*diff;\n        \t\t}\n        \t\t//pw.println(same);\n        \t\tsame = (r-l+1)-same;\n        \t\tif (same < 0) {\n        \t\t\tsame = 0;\n        \t\t}\n        \t\tpw.print(same + \" \");\n        \t}\n        \tpw.println();\n        }\n        \n        pw.close();\n    }\n    static class FastScanner {\n    \tprivate boolean finished = false;\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public FastScanner(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw   new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n        public int peek() {\n            if (numChars == -1) {\n                return -1;\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private String readLine0() {\n            StringBuilder buf = new StringBuilder();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r') {\n                    buf.appendCodePoint(c);\n                }\n                c = read();\n            }\n            return buf.toString();\n        }\n        public String readLine() {\n            String s = readLine0();\n            while (s.trim().length() == 0) {\n                s = readLine0();\n            }\n            return s;\n        }\n        public String readLine(boolean ignoreEmptyLines) {\n            if (ignoreEmptyLines) {\n                return readLine();\n            } else {\n                return readLine0();\n            }\n        }\n\n        public BigInteger readBigInteger() {\n            try {\n                return new BigInteger(nextString());\n            } catch (NumberFormatException e) {\n                throw new InputMismatchException();\n            }\n        }\n\n        public char nextCharacter() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            return (char) c;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E') {\n                    return res * Math.pow(10, nextInt());\n                }\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E') {\n                        return res * Math.pow(10, nextInt());\n                    }\n                    if (c < '0' || c > '9') {\n                        throw new InputMismatchException();\n                    }\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public boolean isExhausted() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1) {\n                read();\n            }\n            return value == -1;\n        }\n    public String next() {\n            return nextString();\n        }\n\n        public SpaceCharFilter getFilter() {\n            return filter;\n        }\n\n        public void setFilter(SpaceCharFilter filter) {\n            this.filter = filter;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n        public int[] nextIntArray(int n){\n            int[] array=new int[n];\n            for(int i=0;i<n;++i)array[i]=nextInt();\n            return array;\n        }\n        public int[] nextSortedIntArray(int n){\n            int array[]=nextIntArray(n);\n            PriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n            for(int i = 0; i < n; i++){\n                pq.add(array[i]);\n            }\n            int[] out = new int[n];\n            for(int i = 0; i < n; i++){\n                out[i] = pq.poll();\n            }\n            return out;\n        }\n        public int[] nextSumIntArray(int n){\n            int[] array=new int[n];\n            array[0]=nextInt();\n            for(int i=1;i<n;++i)array[i]=array[i-1]+nextInt();\n            return array;\n        }\n        public ArrayList<Integer>[] nextGraph(int n, int m){\n            ArrayList<Integer>[] adj = new ArrayList[n];\n            for(int i = 0; i < n; i++){\n                adj[i] = new ArrayList<Integer>();\n            }\n            for(int i = 0; i < m; i++){\n                int u = nextInt(); int v = nextInt();\n                u--; v--;\n                adj[u].add(v); adj[v].add(u);\n            }\n            return adj;\n        }\n        public ArrayList<Integer>[] nextTree(int n){\n            return nextGraph(n, n-1);\n        }\n\n        public long[] nextLongArray(int n){\n            long[] array=new long[n];\n            for(int i=0;i<n;++i)array[i]=nextLong();\n            return array;\n        }\n        public long[] nextSumLongArray(int n){\n            long[] array=new long[n];\n            array[0]=nextInt();\n            for(int i=1;i<n;++i)array[i]=array[i-1]+nextInt();\n            return array;\n        }\n        public long[] nextSortedLongArray(int n){\n            long array[]=nextLongArray(n);\n            Arrays.sort(array);\n            return array;\n        }\n    }\n\tstatic void shuffle(int[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tint temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\tstatic void shuffle(long[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tlong temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class countingproblem {\n\tpublic static void main(String[] args) {\n\t\tFastScanner scan=new FastScanner();\n\t\tPrintWriter out=new PrintWriter(System.out);\n\t\tint t=scan.nextInt();\n\t\tfor(int tt=0;tt<t;tt++) {\n\t\t\tint a=scan.nextInt(), b=scan.nextInt();\n\t\t\tint q=scan.nextInt();\n\t\t\tint lcm=a/gcd(a,b)*b;\n\t\t\tboolean[] same=new boolean[lcm];\n\t\t\tlong delta=0;\n\t\t\tfor(int i=0;i<lcm;i++) {\n\t\t\t\tsame[i]=((i%a)%b==(i%b)%a);\n\t\t\t\tif(!same[i]) delta++;\n\t\t\t}\n\t\t\tint[] suffix=new int[lcm], prefix=new int[lcm];\n\t\t\tfor(int i=0;i<lcm;i++) {\n\t\t\t\tif(!same[i]) prefix[i]++;\n\t\t\t\tif(i>0) prefix[i]+=prefix[i-1];\n\t\t\t}\n\t\t\tfor(int i=lcm-1;i>=0;i--) {\n\t\t\t\tif(!same[i]) suffix[i]++;\n\t\t\t\tif(i+1<lcm) suffix[i]+=suffix[i+1];\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\tlong res=0L;\n\t\t\t\tlong l=scan.nextLong(), r=scan.nextLong();\n\t\t\t\tint lrem=(int)(l%lcm);\n\t\t\t\tint rrem=(int)(r%lcm);\n\t\t\t\tres+=suffix[lrem];\n\t\t\t\tres+=prefix[rrem];\n\t\t\t\t\n\t\t\t\tres+=((r-rrem)-(l-lrem+lcm))/lcm*delta;\n\t\t\t\tout.print(res);\n\t\t\t\tout.print(\" \");\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t\tout.close();\n\t}\n\tpublic static int gcd(int a, int b) {\n\t\tif(b==0) return a;\n\t\treturn gcd(b,a%b);\n\t}\n\tstatic class FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner() {\n\t\t\ttry\t{\n\t\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (Exception e){e.printStackTrace();}\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (st.hasMoreTokens())\treturn st.nextToken();\n\t\t\ttry {st = new StringTokenizer(br.readLine());}\n\t\t\tcatch (Exception e) {e.printStackTrace();}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {return Integer.parseInt(next());}\n\n\t\tpublic long nextLong() {return Long.parseLong(next());}\n\n\t\tpublic double nextDouble() {return Double.parseDouble(next());}\n\n\t\tpublic String nextLine() {\n\t\t\tString line = \"\";\n\t\t\tif(st.hasMoreTokens()) line = st.nextToken();\n\t\t\telse try {return br.readLine();}catch(IOException e){e.printStackTrace();}\n\t\t\twhile(st.hasMoreTokens()) line += \" \"+st.nextToken();\n\t\t\treturn line;\n\t\t}\n\t}\n}\n/*\n1\n199 200 5\n1 1000000000000000000\n2 41564543124\n45645343 999999999999\n1 2\n2 3\n*/"
        },
        {
            "language": 3,
            "solution": "import math\ndef lcm(a,b):\n    kk = math.gcd(a,b)\n    ll = (a*b)//kk\n    return ll\nfor _ in range(int(input())):\n    a,b,q = map(int,input().split())\n    aa = lcm(a,b)\n    b=max(a,b)\n    for i in range(q):\n        tmp=aa\n        ans=0\n        l,r = map(int,input().split())\n        ans+=(r//tmp)*(b)\n        ans-=(l//tmp)*(b)\n        if r%tmp<b:\n            ans-=(b)\n            ans+=r%tmp+1\n        if l%tmp<b:\n            ans-=l%tmp\n            ans+=(b)\n        print(r-l+1-ans,end=' ')\n    print()                \n            \n "
        },
        {
            "language": 3,
            "solution": "import sys, os\ninput = sys.stdin.read().split('\\n')[::-1].pop\ndef print(s):\n\tsys.stdout.write(str(s) + ' ')\ndef endl():\n\tsys.stdout.write('\\n')\n\ndef gcd(a, b):\n\twhile b != 0:\n\t\ta, b = b, a%b\n\treturn a\n\nt = int(input())\nans = []\n\nfor _ in range(t):\n\ta, b, q = [int(x) for x in input().split()]\n\ta, b = min(a, b), max(a, b)\n\tc = a*b//gcd(a, b)\n\n\tv = []\n\tcurr = 0\n\tfor i in range(c):\n\t\tcurr += (i%a%b) != (i%b%a)\n\t\tv.append(curr)\n\t\n\n\tfor _ in range(q):\n\t\tl, r = [int(x) for x in input().split()]\n\t\tl -= 1\n\t\tval = 0\n\t\tval += curr*(r//c) + v[r%c]\n\t\tval -= curr*(l//c) + v[l%c]\n\t\tprint(val)\n\tendl()\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef read():\n    return map(int, input().split())\n\ndef solve(x, b, lcm):\n    d, r = divmod(x, lcm)\n    return d*(lcm-b) + max(0, r-b+1)\n\nfor _ in range(int(input())):\n    A, B, q = read()\n    a = min(A, B)\n    b = max(A, B)\n    g = math.gcd(a, b)\n    lcm = a*b//g\n    for i in range(q):\n        l, r = read()\n        print(solve(r, b, lcm) - solve(l-1, b, lcm), end=' ')\n    print()"
        },
        {
            "language": 1,
            "solution": "from sys import stdin, stdout\nT = int(stdin.readline())\n\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a / gcd(a, b))*b\n\n\nfor p in xrange(T):\n    a, b, q = map(int, stdin.readline().split())\n    if a > b:\n        a, b = b, a\n    L = lcm(a, b)\n    resL = resR = 0\n    for m in xrange(q):\n        l, r = map(int, stdin.readline().split())\n        l -= 1\n        if L == b:\n            stdout.write('0 ')\n            continue\n        if r/L > 0:\n            resR = (r/L)*(L-b)\n            resR += max(0, (r-((r/L)*L+b))+1)\n        else:\n            resR = max(0, r-b+1)\n\n        if l/L > 0:\n            resL = (l/L)*(L-b)\n            resL += max(0, (l-((l/L)*L+b))+1)\n        else:\n            resL = max(0, l-b+1)\n\n        stdout.write(str(resR-resL)+' ')\n    stdout.write('\\n')"
        },
        {
            "language": 1,
            "solution": "from sys import stdin, stdout\nfrom fractions import gcd\n\ninput()\ninp = stdin.readlines()\nout = []\n\nptr = 0\nwhile ptr < len(inp):\n    a, b, q = map(int, inp[ptr].split()); ptr += 1\n    if a > b: a, b = b, a\n\n    lcm = (a * b) // gcd(a, b)\n\n    lout = []\n    for _ in xrange(q):\n        li, ri = map(int, inp[ptr].split()); ptr += 1\n\n        if a == b:\n            lout.append('0')\n            continue\n\n        ql = li // lcm\n        reml = li % lcm\n\n        qr = ri // lcm\n        remr = ri % lcm\n\n        ans = (qr - ql - 1) * b\n\n        ans += max(0, b - reml)\n        ans += min(b, remr + 1)\n\n        ans = (ri - li + 1 - ans)\n\n        lout.append(str(ans))\n\n    out.append(' '.join(lout))\n\nstdout.write('\\n'.join(out))\n        \n\n        \n        \n"
        },
        {
            "language": 3,
            "solution": "import math\nR=lambda:map(int,input().split())\nt,=R()\nfor _ in[0]*t:\n a,b,q=R();m=a*b//math.gcd(a,b);a=max(a,b);f=lambda x:x-x//m*a-min(a,x%m+1)\n for _ in[0]*q:l,r=R();print(f(r)-f(l-1))"
        },
        {
            "language": 3,
            "solution": "import sys\n\ntokens = []\ntokens_next = 0\nDEBUG = False\n\n\ndef next_str():\n    global tokens, tokens_next\n    while tokens_next >= len(tokens):\n        tokens = input().split()\n        tokens_next = 0\n    tokens_next += 1\n    return tokens[tokens_next - 1]\n\n\ndef nextInt():\n    return int(next_str())\n\n\ndef gcd(a, b):\n    while b > 0:\n        a, b = b, a % b\n    return a\n\n\ndef lcm(a, b):\n    return (a // gcd(a, b)) * b\n\n\ndef calcIntersection(interval1, interval2):\n    if interval1 > interval2:\n        interval1, interval2 = interval2, interval1\n    if interval1[1] < interval2[0]:\n        return 0\n\n    first = max(interval1[0], interval2[0])\n    second = min(interval1[1], interval2[1])\n    return second - first + 1\n\n\ndef myRangeLen(r):\n    # try:\n    #     return len(r)\n    # except:\n    #     # too big break it down\n    #     mid = 10**10\n    #     return myRangeLen(r[:mid]) + myRangeLen(r[mid:])\n\n    return (r.stop - r.start - 1) // r.step + 1\n\n\nT = nextInt()\nfor _ in range(T):\n    a = nextInt()\n    b = nextInt()\n    if a > b:\n        a, b = b, a\n\n    q = nextInt()\n    for i in range(q):\n        l = nextInt()\n        r = nextInt()\n\n        # if l > 10**4:\n        # DEBUG = True\n\n        if a == b:\n            print('0', end=' ')\n            continue\n\n        n = lcm(a, b)\n        if DEBUG: print('got lcm')\n        allRelevantIntervals = range(l - (l % n), r + 1, n)\n        if DEBUG: print('got range obj')\n\n        res = r - l + 1\n        if allRelevantIntervals and allRelevantIntervals[0] < l:\n            cur = allRelevantIntervals[0]\n            res -= calcIntersection((cur, cur + b - 1), (l, r))\n            allRelevantIntervals = allRelevantIntervals[1:]\n\n        if DEBUG: print('after 1st if')\n\n        if allRelevantIntervals and allRelevantIntervals[-1] + b - 1 > r:\n            cur = allRelevantIntervals[-1]\n            res -= calcIntersection((cur, cur + b - 1), (l, r))\n            allRelevantIntervals = allRelevantIntervals[:-1]\n\n        if DEBUG: print('after 2nd if')\n\n        if allRelevantIntervals:\n            res -= myRangeLen(allRelevantIntervals) * b\n\n        if DEBUG: print('after 3rd if')\n\n        if not DEBUG: print(res, end=' ')\n    if not DEBUG: print()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nlong long lcm(long long a, long long b) { return a * b / gcd(a, b); }\nlong long a, b, q, l, r;\nlong long temp;\nlong long cal(long long x) {\n  long long ans = 0;\n  long long num = x / temp;\n  if (num == 0) return 0;\n  ans += num * b;\n  if (num * temp + b - 1 > x) ans -= (num * temp + b - 1 - x);\n  return ans;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    if (a > b) {\n      long long temp = a;\n      a = b;\n      b = temp;\n    }\n    temp = lcm(a, b);\n    for (int j = 1; j <= q; j++) {\n      cin >> l >> r;\n      long long ans = r - l + 1;\n      if (l <= b) {\n        if (r < b) {\n          ans -= r - l + 1;\n        } else if (r == b) {\n          ans -= r - l;\n        } else\n          ans -= b - l;\n      }\n      ans -= (cal(r) - cal(l - 1));\n      if (j == 1)\n        cout << ans;\n      else\n        cout << \" \" << ans;\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author bhavy seth\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public static int gcd(int a, int b) {\n            if (a == 0)\n                return b;\n            return gcd(b % a, a);\n        }\n\n        public void solve(int testNumber, InputReader sc, PrintWriter out) {\n            int t = sc.nextInt();\n            while (t-- > 0) {\n                int a = sc.nextInt();\n                int b = sc.nextInt();\n                if (a > b) {\n                    int temp = a;\n                    a = b;\n                    b = temp;\n                }\n                int lcm = (a * b) / gcd(a, b);\n                int pre[] = new int[lcm + 5];\n                int tot = 0;\n                for (int i = 1; i <= lcm; i++) {\n                    if ((i % a) % b != (i % b) % a) {\n                        tot++;\n                    }\n                    pre[i] = tot;\n                }\n                int q = sc.nextInt();\n                while (q-- > 0) {\n                    long l = sc.nextLong();\n                    long r = sc.nextLong();\n                    long c = (l - 1) / lcm;\n                    long countl = c * tot;\n                    long modl = (l - 1) % lcm;\n                    countl += pre[(int) modl];\n                    long d = r / lcm;\n                    long countr = d * tot;\n                    long modr = r % lcm;\n                    countr += pre[(int) modr];\n                    out.print((countr - countl) + \" \");\n\n                }\n                out.println();\n            }\n        }\n\n    }\n\n    static class InputReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public InputReader(InputStream inputStream) {\n            br = new BufferedReader(new\n                    InputStreamReader(inputStream));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "# problem 5\nimport math\nT=int(input())\nans=[]\nfor i in range(T):\n    a,b,q=map(int,input().split())\n    d=[]\n    #\u7d20\u76f4\u306b\u5468\u671f\u6027\u304b\u3089\u5168\u63a2\u7d22\u3092\u3059\u308c\u3070\u3044\u3044\n    mod=[0 for i in range(a*b)]\n    for j in range(a*b):\n        if ((j%a)%b)!=((j%b)%a):\n            mod[j]+=1\n    for j in range(1,a*b):\n        mod[j]+=mod[j-1]\n    def count(X):\n        u,v=divmod(X,a*b)\n        return u*mod[-1]+mod[v]        \n    for x in range(q):\n        l,r=map(int,input().split())\n        d.append(count(r)-count(l-1))\n    ans.append(d)\nfor some in ans:\n    print (*some)\n\n        \n        \n        \n        \n        \n    \n        "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n  a, b, q = map(int, input().split())\n  sum1 = [0]\n  mul = a * b\n  summ = 0\n  \n  for x in range(1, mul + 1):\n    if ((x % a) % b) != ((x % b) % a):\n      summ += 1\n      sum1.append(summ)\n    else:\n      sum1.append(summ)\n  \n  for i in range(q):\n    l, r = map(int, input().split())\n    right = summ * (r // mul) + sum1[r % mul]\n    left = summ * ((l - 1) // mul) + sum1[(l - 1) % mul]\n    print(right - left, end=' ')\n  print()\n    \n"
        },
        {
            "language": 3,
            "solution": "import math\nfor _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    s=[]\n    lcm=int(a*b/math.gcd(a,b))\n    k=lcm-max(a,b)\n    for i in range(q):\n        l,r=map(int,input().split())\n        if max(l,r)<max(a,b):\n            s.append(\"0\")\n        else:\n            total1=(r//(lcm))*k+max(0,r%(lcm)-max(a,b)+1)\n            total2=((l-1)//(lcm))*k+max(0,(l-1)%(lcm)-max(a,b)+1)\n            total1-=total2\n            s.append(str(total1))\n    print(\" \".join(s))\n                    \n            \n            \n    \n    \n    \n        \n            \n    "
        },
        {
            "language": 3,
            "solution": "import math\n\ndef get_lcm(i, j):\n    gcd = math.gcd(i, j)\n    lcm = (i * j) // gcd\n    return lcm\n\n\ndef get_count(x, a, b):\n    lcm = get_lcm(a, b)\n    same_rem = x // lcm * b\n    count = x - same_rem - min(b, x % lcm + 1)\n    return count\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n\n    ans = []\n    for _ in range(q):\n        l, r = map(int, input().split())\n        a, b = min(a, b), max(a, b)\n        ans.append(get_count(r, a, b) - get_count(l-1, a, b))\n\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef lcm(x, y):\n    return x * y // math.gcd(x, y)\n\ndef prefix(l, a, b):\n    if l == 0:\n        return 0\n    res = max(l - max(a, b) + 1, 0)\n    num_period = l // lcm(a, b) \n    if num_period > 0 and lcm(a, b) * num_period + max(a, b) - 1 > l:\n        res -= l - (lcm(a, b) * num_period) + 1\n        res -= max(num_period - 1, 0) * max(a, b)\n    else:\n        res -= max(num_period, 0) * max(a, b)\n    return res\n\ndef brute_force(l, r, a, b):\n    res = 0\n    for i in range(l, r+1):\n        if (i%a)%b != (i%b)%a:\n            print(i)\n            res += 1\n    return res\n\n#print(prefix(9, 4, 6))\n#print(brute_force(1, 15, 2, 5))\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = [int(x) for x in input().split()]\n    for _ in range(q):\n        l, r = [int(x) for x in input().split()]\n        print(prefix(r, a, b) - prefix(l-1, a, b) , end =' ')\n    print()\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nfrom fractions import gcd\n\nQ = int(input())\nQuery = []\nfor _ in range(Q):\n    a, b, q = map(int, input().split())\n    LR = [list(map(int, input().split())) for _ in range(q)]\n    Query.append((a, b, q, LR))\n\n\ndef solve(lcm, m, x):\n    cycle = x//lcm\n    amari = x%lcm\n    return (lcm-m)*cycle + max(0, amari-m+1)\n\nfor a, b, q, LR in Query:\n    lcm = a*b//gcd(a,b)\n    m = max(a, b)\n    ans = []\n    for l, r in LR:\n        ans.append(solve(lcm, m, r)-solve(lcm, m, l-1))\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "import math\nt=int(input())\n\ndef findcount(r,lcm,b):\n    div = r//lcm\n    prod = div*lcm\n    tot=r\n    if(div!=0):\n        tot-=min(b,r-prod+1)\n        tot -= (div-1)*b\n    return (tot-min(r,(b-1)))\n\nwhile(t>0):\n    a, b, q = map(int, input().split())\n    if(a>b):\n        a,b = b,a\n    \n    lc=(a*b)//(math.gcd(a,b))\n    \n    for i in range(q):\n        l, r = map(int, input().split())\n       \n        if(lc==b or (r<b)):\n            print(0,\" \")\n            continue\n        cnt = findcount(r,lc,b)\n        if(l>1):\n            cnt-=findcount(l-1,lc,b)\n        print(cnt,\" \")\n    print() \n    t=t-1"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\n\npublic class N1342C {\n\tstatic ArrayList<Integer> primes;\n\tstatic HashSet<Integer> primesH;\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc=new Scanner(System.in);\n\t\tPrintWriter out=new PrintWriter(System.out);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint a=sc.nextInt(),b=sc.nextInt(),q=sc.nextInt();\n\t\t\tlong g=gcd(a,b);\n\t\t\tif(g==a||g==b) {\n\t\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\t\tsc.nextLong();\n\t\t\t\t\tsc.nextLong();\n\t\t\t\t\tout.print(0+\" \");\n\t\t\t\t}\n\t\t\t\tout.println();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlong lc=a*b/g;\n\t\t\t\tlong ans[]=new long[q];\n\t\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\t\tlong x=sc.nextLong(),y=sc.nextLong();\n\t\t\t\t\tlong upL=y/lc;\n\t\t\t\t\tlong first=Math.max(a, b);\n\t\t\t\t\tlong lrg=(y-first*1L*upL-first+1)*1L;\n\t\t\t\t\tlong maxDiv=lc*1L*upL;\n\t\t\t\t\tif(y-maxDiv<first) {\n\t\t\t\t\t\tlrg+=(first-y+maxDiv-1);\n\t\t\t\t\t}\n\t\t\t\t\tx--;\n\t\t\t\t\tlong upS=x/lc;\n\t\t\t\t\t//int first=Math.max(a, b);\n\t\t\t\t\tlong sml=(x-first*1L*upS-first+1)*1L;\n\t\t\t\t\tlong maxDivS=lc*1L*upS;\n\t\t\t\t\tif(x-maxDivS<first) {\n\t\t\t\t\t\tsml+=(first-x+maxDivS-1);\n\t\t\t\t\t}\n\t\t\t\t\tans[i]=lrg-sml;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\t\tout.print(ans[i]+\" \");\n\t\t\t\t}\n\t\t\t\tout.println();\n\t\t\t}\n\t\t}\n\t\t\n\t\tout.close();\n\n\t}\n\tstatic int gcd (int a, int b) {\n\t    return b==0?a:gcd (b, a % b);\n\t}\n\tstatic int lcm(int a,int b) {\n\t\treturn a*b/gcd(a,b);\n\t}\n\tstatic boolean isPrime(long n) {\n\t\tif(n<1000000) {\n\t\t\treturn primesH.contains((int)n);\n\t\t}\n\t\tfor(int p: primes)\n\t\t\tif(p * p > n)\n\t\t\t\tbreak;\n\t\t\telse if(n % p == 0)\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\tstatic void sieveOfEratosthenes(int n)  // O(n*log(log(n)))\n    { \n        // Create a boolean array \"prime[0..n]\" and initialize \n        // all entries it as true. A value in prime[i] will \n        // finally be false if i is Not a prime, else true. \n        boolean prime[] = new boolean[n+1]; \n        for(int i=0;i<n;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=n; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= n; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n        for(int i = 2; i <= n; i++) \n        { \n            if(prime[i] == true) {\n               // System.out.print(i + \" \"); \n                primes.add(i);\n                primesH.add(i);\n            }\n        } \n    } \n\t\n\tstatic class Scanner \n\t{\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s){\tbr = new BufferedReader(new InputStreamReader(s));}\n\n\t\tpublic String next() throws IOException \n\t\t{\n\t\t\twhile (st == null || !st.hasMoreTokens()) \n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tpublic boolean hasNext() {return st.hasMoreTokens();}\n\t\tpublic int nextInt() throws IOException {return Integer.parseInt(next());}\n\t\t\n\t\tpublic long nextLong() throws IOException {return Long.parseLong(next());}\n\n\t\tpublic String nextLine() throws IOException {return br.readLine();}\n\t\t\t\n\t\tpublic boolean ready() throws IOException {return br.ready(); }\n\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "# print((6%4)%6,(6%6)%4)\na=6\nb=4\nans=0\ndef gcd(a,b): \n    if a == 0: \n        return b \n    return gcd(b % a, a) \n  \n# Function to return LCM of two numbers \ndef lcm(a,b): \n    return (a*b) // gcd(a,b)\n# for i in range(1,1):\n#     if (i%a)%b!=(i%b)%a:\n#         ans+=1\n#         print(i)\n        # print(i,ans)\n# print(ans)\nfor _ in range(int(input())):\n    a,b,m=map(int,input().split())\n    k=lcm(a,b)\n    for __ in range(m):\n        x,y=map(int,input().split())\n        king=0\n        # for i in range(x,y+1):\n        #     if (i%a)%b!=(i%b)%a:\n        #         king+=1\n        # print(king)\n        ans=((x-1)//k)*(k-max(a,b))\n        c=(x-1)%(k)-(max(a,b)-1)\n        if c>0:\n            ans+=c\n        # print(ans)\n        y+=1\n        if ans<0:\n            ans=0\n        ans2=((y-1)//k)*(k-max(a,b))\n        c=(y-1)%(k)-(max(a,b)-1)\n        if c>=0:\n            ans2+=c\n        if ans2<0:\n            ans2=0\n        print(ans2-ans,end=\" \")\n        # if ans2-ans!=king:\n        #     print(1)\n        #     print(king,ans2)\n        # print()\n        # for __ in range(m):\n        #     y-=1\n        #     # x,y=map(int,input().split())\n        #     king=0\n        #     for i in range(x,y+1):\n        #         if (i%a)%b!=(i%b)%a:\n        #             king+=1\n        #     print(king,end=\" \")\n    print()\n"
        },
        {
            "language": 4,
            "solution": "\timport java.util.Arrays;\n\timport java.util.Scanner;\n\tpublic class roadt\n\t{\n\t\tpublic static void main (String[] args)\n\t\t {\n\t\t\tScanner sc=new Scanner(System.in); \n\t\t\tint t,i;\n\t\t\tt=sc.nextInt();\n\t\t\twhile(t>0)\n\t\t\t{\n\t\t\t\tt--;\n\t\t\t\tint a=sc.nextInt();\n\t\t\t\tint b=sc.nextInt();\n\t\t\t\tint q=sc.nextInt();\n\t\t\t\tlong ans[]=new long[q];\n\t\t\t\tlong l,r;\n\t\t\t\tint lc=0;\n\t\t\t\tlc=(int)lcm(a,b);\n\t\t\t\tint f[]=new int[1000000];\n\t\t\t\t\n\t\t\t\t\tfor ( i = 1; i < lc; i ++) {\n\t\t\t\t\t\tf[i] = f[i - 1];\n\t\t\t\t\t\tif(i % a % b != i % b % a)\n\t\t\t\t\t\t                f[i] ++;\n\t\t\t\t\t}\n\t\t\t\t\ti=0;\n\t\t\t\t\tlong s=q;\n\t\t\t\t\twhile(q-- >0) {\n\t\t\t\t\t\t\n\t\t\t\t\tl=sc.nextLong();\n\t\t\t\t\tr=sc.nextLong();\n\t\t\t\t\t\tans[i++]= solve(f,r, lc) - solve(f,l - 1, lc);\n\t\t\t\t\t}\n\t\t\tfor(i=0;i<s;i++)\n\t\t\t\tSystem.out.print(ans[i]+\" \");\n\t\t\tSystem.out.println();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t }\n\t\t  static long gcd(long a, long b) \n\t\t    { \n\t\t    if (a == 0) \n\t\t        return b;  \n\t\t    return gcd(b % a, a);  \n\t\t    } \n\t\t      \n\t\t     \n\t\t    static long lcm(long a, long b) \n\t\t    { \n\t\t        return (a*b)/gcd(a, b); \n\t\t    } \n\t\t    \n\t\t    static  long solve(int f[],long  p, int n) {\n\t\t    \treturn f[n - 1] * (p / n) + f[(int)(p % n)];\n\t\t    }\n}"
        },
        {
            "language": 3,
            "solution": "from itertools import accumulate\ndef solve():\n    a, b, q = map(int, input().split())\n    tb = [int(i % a % b != i % b % a) for i in range(a * b)]\n    bs = sum(tb)\n    tb += tb\n    tbs = [0] + list(accumulate(tb))\n    res = []\n    for i in range(q):\n        l, r = map(int, input().split())\n        r += 1\n        w = (r - l) // (a * b)\n        ans = w * bs\n        r -= w * a * b\n        u = l // (a * b)\n        l %= a * b\n        r -= u * (a * b)\n        ans += tbs[r] - tbs[l]\n        res.append(ans)\n    print(*res)\nt = int(input())\nfor _ in range(t):\n    solve()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class c_e86 {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t// TODO Auto-generated method stub\n\n\t\tFastScanner in = new FastScanner(System.in);\n\t\tOutputStream outputStream = System.out;\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\t\n\t\tint T = in.nextInt();\n\t\t\n\t\tfor(int aa = 0; aa < T; aa++) {\n\t\t\tint a = in.nextInt();\n\t\t\tint b = in.nextInt();\n\t\t\t\n\t\t\tint q = in.nextInt();\n\t\t\t\n\t\t\t// count number where it's the same\n\t\t\tlong num = Math.max(a, b);\n\t\t\tlong lcm = lcm(a, b);\n\t\t\tfor(int i = 0; i < q; i++) {\n\t\t\t\tlong lb = in.nextLong();\n\t\t\t\tlong rb = in.nextLong();\n\t\t\t\t\n\t\t\t\tlong tot = (rb-lb+1) - (same(rb, lcm, num) - same(lb-1, lcm, num));\n\t\t\t\tout.print(tot+\" \");\n\t\t\t\t// num same from (l, r) = num same (0, r) - num same (0, l)\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t\t/*\n\t\tfor(int i = 2; i < 10; i++) {\n\t\t\tfor(int j = i+1; j < 10; j++) {\n\t\t\t\tint ct = 0;\n\t\t\t\tfor(int k = 1; k < 30; k++) {\n\t\t\t\t\tif((k%i)%j == (k%j)%i) {\n\t\t\t\t\t\tout.println(k+\": \"+i+\" \"+j);\n\t\t\t\t\t\tct++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// mod gcd(a, b) -> if equal to \n\t\t\t\tout.println(i+\" \"+j+\" \"+\"COUNT: \"+ct);\n\t\t\t}\n\t\t}\n\t\t\n\t\t*/\n\t\tout.close();\n\t}\n\t\n\tstatic long same(long t, long lcm, long num) {\n\t\tlong sum = (t/lcm)*num;\n\t\tlong last = Math.min(t%lcm+1, num);\n\t\t\n\t\treturn (sum+last);\n\t}\n\t\n\tstatic int gcd(int a, int b) {\n\t\tif(a == 0) return b;\n\t\treturn gcd(b%a, a);\n\t}\n\t\n\tstatic int lcm(int a, int b) {\n\t\treturn a*b/gcd(a, b);\n\t}\n\n\tstatic class FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner(InputStream stream) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(stream));\n\t\t\tst = new StringTokenizer(\"\");\n\t\t}\n\n\t\tpublic FastScanner(String fileName) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(new File(fileName)));\n\t\t\tst = new StringTokenizer(\"\");\n\t\t}\n\n\t\tpublic String next() throws Exception {\n\t\t\twhile (!st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws Exception {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws Exception {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic Double nextDouble() throws Exception {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic String nextLine() throws Exception {\n\t\t\tif (st.hasMoreTokens()) {\n\t\t\t\tStringBuilder str = new StringBuilder();\n\t\t\t\tboolean first = true;\n\t\t\t\twhile (st.hasMoreTokens()) {\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr.append(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tstr.append(st.nextToken());\n\t\t\t\t}\n\t\t\t\treturn str.toString();\n\t\t\t} else {\n\t\t\t\treturn br.readLine();\n\t\t\t}\n\t\t}\n\t}\n\n\t\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 40043;\nint len;\nint p[N];\nvoid build(int a, int b) {\n  len = a * b;\n  p[0] = 0;\n  for (int i = 1; i <= len; i++) {\n    p[i] = p[i - 1];\n    if ((i % a) % b != (i % b) % a) p[i]++;\n  }\n}\nlong long query(long long l) {\n  long long cnt = l / len;\n  int rem = l % len;\n  return p[len] * 1ll * cnt + p[rem];\n}\nlong long query(long long l, long long r) { return query(r) - query(l - 1); }\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int a, b, q;\n    cin >> a >> b >> q;\n    build(a, b);\n    long long l, r;\n    for (int j = 0; j < q; j++) {\n      cin >> l >> r;\n      cout << query(l, r) << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def lcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return lcd(b, a % b)\nt = int(input())\ncnt = 0\nwhile (cnt < t):\n    cnt += 1\n    a, b, q = [int(i) for i in input().split()]\n    if a > b:\n        a, b = b, a\n    d = b % a\n    lcd_res = lcd(d, a)\n    a, d = a // lcd_res, d // lcd_res\n    res = [0] * q\n    for j in range(q):\n        cnt_ok = 0\n        l_j, r_j = [int(i) for i in input().split()]\n        if d == 0:\n            #print(' '.join(str(j) for j in res))\n            continue\n        start1, start2 = l_j // b, l_j % b\n        end1, end2 = r_j // b, r_j % b\n        if start1 == end1:\n            if start1 % a == 0:\n                cnt_ok += end2 - start2 + 1\n        elif start1 == end1 - 1:\n            if start1 % a == 0:\n                cnt_ok += b - start2\n            if end1 % a == 0:\n                cnt_ok += end2 + 1\n        else:\n            if start1 % a == 0:\n                cnt_ok += b - start2\n            if end1 % a == 0:\n                cnt_ok += end2 + 1\n            cnt_ok += ((end1 - 1) // a - (start1 // a)) * b\n        #print(cnt_ok)\n        res[j] = r_j - l_j + 1 - cnt_ok\n    print(' '.join(str(j) for j in res))"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\n\n\npublic class C {\n\tpublic static class pair implements Comparable<pair> {\n\t\tint id;\n\t\tint ans;\n\n\t\tpair(int x, int y) {\n\n\t\t\tid = x;\n\t\t\tans = y;\n\n\t\t}\n\n\t\tpublic pair() {\n\n\t\t}\n\n\t\tpublic int compareTo(pair o) {\n\t\t\t// TODO Auto-generated method stub\n\n\t\t\treturn this.id - o.id;\n\t\t}\n\t}\n\n\tstatic int mod = (int) 998244353.;\n\tstatic ArrayList<Integer> gr[];\n\tstatic int ar[];\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int pri[] = new int[(int) 1e6 + 5];\n\tstatic StringBuilder out = new StringBuilder();\n\n\tstatic long[] dp;\n\t\n\t\n\t\tpublic static void main(String[] args) throws IOException {\n\t\tint t =  sc.nextInt();\n\t\n\t\twhile (t-- > 0) {\n\t\t\tint a=sc.nextInt();\n\t\t\tint b=sc.nextInt();\n\t\t\tint q=sc.nextInt();\n\t\t\tint lcm=lcm(a,b);\n\t\t\tdp=new long[lcm+1];\n\t\t\tfor(int i=1;i<=lcm;i++) {\n\t\t\t\tdp[i]=dp[i-1];\n\t\t\t\tif((i%a)%b!=(i%b)%a)dp[i]++;\n\t\t\t}\n\t\t\t\n\t\t\twhile(q-->0) {\n\t\t\t\tlong l=sc.nextLong();\n\t\t\t\tlong r=sc.nextLong();\n\t\t\t\t\n\t\t\t\n\t\t\t\tlong r1=dp[lcm]*(r/lcm)+dp[(int)(r%lcm)];\n\t\t\t\tlong l1=dp[lcm]*(l/lcm)+dp[(int)(l%lcm)];\n\t\t\t\t\n\t\t\t   long ans=r1-l1;\n\t\t\t   if((l%a)%b!=(l%b)%a)ans++;\n\t\t\t   out.append(ans+\" \");\n\t\t\t}\n\t\t\tout.append(\"\\n\");\n\t\t\n\t\t\n\t\t}\n\t\tSystem.out.println(out);\n\n\t}\n\t\t\n\t\t static int gcd(int a, int b) \n\t\t    { \n\t\t    if (a == 0) \n\t\t        return b;  \n\t\t    return gcd(b % a, a);  \n\t\t    } \n\t\t      \n\t\t    // method to return LCM of two numbers \n\t\t    static int lcm(int a, int b) \n\t\t    { \n\t\t        return (a*b)/gcd(a, b); \n\t\t    } \n\t\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom math import ceil\ndef gcd(a,b): \n    if a == 0: \n        return b \n    return gcd(b % a, a) \n\ndef find(A,B,Q,L,R):\n    if A%B==0 or B%A==0: return 0\n    A,B=sorted([A,B])\n    K=A*B//gcd(A,B)\n    R+=1\n    Z=max(0,(R//K-L//K-1)*B)\n    # if (R-L+1)%K:\n    x=L-(L//K)*K\n    Z+=max(0,min(B-x,R-L))\n    y=R-(R//K)*K\n    if R//K!=L//K:\n        Z+=min(y,B)\n    \n    return R-L-Z\n# def find2(A,B,Q,L,R):\n#     c=0\n#     for i in range(L,R+1):\n#         if i%B%A!=i%A%B: c+=1\n#     return c\n# for x in range(1,100):\n#     for y in range(1,100):\n#         for i in range(1,200):\n#             for j in range(i,200):\n#                 if find2(x,y,5,i,j)!=find(x,y,5,i,j):\n#                     print(i,j)\n# print(find2(4,2,5,3,4))\n# print(find(4,2,5,3,4))\n# find(4,2,5,i,j):\ndef main():\n    for _ in range(int(stdin.readline())):\n        A,B,Q=list(map(int, stdin.readline().split()))\n        arr=[]\n        for __ in range(Q):\n            L,R=list(map(int, stdin.readline().split()))\n            arr.append(find(A,B,Q,L,R))\n        print(' '.join(map(str,arr)))\nmain()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n[400005];\nint main() {\n  long long t, a, b, q;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b >> q;\n    n[0] = 0;\n    for (int i = 1; i <= a * b; i++) {\n      n[i] = n[i - 1] + (i % a % b != i % b % a);\n    }\n    long long l, r;\n    while (q--) {\n      cin >> l >> r;\n      long long sum = 0;\n      sum += r / (a * b) * n[a * b] + n[r % (a * b)];\n      sum -= (l - 1) / (a * b) * n[a * b] + n[(l - 1) % (a * b)];\n      printf(\"%lld \", sum);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\n\ndef count(sumg, n, r):\n    res = sumg[n - 1] * (r // n)\n    res += sumg[r % n]\n\n    return res\n\n\ndef main():\n    input = sys.stdin.readline\n    t = int(input())\n    while t > 0:\n        t -= 1\n        # read input\n\n        a, b, q = (int(i) for i in input().split())\n        n = a * b\n\n        sumg = [0] * n\n\n        for i in range(1, n):\n            sumg[i] += sumg[i - 1]\n            if (i % a) % b != (i % b) % a:\n                sumg[i] += 1\n\n        while q > 0:\n            q -= 1\n            l, r = (int(i) for i in input().split())\n            res = count(sumg, n, r) - count(sumg, n, l - 1)\n\n            if q:\n                print(res, end=\" \")\n            else:\n                print(res)\n\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "def modmod(x, a, b):\n    r1 = (x % a) % b\n    r2 = (x % b) % a\n    return 0 if r1 == r2 else 1\n\nt = int(input())\nfor case in range(t):\n    a, b, q = map(int, input().split())\n\n    prod = a*b\n    status = prod*[0]\n    cum_left = [0]\n    total = 0\n    for i in range(prod):\n        status[i] = modmod(i, a, b)\n        total += status[i]\n        cum_left.append(total)\n\n    cum_left.pop()\n\n    sum_prod = int(total)\n\n    cum_right = []\n\n    for i in range(prod):\n        total -= status[i]\n        cum_right.append(total)\n\n    answers = []\n\n    for query in range(q):\n        l, r = map(int, input().split())\n        if prod == 1:\n            answers.append(0)            \n        else:\n            lower = l // prod\n            upper = (r-1) // prod + 1\n            if r % prod == 0:\n                upper += 1\n            diff = upper - lower\n            result = diff*sum_prod - cum_left[(l) % prod] - cum_right[(r) % prod]\n            answers.append(result)\n    print (*answers)\n\n    \n    \n\n    \n        \n        \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a, b, q;\nvector<long long int> pre;\nlong long int solve(long long int n) {\n  return (n / a * b) * pre[a * b - 1] + pre[n % (a * b)];\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    pre.clear();\n    cin >> a >> b >> q;\n    long long int sum = 0, ans;\n    for (int i = 0; i < a * b; i++) {\n      if (i % a % b != i % b % a) sum++;\n      pre.push_back(sum);\n    }\n    while (q--) {\n      long long int r, l;\n      cin >> l >> r;\n      ans = abs(((l - 1) / (a * b)) * pre[a * b - 1] + pre[(l - 1) % (a * b)] -\n                ((r / (a * b)) * pre[a * b - 1] + pre[r % (a * b)]));\n      cout << ans << \"\\n\";\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.InputMismatchException;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\n\npublic class B implements Runnable\n{\n    @Override\n    public void run() {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        int n = (int)in.nextLong();\n        for (int i = 0; i < n; i++) {\n            long a = in.nextLong(), b = in.nextLong(), q = in.nextLong();\n            long min = Math.min(a, b), max = Math.max(a, b);\n            for (int k = 0; k < q; k++) {\n                w.print(-find(min, max, in.nextLong() - 1) + find(min, max, in.nextLong()) + \" \");\n            }\n            w.println();\n        }\n\n        w.flush();\n        w.close();\n    }\n\n    private static long gcd(long a, long b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n    private static long find(long a, long b, long l) {\n        if (a == b) return 0;\n        long sp = a * b / gcd(a, b);\n        l++;\n        long res = l / sp * b + Math.min(l % sp, b);\n        return l - res;\n    }\n\n    static class InputReader\n    {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n\n        public int read()\n        {\n            if (numChars==-1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars)\n            {\n                curChar = 0;\n                try\n                {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n\n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt()\n        {\n            int c = read();\n\n            while(isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do\n            {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.')\n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.')\n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c)\n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next()\n        {\n            return readString();\n        }\n\n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    public static void main(String args[]) throws Exception\n    {\n        new Thread(null, new B(),\"Main\",1<<27).start();\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import gcd\nt = int(input())\n\ndef find(arr,x,lcm):\n    q = x//lcm\n    r = x%lcm\n\n    ans = arr[lcm]*q + arr[r]\n    return ans\n\nfor _ in range(t):\n    a,b,q = [int(x) for x in input().split()]\n    lcm = a*b//gcd(a,b)\n    arr = [0]\n    for i in range(1,lcm+1):\n        left = (i%a)%b\n        right = (i%b)%a\n\n        arr.append(arr[i-1] + (0 if left == right else 1))\n\n    # print(arr)\n\n    res = []\n    for _ in range(q):\n        l,r = [int(x) for x in input().split()]\n\n        ans = find(arr,r,lcm) - find(arr,l-1,lcm)\n        res.append(ans)\n    print(*res)\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.InputMismatchException;\nimport java.util.*;\nimport java.io.*;\npublic class Main{\npublic static class InputReader {\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private InputReader.SpaceCharFilter filter;\n    private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n \n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n \n    public int read() {\n        if (numChars==-1)\n            throw new InputMismatchException();\n \n        if (curChar >= numChars) {\n            curChar = 0;\n            try {\n                numChars = stream.read(buf);\n            }\n            catch (IOException e) {\n                throw new InputMismatchException();\n            }\n \n            if(numChars <= 0)\n                return -1;\n        }\n        return buf[curChar++];\n    }\n \n    public String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        }\n        catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n    public int nextInt() {\n        int c = read();\n \n        while(isSpaceChar(c))\n            c = read();\n \n        int sgn = 1;\n \n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n \n        int res = 0;\n        do {\n            if(c<'0'||c>'9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c - '0';\n            c = read();\n        }\n        while (!isSpaceChar(c));\n \n        return res * sgn;\n    }\n \n    public long nextLong() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        long res = 0;\n \n        do {\n            if (c < '0' || c > '9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c - '0';\n            c = read();\n        }\n        while (!isSpaceChar(c));\n        return res * sgn;\n    }\n \n    public double nextDouble() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        double res = 0;\n        while (!isSpaceChar(c) && c != '.') {\n            if (c == 'e' || c == 'E')\n                return res * Math.pow(10, nextInt());\n            if (c < '0' || c > '9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c - '0';\n            c = read();\n        }\n        if (c == '.') {\n            c = read();\n            double m = 1;\n            while (!isSpaceChar(c)) {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                m /= 10;\n                res += (c - '0') * m;\n                c = read();\n            }\n        }\n        return res * sgn;\n    }\n \n    public String readString() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        StringBuilder res = new StringBuilder();\n        do {\n            res.appendCodePoint(c);\n            c = read();\n        }\n        while (!isSpaceChar(c));\n \n        return res.toString();\n    }\n \n    public boolean isSpaceChar(int c) {\n        if (filter != null)\n            return filter.isSpaceChar(c);\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n \n    public String next() {\n        return readString();\n    }\n \n    public interface SpaceCharFilter {\n        public boolean isSpaceChar(int ch);\n    }\n}\n    \n\tstatic void mergeSort(int[] input,int start,int end)\n    {\n        if(start>end || start==end)\n            return;\n        int mid=(start+end)/2;\n        mergeSort(input,start,mid);\n        mergeSort(input,mid+1,end);\n        \n        merge(input,start,end);\n        \n    }\n    static void merge(int input[],int start,int end)\n    {\n        int sorted[] = new int[end-start+1];\n        int mid=(start+end)/2;\n        int i=start,j=mid+1,count=0;\n        \n        while(i<=mid && j<=end)\n        {\n            if(input[i]>input[j])\n            {\n                sorted[count]=input[j];\n                j++;\n                count++;\n            }\n            else\n            {\n                sorted[count]=input[i];\n                i++;\n                count++;\n            }\n        }\n        if(i>mid)\n        {\n            while(j<=end)\n            {\n                sorted[count]=input[j];\n                j++;\n                count++;\n            }\n        }\n        else\n        {\n            while(i<=mid)\n            {\n                sorted[count]=input[i];\n                i++;\n                count++;\n            }\n        }\n        for(i=start;i<=end;i++)\n        {\n            input[i]=sorted[i-start];\n        }\n    }\n \nstatic int gcd(int a,int b)\n{\n    if(b==0)\n    return a;\n    else\n    return gcd(b,a%b);\n}\n   \n    public static void main(String[] args) \n    { \n       InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader sc = new InputReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n       int t=sc.nextInt();\nwhile(t-->0)\n{\n    int a=sc.nextInt();\n    int b=sc.nextInt();\n    int lcm = (a*b)/gcd(a,b);\n            int count = 0;\n            int p[] = new int[lcm + 1];\n            p[0] = 0;\n            for (int i = 1; i <= lcm; i++) {\n                if (((i % a) % b) != ((i % b) % a)) {\n                    p[i] = p[i - 1] + 1;\n                    count++;\n                } else {\n                    p[i] = p[i - 1];\n                }\n \n            }\n            \n    long q=sc.nextLong();\n    while(q-->0)\n    {\n    long l=sc.nextLong()-1;\n    long r=sc.nextLong();\n     long ans1 = (r / lcm) * count + (p[(int) (r % lcm)]);\n                long ans2 = (l / lcm) * count + (p[(int) (l % lcm)]);\n                long ans = ans1 - ans2;\n   w.print(ans+\" \");}\n   w.println();\n}\n\tw.close();\n\t}\n } "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.nio.file.*;\n\npublic class binaryperiod {\n    static FastScanner in;\n    static FastPrinter out;\n\n    public static void main(String[] uselessScrub) throws Exception {\n        in = new FastScanner();\n        out = new FastPrinter();\n\n        int t=in.nextInt();\n        for (int i=1; i<=t; i++) {\n            solve();\n        }\n\n        out.close();\n    }\n\n    public static void solve() throws Exception {\n        int a=in.nextInt(), b=in.nextInt(), q=in.nextInt(), lcm=0;\n        for (int i=1; i<=a && i<=b; i++) {\n            if (a%i==0 && b%i==0) lcm=i;\n        }\n        lcm=a*b/lcm;\n        int[] x=new int[lcm];\n        for (int i=0; i<lcm; i++) {\n            if (i>0) x[i]=x[i-1];\n            if ((i%a)%b != (i%b)%a) {\n                x[i]+=1;\n            }\n        }\n\n        for (int i=0; i<q; i++) {\n            long ans=0;\n            long l=in.nextLong(), r=in.nextLong();\n            long ul=l+lcm-l%lcm;\n            if (ul <= r) {\n                ans += x[lcm - 1];\n                if (l % lcm > 0) ans -= x[(int) (l % lcm - 1)];\n            } else {\n                ans += x[(int) (r % lcm)];\n                if (l % lcm > 0) ans -= x[(int) (l % lcm - 1)];\n                out.print(ans + \" \");\n                continue;\n            }\n//            while (l%lcm!=0 && l<=r) {\n//                if ((l%a)%b != (l%b)%a) ans++;\n//                l++;\n//            }\n//            while (r%lcm!=lcm-1 && r>l) {\n//                if ((r%a)%b != (r%b)%a) ans++;\n//                r--;\n//            }\n\n            ans += x[(int)(r%lcm)];\n            r -=r%lcm;\n\n            ans+=(r-ul+1)/lcm * x[lcm-1];\n            out.print(ans+\" \");\n        }\n        out.println();\n    }\n\n    private static class FastPrinter {\n        static final char ENDL = '\\n';\n        StringBuilder buf;\n        PrintWriter pw;\n\n        public FastPrinter() {\n            buf = new StringBuilder();\n            pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        }\n\n        public FastPrinter(OutputStream stream) {\n            buf = new StringBuilder();\n            pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(stream)));\n        }\n\n        public FastPrinter(String fileName) throws Exception {\n            buf = new StringBuilder();\n            pw = new PrintWriter(new BufferedWriter(new FileWriter(fileName)));\n        }\n\n        public FastPrinter(StringBuilder buf) {\n            this.buf = buf;\n        }\n\n        public void print(int a) {\n            buf.append(a);\n        }\n\n        public void print(long a) {\n            buf.append(a);\n        }\n\n        public void print(char a) {\n            buf.append(a);\n        }\n\n        public void print(char[] a) {\n            buf.append(a);\n        }\n\n        public void print(double a) {\n            buf.append(a);\n        }\n\n        public void print(String a) {\n            buf.append(a);\n        }\n\n        public void print(Object a) {\n            buf.append(a.toString());\n        }\n\n        public void println() {\n            buf.append(ENDL);\n        }\n\n        public void println(int a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(long a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(char a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(char[] a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(double a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(String a) {\n            buf.append(a);\n            buf.append(ENDL);\n        }\n\n        public void println(Object a) {\n            buf.append(a.toString());\n            buf.append(ENDL);\n        }\n\n        public void close() {\n            pw.print(buf);\n            pw.close();\n        }\n\n        public void flush() {\n            pw.print(buf);\n            pw.flush();\n            buf.setLength(0);\n        }\n\n    }\n\n    private static class FastScanner {\n        final private int BUFFER_SIZE = 1 << 10;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public FastScanner() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public FastScanner(InputStream stream) {\n            din = new DataInputStream(stream);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public FastScanner(String fileName) throws IOException {\n            Path p = Paths.get(fileName);\n            buffer = Files.readAllBytes(p);\n            bytesRead = buffer.length;\n        }\n\n        int[] nextIntArray(int N) throws IOException {\n            int[] arr = new int[N];\n            for (int i = 0; i < N; i++) arr[i] = nextInt();\n            return arr;\n        }\n\n        int[][] nextDoubleIntArray(int n, int m) throws IOException {\n            int[][] arr = new int[n][m];\n            for (int i=0; i<n; i++) for (int j=0; j<m; j++) arr[i][j]=nextInt();\n            return arr;\n        }\n\n        String nextLine() throws IOException {\n            int c = read();\n            while (c != -1 && isEndline(c))\n                c = read();\n            if (c == -1) {\n                return null;\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (c >= 0) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isEndline(c));\n            return res.toString();\n        }\n\n        boolean isEndline(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        String next() throws Exception {\n            int c = readOutSpaces();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg) return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg) return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg) c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg) return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1) buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead) fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        private int readOutSpaces() throws IOException {\n            while (true) {\n                if (bufferPointer == bytesRead) fillBuffer();\n                int c = buffer[bufferPointer++];\n                if (!isSpaceChar(c)) {\n                    return c;\n                }\n            }\n        }\n\n        public void close() throws IOException {\n            if (din == null) return;\n            din.close();\n        }\n    }\n}\n\n"
        },
        {
            "language": 1,
            "solution": "#####################################   \nimport atexit, io, sys \nbuffer = io.BytesIO() \nsys.stdout = buffer\n@atexit.register \ndef write(): sys.__stdout__.write(buffer.getvalue())   \n##################################### \n \n\ndef compute(a,b):\n\th = {}\n\tc = 0\n\tfor ii in range(a*b):\n\t\tif (ii % a) % b == (ii %b) % a: c +=1\n\t\th[ii] = c\n\treturn h\ndef f(n,h):\n\tt = len(h)\n\treturn ((n/t) * h[t-1]) + h[n%t]\nnt = int(raw_input())\n\nfor _ in xrange(nt):\n\ta,b,nq = map(int ,raw_input().split())\n\th = compute(a,b)\n\tfor __ in xrange(nq):\n\t\tl,r = map(int, raw_input().split())\n\t\tprint r- l +1 - (f(r,h) - f(l-1,h)),\n\tprint\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nint main() {\n  long long t;\n  cin >> t;\n  for (long long i = 0; i < t; i++) {\n    long long a1, b1, q;\n    cin >> a1 >> b1 >> q;\n    long long a = min(a1, b1), b = max(a1, b1);\n    long long h = (a * b) / gcd(b, a);\n    for (long long j = 0; j < q; j++) {\n      long long l, r, x, y, k = 0;\n      cin >> l >> r;\n      x = l / h;\n      y = r / h;\n      if (x != y) {\n        k = (y - x - 1) * b;\n        k += (x * h + b - 1 >= l ? x * h + b - l : 0);\n        k += (y * h + b - 1 <= r ? b : r - y * h + 1);\n        cout << r - l - k + 1 << \" \";\n      } else {\n        if (x * h + b - 1 < l || x * h > r) {\n          k = 0;\n          cout << r - l - k + 1 << \" \";\n        } else {\n          k += (min(r, x * h + b - 1) - max(l, x * h) + 1);\n          cout << r - l - k + 1 << \" \";\n        }\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\npair<int, int> pii;\npair<long long, long long> pll;\nvector<vector<int>> edge;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long a, b, q;\n    cin >> a >> b >> q;\n    int size = a * b;\n    vector<int> pre(size);\n    for (int i = 0; i < size; i++) {\n      if (i != 0) pre[i] = pre[i - 1];\n      if ((i % a) % b != (i % b) % a) pre[i]++;\n    }\n    while (q--) {\n      long long l, r;\n      cin >> l >> r;\n      long long k1 = (l - 1) / size;\n      k1 = 1LL * pre[(l - 1) % size] + k1 * 1LL * pre[size - 1];\n      long long k2 = r / size;\n      k2 = 1LL * pre[r % size] + k2 * 1LL * pre[size - 1];\n      cout << k2 - k1 << \" \";\n    }\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\n\ndef hcm(a, b):\n    return(a*b//math.gcd(a, b))\n\ndef hey(x,b,l,r):\n    # x= l//h and r//h\n    g=0\n    for i in range(b):\n        if l<=x+i<=r :\n            g+=1\n    return(g)\n\n\ndef find_ans(a, b, l, r):\n\n    h = hcm(a, b)\n\n    if a > b:\n        a, b = b, a\n\n    if b % a == 0 or r < b:\n        return(0)\n\n    ans = r-l+1\n    ans = ans-max(b-l, 0)\n    if b>= l :\n        l=b\n    if  r//h-l//h<=2 :\n        i=max(l//h -1 ,1 ) \n        while True:\n            k=h*i\n            for j in range(b):\n                if l<=k+j<=r :\n                    ans-=1\n                elif k+j>r :\n                    return(ans)\n            i+=1 \n    ans-=max((r//h - l//h - 1)*b,0)\n    ans=ans-(hey((l//h)*h,b,l,r)+hey((r//h)*h,b,l,r))\n    return(ans)    \n\nfor _ in range(int(input())):\n    a, b, t = map(int, input().split())\n    for ll in range(t):\n        l, r = map(int, input().split())\n        print(find_ans(a, b, l, r), end=' ')\n    print()"
        },
        {
            "language": 3,
            "solution": "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return map(int, input().split(' '))\n\n\ndef gcd(x, y):\n    return x if y == 0 else gcd(y, x % y)\n\n\nt = read_int()\nfor case_num in range(t):\n    a, b, q = read_ints()\n    g = gcd(a, b)\n    lcm = a * b // g\n    acc = [0 for i in range(lcm)]\n    for i in range(1, lcm):\n        acc[i] = acc[i - 1]\n        if (i % a) % b != (i % b) % a:\n            acc[i] += 1\n    ans = []\n    for i in range(q):\n        l, r = read_ints()\n        curr = 0\n        n = l // lcm\n        x = l % lcm\n        m = r // lcm\n        y = r % lcm\n        if m > n + 1:\n            curr += (m - n - 1) * acc[lcm - 1]\n        if m > n:\n            curr += acc[lcm - 1] - acc[max(0, x - 1)]\n            curr += acc[y]\n        if m == n:\n            curr += acc[y] - acc[max(0, x - 1)]\n        ans.append(curr)\n    print(' '.join(map(str, ans)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  long long t;\n  cin >> t;\n  for (long long q = 0; q < t; q++) {\n    long long a, b, k;\n    cin >> a >> b >> k;\n    vector<long long> z(a * b);\n    for (long long i = 0; i < a * b; i++) {\n      z[i] = (i % a % b != i % b % a);\n    }\n    long long s = 0;\n    for (long long i = 0; i < a * b; i++) {\n      s += z[i];\n    }\n    vector<long long> d(a * b + 1, 0);\n    for (long long i = 0; i < a * b; i++) {\n      d[i + 1] = d[i] + z[i];\n    }\n    vector<long long> p(a * b + 1, 0);\n    for (long long i = a * b - 1; i >= 0; i--) {\n      p[i] = p[i + 1] + z[i];\n    }\n    for (long long i = 0; i < k; i++) {\n      long long l, r;\n      cin >> l >> r;\n      r++;\n      long long o = (r / (a * b) - l / (a * b) - 1) * s;\n      o += p[l % (a * b)];\n      o += d[r % (a * b)];\n      cout << o << \" \";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\n\n                            Online Python Compiler.\n                Code, Compile, Run and Debug python program online.\nWrite your code in this editor and press \"Run\" button to execute it.\n\n'''\n\ndef gcd(x, y):\n  while y: \n    x, y = y, x % y \n  return x\n\ndef lcm(x, y):\n  return x // gcd(x, y) * y\n  \ndef count(num, same, cycleSize):\n  r = (num // cycleSize) * same\n  num %= cycleSize\n  return r + min(same - 1, num)\n\nt = int(input())\n\nwhile t:\n  a, b, q = [int(i) for i in input().split(' ')]\n  lcmab = lcm(a, b)\n  if a > b:\n    a, b = b, a\n  while q:\n    x, y = [int(i) for i in input().split(' ')]\n    print(y - x + 1 - count(y, b, lcmab) + count(x - 1, b, lcmab))\n    q -= 1\n  t -= 1\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    long long int a, b, q, l, r, sum = 0, g, k;\n    scanf(\"%lld%lld%lld\", &a, &b, &q);\n    int arr[a * b];\n    arr[0] = 0;\n    for (int i = 1; i < a * b; i++) {\n      if ((i % a) % b != (i % b) % a)\n        arr[i] = arr[i - 1] + 1;\n      else\n        arr[i] = arr[i - 1];\n    }\n    while (q--) {\n      sum = 0;\n      scanf(\"%lld%lld\", &l, &r);\n      sum = sum + (r / (a * b)) * arr[a * b - 1];\n      sum = sum + arr[r % (a * b)];\n      sum = sum - ((l - 1) / (a * b)) * arr[a * b - 1];\n      sum = sum - arr[(l - 1) % (a * b)];\n      printf(\"%lld \", sum);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    a,b,q=map(int,input().split())\n    d=[0]\n    for i in range(1,a*b+1):\n        if ((i%a)%b)!=((i%b)%a):\n            d.append(d[-1]+1)\n        else:\n            d.append(d[-1])\n    e=[]\n    for i in range(q):\n        l,r1=map(int,input().split())\n        k=r1//(a*b)\n        r=r1%(a*b)\n        ans=d[-1]*k\n        ans+=d[r]\n        k=l//(a*b)\n        r=l%(a*b)\n        ans-=d[-1]*k\n        ans-=d[r]\n        if ((l%a)%b)!=((l%b)%a):\n            ans+=1\n        e.append(ans)\n    print(*e)\n\n\n\n\n\n    "
        },
        {
            "language": 3,
            "solution": "from math import gcd\n\ndef f(a, b, x):\n    x += 1\n    p = a * b // gcd(a, b)\n    n = x // p\n    ans = n * b\n    ans += min(b, x - n * p)\n    return ans\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    for i in range(q):\n        l, r = map(int, input().split())\n        ans = f(a, b, r) - f(a, b, l - 1)\n        ans = r - l + 1 - ans\n        print(ans, end=' ')\n    print()"
        },
        {
            "language": 3,
            "solution": "import math\nline = input()\nt = int(line)\nfor _ in range(t):\n    line = input()\n    a, b, q = (int(i) for i in line.split(' '))\n    g = a * b // math.gcd(a, b)\n    memo = [0] * (g)\n    for i in range(1, g):\n        if (i % a) % b != (i % b) % a:\n            memo[i] = memo[i-1] + 1\n        else:\n            memo[i] = memo[i - 1]\n    for i in range(q):\n        line = input()\n        l, r = (int(i) for i in line.split(' '))\n        l -= 1\n        res = r // (g) * memo[-1] + memo[r % (g)]\n        res -= l // (g) * memo[-1] + memo[l % (g)]\n        print(res)\n\n\n"
        },
        {
            "language": 3,
            "solution": "import math\nt=int(input())\nfor i in range(t):\n    a,b,q=map(int,input().split())\n    lcm=a*b//math.gcd(a,b)\n    arr=[]\n    for i in range(q):\n        ans=0\n        l,r=map(int,input().split())\n        total=r-l+1\n        last=(r//lcm)\n        first=((l//lcm)+1)\n        pq=math.inf\n        if r%lcm<max(a,b):\n            pq=(r%lcm)+1\n        \n        ans+=min((last-first)*max(a,b)+pq,((last-first)+1)*max(a,b))\n        ans=max(0,ans)\n        \n        #print(ans,total,lcm,last,first,((last-first)+1)*max(a,b))\n        #l-=1\n        if l%lcm<max(a,b):\n            ans+=((max(a,b)-1)-(l%lcm)+1)\n            #print('1',ans,total)\n        \n        #print('2',ans,total)\n        f_ans=max(0,total-ans)\n        arr.append(f_ans)\n    print(*arr)\n\n'''for i in range(39799,100000000,39800):\n    print(i)'''\n    \n    \n    \n       \n       \n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class First {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        //int a = 1;\n        int t;\n        t = in.nextInt();\n        //t = 1;\n        while (t > 0) {\n            //out.print(\"Case #\"+(a++)+\": \");\n            solver.call(in, out);\n            t--;\n        }\n        out.close();\n\n    }\n\n    static class TaskA {\n        long c;\n        int a, b, q;\n        public void call(InputReader in, PrintWriter out) {\n\n            a = in.nextInt();\n            b = in.nextInt();\n            q = in.nextInt();\n\n            if(a>b){\n                c = a;\n                a = b;\n                b = (int)c;\n            }\n\n            c = lcm(a,b);\n\n            long l, r ,ans;\n\n            for (int i = 0; i < q; i++) {\n                l = in.nextLong();\n                r = in.nextLong();\n\n                long d = r/c;\n                ans = d*b;\n                ans-= Math.max((d*c + b-1) - r  , 0);\n\n                d = (l-1)/c;\n                ans -= d*b;\n                if (c * d + b - 1 >= l) {\n                    ans += b - l % c;\n                }\n                out.print(r-l+1 - ans+\" \");\n\n\n            }\n            out.println();\n\n        }\n\n        public long get(long n) {\n            long cnt=(n/c);\n            return (cnt*b+Math.min(b,n+1-cnt*c));\n        }\n\n    }\n\n    static int gcd(int a, int b)\n    {\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n\n    static int lcm(int a, int b)\n    {\n        return (a / gcd(a, b)) * b;\n    }\n\n    static class answer implements Comparable<answer>{\n        int a;\n        int b;\n\n        public answer(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(answer o) {\n            return this.a - o.a;\n        }\n    }\n\n    static class answer1 implements Comparable<answer1>{\n        int a, b, c;\n\n        public answer1(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n\n        }\n\n        @Override\n        public int compareTo(answer1 o) {\n            return this.a - o.a;\n        }\n    }\n\n    static long gcd(long a, long b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static void sort(long[] a) {\n        ArrayList<Long> l=new ArrayList<>();\n        for (long i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n\n    static final Random random=new Random();\n\n    static void shuffleSort(int[] a) {\n        int n=a.length;\n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n), temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        Arrays.sort(a);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "/*\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2877\u28ef\u28bf\u28ff\u28f7\u28fb\u28af\u28ff\u287d\u28fb\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c7\u2838\u28ff\u28ff\u28c6\u2839\u28ff\u28ff\u28be\u28df\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fb\u28fd\u287f\u28ff\u28ce\u2819\u28ff\u28de\u28f7\u284c\u28bb\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2839\u28ff\u28ff\u2846\u283b\u28ff\u28df\u28ef\u287f\u28fd\u287f\u28ff\u28ff\u28ff\u28ff\u28fd\u2877\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u28f7\u28ff\u28ff\u28ff\u2840\u2839\u28df\u28fe\u28df\u28c6\u2839\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u28a0\u2858\u28ff\u28ff\u2844\u2809\u28bf\u28ff\u28fd\u2877\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u285d\u28f7\u28ef\u28bf\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28bf\u28fe\u28bf\u28ff\u2844\u2884\u2818\u28bf\u28de\u287f\u28e7\u2848\u28b7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u28b8\u28e7\u2818\u28ff\u28f7\u2808\u28e6\u2819\u28bf\u28fd\u28f7\u28fb\u28fd\u28ff\u28ff\u28ff\u28ff\u28cc\u28bf\u28ef\u28bf\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u28ef\u28ff\u28bf\u28ff\u2846\u28b8\u2877\u2848\u28bb\u287d\u28f7\u2877\u2844\u283b\u28fd\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u28cf\u28b0\u28ef\u28b7\u2808\u28ff\u2846\u28b9\u28b7\u284c\u283b\u287e\u288b\u28f1\u28ef\u28ff\u28ff\u28ff\u28ff\u2846\u28bb\u287f\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u284e\u28ff\u28be\u287f\u28ff\u2846\u28b8\u28fd\u28bb\u28c4\u2839\u28f7\u28df\u28ff\u28c4\u2839\u28df\u28ff\u28ff\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28ff\u28ff\u28ff\u2847\u28b8\u28ef\u28df\u28e7\u2818\u28f7\u2808\u286f\u281b\u2880\u2850\u28be\u28df\u28f7\u28fb\u28ff\u28ff\u28ff\u287f\u284c\u28bf\u28fb\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u28b8\u287f\u28df\u28ff\u2847\u28b8\u28ef\u28df\u28ee\u28a7\u2848\u28bf\u28de\u287f\u28e6\u2818\u280f\u28f9\u28ff\u28fd\u28bf\u28ff\u28ff\u28ff\u28ff\u28ef\u28ff\u28ff\u28ff\u2847\u28b8\u28ff\u28ff\u28fe\u2846\u2839\u2880\u28e0\u28fe\u28df\u28f7\u2848\u28bf\u28de\u28ef\u28bf\u28ff\u28ff\u28ff\u28b7\u2818\u28ef\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2848\u28ff\u28bf\u28fd\u2847\u2818\u281b\u281b\u281b\u2813\u2813\u2808\u281b\u281b\u281f\u2807\u2880\u28bf\u28fb\u28ff\u28ef\u28bf\u28ff\u28ff\u28ff\u28f7\u28bf\u28ff\u28ff\u2801\u28fe\u28ff\u28ff\u28ff\u28e7\u2844\u2807\u28f9\u28ff\u28fe\u28ef\u28ff\u2844\u283b\u28fd\u28ef\u28bf\u28fb\u28ff\u28ff\u2847\u28b9\u28fe\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u28b9\u28ff\u287d\u2847\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28de\u28c6\u2830\u28f6\u28f6\u2844\u2880\u28bb\u287f\u28ef\u28ff\u287d\u28ff\u28ff\u28ff\u28af\u28df\u287f\u2880\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2810\u28f8\u28ff\u28ff\u28f7\u28ff\u28ff\u28c6\u2839\u28ef\u28ff\u28fb\u28ff\u28ff\u28ff\u2880\u28ff\u28bf\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2818\u28ef\u287f\u2847\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2848\u28bf\u28f3\u2818\u2844\u283b\u28ff\u28be\u28fd\u28df\u287f\u28ff\u28af\u28ff\u2847\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2840\u28be\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u2839\u28fe\u28f7\u28fb\u28ff\u287f\u2847\u28b8\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u28b9\u28ff\u2807\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28c4\u283b\u2847\u28b9\u28c6\u2839\u28df\u28fe\u28fd\u28fb\u28df\u28ff\u28fd\u2801\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c7\u28ff\u28ff\u283f\u281b\u281b\u2809\u2819\u280b\u2880\u2801\u2898\u28ef\u28ff\u28ff\u28e7\u2818\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2848\u28ff\u2843\u28bc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u2859\u280c\u28ff\u28c6\u2818\u28ff\u28de\u287f\u28de\u287f\u285e\u28a0\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u281b\u2809\u2801\u2880\u28c0\u28e0\u28e4\u28e4\u28f6\u28f6\u28f6\u2846\u28bb\u28fd\u28de\u287f\u28f7\u2808\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2803\u2818\u2801\u2809\u2809\u2809\u2809\u2809\u2809\u2809\u2809\u2809\u2819\u281b\u281b\u28bf\u28c4\u28bb\u28ff\u28e7\u2818\u28af\u28df\u287f\u28fd\u2801\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u2843\u2880\u2880\u2818\u281b\u283f\u28bf\u28fb\u28df\u28ef\u28fd\u28fb\u28f5\u2840\u28bf\u28ef\u28df\u28ff\u2880\u28ff\n\u28ff\u28ff\u28ff\u28df\u28ff\u28ff\u28ff\u28ff\u28f6\u28f6\u2846\u2880\u28ff\u28fe\u28ff\u28fe\u28f7\u28ff\u28f6\u283f\u281a\u2809\u2880\u2880\u28e4\u28ff\u28f7\u28ff\u28ff\u28f7\u2848\u28bf\u28fb\u2883\u28fc\u28ff\u28ff\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u2876\u28e6\u28e4\u28c4\u28c0\u2840\u2809\u281b\u281b\u2837\u28ef\u28f3\u2808\u28fe\u287d\u28fe\u2880\u28ff\n\u28ff\u28bf\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2810\u28ff\u28ff\u28ff\u28ff\u283f\u280b\u2801\u2880\u2880\u28e4\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28cc\u28e5\u28fe\u287f\u28ff\u28ff\u28f7\u28ff\u28ff\u28bf\u28f7\u28ff\u28ff\u28df\u28fe\u28fd\u28f3\u28af\u28df\u28f6\u28e6\u28e4\u287e\u28df\u28e6\u2818\u28ff\u28be\u2841\u28ba\n\u28ff\u28fb\u28ff\u28ff\u2877\u28ff\u28ff\u28ff\u28ff\u28ff\u2857\u28e6\u2838\u287f\u280b\u2801\u2880\u2880\u28e0\u28f4\u28bf\u28ff\u28fd\u28fb\u28bd\u28fe\u28df\u28f7\u28ff\u28df\u28ff\u28ff\u28ff\u28f3\u283f\u28f5\u28e7\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28f3\u28ef\u28ff\u28ff\u28ff\u28fd\u2880\u28b7\u28fb\u2804\u2818\n\u28ff\u28b7\u28fb\u28ff\u28ff\u28f7\u28fb\u28ff\u28ff\u28ff\u2877\u281b\u28c1\u2880\u28c0\u28e4\u28f6\u28ff\u28db\u287f\u28ff\u28ee\u28fd\u287b\u28ff\u28ee\u28fd\u28fb\u28af\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u2880\u28b8\u28ff\u2880\u2846\n\u2838\u28df\u28ef\u28ff\u28ff\u28f7\u28bf\u28fd\u28ff\u28ff\u28f7\u28ff\u28f7\u28c6\u2839\u28ff\u28f6\u28ef\u283f\u28ff\u28f6\u28df\u28fb\u28bf\u28f7\u28fd\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2880\u28ef\u28df\u2880\u2847\n\u28c7\u2839\u28df\u28fe\u28fb\u28ff\u28ff\u28be\u287d\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u28b9\u28f6\u28ff\u28fb\u28f7\u28ef\u28df\u28ff\u28ff\u28fd\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2880\u287f\u2847\u28b8\u2847\n\u28ff\u28c6\u2839\u28f7\u287b\u28fd\u28ff\u28ef\u28bf\u28fd\u28fb\u28ff\u28ff\u28ff\u28ff\u28c6\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281b\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2807\u28b8\u28ff\u2807\u28fc\u2847\n\u2859\u283e\u28c6\u2839\u28ff\u28e6\u281b\u28ff\u28af\u28f7\u28bf\u287d\u28ff\u28ff\u28ff\u28ff\u28c6\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2803\u280e\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u280f\u2880\u28ff\u28fe\u28e3\u287f\u2847\n\u28ff\u28f7\u284c\u28a6\u2819\u28ff\u28ff\u28cc\u283b\u28fd\u28af\u28ff\u28fd\u28fb\u28ff\u28ff\u28ff\u28e7\u2829\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u284f\u28b0\u28a3\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2803\u2880\u2880\u28bf\u28de\u28f7\u28bf\u2847\n\u28ff\u28fd\u28c6\u2839\u28e7\u2818\u28ff\u28ff\u2877\u28cc\u2819\u28b7\u28ef\u2877\u28df\u28ff\u28ff\u28ff\u28f7\u2840\u2879\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28c8\u2803\u28f8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281f\u2880\u28f4\u2867\u2880\u2838\u28ff\u287d\u28ff\u2880\n\u28bb\u28fd\u28ff\u2844\u28bb\u28f7\u2848\u28bf\u28ff\u28ff\u28a7\u2880\u2819\u28bf\u28fb\u287e\u28fd\u28fb\u28ff\u28ff\u28c4\u280c\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281b\u2881\u28f0\u28fe\u28df\u287f\u2880\u2844\u28bf\u28df\u28ff\u2880\n\u2844\u28bf\u28ff\u28f7\u2880\u2839\u28df\u28c6\u283b\u28ff\u28ff\u28c6\u2880\u28c0\u2809\u283b\u28ff\u287d\u28ef\u28ff\u28ff\u28f7\u28c8\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u2880\u28e0\u2818\u28ef\u28f7\u28ff\u285f\u2880\u2886\u2838\u28ff\u285f\u28b8\n\u28f7\u2848\u28bf\u28ff\u28c7\u28b1\u2858\u28bf\u28f7\u28ec\u28d9\u283f\u28e7\u2818\u28c6\u2880\u2808\u283b\u28f7\u28df\u28fe\u28bf\u28ff\u28c6\u2839\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u28e0\u285e\u28a1\u28ff\u2880\u28ff\u28ff\u28ff\u2807\u2844\u28b8\u2844\u28bb\u2847\u28fc\n\u28ff\u28f7\u2848\u28bf\u28ff\u2846\u28a3\u2840\u2819\u28be\u28df\u28ff\u28ff\u28f7\u2848\u2802\u2818\u28e6\u2848\u283f\u28ef\u28ff\u28be\u28ff\u28c6\u2819\u283b\u283f\u283f\u283f\u283f\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u281b\u288b\u28e0\u28fe\u285f\u28a0\u28ff\u28ff\u2880\u28ff\u28ff\u285f\u28a0\u28ff\u2888\u28e7\u2818\u28a0\u28ff\n\u28ff\u28ff\u28ff\u28c4\u283b\u28ff\u2844\u28b3\u2844\u2886\u2859\u283e\u28fd\u28ff\u28ff\u28c6\u2840\u28b9\u2877\u28c4\u2819\u28bf\u28ff\u287e\u28ff\u28c6\u2880\u2840\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u28c0\u28e0\u28f4\u287f\u28ef\u280f\u28e0\u28ff\u28ff\u284f\u28b8\u28ff\u287f\u2881\u28ff\u28ff\u2880\u28ff\u2806\u28b8\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28e6\u2859\u28ff\u28c6\u28bb\u284c\u28bf\u28f6\u28a4\u28c9\u28d9\u28ff\u28f7\u2840\u2819\u283d\u2837\u2804\u2839\u28ff\u28df\u28ff\u28c6\u2899\u28cb\u28e4\u28e4\u28e4\u28c4\u28c0\u2880\u2880\u2880\u2880\u28fe\u28ff\u28df\u2877\u28ef\u287f\u2883\u28fc\u28ff\u28ff\u28ff\u2807\u28fc\u285f\u28e1\u28ff\u28ff\u28ff\u2880\u287f\u28a0\u2808\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ee\u28ff\u28ff\u28ff\u284c\u2801\u28a4\u28e4\u28e4\u28e4\u28ec\u28ed\u28f4\u28f6\u28f6\u28f6\u28c6\u2808\u28bb\u28ff\u28ff\u28c6\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28f6\u28e4\u28cc\u28c9\u2858\u281b\u283b\u2836\u28ff\u28ff\u28ff\u28ff\u285f\u28f0\u28eb\u28f4\u28ff\u28ff\u28ff\u28ff\u2804\u28f7\u28ff\u28ff\u28ff\n*/\nimport java.util.*;\n\npublic class Main{\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner s=new Scanner(System.in);\nStringBuilder sb=new StringBuilder();\n\t\tint t=s.nextInt();\n\t\tfor(int ie=0;ie<t;ie++) {\n\n\t\t\tlong a=s.nextLong();\n\t\t\tlong b=s.nextLong();\n\t\t\tint z=(int)lcm(a,b);\n\t\t\tlong[] dp=new long[z+1];\n\t\t\tint curr=1;\n\t\t\t\n\t\t\tfor(long j=1;j<z+1;j++) {\n\t\t\t  long g=(j%a)%b;\n\t\t\t  long h=(j%b)%a;\n\t\t\t  \n\t\t\t  if(g!=h) {\n\t\t\t\t  dp[curr]=dp[curr-1]+1;\n\t\t\t  }else {\n\t\t\t\t  dp[curr]=dp[curr-1];\n\t\t\t  }\n\t\t\t  \n\t\t\t \n\t\t\t  curr++;\n\t\t\t  \n\t\t\t  \n\t\t\t}\n\t\t\tint q=s.nextInt();\n\t\t\tfor(int i=0;i<q;i++) {\n\t\t\t\t\n\t\t\t\tlong l=s.nextLong();\n\t\t\t\tlong r=s.nextLong();\n//\t\t\t\t\n//\t\t\t\tfor(int bb=0;bb<z;bb++) {\n//\t\t\t\t\tSystem.out.print(dp[bb]+\" \");\n//\t\t\t\t}\n//\t\t\t\tSystem.out.println();\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tlong v=(r-1+1l)/(long)z;\n\t\t\t\tlong ans=0;\n\t\t\t\tans=ans+(Math.max(0, v)*dp[z]);\n\t\t\t\t\n\t\t\t\tlong left=(r-1+1l)-((long)z*Math.max((v),0));\n\t\t\t\tlong c=left%(long)z;\n\t\t\t\t\n\t\t\t\tans=ans+dp[(int)c];\n\t\t\t\t\n\t\t\t\tlong v1=(l-1)/(long)z;\n\t\t\t\tlong ans1=0;\n\t\t\t\tans1=ans1+(Math.max(0, v1)*dp[z]);\n\t\t\t\t\n\t\t\t\tlong left1=(l-1)-((long)z*Math.max((v1),0));\n\t\t\t\tlong c1=left1%(long)z;\n\t\t\t\t\n\t\t\t\tans1=ans1+dp[(int)c1];\n\t\t\t\tsb.append(ans-ans1);\n\t\t\t\tsb.append(\" \");\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\tsb.append(\"\\n\");\n\t\t}\n\t\tSystem.out.println(sb);\n\t}\n\tpublic static long gcd(long a, long b) \n\t    { \n\t    if (a == 0) \n\t        return b;  \n\t    return gcd(b % a, a);  \n\t    } \n\t      \n\t   \n\tpublic    static long lcm(long a, long b) \n\t    { \n\t        return (a*b)/gcd(a, b); \n\t    } \n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\nimport java.util.List;\n import java.util.*;\n public class realfast implements Runnable \n  {\n    private static final int INF = (int) 1e9;\n    long in= (long)Math.pow(10,9);\n    long fac[]= new long[3000];\n    public  void solve() throws IOException \n    {\n       int t = readInt();\n\n       for(int f=0;f<t;f++)\n       {\n        int a= readInt();\n        int b = readInt();\n        int q = readInt();\n        int val=a*b;\n        int count[]= new int[val+1];\n        for(int i=1;i<val;i++)\n        {\n           int rem = i%a;\n           rem = rem%b;\n           int rem1 = i%b;\n           rem1 = rem1%a;\n           if(rem!=rem1)\n             count[i]= count[i-1]+1;\n           else\n             count[i]= count[i-1];\n        }\n         count[val]= count[val-1];\n         /*for(int i=0;i<val;i++)\n            out.print(count[i]+\" \");\n          \n        out.println();*/\n        for(int i=0;i<q;i++)\n        {\n            long l = readLong();\n            long r = readLong();\n\n            int re = (int)(l%val);\n\n            int re1 =(int)(r%val);\n\n            long tot= count[val];\n            if(re>0)\n            {\n                tot= tot- count[re-1];\n            }\n            \n            tot= tot+ count[re1]-count[0];\n\n            long len = r/val-l/val;\n\n            tot = tot+ (len-1)*count[val];\n             out.print(tot+\" \");\n        } \n        out.println();\n        \n       }\n\n    }\n    public int gcd(int a , int b )\n    {\n      if(a<b)\n      {\n        int t =a;\n        a=b;\n        b=t;\n      }\n      if(a%b==0)\n        return b ;\n      return gcd(b,a%b);\n    }\n    public long pow(long n , long p,long m)\n    {\n         if(p==0)\n            return 1;\n        long val = pow(n,p/2,m);;\n        val= (val*val)%m;\n        if(p%2==0)\n            return val;\n        else\n            return (val*n)%m;\n    }\n    \n    \n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    public static void main(String[] args) {\n        new Thread(null, new realfast(), \"\", 128 * (1L << 20)).start();\n    }\n \n    private static final boolean ONLINE_JUDGE = System.getProperty(\"ONLINE_JUDGE\") != null;\n    private BufferedReader reader;\n    private StringTokenizer tokenizer;\n    private PrintWriter out;\n \n    @Override\n    public void run() {\n        try {\n            if (ONLINE_JUDGE || !new File(\"input.txt\").exists()) {\n                reader = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(System.out);\n            } else {\n                reader = new BufferedReader(new FileReader(\"input.txt\"));\n                out = new PrintWriter(\"output.txt\");\n            }\n            solve();\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        } finally {\n            try {\n                reader.close();\n            } catch (IOException e) {\n                // nothing\n            }\n            out.close();\n        }\n    }\n \n    private String readString() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n \n    @SuppressWarnings(\"unused\")\n    private int readInt() throws IOException {\n        return Integer.parseInt(readString());\n    }\n \n    @SuppressWarnings(\"unused\")\n    private long readLong() throws IOException {\n        return Long.parseLong(readString());\n    }\n \n    @SuppressWarnings(\"unused\")\n    private double readDouble() throws IOException {\n        return Double.parseDouble(readString());\n    }\n}\nclass edge implements Comparable<edge>{\n    int val ;\n    int color;\n    \n    edge(int u, int v)\n    {\n       this.val=u;\n       this.color=v;\n    }\n    public int compareTo(edge e)\n    {\n        return this.val-e.val;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "def lcm(a,b):\n    return (a*b)//gcd(a,b)\ndef gcd(a,b):\n    if(a%b==0):\n        return b\n    else:\n        return gcd(b,a%b)\nfor _ in range(int(input())):\n    a,b,q=list(map(int,input().split()))\n    if(a<b):\n        x=b\n        y=a\n    else:\n        x=a\n        y=b\n    anslcm=lcm(x,y)\n    mul=anslcm-x\n    ans=[]\n    for w in range(q):\n        l,r=list(map(int,input().split()))\n        if(a==b):\n            ans.append(0)\n        else:\n            startdiv=l//anslcm\n            endiv=r//anslcm\n            temp=mul*(endiv-startdiv)\n            virstart=startdiv*anslcm\n            virend=endiv*anslcm\n            tempo=l%anslcm\n            if(tempo>=x):\n                tem=(tempo-x)\n                temp-=tem\n            tempo=r%anslcm\n            if(tempo>=x):\n                tem=tempo-x+1\n                temp+=tem\n            ans.append(temp)\n    for q in ans:\n        print(q,end=' ')\n    print()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\n\n\nimport java.io.*;\nimport java.math.BigDecimal;\n\n\n \n public class Main {\n \n    public static void main(String[] args) {\n         \n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader inp = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Solver solver = new Solver();\n        solver.solve(inp, out);\n        out.close();\n \n    }\n \n \n \n \n \n    static class Solver {\n \n        class pair implements Comparable<pair>{\n \n            int i;\n            int cnt;\n            public pair(int i,int cnt)\n            {\n                this.i=i;\n                this.cnt=cnt;\n            }\n \n            public int compareTo(pair p)\n            {\n                return Long.compare(this.i,p.i);\n            }\n \n        }\n \n        class Node implements Comparable < Node > {\n            int i;\n            int cnt;\n \n            Node(int i, int cnt) {\n                this.i = i;\n                this.cnt = cnt;\n            }\n \n            public int compareTo(Node n) {\n                if (this.cnt == n.cnt) {\n                    return Integer.compare(this.i, n.i);\n                }\n                return Integer.compare(this.cnt, n.cnt);\n            }\n        }\n \n        public boolean done(int[] sp, int[] par) {\n            int root;\n \n            root = findSet(sp[0], par);\n \n            for (int i = 1; i < sp.length; i++) {\n                if (root != findSet(sp[i], par))\n                    return false;\n            }\n            return true;\n        }\n        public int findSet(int i, int[] par) {\n            int x = i;\n            boolean flag = false;\n            while (par[i] >= 0) {\n                flag = true;\n                i = par[i];\n            }\n            if (flag)\n                par[x] = i;\n            return i;\n        }\n \n        public void unionSet(int i, int j, int[] par) {\n            int x = findSet(i, par);\n            int y = findSet(j, par);\n            if (x < y) {\n                par[y] = x;\n            } else {\n                par[x] = y;\n            }\n        }\n \n        public long pow(long a, long b, long MOD) {\n            if (b == 0) {\n                return 1;\n            }\n            if (b == 1) {\n                return a;\n            }\n            long val = pow(a, b / 2, MOD);\n            if (b % 2 == 0) {\n                return val * val % MOD;\n            } else {\n                return val * (val * a % MOD) % MOD;\n \n            }\n \n        }\n \n        public boolean isPrime(int n)\n        {\n            for(int i=2;i<n;i++)\n            {\n                if(n%i==0)\n                {\n                    return false;\n                }\n            }\n            return true;\n        }\n \n \n        public void minPrimeFactor(int n, int[] s) {\n            boolean prime[] = new boolean[n + 1];\n            Arrays.fill(prime, true);\n            s[1] = 1;\n            s[2] = 2;\n            for (int i = 4; i <= n; i += 2) {\n                prime[i] = false;\n                s[i] = 2;\n            }\n \n            for (int i = 3; i <= n; i += 2) {\n                if (prime[i]) {\n                    s[i] = i;\n                    for (int j = 2 * i; j <= n; j += i) {\n                        prime[j] = false;\n                        s[j] = i;\n                    }\n                }\n            }\n \n        }\n \n \n        public void findAllPrime(int n, ArrayList < Node > al, int s[]) {\n            int curr = s[n];\n            int cnt = 1;\n            while (n > 1) {\n                n /= s[n];\n                if (curr == s[n]) {\n                    cnt++;\n                    continue;\n \n                }\n                Node n1 = new Node(curr, cnt);\n                al.add(n1);\n \n                curr = s[n];\n                cnt = 1;\n            }\n        }\n \n \n \n        public int binarySearch(int n, int k) {\n            int left = 1;\n            int right = 100000000 + 5;\n            int ans = 0;\n            while (left <= right) {\n                int mid = (left + right) / 2;\n                if (n / mid >= k) {\n                    left = mid + 1;\n                    ans = mid;\n                } else {\n                    right = mid - 1;\n                }\n            }\n \n            return ans;\n        }\n        public boolean checkPallindrom(String s) {\n            char ch[] = s.toCharArray();\n \n            for (int i = 0; i < s.length() / 2; i++) {\n                if (ch[i] != ch[s.length() - 1 - i])\n                    return false;\n            }\n            return true;\n        }\n\n        public boolean pallindrom(String s1, String s2)\n        {\n            char ch[] = s1.toCharArray();\n            char ch1[] = s2.toCharArray();\n\n            for(int i=0;i<s1.length();i++)\n            {\n                if(ch[i]!=ch1[s1.length()-1-i])\n                {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n \n \n \n \n        public void remove(ArrayList < Integer > [] al, int x) {\n            for (int i = 0; i < al.length; i++) {\n                for (int j = 0; j < al[i].size(); j++) {\n \n                    if (al[i].get(j) == x)\n                        al[i].remove(j);\n \n                }\n            }\n        }\n \n        public long gcd(long a, long b) {\n            if (a == 0)\n                return b;\n            return gcd(b % a, a);\n        }\n \n \n        public void printDivisors(long n, ArrayList < Long > al) {\n            // Note that this loop runs till square root \n            for (long i = 1; i*i <= (n); i++) {\n                if (n % i == 0) {\n                    // If divisors are equal, print only one \n                    if (n / i == i) {\n                        al.add(i);\n                    } else // Otherwise print both \n                    {\n                        al.add(i);\n                        al.add(n / i);\n                    }\n \n                }\n            }\n        }\n \n        public static long constructSegment(long seg[], long arr[], int low, int high, int pos) {\n            if (low == high) {\n                seg[pos] = arr[low];\n                return seg[pos];\n            }\n            int mid = (low + high) / 2;\n            long t1 = constructSegment(seg, arr, low, mid, (2 * pos) + 1);\n            long t2 = constructSegment(seg, arr, mid + 1, high, (2 * pos) + 2);\n            seg[pos] = t1 + t2;\n            return seg[pos];\n \n        }\n        public static long querySegment(long seg[], int low, int high, int qlow, int qhigh, int pos) {\n \n            if (qlow <= low && qhigh >= high) {\n                return seg[pos];\n            } else if (qlow > high || qhigh < low) {\n                return 0;\n            } else {\n                long ans = 0;\n                int mid = (low + high) / 2;\n                ans += querySegment(seg, low, mid, qlow, qhigh, (2 * pos) + 1);\n                ans += querySegment(seg, mid + 1, high, qlow, qhigh, (2 * pos) + 2);\n                return ans;\n            }\n \n        }\n        public static int lcs(char[] X, char[] Y, int m, int n) {\n            if (m == 0 || n == 0)\n                return 0;\n            if (X[m - 1] == Y[n - 1])\n                return 1 + lcs(X, Y, m - 1, n - 1);\n            else\n                return Integer.max(lcs(X, Y, m, n - 1), lcs(X, Y, m - 1, n));\n        }\n \n        public static long recursion(long start, long end, long cnt[], int a, int b) {\n \n            long min = 0;\n            long count = 0;\n            int ans1 = -1;\n            int ans2 = -1;\n            int l = 0;\n            int r = cnt.length - 1;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (cnt[mid] >= start) {\n                    ans1 = mid;\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n \n            l = 0;\n            r = cnt.length - 1;\n            while (l <= r) {\n                int mid = (l + r) / 2;\n                if (cnt[mid] <= end) {\n                    ans2 = mid;\n                    l = mid + 1;\n                } else {\n                    r = mid - 1;\n                }\n            }\n \n            if (ans1 == -1 || ans2 == -1 || ans2 < ans1) {\n                // System.out.println(\"min1 \"+min);\n                min = a;\n                return a;\n \n            } else {\n                min = b * (end - start + 1) * (ans2 - ans1 + 1);\n            }\n            if (start == end) {\n                // System.out.println(\"min \"+min);\n                return min;\n            }\n            long mid = (end + start) / 2;\n            min = Long.min(min, recursion(start, mid, cnt, a, b) + recursion(mid + 1, end, cnt, a, b));\n            // System.out.println(\"min \"+min);\n            return min;\n        }\n \n \n        public int lowerBound(ArrayList<Long> al,long ele)\n        {\n            int l =0;\n            int r =al.size()-1;\n            int ans=-1;\n            while(l<=r)\n            {\n                int mid = (l+r)/2;\n                if(al.get(mid)<=ele)\n                {\n                    ans=mid;\n                    l=mid+1;\n                }\n                else\n                {\n                    r=mid-1;\n                }\n\n\n            }\n            return ans;\n        }\n        \n        public int lowerBound(long arr[],long ele)\n        {\n            int l =0;\n            int r =arr.length-1;\n            int ans=-1;\n            while(l<=r)\n            {\n                int mid = (l+r)/2;\n                if(arr[mid]<=ele)\n                {\n                    ans=mid;\n                    l=mid+1;\n                }\n                else\n                {\n                    r=mid-1;\n                }\n\n\n            }\n            return ans;\n        }\n \n        public long dfs_util(ArrayList < Integer > [] al, boolean vis[], int x ,long arr[],long val) {\n \n            vis[x] = true;\n\n           \n            long temp=0;\n            for (int i = 0; i < al[x].size(); i++) {\n \n                if (!vis[al[x].get(i)]) {\n                    \n                    temp+=dfs_util(al, vis, al[x].get(i),arr,val+1);\n                }\n\n            }\n            arr[x]=val-(temp);\n            return (temp+1);\n           \n          \n        }\n \n        public  long[] dfs(ArrayList[] al) {\n            long arr[] = new long[al.length];\n            boolean vis[] = new boolean[al.length];\n            for (int i = 0; i < al.length; i++) {\n                if (!vis[i]) {\n                     dfs_util(al, vis, i,arr,0);\n                }\n            }\n            return arr;\n           \n        }\n \n\n        public void permute(String s,int l, int r,ArrayList<String> al)\n        {\n            if(l==r)\n            {\n                al.add(s);\n                \n            }\n            for(int i=l;i<=r;i++)\n            {\n                String str=swap(s,l,i);\n                permute(str, l+1, r, al);\n                \n            }\n        \n        }\n\n        public String swap(String s, int l, int r)\n        {\n            char ch[] = s.toCharArray();\n            char tem = ch[l];\n            ch[l]=ch[r];\n            ch[r]=tem;\n            return String.valueOf(ch);\n        }\n        \n\n        public int[] computeLps(String s)\n        {\n            int ans[] =new int[s.length()];\n            char ch[] = s.toCharArray();\n            int n = s.length();\n            int i=1;\n            int len=0;\n            ans[0]=0;\n            while(i<n)\n            {\n                if(ch[i]==ch[len])\n                {\n                    len++;\n                    ans[i]=len;\n                    i++;\n                }\n                else\n                {\n                    if(len!=0)\n                    {\n                        len=ans[len-1];\n                    }\n                    else\n                    {\n                        ans[i]=len;\n                        i++;\n                    }\n                }\n            }\n \n            return ans;\n \n        }\n\n        public int longestPrefixSuffix(String s)  \n        { \n            int n = s.length(); \n        \n            if(n < 2) { \n                return 0; \n            } \n    \n            int len = 0; \n            int i = n/2; \n            while(i < n) { \n                if(s.charAt(i) == s.charAt(len)) { \n                ++len; \n                ++i; \n            }  \n            else \n            { \n            if(len == 0) { \n                ++i; \n            }  \n            else \n            {  \n                \n                --len; \n            } \n            } \n    } \n        \n    return len; \n          \n} \n\n        public boolean convertFromBaseToBase(long num, int fromBase, int toBase,HashSet<Integer> hs) {\n            StringBuilder s=new StringBuilder();\n            boolean f=true;\n            int cnt=0;\n            while(num>0)\n            {\n               long tem = num%toBase;\n               if(tem==1)\n               {\n                 if(hs.contains(cnt))\n                 {\n                     f=false;\n                     break;\n                 }\n                 else\n                 {\n                     hs.add(cnt);\n                 }\n               }\n               else if(tem==0)\n               {\n\n               }\n               else\n               {\n                f=false;\n                break;\n               }\n               num/=toBase;\n               cnt++;\n\n            }\n\n\n            return f;\n            \n        }\n\n        private boolean possible(long arr[],long d,long k)\n        {\n            long tem=0;\n            for(int i=0;i<arr.length-1;i++)\n            {\n                tem+=(arr[i+1]-arr[i])/(d);\n\n                if((arr[i+1]-arr[i])%d==0)\n                    tem--;\n                \n            }\n            if(tem<=k)\n            {\n                return true;\n            }\n            else\n                return false;\n            \n        }\n\n        public void bfsUtil(ArrayList<Integer> a[],int out[])\n        {\n            boolean vis[] = new boolean[a.length];\n            for(int i=0;i<a.length;i++)\n            {\n                if(!vis[i])\n                {\n                    bipartie(a, vis,out,i);\n                }\n            }\n        }\n\n\n        public int[] bipartie(ArrayList<Integer> arr[],boolean vis[],int color[],int e)\n        {\n          \n          \n            Queue<Integer> q = new LinkedList<>();\n            color[e]=1;\n            q.add(e);\n            while(!q.isEmpty())\n            {\n                int x = q.remove();\n                if(vis[x])\n                {\n                    continue;\n                }\n                vis[x]=true;\n                for(int i=0;i<arr[x].size();i++)\n                {\n                    if(!vis[arr[x].get(i)])\n                    {\n                        \n                    }\n                    else\n                    {\n                        if(color[arr[x].get(i)]==color[x])\n                        {\n                            color[x]=2;\n                        }\n                    }\n                }\n\n                for(int i=0;i<arr[x].size();i++)\n                {\n                    if(!vis[arr[x].get(i)])\n                    {\n                        if(color[x]==2)\n                        {\n                            color[arr[x].get(i)]=0;\n                            \n                        }\n                        else\n                        {\n                            color[arr[x].get(i)]=1-color[x];\n                            \n                        }\n                        q.add(arr[x].get(i));\n                    }\n                    \n                }\n            }\n            return color;\n        }\n\n        \n        \n \n       public int dfs1(ArrayList<Integer> al[],int x,boolean arr[],int val,boolean vis[],long ans[])\n       {\n           vis[x]=true;\n           if(arr[x])\n           {\n           \n\n               ans[0]+=(long)val;\n           }\n           for (int i = 0; i < al[x].size(); i++) {\n \n            if (!vis[al[x].get(i)]) {\n                int temp = val;\n                if(!arr[x])\n                    temp++;\n                dfs1(al, al[x].get(i),arr,temp,vis,ans);\n            }\n\n        }\n            return 0;\n       }\n \n        private void solve(InputReader inp, PrintWriter out1) {\n\n            int t = inp.nextInt();\n            for(int k=0;k<t;k++)\n            {\n                long a = inp.nextLong();\n                long b = inp.nextLong();\n                long q = inp.nextLong();\n                \n                for(int i=0;i< q;i++)\n                {\n                   long l = inp.nextLong();\n                   long r = inp.nextLong();\n                   long ans=r-l+1;\n                   long lcm = (a*b)/gcd(a, b);\n                   long cnt1 = (r/lcm);\n                   if(cnt1>0)\n                   {\n                        ans-=((cnt1-1)*Math.max(a,b));\n                        long temp = (r/lcm)*lcm;\n                        ans-=Math.min(Math.max(a,b),r-temp+1);\n                \n                   }\n\n                   \n                   long cnt2 = ((l-1)/lcm);\n          \n                   if(cnt2>0)\n                   {\n                    ans+=((cnt2-1)*Math.max(a,b));\n                    long temp = ((l-1)/lcm)*lcm;\n                    ans+=Math.min(Math.max(a,b),l-temp);\n                   }\n                  \n                    long x = Math.max(a, b)-1;\n                      if(l<=x)\n                      {\n                          ans-=Math.min(x-l+1,r-l+1);\n                      }\n                   \n\n                   System.out.print(ans+\" \");\n                \n                }\n\n\n\n                System.out.println();\n            }\n\n        }\n     \n    }\n\n \n \n    static class InputReader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n \n        InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n \n        String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n \n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\nclass ele implements Comparable<ele>{\n    int i;\n    int dis;\n    boolean mark;\n    boolean leaf;\n    public ele(int i,int dis)\n    {\n        this.i=i;\n        this.dis=dis;\n        this.mark=false;\n        this.leaf=false;\n    }\n    @Override\n    public int compareTo(ele e)\n    {\n       if(this.dis==e.dis)\n       {\n           if(e.leaf==true)\n            return 1;\n           else if(this.leaf)\n            return -1;\n           else\n            return 0; \n       }\n        \n        return -Integer.compare(this.dis,e.dis);\n    }\n}"
        }
    ]
}