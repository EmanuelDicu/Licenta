{
    "name": "1256_C. Platforms Jumping",
    "source": "CODEFORCES",
    "description": "There is a river of width n. The left bank of the river is cell 0 and the right bank is cell n + 1 (more formally, the river can be represented as a sequence of n + 2 cells numbered from 0 to n + 1). There are also m wooden platforms on a river, the i-th platform has length c_i (so the i-th platform takes c_i consecutive cells of the river). It is guaranteed that the sum of lengths of platforms does not exceed n.\n\nYou are standing at 0 and want to reach n+1 somehow. If you are standing at the position x, you can jump to any position in the range [x + 1; x + d]. However you don't really like the water so you can jump only to such cells that belong to some wooden platform. For example, if d=1, you can jump only to the next position (if it belongs to the wooden platform). You can assume that cells 0 and n+1 belong to wooden platforms.\n\nYou want to know if it is possible to reach n+1 from 0 if you can move any platform to the left or to the right arbitrary number of times (possibly, zero) as long as they do not intersect each other (but two platforms can touch each other). It also means that you cannot change the relative order of platforms.\n\nNote that you should move platforms until you start jumping (in other words, you first move the platforms and then start jumping).\n\nFor example, if n=7, m=3, d=2 and c = [1, 2, 1], then one of the ways to reach 8 from 0 is follow:\n\n<image> The first example: n=7.\n\nInput\n\nThe first line of the input contains three integers n, m and d (1 \u2264 n, m, d \u2264 1000, m \u2264 n) \u2014 the width of the river, the number of platforms and the maximum distance of your jump, correspondingly.\n\nThe second line of the input contains m integers c_1, c_2, ..., c_m (1 \u2264 c_i \u2264 n, \u2211_{i=1}^{m} c_i \u2264 n), where c_i is the length of the i-th platform.\n\nOutput\n\nIf it is impossible to reach n+1 from 0, print NO in the first line. Otherwise, print YES in the first line and the array a of length n in the second line \u2014 the sequence of river cells (excluding cell 0 and cell n + 1).\n\nIf the cell i does not belong to any platform, a_i should be 0. Otherwise, it should be equal to the index of the platform (1-indexed, platforms are numbered from 1 to m in order of input) to which the cell i belongs.\n\nNote that all a_i equal to 1 should form a contiguous subsegment of the array a of length c_1, all a_i equal to 2 should form a contiguous subsegment of the array a of length c_2, ..., all a_i equal to m should form a contiguous subsegment of the array a of length c_m. The leftmost position of 2 in a should be greater than the rightmost position of 1, the leftmost position of 3 in a should be greater than the rightmost position of 2, ..., the leftmost position of m in a should be greater than the rightmost position of m-1.\n\nSee example outputs for better understanding.\n\nExamples\n\nInput\n\n\n7 3 2\n1 2 1\n\n\nOutput\n\n\nYES\n0 1 0 2 2 0 3 \n\n\nInput\n\n\n10 1 11\n1\n\n\nOutput\n\n\nYES\n0 0 0 0 0 0 0 0 0 1 \n\n\nInput\n\n\n10 1 5\n2\n\n\nOutput\n\n\nYES\n0 0 0 0 1 1 0 0 0 0 \n\nNote\n\nConsider the first example: the answer is [0, 1, 0, 2, 2, 0, 3]. The sequence of jumps you perform is 0 \u2192 2 \u2192 4 \u2192 5 \u2192 7 \u2192 8.\n\nConsider the second example: it does not matter how to place the platform because you always can jump from 0 to 11.\n\nConsider the third example: the answer is [0, 0, 0, 0, 1, 1, 0, 0, 0, 0]. The sequence of jumps you perform is 0 \u2192 5 \u2192 6 \u2192 11.",
    "difficulty": "C",
    "tags": [
        "greedy"
    ],
    "rating": 1700,
    "public_test": [
        {
            "input": "7 3 2\n1 2 1\n",
            "output": "YES\n0 1 0 2 2 0 3\n"
        },
        {
            "input": "10 1 5\n2\n",
            "output": "YES\n0 0 0 0 1 1 0 0 0 0\n"
        },
        {
            "input": "10 1 11\n1\n",
            "output": "YES\n0 0 0 0 0 0 0 0 0 1\n"
        }
    ],
    "generated_test": [
        {
            "input": "15 2 5\n1 2\n",
            "output": "YES\n0 0 0 0 1 0 0 0 0 2 2 0 0 0 0\n"
        },
        {
            "input": "1000 16 2\n20 13 16 13 22 10 18 21 18 20 20 16 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "6 3 2\n1 2 3\n",
            "output": "YES\n1 2 2 3 3 3\n"
        },
        {
            "input": "8 4 1\n1 1 4 2\n",
            "output": "YES\n1 2 3 3 3 3 4 4\n"
        },
        {
            "input": "50 4 7\n4 13 10 3\n",
            "output": "YES\n0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 2 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 0 0 4 4 4\n"
        },
        {
            "input": "10 1 6\n1\n",
            "output": "YES\n0 0 0 0 0 1 0 0 0 0\n"
        },
        {
            "input": "4 2 2\n2 1\n",
            "output": "YES\n0 1 1 2\n"
        },
        {
            "input": "3 1 2\n2\n",
            "output": "YES\n0 1 1\n"
        },
        {
            "input": "1000 232 105\n4 3 4 4 6 1 4 3 4 1 4 1 4 2 2 3 2 6 3 2 6 1 1 4 1 2 4 2 3 2 5 2 3 4 3 3 3 2 5 4 2 5 4 2 4 4 4 2 4 1 3 5 4 4 5 3 6 5 3 3 4 4 2 3 3 3 1 4 4 3 2 3 2 5 4 3 2 4 3 1 2 5 6 2 3 6 3 2 2 2 2 2 6 4 4 5 5 1 4 2 5 1 6 4 2 2 3 7 2 3 3 2 4 4 2 3 2 3 3 4 1 3 2 3 2 7 7 3 3 3 4 2 2 3 2 3 4 2 3 3 4 3 3 5 2 3 1 2 6 5 4 2 6 2 3 2 3 4 3 1 2 7 5 3 6 4 1 4 4 4 5 3 2 1 2 3 4 3 2 4 2 2 3 1 2 2 5 1 1 4 1 4 3 5 3 2 3 5 3 4 4 4 4 7 2 3 1 3 3 2 3 2 5 4 1 1 4 4 5 2 3 2 3 4 2 3 1 3 2 4 1 2\n",
            "output": "YES\nn"
        },
        {
            "input": "10 1 9\n2\n",
            "output": "YES\n0 0 0 0 0 0 0 0 1 1\n"
        },
        {
            "input": "10 1 21\n1\n",
            "output": "YES\n0 0 0 0 0 0 0 0 0 1\n"
        },
        {
            "input": "50 4 13\n4 13 10 3\n",
            "output": "YES\n0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 4 4 4\n"
        },
        {
            "input": "1000 232 105\n4 3 4 4 6 1 4 3 4 1 4 1 4 2 2 3 2 6 3 2 6 1 1 4 1 2 4 2 3 2 5 2 3 4 3 3 3 2 5 4 2 5 4 2 4 4 4 2 4 1 3 5 4 4 5 3 6 5 3 3 4 4 2 3 3 3 1 4 4 3 2 3 2 5 4 3 2 4 3 1 2 5 6 2 3 6 3 2 2 2 2 2 6 4 4 5 5 1 4 2 5 1 6 4 2 2 3 7 2 3 3 2 4 4 2 3 2 3 3 4 1 3 2 3 2 7 7 3 3 3 4 2 2 3 2 3 4 2 3 3 4 3 3 5 2 3 1 2 6 5 4 2 6 2 3 2 3 4 3 1 2 7 5 3 6 4 1 4 4 4 5 3 2 1 2 3 4 3 2 4 2 2 3 1 2 2 5 1 1 4 1 4 3 5 3 2 3 5 3 4 4 4 4 7 2 3 1 3 3 2 3 2 5 4 1 1 4 4 5 2 4 2 3 4 2 3 1 3 2 4 1 2\n",
            "output": "YES\nn"
        },
        {
            "input": "10 1 7\n2\n",
            "output": "YES\n0 0 0 0 0 0 1 1 0 0\n"
        },
        {
            "input": "50 4 13\n4 13 20 3\n",
            "output": "YES\n0 0 0 0 0 0 0 0 0 0 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4\n"
        },
        {
            "input": "1000 232 105\n4 3 4 4 6 1 4 3 4 1 4 1 4 2 2 3 2 6 3 2 6 1 1 4 1 2 4 2 3 2 5 2 3 4 3 3 3 2 5 4 2 5 4 2 4 4 4 2 4 1 3 5 4 4 5 3 6 5 3 3 4 4 2 3 3 3 1 4 4 3 2 3 2 5 4 3 2 4 3 1 2 5 6 2 3 6 3 2 2 2 2 2 6 4 4 5 5 1 4 2 5 1 6 4 2 2 3 7 2 3 3 2 4 4 2 3 2 3 3 4 1 3 2 3 2 7 7 3 3 3 4 2 2 3 2 3 4 2 6 3 4 3 3 5 2 3 1 2 6 5 4 2 6 2 3 2 3 4 3 1 2 7 5 3 6 4 1 4 4 4 5 3 2 1 2 3 4 3 2 4 2 2 3 1 2 2 5 1 1 4 1 4 3 5 3 2 3 5 3 4 4 4 4 7 2 3 1 3 3 2 3 2 5 4 1 1 4 4 5 2 4 2 3 4 2 3 1 3 2 4 1 2\n",
            "output": "YES\nn"
        },
        {
            "input": "1000 232 105\n4 3 4 4 6 1 4 3 4 1 4 1 4 2 2 3 2 6 3 2 6 1 1 4 1 2 4 2 3 2 5 2 3 4 3 3 3 2 5 4 2 5 4 2 4 4 4 2 4 1 3 5 4 4 5 3 6 5 3 3 4 4 2 3 3 3 1 4 4 3 2 3 2 5 4 3 2 4 3 1 2 5 6 2 3 6 3 2 2 2 2 2 6 4 4 5 5 1 4 2 5 1 6 4 2 2 3 7 2 3 3 2 4 4 2 3 2 3 3 4 1 3 2 3 2 7 7 3 3 3 4 2 2 3 2 3 4 2 8 3 4 3 3 5 2 3 1 2 6 5 4 2 6 2 3 2 3 4 3 1 2 7 5 3 6 4 1 4 4 4 5 3 2 1 2 3 4 3 2 4 2 2 3 1 2 2 5 1 1 4 1 4 3 5 3 2 3 5 3 4 4 4 4 7 2 3 1 3 3 2 3 2 5 4 1 1 4 4 5 2 4 2 3 4 2 3 1 3 2 4 1 2\n",
            "output": "YES\nn"
        },
        {
            "input": "1000 232 105\n4 3 4 4 6 1 4 3 4 1 4 1 4 2 2 3 2 6 3 2 6 1 1 4 1 2 4 2 3 2 5 2 3 4 3 3 3 2 5 4 2 5 4 2 4 4 4 2 4 1 3 5 4 4 5 3 6 5 3 3 4 4 2 3 3 3 1 4 4 3 2 3 2 5 4 3 2 4 3 1 2 5 6 2 4 6 3 2 2 2 2 2 6 4 4 5 5 1 4 2 5 1 6 4 2 2 3 7 2 3 3 2 4 4 2 3 2 3 3 4 1 3 2 3 2 7 7 3 3 3 4 2 2 3 2 3 4 2 8 3 4 3 3 5 2 3 1 2 6 5 4 2 6 2 3 2 3 4 3 1 2 7 5 3 6 4 1 4 4 4 5 3 2 1 2 3 4 3 2 4 2 2 3 1 2 2 5 1 1 4 1 4 3 5 3 2 3 5 3 4 4 4 4 7 2 3 1 3 3 2 3 2 5 4 1 1 4 4 5 2 4 2 3 4 2 3 1 3 2 4 1 2\n",
            "output": "YES\nn"
        },
        {
            "input": "1000 232 105\n4 3 4 4 6 1 4 3 4 1 4 1 4 2 2 3 2 6 3 2 6 1 1 4 1 2 4 2 3 2 5 2 3 4 3 3 3 2 5 4 2 5 4 2 4 4 4 2 4 1 3 5 4 4 5 3 6 5 3 3 4 4 2 3 3 3 1 4 4 3 2 3 2 5 4 3 2 4 3 1 2 5 6 2 4 6 3 2 2 2 2 2 6 4 4 5 5 1 4 2 5 1 6 4 3 2 3 7 2 3 3 2 4 4 2 3 2 3 3 4 1 3 2 3 2 7 7 3 3 3 4 2 2 3 2 3 4 2 8 3 4 3 3 5 2 3 1 2 6 5 4 2 6 2 3 2 3 4 3 1 2 7 5 3 6 4 1 4 4 4 5 3 2 1 2 3 4 3 2 4 2 2 3 1 2 2 5 1 1 4 1 4 3 5 3 2 3 5 3 4 4 4 4 7 2 3 1 3 3 2 3 2 5 4 1 1 4 4 5 2 4 2 3 4 2 3 1 3 2 4 1 2\n",
            "output": "YES\nn"
        },
        {
            "input": "1000 232 105\n4 3 4 4 6 1 4 3 4 1 4 1 4 2 2 3 2 6 3 2 6 1 1 4 1 2 4 2 3 2 5 2 3 4 3 3 3 2 5 4 2 5 4 2 4 4 4 2 4 1 3 5 4 4 5 3 6 5 3 3 4 4 2 3 3 3 1 4 4 3 2 3 2 5 4 3 2 4 3 1 2 5 6 2 4 6 3 2 2 2 2 2 6 4 4 5 5 1 4 2 5 1 6 4 3 2 3 7 2 3 3 2 4 4 2 3 2 3 3 4 1 3 2 3 2 7 7 3 3 3 4 2 2 3 2 3 4 2 8 3 4 3 3 5 2 3 1 2 6 5 4 2 6 2 3 2 3 4 3 1 2 7 5 3 6 4 1 4 4 4 5 3 2 1 2 3 4 3 2 4 2 2 3 1 2 2 5 1 1 4 1 4 3 5 3 2 3 5 3 4 4 4 4 7 2 3 1 3 3 2 3 2 5 4 1 1 4 4 5 4 4 2 3 4 2 3 1 3 2 4 1 2\n",
            "output": "YES\nn"
        },
        {
            "input": "1000 232 105\n4 3 4 4 6 1 4 3 4 1 4 1 4 2 2 3 2 6 3 2 6 1 1 4 1 2 4 2 3 2 5 2 3 4 3 3 3 2 5 4 2 5 4 2 4 4 4 2 4 1 3 5 4 4 5 3 6 5 3 3 4 4 2 3 3 3 1 4 4 3 2 3 2 5 4 3 2 4 3 1 2 5 6 2 4 6 3 2 2 2 2 2 6 4 4 5 5 1 4 2 5 1 6 4 3 2 3 7 2 3 3 2 4 4 2 3 2 3 3 4 1 3 2 3 2 7 7 3 3 3 4 1 2 3 2 3 4 2 8 3 4 3 3 5 2 3 1 2 6 5 4 2 6 2 3 2 3 4 3 1 2 7 5 3 6 4 1 4 4 4 5 3 2 1 2 3 4 3 2 4 2 2 3 1 2 2 5 1 1 4 1 4 3 5 3 2 3 5 3 4 4 4 4 7 2 3 1 3 3 2 3 2 5 4 1 1 4 4 5 4 4 2 3 4 2 3 1 3 2 4 1 2\n",
            "output": "YES\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 4 4 4 4 5 5 5 5 5 5 6 7 7 7 7 8 8 8 9 9 9 9 10 11 11 11 11 12 13 13 13 13 14 14 15 15 16 16 16 17 17 18 18 18 18 18 18 19 19 19 20 20 21 21 21 21 21 21 22 23 24 24 24 24 25 26 26 27 27 27 27 28 28 29 29 29 30 30 31 31 31 31 31 32 32 33 33 33 34 34 34 34 35 35 35 36 36 36 37 37 37 38 38 39 39 39 39 39 40 40 40 40 41 41 42 42 42 42 42 43 43 43 43 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 49 49 49 49 50 51 51 51 52 52 52 52 52 53 53 53 53 54 54 54 54 55 55 55 55 55 56 56 56 57 57 57 57 57 57 58 58 58 58 58 59 59 59 60 60 60 61 61 61 61 62 62 62 62 63 63 64 64 64 65 65 65 66 66 66 67 68 68 68 68 69 69 69 69 70 70 70 71 71 72 72 72 73 73 74 74 74 74 74 75 75 75 75 76 76 76 77 77 78 78 78 78 79 79 79 80 81 81 82 82 82 82 82 83 83 83 83 83 83 84 84 85 85 85 85 86 86 86 86 86 86 87 87 87 88 88 89 89 90 90 91 91 92 92 93 93 93 93 93 93 94 94 94 94 95 95 95 95 96 96 96 96 96 97 97 97 97 97 98 99 99 99 99 100 100 101 101 101 101 101 102 103 103 103 103 103 103 104 104 104 104 105 105 105 106 106 107 107 107 108 108 108 108 108 108 108 109 109 110 110 110 111 111 111 112 112 113 113 113 113 114 114 114 114 115 115 116 116 116 117 117 118 118 118 119 119 119 120 120 120 120 121 122 122 122 123 123 124 124 124 125 125 126 126 126 126 126 126 126 127 127 127 127 127 127 127 128 128 128 129 129 129 130 130 130 131 131 131 131 132 133 133 134 134 134 135 135 136 136 136 137 137 137 137 138 138 139 139 139 139 139 139 139 139 140 140 140 141 141 141 141 142 142 142 143 143 143 144 144 144 144 144 145 145 146 146 146 147 148 148 149 149 149 149 149 149 150 150 150 150 150 151 151 151 151 152 152 153 153 153 153 153 153 154 154 155 155 155 156 156 157 157 157 158 158 158 158 159 159 159 160 161 161 162 162 162 162 162 162 162 163 163 163 163 163 164 164 164 165 165 165 165 165 165 166 166 166 166 167 168 168 168 168 169 169 169 169 170 170 170 170 171 171 171 171 171 172 172 172 173 173 174 175 175 176 176 176 177 177 177 177 178 178 178 179 179 180 180 180 180 181 181 182 182 183 183 183 184 185 185 186 186 187 187 187 187 187 188 189 190 190 190 190 191 192 192 192 192 193 193 193 194 194 194 194 194 195 195 195 196 196 197 197 197 198 198 198 198 198 199 199 199 200 200 200 200 201 201 201 201 202 202 202 202 203 203 203 203 204 204 204 204 204 204 204 205 205 206 206 206 207 208 208 208 209 209 209 210 210 211 211 211 212 212 213 213 213 213 213 214 214 214 214 215 216 217 217 217 217 218 218 218 218 219 219 219 219 219 220 220 220 220 221 221 221 221 222 222 223 223 223 224 224 224 224 225 225 226 226 226 227 228 228 228 229 229 230 230 230 230 231 232 232\n"
        },
        {
            "input": "11 1 2\n2\n",
            "output": "NO\n"
        },
        {
            "input": "5 2 1\n1 0\n",
            "output": "NO\n"
        },
        {
            "input": "8 1 2\n2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 8\n3 6 3 4 3 5 3 10 5 5 3 1 3 8 2 4 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "101 1 49\n3\n",
            "output": "NO\n"
        },
        {
            "input": "7 1 2\n1\n",
            "output": "NO\n"
        },
        {
            "input": "15 3 2\n1 2 1\n",
            "output": "NO\n"
        },
        {
            "input": "1000 11 33\n2 1 3 1 3 1 3 1 3 2 1\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 3\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 2 2 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 2 4 3 4 3 1 6 5 2 3 4 3 3 5 5 2 1 2 2 3 2 2 5 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1001 6 25\n24 19 21 18 28 16\n",
            "output": "NO\n"
        },
        {
            "input": "4 1 1\n1\n",
            "output": "NO\n"
        },
        {
            "input": "12 1 1\n6\n",
            "output": "NO\n"
        },
        {
            "input": "9 3 2\n0 2 1\n",
            "output": "NO\n"
        },
        {
            "input": "15 2 5\n1 0\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n20 13 16 13 41 10 18 21 18 20 20 16 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "12 1 2\n2\n",
            "output": "NO\n"
        },
        {
            "input": "7 2 1\n1 0\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 8\n2 6 3 4 3 5 3 10 5 5 3 1 3 8 2 4 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "111 1 49\n3\n",
            "output": "NO\n"
        },
        {
            "input": "7 1 2\n0\n",
            "output": "NO\n"
        },
        {
            "input": "1000 11 33\n2 1 3 1 3 1 4 1 3 2 1\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 3\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 2 2 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 2 4 3 4 3 1 6 5 2 3 4 3 3 5 5 2 1 2 2 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1001 6 25\n24 19 21 16 28 16\n",
            "output": "NO\n"
        },
        {
            "input": "10 3 2\n0 2 1\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n20 13 16 13 41 10 18 21 18 21 20 16 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "12 1 2\n0\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 6 3 4 3 5 3 10 5 5 3 1 3 8 2 4 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "111 1 49\n6\n",
            "output": "NO\n"
        },
        {
            "input": "1000 11 33\n2 1 3 1 3 1 4 1 6 2 1\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 3\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 2 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 2 4 3 4 3 1 6 5 2 3 4 3 3 5 5 2 1 2 2 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1001 6 10\n24 19 21 16 28 16\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n20 13 10 13 41 10 18 21 18 21 20 16 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 6 3 4 3 5 3 10 5 5 3 1 6 8 2 4 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "111 1 16\n6\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 2 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 2 4 3 4 3 1 6 5 2 3 4 3 3 5 5 2 1 2 2 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n20 13 10 13 41 10 18 21 18 21 20 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 3 4 3 5 3 10 5 5 3 1 6 8 2 4 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "111 1 16\n5\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 2 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 2 4 3 4 3 1 8 5 2 3 4 3 3 5 5 2 1 2 2 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n20 13 10 13 76 10 18 21 18 21 20 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 3 4 3 5 6 10 5 5 3 1 6 8 2 4 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "111 1 16\n4\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 2 4 3 4 3 1 8 5 2 3 4 3 3 5 5 2 1 2 2 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 13 76 10 18 21 18 21 20 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 3 4 3 5 6 10 5 5 3 1 4 8 2 4 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "111 1 16\n1\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 3 4 3 1 8 5 2 3 4 3 3 5 5 2 1 2 2 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 13 76 10 18 21 18 22 20 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 3 4 3 5 6 10 5 5 3 1 4 8 2 2 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 0 4 3 1 8 5 2 3 4 3 3 5 5 2 1 2 2 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 3 76 10 18 21 18 22 20 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 3 4 3 5 6 10 5 5 3 1 3 8 2 2 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 3 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 0 4 3 1 8 5 2 3 4 3 3 5 5 2 1 2 0 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 0 76 10 18 21 18 22 20 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 1 4 3 5 6 10 5 5 3 1 3 8 2 2 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 1 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 0 4 3 1 8 5 2 3 4 3 3 5 5 2 1 2 0 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 0 76 10 18 21 18 22 16 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 1 4 3 5 6 10 5 5 3 0 3 8 2 2 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 1 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 0 4 3 1 1 5 2 3 4 3 3 5 5 2 1 2 0 3 2 2 9 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 0 76 13 18 21 18 22 16 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 0 4 3 5 6 10 5 5 3 0 3 8 2 2 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 1 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 0 4 3 1 1 5 2 3 4 3 3 5 5 2 1 2 0 3 2 2 10 1 3 5 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 0 76 13 18 25 18 22 16 25 19 16 11 22\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 0 4 3 5 6 10 5 5 3 0 3 8 2 3 4 5 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 1 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 0 4 3 1 1 5 2 3 4 3 3 5 5 2 1 2 0 3 2 2 10 1 3 10 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 0 76 13 18 25 18 22 16 25 19 16 11 32\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 0 4 3 5 6 10 5 5 3 0 3 8 2 3 4 5 1 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 1 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 2 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 0 4 3 1 1 5 2 5 4 3 3 5 5 2 1 2 0 3 2 2 10 1 3 10 5 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 16 2\n32 13 10 0 46 13 18 25 18 22 16 25 19 16 11 32\n",
            "output": "NO\n"
        },
        {
            "input": "1000 20 2\n2 5 0 4 3 5 6 10 5 5 3 0 3 9 2 3 4 5 1 2\n",
            "output": "NO\n"
        },
        {
            "input": "1000 77 2\n2 3 2 1 3 1 3 3 4 5 4 3 3 1 3 5 1 4 3 2 5 3 3 3 1 4 4 3 1 2 3 4 1 1 1 3 3 2 4 3 1 5 1 3 4 4 2 3 3 4 0 4 3 1 1 5 2 5 4 3 3 5 5 2 1 2 0 3 2 2 10 1 3 10 5 4 2\n",
            "output": "NO\n"
        }
    ],
    "solution": [
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\n\tprivate static final long M = 1000000007L;\n\n\tvoid solve() {\n\t\tStringBuffer sb = new StringBuffer();\n\t\tint len = ni();\n\t\tint n = ni();\n\t\tint step = ni() - 1;\n\t\tint a[] = na(n);\n//\t\ttr(len, step, a);\n\t\tint pre[] = a.clone();\n\t\tfor (int i = n - 2; i >= 0; i--)\n\t\t\tpre[i] = pre[i + 1] + a[i];\n\t\tif (pre[0] + (n + 1) * step < len) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tsb.append(\"YES\").append(System.lineSeparator());\n//\t\ttr(pre);\n\t\tint l = 0;\n\t\tint ans[] = new int[len];\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tint r = Math.min(l + step, len - pre[i - 1]);\n//\t\t\ttr(i, l, r);\n\t\t\tfor (int j = 0; j < a[i - 1]; j++)\n\t\t\t\tans[r++] = i;\n\t\t\tl = r;\n\t\t}\n\t\tfor (int i : ans)\n\t\t\tsb.append(i).append(' ');\n\t\tsb.append(System.lineSeparator());\n\t\tSystem.out.println(sb);\n\t}\n\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != '\n\t\t\t\t\t\t\t\t\t// ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n) {\n\t\t\tif (!(isSpaceChar(b)))\n\t\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate int[][] na(int n, int m) {\n\t\tint[][] a = new int[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = na(m);\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nimport sys\ninput=sys.stdin.readline\nn,m,d=map(int,input().split())\nc=[int(i) for i in input().split()]\nind=defaultdict(int)\nsuff=n\nfor i in range(m-1,-1,-1):\n    suff-=c[i]\n    ind[i+1]=suff+1\nindl=[]\nfor i in ind:\n    indl.append(i)\nindl.reverse()\ncur=0\nfor i in indl:\n    if ind[i]-cur>d:\n        ind[i]=cur+d\n        cur+=d\n        cur+=c[i-1]-1\n    else:\n        cur=ind[i]+c[i-1]-1\n#print(ind)\nif n+1-cur>d:\n    print('NO')\nelse:\n    print('YES')\n    ans=[0]*(n)\n    for i in range(1,m+1):\n        for j in range(ind[i]-1,min(n,ind[i]+c[i-1]-1)):\n            ans[j]=i\n    print(*ans)\n\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, m, d, a[1005], c[1005], i, j, k, l, sum;\nint main() {\n  for (scanf(\"%d%d%d\", &n, &m, &d), i = 0; i < m; i++)\n    scanf(\"%d\", &c[i]), sum += c[i];\n  if (sum + (d - 1) * (m + 1) < n || sum > n) {\n    printf(\"NO\\n\");\n    return 0;\n  } else\n    printf(\"YES\\n\");\n  for (i = j = 0; i < n; i++) {\n    bool b = false;\n    if (sum + j >= n) {\n      i--;\n      break;\n    }\n    j += d - 1;\n    sum -= c[i];\n    for (k = j; k - j < c[i]; k++) {\n      if (k + sum >= n) {\n        for (k = j; k + sum < n; k++) a[k] = 0;\n        i--;\n        b = true;\n        break;\n      }\n      a[k] = i + 1;\n    }\n    j = k;\n    if (b) break;\n  }\n  k = j = n - 1;\n  for (l = m - 1; l > i; l--) {\n    for (k = j; j - k < c[l]; k--) a[k] = l + 1;\n    j = k;\n  }\n  for (i = 0; i < n; i++) printf(\"%d \", a[i]);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstd::mt19937 rng(\n    (int)std::chrono::steady_clock::now().time_since_epoch().count());\nconst double EPS = 1e-9;\nconst double PI = acos(-1);\nconst int MOD = 1000000007;\nconst int MAXN = 10010;\nint ans[MAXN];\nint c[MAXN];\nint n, m, d;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> n >> m >> d;\n  int sum = 0;\n  for (int i = 1; i <= m; i++) {\n    cin >> c[i];\n    sum += c[i];\n  }\n  int i = 0, j = 1;\n  int space = d - 1;\n  int can = n - sum;\n  while (i < n and (j <= m or (space > 0 and can > 0))) {\n    if (space > 0 and can > 0) {\n      ans[i++] = 0;\n      space--;\n      can--;\n    } else if (c[j] > 0) {\n      ans[i++] = j;\n      c[j]--;\n    } else {\n      space = d - 1;\n      j++;\n    }\n  }\n  if (i < n) {\n    cout << \"NO\" << '\\n';\n    return 0;\n  }\n  cout << \"YES\" << '\\n';\n  for (int i = 0; i < n; i++) cout << ans[i] << \" \";\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int,input().strip().split())\ncs = [int(i) for i in input().strip().split()]\nriver = [0 for i in range(n + 2)]\nstand = 0;p_index = 0;out = False\nwhile p_index < len(cs):\n    if stand + d > n:\n        p_index -= 1\n        break\n    for i in range(stand + d,stand + d + cs[p_index]):\n        if i > n:\n            out = True\n            break\n        river[i] = p_index + 1\n        stand = i\n    if out:\n        p_index -= 1\n        break\n    p_index += 1\n\nif stand + d <= n:\n    print('no')\nelse:\n    pops = [i for i in range(p_index + 1, len(cs))]\n    #print(pops)\n    a_index = n\n    i = len(cs) - 1\n    if p_index == -1:\n        i = 0\n        a = 1\n        while i < len(cs):\n            for j in range(a,a + cs[i]):\n                river[j] = i + 1\n            \n            a += cs[i]\n            i += 1\n    else:\n        #print(river[1:-1],p_index)\n        need = False\n        while pops != []:\n            to_pop = pops.pop()\n            #print(to_pop)\n            for j in range(a_index, a_index - cs[to_pop], -1):\n                if river[j] != 0 and river[j] != i + 1:\n                    if river[j] - 1 not in pops:\n                        pops = [river[j] - 1] + pops\n                river[j] = to_pop + 1\n            a_index -= cs[to_pop]\n           \n            \n    print('yes')\n    print(' '.join(str(i) for i in river[1:-1]))\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = [0] * (m + 1)\nb[-1] = n - sum(a)\nfor i in range(m):\n    for j in range(d - 1):\n        if b[-1] == 0:\n            break\n        b[-1] -= 1\n        b[i] += 1\n\nif b[-1] >= d:\n    print('NO')\n    exit(0)\n\nans = []\nfor i in range(m):\n    for j in range(b[i]):\n        ans.append(0)\n    for j in range(a[i]):\n        ans.append(i + 1)\nfor j in range(b[-1]):\n    ans.append(0)\nprint('YES')\nprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\nisc = []\ne = n\n\nfor i in range(m-1, -1, -1):\n    s = e-c[i]+1\n    isc.append((i+1, s, c[i]))\n    e = s-1\n\nisc = isc[::-1]\ncur_pos = 0\nans = [0] * n\n\nfor i, s, c in isc:\n    if s-cur_pos > d:\n        s = cur_pos+d\n    \n    for j in range(s, s+c):\n        ans[j-1] = i\n    \n    cur_pos = s+c-1\n\nif n+1-cur_pos > d:\n    print('NO')\nelse:\n    print('YES')\n    print(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 1005;\nint c[MAX_N];\nint rv[MAX_N];\nint main() {\n  int n, m, d, suml;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) cin >> c[i];\n  for (int i = m, pos = n; i >= 1; i--) {\n    for (int j = 0; j < c[i]; j++) {\n      rv[pos - j] = i;\n    }\n    pos -= c[i];\n  }\n  int pos = 0, flag = false;\n  for (int i = 1; i <= m; i++) {\n    pos += d;\n    if (pos > n || rv[pos]) {\n      flag = true;\n      break;\n    }\n    int plat = pos + 1;\n    while (!rv[plat]) plat++;\n    int len = c[rv[plat]];\n    for (int j = 0; j < len; j++) {\n      swap(rv[pos + j], rv[plat + j]);\n    }\n    pos += len - 1;\n  }\n  if (pos + d > n || flag) {\n    cout << \"YES\\n\";\n    cout << rv[1];\n    for (int i = 2; i <= n; i++) cout << ' ' << rv[i];\n  } else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ndef I():\n    return sys.stdin.readline().rstrip()\n\nn, m, d = map( int, I().split() )\nl = list( map( int, I().split() ) )\n\nif (m + 1) * (d - 1) + sum( l ) >= n:\n    print( \"YES\" )\n    td = n - sum( l )\n    ans = []\n    for i, il in enumerate( l ):\n        di = min( td, d - 1 )\n        td -= di\n        ans.extend( [ 0 ] * di )\n        ans.extend( [ i + 1 ] * il )\n    ans.extend( [ 0 ] * td )\n    print( *ans )\nelse:\n    print( \"NO\" )\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n        int sum = 0;\n        int[] c = new int[m];\n        for (int i = 0; i < m; i++) {\n            c[i] = sc.nextInt();\n            sum += c[i];\n        }\n        if (sum > n || (m + 1) * (d - 1) + sum < n) {\n            System.out.println(\"NO\");\n        } else {\n            System.out.println(\"YES\");\n            int target = n - sum;\n            int[] arr = new int[n];\n            int index = 0;\n            int mIndex = 0;\n            while (mIndex < c.length) {\n                if (target - d - 1 >= 0) {\n                    index += d - 1;\n                    target -= d - 1;\n                } else {\n                    index += Math.max(0, target - d + 1);\n                    target = 0;\n                }\n                for (int i = 0; i < c[mIndex]; i++) {\n                    arr[index++] = mIndex + 1;\n                }\n                mIndex++;\n            }\n            for (int i : arr) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d;\nint x[1024];\nint sum;\nint main() {\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; ++i) cin >> x[i];\n  for (int i = 1; i <= m; ++i) sum += d + x[i] - 1;\n  sum += d;\n  if (sum <= n)\n    cout << \"NO\\n\", exit(0);\n  else {\n    cout << \"YES\\n\";\n    int tot = 0;\n    for (int i = 1; i <= m; ++i) tot += x[i];\n    int sum0 = n - tot;\n    for (int i = 1; i <= m; ++i) {\n      for (int j = 1; j < d; ++j) {\n        if (sum0 <= 0) break;\n        cout << \"0 \";\n        sum0--;\n      }\n      for (int j = 1; j <= x[i]; ++j) cout << i << \" \";\n    }\n    for (int i = 1; i <= sum0; ++i) cout << \"0 \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\nimport static java.util.Comparator.*;\n\npublic class Main {\n    FastScanner in;\n    PrintWriter out;\n    ArrayList<Integer>[] graph;\n    ArrayList<GraphPair>[] weightedGraph;\n    long mod = (long) 1e9 + 7; // 998_244_353L || (long) 1e9 + 9\n    boolean multitests = false;\n\n    private void solve() throws IOException {\n        // solveA();\n        // solveB();\n        solveC();\n        // solveD();\n        // solveE();\n        // solveF();\n    }\n\n    private void solveA() throws IOException {\n        long a = in.nextLong(), b = in.nextLong(), n = in.nextLong(), S = in.nextLong();\n        out.println(S % n <= b && n * a + b >= S ? \"YES\" : \"NO\");\n    }\n\n    private void solveB() throws IOException {\n        int n = in.nextInt();\n        int[] p = in.nextIntArray(n);\n\n        boolean[] used = new boolean[n + 1];\n        for (int l = 0, r = 0, next = 1; l < n; l = r) {\n            while (p[r] != next)\n                r++;\n\n            if (l == r) {\n                used[next++] = true;\n                r++;\n            } else {\n                for (int i = r; i > l; i--)\n                    p[i] = p[i - 1];\n                p[l] = next++;\n                for (int i = l; i < r; i++)\n                    used[p[i]] = true;\n            }\n            while (next <= n && used[next])\n                next++;\n        }\n\n        for (int i = 0; i < n; i++)\n            out.print(p[i] + \" \");\n        out.println();\n    }\n\n    private void solveC() throws IOException {\n        int n = in.nextInt(), m = in.nextInt(), d = in.nextInt();\n        int[] c = in.nextIntArray(m);\n        int sum = (int) sumInt(c);\n        if ((d - 1) * (m + 1) + sum >= n) {\n            out.println(\"YES\");\n            int zero = n - sum;\n            for (int i = 0; i < m; i++) {\n                for (int j = 0; j < d - 1 && zero-- > 0; j++)\n                    out.print(\"0 \");\n                for (int j = 0; j < c[i]; j++)\n                    out.print(i + 1 + \" \");\n            }\n            while (zero-- > 0)\n                out.print(\"0 \");\n        } else {\n            out.println(\"NO\");\n        }\n    }\n\n    private void solveD() throws IOException {\n\n    }\n\n    private void solveE() throws IOException {\n\n    }\n\n    private void solveF() throws IOException {\n\n    }\n\n    void shuffleInt(int[] a) {\n        Random random = new Random();\n        for (int i = a.length - 1; i > 0; i--) {\n            int j = random.nextInt(i + 1);\n            int swap = a[j];\n            a[j] = a[i];\n            a[i] = swap;\n        }\n    }\n\n    void shuffleLong(long[] a) {\n        Random random = new Random();\n        for (int i = a.length - 1; i > 0; i--) {\n            int j = random.nextInt(i + 1);\n            long swap = a[j];\n            a[j] = a[i];\n            a[i] = swap;\n        }\n    }\n\n    void reverseInt(int[] a) {\n        for (int i = 0, j = a.length - 1; i < j; i++, j--) {\n            int swap = a[i];\n            a[i] = a[j];\n            a[j] = swap;\n        }\n    }\n\n    void reverseLong(long[] a) {\n        for (int i = 0, j = a.length - 1; i < j; i++, j--) {\n            long swap = a[i];\n            a[i] = a[j];\n            a[j] = swap;\n        }\n    }\n\n    int maxInt(int[] a) {\n        int max = a[0];\n        for (int i = 1; i < a.length; i++)\n            if (max < a[i])\n                max = a[i];\n        return max;\n    }\n\n    long maxLong(long[] a) {\n        long max = a[0];\n        for (int i = 1; i < a.length; i++)\n            if (max < a[i])\n                max = a[i];\n        return max;\n    }\n\n    int minInt(int[] a) {\n        int min = a[0];\n        for (int i = 1; i < a.length; i++)\n            if (min > a[i])\n                min = a[i];\n        return min;\n    }\n\n    long minLong(long[] a) {\n        long min = a[0];\n        for (int i = 1; i < a.length; i++)\n            if (min > a[i])\n                min = a[i];\n        return min;\n    }\n\n    long sumInt(int[] a) {\n        long s = 0;\n        for (int i = 0; i < a.length; i++)\n            s += a[i];\n        return s;\n    }\n\n    long sumLong(long[] a) {\n        long s = 0;\n        for (int i = 0; i < a.length; i++)\n            s += a[i];\n        return s;\n    }\n\n    long gcd(long a, long b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n    long binpowmod(long a, long n) {\n        long res = 1;\n        a %= mod;\n        n %= mod - 1;\n        while (n > 0) {\n            if (n % 2 == 1)\n                res = (res * a) % mod;\n            a = (a * a) % mod;\n            n /= 2;\n        }\n        return res;\n    }\n\n    class GraphPair implements Comparable<GraphPair> {\n        int v;\n        long w;\n\n        GraphPair(int v, long w) {\n            this.v = v;\n            this.w = w;\n        }\n\n        public int compareTo(GraphPair o) {\n            return w != o.w ? Long.compare(w, o.w) : Integer.compare(v, o.v);\n        }\n    }\n\n    ArrayList<Integer>[] createGraph(int n) throws IOException {\n        ArrayList<Integer>[] graph = new ArrayList[n];\n        for (int i = 0; i < n; i++)\n            graph[i] = new ArrayList<>();\n        return graph;\n    }\n\n    ArrayList<GraphPair>[] createWeightedGraph(int n) throws IOException {\n        ArrayList<GraphPair>[] graph = new ArrayList[n];\n        for (int i = 0; i < n; i++)\n            graph[i] = new ArrayList<>();\n        return graph;\n    }\n\n    class FastScanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        FastScanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s), 32768);\n        }\n\n        String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        boolean hasNext() throws IOException {\n            return br.ready() || (st != null && st.hasMoreTokens());\n        }\n\n        int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextIntArray(int n) throws IOException {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = in.nextInt();\n            return a;\n        }\n\n        int[][] nextIntTable(int n, int m) throws IOException {\n            int[][] a = new int[n][m];\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < m; j++)\n                    a[i][j] = in.nextInt();\n            return a;\n        }\n\n        long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        long[] nextLongArray(int n) throws IOException {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = in.nextLong();\n            return a;\n        }\n\n        long[][] nextLongTable(int n, int m) throws IOException {\n            long[][] a = new long[n][m];\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < m; j++)\n                    a[i][j] = in.nextLong();\n            return a;\n        }\n\n        ArrayList<Integer>[] nextGraph(int n, int m, boolean directed) throws IOException {\n            ArrayList<Integer>[] graph = createGraph(n);\n            for (int i = 0; i < m; i++) {\n                int v = in.nextInt() - 1, u = in.nextInt() - 1;\n                graph[v].add(u);\n                if (!directed)\n                    graph[u].add(v);\n            }\n            return graph;\n        }\n\n        ArrayList<GraphPair>[] nextWeightedGraph(int n, int m, boolean directed) throws IOException {\n            ArrayList<GraphPair>[] graph = createWeightedGraph(n);\n            for (int i = 0; i < m; i++) {\n                int v = in.nextInt() - 1, u = in.nextInt() - 1;\n                long w = in.nextLong();\n                graph[v].add(new GraphPair(u, w));\n                if (!directed)\n                    graph[u].add(new GraphPair(v, w));\n            }\n            return graph;\n        }\n\n        double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        boolean hasNextLine() throws IOException {\n            return br.ready();\n        }\n\n    }\n\n    private void run() throws IOException {\n        in = new FastScanner(System.in); // new FastScanner(new FileInputStream(\".in\"));\n        out = new PrintWriter(System.out); // new PrintWriter(new FileOutputStream(\".out\"));\n\n        for (int t = multitests ? in.nextInt() : 1; t-- > 0; )\n            solve();\n\n        out.flush();\n        out.close();\n    }\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "\n\n\nn,m,d = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\narr = [0 for i in range(n+2)]\nindex = 1\ndef count0(arr):\n    counta  = 0\n    for i in range(n,-1,-1):\n        if(arr[i] == 0):\n            counta += 1\n        else:\n            break\n    return counta\nfor i in range(m):\n    for j in range(c[i]):\n        arr[index] = i+1\n        index += 1\ncount_index = 0\nstop_index = 1\ncounta = count0(arr)\nwhile((d<=counta) and count_index<m):\n    ans = [0 for i in range(n+2)]\n    for i in range(stop_index,n+1-counta):\n        ans[i+d-1] = arr[i]\n        arr[i] = 0\n\n    for i in range(stop_index,n+1):\n        arr[i] = ans[i]\n    stop_index += d-1 +c[count_index]\n    count_index += 1\n    counta = count0(arr)\n    #print(counta)\n\nif(count_index > m or counta>=d):\n    print('NO')\n\nelse:\n    print('YES')\n    for i in range(1,n+1):\n        print(arr[i],end= \" \")\n    print('\\n')\n\n        \n    \n        \n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Code2707 {\n\n    public static void main(String args[]){\n         Reader s = new Reader();\n         int n = s.nextInt();\n         int m = s.nextInt();\n         int d = s.nextInt();\n\n         int a[] = new int[m];\n\n         int sum = 0;\n        for (int i = 0; i < m; i++) {\n            a[i] = s.nextInt();\n            sum += a[i];\n        }\n\n        int dif = n - sum;\n\n        StringBuilder sb = new StringBuilder();\n        int index = 0;\n        int c = 0;\n        while (dif > 0){\n            if(c<d-1) {\n                sb.append(0).append(\" \");\n                c++;\n                dif--;\n            }\n            else{\n                c=0;\n                if(index>=m){\n                    break;\n                }\n                for(int i=0;i<a[index];i++){\n                    sb.append(index+1).append(\" \");\n                }\n                index++;\n            }\n\n        }\n\n        if(dif != 0 ){\n            System.out.println(\"NO\");\n            return;\n        }\n\n        for (int i = index; i <m ; i++) {\n            for (int j = 0; j <a[i] ; j++) {\n                sb.append(i+1).append(\" \");\n            }\n        }\n\n        System.out.println(\"YES\");\n        System.out.println(sb);\n\n\n\n    }\n    static class Reader {\n\n        private InputStream mIs;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public Reader() {\n            this(System.in);\n        }\n\n        public Reader(InputStream is) {\n            mIs = is;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = mIs.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = (int)1e9 + 7;\nconst int MOD = (int)998244353;\nconst int INF = (int)1e18;\nconst long long N = 1e5 + 5;\nbool cmp(const pair<long long, long long>& a,\n         const pair<long long, long long>& b) {\n  return a.second < b.second;\n}\nvoid solve() {\n  long long n, m, d;\n  cin >> n >> m >> d;\n  long long a[m], sum = 0;\n  for (long long i = 0; i < m; i++) cin >> a[i], sum += a[i];\n  long long gap = n - sum;\n  m++;\n  long long mxgap = gap / m + (gap % m ? 1 : 0);\n  long long mngap = gap / m;\n  long long h1 = gap % m;\n  m--;\n  long long h2 = gap - h1;\n  if (d <= mxgap) {\n    cout << \"NO\";\n    return;\n  }\n  cout << \"YES\" << '\\n';\n  if (h1) {\n    for (long long i = 0; i < mxgap; i++) cout << 0 << \" \";\n    h1--;\n  } else if (h2) {\n    for (long long i = 0; i < mngap; i++) cout << 0 << \" \";\n    h2--;\n  }\n  long long cnt = 0;\n  for (long long i = 0; i < m; i++) {\n    long long g = a[i];\n    for (long long j = 0; j < g; j++) {\n      cout << i + 1 << \" \";\n      cnt++;\n    }\n    if (h1) {\n      for (long long i = 0; i < mxgap; i++) cout << 0 << \" \";\n      h1--;\n    } else if (h2) {\n      for (long long i = 0; i < mngap; i++) cout << 0 << \" \";\n      h2--;\n    }\n  }\n  return;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class river {\n\tpublic static void main(String[] args) {\n\t\tFS s=new FS();\n\t\tint n=s.nextInt();\n\t\tint numPlatforms=s.nextInt();\n\t\tint jump=s.nextInt();\n\t\t\n\t\tint[] platforms=new int[numPlatforms];\n\t\tArrays.setAll(platforms,i->s.nextInt());\n\t\tArrayList<Integer> out=new ArrayList<>();\n\t\tint pidx=0;\n\t\touter: while(pidx<=numPlatforms) {\n\t\t\tfor(int i=0;i<jump-1;i++) {\n\t\t\t\tout.add(0);\n\t\t\t}\n\t\t\tif(pidx>=numPlatforms)break outer;\n\t\t\tint plen=platforms[pidx];\n\t\t\tfor(int i=0;i<plen;i++) {\n\t\t\t\tout.add(pidx+1);\n\t\t\t}\n\t\t\tpidx++;\n\t\t}\n\t\tif(out.size()<n) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t\tint sum=0;\n\t\tfor(int x:platforms)sum+=x;\n\t\tint num_zeroes_required=n-sum;\n\t\tint numprinted=0;\n\t\tfor(int i=0;i<out.size();i++) {\n\t\t\tif(out.get(i)==0) {\n\t\t\t\tif(numprinted++<num_zeroes_required)System.out.print(\"0 \");\n\t\t\t}else System.out.print(out.get(i)+\" \");\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tstatic String cleanup(int[] platforms, int pidx,String out) {\n\t\twhile(pidx<platforms.length) {\n\t\t\tint plen=platforms[pidx];\n\t\t\tfor(int i=0;i<plen;i++) {\n\t\t\t\tout=out.substring(1,out.length())+(pidx+1);\n\t\t\t}\t\t\t\n\t\t\tpidx++;\n\t\t}\n\t\treturn out;\n\t}\n\t\n\tstatic class FS {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile(!st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(Exception e) {}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "def cross(n, m, d, c):\n    if (m+1)*(d-1) + sum(c) < n:\n        return 'NO'\n    ans = []\n    space = 1\n    space_left = n - sum(c)\n    c_count = 0\n    while space_left:\n        if space < d:\n            ans.append('0')\n            space += 1\n            space_left -= 1\n        else:\n            ans.extend([c_count+1 for i in range(c[c_count])])\n            c_count += 1\n            space = 1\n    while c_count < m:\n        ans.extend([c_count+1 for i in range(c[c_count])])\n        c_count += 1\n    return ('YES', ' '.join([str(i) for i in ans]))\n\n\nif __name__ == '__main__':\n    n, m, d = map(int, input().split())\n    c = list(map(int, input().split()))\n    res = cross(n, m, d, c)\n    if type(res) is tuple:\n        print(res[0])\n        print(res[1])\n    else:\n        print(res)"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\n\tstatic PrintWriter out;\n\tstatic InputReader ir;\n\n\tstatic void solve() {\n\t\tint n = ir.nextInt();\n\t\tint m = ir.nextInt();\n\t\tint d = ir.nextInt();\n\t\tint[] c = ir.nextIntArray(m);\n\t\tint[] res = new int[n + 2];\n\t\tint tot = 1;\n\t\tfor (int i = 0; i < m; i++)\n\t\t\ttot += d + c[i] - 1;\n\t\ttot += d;\n\t\tif (tot < n + 2) {\n\t\t\tout.println(\"NO\");\n\t\t} else {\n\t\t\tint p = (d - 1) * (m + 1) - (tot - n - 2);\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tcur += Math.max(1, Math.min(d - 1, p) + 1);\n\t\t\t\tfor (int j = 0; j < c[i]; j++) {\n\t\t\t\t\tres[cur++] = i + 1;\n\t\t\t\t}\n\t\t\t\tp -= d - 1;\n\t\t\t\tcur--;\n\t\t\t}\n\t\t\tout.println(\"YES\");\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\tout.print(res[i] + \" \");\n\t\t\tout.println();\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tir = new InputReader(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.flush();\n\t}\n\n\tstatic class InputReader {\n\n\t\tprivate InputStream in;\n\t\tprivate byte[] buffer = new byte[1024];\n\t\tprivate int curbuf;\n\t\tprivate int lenbuf;\n\n\t\tpublic InputReader(InputStream in) {\n\t\t\tthis.in = in;\n\t\t\tthis.curbuf = this.lenbuf = 0;\n\t\t}\n\n\t\tpublic boolean hasNextByte() {\n\t\t\tif (curbuf >= lenbuf) {\n\t\t\t\tcurbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate int readByte() {\n\t\t\tif (hasNextByte())\n\t\t\t\treturn buffer[curbuf++];\n\t\t\telse\n\t\t\t\treturn -1;\n\t\t}\n\n\t\tprivate boolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tprivate void skip() {\n\t\t\twhile (hasNextByte() && isSpaceChar(buffer[curbuf]))\n\t\t\t\tcurbuf++;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tskip();\n\t\t\treturn hasNextByte();\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile (!isSpaceChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tint c = readByte();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = readByte();\n\t\t\tboolean minus = false;\n\t\t\tif (c == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tc = readByte();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres = res * 10 + c - '0';\n\t\t\t\tc = readByte();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn (minus) ? -res : res;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tint c = readByte();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = readByte();\n\t\t\tboolean minus = false;\n\t\t\tif (c == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tc = readByte();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres = res * 10 + c - '0';\n\t\t\t\tc = readByte();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn (minus) ? -res : res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic char[][] nextCharMap(int n, int m) {\n\t\t\tchar[][] map = new char[n][m];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next().toCharArray();\n\t\t\treturn map;\n\t\t}\n\t}\n\n\tstatic void tr(Object... o) {\n\t\tout.println(Arrays.deepToString(o));\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\ndef main():\n    n,m,d=map(int,input().split())\n    platforms=list(map(int,input().split()))\n    combined=sum(platforms)\n    \n    pos=0\n\n    p=0\n    result=[0]*n\n    flag=0\n    while pos<n+1 and p<m:\n        flag=0\n        for i in range(pos+1,pos+d+1):\n            pos=i\n            if pos+combined-1==n:\n                flag=1\n                break\n        \n        if flag==0:\n            for i in range(pos,pos+platforms[p]):\n                result[i-1]=p+1\n            pos=pos+platforms[p]-1\n            combined-=platforms[p]\n            p+=1\n            \n            \n        else :\n            for j in range(p,m):\n                for i in range(pos,pos+platforms[j]):\n                    result[i-1]=j+1\n                pos+=platforms[j]\n            break\n        \n    if pos+d>=n+1:\n        print(\"YES\")\n        print(*result,sep=\" \")\n    else :\n        print(\"NO\")\n                \n\n######## Python 2 and 3 footer by Pajenegod and c1729\n\n# Note because cf runs old PyPy3 version which doesn't have the sped up\n# unicode strings, PyPy3 strings will many times be slower than pypy2.\n# There is a way to get around this by using binary strings in PyPy3\n# but its syntax is different which makes it kind of a mess to use.\n\n# So on cf, use PyPy2 for best string performance.\n\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\nimport os, sys\nfrom io import IOBase, BytesIO\n\nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n\n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s:self.buffer.write(s.encode('ascii'))\n            self.read = lambda:self.buffer.read().decode('ascii')\n            self.readline = lambda:self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\n# Cout implemented in Python\nimport sys\nclass ostream:\n    def __lshift__(self,a):\n        sys.stdout.write(str(a))\n        return self\ncout = ostream()\nendl = '\\n'\n\n# Read all remaining integers in stdin, type is given by optional argument, this is fast\ndef readnumbers(zero = 0):\n    conv = ord if py2 else lambda x:x\n    A = []; numb = zero; sign = 1; i = 0; s = sys.stdin.buffer.read()\n    try:\n        while True:\n            if s[i] >= b'0' [0]:\n                numb = 10 * numb + conv(s[i]) - 48\n            elif s[i] == b'-' [0]: sign = -1\n            elif s[i] != b'\\r' [0]:\n                A.append(sign*numb)\n                numb = zero; sign = 1\n            i += 1\n    except:pass\n    if s and s[-1] >= b'0' [0]:\n        A.append(sign*numb)\n    return A\n\nif __name__== \"__main__\":\n  main()"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\nimport java.util.*;\npublic class C1256 {\n    public static void main(String args[])throws IOException\n        {\n            Scanner sc=new Scanner(System.in);\n            int n=sc.nextInt();\n            int m=sc.nextInt();\n            int d=sc.nextInt();\n            int a[]=new int[m+1];\n            int res[]=new int[n+1];\n            int st[]=new int[m+1];\n            int curr=1;\n            for(int i=1;i<=m;i++)\n            {\n                a[i]=sc.nextInt();\n                st[i]=curr;\n                for(int j=curr;j<=curr+a[i]-1;j++)\n                {\n                    res[j]=i;\n                    //System.out.println(j+\" \"+res[j]);\n                }\n                curr=curr+a[i];\n            }\n            int last=n+1;\n            for(int i=m;i>=1;i--)\n            {\n                int end=st[i]+a[i]-1;\n                if(last-end > d)\n                {\n                    int diff=(last-end)-d;\n                    for(int j=st[i];j<=st[i]+diff-1;j++)\n                    {\n                        res[j]=0;\n                    }\n                    for(int j=st[i]+diff;j<=st[i]+diff+a[i]-1;j++)\n                    {\n                        res[j]=i;\n                    }\n                    st[i]=st[i]+diff;\n                    last=st[i];\n                }\n                else\n                    break;\n            }\n            if(st[1]<=d)\n            {\n                System.out.println(\"YES\");\n                for(int j=1;j<=n;j++)\n                {\n                    System.out.print(res[j]+\" \");\n                }\n            }\n            else\n                System.out.println(\"NO\");\n        }\n}"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\n\nlengths = list(map(int, input().split()))\nposes = [n + 1] * (m + 1)\nindex = m - 1\nwhile index >= 0:\n    poses[index] = poses[index + 1] - lengths[index]\n    index -= 1\n\n#print(poses)\n\ncur = 0\nind = 0\nresult = True\nwhile cur < n + 1:\n    if cur + d >= n + 1:\n        break\n    if ind == m:\n        result = False\n        break\n    if cur + d <= poses[ind]:\n        poses[ind] = cur + d\n        cur = cur + d + lengths[ind] - 1\n        ind += 1\n    else:\n        cur = cur + d\n\nif result:\n    print(\"YES\")\n    poses.append(0)\n    lengths.append(0)\n    lengths.append(1)\n    res = []\n    for ind, it in enumerate(poses[:-1]):\n        for _ in range(it - poses[ind - 1] - lengths[ind - 1]):\n            res.append('0')\n        for _ in range(lengths[ind]):\n            res.append(str(ind + 1))\n    print(\" \".join(res))\nelse:\n    print(\"NO\")\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn, m, d = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\ncur = 0\nfor p in range(m):\n    cur += d\n    cur += c[p] - 1\nif cur < n + 1 - d:\n    print('NO')\n    sys.exit()\nres = [0] * n\ncur = n - 1\nfor p in range(m - 1, -1, -1):\n    for j in range(c[p]):\n        res[cur] = p + 1\n        cur -= 1\ncur = 0\nwhile cur < n + 1:\n    cur += d\n    if cur >= n + 1:\n        break\n    if res[cur - 1] == 0:\n        idx = -1\n        for j in range(cur, len(res)):\n            if res[j] != 0:\n                idx = j\n                break\n        cnt = 1\n        for j in range(idx + 1, len(res)):\n            if res[j] == res[idx]:\n                cnt += 1\n        num = res[idx]\n        for j in range(cnt):\n            res[cur + j - 1] = num\n            res[idx + j] = 0\n    while cur < len(res) and res[cur] > 0:\n        cur += 1\nprint(\"YES\")\nprint(' '.join(str(x) for x in res))\n        \n    "
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\n\nn,m,d=list(map(int,input().split())) \narr=list(map(int,input().split())) \ntot=sum(arr)\nres=[0]*n\ngap=1\nptr=0\nj=0\nbool1=True\nwhile(j<n):\n\tif(gap<d and n-(j+1)>=tot):\n\t\tj+=1\n\t\tgap+=1\n\t\tcontinue\n\telse:\n\t\tif(ptr<m):\n\t\t\tfor k in range(j,j+arr[ptr]):\n\t\t\t\tres[k]=(ptr+1)\n\t\t\tgap=1\n\t\t\ttot-=arr[ptr]\n\t\t\tj+=arr[ptr]\n\t\t\t# print(j-1)\n\t\t\tptr+=1\n\t\telse:\n\t\t\tj+=1\n\t\t\tbool1=False\n\t# print(j)\n# print(res,bool1)\nif(bool1==False):\n\tprint(\"NO\")\t\nelse:\n\tprint(\"YES\")\n\ts=\"\"\n\tfor i in res:\n\t\ts=s+str(i)+\" \"\n\ts=s[:-1]\n\tprint(s)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long maxn = 1e4 + 10;\nint a[maxn];\nint main() {\n  int n, m, d, i;\n  cin >> n >> m >> d;\n  for (i = 1; i <= m; i++) cin >> a[i];\n  long long ans = 0;\n  for (i = 1; i <= m; i++) {\n    ans = ans + d + a[i] - 1;\n  }\n  ans = ans + d;\n  if (ans < n + 1)\n    cout << \"NO\" << endl;\n  else if (ans == n + 1) {\n    cout << \"YES\" << endl;\n    int j;\n    for (i = 1; i <= m; i++) {\n      for (j = 1; j < d; j++) cout << 0 << \" \";\n      for (j = 1; j <= a[i]; j++) cout << i << \" \";\n    }\n    for (j = 1; j < d; j++) cout << 0 << \" \";\n    cout << endl;\n  } else {\n    cout << \"YES\" << endl;\n    int c = ans - (n + 1);\n    int cc = c % (d - 1);\n    c = c / (d - 1);\n    int t = 0, j;\n    for (i = 1; i <= m; i++) {\n      t++;\n      if (t > c + 1) {\n        for (j = 1; j < d; j++) cout << 0 << \" \";\n      } else if (t == c + 1) {\n        for (j = 1; j < d - cc; j++) cout << 0 << \" \";\n      }\n      for (j = 1; j <= a[i]; j++) cout << i << \" \";\n    }\n    t++;\n    if (t == c + 1) {\n      for (j = 1; j < d - cc; j++) cout << 0 << \" \";\n    } else if (t > c + 1) {\n      for (j = 1; j < d; j++) cout << 0 << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpl_str(): return list(sys.stdin.readline().split())\n\nN,M,d = inpl()\nCC = inpl()\n\nif sum(CC) + (d-1)*(M+1) < N:\n    print(\"NO\")\nelse:\n    x = 0\n    ans = [0]*(d-1)\n    i = 0\n    for i in range(M):\n        ans += [i+1] * CC[i]\n        ans += [0] * (d-1)\n\n    L = len(ans) - N\n    ans2 = []\n    for a in ans:\n        if a == 0 and L > 0:\n            L -= 1\n        else:\n            ans2.append(a)\n\n    print(\"YES\")\n    print(\" \".join(map(str,ans2)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct custom_hash {\n  static uint64_t splitmix64(uint64_t x) {\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM =\n        chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\nvoid debug() { cout << endl; }\ntemplate <class T1, class... Types>\nvoid debug(T1 e1, Types... e2) {\n  cout << e1 << \" \";\n  debug(e2...);\n}\ntemplate <class T>\nvoid displayvector(vector<T> v) {\n  for (int i = 0; i < v.size(); i++) {\n    cout << v[i] << \" \";\n  }\n  cout << \"\\n\";\n}\ntemplate <class T>\nvoid displayarray(T *v, int n) {\n  for (int i = 0; i < n; i++) {\n    cout << v[i] << \" \";\n  }\n  cout << \"\\n\";\n}\ntemplate <class T>\nint sizeofarr(T *v) {\n  return sizeof(v) / sizeof(T);\n}\nsigned main(int argc, char **argv) {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n, m, d;\n  cin >> n >> m >> d;\n  long long int temp = n;\n  vector<int> arr(m);\n  vector<int> ans(n);\n  for (int i = 0; i < m; i++) cin >> arr[i];\n  vector<int> prefixsum(m);\n  prefixsum[0] = arr[0];\n  for (int i = 1; i < arr.size(); i++) prefixsum[i] = prefixsum[i - 1] + arr[i];\n  long long int standing = n;\n  for (long long int i = arr.size() - 1; i >= 0; i--) {\n    n = n - d - arr[i] + 1;\n  }\n  n -= d - 1;\n  if (n > 0) {\n    cout << \"NO\\n\";\n    return 0;\n  }\n  if (d >= temp) {\n    long long int v = 0;\n    for (int i = 0; i < m; i++) {\n      for (int u = 0; u < arr[i]; u++) {\n        ans[v] = i + 1;\n        v++;\n      }\n    }\n    cout << \"YES\\n\";\n    displayvector(ans);\n    return 0;\n  }\n  standing = temp;\n  for (long long int i = arr.size() - 1; i >= 0; i--) {\n    long long int jump = 0;\n    for (int j = 1; j <= d; j++) {\n      if (standing - j + 1 >= prefixsum[i]) jump = j;\n    }\n    for (int k = standing - jump; k > standing - jump - arr[i]; k--)\n      ans[k] = i + 1;\n    standing = standing - jump - arr[i] + 1;\n  }\n  cout << \"YES\\n\";\n  displayvector(ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, k;\nstring s;\nmap<int, int> vis;\nqueue<int> q;\nvoid solve() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int c[m];\n  for (int i = 0; i < m; i++) cin >> c[i];\n  int cur = d;\n  int i = 0;\n  vector<int> ans(n + 1, 0);\n  int mm = m;\n  bool mid = false;\n  while (cur <= n) {\n    if (i == m) {\n      cout << \"NO\" << '\\n';\n      return;\n    }\n    int co = c[i];\n    for (int j = cur; j < cur + c[i] && j <= n; j++, co--) {\n      ans[j] = i + 1;\n    }\n    if (co > 0) {\n      mid = true;\n      mm = i + 1;\n    }\n    cur += (d + c[i] - 1);\n    i++;\n  }\n  if (!mid) mm = i + 1;\n  if (ans[n] == 0)\n    for (i = n; i >= 0; i--) {\n      if (ans[i] == 0) continue;\n      if (ans[i] == m) {\n        cout << \"YES\\n\";\n        for (int i = 1; i < n + 1; i++) cout << ans[i] << ' ';\n        return;\n      }\n      if (ans[i] != m) break;\n    }\n  i = n;\n  int last = n;\n  for (int j = m; j >= mm; j--) {\n    for (int co = c[j - 1]; last > 0 && co > 0; last--, co--) {\n      if (ans[last] != 0) {\n        mm = min(mm, ans[last]);\n      }\n      ans[last] = j;\n    }\n  }\n  cout << \"YES\\n\";\n  for (int i = 1; i < n + 1; i++) cout << ans[i] << ' ';\n}\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = [int(i) for i in input().split()]\ndd = [int(i) for i in input().split()]\nind = [0]*m\nfor i in range(1, m):\n    ind[i] = ind[i-1] + dd[i-1]\n\nend = n\nfor i in range(m-1, -1, -1):\n    lowind = end - dd[i] - d + 1\n    if lowind <= ind[i]:\n        break\n    ind[i] = lowind\n    end = lowind\n\n# print(ind)\nif ind[0] >= d:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    ans = []\n    index = 0\n    pind = 0\n    while index < n:\n        if pind < m and index == ind[pind]:\n            k = dd[pind]\n            pind += 1\n            index += k\n            ans += [pind]*k\n        else:\n            ans.append(0)\n            index += 1\n    print(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint sum = 0;\nint c[200001];\nint n, m, d;\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &d);\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &c[i]);\n    sum += c[i];\n  }\n  if (sum + 1LL * (d - 1) * (m + 1) < n)\n    printf(\"NO\\n\");\n  else {\n    printf(\"YES\\n\");\n    int res = n - sum + 1;\n    for (int i = 1; i <= m + 1; i++) {\n      int tmp = min(res, d);\n      res -= tmp - 1;\n      for (int j = 1; j <= tmp - 1; j++) printf(\"0 \");\n      for (int j = 1; j <= c[i]; j++) printf(\"%d \", i);\n    }\n    puts(\"\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.OutputStreamWriter;\nimport java.util.Scanner;\n\npublic class TaskA {\n\tpublic static void main(String[] args) {\n\t\tScanner s = new Scanner(System.in);\n\t\tint n = s.nextInt();\n\t\tint m = s.nextInt();\n\t\tint d = s.nextInt();\t\t\n\t\t\n\t\tBufferedWriter br = new BufferedWriter(new OutputStreamWriter(System.out));\n\t\t\n\t\tint[] tiles = new int[m];\n\t\t\n\t\tint total = 0;\n\t\t\n\t\tfor(int i=0;i<m;i++) {\n\t\t\ttiles[i] = s.nextInt();\n\t\t\ttotal += tiles[i];\n\t\t}\n\t\t\n\t\tint[] answer = new int[n];\n\t\t\n\t\tint tile = m;\n\t\tint goal = n;\n\t\tint last = total-1;\n\t\t\n\t\twhile(tile > 0) {\n\t\t\tif(last + d >= goal) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i=goal-d-tiles[tile-1]+1;i <= goal-d;i++) {\n\t\t\t\t//System.out.println(i);\n\t\t\t\tanswer[i] = tile;\n\t\t\t}\n\t\t\tgoal = goal-d-tiles[tile-1]+1;\n\t\t\tlast -= tiles[tile-1];\n\t\t\ttile = tile-1;\n\t\t\t\n\t\t}\n\t\t\n\t\tint index = 0;\n\t\t\n\t\tif(last + d >= goal) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tfor(int x=0;x<tile;x++) {\n\t\t\t\tfor(int i=0;i<tiles[x];i++) {\n\t\t\t\t\tanswer[index] = x+1;\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tSystem.out.print(answer[i] + \" \");\n\t\t\t\t\n\t\t\t}\n\t\t} else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t\t\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n, m, d;\n  cin >> n >> m >> d;\n  int a[m], sum = 0;\n  for (int i = 0; i < m; i++) cin >> a[i], sum += a[i];\n  if ((m + 1) * (d - 1) + sum < n)\n    cout << \"NO\" << endl;\n  else {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < m; i++) {\n      if (sum == n) {\n        for (int j = 0; j < a[i]; j++) cout << i + 1 << \" \";\n      } else {\n        if (n - sum >= d - 1) {\n          for (int j = 0; j < d - 1; j++) cout << \"0 \";\n          sum += d - 1;\n        } else {\n          for (int j = 0; j < n - sum; j++) cout << \"0 \";\n          sum = n;\n        }\n        for (int j = 0; j < a[i]; j++) cout << i + 1 << \" \";\n      }\n    }\n    for (int j = 0; j < n - sum; j++) cout << \"0 \";\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d, sum = 0, b = 0, c = 1, e = 0, f = 0;\n  cin >> n >> m >> d;\n  int a[m];\n  for (int i = 0; i < m; i++) {\n    cin >> a[i];\n    sum = sum + a[i];\n  }\n  if ((m + 1) * (d - 1) + sum < n) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < n; i++) {\n      if (f == n - sum) {\n        e = i;\n        break;\n      }\n      if (b == d - 1) {\n        cout << c << \" \";\n        a[c - 1]--;\n        if (a[c - 1] == 0) {\n          b = 0;\n          c++;\n        }\n      } else {\n        cout << \"0\"\n             << \" \";\n        b++;\n        f++;\n      }\n    }\n    if (c <= m) {\n      for (int i = e; i < n; i++) {\n        cout << c << \" \";\n        a[c - 1]--;\n        if (a[c - 1] == 0) {\n          c++;\n        }\n      }\n      cout << endl;\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\n\ntot = sum(c)\nmax = d-1\nfor i in c:\n    max+=d-1+i\nif(max>=n):\n    z = n-tot\n    tz = int(z/(len(c)+1))\n    xc = z-(len(c)+1)*tz\n    seq = [0]*tz\n    if(xc>0):\n        seq += [0]\n        xc-=1\n    for i in range(1,len(c)+1):\n        seq +=[i]*c[i-1]\n        seq += [0]*tz\n        if(xc>0):\n            seq += [0]\n            xc-=1\n    print(\"YES\")\n    print(\" \".join([str(x) for x in seq]))\nelse:\n    print(\"NO\")"
        },
        {
            "language": 3,
            "solution": " \ndef nextP(n,l,lastPos,posl):\n\n    if n-(lastPos) == sum(l[posl:]) or n - (lastPos + d) < sum(l[posl+1:]) :\n        #if the remaining positions of the river is eqaul \n        #to the length of the planks or \n        # the remaining planks won't fit if the next plank \n        # is  placed with d-1 space in between them then no space is given for the rest of the planks\n        return 0\n    else:\n        return d-1\n        #the above condition is not true means max space \n        # which allows d jumping forward is given which would be d - 1\n    \n\ndef find(n,m,d,l):\n    river = [0 for i in range(n)] # all the positions of the river\n    res  = -2 # initalized to a number which would not affect the if condition at the end of this function\n    \n    \n    j = 0\n    posl = 0 \n    z = 1\n    posr = 0 \n\n    while posl < m:\n \n        res = nextP(n,l,posr,posl)\n       \n        \n        \n        j = posr+res\n        lim = j+ l[posl]\n        while j < lim:\n            river[j] = z\n            j += 1\n        z += 1\n        \n        posr += res + l[posl]\n \n        if posr >= n:\n            break\n        posl +=1\n    #end of while loop\n\n\n    if n - (posr) >= d: # if the spaces remaining after placing all the planks is greater than the jump distance.\n        print(\"No\")\n    elif posr > n:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n        for i in range(n):\n            print(river[i],end = \" \")\n \nn,m,d = map(int,input().split())\nl = [int(i) for i in input().split()]\nfind(n,m,d,l)"
        },
        {
            "language": 1,
            "solution": "import sys\nrange = xrange\ninput = raw_input\nn,m,d = [int(x) for x in input().split()]\nC = [int(x) for x in input().split()]\n\nfree = (d - 1) * (m + 1)\n\nif sum(C) + free < n:\n    print 'NO'\n    sys.exit()\n\nextra = n - sum(C)\n\nplace = []\nx = 1\nfor i in range(m):\n    t = min(d-1,extra)\n    x += t\n    extra -= t\n\n    place.append(x)\n    x += C[i]\n\n\npos = [0]*n\nfor i in range(m):\n    for j in range(place[i], place[i] + C[i]):\n        pos[j - 1] = i + 1\n\nprint 'YES'\nprint ' '.join(str(x) for x in pos)\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.*;\nimport java.io.*;\nimport java.util.*;\n\npublic class Abc {\n    public static void main(String[] args) throws Exception {\n        FastReader sc = new FastReader();\n        int n=sc.nextInt(),m=sc.nextInt(),d=sc.nextInt();\n        int c[]=new int[m+1];\n        int sum[]=new int[m+1];\n        for (int i=1;i<=m;i++){\n            c[i]=sc.nextInt();\n            sum[i]=c[i];\n            sum[i]+=sum[i-1];\n        }\n        boolean ok=false;\n        int tar=n+1;\n        int ans[]=new int[n+2];\n        for (int i=m;i>=0;i--){\n            if (sum[i]+d>=tar){\n                ok=true;\n                int in=1;\n                for (int j=1;j<=i;j++){\n                    for (int k=1;k<=c[j];k++){\n                        ans[in++]=j;\n                    }\n                }\n                break;\n            }else {\n                for (int j=tar-d;j>=tar-d-c[i]+1;j--){\n                    ans[j]=i;\n                }\n                tar=tar-d-c[i]+1;\n            }\n        }\n        if (!ok) System.out.println(\"NO\");\n        else {\n            System.out.println(\"YES\");\n            StringBuilder sb=new StringBuilder();\n            for (int i=1;i<=n;i++){\n                sb.append(ans[i]+\" \");\n            }\n            System.out.println(sb);\n        }\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1005;\nint main() {\n  int n, m, d;\n  int a[N] = {0}, b[N] = {0}, c[N] = {0}, s[N] = {0};\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &c[i]);\n    b[i] = b[i - 1] + c[i];\n  }\n  int lst = d;\n  for (int i = 1; i <= m; i++) {\n    int fir = n + 1 - (b[m] - b[i - 1]);\n    s[i] = min(fir, lst);\n    lst = s[i] + c[i] + d - 1;\n  }\n  if (lst <= n) {\n    printf(\"NO\\n\");\n  } else {\n    printf(\"YES\\n\");\n    for (int i = 1; i <= m; i++)\n      for (int j = 0; j < c[i]; j++) a[s[i] + j] = i;\n    for (int i = 1; i <= n; i++) {\n      printf(\"%d\", a[i]);\n      if (i != n)\n        printf(\" \");\n      else {\n        printf(\"\\n\");\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n  private static void execute(ContestReader reader, PrintWriter out) {\n    int n = reader.nextInt();\n    int m = reader.nextInt();\n    int d = reader.nextInt();\n    int[] cs = reader.nextIntArray(m);\n    for (String line : new Solver(n, m, d, cs).solve()) {\n      out.println(line);\n    }\n  }\n  \n  public static void main(String[] args) {\n    ContestReader reader = new ContestReader(System.in);\n    PrintWriter out = new PrintWriter(System.out);\n    execute(reader, out);\n    out.flush();\n  }\n}\n\nclass Solver {\n  final int n, m, d;\n  final int[] cs;\n  \n  Solver(int n, int m, int d, int[] cs) {\n    this.n = n;\n    this.m = m;\n    this.d = d;\n    this.cs = cs;\n  }\n  \n  public List<String> solve() {\n    int sumC = 0;\n    for (int c : cs) {\n      sumC += c;\n    }\n    int countWater = n - sumC;\n    int maxJump = countWater / (m + 1);\n    if (countWater % (m + 1) != 0) {\n      maxJump++;\n    }\n    if (maxJump > d - 1) {\n      return Arrays.asList(\"NO\");\n    }\n    \n    \n    List<Integer> waters = new ArrayList<>();\n    for (int i = 0; i <= m; i++) {\n      waters.add(countWater / (m + 1) + (i < countWater % (m + 1) ? 1 : 0));\n    }\n    \n    List<Integer> assignment = new ArrayList<>();\n    for (int i = 0; true; i++) {\n      for (int j = 0; j < waters.get(i); j++) {\n        assignment.add(0);\n      }\n      if (i == m) {\n        break;\n      }\n      for (int j = 0; j < cs[i]; j++) {\n        assignment.add(i + 1);\n      }\n    }\n    \n    StringBuffer sb = new StringBuffer();\n    sb.append(assignment.get(0));\n    for (int i = 1; i < assignment.size(); i++) {\n      sb.append(\" \");\n      sb.append(assignment.get(i));\n    }\n    return Arrays.asList(\"YES\", sb.toString());\n  }\n}\n\nclass ContestReader {\n  private BufferedReader reader;\n  private StringTokenizer tokenizer;\n  \n  ContestReader(InputStream in) {\n    reader = new BufferedReader(new InputStreamReader(in));\n  }\n  \n  public String next() {\n    while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n      try {\n        tokenizer = new java.util.StringTokenizer(reader.readLine());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return tokenizer.nextToken();\n  }\n  \n  public int nextInt() {\n    return Integer.parseInt(next());\n  }\n  \n  public long nextLong() {\n    return Long.parseLong(next());\n  }\n  \n  public double nextDouble() {\n    return Double.parseDouble(next());\n  }\n  \n  public String[] nextArray(int n) {\n    String[] array = new String[n];\n    for (int i = 0; i < n; i++) {\n      array[i] = next();\n    }\n    return array;\n  }\n  \n  public int[] nextIntArray(int n) {\n    int[] array = new int[n];\n    for (int i = 0; i < n; i++) {\n      array[i] = nextInt();\n    }\n    return array;\n  }\n  \n  public long[] nextLongArray(int n) {\n    long[] array = new long[n];\n    for (int i = 0; i < n; i++) {\n      array[i] = nextLong();\n    }\n    return array;\n  }\n  \n  public double[] nextDoubleArray(int n) {\n    double[] array = new double[n];\n    for (int i = 0; i < n; i++) {\n      array[i] = nextDouble();\n    }\n    return array;\n  }\n  \n  public int[][] nextIntMatrix(int n, int m) {\n    int[][] matrix = new int[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        matrix[i][j] = nextInt();\n      }\n    }\n    return matrix;\n  }\n  \n  public long[][] nextLongMatrix(int n, int m) {\n    long[][] matrix = new long[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        matrix[i][j] = nextLong();\n      }\n    }\n    return matrix;\n  }\n  \n  public double[][] nextDoubleMatrix(int n, int m) {\n    double[][] matrix = new double[n][m];\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < m; j++) {\n        matrix[i][j] = nextDouble();\n      }\n    }\n    return matrix;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "//package com.company;\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n//****Use Integer Wrapper Class for Arrays.sort()****\npublic class AV4 {\n    public static void main(String[] Args){\n        FastReader scan=new FastReader();\n        int n=scan.nextInt();\n        int m=scan.nextInt();\n        int d=scan.nextInt();\n        int[] arr=new int[m];\n        int sum=0;\n        for (int i = 0; i <m ; i++) {\n            arr[i]=scan.nextInt();\n            sum+=arr[i];\n        }\n        int cur=0;\n        ArrayList<Integer> ans=new ArrayList<>();\n        for(int i=0;i<m;i++){\n            int loc=0;\n            sum-=arr[i];\n            for(int j=1;j<=d;j++){\n                int pl=cur+j+arr[i]-1;\n                if(n-(pl)>=sum){\n                    loc=pl-arr[i]+1;\n                }\n                else{\n                    break;\n                }\n            }\n            ans.add(loc);\n            cur=loc+arr[i]-1;\n        }\n        if(ans.get(m-1)+arr[m-1]-1+d<n+1){\n            System.out.println(\"NO\");\n        }\n        else{\n            System.out.println(\"YES\");\n            int l=1;\n            for(int i=0;i<m;i++){\n                int v=ans.get(i);\n                for(;l<v;l++){\n                    System.out.print(0+\" \");\n                }\n                for(int j=0;j<arr[i];j++){\n                    System.out.print((i+1)+\" \");\n                }\n                l=v+arr[i];\n            }\n            for(int i=l;i<=n;i++){\n                System.out.print(0+\" \");\n            }\n        }\n    }\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "(n,m,d) = tuple(map(int, input().split()))\nc = list(map(int, input().split()))\nif sum(c) + (m+1)*(d-1) >= n:\n    print('YES')\n    gaps = n - sum(c)\n    compuls = gaps//(m+1)\n    adds = gaps%(m+1)\n    cover = [compuls]*(m+1)\n    for i in range(adds):\n        cover[i] += 1\n    counter = 1\n    ans = []\n    # print('cover =', cover)\n    # print('c =', c)\n    for i in range(m):\n        ans.extend([0]*cover[i])\n        ans.extend([counter]*c[i])\n        counter += 1\n    ans.extend([0]*cover[-1])\n    print(*ans)\nelse:\n    print('NO')"
        },
        {
            "language": 3,
            "solution": "(n, m, d) = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nif n > sum(c) + (m+1)*(d-1):\n    print('NO')\nelse:\n\n    ans = []\n    S = sum(c)\n    i = 1\n    x = 0\n    flag = True\n    while flag and (i <= m):\n        if n - S < x + d:\n            while i <= m:\n                ans.append([i]*c[i-1])\n                i += 1\n                flag = False\n\n        else:\n            ans.append([0]*(d-1))\n            ans.append([i]*c[i-1])\n            x += d + c[i-1] - 1\n            S -= c[i-1]\n            i += 1\n\n\n    print(\"YES\")\n    answer = []\n    i = 0\n    while i < len(ans):\n        for j in ans[i]:\n            answer.append(j)\n        i += 1\n    for i in range(len(answer),n):\n        answer.append(0)\n    print(*answer)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\nusing namespace std;\ntemplate <typename T>\nvoid in(T &x) {\n  x = 0;\n  bool neg = 0;\n  register T c = getchar();\n  if (c == '-') neg = 1, c = getchar();\n  while ((c < 48) || (c > 57)) c = getchar();\n  for (; c < 48 || c > 57; c = getchar())\n    ;\n  for (; c > 47 && c < 58; c = getchar()) x = (x << 3) + (x << 1) + (c & 15);\n  if (neg) x *= -1;\n}\ntemplate <typename T>\nvoid ou(T n) {\n  bool neg = 0;\n  if (n < 0) n *= -1, neg = 1;\n  char snum[65];\n  int i = 0;\n  do {\n    snum[i++] = n % 10 + '0';\n    n /= 10;\n  } while (n);\n  --i;\n  if (neg) putchar('-');\n  while (i >= 0) putchar(snum[i--]);\n  putchar(' ');\n}\nvector<int> fa;\nint mul(int a, int b) {\n  long long res =\n      ((a % (int)1000000007) * 1ll * (b % (int)1000000007)) % (int)1000000007;\n  return res;\n}\nint mad(int a, int b) {\n  long long res =\n      (((a % (int)1000000007 + b % (int)1000000007) + (int)1000000007) %\n       (int)1000000007);\n  return res;\n}\nint power(int x, int y) {\n  long long res = 1;\n  while (y) {\n    if (y & 1) res = mul(res, x);\n    y >>= 1;\n    x = mul(x, x);\n  }\n  return res;\n}\nint inv(int x) { return power(x, (int)1000000007 - 2); }\nvoid fact() {\n  fa.push_back(1);\n  for (int i = 1; i < (int)3e5 + 5; i++) fa.push_back(mul(fa.back(), i));\n}\nint comb(int n, int r) {\n  if (r > n) return 0;\n  long long res = mul(fa[n], inv(mul(fa[n - r], fa[r])));\n  return res;\n}\nvoid pv(vector<int> v, int a, int sz) {\n  for (int i = a; i < (int)sz; i++) ou(v[i]);\n  cout << \"\\n\";\n}\nvoid rpv(vector<int> v, int sz, int a) {\n  for (int i = sz; i >= a; --i) ou(v[i]);\n  cout << \"\\n\";\n}\nvoid pa(int z[], int a, int sz) {\n  for (int i = a; i < (int)sz; i++) ou(z[i]);\n  cout << \"\\n\";\n}\nvoid rpa(int z[], int a, int sz) {\n  for (int i = a; i >= sz; --i) ou(z[i]);\n  cout << \"\\n\";\n}\nint main() {\n  int n, m, d;\n  in(n), in(m), in(d);\n  long long s = 0;\n  vector<int> v(m), ans;\n  for (int i = 0; i < (int)m; i++) in(v[i]), s += v[i];\n  int res = 0, temp = 0, cnt = 0, g = 1;\n  for (int i = 0; i < (int)m; i++) {\n    if (n - (res + d - 1) >= s) {\n      res += (d - 1);\n      temp = d - 1;\n      while (temp--) ans.push_back(0);\n      res += v[i];\n      s -= v[i];\n      temp = v[i];\n      while (temp--) ans.push_back(g);\n      g++;\n    } else {\n      temp = n - res;\n      cnt = 0;\n      while (temp - cnt > s && cnt < d - 1) ans.push_back(0), cnt++;\n      res += cnt;\n      res += v[i], s -= v[i];\n      temp = v[i];\n      while (temp--) ans.push_back(g);\n      g++;\n    }\n  }\n  if (res + d - 1 < n)\n    cout << \"No\"\n         << \"\\n\";\n  else {\n    while (res < n) ans.push_back(0), res++;\n    cout << \"Yes\"\n         << \"\\n\";\n    pv(ans, 0, n);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e3 + 10;\nint n, m, d, a[N], b[N], c[N], fir = 0, sec = 0, f = 0;\nint main() {\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) cin >> a[i];\n  while (1) {\n    if (!(fir < n + 1 && sec < m)) break;\n    fir = fir + d;\n    sec++;\n    int l = fir;\n    fir = (fir + a[sec] - 1);\n    int r = fir;\n    if (r >= n + 1) break;\n    for (int i = l; i <= r; i++) b[i] = sec;\n  }\n  if (fir + d < n + 1) {\n    cout << \"NO\" << endl;\n    return 0;\n  }\n  int thrr = 0;\n  for (int i = 1; i <= n; i++) thrr = max(thrr, b[i]);\n  int num = m - thrr, fiv = 0;\n  for (int i = m; num > 0;) {\n    fiv += a[i];\n    num--;\n    i--;\n  }\n  for (int i = 1; i <= n; i++) {\n    if (b[i] == 0 && fiv > 0) {\n      c[i] = 1;\n      fiv--;\n      if (fiv == 0) break;\n    }\n  }\n  cout << \"YES\" << endl;\n  for (int i = 1; i <= n; i++)\n    if (c[i] == 0) cout << b[i] << \" \";\n  for (int i = thrr + 1; i <= m; i++)\n    for (int j = 1; j <= a[i]; j++) cout << i << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Home {\n\t\n\tstatic int platforms[], arr[];\n\tstatic int riverLen, n, k; static Scanner scanner = new Scanner(System.in);\n\t\n\tpublic static void main(String args[]) {\n\t\triverLen = scanner.nextInt(); n = scanner.nextInt(); k = scanner.nextInt();\n\t\tplatforms = new int[n]; arr = new int[riverLen];\n\t\tfor (int i = 0; i < n; i++) { platforms[i] = scanner.nextInt(); }\n\t\t// First OP\n\t\tint p = riverLen-1;\n\t\tfor (int i = n-1; i >= 0; i--) {\n\t\t\tif (p < 0) { System.out.println(\"NO\"); return; }\n\t\t\tfor (int j = 0; j < platforms[i]; j++) { arr[p-j] = i+1; } p -= platforms[i];\n\t\t}\n\t\t// Second OP\n\t\tint playerPos = -1 + k; int platIndex = 0;\n\t\tfor (; playerPos < riverLen;) {\n\t\t\tif (arr[playerPos] == 0 && platIndex < platforms.length) {\n\t\t\t\tReplace(platIndex, playerPos); playerPos += platforms[platIndex]-1; platIndex++;\n\t\t\t}\n\t\t\telse if (arr[playerPos] == 0) {\n\t\t\t\tSystem.out.println(\"NO\"); return;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tplayerPos += k;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t\tPrint();\n\t\t//--------\n\t}\n\t\n\tstatic void Replace(int index, int start) {\n\t\tint platNum = index+1, platSize = platforms[index]; int s = 0;\n\t\tfor (int i = 0; i < arr.length; i++) { if (arr[i] == platNum) {s = i; break;} }\n\t\tint j = 0;\n\t\tfor (int i = s; j < platSize; i++) {\n\t\t\tarr[i] = 0;\n\t\t\tj++;\n\t\t}\n\t\tj = 0;\n\t\tfor (int i = start; j < platSize; i++) {\n\t\t\tarr[i] = platNum;\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\tstatic void Print() {\n\t\tfor (int i = 0; i < arr.length; i++) { System.out.print(arr[i] + \" \"); } System.out.println();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\nhttps://codeforces.com/contest/1256/problem/C\n'''\n\n\nn, m, d = map(int, input().split())\ncs = list(map(int, input().split()))\n\n\nls = [0] * m\nls[m - 1] = cs[m - 1]\nfor i in range(m - 1):\n    ls[m - i - 2] = ls[m - i - 1] + cs[m - i - 2]\n\n\nif ls[0] + (d - 1) * (m + 1) < n:\n    print('NO')\nelse:\n    ns = [0] * n\n    ci = 0\n    jump = 1\n    i = 0\n    while i < n and ci < m:\n        # print(i)\n        # print(n - i)\n        if ls[ci] < n - i:\n            if jump < d:\n                jump += 1\n                ns[i] = 0\n            else:\n                for i in range(i, i + cs[ci]):\n                    ns[i] = ci + 1\n                    jump = 1\n                ci += 1\n        else:\n            # print(list(range(i, i + cs[ci])))\n            for i in range(i, i + cs[ci]):\n                ns[i] = ci + 1\n                jump = 1\n            ci += 1\n        i += 1\n    print('YES')\n    print(' '.join(list(map(str, ns))))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  ;\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> arr(m);\n  int sum = 0;\n  for (int i = 0; i < m; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  int gap = (m + 1) * (d - 1);\n  sum = n - sum;\n  if (sum > gap) {\n    cout << \"NO\" << '\\n';\n    return 0;\n  }\n  cout << \"YES\" << '\\n';\n  int siz = 0;\n  int rem = sum;\n  int curr = 0;\n  for (int i = 0; i < n; i++) {\n    if (rem == 0 || siz == (d - 1)) {\n      for (int j = 0; j < arr[curr]; j++) {\n        cout << curr + 1 << \" \";\n        i++;\n      }\n      i--;\n      curr++;\n      siz = 0;\n    } else {\n      cout << 0 << \" \";\n      siz++;\n      rem--;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\nsuffs = [0 for k in range(m + 1)]\nfor k in range(m - 1, -1, -1):\n    suffs[k] = suffs[k + 1] + c[k]\ni, j = min(d - 1, n - 1), 0\na = [0 for k in range(n)]\nwhile i < n and j < m:\n    if n - i < suffs[j]:\n        poi = n - 1\n        for x in range(m - 1, j - 1, -1):\n            for k in range(c[x]):\n                a[poi] = x + 1\n                poi -= 1\n        i = n\n        break\n    for k in range(i, i + c[j]):\n        a[k] = j + 1\n    i += c[j] - 1\n    j += 1\n    i = min(i + d, n)\nif i >= n - (a[n - 1] != 0):\n    print(\"YES\")\n    print(*a)\nelse:\n    print(\"NO\")"
        },
        {
            "language": 4,
            "solution": "import java.math.*;\nimport java.io.*;\nimport java.util.*;\nimport java.awt.*;\n\n\npublic class CP {\n    public static void main(String[] args) throws Exception {\n        /*new Thread(null, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    new Solver().solve();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }, \"Solver\", 1l << 30).start();*/\n\n        new Solver().solve();\n    }\n}\n\nclass Solver {\n    final Helper hp;\n    final int MAXN = 1000_006;\n    final long MOD = (long) 1e9 + 7;\n\n    Solver() {\n        hp = new Helper(MOD, MAXN);\n        hp.initIO(System.in, System.out);\n    }\n\n\n    void solve() throws Exception {\n        int i, j, k;\n\n        int N = hp.nextInt(), M = hp.nextInt(), D = hp.nextInt();\n        int[][] ranges = new int[M][];\n        int safe = 0;\n        for (i = 0; i < M; ++i) {\n            int len = hp.nextInt();\n            ranges[i] = new int[] {safe + 1, safe + len};\n            safe += len;\n        }\n\n        int last = N + 1;\n        for (i = M - 1; i >= 0; --i) {\n            int[] plank = ranges[i];\n            if (last - plank[1] > D) {\n                int shift = last - plank[1] - D;\n                plank[0] += shift; plank[1] += shift;\n            }\n            last = plank[0];\n        }\n\n        //for (int[] itr : ranges) System.out.print(Arrays.toString(itr) + \", \");\n        //System.out.println();\n\n        if (ranges[0][0] > D) hp.println(\"NO\");\n        else {\n            hp.println(\"YES\");\n            int[] ans = new int[N + 7];\n            k = 0;\n            for (int[] plank : ranges) {\n                ++k;\n                for (i = plank[0]; i <= plank[1]; ++i) ans[i] = k;\n            }\n            for (i = 1; i <= N; ++i) hp.printsp(ans[i]);\n            hp.println();\n        }\n\n        hp.flush();\n    }\n}\n\nclass Helper {\n    final long MOD;\n    final int MAXN;\n    final Random rnd;\n\n    public Helper(long mod, int maxn) {\n        MOD = mod;\n        MAXN = maxn;\n        rnd = new Random();\n    }\n\n\n    public static int[] sieve;\n    public static ArrayList<Integer> primes;\n\n    public void setSieve() {\n        primes = new ArrayList<>();\n        sieve = new int[MAXN];\n        int i, j;\n        for (i = 2; i < MAXN; ++i)\n            if (sieve[i] == 0) {\n                primes.add(i);\n                for (j = i; j < MAXN; j += i) {\n                    sieve[j] = i;\n                }\n            }\n    }\n\n\n    public static long[] factorial;\n\n    public void setFactorial() {\n        factorial = new long[MAXN];\n        factorial[0] = 1;\n        for (int i = 1; i < MAXN; ++i) factorial[i] = factorial[i - 1] * i % MOD;\n    }\n\n    public long getFactorial(int n) {\n        if (factorial == null) setFactorial();\n        return factorial[n];\n    }\n\n    public long ncr(int n, int r) {\n        if (r > n) return 0;\n        if (factorial == null) setFactorial();\n        long numerator = factorial[n];\n        long denominator = factorial[r] * factorial[n - r] % MOD;\n        return numerator * pow(denominator, MOD - 2, MOD) % MOD;\n    }\n\n\n    public long[] getLongArray(int size) throws Exception {\n        long[] ar = new long[size];\n        for (int i = 0; i < size; ++i) ar[i] = nextLong();\n        return ar;\n    }\n\n    public int[] getIntArray(int size) throws Exception {\n        int[] ar = new int[size];\n        for (int i = 0; i < size; ++i) ar[i] = nextInt();\n        return ar;\n    }\n\n    public String[] getStringArray(int size) throws Exception {\n        String[] ar = new String[size];\n        for (int i = 0; i < size; ++i) ar[i] = next();\n        return ar;\n    }\n\n    public String joinElements(long[] ar) {\n        StringBuilder sb = new StringBuilder();\n        for (long itr : ar) sb.append(itr).append(\" \");\n        return sb.toString().trim();\n    }\n\n\n    public String joinElements(int[] ar) {\n        StringBuilder sb = new StringBuilder();\n        for (int itr : ar) sb.append(itr).append(\" \");\n        return sb.toString().trim();\n    }\n\n    public String joinElements(String[] ar) {\n        StringBuilder sb = new StringBuilder();\n        for (String itr : ar) sb.append(itr).append(\" \");\n        return sb.toString().trim();\n    }\n\n    public String joinElements(Object[] ar) {\n        StringBuilder sb = new StringBuilder();\n        for (Object itr : ar) sb.append(itr).append(\" \");\n        return sb.toString().trim();\n    }\n\n\n    public long gcd(long a, long b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n    public int gcd(int a, int b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n\n    public long max(long[] ar) {\n        long ret = ar[0];\n        for (long itr : ar) ret = Math.max(ret, itr);\n        return ret;\n    }\n\n    public int max(int[] ar) {\n        int ret = ar[0];\n        for (int itr : ar) ret = Math.max(ret, itr);\n        return ret;\n    }\n\n    public long min(long[] ar) {\n        long ret = ar[0];\n        for (long itr : ar) ret = Math.min(ret, itr);\n        return ret;\n    }\n\n    public int min(int[] ar) {\n        int ret = ar[0];\n        for (int itr : ar) ret = Math.min(ret, itr);\n        return ret;\n    }\n\n\n    public long sum(long[] ar) {\n        long sum = 0;\n        for (long itr : ar) sum += itr;\n        return sum;\n    }\n\n    public long sum(int[] ar) {\n        long sum = 0;\n        for (int itr : ar) sum += itr;\n        return sum;\n    }\n\n    public void shuffle(int[] ar) {\n        int r;\n        for (int i = 0; i < ar.length; ++i) {\n            r = rnd.nextInt(ar.length);\n            if (r != i) {\n                ar[i] ^= ar[r];\n                ar[r] ^= ar[i];\n                ar[i] ^= ar[r];\n            }\n        }\n    }\n\n    public void shuffle(long[] ar) {\n        int r;\n        for (int i = 0; i < ar.length; ++i) {\n            r = rnd.nextInt(ar.length);\n            if (r != i) {\n                ar[i] ^= ar[r];\n                ar[r] ^= ar[i];\n                ar[i] ^= ar[r];\n            }\n        }\n    }\n\n    public long pow(long base, long exp, long MOD) {\n        base %= MOD;\n        long ret = 1;\n        while (exp > 0) {\n            if ((exp & 1) == 1) ret = ret * base % MOD;\n            base = base * base % MOD;\n            exp >>= 1;\n        }\n        return ret;\n    }\n\n\n    static byte[] buf = new byte[2048];\n    static int index, total;\n    static InputStream in;\n    static BufferedWriter bw;\n\n\n    public void initIO(InputStream is, OutputStream os) {\n        try {\n            in = is;\n            bw = new BufferedWriter(new OutputStreamWriter(os));\n        } catch (Exception e) {\n        }\n    }\n\n    public void initIO(String inputFile, String outputFile) {\n        try {\n            in = new FileInputStream(inputFile);\n            bw = new BufferedWriter(new OutputStreamWriter(\n                    new FileOutputStream(outputFile)));\n        } catch (Exception e) {\n        }\n    }\n\n    private int scan() throws Exception {\n        if (index >= total) {\n            index = 0;\n            total = in.read(buf);\n            if (total <= 0)\n                return -1;\n        }\n        return buf[index++];\n    }\n\n    public String next() throws Exception {\n        int c;\n        for (c = scan(); c <= 32; c = scan()) ;\n        StringBuilder sb = new StringBuilder();\n        for (; c > 32; c = scan())\n            sb.append((char) c);\n        return sb.toString();\n    }\n\n    public int nextInt() throws Exception {\n        int c, val = 0;\n        for (c = scan(); c <= 32; c = scan()) ;\n        boolean neg = c == '-';\n        if (c == '-' || c == '+')\n            c = scan();\n        for (; c >= '0' && c <= '9'; c = scan())\n            val = (val << 3) + (val << 1) + (c & 15);\n        return neg ? -val : val;\n    }\n\n    public long nextLong() throws Exception {\n        int c;\n        long val = 0;\n        for (c = scan(); c <= 32; c = scan()) ;\n        boolean neg = c == '-';\n        if (c == '-' || c == '+')\n            c = scan();\n        for (; c >= '0' && c <= '9'; c = scan())\n            val = (val << 3) + (val << 1) + (c & 15);\n        return neg ? -val : val;\n    }\n\n    public void print(Object a) throws Exception {\n        bw.write(a.toString());\n    }\n\n    public void printsp(Object a) throws Exception {\n        print(a);\n        print(\" \");\n    }\n\n    public void println() throws Exception {\n        bw.write(\"\\n\");\n    }\n\n    public void println(Object a) throws Exception {\n        print(a);\n        println();\n    }\n\n    public void flush() throws Exception {\n        bw.flush();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nbool mini(T &a, T b) {\n  return a > b ? (a = b, true) : false;\n}\ntemplate <class T>\nbool maxi(T &a, T b) {\n  return a < b ? (a = b, true) : false;\n}\nconst int N = 1e3 + 10;\nint a[N], suf[N], ans[N];\nint n, m, d;\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.precision(10);\n  cout << fixed;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; ++i) cin >> a[i];\n  int pos = n;\n  for (int i = m; i > 0; --i) {\n    for (int j = 0; j < a[i]; ++j) ans[pos - j] = i;\n    pos -= a[i];\n  }\n  pos = 0;\n  while (pos + d <= n) {\n    while (pos + 1 <= n && ans[pos + 1]) ++pos;\n    if (pos + d > n) break;\n    if (ans[pos + d] == 0) {\n      int l = -1;\n      for (int i = pos + d; i <= n + 1; ++i) {\n        if (ans[i] != 0) {\n          l = i;\n          break;\n        }\n      }\n      if (l == -1) {\n        cout << \"NO\";\n        return 0;\n      }\n      int r = -1;\n      for (int i = l; i <= n + 1; ++i) {\n        if (ans[i] == ans[l]) r = i;\n      }\n      while (ans[pos + d] == 0) {\n        swap(ans[l - 1], ans[r]);\n        --l, --r;\n      }\n    }\n    pos += d;\n  }\n  cout << \"YES\"\n       << \"\\n\";\n  for (int i = 1; i <= n; ++i) cout << ans[i] << ' ';\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = [0] * (m + 1)\nb[-1] = n - sum(a)\nfor i in range(m):\n    k = min(d - 1, b[-1])\n    b[-1] -= k\n    b[i] += k\n\nif b[-1] >= d:\n    print('NO')\n    exit(0)\n\nans = []\nfor i in range(m):\n    for j in range(b[i]):\n        ans.append(0)\n    for j in range(a[i]):\n        ans.append(i + 1)\nfor j in range(b[-1]):\n    ans.append(0)\nprint('YES')\nprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n# input = sys.stdin.buffer.readline\ninput = sys.stdin.readline\n\n\nn,m,d = map(int, input().split())\nli = list(map(int, input().split()))\nx=0\nl=0\nmaxx = sum(li)+(d-1)*(m+1)\n\noff = maxx - n\n# print(maxx,off)\noutlist=[]\nfor i in range(m):\n    # print(off,d)\n    if (off)>=d:\n        \n        off-=(d-1)\n    else:\n        outlist.extend([0]*(d-off-1))\n        off=0\n    outlist.extend([i+1]*li[i])\n\nif (off)>d:\n        off-=(d-1)\nelse:\n    outlist.extend([0]*(d-off-1))\n    off=0\n\nif maxx>=n:\n    print(\"YES\")\n    print(\" \".join([str(a) for a in outlist]))\nelse:\n    print(\"NO\")\n# print(l)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int riverWidth = scanner.nextInt();\n        int numPlatforms = scanner.nextInt();\n        int maxJump = scanner.nextInt();\n\n        int[] platformWidth = new int[numPlatforms];\n        for (int i = 0; i < numPlatforms; ++i) {\n            platformWidth[i] = scanner.nextInt();\n        }\n\n        int[] ans = new int[riverWidth + 2];\n\n        for (int i = numPlatforms - 1, pos = riverWidth; i >= 0; --i) {\n            for (int len = 0; len < platformWidth[i]; ++len) {\n                ans[pos - len] = i + 1;\n            }\n            pos -= platformWidth[i];\n        }\n\n        int now = 0;\n        while (true) {\n            while (now + 1 < riverWidth + 1 && ans[now + 1] > 0) {\n                ++now;\n            }\n            if (now + maxJump >= riverWidth + 1) {\n                break;\n            }\n            if (ans[now + maxJump] == 0) {\n                int lpos = -1;\n                for (int i = now + maxJump; i < riverWidth + 2; ++i) {\n                    if (ans[i] != 0) {\n                        lpos = i;\n                        break;\n                    }\n                }\n                if (lpos == -1) {\n                    System.out.println(\"NO\");\n                    return;\n                }\n                int rpos = -1;\n                for (int i = lpos; i < riverWidth + 2; ++i) {\n                    if (ans[i] == ans[lpos]) {\n                        rpos = i;\n                    }\n                }\n                while (ans[now + maxJump] == 0) {\n                    int temp = ans[lpos - 1];\n                    ans[lpos - 1] = ans[rpos];\n                    ans[rpos] = temp;\n                    --lpos;\n                    --rpos;\n                }\n            }\n            now += maxJump;\n        }\n\n        System.out.println(\"YES\");\n        for (int i = 1; i <= riverWidth; ++i) {\n            System.out.print(ans[i] + \" \");\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "\n#from math import floor\n\n\ndef nextPo(n,space,l,lastPos,posl):\n    #print(\"P\")\n    #if n-(lastPos+1) < sum(l[posl:]):\n     #   return -1\n    if n-(lastPos+1) == sum(l[posl:]) or n - (lastPos + d) < sum(l[posl+1:]) : \n        #if the remaining positions of the river is eqaul \n        #to the length of the planks or \n        # the remaining planks won't fit if the next plank \n        # is  placed with d-1 space in between. \n\n        return 0\n    #if n-(lastPos+1) < sum(l[posl:]):\n    #    return -1\n    #elif sum(l[posl:])  >  n-(lastPos +d-1):\n    #    return sum(l[posl:])-n-(lastPos +d-1):\n    else:\n        return d-1\n\ndef nextP(n,space,l,lastPos,posl):\n    #print(\"P\")\n    #if n-(lastPos+1) < sum(l[posl:]):\n     #   return -1\n    if n-(lastPos) == sum(l[posl:]) or n - (lastPos + d) < sum(l[posl+1:]) :\n        return 0\n    #if n-(lastPos+1) < sum(l[posl:]):\n    #    return -1\n    #elif sum(l[posl:])  >  n-(lastPos +d-1):\n     #  return sum(l[posl:])-n-(lastPos +d-1)\n    else:\n        return d-1\n \ndef find(n,m,d,l):\n    river = [0 for i in range(n)]\n    res  = -2\n    space = n-sum(l)\n    #print(space)\n    i = 0\n    j = 0\n    posl = 0\n    z = 1\n    posr = 0\n   # if int(floor((n-sum(l))//m)) + 1 > d:\n    #    posl = m\n    while posl < m:\n \n        res = nextP(n,space,l,posr,posl)\n        #print(\"res \",res)\n        if res == -1:\n            break\n        if res == 0:\n            space == 0\n        else:\n            space -= res\n        #print(\"space \",space)\n        j = posr+res\n        lim = j+ l[posl]\n        while j < lim:\n            river[j] = z\n            j += 1\n            #print(river)\n        \n        #print(\"z \",z)\n        z += 1\n        \n        posr += res + l[posl]\n \n        if posr >= n:\n            break\n        #print(\"posl\",posl,\"posr\",posr)\n        posl +=1\n    \n    #if n-(posr - res -l[posl-1]):\n    if n - (posr) >= d:\n        print(\"No\")\n    elif res == -1 or posr > n:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n        for i in range(n):\n            print(river[i],end = \" \")\n \nn,m,d = map(int,input().split())\nl = [int(i) for i in input().split()]\nfind(n,m,d,l)"
        },
        {
            "language": 4,
            "solution": "//package CodeForces;\n\nimport java.util.Scanner;\n\npublic class PlatformsJumping {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner s=new Scanner(System.in);\n\t\tint n=s.nextInt();\n\t\tint m=s.nextInt();\n\t\tint d=s.nextInt();\n\t\tint arr[]=new int[n];\n\t\tint sum=0;\n\t\tfor(int i=0;i<m;i++)\n\t\t{\n\t\t\tarr[i]=s.nextInt();\n\t\t\tsum=sum+arr[i];\n\t\t}\n\t\tint i=0;int j=0;\n\t\tint ans[]=new int[n+1];\n\t\twhile(j<m)\n\t\t{\n\t\t\tint temp=Math.min(i+d,n+1-sum);\n\t\t\tans[temp]=j+1;\n\t\t\tint small=arr[j];\n\t\t\ti=temp+arr[j]-1;\n\t\t\tsum=sum-arr[j];\n\t\t\tj++;\n\t\t\t//System.out.println(temp+\" \"+i);\n\t\t}\n\t\tif(i!=n+1)\n\t\t{\n\t\t\tif(i+d>=n+1)\n\t\t\t{\n\t\t\t\ti=n+1;\n\t\t\t}\n\t\t}\n\t\tj=0;\n\t\tStringBuilder small=new StringBuilder();\n\t\tfor(int l=1;l<=n;)\n\t\t{\n\t\t\tif(ans[l]>0)\n\t\t\t{\n\t\t\t\tfor(int q=0;q<arr[j];q++)\n\t\t\t\t{\n\t\t\t\t\tsmall.append((j+1)+\" \");\n\t\t\t\t}\n\t\t\t\tl=l+arr[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsmall.append(0+\" \");\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t\t//System.out.println(i);\n\t\t//System.out.println(small);\n\t\tif(i==n+1)\n\t\t{\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tSystem.out.println(small);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\nusing namespace std;\nconst int N = 1e3 + 5, M = 3e5 + 5;\nint n, m, d;\nint a[N], cnt[N], cum[N];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (int i = 0; i < m; ++i) scanf(\"%d\", a + i);\n  for (int i = m - 1; ~i; --i) cnt[i] = a[i] + cnt[i + 1];\n  int i = 0;\n  for (int j = 0; j < m && i <= n; ++j) {\n    int idx = min(n - cnt[j] + 1, i + d);\n    ++cum[idx];\n    i = idx + a[j] - 1;\n    --cum[i + 1];\n  }\n  if (i + d <= n) exit(puts(\"NO\"));\n  puts(\"YES\");\n  int hna = 1;\n  int here = 0;\n  for (int i = 1, j = 0; i <= n; ++i) {\n    cum[i] += cum[i - 1];\n    if (cum[i]) {\n      if (a[j] == here) ++j, ++hna, here = 0;\n      printf(\"%d%c\", hna, \" \\n\"[i == n]);\n      ++here;\n      continue;\n    }\n    printf(\"0%c\", \" \\n\"[i == n]);\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing pt = complex<ld>;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  ll n, m, d;\n  cin >> n >> m >> d;\n  vector<ll> in(m);\n  for (ll i = 0; i < m; i++) {\n    cin >> in[i];\n  }\n  vector<ll> sumAfter(m);\n  for (ll i = m - 2; i >= 0; i--) {\n    sumAfter[i] = sumAfter[i + 1] + in[i + 1];\n  }\n  vector<ll> res(n, -1);\n  bool reached = false;\n  for (ll i = 0, p = -1; i < m; i++) {\n    ll x = min(p + d, n - sumAfter[i] - in[i]);\n    for (ll j = 0; j < in[i]; j++) {\n      res[j + x] = i;\n    }\n    p = max(p, x + in[i] - 1);\n    reached |= abs(n - p) <= d;\n  }\n  if (!reached) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n    for (ll x : res) {\n      cout << x + 1 << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = list(map(int, input().strip().split(' ')))\nc = list(map(int, input().strip().split(' ')))\n\n\nres = []\nfor i, ci in enumerate(c):\n    empty = n - len(res) - sum(c[i:])\n    if empty >= d - 1:\n        res.extend(['0']*(d - 1))\n    else:\n        res.extend(['0'] * empty)\n    res.extend([str(i + 1) for _ in range(ci)])\n\nif n - len(res) < d:\n    res.extend(['0'] * (n - len(res)))\n    print(\"YES\")\n    print(' '.join(res))\nelse:\n    print(\"NO\")"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nif __name__ == '__main__':\n    A = stdin.readline().strip().split()\n    n = int(A[0])   # the width of the river\n    m = int(A[1])   # the number of platforms\n    d = int(A[2])   # the maximum distance of your jump\n\n    c = list(map(int, stdin.readline().strip().split()))\n\n    gap = n - sum(c)\n    jumps = m + 1\n\n    if jumps*(d - 1) >= gap >= 0:\n        res = []\n\n        interval = int(gap/jumps)\n        remainder = gap % jumps\n\n        i = 0\n        wi = 0\n\n        for wi in range(m):\n            cur = interval\n            if remainder > 0:\n                cur += 1\n                remainder -= 1\n\n            for j in range(cur):\n                res.append(0)\n                i += 1\n\n            for j in range(c[wi]):\n                res.append(wi + 1)\n                i += 1\n\n        for j in range(interval):\n            res.append(0)\n\n        print('YES')\n        print(' '.join(map(str, res)))\n    else:\n        print('NO')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\npublic class Solution {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint m = in.nextInt();\n\t\tint d = in.nextInt();\n\t\tint[] wood = new int[m];\n\t\tint[] river = new int[n + 2];\n\t\tint[] last_pos = new int[m];\n\t\triver[0] = 1;\n\t\triver[n + 1] = 1;\n\t\tfor(int i = 0; i < m; i++) wood[i] = in.nextInt();\n\t\tint pos = n;\n\t\tfor(int i = m - 1; i >= 0; i--) {\n\t\t\tlast_pos[i] = pos;\n\t\t\tfor(int j = 0; j < wood[i]; j++) {\n\t\t\t\triver[pos] = (i + 1); \n\t\t\t\tpos -= 1;\n\t\t\t}\n\t\t}\n\t\tString ans = \"NO\";\n\t\tint next_wood = 0;\n\t\tint cur = Math.min(n + 1, d);\n\t\twhile(cur < n + 2) {\n\t\t\tif(river[cur] != 0) {\n\t\t\t\tans = \"YES\";\n\t\t\t\tbreak;\n\t\t\t}else {\n\t\t\t\tif(next_wood < m) {\n\t\t\t\t\tfor(int i = last_pos[next_wood]; i > (last_pos[next_wood] - wood[next_wood]); i--) {\n\t\t\t\t\t\triver[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t\tint temp_cur = cur;\n\t\t\t\t\tfor(int i = cur; i < (cur + wood[next_wood]); i++) {\n\t\t\t\t\t\triver[i] = (next_wood + 1);\n\t\t\t\t\t\ttemp_cur = i;\n\t\t\t\t\t}\n\t\t\t\t\tcur = Math.min(n + 1, temp_cur + d);\n\t\t\t\t\tnext_wood += 1;\n\t\t\t\t}else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(ans.equals(\"YES\")) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tfor(int i = 1; i < n + 1; i++) {\n\t\t\t\tif(i > 1) System.out.print(\" \");\n\t\t\t\tSystem.out.print(river[i]);\n\t\t\t}\n\t\t\tSystem.out.print(\"\\n\");\n\t\t}else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1010;\nint n, m, d;\nint vis[N], res[N];\nint ans[N];\nint main(void) {\n  cin >> n >> m >> d;\n  int sum = 0;\n  for (int i = 0; i < m; ++i) {\n    scanf(\"%d\", &vis[i]);\n    sum += vis[i];\n  }\n  sum = n - sum;\n  if (sum > (m + 1) * (d - 1))\n    puts(\"NO\");\n  else {\n    puts(\"YES\");\n    int x, y, l;\n    if (sum <= m)\n      x = 1, y = 0, l = sum;\n    else\n      x = sum / (m + 1), y = sum % (m + 1), l = m + 1;\n    for (int i = 0; i < l; ++i)\n      if (i < y)\n        res[i] = x + 1;\n      else\n        res[i] = x;\n    int t1 = 0, t2 = 0;\n    for (int i = 0; i < n; ++i) {\n      int flag = 0;\n      if (t1 < l) i += res[t1] - 1, t1++, flag = 1;\n      if (t2 < m) {\n        if (flag) i++;\n        for (int j = 0; j < vis[t2]; ++j) ans[i + j] = t2 + 1;\n        i += vis[t2] - 1, t2++;\n      }\n    }\n    for (int i = 0; i < n; ++i) printf(\"%d%c\", ans[i], i + 1 == n ? '\\n' : ' ');\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class C {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\n\t\tint n = in.nextInt();\n\t\tint m = in.nextInt();\n\t\tint d = in.nextInt();\n\t\tint len = 0;\n\t\tint[] arr = new int[m];\n\t\tfor (int j=0; j<m; j++) {\n\t\t\tint bridge = in.nextInt();\n\t\t\tlen += bridge;\n\t\t\tarr[j] = bridge;\n\t\t}\n\t\tif ((m+1)*(d-1)+len >= n){\n\t\t\tSystem.out.println(\"Yes\");\n\t\t\tint water = n-len;\n\t\t\tfor (int j=0; j<m; j++) {\n\t\t\t\tint thisWater = (water>(d-1)) ? d-1: water;\n\t\t\t\twater -= thisWater;\n\t\t\t\tfor (int k=0; k<thisWater; k++)\n\t\t\t\t\tSystem.out.print(\"0 \");\n\t\t\t\tfor (int k=0; k<arr[j]; k++)\n\t\t\t\t\tSystem.out.print((j+1)+\" \");\n\t\t\t}\n\t\t\tfor (int k=0; k<water; k++)\n\t\t\t\tSystem.out.print(\"0 \");\n\t\t}\n\t\telse System.out.println(\"No\");\n\t\t\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class PlatJump {\n\t\n\tstatic FastReader sc = new FastReader();\n    static OutputStream outputstream = System.out;\n    static PrintWriter out = new PrintWriter(outputstream);\n\n\tstatic class FastReader { \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException  e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t}\n\t\n\tstatic class Node {\n\t\tint len;\n\t\tint ind;\n\t\tint left;\n\t\t\n\t\tNode(int len, int ind) {\n\t\t\tthis.len=len;\n\t\t\tthis.ind=ind;\n\t\t\tthis.left=0;\n\t\t}\n\t\t\n\t\tpublic String toString() {\n\t\t\treturn this.len + \" \" + this.ind + \" \" + this.left;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint d = sc.nextInt();\n\t\tNode[] arr = new Node[m];\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < m; i++) {\n\t\t\tint tmp = sc.nextInt();\n\t\t\tarr[i] = new Node(tmp,i+1);\n\t\t\tsum += arr[i].len;\n\t\t}\n\t\tif(sum+(m+1)*(d-1)<n) {\n\t\t\tout.println(\"NO\");\n//\t\t\tout.println((sum+(m+1)*(d-1)));\n\t\t} else {\n\t\t\tout.println(\"YES\");\n\t\t\tint ind = 0;\n\t\t\tint rest = n-sum;\n\t\t\twhile(rest>d-1) {\n\t\t\t\tint add = Math.min(rest-d+1, d-1);\n\t\t\t\trest -= add;\n\t\t\t\tarr[ind++].left = add;\n\t\t\t}\n\t\t\tArrayList<Integer> ans = new ArrayList();\n\t\t\tfor(int i = 0; i < m; i++) {\n\t\t\t\tint left = arr[i].left;\n\t\t\t\tint len = arr[i].len;\n\t\t\t\tind = arr[i].ind;\n\t\t\t\tfor(int j = 0; j < left; j++) {\n\t\t\t\t\tans.add(0);\n\t\t\t\t}\n\t\t\t\tfor(int j = 0; j < len; j++) {\n\t\t\t\t\tans.add(ind);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i = 0; i < rest; i++) {\n\t\t\t\tans.add(0);\n\t\t\t}\n\t\t\tfor(Integer i : ans) out.print(i + \" \");\n\t\t\tout.println();\n\t\t}\n\t    \n\t    \n\t    \n//\t    out.println(ind);\n//\t    out.println(Arrays.toString(ans));\n\t    out.close();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nk = n\narr = list(map(int, input().split()))\narr2 = []\nif ((d-1)*(m+1) + sum(arr) < n) or (sum(arr)<n and d ==1):\n\tprint('NO')\nelse:\n\tif (d==1 and sum(arr) == n):\n\t\tprint('YES')\n\t\tarrrofl = []\n\t\tfor t in range(len(arr)):\n\t\t\tarrrofl+= arr[t]*[(t+1)]\n\t\tfor t in (arrrofl):\n\t\t\tprint(t, end=' ')\n\telse:\n\t\tnewarr = []\n\t\tfor i in range(1, m+1):\n\t\t\tnewarr += [i]*arr[i-1]\n\t\tnewarr = [-1] + newarr + [m+1]\n\t\tz = n - sum(arr)\n\t\tmini = 1\n\t\the = z//(d-1)\n\t\tfor i in range(he):\n\t\t\tind = newarr.index(mini)\n\t\t\tfor t in range(d-1):\n\t\t\t\tnewarr.insert(ind, 0)\n\t\t\tmini +=1\n\t\tfor t in range(z-he*(d-1)):\n\t\t\tind = newarr.index(mini) \n\t\t\tnewarr.insert(ind, 0)\n\n\t\t\n\t\tnewarr = newarr[1:len(newarr)-1]\n\t\tprint('YES')\n\t\tfor t in newarr:\n\t\t\tprint(t, end=' ')"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n \npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n        int[] c = new int[m];\n        int sumC = 0;\n        for (int i = 0; i < m; i++) {\n            c[i] = sc.nextInt();\n            sumC += c[i];\n        }\n        if (sumC + (d-1)*(m+1) < n) {\n            System.out.println(\"NO\");\n            return;\n        }\n\n        int space = n - sumC;\n        int a = space/(m+1);\n        int b = space%(m+1);\n        StringBuilder ans = new StringBuilder();\n        for (int i = 0; i < m; i++) {\n            for (int aa = 0; aa < a; aa++) {\n                ans.append(0).append(\" \");\n            }\n            if (b > 0) {\n                ans.append(0).append(\" \");\n                b--;\n            }\n            for (int j = 0; j < c[i]; j++) {\n                ans.append(i+1).append(\" \");\n            }\n        }\n        for (int aa = 0; aa < a; aa++) {\n            ans.append(0).append(\" \");\n        }\n        if (b > 0) {\n            ans.append(0).append(\" \");\n            b--;\n        }\n\n        System.out.println(\"YES\");\n        System.out.println(ans.toString());\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid redirect() {}\nconst int maxn = 1010;\nint c[maxn], a[maxn], s[maxn];\nint sum;\nint main() {\n  redirect();\n  int n, m, d;\n  scanf(\"%d %d %d\", &n, &m, &d);\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &c[i]);\n    sum += c[i];\n  }\n  if ((m + 1) * d + sum - m < n + 1) {\n    puts(\"NO\");\n    return 0;\n  }\n  puts(\"YES\");\n  for (int i = m; i >= 0; i--) s[i] = s[i + 1] + c[i + 1];\n  long long sz = sum + (d - 1) * (m + 1) - n;\n  vector<pair<int, int> > v;\n  for (int i = 1; i <= m; i++) {\n    v.emplace_back(0, d - 1);\n    v.emplace_back(i, c[i]);\n  }\n  v.emplace_back(0, d - 1);\n  for (auto& x : v) {\n    if (x.first == 0) {\n      if (x.second > sz)\n        x.second -= sz, sz = 0;\n      else\n        sz -= x.second, x.second = 0;\n      if (sz == 0) break;\n    }\n  }\n  int p = 0;\n  for (auto& x : v)\n    for (int i = 0; i < x.second; i++) a[++p] = x.first;\n  for (int i = 1; i <= n; i++) printf(\"%d%c\", a[i], i == n ? '\\n' : ' ');\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = list(map(int, input().split()))\na = list(map(int, input().split()))\n \ncur_pos = 0\npl_idx = 0\n \ntotal = sum(a)\n\nall_pl = False\n \nif (d-1) * (m + 1) + total < n:\n    print('NO')\nelse:\n    print('YES')\n    \n    #num_jumps = (n - total) // (d-1) + bool((n - total) // (d-1) )\n    counter = 0\n    ans = []\n    plidx = 0\n    shift = 0\n    idx = 0\n    turn = 'j' # or p\n    while idx < n:\n        \n        \n        if idx >= n - total and not all_pl and turn == 'j':\n            all_pl = True\n            turn = 'p'\n            shift = 0\n            \n        if turn == 'j':\n            ans.append(0)\n        else:\n            ans.append(plidx+1)\n            \n        shift += 1\n        idx += 1\n        \n        #print(idx, total, ans, plidx, shift, turn)\n\n        if turn == 'j' and shift == d - 1:\n            turn = 'p'\n            shift = 0\n            counter += 1\n            \n        elif turn == 'p' and shift == a[plidx]:\n            shift = 0\n            if not all_pl:\n                turn = 'j'\n            plidx += 1\n            total -= a[plidx-1]\n            \n        #print(ans)\n            \n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "def lints():\n    return list(map(int, input().split()))\ndef ints():\n    return map(int, input().split())\ndef inp():\n    return input()\ndef inps():\n    return input().split()\n\ndef main():\n    n, m, d = ints()\n    c = lints()\n    b = [0] * m\n    p = 0\n    for i in range(m):\n        b[i] = p + d\n        p = b[i] + c[i] - 1\n    if b[-1] + c[-1] - 1 + d < n + 1:\n        print(\"NO\")\n        return\n    p = n + 1\n    res = [0] * n\n    for i in range(m - 1, -1, -1):\n        if b[i] + c[i] - 1 >= p:\n            b[i] = p - c[i]\n        p = b[i]\n        for j in range(b[i], b[i] + c[i]):\n            res[j - 1] = i + 1\n    print(\"YES\")\n    print(*res)\n\n\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  vector<long long int> v;\n  string s1;\n  long long int n, m, d, k, s = 0;\n  cin >> n >> m >> d;\n  for (long long int i = 0; i < m; i++) {\n    cin >> k;\n    v.push_back(k);\n    s += k;\n  }\n  long long int y = 0;\n  long long int p = 0;\n  vector<long long int> ans;\n  while (y < n + 1 && p < m && s > 0) {\n    if (n - y - d >= s) {\n      for (long long int i = y + 1; i < y + d; i++) {\n        ans.push_back(0);\n      }\n      y += d;\n      long long int x = v[p];\n      for (long long int i = y; i < y + x; i++) {\n        ans.push_back(p + 1);\n      }\n      y += x - 1;\n      p += 1;\n      s -= x;\n    } else {\n      long long int a = n + 1 - s;\n      for (long long int i = y + 1; i < a; i++) {\n        ans.push_back(0);\n      }\n      y = a;\n      long long int x = v[p];\n      for (long long int i = y; i < y + x; i++) {\n        ans.push_back(p + 1);\n      }\n      y += x - 1;\n      p += 1;\n      s -= x;\n    }\n    if (s <= 0) {\n      if (y + d >= n + 1) {\n        for (long long int i = y + 1; i < n + 1; i++) {\n          ans.push_back(0);\n        }\n        y = n + 1;\n      }\n    }\n  }\n  if (y < n) {\n    cout << \"NO\\n\";\n  } else {\n    cout << \"YES\\n\";\n    for (long long int i = 0; i < n; i++) {\n      cout << ans[i] << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int N = in.nextInt();\n            int M = in.nextInt();\n            int d = in.nextInt();\n            ArrayList<Side> arr = new ArrayList<>();\n            int last = 0;\n            for (int i = 0; i < M; i++) {\n                int sz = in.nextInt();\n                arr.add(new Side(last + 1, last + sz));\n                last += sz;\n            }\n            arr.add(new Side(N + 1, N + 1));\n            for (int i = M - 1; i >= 0; i--) {\n                if (arr.get(i + 1).l - arr.get(i).r > d) {\n                    int move = arr.get(i + 1).l - arr.get(i).r - d;\n                    arr.get(i).l += move;\n                    arr.get(i).r += move;\n                } else {\n                    break;\n                }\n            }\n            if (arr.get(0).l > d) {\n                out.println(\"NO\");\n            } else {\n                int[] res = new int[N];\n                out.println(\"YES\");\n                for (int j = 0; j < M; j++) {\n                    Side s = arr.get(j);\n                    for (int i = s.l - 1; i < s.r; i++) {\n                        res[i] = j + 1;\n                    }\n                }\n                for (int val : res) {\n                    out.print(val + \" \");\n                }\n                out.close();\n            }\n        }\n\n        class Side {\n            int l;\n            int r;\n\n            Side(int l, int r) {\n                this.l = l;\n                this.r = r;\n            }\n\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import math\n\nwidth , numofplanks , jump = input().split(\" \")\nwidth = int(width)\nnumofplanks = int(numofplanks)\njump = int(jump)\nplanks = [int(planks) for planks in input().split(\" \")]\n#planks = [1 for i in range(1000)]\ntpl = sum(planks)\n\ntjl = width - tpl\n\njumpleft = jump\ndistleft = width\nmanpos = 0\nj= 0\nk = 0\nplanksleft = numofplanks\na = [0 for i in range(width)]\n\n\nif jump > width:\n    for i in range(j,numofplanks):\n        a[k:k+planks[i]] = [i+1 for x in range(0,planks[i])]\n        k+=planks[i]\n        print('yes')\n        print(*a)\n        break\n\n\n\nelif jump <= width:\n    for i in range(width):\n        jumpleft-=1\n        if tjl == 0 :\n            for i in range(j,numofplanks):\n                a[k:k+planks[i]] = [i+1 for x in range(0,planks[i])]\n                k+=planks[i]\n            print('yes')\n            print(*a)\n            break\n\n        if jumpleft == 0:           \n            manpos+=planks[j]\n            distleft-=planks[j]\n            jumpleft=jump\n            a[k:k+planks[j]] = [j+1 for i in range(0,planks[j])]\n            k+=planks[j]\n            j+=1\n            planksleft-=1\n        else:\n            tjl-=1\n            manpos+=1\n            distleft-=1\n            a[k]=0\n            k+=1\n            \n\n        \n        if distleft < jumpleft:\n                print('yes')\n                a[k:width] = [0 for i in range(k,width)]\n                k = width\n                print(*a)\n                break\n        if planksleft == 0:\n            if distleft < jump:\n                print('yes')\n                print(*a)\n                break\n            elif distleft >= jump:\n                print('no')\n                break\n            \n        \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<vector<int>> gr;\ninline void put(int num, int len, int start, vector<int>& ans) {\n  for (int i = start; i < start + len; ++i) {\n    ans[i] = num;\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> c(m);\n  for (int& i : c) {\n    cin >> i;\n  }\n  vector<int> suff(m);\n  suff[m - 1] = c[m - 1];\n  for (int i = m - 2; i > -1; --i) {\n    suff[i] = suff[i + 1] + c[i];\n  }\n  vector<int> ans(n);\n  int cur = -1;\n  for (int i = 0; i < m; ++i) {\n    put(i + 1, c[i], min(cur + d, n - suff[i]), ans);\n    cur = min(cur + d, n - suff[i]) + c[i] - 1;\n  }\n  if (cur + d >= n) {\n    cout << \"YES\\n\";\n    for (int i : ans) {\n      cout << i << ' ';\n    }\n  } else {\n    cout << \"NO\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long A[1005], ANS[1005];\nint main() {\n  long long n, m, d, t;\n  scanf(\"%lld\", &n), scanf(\"%lld\", &m), scanf(\"%lld\", &d);\n  for (long long i = 1; i <= m; i++) {\n    scanf(\"%lld\", &A[i]);\n  }\n  long long i = n, j;\n  for (j = m; j >= 1; j--) {\n    t = A[j];\n    while (t--) {\n      ANS[i] = j;\n      i--;\n    }\n  }\n  long long pos = 0, cnt = 0;\n  bool f = 0;\n  while (pos + d <= n) {\n    i = pos + d;\n    f = 0;\n    for (; i <= n; i++) {\n      if (ANS[i] != 0) {\n        f = 1;\n        break;\n      }\n    }\n    if (!f) {\n      printf(\"NO\\n\");\n      return 0;\n    }\n    j = pos + d;\n    while (i <= n) {\n      if (ANS[i] == ANS[i + 1]) {\n        ANS[j] = ANS[i];\n        j++;\n        i++;\n      } else {\n        ANS[j] = ANS[i];\n        break;\n      }\n    }\n    while (i > j) {\n      if (ANS[i] != ANS[i - 1]) {\n        ANS[i] = 0;\n        break;\n      } else {\n        ANS[i] = 0;\n        i--;\n      }\n    }\n    pos = j;\n  }\n  printf(\"YES\\n\");\n  for (long long i = 1; i <= n; i++) {\n    printf(\"%lld \", ANS[i]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Riverjump\n{\n\tpublic static void main(String args[])throws IOException\n\t{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint d = Integer.parseInt(st.nextToken());\n\t\tint tile[] = new int[m];\n\t\tint sum=0;\n\t\tst = new StringTokenizer(br.readLine());\n\t\tfor(int i=0;i<m;i++){\n\t\t\ttile[i] = Integer.parseInt(st.nextToken());\n\t\t\tsum += tile[i];\n\t\t}\n\t\tint jumps=(n-sum)/d;\n\t\tint ljump=0;\n\t\tif(n-sum>d)\n\t\t\tljump = (n-sum)%d;\n\t\tint tnum=1;\n\t\tboolean flag=false;\n\t\tint river[]= new int[n+1];\n\t\tfor(int i = jumps>0?d:1;i<=n;i++)\n\t\t{\n\t\t\tif(tile[tnum-1]>0){\n\t\t\triver[i]=tnum;\n\t\t\ttile[tnum-1]--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tjumps--;\n\t\t\tif(jumps>0)\n\t\t\t\ti=i+d-2;\n\t\t\telse if(ljump>0)\n\t\t\t{\n\n\t\t\t\ti=i+ljump-1;\n\t\t\t\tljump=0;\n\t\t\t}\n\t\t\telse\n\t\t\t\ti--;\n\t\t\ttnum++;\n\t\t\tif(tnum>tile.length)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t}\n\t\t//boolean flag=false;\n\t\tif(d>n)\n\t\t\tflag=true;\n\t\telse{\n\t\tfor(int i=n;i>=n-d+1;i--)\n\t\t{\n\t\t\tif(river[i]!=0){\n\t\t\t\tflag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag==true){\n\t\tSystem.out.println(\"YES\");\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tSystem.out.print(river[i]+\" \");\n\t\tSystem.out.println();\n\t\t//System.out.println(sum+\" \"+(n-sum)/d);\n\t}\n\telse\n\t\tSystem.out.println(\"NO\");\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst int N = 2002;\nconst int MOD = 1e9 + 7;\nint a[1001], n, m, d;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cin >> n >> m >> d;\n  --d;\n  for (int i = 0; i < m; ++i) cin >> a[i];\n  int tot = 0;\n  for (int i = 0; i < m; ++i) tot += a[i];\n  int td = n - tot;\n  if (td > (m + 1) * d)\n    puts(\"NO\");\n  else {\n    puts(\"YES\");\n    int i = 0, j = 0;\n    while (i < n) {\n      int k = 0;\n      while (td && k < d) {\n        printf(\"0 \");\n        --td;\n        ++k;\n        ++i;\n      }\n      if (j < m) {\n        while (a[j]) {\n          printf(\"%d \", j + 1);\n          --a[j];\n          ++i;\n        }\n        ++j;\n      }\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int,input().split())\nc = list(map(int,input().split()))\nsumm = sum(c)\nwater = n - summ\nw_dis = (d-1)*(m+1)\nif water > (d-1)*(m+1):\n    print(\"NO\")\n    exit(0)\nans = [0]*n\nit = 0\nif (n<d) or (water <= d-1):\n    for i in range(m):\n        for _ in range(c[i]):\n            ans[it] = i+1\n            it += 1\n    print(\"YES\")\n    print(*ans)\n    exit(0)\nplat = 1\nwhile water != w_dis:\n    if w_dis - d + 1 >= water:\n        m -= 1\n        for _ in range(c[plat-1]):\n            ans[it] = plat\n            it += 1\n        plat += 1\n        w_dis -= d - 1\n    else:\n        w_dis -= d - 1\n        a = water%w_dis\n        it += a\n        water -= a\n        for i in range(c[plat-1]):\n            ans[it] = plat\n            it+= 1\n        plat += 1\n        m -= 1\nfor _ in range(m):\n    it += d-1\n    for i in range(c[plat-1]):\n        ans[it] = plat\n        it += 1\n    plat += 1\nprint(\"YES\")\nprint(*ans)\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mxN = 1e5;\nconst long long mod = 1e9 + 7;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> a(m);\n  vector<int> ans(n, 0);\n  for (int i = 0; i < m; i++) cin >> a[i];\n  int ind = m, t = a[m - 1], last = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    if (t > 0) {\n      ans[i] = ind;\n      t--;\n    } else {\n      ind--;\n      if (ind == 0) {\n        last = i + 1;\n        break;\n      }\n      t = a[ind - 1];\n      ans[i] = ind;\n      t--;\n    }\n  }\n  int curr = 1;\n  bool p = 0;\n  for (int i = d - 1; i < n; i += d) {\n    if (ans[i] == 0) {\n      if (curr > m) {\n        cout << \"NO\\n\";\n        p = 1;\n        break;\n      }\n      int j;\n      for (j = last; j < last + a[curr - 1]; j++) ans[j] = 0;\n      for (j = i; j < i + a[curr - 1]; j++) ans[j] = curr;\n      i = j - 1;\n      last += a[curr - 1];\n      curr++;\n    }\n  }\n  if (!p) {\n    cout << \"YES\\n\";\n    for (int i = 0; i < n; i++) cout << ans[i] << \" \";\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst int N = 1010;\nint n, m, d, c[N], a[N];\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &d);\n  int req = 0;\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d\", &c[i]);\n    req += c[i];\n  }\n  int cur = 0;\n  for (int i = 0; i < m; i++) {\n    req -= c[i];\n    int sc;\n    for (int nxt = cur + d; nxt > cur; nxt--) {\n      int to = nxt + c[i] - 1;\n      int left = n - to;\n      if (left >= req) {\n        sc = nxt;\n        break;\n      }\n    }\n    for (int j = sc; j < sc + c[i]; j++) a[j] = i + 1;\n    cur = sc + c[i] - 1;\n  }\n  if (cur + d > n) {\n    puts(\"YES\");\n    for (int i = 1; i <= n; i++) printf(\"%d \", a[i]);\n  } else\n    puts(\"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "if __name__ == '__main__':\n    n, m, d = map(int, input().split(' '))\n    c = list(map(int, input().split(' ')))\n    l = sum(c)\n    if (m + 1)*(d - 1) + l >= n:\n        print('YES')\n\n        ans = [0]*n\n        i = 0\n        p = 0\n        while i < n:\n            if l + i + d - 1 < n:\n                i += d - 1\n                while i < n and c[p] > 0:\n                    l -= 1\n                    c[p] -= 1\n                    ans[i] = p + 1\n                    i += 1\n                p += 1\n            else:\n                break\n        i += n - (l + i)\n        while p < m:\n            while c[p] > 0:\n                c[p] -= 1\n                ans[i] = p + 1\n                i += 1\n            p += 1\n\n        print(' '.join(map(str, ans)))\n    else:\n        print('NO')\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst ll N = 1e5 + 10;\nconst ll inf = 1e16 + 10;\nconst ll MOD = 1e9 + 7;\nint n, m, d, c[N], pos[N];\nint main() {\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) cin >> c[i];\n  int last = 0;\n  for (int i = 1; i <= m; i++) {\n    pos[i] = last + d;\n    last = pos[i] + c[i] - 1;\n  }\n  if (last + d < n + 1) {\n    printf(\"NO\\n\");\n    return 0;\n  }\n  for (int i = 1; i <= m; i++) {\n    if (last <= n) break;\n    int reduce = last - n;\n    reduce = min(reduce, d - 1);\n    for (int j = i; j <= m; j++) {\n      pos[j] -= reduce;\n    }\n    last -= reduce;\n  }\n  printf(\"YES\\n\");\n  int prev = 0;\n  for (int i = 1; i <= m; i++) {\n    int here = pos[i] - prev - 1;\n    while (here--) printf(\"0 \");\n    here = c[i];\n    while (here--) printf(\"%d \", i);\n    prev = pos[i] + c[i] - 1;\n  }\n  int here = n - prev;\n  while (here--) printf(\"0 \");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\nfrom collections import defaultdict\nfrom itertools import groupby\n\n# input = sys.stdin.readline\nrt = lambda: map(int, input().split())\nri = lambda: int(input())\nrl = lambda: list(map(int, input().split()))\n\n\ndef main():\n    n, m, d = rt()\n    c = rl()\n\n    max_pos = []\n    jump = d\n    for ci in c:\n        max_pos.append(jump)\n        jump += (ci-1)+d\n\n    if jump < n+1:\n        print('NO')\n    else:\n        if max_pos[-1]+c[-1]-1 > n:\n            max_pos[-1] = n-c[-1]+1\n            for i in range(m-2, -1, -1):\n                if max_pos[i] + c[i] - 1 >= max_pos[i+1]:\n                    max_pos[i] = max_pos[i+1]-c[i]\n        print('YES')\n        pos = 1\n        for i in range(m):\n            while pos < max_pos[i]:\n                print('0 ', end=\"\")\n                pos += 1\n            for j in range(c[i]):\n                print(f'{i+1} ', end=\"\")\n                pos += 1\n        while pos <= n:\n            print('0 ', end=\"\")\n            pos += 1\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\n\ndef slv():\n    n, m, d = map(int, input().split())\n    C = list(map(int, input().split()))\n    if (d - 1) * (m + 1) < n - sum(C):\n        print(\"NO\")\n        return\n\n    print(\"YES\")\n    D = [d - 1]*(m + 1)\n    rep = (d - 1)*(m + 1) - (n - sum(C))\n    for i in range(rep):\n        for j in range(m + 1):\n            if D[j] > 0:\n                D[j] -= 1\n                break\n    ans = []\n    for i in range(m):\n        for _ in range(D[i]):\n            ans.append(0)\n        for _ in range(C[i]):\n            ans.append(i + 1)\n    for _ in range(D[m]):\n        ans.append(0)\n    assert len(ans) == n\n    print(*ans)\n    return\n\n\ndef main():\n    t = 1\n    for i in range(t):\n        slv()\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d, v[1111], nrPlat = 1;\nint lgPlat[1111];\nint main() {\n  cin >> n >> m >> d;\n  int s = 0, contor = 0, start = 0;\n  for (int i = 1; i <= m; i++) {\n    ++contor;\n    cin >> lgPlat[i];\n    s += lgPlat[i];\n    for (int j = start + 1, nr = 1; nr <= lgPlat[i]; j++) {\n      v[j] = contor;\n      start = j;\n      nr++;\n    }\n  }\n  int finish = n + 1;\n  while (finish >= 1) {\n    if ((finish - d <= 0) || v[finish - d] != 0) {\n      break;\n    } else {\n      if (m > 0) {\n        for (int i = s, lg = lgPlat[m]; lg > 0 && i >= 1; i--) {\n          --s;\n          v[i] = 0;\n          --lg;\n        }\n        for (int i = finish - d; i >= 1, lgPlat[m] > 0; i--) {\n          v[i] = m;\n          --lgPlat[m];\n          finish = i;\n        }\n        --m;\n      } else {\n        cout << \"NO\";\n        return 0;\n      }\n    }\n  }\n  cout << \"YES\\n\";\n  for (int i = 1; i <= n; i++) {\n    cout << v[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int,input().split())\nl = list(map(int,input().split()))\ns = sum(l)\nans = [0]*n\nlast =-1\nptr = 0\nus = 0\nfor i in range(n):\n    if(s>=n-d-i+1 and s>0):\n        last = i\n        break\n    if(i-last>=d):\n        if(ptr>=m):\n            print(\"NO\")\n            exit(0)\n        if(us!=l[ptr]):\n            ans[i] = ptr+1\n            us+=1\n            s-=1\n        if (us == l[ptr]):\n            ptr+=1\n            last = i\n            us = 0\nfor i in range(ptr,m):\n    for j in range(l[i]):\n        ans[last]= i+1\n        last+=1\nprint(\"YES\")\nfor i in ans:\n    print(i,end = \" \")\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d, i, j, a[1008], b[1008], s;\nint main() {\n  cin >> n >> m >> d;\n  for (i = 0; i < m; i++) {\n    cin >> a[i];\n    s += a[i];\n  }\n  if (s + (m + 1) * (d - 1) < n) {\n    cout << \"NO\";\n    return 0;\n  }\n  cout << \"YES\\n\";\n  i = 0;\n  while (i < n) {\n    i += min(n - i - s, d - 1);\n    s -= a[j];\n    while (a[j]) {\n      b[++i] = j + 1;\n      a[j]--;\n    }\n    j++;\n  }\n  for (i = 1; i <= n; i++) cout << b[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class main {\n\n    public static void main(String[] args) {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try {\n            String []x = br.readLine().split(\" \");\n            int w = Integer.parseInt(x[0]);\n            int platformsNo = Integer.parseInt(x[1]);\n            int step = Integer.parseInt(x[2]);\n\n            if(platformsNo==0) {\n                System.out.print(\"NO\");\n            }else {\n                String[] p = br.readLine()\n                               .split(\" \");\n\n                int platforms[] = new int[platformsNo];\n                int sum = 0;\n                for (int i = 0; i < platformsNo; i++) {\n                    platforms[i] = Integer.parseInt(p[i]);\n                    sum += platforms[i];\n                }\n\n\n                if (sum + ((platformsNo + 1) * (step - 1)) >= w) {\n                    System.out.println(\"YES\");\n                    float a = w - sum;\n                /*if(a/(step-1) == platformsNo+1 || a/(step-1) == platformsNo || a/(step-1) == platformsNo-1){\n                    int j=0;\n                    int current=1;\n                    boolean empty = a/(step-1) == platformsNo+1;\n                    for(int i=0;i<w;i++){\n                        if(empty) {\n                            System.out.print(\"0 \");\n                            j++;\n                            if(j>=step){\n                                j=0;\n                                empty=false;\n                            }\n                        }\n                        if(!empty){\n                            System.out.print(current+\" \");\n                            j++;\n                            if(j>=platforms[current-1]){\n                                j=0;\n                                empty=true;\n                            }\n\n                        }\n\n                    }\n\n                }else if (a/(step-1)){*/\n\n                    double noOfWater=0;\n                    if(step>1) {\n                         noOfWater = a / (step - 1);\n                    }\n                    \n                    boolean empty = false;\n\n\n                    double s = Math.ceil(noOfWater);\n                    double s1 = Math.floor(noOfWater);\n                    double aa=0;\n\n                    if(s1 != s){\n                        aa=a-(s1*(step-1));\n                    }\n\n                    if (aa !=0 || noOfWater>=platformsNo) {\n                        empty = true;\n                    }\n\n                    int j = 0;\n                    int current = 1;\n                    int waterAdded = 0;\n                    for (int i = 0; i < w; i++) {\n                        if (empty) {\n\n                            System.out.print(\"0 \");\n                            j++;\n                            if (j >= step - 1 ) {\n                                j = 0;\n                                waterAdded++;\n                                empty = false;\n                            }else if(aa!=0 && j>= aa && waterAdded==s-1){\n                                j = 0;\n                                waterAdded++;\n                                empty = false;\n                                aa=0;\n                            }\n                        } else if (!empty) {\n                            System.out.print(current + \" \");\n                            j++;\n                            if (j >= platforms[current - 1]) {\n                                j = 0;\n                                current++;\n                                if (waterAdded < s)\n                                    empty = true;\n                            }\n\n                        }\n\n                    }\n\n\n                } else {\n                    System.out.print(\"NO\");\n                }\n            }\n\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "width, num_plats, jump_dist = map(int, input().split())\n\nplat_sizes = list(map(int, input().split()))\n\nmin_gap = jump_dist - 1\n\ntotal = min_gap\nplat_total = 0\n\nfor i in range(len(plat_sizes)):\n    total += plat_sizes[i]\n    plat_total += plat_sizes[i]\n    total += min_gap\n\nif total >= width: print('YES')\nelse: \n    print('NO')\n    exit()\n\ngaps_needed = width - plat_total\n    \nfor i in range(len(plat_sizes)):\n    for _ in range(min_gap): \n        if gaps_needed > 0:\n            print(0, end=' ')\n        gaps_needed -= 1\n    for _ in range(plat_sizes[i]): print(i+1, end=' ')\n\nif gaps_needed > 0:\n    for _ in range(gaps_needed): print(0, end=' ')\n\n# 0 1 1 0 2 2 2 0 0 3\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Codeforces {\n\n    static double Phi = (1 + Math.sqrt(5)) / 2.0;\n    static int MAX = -1 >>> 1;\n    static long MODL = 1_000_000_007L;\n    static int MOD = 1_000_000_007;\n    static void no() throws IOException {println(\"NO\");}\n    static void yes() throws IOException {println(\"YES\");}\n\n    static boolean testCases = false;\n    static boolean DEBUG = true;\n\n    static void main() throws Exception {\n        int n = ni();\n        int m = ni();\n        int d = ni();\n        int[] c = nia(m);\n        int nws = n + 1;\n        int[] output = new int[n + 2];\n        output[0] = -1;\n        output[n + 1] = -1;\n\n        int sumLeft = 0;\n        for(int i = 0; i < m; ++i) sumLeft += c[i];\n\n        for(int i = m - 1; i >= 0; --i) {\n            //current plank \n            //we have nws | d==2\n            // _ _ .... _ _ 96i 97i 98i 99_ 100(nws)\n            // \n            sumLeft -= c[i];\n            int startAt = Math.max(1 + sumLeft, nws - (c[i] + d - 1));\n            for(int z = startAt, count = 0; count < c[i]; ++z, ++count) {\n                output[z] = i + 1; \n            }\n            nws = startAt;\n        }\n        debug(Arrays.toString(output));\n        int count = 0;\n        for(int i = 0; i < n + 2; ++i) {\n            if(output[i] == 0) ++count;\n            else count = 0;\n            if(count >= d) {\n                no();\n                return;\n            }\n        } \n        yes();\n        for(int i = 1; i < n + 1; ++i) {\n            print(output[i] + \" \");\n        }\n        println();\n    }\n    \n    public static void main(String[] args) throws Exception {\n        long startPointTime = System.currentTimeMillis();\n        scannerIn = System.in;\n        printerBW = new BufferedWriter(new OutputStreamWriter(System.out));\n        if (DEBUG && System.getProperty(\"ONLINE_JUDGE\") == null) {\n            HABLA = true;\n            debug(\"Debugging enabled\");\n        }\n\n        int t = testCases ? ni() : 1;\n        int to = t;\n        while (t-- > 0) {\n            debug(\"Case #\" + (to - t) + \" ---------------- \");\n            main();\n        }\n        long endTime = System.currentTimeMillis();\n        float totalProgramTime = endTime - startPointTime;\n        if (HABLA)\n            debug(\"Execution time is \" + totalProgramTime + \" (\" + (totalProgramTime / 1000) + \"s)\");\n        close();\n    }\n    \n //IO Stuff\n    private static boolean HABLA = false;\n    private static byte[] scannerByteBuffer = new byte[1024]; // Buffer of Bytes\n    private static int scannerIndex;\n    private static InputStream scannerIn;\n    private static int scannerTotal;\n    private static BufferedWriter printerBW;\n\n    private static int next() throws IOException { // Scan method used to scan buf\n        if (scannerTotal < 0)\n            throw new InputMismatchException();\n        if (scannerIndex >= scannerTotal) {\n            scannerIndex = 0;\n            scannerTotal = scannerIn.read(scannerByteBuffer);\n            if (scannerTotal <= 0)\n                return -1;\n        }\n        return scannerByteBuffer[scannerIndex++];\n    }\n\n    static int ni() throws IOException {\n        int integer = 0;\n        int n = next();\n        while (isWhiteSpace(n)) // Removing startPointing whitespaces\n            n = next();\n        int neg = 1;\n        if (n == '-') { // If Negative Sign encounters\n            neg = -1;\n            n = next();\n        }\n        while (!isWhiteSpace(n)) {\n            if (n >= '0' && n <= '9') {\n                integer *= 10;\n                integer += n - '0';\n                n = next();\n            } else\n                throw new InputMismatchException();\n        }\n        return neg * integer;\n    }\n\n    static long nl() throws IOException {\n        long integer = 0;\n        int n = next();\n        while (isWhiteSpace(n)) // Removing startPointing whitespaces\n            n = next();\n        int neg = 1;\n        if (n == '-') { // If Negative Sign encounters\n            neg = -1;\n            n = next();\n        }\n        while (!isWhiteSpace(n)) {\n            if (n >= '0' && n <= '9') {\n                integer *= 10;\n                integer += n - '0';\n                n = next();\n            } else\n                throw new InputMismatchException();\n        }\n        return neg * integer;\n    }\n\n    static String line() throws IOException {\n        StringBuilder sb = new StringBuilder();\n        int n = next();\n        while (isWhiteSpace(n))\n            n = next();\n        while (!isNewLine(n)) {\n            sb.append((char) n);\n            n = next();\n        }\n        return sb.toString();\n    }\n\n    private static boolean isNewLine(int n) {\n        return n == '\\n' || n == '\\r' || n == -1;\n    }\n\n    private static boolean isWhiteSpace(int n) {\n        return n == ' ' || isNewLine(n) || n == '\\t';\n    }\n\n    static int[] nia(int n) throws Exception {\n        if (n < 0)\n            throw new Exception(\"Array size should be non negative\");\n        int[] array = new int[n];\n        for (int i = 0; i < n; i++)\n            array[i] = ni();\n        return array;\n    }\n\n    static long[] nla(int n) throws Exception {\n        if (n < 0)\n            throw new Exception(\"Array size should be non negative\");\n        long[] array = new long[n];\n        for (int i = 0; i < n; i++)\n            array[i] = nl();\n        return array;\n    }\n\n    static float[] nfa(int n) throws Exception {\n        if (n < 0)\n            throw new Exception(\"Array size should be non negative\");\n        float[] array = new float[n];\n        for (int i = 0; i < n; i++)\n            array[i] = nl();\n        return array;\n    }\n\n    static double[] nda(int n) throws Exception {\n        if (n < 0)\n            throw new Exception(\"Array size should be non negative\");\n        double[] array = new double[n];\n        for (int i = 0; i < n; i++)\n            array[i] = nl();\n        return array;\n    }\n\n    static <T> void print(T str) throws IOException {\n        printerBW.append(str.toString());\n        if (HABLA) flush();\n    }\n\n    static <T> void println() throws IOException {\n        printerBW.append('\\n');\n        if (HABLA) flush();\n    }\n\n    static <T> void println(T str) throws IOException {\n        if (str == null) {\n            printerBW.append(\"null\\n\");\n        } else {\n            printerBW.append(str.toString());\n            printerBW.append('\\n');\n            if (HABLA) flush();\n        }\n    }\n\n    public static final String ANSI_RESET = \"\\u001B[0m\";\n    public static final String ANSI_DEBUG = \"\\u001B[33m\";\n    static <T> void debugl(T str) throws IOException {\n        if (!HABLA) return;\n        if (str == null) {\n            printerBW.append(ANSI_DEBUG);\n            printerBW.append(\"null\");\n            printerBW.append(ANSI_RESET);\n        } else {\n            printerBW.append(ANSI_DEBUG);\n            printerBW.append(str.toString());\n            printerBW.append(ANSI_RESET);\n        }\n        flush();\n    }\n\n    static void debug() throws IOException {\n        if (!HABLA) return;\n        printerBW.append('\\n');\n        flush();\n    }\n    static <T> void debug(T str) throws IOException {\n        if (!HABLA) return;\n        if (str == null) {\n            printerBW.append(ANSI_DEBUG);\n            printerBW.append(\"null\\n\");\n            printerBW.append(ANSI_RESET);\n        } else {\n            printerBW.append(ANSI_DEBUG);\n            printerBW.append(str.toString());\n            printerBW.append(ANSI_RESET);\n            printerBW.append('\\n');\n        }\n        flush();\n    }\n\n    static void flush() throws IOException {\n        printerBW.flush();\n    }\n\n    static void close() {\n        try {\n            printerBW.close();\n        } catch (IOException e) {\n            System.out.println(e.toString());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\np = list(map(int, input().split()))\n\npositions = [0] * len(p)\npositions[-1] = n + 1 - p[-1]\nfor i in reversed(range(len(p)-1)):\n    positions[i] = positions[i+1] - p[i]\n\ndef feasible(p, positions, d):\n    if positions[0] > d:\n        return False\n    for i in range(1, len(p)):\n        if positions[i] - (positions[i-1] + p[i-1] - 1) > d:\n            return False\n    if n+1 - (positions[-1] + p[-1] - 1) > d:\n        return False\n    return True\n\ng = [0] * m\ng[0] = d\nfor i in range(1, m):\n    g[i] = g[i-1] + p[i-1] - 1 + d\n\ni = 0\nwhile not feasible(p, positions, d) and i < len(p):\n    positions[i] = g[i]\n    i += 1\n\nif feasible(p, positions, d):\n    print(\"YES\")\n    board = [0] * n\n    for i in range(m):\n        for j in range(p[i]):\n            board[positions[i]-1+j] = i+1\n    for e in board:\n        print(e, end=' ')\n    print()\nelse:\n    print(\"NO\")"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.lang.String;\n\nimport static java.lang.Math.*;\n\npublic class Main {\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringTokenizer st = new StringTokenizer(\"\");\n    PrintWriter pw = new PrintWriter(System.out);\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    String next() throws IOException {\n        if (!st.hasMoreTokens()) {\n            st = new StringTokenizer(br.readLine());\n        }\n        return st.nextToken();\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n\n    public Main() throws FileNotFoundException {\n    }\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n\n    long mod = (long) 1e9 + 7;\n\n    void run() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int d = nextInt();\n        Pair[] a = new Pair[m];\n        int sum = 0;\n        for (int i = 0; i < a.length; i++) {\n            a[i] = new Pair(nextInt(), i);\n            sum += a[i].x;\n        }\n        int[] ans = new int[n];\n        Arrays.fill(ans, -1);\n        int pos = ans.length - 1;\n        for (int i = a.length - 1; i >= 0; i--) {\n            for (int j = pos; j > pos - a[i].x; j--) {\n                ans[j] = a[i].y;\n            }\n            pos -= a[i].x;\n        }\n        int start = n - sum;\n        int next = 0;\n        while (true) {\n            if (start >= n || next + d >= n || ans[next + d - 1] != -1) break;\n            int e = ans[start];\n            int x = start;\n            while (x < n && ans[x] == e) {\n                ans[x] = -1;\n                x++;\n            }\n            int cur = x - start;\n            start = x;\n            for (int i = 0; i < cur; i++) {\n                ans[next + i + d - 1] = e;\n            }\n            next += d + cur - 1;\n        }\n        int last = 0;\n        for (int i = 0; i < ans.length; i++) {\n            if (ans[i] != -1) last = i;\n        }\n        if(last + d < n){\n            pw.print(\"NO\");\n            pw.close();\n            return;\n        }\n        pw.println(\"YES\");\n        for (int i = 0; i < ans.length; i++) {\n            pw.print((ans[i] + 1) + \" \");\n        }\n        pw.close();\n    }\n\n    class Pair {\n        int x, y;\n\n        public Pair(int a, int b) {\n            x = a;\n            y = b;\n        }\n    }\n\n    class PairComp implements Comparator<Pair> {\n\n        @Override\n        public int compare(Pair o1, Pair o2) {\n            if (o1.x == o2.x) return Integer.compare(o1.y, o2.y);\n            return Integer.compare(o1.x, o2.x);\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC\n    {\n        public void solve(int testNumber, Scanner in, PrintWriter out)\n        {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int d = in.nextInt();\n            in.nextLine();\n            String platformsString = in.nextLine();\n            String[] platforms = platformsString.split(\" \");\n            int platformsNums[] = convert(platforms);\n\n            int river[] = new int[n + 2];\n\n            for (int i = m - 1, pos = n; i >= 0; --i)\n            {\n                for (int len = 0; len < platformsNums[i]; ++len)\n                {\n                    river[pos - len] = i + 1;\n                }\n                pos -= platformsNums[i];\n            }\n\n            int currentPos = 0;\n            while (true)\n            {\n                while (currentPos + 1 < n + 1 && river[currentPos + 1] > 0) ++currentPos;\n\n                if (currentPos + d >= n + 1) break;\n                //needs a platform?\n                if (river[currentPos + d] == 0)\n                {\n                    int lpos = -1;\n                    //identify first platform\n                    for (int i = currentPos + d; i < n + 2; ++i)\n                    {\n                        if (river[i] != 0)\n                        {\n                            lpos = i;\n                            break;\n                        }\n                    }\n                    // no more platforms\n                    if (lpos == -1)\n                    {\n                        out.print(\"NO\");\n                        return;\n                    }\n                    //detect end of the current platform\n                    int rpos = -1;\n                    for (int i = lpos; i < n + 2; ++i)\n                    {\n                        if (river[i] == river[lpos])\n                            rpos = i;\n                        else\n                            break;\n                    }\n                    // keep shifting till getting the platform\n                    while (river[currentPos + d] == 0)\n                    {\n                        //swap\n                        int t = river[lpos - 1];\n                        river[lpos - 1] = river[rpos];\n                        river[rpos] = t;\n                        --lpos;\n                        --rpos;\n                    }\n                }\n                currentPos += d;\n            }\n            out.println(\"YES\");\n            for (int i = 1; i <= n; i++)\n            {\n                out.print(river[i] + \" \");\n            }\n        }\n\n        public static int[] convert(String[] platforms)\n        {\n            int nums[] = new int[platforms.length];\n            for (int i = 0; i < platforms.length; i++)\n            {\n                nums[i] = Integer.parseInt(platforms[i]);\n            }\n            return nums;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "def initial_setting(a,n,d):\n    s=sum(a)\n    t=n-s\n    x=0\n    while d<=t:\n        t-=1\n        x+=1\n    return t,x\n \nn,m,d=map(int,input().split())\na=list(map(int,input().split()))\nif d==1:\n    if sum(a)==n:\n        pos=[0]*(len(a))\n        pos[0]=0\n        for i in range(1,len(a)):\n            pos[i]=a[i-1]+pos[i-1]\n        dp=[0]*(n)\n        s=1\n        for i in range(len(pos)):\n            for j in range(pos[i],pos[i]+a[i]):\n                dp[j]=s\n            s+=1\n        print(\"YES\")\n        print(*dp)\n    else:\n        print(\"NO\")\nelse:\n    t,x=initial_setting(a,n,d)\n    pos=[0]*(len(a))\n    pos[0]=t\n    for i in range(1,len(a)):\n        pos[i]=a[i-1]+pos[i-1]\n    req=x-min(x,d-1)\n    c=0\n    for p in range(1,len(pos)):\n        if req<=d-1:\n            pos[p]=pos[p]+req+c\n            c+=req\n            req=0\n        else:\n            pos[p]=pos[p]+d-1+c\n            req-=d-1\n            c+=d-1\n    if req==0:\n        dp=[0]*(n)\n        s=1\n        for i in range(len(pos)):\n            for j in range(pos[i],pos[i]+a[i]):\n                dp[j]=s\n            s+=1\n        print(\"YES\")\n        print(*dp)\n    else:\n        print(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N, M, D;\nint arr[1010];\nint startpos[1010];\nint f[1010];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> N >> M >> D;\n  int i;\n  int sum = 0;\n  for (i = 0; i < M; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  int nowpos = 0;\n  for (i = 0; i < M; i++) {\n    int startps = 0;\n    startps = min(nowpos + D, N + 1 - sum);\n    startpos[i] = startps;\n    nowpos = startps + arr[i] - 1;\n    sum -= arr[i];\n  }\n  if (nowpos + D <= N) {\n    cout << \"NO\" << '\\n';\n    return 0;\n  }\n  for (i = 0; i < M; i++) {\n    int j;\n    for (j = 0; j < arr[i]; j++) {\n      f[j + startpos[i]] = i + 1;\n    }\n  }\n  cout << \"YES\" << '\\n';\n  for (i = 1; i <= N; i++) {\n    cout << f[i] << ' ';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T1, typename T2>\nostream& operator<<(ostream& os, const pair<T1, T2>& p) {\n  return os << \"{\" << p.first << \",\" << p.second << \"}\";\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const vector<T>& v) {\n  os << \"{\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin()) os << \",\";\n    os << *it;\n  }\n  return os << \"}\";\n}\ntemplate <typename T1, typename T2>\nostream& operator<<(ostream& os, const map<T1, T2>& mp) {\n  os << \"{\";\n  for (auto it = mp.begin(); it != mp.end(); ++it) {\n    if (it != mp.begin()) os << \",\";\n    os << *it;\n  }\n  return os << \"}\";\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const set<T>& s) {\n  os << \"{\";\n  for (auto it = s.begin(); it != s.end(); ++it) {\n    if (it != s.begin()) os << \",\";\n    os << *it;\n  }\n  return os << \"}\";\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const unordered_set<T>& s) {\n  os << \"{\";\n  for (auto it = s.begin(); it != s.end(); ++it) {\n    if (it != s.begin()) os << \",\";\n    os << *it;\n  }\n  return os << \"}\";\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const multiset<T>& s) {\n  os << \"{\";\n  for (auto it = s.begin(); it != s.end(); ++it) {\n    if (it != s.begin()) os << \",\";\n    os << *it;\n  }\n  return os << \"}\";\n}\ntemplate <size_t N>\nostream& operator<<(ostream& os, const bitset<N>& bs) {\n  os << \"{\";\n  for (size_t i = 0; i < N; ++i) {\n    cout << bs[i];\n  }\n  return os << \"}\";\n}\ntemplate <typename T>\nvoid _dbg(char const* s, const T& t) {\n  cout << s << \"=\" << t << endl;\n}\ntemplate <typename T, size_t N, typename... TA>\nvoid _dbg(char const* s, const T& t, const TA&... ta) {\n  while (*s != ',') cout << *s++;\n  cout << \"=\" << t << \",\";\n  _dbg(s + 1, ta...);\n}\nusing ll = long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nusing pss = pair<string, string>;\nusing pll = pair<ll, ll>;\nusing pdd = pair<ld, ld>;\nint gcd(ll a, ll b) {\n  while (b) {\n    a %= b;\n    swap(a, b);\n  }\n  return a;\n}\nint n, m, d;\ndeque<pair<int, int>> deq;\nint check() {\n  int pos = deq.back().first + deq.back().second - 1;\n  if ((pos + d) >= n + 1)\n    return 1;\n  else\n    return 0;\n}\nvoid solve() {\n  deq.clear();\n  deq.push_back({0, 1});\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; ++i) {\n    int x;\n    cin >> x;\n    deq.push_back({deq.back().first + deq.back().second, x});\n  }\n  int lst = deq.size() - 1;\n  while (true) {\n    int x = check();\n    if (x == 0) {\n      if (lst == 0) {\n        cout << \"NO\";\n        return;\n      }\n      for (int i = lst; i < deq.size(); ++i) {\n        deq[i].first = deq[i - 1].first + deq[i - 1].second - 1 + d;\n      }\n      --lst;\n      continue;\n    }\n    cout << \"YES\\n\";\n    vector<int> ans(n + 1);\n    for (int i = 1; i < deq.size(); ++i) {\n      for (int j = 0; j < deq[i].second; ++j) {\n        ans[deq[i].first + j] = i;\n      }\n    }\n    for (int i = 1; i < ans.size(); ++i) cout << ans[i] << \" \";\n    cout << endl;\n    return;\n  }\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        int test = 1;\n        for (int iiiiiii = 0; iiiiiii < test; iiiiiii++) {\n            int n = nextInt();\n            int m = nextInt();\n            int d = nextInt();\n            int[] pl = new int[m];\n            for (int i = 0; i < m; i++) {\n                pl[i]=nextInt();\n            }\n            int[] a = new int[n];\n            int where = -1;\n            int i = n-1;\n            int [] end = new int[m];\n            int [] begin = new int[m];\n            for (int j = m-1; j >-1 ; j--) {\n                end[j]=i;\n                for (int k = 0; k < pl[j]; k++) {\n                    a[i]=j+1;\n                    i--;\n                }\n                begin[j]=i+1;\n            }\n            for (int j = 0; j < m; j++) {\n                if(where+d>=n||a[where+d]!=0){\n                    out.println(\"YES\");\n                    for (int k = 0; k < n; k++) {\n                        out.print(a[k]+\" \");\n                    }\n                    out.close();\n                    System.exit(0);\n                }\n                else {\n                    for (int k = begin[j]; k <=end[j] ; k++) {\n                        a[k]=0;\n                    }\n                    for (int k = 0; k < pl[j]; k++) {\n                        a[where+d+k]= j+1;\n                    }\n                    where +=d+pl[j]-1;\n                }\n            }\n            if(where+d<n){\n                out.print(\"NO\");\n            }\n            else{\n                out.println(\"YES\");\n                for (int j = 0; j < n; j++) {\n                    out.print(a[j]+\" \");\n                }\n            }\n        }\n        out.close();\n    }\n\n\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static PrintWriter out = new PrintWriter(System.out);\n    static StringTokenizer in = new StringTokenizer(\"\");\n\n\n    public static boolean hasNext() throws IOException {\n        if (in.hasMoreTokens()) return true;\n        String s;\n        while ((s = br.readLine()) != null) {\n            in = new StringTokenizer(s);\n            if (in.hasMoreTokens()) return true;\n        }\n        return false;\n    }\n\n    public static String nextToken() throws IOException {\n        while (!in.hasMoreTokens()) {\n            in = new StringTokenizer(br.readLine());\n        }\n        return in.nextToken();\n    }\n\n    public static int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    public static double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    public static long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long dx[] = {1, 0, -1, 0, 1, 1, -1, -1},\n                dy[] = {0, -1, 0, 1, 1, -1, 1, -1};\nconst long long MOD = 1e9 + 7;\ntemplate <typename T>\ninline T GCD(T a, T b) {\n  T c;\n  while (b != 0) {\n    c = a % b;\n    a = b;\n    b = c;\n  }\n  return a;\n}\ntemplate <typename T>\ninline T LCM(T a, T b) {\n  T c = GCD(a, b);\n  a /= c;\n  return a * b;\n}\ntemplate <typename T>\ninline T nCr(T a, T b) {\n  T i, r = 1;\n  for (i = 1; i <= b; i++) {\n    r *= (a + 1 - i);\n    r /= i;\n  }\n  return r;\n}\ntemplate <typename T>\ninline T nHr(T a, T b) {\n  return nCr(a + b - 1, b);\n}\nstruct edge2 {\n  long long to, cost;\n};\nstruct edge3 {\n  long long from, to, cost;\n};\nsigned main(void) {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  long long N, M, D, A[1000];\n  cin >> N >> M >> D;\n  long long cells = 0;\n  for (long long i = 0; i < (M); ++i) {\n    cin >> A[i];\n    cells += A[i];\n  }\n  long long water = N - cells;\n  if (water > (D - 1) * (M + 1)) {\n    cout << \"NO\" << '\\n';\n    return 0;\n  }\n  cout << \"YES\" << '\\n';\n  for (long long i = 0; i < (M); ++i) {\n    long long Q = min(water, D - 1);\n    water -= Q;\n    for (long long j = 0; j < (Q); ++j) cout << 0 << ' ';\n    for (long long j = 0; j < (A[i]); ++j) cout << i + 1 << ' ';\n  }\n  for (long long i = 0; i < (water); ++i) cout << 0 << ' ';\n  cout << '\\n';\n}\n"
        },
        {
            "language": 3,
            "solution": "list1=list(map(int,input().split()))\nlist2=list(map(int,input().split()))\nb=0\nlist3=[]\nfor j in range(list1[1]):\n    for k in range(list2[j]):\n        list3.append(j+1)\nif(len(list3)<list1[0]):\n    for m in range(list1[2]-1):\n        if(len(list3)<list1[0]):\n            list3.insert(m,0)\nif(len(list3)<list1[0]):\n    for j in range(list1[1]):\n        b=list2[j]+b\n        a=(list1[2]-1)*(j+1)+b\n        if(len(list3)<list1[0]):\n            for m in range(list1[2]-1):\n                if(len(list3)<list1[0]):\n                    list3.insert(a,0)\nif(len(list3)<list1[0]):\n    print('NO')\nelse:\n    print('YES')\n    print(*list3, sep=\" \" )\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n \nimport static java.lang.Math.*;\n\npublic class Cf131 implements Runnable \n{\n    static class InputReader \n    {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream) \n        {\n            this.stream = stream;\n        }\n        \n        public int read()\n        {\n            if (numChars==-1) \n                throw new InputMismatchException();\n            \n            if (curChar >= numChars) \n            {\n                curChar = 0;\n                try\n                {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                \n                if(numChars <= 0)               \n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }    \n            return str;\n        }\n        public int nextInt() \n        {\n            int c = read();\n            \n            while(isSpaceChar(c)) \n                c = read();\n        \n            int sgn = 1;\n        \n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            \n            int res = 0;\n            do\n            {\n                if(c<'0'||c>'9') \n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c)); \n        \n            return res * sgn;\n        }\n        \n        public long nextLong() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            \n            do \n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }    \n            while (!isSpaceChar(c));\n                return res * sgn;\n        }\n        \n        public double nextDouble() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') \n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') \n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n    \n        public String readString() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do \n            {\n                res.appendCodePoint(c);\n                c = read();\n            } \n            while (!isSpaceChar(c));\n            \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) \n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next()\n        {\n            return readString();\n        }\n        \n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n    public static void main(String args[]) throws Exception \n    {\n        new Thread(null, new Cf131(),\"Main\",1<<27).start();\n    }\n    \n    static class Pair\n    {\n        int z;\n        int o;\n        Pair(int z,int o)\n        {\n            this.z=z;\n            this.o=o;\n        }\n    }\n static class Edge implements Comparable<Edge> \n    {\n        int end, wght;\n\n        public Edge(int end, int wght) \n        {\n            this.end = end;\n            this.wght = wght;\n        }\n\n        public int compareTo(Edge edge) \n        {\n            return this.wght - edge.wght;\n        }\n    }\n    \n    public void run()\n    {\n        InputReader sc = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        \n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n        Integer[] a = new Integer[n];\n        int totalwoods = 0;\n        for(int i=0;i<m;i++){a[i]=sc.nextInt();totalwoods+=a[i];}\n        \n        ArrayList<Integer> ans = new ArrayList<Integer>();\n\n        for(int i=0;i<m;i++){\n            for(int j=1;j<d;j++) ans.add(0);\n\n            for(int j=0;j<a[i];j++) ans.add(i+1);\n            \n        }\n        int z = ans.size();\n        if(z+d>=n+1){\n            w.println(\"YES\");\n            int extra  = z-n;\n            \n            if(extra>0){\n                for(int i=0;i<z;i++){\n                    int x = ans.get(i);\n                    if(extra>0 && x==0)extra--;\n                    else w.print(x+\" \"); \n                }\n                    \n            }\n            else{\n                for(int i=0;i<z;i++) w.print(ans.get(i)+\" \");\n                for(int i=-1*extra;i>0;i--)w.print(\"0 \");\n            }\n            w.println();\n        }\n        else{w.println(\"NO\");}\n\n\n\n        w.flush();\n        w.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n\n\nn, m, d = map(int, input().split())\nM = list(map(int, sys.stdin.readline().split())) \nsumM = sum(M)\nA = [0] * n\nposit = -1\nfor platf in range(m):\n    for ii in range(posit + min(d, n - sumM - posit), posit + min(d, n - sumM - posit) + M[platf]):\n        A[ii] = platf + 1\n    posit = ii\n    sumM -= M[platf]    \nif n - posit > d:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*A)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn, m, d = map(int, sys.stdin.readline().split())\np = [0] + list(map(int, sys.stdin.readline().split()))\n\nw = [0] * (n+2)\nidx = n\njudge = False\nif n < sum(p):\n    print(\"NO\")\n\nelse:\n    for i in range(len(p)-1, 0, -1):\n        width = p[i]\n        for j in range(idx, 0, -1):\n            if width == 0:\n                break\n            w[j] = i\n            idx -= 1\n            width -= 1\n    # print(w)\n    end_idx = idx+1\n    st_idx = 0\n    # print(end_idx)\n    for i in range(1, len(p)):\n        count = p[i]\n        # print(end_idx)\n        # print(st_idx)\n        if end_idx-st_idx <= d:\n            print(\"YES\")\n            res = w[1:-1]\n            res = list(map(str, res))\n            res = \" \".join(res)\n            print(res)\n            judge = True\n            break\n        else:\n\n            # print(w)\n            # print(st_idx)\n            # print(end_idx)\n            dist = abs(d - (end_idx-st_idx))\n\n            for j in range(count):\n                temp = w[end_idx]\n                # print(temp)\n                w[end_idx-dist] = temp\n                w[end_idx] = 0\n                st_idx = end_idx-dist\n                end_idx += 1\n                # print(w)\n    for k in range(n, 0, -1):\n        if w[k] != 0:\n            # print(k)\n            break\n    if n-k >= d:\n        print(\"NO\")\n    else:\n        if end_idx-st_idx <= d and judge == False:\n            print(\"YES\")\n            res = w[1:-1]\n            res = list(map(str, res))\n            res = \" \".join(res)\n            print(res)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\npublic class Main{\n\n\n    public static void main(String[] args){\n         FastScanner in = new FastScanner(System.in);\n         int n,m,d;\n         n = in.nextInt();\n         m = in.nextInt();\n         d = in.nextInt();\n         MyArrayListInt a = new MyArrayListInt(m);\n         int s = n;\n         for(int i = 0;i < m;i++){\n             int c = in.nextInt();\n             a.set(i,c);\n             s -= c;\n         }\n         if((d - 1) * ( m + 1) < s){\n             System.out.println(\"NO\");\n             return;\n         }\n         MyArrayListInt u = new MyArrayListInt(m);\n         for(int i = 0;i < m;i++){\n            u.set(i,s / (m + 1));\n         }\n         for(int i = 0;i < s %(m + 1);i++){\n             u.set(i,u.get(i) + 1);\n         }\n         MyArrayListInt res = new MyArrayListInt(n);\n         int k = 0;\n         for(int i = 0;i < m;i++){\n            k += u.get(i);\n            for(int j = 0;j < a.get(i);j++){\n                res.set(k++,i + 1);\n            }\n         }\n         PrintWriter pr = new PrintWriter(System.out);\n         System.out.println(\"YES\");\n         for(int i = 0;i < n;i++){\n             pr.print(res.get(i));\n             pr.print(\" \");\n             if(i%1000 == 0){\n                 pr.flush();\n             }\n         }\n         pr.flush();\n\n    }\n\n    public static class MyStackInt{\n        MyArrayListInt v;\n        MyStackInt(){\n            v = new MyArrayListInt();\n        }\n        public boolean empty(){\n            return v.empty();\n        }\n        public int top(){\n            return v.get(v.it - 1);\n        }\n        public void pop(){\n            v.it--;\n        }\n        public void push(int x){\n            v.add(x);\n        }\n    }\n    public static class MyArrayListInt{\n        public  int[] arr;\n        public  int size;\n        public  int[] arr1;\n        public  int it;\n        MyArrayListInt(){\n            arr = new int[10];\n            this.size = 10;\n            it = 0;\n        }\n        MyArrayListInt(int size){\n            arr = new int[size];\n            this.size = size;\n            it = 0;\n        }\n        public int get(int index){\n            return arr[index];\n        }\n        public void add(int x){\n            it++;\n            if(it == size){\n                arr1 = new int[3 * size / 2];\n                for(int i = 0;i < size;i++){\n                    arr1[i] = arr[i];\n                }\n                size = 2* size;\n                arr = arr1.clone();\n            }\n            arr[it - 1] = x;\n        }\n        public void set(int index,int x){\n            arr[index] = x;\n        }\n        public void sort(){\n            Arrays.sort(arr, 0, it - 1);\n        }\n        public int size(){\n            return it;\n        }\n        public boolean empty(){\n            return this.it == 0;\n        }\n        public void removeBack(){\n            it--;\n        }\n\n\n    }\n    public static class MyArrayListLong{\n        public  long[] arr;\n        public  int size;\n        public  long[] arr1;\n        public  int it;\n        MyArrayListLong(){\n            arr = new long[10];\n            this.size = 10;\n            it = 0;\n        }\n        MyArrayListLong(int size){\n            arr = new long[size];\n            this.size = size;\n            it = 0;\n        }\n        public long get(int index){\n            return arr[index];\n        }\n        public void add(long x){\n            it++;\n            if(it == size){\n                arr1 = new long[2 * size];\n                for(int i = 0;i < size;i++){\n                    arr1[i] = arr[i];\n                }\n                size = 2* size;\n                arr = arr1.clone();\n            }\n            arr[it - 1] = x;\n        }\n        public void set(int index,long x){\n            arr[index] = x;\n        }\n        public void sort(){\n            Arrays.sort(arr, 0, it - 1);\n        }\n        public int size(){\n            return it + 1;\n        }\n    }\n    static class FastScanner {\n        InputStream is;\n        byte buffer[] = new byte[1<<16];\n        int size = 0;\n        int pos  = 0;\n        FastScanner(InputStream is){\n            this.is = is;\n        }\n        int nextChar(){\n            if(pos >= size){\n                try{\n                    size = is.read(buffer);\n                }catch  (IOException e){\n                    throw new IOError(e);\n                }\n                pos = 0;\n                if(size == -1){\n                    return -1;\n                }\n            }\n            int res = buffer[pos] & 0xFF;\n            pos++;\n            return res;\n        }\n        int nextInt(){\n            int c = nextChar();\n            while(c == ' ' || c == '\\r' || c == '\\n' || c == '\\t'){\n                c = nextChar();\n            }\n            int sign = 1;\n            if(c=='-'){\n                sign = -1;\n                c = nextChar();\n            }\n            int n = c - '0';\n            c = nextChar();\n            while('0' <= c && c <= '9'){\n                int d = c -'0';\n                c = nextChar();\n                n = n * 10 + d;\n            }\n            return n * sign;\n        }\n        long nextLong(){\n            long c = (long)nextChar();\n            while(c == ' ' || c == '\\r' || c == '\\n' || c == '\\t'){\n                c = nextChar();\n            }\n            long sign = 1;\n            if(c=='-'){\n                sign = -1;\n                c = (long)nextChar();\n            }\n            long n = c - '0';\n            c = nextChar();\n            while('0' <= c && c <= '9'){\n                long d = c -'0';\n                c = nextChar();\n                n = n * 10 + d;\n            }\n            return n * sign;\n        }\n    }\n    static class NotMyFastScanner {\n        BufferedInputStream in;\n\n        final int bufSize = 1 << 16;\n        final byte b[] = new byte[bufSize];\n\n        NotMyFastScanner( InputStream in ) {\n            this.in = new BufferedInputStream(in, bufSize);\n        }\n\n        int nextInt() throws IOException {\n            int c;\n            while ((c = nextChar()) <= 32)\n                ;\n            int x = 0, sign = 1;\n            if (c == '-') {\n                sign = -1;\n                c = nextChar();\n            }\n            while (c >= '0') {\n                x = x * 10 + (c - '0');\n                c = nextChar();\n            }\n            return x * sign;\n        }\n\n        StringBuilder _buf = new StringBuilder();\n        String nextWord() throws IOException {\n            int c;\n            _buf.setLength(0);\n            while ((c = nextChar()) <= 32 && c != -1)\n                ;\n            if (c == -1)\n                return null;\n            while (c > 32) {\n                _buf.append((char)c);\n                c = nextChar();\n            }\n            return _buf.toString();\n        }\n\n        int bn = bufSize, k = bufSize;\n\n        int nextChar() throws IOException {\n            if (bn == k) {\n                k = in.read(b, 0, bufSize);\n                bn = 0;\n            }\n            return bn >= k ? -1 : b[bn++];\n        }\n\n        int nextNotSpace() throws IOException {\n            int ch;\n            while ((ch = nextChar()) <= 32 && ch != -1)\n                ;\n            return ch;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long c[2000], d[2000];\nlong long u[2000], b[2000];\nint main() {\n  long long n, m, d;\n  long long lpl = 0;\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; i++) {\n    cin >> c[i];\n    lpl += c[i];\n  }\n  if (lpl == n) {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < m; i++) {\n      for (int j = 0; j < c[i]; j++) {\n        cout << i + 1 << \" \";\n      }\n    }\n    cout << endl;\n    return 0;\n  }\n  long long st = 0;\n  long long flag = 0;\n  for (int i = 0; i < m; i++) {\n    long long op = c[i];\n    op = n - (lpl - op) - 1;\n    long long to = st + d;\n    long long ss = op - c[i] + 1;\n    if (to > ss) {\n      u[i] = ss;\n      st = ss + c[i] - 1;\n    }\n    if (to <= ss) {\n      u[i] = to;\n      st = to + c[i] - 1;\n    }\n    lpl -= c[i];\n  }\n  if (st + d > n) {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < m; i++) {\n      for (int j = u[i]; j < u[i] + c[i]; j++) {\n        b[j] = i + 1;\n      }\n    }\n    for (int i = 1; i <= n; i++) {\n      cout << b[i] << \" \";\n    }\n    cout << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {new Main().run();}\n\n\tFastReader in = new FastReader();\n\tPrintWriter out = new PrintWriter(System.out);\n\tvoid run(){\n\t\twork();\n\t\tout.flush();\n\t}\n\tlong mod=1000000007;\n\tlong gcd(long a,long b) {\n\t\treturn b==0?a:gcd(b,a%b);\n\t}\n\t\n\tlong ret=0;\n\tvoid work() {\n\t\tint n=in.nextInt();\n\t\tint m=in.nextInt();\n\t\tint d=in.nextInt();\n\t\tint[] A=new int[m+1];\n\t\tint sum=2;\n\t\tfor(int i=0;i<m;i++) {\n\t\t\tA[i]=in.nextInt();\n\t\t\tsum+=A[i];\n\t\t}\n\t\tA[m]=1;\n\t\tif(sum+(m+1)*(d-1)<n+2) {\n\t\t\tout.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\t//\u786e\u4fddindex+1\u5728\u6700\u540e\u4e00\u4f4d\uff0c\u4e14\u7b2c\u4e00\u4f4d\u662f\u7a7a\u767d \n\t\tint[] ret=new int[n+1];\n\t\tint step=(n+2-sum)/(m+1);\n\t\tint c2=(n+2-sum)%(m+1);\n\t\tint c1=(m+1)-c2;\n\t\tfor(int i=0,index=1;c1>0||c2>0;index++) {\n\t\t\tif(c2>0) {\n\t\t\t\tc2--;\n\t\t\t\tfor(int j=0;j<step+1;j++,i++);\n\t\t\t\tint j=i;\n\t\t\t\tfor(;j<i+A[index-1];j++) {\n\t\t\t\t\tret[j]=index;\n\t\t\t\t}\n\t\t\t\ti=j;\n\t\t\t}else {\n\t\t\t\tc1--;\n\t\t\t\tfor(int j=0;j<step;j++,i++);\n\t\t\t\tint j=i;\n\t\t\t\tfor(;j<i+A[index-1];j++) {\n\t\t\t\t\tret[j]=index;\n\t\t\t\t}\n\t\t\t\ti=j;\n\t\t\t}\n\t\t}\n\t\tout.println(\"YES\");\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tout.print(ret[i]+\" \");\n\t\t}\n\t}\n}\n\n\n\nclass FastReader\n{\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tpublic FastReader()\n\t{\n\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t}\n\n\tpublic String next() \n\t{\n\t\tif(st==null || !st.hasMoreElements())\n\t\t{\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic int nextInt() \n\t{\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong()\n\t{\n\t\treturn Long.parseLong(next());\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 55;\nconst int mod = 1e9 + 7;\nconst long long INF = 1e18 + 12;\nconst int inf = 1e9;\nint a[N], s[N], e[N], ans[N];\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL);\n  ;\n  int n, m, d, last = 0;\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; ++i) {\n    cin >> a[i];\n  }\n  last = n - 1;\n  for (int i = m - 1; i >= 0; --i) {\n    s[i] = last - a[i] + 1;\n    last -= a[i];\n  }\n  last = d - 1;\n  int id = 0;\n  while (id < m) {\n    if (last >= s[id]) break;\n    s[id] = last;\n    last += a[id] + d - 1;\n    ++id;\n  }\n  for (int i = 0; i < m; ++i) e[i] = s[i] + a[i] - 1;\n  for (int i = 0; i < m; ++i) {\n    for (int j = s[i]; j <= e[i]; ++j) ans[j] = i + 1;\n  }\n  last = -1;\n  for (int i = 0; i <= n; ++i) {\n    if (i - last > d) cout << \"NO\", exit(0);\n    if (ans[i]) last = i;\n  }\n  cout << \"YES\\n\";\n  for (int i = 0; i < n; ++i) cout << ans[i] << \" \";\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class C598 {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt(),m=sc.nextInt(),d=sc.nextInt();\n\t\tint ans[]=new int[n];\n\t\tint arr[]=new int[m];\n\t\tint sum=0;\n\t\tfor(int i=0;i<m;i++){\n\t\t\tarr[i]=sc.nextInt();\n\t\t\tsum+=arr[i];\n\t\t}\n//\t\tSystem.out.println(sum);\n\t\tint kong=n-sum;\n\t\tint p=0;\n\t\tfor(int i=0;i<m;i++){\n\t\t\tfor(int j=p;j<p+arr[i];j++){\n\t\t\t\tans[j]=i+1;\n\t\t\t}\n\t\t\tp+=arr[i];\n\t\t\tint count=0;\n\t\t\twhile(kong>0){\n\t\t\t\tif(count==d-1)break;\n\t\t\t\tkong--;\n\t\t\t\tcount++;\n\t\t\t\tans[p]=0;\n\t\t\t\tp++;\n\t\t\t}\n//\t\t\tSystem.out.println(p+\" \"+i);\n\t\t}\n\t\tif(p>=n){\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tSystem.out.print((i==0?\"\":\" \")+ans[i]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\telse if(p+d>n){\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tint len=d-1;\n\t\t\t\n//\t\t\tSystem.out.println(Arrays.toString(ans));\n\t\t\tfor(int i=n-len-1;i>=0;i--){\n\t\t\t\tans[i+len]=ans[i];\n\t\t\t\tans[i]=0;\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tSystem.out.print((i==0?\"\":\" \")+ans[i]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}else{\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n    static int inf = (int) 1e9 + 7;\n\n    public static void main(String[] args) throws IOException {\n        sc = new Scanner(System.in);\n        pw = new PrintWriter(System.out);\n        int sz = sc.nextInt();\n        int n = sc.nextInt();\n        int d = sc.nextInt();\n        int c[] = new int [n];\n        for(int i = 0;i < n;i++) c[i] = sc.nextInt();\n        int suf[] = new int [n];\n        suf[n - 1] = c[n - 1];\n        for(int i = n - 2;i >= 0;i--) suf[i] = suf[i + 1] + c[i];\n\n        int ans[] = new int [sz + 1];\n        for(int i = 0;i < sz + 1;i++) ans[i] = -1;\n\n        int start = 0;\n        for(int id = 0;id < n;id++) {\n\n            int v = Math.min(start + d, sz - suf[id] + 1);\n\n            for(int i = 0;i < c[id];i++) {\n                ans[v++] = id;\n            }\n            start = v - 1;\n        }\n\n        if (start + d >= sz + 1) {\n            pw.println(\"YES\");\n            for(int i = 1;i <= sz;i++) pw.print(ans[i] + 1 + \" \");\n        }else pw.println(\"NO\");\n        pw.close();\n    }\n\n    static Scanner sc;\n    static PrintWriter pw;\n\n    static class Scanner {\n        BufferedReader br;\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        Scanner(InputStream in) throws FileNotFoundException {\n            br = new BufferedReader(new InputStreamReader(in));\n        }\n\n        Scanner(String in) throws FileNotFoundException {\n            br = new BufferedReader(new FileReader(in));\n        }\n\n        String next() throws IOException {\n            while (!st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n,m,d = list(map(int, input().split()))\nplank = list(map(int, input().split()))\nsumm = sum(plank)\nj = 0\nans = [0]*n\ncurr = -1\ni = 0\nflag = 0\nwhile(i<n):\n    if(summ == n-i): # use all planks\n        if(j==m):\n            print(\"NO\")\n            flag = 1\n            break\n        for _ in range(plank[j]):\n            ans[i] = j+1\n            i = i + 1\n        summ = summ - plank[j]\n        j = j + 1\n        curr = i - 1\n    elif(i-curr==d):\n        if(j==m):\n            flag = 1\n            print(\"NO\")\n            break\n        for _ in range(plank[j]):\n            ans[i] = j+1\n            i = i + 1\n        summ = summ - plank[j]\n        j = j + 1\n        curr = i - 1\n    else:\n        i = i + 1\nif(flag==0):\n    print(\"YES\")\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = list(map(int, input().split()))\nc = list(map(int, input().split()))\nr = sum(c)\ncur = 0\nci = 0\nmmap = [0] * n\nwhile cur < n+1 and ci < len(c):\n    #print(\"pi =min \", cur + d,\" \",  n - r + 1)\n\n    pi = min(cur + d, n - r + 1)\n    #print(\"pi = \", pi)\n    for j in range(pi, pi+c[ci]):\n        mmap[j-1] = ci+1\n    cur = pi + c[ci]-1\n    r -= c[ci]\n    ci += 1\n    \nif cur + d >= n+1:\n    print(\"YES\")\n    print(\" \".join(map(str, mmap)))\nelse:\n    print(\"NO\")\n    "
        },
        {
            "language": 1,
            "solution": "n,m,d   = map(int,raw_input().split(\" \"))\narr     = map(int,raw_input().split(\" \"))\npos = 0\nfor i in arr:\n    pos += d+i-1\nps = [0]*m\nps[m-1] = arr[m-1]\nfor i in range(1,m):\n    ps[m-i-1] = ps[m-i]+arr[m-i-1]\n\nif pos + d >=n+1:\n    print \"YES\"\n    ret = []\n    now = 0\n    for i,v in enumerate(arr):\n        if now+ps[i]>=n-d+1:\n            for j in range(i,m):\n                ret+= [j+1]*arr[j]\n            break\n        else:\n            ret += [0]*(d-1)\n            ret += [i+1]*v\n            now += d+v-1\n\n    ret += [0]*(n-len(ret))\n\n    print \" \".join(map(str,(ret)))\nelse:\n    print \"NO\"\n\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nl=list(map(int,input().split()))\ni=0\nans=[0]*n\nflag=0\nt=0\np=0\ns=sum(l)\ni=i+d-1\nif s>=n-i:\n    i=n-s\n    t=1\nwhile(i<n):\n    if s>=n-i:\n        i=n-s\n        t=1\n    if t==1:\n        cur=l[p]\n        while(cur!=0):\n            i+=1\n            ans[i-1]=p+1\n            cur-=1\n        s-=l[p]\n        p+=1\n    else:\n        if s==0 and i!=n:\n            flag=1\n            break\n        cur=l[p]\n        while(cur!=0):\n            i+=1\n            ans[i-1]=p+1\n            cur-=1\n        s=s-l[p]\n        p+=1\n        i=i+d-1\nif flag==1:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*ans,sep=\" \")\n            "
        },
        {
            "language": 3,
            "solution": "import random\n\n\ndef get_many_ints():\n    return map(int, input().split())\n\n\ndef get_int():\n    return int(input())\n\n\nX, N, D = get_many_ints()\nplanks = list(get_many_ints())\n\nstart = [D] * N\n\nfor i in range(1, N):\n    start[i] = start[i - 1] + planks[i - 1] + D - 1\n\nlimit = X\nfor i in range(N - 1, -1, -1):\n    if start[i] + planks[i] - 1 > limit:\n        start[i] = limit - planks[i] + 1\n    limit = start[i] - 1\n\nif start[-1] + planks[-1] - 1 + D < X + 1:\n    print(\"NO\")\nelse:\n    river = [0] * X\n    for i, (s, p) in enumerate(zip(start, planks)):\n        for j in range(s, s + p):\n            river[j - 1] = i + 1\n    print(\"YES\")\n    print(\" \".join(map(str, river)))\n"
        },
        {
            "language": 4,
            "solution": "/*Author: Satyajeet Singh, Delhi Technological University*/\n    import java.io.*;\n    import java.util.*;\n    import java.text.*; \n    import java.lang.*;\n    import java.math.*;\n \npublic class Main{\n/*********************************************Constants******************************************/\n    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));        \n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static long mod=(long)1e9+7;\n    static long mod1=998244353;\n    static boolean sieve[];\n    static ArrayList<Integer> primes;\n    static long factorial[],invFactorial[];\n    static ArrayList<Pair> graph[];\n    static boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n    static int pptr=0;\n    static String st[];\n/****************************************Solutions Begins***************************************/\n    static int n,d,m;\n    static int input[];\n    static boolean dfs(int pos,int cur){\n        while(cur<m){\n            pos+=input[cur]-1;\n            pos+=d;\n            cur++;\n            if(pos>=n+1)return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) throws Exception{\n        nl();\n        n=pi();\n        m=pi();\n        d=pi();\n        nl();\n        input=new int[m];\n        for(int i=0;i<m;i++)input[i]=pi();\n        int output[]=new int[n+1];\n        int pn=0;\n        boolean flag=false;\n        int cnt=0;\n        for(int i=1;i<=n;){\n            if(dfs(i,pn)){\n                if(cnt>d)break;\n                flag=true;\n                cnt=0;\n                for(int j=i;j<=n&&j<i+input[pn];j++)output[j]=pn+1;\n                i=i+input[pn];\n                pn++;\n            }\n            else{\n                i++;\n                cnt++;\n            }\n          //  debug(cnt);\n            if(cnt>=d)break;\n           // debug(i);\n            \n        }\n        if(flag){\n            out.println(\"YES\");\n            for(int i=1;i<=n;i++)out.print(output[i]+\" \");\n        }\n        else{\n            out.println(\"NO\");\n        }\n/****************************************Solutions Ends**************************************************/\n        out.flush();\n        out.close();\n    }\n/****************************************Template Begins************************************************/\n    static void nl() throws Exception{\n        pptr=0;\n        st=br.readLine().split(\" \");\n    }\n    static void nls() throws Exception{\n        pptr=0;\n        st=br.readLine().split(\"\");\n    }\n    static int pi(){\n        return Integer.parseInt(st[pptr++]);\n    }\n    static long pl(){\n        return Long.parseLong(st[pptr++]);\n    }\n    static double pd(){\n        return Double.parseDouble(st[pptr++]);\n    }\n/***************************************Precision Printing**********************************************/\n    static void printPrecision(double d){\n        DecimalFormat ft = new DecimalFormat(\"0.000000000000000000000\"); \n        out.print(ft.format(d));\n    }\n/**************************************Bit Manipulation**************************************************/\n    static void printMask(long mask){\n        System.out.println(Long.toBinaryString(mask));\n    }\n    static long countBit(long mask){\n        long ans=0;\n        while(mask!=0){\n            if(mask%2==1){\n                ans++;\n            }\n            mask/=2;\n        }\n        return ans;\n    }\n/******************************************Graph*********************************************************/\n    static void Makegraph(int n){\n        graph=new ArrayList[n];\n        for(int i=0;i<n;i++){\n            graph[i]=new ArrayList<>();\n        }\n    }\n    static void addEdge(int a,int b){\n        graph[a].add(new Pair(b,1));\n    }\n    static void addEdge(int a,int b,int c){\n        graph[a].add(new Pair(b,c));\n    }    \n/*********************************************PAIR********************************************************/\n    static class Pair implements Comparable<Pair> {\n        int u;\n        int v;\n        int index=-1;\n        public Pair(int u, int v) {\n            this.u = u;\n            this.v = v;\n        }\n        public int hashCode() {\n            int hu = (int) (u ^ (u >>> 32));\n            int hv = (int) (v ^ (v >>> 32));\n            return 31 * hu + hv;\n        }\n        public boolean equals(Object o) {\n            Pair other = (Pair) o;\n            return u == other.u && v == other.v;\n        }\n        public int compareTo(Pair other) {\n            if(index!=other.index)\n                return Long.compare(index, other.index);\n            return Long.compare(v, other.v)!=0?Long.compare(v, other.v):Long.compare(u, other.u);\n        }\n        public String toString() {\n            return \"[u=\" + u + \", v=\" + v + \"]\";\n        }\n    }\n/******************************************Long Pair*******************************************************/\n    static class Pairl implements Comparable<Pairl> {\n            long u;\n            long v;\n            int index=-1;\n            public Pairl(long u, long v) {\n                this.u = u;\n                this.v = v;\n            }\n            public int hashCode() {\n                int hu = (int) (u ^ (u >>> 32));\n                int hv = (int) (v ^ (v >>> 32));\n                return 31 * hu + hv;\n            }\n            public boolean equals(Object o) {\n                Pairl other = (Pairl) o;\n                return u == other.u && v == other.v;\n            }\n            public int compareTo(Pairl other) {\n                if(index!=other.index)\n                    return Long.compare(index, other.index);\n                return Long.compare(v, other.v)!=0?Long.compare(v, other.v):Long.compare(u, other.u);\n            }\n            public String toString() {\n                return \"[u=\" + u + \", v=\" + v + \"]\";\n            }\n        }\n/*****************************************DEBUG***********************************************************/\n    public static void debug(Object... o) {\n        if(!oj)\n        System.out.println(Arrays.deepToString(o));\n    }\n/************************************MODULAR EXPONENTIATION***********************************************/\n    static long modulo(long a,long b,long c) {\n        long x=1;\n        long y=a%c;\n        while(b > 0){\n            if(b%2 == 1){\n                x=(x*y)%c;\n            }\n            y = (y*y)%c; // squaring the base\n            b /= 2;\n        }\n        return  x%c;\n    }\n/********************************************GCD**********************************************************/\n    static long gcd(long x, long y)\n    {\n        if(x==0)\n            return y;\n        if(y==0)\n            return x;\n        long r=0, a, b;\n        a = (x > y) ? x : y; // a is greater number\n        b = (x < y) ? x : y; // b is smaller number\n        r = b;\n        while(a % b != 0)\n        {\n            r = a % b;\n            a = b;\n            b = r;\n        }\n        return r;\n    }\n/******************************************SIEVE**********************************************************/\n    static void sieveMake(int n){\n        sieve=new boolean[n];\n        Arrays.fill(sieve,true);\n        sieve[0]=false;\n        sieve[1]=false;\n        for(int i=2;i*i<n;i++){\n            if(sieve[i]){\n                for(int j=i*i;j<n;j+=i){\n                    sieve[j]=false;\n                }\n            }\n        }\n        primes=new ArrayList<Integer>();\n        for(int i=0;i<n;i++){\n            if(sieve[i]){\n                primes.add(i);\n            }\n        }        \n    }\n/********************************************End***********************************************************/\n}"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\narr = list(map(int, input().split()))\nd -= 1 \nif sum(arr)+(len(arr)+1)*d < n:\n    print(\"NO\")\n    exit()\nprint(\"YES\")\nw = n-sum(arr)\nres = [0] * n\nptr = 0\nfor i in range(m):\n    ne = min(w, d)\n    w -= ne\n    for j in range(ptr+ne, ptr+ne+arr[i]):\n        res[j] = i+1\n    ptr += ne + arr[i]\nprint(*res)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 100005, MOD = 1000000007;\nconst long long inf = 1e9;\nint arr[MAX];\nint path[MAX];\nint lft[MAX];\nint rght[MAX];\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  int n, m, d;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) cin >> arr[i];\n  for (int j = m, i = n, num = m; j > 0; j--) {\n    rght[num] = i;\n    for (int k = 0; k < arr[j]; k++) {\n      path[i--] = num;\n    }\n    lft[num] = i + 1;\n    num--;\n  }\n  int pos = 0;\n  int num = 1;\n  bool ok = true;\n  while (pos + d <= n + 1) {\n    if (num > m) break;\n    if (pos + d < lft[num]) {\n      lft[num] = pos + d;\n      rght[num] = lft[num] + arr[num] - 1;\n      pos = rght[num];\n      num++;\n    } else {\n      pos = rght[num];\n      num++;\n    }\n  }\n  if (pos + d < n + 1)\n    cout << \"NO\\n\";\n  else {\n    cout << \"YES\\n\";\n    num = 1;\n    for (int i = 1; i <= n; i++) {\n      if (num <= m && i == lft[num]) {\n        while (i <= rght[num]) {\n          cout << num << \" \";\n          i++;\n        }\n        i--;\n        num++;\n      } else\n        cout << 0 << \" \";\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn, m, d = map(int, input().split())\nd -= 1\nmas = list(map(int, input().split()))\nbest = (n - sum(mas)) // (m + 1)\nkol = (n - sum(mas)) % (m + 1)\nnow = best\nif kol != 0:\n\tnow += 1\nif (now > d):\n\tprint (\"NO\")\n\tsys.exit(0)\n\nprint (\"YES\")\nfor i in range(m):\n\tif i < kol:\n\t\tprint ('0 ' * (1 + best), end = '')\n\telse:\n\t\tprint ('0 ' * best, end = '')\n\tprint ((str(i + 1) + ' ') * mas[i], end = '')\nprint ('0 ' * best)\n"
        },
        {
            "language": 3,
            "solution": "n, m , d = map(int, input().split())\nl = list(map(int, input().split()))\ns = sum(l)\nif n <= (m + 1) * (d - 1) + s:\n    print('YES')\n    s = n - s\n    c = [0] * (s) + [(i + 1) for i in range(m) for j in range(l[i])]\n    i = -1\n    p = 0\n    flag = True\n    while flag:\n        if n <= i + d:\n            break\n        if c[i + d]:\n            break\n        c[s:s + l[p]] = [0] * l[p]\n        c[i + d:i + d + l[p]] = [p + 1] * l[p]\n        i += d + l[p] - 1\n        s += l[p]\n        p += 1\n    print(*c, sep=' ')\nelse:\n    print('NO')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CF598C2 {\n\n\tprivate static int n, m, d;\n\tprivate static int[] c;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tString[] inputs = br.readLine().split(\" \");\n\t\tn = Integer.parseInt(inputs[0]);\n\t\tm = Integer.parseInt(inputs[1]);\n\t\td = Integer.parseInt(inputs[2]);\n\n\t\tint platformLength = 0;\n\t\tc = new int[m];\n\t\tinputs = br.readLine().split(\" \");\n\t\tfor (int ii = 0; ii < m; ii++) {\n\t\t\tc[ii] = Integer.parseInt(inputs[ii]);\n\t\t\tplatformLength += c[ii];\n\t\t}\n\n\t\tsolve(platformLength);\n\t}\n\n\tprivate static void solve(int platformLength) {\n\t\tif (platformLength + ((d-1) * (m+1)) < n) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\n\t\tint intervalLength = n - platformLength;\n\t\tint dd = intervalLength / (m+1);\n\t\tint ddRem = intervalLength % (m+1);\n\n\t\tSystem.out.println(\"YES\");\n\t\tint label = 0;\n\t\tfor (int ii = 0; ii < m; ii++) {\n\t\t\tint bonus = 0;\n\t\t\tif (ddRem > 0) {\n\t\t\t\tbonus = 1;\n\t\t\t\tddRem--;\n\t\t\t}\n\t\t\tfor (int jj = 0; jj < dd+bonus; jj++) {\n\t\t\t\tSystem.out.print(\"0 \");\n\t\t\t}\n\t\t\tlabel++;\n\t\t\tfor (int jj = 0; jj < c[ii]; jj++) {\n\t\t\t\tSystem.out.print(label + \" \");\n\t\t\t}\n\t\t}\n\t\tfor (int jj = 0; jj < (dd+ddRem); jj++) {\n\t\t\tSystem.out.printf(\"0%c\", (jj == dd+ddRem-1) ? '\\n' : ' ');\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst long long INF = 0x3f3f3f3f3f3f3f;\nconst double pi = 3.1415926535897932384626;\ninline long long read() {\n  long long x = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = (x << 1) + (x << 3) + (ch ^ 48);\n    ch = getchar();\n  }\n  return x * f;\n}\nconst int maxn = 1e3 + 5;\nint n, m, d, sum, tmp, a[maxn], ans[maxn];\nint main() {\n  n = read(), m = read(), d = read();\n  for (int i = 1; i <= m; ++i) {\n    a[i] = read();\n    sum += a[i];\n    tmp += d + a[i] - 1;\n  }\n  if (tmp + d < n + 1)\n    printf(\"NO\\n\");\n  else {\n    printf(\"YES\\n\");\n    tmp = 0;\n    for (int i = 1; i <= m; ++i) {\n      if (tmp + d + sum - 1 <= n)\n        tmp += d;\n      else\n        tmp = n - sum + 1;\n      for (int j = tmp; j <= tmp + a[i] - 1; ++j) ans[j] = i;\n      tmp += a[i] - 1;\n      sum -= a[i];\n    }\n    for (int i = 1; i <= n; ++i) printf(\"%d%c\", ans[i], i < n ? ' ' : '\\n');\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\n\nlengths = list(map(int, input().split()))\nposes = [n + 1] * (m + 1)\nindex = m - 1\nwhile index >= 0:\n    poses[index] = poses[index + 1] - lengths[index]\n    index -= 1\n\n#print(poses)\n\ncur = 0\nind = 0\nresult = True\nwhile cur < n + 1:\n    if cur + d >= n + 1:\n        break\n    if ind == m:\n        result = False\n        break\n    if cur + d <= poses[ind]:\n        poses[ind] = cur + d\n        cur = cur + d + lengths[ind] - 1\n        ind += 1\n    else:\n        break\n\nif result:\n    print(\"YES\")\n    poses.append(0)\n    lengths.append(0)\n    lengths.append(1)\n    res = []\n    for ind, it in enumerate(poses[:-1]):\n        for _ in range(it - poses[ind - 1] - lengths[ind - 1]):\n            res.append('0')\n        for _ in range(lengths[ind]):\n            res.append(str(ind + 1))\n    print(\" \".join(res))\nelse:\n    print(\"NO\")\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    \n    n,m,d=[int(x) for x in input().split()]\n    c=[int(x) for x in input().split()]\n    \n#    cSuffixSum=c.copy()\n#    for i in range(n-2,-1,-1):\n#        c[i]+=c[i+1]\n    \n    remainingC=sum(c)\n    output2Arr=[] #0-indexed\n    i=0\n    platformIdx=0\n    distanceLeft=n\n    while platformIdx<m:\n        blanks=0\n        while blanks<d-1 and remainingC<distanceLeft:\n#            print(remainingC,distanceLeft)\n            output2Arr.append(-1) #blank, 0-indexing\n            blanks+=1\n            distanceLeft-=1\n        for _ in range(c[platformIdx]):\n            output2Arr.append(platformIdx)\n            remainingC-=1\n            distanceLeft-=1\n        platformIdx+=1\n    while len(output2Arr)<n:\n        output2Arr.append(-1)\n    \n    for i in range(len(output2Arr)):\n        output2Arr[i]+=1 #1-indexing\n    \n    if len(output2Arr)>n:\n        print('NO')\n    else:\n        lastGapLen=0\n        for i in range(n-1,-1,-1):\n            if output2Arr[i]==0:\n                lastGapLen+=1\n            else:\n                break\n        if lastGapLen>=d:\n            print('NO')\n        else:\n            print('YES')\n            oneLineArrayPrint(output2Arr)\n#    oneLineArrayPrint(output2Arr)#\n    return\n \n#import sys\n#input=sys.stdin.buffer.readline #FOR READING PURE INTEGER INPUTS (space separation ok)\nimport sys\ninput=lambda: sys.stdin.readline().rstrip(\"\\r\\n\") #FOR READING STRING/TEXT INPUTS.\ndef oneLineArrayPrint(arr):\n    print(' '.join([str(x) for x in arr]))\ndef multiLineArrayPrint(arr):\n    print('\\n'.join([str(x) for x in arr]))\ndef multiLineArrayOfArraysPrint(arr):\n    print('\\n'.join([' '.join([str(x) for x in y]) for y in arr]))\n\n\n\nmain()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool check = false;\nlong long n, m, d;\nlong long maxjum;\nlong long pos, repos;\nlong long sumplat, numplat, lastplat;\nlong long status, newstatus, laststatus;\nlong long f[1001], Res[1000001];\nint main() {\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; ++i) cin >> f[i];\n  maxjum = d;\n  for (int i = 1; i <= m; ++i) sumplat += f[i];\n  for (; pos != m;) {\n    status += d + lastplat;\n    if (status + sumplat - 1 >= n) {\n      repos = m;\n      newstatus = n;\n      while (repos != pos) {\n        for (int put = newstatus; put >= newstatus - f[repos] + 1; --put) {\n          Res[put] = repos;\n        }\n        newstatus = newstatus - f[repos];\n        repos -= 1;\n      }\n      check = true;\n      break;\n    }\n    numplat = f[++pos];\n    for (int put = status; put <= status + numplat - 1; ++put) Res[put] = pos;\n    status += numplat - 1;\n    sumplat -= f[pos];\n  }\n  for (int i = n; i >= 1; --i)\n    if (Res[i] != 0) {\n      laststatus = i;\n      break;\n    }\n  if (laststatus + d >= n + 1) {\n    cout << \"YES\" << endl;\n    for (int i = 1; i <= n; ++i) cout << Res[i] << \" \";\n    return 0;\n  }\n  cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n, m, d;\n  cin >> n >> m >> d;\n  long long c[m];\n  long long sum = 0;\n  for (auto i = 0; i < m; i++) {\n    cin >> c[i];\n    sum += c[i];\n  }\n  if ((m + 1) * (d - 1) + sum < n) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n    long long q = (n - sum) / (m + 1);\n    long long r = (n - sum) % (m + 1);\n    vector<long long> v;\n    for (auto i = 0; i < m + 1; i++) {\n      if (i < r && i < m) {\n        for (auto j = 0; j < q + 1; j++) v.push_back(0);\n        for (auto j = 0; j < c[i]; j++) v.push_back(i + 1);\n      } else if (i >= r && i < m) {\n        for (auto j = 0; j < q; j++) v.push_back(0);\n        for (auto j = 0; j < c[i]; j++) v.push_back(i + 1);\n      } else\n        for (auto j = 0; j < q; j++) v.push_back(0);\n    }\n    for (auto i = 0; i < v.size(); i++) cout << v[i] << \" \";\n    cout << endl;\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d, l[1005], p[1005];\nint i, j, t;\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (i = 1; i <= m; ++i) scanf(\"%d\", &l[i]), t += l[i];\n  if (t + (m + 1) * (d - 1) < n) {\n    printf(\"NO\\n\");\n    return 0;\n  }\n  printf(\"YES\\n\");\n  t = n - t;\n  for (i = 1; i <= m; ++i) {\n    j = d - 1;\n    while (j-- > 0 && t-- > 0) printf(\"0 \");\n    while (l[i]--) printf(\"%d \", i);\n  }\n  while (t-- > 0) printf(\"0 \");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = sc.nextInt(), m = sc.nextInt(), d = sc.nextInt();\n        int[] ans = new int[n + 2];\n        int[] c = sc.nextIntArray(m);\n        int[] last = new int[m];\n        int sum = 0;\n        for (int i = m - 1; i >= 0; i--) {\n            sum += c[i];\n            last[i] = n + 1 - sum;\n        }\n        int p = 0;\n        int cur = 0;\n        while (cur < n && p < m) {\n            int left = last[p], right = last[p] + c[p] - 1;\n            if (left > cur + d) {\n                int move = left - (cur + d);\n                left -= move;\n                right -= move;\n            }\n            p++;\n            for (int i = left; i <= right; i++)\n                ans[i] = p;\n            cur = right;\n        }\n        if (cur + d <= n) out.println(\"NO\");\n        else {\n            out.println(\"YES\");\n            for (int i = 1; i <= n; i++)\n                out.print(ans[i] + \" \");\n        }\n        out.flush();\n        out.close();\n    }\n\n\n    static class Scanner {\n\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream system) {\n            br = new BufferedReader(new InputStreamReader(system));\n        }\n\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        public char nextChar() throws IOException {\n            return next().charAt(0);\n        }\n\n        public Long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public int[] nextIntArray(int n) throws IOException {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        public long[] nextLongArray(int n) throws IOException {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n\n\n        public Integer[] nextIntegerArray(int n) throws IOException {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        public double[] nextDoubleArray(int n) throws IOException {\n            double[] ans = new double[n];\n            for (int i = 0; i < n; i++)\n                ans[i] = nextDouble();\n            return ans;\n        }\n\n        public short nextShort() throws IOException {\n            return Short.parseShort(next());\n        }\n\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\ncs = list(map(int, input().split()))\nsum_cs = sum(cs)\ndist = sum_cs - len(cs) + d * (len(cs) + 1)\nif dist <= n:\n    print(\"NO\")\nelse:\n    answer = []\n    jumps = n - sum_cs\n    for ind, c in enumerate(cs):\n        jump = min(jumps, d - 1)\n        jumps -= jump\n        answer.extend([0] * jump)\n        answer.extend([ind + 1] * c)\n    if jumps:\n        answer.extend([0] * jumps)\n    print(\"YES\")\n    print(\" \".join(map(str, answer)))"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n# region fastio\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ------------------------------\n\ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\ndef comb(n, m): return factorial(n) / (factorial(m) * factorial(n - m)) if n >= m else 0\ndef perm(n, m): return factorial(n) // (factorial(n - m)) if n >= m else 0\ndef mdis(x1, y1, x2, y2): return abs(x1 - x2) + abs(y1 - y2)\nmod = 998244353\nINF = float('inf')\nfrom math import factorial, ceil, floor\nfrom collections import Counter, defaultdict, deque\nfrom heapq import heapify, heappop, heappush\n\n# ------------------------------\n# f = open('./input.txt')\n# sys.stdin = f\n\ndef main():\n    n, m, d = RL()\n    arr = RLL()\n\n    sp = n - sum(arr)\n    tm = m+1\n    maxm = sp/tm\n\n    if maxm>d-1:\n        print(\"NO\")\n    else:\n        pre = 0\n        res = [0]*n\n        for i, v in enumerate(arr):\n            if sp>0:\n                ad = min(sp, d-1)\n                pre+=ad\n                sp-=ad\n\n            for j in range(pre, pre+v): res[j] = i+1\n            pre+=v\n\n        print(\"YES\")\n        print(*res)\n\n\n\nif __name__ == \"__main__\":\n    main()\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\nusing namespace std;\nconst long long N = 150, INF = 1e9, mod = 1e9 + 7;\ninline void solve() {\n  long long n, m, d;\n  cin >> n >> m >> d;\n  long long a[m], sum = 0;\n  for (long long i = 0; i < m; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  long long pos = -1;\n  vector<long long> ans(n + 5, 0);\n  for (long long i = 0; i < m; i++) {\n    pos = min(pos + d, n - sum);\n    sum -= a[i];\n    for (long long j = 0; j < a[i]; j++) {\n      ans[pos + j] = i + 1;\n    }\n    pos += a[i] - 1;\n  }\n  if (pos + d >= n) {\n    cout << \"YES\" << '\\n';\n    for (long long i = 0; i < n; i++) cout << ans[i] << \" \";\n    cout << '\\n';\n  } else\n    cout << \"NO\" << '\\n';\n}\nint main() {\n  long long test_count = 1;\n  for (long long test = 0; test < test_count; test++) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "\nn, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nif (m+1)*(d-1) + sum(c) < n:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n    N = n - sum(c)\n    res = []\n    dzero = [0 for _ in range(d-1)]\n    i = 0\n    while N >= 0:\n        if N >= d:\n            res += dzero[:]\n            res += [i+1 for _ in range(c[i])]\n            i += 1\n            N -= (d-1)\n        else:\n            res += [0 for _ in range(N)]\n            break\n    while i < len(c):\n        res += [i+1 for _ in range(c[i])]\n        i += 1\n    print(\" \".join(map(str, res)))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        //Scanner f = new Scanner(new File(\"uva.in\"));\n        //Scanner f = new Scanner(System.in);\n        //BufferedReader f = new BufferedReader(new FileReader(\"uva.in\"));\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        StringTokenizer st = new StringTokenizer(f.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int m = Integer.parseInt(st.nextToken());\n        int d = Integer.parseInt(st.nextToken());\n        st = new StringTokenizer(f.readLine());\n        int[] c = new int[m];\n        for(int i = 0; i < m; i++) {\n            c[i] = Integer.parseInt(st.nextToken());\n        }\n        int[] start = new int[m];\n        int end = 0;\n        for(int i = 0; i < m; i++) {\n            start[i] = end+d;\n            end = start[i]+c[i]-1;\n        }\n        if(end+d <= n) {\n            out.println(\"NO\");\n        } else {\n            int last = m-1;\n            int limit = n;\n            while(last >= 0 && start[last]+c[last]-1 > limit) {\n                start[last] = limit-c[last]+1;\n                limit = start[last]-1;\n                last--;\n            }\n            int[] res = new int[n];\n            for(int i = 0; i < m; i++) {\n                for(int j = 0; j < c[i]; j++) {\n                    res[start[i]+j-1] = i+1;\n                }\n            }\n            out.println(\"YES\");\n            out.print(res[0]);\n            for(int i = 1; i < n; i++) {\n                out.print(\" \" + res[i]);\n            }\n            out.println();\n        }\n        f.close();\n        out.close();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 11;\nint c[N], ans[N];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, d;\n  cin >> n >> m >> d;\n  int pos = 0;\n  for (int i = 1; i <= m; i++) {\n    pos += d;\n    int l;\n    cin >> l;\n    pos += l - 1;\n    c[i] = l;\n  }\n  pos += d;\n  if (pos < n + 1) {\n    cout << \"NO\";\n    return 0;\n  }\n  cout << \"YES\\n\";\n  pos = 0;\n  int sum = 0;\n  for (int i = 1; i <= m; i++) sum += c[i];\n  for (int i = 1; i <= m; i++) {\n    if (pos + d + sum - 1 <= n)\n      pos += d;\n    else\n      pos = n - sum + 1;\n    for (int j = pos; j <= pos + c[i] - 1; j++) ans[j] = i;\n    pos += c[i] - 1;\n    sum -= c[i];\n  }\n  for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n    Author: Anthony Ngene\n    Created: 11/09/2020 - 06:38\n*/\n\nimport java.io.*;\nimport java.util.*;\n\npublic class C {\n// If you look at what you have in life, you'll always have more. If you look at what you don't have in life, you'll never have enough. - Oprah Winfrey\n    void solver() throws IOException {\n        int n = in.intNext(), m = in.intNext(), jump = in.intNext();\n        int[] woods = in.nextIntArray(m);\n        int arr[] = new int[n + 1];\n        int idx = 0;\n        int spaces = sum(woods);\n        for (int w = 1; w < m + 1; w++) {\n            int wood = woods[w - 1];\n            int next = min(idx + jump, n - spaces + 1);\n            for (int i = 0; i < wood; i++) {\n                arr[next++] = w;\n            }\n            idx = next - 1;\n            spaces -= wood;\n        }\n        if (n + 1 - idx > jump) {\n            out.println(\"NO\");\n        } else {\n            out.println(\"YES\");\n            for (int i = 1; i < n + 1; i++) out.p(arr[i]).p(\" \");\n        }\n    }\n\n\n\n// Generated Code Below:\n// checks: 1. edge cases   2. overflow   3. possible errors (e.g 1/0, arr[out])   4. time/space complexity\nprivate static final FastWriter out = new FastWriter();\nprivate static FastScanner in;\nstatic ArrayList<Integer>[] adj;\nprivate static long e97 = (long)1e9 + 7;\npublic static void main(String[] args) throws IOException {\n    in = new FastScanner();\n    new C().solver();\n    out.close();\n}\n\nstatic class FastWriter {\n    private static final int IO_BUFFERS = 128 * 1024;\n    private final StringBuilder out;\n    public FastWriter() { out = new StringBuilder(IO_BUFFERS); }\n    public FastWriter p(Object object) { out.append(object); return this; }\n    public FastWriter p(String format, Object... args) { out.append(String.format(format, args)); return this; }\n    public FastWriter pp(Object... args) { for (Object ob : args) { out.append(ob).append(\" \");  } out.append(\"\\n\"); return this; }\n    public FastWriter pp(int[] args) { for (int ob : args) { out.append(ob).append(\" \");  } out.append(\"\\n\"); return this; }\n    public FastWriter pp(long[] args) { for (long ob : args) { out.append(ob).append(\" \");  } out.append(\"\\n\"); return this; }\n    public FastWriter pp(char[] args) { for (char ob : args) { out.append(ob).append(\" \");  } out.append(\"\\n\"); return this; }\n    public void println(long[] arr) { for(long e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n    public void println(int[] arr) { for(int e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n    public void println(char[] arr) { for(char e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n    public void println(double[] arr) { for(double e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n    public void println(boolean[] arr) { for(boolean e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n    public <T>void println(T[] arr) { for(T e: arr) out.append(e).append(\" \"); out.append(\"\\n\"); }\n    public void println(long[][] arr) {  for (long[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n    public void println(int[][] arr) {  for (int[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n    public void println(char[][] arr) {  for (char[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n    public void println(double[][] arr) {  for (double[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n    public <T>void println(T[][] arr) {  for (T[] row: arr) out.append(Arrays.toString(row)).append(\"\\n\"); }\n    public FastWriter println(Object object) { out.append(object).append(\"\\n\"); return this; }\n    public void toFile(String fileName) throws IOException {\n        BufferedWriter writer = new BufferedWriter(new FileWriter(fileName));\n        writer.write(out.toString());\n        writer.close();\n    }\n    public void close() throws IOException { System.out.print(out); }\n}\nstatic class FastScanner {\n    private InputStream sin = System.in;\n    private final byte[] buffer = new byte[1024];\n    private int ptr = 0;\n    private int buflen = 0;\n    public FastScanner(){}\n    public FastScanner(String filename) throws FileNotFoundException {\n        File file = new File(filename);\n        sin = new FileInputStream(file);\n    }\n    private boolean hasNextByte() {\n        if (ptr < buflen) {\n            return true;\n        }else{\n            ptr = 0;\n            try {\n                buflen = sin.read(buffer);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (buflen <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n    private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n    public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n    public String next() {\n        if (!hasNext()) throw new NoSuchElementException();\n        StringBuilder sb = new StringBuilder();\n        int b = readByte();\n        while(isPrintableChar(b)) {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    public long longNext() {\n        if (!hasNext()) throw new NoSuchElementException();\n        long n = 0;\n        boolean minus = false;\n        int b = readByte();\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        if (b < '0' || '9' < b) {\n            throw new NumberFormatException();\n        }\n        while(true){\n            if ('0' <= b && b <= '9') {\n                n *= 10;\n                n += b - '0';\n            }else if(b == -1 || !isPrintableChar(b) || b == ':'){\n                return minus ? -n : n;\n            }else{\n                throw new NumberFormatException();\n            }\n            b = readByte();\n        }\n    }\n    public int intNext() {\n        long nl = longNext();\n        if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n        return (int) nl;\n    }\n    public double doubleNext() { return Double.parseDouble(next());}\n    public long[] nextLongArray(final int n){\n        final long[] a = new long[n];\n        for (int i = 0; i < n; i++)\n            a[i] = longNext();\n        return a;\n    }\n    public int[] nextIntArray(final int n){\n        final int[] a = new int[n];\n        for (int i = 0; i < n; i++)\n            a[i] = intNext();\n        return a;\n    }\n    public double[] nextDoubleArray(final int n){\n        final double[] a = new double[n];\n        for (int i = 0; i < n; i++)\n            a[i] = doubleNext();\n        return a;\n    }\n    public ArrayList<Integer>[] getAdj(int n) {\n        ArrayList<Integer>[] adj = new ArrayList[n + 1];\n        for (int i = 1; i <= n; i++) adj[i] = new ArrayList<>();\n        return adj;\n    }\n    public ArrayList<Integer>[] adjacencyList(int nodes, int edges) throws IOException {\n        return adjacencyList(nodes, edges, false);\n    }\n    public ArrayList<Integer>[] adjacencyList(int nodes, int edges, boolean isDirected) throws IOException {\n        adj = getAdj(nodes);\n        for (int i = 0; i < edges; i++) {\n            int a = intNext(), b = intNext();\n            adj[a].add(b);\n            if (!isDirected) adj[b].add(a);\n        }\n        return adj;\n    }\n}\nstatic class u {\n    public static int upperBound(long[] array, long obj) {\n        int l = 0, r = array.length - 1;\n        while (r - l >= 0) {\n            int c = (l + r) / 2;\n            if (obj < array[c]) {\n                r = c - 1;\n            } else {\n                l = c + 1;\n            }\n        }\n        return l;\n    }\n    public static int upperBound(ArrayList<Long> array, long obj) {\n        int l = 0, r = array.size() - 1;\n        while (r - l >= 0) {\n            int c = (l + r) / 2;\n            if (obj < array.get(c)) {\n                r = c - 1;\n            } else {\n                l = c + 1;\n            }\n        }\n        return l;\n    }\n    public static int lowerBound(long[] array, long obj) {\n        int l = 0, r = array.length - 1;\n        while (r - l >= 0) {\n            int c = (l + r) / 2;\n            if (obj <= array[c]) {\n                r = c - 1;\n            } else {\n                l = c + 1;\n            }\n        }\n        return l;\n    }\n    public static int lowerBound(ArrayList<Long> array, long obj) {\n        int l = 0, r = array.size() - 1;\n        while (r - l >= 0) {\n            int c = (l + r) / 2;\n            if (obj <= array.get(c)) {\n                r = c - 1;\n            } else {\n                l = c + 1;\n            }\n        }\n        return l;\n    }\n    static <T> T[][] deepCopy(T[][] matrix) { return Arrays.stream(matrix).map(el -> el.clone()).toArray($ -> matrix.clone()); }\n    static int[][] deepCopy(int[][] matrix) { return Arrays.stream(matrix).map(int[]::clone).toArray($ -> matrix.clone()); }\n    static long[][] deepCopy(long[][] matrix) { return Arrays.stream(matrix).map(long[]::clone).toArray($ -> matrix.clone()); }\n    private static void sort(int[][] arr){ Arrays.sort(arr, Comparator.comparingDouble(o -> o[0])); }\n    private static void sort(long[][] arr){ Arrays.sort(arr, Comparator.comparingDouble(o -> o[0])); }\n    private static <T>void rSort(T[] arr) { Arrays.sort(arr, Collections.reverseOrder()); }\n    private static void customSort(int[][] arr) {\n        Arrays.sort(arr, new Comparator<int[]>() {\n            public int compare(int[] a, int[] b) {\n                if (a[0] == b[0]) return Integer.compare(a[1], b[1]);\n                return Integer.compare(a[0], b[0]);\n            }\n        });\n    }\n    public static int[] swap(int[] arr, int left, int right) {\n        int temp = arr[left];\n        arr[left] = arr[right];\n        arr[right] = temp;\n        return arr;\n    }\n    public static int[] reverse(int[] arr, int left, int right) {\n        while (left < right) {\n            int temp = arr[left];\n            arr[left++] = arr[right];\n            arr[right--] = temp;\n        }\n        return arr;\n    }\n    public static boolean findNextPermutation(int[] data) {\n        if (data.length <= 1) return false;\n        int last = data.length - 2;\n        while (last >= 0) {\n            if (data[last] < data[last + 1]) break;\n            last--;\n        }\n        if (last < 0) return false;\n        int nextGreater = data.length - 1;\n        for (int i = data.length - 1; i > last; i--) {\n            if (data[i] > data[last]) {\n                nextGreater = i;\n                break;\n            }\n        }\n        data = swap(data, nextGreater, last);\n        data = reverse(data, last + 1, data.length - 1);\n        return true;\n    }\n    public static int biSearch(int[] dt, int target){\n        int left=0, right=dt.length-1;\n        int mid=-1;\n        while(left<=right){\n            mid = (right+left)/2;\n            if(dt[mid] == target) return mid;\n            if(dt[mid] < target) left=mid+1;\n            else right=mid-1;\n        }\n        return -1;\n    }\n    public static int biSearchMax(long[] dt, long target){\n        int left=-1, right=dt.length;\n        int mid=-1;\n\n        while((right-left)>1){\n            mid = left + (right-left)/2;\n            if(dt[mid] <= target) left=mid;\n            else right=mid;\n        }\n        return left;\n    }\n    public static int biSearchMaxAL(ArrayList<Integer> dt, long target){\n        int left=-1, right=dt.size();\n        int mid=-1;\n\n        while((right-left)>1){\n            mid = left + (right-left)/2;\n            if(dt.get(mid) <= target) left=mid;\n            else right=mid;\n        }\n        return left;\n    }\n    private static <T>void fill(T[][] ob, T res){for(int i=0;i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n    private static void fill(boolean[][] ob,boolean res){for(int i=0;i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n    private static void fill(int[][] ob, int res){      for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n    private static void fill(long[][] ob, long res){    for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n    private static void fill(char[][] ob, char res){    for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n    private static void fill(double[][] ob, double res){for(int i=0; i<ob.length; i++){ for(int j=0; j<ob[0].length; j++){  ob[i][j] = res; }}}\n    private static void fill(int[][][] ob,int res){for(int i=0;i<ob.length;i++){for(int j=0;j<ob[0].length;j++){for(int k=0;k<ob[0][0].length;k++){ob[i][j][k]=res;}}}}\n    private static void fill(long[][][] ob,long res){for(int i=0;i<ob.length;i++){for(int j=0;j<ob[0].length;j++){for(int k=0;k<ob[0][0].length;k++){ob[i][j][k]=res;}}}}\n    private static <T>void fill(T[][][] ob,T res){for(int i=0;i<ob.length;i++){for(int j=0;j<ob[0].length;j++){for(int k=0;k<ob[0][0].length;k++){ob[i][j][k]=res;}}}}\n    private static void fill_parent(int[] ob){ for(int i=0; i<ob.length; i++) ob[i]=i; }\n    private static boolean same3(long a, long b, long c){\n        if(a!=b) return false;\n        if(b!=c) return false;\n        if(c!=a) return false;\n        return true;\n    }\n    private static boolean dif3(long a, long b, long c){\n        if(a==b) return false;\n        if(b==c) return false;\n        if(c==a) return false;\n        return true;\n    }\n    private static double hypotenuse(double a, double b){\n        return Math.sqrt(a*a+b*b);\n    }\n    private static long factorial(int n) {\n        long ans=1;\n        for(long i=n; i>0; i--){ ans*=i; }\n        return ans;\n    }\n    private static long facMod(int n, long mod) {\n        long ans=1;\n        for(long i=n; i>0; i--) ans = (ans * i) % mod;\n        return ans;\n    }\n    private static long lcm(long m, long n){\n        long ans = m/gcd(m,n);\n        ans *= n;\n        return ans;\n    }\n    private static long gcd(long m, long n) {\n        if(m < n) return gcd(n, m);\n        if(n == 0) return m;\n        return gcd(n, m % n);\n    }\n    private static boolean isPrime(long a){\n        if(a==1) return false;\n        for(int i=2; i<=Math.sqrt(a); i++){  if(a%i == 0) return false;  }\n        return true;\n    }\n    static long modInverse(long a, long mod) {\n    /* Fermat's little theorem: a^(MOD-1) => 1\n    Therefore (divide both sides by a): a^(MOD-2) => a^(-1) */\n        return binpowMod(a, mod - 2, mod);\n    }\n    static long binpowMod(long a, long b, long mod) {\n        long res = 1;\n        while (b > 0) {\n            if (b % 2 == 1) res = (res * a) % mod;\n            a = (a * a) % mod;\n            b /= 2;\n        }\n        return res;\n    }\n    private static int getDigit2(long num){\n        long cf = 1;    int d=0;\n        while(num >= cf){   d++;    cf = 1<<d;  }\n        return d;\n    }\n    private static int getDigit10(long num){\n        long cf = 1;    int d=0;\n        while(num >= cf){   d++;    cf*=10;     }\n        return d;\n    }\n    private static boolean isInArea(int y, int x, int h, int w){\n        if(y<0) return false;\n        if(x<0) return false;\n        if(y>=h) return false;\n        if(x>=w) return false;\n        return true;\n    }\n    private static ArrayList<Integer> generatePrimes(int n) {\n        int[] lp = new int[n + 1];\n        ArrayList<Integer> pr = new ArrayList<>();\n        for (int i = 2; i <= n; ++i) {\n            if (lp[i] == 0) {\n                lp[i] = i;\n                pr.add(i);\n            }\n            for (int j = 0; j < pr.size() && pr.get(j) <= lp[i] && i * pr.get(j) <= n; ++j) {\n                lp[i * pr.get(j)] = pr.get(j);\n            }\n        }\n        return pr;\n    }\n    static long nPrMod(int n, int r, long MOD) {\n        long res = 1;\n        for (int i = (n - r + 1); i <= n; i++) {\n            res = (res * i) % MOD;\n        }\n        return res;\n    }\n    static long nCr(int n, int r) {\n        if (r > (n - r))\n            r = n - r;\n        long ans = 1;\n        for (int i = 1; i <= r; i++) {\n            ans *= n;\n            ans /= i;\n            n--;\n        }\n        return ans;\n    }\n    static long nCrMod(int n, int r, long MOD) {\n        long rFactorial = nPrMod(r, r, MOD);\n        long first = nPrMod(n, r, MOD);\n        long second = binpowMod(rFactorial, MOD-2, MOD);\n        return  (first * second) % MOD;\n    }\n    static void printBitRepr(int n) {\n        StringBuilder res = new StringBuilder();\n        for (int i = 0; i < 32; i++) {\n            int mask = (1 << i);\n            res.append((mask & n) == 0 ? \"0\" : \"1\");\n        }\n        out.println(res);\n    }\n    static String bitString(int n) {return Integer.toString(n);}\n    static int setKthBitToOne(int n, int k) { return (n | (1 << k)); } // zero indexed\n    static int setKthBitToZero(int n, int k) { return (n & ~(1 << k)); }\n    static int invertKthBit(int n, int k) { return (n ^ (1 << k)); }\n    static boolean isPowerOfTwo(int n) { return (n & (n - 1)) == 0; }\n    static HashMap<Character, Integer> counts(String word) {\n        HashMap<Character, Integer> counts = new HashMap<>();\n        for (int i = 0; i < word.length(); i++) counts.merge(word.charAt(i), 1, Integer::sum);\n        return counts;\n    }\n    static HashMap<Integer, Integer> counts(int[] arr) {\n        HashMap<Integer, Integer> counts = new HashMap<>();\n        for (int value : arr) counts.merge(value, 1, Integer::sum);\n        return counts;\n    }\n    static HashMap<Long, Integer> counts(long[] arr) {\n        HashMap<Long, Integer> counts = new HashMap<>();\n        for (long l : arr) counts.merge(l, 1, Integer::sum);\n        return counts;\n    }\n    static HashMap<Character, Integer> counts(char[] arr) {\n        HashMap<Character, Integer> counts = new HashMap<>();\n        for (char c : arr) counts.merge(c, 1, Integer::sum);\n        return counts;\n    }\n    static long hash(int x, int y) {\n        return x* 1_000_000_000L +y;\n    }\n    static final Random random = new Random();\n    static void sort(int[] a) {\n        int n = a.length;// shuffle, then sort\n        for (int i = 0; i < n; i++) {\n            int oi = random.nextInt(n), temp = a[oi];\n            a[oi] = a[i];\n            a[i] = temp;\n        }\n        Arrays.sort(a);\n    }\n    static void sort(long[] arr) {\n        shuffleArray(arr);\n        Arrays.sort(arr);\n    }\n    static void shuffleArray(long[] arr) {\n        int n = arr.length;\n        for(int i=0; i<n; ++i){\n            long tmp = arr[i];\n            int randomPos = i + random.nextInt(n-i);\n            arr[i] = arr[randomPos];\n            arr[randomPos] = tmp;\n        }\n    }\n}\nstatic class Tuple implements Comparable<Tuple> {\n    long a;\n    long b;\n    long c;\n    public Tuple(long a, long b) {\n        this.a = a;\n        this.b = b;\n        this.c = 0;\n    }\n    public Tuple(long a, long b, long c) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n    }\n    public long getA() { return a; }\n    public long getB() { return b; }\n    public long getC() { return c; }\n    public int compareTo(Tuple other) {\n        if (this.a == other.a) {\n            if (this.b == other.b) return Long.compare(this.c, other.c);\n            return Long.compare(this.b, other.b);\n        }\n        return Long.compare(this.a, other.a);\n    }\n    @Override\n    public int hashCode() { return Arrays.deepHashCode(new Long[]{a, b, c}); }\n    @Override\n    public boolean equals(Object o) {\n        if (!(o instanceof Tuple)) return false;\n        Tuple pairo = (Tuple) o;\n        return (this.a == pairo.a && this.b == pairo.b && this.c == pairo.c);\n    }\n    @Override\n    public String toString() { return String.format(\"(%d %d %d)  \", this.a, this.b, this.c); }\n}\nprivate static int abs(int a){  return (a>=0) ? a: -a;  }\nprivate static int min(int... ins){ int min = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] < min) min = ins[i]; } return min; }\nprivate static int max(int... ins){ int max = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] > max) max = ins[i]; } return max; }\nprivate static int sum(int... ins){ int total = 0; for (int v : ins) { total += v; } return total; }\nprivate static long abs(long a){    return (a>=0) ? a: -a;  }\nprivate static long min(long... ins){ long min = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] < min) min = ins[i]; } return min; }\nprivate static long max(long... ins){ long max = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] > max) max = ins[i]; } return max; }\nprivate static long sum(long... ins){ long total = 0; for (long v : ins) { total += v; } return total; }\nprivate static double abs(double a){    return (a>=0) ? a: -a;  }\nprivate static double min(double... ins){ double min = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] < min) min = ins[i]; } return min; }\nprivate static double max(double... ins){ double max = ins[0]; for(int i=1; i<ins.length; i++){ if(ins[i] > max) max = ins[i]; } return max; }\nprivate static double sum(double... ins){ double total = 0; for (double v : ins) { total += v; } return total; }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int m, n, d;\n  cin >> n;\n  cin >> m;\n  cin >> d;\n  int c[m];\n  int river[n];\n  int k = 0;\n  int l = 0;\n  int more = 0;\n  int last = 0;\n  for (int i = 0; i < m; i++) {\n    cin >> c[i];\n    if ((c[i] - 1) / d > 0) {\n      k = k + c[i] / d;\n      l = l + c[i] % d - 1;\n    } else {\n      l = l + c[i] - 1;\n    }\n  }\n  if ((k + m + 1) * d + l < n + 1) {\n    cout << \"NO\" << endl;\n  } else {\n    more = (k + m + 1) * d + l - n - 1;\n    if (more >= d - 1) {\n      for (int i = 0; i < c[0]; i++) {\n        river[last + i] = 1;\n      }\n      last = last + c[0];\n      more = more - d + 1;\n    } else {\n      for (int i = 0; i < d - more % d - 1; i++) {\n        river[i] = 0;\n      }\n      last = last + d - more % d - 1;\n      for (int i = 0; i < c[0]; i++) {\n        river[last + i] = 1;\n      }\n      last = last + c[0];\n      more = more - (more % d);\n    }\n    for (int i = 1; i < m; i++) {\n      for (int j = 0; j < c[i]; j++) {\n        if (more > d - 1) {\n          river[last + j] = i + 1;\n        } else {\n          river[last + d - more % d + j - 1] = i + 1;\n        }\n      }\n      if (more >= d - 1) {\n        more = more - d + 1;\n        last = last + c[i];\n      } else {\n        for (int z = 0; z < d - more % d - 1; z++) {\n          river[last + z] = 0;\n        }\n        last = last + c[i] + d - more % d - 1;\n        more = more - more % d;\n      }\n    }\n    while (last < n) {\n      river[last] = 0;\n      last++;\n    }\n    cout << \"YES\" << endl;\n    for (int i = 0; i < n; i++) {\n      cout << river[i] << \" \";\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\n\nn, m, d = map(int, input().split())\ncs = list(map(int, input().split()))\nsum_cs = sum(cs)\ndist = sum_cs - len(cs) + d * (len(cs) + 1)\nif dist <= n:\n    print(\"NO\")\nelse:\n    answer = []\n    jumps = n - sum_cs\n    for ind, c in enumerate(cs):\n        count_zero = d - 1\n        jump = min(jumps, d - 1)\n        jumps -= jump\n        answer.extend([0] * jump)\n        answer.extend([ind + 1] * c)\n    if jumps:\n        answer.extend([0] * jumps)\n    print(\"YES\")\n    print(\" \".join(map(str, answer)))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nvoid ps() { system(\"pause\"); }\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, d, t, playerPos = 0;\n  vector<pair<int, int>> wood;\n  vector<int> index;\n  cin >> n >> m >> d;\n  for (int i = 0; i < n; i++) {\n    index.push_back(0);\n  }\n  for (int i = 0; i < m; i++) {\n    cin >> t;\n    wood.push_back(make_pair(0, t));\n  }\n  int c = 0;\n  for (int i = m - 1; i >= 0; i--) {\n    c += wood[i].second;\n    wood[i].first = n + 1 - c;\n  }\n  for (int i = 0; i < m; i++) {\n    while (1) {\n      if (playerPos + d >= wood[i].first) {\n        playerPos = wood[i].first + wood[i].second - 1;\n        break;\n      } else {\n        wood[i].first--;\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    for (int j = 0; j < wood[i].second; j++) {\n      index[wood[i].first + j - 1] = i + 1;\n    }\n  }\n  if (playerPos + d >= n + 1) {\n    cout << \"YES\\n\";\n    for (int i = 0; i < n; i++) {\n      cout << index[i] << \" \";\n    }\n  } else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tInputReader in = new InputReader(inputStream);\n\t\t\n//\t\tfor(int i=4;i<=4;i++) {\n//\t\t\tInputStream uinputStream = new FileInputStream(\"dining.in\");\n//\t\t\tString f = i+\".in\";\n//\t\t\tInputStream uinputStream = new FileInputStream(f);\n//\t\t\tInputReader in = new InputReader(uinputStream);\n//\t\t\tPrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"dining.out\")));\n\t\t\tTask t = new Task();\n\t\t\tt.solve(in, out);\n\t\t\tout.close();\t\t\t\n//\t\t}\n\t}\t\n\t\n\tstatic class Task {\n\t\tint times = 0;\n\t\tpublic void solve(InputReader in, PrintWriter out) throws IOException {\n//\t\t\t//int xxx = in.nextInt();\n//\t\t\t//while(xxx-->0) {\n//\t\t\t\tint n = in.nextInt();\n//\t\t\t\tint k = in.nextInt();\n//\t\t\t\tint a[] = in.readIntArray(n);\n//\t\t\t\tint b[] = in.readIntArray(n);\n//\t\t\t\tArrayList<Integer>[] g = new ArrayList[n];\n//\t\t\t\tfor(int i=0;i<n;i++) g[i] = new ArrayList<Integer>();\n//\t\t\t\tfor(int i=0;i<n-1;i++) {\n//\t\t\t\t\tg[a[i]-1].add(a[i+1]-1);\n//\t\t\t\t\tg[b[i]-1].add(b[i+1]-1);\n//\t\t\t\t}\n//\t\t\t\tboolean vis[] = new boolean[n];\n//\t\t\t\tint lvl[] = new int[n];\n//\t\t\t\tint low[] = new int[n];\n//\t\t\t\tint hash[] = new int[n];\n//\t\t\t\ttimes = 0;\n//\t\t\t\tdfs(a[0]-1,g,vis,low,lvl,hash);\n//\t\t\t\tint cycles = 0; int cycle_nodes = 0;\n//\t\t\t\tDSU dsu = new DSU(n);\n//\t\t\t\tfor(int i=0;i<n;i++) {\n//\t\t\t\t\tif(hash[low[i]]<i) {\n//\t\t\t\t\t\tdsu.union(hash[low[i]], i);\n//\t\t\t\t\t}else {\n//\t\t\t\t\t\tdsu.union(i,hash[low[i]]);\n//\t\t\t\t\t}\n//\t\t\t\t}\n//\t\t\t\tHashMap<Integer,Integer> s = new HashMap<Integer,Integer>();\n//\t\t\t\tfor(int i=0;i<n;i++) {\n//\t\t\t\t\tint tmp = dsu.find(i);\n//\t\t\t\t\ts.put(tmp, s.getOrDefault(tmp, 0)+1);\n//\t\t\t\t\t//low[i] = s.get(dsu.find(i));\n//\t\t\t\t}\n//\t\t\t\tfor(int i:s.keySet()) {\n//\t\t\t\t\tif(s.get(i)>1) {\n//\t\t\t\t\t\tcycles++;\n//\t\t\t\t\t\tcycle_nodes+=s.get(i);\n//\t\t\t\t\t}\n//\t\t\t\t}\n//\t\t\t\tif(k==3) {\n//\t\t\t\t\t//Dumper.print(\"here\");\n//\t\t\t\t}\n//\t\t\t\tif(n-cycle_nodes+cycles>=k) {\n//\t\t\t\t\tSystem.out.println(\"YES\");\n//\t\t\t\t\t//out.println(\"YES\");\n//\t\t\t\t\tint temp [] = new int[n];\n//\t\t\t\t\tfor(int i=0;i<n;i++) temp[i] = low[a[i]-1];\n//\t\t\t\t\tfor(int i=1;i<n;i++) {\n//\t\t\t\t\t\tif(temp[i]>temp[i-1]+1) temp[i] = temp[i-1]+1;\t\t\t\t\n//\t\t\t\t\t\tif(temp[i]>=k) temp[i] = temp[i-1];\t\t\t\t\t\t\t\t\n//\t\t\t\t\t}\n//\t\t\t\t\tfor(int i=0;i<n;i++) {\n//\t\t\t\t\t\tlow[a[i]-1] = temp[i]; \n//\t\t\t\t\t}\n//\t\t\t\t\tfor(int i=0;i<n;i++) {\n//\t\t\t\t\t\tSystem.out.print((char)('a'+low[i]));\n//\t\t\t\t\t\t//out.print((char)('a'+low[i]));\n//\t\t\t\t\t}\n//\t\t\t\t\tSystem.out.println();\n//\t\t\t\t\t//out.println();\n//\t\t\t\t}\n//\t\t\t\telse {\n//\t\t\t\t\tSystem.out.println(\"NO\");\n//\t\t\t\t\t//out.println(\"NO\");\t\n//\t\t\t\t}\n//\t\t\t//}\n\t\t\t//int c = in.nextInt();\n\t\t\t//Dumper.print(Long.MAX_VALUE);\n\t\t\t\n\t\t\t//int c = in.nextInt();\n\t\t\t//while(c-->0) {\n\t\t\t//Dumper.print(Integer.MAX_VALUE);\n\t\t\t//Dumper.print((long)(100001)*100000/2);\n\t\t\t//}\n//\t\t\tint n = in.nextInt();\n//\t\t\tint k = in.nextInt();\n//\t\t\tint val[] = in.readIntArray(n);\n//\t\t\tArrayList<Integer>[] g = new ArrayList[n];\n//\t\t\tfor(int i=0;i<n;i++) g[i] = new ArrayList<Integer>();\n//\t\t\tfor(int i=0;i<n-1;i++) {\n//\t\t\t\tint f = in.nextInt()-1;\n//\t\t\t\tint t = in.nextInt()-1;\n//\t\t\t\tg[f].add(t);\n//\t\t\t\tg[t].add(f);\n//\t\t\t}\n//\t\t\tint lvl[] = new int[n];\n//\t\t\tdfs(g,0,-1,lvl);\n//\t\t\tint dp[][] = new int[n][n];\n//\t\t\tdfs2(g,0,-1,lvl,dp,k,val,n);\n//\t\t\tout.println(dp[0][0]);\n//\t\t}\n//\t\tvoid dfs(ArrayList<Integer>[] g, int cur, int pre, int lvl[]) {\n//\t\t\tif(pre!=-1) lvl[cur] = lvl[pre]+1;\n//\t\t\tfor(int nxt:g[cur]) {\n//\t\t\t\tif(pre==nxt) continue;\n//\t\t\t\tdfs(g,nxt,cur,lvl);\n//\t\t\t}\n//\t\t}\n//\t\tvoid dfs2(ArrayList<Integer>[] g, int cur, int pre, int lvl[], int dp[][], int k, int val[], int n) {\n//\t\t\tfor(int nxt:g[cur]) {\n//\t\t\t\tif(pre!=nxt) dfs2(g,nxt,cur,lvl,dp,k,val,n);\n//\t\t\t}\n//\t\t\t\n//\t\t\t//copy best values at each level to this root node\n//\t\t\tfor(int nxt:g[cur]) {\n//\t\t\t\tfor(int i=lvl[cur]+k/2+1;i<n;i++) {\n//\t\t\t\t\tdp[cur][i] += dp[nxt][i];\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\t\n//\t\t\t//chose this root node\n//\t\t\tint cur_lvl = lvl[cur];\n//\t\t\tint nxt_lvl = cur_lvl+k+1;\n//\t\t\tdp[cur][cur_lvl] = val[cur];\n//\t\t\tif(nxt_lvl<n) dp[cur][cur_lvl] += dp[cur][nxt_lvl];\n//\n//\t\t\t//don't choose root node\t\t\t\n//\t\t\tfor(int j=1;j<=k/2;j++) {\t\t\t\t\n//\t\t\t\tint son_lvl1 = cur_lvl+j;\n//\t\t\t\tint son_lvl2 = cur_lvl+k+1-j;\t\n//\t\t\t\tif(son_lvl2>=n) continue;\t\t\t\t\n//\t\t\t\tfor(int nxt:g[cur]) {\n//\t\t\t\t\tif(pre==nxt) continue;\n//\t\t\t\t\tint tmp = dp[nxt][son_lvl1] + dp[cur][son_lvl2] - dp[nxt][son_lvl2];\n//\t\t\t\t\tif(tmp>dp[cur][son_lvl1]) dp[cur][son_lvl1] = tmp;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\tfor(int j=n-2;j>=cur_lvl;j--) {\n//\t\t\t\tdp[cur][j] = Math.max(dp[cur][j], dp[cur][j+1]);\n//\t\t\t}\n\t\t\tint n = in.nextInt();\n\t\t\tint m = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tint arr[] = new int[m];\n\t\t\tint s = 0;\n\t\t\tfor(int i=0;i<m;i++) {\n\t\t\t\tarr[i] = in.nextInt();\n\t\t\t\ts+=arr[i];\n\t\t\t}\n\t\t\tint space = n-s;\n\t\t\tint gap = m+1;\n\t\t\tif(space>gap*(d-1)) {\n\t\t\t\tout.println(\"NO\");\n\t\t\t}else {\n\t\t\t\tout.println(\"YES\");\n\t\t\t\tint num = space/gap;\n\t\t\t\tint f = space%gap;\n\t\t\t\tfor(int i=0;i<m;i++) {\n\t\t\t\t\tif(i<f) {\n\t\t\t\t\t\tout.print(0);\n\t\t\t\t\t\tout.print(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tfor(int j=0;j<num;j++) {\n\t\t\t\t\t\tout.print(0);\n\t\t\t\t\t\tout.print(\" \");\n\t\t\t\t\t}\n\t\t\t\t\tfor(int j=0;j<arr[i];j++) {\n\t\t\t\t\t\tout.print(i+1);\n\t\t\t\t\t\tout.print(\" \");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int j=0;j<num;j++) {\n\t\t\t\t\tout.print(0);\n\t\t\t\t\tout.print(\" \");\n\t\t\t\t}\n\t\t\t\tout.println();\n\t\t\t}\n\t\t}\n\t\t\n\t\tclass interval implements Comparable<interval>{\n\t\t\tint from; int to; int idx;\n\t\t\tpublic interval(int a, int b, int c) {\n\t\t\t\tfrom=a;\n\t\t\t\tto=b;\n\t\t\t\tidx=c;\n\t\t\t}\n\t\t\t@Override\n\t\t\tpublic int compareTo(interval t) {\n\t\t\t\tif(this.to==t.to) return this.from-t.from;\n\t\t\t\treturn this.to-t.to;\n\t\t\t}\n\t\t}\t    \n\t    class sgt{\n\t    \tsgt lt;\n\t    \tsgt rt;\n\t    \tint l,r;\n\t    \tlong sum, max, min, lazy;\n\t    \tpublic sgt(int L, int R, int arr[]) {\n\t    \t\tl=L;r=R;\n\t    \t\tif(l==r-1) {\n\t    \t\t\tsum = max = min = arr[l];\n\t    \t\t\tlazy = 0;\n\t    \t\t\treturn;\n\t    \t\t}\n\t    \t\tlt = new sgt(l, l+r>>1, arr);\n\t    \t\trt = new sgt(l+r>>1, r, arr);\n\t    \t\tpop_up();\n\t    \t}\n\t    \tvoid pop_up() {\n\t    \t\tthis.sum = lt.sum + rt.sum;\n\t    \t\tthis.max = Math.max(lt.max, rt.max);\n\t    \t\tthis.min = Math.min(lt.min, rt.min);\n\t    \t}\n\t    \tvoid push_down() {\n\t    \t\tif(this.lazy!=0) {\n\t    \t\t\tlt.sum+=lazy;\n\t    \t\t\trt.sum+=lazy;\n\t    \t\t\tlt.max+=lazy;\n\t    \t\t\tlt.min+=lazy;\n\t    \t\t\trt.max+=lazy;\n\t    \t\t\trt.min+=lazy;\n\t    \t\t\tlt.lazy+=this.lazy;\n\t    \t\t\trt.lazy+=this.lazy;\n\t    \t\t\tthis.lazy = 0;\n\t    \t\t}\n\t    \t}\n\t    \tvoid change(int L, int R, int v) {\n\t    \t\tif(R<=l||r<=L) return;\n\t    \t\tif(L<=l&&r<=R) {\n\t    \t\t\tthis.max+=v;\n\t    \t\t\tthis.min+=v;\n\t    \t\t\tthis.sum+=v*(r-l);\n\t    \t\t\tthis.lazy+=v;\n\t    \t\t\treturn;\n\t    \t\t}\n\t    \t\tpush_down();\n\t    \t\tlt.change(L, R, v);\n\t    \t\trt.change(L, R, v);\n\t    \t\tpop_up();\n\t    \t}\n\t    \tlong query_max(int L, int R) {\n\t    \t\tif(L<=l&&r<=R) return this.max;\n\t    \t\tif(r<=L||R<=l) return Long.MIN_VALUE;\n\t    \t\tpush_down();\n\t    \t\treturn Math.max(lt.query_max(L, R), rt.query_max(L, R));\t    \t\t\n\t    \t}\n\t    \tlong query_min(int L, int R) {\n\t    \t\tif(L<=l&&r<=R) return this.min;\n\t    \t\tif(r<=L||R<=l) return Long.MAX_VALUE;\n\t    \t\tpush_down();\n\t    \t\treturn Math.min(lt.query_min(L, R), rt.query_min(L, R));\t\n\t    \t}\n\t    \tlong query_sum(int L, int R) {\n\t    \t\tif(L<=l&&r<=R) return this.sum;\n\t    \t\tif(r<=L||R<=l) return 0;\n\t    \t\tpush_down();\n\t    \t\treturn lt.query_sum(L, R) + rt.query_sum(L, R);\n\t    \t}\n\t    }\t   \n\t\t\n\t    public int maxLength(List<String> arr) {\n\t    \tint n = arr.size();\n\t    \tint w[] = new int[n];\n\t        int[][] a = new int[n][26];\n\t        for(int i=0;i<n;i++) {\n\t        \tString tmp = arr.get(i);\n\t        \tw[i] = tmp.length();\n\t        \tfor(int j=0;j<tmp.length();j++) {\n\t        \t\ta[i][tmp.charAt(j)-'a']++;\n\t        \t\tif(a[i][tmp.charAt(j)-'a']>1) w[i]=0;\n\t        \t}\n\t        }\n\t        boolean g[][] = new boolean[n][n];\t       \n\t        for(int i=0;i<n;i++) {\n\t        \tfor(int j=i+1;j<n;j++) {\n\t        \t\tboolean flag = false;\n\t        \t\tfor(int k=0;k<26;k++) {\n\t        \t\t\tif(a[i][k]!=0&&a[j][k]!=0) flag = true; \n\t        \t\t}\n\t        \t\tif(!flag) g[i][j] = g[j][i] = true;\n\t        \t}\n\t        }\n\t        int max = 0;\n\t        for(int i=0;i<(1<<n);i++) {\n\t        \tboolean flag = true;\n\t        \tfor(int j=0;j<n;j++) {if((i&(1<<j))==0) continue;\n\t        \t\tif((i&(1<<j))==0||!flag) continue;\n\t        \t\tfor(int k=j+1;k<n;k++) {\n\t        \t\t\tif((i&(1<<k))==0||!flag) continue;\n\t        \t\t\tif(!g[j][k]) flag = false;\n\t        \t\t}\n\t        \t}\n\t        \tif(!flag) continue;\n\t        \t//Dumper.print(i);\n\t        \tint s = 0;\n\t        \tfor(int j=0;j<n;j++) if((i&(1<<j))==(1<<j)) s+=w[j];\n\t        \tif(s>max) max = s;\n\t        }\n\t        return max;\n\t    }\n\n\t\t\n\t\tint dfs(int cur, ArrayList<Integer>[] g, boolean vis[], int low[], int[] lvl, int hash[]) {\n\t\t\tlvl[cur] = low[cur] = times;\n\t\t\thash[times] = cur;\n\t\t\ttimes++;\n\t\t\tint reach = low[cur];\n\t\t\tvis[cur] = true;\n\t\t\tfor(int to:g[cur]) {\n\t\t\t\tif(vis[to]) {\n\t\t\t\t\treach = Math.min(reach, low[to]);\n\t\t\t\t}else {\n\t\t\t\t\tint tmp = dfs(to,g,vis,low,lvl,hash);\n\t\t\t\t\treach = Math.min(reach, tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(reach<low[cur]) low[cur] = reach;\n\t\t\treturn low[cur];\n\t\t}\n\t\t\t    \t\n\t\tList<List<String>> convert(String arr[][]){\n\t\t\tint n = arr.length;\n\t\t\tList<List<String>> ret = new ArrayList<>();\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tArrayList<String> tmp = new ArrayList<String>();\n\t\t\t\tfor(int j=0;j<arr[i].length;j++) tmp.add(arr[i][j]);\n\t\t\t\tret.add(tmp);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t    public int maximumSum(int[] arr) {\n\t        int n = arr.length;\n\t        int dp[][] = new int[n][2];\n\t        dp[0][0] = arr[0];\n\t        int ret = arr[0];\n\t        for(int i=1;i<n;i++) {\n\t        \tdp[i][0] = dp[i-1][0]>=0?(dp[i-1][0]+arr[i]):arr[i];\n\t        \tint t1 = dp[i-1][0];\n\t        \tint t2 = (dp[i-1][1]<0?0:dp[i-1][1])+arr[i];\n\t        \tdp[i][1] = Math.max(t1,t2);\n\t        \tret = Math.max(ret,Math.max(dp[i][0], dp[i][1]));\n\t        } \n\t        return ret;\n\t    }\t\t\n\t    public List<Integer> findNumOfValidWords(String[] words, String[] puzzles) {\n\t        List<Integer> ret = new ArrayList<Integer>();\n\t        HashMap<Integer,Integer>[] mp = new HashMap[26];\n\t        for(int i=0;i<26;i++) mp[i] = new HashMap<Integer,Integer>();\n\t        //String p = \"abcdz\";\n\t        //Dumper.print(enc(p));\n\t        for(int i=0;i<words.length;i++) {\n\t        \tint v = enc(words[i]);\n\t        \tfor(int j=0;j<words[i].length();j++) {\n\t        \t\tmp[words[i].charAt(j)-'a'].put(v, 1);\n\t        \t}\n\t        }\n\t        for(int i=0;i<puzzles.length;i++) {\n\t        \tint n = puzzles[i].length();\n\t        \tint t = 0;\n\t        \tfor(int j=1;j<1<<(n-1);j++) {\n\t        \t\tint v = 0;\n\t        \t\tfor(int k=0;k<6;k++) {\n\t        \t\t\tif((j&(1<<k))!=0) {\n\t        \t\t\t\tv|=(1<<(puzzles[i].charAt(k)-'a'));\n\t        \t\t\t}\n\t        \t\t}\n\t        \t\tv|=(1<<(puzzles[i].charAt(0)-'a'));   \t\t\n\t        \t\t//t+=search(v,mp[puzzles[i].charAt(0)-'a']);\n\t        \t}\n\t        \tret.add(t);\n\t        }\n\t        return ret;\n\t    }\t\n\t    int search(int x, HashMap<Integer,Integer> mp, HashSet<Integer> hs) {\n\t    \tif(mp.containsKey(x)) return mp.get(x);\n\t    \tif(x==0) return 0;\n\t    \tint v = 0;\n\t    \tfor(int i=0;i<7;i++) {\n\t    \t\tif((x&(1<<i))!=0) {\n\t    \t\t\tint t = x;\n\t    \t\t\tt^=(1<<i);\n\t    \t\t\tif(!hs.contains(t)) {\n\t    \t\t\t\ths.add(t);\n\t    \t\t\t\tv+=search(t,mp,hs);\t    \t\t\t\t\n\t    \t\t\t}\n\t    \t\t}\n\t    \t}\n\t    \tmp.put(x, v);\t    \t\n\t    \treturn v;\n\t    }\n\t    int enc(String x) {\n\t    \tchar[] arr = x.toCharArray();\n\t    \tint v = 0;\n\t    \tfor(int i=0;i<arr.length;i++) {\n\t    \t\tv|=1<<(arr[i]-'a');\n\t    \t}\n\t    \treturn v;\n\t    }\n\t\t\n\t\tpublic class TreeNode {\n\t\t\tint val;\n\t\t\tTreeNode left;\n\t\t\tTreeNode right;\n\t\t\tTreeNode(int x) { val = x; }\n\t\t}\n\t\n\t\tpublic int GCD(int a, int b) {\n\t\t   if (b==0) return a;\n\t\t   return GCD(b,a%b);\n\t\t}\n\t\tpublic long GCD(long a, long b) {\n\t\t\t   if (b==0) return a;\n\t\t\t   return GCD(b,a%b);\n\t\t\t}\t\t\n\t}\n\t\n\t\n    static class ArrayUtils {\n        static final long seed = System.nanoTime();\n        static final Random rand = new Random(seed);\n\n        public static void sort(int[] a) {\n            shuffle(a);\n            Arrays.sort(a);\n        }\n\n        public static void shuffle(int[] a) {\n            for (int i = 0; i < a.length; i++) {\n                int j = rand.nextInt(i + 1);\n                int t = a[i];\n                a[i] = a[j];\n                a[j] = t;\n            }\n        }\n\n    }\t\n\tstatic class BIT{\n\t\tint arr[];\n\t\tint n;\n\t\tpublic BIT(int a) {\n\t\t\tn=a;\n\t\t\tarr = new int[n];\n\t\t}\n\t\tint sum(int p) {\n\t\t\tint s=0;\n\t\t\twhile(p>0) {\n\t\t\t\ts+=arr[p];\n\t\t\t\tp-=p&(-p);\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\t\tvoid add(int p, int v) {\n\t\t\twhile(p<n) {\n\t\t\t\tarr[p]+=v;\n\t\t\t\tp+=p&(-p);\n\t\t\t}\n\t\t}\n\t}\n\tstatic class DSU{\n\t\tint[] arr;\n\t\tint[] sz;\n\t\tpublic DSU(int n) {\n\t\t\tarr = new int[n];\n\t\t\tsz = new int[n];\n\t\t\tfor(int i=0;i<n;i++) arr[i] = i;\n\t\t\tArrays.fill(sz, 1);\n\t\t}\n\t\tpublic int find(int a) {\n\t\t\tif(arr[a]!=a) arr[a] = find(arr[a]);\n\t\t\treturn arr[a];\n\t\t}\n\t\tpublic void union(int a, int b) {\n\t\t\tint x = find(a);\n\t\t\tint y = find(b);\n\t\t\tif(x==y) return;\n\t\t\tarr[y] = x;\n\t\t\tsz[x] += sz[y];\n\t\t}\n\t\tpublic int size(int x) {\n\t\t\treturn sz[find(x)];\n\t\t}\n\t}\t\n\tstatic class MinHeap<Key> implements Iterable<Key> {\n\t\tprivate int maxN;\n\t\tprivate int n;\n\t\tprivate int[] pq;\n\t\tprivate int[] qp;\n\t\tprivate Key[] keys;\n\t\tprivate Comparator<Key> comparator;\n\t\t\n\t\tpublic MinHeap(int capacity){\n\t\t\tif (capacity < 0) throw new IllegalArgumentException();\n\t\t\tthis.maxN = capacity;\n\t\t\tn=0;\n\t\t\tpq = new int[maxN+1];\n\t\t\tqp = new int[maxN+1];\n\t\t\tkeys = (Key[]) new Object[capacity+1];\n\t\t\tArrays.fill(qp, -1);\n\t\t}\n\t\t\n\t\tpublic MinHeap(int capacity, Comparator<Key> c){\n\t\t\tif (capacity < 0) throw new IllegalArgumentException();\n\t\t\tthis.maxN = capacity;\n\t\t\tn=0;\n\t\t\tpq = new int[maxN+1];\n\t\t\tqp = new int[maxN+1];\n\t\t\tkeys = (Key[]) new Object[capacity+1];\n\t\t\tArrays.fill(qp, -1);\n\t\t\tcomparator = c;\n\t\t}\t\t\t\n\t\tpublic boolean isEmpty()\t{ return n==0; \t}\n\t\tpublic int size()\t\t\t{ return n;\t\t}\n\t\tpublic boolean contains(int i) {\n\t        if (i < 0 || i >= maxN) throw new IllegalArgumentException();\n\t        return qp[i] != -1;\n\t\t}\t\n\t\tpublic int peekIdx() {\n\t        if (n == 0) throw new NoSuchElementException(\"Priority queue underflow\");\n\t        return pq[1];\t\t\n\t\t}\t\n\t\tpublic Key peek(){\n\t\t\tif(isEmpty()) throw new NoSuchElementException(\"Priority queue underflow\");\n\t\t\treturn keys[pq[1]];\n\t\t}\n\t\tpublic int poll(){\n\t\t\tif(isEmpty()) throw new NoSuchElementException(\"Priority queue underflow\");\n\t\t\tint min = pq[1];\n\t\t\texch(1,n--);\n\t\t\tdown(1);\n\t\t\tassert min==pq[n+1];\n\t\t\tqp[min] = -1;\n\t\t\tkeys[min] = null;\t\t\n\t\t\tpq[n+1] = -1;\n\t\t\treturn min;\n\t\t}\n\t    public void update(int i, Key key) {\n\t        if (i < 0 || i >= maxN) throw new IllegalArgumentException();\n\t        if (!contains(i)) {\n\t        \tthis.add(i, key);\n\t        }else {\n\t        \tkeys[i] = key;\n\t        \tup(qp[i]);\n\t        \tdown(qp[i]);\n\t        }\n\t    }\t\n\t\tprivate void add(int i, Key x){\n\t        if (i < 0 || i >= maxN) throw new IllegalArgumentException();\n\t        if (contains(i)) throw new IllegalArgumentException(\"index is already in the priority queue\");\n\t        n++;\n\t        qp[i] = n;\n\t        pq[n] = i;\n\t        keys[i] = x;\n\t        up(n);\n\t\t}\n\t\tprivate void up(int k){\n\t\t\twhile(k>1&&less(k,k/2)){\n\t\t\t\texch(k,k/2);\n\t\t\t\tk/=2;\n\t\t\t}\n\t\t}\n\t\tprivate void down(int k){\n\t\t\twhile(2*k<=n){\n\t\t\t\tint j=2*k;\n\t\t\t\tif(j<n&&less(j+1,j)) j++;\n\t\t\t\tif(less(k,j)) break;\n\t\t\t\texch(k,j);\n\t\t\t\tk=j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic boolean less(int i, int j){\n\t        if (comparator == null) {\n\t            return ((Comparable<Key>) keys[pq[i]]).compareTo(keys[pq[j]]) < 0;\n\t        }\n\t        else {\n\t            return comparator.compare(keys[pq[i]], keys[pq[j]]) < 0;\n\t        }\n\t\t}\n\n\t\tpublic void exch(int i, int j){\n\t        int swap = pq[i];\n\t        pq[i] = pq[j];\n\t        pq[j] = swap;\n\t        qp[pq[i]] = i;\n\t        qp[pq[j]] = j;\n\t\t}\n\n\t\t@Override\n\t\tpublic Iterator<Key> iterator() {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn null;\n\t\t}\n\t}  \t\n\n    private static class InputReader\n    {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int zcurChar;\n        private int znumChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n\n        public int read()\n        {\n            if (znumChars == -1)\n                throw new InputMismatchException();\n            if (zcurChar >= znumChars)\n            {\n            \tzcurChar = 0;\n                try\n                {\n                    znumChars = stream.read(buf);\n                } catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                if (znumChars <= 0)\n                    return -1;\n            }\n            return buf[zcurChar++];\n        }\n\n        public int nextInt()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public double nextDouble()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.')\n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.')\n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c))\n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public long nextLong()\n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c)\n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next()\n        {\n            return nextString();\n        }\n\n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n        public int[] readIntArray(int n) {\n            int[] ret = new int[n];\n            for (int i = 0; i < n; i++) {\n                ret[i] = nextInt();\n            }\n            return ret;\n        }        \n    }    \n\n\tstatic class Dumper {\n\t\tstatic void print_int_arr(int[] arr) {\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print_char_arr(char[] arr) {\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print_double_arr(double[] arr) {\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print_2d_arr(int[][] arr, int x, int y) {\n\t\t\tfor (int i = 0; i < x; i++) {\n\t\t\t\tfor (int j = 0; j < y; j++) {\n\t\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print_2d_arr(boolean[][] arr, int x, int y) {\n\t\t\tfor (int i = 0; i < x; i++) {\n\t\t\t\tfor (int j = 0; j < y; j++) {\n\t\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(\"---------------------\");\n\t\t}\n\n\t\tstatic void print(Object o) {\n\t\t\tSystem.out.println(o.toString());\n\t\t}\n\n\t\tstatic void getc() {\n\t\t\tSystem.out.println(\"here\");\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "def move(rightmost, d, seq, current):\n\tplankno = seq[rightmost]\n\t# print(*seq)\n\t# while seq[rightmost] == plankno:\n\tmoving = rightmost\n\n\trem = rightmost-current-d\n\trightmost += 1\n\t# print(rem)\n\tfor i in range(rem):\n\t\ttemp = seq[moving]\n\t\tseq[moving] = seq[moving-1]\n\t\tseq[moving-1] = temp\n\t\tmoving -= 1\n\n\n\t# print(*seq, rightmost, moving)\n\n\twhile rightmost != len(seq) and seq[rightmost] == plankno:\n\t\tseq[rightmost] = 0\n\t\trightmost += 1\n\n\t\tseq[moving+1] = plankno\n\t\tmoving += 1\n\n\t# print(*seq, moving, rightmost)\n\treturn moving, rightmost\n\n\n\t\t# break\n\n\n\n\nn, m, d = map(int, input().split())\narr = [int(j) for j in input().split()]\n\nplanks = []\nfor i in range(m):\n\tplanks += [i+1]*arr[i]\n\nrem = [0]*(n-len(planks))\nseq = rem + planks\n# print(seq)\n# print(rem, planks)\n\nrightmost = n-1\nwhile seq[rightmost] != 0 and rightmost != -1:\n\trightmost -= 1\n\nrightmost += 1\ncurrent = -1\n# print(rightmost, current)\n\nfor i in range(m):\n\tif rightmost - current <= d:\n\t\tcurrent = n-1\n\t\tbreak\n\telse:\n\t\tcurrent, rightmost = move(rightmost, d, seq, current)\n\n\n# print(n-current)\nif n-current > d:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\tprint(*seq)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"Codeforces Round #598 (Div. 3)\n\nProblem C. Platforms Jumping\n\n:author:         Kitchen Tong\n:mail:    kctong529@gmail.com\n\nPlease feel free to contact me if you have any question\nregarding the implementation below.\n\"\"\"\n\n__version__ = '0.3'\n__date__ = '2019-11-24'\n\n\nimport sys\n\n\ndef solve(n, m, d, c):\n    empty_count = m + 1\n    platform_area = sum(c)\n    empty_area = n - platform_area\n    max_step = empty_area // empty_count\n    residue = empty_area % empty_count\n    if max_step + 1 > d:\n        return None\n    else:\n        if residue > 0 and max_step + 2 > d:\n            return None\n        else:\n            res = [0] * n\n            curr = 0\n            idx = 1\n            while curr < n and idx <= m:\n                curr += max_step\n                if residue > 0:\n                    curr += 1\n                    residue -= 1\n                res[curr:curr+c[idx-1]] = [idx] * c[idx-1]\n                curr += c[idx-1]\n                idx += 1\n            return res\n    return None\n\n\ndef main(argv=None):\n    n, m, d = map(int, input().split())\n    c = list(map(int, input().split()))\n    ans = solve(n, m, d, c)\n    if not ans:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, ans)))\n    return 0\n\n\nif __name__ == \"__main__\":\n    STATUS = main()\n    sys.exit(STATUS)\n"
        },
        {
            "language": 3,
            "solution": "import heapq\nfrom sys import stdin,stdout\nfrom collections import defaultdict\ndef main():\n    #for _ in range(int(input())):\n    n,m,d=map(int,stdin.readline().split())\n    c=[int(k) for k in input().split()]\n    wood=0\n    for i in range(m):\n        wood+=c[i]\n    freq=[0]*(n+1)\n    x=0\n    j=0\n    for i in range(1,n+1):\n        dis=x+d\n        if j<m:\n            w=c[j]\n            add=(dis-1)+w\n            if (n-add)>=(wood-w):\n                for k in range(dis,add+1):\n                    freq[k]=j+1\n            else:\n                rem=(wood-w)-(n-add)\n                add=add-rem\n                for k in range(add,add-w,-1):\n                    freq[k]=j+1\n            x=add\n            wood-=w\n            j+=1\n\n\n        else:\n            break\n    if x+d>=n+1:\n        print(\"YES\")\n        print(*freq[1:n+1])\n    else:\n        print(\"NO\")\n\n\n\n\n            \nmain()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Main {\n    public static void main(String args[])\n    {\n        FastReader input=new FastReader();\n        PrintWriter out=new PrintWriter(System.out);\n        int T=1;\n        while(T-->0)\n        {\n            int n,m,d;\n            n=input.nextInt();\n            m=input.nextInt();\n            d=input.nextInt();\n            int c[]=new int[m];\n            int sum=0;\n            for(int i=0;i<m;i++)\n            {\n                c[i]=input.nextInt();\n                sum+=c[i];\n            }\n            int x=n-sum;\n            int y=x/(m+1);\n            int rem=x%(m+1);\n            int z=y;\n            if(rem!=0)\n            {\n                z++;\n            }\n            if(d-1<z)\n            {\n                out.println(\"NO\");\n            }\n            else\n            {\n                out.println(\"YES\");\n                ArrayList<Integer> list=new ArrayList<>();\n                for(int i=0;i<m+1;i++)\n                {\n                    if(i<rem)\n                    {\n                        list.add(y+1);\n                    }\n                    else\n                    {\n                        list.add(y);\n                    }\n                }\n                int k=0;\n                for(int i=0;i<list.size();i++)\n                {\n                    for(int j=0;j<list.get(i);j++)\n                    {\n                        out.print(0+\" \");\n                    }\n                    if(k < m)\n                    {\n                        for(int j=0;j<c[k];j++)\n                        {\n                            out.print((k+1)+\" \");\n                        }\n                        k++;\n                    }\n                }\n            }\n        }\n        out.close();\n    }\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int,input().split())\nl = list(map(int,input().split()))\nfinal = [0]*n\ns = sum(l)\ndis = n-s\nif dis>(d-1)*(m+1):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    last = 0\n    for i in range(m):\n        x = min(dis,d-1)\n        dis-=x\n        final[last+x:last+x+l[i]] = [i+1]*l[i]\n        last = last+x+l[i]\n    print(*final)"
        },
        {
            "language": 3,
            "solution": "def fill_arr(river, remaing_sum, cursor, size_ci, ind):\n    # bool_left = True\n    # if cursor + size_ci > remaing_sum: # fill left side\n    #     river[cursor - size_ci + 1: cursor + 1] = [ind] * size_ci\n\n    # else: # fill right side\n\n    # bool_left = False\n    return river\n\n\nn, m, d = [*map(int, input().split())]\nCi = [*map(int, input().split())]\nriver = [0] * (n + 1)\ncursor = 0\ntotal_platform_size = sum(Ci)\nused_platform = 0\nbool_capasity = False\nfor i, c in enumerate(Ci):\n    ind = i + 1\n    if bool_capasity:\n        d = c\n\n    cursor += d\n    used_platform += c\n    remaining_platforms_size = total_platform_size - used_platform\n    capasity = n - (cursor + c -1)\n    if capasity  <= remaining_platforms_size:\n        bool_capasity = True\n        cursor = cursor + capasity - remaining_platforms_size\n    river[cursor:cursor + c] = [ind] * c\n    if c > 1:\n        cursor = cursor + c -1\nriver.pop(0)\n\nif cursor + d > n:\n    print(\"Yes\")\n    print(* river)\nelse:\n    print(\"NO\")\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn,m,d = list(map(int,input().split()))\nc = [int(x) for x in sys.stdin.readline().split(\" \")]\nif sum(c)+(len(c)+1)*(d-1)<n:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\tans = []\n\tsf = [0 for i in range(len(c)+1)]\n\tfor i in range(1,len(c)+1):\n\t\tsf[~(i)] = sf[~(i-1)]+c[~(i-1)]\n\tcurr_index = 0\n\tans = [0 for i in range(n)]\n\tfor i in range(len(c)):\n\t\tmaxi = curr_index\n\t\tfor j in range(1,d):\n\t\t\tif n-curr_index-(j+c[i])>=sf[i+1] and maxi+c[i]<=n:\n\t\t\t\tmaxi = max(maxi,curr_index+j)\n\t\t\telse:\n\t\t\t\tbreak\n\t\tcurr_index = maxi+c[i]\n\t\tans[maxi] = c[i]\n\tidx = 1\n\ti = 0\n\twhile i<len(ans):\n\t\tif ans[i]!=0:\n\t\t\tj = i\n\t\t\twhile j<len(ans) and j<i+c[idx-1]:\n\t\t\t\tans[j]=idx\n\t\t\t\tj+=1\n\t\t\tidx+=1\n\t\t\ti=j\n\t\telse:\n\t\t\ti+=1\n\tfor a in ans:\n\t\tprint(a,end=' ')\t\t\t\n\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"Codeforces Round #598 (Div. 3)\n\nProblem C. Platforms Jumping\n\n:author:         Kitchen Tong\n:mail:    kctong529@gmail.com\n\nPlease feel free to contact me if you have any question\nregarding the implementation below.\n\"\"\"\n\n__version__ = '0.2'\n__date__ = '2019-11-24'\n\n\nimport sys\n\n\ndef solve(n, m, d, c):\n    empty_count = m + 1\n    platform_area = sum(c)\n    empty_area = n - platform_area\n    max_step = empty_area // empty_count\n    residue = empty_area % empty_count\n    if max_step + 1 > d:\n        return None\n    else:\n        if residue > 0 and max_step + 2 > d:\n            return None\n        else:\n            res = [0] * n\n            curr = 0\n            idx = 1\n            while curr < n and idx <= m:\n                curr += max_step\n                if residue > 0:\n                    curr += 1\n                    residue -= 1\n                for i in range(c[idx-1]):\n                    res[curr] = idx\n                    curr += 1\n                idx += 1\n            return res\n    return None\n\n\ndef main(argv=None):\n    n, m, d = map(int, input().split())\n    c = list(map(int, input().split()))\n    ans = solve(n, m, d, c)\n    if not ans:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, ans)))\n    return 0\n\n\nif __name__ == \"__main__\":\n    STATUS = main()\n    sys.exit(STATUS)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.math.RoundingMode;\nimport java.security.KeyStore.Entry;\nimport java.text.DecimalFormat;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport javax.net.ssl.SSLContext;\n\npublic class Main\n{ \n   static long mod=(long)(1e+9 + 7);\n   static int[] sieve;\n   static ArrayList<Integer> primes;\n   static long min=Long.MAX_VALUE;\n   static int cell[];\n   \n   \n   public static void main(String[] args) throws java.lang.Exception\n   {\t  \t\n\t     fast s = new fast();\n\t     PrintWriter out=new PrintWriter(System.out);\n\t     \n\t     int t=1;\n\t     \n\t     while(t>0)\n\t    \t {\n\t    \t\t int n=s.nextInt();\n\t    \t\t int m=s.nextInt();\n\t    \t\t int dist=s.nextInt();\n\t    \t\t \n\t    \t\t int plat[]=new int[m+2];\n\t    \t\t cell=new int[n+2];\n\t    \t\t for(int i=1;i<=m;i++) plat[i]=s.nextInt();\n\t    \t\t int temp=n;\n\t    \t\t \n\t    \t\t int sum=0;\n\t    \t\t for(int i=1;i<=m;i++) sum+=plat[i];\n\t    \t\t sum++;\n\t    \t\t n++;\n\t    \t\t \n\t    \t\t int cur_pos=0;\t    \t\t \n\t    \t\t for(int i=1;i<=m;i++)\n\t    \t\t\t {\n\t    \t\t\t\t int start=n-sum+1; //start point of leftmost platform\n\t    \t\t\t\t if(cur_pos+dist>=start)\n\t    \t\t\t\t\t cur_pos=start+plat[i]-1;\n\t    \t\t\t\t else\n\t    \t\t\t\t\t cur_pos=cur_pos+dist+plat[i]-1;\n\n\t    \t\t\t\t for(int j=cur_pos;j>cur_pos-plat[i];j--)\n\t    \t\t\t\t\t cell[j]=i;\n\n\t    \t    \t\t sum-=plat[i];\n\t    \t\t\t }\n\t    \t\t \n\t    \t\t if(cur_pos+dist<temp+1) System.out.println(\"NO\");\n\t    \t\t else\n\t    \t\t\t {\n\t    \t\t\t\t System.out.println(\"YES\");\n\t    \t    \t\t for(int i=1;i<=temp;i++) System.out.print(cell[i]+\" \");\n\t    \t\t\t }\n                 t--;\n\t    \t }\n   }\n  \n \n \nstatic class fast {   \n\t    private InputStream i;\n\t\tprivate byte[]  buf = new byte[1024];\n\t\tprivate int curChar;\n\t\t\n\t\tprivate int numChars;\n\t\t\n\t\t//Return floor log2n\n\t\tpublic static long log2(long bits) // returns 0 for bits=0\n\t\t\t{\n\t\t\t    int log = 0;\n\t\t\t    if( ( bits & 0xffff0000 ) != 0 ) { bits >>>= 16; log = 16; }\n\t\t\t    if( bits >= 256 ) { bits >>>= 8; log += 8; }\n\t\t\t    if( bits >= 16  ) { bits >>>= 4; log += 4; }\n\t\t\t    if( bits >= 4   ) { bits >>>= 2; log += 2; }\n\t\t\t    return log + ( bits >>> 1 );\n\t\t\t}\n\t\t\n\t\tpublic static boolean next_permutation(int a[])\n\t\t   {\n\t\t\t   int i=0,j=0;int index=-1;\t   \n\t\t\t   int n=a.length;\n\t\t\t   \n\t\t\t   for(i=0;i<n-1;i++)\n\t\t\t\t   if(a[i]<a[i+1]) index=i;\n\t\t\t   \n\t\t\t   if(index==-1) return false;\n\t\t\t   i=index;\n \n\t\t\t  \n\t\t\t   for(j=i+1;j<n && a[i]<a[j];j++);\n \n\t\t\t   int temp=a[i];\n\t\t\t   a[i]=a[j-1];\n\t\t\t   a[j-1]=temp;\n\t\t\t   \t   \n\t\t\t   for(int p=i+1,q=n-1;p<q;p++,q--)\n\t\t\t   {\n\t\t\t\t   temp=a[p];\n\t\t\t\t   a[p]=a[q];\n\t\t\t\t   a[q]=temp;\n\t\t\t   }\n\t\t\t   \n\t\t\t   return true;\n\t\t   }\n\t\t   \n\t\t   \n\t\tpublic static void division(char ch[],int divisor)\n\t\t   {\n\t\t\t   int div=Character.getNumericValue(ch[0]); int mul=10;int remainder=0;\n\t\t\t   StringBuilder quotient=new StringBuilder(\"\");\n\t\t\t   for(int i=1;i<ch.length;i++)\n\t\t\t   {\n\t\t\t\t   div=div*mul+Character.getNumericValue(ch[i]);\t\n\t\t\t\t   if(div<divisor) {quotient.append(\"0\");continue;}\n\t\t\t\t   quotient.append(div/divisor);\n\t\t\t\t   div=div%divisor;mul=10;\n\t\t\t\t   \n\t\t\t   } \n\t\t\t   remainder=div;\n\t\t\t   while(quotient.charAt(0)=='0')quotient.deleteCharAt(0);\t   \n\t\t\t   System.out.println(quotient+\" \"+remainder);\t  \n\t\t   }\n\t\t\n\t\tpublic static void sieve(int size)\n\t\t{\n\t\t\tsieve=new int[size+1];\n\t\t\t\n\t\t\tprimes=new ArrayList<Integer>();\n\t\t\t\n\t\t\tsieve[1]=1;\n\t\t\t\n\t\t\tfor(int i=2;i*i<=size;i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0)\n\t\t\t\t {\n\t\t\t\t\tfor(int j=i*i;j<size;j+=i) {sieve[j]=1;}\n\t\t\t\t }\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=2;i<=size;i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0) primes.add(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static long pow(long n, long b, long MOD)\n\t\t   {\n\t\t       long x=1;long y=n; \n\t\t       while(b > 0)\n\t\t       {\n\t\t           if(b%2 == 1)\n\t\t           {\n\t\t               x=x*y;\n\t\t               if(x>MOD) x=x%(MOD);\n\t\t           }\n\t\t           y = y*y;\n\t\t           if(y>MOD) y=y%(MOD); \n\t\t           b >>= 1;\n\t\t       }\n\t\t       return x;\n\t\t   }\n \n \n\t\tpublic static long mod_inv(long n,long mod)\n\t\t{\n\t\t\treturn pow(n,mod-2,mod);\n\t\t}\n\t\t\n\t\t//Returns index of highest number less than or equal to key\n\t\t public static int upper(long[] a,int length,long key)\n\t\t {\n\t\t\t    int low = 0;\n\t\t        int high = length-1;\n\t\t        int ans=-1;\n\t\t        \n\t\t        while (low <= high) {\n\t\t            int mid = (low + high) / 2;\n\t\t            if (key >= a[mid]) {\n\t\t                ans=mid;\n\t\t            \tlow = mid+1;\n\t\t            } else if(a[mid]>key){\n\t\t                high = mid - 1;\n\t\t            }\n\t\t        }\n\t\t        return ans;\n\t\t}\n\t\t\n\t\t//Returns index of least number greater than or equal to key\n\t\t public static int lower(long[] a,int length,long key)\n\t\t {\n\t\t\t    int low = 0;\n\t\t        int high = length-1;\n\t\t        int ans=-1;\n\t\t        \n\t\t        while (low <= high) {\n\t\t            int mid = (low + high) / 2;\n\t\t            if (key<=a[mid]) {\n\t\t                ans=mid;\n\t\t            \thigh = mid-1;\n\t\t            }\n\t\t            else{\n\t\t            \t\tlow=mid+1;\n\t\t            \t}\n\t\t        }\n\t\t        return ans;\n\t\t} \n\t\t   \n\t\tpublic long gcd(long r,long ans)\n\t\t{\n\t\t\tif(r==0) return ans;\n\t\t\treturn gcd(ans%r,r);\n\t\t}\n\t\tpublic fast() {\n\t\t\tthis(System.in);\n\t\t}\n\t\tpublic fast(InputStream is) {\n\t\t\ti = is;\n\t\t}\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = i.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic String nextString() {\n     \t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t\tpublic boolean isEndOfLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n \n\t}\t\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class CodeForces598C {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int d = scanner.nextInt();\n        int[] c = new int[m];\n        int rest = n;\n        for (int i = 0; i < m; i++) {\n            c[i] = scanner.nextInt();\n            rest -= c[i];\n        }\n        if (rest > (d - 1) * (m + 1)) {\n            System.out.println(\"NO\");\n        } else {\n            StringBuilder sb = new StringBuilder(\"YES\\n\");\n            boolean river = rest > 0;\n            int riverStep = 0;\n            int j = 0;\n            for (int i = 0; i < n;) {\n                if (river) {\n                    sb.append(\"0 \");\n                    riverStep++;\n                    rest--;\n                    if (riverStep == d - 1 || rest == 0) {\n                        river = false;\n                    }\n                    i++;\n                } else {\n                    for (int k = 0; k < c[j]; k++) {\n                        sb.append(j + 1).append(\" \");\n                        i++;\n                    }\n                    j++;\n                    riverStep = 0;\n                    if (rest > 0) river = true;\n                }\n            }\n            System.out.println(sb);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n, m, d = [int(i) for i in input().split()]\nc = [int(i) for i in input().split()]\narr = [0] * n\ntemp = 0\nfor i in range(m):\n    try:\n        for j in range(c[i]):\n            arr[temp] = i + 1\n            temp += 1\n    except:\n        print('NO')\n        quit()\nq = 1\nwhile n - temp > d - 1:\n    try:       \n        temp_begin = arr.index(q)\n        arr[temp_begin + d - 2:temp + d - 1] = arr[temp_begin:temp]\n        arr[temp_begin:temp_begin + d - 2] = [0] * (d - 1)\n        temp += d - 1\n        q += 1\n    except:\n        print('NO')\n        quit()         \nprint('YES')\nprint(* arr)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf8 -*-\na = input().split()\nn = int(a[0])\nm = int(a[1])\nd = int(a[2])\nmass = list(map(int, input().split()))\nd1 = {}\nd1[m - 1] = n + 1 - mass[m - 1]\nfor i in range(m - 2, -1, -1):\n    d1[i] = d1[i + 1] - mass[i]\nnow = 0\nnowpl = 0\nflag = True\nwhile True:\n    if now + d >= d1[nowpl]:\n        break\n    d1[nowpl] = now + d\n    now = now + d + mass[nowpl] - 1\n    nowpl += 1\n    if nowpl >= m:\n        if now + d >= n + 1:\n            break\n        print('NO')\n        flag = False\n        break    \nif flag:\n    print('YES')\n    ret = ['0'] * n\n    for i in range(m):\n        for j in range(d1[i] - 1, d1[i] + mass[i] - 1):\n            ret[j] = str(i + 1)\n    print(' '.join(ret))"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nN, M, D = map(int, input().split())\nC = list(map(int, input().split()))\n\nL = sum(C)+(M+1)*(D-1)\nif L < N:\n    print('NO')\nelse:\n    print('YES')\n    rem = L - N\n    water = []\n    for i in range(M+1):\n        if rem >= D-1:\n            water.append(0)\n            rem -= D-1\n        elif rem > 0:\n            water.append(D-1-rem)\n            rem = 0\n        else:\n            water.append(D-1)\n    ans = []\n    for i in range(M):\n        ans += [0]*water[i]\n        ans += [i+1]*C[i]\n    ans += [0]*water[M]\n    for a in ans:\n        print(a, end=' ')\n    print()"
        },
        {
            "language": 3,
            "solution": "l, pNum , d = [int(s) for s in input().split()]\nP =  [int(s) for s in input().split()]\nrem = l\nfor p in P:\n    rem -= p\n\nif rem%(pNum + 1) == 0:\n    inter = rem//(pNum + 1)\n    if inter+1 > d:  # mistake\n        print('NO')\n    else:\n        seq = '0 '*(inter)\n        ans = ''\n        for i in range(pNum):\n            ans += seq\n            for j in range(P[i]):\n                ans += str(i+1) + ' '\n        ans += seq\n        print(\"YES\")\n        print(ans)\nelse:\n    inter = rem // (pNum + 1) + 1\n    if inter+1 > d:\n        print('NO')\n    else:\n        widers = rem%(pNum + 1)\n        wider = '0 '*(inter)\n        closers = (pNum + 1) - widers\n        closer = '0 '*(inter-1)\n        ans = ''\n        for i in range(widers):\n            ans += wider\n            for j in range(P[i]):\n                ans += str(i+1) + ' '\n        for i2 in range(closers-1):\n            ans += closer\n            for j in range(P[widers + i2]):\n                ans += str(widers+i2+1) + ' '\n        ans += closer\n        print('YES')\n        print(ans)"
        },
        {
            "language": 4,
            "solution": "// import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class test {\n\tpublic static void main(String[] args) {\n\t\tScanner s = new Scanner(System.in);\n\t\tint n = s.nextInt();\n\t\tint m = s.nextInt();\n\t\tint d = s.nextInt();\n\t\tint arr[] = new int[m];\n\t\tint total = 0;\n\t\tfor(int i=0;i<m;i++) {\n\t\t\tarr[i]=s.nextInt();\n\t\t\ttotal+=arr[i];\n\t\t}\n\t\tif(total>n) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t} else {\n\t\t\tint ans[] = new int[n];\n\t\t\tint index = n-1;\n\t\t\tint p = m-1;\n\t\t\twhile(p>=0) {\n\t\t\t\tint len = arr[p];\n\t\t\t\tif(index-len+1>=0) {\n\t\t\t\t\twhile(len-->0)\n\t\t\t\t\t\tans[index--]=p+1;\n\t\t\t\t}\t\t\t\n\t\t\t\tp--;\n\t\t\t}\n\t\t\tint k = n-total;\n\t\t\tint i = -1;\n\t\t\tint slab = 0;\n\t\t\twhile(i<=n && slab<m) {\n\t\t\t\ti+=d;\n\t\t\t\tif(i<k) {\n\t\t\t\t\tfor(int j=0;j<arr[slab];j++) {\n\t\t\t\t\t\tans[i+j]=slab+1;\n\t\t\t\t\t\tans[k+j]=0;\n\t\t\t\t\t}\n\t\t\t\t\tk=k+arr[slab];\n\t\t\t\t\ti+=arr[slab]-1;\n\t\t\t\t\tslab++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean flag = false;\n\t\t\ti = n-1;\n\t\t\tint j = 0;\n\t\t\twhile(j<d) {\n\t\t\t\tif(ans[i-j]!=0) {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(flag) {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t\tfor(i=0;i<n;i++)\n\t\t\t\t\tSystem.out.print(ans[i]+\" \");\t\t\t\t\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\ts.close();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL), cout.tie(NULL);\n  long long n, m, d;\n  cin >> n >> m >> d;\n  long long x;\n  long long i, a[m], sum = 0;\n  for (i = 0; i < m; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  x = (d - 1) * (m + 1) + sum;\n  if (x >= n) {\n    cout << \"YES\"\n         << \"\\n\";\n    long long y = d - 1;\n    long long r = n - sum;\n    long long k = 1, p = 0;\n    for (i = 0; i < n; i++) {\n      if (r > 0 && y > 0) {\n        cout << 0 << \" \";\n        y--;\n        r--;\n      } else {\n        i += a[p];\n        while (a[p]--) {\n          cout << k << \" \";\n        }\n        p++;\n        k++;\n        y = d - 1;\n        i--;\n      }\n    }\n    cout << \"\\n\";\n  } else {\n    cout << \"NO\"\n         << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1005];\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int sum = 0;\n  for (int i = 1; i <= m; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  if (sum + (d - 1) * (m + 1) < n) {\n    cout << \"NO\" << endl;\n    return 0;\n  } else {\n    cout << \"YES\" << endl;\n    int sum2 = n - sum;\n    int dep = sum2 / (m + 1);\n    int all = sum2 % (m + 1);\n    int flag = 1;\n    int flag2 = 0;\n    int now = 0;\n    for (int i = 1; i <= m; i++) {\n      if (flag2 < all) {\n        for (int j = 1; j <= dep + 1; j++) {\n          now++;\n          cout << '0' << ' ';\n        }\n        flag2++;\n      } else {\n        for (int j = 1; j <= dep; j++) {\n          now++;\n          cout << '0' << ' ';\n        }\n      }\n      for (int j = 1; j <= a[i]; j++) {\n        now++;\n        cout << i << \" \";\n      }\n    }\n    while (now < n) {\n      cout << '0' << \" \";\n      now++;\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class paresh {\n    static Scanner sc = new Scanner(System.in);\n    public static void main(String[] args){\n        int n = sc.nextInt();\n        int m = sc.nextInt(); //tedad sakoo\n        int d = sc.nextInt();\n        int [] c = new int[n+1];\n        int sumCi =0;\n        for(int i=1 ; i<=m ; i++){\n            c[i]= sc.nextInt();\n            sumCi+=c[i];\n        }\n        if(sumCi + (m+1)*(d-1) <n)\n            System.out.println(\"NO\");\n        else {\n            int num=n-sumCi;\n            int j=1;\n            int k=d-1;\n            System.out.println(\"YES\");\n            while(num>0)\n            {\n                for(int i=1;i<=Math.min(k,num);i++)\n                    System.out.print(0 + \" \");\n                num = num - k;\n                for(int i=1;i<=c[j];i++) {\n                    System.out.print(j + \" \");\n                }\n                j++;\n            }\n            while(j<=m)\n            {\n                for(int i=1;i<=c[j];i++) {\n                    System.out.print(j + \" \");\n                }\n                j++;\n            }\n            System.out.println();\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class c {\n    public static PrintWriter out;\n    public static void main(String[] args) throws IOException {\n        FS sc = new FS(System.in);\n        out = new PrintWriter(new BufferedOutputStream(System.out));\n        int n =sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n        int a[] = new int[m+1];\n        int sum[] = new int[m+1];\n        for (int i=1;i<=m;i++) {\n            a[i] = sc.nextInt();\n            sum[i] = sum[i-1] + a[i];\n        }\n        int[] startpositions = new int[n+1];\n        int pos = -1 + d;\n        int[] res = new int[n];\n        for (int i=1;i<=m;i++) {\n            int start = n-(sum[m] - sum[i-1]);\n            int tmp = Math.min(start, pos);\n            startpositions[i] = tmp;\n            pos = tmp + a[i] - 1 + d;\n        }\n\n        if (pos < n) {\n            out.println(\"NO\");\n        }\n        else {\n            out.println(\"YES\");\n            for (int i=1;i<=m;i++) {\n                for (int j=0;j<a[i];j++) {\n                    res[startpositions[i]+j] = i;\n                }\n            }\n    \n            for (int i=0;i<n;i++)\n                out.print(res[i] + \" \");\n            out.println();\n        }\n        out.close();\n    }\n    \n    static class FS {\n    \tBufferedReader br;\n        StringTokenizer st;\n\n    \tpublic FS(InputStream i) {\n            br = new BufferedReader(new InputStreamReader(i));\n\t        st = new StringTokenizer(\"\");\n        }\n\n        public String next() throws IOException {\n            if(st.hasMoreTokens())\n                return st.nextToken();\n    \t    else\n                st = new StringTokenizer(br.readLine());\n            return next();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\t\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n    \t}\n\n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nplats = list(map(int, input().split()))\ntotal = sum(plats)\nanswer = [0] * (n + 1)\nif total + (d - 1) * (m + 1) < n:\n    print('NO')\nelif total + (d - 1) >= n:\n    d = n + 1 - total\n    i = 1\n    j = d\n    for pl in plats:\n        while pl > 0:\n            answer[j] = i\n            j += 1\n            pl -= 1\n        i += 1\n    print('YES')\n    print(' '.join(list(map(str, answer[1:]))))\nelse:\n    ends = d\n    plat_sum = 0\n    cnt = 1\n    for i in range(m):\n        if total - plat_sum >= n + 1 - (ends - 1):\n            break\n        for j in range(plats[i]):\n            answer[ends + j] = cnt\n        ends += plats[i] - 1\n        plat_sum += plats[i]\n        cnt += 1\n        if n + 1 - (ends - 1) < (total - plat_sum) + d:\n            ends = n + 1 - (total - plat_sum)\n            break\n        ends += d\n    for k in range(i + 1, m):\n        plat = plats[k]\n        for j in range(plat):\n            answer[ends + j] = cnt\n        ends += plat\n        cnt += 1\n    print('YES')\n    print(' '.join(list(map(str, answer[1:]))))\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\n\nc= [int(x) for x in input().split()]\n\ns = sum(c)\n\n# m + 1 intervals\n# n -s number of cells\n#print(m+1, n -s)\n\n\nif (n - s ) / (m+1) > d- 1:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n\n    r = []\n    cells = n - s\n    for i, p in enumerate(c, start=1):\n        gap = min(cells, d-1)\n        r.extend([0] * gap)\n        cells -= gap\n        r.extend([i] * p)\n\n    r.extend([0]*cells)\n    print(*r)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e3 + 100;\nint a[maxn], l[maxn], ans[maxn];\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; i++) cin >> a[i];\n  int r = 0;\n  for (int i = 0; i < m; i++) {\n    r += d;\n    l[i] = r;\n    r += a[i] - 1;\n  }\n  r += d;\n  l[m] = n + 1;\n  if (r <= n) {\n    cout << \"NO\" << endl;\n    return 0;\n  }\n  cout << \"YES\" << endl;\n  for (int i = m - 1; i >= 0; i--) {\n    l[i] = min(l[i], l[i + 1] - a[i]);\n  }\n  for (int i = 0; i < m; i++) {\n    for (int j = l[i]; j <= l[i] + a[i] - 1; j++) {\n      ans[j] = i + 1;\n    }\n  }\n  for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n  cout << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\n*p, = map(int, input().split())\ni = 0\nl = []\nc = 0\nf = False\nwhile True:\n  t = i + d\n  if t >= n+1:\n    f = True\n    l += [0]*(n-t+d)\n    break\n  else:\n    if c >= m:\n      break\n    l += (d-1)*[0]+[c+1]*p[c]\n    i = t+p[c]-1\n    c += 1\nif f == True:\n  print(\"YES\")\n  if c < m:\n    for i in range(c, m):\n      l += [i+1]*p[i]\n  j = len(l)-1\n  while len(l) > n:\n    if l[j] == 0:\n      del l[j]\n    else:\n      j -= 1\n  print(*l)\nelse:\n  print(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long int sz[1002];\n  long long int n, m, d, sum = 0, sum1 = 0;\n  long long int q;\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; i++) {\n    cin >> q;\n    sz[i] = q;\n    sum = sum + q - 1;\n    sum1 = sum1 + q;\n  }\n  if (d * (m + 1) + sum >= n + 1)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  if (d * (m + 1) + sum >= n + 1) {\n    long long int rest = n - sum1;\n    long int p[1002];\n    for (int i = 0; i < 1001; i++) p[i] = 0;\n    int j = 0;\n    while (rest > 0) {\n      p[j] = min(d - 1, rest);\n      rest = rest - p[j];\n      j++;\n    }\n    sz[m] = -1;\n    for (int i = 0; i <= m; i++) {\n      for (int t = 0; t < p[i]; t++) cout << 0 << ' ';\n      for (int t = 0; t < sz[i]; t++) cout << i + 1 << ' ';\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename Arg1>\nvoid __f(const char* name, Arg1&& arg1) {\n  cout << name << \" : \" << arg1 << '\\n';\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char* names, Arg1&& arg1, Args&&... args) {\n  const char* comma = strchr(names + 1, ',');\n  cout.write(names, comma - names) << \" : \" << arg1 << \" | \";\n  __f(comma + 1, args...);\n}\nconst long long N = 3e5 + 7;\nlong long n, m, d;\nlong long arr[N], plank[N], pos[N], st[N];\nvoid solve() {\n  cin >> n >> m >> d;\n  for (long long i = 0; i < m; i++) cin >> plank[i];\n  for (long long i = 0; i < m; i++) {\n    long long x = plank[i];\n    if (i != 0)\n      pos[i] = pos[i - 1] + x;\n    else\n      pos[i] = x;\n    st[i] = pos[i] - plank[i] + 1;\n  }\n  pos[m] = n + 1;\n  st[m] = n + 1;\n  for (long long i = m - 1; i >= 0; i--) {\n    if (st[i + 1] - d > pos[i]) {\n      long long x = (st[i + 1] - d);\n      pos[i] = x;\n      st[i] = pos[i] - plank[i] + 1;\n    }\n  }\n  for (long long i = 0; i < m; i++)\n    for (long long j = st[i]; j < pos[i] + 1; j++) arr[j] = i + 1;\n  if (st[0] > d)\n    cout << \"NO\";\n  else {\n    cout << \"YES\" << '\\n';\n    for (long long i = 1; i < n + 1; i++) cout << arr[i] << \" \";\n  }\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long t = 1;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1000 + 10;\nint n, m, d;\nint c[maxn];\nint kq[maxn];\nint l[maxn];\nint pos[maxn];\nint res[maxn] = {0};\nint main() {\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) cin >> c[i];\n  int ll = n + 1;\n  for (int i = m; i >= 1; i--) {\n    ll = ll - c[i];\n    l[i] = ll;\n  }\n  int z = 0;\n  for (int i = 1; i <= m; i++) {\n    int t = min(z + d, l[i]);\n    pos[i] = t;\n    z = t + c[i] - 1;\n  }\n  if (z + d < n + 1)\n    cout << \"NO\\n\";\n  else {\n    cout << \"YES\\n\";\n    for (int i = 1; i <= m; i++)\n      for (int j = 1; j <= c[i]; j++) res[pos[i] + j - 1] = i;\n    for (int i = 1; i <= n; i++) cout << res[i] << \" \";\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\nimport collections\ninput = sys.stdin.readline\n\n\n# imgur.com/Pkt7iIf.png\n\ndef getdict(n):\n    d = {}\n    if type(n) is list:\n        for i in n:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n    else:\n        for i in range(n):\n            t = ii()\n            if t in d:\n                d[t] += 1\n            else:\n                d[t] = 1\n    return d\ndef sieve(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = prime[1] = False\n    r = [p for p in range(n + 1) if prime[p]]\n    return r\ndef pow(x, y, mod):\n    r = 1\n    x = x % mod\n    while y > 0:\n        if y & 1:\n            r = (r * x) % mod\n        y = y >> 1\n        x = (x * x) % mod\n    return r\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef prr(a, sep = ' '): print(sep.join(map(str, a)))\n\n\nn, m, jump = mi()\nd = li()\n\nstate = [0] * n\nc = []\nt = n - 1\nfor i in range(m - 1, -1, -1):\n    c.append([t - d[i] + 1, t])\n    t = t - d[i]\nc.reverse()\npos = -1\nf = False\nfor i in range(m):\n    if pos + jump >= c[i][0]:\n        f = True\n        break\n    else:\n        delta = c[i][0] - (pos + jump)\n        c[i][0] -= delta\n        c[i][1] -= delta\n        pos = c[i][1]\n\nif f or pos + jump >= n:\n    print('YES')\n    for i in range(m):\n        for j in range(c[i][0], c[i][1] + 1):\n            state[j] = i + 1\n    prr(state)\nelse:\n    print('NO')"
        },
        {
            "language": 3,
            "solution": "[n,m,d] = [int(i) for i in input().split(\" \")]\nboards = [int(i) for i in input().split(\" \")]\ntotal = sum(boards)\ngaps = n - total\nif gaps > (m+1) * (d-1):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    arr = []\n    per = gaps // (m+1)\n    extra = gaps % (m+1)\n    curr = 0\n    for i in range(m):\n        toAdd = per\n        if i < extra:\n            toAdd += 1\n        for j in range(toAdd):\n            arr.append(0)\n        for j in range(boards[i]):\n            arr.append(i + 1)\n\n    toAdd = per\n    for j in range(toAdd):\n        arr.append(0)\n\n    print(' '.join([str(i) for i in arr]))"
        },
        {
            "language": 4,
            "solution": "//package platformsjumping;\n\nimport java.util.*;\nimport java.io.*;\n\npublic class platformsjumping {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader fin = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(fin.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint d = Integer.parseInt(st.nextToken());\n\t\td--;\n\t\tint numWater = 0;\n\t\tint numPlank = 0;\n\t\tint[] planks = new int[m];\n\t\tst = new StringTokenizer(fin.readLine());\n\t\tfor(int i = 0; i < m; i++) {\n\t\t\tplanks[i] = Integer.parseInt(st.nextToken());\n\t\t\tnumPlank += planks[i];\n\t\t}\n\t\tnumWater = n - numPlank;\n\t\tint pointer = 1;\n\t\tStringBuilder fout = new StringBuilder();\n\t\tfor(int i = 0; i < m; i++) {\n\t\t\tint jump = d;\n\t\t\tfor(int j = Math.min(jump, numWater); j > 0; j--) {\n\t\t\t\tfout.append(\"0 \");\n\t\t\t\tnumWater --;\n\t\t\t}\n\t\t\tint next = planks[i];\n\t\t\tfor(int j = 0; j < next; j++) {\n\t\t\t\tfout.append(pointer).append(\" \");\n\t\t\t}\n\t\t\tpointer ++;\n\t\t}\n\t\tif(numWater <= d) {\n\t\t\tfor(int i = 0; i < numWater; i++) {\n\t\t\t\tfout.append(\"0 \");\n\t\t\t}\n\t\t\tSystem.out.println(\"YES\\n\" + fout);\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\nconst vector<int> mods = {998244353, 1000000007, 1000000009};\nconst long long inf = 3e18;\nconst double pi = acos(-1.0);\nconst double eps = 0.0000001;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\ntemplate <class... K>\nusing umap = unordered_map<K...>;\ntemplate <class... K>\nusing uset = unordered_set<K...>;\nlong long n, m, d, t;\nvector<long long> c;\numap<long long, long long> res;\nint main() {\n  cin.sync_with_stdio(0);\n  cin.tie(0);\n  cout.precision(13);\n  cin >> n >> m >> d;\n  c.resize(m + 1);\n  for (long long i = (0); i < (m); ++i) {\n    cin >> c[i];\n    t += c[i];\n  }\n  t = n - t;\n  c[m++] = 1;\n  long long ds = 0;\n  for (long long i = (0); i < (m); ++i) {\n    long long jmp = min(d - 1, t);\n    t -= jmp;\n    for (long long j = (ds + jmp + 1); j < (ds + jmp + 1 + c[i]); ++j)\n      res[j] = i + 1;\n    ds = ds + jmp + c[i];\n    if (ds >= n + 1) {\n      cout << \"YES\\n\";\n      for (long long i = (1); i < (n + 1); ++i) cout << res[i] << \" \\n\"[i == n];\n      return 0;\n    }\n  }\n  cout << \"NO\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nplatforms = list(map(int, input().split()))\nriver = [0 for i in range(n + 2)]\n\nsumma = sum(platforms)#\u0441\u0443\u043c\u043c\u0430\u0440\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u043d\u0430 \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c 3\nmaxlengap = d - 1#\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u043a \u043c\u0435\u0436\u0434\u0443 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430\u043c\u0438  1\nlenofallgaps = n - summa#\u0441\u0443\u043c\u043c\u0430\u0440\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u043d\u0430 \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u043e\u0432  4\nmaxamountofgaps = m + 1#\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u043e\u0432, \u043c\u0435\u0436\u0434\u0443 \u0431\u0435\u0440\u0435\u0433\u043e\u043c \u0438 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u043e\u0439 \u0442\u043e\u0436\u0435 \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f 3\n\nif lenofallgaps < 0 or summa + maxlengap * maxamountofgaps < n:\n    print('NO')\n    exit()\nelif lenofallgaps == 0:\n    pos = 0\n    for i in range(len(platforms)):\n        for p in range(pos + 1, pos + platforms[i] + 1):\n            river[p] = i + 1\n        pos += platforms[i]\n\nelse:\n    gaps = []\n    c = lenofallgaps // maxlengap\n    for _ in range(lenofallgaps // maxlengap):\n        gaps.append(maxlengap)\n    if lenofallgaps % maxlengap != 0:\n        gaps.append(lenofallgaps % maxlengap)\n    numofgaps = len(gaps)\n\n    pos = 0\n    j = 0\n    for i in range(len(platforms)):\n        if j < numofgaps:\n            pos += gaps[j]\n            j += 1\n        for p in range(pos + 1, pos + platforms[i] + 1):\n            river[p] = i + 1\n        pos += platforms[i]\nprint('YES')\nprint(*river[1:-1])\n"
        },
        {
            "language": 3,
            "solution": "\n\n\nn,m,d = list(map(int,input().split()))\nc = list(map(int,input().split()))\nif(d == 1):\n    suma = sum(c)\n    if(suma == n):\n        print('YES')\n        for i in range(m):\n            for j in range(c[i]):\n                print(i+1,end = \" \")\n        print('\\n')\n    else:\n        print('NO')\n\nelse:\n\n    arr = [0 for i in range(n+2)]\n    index = 1\n    def count0(arr):\n        counta  = 0\n        for i in range(n,-1,-1):\n            if(arr[i] == 0):\n                counta += 1\n            else:\n                break\n        return counta\n    for i in range(m):\n        for j in range(c[i]):\n            arr[index] = i+1\n            index += 1\n    count_index = 0\n    stop_index = 1\n    counta = count0(arr)\n    while((d<=counta) and count_index<m):\n        ans = [0 for i in range(n+2)]\n        for i in range(stop_index,n+1-counta):\n            ans[i+d-1] = arr[i]\n            arr[i] = 0\n\n        for i in range(stop_index,n+1):\n            arr[i] = ans[i]\n        stop_index += d-1 +c[count_index]\n        count_index += 1\n        counta = count0(arr)\n        #print(counta)\n\n    if(count_index > m or counta >= d):\n        print('NO')\n\n    else:\n        print('YES')\n        for i in range(1,n+1):\n            print(arr[i],end= \" \")\n        print('\\n')\n\n            \n    \n        \n\n"
        },
        {
            "language": 3,
            "solution": "a = list(map(int, input().split()))\nc = list(map(int, input().split()))\nn = a[0]\nm = a[1]\nd = a[2]\nans = [0 for i in range(n)]\npos = [0 for i in range(m)]\nj = n-1\nfor i in range(m):\n    tmp = c[m-i-1]\n    while(tmp > 0):\n        tmp -= 1\n        ans[j] = m-i\n        pos[m-i-1] = j\n        j -= 1\n\nx = -1\ni = 0\nflag = False\nwhile(x < n):\n    tmp = x+d\n    if(tmp >= n or ans[tmp] != 0):\n        flag = True\n        break\n    elif(i < m):\n        y = pos[i]\n        for j in range(c[i]):\n            ans[y+j] = 0\n            ans[tmp+j] = i+1\n        x = tmp+c[i]-1\n        i += 1\n    else:\n        break\nif(flag):\n    print(\"YES\")\n    for x in range(n):\n        if(x > 0):print(\" \",end=\"\")\n        print(ans[x],end=\"\")\n    print()\nelse:\n    print(\"NO\")\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint C[1001];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, m, d;\n  cin >> n >> m >> d;\n  int s = 0;\n  for (int i = 0; i < m; ++i) {\n    cin >> C[i];\n    s += C[i];\n  }\n  int l = n - s + m;\n  if ((l) / (m + 1) >= d) return cout << \"NO\\n\", 0;\n  cout << \"YES\\n\";\n  for (int i = 0; i < m; ++i) {\n    for (int j = 0, r = (n - s) / (m - i + 1); j < r; ++j, --n) cout << \"0 \";\n    for (int j = 0; j < C[i]; ++j, --s, --n) cout << i + 1 << ' ';\n  }\n  for (int j = 0, r = (n - s); j < r; ++j, --n) cout << \"0 \";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\n*c, = map(int, input().split())\nif (n - sum(c) + m) // d > m:\n    print('NO')\nelse:\n    print('YES')\n    k = n - sum(c)\n    for i in range(m):\n        print('0 ' * (k // (m + 1) + (k % (m + 1) > i)), (str(i + 1) + ' ') * c[i])\n    print('0 ' * (k // (m + 1)))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e3 + 5;\nint c[N];\nint ans[N];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, m, d;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) {\n    cin >> c[i];\n  }\n  for (int i = m, pos = n; i >= 1; i--) {\n    for (int j = 0; j < c[i]; j++) {\n      ans[pos - j] = i;\n    }\n    pos -= c[i];\n  }\n  int cur = 0;\n  while (1) {\n    while (cur + 1 < n + 1 && ans[cur + 1] > 0) cur++;\n    if (cur + d >= n + 1) break;\n    if (ans[cur + d] == 0) {\n      int l = -1;\n      for (int i = cur + d; i <= n + 1; i++) {\n        if (ans[i] != 0) {\n          l = i;\n          break;\n        }\n      }\n      if (l == -1) {\n        cout << \"NO\\n\";\n        return 0;\n      }\n      int r = -1;\n      for (int i = l; i <= n + 1; i++) {\n        if (ans[i] == ans[l]) r = i;\n      }\n      while (ans[cur + d] == 0) {\n        swap(ans[l - 1], ans[r]);\n        l--;\n        r--;\n      }\n    }\n    cur += d;\n  }\n  cout << \"YES\\n\";\n  for (int i = 1; i <= n; i++) {\n    cout << ans[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------- fast io --------------------\nfrom collections import deque\nn,m,d=map(int,input().split());vals=list(map(int,input().split()));length=sum(vals)\nif length<=n:\n    riv=[deque([]) for s in range(n)];nxt=d-1\n    for s in range(m):\n        plk=vals[s]\n        if nxt+plk-1<=n-1:\n            for i in range(nxt,nxt+plk):\n                riv[i].append(s)\n            nxt+=plk-1+d\n        else:\n            queue=deque([]);cur=n-1\n            while (plk>0 or len(queue)>0) and cur>=0:\n                if plk>0:\n                    riv[cur].append(s);plk-=1\n                else:\n                    riv[cur].append(queue.popleft())\n                if len(riv[cur])>=2:\n                    queue.append(riv[cur].popleft())\n                cur-=1\n    river=[]\n    for s in range(len(riv)):\n        if len(riv[s])==0:\n            river.append(0)\n        else:\n            river.append(riv[s].pop()+1)\n    if (m+1)*(d-1)>=n-length:\n        print(\"YES\")\n        print(*river)\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MAXN = 1e6 + 20;\nconst long long mod = 1e9 + 7;\nint a[MAXN], b[MAXN];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int n, m, d, sum = 0, sum1 = 0;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; ++i) {\n    cin >> a[i];\n    sum1 += a[i];\n    sum += d + a[i] - 1;\n  }\n  if (sum + d < n + 1)\n    cout << \"NO\";\n  else {\n    cout << \"YES\" << endl;\n    int cnt = 1, l = d, r = d + a[cnt] - 1;\n    for (int i = 1; i <= n; ++i) {\n      if (i >= l && i <= r) {\n        b[i] = cnt;\n        sum1--;\n        if (i == r) {\n          cnt++;\n          l = r + d;\n          r += d + a[cnt] - 1;\n        }\n      }\n    }\n    cnt = m;\n    int i = n, cnt1 = 0;\n    while (sum1) {\n      if (b[i] > 0) sum1++;\n      b[i] = cnt;\n      sum1--;\n      cnt1++;\n      i--;\n      if (cnt1 == a[cnt]) cnt--, cnt1 = 0;\n    }\n    for (int i = 1; i <= n; ++i) cout << b[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve(ls, n, d):\n    arr = list(enumerate(ls, 1))\n    s = sum(ls)\n    count = n - s\n    ans = []\n    while count and arr:\n        if count < d - 1:\n            break\n        ans.extend([0] * (d - 1))\n        el = arr.pop(0)\n        ans.extend([el[0]] * el[1])\n        count -= d - 1\n\n    if count > d - 1:\n        return \"NO\", []\n    ans.extend([0] * count)\n    for item in arr:\n        ans.extend([item[0]] * item[1])\n    return \"YES\", ans\n\n\nn, _, d = list(map(int, input().split()))\nls = list(map(int, input().split()))\nresp, ans = solve(ls, n, d) \nif ans:\n    print(resp)\n    print(\" \".join(map(str, ans)))\nelse:\n    print(resp)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d, c[1005], plat = 0;\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; i++) {\n    cin >> c[i];\n    plat += c[i];\n  }\n  vector<int> v(m + 1);\n  int h = 1;\n  bool flag = 0;\n  while (h < d) {\n    for (int i = 0; i <= m; i++) {\n      if (plat == n) {\n        flag = 1;\n        break;\n      }\n      v[i]++;\n      plat++;\n    }\n    if (flag) break;\n    h++;\n  }\n  if (plat == n) {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < m; i++) {\n      for (int j = 0; j < v[i]; j++) cout << \"0 \";\n      for (int j = 0; j < c[i]; j++) cout << i + 1 << \" \";\n    }\n    for (int j = 0; j < v[m]; j++) cout << \"0 \";\n    cout << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.*;\n    public class Hello {\n    \tpublic static TreeSet<Long> primeFactors(long n)\n        {\n    \t\tTreeSet<Long> res = new TreeSet<Long>();\n            // Print the number of 2s that divide n \n        while (n % 2 == 0) { \n            n /= 2;\n            res.add((long) 2);\n        } \n        \n  \n        // n must be odd at this point.  So we can \n    // skip one element (Note i = i +2) \n    for (long i = 3; i <= Math.sqrt(n); i += 2) { \n        // While i divides n, print i and divide n \n            while (n % i == 0) { \n                res.add((long)i);\n                n /= i; \n            }\n        } \n  \n        // This condition is to handle the case whien \n    // n is a prime number greater than 2 \n    if (n > 2) \n        res.add(n);\n    return res;\n}\n  static long power(long x, long y, long p) \n    { \n        // Initialize result \n        long res = 1;      \n         \n        // Update x if it is more   \n    // than or equal to p \n    x = x % p;  \n  \n    while (y > 0) \n    { \n        // If y is odd, multiply x \n        // with result \n        if((y & 1)==1) \n            res = (res * x) % p; \n  \n        // y must be even now \n        // y = y / 2 \n    \t            y = y >> 1;  \n    \t            x = (x * x) % p;  \n    \t        } \n    \t        return res; \n    \t    }\n\t    static PrintWriter pw = new PrintWriter(System.out);\n//    \tstatic long A = 1000000000+7;\n//    \tstatic int[][][] dp;\n//    \tpublic static int f(String s,int n,char a,char b) {\n//    \t\tif(n==s.length()) {\n//    \t\t\treturn 0;\n//    \t\t}\n//    \t\tif(dp[a-'a'][b-'a'][n]!=-1)return dp[a-'a'][b-'a'][n];\n//    \t\tString v = \"\"+a+b+s.charAt(n);\n//    \t\tif(v.contains(\"one\") || v.contains(\"two\")) {\n//    \t\t\treturn dp[a-'a'][b-'a'][n]=1+f(s,n+1,a,b);\n//    \t\t}else if(!v.contains(\"t\")&&!v.contains(\"w\")&&!v.contains(\"o\")&&!v.contains(\"e\")&&!v.contains(\"n\"))\n//    \t\t\treturn dp[a-'a'][b-'a'][n]=f(s,n+1,b,s.charAt(n));\n//    \t\treturn dp[a-'a'][b-'a'][n] = Math.min(1+f(s,n+1,a,b), f(s,n+1,b,s.charAt(n)));\n//    \t}\n//    \tpublic static void trace(String s,int n,char a,char b) {\n//    \t\tif(n==s.length()) {\n//    \t\t\treturn ;\n//    \t\t}\n//    \t\t//System.out.println(\">>\"+a+\" \" + b);\n//    \t\tString v = \"\"+a+b+s.charAt(n);\n//    \t\tif(v.contains(\"one\") || v.contains(\"two\")) {\n//    \t\t\tpw.print((1+n)+\" \");\n//    \t\t\ttrace(s,n+1,a,b);\n//    \t\t\treturn;\n//    \t\t}else if(!v.contains(\"t\")&&!v.contains(\"w\")&&!v.contains(\"o\")&&!v.contains(\"e\")&&!v.contains(\"n\"))\n//    \t\t\tf(s,n+1,b,s.charAt(n));\n//    \t\tif(1+dp[a-'a'][b-'a'][n+1]<dp[b-'a'][s.charAt(n)-'a'][n+1]) {\n//    \t\t\tpw.print((n+1)+\" \");\n//    \t\t\ttrace(s,n+1,a,b);\n//    \t\t}else {\n//    \t\t\t//System.out.print(n+\" \");\n//    \t\t\ttrace(s,n+1,b,s.charAt(n));\n//    \t\t}    \t\t\n//    \t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint d = sc.nextInt();\n\t\tint[] arr = new int[m];\n\t\tfor(int i=0;i<m;i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tint x = 0;\n\t\tint k=0;\n\t\tQueue<Integer> res = new LinkedList<Integer>();\n\t\twhile(k<arr.length) {\n\t\t\tres.add(x+d);\n\t\t\tx+=d;\n\t\t\tx+=arr[k++]-1;\n\t\t}\n\t\tint[] result = new int[m];\n\t\tk = 0;\n\t\twhile(!res.isEmpty()) {\n\t\t\tresult[k++] = res.poll();\n\t\t}\n\t\t//System.out.println(Arrays.toString(result));\n\t\tk = 0;\n\t\tx = result[m-1];\n\t\tboolean t = true;\n\n\n\t\t\tfor(int i=0;i<result.length && result[m-1]+arr[m-1]>n;i++) {\n\t\t\t\tif(i==0) {\n\t\t\t\t\twhile(result[m-1]+arr[m-1]>n && result[0]>1) {\n\t\t\t\t\tfor(int j=0;j<result.length&&result[0]>1;j++) {\n\t\t\t\t\t\tresult[j]--;\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t}else {\n\t\t\t\t\t\twhile(result[m-1]+arr[m-1]>n &&result[i]-result[i-1]-arr[i-1]>0) {\n\t\t\t\t\t\tfor(int j=i;j<result.length && result[j]-result[j-1]-arr[j-1]>0;j++) {\n\t\t\t\t\t\t\tresult[j]--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t\n\t\t//System.out.println(Arrays.toString(result));\n\t\tk =0;\n\t\tif(arr[m-1]+result[m-1]+d-1<=n) {\n\t\t\tt = false;\n\t\t}\n\t\tint[] bridge = new int[n];\n\t\tfor(int i=0;i<result.length;i++) {\n\t\t\tfor(int j = result[i]-1;j<result[i]+arr[i]-1;j++) {\n\t\t\t\tif(j>=n) {\n\t\t\t\t\t//System.out.println(\"s\");\n\t\t\t\t\tt = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbridge[j] = i+1;\n\t\t\t}\n\t\t}\n\t\t//System.out.println(Arrays.toString(bridge));\n\t\tif(t) {\n\t\t\tpw.println(\"YES\");\n\t\tfor(int i=0;i<bridge.length;i++) {\n\t\t\tpw.print(bridge[i]+\" \");\n\t\t}\n\t\t}\n\t\telse {\n\t\t\tpw.println(\"NO\");\n\t\t}\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n}\n    class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n     \n        public Scanner(FileReader r) {\n            br = new BufferedReader(r);\n        }\n     \n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n     \n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n     \n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n     \n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n     \n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n     \n        public double nextDouble() throws IOException {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if (x.charAt(0) == '-') {\n                neg = true;\n                start++;\n            }\n            for (int i = start; i < x.length(); i++)\n                if (x.charAt(i) == '.') {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                } else {\n                    sb.append(x.charAt(i));\n                    if (dec)\n                        f *= 10;\n                }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg ? -1 : 1);\n        }\n     \n        public boolean ready() throws IOException {\n            return br.ready();\n            \n        }\n    }"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool isp[1000005];\nvoid sv() {\n  long long i, j;\n  memset(isp, true, sizeof(isp));\n  isp[1] = false;\n  for (i = 2; i * i < 1000005; i++) {\n    if (isp[i]) {\n      for (j = i * i; j < 1000005; j += i) isp[j] = false;\n    }\n  }\n}\nlong long powr(long long a, long long b) {\n  long long res = 1;\n  while (b) {\n    if (b & 1) res = (res * a) % 1000000007;\n    a = (a * a) % 1000000007;\n    b >>= 1;\n  }\n  return res;\n}\nbool eq(vector<long long> a, vector<long long> b) {\n  long long n1 = a.size(), n2 = b.size(), i;\n  if (n1 != n2) return false;\n  for (i = 0; i < n1; i++)\n    if (a[i] != b[i]) break;\n  return (i == n1);\n}\nvoid bta_de_yarr() {\n  long long n, m, d, i, j, c[1000005];\n  cin >> n >> m >> d;\n  d--;\n  long long sm = 0;\n  for (i = (1); i < (m + 1); i++) {\n    cin >> c[i];\n    sm += c[i];\n  }\n  long long rq = n - sm;\n  if (rq > d * (m + 1))\n    cout << \"NO\";\n  else {\n    long long k1, k2;\n    if (d) {\n      k1 = rq / d;\n      k2 = rq % d;\n    } else {\n      k1 = 0;\n      k2 = 0;\n    }\n    cout << \"YES\\n\";\n    long long i1, i2, i3;\n    long long lst = 1, fl = 0;\n    for (i1 = (1); i1 < (k1 + 1); i1++) {\n      for (j = (lst); j < (lst + d); j++) cout << \"0 \";\n      if (j == n + 1) {\n        fl = 1;\n        break;\n      }\n      for (j = (lst + d); j < (lst + d + c[i1]); j++) cout << i1 << \" \";\n      lst = lst + d + c[i1];\n    }\n    if (!fl) {\n      for (i2 = (lst); i2 < (lst + k2); i2++) cout << \"0 \";\n      lst = lst + k2;\n      for (i = (k1 + 1); i < (m + 1); i++) {\n        for (j = (lst); j < (lst + c[i]); j++) cout << i << \" \";\n        lst = lst + c[i];\n      }\n    }\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t;\n  t = 1;\n  while (t--) {\n    bta_de_yarr();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CPlatformsJumping solver = new CPlatformsJumping();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CPlatformsJumping {\n        public void solve(int testNumber, Scanner sc, PrintWriter pw) {\n            int n = sc.nextInt(), m = sc.nextInt(), d = sc.nextInt();\n            int[] arr = new int[m];\n            int sum = 0;\n            for (int i = 0; i < m; i++) {\n                sum += d;\n                arr[i] = sc.nextInt();\n                sum += arr[i] - 1;\n            }\n            if (sum <= n - d) {\n                pw.println(\"NO\");\n                return;\n            }\n            int[] suffix = new int[m];\n            suffix[m - 1] = arr[m - 1];\n            for (int i = m - 2; i >= 0; i--)\n                suffix[i] = arr[i] + suffix[i + 1];\n            int cur = 0;\n            int[] ans = new int[n];\n            int color = 0;\n            int i = 0;\n            for (; i < m; i++) {\n                cur = cur + d;\n                color++;\n                if (suffix[i] >= n - cur + 1)\n                    break;\n                for (int j = cur - 1; j < cur - 1 + arr[i]; j++)\n                    ans[j] = color;\n                cur += arr[i] - 1;\n            }\n            color = m;\n            int idx = n - 1;\n            for (int j = m - 1; j >= i; j--) {\n                while (arr[j]-- > 0)\n                    ans[idx--] = color;\n                color--;\n            }\n            pw.println(\"YES\");\n            for (int j = 0; j < ans.length; j++)\n                pw.print(ans[j] + \" \");\n        }\n\n    }\n\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(FileReader r) {\n            br = new BufferedReader(r);\n        }\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tstatic final int MOD_PRIME = 1000000007;\n\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTask solver = new Task();\n\n\t\tint i = 0;\n\t\tint t = 1;\n\t\t//t = in.nextInt();\n\t\tfor (; i < t; i++)\n\t\t\tsolver.solve(i, in, out);\n\n\t\tout.close();\n\t}\n\n\tstatic class Task {\n\t\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\t\t\tint n = in.nextInt();\n\t\t\tint m = in.nextInt();\n\t\t\tint d = in.nextInt();\n\t\t\tint sum = 0;\n\t\t\tArrayList<Integer> ar = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < m; i++) {\n\t\t\t\tar.add(in.nextInt());\n\t\t\t\tsum += ar.get(ar.size() - 1);\n\t\t\t}\n\t\t\t\n\t\t\tif(n > (m+1)*(d-1) + sum) {\n\t\t\t\tout.println(\"NO\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout.println(\"YES\");\n\t\t\t\tint jump = (n - sum)/(m+1);\n\t\t\t\tint rem = (n - sum) % (m+1);\n\t\t\t\tint ctr = 0;\n\t\t\t\tprintgap(!(rem == 0 || ctr >= rem), jump , out);\n\t\t\t\tif(!(rem == 0 || ctr >= rem)) ctr++;\n\t\t\t\tfor(int i = 0; i < ar.size(); i++) {\n\t\t\t\t\tfor(int j = 0; j < ar.get(i); j++) {\n\t\t\t\t\t\tout.print((i+1) + \" \");\n\t\t\t\t\t}\n\t\t\t\t\tprintgap(!(rem == 0 || ctr >= rem), jump , out);\n\t\t\t\t\tif(!(rem == 0 || ctr >= rem)) ctr++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvoid printgap(boolean incr , int jump , PrintWriter out) {\n\t\t\tif(incr) jump++;\n\t\t\tfor(int i = 0; i < jump; i++) out.print(0 + \" \");\n\t\t}\n\t}\n\n\t// template code\n\n\tstatic class InputReader {\n\t\tpublic BufferedReader reader;\n\t\tpublic StringTokenizer tokenizer;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\treader = new BufferedReader(new InputStreamReader(stream), 32768);\n\t\t\ttokenizer = null;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t}\n\n\tstatic long modexp(long a, long b, long p) {\n\t\t// returns a to the power b mod p by modular exponentiation\n\n\t\tlong res = 1;\n\t\tlong mult = a % p;\n\t\twhile (b > 0) {\n\t\t\tif (b % 2 == 1) {\n\t\t\t\tres = (res * mult) % p;\n\t\t\t}\n\t\t\tb /= 2;\n\t\t\tmult = (mult * mult) % p;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tstatic double log(double arg, double base) {\n\t\t// returns log of a base b, contains floating point errors, dont use for exact\n\t\t// calculations.\n\n\t\tif (base < 0 || base == 1) {\n\t\t\tthrow new ArithmeticException(\"base cant be 1 or negative\");\n\t\t}\n\t\tif (arg < 0) {\n\t\t\tthrow new ArithmeticException(\"log of negative number undefined\");\n\t\t}\n\t\treturn Math.log10(arg) / Math.log10(base);\n\t}\n\n\tstatic int gcd(int a, int b) {\n\t\tif (b == 0) {\n\t\t\treturn a;\n\t\t}\n\n\t\treturn gcd(b, a % b);\n\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (b == 0) {\n\t\t\treturn a;\n\t\t}\n\n\t\treturn gcd(b, a % b);\n\n\t}\n\n\t// scope for improvement\n\tstatic ArrayList<Integer> sieveOfEratosthenes(int n) {\n\t\tboolean[] check = new boolean[n + 1];\n\t\tArrayList<Integer> prime = new ArrayList<Integer>();\n\t\tfor (long i = 2; i <= n; i++) {\n\t\t\tif (!check[(int) i]) {\n\t\t\t\tprime.add((int) i);\n\t\t\t\tfor (long j = i * i; j <= n; j += i) {\n\t\t\t\t\tcheck[(int) j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn prime;\n\t}\n\n\tstatic int modInverse(int a, int n) {\n\t\t// returns inverse of a mod n by extended euclidean algorithm\n\t\tint t = 0;\n\t\tint newt = 1;\n\t\tint r = n;\n\t\tint newr = a;\n\t\tint quotient;\n\t\tint tempr, tempt;\n\t\twhile (newr != 0) {\n\t\t\tquotient = r / newr;\n\t\t\ttempt = newt;\n\t\t\ttempr = newr;\n\t\t\tnewr = r - quotient * tempr;\n\t\t\tnewt = t - quotient * tempt;\n\t\t\tt = tempt;\n\t\t\tr = tempr;\n\t\t}\n\t\tif (r > 1) {\n\t\t\tthrow new ArithmeticException(\"inverse of \" + a + \" mod \" + n + \" does not exist\");\n\t\t} else {\n\t\t\tif (t < 0) {\n\t\t\t\tt += n;\n\t\t\t}\n\t\t\treturn t;\n\t\t}\n\t}\n\n\tstatic int primeModInverse(int a, int n) {\n\t\t// returns inverse of a mod n by mod exponentiation, use only if n is prime\n\t\treturn (int) modexp(a, n - 2, n);\n\t}\n\n\tstatic void dfs(HashMap<Integer, ArrayList<Integer>> adj, Set<Integer> ans, Set<Integer> open,\n\t\t\tHashMap<String, Integer> edge, boolean[] vis, int i) {\n\t\tvis[i] = true;\n\t\topen.add(i);\n\t\tif (adj.get(i) != null) {\n\t\t\tfor (int k : adj.get(i)) {\n\t\t\t\tif (!vis[k]) {\n\t\t\t\t\tdfs(adj, ans, open, edge, vis, k);\n\t\t\t\t} else if (open.contains(k)) {\n\t\t\t\t\tans.add(edge.get(String.valueOf(i) + \" \" + String.valueOf(k)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\topen.remove(i);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\ndef main():\n    line_1 = list(map(int,input().split()))\n    line_2 = list(map(int,input().split()))\n\n    width_of_river = line_1[0]\n    number_of_platforms = line_1[1]\n    max_jump = line_1[2] - 1\n    platform_size_total = sum(line_2)\n    \n    max_length = max_jump * (number_of_platforms + 1) + platform_size_total\n    if max_length >= width_of_river:\n        total_jump_length_needed = width_of_river - platform_size_total\n\n        if max_jump > 0:\n            minimum_jumps_count = total_jump_length_needed // max_jump\n            smallest_jump = total_jump_length_needed % max_jump\n        else:\n            minimum_jumps_count = 0\n            smallest_jump = 0\n\n        if smallest_jump != 0:\n            minimum_jumps_count += 1\n\n        result_list = []\n        platform_counter = 0    \n        while (minimum_jumps_count > 0):\n            if (minimum_jumps_count == 1) and (smallest_jump != 0):\n                jumping_size = [0] * smallest_jump\n            else:\n                jumping_size = [0] * max_jump\n            \n            result_list.extend(jumping_size)\n            if platform_counter < number_of_platforms:\n                platform_needed = [platform_counter + 1] * line_2[platform_counter]\n                result_list.extend(platform_needed)\n                platform_counter += 1\n            minimum_jumps_count -= 1\n\n        while(platform_counter < number_of_platforms):\n            platform_needed =  [platform_counter+1] * line_2[platform_counter]\n            result_list.extend(platform_needed)\n            platform_counter += 1\n\n        result = \" \".join(str(number) for number in result_list)\n        print(\"YES\")        \n        print(result)\n    else:\n        print(\"NO\")\n    \nif __name__== \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "def ennd() :\n    print(\"NO\")\n    exit(0)\n\n\ndef add(res,step,inn) :\n    for i in range(step):\n        res.append(inn)\n\n\nn, m, d = map(int, input().split());\nplatform = [int(i) for i in input().split()]\nshift = n\nfor item in platform:\n    shift -= item\nif d != 1 :\n    count = int(shift / (d - 1))\nelif shift != 0 :\n    ennd()\nelse :\n    count = 0\nif shift > (m+1)*(d-1) :\n    ennd()\nres = []\npos = 0\nstep = d-1\nwhile (shift > 0) and (pos < m) :\n    add(res,min(step, shift),0)\n    add(res,platform[pos],pos+1)\n    pos += 1;\n    shift -= step\n    \nfor i in range(m) :\n    if pos > i :\n        continue\n    add(res,platform[i],i+1)\n\n\nfor i in range(shift) :\n    res.append(0)\nprint(\"YES\")\nprint(*res, sep = \" \")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst ll INF = 1e9 + 17;\nvoid self_max(ll &a, ll b) { a = max(a, b); }\nvoid self_min(ll &a, ll b) { a = min(a, b); }\nint n, m, d, s;\nqueue<int> Q;\nbool ok = true;\nint v[1001];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n >> m >> d;\n  for (int x, i = 1; i <= m; ++i) {\n    cin >> x;\n    s += x;\n    Q.push(x);\n  }\n  int ini = 0;\n  int nr = 1;\n  for (int i = 1; i <= n && ok; ++i) {\n    if (ini + d == i && s < n - i + 1) {\n      if (!Q.empty()) {\n        int ceva = Q.front();\n        s -= ceva;\n        for (int j = i; j <= i + ceva - 1; ++j) v[j] = nr;\n        ini = i + ceva - 1;\n        i = i + ceva - 2;\n        Q.pop();\n        nr++;\n      } else\n        ok = false;\n    } else {\n      if (s == n - i + 1) {\n        int unde = i;\n        while (!Q.empty()) {\n          int ceva = Q.front();\n          Q.pop();\n          for (int j = unde; j <= unde + ceva - 1; ++j) v[j] = nr;\n          unde += ceva;\n          nr++;\n        }\n        i = n;\n      }\n    }\n  }\n  if (ok) {\n    cout << \"YES\\n\";\n    for (int i = 1; i <= n; ++i) cout << v[i] << ' ';\n  } else\n    cout << \"NO\";\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int,input().split())\nar = list(map(int,input().split()))\nar.insert(0,0)\nans = []\nm += 1\ni = 1\nc = 0\nwhile i < m:\n\tc += 1\n\tif c < d:\n\t\tans.append('0')\n\telse:\n\t\tj = 0\n\t\twhile j < ar[i]:\n\t\t\tans.append(str(i))\n\t\t\tj += 1\n\t\tc = 0\n\t\ti += 1\ni = 1\nwhile i < d:\n\tans.append('0')\n\ti += 1\n\nif n <= len(ans):\n\tprint(\"YES\")\n\tc = len(ans)\n\ti = 0\n\twhile i < len(ans):\n\t\tif ans[i] == '0' and c > n:\n\t\t\tc -= 1\n\t\telse:\n\t\t\tprint(ans[i],end=' ')\n\t\ti += 1\n\tprint()\nelse:\n\tprint(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e3 + 5;\nint n, m, d;\nint l[maxn], ans[maxn];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &d);\n  int sum = 0, remain;\n  for (register int i = 1; i <= m; ++i) {\n    scanf(\"%d\", &l[i]);\n    sum += l[i];\n  }\n  remain = n - sum;\n  if (sum == 0 || remain > (d - 1) * (m + 1)) {\n    printf(\"NO\\n\");\n    return 0;\n  }\n  int pos = 0;\n  int i = 1;\n  while (pos < n) {\n    if (remain < d - 1) {\n      pos += remain + 1, remain = 0;\n      for (register int j = 0; j <= l[i] - 1; ++j) ans[pos + j] = i;\n      pos += l[i] - 1, i++;\n    } else {\n      pos += d, remain -= d - 1;\n      for (register int j = 0; j <= l[i] - 1; ++j) ans[pos + j] = i;\n      pos += l[i] - 1, i++;\n    }\n  }\n  printf(\"YES\\n\");\n  for (register int i = 1; i <= n; ++i) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int,input().split())\nc = list(map(int,input().split()))\nsc = sum(c)\nif sc + (len(c)+ 1) * (d - 1) < n:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    ko = n - sc\n    for i in range(m):\n        if ko != 0:\n            if ko >= d - 1:\n                print(\"0 \" * (d -1 ), end = \"\")\n                ko -= d -1\n            else:\n                print(\"0 \" * (ko ), end = \"\")\n                ko = 0\n        print((str(i + 1) + \" \") * c[i], end = \"\")\n    print(\"0 \" * (ko ), end = \"\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int INF = 1LL << 60;\nconst int MAX_N = 1000005;\nvector<vector<int> > adj;\nvector<bool> vis;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int t = 1;\n  while (t--) {\n    int n, m, d;\n    cin >> n >> m >> d;\n    vector<int> a(m);\n    long long int sum = 0;\n    for (int i = 0; i < m; i++) cin >> a[i], sum += a[i];\n    long long int gp = n - sum, rm = gp % (m + 1);\n    gp = gp / (m + 1);\n    vector<int> b(m + 1);\n    if (sum + (m + 1) * (d - 1) < n) return cout << \"NO\\n\", 0;\n    for (int i = 0; i < m + 1; i++, rm--) b[i] = gp + (rm > 0);\n    vector<int> ans(n);\n    int c = 0;\n    for (int i = 0; i < m; i++) {\n      for (int j = 0; j < b[i]; j++) ans[c++] = 0;\n      for (int j = 0; j < a[i]; j++) ans[c++] = i + 1;\n    }\n    for (int j = 0; j < b[m]; j++) ans[c++] = 0;\n    cout << \"YES\\n\";\n    for (auto i : ans) cout << i << \" \";\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def rfind(x, c):\n    for i in range(len(x) - 1, -1, -1):\n        if x[i] == c:\n            return i\n    return -1\n\n\nn, m, d = [int(x) for x in input().split()]\nplat = [int(p) for p in input().split()]\npattern = []\nidx = 1\nfor i in plat:\n    pattern += [idx for _ in range(i)]\n    idx += 1\nidx = 1\nx = 1\nwhile len(pattern) < n and x < d:\n    pattern = [0] + pattern\n    x += 1\nwhile len(pattern) < n and idx <= m:\n    x = 1\n    while x < d and len(pattern) < n:\n        pattern.insert(rfind(pattern, idx)+1, 0)\n        x += 1\n    idx += 1\nif len(pattern) == n and pattern[-d:].count(0) != len(pattern[-d:]):\n    print('YES')\n    print(*pattern)\nelse:\n    print('NO')\n\n"
        },
        {
            "language": 4,
            "solution": "//package round598;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class C {\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\t\n\tvoid solve()\n\t{\n\t\tint n = ni();\n\t\tint m = ni();\n\t\tint D = ni();\n\t\tint[] a = na(m);\n\t\tint[] sups = new int[m];\n\t\tint u = n+1;\n\t\tfor(int i = m-1;i >= 0;i--){\n\t\t\tu -= a[i];\n\t\t\tsups[i] = u;\n\t\t}\n\t\t\n\t\tint[] ret = new int[n+2];\n\t\tint cur = 0;\n\t\tfor(int i = 0;i < m;i++){\n\t\t\tcur = Math.min(cur+D, sups[i]);\n\t\t\tfor(int j = 0;j < a[i];j++){\n\t\t\t\tret[cur+j] = i+1;\n\t\t\t}\n\t\t\tcur += a[i]-1;\n\t\t}\n\t\tif(cur+D <= n){\n\t\t\tout.println(\"NO\");\n\t\t}else{\n\t\t\tout.println(\"YES\");\n\t\t\tfor(int i = 1;i <= n;i++){\n\t\t\t\tout.print(ret[i] + \" \");\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t}\n\t\n\tvoid run() throws Exception\n\t{\n\t\tis = oj ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\ttr(System.currentTimeMillis()-s+\"ms\");\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception { new C().run(); }\n\t\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n\tprivate int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate double nd() { return Double.parseDouble(ns()); }\n\tprivate char nc() { return (char)skip(); }\n\t\n\tprivate String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){ // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\tprivate void tr(Object... o) { if(!oj)System.out.println(Arrays.deepToString(o)); }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n  void solve(InputReader in, PrintWriter out) {\n    int n = in.nextInt();\n    int m = in.nextInt();\n    int d = in.nextInt();\n\n    int[] arr = new int[m];\n    for (int i = 0; i < m; ++i) {\n      arr[i] = in.nextInt();\n    }\n\n    int current = 0;\n    for (int i = 0; i < m; ++i) {\n      current += d;\n      current += arr[i] - 1;\n    } current += d;\n\n    if (current < n + 1) {\n      out.println(\"NO\");\n    } else {\n      out.println(\"YES\");\n      \n      int[] ans = new int[n];\n      int[] str = new int[m];\n      int count = current - n - 1;\n      current = 0;\n      for (int i = 0; i < m; ++i) {\n        int gain = Math.min(d - 1, count);\n        count -= gain;\n        str[i] = current + d - gain - 1;\n        current = str[i] + arr[i];\n      }\n\n      for (int i = 0; i < m; ++i) {\n        System.err.println(i + \" \" + str[i] + \" \" + arr[i]);\n        for (int j = str[i]; j < str[i] + arr[i]; ++j) {\n          ans[j] = i + 1;\n        } \n      }\n    \n\n      for (int i = 0; i < n; ++i) {\n        out.print(ans[i] + \" \");\n      } out.println();\n    }\n\n\n  }\n\n  public static void main(String[] args) throws Exception {\n    InputReader in = new InputReader(System.in);\n    PrintWriter out = new PrintWriter(System.out);\n    Main solver = new Main();\n    solver.solve(in, out);\n    out.close();\n  }\n\n  static class InputReader {\n    BufferedReader in;\n    StringTokenizer st;\n\n    public InputReader(InputStream is) {\n      in = new BufferedReader(new InputStreamReader(is));\n    }\n\n    public String next() {\n      try {\n        while (st == null || !st.hasMoreTokens()) {\n          st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    public long nextLong() {\n      return Long.parseLong(next());\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.text.*;\nimport java.util.*;\nimport java.math.*;\npublic class template {\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew template().run();\n\t}\n\tpublic void run() throws Exception {\n\t\tFastScanner f = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = f.nextInt(), m = f.nextInt(), d = f.nextInt()-1;\n\t\tint[] arr= new int[m];\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < m; i++) sum += arr[i] = f.nextInt();\n\t\tif(sum + (m+1)*d >= n) {\n\t\t\tint[] ans = new int[n];\n\t\t\tint ind = 0;\n\t\t\tfor(int i = 0; i < m; i++) {\n\t\t\t\tint cnt = 0;\n\t\t\t\tfor(int asdf = 0; asdf <= d; asdf++) \n\t\t\t\t\tif(n-ind-asdf >= sum && n-ind-asdf <= sum + (m-i)*d) {\n\t\t\t\t\t\tcnt = asdf;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tind += cnt;\n\t\t\t\tfor(int a = 0; a < arr[i]; a++) \n\t\t\t\t\tans[ind++] = i+1;\n\t\t\t\tsum -= arr[i];\n\t\t\t}\n\t\t\tout.println(\"YES\");\n\t\t\tfor(int i : ans) out.print(i + \" \");\n\t\t} else out.println(\"NO\");\n///\n\t\tout.flush(); \n\t}\n///\n    static class FastScanner {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        public FastScanner() {\n            reader = new BufferedReader(new InputStreamReader(System.in), 32768);\n            tokenizer = null;\n        }\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n        \treturn Long.parseLong(next());\n        }\n        public double nextDouble() {\n        \treturn Double.parseDouble(next());\n        }\n        public String nextLine() {\n        \ttry {\n        \t\treturn reader.readLine();\n        \t} catch(IOException e) {\n        \t\tthrow new RuntimeException(e);\n        \t}\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int M = 1010;\nint a[M], len[M];\nint main() {\n  int n, m, d, sum = 0;\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (int i = 1; i <= m; i++) scanf(\"%d\", &len[i]), sum += len[i];\n  if ((d - 1) * (m + 1) < n - sum)\n    printf(\"NO\\n\");\n  else {\n    int color = 1, num = n - sum, cnt = 1, ans = 0;\n    for (int i = 1; i <= n; i++) a[i] = -1;\n    for (int i = 1; i <= n && num; i++) {\n      a[i] = 0;\n      num--;\n      ans++;\n      if (ans % (d - 1) == 0) i += len[cnt++];\n    }\n    for (int i = 1; i <= n; i++) {\n      if (a[i] == 0)\n        continue;\n      else {\n        a[i] = color;\n        len[color]--;\n        while (len[color]) {\n          i++;\n          len[color]--;\n          a[i] = color;\n        }\n        color++;\n      }\n    }\n    printf(\"YES\\n\");\n    for (int i = 1; i <= n; i++) printf(\"%d \", a[i]);\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \n \n \npublic class Main {\n\t\n\tstatic InputReader in = new InputReader(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\t\n\tstatic int oo = (int)1e9;\n\tstatic int mod = 1_000_000_007;\n\t\n\tstatic int[] di = {1, 0, 0, -1};\n\tstatic int[] dj = {0, -1, 1, 0};\n\t\n\tstatic int M = 200005;\n\tstatic double EPS = 1e-5;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint n = in.nextInt();\n\t\tint m = in.nextInt();\n\t\tint d = in.nextInt();\n\t\tint[] a = in.nextIntArray(m);\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < m; ++i)\n\t\t\tsum += a[i];\n\t\tint water = n - sum;\n\t\tif(water > (d-1) * (m + 1)) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint[] ans = new int[n];\n\t\tint k = 0, b = 0;\n\t\tfor(int i = 0; i < m; ++i) {\n\t\t\tint t = Math.min(d - 1, water);\n\t\t\tfor(k = k + t, b = k + a[i] - 1; k <= b; ++k) {\n\t\t\t\tans[k] = i + 1;\n\t\t\t}\n\t\t\twater -= t;\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t\tfor(int x : ans)\n\t\t\tSystem.out.print(x + \" \");\n\t\t\n\t\tout.close();\n\t}\n\t\n\tstatic boolean inside(int i, int j, int n, int m) {\n\t\treturn i >= 0 && i < n && j >= 0 && j < m;\n\t}\n\t\n\t\n\tstatic long pow(long a, long n, long mod) {\n\t\tif(n == 0)\n\t\t\treturn 1;\n\t\tif(n % 2 == 1)\n\t\t\treturn a * pow(a, n-1, mod) % mod;\n\t\tlong x = pow(a, n / 2, mod);\n\t\treturn x * x % mod;\n\t}\n\t\n\t\n\tstatic class SegmentTree {\n\t\tint n;\n\t\tint[] a;\n\t\tint[] seg;\n\t\tint DEFAULT_VALUE = 0;\n\t\t\n\t\tpublic SegmentTree(int[] a, int n) {\n\t\t\tsuper();\n\t\t\tthis.a = a;\n\t\t\tthis.n = n;\n\t\t\tseg = new int[n * 4 + 1];\n\t\t\tbuild(1, 0, n-1);\n\t\t}\n\t\t\n\t\tprivate int build(int node, int i, int j) {\n\t\t\tif(i == j) {\n\t\t\t\treturn seg[node] = a[i];\n\t\t\t}\n\t\t\tint first = build(node * 2, i, (i+j) / 2);\n\t\t\tint second = build(node * 2 + 1, (i+j) / 2 + 1, j);\n\t\t\treturn seg[node] = combine(first, second);\n\t\t}\n\t\t\n\t\tint update(int k, char value) {\n\t\t\treturn update(1, 0, n-1, k, value);\n\t\t}\n\t\t\n\t\tprivate int update(int node, int i, int j, int k, char value) {\n\t\t\tif(k < i || k > j)\n\t\t\t\treturn seg[node];\n\t\t\tif(i == j && j == k) {\n\t\t\t\ta[k] = value;\n\t\t\t\treturn seg[node] = value;\n\t\t\t}\n\t\t\tint m = (i + j) / 2;\n\t\t\tint first = update(node * 2, i, m, k, value);\n\t\t\tint second = update(node * 2 + 1, m + 1, j, k, value);\n\t\t\treturn seg[node] = combine(first, second);\n\t\t}\n\t\t\n\t\tint query(int l, int r) {\n\t\t\treturn query(1, 0, n-1, l, r);\n\t\t}\n\t\t\n\t\tprivate int query(int node, int i, int j, int l, int r) {\n\t\t\tif(l <= i && j <= r)\n\t\t\t\treturn seg[node];\n\t\t\tif(j < l || i > r)\n\t\t\t\treturn DEFAULT_VALUE;\n\t\t\tint m = (i + j) / 2;\n\t\t\tint first = query(node * 2, i, m, l, r);\n\t\t\tint second = query(node * 2 + 1, m+1, j, l, r);\n\t\t\treturn combine(first, second);\n\t\t}\n \n\t\tprivate int combine(int a, int b) {\n\t\t\treturn Math.max(a, b);\n\t\t}\n\t}\n\t\n\tstatic class DisjointSet {\n\t\tint n;\n\t\tint[] g;\n\t\tint[] h;\n\t\tpublic DisjointSet(int n) {\n\t\t\tsuper();\n\t\t\tthis.n = n;\n\t\t\tg = new int[n];\n\t\t\th = new int[n];\n\t\t\tfor(int i = 0; i < n; ++i) {\n\t\t\t\tg[i] = i;\n\t\t\t\th[i] = 1;\n\t\t\t}\n\t\t}\n\t\tint find(int x) {\n\t\t\tif(g[x] == x)\n\t\t\t\treturn x;\n\t\t\treturn g[x] = find(g[x]);\n\t\t}\n\t\tvoid union(int x, int y) {\n\t\t\tx = find(x); y = find(y);\n\t\t\tif(x == y)\n\t\t\t\treturn;\n\t\t\tif(h[x] >= h[y]) {\n\t\t\t\tg[y] = x;\n\t\t\t\tif(h[x] == h[y])\n\t\t\t\t\th[x]++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tg[x] = y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tstatic int[] getPi(char[] a) {\n\t\tint m = a.length;\n\t\tint j = 0;\n\t\tint[] pi = new int[m];\n\t\tfor(int i = 1; i < m; ++i) {\n\t\t\twhile(j > 0 && a[i] != a[j])\n\t\t\t\tj = pi[j-1];\n\t\t\tif(a[i] == a[j]) {\n\t\t\t\tpi[i] = j + 1;\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn pi;\n\t}\n\t\n\tstatic long lcm(long a, long b) {\n\t\treturn a * b / gcd(a, b);\n\t}\n\t\n\tstatic boolean nextPermutation(int[] a) {\n\t\tfor(int i = a.length - 2; i >= 0; --i) {\n\t\t\tif(a[i] < a[i+1]) {\n\t\t\t\tfor(int j = a.length - 1; ; --j) {\n\t\t\t\t\tif(a[i] < a[j]) {\n\t\t\t\t\t\tint t = a[i];\n\t\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\t\ta[j] = t;\n\t\t\t\t\t\tfor(i++, j = a.length - 1; i < j; ++i, --j) {\n\t\t\t\t\t\t\tt = a[i];\n\t\t\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\t\t\ta[j] = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tstatic void shuffle(Object[] a) {\n\t\tRandom r = new Random();\n\t\tfor(int i = a.length - 1; i > 0; --i) {\n\t\t\tint si = r.nextInt(i);\n\t\t\tObject t = a[si];\n\t\t\ta[si] = a[i];\n\t\t\ta[i] = t;\n\t\t}\n\t}\n\t\n\tstatic void shuffle(int[] a) {\n\t\tRandom r = new Random();\n\t\tfor(int i = a.length - 1; i > 0; --i) {\n\t\t\tint si = r.nextInt(i);\n\t\t\tint t = a[si];\n\t\t\ta[si] = a[i];\n\t\t\ta[i] = t;\n\t\t}\n\t}\n\t\n\tstatic void shuffle(long[] a) {\n\t\tRandom r = new Random();\n\t\tfor(int i = a.length - 1; i > 0; --i) {\n\t\t\tint si = r.nextInt(i);\n\t\t\tlong t = a[si];\n\t\t\ta[si] = a[i];\n\t\t\ta[i] = t;\n\t\t}\n\t}\n\t\n\tstatic int lower_bound(int[] a, int n, int k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\tstatic int lower_bound(long[] a, int n, long k) {\n\t\tint s = 0;\n\t\tint e = n;\n\t\tint m;\n\t\twhile (e - s > 0) {\n\t\t\tm = (s + e) / 2;\n\t\t\tif (a[m] < k)\n\t\t\t\ts = m + 1;\n\t\t\telse\n\t\t\t\te = m;\n\t\t}\n\t\treturn e;\n\t}\n\t\n\tstatic int gcd(int a, int b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\tstatic long gcd(long a, long b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\t\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint first, second;\n \n\t\tpublic Pair(int first, int second) {\n\t\t\tsuper();\n\t\t\tthis.first = first;\n\t\t\tthis.second = second;\n\t\t}\n \n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn this.first != o.first ? this.first - o.first : this.second - o.second;\n\t\t}\n\t\t\n//\t\t@Override\n//\t\tpublic int compareTo(Pair o) {\n//\t\t\treturn this.first != o.first ? o.first - this.first : o.second - this.second;\n//\t\t}\n \n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + first;\n\t\t\tresult = prime * result + second;\n\t\t\treturn result;\n\t\t}\n \n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tPair other = (Pair) obj;\n\t\t\tif (first != other.first)\n\t\t\t\treturn false;\n\t\t\tif (second != other.second)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t}\n}\n \n \n \nclass InputReader {\n \n\tprivate final InputStream stream;\n\tprivate final byte[] buf = new byte[8192];\n\tprivate int curChar, snumChars;\n \n\tpublic InputReader(InputStream st) {\n\t\tthis.stream = st;\n\t}\n \n\tpublic int read() {\n\t\tif (snumChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= snumChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (snumChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n \n\tpublic int nextInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n \n\tpublic long nextLong() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n \n\tpublic int[] nextIntArray(int n) {\n\t\tint a[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt();\n\t\t}\n\t\treturn a;\n\t}\n \n\tpublic String readString() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = read();\n\t\t}\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n \n\tpublic String nextLine() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isEndOfLine(c));\n\t\treturn res.toString();\n\t}\n \n\tpublic boolean isSpaceChar(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n \n\tprivate boolean isEndOfLine(int c) {\n\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t}\n \n}"
        },
        {
            "language": 3,
            "solution": "n, m, d = list (map (int, input ().split ()))\nc = [0] + list (map (int, input ().split ()))\nop = [0 for i in range (n)]\nloc = -1\nrem = sum (c)\nfor i in range (1, m + 1) :\n    loc += min (d, n - loc - rem)\n    rem -= c[i]\n    for j in range (loc, min (loc + c[i], n)) :\n        op[j] = i\n    loc += c[i] - 1\n    if (loc >= n):\n        break\nprint (\"NO\" if loc + d < n else \"YES\\n\" + ' '.join (map (str, op)))\n  \t\t\t  \t \t\t\t\t \t \t\t  \t   \t\t\t\t\t \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long n, m, d, c, suma = 0;\n  cin >> n >> m >> d;\n  vector<long long> v;\n  for (long long i = 0; i < m; i++) {\n    cin >> c;\n    suma += c;\n    v.push_back(-c);\n  }\n  long long pos = -1;\n  vector<long long> answer(n, 0);\n  for (long long i = 0; i < m; i++) {\n    long long aux = n - suma;\n    if (pos + d < aux) {\n      pos += d;\n      answer[pos] = i + 1;\n      for (long long j = pos + 1; j < pos - v[i]; j++) {\n        answer[j] = i + 1;\n      }\n      pos += -v[i] - 1;\n      suma += v[i];\n    } else {\n      pos = aux;\n      answer[pos] = i + 1;\n      for (long long j = pos + 1; j < pos - v[i]; j++) {\n        answer[j] = i + 1;\n      }\n      pos += -v[i] - 1;\n      suma += v[i];\n    }\n  }\n  if (pos + d >= n) {\n    cout << \"YES\\n\";\n    for (long long i = 0; i < n; i++) {\n      cout << answer[i] << \" \";\n    }\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "// package Div3_598;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class ProblemC {\n    public static void main(String[] args)throws IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String line[]=br.readLine().split(\" \");\n        int n=Integer.parseInt(line[0]);\n        int m=Integer.parseInt(line[1]);\n        int d=Integer.parseInt(line[2]);\n        int c[]=new int[m];\n        int sum=0;\n        String line2[]=br.readLine().split(\" \");\n        for(int i=0;i<m;i++){\n            c[i]=Integer.parseInt(line2[i]);\n            sum+=c[i];\n        }\n        int to_delete=n-sum;\n        int curr=0;\n//        System.out.println(to_delete+\" \"+d);\n        int ans[]=new int[n+1];\n        for(int i=0;i<m;i++){\n//            System.out.println(to_delete);\n            if(to_delete>=d-1){\n//                System.out.println(\"X\");\n                for(int j=curr+d;j<c[i]+curr+d;j++){\n                    ans[j]=i+1;\n//                    System.out.println(ans[j]+\" \"+j);\n                }\n                to_delete-=(d-1);\n                curr=c[i]+curr+d-1;\n            }\n            else if(to_delete>0){\n//                System.out.println(\"Y\");\n                for(int j=curr+to_delete+1;j<c[i]+curr+to_delete+1;j++){\n                    ans[j]=i+1;\n//                    System.out.println(ans[j]+\" \"+j);\n                }\n                curr=curr+to_delete+c[i];\n                to_delete=0;\n\n            }\n            else if(to_delete==0){\n//                System.out.println(\"Z\");\n                for(int j=curr+1;j<c[i]+curr+1;j++){\n                    ans[j]=i+1;\n//                    System.out.println(ans[j]+\" \"+j);\n\n                }\n                curr=curr+c[i];\n            }\n        }\n        if(to_delete>=d){\n            System.out.println(\"NO\");\n        }\n        else{\n            System.out.println(\"YES\");\n            StringBuilder str=new StringBuilder();\n            for(int i=1;i<=n;i++){\n                str.append(ans[i]+\" \");\n            }\n            System.out.println(str.toString());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int, input().split())\nl = list(map(int,input().split()))\ns,k,c = [],0,0\nfor i in range(m):\n    c+=l[i]\nif c+(m+1)*(d-1)>=n:\n    print(\"YES\")\nelse:\n    print('NO')\n    exit()\nc = n-c\nt=d\nfor i in range(n):\n    if c>0 and t>1:\n        s.append(0)\n        c-=1\n        t-=1\n    elif l[k]>0:\n        s.append(k+1)\n        l[k]-=1\n    if k<m and l[k]==0:\n        t=d\n        k+=1\n    if c==0:\n        break\nwhile k<m:\n    while l[k]>0:\n        s.append(k+1)\n        l[k]-=1\n    k+=1\nprint(*s)"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Vector;\n\npublic class Snippets{\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        int m = input.nextInt();\n        int d = input.nextInt();\n        Vector<Integer> v = new Vector<Integer>();\n        for(int i=0;i<m;++i)\n            v.add(input.nextInt());\n        int[] p = new int[m];\n        int s = 0;\n        for(int j=1;j<m;++j)\n            s+=v.get(j);\n        for(int i=0,pos=-1;i<m;++i){\n            p[i]=Math.min(pos+d, n-s-v.get(i));\n            pos=p[i] + v.get(i)-1;\n            if(s>0)\n                s-=v.get(i+1);\n        }\n        if(n-p[m-1]-v.get(m-1)+1>d){\n            System.out.print(\"NO\");\n            System.exit(0);\n        }\n        System.out.println(\"YES\");\n        for(int i=0,j=0;i<n;){\n            if(i==p[j]){\n                while(i<p[j]+v.get(j)){\n                    System.out.print(j+1 + \" \");\n                    ++i;\n                }\n                if(j<m-1)\n                    ++j;\n            }\n            else{\n                System.out.print(0 + \" \");\n                ++i;\n            }\n        }\n        input.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\narr=list(map(int,input().split()))\nif((m+1)*(d-1)>=(n-sum(arr))):\n    print(\"YES\")\n    water=n-sum(arr)\n    ans=[]\n    co=0\n    for i in arr:\n        co+=1\n        if(water>d-1):\n            jump=d-1\n            water-=jump\n\n        else:\n            jump=water\n            water=0\n        \n\n\n        for j in range(jump):\n            ans+=[0]\n        for j in range(i):\n            ans+=[co]\n    for i in range(water):\n        ans+=[0]\n    print(*ans)\nelse:\n    print(\"NO\")\n        \n        \n        "
        },
        {
            "language": 3,
            "solution": "# import math\n# from sys import stdin, stdout \ndef main():\n\tn,m,d = map(int,input().split())\n\ta = list(map(int,input().split()))\n\tadd = sum(a)\n\tif add>n:\n\t\tprint(\"NO\")\n\t\treturn\n\telse:\n\t\ti = 0 \n\t\tj = 0\n\t\tans = [0 for _ in range(n)]\n\t\tcnt = n-add\n\t\twhile i<n and j<m:\n\t\t\ttemp = d-1\n\t\t\ti += min(cnt,temp)\n\t\t\tcnt -= min(cnt,temp)\n\t\t\ttimes = a[j]\n\t\t\twhile times:\n\t\t\t\tans[i]=j+1\n\t\t\t\ti+=1\n\t\t\t\ttimes-=1\n\t\t\tj+=1\n\t\tindex = -1\n\t\twhile index<n:\n\t\t\t# print(index)\n\t\t\tif index+1>=n or ans[index+1]>=1:\n\t\t\t\tindex+=1\n\t\t\telif index+d>=n or ans[index+d]>0:\n\t\t\t\tindex+=d\n\t\t\telse:\n\t\t\t\tbreak\n\t\t# print(index,ans)\n\t\tif index>=n:\n\t\t\tprint(\"YES\")\n\t\t\tfor i in range(n):\n\t\t\t\tprint(ans[i],end=' ')\n\t\telse:\n\t\t\t# print(\"here\")\n\t\t\tprint(\"NO\")\n\n\n\n\nmain()\n\n\n# t = int(input())\n# while t:\n# \tmain()\n# \tt-=1"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Map;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\n\npublic class samara {\n\n\tpublic static void main(String []args) throws IOException {\n\t\tPrintWriter pw =new PrintWriter(System.out);\n\t    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t    \tStringTokenizer st =new StringTokenizer(br.readLine());\n\t    \tint n= Integer.parseInt(st.nextToken());int m= Integer.parseInt(st.nextToken());int d= Integer.parseInt(st.nextToken());\n\t    \tint c[]=new int[m];\n\t    \tst =new StringTokenizer(br.readLine());int sum=0;\n\t    \tfor(int i=0;i<m;i++) {\n\t    \t\tc[i]=Integer.parseInt(st.nextToken());sum+=c[i];\n\t    \t}int res[]=new int[n];int diff=n;sum+=m*(d-1);;int e=0;boolean f=false;int j=m;\n\t        for(int i=0;i<m;i++) {\n\t        \tsum-=(c[i]+(d-1));\n\t        \tdiff=diff-c[i];\n\t        \tif(sum<=diff) {\n\t        \t\tint co=0;\n\t        \t\twhile(co<d-1&&sum<diff) {\n\t        \t\t\tdiff-=1;co++;res[e++]=0;\n\t        \t\t}co =c[i];while(co-->0)res[e++]=i+1;\n\t        \t\tif(sum==diff||(i==m-1&&diff<=d-1)) {f=true;j=i;break;};\n\t        \t}else {\n\t        \t\tint s=0;while(s++<c[i])res[e++]=i+1;\n\t        \t}\n\t        \t\n\t        }\n\t        for(int i=j+1;i<m;i++) {\n\t        \tint s=d-1;\n\t        \twhile (s-->0)res[e++]=0;\n\t        \ts=c[i];\n\t        \twhile(s-->0)res[e++]=i+1;\n\t        }\n\t  \t    \tif(f||(m==1)&&(d-1)*2+c[0]>=n) {\n\t    \t\tpw.println(\"YES\");\n\t    \t\tfor(int i=0;i<n;i++)pw.print(res[i]+\" \");\n\t    \t}else pw.println(\"NO\");\n\t    \tpw.flush();\n}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int i, j, k, n, m, p, q, t, ans = 0, sum = 0, ct = 0, flag = 0;\n  long long int d;\n  cin >> n >> m >> d;\n  std::vector<long long int> v(m);\n  std::vector<long long int> v1(n);\n  for (i = 0; i < m; i++) {\n    cin >> v[i];\n    sum += v[i];\n  }\n  ct = 0;\n  flag = 1;\n  for (i = -1; i < n;) {\n    if ((n - i) - (sum) + 1 <= d) {\n      flag = 2;\n      break;\n    }\n    i += d;\n    if (i >= n) {\n      flag = 1;\n      break;\n    }\n    if (ct == v.size()) {\n      flag = 0;\n      break;\n    }\n    for (j = i; j < i + v[ct]; j++) {\n      v1[j] = ct + 1;\n    }\n    sum -= v[ct];\n    ct++;\n    i = j - 1;\n  }\n  if (flag == 2) {\n    cout << \"YES\\n\";\n    long long int lp = n - 1;\n    for (i = v.size() - 1; i >= ct; i--) {\n      for (j = lp; j > lp - v[i]; j--) {\n        v1[j] = i + 1;\n      }\n      lp = j;\n    }\n    for (i = 0; i < n; i++) {\n      cout << v1[i] << \" \";\n    }\n  } else if (flag == 0)\n    cout << \"NO\";\n  else {\n    cout << \"YES\\n\";\n    for (i = 0; i < n; i++) {\n      cout << v1[i] << \" \";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1e9;\nconst int maxn = 3e5 + 7;\nconst int mod = 1e9 + 7;\nconst int N = 3e5 + 7;\nint main() {\n  ios::sync_with_stdio(false);\n  ;\n  int n, m, d;\n  int a_i = 0;\n  cin >> n >> m >> d;\n  vector<int> a(m + 1), ans;\n  int sum = n;\n  for (int i = 0; i < m; i++) cin >> a[i], sum -= a[i];\n  while (a_i < m) {\n    for (int i = 0; sum > 0 && i < d - 1; i++) ans.push_back(0), sum--;\n    for (int i = 0; i < a[a_i]; i++) ans.push_back(a_i + 1);\n    a_i++;\n  }\n  int x = 0;\n  for (int i = 0; sum > 0; i++) ans.push_back(0), sum--, x++;\n  if (x >= d) {\n    cout << \"NO\\n\";\n  } else {\n    cout << \"YES\\n\";\n    for (int i : ans) cout << i << \" \";\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\timport java.util.*;\n\t\n\timport javax.imageio.ImageIO;\n\timport javax.xml.bind.DatatypeConverter;\n\t\n\timport java.awt.image.BufferedImage;\n\timport java.io.*;\n\timport java.math.BigInteger;\n\tpublic class template {\n\t\tpublic static void main(String[] args) throws Exception {\n\t\t\tFastScanner sc = new FastScanner();\n\t\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\t\tint n = sc.nextInt();\n\t\t\tint p = sc.nextInt();\n\t\t\tint j = sc.nextInt();\n\t\t\tint[] plat = new int[p];\n\t\t\tfor(int i=0;i<p;i++){\n\t\t\t\tplat[i]=sc.nextInt();\n\t\t\t}\n\t\t\tint sum = 0;\n\t\t\tint ct = 0;\n\t\t\tint[] arr = new int[n];\n\t\t\tfor(int i: plat){\n\t\t\t\tsum+=i+j-1;\n\t\t\t\tct+=i;\n\t\t\t}\n\t\t\tsum+=j;\n\t\t\tint ind = 1;\n\t\t\tint pt=0;\n\t\t\tfor(int i : plat){\n\t\t\t\tint st = Math.min(n-ct, pt+j-1);\n\t\t\t\tpt = st;\n\t\t\t\tfor(;pt<st+i;pt++){\n\t\t\t\t\tarr[pt]=ind;\n\t\t\t\t}\n\t\t\t\tct-=i;\n\t\t\t\tind++;\n\t\t\t}\n\t\t\tif(sum>n){\n\t\t\t\tpw.println(\"YES\");\n\t\t\t\tpw.println(arr[0]);\n\t\t\t\tfor(int i = 1;i<arr.length;i++){\n\t\t\t\t\tpw.println(\" \"+arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tpw.println(\"NO\");\n\t\t\t}\n\t\t\tpw.close();\n\t\t}\n\t}\n\t@SuppressWarnings(\"all\")\n\tclass FastScanner {\n\t    BufferedReader br;\n\t    StringTokenizer st;\n\t    \n\t    public FastScanner(String s) {\n\t        try {\n\t            br = new BufferedReader(new FileReader(s));\n\t        } catch (FileNotFoundException e) {\n\t            // TODO Auto-generated catch block\n\t            e.printStackTrace();\n\t        }\n\t    }\n\t \n\t    public FastScanner() {\n\t        br = new BufferedReader(new InputStreamReader(System.in));\n\t    }\n\t \n\t    String nextToken() {\n\t        while (st == null || !st.hasMoreElements()) {\n\t            try {\n\t                st = new StringTokenizer(br.readLine());\n\t            } catch (IOException e) {\n\t                // TODO Auto-generated catch block\n\t                e.printStackTrace();\n\t            }\n\t        }\n\t        return st.nextToken();\n\t    }\n\t \n\t    int nextInt() {\n\t        return Integer.parseInt(nextToken());\n\t    }\n\t \n\t    long nextLong() {\n\t        return Long.parseLong(nextToken());\n\t    }\n\t \n\t    double nextDouble() {\n\t        return Double.parseDouble(nextToken());\n\t    }\n\t}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n\npublic class tr0 {\n\tstatic PrintWriter out;\n\tstatic StringBuilder sb;\n\tstatic final double EPS = 1e-9;\n\tstatic long mod = (int) 998244353;\n\tstatic int inf = (int) 1e9 + 2;\n\tstatic long[] fac;\n\tstatic qu[] a;\n\tstatic int[] si;\n\tstatic ArrayList<Integer> primes;\n\tstatic ArrayList<Integer>[] ad;\n\tstatic ArrayList<pair>[] d;\n\tstatic edge[] ed;\n\tstatic int[][] vis;\n\tstatic int[] l, ch;\n\tstatic int[] occ;\n\tstatic Queue<Integer>[] can;\n\tstatic String s;\n\tstatic long[][] memo;\n\tstatic int n, m;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint[] ans = new int[n];\n\t\tint m = sc.nextInt();\n\t\tqu[] a = new qu[m];\n\t\tint d = sc.nextInt();\n\t\tfor (int i = 0; i < m; i++)\n\t\t\ta[i] = new qu(sc.nextInt(), i + 1);\n\t\tint c = 0;\n\t\tint id = 0;\n\t\tint le = 0;\n\t\tfor (int i = 0; i < m; i++)\n\t\t\tle += a[i].id;\n\t\tint xx = 0;\n\t\tint st = 0;\n\t\tboolean f = true;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tc++;\n\t\t\tif (c % d == 0) {\n\t\t\t\tif (id < m) {\n\t\t\t\t\tfor (int j = 0; j < a[id].id; j++) {\n\t\t\t\t\t\tans[i] = a[id].val;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tif (i == n) {\n\t\t\t\t\t\t\tle += a[id].id;\n\t\t\t\t\t\t\txx = j+1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tle -= a[id].id;\n\t\t\t\t\t\tst++;\n\t\t\t\t\t\t\n\t\t\t\t\tif(xx!=0) {\n\t\t              st--;\n\t\t              i--;\n\t\t              while(xx-->0) {\n\t\t            \t  ans[i]=0;\n\t\t            \t  i--;\n\t\t              }\n\t\t              break;\n\t\t\t\t\t}\n\t\t\t\t\tid++;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tf = false;\n\t\t\t}\n\t\t}\n\t\tint w=0;\n\t\tif (le > 0 && f) {\n\t\t\tint ix = 0;\n\t\t\tHashSet<Integer> h = new HashSet<>();\n\t\t\tfor (int i = n - 1; i >= 0; i--) {\n\t\t\t\tif (ans[i] == 0)\n\t\t\t\t\tle--;\n\t\t\t\telse {\n\t\t\t\t\tif (!h.contains(ans[i]))\n\t\t\t\t\t\tst--;\n\t\t\t\t\th.add(ans[i]);\n\t\t\t\t}\n\t\t\t\tif (le == 0) {\n\t\t\t\t\tix = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t//\tSystem.out.println(le+\" \"+Arrays.toString(ans)+\" \"+st+\" \"+ix);\n\t\t\t//System.out.println(Arrays.toString(a));\n\t\t\tfor (int i = st; i < m; i++) {\n\t\t\t\tfor (int hh = 0; hh < a[i].id; hh++)\n\t\t\t\t\tans[ix++] = a[i].val;\n\t\t\t}\n\t\t}\n\t\tif (f) {\n\t\t\tout.println(\"YES\");\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tout.print(ans[i] + \" \");\n\t\t} else\n\t\t\tout.print(\"NO\");\n\t\tout.flush();\n\t}\n\n\tstatic class qu implements Comparable<qu> {\n\t\tint id, val;\n\n\t\tqu(int i, int v) {\n\t\t\tid = i;\n\t\t\tval = v;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn id + \" \" + val;\n\t\t}\n\n\t\tpublic int compareTo(qu o) {\n\t\t\treturn id - o.id;\n\t\t}\n\t}\n\n\tstatic class seg implements Comparable<seg> {\n\t\tint a;\n\t\tint b;\n\n\t\tseg(int s, int e) {\n\t\t\ta = s;\n\t\t\tb = e;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn a + \" \" + b;\n\t\t}\n\n\t\tpublic int compareTo(seg o) {\n\t\t\t// if(a==o.a)\n\t\t\treturn o.b - b;\n\t\t\t// return\n\t\t}\n\t}\n\n\tstatic class pair {\n\t\tint to;\n\t\tint number;\n\n\t\tpair(int t, int n) {\n\t\t\tnumber = n;\n\t\t\tto = t;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn to + \" \" + number;\n\t\t}\n\t}\n\n\tstatic int modPow(int a, int e)\n\n\t{\n\t\tint res = 1;\n\t\twhile (e > 0) {\n\t\t\tif ((e & 1) == 1)\n\t\t\t\tres = (res * a);\n\t\t\ta = (a * a);\n\t\t\te >>= 1;\n\t\t}\n\t\treturn res;\n\t}\n\n\tstatic long inver(long x) {\n\t\tint a = (int) x;\n\t\tlong e = (mod - 2);\n\t\tlong res = 1;\n\t\twhile (e > 0) {\n\t\t\tif ((e & 1) == 1) {\n\t\t\t\tres = (int) ((1l * res * a) % mod);\n\t\t\t}\n\t\t\ta = (int) ((1l * a * a) % mod);\n\t\t\te >>= 1;\n\t\t}\n\t\treturn res % mod;\n\t}\n\n\tstatic class edge implements Comparable<edge> {\n\t\tint from;\n\t\tint to;\n\t\tint number;\n\n\t\tedge(int f, int t, int n) {\n\t\t\tfrom = f;\n\t\t\tto = t;\n\t\t\tnumber = n;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn from + \" \" + to + \" \" + number;\n\t\t}\n\n\t\tpublic int compareTo(edge f) {\n\t\t\treturn f.number - number;\n\t\t}\n\t}\n\n\tstatic void seive(int N) {\n\t\tsi = new int[N];\n\t\tprimes = new ArrayList<>();\n\t\tsi[1] = 1;\n\t\tfor (int i = 2; i < N; i++) {\n\t\t\tif (si[i] == 0) {\n\t\t\t\tsi[i] = i;\n\t\t\t\tprimes.add(i);\n\t\t\t}\n\t\t\tfor (int j = 0; j < primes.size() && primes.get(j) <= si[i] && (i * primes.get(j)) < N; j++)\n\t\t\t\tsi[primes.get(j) * i] = primes.get(j);\n\n\t\t}\n\t}\n\n\tstatic long fac(int n) {\n\t\tif (n == 0)\n\t\t\treturn fac[n] = 1;\n\t\tif (n == 1)\n\t\t\treturn fac[n] = 1;\n\t\tlong ans = 1;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfac[i] = ans = (i % mod * ans % mod) % mod;\n\t\treturn ans % mod;\n\t}\n\n\tstatic long gcd(long a, long b) {\n\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tstatic class unionfind {\n\t\tint[] p;\n\t\tint[] size;\n\t\tint[] max;\n\t\tint num;\n\n\t\tunionfind(int n) {\n\t\t\tp = new int[n];\n\t\t\tsize = new int[n];\n\t\t\tmax = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tp[i] = i;\n\t\t\t\tmax[i] = i;\n\t\t\t}\n\t\t\tArrays.fill(size, 1);\n\t\t\tnum = 0;\n\t\t}\n\n\t\tint findSet(int v) {\n\t\t\tif (v == p[v])\n\t\t\t\treturn v;\n\n\t\t\tmax[v] = Math.max(max[v], max[p[v]]);\n\n\t\t\tp[v] = findSet(p[v]);\n\n\t\t\tmax[v] = Math.max(max[v], max[p[v]]);\n\n\t\t\treturn p[v];\n\t\t}\n\n\t\tboolean sameSet(int a, int b) {\n\t\t\ta = findSet(a);\n\t\t\tb = findSet(b);\n\t\t\tif (a == b)\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\t\tint max() {\n\t\t\tint max = 0;\n\t\t\tfor (int i = 0; i < size.length; i++)\n\t\t\t\tif (size[i] > max)\n\t\t\t\t\tmax = size[i];\n\t\t\treturn max;\n\t\t}\n\n\t\tboolean combine(int a, int b) {\n\t\t\ta = findSet(a);\n\t\t\tb = findSet(b);\n\t\t\tif (a == b)\n\t\t\t\treturn true;\n\t\t\tif (size[a] > size[b]) {\n\t\t\t\tp[b] = a;\n\t\t\t\tmax[a] = Math.max(max[a], max[b]);\n\t\t\t\tsize[a] += size[b];\n\n\t\t\t} else {\n\t\t\t\tp[a] = b;\n\t\t\t\tmax[b] = Math.max(max[a], max[b]);\n\t\t\t\tsize[b] += size[a];\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic Long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Kraken7\n */\npublic class Main {\n\n  public static void main(String[] args) {\n    InputStream inputStream = System.in;\n    OutputStream outputStream = System.out;\n    Scanner in = new Scanner(inputStream);\n    PrintWriter out = new PrintWriter(outputStream);\n    TaskC solver = new TaskC();\n    solver.solve(1, in, out);\n    out.close();\n  }\n\n  static class TaskC {\n\n    public void solve(int testNumber, Scanner in, PrintWriter out) {\n      int n = in.nextInt(), m = in.nextInt(), d = in.nextInt();\n      int[] c = new int[m];\n      int sum = 0;\n      for (int i = 0; i < m; i++) {\n        c[i] = in.nextInt();\n        sum += d;\n        sum += c[i] - 1;\n      }\n      sum += d;\n      if (sum < n + 1) {\n        out.println(\"NO\");\n        return;\n      }\n      out.println(\"YES\");\n      sum = 0;\n      for (int i = 0; i < m; i++)\n        sum += c[i];\n      int[] res = new int[n + 1];\n      int pos = 0;\n      for (int i = 1; i <= m; i++) {\n        if (pos + d + sum - 1 <= n)\n          pos += d;\n        else\n          pos = n - sum + 1;\n        for (int j = pos; j <= pos + c[i - 1] - 1; j++) {\n          res[j] = i;\n        }\n        sum -= c[i - 1];\n        pos += c[i - 1] - 1;\n      }\n      for (int i = 1; i <= n; i++)\n        out.print(res[i] + \" \");\n    }\n\n  }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cerr << '{';\n  __print(x.first);\n  cerr << ',';\n  __print(x.second);\n  cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cerr << '{';\n  for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\nconst int MAXN = 1500;\nint n, m, d, c[MAXN], v[MAXN];\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &d);\n  for (int i = 1; i <= m; ++i) scanf(\"%d\", &c[i]);\n  stack<pair<int, int> > info;\n  info.push({0, 0});\n  int start = 1;\n  for (int i = 1; i <= m; ++i) {\n    info.push({start, i});\n    start += c[i];\n  }\n  info.push({n + 1, m + 1});\n  vector<pair<int, int> > resp;\n  while ((int)info.size() > 1) {\n    int start1 = info.top().first;\n    int p1 = info.top().second;\n    info.pop();\n    int start2 = info.top().first;\n    int p2 = info.top().second;\n    info.pop();\n    int end2 = start2 + c[p2] - 1;\n    while (start1 - end2 > d) {\n      ++end2;\n      ++start2;\n    }\n    info.push({start2, p2});\n    if (start1 > 0 && start1 < n + 1) {\n      for (int k = start1; k < start1 + c[p1]; ++k) {\n        v[k] = p1;\n      }\n    }\n  }\n  int last = 0;\n  v[n + 1] = 1;\n  for (int i = 1; i <= n + 1; ++i) {\n    if (v[i] > 0) {\n      if (i - last > d) {\n        printf(\"NO\\n\");\n        return 0;\n      }\n      last = i;\n    }\n  }\n  printf(\"YES\\n\");\n  for (int i = 1; i <= n; ++i) {\n    printf(\"%d%c\", v[i], \" \\n\"[i == n]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int a[m];\n  int sum = 0;\n  for (int i = 0; i < m; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  if (sum + (m + 1) * (d - 1) < n) {\n    cout << \"NO\\n\";\n    return;\n  }\n  cout << \"YES\\n\";\n  vector<int> answer(n);\n  int j = 0;\n  for (int i = 0; i < m; i++) {\n    int size = a[i];\n    while (n - sum - j > (m - i) * (d - 1)) j++;\n    sum -= size;\n    while (size--) {\n      answer[j] = i + 1;\n      j++;\n    }\n  }\n  for (auto it : answer) cout << it << \" \";\n  cout << endl;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = list(map(int, input().split()))\nc = [0] + list(map(int, input().split()))\nop = [0]*n\nloc = -1\nrem = sum(c)\nfor i in range(1, m + 1):\n    loc += min(d, n - loc - rem)\n    rem -= c[i]\n    for j in range(loc, min(loc + c[i], n)):\n        op[j] = i\n    loc += c[i] - 1\n    if (loc >= n):\n        break\nif (loc + d < n):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(' '.join(map(str, op)))"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n\n        int n = scan.nextInt();\n        int m = scan.nextInt();\n        int d = scan.nextInt();\n\n        int[] c = new int[m];\n        for (int i = 0; i < m; i++) {\n            c[i] = scan.nextInt();\n        }\n\n        int indexC = 0;\n        int x = 0;\n        List<Integer> list = new ArrayList<>();\n\n        while (true) {\n            x += d;\n            for (int i = 0; i < d - 1; i++) {\n                list.add(0);\n            }\n\n            if (indexC == c.length) {\n                if (x >= n + 1) {\n                    System.out.println(\"YES\");\n                    List<Integer> res = new ArrayList<>(n);\n\n                    int dif = x - (n + 1);\n\n                    for (int j = 0; j < list.size(); j++) {\n                        if(dif > 0 && list.get(j) == 0) {\n                            dif--;\n                        } else {\n                            res.add(list.get(j));\n                        }\n                    }\n\n                    StringBuilder out = new StringBuilder();\n                    for (int j = 0; j < res.size(); j++) {\n                        out.append(res.get(j) + \" \");\n                    }\n                    System.out.println(out);\n                    return;\n                }\n                System.out.println(\"NO\");\n                return;\n            }\n\n            x += c[indexC] - 1;\n            for (int i = 0; i < c[indexC]; i++) {\n                list.add(indexC + 1);\n            }\n            indexC++;\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "from itertools import accumulate\n\nn, m, dmax = map(int, input().split())\nc = list(map(int, input().split()))\n\nif sum(c) - m + dmax * (m+1) < n+1:\n    print('NO')\n    exit()\nelse:\n    print('YES')\n\nd = (n - sum(c)) // (m+1)\nmajor_num = (n - sum(c)) - d * (m+1)\n\nans = []\nk = 1\nfor i in range(major_num):\n    ans.extend([0] * (d + 1))\n    ans.extend([k] * c[k-1])\n    k += 1\nfor i in range(m + 1 - major_num - 1):\n    ans.extend([0] * d)\n    ans.extend(([k] * c[k-1]))\n    k += 1\nans.extend(([0] * d))\nprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int, input().split())\nc = list(map(int, input().split()))\nsumc = 0\nfor elem in c:\n    sumc += elem\nif sumc + (m+1)*(d-1) < n:\n    print('NO')\nelse:\n    print('YES')\n    ans = []\n    x = n - sumc\n    for i in range(m):\n        if x > d-1:\n            for j in range(d-1):\n                ans.append(0)\n            for j in range(c[i]):\n                ans.append(i+1)\n            x -= (d-1)\n        elif x > 0:\n            for j in range(x):\n                ans.append(0)\n            for j in range(c[i]):\n                ans.append(i+1)\n            x = 0\n        else:\n            for j in range(c[i]):\n                ans.append(i+1)\n    for j in range(x):\n        ans.append(0)\n    print (*ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author beginner1010\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int d = in.nextInt();\n            int[] c = new int[m + 1];\n            for (int i = 0; i < m; i++) {\n                c[i + 1] = in.nextInt();\n            }\n            int[] ans = new int[n + 1];\n            boolean no = false;\n            int curPlatform = 1;\n            int last = 0;\n            for (int i = 1; i <= n; ) {\n                if (i - last > d || (i + d <= n && curPlatform > m)) {\n                    no = true;\n                    break;\n                }\n                if (curPlatform > m) break;\n                int idx = i + c[curPlatform] - 1;\n                int idxPlatform = curPlatform + 1;\n                boolean ok = true;\n                while (idx <= n) {\n                    idx += d;\n                    if (idx <= n) {\n                        if (idxPlatform > m) {\n                            ok = false;\n                            break;\n                        }\n                        idx += c[idxPlatform] - 1;\n                        idxPlatform++;\n                    }\n                }\n                if (ok == true) {\n                    for (int j = i; j <= i + c[curPlatform] - 1; j++) ans[j] = curPlatform;\n                    last = i + c[curPlatform] - 1;\n                    i += c[curPlatform];\n                    curPlatform++;\n                } else\n                    i++;\n            }\n            if (no) out.println(\"NO\");\n            else {\n                out.println(\"YES\");\n                for (int i = 1; i <= n; i++) {\n                    if (i > 1) out.print(\" \");\n                    out.print(ans[i]);\n                }\n                out.println();\n            }\n        }\n\n    }\n\n    static class InputReader {\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputStream stream;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isWhitespace(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isWhitespace(c));\n            return res * sgn;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\n\na = list(map(int, input().split()))\n\nif not (sum(a) + (m + 1) * (d - 1) >= n):\n\tprint(\"NO\")\n\nelse:\n\tprint(\"YES\")\n\n\tarr = [0] * (d - 1)\n\n\tfor i in range(m):\n\t\tarr.extend([i + 1] * a[i])\n\t\tarr.extend([0] * (d - 1))\n\n\tfinal = []\n\tremove = len(arr) - n\n\n\tfor x in arr:\n\t\tif remove and not x:\n\t\t\tremove -= 1\n\t\telse:\n\t\t\tfinal.append(x)\n\n\tprint(*final)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int modInverse(long long int a, long long int m) {\n  long long int m0 = m;\n  long long int y = 0, x = 1;\n  if (m == 1) return 0;\n  while (a > 1) {\n    long long int q = a / m;\n    long long int t = m;\n    m = a % m, a = t;\n    t = y;\n    y = x - q * y;\n    x = t;\n  }\n  if (x < 0) x += m0;\n  return x;\n}\nlong long int binomialCoeff(long long int n, long long int k) {\n  long long int res = 1;\n  if (k > n - k) k = n - k;\n  for (int i = 0; i < k; ++i) {\n    res *= (n - i);\n    res /= (i + 1);\n  }\n  return res;\n}\nlong long int power(long long int x, long long int y) {\n  long long int temp;\n  if (y == 0) return 1;\n  temp = power(x, y / 2);\n  if (y % 2 == 0)\n    return temp * temp;\n  else\n    return x * temp * temp;\n}\nbool prime[100005];\nvoid Sieve(int n) {\n  memset(prime, true, sizeof(prime));\n  for (int p = 2; p * p <= n; p++) {\n    if (prime[p] == true) {\n      for (int i = p * p; i <= n; i += p) prime[i] = false;\n    }\n  }\n}\nconst int Nmax = 1e6 + 5;\nlong long int mod = 1e9 + 7;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, d;\n  cin >> n >> m >> d;\n  int c[m];\n  for (int i = 0; i < m; i++) cin >> c[i];\n  bool yes = true;\n  int last = 0;\n  for (int i = 0; i < m; i++) {\n    last += d + c[i] - 1;\n  }\n  if (last + d < n + 1) {\n    cout << \"NO\";\n    return 0;\n  } else\n    cout << \"YES\\n\";\n  int sum = 0;\n  for (int i = 0; i < m; i++) {\n    sum += c[i];\n  }\n  vector<int> ans(n, 0);\n  int space = n - sum;\n  int j = 0;\n  for (int i = 0; i < m; i++) {\n    if (space - d + 1 >= 0) {\n      for (int k = j + d - 1; k <= j + d + c[i] - 2; k++) ans[k] = i + 1;\n      space = space - d + 1;\n      j += d + c[i] - 1;\n    } else {\n      for (int k = j; k <= j + c[i] - 1; k++) ans[k] = i + 1;\n      j += c[i];\n    }\n  }\n  for (auto x : ans) cout << x << \" \";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d, a;\n  cin >> n >> m >> d;\n  vector<int> c;\n  int rem = 0;\n  for (int i = 0; i < m; i++) {\n    cin >> a;\n    c.push_back(a);\n    rem += a;\n  }\n  if (n > ((m + 1) * d) - 1 + (rem - m)) {\n    cout << \"NO\";\n    return 0;\n  }\n  cout << \"YES\" << endl;\n  rem = n - rem;\n  int i = 0, l = 0;\n  while (i < m) {\n    int jump = min(d, rem + 1);\n    rem = rem - (jump - 1);\n    for (int k = 0; k < jump - 1; k++) {\n      cout << \"0\"\n           << \" \";\n      l++;\n    }\n    while (c[i]--) {\n      cout << i + 1 << \" \";\n      l++;\n    }\n    i++;\n  }\n  for (l; l < n; l++) cout << 0 << \" \";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class C_1256 {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\t\n\t\tint n = sc.nextInt(), m = sc.nextInt(), d = sc.nextInt();\n\t\tint[] len = sc.nextIntArray(m);\n\t\tint[] start = new int[m];\n\t\tint[] end = new int[m];\n\t\t\n\t\tint prev = 0;\n\t\tfor(int i = 0; i < m; i++) {\n\t\t\tstart[i] = prev + 1;\n\t\t\tprev = end[i] = prev + len[i];\n\t\t}\n\t\t\n\t\tprev = n + 1;\n\t\tfor(int i = m - 1; i >= 0; i--) {\n\t\t\tint diff = prev - end[i];\n\t\t\tif(diff <= d)\n\t\t\t\tbreak;\n\t\t\tdiff -= d;\n\t\t\tend[i] += diff;\n\t\t\tprev = start[i] += diff;\n\t\t}\n\t\t\n\t\tif(start[0] <= d) {\n\t\t\tpw.println(\"YES\");\n\t\t\tint[] ans = new int[n];\n\t\t\tfor(int i = 0; i < m; i++)\n\t\t\t\tfor(int j = start[i] - 1; j < end[i]; j++)\n\t\t\t\t\tans[j] = i + 1;\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\tpw.print(ans[i] + (i == n - 1 ? \"\\n\" : \" \"));\n\t\t} else \n\t\t\tpw.println(\"NO\");\n\t\t\n\t\tpw.flush();\n\t}\n\n\tpublic static class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic Integer[] nextIntegerArray(int n) throws IOException {\n\t\t\tInteger[] array = new Integer[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = new Integer(nextInt());\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic double[] nextDoubleArray(int n) throws IOException {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tpublic static int[] shuffle(int[] a) {\n\t\t\tint n = a.length;\n\t\t\tRandom rand = new Random();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint tmpIdx = rand.nextInt(n);\n\t\t\t\tint tmp = a[i];\n\t\t\t\ta[i] = a[tmpIdx];\n\t\t\t\ta[tmpIdx] = tmp;\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Ishu\n{\n    static Scanner scan = new Scanner(System.in);\n    static void tc()\n    {\n    int n = scan.nextInt();\n    int m = scan.nextInt();\n    int d = scan.nextInt();\n    int i,j;\n    \n    int sum = 0;\n    int[] a = new int[m];\n    for(i=0;i<m;++i)\n        {\n        a[i] = scan.nextInt();\n        sum += a[i];\n        }\n        \n    int[] ans = new int[n];\n    boolean flag = true;\n    int pos = 0;\n    j = 1;\n    while(pos <= n)\n        {\n        int des = pos + d;\n        if(des > n)\n            {\n            while(j <= m)\n                {\n                int cnt = 0;\n                while(cnt < a[j-1])\n                    {\n                    ans[pos++] = j;\n                    ++cnt;\n                    }\n                j++;    \n                }\n            break;\n            }\n        if(sum == 0)\n            {\n            flag = false;\n            break;\n            }\n            \n        if(n - sum < des)\n            {\n            while(j <= m)\n                {\n                int cnt = 0;\n                while(cnt < a[j-1])\n                    {\n                    ans[pos++] = j;\n                    ++cnt;\n                    }\n                j++;    \n                }\n            break;\n            }\n        pos = des - 1;\n        for(int cnt = 1;cnt <= a[j-1];++cnt)\n            ans[pos++] = j;\n        \n        sum -= a[j-1];\n        j++;\n        }\n    if(!flag)\n        System.out.println(\"NO\");\n    else\n        {\n        System.out.println(\"YES\");\n        for(i=0;i<n;++i)\n            System.out.print(ans[i] + \" \");\n        System.out.println();\n        }\n    }\n    public static void main(String[] args)\n    {\n    int t = 1;\n    //t = scan.nextInt();\n    while(t-- > 0)\n        tc();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "i=lambda:[*map(int,input().split())]\nn,m,d=i()\nc=i()\nn-=sum(c)\nd-=1\nm+=1\nif m*d>=n:\n    print(\"YES\")\n    a=[]\n    for v in range(m):\n        if v:a+=[v]*c[v-1]\n        a+=[0]*(n//m+(v<n%m))\n    print(*a)\nelse:\n    print(\"NO\")"
        },
        {
            "language": 3,
            "solution": "n, m, d = list(map(int, input().split(\" \")))\nnumbers = list(map(int, input().split(\" \")))\n\n# n = n - (d*2) + 1\n# if n // m < d:\n#     print(\"YES\")\n# else:\n#     print(\"NO\")\n\nans = [\"0\" for _ in range(n)]\n\nj = 0\ntemp = 0\ni=0\nwhile i < n and j < len(numbers):\n    if sum(numbers[j:]) < n-i and temp != d-1:\n        temp += 1\n        i+=1\n    elif temp == d-1 or sum(numbers[j:]) == n-i:\n        for k in range(i, i+numbers[j]):\n            ans[k] = str(j+1)\n        temp = 0\n        i+=numbers[j]\n        j+=1\n\nst = ans\ntemp = 0\nfor k,i in enumerate(st):\n    if i != \"0\" or k == len(st)-1:\n        if i == \"0\":\n            temp+=1\n        if temp >= d:\n            print(\"NO\")\n            break\n        temp = 0\n    else:\n        temp+=1\nelse:\n    print(\"YES\")\n    print(\" \".join(ans))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, m, d;\n  cin >> n >> m >> d;\n  vector<long long int> v(m), pre(m + 1, 0);\n  for (long long int i = 0; i < m; i++) {\n    cin >> v[i];\n  }\n  pre[m] = 0;\n  for (long long int i = m - 1; i >= 0; i--) {\n    if (i == m - 1)\n      pre[i] = v[i];\n    else\n      pre[i] = pre[i + 1] + v[i];\n  }\n  if (n > pre[0] + (m + 1) * (d - 1)) {\n    cout << \"NO\\n\";\n    return 0;\n  }\n  long long int j = 0;\n  long long int i = 0;\n  vector<long long int> res(n + 1, 0);\n  while (i < n + 1) {\n    long long int k = i + 1;\n    while (i + 1 < k + d - 1 && n - i > pre[j]) {\n      res[i + 1] = 0;\n      i++;\n    }\n    i++;\n    k = i + v[j];\n    while (i < k) {\n      res[i] = j + 1;\n      i++;\n    }\n    if (i >= n + 1) break;\n    j++;\n    if (j >= m) break;\n    i--;\n  }\n  cout << \"YES\\n\";\n  for (long long int i = 1; i <= n; i++) cout << res[i] << \" \";\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing i8 = char;\nusing ui8 = unsigned char;\nusing i16 = short;\nusing u16 = unsigned short;\nusing i32 = int;\nusing ui32 = unsigned int;\nusing i64 = long long int;\nusing ui64 = unsigned long long int;\nvoid task();\nint main() {\n  srand(time(0));\n  ios_base::sync_with_stdio(0);\n  task();\n  return 0;\n}\nconst i32 INF = 0x3f3f3f3f;\nconst i32 N = 1e6 + 10;\nconst i32 M = 1e7 + 100;\ni32 n, m, d;\ni32 a[N];\nvoid task() {\n  cin >> n >> m >> d;\n  for (i32 i = 0; i < m; ++i) {\n    cin >> a[i];\n  }\n  vector<i32> ans;\n  for (i32 i = 0; i < m; ++i) {\n    for (i32 j = 0; j + 1 < d; ++j) {\n      ans.push_back(0);\n    }\n    for (i32 j = 0; j < a[i]; ++j) {\n      ans.push_back(i + 1);\n    }\n  }\n  for (i32 j = 0; j + 1 < d; ++j) {\n    ans.push_back(0);\n  }\n  if (ans.size() < n) {\n    cout << \"NO\";\n    return;\n  }\n  if (ans.size() > n) {\n    vector<i32> ans2;\n    i32 toDelete = ans.size() - n;\n    for (i32 i = 0; i < ans.size(); ++i) {\n      if (ans[i] == 0 && toDelete > 0) {\n        --toDelete;\n      } else {\n        ans2.push_back(ans[i]);\n      }\n    }\n    ans = ans2;\n  }\n  cout << \"YES\\n\";\n  for (i32 x : ans) {\n    cout << x << ' ';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100001];\nint b[100001];\nsigned main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int sum = 0;\n  for (int i = 1; i <= m; i++) cin >> b[i], sum += b[i];\n  if (1ll * (m + 1) * (d - 1) + sum < n)\n    printf(\"NO\\n\");\n  else {\n    printf(\"YES\\n\");\n    int x = (n - sum) / (m + 1);\n    int p = (n - sum) % (m + 1);\n    int at = (p) ? x + 1 : x;\n    for (int i = 1; i < p; i++) {\n      for (int j = 1; j <= b[i]; j++) a[++at] = i;\n      at += x + 1;\n    }\n    for (int i = max(p, 1); i <= m; i++) {\n      for (int j = 1; j <= b[i]; j++) a[++at] = i;\n      at += x;\n    }\n    for (int i = 1; i <= n; i++) printf(\"%d \", a[i]);\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//When I wrote this code, only God & I understood what it did. Now only God knows !!\n\n\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\n\n\npublic class Main {\n\n    static class FastReader\n    {\n        private InputStream mIs;private byte[] buf = new byte[1024];private int curChar,numChars;public FastReader() { this(System.in); }public FastReader(InputStream is) { mIs = is;}\n        public int read() {if (numChars == -1) throw new InputMismatchException();if (curChar >= numChars) {curChar = 0;try { numChars = mIs.read(buf);} catch (IOException e) { throw new InputMismatchException();}if (numChars <= 0) return -1; }return buf[curChar++];}\n        public String nextLine(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isEndOfLine(c));return res.toString() ;}\n        public String next(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isSpaceChar(c));return res.toString();}\n        public long l(){int c = read();while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }long res = 0; do{ if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read();}while(!isSpaceChar(c));return res * sgn;}\n        public int i(){int c = read() ;while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }int res = 0;do{if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read() ;}while(!isSpaceChar(c));return res * sgn;}\n        public double d() throws IOException {return Double.parseDouble(next()) ;}\n        public boolean isSpaceChar(int c) { return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1; }\n        public boolean isEndOfLine(int c) { return c == '\\n' || c == '\\r' || c == -1; }\n        public void scanIntArr(int [] arr){ for(int li=0;li<arr.length;++li){ arr[li]=i();}}\n        public void scanLongArr(long [] arr){for (int i=0;i<arr.length;++i){arr[i]=l();}}\n        public void shuffle(int [] arr){ for(int i=arr.length;i>0;--i) { int r=(int)(Math.random()*i); int temp=arr[i-1]; arr[i-1]=arr[r]; arr[r]=temp; } }\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        FastReader fr = new FastReader();\n        PrintWriter pw = new PrintWriter(System.out);\n        /*\ninputCopy\n7 3 2\n1 2 1\noutputCopy\nYES\n0 1 0 2 2 0 3\ninputCopy\n10 1 11\n1\noutputCopy\nYES\n0 0 0 0 0 0 0 0 0 1\ninputCopy\n10 1 5\n2\noutputCopy\nYES\n0 0 0 0 1 1 0 0 0 0\n\n7 7 10\n1 1 1 1 1 1 1\n-1 10 7 0\n\n        */\n        int n=fr.i();\n        int m=fr.i();\n        int d=fr.i();\n        int [] arr=new int[m];\n        int mi=0;\n        fr.scanIntArr(arr);\n        int sumLength=0;\n        for(int i=0;i<m;++i)\n            sumLength+=arr[i];\n        int remLength=sumLength;\n        int [] ans=new int[n];\n        int i=-1;\n        boolean flag=false;\n        for(;i<n && mi<m;++mi)\n        {\n            //System.err.println(i+\" \"+d+\" \"+remLength+\" \"+mi);\n            if(i+d+remLength>=n)\n            {\n                flag=true;\n                break;\n            }\n            i+=d;\n            int length=arr[mi];\n            remLength-=length;\n            for(int j=0;j<length;++j,++i)\n                ans[i]=mi+1;\n            //System.err.println(Arrays.toString(ans));\n            --i;\n        }\n        if(flag)\n        {\n            ++i;\n            while(mi<m)\n            {\n                int length=arr[mi];\n                //System.err.println(\"L=\"+length+\" \"+mi);\n                for(int j=0;j<length;++j)\n                {\n                    ans[i++]=mi+1;\n                    //System.err.println(\"i=\"+i+\" \"+ans[i-1]);\n                }\n                ++mi;\n            }\n        }\n        i+=d;\n        if(i>=n || flag)\n        {\n            pw.println(\"YES\");\n            for(int num:ans)\n                pw.print(num+\" \");\n            pw.println();\n        }\n        else\n        {\n            pw.println(\"NO\");\n        }\n        pw.flush();\n        pw.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom sys import stdin\nn,m,d=map(int,stdin.readline().strip().split())\ns=list(map(int,stdin.readline().strip().split()))\nacum=[0 for i in range(m)]\nacum[-1]=s[-1]\n\nfor i in range(m-2,-1,-1):\n    acum[i]=s[i]+acum[i+1]\nacum.append(0)\nl=0\nans=[0 for i in range(n)]\naux=[]\nmx=0\nfor i in range(m):\n    rr=9\n    for j in range(l,l+d):\n        y=s[i]+j\n        rr=j\n        if((n-y)-1)<acum[i+1]:\n            break\n    l=y\n    mx=y\n    aux.append(rr)\nmx+=d-1\nans=[0 for i in range(n)]\nfor i in range(m):\n    for j in range(aux[i],s[i]+aux[i]):\n        ans[j]=i+1\nif(mx>=n):\n    print(\"YES\")\n    print(*ans)\n\nelse:\n    print(\"NO\")\n            \n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  scanf(\"%d %d %d\", &n, &m, &d);\n  vector<int> v(m);\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d\", &v[i]);\n  }\n  vector<int> acc(m, 0);\n  for (int i = m - 2; i >= 0; i--) {\n    acc[i] = acc[i + 1] + v[i + 1];\n  }\n  int atual = 0;\n  vector<int> resp(n + 1, 0);\n  for (int i = 0; i < m; i++) {\n    int ideal = atual + d;\n    int inicio = n - acc[i] - (v[i] - 1);\n    int inicioPrancha = min(inicio, ideal);\n    for (int j = inicioPrancha; j <= inicioPrancha + (v[i] - 1); j++)\n      resp[j] = i + 1;\n    atual = inicioPrancha + (v[i] - 1);\n  }\n  if (atual + d >= n + 1) {\n    printf(\"YES\\n\");\n    for (int i = 1; i <= n; i++) {\n      printf(\"%d \", resp[i]);\n    }\n    printf(\"\\n\");\n  } else {\n    printf(\"NO\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid printVec(vector<int> &a) {\n  for (int i = 0; i < a.size(); i++) {\n    cout << a[i] << \" \";\n  }\n  cout << endl;\n}\nvector<int> res;\nbool canJump(int n, int d, vector<int> &len) {\n  int m = len.size();\n  res.clear();\n  int totLen = 0;\n  for (int i = 0; i < m; i++) {\n    totLen += len[i];\n  }\n  if (totLen + (m + 1) * (d - 1) < n) return false;\n  int req = n - totLen;\n  int cont = 0;\n  bool isGap = true;\n  if (req == 0) isGap = false;\n  for (int i = 0; i < m; i++) {\n    while (isGap) {\n      cont++;\n      req--;\n      if (cont == d - 1 || req == 0) {\n        cont = 0;\n        isGap = false;\n      }\n      res.push_back(0);\n    }\n    for (int j = 0; j < len[i]; j++) {\n      res.push_back(i + 1);\n    }\n    if (req != 0) isGap = true;\n  }\n  if (req != 0) {\n    while (req != 0) {\n      res.push_back(0);\n      req--;\n    }\n  }\n  return true;\n}\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> len(m);\n  for (int i = 0; i < m; i++) cin >> len[i];\n  if (canJump(n, d, len)) {\n    cout << \"YES\" << endl;\n    printVec(res);\n  } else {\n    cout << \"NO\" << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "//make sure to make new file!\nimport java.io.*;\nimport java.util.*;\n\npublic class C598{\n   \n   public static void main(String[] args)throws IOException{\n      BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n      PrintWriter out = new PrintWriter(System.out);\n      \n      StringTokenizer st = new StringTokenizer(f.readLine());\n      \n      int n = Integer.parseInt(st.nextToken());\n      int m = Integer.parseInt(st.nextToken());\n      int d = Integer.parseInt(st.nextToken());\n      \n      int N = n;\n      int[] array = new int[m];\n      st = new StringTokenizer(f.readLine());\n      for(int k = 0; k < m; k++){\n         array[k] = Integer.parseInt(st.nextToken());\n         N-=array[k]-1;\n      }\n      \n      int[] cond = new int[N];      //condensed\n      \n      int maxplaced = 0;      \n      for(int k = 0; k < m; k++){\n         int i = Math.min(d*(k+1)-1,N-m+k);\n         cond[i] = k+1;\n         maxplaced = Math.max(maxplaced,i);\n      }\n      \n      if(N-maxplaced > d){\n         out.println(\"NO\");\n         out.close();\n         return;\n      }\n      \n      out.println(\"YES\");\n      StringJoiner sj = new StringJoiner(\" \");\n      \n      for(int k = 0; k < N; k++){\n         if(cond[k] == 0){\n            sj.add(\"0\");\n         } else {\n            for(int j = 0; j < array[cond[k]-1]; j++){\n               sj.add(\"\"+cond[k]);\n            }\n         }\n      }\n      \n      out.println(sj);\n      \n      \n      \n      \n      \n      \n      \n      out.close();\n   }\n   \n      \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n >> m >> d;\n  vector<int> ans(1e7);\n  vector<int> a(m);\n  vector<int> res;\n  int sum = 0;\n  for (int i = 0; i < m; ++i) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  bool ok = true;\n  int pos = d;\n  for (int i = 0; i < m; ++i) {\n    for (int j = pos; j <= pos + (a[i] - 1); ++j) {\n      ans[j] = i + 1;\n    }\n    pos += (a[i] - 1);\n    for (int j = pos + 1; j < pos + d - 1; ++j) {\n      ans[j] = 0;\n    }\n    pos += d;\n  }\n  if (pos <= n) {\n    cout << \"NO\" << '\\n';\n    return 0;\n  }\n  --pos;\n  int cnt = pos - n;\n  for (int i = pos; i >= 1; --i) {\n    if (ans[i] == 0) {\n      if (cnt)\n        --cnt;\n      else\n        res.push_back(0);\n    } else {\n      res.push_back(ans[i]);\n    }\n  }\n  cout << \"YES\" << '\\n';\n  reverse(res.begin(), res.end());\n  for (auto it : res) {\n    cout << it << \" \";\n  }\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.NoSuchElementException;\n\npublic class Main {\n\n\tstatic PrintWriter out;\n\tstatic InputReader ir;\n\n\tstatic void solve() {\n\t\tint n = ir.nextInt();\n\t\tint m = ir.nextInt();\n\t\tint d = ir.nextInt();\n\t\tint[] c = ir.nextIntArray(m);\n\t\tint[] res = new int[n + 2];\n\t\tint tot = 1;\n\t\tfor (int i = 0; i < m; i++)\n\t\t\ttot += d + c[i] - 1;\n\t\ttot += d;\n\t\tif (tot < n + 2) {\n\t\t\tout.println(\"NO\");\n\t\t} else {\n\t\t\tint p = (d - 1) * (m + 1) - (tot - n - 1);\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tcur += Math.max(1, Math.min(d - 1, p) + 1);\n\t\t\t\tfor (int j = 0; j < c[i]; j++) {\n\t\t\t\t\tres[cur++] = i + 1;\n\t\t\t\t}\n\t\t\t\tp -= d - 1;\n\t\t\t\tcur--;\n\t\t\t}\n\t\t\tout.println(\"YES\");\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\tout.print(res[i] + \" \");\n\t\t\tout.println();\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tir = new InputReader(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.flush();\n\t}\n\n\tstatic class InputReader {\n\n\t\tprivate InputStream in;\n\t\tprivate byte[] buffer = new byte[1024];\n\t\tprivate int curbuf;\n\t\tprivate int lenbuf;\n\n\t\tpublic InputReader(InputStream in) {\n\t\t\tthis.in = in;\n\t\t\tthis.curbuf = this.lenbuf = 0;\n\t\t}\n\n\t\tpublic boolean hasNextByte() {\n\t\t\tif (curbuf >= lenbuf) {\n\t\t\t\tcurbuf = 0;\n\t\t\t\ttry {\n\t\t\t\t\tlenbuf = in.read(buffer);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (lenbuf <= 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprivate int readByte() {\n\t\t\tif (hasNextByte())\n\t\t\t\treturn buffer[curbuf++];\n\t\t\telse\n\t\t\t\treturn -1;\n\t\t}\n\n\t\tprivate boolean isSpaceChar(int c) {\n\t\t\treturn !(c >= 33 && c <= 126);\n\t\t}\n\n\t\tprivate void skip() {\n\t\t\twhile (hasNextByte() && isSpaceChar(buffer[curbuf]))\n\t\t\t\tcurbuf++;\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tskip();\n\t\t\treturn hasNextByte();\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint b = readByte();\n\t\t\twhile (!isSpaceChar(b)) {\n\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\tb = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tint c = readByte();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = readByte();\n\t\t\tboolean minus = false;\n\t\t\tif (c == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tc = readByte();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres = res * 10 + c - '0';\n\t\t\t\tc = readByte();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn (minus) ? -res : res;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tif (!hasNext())\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\tint c = readByte();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = readByte();\n\t\t\tboolean minus = false;\n\t\t\tif (c == '-') {\n\t\t\t\tminus = true;\n\t\t\t\tc = readByte();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres = res * 10 + c - '0';\n\t\t\t\tc = readByte();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn (minus) ? -res : res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic char[][] nextCharMap(int n, int m) {\n\t\t\tchar[][] map = new char[n][m];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tmap[i] = next().toCharArray();\n\t\t\treturn map;\n\t\t}\n\t}\n\n\tstatic void tr(Object... o) {\n\t\tout.println(Arrays.deepToString(o));\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n \npublic class Main\n{\n\tstatic final int mod = (int)1e9+7;\n\tstatic int n, m, d;\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tFastReader in = new FastReader();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tn = in.nextInt();\n\t\tm = in.nextInt();\n\t\td = in.nextInt();\n\t\tint[] arr = new int[m + 2];\n\t\tarr[m + 1] = 1;\n\t\tfor(int i = 1; i <= m; i++)\n\t\t{\n\t\t\tarr[i] = in.nextInt();\n\t\t}\n\t\tint[] suffix = new int[m + 3];\n\t\tsuffix[m + 1] = 1;\n\t\tfor(int i = m; i > 0; i--)\n\t\t{\n\t\t\tsuffix[i] = suffix[i + 1] + arr[i];\n\t\t}\n\t\tint i, k = 1;\n\t\tint[] ans = new int[n + 2];\n\t\tfor(i = 0; i <= n;)\n\t\t{\n\t\t\tif(k >= m + 2)\n\t\t\t{\n\t\t\t\tk = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tint jump = -1;\n\t\t\tfor(int j = 1; j <= d && j + i <= n + 1; j++)\n\t\t\t{\n\t\t\t\tif(i + j + arr[k] - 1 < n + 2 - suffix[k + 1])\n\t\t\t\t{\n\t\t\t\t\tjump = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(jump == -1)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int j = i + jump; j < i + jump + arr[k]; j++)\n\t\t\t{\n\t\t\t\tans[j] = k;\n\t\t\t}\n\t\t\ti = i + jump + arr[k] - 1;\n\t\t\tk++;\n\t\t}\n\t\tif(i == n + 1 && k == m + 2)\n\t\t{\n\t\t\tout.println(\"YES\");\n\t\t\tfor(i = 1; i <= n; i++)\n\t\t\t{\n\t\t\t\tout.print(ans[i] + \" \");\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout.println(\"NO\");\n\t\t}\n\t\tout.flush();\n\t}\n}\n \nclass FastReader\n{\n\tBufferedReader br;\n\tStringTokenizer st;\n \n\tpublic FastReader()\n\t{\n\t    br = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n\tpublic String next() throws IOException\n\t{\n\t    if(st == null || !st.hasMoreElements())\n\t    {\n\t        st = new StringTokenizer(br.readLine());\n\t    }\n\n\t    return st.nextToken();\n\t}\n \n\tpublic int nextInt() throws IOException\n\t{\n\t    return Integer.parseInt(next());\n\t}\n \n\tpublic long nextLong() throws IOException\n\t{\n\t    return Long.parseLong(next());\n\t}\n \n\tpublic String nextLine() throws IOException\n\t{\n\t\treturn br.readLine();\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Aman Kumar Singh\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CPlatformsJumping solver = new CPlatformsJumping();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CPlatformsJumping {\n        PrintWriter out;\n        InputReader in;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            this.out = out;\n            this.in = in;\n            int n = ni();\n            int m = ni();\n            int d = ni();\n            int[] arr = new int[m];\n            int sum = 0;\n            int i = 0;\n            for (i = 0; i < m; i++)\n                sum += arr[i] = ni();\n            if (n > sum + (d - 1) * (m + 1)) {\n                pn(\"NO\");\n                return;\n            }\n            int[] stats = new int[n + 1];\n            int pos = 0;\n            int[] sf = new int[m];\n            sf[m - 1] = arr[m - 1];\n            for (i = m - 2; i >= 0; i--)\n                sf[i] += sf[i + 1] + arr[i];\n            d = Math.min(d, n);\n            for (i = 0; i < m; i++) {\n                if (pos + d - 1 + sf[i] <= n) {\n                    pos += d;\n                    for (int j = pos; j < pos + arr[i]; j++)\n                        stats[j] = i + 1;\n                    pos += arr[i] - 1;\n                } else {\n                    int allowed = n + 1 - sf[i] - pos;\n                    pos += allowed;\n                    for (int j = pos; j < pos + arr[i]; j++)\n                        stats[j] = i + 1;\n                    pos += arr[i];\n                }\n            }\n            pn(\"YES\");\n            for (i = 1; i <= n; i++)\n                p(stats[i] + \" \");\n            pn(\"\");\n        }\n\n        int ni() {\n            return in.nextInt();\n        }\n\n        void pn(String zx) {\n            out.println(zx);\n        }\n\n        void p(Object o) {\n            out.print(o);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new UnknownError();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n \nimport static java.lang.Math.*;\n \npublic class Solution implements Runnable \n{\n\tstatic class InputReader \n\t{\n\t\tprivate InputStream stream;private byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\tprivate SpaceCharFilter filter;\n\t\tprivate BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        public InputReader(InputStream stream){this.stream = stream;}\n\t\tpublic int read(){if (numChars==-1) throw new InputMismatchException();if (curChar >= numChars){curChar = 0;try{numChars = stream.read(buf);}catch (IOException e){throw new InputMismatchException();\t}if(numChars <= 0)return -1;}return buf[curChar++];}\n     \tpublic String nextLine(){String str = \"\";try{str = br.readLine();}catch (IOException e){e.printStackTrace();}return str;}\n\t\tpublic int nextInt(){int c = read();\twhile(isSpaceChar(c))c = read();\tint sgn = 1; if (c == '-'){sgn = -1;c = read();\t}int res = 0;do{if(c<'0'||c>'9') throw new InputMismatchException();res *= 10;res += c - '0';c = read();}while (!isSpaceChar(c));return res * sgn;}\n        public long nextLong(){int c = read();while (isSpaceChar(c))c = read();int sgn = 1;if (c == '-'){sgn = -1;c = read();}long res = 0;do{if (c < '0' || c > '9')throw new InputMismatchException();res *= 10;res += c - '0';c = read();}while (!isSpaceChar(c));return res * sgn;}\n\t\tpublic double nextDouble(){int c = read();while (isSpaceChar(c))c = read();int sgn = 1;if (c == '-'){sgn = -1;c = read();}double res = 0;while (!isSpaceChar(c) && c != '.'){if (c == 'e' || c == 'E')return res * Math.pow(10, nextInt());if (c < '0' || c > '9')\n\t\tthrow new InputMismatchException();res *= 10;res += c - '0';c = read();}if (c == '.'){c = read();double m = 1;while (!isSpaceChar(c)){if (c == 'e' || c == 'E')return res * Math.pow(10, nextInt());if (c < '0' || c > '9')throw new InputMismatchException();m /= 10;res += (c - '0') * m;c = read();}}return res * sgn;}\n        public String readString(){int c = read();while (isSpaceChar(c))c = read();StringBuilder res = new StringBuilder();do{res.appendCodePoint(c);c = read();}while (!isSpaceChar(c));return res.toString();}\n\t\tpublic boolean isSpaceChar(int c){if (filter != null)return filter.isSpaceChar(c);return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;}\n\t\tpublic String next(){return readString();}\n        public interface SpaceCharFilter{public boolean isSpaceChar(int ch);}\n\t}\n\t\t\n\tpublic static void main(String args[]) throws Exception{new Thread(null, new Solution(),\"Main\",1<<27).start();}\n\n\tpublic static long gcd(long a, long b) { \tif (a == 0) return b; return gcd(b % a, a);} \n  \n\tpublic static long findGCD(long arr[], int n) { \tlong result = arr[0]; for (int i = 1; i < n; i++) result = gcd(arr[i], result);return result; }\t \n\t\n\tstatic void sortbycolomn(long arr[][], int col)\n    { \n        Arrays.sort(arr, new Comparator<long[]>() { \n        @Override              \n        public int compare(final long[] entry1,final long[] entry2) { \n            if (entry1[col] > entry2[col])return 1; \n            else return -1; \n        } \n        });   \n    }\n\n\tpublic void run()\n    {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n\t\t\n\t\tint n=in.nextInt();\n\t\tint m=in.nextInt();\n\t\tint d=in.nextInt();\n\t\tint sum=0;\n\t\tint[] arr=new int[m];\n\t\tfor(int i=0;i<m;i++){ arr[i]=in.nextInt(); sum+=arr[i]; }\n\t\tint temp=n-sum+m+1;\n\t\tif(temp%d==0)\n\t\t    temp=temp/d;\n\t\telse\n\t\t    temp=temp/d+1;\n\t\t//w.println(temp);\n\t\tif(temp>(m+1)){\n\t\t    w.println(\"NO\");\n\t\t}\n\t\telse{\n\t\t    w.println(\"YES\");\n\t\t    int[] ans=new int[n];\n\t\t    int pad=0;\n\t\t    int flag=0;\n\t\t    int mflag=0;\n\t\t    int i=0;\n\t\t    for(i=0;i<n && pad<m;){\n\t\t        if(flag==0){\n\t\t            int j=i;\n\t\t            while(i<j+d-1 && i<n){\n\t\t                if(n-i<=sum){\n\t\t                    mflag=1;\n\t\t                    break;\n\t\t                }\n\t\t                ans[i]=0;\n\t\t                i++;\n\t\t            }\n\t\t            flag=1;\n\t\t        }\n\t\t        else{\n\t\t            int j=arr[pad];\n\t\t            while(j>0 && i<n){\n\t\t                ans[i]=pad+1;\n\t\t                sum--;\n\t\t                j--;\n\t\t                i++;\n\t\t            }\n\t\t            pad++;\n\t\t            flag=0;\n\t\t        }\n\t\t        \n\t\t        if(mflag==1)\n\t\t            break;\n\t\t    }\n\t\t    if(mflag==1){\n\t\t        while(i<n && pad<m){\n\t\t            int j=arr[pad];\n\t\t            while(j>0 && i<n){\n\t\t                ans[i]=pad+1;\n\t\t                j--;\n\t\t                i++;\n\t\t            }\n\t\t            pad++;\n\t\t        }\n\t\t    }\n\t\t    \n\t\t    for(i=0;i<n;i++)\n\t\t        w.print(ans[i]+\" \");\n\t\t        w.println();\n\t\t  \n\t\t    \n\t\t}\n\t\t\n\t    w.flush();\n        w.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\ndp = [d - 1] * (m + 1)\np = (m + 1) * (d - 1) + sum(c)\nif p < n:\n    print(\"NO\")\nelse:\n    k = 0\n    while p > n:\n        if dp[k] > 0:\n            p -= 1\n            dp[k] -= 1\n        else:\n            k += 1\n    ans = ['0'] * p\n    k = 0\n    for i in range(m):\n        for j in range(dp[i]):\n            k += 1\n        for j in range(c[i]):\n            ans[k] = str(i + 1)\n            k += 1\n    print(\"YES\")\n    print(\" \".join(ans))\n"
        },
        {
            "language": 4,
            "solution": "// package contest;\n\nimport java.io.*;\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.Deque;\nimport java.util.StringTokenizer;\n\npublic class teama {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int m = Integer.parseInt(st.nextToken());\n        int d = Integer.parseInt(st.nextToken());\n\n        int loc = 1;\n        int[] ret = new int[n+1];\n        int[] plats = new int[m+1];\n        st = new StringTokenizer(br.readLine());\n        for (int i = 0; i < m; i++) {\n            plats[i+1] = Integer.parseInt(st.nextToken());\n        }\n        int[] suf = new int[m + 2];\n        suf[suf.length-1] = n+1;\n        for (int i = m; i >= 0; i--) {\n            suf[i] = suf[i + 1] - plats[i];\n        }\n//        System.out.println(Arrays.toString(suf));\n        for(int i= 0; i<=m; i++){\n            for(int j = 1; j <= plats[i]; j++, loc++){\n                ret[loc] = i;\n            }\n            loc--;\n            int dist = Math.min(d, suf[i+1] - loc);\n            loc += dist;\n        }\n        \n        if(loc == n+1){\n            pw.println(\"YES\");\n            for(int i = 1; i<ret.length; i++) pw.print(ret[i] + \" \" );\n        }else{\n            pw.println(\"NO\");\n        }\n        \n        pw.close();\n        br.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": " \ndef nextP(n,l,lastPos,posl):\n\n    if n-(lastPos) == sum(l[posl:]) or n - (lastPos + d) < sum(l[posl+1:]) :\n        #if the remaining positions of the river is eqaul \n        #to the length of the planks or \n        # the remaining planks won't fit if the next plank \n        # is  placed with d-1 space in between them then no space is given for the rest of the planks\n        return 0\n    else:\n        return d-1\n        #the above condition is not true means max space \n        # which allows d jumping forward is given which would be d - 1\n    \n\ndef find(n,m,d,l):\n    river = [0 for i in range(n)] # all the positions of the river\n   # res  = -2 # initalized to a number which would not affect the if condition at the end of this function\n    \n    \n    j = 0\n    posl = 0 \n    z = 1\n    posr = 0 \n\n    while posl < m:\n \n        res = nextP(n,l,posr,posl)\n       \n        \n        \n        j = posr+res\n        lim = j+ l[posl]\n        while j < lim:\n            river[j] = z\n            j += 1\n        z += 1\n        \n        posr += res + l[posl]\n \n        if posr >= n:\n            break\n        posl +=1\n    #end of while loop\n\n\n    if n - (posr) >= d: # if the spaces remaining after placing all the planks is greater than the jump distance.\n        print(\"No\")\n    elif posr > n:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n        for i in range(n):\n            print(river[i],end = \" \")\n \nn,m,d = map(int,input().split())\nl = [int(i) for i in input().split()]\nfind(n,m,d,l)"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int,minp().split())\n\ndef solve():\n\tn, m, d = mints()\n\n\ta = list(mints())\n\tb = [0]*m\n\ts = sum(a)\n\tp = 0\n\tfor i in range(m):\n\t\tb[i] = p + d\n\t\tp = p + d + a[i] - 1\n\tif b[-1] + a[-1] - 1 + d < n + 1:\n\t\tprint(\"NO\")\n\t\treturn\n\tp = n + 1\n\tc = [0]*n\n\tfor i in range(m-1,-1,-1):\n\t\tif b[i] + a[i] - 1 >= p:\n\t\t\tb[i] = p - a[i]\n\t\tp = b[i]\n\t\t#print(i, b[i], a[i], b[i]+a[i])\n\t\tfor j in range(b[i], b[i] + a[i]):\n\t\t\tc[j-1] = i + 1\n\tprint(\"YES\")\n\tprint(*c)\n\nsolve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5e5 + 10;\nconst int inf = 0x3f3f3f3f;\nint n, m, a[N];\nint ans[N];\nint sum = 0;\nint main() {\n  int d;\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &a[i]);\n    sum += a[i];\n  }\n  int bank = (n - sum);\n  if (bank > (d - 1) * (m + 1)) {\n    printf(\"NO\\n\");\n    return 0;\n  }\n  int tmpl = 0, now = 1, nowl = 0;\n  for (int i = 1; i <= n;) {\n    for (int j = 1; j < d && tmpl < bank; j++) {\n      ans[i] = 0;\n      tmpl++;\n      i++;\n    }\n    for (int j = 1; j <= a[now] && now <= m; j++) {\n      ans[i] = now;\n      i++;\n    }\n    now++;\n  }\n  printf(\"YES\\n\");\n  for (int j = 1; j <= n; j++) {\n    printf(\"%d%c\", ans[j], \" \\n\"[j == n]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\n\npublic class Main {\n\n    static StringBuilder data = new StringBuilder();\n    final static FastReader in = new FastReader();\n\n\n    public static void main(String[] args) {\n        int n = in.inT(), m = in.inT(), d = in.inT(), a[] = new int[m+1], b[] = new int[n + 2], f = 0, s = 0, k = 1;\n\n        for (int i = 1; i <= m; i++) {\n            a[i] = in.inT();\n            s += a[i];\n        }\n        f = n - s;\n\n        boolean p = false;\n        if (n - (2 * (d-1)) - ((m - 1) * (d-1)) <= s) {\n            data.append(\"YES\").append('\\n');\n            for (int i = 0; i < n; i++) {\n                if (f > 0 && !p) {\n                    for (int j = 0; j < (f>=d?d-1:f); j++) {\n                        data.append(0).append(\" \");\n                    }\n                    f-=(f>=d?d-1:f);\n                    p=true;\n                } else {\n                    if(k<=m){\n                    for (int j = 0; j < a[k]; j++) {\n                        data.append(k).append(\" \");\n                    }\n                    k++;\n                    p=false;}\n                }\n            }\n        } else {\n            data.append(\"NO\");\n        }\n\n        System.out.println(data);\n    }\n\n\n    static void fileOut(String s) {\n        File out = new File(\"output.txt\");\n        try {\n            FileWriter fw = new FileWriter(out);\n            fw.write(s);\n            fw.flush();\n            fw.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        public FastReader(String path) {\n            try {\n                br = new BufferedReader(new\n                        InputStreamReader(new FileInputStream(path)));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int inT() {\n            return Integer.parseInt(next());\n        }\n\n        long lonG() {\n            return Long.parseLong(next());\n        }\n\n        float floaT() {\n            return Float.parseFloat(next());\n        }\n\n        double doublE() {\n            return Double.parseDouble(next());\n        }\n\n\n        String line() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n \nimport sys\nfrom itertools import accumulate\n \ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nN, M, d = MAP()\nA = LIST()\n\ncur = 0\nA2 = []\nfor a in A:\n    cur += d\n    A2.append((cur, cur+a))\n    cur += a - 1\ncur += d\nA2.append((cur, cur+1))\n\nif cur < N+1:\n    NO()\n    exit()\n\nB = [0] * (M+1)\nfor i in range(M, -1, -1):\n    l, r = A2[i]\n    if cur - (d - 1) >= N+1:\n        cur -= d - 1\n        B[i] = d - 1\n    else:\n        dist = cur - (N+1)\n        cur -= dist\n        B[i] = dist\n        break\nB = list(accumulate(B))\n\nans = [0] * N\nfor i, (l, r) in enumerate(A2[:-1]):\n    l -= B[i]\n    r -= B[i]\n    for j in range(l-1, r-1):\n        ans[j] = i + 1\nYES()\nprint(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(2)\nconst int N = 3e5 + 5;\nconst int mod = 1e9 + 7;\nusing namespace std;\nint m, d, n, t, ans[1111];\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0);\n  cin >> n >> m >> d;\n  queue<int> qc;\n  stack<int> sc;\n  int sum = 0;\n  for (int i = 0; i < m; ++i) {\n    cin >> t;\n    qc.push(t);\n    sc.push(t);\n    sum += t;\n  }\n  int r = n, cnt = m;\n  while (!sc.empty()) {\n    int temp = sc.top();\n    sc.pop();\n    while (temp--) ans[r--] = cnt;\n    --cnt;\n  }\n  ++r;\n  int pos = 0;\n  while (pos < n + 1) {\n    if (pos + d >= n + 1) break;\n    if (r <= n)\n      pos += d;\n    else {\n      cout << \"NO\";\n      return 0;\n    }\n    if (ans[pos] == 0) {\n      int temp = ans[r];\n      ans[pos] = temp;\n      int len = 0;\n      for (int i = r; ans[i] == ans[i + 1]; ++len, ++i) ans[i] = 0;\n      r += len + 1;\n      ans[r - 1] = 0;\n      while (len--) ans[++pos] = temp;\n    }\n  }\n  cout << \"YES\" << endl;\n  for (int i = 1; i <= n; ++i) cout << ans[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d, i, j, k, no, rem;\n  cin >> n >> m >> d;\n  int c, total;\n  vector<int> p, q, r;\n  int sum = 0;\n  for (i = 0; i < m; i++) {\n    cin >> c;\n    sum += c;\n    q.push_back(c);\n  }\n  rem = n - sum;\n  if (rem < 0) {\n    cout << \"NO\";\n    return 0;\n  }\n  if (d == 1) {\n    no = 0;\n    if (rem != 0) {\n      cout << \"NO\";\n      return 0;\n    } else {\n      for (i = 0; i < m; i++) {\n        for (j = 0; j < q[i]; j++) {\n          r.push_back(i + 1);\n        }\n      }\n      cout << \"YES\" << '\\n';\n      for (i = 0; i < n; i++) {\n        cout << r[i] << \" \";\n      }\n      return 0;\n    }\n  } else {\n    d--;\n    no = rem / d;\n  }\n  for (i = 0; i < no; i++) {\n    p.push_back(d);\n  }\n  if (rem % d != 0) {\n    p.push_back(rem % d);\n  }\n  i = 0;\n  int lenq = q.size(), lenp = p.size();\n  while ((i < lenq) && (i < lenp)) {\n    for (k = 0; k < p[i]; k++) {\n      r.push_back(0);\n    }\n    for (k = 0; k < q[i]; k++) {\n      r.push_back(i + 1);\n    }\n    i++;\n  }\n  if ((i == lenq) && (i != lenp)) {\n    if ((lenp - lenq) < 2) {\n      for (i = 0; i < p[lenp - 1]; i++) r.push_back(0);\n      cout << \"YES\" << '\\n';\n      for (i = 0; i < r.size(); i++) {\n        cout << r[i] << \" \";\n      }\n    } else {\n      cout << \"NO\";\n      return 0;\n    }\n  } else {\n    for (j = i; j < lenq; j++) {\n      for (k = 0; k < q[j]; k++) {\n        r.push_back(j + 1);\n      }\n    }\n    cout << \"YES\" << '\\n';\n    for (i = 0; i < r.size(); i++) {\n      cout << r[i] << \" \";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import deque\ninput=sys.stdin.readline\n\nn, m, d=map(int, input().split())\na=deque(map(int, input().split()))\nans=[0]*(n+1); p=sum(a)\nif p+(m+1)*d-m<=n: print(\"NO\")\nelse:\n    print(\"YES\")\n    l=0\n    for i in range(m):\n        if l+d+p-1<=n: \n            l+=d\n        else: \n            l+=n-(l+p-1)\n        for j in range(l, l+a[i]):\n            ans[j]=(i+1); l=j\n        p-=a[i]\n    print(*ans[1:])"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 10;\nvoid solve() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> a(m);\n  int sum = 0;\n  for (int i = 0; i < m; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  if (n - sum > (d - 1) * (m + 1)) {\n    cout << \"NO\";\n    return;\n  }\n  cout << \"YES\\n\";\n  int Nzero = n - sum, j = 0;\n  for (int i = 0; i < n;) {\n    int x = a[j];\n    int y = d - 1;\n    while (y > 0 && Nzero > 0) {\n      cout << 0 << \" \";\n      i++;\n      y--;\n      Nzero--;\n    }\n    while (j < m && x > 0) {\n      cout << j + 1 << \" \";\n      i++;\n      x--;\n    }\n    j++;\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int tt = 1;\n  for (int i = 1; i <= tt; i++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nconst int mod = 1e9 + 7;\nint n, m, t, q;\nvector<int> G[N];\nmap<int, int> M;\nset<int> S;\nstruct p {\n  int x, y;\n};\nint a[N], ans[N];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &t);\n  int sum = 0;\n  for (int i = (1); i <= (m); i++) scanf(\"%d\", &a[i]), sum += a[i];\n  int id = 0;\n  for (int i = (1); i <= (m); i++) {\n    if (id + t + sum - 1 >= n) {\n      int v = n;\n      for (int j = (m); j >= (i); j--) {\n        for (int k = (1); k <= (a[j]); k++) {\n          ans[v] = j;\n          v--;\n        }\n      }\n      id = n + 1;\n      break;\n    } else {\n      for (int j = (id + t); j <= (id + t + a[i] - 1); j++) ans[j] = i;\n      id = id + t + a[i] - 1;\n    }\n    sum = sum - a[i];\n  }\n  if (n - id < t) {\n    printf(\"YES\\n\");\n    for (int i = (1); i <= (n); i++) printf(\"%d \", ans[i]);\n  } else\n    printf(\"NO\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast,no-stack-protector\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma comment(linker, \"/STACK:1024000000,1024000000\")\nusing namespace std;\nlong long x, y, z, a, sum, indx = 0, last = -1;\nvector<long long> q, p(1005);\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  ;\n  cin >> x >> y >> z;\n  for (int i = 0; i < y; i++) {\n    cin >> a;\n    q.push_back(a);\n    sum += a;\n  }\n  for (int i = 0; i < x; i++) {\n    if (sum + i == x) {\n      for (int j = indx; j < y; j++) {\n        while (q[j] > 0) {\n          p[i++] = j + 1;\n          q[j]--;\n        }\n      }\n      last = x;\n      break;\n    }\n    if (i - last == z && indx < y) {\n      long long l = i + q[indx];\n      while (i < l) {\n        p[i++] = indx + 1;\n      }\n      sum -= q[indx];\n      last = --i;\n      indx++;\n    }\n  }\n  if (last + z < x) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < x; i++) {\n      cout << p[i] << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int k = n;\n  int a[m];\n  int sum = 0;\n  for (int i = 0; i < m; i++) {\n    cin >> a[i];\n    sum += a[i];\n    if (a[i] > 1) k -= (a[i] - 1);\n  }\n  if (d * (m + 1) <= k) {\n    cout << \"NO\";\n    return 0;\n  }\n  vector<int> v(n, 0);\n  int g = (k - m);\n  int j = -1;\n  for (int i = 0; i < m; i++) {\n    int x;\n    if (d > g) {\n      x = g + 1;\n      g = 0;\n    } else {\n      x = d;\n      g -= (d - 1);\n    }\n    j += x;\n    for (int k = j; k < (j + a[i]); k++) v[k] = i + 1;\n    j = j + a[i] - 1;\n  }\n  cout << \"YES\" << endl;\n  for (int i = 0; i < n; i++) cout << v[i] << \" \";\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys,os,math\nfrom collections import Counter, defaultdict, deque\nimport bisect\nfrom sys import stdin, stdout\nfrom itertools import repeat\nimport Queue\n\n\n# sys.stdin = open('input')\n# n, k = map(int, raw_input().split())\n# da = map(int, raw_input().split())\n# db = map(int, raw_input().split())\n\n\n\ndef main():\n    n, m, d = map(int, raw_input().split())\n    ans = [0 for i in range(n+1)]\n    dx = [0 for i in range(m)]\n    da = map(int, raw_input().split())\n    sm = sum(da)\n    st = 0\n    for idx, i in enumerate(da):\n        ta = st + d\n        # print ta,n-ta+1,sm\n        if n-ta+1<=sm:\n            ta = n+1-sm\n        dx[idx] = ta\n        st = ta+i-1\n        sm -= i\n    if st + d >= n+1:\n        print 'YES'\n    else:\n        print 'No'\n        return\n    for idx, i in enumerate(dx):\n        for jdx in range(i, i+da[idx]):\n            ans[jdx] = idx+1\n    print ' '.join(map(str, ans[1:]))\nmain()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \npublic class Solution {\n\t\n\tstatic void printArray(int[] a) {\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tSystem.out.print(String.valueOf(a[i]) + \" \");\n\t\t}\n\t}\n\t\n\tstatic int[] solve(int n, int m, int d, int[] c) {\n\t\tint cSum = 0;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tcSum += c[i];\n\t\t}\n\t\tif ((m + 1) * (d - 1) + cSum < n) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tint water = n - cSum;\n\t\t\tint[] ret = new int[n];\n\t\t\tint cIndex = 0;\n\t\t\tint continueWater = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (continueWater < d - 1 && water > 0) {\n\t\t\t\t\tret[i] = 0;\n\t\t\t\t\tcontinueWater++;\n\t\t\t\t\twater--;\n\t\t\t\t} else {\n\t\t\t\t\tfor (int j = 1; j <= c[cIndex]; j++, i++) {\n\t\t\t\t\t\tret[i] = cIndex + 1;\n\t\t\t\t\t}\n\t\t\t\t\ti--;\n\t\t\t\t\tcIndex++;\n\t\t\t\t\tcontinueWater = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t}\n \n    private static final Scanner scanner = new Scanner(System.in);\n \n    public static void main(String[] args) throws IOException {\n    \tString[] strs = scanner.nextLine().split(\" \");\n    \tint n = Integer.valueOf(strs[0]);\n    \tint m = Integer.valueOf(strs[1]);\n    \tint d = Integer.valueOf(strs[2]);\n    \tint[] c = new int[m];\n    \tstrs = scanner.nextLine().split(\" \");\n    \tfor (int i = 0; i < m; i++) {\n    \t\tc[i] = Integer.valueOf(strs[i]);\n    \t}\n    \tint[] ret = solve(n, m, d, c);\n    \tif (ret != null) {\n    \t\tSystem.out.println(\"YES\");\n    \t\tprintArray(ret);\n    \t} else {\n    \t\tSystem.out.println(\"NO\");\n    \t}\n    \tscanner.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nfrom math import sqrt,factorial,gcd,log2,inf,ceil\n# map(int,input().split())\n# l = list(map(int,input().split()))\nmod = 10**9 + 7\n\nn,m,d = map(int,input().split())\n\nl = list(map(int,input().split()))\nc = sum(l)\ncur = 0\nextra = 0\nans = 0\ni = 0\nz = (n+1)-sum(l)\nans = []\nposn = []\nprev = z\nfor i in range(m):\n    posn.append((prev,prev+l[i]))\n    prev = prev+l[i]\n\n# print(posn)\ni = 0\nwhile cur<n+1:\n\n    flag = 0\n    count = 0\n\n    while count!=d and cur<n+1:\n        if posn!=[]:\n            if posn[0][0] == cur:\n                flag = 1\n                break\n        count+=1\n        cur+=1\n    for j in range(count-1):\n        ans.append(0)\n\n\n    if posn!=[]:\n        for j in range(l[i]):\n            ans.append(i+1)\n\n        cur+=l[i]-1\n        # print(ans,cur)\n    else:\n        if cur < n+1:\n            print('NO')\n            exit()\n        else:\n            break\n\n\n    # print(ans)\n\n    posn.pop(0)\n\n\n    i+=1\nprint('YES')\n# ans.pop(0)\nprint(*ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\nimport java.io.*;\nimport java.math.*;\n\n/**\n * @author Naitik\n * \n */\n\npublic class A\t\t\n{ \n\t\t\t static FastReader sc=new FastReader(); \n\t\t\t static long dp[][];\n\t\t\t static int mod=1000000007;\n\t\t\t static int max;\n\t\t\t static int bit[];\n\t\t\t static long ans;\n\t\t\t static HashMap<Integer,Integer> map;\n\t\t\t\n\t\t\t\t\n\t\t     public static void main(String[] args)\n\t\t    {\n\t\t    \t//CHECK FOR N=1\n\t\t        \t//CHECK FOR N=1\n\t\t\t  PrintWriter out=new PrintWriter(System.out);\n\t\t\t  StringBuffer sb=new StringBuffer(\"\");\n\t\t\t \n\t\t  int ttt=1;\n\t\t     //ttt =i();\n\t\t   \n\t\t    outer :while (ttt-- > 0) \n\t\t\t{\t\n\t\t    \tint n=i(),m=i(),d=i();\n\t\t    \tint A[]=new int[m+1];\n\t\t    \tfor(int i=1;i<=m;i++) {\n\t\t    \t\tA[i]=i();\n\t\t    \t}\n\t\t    \tlong suf[]=new long[m+1];\n\t\t    \tsuf[m]=A[m];\n\t\t    \tfor(int i=m-1;i>=0;i--) {\n\t\t    \t\tsuf[i]=suf[i+1]+A[i];\n\t\t    \t}\n\t\t    \tint B[]=new int[n+1];\n\t\t    \tint i=0;\n\t\t    \tint j=1;\n\t\t    \twhile(i<n+1) {\n\t\t    \t\tif(i+d<n+1) {\n\t\t    \t\t\tif(B[i+d]!=0) {\n\t\t    \t\t\t\ti+=d;\n\t\t    \t\t\t\tcontinue;\n\t\t    \t\t\t}\n\t\t    \t\t}\n\t\t    \t\tif(i+d>=n+1)\n\t\t    \t\t\tbreak;\n\t\t    \t\tif(j==m+1) {\n\t\t    \t\t\tSystem.out.println(\"NO\");\n\t\t    \t\t\treturn;\n\t\t    \t\t}\n\t\t    \t\ti+=d;\n\t\t    \t\tint y=n+1-i;\n\t\t    \t\t//System.out.println(y+\" \"+suf[j]);\n\t\t    \t\tif(y>=suf[j]) {\n\t\t    \t\t\tint c=A[j];\n\t\t    \t\t\tint k=i;\n\t\t    \t\t\twhile(c>0) {\n\t\t    \t\t\t\tB[k]=j;\n\t\t    \t\t\t\tk++;\n\t\t    \t\t\t\tc--;\n\t\t    \t\t\t}\n\t\t    \t\t\ti=k-1;\n\t\t    \t\t\tj++;\n\t\t    \t\t}\n\t\t    \t\telse {\n\t\t    \t\t\tlong df=suf[j]-y;\n\t\t    \t\t\t//System.out.println(df+\" \"+i);\n\t\t    \t\t\tQueue<Integer> q=new LinkedList<Integer>();\n\t\t    \t\t\tint k=i;\n\t\t    \t\t\tfor(;i>0 && df>0;i--) {\n\t\t    \t\t\t\tif(B[i]==0) {\n\t\t    \t\t\t\t\tdf--;\n\t\t    \t\t\t\t}\n\t\t    \t\t\t\telse {\n\t\t    \t\t\t\t\tq.add(B[i]);\n\t\t    \t\t\t\t}\n\t\t    \t\t\t}\n\t\t    \t\t\twhile(!q.isEmpty()) {\n\t\t    \t\t\t\tB[i]=q.poll();\n\t\t    \t\t\t\ti++;\n\t\t    \t\t\t}\n\t\t    \t\t\tfor(;j<=m;j++) {\n\t\t    \t\t\t\twhile(A[j]>0) {\n\t\t    \t\t\t\t\tB[i]=j;\n\t\t    \t\t\t\t\ti++;\n\t\t    \t\t\t\t\tA[j]--;\n\t\t    \t\t\t\t}\n\t\t    \t\t\t}\n\t\t    \t\t\tbreak;\n\t\t    \t\t}\n\t\t    \t\t\n\t\t    \t}\n\t\t    \tif(j!=m+1) {\n\t\t    \t\tlong df=suf[j];\n\t    \t\t\tQueue<Integer> q=new LinkedList<Integer>();\n\t    \t\t\tint k=n;\n\t    \t\t\ti=k;\n\t    \t\t\tfor(;i>0 && df>0;i--) {\n\t    \t\t\t\tif(B[i]==0) {\n\t    \t\t\t\t\tdf--;\n\t    \t\t\t\t}\n\t    \t\t\t\telse {\n\t    \t\t\t\t\tq.add(B[i]);\n\t    \t\t\t\t}\n\t    \t\t\t\tif(df==0)\n\t    \t\t\t\t\tbreak;\n\t    \t\t\t}\n\t    \t\t\twhile(!q.isEmpty()) {\n\t    \t\t\t\tB[i]=q.poll();\n\t    \t\t\t\ti++;\n\t    \t\t\t}\n\t    \t\t\tfor(;j<=m;j++) {\n\t    \t\t\t\twhile(A[j]>0) {\n\t    \t\t\t\t\tB[i]=j;\n\t    \t\t\t\t\ti++;\n\t    \t\t\t\t\tA[j]--;\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t\t    \t}\n\t\t    \tSystem.out.println(\"YES\");\n\t\t    \tfor(i=1;i<=n;i++) {\n\t\t    \t\tout.print(B[i]+\" \");\n\t\t    \t}\n\t\t    \t\n\t\t    \t\n\t\t    \t\n\t\t\t}\n\t\t   out.close();\n\t\t  // System.out.println(sb.toString());\n\t\t   \n\t\t   \n\t\t   //CHECK FOR N=1                    //CHECK FOR M=0\n\t\t    //CHECK FOR N=1                    //CHECK FOR M=0\n\t\t   \n    }\n\t\t     \n\n\n\nstatic class Pair implements Comparable<Pair>\n     {\n    \t int x;\n    \t int y;\n    \t Pair(int x,int y){\n    \t\t this.x=x;\n    \t\t this.y=y;\n    \t\t \n    \t }\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\tif(this.x>o.x)\n\t\t\t\treturn 1;\n\t\t\telse if(this.x<o.x)\n\t\t\t\treturn -1;\n\t\t\telse {\n\t\t\t\tif(this.y>o.y)\n\t\t\t\t\treturn 1;\n\t\t\t\telse if(this.y<o.y)\n\t\t\t\t\treturn -1;\n\t\t\t\telse\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* FOR TREE MAP PAIR USE */\n\t\t\n//\t\tpublic int compareTo(Pair o) {\n// \t\t\tif (x > o.x) {\n// \t\t\t\treturn 1;\n// \t\t\t}\n// \t\t\tif (x < o.x) {\n// \t\t\t\treturn -1;\n// \t\t\t}\n// \t\t\tif (y > o.y) {\n// \t\t\t\treturn 1;\n// \t\t\t}\n// \t\t\tif (y < o.y) {\n// \t\t\t\treturn -1;\n// \t\t\t}\n// \t\t\treturn 0;\n// \t\t}\n//\t\tpublic int hashCode() \n//\t\t{ \n//\t\t\tfinal int temp = 14; \n//\t\t\tint ans = 1; \n//\t\t\tans =x*31+y*13; \n//\t\t\treturn ans; \n//\t\t} \n//  \n//\t\t// Equal objects must produce the same \n//\t\t// hash code as long as they are equal \n//\t\t@Override\n//\t\tpublic boolean equals(Object o) \n//\t\t{ \n//\t\t\tif (this == o) { \n//\t\t\t\treturn true; \n//\t\t\t} \n//\t\t\tif (o == null) { \n//\t\t\t\treturn false; \n//\t\t\t} \n//\t\t\tif (this.getClass() != o.getClass()) { \n//\t\t\t\treturn false; \n//\t\t\t} \n//\t\t\tPair other = (Pair)o; \n//\t\t\tif (this.x != other.x || this.y!=other.y) { \n//\t\t\t\treturn false; \n//\t\t\t} \n//\t\t\treturn true; \n//\t\t} \t\n\t\t\n     }\n//FRENWICK TREE\nstatic void update(int i, int x){\n\tfor(; i < bit.length; i += (i&-i))\n\t\tbit[i] += x;\n}\n\nstatic int sum(int i){\n\tint ans = 0;\n\tfor(; i > 0; i -= (i&-i))\n\t\tans += bit[i];\n\treturn ans;\n}\n//END\nstatic void add(int v) {\n\tif(!map.containsKey(v)) {\n\t\tmap.put(v, 1);\n\t}\n\telse {\n\t\tmap.put(v, map.get(v)+1);\n\t}\n}\nstatic void remove(int v) {\n\tif(map.containsKey(v)) {\n\t\tmap.put(v, map.get(v)-1);\n\t\tif(map.get(v)==0)\n\t\t\tmap.remove(v);\n\t}\n}\nstatic int[] copy(int A[]) {\n\tint B[]=new int[A.length];\n\tfor(int i=0;i<A.length;i++) {\n\t\tB[i]=A[i];\n\t}\n\treturn B;\n}\nstatic long[] copy(long A[]) {\n\tlong B[]=new long[A.length];\n\tfor(int i=0;i<A.length;i++) {\n\t\tB[i]=A[i];\n\t}\n\treturn B;\n}\nstatic int[] input(int n) {\n\tint A[]=new int[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.nextInt();\n\t   }\n\t   return A;\n   }\nstatic long[] inputL(int n) {\n\tlong A[]=new long[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.nextLong();\n\t   }\n\t   return A;\n   }\nstatic String[] inputS(int n) {\n\tString A[]=new String[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.next();\n\t   }\n\t   return A;\n   }\nstatic long sum(int A[]) {\n\tlong sum=0;\n\tfor(int i : A) {\n\t\tsum+=i;\n\t}\n\treturn sum;\n}\nstatic long sum(long A[]) {\n\tlong sum=0;\n\tfor(long i : A) {\n\t\tsum+=i;\n\t}\n\treturn sum;\n}\nstatic void reverse(long A[]) {\n\tint n=A.length;\n\tlong B[]=new long[n];\n\tfor(int i=0;i<n;i++) {\n\t\tB[i]=A[n-i-1];\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tA[i]=B[i];\n\t\n}\nstatic void reverse(int A[]) {\n\tint n=A.length;\n\tint B[]=new int[n];\n\tfor(int i=0;i<n;i++) {\n\t\tB[i]=A[n-i-1];\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tA[i]=B[i];\n\t\n}\nstatic void input(int A[],int B[]) {\n\t   for(int i=0;i<A.length;i++) {\n\t\t   A[i]=sc.nextInt();\n\t\t   B[i]=sc.nextInt();\n\t   }\n}\nstatic int[][] input(int n,int m){\n\tint A[][]=new int[n][m];\n\tfor(int i=0;i<n;i++) {\n\t\tfor(int j=0;j<m;j++) {\n\t\t\tA[i][j]=i();\n\t\t}\n\t}\n\treturn A;\n}\nstatic char[][] charinput(int n,int m){\n\tchar A[][]=new char[n][m];\n\tfor(int i=0;i<n;i++) {\n\t\tString s=s();\n\t\tfor(int j=0;j<m;j++) {\n\t\t\tA[i][j]=s.charAt(j);\n\t\t}\n\t}\n\treturn A;\n}\nstatic int find(int A[],int a) {\n\t  if(A[a]==a)\n\t\t  return a;\n\t  return A[a]=find(A, A[a]);\n}\nstatic int max(int A[]) {\n\tint max=Integer.MIN_VALUE;\n\tfor(int i=0;i<A.length;i++) {\n\t\tmax=Math.max(max, A[i]);\n\t}\n\treturn max;\n}\nstatic int min(int A[]) {\n\tint min=Integer.MAX_VALUE;\n\tfor(int i=0;i<A.length;i++) {\n\t\tmin=Math.min(min, A[i]);\n\t}\n\treturn min;\n}\nstatic long max(long A[]) {\n\tlong max=Long.MIN_VALUE;\n\tfor(int i=0;i<A.length;i++) {\n\t\tmax=Math.max(max, A[i]);\n\t}\n\treturn max;\n}\nstatic long min(long A[]) {\n\tlong min=Long.MAX_VALUE;\n\tfor(int i=0;i<A.length;i++) {\n\t\tmin=Math.min(min, A[i]);\n\t}\n\treturn min;\n}\nstatic long [] prefix(long A[]) {\n\tlong p[]=new long[A.length];\n\tp[0]=A[0];\n\tfor(int i=1;i<A.length;i++)\n\t\tp[i]=p[i-1]+A[i];\n\treturn p;\n}\nstatic long [] prefix(int A[]) {\n\tlong p[]=new long[A.length];\n\tp[0]=A[0];\n\tfor(int i=1;i<A.length;i++)\n\t\tp[i]=p[i-1]+A[i];\n\treturn p;\n}\nstatic long [] suffix(long A[]) {\n\tlong p[]=new long[A.length];\n\tp[A.length-1]=A[A.length-1];\n\tfor(int i=A.length-2;i>=0;i--)\n\t\tp[i]=p[i+1]+A[i];\n\treturn p;\n}\nstatic long [] suffix(int A[]) {\n\tlong p[]=new long[A.length];\n\tp[A.length-1]=A[A.length-1];\n\tfor(int i=A.length-2;i>=0;i--)\n\t\tp[i]=p[i+1]+A[i];\n\treturn p;\n}\nstatic void fill(int dp[]) {\n\tArrays.fill(dp, -1);\n}\nstatic void fill(int dp[][]) {\n\tfor(int i=0;i<dp.length;i++)\n\tArrays.fill(dp[i], -1);\n}\nstatic void fill(int dp[][][]) {\n\tfor(int i=0;i<dp.length;i++) {\n\t\tfor(int j=0;j<dp[0].length;j++) {\n\t\t\tArrays.fill(dp[i][j],-1);\n\t\t}\n\t}\n}\nstatic void fill(int dp[][][][]) {\n\tfor(int i=0;i<dp.length;i++) {\n\t\tfor(int j=0;j<dp[0].length;j++) {\n\t\t\tfor(int k=0;k<dp[0][0].length;k++) {\n\t\t\tArrays.fill(dp[i][j][k],-1);\n\t\t\t}\n\t\t}\n\t}\n}\nstatic void fill(long dp[]) {\n\tArrays.fill(dp, -1);\n}\nstatic void fill(long dp[][]) {\n\tfor(int i=0;i<dp.length;i++)\n\tArrays.fill(dp[i], -1);\n}\nstatic void fill(long dp[][][]) {\n\tfor(int i=0;i<dp.length;i++) {\n\t\tfor(int j=0;j<dp[0].length;j++) {\n\t\t\tArrays.fill(dp[i][j],-1);\n\t\t}\n\t}\n}\nstatic void fill(long dp[][][][]) {\n\tfor(int i=0;i<dp.length;i++) {\n\t\tfor(int j=0;j<dp[0].length;j++) {\n\t\t\tfor(int k=0;k<dp[0][0].length;k++) {\n\t\t\tArrays.fill(dp[i][j][k],-1);\n\t\t\t}\n\t\t}\n\t}\n}\nstatic int min(int a,int b) {\n\treturn Math.min(a, b);\n}\nstatic int min(int a,int b,int c) {\n\treturn Math.min(a, Math.min(b, c));\n}\nstatic int min(int a,int b,int c,int d) {\n\treturn Math.min(a, Math.min(b, Math.min(c, d)));\n}\nstatic int max(int a,int b) {\n\treturn Math.max(a, b);\n}\nstatic int max(int a,int b,int c) {\n\treturn Math.max(a, Math.max(b, c));\n}\nstatic int max(int a,int b,int c,int d) {\n\treturn Math.max(a, Math.max(b, Math.max(c, d)));\n}\nstatic long min(long a,long b) {\n\treturn Math.min(a, b);\n}\nstatic long min(long a,long b,long c) {\n\treturn Math.min(a, Math.min(b, c));\n}\nstatic long min(long a,long b,long c,long d) {\n\treturn Math.min(a, Math.min(b, Math.min(c, d)));\n}\nstatic long max(long a,long b) {\n\treturn Math.max(a, b);\n}\nstatic long max(long a,long b,long c) {\n\treturn Math.max(a, Math.max(b, c));\n}\nstatic long max(long a,long b,long c,long d) {\n\treturn Math.max(a, Math.max(b, Math.max(c, d)));\n}\n\nstatic long power(long x, long y, long p)\n{\n\n\tif(y==0)\n\t\treturn 1;\n\tif(x==0)\n\t\treturn 0;\n    long res = 1;\n    x = x % p;\n\n    while (y > 0) {\n\n        if (y % 2 == 1)\n            res = (res * x) % p;\n\n        y = y >> 1; \n        x = (x * x) % p;\n    }\n\n    return res;\n}\nstatic void print(int A[]) {\n\tfor(int i : A) {\n\t\tSystem.out.print(i+\" \");\n\t}\n\tSystem.out.println();\n}\nstatic void print(long A[]) {\n\tfor(long i : A) {\n\t\tSystem.out.print(i+\" \");\n\t}\n\tSystem.out.println();\n}\nstatic long mod(long x) {\n\t  return ((x%mod + mod)%mod);\n}\nstatic String reverse(String s) {\n\tStringBuffer p=new StringBuffer(s);\n\tp.reverse();\n\treturn p.toString();\n}\n\n     static int i() {\n    \t return sc.nextInt();\n     }\n     static String s() {\n    \t return sc.next();\n     }\n     static long l() {\n    \t return sc.nextLong();\n     }  \n     static void sort(int[] A){\n        int n = A.length;\n        Random rnd = new Random();\n        for(int i=0; i<n; ++i){\n            int tmp = A[i];\n            int randomPos = i + rnd.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n        Arrays.sort(A);\n     }\n     static void sort(long[] A){\n\t        int n = A.length;\n\t        Random rnd = new Random();\n\t        for(int i=0; i<n; ++i){\n\t            long tmp = A[i];\n\t            int randomPos = i + rnd.nextInt(n-i);\n\t            A[i] = A[randomPos];\n\t            A[randomPos] = tmp;\n\t        }\n\t        Arrays.sort(A);\n\t     }\n  static String sort(String s) {\n \t Character ch[]=new Character[s.length()];\n \t for(int i=0;i<s.length();i++) {\n \t\t ch[i]=s.charAt(i);\n \t }\n \t Arrays.sort(ch);\n \t StringBuffer st=new StringBuffer(\"\");\n \t for(int i=0;i<s.length();i++) {\n \t\t st.append(ch[i]);\n \t }\n \t return st.toString();\n  }\n  static HashMap<Integer,Integer> hash(int A[]){\n\t  HashMap<Integer,Integer> map=new HashMap<Integer, Integer>();\n\t  for(int i : A) {\n\t\t  if(map.containsKey(i)) {\n\t\t\t  map.put(i, map.get(i)+1);\n\t\t  }\n\t\t  else {\n\t\t\t  map.put(i, 1);\n\t\t  }\n\t  }\n\t  return map;\n  }\n  static TreeMap<Integer,Integer> tree(int A[]){\n\t  TreeMap<Integer,Integer> map=new TreeMap<Integer, Integer>();\n\t  for(int i : A) {\n\t\t  if(map.containsKey(i)) {\n\t\t\t  map.put(i, map.get(i)+1);\n\t\t  }\n\t\t  else {\n\t\t\t  map.put(i, 1);\n\t\t  }\n\t  }\n\t  return map;\n  }\n     static boolean prime(int n) \n\t    { \n\t        if (n <= 1) \n\t            return false; \n\t        if (n <= 3) \n\t            return true; \n\t        if (n % 2 == 0 || n % 3 == 0) \n\t            return false; \n\t        double sq=Math.sqrt(n);\n\t  \n\t        for (int i = 5; i <= sq; i = i + 6) \n\t            if (n % i == 0 || n % (i + 2) == 0) \n\t                return false; \n\t        return true; \n\t    } \n     static boolean prime(long n) \n\t    { \n\t        if (n <= 1) \n\t            return false; \n\t        if (n <= 3) \n\t            return true; \n\t        if (n % 2 == 0 || n % 3 == 0) \n\t            return false; \n\t        double sq=Math.sqrt(n);\n\t  \n\t        for (int i = 5; i <= sq; i = i + 6) \n\t            if (n % i == 0 || n % (i + 2) == 0) \n\t                return false; \n\t        return true; \n\t    } \n     static int gcd(int a, int b) \n     { \n         if (a == 0) \n             return b; \n         return gcd(b % a, a); \n     } \n     static long gcd(long a, long b) \n     { \n         if (a == 0) \n             return b; \n         return gcd(b % a, a); \n     } \n     \n        \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n} \n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Platforms_Jumping {\n\t\n\tpublic static void main(String []  args) {\n\tScanner sc=new Scanner (System.in);\n\tint n=sc.nextInt();\n\tint m=sc.nextInt();\n\tint d=sc.nextInt();\n\tint arr[]=new int [m];\n\tint sum=0;\n\tfor(int i=0;i<m;i++) {\n\t\tarr[i]=sc.nextInt();\n\t\tsum+=arr[i];\n\t}\n\t//System.out.println(sum);\n\tboolean can=false;\n\tif(d!=1&&d*(m+1)+sum-m>n) {\n\t\tSystem.out.println(\"YES\");\n\t\tcan =true;\n\t}\n\telse {\n\t\tif(d==1 && sum==n) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tcan =true;\n\t\t}\n\t\telse {\n\t\tSystem.out.println(\"NO\");\n\t}\n\t}\n\tint res []=new int [n];\n\tArrayList<Integer> ind=new ArrayList<Integer>();\n\tif(can) {\n\t\t\n\t\tint ob=0;\n\t\tint oe=0;\n\t\tint nb=0;\n\t\tint ne=0;\n\t\tint wlo=n;\n\t\tint wolo=sum;\n\t\tint wln=n;\n\t\tint woln=sum;\n\t \n\t\tboolean fit=true;\n\t\tfor(int i=0;i<m;i++) {\n\t\t\t//System.out.println(fit);\n\t\t\tfit=true;\n\t\t\tnb=ob+d;\n\t\t\tne=nb+arr[i]-1;\n\t\t\twln= wlo-d-arr[i]+1;\n\t\t\twoln=wolo-arr[i];\n\t\t\tif(wln>=woln) {\n\t\t\t\twlo=wln;\n\t\t\t\twolo=woln;\n\t\t\t//\tSystem.out.println(\"v\"+nb);\n\t\t\t\tind.add(nb);\n\t\t\t\tob=ne;\n\t\t\t\toe=ne;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twln=wlo;\n\t\t\t\twoln=wolo;\n\t\t\t\tnb=ob;\n\t\t\t\tne=oe;\n\t\t\t\t//i--;\n\t\t\t\tfit=false;\n\t\t\t}\n\t\t\tif(!fit) {\n\t\t\t\tnb=ob+1;\n\t\t\t\tne=nb+arr[i]-1;\n\t\t\t\tind.add(nb);\n\t\t\t\tob=ne;\n\t\t\t\toe=ne;\n\t\t\t\t//System.out.println(\"iv\"+ob);\n\t\t\t\t\n\t\t\t\twlo=wlo-arr[i];\n\t\t\t\twolo=wolo-arr[i];\n\t\t\t\twln=wlo;\n\t\t\t\twoln=wolo;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\n\tint k=1;\n\tfor(int x:ind) {\n\t\t//System.out.println(x+\" \"+arr[k-1]);\n\t\tfor(int i=x-1;i<x-1+arr[k-1];i++) {\n\t\t\tres[i]=k;\n\t\t\n\t\t}\n\t\tk++;\n\t}\n\tfor(int i=0;i<n;i++) {\n\t\tSystem.out.print(res[i]+\" \");\n\t}\n\t}\n\t\n\t\n\t}\n\t\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint num[1005];\nint ans[1005];\nint main() {\n  int n, m, d, les = 0;\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d\", &num[i]);\n    les += num[i];\n  }\n  int sit = 0, cnt = 0;\n  while (sit <= n) {\n    int t = min(d, max(n - sit - les + 1, 0));\n    sit += min(d, t);\n    if (!les && sit <= n) {\n      printf(\"NO\\n\");\n      return 0;\n    }\n    for (int i = 0; i < num[cnt]; i++) {\n      if (i) sit++;\n      ans[sit] = cnt + 1;\n    }\n    les -= num[cnt];\n    cnt++;\n  }\n  printf(\"YES\\n\");\n  for (int i = 1; i <= n; i++) printf(\"%d \", ans[i]);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\n\nn, m, d=map(int, input().split())\na=list(map(int, input().split()))\nans=[0]*(n+1); p=sum(a)\nif p+(m+1)*d-m<=n: print(\"NO\")\nelse:\n    print(\"YES\")\n    l=0\n    for i in range(m):\n        if l+d+p-1<=n:  l+=d\n        else:  l+=n-(l+p-1)\n        for j in range(l, l+a[i]):\n            ans[j]=(i+1); l=j\n        p-=a[i]\n    print(*ans[1:])"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n@SuppressWarnings(\"unused\")\npublic class Main {\n    private FastScanner in;\n    private PrintWriter out;\n    final int MOD = (int)1e9+7;\n    long ceil(long a, long b){return (a + b - 1) / b;}\n    long gcd(long a, long b){return b == 0 ? a : gcd(b, a % b);}\n    long lcm(long a, long b){return a / gcd(a, b) * b; /*\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306b\u6ce8\u610f*/}\n\n    void solve() {\n        int n = in.nextInt(), m = in.nextInt(), d = in.nextInt();\n        int[] len = new int[m+1];\n        for(int i = 0; i < m; i++){\n            len[i] = in.nextInt();\n        }\n\n        int[] idx = new int[m+1];\n        idx[m] = n+1;\n        for(int i = m-1; i >= 0; i--){\n            idx[i] = idx[i+1] - len[i];\n        }\n\n        int now = 0;\n        for(int i = 0; i < m; i++){\n            int next = now + d;\n            if(next >= n + 1) break;\n            idx[i] = Math.min(idx[i], next);\n            now = idx[i] + len[i] - 1;\n        }\n\n        if(now + d <= n){\n            out.println(\"NO\");\n            return;\n        }\n\n        out.println(\"YES\");\n        int[] num = new int[n+1];\n        for(int i = 0; i < m; i++){\n            for(int j = idx[i]; j < idx[i] + len[i]; j++){\n                num[j] = (i + 1);\n            }\n        }\n\n        for(int i = 1; i <= n; i++) out.print(num[i] + \" \");\n        out.println();\n    }\n    //end solve\n\n    public static void main(String[] args) {\n        new Main().m();\n    }\n\n    private void m() {\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n        /*\n        try {\n            String path = \"output.txt\";\n            out = new PrintWriter(new BufferedWriter(new FileWriter(new File(path))));\n        }catch (IOException e){\n            e.printStackTrace();\n        }\n        */\n        solve();\n        out.flush();\n        in.close();\n        out.close();\n    }\n\n    static class FastScanner {\n        private Reader input;\n\n        public FastScanner() {this(System.in);}\n        public FastScanner(InputStream stream) {this.input = new BufferedReader(new InputStreamReader(stream));}\n        public void close() {\n            try {\n                this.input.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public int nextInt() {return (int) nextLong();}\n\n        public long nextLong() {\n            try {\n                int sign = 1;\n                int b = input.read();\n                while ((b < '0' || '9' < b) && b != '-' && b != '+') {\n                    b = input.read();\n                }\n                if (b == '-') {\n                    sign = -1;\n                    b = input.read();\n                } else if (b == '+') {\n                    b = input.read();\n                }\n                long ret = b - '0';\n                while (true) {\n                    b = input.read();\n                    if (b < '0' || '9' < b) return ret * sign;\n                    ret *= 10;\n                    ret += b - '0';\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n                return -1;\n            }\n        }\n\n        public double nextDouble() {\n            try {\n                double sign = 1;\n                int b = input.read();\n                while ((b < '0' || '9' < b) && b != '-' && b != '+') {\n                    b = input.read();\n                }\n                if (b == '-') {\n                    sign = -1;\n                    b = input.read();\n                } else if (b == '+') {\n                    b = input.read();\n                }\n                double ret = b - '0';\n                while (true) {\n                    b = input.read();\n                    if (b < '0' || '9' < b) break;\n                    ret *= 10;\n                    ret += b - '0';\n                }\n                if (b != '.') return sign * ret;\n                double div = 1;\n                b = input.read();\n                while ('0' <= b && b <= '9') {\n                    ret *= 10;\n                    ret += b - '0';\n                    div *= 10;\n                    b = input.read();\n                }\n                return sign * ret / div;\n            } catch (IOException e) {\n                e.printStackTrace();\n                return Double.NaN;\n            }\n        }\n\n        public char nextChar() {\n            try {\n                int b = input.read();\n                while (Character.isWhitespace(b)) {\n                    b = input.read();\n                }\n                return (char) b;\n            } catch (IOException e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n\n        public String nextStr() {\n            try {\n                StringBuilder sb = new StringBuilder();\n                int b = input.read();\n                while (Character.isWhitespace(b)) {\n                    b = input.read();\n                }\n                while (b != -1 && !Character.isWhitespace(b)) {\n                    sb.append((char) b);\n                    b = input.read();\n                }\n                return sb.toString();\n            } catch (IOException e) {\n                e.printStackTrace();\n                return \"\";\n            }\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        public int[] nextIntArrayDec(int n) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt() - 1;\n            }\n            return res;\n        }\n\n        public int[] nextIntArray1Index(int n) {\n            int[] res = new int[n + 1];\n            for (int i = 0; i < n; i++) {\n                res[i + 1] = nextInt();\n            }\n            return res;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong();\n            }\n            return res;\n        }\n\n        public long[] nextLongArrayDec(int n) {\n            long[] res = new long[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextLong() - 1;\n            }\n            return res;\n        }\n\n        public long[] nextLongArray1Index(int n) {\n            long[] res = new long[n + 1];\n            for (int i = 0; i < n; i++) {\n                res[i + 1] = nextLong();\n            }\n            return res;\n        }\n\n        public double[] nextDoubleArray(int n) {\n            double[] res = new double[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextDouble();\n            }\n            return res;\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "N,M,D = map(int,raw_input().split())\nC = map(int,raw_input().split())\npos = [0,D]\nfor i in range(M-1):\n    pos.append(pos[-1]+C[i]-1+D)\nif pos[-1]+C[-1]-1+D < N+1:\n    print 'NO'\n    exit()\nprint 'YES'\nout = []\nfor i in range(M):\n    if i:\n        for _ in range(pos[i+1]-pos[i]-C[i-1]):\n            out.append(0)\n    else:\n        for _ in range(pos[i+1]-pos[i]-1):\n            out.append(0)\n    for _ in range(C[i]):\n        out.append(i+1)\nwhile len(out) < N: out.append(0)\nout2 = []\nto_many = len(out) - N\nfor o in out:\n    if o:\n        out2.append(o)\n    else:\n        if to_many:\n            to_many -= 1\n        else:\n            out2.append(o)\nprint ' '.join(map(str,out2))\n"
        },
        {
            "language": 3,
            "solution": "from math import *\nfrom collections import *\nn,m,d = map(int,input().split())\na = list(map(int,input().split()))\nsuf = [0 for i in range(m)]\nsuf[-1] = a[-1]\nfor i in range(m-2,-1,-1):\n    suf[i] = suf[i+1] + a[i]\n#print(suf)\nl = [0 for i in range(n)]\nprev = -1\nfor i in range(m):\n    if(n-(prev+d) >= suf[i]):\n        st = prev+d\n    else:\n        st = prev+1\n    #print(st,st+a[i])\n    for j in range(st,st+a[i]):\n        l[j] = i+1\n    prev = st+a[i]-1\nif(prev + d < n):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in l:\n        print(i,end = \" \")\n    print()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double eps = 1e-9;\nconst long double pi = acosl(-1);\nconst int mod = 998244353;\nconst int mod1 = 1e9 + 7;\nmt19937_64 rnd(time(0));\nvoid faster() {\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  ios::sync_with_stdio(false);\n}\nsigned main() {\n  faster();\n  double start = clock();\n  int n, m, d;\n  cin >> n >> m >> d;\n  d--;\n  vector<long long> a(m);\n  vector<long long> pr(m + 1, 0);\n  for (int i = 0; i < m; i++) {\n    cin >> a[i];\n    pr[i + 1] = pr[i] + a[i];\n  }\n  vector<long long> ans(n);\n  long long prev = n;\n  int lol = m;\n  for (int i = m - 1; i >= 0; i--) {\n    long long start = max(prev - d - a[i], pr[i]);\n    prev = start;\n    for (int j = start; j < start + a[i]; j++) ans[j] = lol;\n    lol--;\n  }\n  lol = 0;\n  while (lol + 1 < n && ans[lol] == 0) {\n    lol++;\n  }\n  if (lol > d)\n    cout << \"NO\";\n  else {\n    cout << \"YES\"\n         << \"\\n\";\n    for (auto i : ans) cout << i << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a[10005];\nlong long c[10000];\nint main() {\n  long long n, m, d;\n  long long ban = 0, now = 0;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) {\n    cin >> a[i];\n    ban += a[i];\n  }\n  for (int i = 1; i <= m; i++) {\n    if (now + ban > n) {\n      cout << \"NO\";\n      return 0;\n    } else if ((n - (now + d) + 1) <= ban) {\n      for (int j = n - ban + 1; j <= n - ban + a[i]; j++) {\n        c[j] = i;\n      }\n      now = n - ban + a[i];\n      ban -= a[i];\n    } else {\n      for (int j = now + d; j <= now + d + a[i] - 1; j++) {\n        c[j] = i;\n      }\n      now = now + d + a[i] - 1;\n      ban -= a[i];\n    }\n  }\n  if (now + d < n + 1) {\n    cout << \"NO\" << endl;\n    return 0;\n  }\n  cout << \"YES\" << endl;\n  for (int i = 1; i <= n; i++) {\n    cout << c[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\narr=list(map(int,input().split()))\nss=sum(arr)\ns=0\nans=[0]*(n+1)\nfor i in range(m):\n\tpro=min(s+d,n-ss+1)\n\tfor j in range(pro,pro+arr[i]):\n\t\tans[j]=i+1 \n\ts=pro+arr[i]-1\n\tss-=arr[i]\nif s+d<=n:\n\tprint(\"NO\")\n\texit()\nprint(\"YES\")\nfor i in range(1,n+1):\n\tprint(ans[i],end=\" \")\nprint()"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n//package Contests;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n/**\n *\n * @author Akhilesh\n */\npublic class C1256 {\n    public static void main(String[] args) throws IOException{\n        BufferedReader scan = new BufferedReader(new InputStreamReader(System.in));\n//        int t = Integer.parseInt(scan.readLine().trim());\n//        \n//        while(t-- > 0){\n            String str[] = scan.readLine().split(\"\\\\s+\");\n            int n = Integer.parseInt(str[0]);\n            int m = Integer.parseInt(str[1]);\n            int d = Integer.parseInt(str[2]);\n            \n            str = scan.readLine().split(\"\\\\s+\");\n            \n            int arr[] = new int[m];\n            long len = 0;\n            for(int i = 0; i < m; i++){\n                arr[i] = Integer.parseInt(str[i]);\n                len += arr[i];\n            }\n            \n            int ans[] = new int[n];\n            int index = n-1;\n            for(int i = m-1; i >= 0 ; i--){\n                for(int j = 0; j < arr[i]; j++){\n                    ans[index--] = i+1;\n                }\n            }\n            index++;\n            \n            boolean poss = true;\n            for(int i = d-1; i < n; i += d){\n                if(ans[i] == 0){\n                    \n                    if(index >= n){\n                        poss = false;\n                        break;\n                    }\n                    \n                    int val = ans[index];\n                    while(index < n && ans[index] == val){\n                        ans[i] = ans[index];\n                        ans[index] = 0;\n                        index++;\n                        if(index < n && ans[index] == val)\n                            i++;\n                    }\n                }\n            }\n            if(poss){\n                System.out.println(\"YES\");\n                for(int i : ans){\n                    System.out.print(i + \" \");\n                }\n                System.out.println(); \n            }else\n                System.out.println(\"NO\");\n            \n           \n//        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\nwoodLeft = [0 for i in range(len(c))]\nadd = 0\nfor i in range(len(c) - 1, -1, -1):\n    add += c[i]\n    woodLeft[i] = add\npos = 0\n# print(pos)\noutput = [0 for i in range(n)]\n# plankPos = []\nfor i in range(len(c)):\n    # output[pos:pos + c[i]] = [c[i] for _ in range(c[i])]\n    # print(pos, pos+d, woodLeft[i], n)\n    pos = min(pos + d, n - woodLeft[i] + 1)\n    output[pos-1:pos-1+c[i]] = [i+1 for _ in range(c[i])]\n    pos += c[i] - 1\nif pos + d >= n + 1:\n    print('YES')\n    print(*output)\nelse:\n    print('NO')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class Solution {\n\n    FastScanner in;\n    PrintWriter out;\n\n    public void solution() throws IOException {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int d = in.nextInt();\n        int[] c = new int[m];\n        int cSum = 0;\n        for(int i = 0; i < m; ++i) {\n            c[i] = in.nextInt();\n            cSum += c[i];\n        }\n        int maxNumberOfJumps = m + 1;\n        if (maxNumberOfJumps * (d - 1) + cSum < n) {\n            out.print(\"NO\");\n            return;\n        }\n\n        int space = n - cSum;\n        int[] pos= new int[m];\n        int curPos = 1;\n        for(int i = 0; i < m; ++i) {\n            int  jump = Math.min(space, d-1);\n            space -= jump;\n            curPos += jump;\n            pos[i] = curPos;\n            curPos += c[i];\n        }\n        out.println(\"YES\");\n        int[] res = new int[n];\n        for(int i = 0; i < n; ++i){\n            res[i] = 0;\n        }\n        for(int i = 0; i < m; ++i){\n            for(int j = pos[i] - 1; j < pos[i] + c[i] - 1; ++j){\n                res[j] = i + 1;\n            }\n        }\n        for(int i = 0; i < n; ++i){\n            out.print(res[i] + \" \");\n        }\n    }\n\n    public void run() {\n        try {\n            in = new FastScanner(System.in);\n            out = new PrintWriter(System.out);\n\n            solution();\n\n            in.close();\n            out.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        FastScanner(InputStream is){\n            br = new BufferedReader(new InputStreamReader(is));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        void close() {\n            try {\n                br.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n        }\n    }\n\n    public static void main(String[] args) {\n        new Solution().run();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint c[1002], n, m, d, q, p, k, j;\nint main() {\n  cin >> n >> m >> d;\n  q = d - 1, p = m + 1;\n  for (int i = 1; i <= m; i++) cin >> c[i], n -= c[i];\n  if (n > p * q)\n    cout << \"NO\\n\";\n  else {\n    cout << \"YES\" << endl;\n    for (int i = 0; i <= m; i++) {\n      for (int j = 0; j < c[i]; j++) cout << i << ' ';\n      for (k = min(n, q), n -= k, j = 0; j < k; j++) cout << 0 << ' ';\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid io() {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n}\nint32_t main() {\n  long long n, m, d;\n  cin >> n >> m >> d;\n  vector<long long> arr(m, 0), res;\n  long long sum = 0;\n  for (long long i = 0; i < m; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  if (sum + (d - 1) * (m + 1) < n) {\n    cout << \"NO\" << endl;\n  } else {\n    long long remaining = n - sum;\n    cout << \"YES\" << endl;\n    for (long long i = 0; i < m + 1; i++) {\n      long long jump = min(d - 1, remaining);\n      remaining -= jump;\n      while (jump--) cout << \"0 \";\n      if (i < m)\n        while (arr[i]--) cout << i + 1 << \" \";\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Solution{\n\n\tpublic static Integer INT(String s) {\n\t\treturn Integer.parseInt(s);\n\t}\n\tpublic static Long LONG(String s) {\n\t\treturn Long.parseLong(s);\n\t}\n\n\tstatic int mod=1_000_000_007, oo=Integer.MAX_VALUE, _oo=Integer.MAX_VALUE;\n\n\t//==================================================================================================================================================\n\n\n\n\tpublic static void main(String args[]) throws IOException {\n \n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\tScanner in=new Scanner(System.in); StringBuilder out=new StringBuilder();\n\n\t\t\n\t\tString line[]=br.readLine().split(\"\\\\s\");\n\n\t\tint n=INT(line[0]),\n\t\t\tm=INT(line[1]),\n\t\t\td=INT(line[2]);\n\n\t\tline=br.readLine().split(\"\\\\s\");\n\t\tint a[]=new int[m];\n\t\tfor(int i=0; i<m; i++)\n\t\t\ta[i]=INT(line[i]);\n\n\t\tint sum[]=new int[m+1];\n\t\tfor(int i=m-1; i>=0; i--)\n\t\t\tsum[i]=a[i]+sum[i+1];\n\n\n\t\tint pos[]=new int[n+2], curr=d, start, end=0;\n\n\t\tfor(int i=0; i<m; i++) {\n\t\t\tstart=Math.min(curr, n+1-sum[i]);\n\t\t\tend=start+a[i]-1;\n\n\t\t\twhile(start<=end)\n\t\t\t\tpos[start++]=i+1;\n\t\t\tcurr=end+d;\n\t\t}\n\t\t// System.out.println(Arrays.toString(pos));\n\t\tif(end+d>=n+1) {\n\t\t\tout.append(\"YES\\n\");\n\t\t\tfor(int i=1; i<=n; i++)\n\t\t\t\tout.append(pos[i]+\" \");\n\t\t}\n\t\telse\n\t\t\tout.append(\"NO\\n\");\n\n\t\tSystem.out.print(out);\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "data = input().split(' ')\nn, m, d = int(data[0]), int(data[1]), int(data[2])\narr = list(map(int, input().split(' ')))\nans = [0]*(n+1)\nsum = 0\nfor i in arr:\n    sum += i\nnw = 0\nfor idx, i in enumerate(arr):\n    if n+1-sum <= nw+d:\n        for j in range(i):\n            ans[n+1-sum+j] = idx+1\n        sum -= i\n        nw = n+1-sum\n    else:\n        for j in range(i):\n            ans[nw+d+j] = idx+1\n        sum -= i\n        nw = nw+d+i-1\nif nw+d < n+1:\n    print('NO')\nelse:\n    print('YES')\n    print(*ans[1:])"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    static FastReader s = new FastReader();\n    static PrintWriter out = new PrintWriter(System.out);\n\n    private static int[] rai(int n) {\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = s.nextInt();\n        }\n        return arr;\n    }\n\n    private static int[][] rai(int n, int m) {\n        int[][] arr = new int[n][m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                arr[i][j] = s.nextInt();\n            }\n        }\n        return arr;\n    }\n\n    private static long[] ral(int n) {\n        long[] arr = new long[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = s.nextLong();\n        }\n        return arr;\n    }\n\n    private static long[][] ral(int n, int m) {\n        long[][] arr = new long[n][m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                arr[i][j] = s.nextLong();\n            }\n        }\n        return arr;\n    }\n\n    private static int ri() {\n        return s.nextInt();\n    }\n\n    private static long rl() {\n        return s.nextLong();\n    }\n\n    private static String rs() {\n        return s.next();\n    }\n\n    static int gcd(int a,int b)\n    {\n        if(b==0)\n        {\n            return a;\n        }\n        return gcd(b,a%b);\n    }\n\n    static boolean isPrime(int n) {\n        //check if n is a multiple of 2\n        if (n % 2 == 0) return false;\n        //if not, then just check the odds\n        for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n        StringBuilder ans = new StringBuilder();\n//        int t = ri();\n        int t=1;\n        while (t-- > 0)\n        {\n            int n=ri();int m=ri();\n            int d=ri();\n            int[] arr=rai(m);\n            boolean[] contains=new boolean[n+1];\n            int ind=n;\n            int sum=0;\n            for(int i:arr)\n            {\n                sum+=i;\n            }\n            for(int i=n-sum+1;i<=n;i++)\n            {\n                contains[i]=true;\n            }\n//            for(int i=m-1;i>=0;i--)\n//            {\n//                int val=arr[i];\n//                while(ind>0 && val>0)\n//                {\n//                    contains[ind]=true;\n//                    ind--;\n//                }\n//            }\n//            for(int i=1;i<=n;i++)\n//            {\n//                System.out.print(contains[i]+\" \");\n//            }\n//            System.out.println();\n            ind=n-sum+1;\n            HashMap<Integer,Integer> map=new HashMap<>();\n            for(int i=0;i<m;i++)\n            {\n                map.put(i+1,ind);\n                ind+=arr[i];\n            }\n//            for(int i:map.keySet())\n//            {\n//                System.out.println(i+\" \"+map.get(i));\n//            }\n            int curr=0;\n            int pl=1;\n            int flag=0;\n            while(curr<n+1)\n            {\n                int next=curr+d;\n//                System.out.println(next);\n                if(next>=n+1)\n                {\n                    curr+=d;\n                    continue;\n                }\n\n                if(contains[next])\n                {\n                    curr+=d;\n                }\n                else\n                {\n                    if(pl>m)\n                    {\n//                        if(contains[curr+1])\n//                        {\n//                            curr++;\n//                            continue;\n//\n//                        }\n//                        else {\n                            flag = 1;\n                            break;\n//                        }\n                    }\n                    int cInd=map.get(pl);\n                    int last=cInd+arr[pl-1];\n                    for(int i=next;i<next+arr[pl-1];i++)\n                    {\n                        contains[i]=true;\n                    }\n                    for(int i=next+arr[pl-1];i<last;i++)\n                    {\n                        contains[i]=false;\n                    }\n                    map.put(pl,next);\n                    curr=next+arr[pl-1]-1;\n                    pl++;\n\n                }\n            }\n            if(flag==1)\n            {\n                ans.append(\"No\\n\");\n                continue;\n            }\n\n            int[] res=new int[n+1];\n            for(int i:map.keySet())\n            {\n                for(int j=map.get(i);j<map.get(i)+arr[i-1];j++)\n                {\n                    res[j]=i;\n                }\n            }\n            ans.append(\"Yes\\n\");\n            for(int i=1;i<=n;i++)\n            {\n                ans.append(res[i]).append(\" \");\n            }\n            ans.append(\"\\n\");\n        }\n        out.print(ans.toString());\n        out.flush();\n\n    }\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\nsum_c = sum(c)\ntmp_ans = sum_c + (m+1)*(d-1)\nif tmp_ans < n:\n    print(\"NO\")\n    exit()\nnokori = tmp_ans - n\n\nans = [0] * n\nj = 1\nfor i in range(m):\n    j -= 1\n    if nokori >= d - 1:\n        nokori -= d - 1\n    else:\n        j += (d - 1 - nokori)\n        nokori = 0\n    for _ in range(c[i]):\n        ans[i+j] = i+1\n        j += 1\nprint(\"YES\")\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int x, y, z, i, j, k, n, t, temp, m, d, f;\n  cin >> n >> m >> d;\n  t = 0;\n  long long int arr[m];\n  for (i = 0; i < m; i++) cin >> arr[i];\n  x = n + 1;\n  y = m - 1;\n  long long int ans[n + 2];\n  memset(ans, 0, sizeof(ans));\n  f = 0;\n  while (x > 0) {\n    x = x - d;\n    if (x <= 0) break;\n    if (y < 0) {\n      f = 1;\n      break;\n    }\n    if (t >= x - arr[y]) break;\n    for (i = x; i > x - arr[y]; i--) ans[i] = y + 1;\n    x = x - arr[y] + 1;\n    y--;\n  }\n  if (f == 0) {\n    cout << \"YES\" << endl;\n    z = 0;\n    for (i = 1; i <= n; i++) {\n      if (z > y) break;\n      for (j = i; j < arr[z] + i; j++) {\n        if (ans[j] != 0) {\n          for (k = j; k < arr[y + 1] + j; k++) ans[k] = 0;\n          y++;\n        }\n        ans[j] = z + 1;\n      }\n      i = i + arr[z] - 1;\n      z++;\n    }\n    for (i = 1; i <= n; i++) cout << ans[i] << \" \";\n    cout << endl;\n  } else\n    cout << \"NO\" << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "from math import ceil,sqrt,gcd\ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().strip().split(\" \"))\ndef li(): return list(mi())\nn,m,d=mi()\na=li()\ns=(m+1)*d\ns+=sum(a)\ns-=m\nif(n+1>s):\n    print('NO')\nelse:\n    print('YES')\n    b=[0]*(n+1)\n    s=sum(a)\n    pos=0\n    for i in range(m):\n        if(pos+d+s-1<=n):\n            pos+=d;\n        else:\n            pos=n-s+1\n        for j in range(pos,pos+a[i]):\n            b[j]=i+1\n        s-=a[i]\n        pos+=(a[i]-1)\n    print(*b[1:])\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring tostr(int n) {\n  stringstream rr;\n  rr << n;\n  return rr.str();\n}\nlong long binpow(long long n, long long p) {\n  if (p == 0) return 1LL;\n  if (p % 2 == 0) {\n    long long res = binpow(n, p / 2);\n    return res * res;\n  }\n  return n * binpow(n, p - 1);\n}\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nlong long lcm(long long a, long long b) { return a * (b / gcd(a, b)); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  int n, m, d;\n  while (cin >> n >> m >> d) {\n    int arr[m + 5], sum = 0;\n    vector<int> v;\n    for (int i = 1; i <= m; i++) {\n      cin >> arr[i];\n      sum += arr[i];\n    }\n    for (int i = 1; i <= m; i++) {\n      for (int j = 1; j <= d - 1; j++) v.push_back(0);\n      for (int j = 1; j <= arr[i]; j++) v.push_back(i);\n    }\n    for (int i = 1; i <= d - 1; i++) v.push_back(0);\n    if (n - sum <= (d - 1) * (m + 1)) {\n      cout << \"YES\"\n           << \"\\n\";\n      for (int i = v.size() - 1; i >= 0; i--) {\n        if (v.size() == n) break;\n        if (v[i] == 0) {\n          v.erase(v.begin() + i);\n        }\n      }\n      for (int i = 0; i < v.size(); i++) cout << v[i] << \" \";\n      cout << \"\\n\";\n    } else\n      cout << \"NO\"\n           << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n, m, d = map(int, raw_input().split())\nplanks = map(int, raw_input().split())\nplanks.reverse()\nhehe = []\nfor i in range(d-1):\n\thehe.append(0)\ncnt = 1\nwhile planks:\n\twhile planks[-1]:\n\t\thehe.append(cnt)\n\t\tplanks[-1] -= 1\n\tplanks.pop()\n\tcnt += 1\n\tfor i in range(d-1):\n\t\thehe.append(0)\nyo = [1 for i in range(len(hehe))]\nxyz = sum(yo)\ni = 0\nwhile xyz > n:\n\tif hehe[i] == 0:\n\t\tyo[i] = 0\n\t\txyz -= 1\n\ti += 1\nif xyz == n:\n\tprint \"YES\"\n\tfor i in range(len(hehe)):\n\t\tif yo[i]:\n\t\t\tprint hehe[i],\nelse:\n\tprint \"NO\"\n"
        },
        {
            "language": 3,
            "solution": "from collections import *\nimport sys  \n\n# \"\". join(strings)  \n    \ndef ri():\n    return int(input())\n \ndef rl():\n    return list(map(int, input().split()))\n\nn, m,d = rl()\nc =rl()\ns= sum(c)\ntrous = n-s\nif trous > (d-1)*(m+1):\n\tprint('NO')\n\texit()\nelse:\n\tcount=1\n\tans=[]\n\twhile trous>=d-1 and count<=m:\n\t\tans+=[\"0\"]*(d-1)\n\t\tans+=[str(count)]*c[count-1]\n\t\tcount+=1\n\t\ttrous-=(d-1)\n\n\t\n\tans+=[\"0\"]*trous\n\twhile count<=m:\n\t\tans+=[str(count)]*c[count-1]\n\t\tcount+=1\n\tprint(\"YES\")\n\tprint(*ans)\n\n\n\n\n\n\n    \n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class PlatformsJumping {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n    static class TaskA {\n        long mod = (long)(1000000007);\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            while(testNumber-->0){\n                int n = in.nextInt();\n                int m = in.nextInt();\n                int d = in.nextInt();\n                int a[] = new int[m];\n                for(int i=0;i<m;i++)\n                \ta[i] = in.nextInt();\n                int b[] = new int[n];\n                int j = n-1;\n                int count = m;\n                for(int i=m-1;i>=0;i--){\n                \tfor(int k=0;k<a[i];k++)\n                \t\tb[j--] = count;\n                \tcount--;\n                }\n                int start = -1;\n                boolean ans = false;\n                while(true){\n                \tstart += d;\n                \tif(start>=n || b[start]!=0){\n                \t\tans = true;\n                \t\tbreak;\n                \t}\n                \tint i;\n                \tfor(i=start+1;i<n && b[i]==0;i++);\n                \tif(i>=n)\n                \t\tbreak;\n                \tj = i;\n                \tb[start] = b[j];\n                \tint k = b[j];\n                \tb[j] = 0;\n                \tj++;\n                \twhile(j<n && k == b[j]){\n                \t\tb[++start] = b[j];\n                \t\tb[j] = 0;\n                \t\tj++;\n                \t}\n                }\n                // print1d(b , out);\n                if(ans){\n                \tout.println(\"YES\");\n                \tprint1d(b , out);\n                }\n                else\n                \tout.println(\"NO\");\n            }\n        }\n        public void sortedArrayToBST(TreeSet<Integer> a , int start, int end) { \n            if (start > end) {\n                return;\n            }\n            int mid = (start + end) / 2;\n            a.add(mid);\n            sortedArrayToBST(a, start, mid - 1);\n            sortedArrayToBST(a, mid + 1, end); \n        }\n        class Combine{\n            long value;\n            long delete;\n            Combine(long val , long delete){\n                this.value = val;\n                this.delete = delete;\n            }\n        }\n        class Sort2 implements Comparator<Combine>{\n            public int compare(Combine a , Combine b){\n                if(a.value > b.value)\n                    return 1;\n                else if(a.value == b.value && a.delete>b.delete)\n                    return 1;\n                else if(a.value == b.value && a.delete == b.delete)\n                    return 0;\n                return -1;\n            }\n        }\n        public int lowerLastBound(ArrayList<Integer> a , int x){\n            int l = 0;\n            int r = a.size()-1;\n            if(a.get(l)>=x)\n                return -1;\n            if(a.get(r)<x)\n                return r;\n            int mid = -1;\n            while(l<=r){\n                mid = (l+r)/2;\n                if(a.get(mid) == x && a.get(mid-1)<x)\n                    return mid-1;\n                else if(a.get(mid)>=x)\n                    r = mid-1;\n                else if(a.get(mid)<x && a.get(mid+1)>=x)\n                    return mid;\n                else if(a.get(mid)<x && a.get(mid+1)<x)\n                    l = mid+1;\n            }\n            return mid;\n        }\n        public int upperFirstBound(ArrayList<Integer> a , Integer x){\n            int l = 0;\n            int r = a.size()-1;\n            if(a.get(l)>x)\n                return l;\n            if(a.get(r)<=x)\n                return r+1;\n            int mid = -1;\n            while(l<=r){\n                mid = (l+r)/2;\n                if(a.get(mid) == x && a.get(mid+1)>x)\n                    return mid+1;\n                else if(a.get(mid)<=x)\n                    l = mid+1;\n                else if(a.get(mid)>x && a.get(mid-1)<=x)\n                    return mid;\n                else if(a.get(mid)>x && a.get(mid-1)>x)\n                    r = mid-1;\n            }\n            return mid;\n        }\n        public int lowerLastBound(int a[] , int x){\n            int l = 0;\n            int r = a.length-1;\n            if(a[l]>=x)\n                return -1;\n            if(a[r]<x)\n                return r;\n            int mid = -1;\n            while(l<=r){\n                mid = (l+r)/2;\n                if(a[mid] == x && a[mid-1]<x)\n                    return mid-1;\n                else if(a[mid]>=x)\n                    r = mid-1;\n                else if(a[mid]<x && a[mid+1]>=x)\n                    return mid;\n                else if(a[mid]<x && a[mid+1]<x)\n                    l = mid+1;\n            }\n            return mid;\n        }\n        public int upperFirstBound(long a[] , long x){\n            int l = 0;\n            int r = a.length-1;\n            if(a[l]>x)\n                return l;\n            if(a[r]<=x)\n                return r+1;\n            int mid = -1;\n            while(l<=r){\n                mid = (l+r)/2;\n                if(a[mid] == x && a[mid+1]>x)\n                    return mid+1;\n                else if(a[mid]<=x)\n                    l = mid+1;\n                else if(a[mid]>x && a[mid-1]<=x)\n                    return mid;\n                else if(a[mid]>x && a[mid-1]>x)\n                    r = mid-1;\n            }\n            return mid;\n        }\n        public long log(float number , int base){\n            return (long) Math.floor((Math.log(number) / Math.log(base)));\n        }\n        public long gcd(long a , long b){\n            if(a<b){\n                long c = b;\n                b = a;\n                a = c;\n            }\n            if(a%b==0)\n                return b;\n            return gcd(b , a%b);\n        }\n        public void print2d(int a[][] , PrintWriter out){\n            for(int i=0;i<a.length;i++){\n                for(int j=0;j<a[i].length;j++)\n                    out.print(a[i][j] + \" \");\n                out.println();\n            }\n            out.println();\n        }\n        public void print1d(int a[] , PrintWriter out){\n            for(int i=0;i<a.length;i++)\n                out.print(a[i] + \" \");\n            out.println();\n            out.println();\n        }\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  d--;\n  int p[m];\n  int s[m];\n  for (int i = 0; i < m; i++) {\n    cin >> p[i];\n  }\n  s[m - 1] = p[m - 1];\n  for (int i = m - 2; i >= 0; i--) {\n    s[i] = p[i] + s[i + 1];\n  }\n  if (s[0] + (d * (m + 1)) < n) {\n    cout << \"NO\";\n    return 0;\n  }\n  cout << \"YES\\n\";\n  int dis = n;\n  int i = 0;\n  if (s[0] == n) {\n    for (int i = 0; i < m; i++) {\n      for (int j = 0; j < p[i]; j++) {\n        dis--;\n        cout << i + 1;\n        if (dis != 0) cout << \" \";\n      }\n    }\n  } else {\n    while (dis > 0 && i < m) {\n      if (dis <= (s[i] + d)) {\n        for (; i < m; i++) {\n          for (int j = 0; j < p[i]; j++) {\n            dis--;\n            cout << i + 1;\n            if (dis != 0) cout << \" \";\n          }\n        }\n        while (dis > 0) {\n          dis--;\n          cout << \"0\";\n          if (dis != 0) cout << \" \";\n        }\n      } else {\n        for (int j = 0; j < d; j++) {\n          dis--;\n          cout << \"0\";\n          if (dis != 0) cout << \" \";\n        }\n        for (int j = 0; j < p[i]; j++) {\n          dis--;\n          cout << i + 1;\n          if (dis != 0) cout << \" \";\n        }\n      }\n      i++;\n    }\n  }\n  if (i >= m) {\n    while (dis > 0) {\n      dis--;\n      cout << \"0\";\n      if (dis != 0) cout << \" \";\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main{\n\n\n\tpublic static void main (String args[])throws IOException{\n\t\tScanner sc = new Scanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\n\t\tint n=sc.nextInt(), m=sc.nextInt(), k=sc.nextInt(), sum=0,  arr[]=new int[m], arr1[]=new int[n+1], temp;\n\t\tfor(int i=0; i<m; i++) {\n\t\t\tarr[i]=sc.nextInt();\n\t\t\tsum+=arr[i]-1;\n\t\t}\n\t\tint diff=(int)Math.ceil((double)(n+1-sum)/(m+1)), p=(n+1-sum)%(m+1);\n\t\t\n\t\tif(diff<=k) {\n\t\t\tout.println(\"YES\");\n\t\t\tif(p==0) {\n\t\t\t\ttemp = diff;\n\t\t\t\tfor(int j=temp; j<temp+arr[0]; j++)\n\t\t\t\t\tarr1[j]=1;\n\t\t\t\ttemp+=arr[0]-1;\n\t\t\t\tfor(int i=1; i<m; i++) {\n\t\t\t\t\ttemp+=diff;\n\t\t\t\t\tfor(int j=temp; j<temp+arr[i]; j++)\n\t\t\t\t\t\tarr1[j]=i+1;\n\t\t\t\t\ttemp+=arr[i]-1;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\ttemp=diff;\n\t\t\t\tfor(int j=temp; j<temp+arr[0]; j++)\n\t\t\t\t\tarr1[j]=1;\n\t\t\t\ttemp+=arr[0]-1;\n\t\t\t\tp--;\n\t\t\t\tfor(int i=1; i<m; i++) {\n\t\t\t\t\tif(p>0) {\n\t\t\t\t\t\ttemp+=diff;\n\t\t\t\t\t\tp--;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\ttemp+=diff-1;\n\t\t\t\t\tfor(int j=temp; j<temp+arr[i]; j++)\n\t\t\t\t\t\tarr1[j]=i+1;\n\t\t\t\t\ttemp+=arr[i]-1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=1; i<n+1; i++)\n\t\t\t\tout.print(arr1[i]+\" \");\n\t\t\t\n\t\t}\n\t\telse\n\t\t\tout.println(\"NO\");\n\t\t\n\t\t\t\n\t\tout.flush();\n\t}\t\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tpublic static long abs(long x) {return ((x > 0) ? x : -x);}\n\t\n\tpublic static long max(long a, long b) {return Math.max(a, b);}\n\t\n\tpublic static long min(long a, long b) {return Math.min(a, b);}\n\t\n\t\n    static int[] primeGenerator(int num) {\n    \tint length=0, arr[]=new int[num], a=num, factor=1;\n    \tif(num%2==0) {\n    \t\twhile(num%2==0) {\n    \t\t\tnum/=2;\n    \t\t\tfactor*=2;\n    \t\t}\n    \t\tarr[length++]=factor;\n    \t}\n    \tfor(int i=3; i*i<=a; i++) {\n    \t\tfactor=1;\n    \t\tif(num%i==0) {\n        \t\twhile(num%i==0) {\n        \t\t\tnum/=i;\n        \t\t\tfactor*=i;\n        \t\t}\n        \t\tarr[length++]=factor;\n    \t\t}\n    \t}\n    \tif(num>1)\n    \t\tarr[length++]=num;\n    \treturn Arrays.copyOfRange(arr, 0, length);\n    }\n    \n    \n\n\n    static boolean isPrime(int n) \n    { \n        // Corner cases \n        if (n <= 1) \n            return false; \n        if (n <= 3) \n            return true; \n  \n        // This is checked so that we can skip \n        // middle five numbers in below loop \n        if (n % 2 == 0 || n % 3 == 0) \n            return false; \n  \n        for (int i = 5; i * i <= n; i = i + 6) \n            if (n % i == 0 || n % (i + 2) == 0) \n                return false; \n  \n        return true; \n    }\n\n\n\n\n\tstatic class Scanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tScanner(String fileName) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(fileName));\n\t\t}\n\n\t\tString next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tString nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tint nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() throws NumberFormatException, IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() throws NumberFormatException, IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tboolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t}\n\n\tstatic void sort(int[] a) {\n\t\tshuffle(a);\n\t\tArrays.sort(a);\n\t}\n\n\tstatic void shuffle(int[] a) {\n\t\tint n = a.length;\n\t\tRandom rand = new Random();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint tmpIdx = rand.nextInt(n);\n\t\t\tint tmp = a[i];\n\t\t\ta[i] = a[tmpIdx];\n\t\t\ta[tmpIdx] = tmp;\n\t\t}\n\t}\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "q,w,e=map(int,input().split())\nr=list(map(int,input().split()))\ns=sum(r)\nif s+(w+1)*(e-1)<q or q<s:\n    print('NO')\n    exit()\nelse:\n    print('YES')\nans=[[0,0]]\nfor i in range(w):\n    ans.append([ans[-1][1]+1,ans[-1][1]+r[i]])\nans.append([q+1,q+1])\ni=-1\nwhile i>-w-1:\n    if ans[i][0]-ans[i-1][1]>e:\n        ans[i-1][0]+=ans[i][0]-ans[i-1][1]-e\n        ans[i-1][1]+=ans[i][0]-ans[i-1][1]-e\n    else:\n        break\n    i-=1\nfor i in range(w):\n    for k in range(ans[i][1],ans[i+1][0]-1):\n        print(0,end=' ')\n    for k in range(ans[i+1][0]-1,ans[i+1][1]):\n        print(i+1,end=' ')\nfor k in range(ans[i+1][1],ans[i+2][0]-1):\n    print(0,end=' ')"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\npublic class o {\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tint m=sc.nextInt();\n\t\tint d=sc.nextInt();\n\t\tint c[]=new int [m];\n\t\tint sum=0;\n\t\tfor (int i = 0; i < c.length; i++) {\n\t\t\tc[i]=sc.nextInt();\n\t\t\tsum+=c[i];\n\t\t}\n\t\tint temp=n-sum;\n\t\t\t//\u770b\u6709\u591a\u5c11\u95f4\u9694\n\t\tif(temp>(m+1)*(d-1))\n\t\t\tSystem.out.println(\"NO\");\n\t\telse {\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tfor (int i = 0; i < m; i++) {\n\t\t\t\tint p=Math.min(d-1, temp);\n\t\t\t\tfor (int j = 0; j <p ; j++) {\n\t\t\t\t\tSystem.out.print(\"0 \");\n\t\t\t\t}\n\t\t\t\tfor (int j = 0; j < c[i]; j++) {\n\t\t\t\t\tSystem.out.print(i+1+\" \");\n\t\t\t\t}\n\t\t\t\ttemp-=p;\n\t\t\t}\n\t\t\tfor (int i = 0; i <temp; i++) {\n\t\t\t\tSystem.out.print(\"0 \");\n\t\t\t}System.out.println();\n\t\t}\n\t}\n}\n\n  \t\t \t  \t   \t\t \t  \t\t \t\t\t\t \t   \t"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\na = list(map(int, input().split()))\nresult = [0] * n\nstart = 0\nob = sum(a)\nend = n - ob + 1\nst = end - 1\nfor i in range (m):\n    for j in range (st, st + a[i]):\n        result[j] = i + 1\n    st += a[i]\nfor i in range (m):\n    if (end - start > d):\n        for j in range (end - 1, end + a[i] - 1):\n            result[j] = 0\n        ob -= a[i]\n        end = n - ob + 1\n        for j in range (start + d - 1, start + d + a[i] - 1):\n            result[j] = i + 1\n        start += d + a[i] - 1\n    else:\n        break\nif (end - start > d):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*result)"
        },
        {
            "language": 3,
            "solution": "'''input\n10 1 5\n2\n'''\n# A coding delight\nfrom sys import stdin\nfrom collections import defaultdict\n \n \n# main starts\nn, m, d = list(map(int, stdin.readline().split()))\nmarr = list(map(int,stdin.readline().split()))\nif (m + 1) * (d - 1) + sum(marr) < n:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\tdiff = (m + 1) * (d - 1) + sum(marr) - n \n\tgap = [d -1] * (m + 1) \n\ti = 0\n\twhile diff > 0 and i < len(gap):\n\t\tif gap[i] < diff:\n\t\t\tdiff -= gap[i]\n\t\t\tgap[i] = 0\n\t\t\ti += 1\n\t\telse:\n\t\t\tgap[i] -= diff\n\t\t\tdiff = 0\n\t\t\tbreak\n\t# print(gap)\n\tans = []\n\tp = 0\n\tfor i in range(len(gap)):\n\t\tfor k in range(gap[i]):\n\t\t\tans.append(0)\n\t\tif p < len(marr):\n\t\t\tfor k in range(marr[p]):\n\t\t\t\tans.append(p + 1)\n\t\t\tp += 1\n\tprint(*ans)"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nc=list(map(int,input().split()))\nC=sum(c)\n\ndef builder(n,m,d,c,C):\n    gap=d-1\n    ans=[]\n    for i in range(m):\n        if n>=(C+gap*(i+1)):\n            for j in range(gap):\n                ans.append(0)\n            for j in range(c[i]):\n                ans.append(i+1)\n        else:\n            for j in range(c[i]):\n                ans.append(i+1)\n    while len(ans)<n:\n        ans.append(0)\n    return(ans)\n\ndef checker(river, d):\n    ans=\"YES\"\n    counter=1\n    trig=0\n    while trig==0:\n        if river[-counter]==0:\n            counter+=1\n        else:\n            trig=1\n    if (counter-1)>d-1:\n        ans=\"NO\"\n    return(ans)\n\nriver=builder(n,m,d,c,C)\nans=checker(river, d)\n\nprint(ans)\nif ans==\"YES\":\n    for i in river:\n        print(i, end=' ')"
        },
        {
            "language": 3,
            "solution": "import sys\nimport os\nfrom io import IOBase, BytesIO\n# import heapq\nimport math\n# import collections\n# import itertools\n# import bisect\nmod = 10 ** 9 + 7\npie = 3.1415926536\n# import resource\n# resource.setrlimit(resource.RLIMIT_STACK, [0x100000000, resource.RLIM_INFINITY])\n# import threading\n# threading.stack_size(2**27)\n# import sys\n# sys.setrecursionlimit(10**6)\n# fact=[1]\n# for i in range(1,1000001):\n#    fact.append((fact[-1]*i)%mod)\n# ifact=[0]*1000001\n# ifact[1000000]=pow(fact[1000000],mod-2,mod)\n# for i in range(1000000,0,-1):\n#    ifact[i-1]=(i*ifact[i])%mod\n# from random import randint as rn\n# from Queue import Queue as Q\n\n\ndef modinv(n, p):\n    return pow(n, p-2, p)\n\n\ndef ncr(n, r, p):  # for using this uncomment the lines calculating fact and ifact\n    t = ((fact[n])*((ifact[r]*ifact[n-r]) % p)) % p\n    return t\n\n\ndef ain():  # takes array as input\n    return list(map(int, sin().split()))\n\n\ndef sin():\n    return input().strip()\n\n\ndef GCD(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\n\n\ndef read2DIntArray(row, col):\n    arr = []\n    for i in range(0, row):\n        temp = list(map(int, sin().split()))\n        arr.append(temp)\n\n    return arr\n\n\ndef read2DCharArray(row, col):\n    arr = []\n    for i in range(0, row):\n        temp = str(sin())\n        arr.append(temp)\n\n    return arr\n\n\n\"\"\"****************** SMALLEST NO. BY REARRANGING DIGITS OF n (WITHOUT TRAILING ZEROS) *********************\"\"\"\n\n\ndef smallestNumber(n):\n    lst = list(str(n))\n    lst.sort()\n\n    tmp = \"\"\n    for i, n in enumerate(lst):\n        if (n != '0'):\n            tmp = lst.pop(i)\n            break\n\n    return str(tmp) + ''.join(lst)\n\n\n\"\"\"*********************** GENERATE ALL PRIME NUMBERS SMALLER THAN OR EQUAL TO n ***************************\"\"\"\n\n\ndef SieveOfEratosthenes(n):\n\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while (p * p <= n):\n\n        if (prime[p] == True):\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n\n        p += 1\n    prime[0] = False\n    prime[1] = False\n\n    lst = []\n    for p in range(n + 1):\n        if prime[p]:\n            lst.append(p)\n\n    return lst\n\n\n\"\"\"*************************************** FIND nCr ********************************************************\"\"\"\n\n\ndef nCr(n, r):\n    a = 1\n    b = 1\n    c = 1\n    for i in range(1, n + 1):\n        c *= i\n    for i in range(1, r + 1):\n        b *= i\n    for i in range(1, n - r + 1):\n        a *= i\n\n    return (c // (a * b))\n\n\n\"\"\"************************* GET PRIME FACTORS AND THEIR POWERS FOR AN INTEGER *****************************\"\"\"\n\n\ndef sieveOfEratosthenes1(N, s):\n\n    prime = [False] * (N+1)\n\n    for i in range(2, N+1, 2):\n        s[i] = 2\n\n    for i in range(3, N+1, 2):\n        if (prime[i] == False):\n\n            s[i] = i\n\n            for j in range(i, int(N / i) + 1, 2):\n                if (prime[i*j] == False):\n                    prime[i*j] = True\n\n                    s[i * j] = i\n\n\ndef generatePrimeFactors(N):\n\n    s = [0] * (N+1)\n\n    sieveOfEratosthenes1(N, s)\n\n    # print(\"Factor Power\")\n\n    curr = s[N]\n\n    cnt = 1\n\n    factors = []\n    power = []\n    while (N > 1):\n        N //= s[N]\n\n        if (curr == s[N]):\n            cnt += 1\n            continue\n\n        # curr is factor and cnt in the power of this factor\n        factors.append(curr)\n        power.append(cnt)\n\n        curr = s[N]\n        cnt = 1\n\n    return factors, power\n\n\n\"\"\"----------------------------------------------MAIN------------------------------------------------------\"\"\"\n\n\ndef main():\n    n, m, d = map(int, sin().split())\n    c = ain()\n    summ = sum(c)\n\n    tmp = c.copy()\n    lst = []\n    res = [0] * n\n    pos = 0\n    t = 0\n\n    while pos < n + 1 and t < m:\n        flag = 0\n        for i in range(pos + 1, pos + d+1):\n            pos = i\n            if pos + summ == n + 1:\n                flag = 1\n                break\n\n        if flag == 0:\n            for i in range(pos, pos+c[t]):\n                res[i - 1] = t + 1\n            pos += c[t] - 1\n            summ -= c[t]\n            t += 1\n\n        else:\n            for i in range(t, m):\n                for j in range(pos, pos + c[i]):\n                    res[j - 1] = i + 1\n                pos += c[i]\n\n            break\n\n    if pos + d < n + 1:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(*res)\n\n\n\"\"\"--------------------------------------------------------------------------------------------------------\"\"\"\n\n# Python 2 and 3 footer by Pajenegod and j1729\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(BytesIO):\n    newlines = 0\n\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0, 2),\n                   super(FastIO, self).write(s))[0])\n        return s\n\n    def read(self):\n        while self._fill():\n            pass\n        return super(FastIO, self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill()\n            self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s: self.buffer.write(s.encode('ascii'))\n            self.read = lambda: self.buffer.read().decode('ascii')\n            self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\ndef input(): return sys.stdin.readline().rstrip('\\r\\n')\n\n\nif __name__ == '__main__':\n    main()\n# threading.Thread(target=main).start()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, d, m;\n  cin >> n >> m >> d;\n  int c[m], sum = 0;\n  for (int i = 0; i < m; i++) {\n    cin >> c[i];\n    sum += c[i];\n  }\n  d--;\n  if (sum + (m + 1) * d >= n) {\n    cout << \"YES\" << endl;\n    int k = (d > 0 ? (n - sum) / d : 0), res = (d > 0 ? (n - sum) % d : 0),\n        cnt = 0, id = 0;\n    bool flag = 1;\n    for (int i = 1; i <= n; i++) {\n      int j;\n      if (cnt == k && res) {\n        k++, d = res;\n        res = 0;\n      }\n      if (cnt < k && flag) {\n        for (j = i; j < i + d && j <= n; j++) {\n          cout << 0 << \" \";\n        }\n        cnt++;\n      } else {\n        for (j = i; j < i + c[id]; j++) {\n          cout << id + 1 << \" \";\n        }\n        id++;\n      }\n      flag = !flag;\n      i = j - 1;\n    }\n    cout << endl;\n  } else\n    cout << \"NO\" << endl;\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,math,itertools\nfrom collections import Counter,deque,defaultdict\nfrom bisect import bisect_left,bisect_right \nfrom heapq import heappop,heappush,heapify, nlargest\nfrom copy import deepcopy\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpl_1(): return list(map(lambda x:int(x)-1, sys.stdin.readline().split()))\ndef inps(): return sys.stdin.readline()\ndef inpsl(x): tmp = sys.stdin.readline(); return list(tmp[:x])\ndef err(x): print(x); exit()\n\nn,m,d = inpl()\nc = inpl()\nres = [0]*(n+1)\nidx = [[-1,-1] for _ in range(m)]\nnow = n\nfor i in range(m)[::-1]:\n    idx[i][1] = now\n    for x in range(c[i]):\n        res[now] = i+1\n        now -= 1\n    idx[i][0] = now+1\n# print(res,idx)\nnow = 0\nfor i in range(m):\n    nx = now+d\n    if nx>n or res[nx]: break\n    for j in range(idx[i][0],idx[i][1]+1):\n        res[j] = 0\n    for j in range(nx,min(n-1,nx+c[i])):\n        res[j] = i+1\n        now = j\nelse:\n    if now+d<n+1: err('NO')\nprint('YES')\nprint(*res[1:])\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    public static void main(String[] args) {\n        FastReader ip = new FastReader();\n        OutputStream output = System.out;\n        PrintWriter out = new PrintWriter(output);\n        int n=ip.nextInt();\n        int m=ip.nextInt();\n        int d=ip.nextInt();\n        int arr[]=new int[m];\n        int pd=0;\n        for(int i=0;i<m;i++){\n            arr[i]=ip.nextInt();\n            pd+=arr[i];\n        }\n        int path[]=new int[n+1];\n        int type=m;\n        int j=n;\n        for(int i=m-1;i>=0;i--){\n            int length=arr[i];\n            int c=0;\n            while(c!=length){\n                path[j]=type;\n                c++;\n                j--;\n            }\n            type--;\n        }\n        Queue<Integer> pq=new LinkedList<>();\n        int v=0;\n        for(int i=1;i<=n;i++){\n            if(path[i]>v){\n                pq.add(i);\n                v=path[i];\n            }\n        }\n        int pos=0;\n        int k=0;\n        boolean ans=true;\n        while(pos<n+1){\n           int max=pos+d;\n           if(max>=n+1){\n               break;\n           }\n           if(path[max]==0){\n               if(pq.isEmpty()){\n                   ans=false;\n                   break;\n               }\n               int near=pq.poll();\n               int len=arr[k];\n               for(int i=max;i<max+len;i++){\n                   path[i]=path[near];\n                   path[near]=0;\n                   near++;\n               }\n               pos=(max+(len-1));\n           \n           }else{\n               pos=max;\n               while(pos<=n && path[pos]!=0 ){\n                   pos++;\n               }\n           }\n           k++;\n\n        }\n        if(ans) {\n            out.println(\"YES\");\n            for (int i = 1; i <= n; i++) {\n                out.print(path[i] + \" \");\n            }\n        }else{\n            out.println(\"NO\");\n        }\n        out.close();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long int n, m, d;\n  cin >> n >> m >> d;\n  vector<long long int> plat(m);\n  for (long long int i = 0; i < (m); i++) {\n    cin >> plat[i];\n  }\n  vector<long long int> suff(m + 1);\n  for (long long int i = m - 1; i >= (0); i--) {\n    suff[i] = plat[i] + suff[i + 1];\n  }\n  long long int pos = 0, l = 0;\n  vector<long long int> ans(n + 2);\n  while (pos < n + 1) {\n    long long int next = min(pos + d, n - suff[l] + 1);\n    if (pos + d <= n && suff[l] == 0) {\n      cout << \"NO\" << endl;\n      return;\n    }\n    if (pos + d > n && suff[l] == 0) {\n      break;\n    }\n    ans[next] += (l + 1);\n    ans[next + plat[l]] -= (l + 1);\n    pos = next + plat[l] - 1;\n    l++;\n  }\n  for (long long int i = 1; i < (n + 1); i++) {\n    ans[i] += ans[i - 1];\n  }\n  cout << \"YES\" << endl;\n  for (long long int i = 1; i < (n + 1); i++) {\n    cout << ans[i] << \" \";\n  }\n  cout << endl;\n}\nint main() {\n  long long int t;\n  t = 1;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 1001;\nint N, M, D;\nint C[MAX_N];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  cin >> N >> M >> D;\n  int segments = 0;\n  for (int i = 1; i <= M; i++) {\n    cin >> C[i];\n    segments += C[i];\n  }\n  int blank = max(0, N - segments);\n  deque<int> river;\n  int left = 0;\n  for (int i = 1; i <= M; i++) {\n    int next = left + min(D, blank);\n    for (int j = left + 1; j < next; j++) {\n      river.push_back(0);\n      if (blank > 0) blank--;\n    }\n    for (int j = next; j <= next + C[i] - 1; j++) river.push_back(i);\n    left = next + C[i] - 1;\n  }\n  for (int i = left + 1; i < left + D; i++) river.push_back(0);\n  if (river.size() < N) {\n    cout << \"NO\";\n    return 0;\n  }\n  while (river.size() > N && river[0] == 0) {\n    river.pop_front();\n  }\n  while (river.size() > N && river.back() == 0) {\n    river.pop_back();\n  }\n  if (river.size() > N) {\n    vector<int> ans(river.begin(), river.end());\n    for (int i = 0; i < ans.size() && ans.size() > N; i++) {\n      if (ans[i] == 0) {\n        ans.erase(ans.begin() + i);\n        i -= 1;\n      }\n    }\n    river = deque<int>(ans.begin(), ans.end());\n  }\n  cout << \"YES\\n\";\n  for (int i = 0; i < N; i++) cout << river[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class P598C {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] line = br.readLine().split(\" \");\n        int n = Integer.parseInt(line[0]);\n        int m = Integer.parseInt(line[1]);\n        int d = Integer.parseInt(line[2]);\n        line = br.readLine().split(\" \");\n        int[] platforms = new int[m];\n        for(int i=0; i<m; i++) {\n            platforms[i] = Integer.parseInt(line[i]);\n        }\n        int totalPlatLength = 0;\n        for (int platform : platforms) {\n            totalPlatLength += platform;\n        }\n        int totalJumpLength = (m+1) * (d-1);\n        if(totalJumpLength + totalPlatLength >= n) {\n            System.out.println(\"YES\");\n            int reqJumpLength = n - totalPlatLength;\n            int curPlatIdx = 0;\n            int curPlatRem = 0;\n            int curJumpRem = d-1;\n            for(int i=0; i<n; i++) {\n                if(reqJumpLength > 0 && curJumpRem > 0 && curPlatRem == 0) {\n                    System.out.print(\"0 \");\n                    reqJumpLength--;\n                    curJumpRem--;\n                } else if (curPlatRem > 0) {\n                    System.out.print(curPlatIdx + \" \");\n                    curPlatRem--;\n                } else {\n                    curJumpRem = d-1;\n                    curPlatRem = platforms[curPlatIdx] - 1;\n                    curPlatIdx++;\n                    System.out.print(curPlatIdx + \" \");\n                }\n            }\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Solve \n{\n    public static void main(String args[])\n    {\n        Scanner s1=new Scanner(System.in);\n        int n,platform,jump;\n        n=s1.nextInt();\n        platform=s1.nextInt();\n        jump=s1.nextInt();\n        int arr1[]=new int[n+1];\n        for(int i=1;i<=n;i++)\n        {\n            arr1[i]=0;\n        }\n        int platlen[]=new int[platform];\n        int sum=0;\n        for(int i=0;i<platform;i++)\n        {\n            platlen[i]=s1.nextInt();\n            platlen[i]--;\n            sum+=platlen[i];\n        }\n        sum+=(platform+1)*jump;\n        if(sum<=n)\n        {\n            System.out.println(\"NO\");\n            System.exit(0);\n        }\n        sum-=(platform+1)*jump;\n        sum+=platform;\n        System.out.println(\"YES\");\n        int diff=n-sum;\n        int avg=diff/(platform+1);\n        int rem=diff%(platform+1);\n        int pos=1;\n        int platidx=0;\n        while(pos<=n)\n        {\n            for(int i=0;i<avg;i++)\n            {\n                arr1[pos]=0;\n                pos++;\n            }\n            if(rem>0)\n            {\n                arr1[pos]=0;\n                pos++;\n                rem--;\n            }\n            if(pos>n)\n            {\n                break;\n            }\n            for(int i=0;i<=platlen[platidx];i++)\n            {\n                arr1[pos]=platidx+1;\n                pos++;\n            }\n            platidx++;\n        }\n        for(int i=1;i<=n;i++)\n        {\n            System.out.print(arr1[i]+\" \");\n        }\n        System.out.println(\"\");\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class problem3 {\n    public static void main(String[] args) throws Exception {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer tokenizer = new StringTokenizer(reader.readLine());\n        int n = Integer.parseInt(tokenizer.nextToken());\n        int m = Integer.parseInt(tokenizer.nextToken());\n        int d = Integer.parseInt(tokenizer.nextToken());\n        int[] c = new int[m];\n        tokenizer = new StringTokenizer(reader.readLine());\n        int sum_c = 0;\n        for (int i = 0; i < m; i++) {\n            c[i] = Integer.parseInt(tokenizer.nextToken());\n            sum_c+=c[i];\n        }\n        if(d*(m+1) + sum_c - m < n+1){\n            System.out.println(\"NO\");\n        }else{\n            System.out.println(\"YES\");\n            int gasps = n - sum_c;\n            for (int i = 0; i < m; i++) {\n                if(gasps > 0){\n                    int min = Math.min(d-1, gasps);\n                    for (int j = 0; j < min; j++) {\n                        System.out.print(0+\" \");\n                    }\n                    gasps-=min;\n                }\n                for(int j = 0; j < c[i];j++){\n                    System.out.print((i+1)+\" \");\n                }\n            }\n            for (int i = 0; i < gasps; i++) {\n                System.out.print(0+\" \");\n            }\n            System.out.println();\n        }\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nplatforms = list(map(int, input().split()))\nriver = [0 for i in range(n + 2)]\n\nsum_len_platforms = sum(platforms)#\u0441\u0443\u043c\u043c\u0430\u0440\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u043d\u0430 \u0432\u0441\u0435\u0445 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\nmax_len_gap = d - 1#\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u043a \u043c\u0435\u0436\u0434\u0443 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430\u043c\u0438\nsum_len_gaps = n - sum_len_platforms#\u0441\u0443\u043c\u043c\u0430\u0440\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u043d\u0430 \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u043e\u0432\nmax_num_gaps = m + 1#\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u043e\u0432, \u043c\u0435\u0436\u0434\u0443 \u0431\u0435\u0440\u0435\u0433\u043e\u043c \u0438 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u043e\u0439 \u0442\u043e\u0436\u0435 \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f\n\nif sum_len_platforms + max_len_gap * max_num_gaps < n:\n    print('NO')\n    exit()\n\nelif sum_len_gaps == 0:\n    position = 0\n\n    for i in range(len(platforms)):\n        for p in range(position + 1, position + platforms[i] + 1):\n            river[p] = i + 1\n\n        position += platforms[i]\n\nelse:\n    gaps = []\n    c = sum_len_gaps // max_len_gap\n\n    for _ in range(sum_len_gaps // max_len_gap):\n        gaps.append(max_len_gap)\n\n    if sum_len_gaps % max_len_gap != 0:\n        gaps.append(sum_len_gaps % max_len_gap)\n\n    num_gaps = len(gaps)\n\n    position = 0\n    j = 0\n\n    for i in range(len(platforms)):\n\n        if j < num_gaps:\n            position += gaps[j]\n            j += 1\n\n        for p in range(position + 1, position + platforms[i] + 1):\n            river[p] = i + 1\n\n        position += platforms[i]\n\nprint('YES')\nprint(*river[1:-1])\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\narr = list(map(int, input().split()))\n\ntmp = [0] * (d - 1)\nans = list()\n\nfor idx in range(m):\n    tmp.extend([idx + 1] * arr[idx])\n    tmp.extend([0] * (d - 1))\n\nif len(tmp) < n:\n    print(\"NO\")\n    exit()\n\nclear_zeros = len(tmp) - n\n\nfor v in tmp:\n    if v == 0 and clear_zeros > 0:\n        clear_zeros -= 1\n    else:\n        ans.append(v)\n\nprint(\"YES\")\nprint(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nconst long long maxn = 2e5 + 5;\nlong long id[10010];\nlong long l[10010];\nlong long ans[10010];\nint32_t main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long n, m, d;\n  cin >> n >> m >> d;\n  long long tot = 0;\n  for (long long i = 0; i < m; ++i) {\n    cin >> l[i + 1];\n    tot += l[i + 1];\n  }\n  l[0] = 1;\n  for (long long i = 1; i <= m + 1; ++i) {\n    long long x = id[i - 1] + l[i - 1] - 1;\n    if (i == m + 1) {\n      if (x + d <= n) {\n        cout << \"NO\" << '\\n';\n        ;\n        return 0;\n      }\n      break;\n    }\n    long long temp = min(x + d, n - tot + 1);\n    id[i] = temp;\n    tot -= l[i];\n  }\n  cout << \"YES\" << '\\n';\n  ;\n  for (long long i = 1; i <= m; ++i) {\n    for (long long j = id[i]; j <= id[i] + l[i] - 1; ++j) {\n      ans[j] = i;\n    }\n  }\n  for (long long i = 1; i <= n; ++i) {\n    cout << ans[i] << \" \";\n  }\n  cout << '\\n';\n  ;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\n\npublic class Main {\n\n    public static int nextInt(BufferedReader sc) throws IOException {\n        int a = 0;\n        int k = 1;\n        int b = sc.read();\n        while (b < '0' || b > '9') {\n            if (b == '-') k = -1;\n            b = sc.read();\n        }\n        while (b >= '0' && b <= '9') {\n            a = a * 10 + (b - '0');\n            b = sc.read();\n        }\n        return a * k;\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader r = new BufferedReader(new InputStreamReader(System.in));\n        int n = nextInt(r);\n        int m = nextInt(r);\n        int d = nextInt(r);\n        int[] tiles = new int[m];\n        int totalSum = 0;\n        for (int i = 0; i < m; i++) {\n            tiles[i] = nextInt(r);\n            totalSum += tiles[i];\n        }\n        int[] res = new int[n];\n        int cur = -1;\n        for (int i = 0; i < m; i++) {\n            if (cur + d + totalSum >= n) {\n                int jump = n - totalSum - cur;\n                cur += jump;\n                for (int j = i; j < m; j++) {\n                    for (int k = 0; k < tiles[j]; k++) {\n                        res[cur] = j + 1;\n                        cur++;\n                    }\n                }\n                System.out.println(\"YES\");\n                for (int z: res) System.out.print(z + \" \");\n                return;\n            }\n            cur += d;\n            for (int k = 0; k < tiles[i]; k++) {\n                res[cur] = i + 1;\n                cur++;\n            }\n            cur--;\n            totalSum -= tiles[i];\n        }\n        if (cur + d >= n) {\n            System.out.println(\"YES\");\n            for (int z: res) System.out.print(z + \" \");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nC = list(map(int, input().split()))\nt =  n-sum(C)\nif t > (m+1)*(d-1):\n    print('NO')\n    exit()\n\nq, r = divmod(t, m+1)\n\ncur = 0\nans = [0]*n\nfor i in range(m):\n    if i <= r-1:\n        for j in range(cur+q+1, cur+q+1+C[i]):\n            ans[j] = i+1\n        cur += q+1+C[i]\n    else:\n        for j in range(cur+q, cur+q+C[i]):\n            ans[j] = i+1\n        cur += q+C[i]\nprint('YES')\nprint(*ans)\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = [int(i) for i in input().split()]\nc = [int(i) for i in input().split()]\nr, cur, ind, lst = sum(c), 0, 0, [0] * n\nwhile cur < n + 1 and ind < len(c):\n    pi = min(cur + d, n - r + 1)\n    for j in range(pi, pi + c[ind]):\n        lst[j - 1] = ind + 1\n    cur = pi + c[ind] - 1\n    r -= c[ind]\n    ind += 1\nif cur + d >= n + 1:\n    print(\"YES\")\n    print(\" \".join(map(str, lst)))\nelse:\n    print(\"NO\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long power(long long x, long long y) {\n  long long res = 1;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % 1000000007;\n    y = y >> 1;\n    x = (x * x) % 1000000007;\n  }\n  return res;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long q = 1;\n  while (q--) {\n    long long n, m, d;\n    cin >> n >> m >> d;\n    long long c[m];\n    long long ppr[m];\n    long long n1 = n;\n    int flag = 0;\n    for (long long i = 0; i < m; i++) {\n      cin >> c[i];\n      n1 -= (c[i] - 1);\n    }\n    ppr[m - 1] = 0;\n    for (long long i = m - 2; i >= 0; i--) {\n      ppr[i] = ppr[i + 1] + 1;\n    }\n    if ((m + 1) * d < (n1 + 1))\n      cout << \"NO\" << endl;\n    else {\n      cout << \"YES\" << endl;\n      long long ctr = 0;\n      long long i = 0;\n      while ((n1 - i) > (m - ctr)) {\n        i++;\n        if ((i % d) == 0) {\n          for (long long j = 0; j < c[ctr]; j++) {\n            cout << ctr + 1 << \" \";\n          }\n          ctr++;\n        } else {\n          cout << \"0\"\n               << \" \";\n        }\n      }\n      while (i < n1) {\n        i++;\n        for (long long j = 0; j < c[ctr]; j++) {\n          cout << ctr + 1 << \" \";\n        }\n        ctr++;\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class PlatformsJumping {\n\n\t// https://codeforces.com/contest/1256/problem/C\n\t\n\tpublic static void main(String[] args) throws IOException, FileNotFoundException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\t//BufferedReader in = new BufferedReader(new FileReader(\"PlatformsJumping\"));\n\n\t\tStringTokenizer st = new StringTokenizer(in.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint d = Integer.parseInt(st.nextToken());\n\t\tint[] arr = new int[m];\n\t\tint total=0;\n\t\tst = new StringTokenizer(in.readLine());\n\t\tfor (int i=0; i<m; i++) {\n\t\t\tarr[i] = Integer.parseInt(st.nextToken());\n\t\t\ttotal += arr[i];\n\t\t}\n\t\tint leftover = n - total;\n\t\t\n\t\tint[] f = new int[n+2];\n\t\tint pointer=0;\n\t\tfor (int i=0; i<n; i++) {\n\t\t\t//f[i+d] = pointer+1;\n\t\t\tif (pointer >= arr.length) break;\n\t\t\tif (leftover - (d-1) >= 0) {\n\t\t\t\tfor (int j=i+d; j<i+d+arr[pointer] && j < n+1; j++) {\n\t\t\t\t\tf[j] = pointer+1;\n\t\t\t\t}\n\t\t\t\ti = i+d+arr[pointer]-2;\n\t\t\t\tleftover -= (d-1);\n\t\t\t\tpointer++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (int j=i+leftover+1; j<i+leftover+1+arr[pointer] && j < n+1; j++) {\n\t\t\t\t\tf[j] = pointer+1;\n\t\t\t\t}\n\t\t\t\ti = i+leftover+1+arr[pointer]-2;\n\t\t\t\tleftover =0;\n\t\t\t\tpointer++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tint steps =0;\n\t\tfor (int i=n; i>=1; i--) {\n\t\t\tif (f[i] != 0) break;\n\t\t\tsteps++;\n\t\t\tleftover--;\n\t\t}\n\t\t\n\t\tif (leftover > 0 || steps+1 > d) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tfor (int i=1; i<n+1; i++) {\n\t\t\t\tSystem.out.print(f[i] + \" \");\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n\ndef solve():\n    n, = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    was = set()\n    for value in range(1, n + 1):\n        index = a.index(value)\n        while index > 0 and a[index] < a[index - 1] and index not in was:\n#            print(\"index = \", index, \"a:\", *a)\n            if index > 0 and a[index] < a[index - 1] and index not in was:\n                was.add(index)\n                a[index], a[index - 1] = a[index - 1], a[index]\n#                print(\"change\")\n#            print(\"after a:\", *a)\n            index -= 1\n    print(*a)\n\n\nn, m, d = map(int, sys.stdin.readline().split())\nc = list(map(int, sys.stdin.readline().split()))\npos = [0] * m + [n + 1]\nfor i in range(m - 1, -1, -1):\n    pos[i] = pos[i + 1] - c[i]\n# print(\"init pos:\", *pos)\n\nx = 0\ni = 0\nwhile x <= n - d:\n    if i >= m:\n        print(\"NO\")\n        sys.exit()\n    if pos[i] > x + d:\n        pos[i] = x + d\n    x = pos[i] + c[i] - 1\n    i += 1\n#    print(\"x =\", x)\n#    print(\"res:\", *res)\n\nres = [0] * (n + 1)\nfor i in range(m):\n    for j in range(pos[i], pos[i] + c[i]):\n        res[j] = i + 1\nprint(\"YES\")\nprint(*res[1:])\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> c(m);\n  for (int i = 0; i < m; i++) cin >> c[i];\n  vector<int> ans(n + 2);\n  for (long long i = m - 1, pos = n; i >= 0; i--) {\n    for (long long len = 0; len < c[i]; len++) {\n      ans[pos - len] = i + 1;\n    }\n    pos -= c[i];\n  }\n  long long now = 0;\n  while (true) {\n    while (now + 1 < n + 1 && ans[now + 1] != 0) {\n      now++;\n    }\n    if (now + d >= n + 1) break;\n    if (ans[now + d] == 0) {\n      long long lpos = -1;\n      for (long long i = now + d; i < n + 2; i++) {\n        if (ans[i] != 0) {\n          lpos = i;\n          break;\n        }\n      }\n      if (lpos == -1) {\n        cout << \"No\\n\";\n        return 0;\n      }\n      long long rpos = -1;\n      for (long long i = lpos; i < n + 2; i++)\n        if (ans[i] == ans[lpos]) {\n          rpos = i;\n        }\n      while (ans[now + d] == 0) {\n        swap(ans[lpos - 1], ans[rpos]);\n        lpos--;\n        rpos--;\n      }\n    }\n    now += d;\n  }\n  cout << \"YES\\n\";\n  for (long long i = 1; i <= n; i++) cout << ans[i] << \" \";\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int n = Integer.parseInt(st.nextToken()); int m = Integer.parseInt(st.nextToken()); int d = Integer.parseInt(st.nextToken());\n        int[] platforms = new int[m];\n        st = new StringTokenizer(br.readLine());\n        for (int i=0; i<m; i++) {\n            platforms[i] = Integer.parseInt(st.nextToken());\n        }\n        int[] river = new int[10000000];\n        int curPos = d;\n        for (int i=0; i<m; i++) {\n            river[curPos] = i+1;\n            curPos += platforms[i]+d-1;\n        }\n        if (curPos<n+1) {\n            System.out.println(\"NO\");\n        } else {\n            System.out.println(\"YES\");\n            int[] dist = new int[m+1];\n            for (int i=0; i<m+1; i++) {\n                dist[i] = d;\n            }\n            int amt = curPos-n-1;\n            int index = 0;\n            for (int i=0; i<amt; i++) {\n                dist[index]--;\n                index = (index+1) % (m+1);\n            }\n            for (int i=0; i<dist[0]-1; i++) {\n                System.out.print(0+\" \");\n            }\n            for (int j=0; j<m; j++) {\n                for (int i=0; i<platforms[j]; i++) {\n                    System.out.print((j+1)+\" \");\n                }\n                for (int i=0; i<dist[j+1]-1; i++) {\n                    System.out.print(0+\" \");\n                }\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import print_function\nl1 = list(map(int, raw_input().split()))\nn, m, d = l1[0], l1[1], l1[2]\nc = list(map(int, raw_input().split()))\nsumc = sum(c)\nif (sumc + (m + 1) * (d - 1) < n):\n    print (\"NO\")\nelse:\n    print (\"YES\")\n    zeros = n - sumc\n    bnum = 1\n    for a in range(m):\n        for i in range(d - 1):\n            if zeros == 0:\n                break\n            else:\n                zeros -= 1\n                print (\"0\", end=\" \")\n        for i in range(c[a]):\n            print(str(bnum), end=\" \")\n        bnum += 1\n    for i in range(d - 1):\n        if zeros == 0:\n            break\n        else:\n            zeros -= 1\n            print(\"0\", end=\" \")"
        },
        {
            "language": 3,
            "solution": "\nmod=10**9+7\nimport sys \nsys.setrecursionlimit(10**6) \nfrom sys import stdin, stdout\nimport bisect\nfrom bisect import bisect_left as bl              #c++ lowerbound bl(array,element)\nfrom bisect import bisect_right as br             #c++ upperbound\nimport itertools\nimport collections\nimport math\nimport heapq\nimport random\ndef modinv(n,p):\n    return pow(n,p-2,p)\ndef ncr(n,r,p):                        #for using this uncomment the lines calculating fact and ifact\n    t=((fact[n])*((ifact[r]*ifact[n-r])%p))%p\n    return t\ndef cin():\n    return map(int,sin().split())\ndef ain():                           #takes array as input\n    return list(map(int,sin().split()))\ndef sin():\n    return input()\ndef inin():\n    return int(input())\n \ndef listToString(s):  \n    \n    # initialize an empty string \n    str1 = \"\"  \n    \n    # traverse in the string   \n    for ele in s:  \n        str1 += ele   \n    \n    # return string   \n    return str1 \n\"\"\"*******************************************************\"\"\"\ndef main():\n    n,m,d=cin()\n    a=ain()\n    x=[]\n    xx=0\n    for i in a:\n        xx+=1\n        for j in range(i):\n            x.append(xx)\n        if(len(x)>n):\n            print(\"NO\")\n            sys.exit()\n    k=n-len(x)\n    y=[]\n    x=0\n    for i in a:\n        x+=1\n        for j in range(d-1):\n            if(k==0):\n                break\n            y.append(0)\n            k-=1\n        for j in range(i):\n            y.append(x)\n    if(k>d-1):\n        print(\"NO\")\n        sys.exit()\n    for i in range(k):\n        y.append(0)\n    print(\"YES\")\n    print(*y)\n######## Python 2 and 3 footer by Pajenegod and c1729\n \npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n \nimport os, sys\nfrom io import IOBase, BytesIO\n \nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n \n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n \n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n \n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n \n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s:self.buffer.write(s.encode('ascii'))\n            self.read = lambda:self.buffer.read().decode('ascii')\n            self.readline = lambda:self.buffer.readline().decode('ascii')\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n# Cout implemented in Python\nimport sys\nclass ostream:\n    def __lshift__(self,a):\n        sys.stdout.write(str(a))\n        return self\ncout = ostream()\nendl = '\\n'\n \n# Read all remaining integers in stdin, type is given by optional argument, this is fast\ndef readnumbers(zero = 0):\n    conv = ord if py2 else lambda x:x\n    A = []; numb = zero; sign = 1; i = 0; s = sys.stdin.buffer.read()\n    try:\n        while True:\n            if s[i] >= b'0' [0]:\n                numb = 10 * numb + conv(s[i]) - 48\n            elif s[i] == b'-' [0]: sign = -1\n            elif s[i] != b'\\r' [0]:\n                A.append(sign*numb)\n                numb = zero; sign = 1\n            i += 1\n    except:pass\n    if s and s[-1] >= b'0' [0]:\n        A.append(sign*numb)\n    return A\n \nif __name__== \"__main__\":\n  main()"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\n\nrints = lambda: [int(x) for x in stdin.readline().split()]\nn, m, d = rints()\nc, ans = rints(), [0] * n\npos, su = [], 0\n\nfor i in range(m - 1, -1, -1):\n    pos.append(n + 1 - su - c[i])\n    su += c[i]\n\npos.append(0)\npos.reverse()\n\nfor i in range(m):\n    if pos[i + 1] - pos[i] > d:\n        pos[i + 1] = min(pos[i] + d, n)\n\n    for j in range(pos[i + 1], pos[i + 1] + c[i]):\n        ans[j - 1] = i + 1\n\n    pos[i + 1] += c[i] - 1\n\n# print(pos)\nif (n + 1) - pos[-1] > d:\n    print('NO')\nelse:\n    print('YES')\n    print(' '.join(map(str, ans)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1000000007;\nconst long long mod2 = 998244353;\nconst long long inf = 1e18 * 4;\nconst long double pai = acos(-1);\nint n, m, d;\nint a[100009];\nint ans[100009];\nint here[100009];\nint main() {\n  cin >> n >> m >> d;\n  a[0] = 1;\n  for (int i = 1; i <= m; i++) cin >> a[i];\n  for (int i = 1; i <= m + 1; i++) {\n    ans[i] = ans[i - 1] + a[i - 1] + d - 1;\n  }\n  if (ans[m + 1] < n + 1) cout << \"NO\" << endl, exit(0);\n  ans[m + 1] = n + 1;\n  for (int i = m; i > 0; i--) {\n    if (ans[i] + a[i] >= ans[i + 1]) {\n      ans[i] = ans[i + 1] - a[i];\n    }\n    for (int j = ans[i]; j < ans[i] + a[i]; j++) {\n      here[j] = i;\n    }\n  }\n  cout << \"YES\" << endl;\n  for (int i = 1; i <= n; i++) cout << here[i] << \" \";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long mod = 998244353;\nvector<long long> fact(1);\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long power(long long x, long long y) {\n  long long temp;\n  if (y == 0) return 1;\n  temp = power(x, y / 2);\n  if (y % 2 == 0)\n    return temp * temp;\n  else\n    return x * temp * temp;\n}\nlong long power(long long x, long long y, long long p) {\n  long long res = 1;\n  x = x % p;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nlong long modInv(long long n, long long p) { return power(n, p - 2, p); }\nlong long ncr(long long n, long long r) {\n  return (n >= r ? (fact[n] * modInv(fact[r], mod)) % mod *\n                       modInv(fact[n - r], mod) % mod\n                 : 0);\n}\nlong long add(long long a, long long b) {\n  long long z = a + b;\n  if (z >= mod) z -= mod;\n  return z;\n}\nlong long mul(long long a, long long b) { return (a * b) % mod; }\nlong long sub(long long a, long long b) { return (a - b + mod) % mod; }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t = 1, n, i, j, m, d;\n  while (t--) {\n    cin >> n >> m >> d;\n    vector<long long> len(n), ans(n + 1, -1);\n    for (i = 0; i < m; i++) cin >> len[i];\n    long long idx = 0, pos = 0, f = 0;\n    while (1) {\n      if (n + 1 - pos <= d) break;\n      if (idx == m) {\n        f = 1;\n        break;\n      }\n      pos += d;\n      if (pos + len[idx] - 1 > n) break;\n      for (j = pos; j <= pos + len[idx] - 1; j++) ans[j] = idx;\n      pos = pos + len[idx++] - 1;\n    }\n    if (f)\n      cout << \"NO\\n\";\n    else {\n      cout << \"YES\\n\";\n      queue<long long> q;\n      for (i = m - 1; i >= idx; i--) q.push(i);\n      long long cur = n;\n      vector<long long> mark(m);\n      while (!q.empty()) {\n        long long z = q.front();\n        q.pop();\n        for (i = cur; i >= 0 && i >= cur - (len[z] - 1); i--) {\n          if (ans[i] != -1) {\n            if (!mark[ans[i]]) {\n              q.push(ans[i]);\n              mark[ans[i]] = 1;\n            }\n          }\n          ans[i] = z;\n        }\n        cur = i;\n      }\n      for (i = 1; i <= n; i++) cout << ans[i] + 1 << ' ';\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    \n    n,m,d=[int(x) for x in input().split()]\n    c=[int(x) for x in input().split()]\n    \n    remainingC=sum(c)\n    if n<remainingC:\n        print('NO')\n    else:\n        ans0=[] #[n0s,idx,n0s,...]\n        remainingGap=n\n        for idx,x in enumerate(c):\n            n0s=min(remainingGap-remainingC,d-1)\n            ans0.append(n0s)\n            remainingGap-=n0s\n            ans0.append(idx)\n            remainingGap-=x\n            remainingC-=x\n        lastn0=remainingGap\n        ans0.append(lastn0)\n        if lastn0>d-1:\n            print('NO')\n        else:\n            print('YES')\n            ans1=[]\n            for i,x in enumerate(ans0):\n                if i%2==0:\n                    for _ in range(x):\n                        ans1.append(0)\n                else:\n                    for _ in range(c[x]):\n                        ans1.append(x+1)\n            oneLineArrayPrint(ans1)\n            \n    \n    return\n \n#import sys\n#input=sys.stdin.buffer.readline #FOR READING PURE INTEGER INPUTS (space separation ok)\nimport sys\ninput=lambda: sys.stdin.readline().rstrip(\"\\r\\n\") #FOR READING STRING/TEXT INPUTS.\ndef oneLineArrayPrint(arr):\n    print(' '.join([str(x) for x in arr]))\ndef multiLineArrayPrint(arr):\n    print('\\n'.join([str(x) for x in arr]))\ndef multiLineArrayOfArraysPrint(arr):\n    print('\\n'.join([' '.join([str(x) for x in y]) for y in arr]))\n\n\n\nmain()\n"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Double.parseDouble;\nimport static java.lang.Integer.bitCount;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Integer.reverse;\nimport static java.lang.Long.parseLong;\nimport static java.lang.Math.abs;\nimport static java.lang.Math.max;\nimport static java.lang.Math.min;\nimport static java.lang.System.exit;\nimport static java.util.Comparator.comparingInt;\nimport static java.util.Comparator.reverseOrder;\nimport static java.util.Map.Entry.comparingByValue;\nimport static java.util.stream.Collectors.toMap;\n \nimport java.io.*;\nimport java.lang.reflect.Array;\nimport java.lang.reflect.ParameterizedType;\nimport java.lang.reflect.Type;\nimport java.util.*;\n \npublic class Solution {\n \n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n      void solve() throws Exception {\n        int n = nextInt(), m = nextInt(), d = nextInt(), pos = -1, sum = 0, last = 0;\n        int a[] = na(m);\n        for(int x:a) sum += x;\n        int ans[] = new int[2000000];\n        for(int i = 0; i < m; i++) {\n        \tpos += d;\n        \tfor(int j = 0; j < a[i]; j++) {\n        \t\tans[ pos + j ] = i+1;\n        \t\tlast = pos + j;\n        \t}\n        \tpos += a[i] - 1;\n        }\n        if(last + d <= n -1) out.println(\"NO\");\n        else {\n        \tout.println(\"YES\");\n        \tlast -= n - 1;\n        \tfor(int c: ans) {\n        \t\tif(last > 0) {\n        \t\t\tif(c == 0) {\n        \t\t\t\tlast--;\n        \t\t\t} else {\n        \t\t\t\tout.print(c + \" \");\n        \t\t\t\tn--;\n        \t\t\t}\n        \t\t} else {\n        \t\t\tout.print(c + \" \");\n        \t\t\tn--;\n        \t\t}\n        \t\tif(n == 0) break;\n        \t}\n        }\n    }\n \n    // call it like this: lower_bound(a, x + 1) ( /!\\ + 1 )\n    public static int lower_bound(int[] a, int v) {\n        int low = -1, high = a.length;\n        while (high - low > 1) {\n            int h = high + low >>> 1;\n            if (a[h] >= v) {\n                high = h;\n            } else {\n                low = h;\n            }\n        }\n        return high;\n    }\n \n    private String getFraction(int a, int b) {\n        assert b != 0;\n        String sign = (a > 0 && b > 0) || (a < 0) && (b < 0) ? \"+\" : \"-\";\n        a = abs(a);\n        b = abs(b);\n        int gcd = gcd(a, b);\n        return sign + (a / gcd) + \"/\" + (b / gcd);\n    }\n \n    private int gcd(int a, int b) {\n        while (b > 0) {\n            int temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n \n    private int lcm(int a, int b) {\n        return a * (b / gcd(a, b));\n    }\n \n    public static int[] radixSort(int[] f) {\n        if (f.length < 100) {\n            Arrays.sort(f);\n            return f;\n        }\n        int[] to = new int[f.length];\n        {\n            int[] b = new int[65537];\n            for (int i = 0; i < f.length; i++) b[1 + (f[i] & 0xffff)]++;\n            for (int i = 1; i <= 65536; i++) b[i] += b[i - 1];\n            for (int i = 0; i < f.length; i++) to[b[f[i] & 0xffff]++] = f[i];\n            int[] d = f;\n            f = to;\n            to = d;\n        }\n        {\n            int[] b = new int[65537];\n            for (int i = 0; i < f.length; i++) b[1 + (f[i] >>> 16)]++;\n            for (int i = 1; i <= 65536; i++) b[i] += b[i - 1];\n            for (int i = 0; i < f.length; i++) to[b[f[i] >>> 16]++] = f[i];\n            int[] d = f;\n            f = to;\n            to = d;\n        }\n        return f;\n    }\n \n    public static long pow(long a, long n, long mod) {\n        long ret = 1;\n        int x = 63 - Long.numberOfLeadingZeros(n);\n        for (; x >= 0; x--) {\n            ret = ret * ret % mod;\n            if (n << 63 - x < 0)\n                ret = ret * a % mod;\n        }\n        return ret;\n    }\n \n    public static boolean nextPermutation(Integer[] a) {\n        int n = a.length;\n        int i;\n        for (i = n - 2; i >= 0 && a[i] >= a[i + 1]; i--) ;\n        if (i == -1)\n            return false;\n        int j;\n        for (j = i + 1; j < n && a[i] < a[j]; j++) ;\n        int d = a[i];\n        a[i] = a[j - 1];\n        a[j - 1] = d;\n        for (int p = i + 1, q = n - 1; p < q; p++, q--) {\n            d = a[p];\n            a[p] = a[q];\n            a[q] = d;\n        }\n        return true;\n    }\n \n    void print(Object x) {\n        out.print(String.valueOf(x));\n        out.flush();\n    }\n \n    void println(Object x) {\n        out.println(String.valueOf(x));\n        out.flush();\n    }\n \n    // for Map with custom key/value, override toString in your custom class\n    void printMap(Map map) {\n        if (map.keySet().size() == 0) return;\n        Object firstValue = map.keySet().iterator().next();\n        if (map.get(firstValue) instanceof Queue || map.get(firstValue) instanceof List) {\n            for (Object key : map.keySet()) {\n                out.print(String.valueOf(key) + \": \");\n                Collection values = (Collection) map.get(key);\n                for (Object value : values) out.print(String.valueOf(value) + \" \");\n                out.println();\n            }\n        } else if (map.get(firstValue).getClass().isArray()) {\n            for (Object key : map.keySet()) {\n                out.print(String.valueOf(key) + \": \");\n                Object[] values = (Object[]) map.get(key);\n                for (Object value : values) out.print(String.valueOf(value) + \" \");\n                out.println();\n            }\n        } else {\n            for (Object key : map.keySet()) {\n                out.println(String.valueOf(key) + \": \" + map.get(key));\n            }\n        }\n    }\n \n    private int[] na(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n \n    private long[] nal(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n \n    int nextInt() throws IOException {\n        return parseInt(next());\n    }\n \n    long nextLong() throws IOException {\n        return parseLong(next());\n    }\n \n    double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n \n    String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n \n    public static void main(String[] args) throws Exception {\n        try {\n            boolean isLocal = false;\n            if (isLocal) {\n                in = new BufferedReader(new FileReader(\"solution.in\"));\n                out = new PrintWriter(new BufferedWriter(new FileWriter(\"solution.out\")));\n            } else {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(new OutputStreamWriter(System.out));\n            }\n \n            //long lStartTime = System.currentTimeMillis();\n            new Solution().solve();\n            //long lEndTime = System.currentTimeMillis();\n            //out.println(\"Elapsed time in seconds: \" + (double)(lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Feb 22 19:56:29 2020\n\n@author: dennis\n\"\"\"\n\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\nriver_width, n_platforms, jump_length = [int(x) for x in input().split()]\nplatforms = [int(x) for x in input().split()]\nriver = [0]*river_width\nposition = -1\nremaining = platforms.copy()\nfor i, platform in enumerate(platforms):\n    np = position+jump_length\n    while sum(remaining)+np > river_width:\n        np -= 1\n    for x in range(np, np+platform):\n        river[x] = i+1\n    position = x\n    remaining = remaining[1:]\n\nfound = False\nfor x in range(1, jump_length+1):\n    if river[-x] != 0:\n        print('YES')\n        print(*river)\n        found = True\n        break\nif not found:\n    print('NO')\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = [int(x) for x in input().split(' ')]\nc = [int(x) for x in input().split(' ')]\nif sum([max(y - 1, 0) for y in c]) + (m + 1) * d < n + 1:\n    print('NO')\nelse:\n    z = n - sum(c)\n    print('YES')\n    ans = [0] * min(z, d - 1)\n    z -= min(z, d - 1)\n    for (i, y) in enumerate(c):\n        ans += [i + 1] * y + [0] * min(z, (d - 1))\n        z -= min(z, d - 1)\n    while len(ans) > n:\n        ans.remove(0)\n    print(*ans)\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split(' '))\nC = list(map(int, input().split(' ')))\n\nRiver = [0 for i in range(n+2)]\nRiver[0] = 1\nRiver[-1] = 1\nW = n - sum(C)\ni = 0\n\nfor b in range(m):\n    if W >= d-1:\n        i += d\n        River[i:i+C[b]] = [b+1 for j in range(C[b])]\n        W -= (d-1)\n        i += (C[b]-1)\n    elif W > 0:\n        i += W+1\n        River[i:i+C[b]] = [b+1 for j in range(C[b])]\n        W = 0\n        i += (C[b]-1)\n    else:\n        i += 1\n        River[i:i+C[b]] = [b+1 for j in range(C[b])]\n        i += (C[b]-1)\nif W == 0 or W <= d-1:\n    print('YES')\n    print(' '.join(map(str,River[1:-1])))\nelse:\n    print('NO') "
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.io.FileWriter;\nimport java.io.PrintWriter;\n/*\n    Solution Created: 03:06:33 09/03/2021\n    Custom Competitive programming helper.\n*/\npublic class Main {\n\tpublic static void solve() {\n\t\tint n = in.nextInt(), m = in.nextInt(), d = in.nextInt();\n\t\tint[] a = in.na(m);\n\t\tint[] ans = new int[n];\n\t\tint sum = 0;\n\t\tfor(int i : a) sum+=i;\n\t\t\n\t\tif((m+1)*(d-1)+sum<n){\n\t\t\tout.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tint curPos = 0;\n\t\tfor(int i = 0; i<m; i++){\n\t\t\tint placePos = Math.min(curPos + d, n-sum+1);\n\t\t\tfor(int j = placePos; j<placePos+a[i]; j++) ans[j-1] = i+1;\n\t\t\tcurPos = placePos+a[i]-1;\n\t\t\tsum-=a[i];\n\t\t}\n\t\t\n\t\tout.println(\"YES\");\n\t\tout.printlnArray(ans);\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tin = new Reader();\n\t\tout = new Writer();\n\t\tint t = 1;\n\t\twhile(t-->0) solve();\n\t\tout.exit();\n\t}\n\tstatic Reader in; static Writer out;\n\nstatic class Reader {\n\tstatic BufferedReader br;\n\tstatic StringTokenizer st;\n\t\n\tpublic Reader() {\n\t\tthis.br = new BufferedReader(new InputStreamReader(System.in));\n\t}\n\t\n\tpublic Reader(String f){\n\t\ttry {\n\t\t\tthis.br = new BufferedReader(new FileReader(f));\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\tpublic int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) a[i] = nextInt();\n\t\treturn a;\n\t}\n\n\tpublic double[] nd(int n) {\n\t\tdouble[] a = new double[n];\n\t\tfor (int i = 0; i < n; i++) a[i] = nextDouble();\n\t\treturn a;\n\t}\n\t\n\tpublic long[] nl(int n) {\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++) a[i] = nextLong();\n\t\treturn a;\n\t}\n\n\tpublic char[] nca() {\n\t\treturn next().toCharArray();\n\t}\n\n\tpublic String[] ns(int n) {\n\t\tString[] a = new String[n];\n\t\tfor (int i = 0; i < n; i++) a[i] = next();\n\t\treturn a;\n\t}\n\n\tpublic int nextInt() {\n\t\tensureNext();\n\t\treturn Integer.parseInt(st.nextToken());\n\t}\n\n\tpublic double nextDouble() {\n\t\tensureNext();\n\t\treturn Double.parseDouble(st.nextToken());\n\t}\n\n\tpublic Long nextLong() {\n\t\tensureNext();\n\t\treturn Long.parseLong(st.nextToken());\n\t}\n\n\tpublic String next() {\n\t\tensureNext();\n\t\treturn st.nextToken();\n\t}\n\t\n\tpublic String nextLine() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\treturn null;\n\t\t}\n\t}\n\t\n\tprivate void ensureNext() {\n\t\tif (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n}\n\nstatic class Util{\n\t\tprivate static Random random = new Random();\n\t\tstatic long[] fact;\n\t\t\n\t\tpublic static void initFactorial(int n, long mod) {\n\t\t\tfact = new long[n+1];\n\t\t\tfact[0] = 1;\n\t\t\tfor (int i = 1; i < n+1; i++) fact[i] = (fact[i - 1] * i) % mod;\n\t\t}\n\t\t\n\t\tpublic static long modInverse(long a, long MOD) {\n\t\t\tlong[] gcdE = gcdExtended(a, MOD);\n\t\t\tif (gcdE[0] != 1) return -1; // Inverted doesn't exist\n\t\t\tlong x = gcdE[1];\n\t\t\treturn (x % MOD + MOD) % MOD;\n\t\t}\n\t\t\n\t\tpublic static long[] gcdExtended(long p, long q) {\n\t\t\tif (q == 0) return new long[] { p, 1, 0 };\n\t\t\tlong[] vals = gcdExtended(q, p % q);\n\t\t\tlong tmp = vals[2];\n\t\t\tvals[2] = vals[1] - (p / q) * vals[2];\n\t\t\tvals[1] = tmp;\n\t\t\treturn vals;\n\t\t}\n\t\t\n\t\tpublic static long nCr(int n, int r, long MOD) {\n\t\t\tif (r == 0) return 1;\n\t\t\treturn (fact[n] * modInverse(fact[r], MOD) % MOD * modInverse(fact[n - r], MOD) % MOD) % MOD;\n\t\t}\n\t\t\n\t\tpublic static long nCr(int n, int r) {\n\t\t\treturn (fact[n]/fact[r])/fact[n-r];\n\t\t}\n\t\t\n\t\tpublic static long nPr(int n, int r, long MOD) {\n\t\t\tif (r == 0) return 1;\n\t\t\treturn (fact[n] * modInverse(fact[n - r], MOD) % MOD) % MOD;\n\t\t}\n\t\tpublic static long nPr(int n, int r) {\n\t\t\treturn fact[n]/fact[n-r];\n\t\t}\n\t\t\n\t\tpublic static boolean isPrime(int n) { \n\t        if (n <= 1) return false; \n\t        if (n <= 3) return true; \n\t        if (n % 2 == 0 || n % 3 == 0) return false; \n\t        for (int i = 5; i * i <= n; i = i + 6) \n\t            if (n % i == 0 || n % (i + 2) == 0) \n\t            return false; \n\t        return true; \n\t    }\n\t\t\n\t    public static boolean[] getSieve(int n) {\n\t        boolean[] isPrime = new boolean[n+1];\n\t        for (int i = 2; i <= n; i++) isPrime[i] = true;\n\t        for (int i = 2; i*i <= n; i++) if (isPrime[i]) \n\t                for (int j = i; i*j <= n; j++) isPrime[i*j] = false;\n\t        return isPrime;\n\t    }\n\t    \n\t    public static int gcd(int a, int b) { \n\t    \tint tmp = 0;\n\t    \twhile(b != 0) {\n\t    \t\ttmp = b;\n\t    \t\tb = a%b;\n\t    \t\ta = tmp;\n\t    \t}\n\t    \treturn a;\n\t    }\n\t    \n\t    public static long gcd(long a, long b) { \n\t    \tlong tmp = 0;\n\t    \twhile(b != 0) {\n\t    \t\ttmp = b;\n\t    \t\tb = a%b;\n\t    \t\ta = tmp;\n\t    \t}\n\t    \treturn a;\n\t    }\n\t    \n\t    public static int random(int min, int max) {\n\t    \treturn random.nextInt(max-min+1)+min;\n\t    }\n\t    \n\t\tpublic static void dbg(Object... o) { \n\t\t\tSystem.out.println(Arrays.deepToString(o)); \n\t\t}\n\t\t\n\t\tpublic static void reverse(int[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tint tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\t\n\t\tpublic static void reverse(int[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\t\n\t\tpublic static void reverse(long[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tlong tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\t\n\t\tpublic static void reverse(long[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\t\n\t\tpublic static void reverse(float[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tfloat tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\t\n\t\tpublic static void reverse(float[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\t\n\t\tpublic static void reverse(double[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tdouble tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\t\n\t\tpublic static void reverse(double[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\t\n\t\tpublic static void reverse(char[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tchar tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\t\n\t\tpublic static void reverse(char[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\t\n\t\tpublic static <T> void reverse(T[] s, int l , int r) {\n\t\t\tfor(int i = l; i<=(l+r)/2; i++) {\n\t\t\t\tT tmp = s[i];\n\t\t\t\ts[i] = s[r+l-i];\n\t\t\t\ts[r+l-i] = tmp;\n\t\t\t}\n\t    }\n\t\t\n\t\tpublic static <T> void reverse(T[] s) {\n\t\t\treverse(s, 0, s.length-1);\n\t    }\n\t\t\n\t\tpublic static void shuffle(int[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            int t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t\t\n\t    public static void shuffle(long[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            long t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    \n\t    public static void shuffle(float[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            float t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    \n\t    public static void shuffle(double[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            double t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    \n\t    public static void shuffle(char[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            char t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    \n\t    public static <T> void shuffle(T[] s) {\n\t        for (int i = 0; i < s.length; ++i) {\n\t            int j = random.nextInt(i + 1);\n\t            T t = s[i];\n\t            s[i] = s[j];\n\t            s[j] = t;\n\t        }\n\t    }\n\t    \n\t\tpublic static void sortArray(int[] a) {\n\t        shuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\t\n\t\tpublic static void sortArray(long[] a) {\n\t\t\tshuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\t\n\t\tpublic static void sortArray(float[] a) {\n\t\t\tshuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\t\n\t\tpublic static void sortArray(double[] a) {\n\t\t\tshuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\t\n\t\tpublic static void sortArray(char[] a) {\n\t\t\tshuffle(a);\n\t        Arrays.sort(a);\n\t    }\n\t\t\n\t\tpublic static <T extends Comparable<T>> void sortArray(T[] a) {\n\t        Arrays.sort(a);\n\t    }\n\t}\n\nstatic class Writer {\n\tprivate PrintWriter pw;\n\tpublic Writer(){\n\t\tpw = new PrintWriter(System.out);\n\t}\n\t\n\tpublic Writer(String f){\n\t\ttry {\n\t\t\tpw = new PrintWriter(new FileWriter(f));\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\tpublic void printArray(int[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t}\n\t\n\tpublic void printlnArray(int[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t\tpw.println();\n\t}\n\t\n\tpublic void printArray(long[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t}\n\t\n\tpublic void printlnArray(long[] a) {\n\t\tfor(int i = 0; i<a.length; i++) print(a[i]+\" \");\n\t\tpw.println();\n\t}\n\t\n\tpublic void print(Object o) {\n\t\tpw.print(o.toString());\n\t}\n\t\n\tpublic void println(Object o) {\n\t\tpw.println(o.toString());\n\t}\n\t\n\tpublic void println() {\n\t\tpw.println();\n\t}\n\t\n\tpublic void flush() {\n\t\tpw.flush();\n\t}\n\tpublic void exit() {\n\t\tpw.close();\n\t}\n}\n}\n"
        },
        {
            "language": 3,
            "solution": "import math,sys,bisect,heapq\nfrom collections import defaultdict,Counter,deque\nfrom itertools import groupby,accumulate\n#sys.setrecursionlimit(200000000)\nint1 = lambda x: int(x) - 1\ninput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__\nilele = lambda: map(int,input().split())\nalele = lambda: list(map(int, input().split()))\nilelec = lambda: map(int1,input().split())\nalelec = lambda: list(map(int1, input().split()))\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\n#MOD = 1000000000 + 7\ndef Y(c):  print([\"NO\",\"YES\"][c])\ndef y(c):  print([\"no\",\"yes\"][c])\ndef Yy(c):  print([\"No\",\"Yes\"][c])\n\n\nn,m,d = ilele()\nA= alele()\nriver = [0]*n\ncur = n-1\nfor i in range(m-1,-1,-1):\n    x = A[i]\n    while x:\n        river[cur] = i+1\n        cur-=1\n        x-=1\n#print(river)\nstart = -1;p = -1\nwhile True:\n    start+=d\n    if start >= n:\n        break\n    if river[start] != 0:\n        break\n    l = start+1\n    while l < n and river[l] == 0:\n        l+=1\n    if l == n:\n        Y(0)\n        exit(0)\n    r = l\n    v = river[l]\n    ##print(river)\n    while r < n and river[r] == v:\n        river[r] = 0  \n        r+=1\n    length = r -l\n    #print(l,r,length)\n    for i in range(start,start + length):\n        river[i] = v\n    start = start + length - 1\n    #print(river,start)\nY(1)\nprint(*river)\n    \n    \n    "
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\na=[int(o) for o in input().split()]\nans=[0]*n\nj=0\npi=-1\nsa=sum(a)\ncs=0\nflag=0\ni=0\nwhile i<n:\n    if i-pi==d or sa-cs==(n-i):\n        if j>=m:\n            flag=1\n            break\n        k=0\n        while k<a[j]:\n            ans[i]=j+1\n            i+=1\n            k+=1\n        cs+=a[j]\n        pi=i-1\n        j+=1\n\n    else:\n        i+=1\nif flag==0:\n    print(\"YES\")\n    print(*ans)\nelse:\n    print(\"NO\")\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    static PrintWriter out;\n\n    public static void main(String[] args) throws IOException {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        int n = nextInt();\n        int m = nextInt();\n        int d = nextInt();\n        int[] a = new int[m];\n        int sum = 0;\n        for (int i = 0; i < m; i++) {\n            a[i] = nextInt();\n            sum += a[i];\n        }\n        int[] ans = new int[m];\n        int i = 0;\n        int pos = 0;\n        while (pos < n + 1) {\n            if (i == m) {\n                if (pos + d < n + 1) {\n                    out.print(\"NO\");\n                    out.close();\n                    return;\n                } else {\n                    break;\n                }\n            }\n            if (pos + d >= n + 1) {\n                pos++;\n                for (int j = i; j < m; j++) {\n                    ans[j] = pos;\n                    pos += a[j];\n                }\n                break;\n            }\n            pos =  Math.min(pos + d, n - sum + 1);\n            sum -= a[i];\n            ans[i] = pos;\n            pos += a[i] - 1;\n            i++;\n        }\n        out.println(\"YES\");\n        int p = 0;\n        for (int j = 1; j <= n; j++) {\n            if (p < m && ans[p] <= j && ans[p] + a[p] - 1 >= j) {\n                out.print(p + 1 + \" \");\n                if (j == a[p] + ans[p] - 1)\n                    p++;\n            } else {\n                out.print(\"0 \");\n            }\n        }\n        out.close();\n    }\n\n    static BufferedReader br;\n    static StringTokenizer st = new StringTokenizer(\"\");\n\n    static long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    static int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    static String next() throws IOException {\n        while (!st.hasMoreTokens()) {\n            st = new StringTokenizer(br.readLine());\n        }\n        return st.nextToken();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=[int(x) for x in input().split(' ')]\nlist1=[int(x) for x in input().split(' ')]\nx=(m+1)*(d-1)+sum(list1)\nlist2=[]\na=0\nb=0\nif x < n:\n    print('NO')\nelse:\n    print('YES')\n    n0=n-sum(list1)\n    while b <= m:\n        if a == 0:\n            if n0 >= d-1:\n                list2.extend(['0']*(d-1))\n                a+=1\n                b+=1\n                n0-=(d-1)\n            elif 0 < n0 < (d-1):\n                list2.extend(['0']*n0)\n                a+=1\n                b+=1\n                n0=0\n            else:\n                a+=1\n                b+=1\n        else:\n            list2.extend([str(b)]*list1[b-1])\n            a-=1\n    print(' '.join(list2)) \n        \n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Q3 {\n\n    public static void main(String[] args) {\n\n        InputReader in = new InputReader();\n        PrintWriter out = new PrintWriter(System.out);\n\n        int n =in.nextInt(),m=in.nextInt(),d=in.nextInt(),sum=0;\n        int arr[]=new int[m];\n        for(int  i=0;i<arr.length;i++){\n            arr[i]=in.nextInt();\n            sum+=arr[i];\n        }\n        StringBuilder sb=new StringBuilder();\n        int wait=n-sum,val=1,j=0;\n        for(int i =0;i<n;){\n            int cnt=0;\n            for(;i<n && wait>0 && cnt<d-1;){\n                cnt++;\n                sb.append(0+\" \");\n                i++;\n                wait--;\n            }\n            if(i==n)\n                break;\n            if(j==arr.length){\n                out.println(\"NO\");\n                out.close();\n                return;\n            }\n            for(;arr[j]-->0 && i<n;){\n                i++;\n                sb.append(val+\" \");\n            }\n            val++;j++;\n        }\n        out.println(\"YES\");\n        out.println(sb);\n        out.close();\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        static long gcd(long a, long b) {\n            return b == 0 ? a : gcd(b, a % b);\n        }\n\n        static int[][] packU(int n, int[] from, int[] to) {\n            int[][] g = new int[n][];\n            int[] p = new int[n];\n            for (int f : from)\n                p[f]++;\n            for (int t : to)\n                p[t]++;\n            for (int i = 0; i < n; i++)\n                g[i] = new int[p[i]];\n            for (int i = 0; i < from.length; i++) {\n                g[from[i]][--p[from[i]]] = to[i];\n                g[to[i]][--p[to[i]]] = from[i];\n            }\n            return g;\n        }\n\n        public int[] shuffle(int[] arr) {\n            Random r = new Random();\n            for (int i = 1, j; i < arr.length; i++) {\n                j = r.nextInt(i);\n                arr[i] = arr[i] ^ arr[j];\n                arr[j] = arr[i] ^ arr[j];\n                arr[i] = arr[i] ^ arr[j];\n            }\n            return arr;\n        }\n\n        public InputReader() {\n            reader = new BufferedReader(new InputStreamReader(System.in), 32768);\n            tokenizer = null;\n        }\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(System.in), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public char nextChar() {\n            return next().charAt(0);\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n# inf = open('input.txt', 'r')\n# reader = (line.rstrip() for line in inf)\nreader = (line.rstrip() for line in sys.stdin)\ninput = reader.__next__\n\nn, m, d = map(int, input().split())\ncs = list(map(int, input().split()))\nmaxAns = []\nfor i, c in enumerate(cs):\n    maxAns.extend([0] * (d - 1))\n    maxAns.extend([i+1] * c)\nmaxAns.extend([0] * (d-1))\nif len(maxAns) < n:\n    print('NO')\nelse:\n    ctrDel = len(maxAns) - n\n    ans = [0] * n\n    i = j = 0\n    while ctrDel > 0:\n        if maxAns[j] == 0:\n            ctrDel -= 1\n            j += 1\n        else:\n            ans[i] = maxAns[j]\n            i += 1\n            j += 1\n    while i < n:\n        ans[i] = maxAns[j]\n        i += 1\n        j += 1\n    print('YES')\n    print(*ans)\n    \n# inf.close()\n"
        },
        {
            "language": 3,
            "solution": "def rsrch(k, x):\n    for i in range(len(k) - 1, -1, -1):\n        if k[i] == x:\n            return i\n    return -1\n\n\nn, m, d = map(int, input().split())\npf = map(int, input().split())\n\ntrail = []\n\nidx = 1\nfor i in pf:\n    temp = [idx for x in range(i)]\n    trail += temp\n    idx += 1\nidx = 1\nx = 1\n\nwhile len(trail) < n and x < d:\n    trail = [0] + trail\n    x += 1\n    \nwhile len(trail) < n and idx <= m:\n    x = 1\n    \n    while x < d and len(trail) < n:\n        trail.insert(rsrch(trail, idx) + 1, 0)\n        x += 1\n        \n    idx += 1\n    \nif len(trail) == n and trail[-d:].count(0) != len(trail[-d:]):\n    print('YES')\n    print(*trail)\nelse:\n    print('NO')"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n        int c[] = new int[m];\n        int wbSum = 0;\n        for (int i = 0; i < m; i++) {\n            int wb = sc.nextInt();\n            wbSum+=wb;\n            c[i] = wb;\n        }\n        if((m+1)*(d-1) + wbSum >= n) {\n            System.out.println(\"Yes\");\n            int water = n - wbSum;\n            for (int j = 0; j < m; j++) {\n                int thisWater = water>(d-1) ? d-1 : water;\n                water-=thisWater;\n                for(int k = 0; k < thisWater; k++) {\n                    System.out.println(\"0 \");\n                }\n                for (int k=0; k<c[j]; k++)\n                    System.out.print((j+1)+\" \");\n            }\n            for (int k=0; k<water; k++)\n                System.out.print(\"0 \");\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom sys import stdin\n\nn,m,d = map(int,stdin.readline().split())\n\nif m != 0:\n    c = list(map(int,stdin.readline().split()))\n\nans = [0] * n\n\nrem = sum(c)\nlast = -1\nnow = 0\n\nfor i in range(n):\n\n    if i-last == d:\n        if now >= m:\n            print (\"NO\")\n            sys.exit()\n        \n        for j in range(i,i+c[now]):\n            ans[j] = now+1\n        \n        last = i+c[now]-1\n        rem -= c[now]\n        now += 1\n\n    elif now < m and i + rem == n:\n        for j in range(i,i+c[now]):\n            ans[j] = now+1\n        \n        last = i+c[now]-1\n        rem -= c[now]\n        now += 1\n\nprint (\"YES\")\nprint (*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct trip {\n  int a, b, c;\n};\nconst int MAXINT = 1500;\nint n, m, d, c[MAXINT], arr[MAXINT], sum[MAXINT];\nbool ans = true;\nint main() {\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; i++) cin >> c[i];\n  sum[m - 1] = c[m - 1];\n  for (int i = 1; i < m; i++) sum[m - 1 - i] = sum[m - i] + c[m - 1 - i];\n  int pos = 0, i = 0;\n  while (pos < n && i < m) {\n    if (sum[i] + pos <= n) {\n      if (d <= n - (sum[i] + pos))\n        pos += d;\n      else\n        pos += n - sum[i] - pos + 1;\n    }\n    for (int j = 0; j < c[i]; j++) arr[pos + j] = i + 1;\n    pos += c[i] - 1;\n    i++;\n  }\n  if (pos + d <= n || i < m) ans = false;\n  cout << (ans ? \"YES\" : \"NO\") << endl;\n  if (ans)\n    for (int i = 1; i < n + 1; i++) cout << arr[i] << \" \";\n  if (ans) cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n#import heapq as hq\n#from collections import deque\n#sys.stdin = open('in', 'r')\nreadline = sys.stdin.readline\nrdw = lambda: readline().rstrip()\nrdws = lambda: readline().split()\nrdwl = lambda: list(readline().split())\nrdi = lambda: int(readline())\nrdis = lambda: map(int, readline().split())\nrdil = lambda: list(map(int, readline().split()))\nrdilrows = lambda cnt: [rdil() for _ in range(cnt)]\n\ndef solve():\n    n,m,d = rdis()\n    c = rdil()\n    total = sum(c)\n    maxdif = (n - total + m) // (m + 1)\n    if maxdif < d:\n        dif = (n - total) // (m + 1)\n        extra = (n - total) % (m + 1)\n        res = ['0' for i in range(n)]\n        i = dif\n        if extra > 0:\n            i += 1\n            extra -= 1\n        for ci, cl in enumerate(c):\n            cnum = str(ci+1)\n            for j in range(cl):\n                res[i+j] = cnum\n            i += cl + dif\n            if extra > 0:\n                i += 1\n                extra -= 1\n        print(\"YES\")\n        print(' '.join(res))\n    else:\n        print(\"NO\")\n\n\ntests = 1\n#tests = rdi()\nfor testnum in range(tests):\n    solve()\n    \n#n = rdi()\n#n,m = rdis()\n#s = rdw()\n#a = rdil()\n#op, *s = rdws()\n\n#print(f'Case #{testnum+1}: {res}')\n#print(*res, sep='\\n')\n#sys.stdout.write('YES\\n')\n#sys.stdout.write(f'{res}\\n')\n#sys.stdout.write(f'{y1} {x1} {y2} {x2}\\n')\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nplatforms = list(map(int, input().split()))\nriver = [0 for i in range(n + 2)]\n\nsumma = sum(platforms)#sum len of platforms\nmaxlengap = d - 1#max gap between platforms\nlenofallgaps = n - summa#sum len of gaps\nmaxamountofgaps = m + 1#max number of gaps, gaps between shore and platform counts too\n\nif summa + maxlengap * maxamountofgaps < n:\n    print('NO')\n    exit()\nelif lenofallgaps == 0:\n    pos = 0\n    for i in range(len(platforms)):\n        for p in range(pos + 1, pos + platforms[i] + 1):\n            river[p] = i + 1\n        pos += platforms[i]\n\nelse:\n    gaps = []\n    c = lenofallgaps // maxlengap\n    for _ in range(lenofallgaps // maxlengap):\n        gaps.append(maxlengap)\n    if lenofallgaps % maxlengap != 0:\n        gaps.append(lenofallgaps % maxlengap)\n    numofgaps = len(gaps)\n\n    pos = 0\n    j = 0\n    for i in range(len(platforms)):\n        if j < numofgaps:\n            pos += gaps[j]\n            j += 1\n        for p in range(pos + 1, pos + platforms[i] + 1):\n            river[p] = i + 1\n        pos += platforms[i]\nprint('YES')\nprint(*river[1:-1])\n"
        },
        {
            "language": 3,
            "solution": "data = (list(map(int, input().split())))\n\nc = (list(map(int, input().split())))\n\ncsum = sum(c)\n\nif (data[2] == 0):\n    print(\"NO\")\nelse:\n    if (csum+(data[2]-1)*(data[1]+1)>= data[0]):\n        print(\"YES\")\n        \n        empt = data[0] - csum\n        \n        allempt = 0\n        \n        sol = []\n        \n        for i in range(data[1]):\n            \n            if(allempt < empt):\n                for z in range(data[2]-1):\n                    if(allempt >= empt):\n                        break\n                    sol.append(0)\n                    allempt+=1\n                    \n            for j in range(c[i]):\n                sol.append((i+1))\n            \n            q = data[0] - len(sol)\n            \n        if (q != 0):\n            for i in range(q):\n                sol.append(0)\n            \n        print (*sol)\n        \n    else:\n        print(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1005];\nint s[1005];\nint main() {\n  int n, m, d, i, j, idx, cnt = 0, cur;\n  cin >> n >> m >> d;\n  for (i = 1; i <= m; i++) {\n    cin >> a[i];\n  }\n  cur = 1;\n  for (i = 1; i <= n; i++) {\n    if (a[cur] == 0) {\n      cur++;\n      if (cur > m) break;\n      s[i] = cur;\n      a[cur]--;\n    } else {\n      s[i] = cur;\n      a[cur]--;\n    }\n  }\n  bool found = false;\n  for (i = 1; i <= m; i++) {\n    for (j = 1; j <= n; j++) {\n      if (s[j] == i) break;\n    }\n    cnt = d - 1;\n    idx = j;\n    while (cnt > 0) {\n      if (s[n] > 0) {\n        found = true;\n        break;\n      }\n      for (j = n - 1; j >= idx; j--) {\n        swap(s[j], s[j + 1]);\n      }\n      idx++;\n      cnt--;\n    }\n    if (found) break;\n  }\n  found = false;\n  for (j = n; j >= 1; j--) {\n    if (s[j] == m && j + d > n) {\n      found = true;\n      break;\n    }\n  }\n  if (found) {\n    cout << \"YES\\n\";\n    for (i = 1; i <= n; i++) {\n      cout << s[i] << \" \";\n    }\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\nraw_input = lambda: stdin.readline().rstrip()\ninput = lambda: int(raw_input())\nI=lambda: map(int, raw_input().split())\nn,m,d = I()\na = I()\npref = [0]\ns = 0\nfor x in a:\n\ts += x\n\tpref.append(s)\ni = 0\nrLst = []\nc = 0\nwhile c + pref[m]-pref[i] < n-d+1:\n\tfor _ in xrange(d-1):\n\t\trLst.append('0')\n\t\tc += 1\n\tfor _ in xrange(a[i]):\n\t\trLst.append(str(i+1))\n\t\tc += 1\n\ti += 1\n\tif i>=m:\n\t\tbreak\nfor j in xrange(i, m):\n\tfor _ in xrange(a[j]):\n\t\trLst.append(str(j+1))\n\t\tc += 1\n# print rLst\nif n-c>d-1:\n\tprint 'NO'\nelse:\n\twhile c<n:\n\t\trLst.append('0')\n\t\tc += 1\n\tprint 'YES'\n\tprint ' '.join(rLst)"
        },
        {
            "language": 3,
            "solution": "from math import ceil\n\nn,m,d = map(int,input().split())\nc = list(map(int,input().split()))\ntotal_gap = n-sum(c)\ndist_gap = total_gap/(m+1)\n#print(total_gap)\n#print(dist_gap)\nif ceil(dist_gap)<d:\n    print('YES')\n    a,b = ceil(dist_gap),ceil(dist_gap)-1 #possible gaps\n    no_a = (total_gap - ((m+1)*b))//(a-b) #no of a gaps\n    no_b = m+1-no_a\n    res = []\n    ci = 0\n    while ci<m:\n        if no_a:\n            for i in range(a):\n                res.append('0')\n            no_a -= 1\n        else:\n            for i in range(b):\n                res.append('0')\n            no_b -= 1\n        for i in range(c[ci]):\n            res.append(str(ci+1))\n        ci += 1\n    if no_a:\n        for i in range(a):\n            res.append('0')\n        no_a -= 1\n    else:\n        for i in range(b):\n            res.append('0')\n        no_b -= 1\n    print(' '.join(res))\nelse:\n    print('NO')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Problem_C {\n\tpublic static void main(String[] args) {\n\t\tInputReader in = new InputReader();\n\t\tStringBuilder out = new StringBuilder();\n\n\t\tint N = in.nextInt();\n\t\tint M = in.nextInt();\n\t\tint D = in.nextInt();\n\t\tint[] C = new int[M];\n\t\tfor (int i = 0; i < M; i++) {\n\t\t\tC[i] = in.nextInt();\n\t\t}\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < M; i++) {\n\t\t\tsum += C[i];\n\t\t}\n\t\tif (sum + (M + 1) * (D - 1) < N) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tint[] A = new int[M + 1];\n\t\tint space = N - sum;\n\t\tfor (int i = 0; i < M + 1 && space > 0; i++) {\n\t\t\tint x = Math.min(D - 1, space);\n\t\t\tA[i] = x;\n\t\t\tspace -= x;\n\t\t}\n\t\tList<Integer> list = new ArrayList<>();\n\t\tfor (int i = 0; i < M + 1; i++) {\n\t\t\tfor (int j = 0; j < A[i]; j++) {\n\t\t\t\tlist.add(0);\n\t\t\t}\n\t\t\tif (i < M) {\n\t\t\t\tfor (int j = 0; j < C[i]; j++) {\n\t\t\t\t\tlist.add(i + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout.append(\"YES\\n\");\n\t\tfor (int x : list) {\n\t\t\tout.append(x).append(' ');\n\t\t}\n\t\tout.setCharAt(out.length() - 1, '\\n');\n\n\t\tSystem.out.print(out);\n\t}\n\n\tstatic class InputReader {\n\t\tpublic BufferedReader reader;\n\t\tpublic StringTokenizer st;\n\n\t\tpublic InputReader() {\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic String next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(nextLine());\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\ttry {\n\t\t\t\treturn reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> plat(m);\n  int total = 0;\n  for (int i = 0; i < m; i++) {\n    cin >> plat[i];\n    total += plat[i];\n  }\n  if (n - total > (m + 1) * (d - 1)) {\n    cout << \"NO\\n\";\n  } else {\n    cout << \"YES\\n\";\n    int jump = 0;\n    if (d == 1) {\n      jump = n - total;\n    } else {\n      if ((n - total) % (d - 1) == 0) {\n        jump = (n - total) / (d - 1);\n      } else {\n        jump = ((n - total) / (d - 1)) + 1;\n      }\n    }\n    int together = (m + 1) - jump;\n    int current_plat = 0;\n    int index = 1;\n    for (int i = 0; i < together && index <= n; i++) {\n      index += plat[i];\n      for (int j = 0; j < plat[i]; j++) {\n        cout << i + 1 << \" \";\n      }\n    }\n    current_plat = together;\n    for (int i = 0; i < jump; i++) {\n      for (int i = 0; i < d - 1 && index <= n; i++) {\n        cout << \"0 \";\n        index++;\n      }\n      if (index > n) {\n        break;\n      }\n      for (int i = 0; i < plat[current_plat]; i++) {\n        cout << current_plat + 1 << \" \";\n      }\n      index += plat[current_plat];\n      current_plat++;\n    }\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long q, a, b, c, d, e, n, mn = 1e23, pos, h3[1001], m, h[10001];\nint main() {\n  cin >> n >> m >> d;\n  pos = 0;\n  for (int i = 1; i <= m; i++) {\n    cin >> h3[i];\n    pos += d + (h3[i] - 1);\n  }\n  if (pos + d < n + 1) {\n    cout << \"NO\";\n    return 0;\n  }\n  int pos2 = 0;\n  for (int i = 1; i <= m; i++) {\n    if (pos > n) {\n      pos2++;\n      for (int j = pos2; j <= pos2 + (h3[i] - 1); j++) h[j] = i;\n      pos -= d - 1;\n      pos2 += h3[i] - 1;\n    } else {\n      pos2 += d;\n      for (int j = pos2; j <= pos2 + (h3[i] - 1); j++) {\n        h[j] = i;\n      }\n      pos2 += h3[i] - 1;\n    }\n  }\n  cout << \"YES\" << '\\n';\n  for (int i = 1; i <= n; i++) cout << h[i] << \" \";\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\nsc = [0] * m\nsc[-1] = c[-1]\nfor i in range(m - 2, -1, -1):\n    sc[i] = sc[i + 1] + c[i]\nriv = n\np = 0\nans = \"\"\nend = 0\nl = 0\nfor i in range(m):\n    r = c[i]\n    gap = n - sc[i] - p\n    if gap < d:\n        ans += \"0 \" * (gap)\n        l += gap\n        p = p + gap\n    else:\n        ans += \"0 \" * (d - 1)\n        l += d - 1\n        p = p + d - 1\n    st = p\n    ans += (str(i + 1) + \" \") * c[i]\n    l += c[i]\n    p = st + c[i]\nans += \"0 \" * (n - l)\nif n - p < d:\n    print(\"YES\")\n    print(ans)\nelse:\n    print(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n, m, d;\n  cin >> n >> m >> d;\n  int i;\n  int arr[m];\n  int sum = 0;\n  for (i = 0; i < m; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  int tmp = sum;\n  sum += (m + 1) * (d - 1);\n  if (sum < n) {\n    cout << \"NO\";\n  } else {\n    cout << \"YES\\n\";\n    tmp = n - tmp;\n    int t = tmp / (m + 1);\n    tmp = tmp - t * (m + 1);\n    d = t + 1;\n    int count = 0;\n    int tmp1 = 1;\n    int k = 0;\n    for (int i = 0; i < m; i++) {\n      if (count < tmp) {\n        count++;\n        for (int j = 1; j <= d; j++) {\n          cout << \"0 \";\n          k++;\n        }\n        for (int j = 1; j <= arr[i]; j++) {\n          cout << tmp1 << \" \";\n          k++;\n        }\n        tmp1++;\n      } else {\n        for (int j = 1; j <= d - 1; j++) {\n          cout << \"0 \";\n          k++;\n        }\n        for (int j = 1; j <= arr[i]; j++) {\n          k++;\n          cout << tmp1 << \" \";\n        }\n        tmp1++;\n      }\n    }\n    while (k < n) {\n      cout << \"0 \";\n      k++;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfor i in stdin:\n    n,m,d=list(map(int,i.strip().split()))\n    break\nfor i in stdin:\n    C=list(map(int,i.strip().split()))\n    break\nif sum(C) + (d-1)*(m+1)<n:\n    stdout.write('NO\\n')\nelse:\n    stdout.write('YES\\n')\n    L=[]\n    k=n-sum(C)\n    i=1\n    while k:\n        L+=[0 for j in range(min(k,d-1))]\n        if i!=len(C)+1:\n            L+=[i for j in range(C[i-1])]\n            i+=1\n        k-=min(k,d-1)\n    while i<=len(C):\n        L+=[i for j in range(C[i-1])]\n        i+=1   \n    L=list(map(str,L))\n    stdout.write(' '.join(L))\n        \n            "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Main\n{\n\tPrintWriter out = new PrintWriter(System.out);\n\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n    StringTokenizer tok = new StringTokenizer(\"\");\n    String next() throws IOException {\n        if (!tok.hasMoreTokens()) { tok = new StringTokenizer(in.readLine()); }\n        return tok.nextToken();\n    }\n    int ni() throws IOException { return Integer.parseInt(next()); }\n    long nl() throws IOException { return Long.parseLong(next()); }\n  \n    void solve() throws IOException {\n        int n=ni(),m=ni(),d=ni();\n        int[][]A=new int[m+1][3];\n        for (int x=1;x<=m;x++) A[x][0]=ni();\n        \n        int a=n;\n        for (int x=m;x>0;x--) {\n            A[x][2]=a;\n            a-=A[x][0];\n            A[x][1]=a+1;\n        }\n        \n        boolean f=false;\n        a=0;\n        for (int x=1;x<=m;x++) {\n            if (a+d>=A[x][1]) { f=true; break; }\n            A[x][1]=a+d;\n            a=A[x][1]+A[x][0]-1;\n            A[x][2]=a;\n        }\n        \n        if (A[m][2]+d>n) f=true;\n        \n        if (f) {\n            out.println(\"YES\");\n            int p=1;\n            int x=1;\n            while (true) {\n                if (p<A[x][1]) {\n                    out.print(\"0 \");\n                    p++;\n                }\n                else {\n                    while (p<=A[x][2]) { out.print(x+\" \"); p++; }\n                    x++;\n                    if (x>m) break;\n                }\n            }\n            while (p<=n) { out.print(\"0 \"); p++; }\n            out.println();\n        }\n        else out.println(\"NO\");\n        out.flush();\n    }\n    \n    public static void main(String[] args) throws IOException {\n        new Main().solve();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "line = input().split()\n\nn = int(line[0])\nm = int(line[1])\nd = int(line[2])\n\nline = input().split()\n\nc = [int(x) for x in line]\n\n# print(c[0])\n\nif sum(c) + (len(c) + 1) * (d - 1) < n:\n\tprint('NO')\n\nelse:\n\tcnt = n - sum(c)\n\n\tans = []\n\n\tcnt2 = 0\n\n\twhile cnt != 0:\n\n\t\t# print('counter is ' + str(cnt))\n\n\t\tfor i in range(d-1):\n\n\t\t\tif cnt == 0:\n\t\t\t\tbreak\n\n\t\t\tans.append(0)\n\t\t\tcnt -= 1\n\n\t\tif cnt2 >= len(c):\n\t\t\tbreak\n\n\t\tfor i in range(c[cnt2]):\n\t\t\tans.append(cnt2+1)\n\n\t\tcnt2 += 1\n\n\twhile cnt2 != m:\n\t\tfor i in range(c[cnt2]):\n\t\t\tans.append(cnt2+1)\n\n\t\tcnt2 += 1\n\n\tprint('YES')\n\n\tfor ch in ans:\n\t\tprint(str(ch), end=' ')\n\n\tprint()"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author janit0r\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt(), m = in.nextInt(), d = in.nextInt();\n            int c[] = new int[m];\n            int s = 0;\n            for (int i = 0; i < m; ++i) {\n                c[i] = in.nextInt();\n                s += c[i];\n            }\n            int money = n - s;\n            if (s + ((d - 1) * (m + 1)) < n) {\n                out.println(\"NO\");\n                return;\n            } else {\n                out.println(\"YES\");\n            }\n\n            int cur = d - 1;\n            int indPlat = 0;\n            for (int i = 0; i < n; ++i) {\n                if (money > 0) {\n                    if (cur == 0) {\n                        cur = d - 1;\n                        for (int j = i; j < i + c[indPlat]; ++j) {\n                            out.print(indPlat + 1);\n                            out.print(\" \");\n                        }\n                        i += c[indPlat] - 1;\n                        ++indPlat;\n                    } else {\n                        out.print(0);\n                        out.print(\" \");\n                        --cur;\n                        --money;\n                    }\n                } else {\n                    for (int k = indPlat; k < m; ++k) {\n                        for (int j = i; j < i + c[k]; ++j) {\n                            out.print(k + 1);\n                            out.print(\" \");\n                        }\n                        i += c[k];\n                    }\n                    break;\n                }\n            }\n        }\n\n    }\n\n    static class InputReader {\n        private BufferedReader reader;\n        private StringTokenizer tokenizer;\n\n        public InputReader(InputStream inputStream) {\n            reader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush\nfrom math import *\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\n# sys.setrecursionlimit(int(pow(10, 2)))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = int(pow(10, 9) + 7)\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var))+end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return map(int, data().split())\ndef ssp(): return map(str, data().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\n# @lru_cache(None)\nn,m,d =l()\nc=l()\ns=sum(c)\np=[]\nj=0\nfor i in range(m):\n    p.append(j)\n    j+=c[i]\nk=n+1\nx=s\ni=m-1\nwhile k-x>d and x>0 and i>-1:\n    p[i]=k-d-c[i]\n    x-=c[i]\n    k=p[i]+1\n    i-=1\nif k>d and i==-1:\n    print(\"NO\")\nelse:\n    ans=[0]*n\n    j=1\n    for i in range(m):\n        ans[p[i]:p[i]+c[i]]=[j]*c[i]\n        j+=1\n    print(\"YES\")\n    print(*ans)"
        },
        {
            "language": 3,
            "solution": "n, m, d = list (map (int, input ().split ()))\nc = [0] + list (map (int, input ().split ()))\nop = [0 for i in range (n)]\n\nloc = -1\nrem = sum (c)\n\nfor i in range (1, m + 1) :\n    #print (loc, rem)\n    loc += min (d, n - loc - rem)\n    rem -= c[i]\n    for j in range (loc, min (loc + c[i], n)) :\n        op[j] = i\n    loc += c[i] - 1\n    if (loc >= n):\n        break\n\nif (loc + d < n) :\n    print (\"NO\")\nelse :\n    print (\"YES\")\n    print (' '.join (map (str, op)))\n\n           \t  \t\t\t  \t  \t \t\t \t\t \t"
        },
        {
            "language": 3,
            "solution": "import sys\nn, m, d = [int(i) for i in input().split()]\nc = [int(i) for i in input().split()]\n\na = []\ni = 0\nj = 0\nwhile i + d < n + 1:\n    if j >= len(c):\n        print(\"NO\")\n        sys.exit()\n    i += d + c[j] - 1\n    a += [0] * (d - 1)\n    a += [j+1] * (c[j])\n    j += 1\n\ns = 0\nif len(a) > n:\n    s += len(a) - n\nelif len(a) < n:\n    a += [0] * (n - len(a))\n\nfor i in range(j, m):\n    s += c[i]\n\nif s != 0:\n    for i in range(n-1, -1, -1):\n        if a[i] == 0:\n            s -= 1\n            if s == 0:\n                break\n    f = i\n    a = a[:f]\n    try:\n        j = max(a)\n    except:\n        j = 0\n    while j < m:\n        a += [j+1]*(c[j])\n        j += 1\n\nprint(\"YES\")\nfor i in a:\n    print(i, end=\" \")"
        },
        {
            "language": 3,
            "solution": "n,m,d=list(map(int,input().split()))\nc=list(map(int,input().split()))\nans=[0]*1000000\nstart=-1\nfor i in range(0,len(c)):\n    for j in range(start+d,c[i]+start+d):\n        ans[j]=i+1\n    start=c[i]+start+d-1\nif start+d<n:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    total=1000000\n    to_remove=set()\n    for i in range(1000000-1,-1,-1):\n        if ans[i]==0 and total>n:\n            to_remove.add(i)\n            total-=1\n    ans_2=[]\n    for i in range(0,1000000):\n        if i not in to_remove:\n            ans_2.append(ans[i])\n    print(*ans_2)"
        },
        {
            "language": 3,
            "solution": "import sys\n[n,m,d] = map(int, input().split())\n\nc = list(map(int, input().split()))\n\n# print([n,m,d], c)\n\ntot_combined_length = sum(c)\n\n# shift all platforms to the rightmost while maintaining order\n# store platforms as start, length [(3, 1), (4, 2), (6, 1)]\nplats = []\nstart_ind = n - tot_combined_length\nfor _plat in c:\n    plats.append((start_ind, _plat))\n    start_ind += _plat\n\n# print(plats)\n\ncur_plat_being_considered = 0\ncur_pos = -1\n\n_res_plats = []\nwhile True: # everything is shifted left by 1 due to indexing\n    cur_pos += d\n\n    if cur_pos >= n:\n        break\n\n    elif cur_plat_being_considered > m - 1:\n        print(\"NO\")\n        sys.exit()\n\n    (start_ind, length) = plats[cur_plat_being_considered]\n    if cur_pos < start_ind:\n        # move the platform, then walk to the right edge of the platform\n        _res_plats.append((cur_pos, length))\n        cur_pos += (length - 1)\n        cur_plat_being_considered += 1\n    else:\n        while start_ind + length - 1 < cur_pos:\n            cur_plat_being_considered += 1\n            _res_plats.append((start_ind, length))\n            (start_ind, length) = plats[cur_plat_being_considered]\n\n        cur_pos = start_ind + length - 1 # walk to the right edge of the platform\n        # _res_plats.append((start_ind, length))\n\n\nif len(_res_plats) == 0:\n    _res_plats = plats\nelse:\n    for i in range(cur_plat_being_considered, m):\n        (start_ind, length) = plats[i]\n        # print((start_ind, length))\n        _res_plats.append((start_ind, length))\n\n# print(_res_plats)\n\nres = [0] * n\n\nfor idx, (start_ind, length) in enumerate(_res_plats):\n    for i in range(start_ind, start_ind + length):\n        res[i] = idx + 1\n\nprint(\"YES\")\nprint(\" \".join(map(str,res)))\n\n# _i = n - tot_combined_length\n# for idx, i in enumerate(c):\n#     for _ in range(i):\n#         res[_i] = idx + 1\n#         _i += 1"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint read() {\n  int s = 0, w = 1;\n  char ch;\n  ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') {\n      w = -1;\n    }\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    s = s * 10 + ch - '0';\n    ch = getchar();\n  }\n  return s * w;\n}\nint a[1001], s;\nint main() {\n  int n = read(), m = read(), d = read();\n  for (int i = 1; i <= m; i++) {\n    a[i] = read();\n    s += a[i];\n    if (s > n) {\n      puts(\"NO\");\n      return 0;\n    }\n  }\n  if (s + (m + 1) * (d - 1) < n) {\n    puts(\"NO\");\n    return 0;\n  }\n  puts(\"YES\");\n  if (d == 1) {\n    for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= a[i]; j++) {\n        printf(\"%d \", i);\n      }\n    }\n    return 0;\n  }\n  if (d >= n - s) {\n    for (int i = 1; i <= n - s; i++) printf(\"0 \");\n    for (int i = 1; i <= m; i++) {\n      for (int j = 1; j <= a[i]; j++) {\n        printf(\"%d \", i);\n      }\n    }\n    return 0;\n  }\n  int t = 1;\n  while (1) {\n    if (d <= n - s) {\n      for (int i = 1; i < d; i++) {\n        printf(\"0 \");\n      }\n      for (int i = 1; i <= a[t]; i++) {\n        printf(\"%d \", t);\n      }\n      n -= (d + a[t] - 1);\n      s -= a[t];\n      t++;\n    } else {\n      for (int i = 1; i <= n - s; i++) printf(\"0 \");\n      for (int i = t; i <= m; i++) {\n        for (int j = 1; j <= a[i]; j++) {\n          printf(\"%d \", i);\n        }\n      }\n      break;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom collections import deque\nfrom queue import PriorityQueue\nimport math\ninput_ = lambda: sys.stdin.readline().strip(\"\\r\\n\")\nii = lambda : int(input_())\nil = lambda : list(map(int, input_().split()))\nilf = lambda : list(map(float, input_().split()))\nip = lambda : input_()\nfi = lambda : float(input_())\nap = lambda ab,bc,cd : ab[bc].append(cd)\nli = lambda : list(input_())\npr = lambda x : print(x)\nprinT = lambda x : print(x)\nf = lambda : sys.stdout.flush()\n\n\nn,m,d = il()\na = il()\n\nb = [0 for i in range (n)]\n\ni = -1\n\nsp = sum(a)\n\nfor j in range (m) :\n\n    i += min(d,n-i-sp)\n\n    sp -= a[j]\n\n    for k in range (i,min(i+a[j],n)) :\n        b[k] = j+1\n\n    i += a[j]-1\n\n    if (i>=n) :\n        break\n\nif (i+d<n) :\n    print(\"NO\")\nelse :\n    print(\"YES\")\n    print(*b)\n\n    \n    \n            \n        \n            \n        \n\n        \n"
        },
        {
            "language": 3,
            "solution": "arr = [int (i) for i in filter(None, input().split(\" \"))]\ns = arr[0]\nk = arr[1]\nmx = arr[2]\narr = [int (i) for i in filter(None, input().split(\" \"))]\nsum = 0\nfor i in range(k):\n    sum+=arr[i]\nsum+=(mx-1)*(k+1)\nif sum<s:\n    wer = \"NO\"\n    print(wer)\nelse:\n    wer = \"YES\"\n    ans = [0]*(mx-1)\n    for i in range(k):\n        ans+=[i+1]*arr[i]\n        ans+=[0]*(mx-1)\n    max = len(ans)\n    for i in range(len(ans)):\n        if max<=s:\n            break\n        else:\n            if ans[i] ==0:\n                ans[i]=-1\n                max-=1\n    answer = []\n    for i in range(len(ans)):\n        if ans[i]!=-1:\n            answer.append(ans[i])\n    print(wer)\n    for i in range(len(answer)):\n        print(answer[i], end=' ')\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1e9 + 7;\nconst int MOD = 1e9 + 7;\nconst int dx[4] = {0, 0, -1, 1};\nconst int dy[4] = {-1, 1, 0, 0};\nconst int N = 1e3 + 1;\nint n, m, d, c[N], mark[N], pos[N];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) {\n    cin >> c[i];\n  }\n  for (int i = m; i > 0; i--) {\n    for (int j = n; j > 0; j--) {\n      if (mark[j] == 0) {\n        pos[i] = j - c[i] + 1;\n        for (int x = pos[i]; x <= j; x++) mark[x] = i;\n        break;\n      }\n    }\n  }\n  int last = 0;\n  int cur = 1;\n  for (int i = 0; i <= n; i++) {\n    if (mark[i + 1] == 0) {\n      if (cur > m) break;\n      int mn = pos[cur];\n      for (int j = pos[cur]; j <= pos[cur] + c[cur] - 1; j++) mark[j] = 0;\n      mn = min(mn, i + d);\n      for (int j = mn; j <= mn + c[cur] - 1; j++) mark[j] = cur;\n      for (int j = i + 1; j < mn; j++) mark[j] = m + 1;\n      last = max(last, mn + c[cur] - 1);\n      cur++;\n    }\n    last = max(last, i);\n  }\n  if (n + 1 <= last + d) {\n    cout << \"YES\\n\";\n    for (int i = 1; i <= n; i++)\n      if (mark[i] == m + 1)\n        cout << 0 << ' ';\n      else\n        cout << mark[i] << ' ';\n  } else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\nn,m,d = [int(x) for x in stdin.readline().split()]\narr = [int(x) for x in stdin.readline().split()]\n\nsufsum = [0]*(m+1)\nfor i in range(m-1,-1,-1): sufsum[i] = sufsum[i+1] + arr[i]\n\npossible = False\n\nptr,plank = 0,0\nwhile ptr<n+1 and plank<m and sufsum[plank+1]<n-ptr:\n\tptr += d\n\tptr += arr[plank]-1\n\tplank += 1\n\nif ptr+d>n or (plank<m and sufsum[plank+1]>=n-ptr):\n\tpossible = True\n\nif possible==False:\n\tprint(\"NO\")\n\nelse:\n\n\tprint(\"YES\")\n\n\tpos,s = m-1,0\n\tfor i in range(m):\n\t\ts += d + arr[i] -1\n\t\tif sufsum[i+1]>=n-s:\n\t\t\tpos = i\n\t\t\tbreak\n\n\tans = [0]*n\n\tptr = 0\n\n\tfor i in range(m):\n\t\tif i==pos:\n\t\t\tdiff = n-sufsum[i+1]-ptr\n\t\t\tif diff>=d-1+arr[i]:\n\t\t\t\tptr += d-1\n\t\t\tfor j in range(arr[i]):\n\t\t\t\tif ptr>=n: break\n\t\t\t\tans[ptr] = i+1\n\t\t\t\tptr += 1\n\t\t\tptr = max(ptr,n-sufsum[i+1]-1)\n\t\t\tcontinue\n\t\tif i<pos: ptr += d-1\n\t\tfor j in range(arr[i]):\n\t\t\tif ptr>=n: break\n\t\t\tans[ptr] = i+1\n\t\t\tptr += 1\n\n\tfor i in ans: print(i, end=\" \")\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author MaxHeap\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CPlatformsJumping solver = new CPlatformsJumping();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CPlatformsJumping {\n        int[] c;\n        int n;\n        int m;\n        int d;\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            n = in.nextInt();\n            m = in.nextInt();\n            d = in.nextInt();\n            c = in.nextIntArray(m);\n            int[] result = ArrayUtils.createArray(n + 1, -1);\n            int pt = 0;\n            int where = 0;\n            int was = n;\n\n            for (int i = m - 1; i >= 0; --i) {\n                for (int k = 0; k < c[i]; ++k) {\n                    result[was--] = i;\n                }\n            }\n            for (int pos = 1; pos <= n; ++pos) {\n                if (pos - where > d - 1 && result[pos] == -1) {\n                    int first = -1, which = -1;\n                    for (int j = pos; j <= n; ++j) {\n                        if (result[j] != -1) {\n                            first = j;\n                            which = result[j];\n                            break;\n                        }\n                    }\n                    if (first == -1) {\n                        out.println(\"NO\");\n                        return;\n                    }\n                    int len = c[which];\n                    for (int k = 0; k < len; ++k) {\n                        result[k + first] = -1;\n                        result[pos + k] = which;\n                    }\n                    where = pos + len - 1;\n                }\n\n            }\n            out.println(\"YES\");\n            for (int i = 1; i <= n; ++i) {\n                if (i > 1) out.print(\" \");\n                out.print(result[i] + 1);\n            }\n            out.println();\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private static final int DEFAULT_BUFFER_SIZE = 1 << 16;\n        private static final int EOF = -1;\n        private byte[] buf = new byte[DEFAULT_BUFFER_SIZE];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (this.numChars == EOF) {\n                throw new UnknownError();\n            } else {\n                if (this.curChar >= this.numChars) {\n                    this.curChar = 0;\n\n                    try {\n                        this.numChars = this.stream.read(this.buf);\n                    } catch (IOException ex) {\n                        throw new InputMismatchException();\n                    }\n\n                    if (this.numChars <= 0) {\n                        return EOF;\n                    }\n                }\n\n                return this.buf[this.curChar++];\n            }\n        }\n\n        public int nextInt() {\n            int c;\n            for (c = this.read(); isSpaceChar(c); c = this.read()) {\n            }\n\n            byte sgn = 1;\n            if (c == 45) {\n                sgn = -1;\n                c = this.read();\n            }\n\n            int res = 0;\n\n            while (c >= 48 && c <= 57) {\n                res *= 10;\n                res += c - 48;\n                c = this.read();\n                if (isSpaceChar(c)) {\n                    return res * sgn;\n                }\n            }\n\n            throw new InputMismatchException();\n        }\n\n        public static boolean isSpaceChar(int c) {\n            return c == 32 || c == 10 || c == 13 || c == 9 || c == EOF;\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n    }\n\n    static abstract class ArrayUtils {\n        public static int[] createArray(int n, int value) {\n            int[] res = new int[n];\n            for (int i = 0; i < n; ++i) {\n                res[i] = value;\n            }\n            return res;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\narr=list(map(int,input().split()))\ns=sum(arr)\nif (n-s)/(m+1)>d-1:\n\tprint(\"NO\")\n\texit()\npost_sum=[]\nfor i in arr:\n\tpost_sum.append(s)\n\ts-=i\nans=[]\nd-=1\ns=n-sum(arr)\nfor i in range(m):\n\tif s>=d:\n\t\tans+=[0]*d+[i+1]*arr[i]\n\t\ts-=d\n\telse:\n\t\tans+=[0]*s+[i+1]*arr[i]\n\t\ts=0\nans+=[0]*s\nprint(\"YES\")\nprint(*ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint num[1005];\nint ans[1005];\nint tap;\nint main() {\n  int sum = 0;\n  int n, m, d;\n  int t = 1;\n  cin >> n >> m >> d;\n  d--;\n  for (int i = 1; i <= m; i++) {\n    cin >> num[i];\n    sum += num[i];\n  }\n  if (sum + (m + 1) * d >= n) {\n    cout << \"YES\" << endl;\n    ;\n    sum = n - sum;\n    for (int i = 1; i <= n;) {\n      i += min(sum, d);\n      sum -= min(sum, d);\n      for (int j = 0; j < num[t]; j++) {\n        ans[j + i] = t;\n      }\n      i += num[t];\n      t++;\n    }\n    for (int i = 1; i <= n; i++) {\n      cout << ans[i] << ' ';\n    }\n  } else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "// package cf1256;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.stream.Collectors;\n\npublic class CFC {\n    private static final long MOD = 1_000_000_007;\n    private static final String INPUT = \"9 1 5\\n\" +\n            \"2\\n\";\n\n    private PrintWriter out;\n    private FastScanner sc;\n\n    public static void main(String[] args) {\n        new CFC().run();\n    }\n\n    public void run() {\n        sc = new FastScanner(oj ? System.in : new ByteArrayInputStream(INPUT.getBytes()));\n        out = new PrintWriter(System.out);\n\n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        tr(System.currentTimeMillis() - s + \"ms\");\n    }\n\n    public void solve() {\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n        int[] c = readIntArray(m);\n        int sum = Arrays.stream(c).sum();\n        int max = (d - 1) * (c.length + 1) + sum;\n        if (max < n) {\n            out.println(\"NO\");\n        } else {\n            out.println(\"YES\");\n            int rem = max - n;\n            for (int i = 0; i < c.length; i++) {\n                if (rem >= d-1) {\n                    rem -= d-1;\n                } else {\n                    for (int j = 0; j < d-1-rem; j++) {\n                        out.print(\"0 \");\n                    }\n                    rem = 0;\n                }\n                for (int j = 0; j < c[i]; j++) {\n                    out.print((i+1) + \" \");\n                }\n            }\n            for (int j = 0; j < d-1-rem; j++) {\n                out.print(\"0 \");\n            }\n            out.println();\n        }\n    }\n\n    //********************************************************************************************\n    //********************************************************************************************\n    //********************************************************************************************\n\n    private static int lowerBound(long[] arr, long key) {\n        int lo = 0;\n        int hi = arr.length - 1;\n        while (lo < hi) {\n            int mid = (lo + hi) / 2;\n            if (key <= arr[mid]) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return arr[lo] < key ? lo + 1 : lo;\n    }\n\n    private static int upperBound(long[] arr, long key) {\n        int lo = 0;\n        int hi = arr.length - 1;\n        while (lo < hi) {\n            int mid = (lo + hi) / 2;\n            if (key >= arr[mid]) {\n                lo = mid + 1;\n            } else {\n                hi = mid;\n            }\n        }\n        return arr[lo] <= key ? lo + 1 : lo;\n    }\n\n    private static int ceil(double d) {\n        int ret = (int) d;\n        return ret == d ? ret : ret + 1;\n    }\n\n    private static int round(double d) {\n        return (int) (d + 0.5);\n    }\n\n    private static int gcd(int a, int b) {\n        BigInteger b1 = BigInteger.valueOf(a);\n        BigInteger b2 = BigInteger.valueOf(b);\n        BigInteger gcd = b1.gcd(b2);\n        return gcd.intValue();\n    }\n\n    private static long gcd(long a, long b) {\n        BigInteger b1 = BigInteger.valueOf(a);\n        BigInteger b2 = BigInteger.valueOf(b);\n        BigInteger gcd = b1.gcd(b2);\n        return gcd.longValue();\n    }\n\n    private int[] readIntArray(int n) {\n        int[] res = new int[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = sc.nextInt();\n        }\n        return res;\n    }\n\n    private long[] readLongArray(int n) {\n        long[] res = new long[n];\n        for (int i = 0; i < n; i++) {\n            res[i] = sc.nextLong();\n        }\n        return res;\n    }\n\n    @SuppressWarnings(\"unused\")\n    static class FastScanner {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        FastScanner(InputStream stream) {\n            this.stream = stream;\n        }\n\n        int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) return -1;\n            }\n            return buf[curChar++];\n        }\n\n        boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        boolean isEndline(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public String nextLine() {\n            int c = read();\n            while (isEndline(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isEndline(c));\n            return res.toString();\n        }\n\n    }\n\n    private boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\n    private void tr(Object... o) {\n        if (!oj) System.out.println(Arrays.deepToString(o));\n    }\n}"
        },
        {
            "language": 4,
            "solution": "//package learning;\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\npublic class NitsLocal {\n    static ArrayList<String> s1;\n    static boolean[] prime;\n    static int n = (int)1e7;\n    \n     static void sieve() {\nArrays.fill(prime\t, true);\nprime[0] = prime[1] = false;\nfor(int i = 2 ; i * i <= n ; ++i) {\nif(prime[i]) {\nfor(int k = i * i; k<= n ; k+=i) {\nprime[k] = false;\n}\n}\n}\n \n}\n    public static void main(String[] args) {\n        InputReader sc = new InputReader(System.in);\n        \n           prime  = new boolean[n + 1];\n           //sieve();\n                prime[1] = false;\n                /*\n              int n = sc.ni();     \n              int []a = sc.nia(n);\n              int mod = 1000000007;\n              long ans = 0;\n              int f = 0;\n              int q = sc.ni();\n              while(q-- > 0)\n              {\n                  int num = sc.ni();\n                  ans = 0;\n                  if(num == 0)\n                  {\n                      a[sc.ni()-1] = sc.ni();\n                  }\n                 else\n                  {\n                      int l = sc.ni();\n                      int r = sc.ni();\n                    for(int i=l-1;i<r;i++)\n                   {\n                  \n                   for(int j=i+1;j<r;j++)\n                   {\n                      f = 0;\n                   \n                      int x = a[i];\n                      int y = a[j];\n                      while(x > 0 && y > 0)\n                      {\n                          int y1 = x%10;\n                          int y2 = y%10;\n                          if(y1 > 0 && y2 > 0)\n                          {\n                              f = 1;\n                          }\n                          x /= 10;\n                          y /= 10;\n                      }\n                      \n                    \n                    \n                   \n                     if(f==0)\n                     {\n                         ans = (ans + ((((long)a[i]%mod) * ((long)a[j]%mod)))%mod)%mod;\n                     }\n                  }\n              }\n              \n              w.println(ans);\n                  }\n              }\n          \n            */\n               \n                   \n              \n                \n                   int n = sc.ni();\n                   int m = sc.ni();\n                   int d = sc.ni();\n                   int []a = sc.nia(m);\n                   int sum = 0;\n                   for(int i=0;i<m;i++)\n                   {\n                       sum +=  a[i];\n                   }\n                   \n                  \n                   int []res = new int[n];\n                   if(sum + (m+1)*(d-1) < n)\n                       w.println(\"NO\");\n                   else\n                   {\n                       w.println(\"YES\");\n                       int req = n-sum;\n                       int mul = 0;\n                       int rem = 0;\n                       if(d > 1)\n                       {\n                        mul = req/(d-1);\n                        rem = req%(d-1);\n                       }\n                       int st = 0;\n                       for(int i=0;i<m;i++)\n                       {\n                           if(mul > 0)\n                           {\n                               for(int j=0;j<d-1;j++)\n                               {\n                                   if(st < n)\n                                   res[st] = 0;\n                                   st++;\n                               }\n                               mul--;\n                           }\n                           else if(mul == 0)\n                           {\n                               for(int j=0;j<rem;j++)\n                               {\n                                   if(st < n)\n                                   res[st] = 0;\n                                   st++;\n                               }\n                               mul--;\n                           }\n                           for(int j=0;j<a[i];j++)\n                           {\n                               if(st < n)\n                               res[st] = i+1;\n                               st++;\n                              \n                           }\n                       }\n                       for(int i=0;i<n;i++)\n                       {\n                           w.print(res[i] + \" \");\n                       }\n                   }\n               \n                   \n                          \n                \n             \n      \n       w.close();\n       \n        \n    }\n    public static int countSetBits(int number){\n        int count = 0;\n        while(number>0){\n            ++count;\n            number &= number-1;\n        }\n        return count;\n    }\n    /*\n     static  class CustomerSortingComparator \n                                implements Comparator<Temp> {\n \n    @Override\n    public int compare(Temp cust1, Temp cust2) {\n \n        // all comparison\n        int compareName = 0;\n        if(cust1.a < cust2.a)\n            compareName= -1;\n        \n        else if(cust1.a > cust2.a)\n        compareName = 1;\n        else\n            compareName = 0;\n        int compareCity = 0;\n        if(cust1.b < cust2.b)\n            compareCity = -1;\n        \n        else if(cust1.b > cust2.b)\n        compareCity  = 1;\n        else\n            compareCity  = 0;\n        int compareAge = 0;\n        if(cust1.d < cust2.d)\n            compareAge  = -1;\n        \n        else if(cust1.d > cust2.d)\n        compareAge  = 1;\n        else\n            compareAge  = 0;\n \n        // 3-level comparison using if-else block\n        if(compareName == 0) {\n            return ((compareCity == 0) ? compareAge : compareCity);\n        }\n        else {\n            return compareName;\n        }\n    }\n    }\n*/\n    public static long pow(long i, long j) {\n\t\tlong res=1L;\n\t\tfor(int a=0;a<j;a++) res*=i;\n\t\treturn res;\n\t}\n    public static long powmod(long i, long j,long MOD) {\n\t\tif(j==0) return 1L;\n\t\tif(j%2==0) {\n\t\t\tlong temp=powmod(i,j/2,MOD);\n\t\t\treturn (temp*temp)%MOD;\n\t\t}\n\t\treturn (i*powmod(i,j-1,MOD))%MOD;\n\t}\n    static HashSet<Integer> fac;\n    public static void primeFactors(int n) \n    { \n        // Print the number of 2s that divide n \n        int t = 0;\n        while (n%2==0) \n        { \n            fac.add(2);\n            n /= 2; \n        } \n  \n        // n must be odd at this point.  So we can \n        // skip one element (Note i = i +2) \n        for (int i = 3; i*i <= n; i+= 2) \n        { \n            // While i divides n, print i and divide n \n            while (n%i == 0) \n            { \n                fac.add(i);\n                n /= i; \n            } \n        } \n  \n        // This condition is to handle the case whien \n        // n is a prime number greater than 2 \n        if (n > 2) \n            fac.add(n);\n    } \n     static long modexp(long x,long n,long M)\n{\n    long power = n;\n    long result=1;\n    x = x%M;\n    while(power>0)\n    {\n        if(power % 2 ==1)\n            result=(result * x)%M;\n        x=(x*x)%M;\n        power = power/2;\n    }\n    return result;\n}\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        else\n            return gcd(b%a,a);\n    }\n    static class Temp{\n        int a;\n        int b;\n      \n        Temp(int a,int b)\n        {\n            this.a = a;\n            this.b = b;\n            //this.d = d;\n        }\n    }\n    static class Query{\n        int p;\n        int index;\n        int value;\n        public Query(int p,int index,int value)\n        {\n            this.p = p;\n            this.index = index;\n            this.value = value;\n            \n        }\n    }\n    static int nextPowerOf2(int n) \n    { \n        int count = 0; \n  \n        // First n in the below  \n        // condition is for the  \n        // case where n is 0 \n        if (n > 0 && (n & (n - 1)) == 0) \n            return n; \n  \n        while(n != 0) \n        { \n            n >>= 1; \n            count += 1; \n        } \n  \n        return 1 << count; \n    } \n    \n   static long sum1(int t1,int t2,int x,int []t)\n   {\n       int mid = (t2-t1+1)/2;\n  if(t1==t2)\n      return 0;\n    \n   else\n   return sum1(t1,mid-1,x,t) + sum1(mid,t2,x,t);\n    \n     \n   }\n  \n   \n    static String replace(String s,int a,int n)\n    {\n        char []c = s.toCharArray();\n        for(int i=1;i<n;i+=2)\n        {\n            int num = (int) (c[i] - 48);\n            num += a;\n            num%=10;\n            c[i] = (char) (num+48);\n        }\n        return new String(c);\n    }\n    static String move(String s,int h,int n)\n    {\n        h%=n;\n        char []c = s.toCharArray();\n        char []temp = new char[n];\n        for(int i=0;i<n;i++)\n        {\n            temp[(i+h)%n] = c[i];\n        }\n        return new String(temp);\n    }\n    \n     public static int ip(String s){\nreturn Integer.parseInt(s);\n}\n     static class multipliers implements Comparator<Long>{\n  \n         \n  public int compare(Long a,Long b) {\n   if(a<b)\n    return 1;\n   else if(b<a)\n    return -1;\n   else\n    return 0;\n  }\n }\n     static class multipliers1 implements Comparator<Student>{\n  \n  public int compare(Student a,Student b) {\n   if(a.y<b.y)\n    return 1;\n   else if(b.y<a.y)\n    return -1;\n   else\n   {\n       if(a.id < b.id)\n           return 1;\n       else if(b.id<a.id)\n           return -1;\n       else\n           return 0;\n           \n    //return 0;\n   }\n  }\n }\n    // Java program to generate power set in \n// lexicographic order. \n \n    \n    \n    \n      static class InputReader {\n \nprivate final InputStream stream;\nprivate final byte[] buf = new byte[8192];\nprivate int curChar, snumChars;\n \npublic InputReader(InputStream st) {\nthis.stream = st;\n}\n \npublic int read() {\nif (snumChars == -1)\nthrow new InputMismatchException();\nif (curChar >= snumChars) {\ncurChar = 0;\ntry {\nsnumChars = stream.read(buf);\n} catch (IOException e) {\nthrow new InputMismatchException();\n}\nif (snumChars <= 0)\nreturn -1;\n}\nreturn buf[curChar++];\n}\n \npublic int ni() {\nint c = read();\nwhile (isSpaceChar(c)) {\nc = read();\n}\nint sgn = 1;\nif (c == '-') {\nsgn = -1;\nc = read();\n}\nint res = 0;\ndo {\nres *= 10;\nres += c - '0';\nc = read();\n} while (!isSpaceChar(c));\nreturn res * sgn;\n}\n \npublic long nl() {\nint c = read();\nwhile (isSpaceChar(c)) {\nc = read();\n}\nint sgn = 1;\nif (c == '-') {\nsgn = -1;\nc = read();\n}\nlong res = 0;\ndo {\nres *= 10;\nres += c - '0';\nc = read();\n} while (!isSpaceChar(c));\nreturn res * sgn;\n}\n \npublic int[] nia(int n) {\nint a[] = new int[n];\nfor (int i = 0; i < n; i++) {\na[i] = ni();\n}\nreturn a;\n}\n \npublic String rs() {\nint c = read();\nwhile (isSpaceChar(c)) {\nc = read();\n}\nStringBuilder res = new StringBuilder();\ndo {\nres.appendCodePoint(c);\nc = read();\n} while (!isSpaceChar(c));\nreturn res.toString();\n}\n \npublic String nextLine() {\nint c = read();\nwhile (isSpaceChar(c))\nc = read();\nStringBuilder res = new StringBuilder();\ndo {\nres.appendCodePoint(c);\nc = read();\n} while (!isEndOfLine(c));\nreturn res.toString();\n}\n \npublic boolean isSpaceChar(int c) {\nreturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n}\n \nprivate boolean isEndOfLine(int c) {\nreturn c == '\\n' || c == '\\r' || c == -1;\n}\n \n}\n \n \n \n \n \n   \nstatic PrintWriter w = new PrintWriter(System.out);\n                  static class Student\n    {\n        int id;\n        //int x;\n       \n        int y;\n        //long z;\n        \n        Student(int id,int y)\n        {\n            this.id = id;\n            //this.x = x;\n            //this.s = s;\n            this.y = y;\n           // this.z = z;\n            \n            \n            \n        }\n        \n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nn,m,d=list(map(int,sys.stdin.readline().strip().split()))\na=list(map(int,sys.stdin.readline().strip().split()))\nop=[0]*n\n# print(a)\nx=0\nc=1\n \nxx=sum(a)\n \nf=0\n \nfor i in range(m):\n    if(x+d+a[c-1]>n):\n        # print(\"here\",x+d+a[c-1])\n        x=n\n        \n        break\n    for j in range(x+d-1,x+d+a[c-1]-1):\n        op[j]=c\n    x=x+d+a[c-1]-1\n    \n    c+=1\n    # print(\"here\")\n    \nif(c<=m):\n    xxx=sum(a[c-1:])\n    # print(xxx)\n    xx=n-1\n    while(xxx):\n        if(op[xx]==0):\n            op.pop(xx)\n            xxx-=1\n        xx-=1\n    for i in range(c-1,m):\n        while(a[i]):\n            op.append(i+1)\n            a[i]-=1\n        \nx+=d\n# print(x)\n#10 1 4\n#3\n \n \nif(x>n):\n    print(\"YES\")\n    print(\" \".join(list(map(str,op))))\nelse:\n    print(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d, c, s = 0, k = 0;\n  cin >> n >> m >> d;\n  int ara[m];\n  for (int i = 0; i < m; i++) {\n    cin >> ara[i];\n    s = s + ara[i];\n  }\n  vector<int> v(n - s, 0);\n  if (s + (m + 1) * (d - 1) >= n) {\n    cout << \"YES\" << endl;\n    while (!v.empty()) {\n      for (int i = 0; i < d - 1; i++) {\n        cout << 0 << \" \";\n        v.pop_back();\n        if (v.empty()) break;\n      }\n      for (int j = 0; j < ara[k] && k < m; j++) {\n        cout << k + 1 << \" \";\n      }\n      k++;\n    }\n    for (int i = k; i < m; i++) {\n      for (int j = 0; j < ara[i]; j++) cout << i + 1 << \" \";\n    }\n  } else\n    cout << \"NO\";\n}\n"
        },
        {
            "language": 3,
            "solution": "def inp(dtype=str, strip=True):\n    s = input()\n    res = [dtype(p) for p in s.split()]\n    res = res[0] if len(res) == 1 and strip else res\n    return res\n\n\ndef problem1():\n    q = inp(int)\n    for _ in range(q):\n        a, b, n, S = inp(int)\n\n        S = S - min(S // n * n, a * n)\n\n        if S <= b:\n            print('YES')\n        else:\n            print('NO')\n\n\ndef problem2():\n    q = inp(int)\n    for _ in range(q):\n        n = inp(int)\n        a = inp(int, strip=False)\n\n        start = 0\n        while start < n - 1:\n            mn, pos = a[start], start\n            for i in range(start + 1, n):\n                if a[i] < mn:\n                    mn = a[i]\n                    pos = i\n\n            i = pos - 1\n            while i >= start:\n                a[i], a[i + 1] = a[i + 1], a[i]\n                i -= 1\n\n            start = max(pos, start + 1)\n\n        print(' '.join([str(el) for el in a]))\n\n\ndef problem3():\n    n, m, d = inp(int)\n    c = inp(int, strip=False)\n\n    max_pos = 0\n    for i in range(m):\n        size = c[i]\n        max_pos += size + d - 1\n\n    max_pos += d\n\n    if max_pos > n:\n        print('YES')\n        overshoot = max_pos - (n + 1)\n        pos = 0\n        res = [0 for _ in range(n + 1)]\n        for i in range(m):\n            # print(overshoot)\n            size = c[i]\n            if overshoot < d - 1:\n                pos += (d - 1 - overshoot)\n                overshoot = 0\n            else:\n                overshoot -= d - 1\n            # print(pos, overshoot)\n            for j in range(pos + 1, pos + size + 1):\n                res[j] = i + 1\n            pos = pos + size\n            # print('pos=', pos)\n        print(' '.join([str(el) for el in res[1:]]))\n    else:\n        print('NO')\n\n\ndef problem4():\n    pass\n\n\nif __name__ == '__main__':\n    # problem1()\n    # problem2()\n    problem3()\n    # problem4()\n"
        },
        {
            "language": 3,
            "solution": "a, b, c = map( int, input().split() )\nd = list(map(int, input().split()))\ng = []\nif ((c-1)*(b+1)) + sum(d) >= a:\n      print(\"YES\")\n      e = (a - sum(d))//(b+1) \n      f = (a - sum(d))%(b+1)\n      h = [1]*f + [0] * (b-f) \n      for i in range(b):\n            y = [0]*e\n            g += y + [i+1] * d[i] + [0] *h[i]\n      g += y\n            \nelse:\n    print(\"NO\")\nfor i in g:\n            print(i , end=\" \")               "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1005;\nint arr[MAX], ans[MAX];\nint n, m, d;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; ++i) cin >> arr[i];\n  int sum[m + 1];\n  sum[m] = 0;\n  for (int i = m - 1; i >= 0; --i) {\n    sum[i] = sum[i + 1] + arr[i];\n    if (i < m - 1) sum[i]++;\n  }\n  int now = 0, prv = 0;\n  int last = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (i <= last) {\n      ans[i] = now;\n      continue;\n    }\n    if (now == m) break;\n    if (i + sum[now] > n || i == last + d) {\n      ans[i] = now + 1;\n      last = i + arr[now] - 1;\n      ++now;\n    }\n  }\n  if (last + d <= n || now != m) return cout << \"NO\\n\", 0;\n  cout << \"YES\\n\";\n  for (int i = 1; i <= n; ++i) cout << ans[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=[int(x) for x in input().split()]\nc=[int(x) for x in input().split()]\nl=[0]*n\ntmp=0\nfor i in range(len(c)):\n    for x in range(c[i]):\n        l[tmp]=i+1\n        tmp+=1\npos=n\ntmp=m-1\nwhile True:\n    if l[pos-d]==0:\n        g=pos-d-1\n        while l[g]==0:\n            g-=1\n        h=l[g]\n        while l[pos-d]==0:\n            g+=1\n            l[g]=h\n            l[g-c[tmp]]=0\n        pos=g-c[tmp]+1\n        tmp-=1\n    else:break\n    if tmp==-1:break\ntmp=0\nwhile l[tmp]==0:\n    tmp+=1\nif tmp>=d:print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*l,sep=\" \")\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.math.RoundingMode;\nimport java.security.KeyStore.Entry;\nimport java.text.DecimalFormat;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport javax.net.ssl.SSLContext;\n\npublic class Main\n{ \n   static long mod=(long)(1e+9 + 7);\n   static int[] sieve;\n   static ArrayList<Integer> primes;\n   static long min=Long.MAX_VALUE;\n   static int cell[];\n   \n   public static int solve(int dp_end,int plat_end,int[] plat,int[][] dp,int dist)\n   {\n\t   if(dp_end<1) return 1;\n\t   if(plat_end<=0)\n\t\t   {\n\t\t\t   return 0;\n\t\t   }\n\t   \n\t   if(dp[dp_end][plat_end]!=-1) return dp[dp_end][plat_end];\n\t   \n\t   int act_end=dp_end-plat[plat_end]+1;\n\t   int pos=0;\n\t   \n\t   for(int j=1;j<=dist;j++)\n\t\t   {\n\t\t\t   int x=solve(act_end-j,plat_end-1,plat,dp,dist);\n\t\t\t   if(x==1)\n\t\t\t\t   {\n\t\t\t\t\t   pos=1;\n\t\t\t\t\t   break; \n\t\t\t\t   }\n\t\t   }\n\t   \n\t   if(pos==1)\n\t\t   {\n\t\t\t   for(int j=act_end;j<=dp_end;j++)\n\t\t\t\t   cell[j]=plat_end;\n\t\t   }   \n\t   dp[dp_end][plat_end]=pos;\n\t   return dp[dp_end][plat_end];\n   }\n   \n   public static void main(String[] args) throws java.lang.Exception\n   {\t  \t\n\t     fast s = new fast();\n\t     PrintWriter out=new PrintWriter(System.out);\n\t     \n\t     int t=1;\n\t     \n\t     while(t>0)\n\t    \t {\n\t    \t\t int n=s.nextInt();\n\t    \t\t int m=s.nextInt();\n\t    \t\t int dist=s.nextInt();\n\t    \t\t \n\t    \t\t int plat[]=new int[m+2];\n\t    \t\t for(int i=1;i<=m;i++) plat[i]=s.nextInt();\n\t    \t\t plat[m+1]=1;\n\t    \t\t plat[0]=1;\n\t    \t\t \n\t    \t\t int dp[][]=new int[n+2][m+2];\n\t    \t\t for(int i=0;i<dp.length;i++) for(int j=0;j<dp[0].length;j++) dp[i][j]=-1;\n\t    \t\t \n\t    \t\t cell=new int[n+2];\n\t    \t\t \n\t    \t\t dp[n+1][m+1]=solve(n+1,m+1,plat,dp,dist);\n                 if(dp[n+1][m+1]==1)\n                \t {\n                \t\t System.out.println(\"YES\");\n                \t\t for(int i=1;i<=n;i++) System.out.print(cell[i]+\" \");\n                \t }\n                 else\n                \t System.out.println(\"NO\");\n                 t--;\n\t    \t }\n   }\n  \n \n \nstatic class fast {   \n\t    private InputStream i;\n\t\tprivate byte[]  buf = new byte[1024];\n\t\tprivate int curChar;\n\t\t\n\t\tprivate int numChars;\n\t\t\n\t\t//Return floor log2n\n\t\tpublic static long log2(long bits) // returns 0 for bits=0\n\t\t\t{\n\t\t\t    int log = 0;\n\t\t\t    if( ( bits & 0xffff0000 ) != 0 ) { bits >>>= 16; log = 16; }\n\t\t\t    if( bits >= 256 ) { bits >>>= 8; log += 8; }\n\t\t\t    if( bits >= 16  ) { bits >>>= 4; log += 4; }\n\t\t\t    if( bits >= 4   ) { bits >>>= 2; log += 2; }\n\t\t\t    return log + ( bits >>> 1 );\n\t\t\t}\n\t\t\n\t\tpublic static boolean next_permutation(int a[])\n\t\t   {\n\t\t\t   int i=0,j=0;int index=-1;\t   \n\t\t\t   int n=a.length;\n\t\t\t   \n\t\t\t   for(i=0;i<n-1;i++)\n\t\t\t\t   if(a[i]<a[i+1]) index=i;\n\t\t\t   \n\t\t\t   if(index==-1) return false;\n\t\t\t   i=index;\n \n\t\t\t  \n\t\t\t   for(j=i+1;j<n && a[i]<a[j];j++);\n \n\t\t\t   int temp=a[i];\n\t\t\t   a[i]=a[j-1];\n\t\t\t   a[j-1]=temp;\n\t\t\t   \t   \n\t\t\t   for(int p=i+1,q=n-1;p<q;p++,q--)\n\t\t\t   {\n\t\t\t\t   temp=a[p];\n\t\t\t\t   a[p]=a[q];\n\t\t\t\t   a[q]=temp;\n\t\t\t   }\n\t\t\t   \n\t\t\t   return true;\n\t\t   }\n\t\t   \n\t\t   \n\t\tpublic static void division(char ch[],int divisor)\n\t\t   {\n\t\t\t   int div=Character.getNumericValue(ch[0]); int mul=10;int remainder=0;\n\t\t\t   StringBuilder quotient=new StringBuilder(\"\");\n\t\t\t   for(int i=1;i<ch.length;i++)\n\t\t\t   {\n\t\t\t\t   div=div*mul+Character.getNumericValue(ch[i]);\t\n\t\t\t\t   if(div<divisor) {quotient.append(\"0\");continue;}\n\t\t\t\t   quotient.append(div/divisor);\n\t\t\t\t   div=div%divisor;mul=10;\n\t\t\t\t   \n\t\t\t   } \n\t\t\t   remainder=div;\n\t\t\t   while(quotient.charAt(0)=='0')quotient.deleteCharAt(0);\t   \n\t\t\t   System.out.println(quotient+\" \"+remainder);\t  \n\t\t   }\n\t\t\n\t\tpublic static void sieve(int size)\n\t\t{\n\t\t\tsieve=new int[size+1];\n\t\t\t\n\t\t\tprimes=new ArrayList<Integer>();\n\t\t\t\n\t\t\tsieve[1]=1;\n\t\t\t\n\t\t\tfor(int i=2;i*i<=size;i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0)\n\t\t\t\t {\n\t\t\t\t\tfor(int j=i*i;j<size;j+=i) {sieve[j]=1;}\n\t\t\t\t }\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=2;i<=size;i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0) primes.add(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static long pow(long n, long b, long MOD)\n\t\t   {\n\t\t       long x=1;long y=n; \n\t\t       while(b > 0)\n\t\t       {\n\t\t           if(b%2 == 1)\n\t\t           {\n\t\t               x=x*y;\n\t\t               if(x>MOD) x=x%(MOD);\n\t\t           }\n\t\t           y = y*y;\n\t\t           if(y>MOD) y=y%(MOD); \n\t\t           b >>= 1;\n\t\t       }\n\t\t       return x;\n\t\t   }\n \n \n\t\tpublic static long mod_inv(long n,long mod)\n\t\t{\n\t\t\treturn pow(n,mod-2,mod);\n\t\t}\n\t\t\n\t\t//Returns index of highest number less than or equal to key\n\t\t public static int upper(long[] a,int length,long key)\n\t\t {\n\t\t\t    int low = 0;\n\t\t        int high = length-1;\n\t\t        int ans=-1;\n\t\t        \n\t\t        while (low <= high) {\n\t\t            int mid = (low + high) / 2;\n\t\t            if (key >= a[mid]) {\n\t\t                ans=mid;\n\t\t            \tlow = mid+1;\n\t\t            } else if(a[mid]>key){\n\t\t                high = mid - 1;\n\t\t            }\n\t\t        }\n\t\t        return ans;\n\t\t}\n\t\t\n\t\t//Returns index of least number greater than or equal to key\n\t\t public static int lower(long[] a,int length,long key)\n\t\t {\n\t\t\t    int low = 0;\n\t\t        int high = length-1;\n\t\t        int ans=-1;\n\t\t        \n\t\t        while (low <= high) {\n\t\t            int mid = (low + high) / 2;\n\t\t            if (key<=a[mid]) {\n\t\t                ans=mid;\n\t\t            \thigh = mid-1;\n\t\t            }\n\t\t            else{\n\t\t            \t\tlow=mid+1;\n\t\t            \t}\n\t\t        }\n\t\t        return ans;\n\t\t} \n\t\t   \n\t\tpublic long gcd(long r,long ans)\n\t\t{\n\t\t\tif(r==0) return ans;\n\t\t\treturn gcd(ans%r,r);\n\t\t}\n\t\tpublic fast() {\n\t\t\tthis(System.in);\n\t\t}\n\t\tpublic fast(InputStream is) {\n\t\t\ti = is;\n\t\t}\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = i.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic String nextString() {\n     \t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t\tpublic boolean isEndOfLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n \n\t}\t\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.*;\npublic class Main {\n    public static void main(String[] args) throws Exception{\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String[] cmd=br.readLine().split(\" \");\n        int n=Integer.valueOf(cmd[0]);\n        int m=Integer.valueOf(cmd[1]);\n        int d=Integer.valueOf(cmd[2]);\n        int[] c=new int[m];\n        cmd=br.readLine().split(\" \");\n        int[] ans=new int[n+1];\n        for(int i=0;i<m;i++)\n        {\n        \tc[i]=Integer.valueOf(cmd[i]);\n        }\n        int ind=0;\n        int pos=0;\n        int f=m;\n        int l_m=100000;\n        int[]sum=new int[3000];\n        for(int i=n;i>=1;i--)\n        {\n        \tif(f==0)\n        \t\tbreak;\n        \tint x=c[f-1];\n        \tsum[i-x+1]+=f;\n        \tsum[i+1]+=-f;\n        \ti=i-x+1;\n        \tf--;\n        \tl_m=Math.min(l_m,i);\n        }\n        int s=0;\n        for(int i=1;i<=n;i++)\n        {\n        \ts+=sum[i];\n        \tans[i]=s;\n        }\n        while(ind<m && pos!=n+1)\n        {\n        \tint x=c[ind];\n        \tif(pos+d>=n+1 || ans[pos+d]!=0)\n        \t{\n        \t\tpos=n+1;\n        \t\tbreak;\n        \t}\n        \tfor(int i=l_m;i<=l_m+x-1;i++)\n        \t{\n        \t\tans[i]=0;\n        \t}\n        \tfor(int i=pos+d;i<=pos+d+x-1;i++)\n        \t{\n        \t\tans[i]=ind+1;\n        \t}\n        \tl_m=l_m+x;\n        \tpos=pos+d+x-1;\n        \tind++;\n        \tif(ind==m)\n        \t\tpos=pos+d;\n        \tif(pos>n+1)\n        \t\tpos=n+1;\n        }\n        if(pos==n+1)\n        {\n        \tSystem.out.println(\"YES\");\n        \tfor(int i=1;i<=n;i++)\n        \t{\n        \t\tSystem.out.print(ans[i]+\" \");\n        \t}\n        }\n        else\n        \tSystem.out.println(\"NO\");\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n , m , d = map(int , input().split())\narray = list(map(int , input().split()))\nss = sum(array)\nans = [0] * (n + 1)\ns = 0\nfor i in range(m) :\n    pos = min(s + d , n + 1 - ss)\n    for j in range(pos , pos + array[i]):\n        ans[j] = i + 1\n    s = pos + array[i] - 1\n    ss -= array[i]\nif s + d <= n :\n    print(\"NO\")\nelse :\n    print(\"YES\")\n    for i in range(1 , n + 1) :\n        print(ans[i] , end=' ')\n    print(\"\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1e3 + 10;\nconst int mod = 1e9 + 7;\nint n, m, d;\nint c[MAX], ans[MAX];\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n >> m >> d;\n  memset(ans, 0, sizeof(ans));\n  int sum = 0, tail = 0;\n  for (int i = 1; i <= m; i++) {\n    cin >> c[i];\n    sum += c[i];\n  }\n  if (sum + (m + 1) * (d - 1) + 1 >= n + 1) {\n    cout << \"YES\" << endl;\n    int cnt = sum;\n    for (int i = 1; i <= m; i++) {\n      int mn = min(n - cnt, d - 1);\n      cnt += mn;\n      for (int j = 1; j <= mn; j++) cout << \"0 \";\n      for (int j = 1; j <= c[i]; j++) cout << i << \" \";\n    }\n    for (int i = cnt + 1; i <= n; i++) cout << \"0 \";\n    cout << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int n, m, d;\n  while (cin >> n >> m >> d) {\n    int sum = 0;\n    vector<int> ans(n + 2, 0);\n    vector<int> c(m);\n    for (int i = 0; i < m; ++i) {\n      cin >> c[i];\n      sum += c[i];\n    }\n    int plat = 0;\n    int pos = 0;\n    while (plat < m && pos <= n && n - (pos + d) + 1 > sum) {\n      for (int i = 0; i < c[plat]; ++i) {\n        ans[pos + d + i] = plat + 1;\n      }\n      sum -= c[plat];\n      pos = pos + d + c[plat] - 1;\n      c[plat] = 0;\n      plat++;\n    }\n    int start = n;\n    for (int i = m - 1; i >= 0; --i) {\n      if (c[i] == 0) break;\n      for (int j = 0; j < c[i]; ++j) ans[start--] = i + 1;\n    }\n    bool can = true;\n    for (int i = n; i >= 1; --i) {\n      if (ans[i]) {\n        if (n + 1 - i > d) {\n          can = false;\n        }\n        break;\n      }\n    }\n    if (!can) {\n      printf(\"NO\\n\");\n      continue;\n    }\n    printf(\"YES\\n\");\n    for (int i = 1; i < n + 1; ++i) {\n      if (i > 1) putchar(' ');\n      printf(\"%d\", ans[i]);\n    }\n    putchar('\\n');\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e3 + 5;\nint l[maxn], a[maxn], ans[maxn];\nint main() {\n  int n, m, d;\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (int i = 1; i <= m; i++) scanf(\"%d\", &a[i]);\n  int pos = 0;\n  for (int i = 1; i <= m; i++) {\n    pos = pos + d;\n    l[i] = pos;\n    pos = pos + a[i] - 1;\n  }\n  pos = pos + d;\n  if (pos <= n)\n    printf(\"NO\\n\");\n  else {\n    l[m + 1] = n + 1;\n    printf(\"YES\\n\");\n    for (int i = m; i >= 1; i--) l[i] = min(l[i], l[i + 1] - a[i]);\n    for (int i = 1; i <= m; i++) {\n      for (int j = l[i]; j <= l[i] + a[i] - 1; j++) ans[j] = i;\n    }\n    for (int i = 1; i <= n; i++) printf(\"%d \", ans[i]);\n    printf(\"\\n\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing pii = pair<ll, ll>;\nconst ll MOD = 1e9 + 7, N = 1e5 + 10;\nint32_t main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  ll n, m, d;\n  cin >> n >> m >> d;\n  vector<ll> a(m);\n  ll sm = 0;\n  for (ll i = 0; i < m; i++) {\n    cin >> a[i];\n    sm += a[i];\n  }\n  vector<ll> ans(n);\n  bool is_pos = true;\n  ll cur = -1;\n  ll ind = 0, j = 0, val = n - sm;\n  is_pos = is_pos && ((d - 1) * (m + 1) + sm < n);\n  if (!is_pos) {\n    cout << \"YES\\n\";\n    while (ind != n) {\n      ll dist = min(val, d - 1);\n      ll ff = dist;\n      while (dist--) {\n        if (ind == n) break;\n        ans[ind] = 0;\n        ind++;\n      }\n      ll to = a[j];\n      while (to--) {\n        if (ind == n) break;\n        ans[ind] = j + 1;\n        ind++;\n      }\n      j++;\n      val -= ff;\n    }\n    for (ll i = 0; i < n; i++) {\n      cout << ans[i] << ' ';\n    }\n    cout << '\\n';\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nfrom collections import defaultdict,Counter,deque\n\n# input=sys.stdin.readline\n# def print(x):\n#     sys.stdout.write(str(x)+\"\\n\")\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n\tnewlines = 0\n\n\tdef __init__(self, file):\n\t\tself._fd = file.fileno()\n\t\tself.buffer = BytesIO()\n\t\tself.writable = \"x\" in file.mode or \"r\" not in file.mode\n\t\tself.write = self.buffer.write if self.writable else None\n\n\tdef read(self):\n\t\twhile True:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tif not b:\n\t\t\t\tbreak\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines = 0\n\t\treturn self.buffer.read()\n\n\tdef readline(self):\n\t\twhile self.newlines == 0:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tself.newlines = b.count(b\"\\n\") + (not b)\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines -= 1\n\t\treturn self.buffer.readline()\n\n\tdef flush(self):\n\t\tif self.writable:\n\t\t\tos.write(self._fd, self.buffer.getvalue())\n\t\t\tself.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n\tdef __init__(self, file):\n\t\tself.buffer = FastIO(file)\n\t\tself.flush = self.buffer.flush\n\t\tself.writable = self.buffer.writable\n\t\tself.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n\t\tself.read = lambda: self.buffer.read().decode(\"ascii\")\n\t\tself.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# sys.stdout=open(\"CP1/output.txt\",'w')\n# sys.stdin=open(\"CP1/input.txt\",'r')\n\n# mod=pow(10,9)+7\n# t=int(input())\nfor i in range(1):\n\tn,m,d=map(int,input().split())\n\tc=list(map(int,input().split()))\n\tcur=-1\n\tstart=0\n\tflag=0\n\tl=[]\n\twhile cur<n:\n\t\tif start<m:\n\t\t\tl.append([start+1,cur+d,cur+d+c[start]])\n\t\t\tcur=cur+d+c[start]-1\n\t\t\tstart+=1\n\t\telse:\n\t\t\tif cur+d<n:\n\t\t\t\tflag=1\n\t\t\tbreak\n\tif flag:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\tans=[0]*n\n\t\tif cur<n:\n\t\t\tfor j in l:\n\t\t\t\tfor k in range(j[1],j[2]):\n\t\t\t\t\tans[k]=j[0]\n\t\telse:\n\t\t\tpre=[0]*m\n\t\t\tpre[-1]=c[-1]\n\t\t\tfor j in range(m-2,-1,-1):\n\t\t\t\tpre[j]=pre[j+1]+c[j]\n\n\t\t\tfor j in range(len(l)):\n\t\t\t\tif pre[j]+l[j][1]<n:\n\t\t\t\t\tfor k in range(l[j][1],l[j][2]):\n\t\t\t\t\t\tans[k]=l[j][0]\n\t\t\t\telse:\n\t\t\t\t\tstart=m-1\n\t\t\t\t\tfor k in range(n-1,n-pre[j]-1,-1):\n\t\t\t\t\t\tif c[start]==0:\n\t\t\t\t\t\t\tstart-=1\n\n\t\t\t\t\t\tans[k]=start+1\n\t\t\t\t\t\tc[start]-=1\n\t\t\t\t\tbreak\n\t\tprint(*ans)"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nc = list(map(int, input().split()))\n\nboards = [None]*(m+1)\nboards[-1] = [n+1, n+1]\nfor i in range(m-1, -1, -1):\n    boards[i] = [boards[i+1][0]-c[i], boards[i+1][0]-1]\n\npos = 0\nfor i in range(m+1):\n    if pos + 1 == boards[i][0]:\n        pos = boards[i][1]\n        continue\n    if boards[i][0] <= pos + d <= n+1:\n        if pos + d <= boards[i][1]:\n            pos = boards[i][1]\n        continue\n    diff = boards[i][0] - (pos+d)\n    boards[i][0] -= diff\n    boards[i][1] -= diff\n    pos = boards[i][1]\n\nif pos < n+1:\n    print('NO')\n    exit(0)\nelse:\n    ans = [0]*(n+1)\n    for i in range(m):\n        for j in range(boards[i][0], boards[i][1]+1):\n            ans[j] = i+1\n\n    print('YES')\n    print(*ans[1:])"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nvoid ps() { system(\"pause\"); }\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, d, t, playerPos = 0;\n  vector<pair<int, int>> wood;\n  vector<int> index;\n  cin >> n >> m >> d;\n  for (int i = 0; i < n; i++) index.push_back(0);\n  for (int i = 0; i < m; i++) {\n    cin >> t;\n    wood.push_back(make_pair(0, t));\n  }\n  int c = 0;\n  for (int i = m - 1; i >= 0; i--) {\n    c += wood[i].second;\n    wood[i].first = n + 1 - c;\n  }\n  for (int i = 0; i < m; i++) {\n    while (1) {\n      if (playerPos + d >= wood[i].first) {\n        playerPos = wood[i].first + wood[i].second - 1;\n        break;\n      } else\n        wood[i].first--;\n    }\n  }\n  for (int i = 0; i < m; i++)\n    for (int j = 0; j < wood[i].second; j++)\n      index[wood[i].first + j - 1] = i + 1;\n  if (playerPos + d >= n + 1) {\n    cout << \"YES\\n\";\n    for (int i = 0; i < n; i++) cout << index[i] << \" \";\n  } else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def gcd(a, b):\n    if a == 0:\n        return b\n    else:\n        return gcd(b % a, a)\n \n \nn, m, d = map(int, input().split())\n \na = list(map(int, input().split()))\nj = 0\np = m - 1\nk = [0] * n\nfor i in range(n - 1, -1, -1):\n    k[i] = p + 1\n    j += 1\n    if a[p] <= j:\n        j = 0\n        p -= 1\n        if p == -1:\n            break\n    \nz = 0\n\nlast = -1\nfor i in range(n):\n    if k[i] == 1:\n        last = i\n    if i - last >= d and k[i] == 0:\n        #print(i, last, k, z, a[z] + i, a[z])\n        for j in range(0, n):\n            if k[j] == z + 1:\n                k[j] = 0\n        for j in range(i, a[z] + i):\n            k[j] = z + 1\n            last = j\n        z += 1\n        #print(z, k)\n        if z == m and n - last > d:\n            print('NO')\n            exit(0)\nif d > n:\n    print('YES')\n    print('1 ' * a[z] + '0 ' * (n - a[z]))\n    exit(0)\nprint('YES')\nprint(*k)\n           \n            \n            \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.BitSet;\nimport java.util.Calendar;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.PriorityQueue;\nimport java.util.SortedSet;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\n/**\n * #\n *\n * @author pttrung\n */\npublic class C_Round_598_Div3 {\n    public static long MOD = 1000000007;\n    static int[] dp, p;\n\n    public static void main(String[] args) throws FileNotFoundException {\n        // PrintWriter out = new PrintWriter(new FileOutputStream(new File(\n        // \"output.txt\")));\n        PrintWriter out = new PrintWriter(System.out);\n        Scanner in = new Scanner();\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int d = in.nextInt();\n        int[] data = new int[m];\n        int[] sum = new int[m];\n        for (int i = 0; i < m; i++) {\n            data[i] = in.nextInt();\n        }\n        for (int i = m - 1; i >= 0; i--) {\n            sum[i] = data[i] + (i + 1 < m ? sum[i + 1] : 0);\n        }\n        int pos = 0;\n        int index = 0;\n        int[] re = new int[m];\n        Arrays.fill(re, -1);\n        boolean ok = false;\n        while (pos < n + 1) {\n            int max = pos + d;\n            if (max >= n + 1) {\n                ok = true;\n                int last = n + 1;\n                for (int i = m - 1; i >= index; i--) {\n                    re[i] = last - data[i];\n                    last = re[i];\n                }\n                break;\n            }\n            if (index >= m) {\n                break;\n            }\n            int left = n + 1 - max;\n            //System.out.println(left + \" \" + pos + \" \" + index);\n            if (sum[index] >= left) {\n                ok = true;\n                int last = n + 1;\n                for (int i = m - 1; i >= index; i--) {\n                    re[i] = last - data[i];\n                    last = re[i];\n                }\n\n                break;\n            } else {\n                re[index] = max;\n                pos = max + data[index] - 1;\n                index++;\n            }\n        }\n        if (ok) {\n            out.println(\"YES\");\n            index = 0;\n            for (int i = 1; i <= n; i++) {\n                if (index < m) {\n                    if (re[index] <= i && i < re[index] + data[index]) {\n                        out.print((index + 1) + \" \");\n                    } else {\n                        out.print(0 + \" \");\n                    }\n                    if (i + 1 == re[index] + data[index]) {\n                        index++;\n                    }\n                } else {\n                    out.print(0 + \" \");\n                }\n            }\n        } else {\n            out.println(\"NO\");\n        }\n\n\n        out.close();\n    }\n\n\n    public static int[] KMP(String val) {\n        int i = 0;\n        int j = -1;\n        int[] result = new int[val.length() + 1];\n        result[0] = -1;\n        while (i < val.length()) {\n            while (j >= 0 && val.charAt(j) != val.charAt(i)) {\n                j = result[j];\n            }\n            j++;\n            i++;\n            result[i] = j;\n        }\n        return result;\n\n    }\n\n    public static boolean nextPer(int[] data) {\n        int i = data.length - 1;\n        while (i > 0 && data[i] < data[i - 1]) {\n            i--;\n        }\n        if (i == 0) {\n            return false;\n        }\n        int j = data.length - 1;\n        while (data[j] < data[i - 1]) {\n            j--;\n        }\n        int temp = data[i - 1];\n        data[i - 1] = data[j];\n        data[j] = temp;\n        Arrays.sort(data, i, data.length);\n        return true;\n    }\n\n    public static int digit(long n) {\n        int result = 0;\n        while (n > 0) {\n            n /= 10;\n            result++;\n        }\n        return result;\n    }\n\n    public static double dist(long a, long b, long x, long y) {\n        double val = (b - a) * (b - a) + (x - y) * (x - y);\n        val = Math.sqrt(val);\n        double other = x * x + a * a;\n        other = Math.sqrt(other);\n        return val + other;\n\n    }\n\n    public static class Point implements Comparable<Point> {\n\n        int x, y;\n\n        public Point(int start, int end) {\n            this.x = start;\n            this.y = end;\n        }\n\n        @Override\n        public int hashCode() {\n            int hash = 5;\n            hash = 47 * hash + this.x;\n            hash = 47 * hash + this.y;\n            return hash;\n        }\n\n        @Override\n        public boolean equals(Object obj) {\n            if (obj == null) {\n                return false;\n            }\n            if (getClass() != obj.getClass()) {\n                return false;\n            }\n            final Point other = (Point) obj;\n            if (this.x != other.x) {\n                return false;\n            }\n            if (this.y != other.y) {\n                return false;\n            }\n            return true;\n        }\n\n        @Override\n        public int compareTo(Point o) {\n            return Integer.compare(x, o.x);\n        }\n    }\n\n    public static class FT {\n\n        long[] data;\n\n        FT(int n) {\n            data = new long[n];\n        }\n\n        public void update(int index, long value) {\n            while (index < data.length) {\n                data[index] += value;\n                index += (index & (-index));\n            }\n        }\n\n        public long get(int index) {\n            long result = 0;\n            while (index > 0) {\n                result += data[index];\n                index -= (index & (-index));\n            }\n            return result;\n\n        }\n    }\n\n    public static long gcd(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b);\n    }\n\n    public static long pow(long a, int b) {\n        if (b == 0) {\n            return 1;\n        }\n        if (b == 1) {\n            return a;\n        }\n\n        long val = pow(a, b / 2);\n        if (b % 2 == 0) {\n            return val * val;\n        } else {\n            return val * (val * a);\n\n        }\n    }\n\n    static class Scanner {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() throws FileNotFoundException {\n            // System.setOut(new PrintStream(new BufferedOutputStream(System.out), true));\n            br = new BufferedReader(new InputStreamReader(System.in));\n            //  br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(\"input.txt\"))));\n        }\n\n        public String next() {\n\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                    throw new RuntimeException();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            st = null;\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n\n        public boolean endLine() {\n            try {\n                String next = br.readLine();\n                while (next != null && next.trim().isEmpty()) {\n                    next = br.readLine();\n                }\n                if (next == null) {\n                    return true;\n                }\n                st = new StringTokenizer(next);\n                return st.hasMoreTokens();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d;\nint sum_c;\nint to_del;\nint max_len;\nvector<int> c;\nvector<int> ans;\nbool Jud(void);\nint main(int argc, const char* argv[]) {\n  scanf(\"%d %d %d\", &n, &m, &d);\n  c.resize(m + 1);\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &c[i]);\n    sum_c += c[i];\n  }\n  if (d == 1) {\n    int i_c = 1;\n    int sum_c_i = 0;\n    bool flag = false;\n    for (i_c = 1; i_c <= m; i_c++) {\n      sum_c_i += c[i_c];\n      if (sum_c_i == n) {\n        flag = true;\n        break;\n      }\n    }\n    if (flag) {\n      printf(\"YES\\n\");\n      for (int i = 1; i <= i_c; i++) {\n        for (int j = 1; j <= c[i]; j++) {\n          printf(\"%d \", i);\n        }\n      }\n    } else {\n      printf(\"NO\\n\");\n    }\n  } else {\n    if (Jud()) {\n      printf(\"YES\\n\");\n      for (int i = 1; i <= max_len; i++) {\n        if (ans[i] != -1) {\n          printf(\"%d \", ans[i]);\n        }\n      }\n    } else {\n      printf(\"NO\\n\");\n    }\n  }\n  return 0;\n}\nbool Jud(void) {\n  max_len = sum_c + (m + 1) * (d - 1);\n  if (max_len >= n) {\n    ans.resize(max_len + 1);\n    bool flag = true;\n    int temp = 0;\n    int i_c = 1;\n    for (int i = 1; i <= max_len; i++) {\n      if (flag) {\n        temp++;\n        ans[i] = 0;\n        if (temp == d - 1) {\n          temp = 0;\n          flag = false;\n        }\n      } else {\n        temp++;\n        ans[i] = i_c;\n        if (temp == c[i_c]) {\n          temp = 0;\n          flag = true;\n          i_c++;\n        }\n      }\n    }\n    to_del = max_len - n;\n    for (int i = 1; i <= max_len && to_del; i++) {\n      if (ans[i] == 0) {\n        ans[i] = -1;\n        to_del--;\n      }\n    }\n    if (to_del) {\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n[n,m,d]=[int(i) for i in sys.stdin.readline().split()]\n\nc=[int(j) for j in sys.stdin.readline().split()]\n\ntot=n-sum(c)\n\nif(tot//(m+1)>d-1):\n\tprint(\"NO\")\nelse:\n\tarr=[0]*(m+1)\n\n\tfor i in range(m+1):\n\t\tarr[i]=tot//(m+1)\n\t\n\tdone=1\n\tfor j in range(tot%(m+1)):\n\t\tarr[j]+=1\n\t\tif(arr[j]>d-1):\n\t\t\tdone=0\n\t\t\tbreak\n\n\tif(done==0):\n\t\tprint(\"NO\")\n\telse:\n\t\tans=[0]*n\n\t\tlast=0\n\t\tfor p in range(m):\n\t\t\tlast=last+arr[p]\n\t\t\tind=last\n\t\t\tfor q in range(c[p]):\n\t\t\t\tans[ind]=p+1\n\t\t\t\tind+=1\n\t\t\tlast=last+c[p]\n\t\t\t# last=max(last,ind-1)\n\n\t\tprint(\"YES\")\n\t\tfor h in range(n):\n\t\t\tprint(ans[h],end=\" \")\n\t\tprint()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.Arrays;\npublic class platformJumping {\n\t\n\tpublic static String repeatString(int n, String st) {\n\t\tString returnString = \"\";\n\t\tfor (int i=0;i<n;i++) {\n\t\t\treturnString += st;\n\t\t\treturnString += \" \";\n\t\t}\n\t\treturn returnString;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\t// add the length of each of the platforms (assume that\n\t\t// between each platform you jump the maximum distance\n\t\t//if the total sum is at least n, then u can make it\n\t\t//huh i have to print the sequence, that's weird\n\t\t//just place them all d-1 distance apart, and \n\t\t//incrementally move the platforms to the end\n\t\t//until the sum is less than n XD\n\t\t//then all the platforms in the end are consecutive\n\t\t//the rest are spaced d-1 along the beginning\n\t\tint riverWidth = sc.nextInt();\n\t\tint numPlatforms = sc.nextInt();\n\t\tint maxJump = sc.nextInt();\n\t\t\n\t\tint counter = 0;\n\t\t\n\t\tint[] platformSizes = new int[numPlatforms];\n\t\tfor (int i=0;i<numPlatforms;i++) {\n\t\t\tint size = sc.nextInt();\n\t\t\tplatformSizes[i] = size;\n\t\t\tcounter += size;\n\t\t}\n\t\tif (counter + (maxJump-1)*(numPlatforms+1)<riverWidth) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"YES\");\n\t\t//it means u can make it across\n\t\tint difference = riverWidth - counter;\n\t\tint numJumps = 0;\n\t\tint lastJump = 0;\n\t\tboolean perfectJump = false;\n\t\tString finalPrint = \"\";\n\t\tString zeroString = repeatString(maxJump-1,\"0\");\n\t\tif (maxJump != 1) {\n\n\t\tint remainder = difference%(maxJump-1);\n\t\t\n\t\tif (remainder==0) {\n\t\t\tnumJumps = difference/(maxJump-1);\n\t\t\tperfectJump = true;\n\t\t}\n\t\telse {\n\t\t\tnumJumps = difference/(maxJump-1);\n\t\t\tlastJump = remainder;\n\t\t}\n\t\t}\n\t\telse {\n\t\t\tperfectJump = true;\n\t\t\tnumJumps = 0;\n\t\t}\n\t\tif (perfectJump) {\n\t\t\tif (numJumps == numPlatforms + 1) {\n\t\t\tfor (int j=1;j<=numJumps-1;j++) {\n\t\t\t\tfinalPrint += zeroString;\n\t\t\t\tfinalPrint += repeatString(platformSizes[j-1],Integer.toString(j));\n\t\t\t}\n\t\t\tfor (int k=0;k<numPlatforms-numJumps;k++) {\n\t\t\t\tint kevin = k + numJumps;\n\t\t\t\tfinalPrint += repeatString(platformSizes[kevin],Integer.toString(kevin+1));\n\t\t\t}\n\t\t\tfinalPrint += zeroString;\n\t\t\tSystem.out.println(finalPrint);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (int j=1;j<=numJumps;j++) {\n\t\t\t\t\tfinalPrint += zeroString;\n\t\t\t\t\tfinalPrint += repeatString(platformSizes[j-1],Integer.toString(j));\n\t\t\t\t}\n\t\t\t\tfor (int k=0;k<numPlatforms-numJumps;k++) {\n\t\t\t\t\tint kevin = k + numJumps;\n\t\t\t\t\tfinalPrint += repeatString(platformSizes[kevin],Integer.toString(kevin+1));\n\t\t\t\t}\n\t\t\t\tSystem.out.println(finalPrint);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (numJumps != numPlatforms) {\n\t\t\tfor (int j=1;j<=numJumps;j++) {\n\t\t\t\tfinalPrint += zeroString;\n\t\t\t\tfinalPrint += repeatString(platformSizes[j-1],Integer.toString(j));\n\t\t\t}\n\t\t\tfinalPrint += repeatString(lastJump,\"0\");\n\t\t\tfor (int k=0;k<numPlatforms-numJumps;k++) {\n\t\t\t\tint kevin = k + numJumps;\n\t\t\t\tfinalPrint += repeatString(platformSizes[kevin],Integer.toString(kevin+1));\n\t\t\t}\n\t\t\tSystem.out.println(finalPrint);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (int j=1;j<=numJumps;j++) {\n\t\t\t\t\tfinalPrint += zeroString;\n\t\t\t\t\tfinalPrint += repeatString(platformSizes[j-1],Integer.toString(j));\n\t\t\t\t}\n\t\t\t\tfinalPrint += repeatString(lastJump,\"0\");\n\t\t\t\tSystem.out.println(finalPrint);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1009] = {0}, c[1003] = {0}, t[1003] = {0};\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int sum1 = 0;\n  for (int i = 1; i <= m; ++i) {\n    cin >> c[i];\n    sum1 += c[i];\n  }\n  if (sum1 + (m + 1) * (d - 1) < n) {\n    cout << \"NO\";\n    return 0;\n  }\n  int pos = n;\n  for (int i = m; i >= 1; --i) {\n    int temp = c[i];\n    while (temp) {\n      temp--;\n      pos--;\n    }\n    pos++;\n    t[i] = pos--;\n  }\n  pos = 0;\n  for (int i = 1; i <= m; ++i) {\n    if (pos + d >= t[i]) {\n      pos = t[i] + c[i] - 1;\n    } else {\n      t[i] = pos + d;\n      pos = t[i] + c[i] - 1;\n    }\n  }\n  for (int i = 1; i <= m; ++i) {\n    for (int j = t[i]; j <= t[i] + c[i] - 1; ++j) a[j] = i;\n  }\n  cout << \"YES\\n\";\n  for (int i = 1; i <= n; ++i) cout << a[i] << \"  \";\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nif __name__ == '__main__':\n    A = stdin.readline().strip().split()\n    n = int(A[0])   # the width of the river\n    m = int(A[1])   # the number of platforms\n    d = int(A[2])   # the maximum distance of your jump\n\n    c = list(map(int, stdin.readline().strip().split()))\n    csum = sum(c)\n\n    gap = n - csum\n    jumps = m + 1\n\n    if jumps*(d - 1) >= gap >= 0:\n        res = []\n\n        interval = int(gap/jumps)\n        remainder = gap % jumps\n\n        cur = interval\n        if remainder > 0:\n            cur += 1\n            remainder -= 1\n\n        i = 0\n        wi = 0\n\n        while i < n:\n            if cur > 0 or wi == m:\n                res.append(0)\n                i += 1\n                cur -= 1\n            else:\n                cur = interval\n                if remainder > 0:\n                    cur += 1\n                    remainder -= 1\n                for j in range(c[wi]):\n                    #print(i)\n                    res.append(wi+1)\n                    i += 1\n                wi += 1\n\n        print('YES')\n        print(' '.join(map(str, res)))\n    else:\n        print('NO')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        // write your code here\n        Scanner scan = new Scanner(System.in);\n        int n,m,d;\n        n = scan.nextInt();\n        m = scan.nextInt();\n        d = scan.nextInt();\n\n        int[] a = new int[m];\n        int sum = 0;\n        for(int i=0; i<m; i++){\n            a[i] = scan.nextInt();\n            sum += a[i];\n        }\n        //System.out.println(\"bsjkavdsak\");\n\n\n\n        int[] ans = new int[n+100];\n\n        int i = m-1;\n        int pos = n;\n        for(i= m-1; i>=0; i--){\n            for(int len=0; len < a[i]; len++){\n\n                ans[pos-len] = i+1;\n            }\n            pos -= a[i];\n        }\n\n        //for(i=1; i<=n; i++) System.out.print(ans[i] + \" \");\n\n        i = d;\n        pos = pos + 1;\n\n        if(n==1 & d <= n){\n            if(m>1){\n                System.out.println(\"NO\");\n\n                return;\n            }\n            System.out.println(\"YES\");\n            System.out.println(1);\n            return;\n        }\n        int index = 1;\n\n        if(pos==1){\n            System.out.println(\"YES\");\n            for(i=1; i<=n; i++) System.out.print(ans[i] + \" \");\n            return;\n        }\n        //System.out.println(pos);\n        while(i<=n){\n            if(ans[i]==0){\n                if(pos>n){\n                    System.out.println(\"NO\");\n                    return;\n                }\n                while(pos<=n && ans[pos]==index){\n                    ans[pos]=0;\n                    ans[i] = index;\n                    i++; pos++;\n                }\n            }\n            index++;\n            i = i+d-1;\n        }\n        System.out.println(\"YES\");\n        for(i=1; i<=n; i++) System.out.print(ans[i] + \" \");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma clang diagnostic push\n#pragma ide diagnostic ignored \"hicpp-signed-bitwise\"\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nconst long long INF64 = LLONG_MAX;\nconst int INF32 = 1e9;\ntemplate <class T>\nbool chkmin(T& a, const T& b) {\n  return a > b ? a = b, 1 : 0;\n}\ntemplate <class T>\nbool chkmax(T& a, const T& b) {\n  return a < b ? a = b, 1 : 0;\n}\nnamespace input {\ntemplate <class T>\nvoid re(complex<T>& x);\ntemplate <class T1, class T2>\nvoid re(pair<T1, T2>& p);\ntemplate <class T>\nvoid re(vector<T>& a);\ntemplate <class T, size_t SZ>\nvoid re(array<T, SZ>& a);\ntemplate <class T>\nvoid re(T& x) {\n  cin >> x;\n}\nvoid re(double& x) {\n  string t;\n  re(t);\n  x = stod(t);\n}\nvoid re(long double& x) {\n  string t;\n  re(t);\n  x = stold(t);\n}\ntemplate <class T, class... Ts>\nvoid re(T& t, Ts&... ts) {\n  re(t);\n  re(ts...);\n}\ntemplate <class T>\nvoid re(complex<T>& x) {\n  T a, b;\n  re(a, b);\n  x = cd(a, b);\n}\ntemplate <class T1, class T2>\nvoid re(pair<T1, T2>& p) {\n  re(p.first, p.second);\n}\ntemplate <class T>\nvoid re(vector<T>& a) {\n  for (int i = (0); i < ((int)a.size()); i++) re(a[i]);\n}\ntemplate <class T, size_t SZ>\nvoid re(array<T, SZ>& a) {\n  for (int i = (0); i < (SZ); i++) re(a[i]);\n}\n}  // namespace input\nusing namespace input;\nnamespace output {\nvoid pr(int x) { cout << x; }\nvoid pr(long x) { cout << x; }\nvoid pr(long long x) { cout << x; }\nvoid pr(unsigned x) { cout << x; }\nvoid pr(unsigned long x) { cout << x; }\nvoid pr(unsigned long long x) { cout << x; }\nvoid pr(float x) { cout << x; }\nvoid pr(double x) { cout << x; }\nvoid pr(long double x) { cout << x; }\nvoid pr(char x) { cout << x; }\nvoid pr(const char* x) { cout << x; }\nvoid pr(const string& x) { cout << x; }\nvoid pr(bool x) { pr(x ? \"true\" : \"false\"); }\ntemplate <class T>\nvoid pr(const complex<T>& x) {\n  cout << x;\n}\ntemplate <class T1, class T2>\nvoid pr(const pair<T1, T2>& x);\ntemplate <class T>\nvoid pr(const T& x);\ntemplate <class T, class... Ts>\nvoid pr(const T& t, const Ts&... ts) {\n  pr(t);\n  pr(ts...);\n}\ntemplate <class T1, class T2>\nvoid pr(const pair<T1, T2>& x) {\n  pr(\"{\", x.first, \", \", x.second, \"}\");\n}\ntemplate <class T>\nvoid pr(const T& x) {\n  pr(\"{\");\n  bool fst = 1;\n  for (const auto& a : x) pr(!fst ? \", \" : \"\", a), fst = 0;\n  pr(\"}\");\n}\nvoid ps() { pr(\"\\n\"); }\ntemplate <class T, class... Ts>\nvoid ps(const T& t, const Ts&... ts) {\n  pr(t);\n  if (sizeof...(ts)) pr(\" \");\n  ps(ts...);\n}\nvoid pc() { pr(\"]\\n\"); }\ntemplate <class T, class... Ts>\nvoid pc(const T& t, const Ts&... ts) {\n  pr(t);\n  if (sizeof...(ts)) pr(\", \");\n  pc(ts...);\n}\n}  // namespace output\nusing namespace output;\nvoid solve();\nvoid precalc();\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin.sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  precalc();\n  solve();\n  return 0;\n}\nvoid precalc() {}\nvoid solve() {\n  int n, m, d;\n  re(n, m, d);\n  vector<int> p(m);\n  re(p);\n  vector<int> p0 = p;\n  int cur = 0;\n  vector<int> z(n + 1);\n  for (int i = 0; i < n;) {\n    i += d;\n    if (i > n) break;\n    if (cur >= m) {\n      ps(\"NO\");\n      return;\n    }\n    while (i <= n && p[cur] > 0) z[i++] = 1, p[cur]--;\n    i--;\n    cur++;\n  }\n  int s = 0;\n  for (int zz : p) s += zz;\n  for (int i = n; i >= 1 && s > 0; i--)\n    if (z[i] != 1) z[i] = 1, s--;\n  cur = m - 1;\n  for (int i = n; i >= 1; i--) {\n    if (z[i] == 1) {\n      while (p0[cur] == 0) cur--;\n      p0[cur]--;\n      z[i] = cur + 1;\n    }\n  }\n  0x12c;\n  ps(\"YES\");\n  for (int i = 1; i < n + 1; i++) pr(z[i], ' ');\n  ps();\n}\n#pragma clang diagnostic pop\n"
        },
        {
            "language": 3,
            "solution": "import math\nif __name__ == '__main__':\n    n_river, n_platform, jump = [int(i) for i in input().split()]\n\n\n    plat_length = [int(i) for i in input().split()]\n    empty = n_river+1 - sum(plat_length)\n    avg_space = empty/(n_platform+1)\n    # print(avg_space)\n    if avg_space >= jump: #If we reach a platform we can reach its end, also if we can jump on middle of a platform, we can jump on its start\n        print(\"NO\")\n        exit()\n    \n\n    else:\n\n        ans = []\n\n        i = 1\n\n        for plat in plat_length:\n\n            avg_space = max(0,(n_river-len(ans)-sum(plat_length[i-1:]))/(n_platform-i+1))\n            avg_space = math.ceil(avg_space)\n\n            ans += [0]*min(jump-1,avg_space)\n\n            ans += [i]*plat\n            i += 1\n\n        if n_river - len(ans) >= jump:\n            print(\"NO\")\n            exit()\n\n        while len(ans) < n_river:\n            ans.append(0)\n        \n        print(\"YES\")\n        for a in ans:\n            print(a, end = ' ')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d, a[1010];\nint main() {\n  cin >> n >> m >> d;\n  int diff = n;\n  for (int i = 1; i <= m; i++) {\n    cin >> a[i];\n    diff = diff - a[i];\n  }\n  vector<int> ans;\n  for (int i = 1; i <= m + 1; i++) {\n    int need = min(d - 1, diff);\n    diff = diff - need;\n    while (need > 0) {\n      ans.push_back(0);\n      need--;\n    }\n    while (a[i] > 0) {\n      ans.push_back(i);\n      a[i]--;\n    }\n  }\n  if (ans.size() == n) {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < ans.size(); i++) {\n      cout << ans[i] << \" \";\n    }\n    return 0;\n  }\n  cout << \"NO\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\nusing namespace std;\ntemplate <class c>\nstruct rge {\n  c b, e;\n};\ntemplate <class c>\nrge<c> range(c i, c j) {\n  return rge<c>{i, j};\n}\ntemplate <class c>\nauto dud(c* x) -> decltype(cerr << *x, 0);\ntemplate <class c>\nchar dud(...);\nstruct debug {\n  template <class c>\n  debug& operator<<(const c&) {\n    return *this;\n  }\n};\nconst long long MOD = 1e9 + 7;\nconst long long N = 1e7 + 1;\nconst long long INF = 1e18 + 10;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  long long n, m, d;\n  cin >> n >> m >> d;\n  vector<long long> p(m);\n  long long sum = 0;\n  for (long long i = 0; i < m; i++) {\n    cin >> p[i];\n    sum += p[i];\n  }\n  vector<long long> ans(n);\n  long long start = n - 1;\n  for (long long i = m - 1; i >= 0; i--) {\n    long long val = p[i];\n    while (val > 0) {\n      ans[start] = i + 1;\n      start--;\n      val--;\n    }\n  }\n  vector<long long> s(m + 1);\n  for (long long i = n - 1; i >= 0; i--) {\n    s[ans[i]] = i;\n  }\n  debug() << \" [\"\n          << \"ans\"\n             \": \"\n          << (ans) << \"] \";\n  debug() << \" [\"\n          << \"s\"\n             \": \"\n          << (s) << \"] \";\n  long long cur = -1;\n  for (long long i = 0; i < m; i++) {\n    long long position_current_platform = s[i + 1];\n    debug() << \" [\"\n            << \"position_current_platform\"\n               \": \"\n            << (position_current_platform) << \"] \";\n    if (cur + d >= position_current_platform) {\n      cur = n + 1;\n      break;\n    }\n    for (long long j = 0; j < p[i]; j++) {\n      ans[position_current_platform + j] = 0;\n    }\n    debug() << \" [\"\n            << \"ans\"\n               \": \"\n            << (ans) << \"] \";\n    for (long long j = 0; j < p[i]; j++) {\n      ans[cur + d + j] = i + 1;\n    }\n    debug() << \" [\"\n            << \"ans\"\n               \": \"\n            << (ans) << \"] \";\n    debug() << \" [\"\n            << \"p[i]\"\n               \": \"\n            << (p[i]) << \"] \";\n    cur = cur + d + p[i] - 1;\n    debug() << \" [\"\n            << \"cur\"\n               \": \"\n            << (cur) << \"] \";\n  }\n  if (cur + d >= n) {\n    cout << \"YES\" << endl;\n    for (long long& c : ans) {\n      cout << c << ' ';\n    }\n    cout << endl;\n    debug() << \" [\"\n            << \"ans\"\n               \": \"\n            << (ans) << \"] \";\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;  \npublic class Main \n{\n/*\n    HashMap<> map=new HashMap<>();\n    TreeMap<> map=new TreeMap<>();\n    map.put(p,map.getOrDefault(p,0)+1);\n    for(Map.Entry<> mx:map.entrySet()){\n          int v=mx.getValue(),k=mx.getKey();\n    }for (int i = 1; i <= 1000; i++)\n    fac[i] = fac[i - 1] * i % mod;\n    ArrayList<Pair<Character,Integer>> l=new ArrayList<>();\n    ArrayList<> l=new ArrayList<>();\n    HashSet<> has=new HashSet<>();\n    PriorityQueue<Integer> pq=new PriorityQueue<>(new Comparator<Integer>(){\n                public int compare(Integer a,Integer b){\n                      return Integer.compare(b,a);\n                }\n                });\n    Arrays.sort(ar,new Comparator<int[]>() {\n    public int compare(int[] a, int[] b) {\n        return Double.compare(a[0], b[0]);\n    }\n    });*/ \n    PrintWriter out;\n    FastReader sc;\n    long mod=(long)(1e9+7);\n    long maxlong=Long.MAX_VALUE;\n    long minlong=Long.MIN_VALUE;\n    /******************************************************************************************\n     *****************************************************************************************/\n    public void sol(){\n          int n=ni(),m=ni(),d=ni();\n          int[] ar=new int[m];\n          for(int i=0;i<m;i++)ar[i]=ni();\n          ArrayList<Integer> l=new ArrayList<>();\n          int p=n;\n          for(int i=m-1;i>=0;i--){\n                l.add(p-ar[i]+1);\n                p-=ar[i];\n          }Collections.reverse(l);\n          int i=0;\n          p=0;\n          while(i<=n){\n                if(i+d>n)break;\n                if(p>=m){\n                      no();return;\n                }if(i+d>=l.get(p)){\n                      break;\n                }else{\n                      l.set(p,i+d);\n                      i+=d+ar[p]-1;\n                      p++;\n                }\n          }StringBuilder sb=new StringBuilder();\n          i=1;p=0;\n          while(i<=n&&p<m){\n                int q=l.get(p);\n                while(i<q){\n                      sb.append(\"0 \");\n                      i++;\n                }for(int j=0;j<ar[p];j++){\n                      sb.append(p+1+\" \");\n                      i++;\n                }p++;\n          }while(i<=n){\n                sb.append(\"0 \");\n                i++;\n          }yes();pl(sb);\n    }\n    public static void main(String[] args) \n\t{ \n\t      Main g=new Main();\n\t\tg.out=new PrintWriter(System.out);\n\t\tg.sc=new FastReader();\n\t\tint t=1;\n// \t\tt=g.ni();\n\t\twhile(t-->0)\n\t\tg.sol();\n\t\tg.out.flush();\n\t}\n\t\n\t/****************************************************************************************\n     *****************************************************************************************/\n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n \n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n \n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n \n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n \n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n \n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n \n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} public int ni(){\n\t      return sc.nextInt();\n\t}public long nl(){\n\t      return sc.nextLong();\n\t}public double nd(){\n\t      return sc.nextDouble();\n\t}public char[] rl(){\n\t      return sc.nextLine().toCharArray();\n\t}public String rl1(){\n\t      return sc.nextLine();\n\t}\n\tpublic void pl(Object s){\n\t      out.println(s);\n\t}public void ex(){\n\t      out.println();\n\t}\n\tpublic void pr(Object s){\n\t      out.print(s);\n\t}public String next(){\n\t      return sc.next();\n\t}public long abs(long x){\n\t      return Math.abs(x);\n\t}\n\tpublic int abs(int x){\n\t      return Math.abs(x);\n\t}\n\tpublic double abs(double x){\n\t      return Math.abs(x);\n\t}\n      public long pow(long x,long y){\n            return (long)Math.pow(x,y);\n      }\n      public int pow(int x,int y){\n            return (int)Math.pow(x,y);\n      }\n      public double pow(double x,double y){\n            return Math.pow(x,y);\n      }public long min(long x,long y){\n            return (long)Math.min(x,y);\n      }\n      public int min(int x,int y){\n            return (int)Math.min(x,y);\n      }\n      public double min(double x,double y){\n            return Math.min(x,y);\n      }public long gcd(long a, long b) {\n\t\tif (a == 0)\n\t\t\treturn b;\n\t\treturn gcd(b % a, a);\n\t}public long lcm(long a, long b) {\n            return (a / gcd(a, b)) * b;\n      }\n       void sort1(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l,Collections.reverseOrder());\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}\n\t void sort(int[] a) {\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tfor (int i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort(long[] a) {\n\t\tArrayList<Long> l = new ArrayList<>();\n\t\tfor (long i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}void sort1(long[] a) {\n\t\tArrayList<Long> l = new ArrayList<>();\n\t\tfor (long i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l,Collections.reverseOrder());\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}\n\tvoid sort(double[] a) {\n\t\tArrayList<Double> l = new ArrayList<>();\n\t\tfor (double i : a) {\n\t\t\tl.add(i);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\ta[i] = l.get(i);\n\t\t}\n\t}int  swap(int a,int b){\n\t      return a;\n\t}long  swap(long a,long b){\n\t      return a;\n\t}double  swap(double a,double b){\n\t      return a;\n\t}\n\tboolean isPowerOfTwo (int x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }boolean isPowerOfTwo (long x) \n      { \n            return x!=0 && ((x&(x-1)) == 0);     \n      }public long max(long x,long y){\n            return (long)Math.max(x,y);\n      }\n      public int max(int x,int y){\n            return (int)Math.max(x,y);\n      }\n      public double max(double x,double y){\n            return Math.max(x,y);\n      }long sqrt(long x){\n            return (long)Math.sqrt(x);\n      }int sqrt(int x){\n            return (int)Math.sqrt(x);\n      }void input(int[] ar,int n){\n            for(int i=0;i<n;i++)ar[i]=ni();\n      }void input(long[] ar,int n){\n            for(int i=0;i<n;i++)ar[i]=nl();\n      }void fill(int[] ar,int k){\n            Arrays.fill(ar,k);\n      }void yes(){\n            pl(\"YES\");\n      }void no(){\n            pl(\"NO\");\n      }\n    int[] sieve(int n) \n    { \n        boolean prime[] = new boolean[n+1]; \n        int[] k=new int[n+1];\n        for(int i=0;i<=n;i++) {\n            prime[i] = true; \n            k[i]=i;\n        }\n          \n        for(int p = 2; p <=n; p++) \n        { \n            if(prime[p] == true) \n            { \n               // sieve[p]=p;\n                for(int i = p*2; i <= n; i += p) {\n                    prime[i] = false; \n                  //  sieve[i]=p;\n                    while(k[i]%(p*p)==0){\n                          k[i]/=(p*p);\n                    }\n                }\n            } \n        }return k;\n    }\n    int strSmall(int[] arr, int target)  \n    {  \n        int start = 0, end = arr.length-1;  \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;   \n            if (arr[mid] >= target) {  \n                end = mid - 1;  \n            }   \n            else {  \n                ans = mid;  \n                start = mid + 1;  \n            }  \n        }  \n        return ans;  \n    } int strSmall(ArrayList<Integer> arr, int target)  \n    {  \n        int start = 0, end = arr.size()-1;  \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;   \n            if (arr.get(mid) > target) {  \n                start = mid + 1; \n                ans=start;\n            }   \n            else {\n                end = mid - 1;  \n            }  \n        }  \n        return ans;  \n    }long mMultiplication(long a,long b) \n    { \n        long res = 0;    \n        a %= mod; \n  \n        while (b > 0)  \n        {  \n            if ((b & 1) > 0)  \n            { \n                res = (res + a) % mod; \n            }  \n            a = (2 * a) % mod; \n  \n            b >>= 1;  \n        } \n        return res; \n    }long nCr(int n, int r,\n                             long p)\n    {\n \n          if (n<r) \n              return 0;\n        if (r == 0)\n            return 1;\n            long[] fac = new long[n + 1];\n        fac[0] = 1;\n \n        for (int i = 1; i <= n; i++)\n            fac[i] = fac[i - 1] * i % p;\n        return (fac[n] * modInverse(fac[r], p)\n                % p * modInverse(fac[n - r], p)\n                % p)\n            % p;\n    }long power(long x, long y, long p)\n    {\n        long res = 1;\n        x = x % p;\n \n        while (y > 0) {\n            if (y % 2 == 1)\n                res = (res * x) % p;\n            y = y >> 1; \n            x = (x * x) % p;\n        }\n \n        return res;\n    }long modInverse(long n, long p)\n    {\n        return power(n, p - 2, p);\n    }\n      public static class Pair implements Comparable<Pair> {\n\t\tint x;\n\t\tint y;\n \n\t\tpublic Pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n \n\t\tpublic String toString() {\n\t\t\treturn x + \",\" + y;\n\t\t}\n \n\t\tpublic boolean equals(Object o) {\n\t\t\tif (o instanceof Pair) {\n\t\t\t\tPair p = (Pair) o;\n\t\t\t\treturn p.x == x && p.y == y;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n \n\t\tpublic int hashCode() {\n\t\t\treturn new Double(x).hashCode() * 31 + new Double(y).hashCode();\n\t\t}\n \n\t\tpublic int compareTo(Pair other) {\n\t\t\tif (this.x == other.x) {\n\t\t\t\treturn Long.compare(this.y, other.y);\n\t\t\t}\n\t\t\treturn Long.compare(this.x, other.x);\n\t\t}\n      }\n\t \n} \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d, s = 0;\n  cin >> n >> m >> d;\n  int* a = new int[m];\n  bool f = true;\n  for (int i = 0; i < m; i++) {\n    cin >> a[i];\n    s += a[i];\n  }\n  if (s + (m + 1) * (d - 1) >= n) f = false;\n  if (f)\n    cout << \"NO\\n\";\n  else {\n    int o = n - s;\n    cout << \"YES\\n\";\n    for (int i = 0; i < n; i++) {\n      int c = 0;\n      for (int j = 0; j < o && j < d - 1; j++, c++) cout << \"0 \";\n      o -= c;\n      if (i < m)\n        for (int j = 0; j < a[i]; j++) cout << i + 1 << \" \";\n    }\n  }\n  delete[] a;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint N, M, D;\nusing namespace std;\ntemplate <class T>\nvoid readVectFrom1(vector<T>& v, int N) {\n  v.resize(N + 1);\n  v[0] = -1;\n  int iv = 1;\n  for (iv = 1; iv < N + 1; ++iv) {\n    cin >> v[iv];\n  }\n}\nusing ll = long long;\nusing long_boi = ll;\nvector<int> c;\nvoid sol() {\n  int earth = accumulate(c.begin(), c.end(), 1);\n  int water = N - earth;\n  if ((D == 1 && water != 0)) {\n    cout << \"NO\";\n    do {\n      cout << \"\\n\";\n    } while (0);\n    ;\n    return;\n  }\n  int min_jumps = ceil((double)(water) / (double)(D - 1));\n  if (min_jumps > M + 1) {\n    cout << \"NO\";\n    do {\n      cout << \"\\n\";\n    } while (0);\n    ;\n    return;\n  }\n  cout << \"YES\";\n  do {\n    cout << \"\\n\";\n  } while (0);\n  ;\n  int no_plat;\n  for (no_plat = 1; no_plat < M + 1; ++no_plat) {\n    int next_jump = min(D, water + 1);\n    int i = 0;\n    for (i = 0; i < next_jump - 1; ++i) {\n      cout << \"0 \";\n    }\n    for (i = 0; i < c[no_plat]; ++i) {\n      cout << no_plat << \" \";\n    }\n    water -= (next_jump - 1);\n  }\n  int w = 0;\n  for (w = 0; w < water; ++w) {\n    cout << \"0 \";\n  }\n}\nint main() {\n  do {\n    cin >> N >> M >> D;\n  } while (0);\n  ;\n  readVectFrom1(c, M);\n  sol();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nc=list(map(int,input().split()))\nans=[]\ns=sum(c)\nind=[]\nj=-1\nfor i in range(len(c)):\n    v=min(j+d,n-s)\n    ind.append(v)\n    j=v+c[i]-1\n    s-=c[i]\nans=[]\nif n-j>d:\n    print(\"NO\")\n    exit()\ni=0\nj=0\nv=1\nwhile i<n:\n    if j<len(ind) and i==ind[j]:\n        for l in range(c[j]):\n            ans.append(v)\n        v+=1\n        i+=c[j]\n        j+=1\n    else:\n        i+=1\n        ans.append(0)\nprint(\"YES\")\nprint(*ans)"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    Author : thekushalghosh\n    Team   : CodeDiggers\n\"\"\"\nimport sys,math\ninput = sys.stdin.readline\n\n############ ---- USER DEFINED INPUT FUNCTIONS ---- ############\ndef inp():\n    n = int(input())\n    return(n)\ndef inlt():\n    a = list(map(int,input().split()))\n    return(a)\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    a,b,c = map(int,input().split())\n    return(a,b,c)\n################################################################\n############ ---- THE ACTUAL CODE STARTS BELOW ---- ############\nt = 1\nfor tt in range(t):\n    n,m,qw = invr()\n    c = inlt()\n    n = n - sum(c)\n    qw = qw - 1\n    m = m + 1\n    if m * qw >= n:\n        print(\"YES\")\n        q = []\n        for v in range(m):\n            if v:\n                q = q + ([v] * c[v - 1])\n            q = q + ([0] * (n // m + (v < n % m)))\n        print(*q)\n    else:\n        print(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d;\nvector<int> plank, res;\nvector<long long> sm;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> n >> m >> d;\n  plank.resize(m + 1);\n  sm.resize(m + 1, 0);\n  res.resize(n + 1, 0);\n  for (int i = (int)(1); i <= (int)(m); ++i) {\n    cin >> plank[i];\n    sm[i] = sm[i - 1] + plank[i];\n  }\n  int curr = 0;\n  for (int i = (int)(1); i <= (int)(m); ++i) {\n    for (int j = d; j >= 1; --j) {\n      if (curr + j + sm[m] - sm[i - 1] - 1 <= n) {\n        curr += j + plank[i] - 1;\n        for (int pos = curr, c = 0; c < plank[i]; ++c, --pos) res[pos] = i;\n        break;\n      }\n    }\n  }\n  int c = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (c >= d) {\n      cout << \"NO\\n\";\n      return 0;\n    }\n    if (res[i] == 0)\n      ++c;\n    else\n      c = 0;\n  }\n  if (c >= d) {\n    cout << \"NO\\n\";\n    return 0;\n  }\n  cout << \"YES\\n\";\n  for (int i = 1; i <= n; ++i) cout << res[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> c(m);\n  for (int i = 0; i < m; ++i) {\n    cin >> c[i];\n  }\n  vector<int> ans(n + 2);\n  for (int i = m - 1, pos = n; i >= 0; --i) {\n    for (int len = 0; len < c[i]; ++len) {\n      ans[pos - len] = i + 1;\n    }\n    pos -= c[i];\n  }\n  int now = 0;\n  while (true) {\n    while (now + 1 < n + 1 && ans[now + 1] > 0) ++now;\n    if (now + d >= n + 1) break;\n    if (ans[now + d] == 0) {\n      int lpos = -1;\n      for (int i = now + d; i < n + 2; ++i) {\n        if (ans[i] != 0) {\n          lpos = i;\n          break;\n        }\n      }\n      if (lpos == -1) {\n        cout << \"NO\" << endl;\n        return 0;\n      }\n      int rpos = -1;\n      for (int i = lpos; i < n + 2; ++i) {\n        if (ans[i] == ans[lpos]) rpos = i;\n      }\n      while (ans[now + d] == 0) {\n        swap(ans[lpos - 1], ans[rpos]);\n        --lpos, --rpos;\n      }\n    }\n    now += d;\n  }\n  cout << \"YES\" << endl;\n  for (int i = 1; i <= n; ++i) {\n    cout << ans[i] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n, m, d, i, j, gap;\n  cin >> n >> m >> d;\n  int arr[m], gaps[m];\n  memset(gaps, 0, sizeof gaps);\n  for (i = 0; i < m; i++) cin >> arr[i];\n  gap = n - accumulate(arr, arr + m, 0);\n  while (gap > 0) {\n    for (i = 0; i < m; i++) {\n      if (gap > 0) {\n        gaps[i]++;\n        gap--;\n      } else\n        break;\n    }\n    gap--;\n  }\n  gaps[0]++;\n  if (m != 1) gaps[m - 1]++;\n  int mx = *max_element(gaps, gaps + m);\n  if (mx > d) {\n    cout << \"NO\\n\";\n    return 0;\n  }\n  gaps[0]--;\n  if (m != 1) gaps[m - 1]--;\n  int ans[n];\n  memset(ans, 0, sizeof ans);\n  j = 0;\n  for (i = 0; i < m; i++) {\n    while (gaps[i]--) {\n      ans[j++] = 0;\n    }\n    while (arr[i]--) {\n      ans[j++] = i + 1;\n    }\n  }\n  cout << \"YES\\n\";\n  for (i = 0; i < n; i++) cout << ans[i] << ' ';\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d, lt[1003], ans[1003], cnt;\nint main() {\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; i++) cin >> lt[i], cnt += lt[i];\n  if (cnt + (m + 1) * (d - 1) < n) {\n    cout << \"NO\";\n    return 0;\n  }\n  cnt = n - cnt;\n  int j = 0, dis = 1;\n  cout << \"YES\\n\";\n  for (int i = 0; i < n; i++) {\n    if (cnt > 0 && dis < d)\n      dis++, cnt--, cout << 0 << ' ';\n    else {\n      int to = i + lt[j];\n      for (i; i < to; i++) cout << j + 1 << ' ';\n      i--;\n      j++;\n      dis = 1;\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.PrintStream;\nimport java.util.*;\nimport java.lang.Math;\n\npublic class Main {\n    PrintStream so = System.out;\n    long mod = 1000_000_000+7;\n    String yes = \"YES\";\n    String no = \"NO\";\n\n    public static void main(String[] args) throws IOException {\n        Main sol = new Main();\n        int q = 1;// sol.parseInt();\n        for(int i = 0; i<q; i++){\n            sol.solve();\n        }\n    }\n\n    void solve() throws IOException {\n        int n = parseInt();\n        int m = parseInt();\n        int d = parseInt()-1;\n        int[] c = parseIntArray(m);\n        \n        // solve\n        int sum = 0;\n        for(int cc : c) sum+=cc;\n        if(sum+(m+1)*d<n){\n            so.println(no);\n            return;\n        }\n        int[] out = new int[n];\n        int pos = 0;\n        for(int i = 0; i<m; i++) {\n            int max = (m-i +1)*d+ sum;\n            int diff = max - (n-pos);\n            // so.println(diff);\n            if(diff < d){\n                for(int j = 0; j<d-diff; j++) pos++;\n            }\n            for(int j = 0; j<c[i]; j++) out[pos++] = i+1;\n            sum -= c[i];\n        }\n        \n        so.println(yes);\n        printArr(out);\n    }\n    \n    \n    \n    \n    /**\n     * Helpers\n     */\n    int parseInt() throws IOException  { return Integer.parseInt(getNext()); }\n    long parseLong() throws IOException  { return Long.parseLong(getNext()); }\n    double parseDouble() throws IOException  { return Double.parseDouble(getNext()); }\n    int[] parseIntArray(int len) throws IOException  { \n        int[] a = new int[len];\n        for(int i =0; i<len;i++) a[i] = parseInt();\n        return a;\n    }\n    long[] parseLongArray(int len) throws IOException { \n        long[] a = new long[len];\n        for(int i =0; i<len;i++) a[i] = parseInt();\n        return a;\n    }\n    \n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static StringTokenizer st;\n    \n    private String getNext() throws IOException {\n        if(st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(br.readLine());\n        }\n        return st.nextToken();\n    }\n\n    private void print(int[] ...a){ for(int[] b : a) System.out.println(Arrays.toString(b)); }\n    private void print(String s){ System.out.println(s); }\n    private void printArr(int[] a){\n        for(int i: a){\n            so.print(i+ \" \");\n        }\n        so.print('\\n');\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n//public final class code\nclass code\n{\n\tstatic void solve()throws IOException\n\t{\n\t\tint n=nextInt();\n\t\tint m=nextInt();\n\t\tint d=nextInt();\n\t\tint c[]=new int[m+1];\n\t\tint total=(m+1)*d;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tc[i]=nextInt();\n\t\t\ttotal+=c[i]-1;\n\t\t}\n\t\tif(total>=n+1)\n\t\t{\n\t\t\tout.println(\"YES\");\n\t\t\tint extra=total-n-1;\n\t\t\tint ans[]=new int[n+1];\n\t\t\tint start=0;\n\t\t\tfor(int i=1;i<=m;i++)\n\t\t\t{\n\t\t\t\tint curr=Math.max(d-extra,1);\n\t\t\t\textra-=d-curr;\n\t\t\t\tstart+=curr;\n\t\t\t\twhile(c[i]-->0)\n\t\t\t\t\tans[start++]=i;\n\t\t\t\tstart--;\n\n\t\t\t}\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\tout.print(ans[i]+\" \");\n\n\t\t}\n\t\telse\n\t\t\tout.println(\"NO\");\n\t\t\n\t}\n\n\n\n\n\n\n\t\n\t///////////////////////////////////////////////////////////\n\tstatic final long mod=(long)(1e9+7);\n\tstatic final int inf=(int)(1e9);\n\tstatic class Pair\n\t{\n\t\tlong first,second;\n\t\tPair(int a,int b)\n\t\t{\n\t\t\tfirst=a;\n\t\t\tsecond=b;\n\t\t}\n\t\t// public int compareTo(Pair p)\n\t\t// {\n\t\t// \treturn this.second-p.second;\n\t\t// }\n\t}\n\tstatic BufferedReader br;\n\tstatic StringTokenizer st;\n\tstatic PrintWriter out;\n\tstatic String nextToken()throws IOException\n\t{\n\t\twhile(st==null || !st.hasMoreTokens())\n\t\t\tst=new StringTokenizer(br.readLine());\n\t\treturn st.nextToken();\n\t}\n\tstatic String nextLine()throws IOException\n\t{\n\t\treturn br.readLine();\n\t}\n\tstatic int nextInt()throws IOException\n\t{\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\tstatic long nextLong()throws IOException\n\t{\n\t\treturn Long.parseLong(nextToken());\n\t}\n\tstatic double nextDouble()throws IOException\n\t{\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\tpublic static void main(String args[])throws IOException\n\t{\n\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t\tout=new PrintWriter(new BufferedOutputStream(System.out));\n\t\tsolve();\n\t\tout.close();\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nn,m,d=map(int,sys.stdin.readline().split())\nc=list(map(int,sys.stdin.readline().split()))\nif math.ceil((n-sum(c))/(m+1))<d:\n    x=(n-sum(c))//(m+1)\n    y=(n-sum(c))%(m+1)\n    ans=[0 for _ in range(n)]\n    ind=1\n    i=0\n    if y==0:\n        dis=x\n    else:\n        dis=x+1\n        y-=1\n    i=dis\n    while i<n:\n        j=0\n        while j<c[ind-1] and i<n:\n            ans[i]=ind\n            j+=1\n            i+=1\n        ind+=1\n        if y==0:\n            i+=x\n        else:\n            i+=(x+1)\n            y-=1\n    print('YES')\n    print(' '.join(str(x) for x in ans))\nelse:\n    print('NO')\n        \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class R598C {\n\n\tpublic static void main(String[] args) {\n\t\tJS scan = new JS();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = scan.nextInt();\n\t\tint m = scan.nextInt();\n\t\tint d = scan.nextInt();\n\t\tint[] arr = new int[m];\n\t\tfor(int i = 0; i < m; i++) arr[i] = scan.nextInt();\n\t\tint[] ans = new int[n+1];\n\t\tint curr = d;\n\t\tboolean[] over = new boolean[m];\n\t\tfor(int i = 0; i < m; i++) {\n//\t\t\tSystem.out.println(curr);\n\t\t\tint last = curr;\n\t\t\tfor(int j = 0; j < arr[i]; j++) {\n\t\t\t\tif(curr+j > n) {\n\t\t\t\t\tover[i] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tans[curr+j] = i+1;\n\t\t\t\tlast = curr+j;\n\t\t\t}\n\t\t\tcurr = last+d;\n\t\t}\n//\t\tSystem.out.println(curr);\n\t\tif(curr <= n) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tout.println(\"YES\");\n\t\tcurr = n;\n\t\tfor(int o = m-1; o >= 0; o--) {\n\t\t\tif(!over[o]) break;\n\t\t\tint last = 0;\n\t\t\tfor(int j = 0; j < arr[o]; j++) {\n\t\t\t\tif(ans[curr-j] > 0)\n\t\t\t\t\tover[ans[curr-j]-1] = true;\n\t\t\t\tans[curr-j] = o+1;\n\t\t\t\tlast = curr-j;\n\t\t\t}\n\t\t\tcurr = last-1;\n\t\t}\n\t\tfor(int i = 1; i <= n; i++) { out.print(ans[i]+\" \");\n\t\t\n\t\t}\n\t\tout.println();\n\t\tout.flush();\n\t}\n\n\tstatic class JS{\n\t\tpublic int BS = 1<<16;\n\t\tpublic char NC = (char)0;\n\t\tbyte[] buf = new byte[BS];\n\t\tint bId = 0, size = 0;\n\t\tchar c = NC;\n\t\tdouble num = 1;\n\t\tBufferedInputStream in;\n\n\t\tpublic JS() {\n\t\t\tin = new BufferedInputStream(System.in, BS);\n\t\t}\n\n\t\tpublic JS(String s) throws FileNotFoundException {\n\t\t\tin = new BufferedInputStream(new FileInputStream(new File(s)), BS);\n\t\t}\n\n\t\tpublic char nextChar(){\n\t\t\twhile(bId==size) {\n\t\t\t\ttry {\n\t\t\t\t\tsize = in.read(buf);\n\t\t\t\t}catch(Exception e) {\n\t\t\t\t\treturn NC;\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif(size==-1)return NC;\n\t\t\t\tbId=0;\n\t\t\t}\n\t\t\treturn (char)buf[bId++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn (int)nextLong();\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tnum=1;\n\t\t\tboolean neg = false;\n\t\t\tif(c==NC)c=nextChar();\n\t\t\tfor(;(c<'0' || c>'9'); c = nextChar()) {\n\t\t\t\tif(c=='-')neg=true;\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tfor(; c>='0' && c <='9'; c=nextChar()) {\n\t\t\t\tres = (res<<3)+(res<<1)+c-'0';\n\t\t\t\tnum*=10;\n\t\t\t}\n\t\t\treturn neg?-res:res;\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\tdouble cur = nextLong();\n\t\t\treturn c!='.' ? cur:cur+nextLong()/num;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\twhile(c<=32)c=nextChar();\n\t\t\twhile(c>32) {\n\t\t\t\tres.append(c);\n\t\t\t\tc=nextChar();\n\t\t\t}\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\twhile(c<=32)c=nextChar();\n\t\t\twhile(c!='\\n') {\n\t\t\t\tres.append(c);\n\t\t\t\tc=nextChar();\n\t\t\t}\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tif(c>32)return true;\n\t\t\twhile(true) {\n\t\t\t\tc=nextChar();\n\t\t\t\tif(c==NC)return false;\n\t\t\t\telse if(c>32)return true;\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "\n/**\n * Date: 04 Nov, 2019\n * Link: https://codeforces.com/contest/1256/problem/C\n * \n * @author Prasad Chaudhari\n * @linkedIn: https://www.linkedin.com/in/prasad-chaudhari-841655a6/\n * @git: https://github.com/Prasad-Chaudhari\n */\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.Arrays;\nimport java.util.LinkedList;\n\npublic class C_1256 {\n\n    public static void main(String[] args) throws IOException {\n        // TODO code application logic here\n        FastIO in = new FastIO();\n        int n = in.ni();\n        int m = in.ni();\n        int d = in.ni();\n        int c[] = in.gia(m);\n        int sum = 0;\n        int seg = m + 1;\n        LinkedList<Integer> l = new LinkedList<>();\n        for (int i = 0; i < m; i++) {\n            int temp = c[i];\n            sum += c[i];\n            while (temp-- > 0) {\n                l.add(i + 1);\n            }\n        }\n        if (sum + seg * (d - 1) < n) {\n            System.out.println(\"NO\");\n            return;\n        }\n        int insert = 0;\n        int index = 0;\n        while (l.size() < n) {\n            int count = d - 1;\n            while (l.size() < n && count > 0) {\n                if (insert == l.size()) {\n                    l.add(0);\n                } else {\n                    l.add(insert++, 0);\n                }\n                count--;\n            }\n            if (index < m)\n                insert += c[index++];\n            // for (int i : l) {\n            //     System.out.print(i + \" \");\n            // }\n            // System.out.println();\n        }\n        System.out.println(\"YES\");\n        for (int i : l) {\n            System.out.print(i + \" \");\n        }\n        in.bw.flush();\n    }\n\n    static class Data implements Comparable<Data> {\n\n        int a, b;\n\n        public Data(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(Data o) {\n            if (a == o.a) {\n                return Integer.compare(b, o.b);\n            }\n            return Integer.compare(a, o.a);\n        }\n\n        public static void sort(int a[]) {\n            Data d[] = new Data[a.length];\n            for (int i = 0; i < a.length; i++) {\n                d[i] = new Data(a[i], 0);\n            }\n            Arrays.sort(d);\n            for (int i = 0; i < a.length; i++) {\n                a[i] = d[i].a;\n            }\n        }\n    }\n\n    static class FastIO {\n\n        private final BufferedReader br;\n        private final BufferedWriter bw;\n        private String s[];\n        private int index;\n\n        public FastIO() throws IOException {\n            br = new BufferedReader(new InputStreamReader(System.in));\n            bw = new BufferedWriter(new OutputStreamWriter(System.out, \"UTF-8\"));\n            s = br.readLine().split(\" \");\n            index = 0;\n        }\n\n        public int ni() throws IOException {\n            return Integer.parseInt(nextToken());\n        }\n\n        public double nd() throws IOException {\n            return Double.parseDouble(nextToken());\n        }\n\n        public long nl() throws IOException {\n            return Long.parseLong(nextToken());\n        }\n\n        public String next() throws IOException {\n            return nextToken();\n        }\n\n        public String nli() throws IOException {\n            try {\n                return br.readLine();\n            } catch (IOException ex) {\n\n            }\n            return null;\n        }\n\n        public int[] gia(int n) throws IOException {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public int[] gia(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            int a[] = new int[n];\n            for (int i = start; i < end; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public double[] gda(int n) throws IOException {\n            double a[] = new double[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nd();\n            }\n            return a;\n        }\n\n        public double[] gda(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            double a[] = new double[n];\n            for (int i = start; i < end; i++) {\n                a[i] = nd();\n            }\n            return a;\n        }\n\n        public long[] gla(int n) throws IOException {\n            long a[] = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nl();\n            }\n            return a;\n        }\n\n        public long[] gla(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            long a[] = new long[n];\n            for (int i = start; i < end; i++) {\n                a[i] = nl();\n            }\n            return a;\n        }\n\n        public int[][][] gwtree(int n) throws IOException {\n            int m = n - 1;\n            int adja[][] = new int[n + 1][];\n            int weight[][] = new int[n + 1][];\n            int from[] = new int[m];\n            int to[] = new int[m];\n            int count[] = new int[n + 1];\n            int cost[] = new int[n + 1];\n            for (int i = 0; i < m; i++) {\n                from[i] = i + 1;\n                to[i] = ni();\n                cost[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n                weight[i] = new int[count[i]];\n            }\n            for (int i = 0; i < m; i++) {\n                adja[from[i]][count[from[i]] - 1] = to[i];\n                adja[to[i]][count[to[i]] - 1] = from[i];\n                weight[from[i]][count[from[i]] - 1] = cost[i];\n                weight[to[i]][count[to[i]] - 1] = cost[i];\n                count[from[i]]--;\n                count[to[i]]--;\n            }\n            return new int[][][] { adja, weight };\n        }\n\n        public int[][][] gwg(int n, int m) throws IOException {\n            int adja[][] = new int[n + 1][];\n            int weight[][] = new int[n + 1][];\n            int from[] = new int[m];\n            int to[] = new int[m];\n            int count[] = new int[n + 1];\n            int cost[] = new int[n + 1];\n            for (int i = 0; i < m; i++) {\n                from[i] = ni();\n                to[i] = ni();\n                cost[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n                weight[i] = new int[count[i]];\n            }\n            for (int i = 0; i < m; i++) {\n                adja[from[i]][count[from[i]] - 1] = to[i];\n                adja[to[i]][count[to[i]] - 1] = from[i];\n                weight[from[i]][count[from[i]] - 1] = cost[i];\n                weight[to[i]][count[to[i]] - 1] = cost[i];\n                count[from[i]]--;\n                count[to[i]]--;\n            }\n            return new int[][][] { adja, weight };\n        }\n\n        public int[][] gtree(int n) throws IOException {\n            int adja[][] = new int[n + 1][];\n            int from[] = new int[n - 1];\n            int to[] = new int[n - 1];\n            int count[] = new int[n + 1];\n            for (int i = 0; i < n - 1; i++) {\n                from[i] = i + 1;\n                to[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n            }\n            for (int i = 0; i < n - 1; i++) {\n                adja[from[i]][--count[from[i]]] = to[i];\n                adja[to[i]][--count[to[i]]] = from[i];\n            }\n            return adja;\n        }\n\n        public int[][] gg(int n, int m) throws IOException {\n            int adja[][] = new int[n + 1][];\n            int from[] = new int[m];\n            int to[] = new int[m];\n            int count[] = new int[n + 1];\n            for (int i = 0; i < m; i++) {\n                from[i] = ni();\n                to[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n            }\n            for (int i = 0; i < m; i++) {\n                adja[from[i]][--count[from[i]]] = to[i];\n                adja[to[i]][--count[to[i]]] = from[i];\n            }\n            return adja;\n        }\n\n        public void print(String s) throws IOException {\n            bw.write(s);\n        }\n\n        public void println(String s) throws IOException {\n            bw.write(s);\n            bw.newLine();\n        }\n\n        public void print(int s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(int s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        public void print(long s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(long s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        public void print(double s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(double s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        private String nextToken() throws IndexOutOfBoundsException, IOException {\n            if (index == s.length) {\n                s = br.readLine().split(\" \");\n                index = 0;\n            }\n            return s[index++];\n        }\n\n        private void validate(int n, int start, int end) {\n            if (start < 0 || end >= n) {\n                throw new IllegalArgumentException();\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nif __name__ == '__main__':\n    A = stdin.readline().strip().split()\n    n = int(A[0])   # the width of the river\n    m = int(A[1])   # the number of platforms\n    d = int(A[2])   # the maximum distance of your jump\n\n    c = list(map(int, stdin.readline().strip().split()))\n\n    gap = n - sum(c)\n    jumps = m + 1\n\n    if jumps*(d - 1) >= gap >= 0:\n        res = []\n\n        interval = int(gap/jumps)\n        remainder = gap % jumps\n\n        i = 0\n        wi = 0\n\n        while i < n:\n\n            cur = interval\n            if remainder > 0:\n                cur += 1\n                remainder -= 1\n\n            for j in range(cur):\n                res.append(0)\n                i += 1\n\n            if wi == len(c):\n                break;\n\n            for j in range(c[wi]):\n                res.append(wi + 1)\n                i += 1\n\n            wi += 1\n\n        print('YES')\n        print(' '.join(map(str, res)))\n    else:\n        print('NO')\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main {\n    public static int log(int x){\n        int c =0;\n        while(x>0){\n            x/=2;\n            c++;\n        }\n        c--;\n        return c;\n    }\n    \n    static int pow(int a, int b){\n        int l =1;\n        for(int i=0; i<b; i++){\n            l*=a;\n        }\n        return l;\n    }\n     static int gcd(int a, int b) \n    { \n      if (b == 0) \n        return a; \n      return gcd(b, a % b);  \n    } \n     static int lcm(int a, int b) \n    { \n        return (a*b)/gcd(a, b); \n    }\n    static int claculate(int n) \n    { \n  \n        // calculate 2^(n+1) \n        int sum = (1 << (n + 1)); \n        return sum - 1; \n    }\n\tpublic static void main(String[] args) throws IOException {\n\tBufferedReader\t br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\t\tPrintWriter out = new PrintWriter(System.out);\n     \t// String s = br.readLine();\n        // char[] arr=s.toCharArray();\n        // ArrayList<Integer> arrl = new ArrayList<Integer>(); \n        // TreeSet<Integer> ts1 = new TreeSet<Integer>(); \n        // HashSet<Integer> h = new HashSet<Integer>(); \n        // HashMap<Integer, Integer> map= new HashMap<>(); \n        // PriorityQueue<String> pQueue = new PriorityQueue<String>(); \n        // LinkedList<String> object = new LinkedList<String>(); \n        // StringBuilder str = new StringBuilder(); \n \t    StringTokenizer   st = new StringTokenizer(br.readLine());\n \t    int l = Integer.parseInt(st.nextToken());\n \t    int n = Integer.parseInt(st.nextToken());\n \t    int k = Integer.parseInt(st.nextToken());\n        int [] arr = new int[n];\n        st = new StringTokenizer(br.readLine());\n        int sum=0;\n        for(int i=0; i<n; i++){\n            arr[i] = Integer.parseInt(st.nextToken());\n            sum+=arr[i];\n        }\n        int j=0;\n        int i =0;\n        int ans[] = new int[l]; \n        loop : while(j<n+1){\n            if(j==n){\n                 int c =0;\n            while(++c<k){\n              \n                if(i<l)\n              ans[i] =0;\n              else break;\n              i++;\n            }j++;\n            }else{\n            int c =0;\n            while(++c<k){\n                 while(i+sum==l){\n            \tint m=0;\n        \t    while(m<arr[j]){\n\n        \t      if(i<l)\n        \t        ans[i] = j+1;\n        \t        else break;\n        \t         i++;\n        \t         m++;\n        \t}sum-=arr[j];\n        \tj++;\n        \tif(j==n) continue loop;\n                }\n                if(i<l)\n              ans[i] =0;\n              else break;\n              i++;\n                         \n            }\n        \tint m=0;\n        \twhile(m<arr[j]){\n        \t   if(i<l)\n        \t  ans[i] = j+1;\n        \t  else break;\n        \t  i++;\n        \t  m++;\n        \t   //out.println(i+\" \"+ j);\n\n        \t}sum-=arr[j];\n        \tj++;\n        }\n            // out.println(i+\" \"+ j);\n        }\n        // out.println(i);\n        if(i>=l){\n            out.println(\"YES\");\n    \t    for(int z=0; z<l; z++){\n    \t        out.print(ans[z]+\" \");\n    \t        }\n        }else{\n            out.println(\"NO\");\n        }\n\t\tout.flush();\n\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 5;\nlong long mod = 1000000007;\nvector<long long> grev[200001];\nlong long a[200005];\nlong long b[200005];\nlong long n, m, d;\nvoid solve() {\n  cin >> n >> m >> d;\n  for (long long i = int(0); i < int(m); i++) cin >> a[i];\n  vector<long long> ans(n + 2);\n  long long pos = n;\n  for (long long i = int(m - 1); i >= int(0); i--) {\n    for (long long len = int(0); len < int(a[i]); len++) ans[pos - len] = i + 1;\n    pos -= a[i];\n  }\n  long long now = 0;\n  while (true) {\n    while (now + 1 < n + 1 && ans[now + 1] > 0) ++now;\n    if (now + d >= n + 1) break;\n    if (ans[now + d] == 0) {\n      long long lpos = -1;\n      for (long long i = now + d; i < n + 2; i++) {\n        if (ans[i] != 0) {\n          lpos = i;\n          break;\n        }\n      }\n      if (lpos == -1) {\n        cout << \"NO\"\n             << \"\\n\";\n        return;\n      }\n      long long rpos = -1;\n      for (long long i = lpos; i < n + 2; ++i) {\n        if (ans[i] == ans[lpos]) rpos = i;\n      }\n      while (ans[now + d] == 0) {\n        swap(ans[lpos - 1], ans[rpos]);\n        --lpos, --rpos;\n      }\n    }\n    now += d;\n  }\n  cout << \"YES\"\n       << \"\\n\";\n  for (int i = 1; i <= n; ++i) {\n    cout << ans[i] << \" \";\n  }\n  cout << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t;\n  t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 5;\nconst int mod = 1e9 + 7;\nlong long a[N];\nlong long sum[N];\nint vis[N];\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0);\n  long long n, m, d;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) cin >> a[i], sum[i] = sum[i - 1] + a[i];\n  long long now = 0;\n  for (int i = 1; i <= m; i++) {\n    int tmp = min(d, n - (sum[m] - sum[i - 1] + now) + 1);\n    now += tmp + a[i] - 1;\n    for (int j = now - a[i] + 1; j <= now; j++) {\n      vis[j] = i;\n    }\n  }\n  if (now + d < n + 1 || now - a[m] + 1 > n) {\n    cout << \"NO\" << '\\n';\n  } else {\n    cout << \"YES\" << '\\n';\n    for (int i = 1; i <= n; i++) {\n      cout << vis[i] << \" \\n\"[i == n];\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nn,m,d=map(int,input().split())\narr=map(int,input().split())\narr=list(arr)\nif (n-sum(arr))/(m+1)>d-1 or n<sum(arr):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    ans=[]\n    for i in range(m):\n        ans+=[i+1]*arr[i]\n    zeroes=(n-sum(arr))\n    e=zeroes/(m+1)\n    f=0\n    # print(e)\n    if e%1!=0:\n        f=1//(1-e%1)\n    e=math.ceil(e)\n    flag=0\n    if e>d:\n        flag=1\n        # e-=1\n    # f=e%1\n    # c=1//f\n    ans=[]\n    # print(e)\n    i=0\n    k=0\n    # print(f)\n    # print(e,zeroes)\n    while  len(ans)<n:\n\n        if i==m-1:\n            if zeroes > 0:\n                ans += [0] * math.ceil(int(zeroes)/2)\n            ans+=[i+1]*arr[i]\n            # if zeroes > 0:\n            ans += [0] * math.floor(int(zeroes)/2)\n            zeroes=0\n        else:\n            if zeroes>0:\n\n                if k==f-1:\n\n                    ans+=[0]*(math.ceil(e)-1)\n                    zeroes -=(math.ceil(e)-1)\n                    k = 0\n                else:\n                    k += 1\n                    ans += [0] * (math.ceil(e))\n                    zeroes -= (math.ceil(e))\n\n\n            ans+=[i+1]*arr[i]\n            i+=1\n\n            # print(zeroes)\n    ans=map(str,ans)\n    ans=list(ans)\n    # print(len(ans))\n    print(\" \".join(ans))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Main {\n    static PrintWriter pw;\n    static int[] visit;\n    static int max;\n    static int[] arr;\n    static void dfs(int i, int c) {\n       visit[i-1]=c;\n       max=Math.max(c, max);\n       int lim=arr.length/i;\n       for(int j=2; j<=lim; j++){\n           if(visit[i*j-1]<c+1 && arr[i*j-1]>arr[i-1]){\n               dfs(i*j, c+1);\n           }\n       }\n    }\n    public static long gcf(long x, long y) {\n        while(x%y!=0 && y%x!=0) {\n            if(x>y)\n                x%=y;\n            else\n                y%=x;\n        }\n        return x>y? y:x;\n    }\n    static int ceildiv(int x, int y){\n        return x%y==0? x/y: x/y+1;\n    }\n    static int count1s(int x){\n        int ans=0;\n        while(x>0){\n            ans+=(x&1);\n            x>>=1;\n        }\n        return ans;\n    }\n    static void print(int n){\n        while(n-->0)\n            pw.print(0+\" \");\n    }\n    public static void main(String[] args) throws Exception {\n        Scanner sc= new Scanner(System.in);\n        pw = new PrintWriter(System.out);\n        int n=sc.nextInt(),m=sc.nextInt(),k=sc.nextInt();\n        int sum=0;\n        int[] arr=new int[m];\n        for(int i=0; i<m; i++){\n            arr[i]=sc.nextInt();\n            sum+=arr[i];\n        }\n        if(ceildiv(n-sum, m+1)>k-1){\n            pw.println(\"NO\");\n        }else{\n            pw.println(\"YES\");\n            int a=(n-sum)/(m+1);int b=a+1;\n            int x=(n-sum)%(m+1),y=m+1-x;\n            int j=0;\n            int i=1;\n            for(; i<=x; i++){\n                print(b);\n                while(arr[j]-->0){\n                    pw.print(i+\" \");\n                }\n                j++;\n            }\n            for(; i-x<=y-1; i++){\n                print(a);\n                while(arr[j]-->0){\n                    pw.print(i+\" \");\n                }\n                j++;\n            }\n            print(a);\n        }\n        pw.close();\n    }\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public Scanner(FileReader r) {\n            br = new BufferedReader(r);\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextArr(int n) throws IOException {\n            int[] arr = new int[n];\n            for (int i = 0; i < arr.length; i++)\n                arr[i] = nextInt();\n            return arr;\n        }\n        public Integer[] nextsort(int n) throws IOException{\n            Integer[] arr=new Integer[n];\n            for(int i=0; i<n; i++)\n                arr[i]=nextInt();\n            return arr;\n        }\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n    }\n    static class Pair implements Comparable<Pair>{\n        int x;\n        int y;\n        public Pair(int x, int y) {\n            this.x=x;\n            this.y=y;\n        }\n        public int hashCode() {\n            return (this.x+\"\"+this.y).hashCode();\n        }\n        public int compareTo(Pair other) {\n            if(this.x!=other.x)\n                return this.x-other.x;\n            else {\n                return this.y-other.y;\n            }\n        }\n        public boolean equals(Object obj) {\n            if (obj == null) {\n                return false;\n            }\n            if (this.getClass() != obj.getClass()) {\n                return false;\n            }\n            Pair p = (Pair) obj;\n            return this.x == p.x && this.y == p.y;\n        }\n    }\n    static class tuple implements Comparable<tuple>{\n        int x;int y;int z;\n        public tuple(int x, int y, int z){\n            this.x=x;\n            this.y=y;\n            this.z=z;\n        }\n        public int compareTo(tuple other) {\n            if(this.x!=other.x)\n                return this.x-other.x;\n            else {\n                if(this.y!=other.y)\n                    return this.y-other.y;\n                else\n                    return this.z-other.z;\n            }\n        }\n        public boolean equal(tuple t){\n            return this.x==t.x && this.y==t.y;\n        }\n    }\n    static class visit {\n        int x;\n        boolean y;\n        public visit(int x, boolean y){\n            this.x=x;\n            this.y=y;\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \npublic class Main{\n    \n    public static void main(String[] args) throws IOException {\n        Reader.init();\n        int n=Reader.nextInt();\n        int m=Reader.nextInt();\n        int d=Reader.nextInt();\n        int c[]=new int[m];\n        read(c, m);\n        \n        int river[]=new int[n];\n        \n        int x=m-1;\n        for(int i=n-1;i>=0 && x>=0;){\n            int count=c[x];\n            while(count>0){\n                //println(i+\" \"+count);\n                river[i--]=x+1;\n                count--;\n            }\n            x--;\n        }\n        // display(river);\n        \n        for(int i=d-1;i<n;i+=d){\n            if(river[i]==0){\n                findNextPlatform(river, c, i, n);\n                if(river[i]==0){\n                    println(\"NO\");\n                    return;\n                }\n                else{\n                    i+=c[river[i]-1]-1;\n                }\n            }\n        }\n        \n        println(\"YES\");\n        for(int i=0;i<n;i++){\n            print(river[i]+\" \");\n        }\n    }\n    \n    public static void findNextPlatform(int river[], int c[], int i, int n){\n        for(int j=i+1;j<n;j++){\n            if(river[j]>0){\n                int count=c[river[j]-1];\n                while(count>0){\n                    river[i]=river[j];\n                    river[j]=0;\n                    j++;\n                    i++;\n                    count--;\n                }\n                break;\n            }\n        }\n    }\n    \n    static int mod=1000000007;\n    public static void read(int arr[], int N) throws IOException{ for(int i=0;i<N;i++){ arr[i]=Reader.nextInt(); } }\n    public static void read(long arr[], int N) throws IOException{ for(int i=0;i<N;i++){ arr[i]=Reader.nextLong(); } }\n    public static void read(String arr[], int N) throws IOException{ for(int i=0;i<N;i++){ arr[i]=Reader.next(); } }\n    public static void print(Object O){ System.out.print(O); }\n    public static void println(Object O){ System.out.println(O); }\n    public static void display(int arr[]){ System.out.println(Arrays.toString(arr)); }\n    public static void display(int arr[][], int N){ for(int i=0;i<N;i++){ System.out.println(Arrays.toString(arr[i])); } }\n}\n\nclass Reader {\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n \n    static void init() {\n        reader=new BufferedReader(new InputStreamReader(System.in));\n        tokenizer=new StringTokenizer(\"\");\n    }\n \n    static String next() throws IOException {\n        while (!tokenizer.hasMoreTokens() ) {\n            tokenizer=new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n \n    static int nextInt() throws IOException { return Integer.parseInt(next()); }\n    static double nextDouble() throws IOException { return Double.parseDouble(next()); }\n    static long nextLong() throws IOException { return Long.parseLong(next()); }\n    static String nextLine() throws IOException { return reader.readLine(); }\n}"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int, input().split())\nT = list(map(int, input().split()))\nR = [0 for _ in range(n+2)]\np = 0\ncont = 1\nwhile cont<m+1:\n    p+=d\n    ret = 0\n    for i in range(p, p+T[cont-1]):\n        if i-ret > n+1: ret += i-n-1\n        if i-ret > n:\n            # print('paso')\n            R.remove(0)\n            ret+=1\n            R.append(0)\n        # print(i)\n        R[i-ret-1] = cont\n        # print(R)\n    p+=T[cont-1]-1\n    p -= ret\n    cont+=1\np+=d\n# print(R)\nif p < n+1:\n    print('No')\nelse:\n    print('Yes')\n    for i in range(n):\n        print(R[i], end=' ')\n    print()\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d, len = 0;\n  cin >> n >> m >> d;\n  vector<int> c(m), ans(n, 0);\n  for (int i = 0; i < m; i++) cin >> c[i], len += c[i];\n  if (n > (d - 1) * (m + 1) + len)\n    cout << \"NO\\n\";\n  else {\n    cout << \"YES\\n\";\n    int spare = (d - 1) * (m + 1) + len - n;\n    if (d == 1) {\n      for (int j = 0; j < m; j++)\n        for (int k = 0; k < c[j]; k++) cout << j + 1 << ' ';\n      cout << '\\n';\n      return 0;\n    }\n    int jumps = ((d - 1) * (m + 1) - spare) / (d - 1);\n    int mod = ((d - 1) * (m + 1) - spare) % (d - 1);\n    int k = 0, j = 0;\n    while (jumps--) {\n      for (int i = 0; i < d - 1; i++) ans[k++] = 0;\n      if (j < m) {\n        for (int i = 0; i < c[j]; i++) ans[k++] = j + 1;\n        j++;\n      }\n    }\n    for (int i = 0; i < mod; i++) ans[k++] = 0;\n    while (j < m) {\n      for (int i = 0; i < c[j]; i++) ans[k++] = j + 1;\n      j++;\n    }\n    for (int i = 0; i < n; i++) cout << ans[i] << ' ';\n    cout << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Feb 22 19:56:29 2020\n\n@author: dennis\n\"\"\"\n\n# import atexit\n# import io\n# import sys\n\n# _INPUT_LINES = sys.stdin.read().splitlines()\n# input = iter(_INPUT_LINES).__next__\n# _OUTPUT_BUFFER = io.StringIO()\n# sys.stdout = _OUTPUT_BUFFER\n\n# @atexit.register\n# def write():\n#     sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\nriver_width, n_platforms, jump_length = [int(x) for x in input().split()]\nplatforms = [int(x) for x in input().split()]\nriver = [0]*river_width\nposition = -1\nremaining = platforms.copy()\nfor i, platform in enumerate(platforms):\n    np = position+jump_length\n    while sum(remaining)+np > river_width:\n        np -= 1\n    for x in range(np, np+platform):\n        river[x] = i+1\n    position = x\n    remaining = remaining[1:]\n\nfound = False\nfor x in range(1, jump_length+1):\n    if river[-x] != 0:\n        print('YES')\n        print(*river)\n        found = True\n        break\nif not found:\n    print('NO')\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nn,m,d=map(int,input().split(\" \"))\ny=list(map(int,input().split()))\ns=sum(y)\nif s+(m+1)*(d-1)>=n:\n    arr=[0]*(n+1)\n    arr[0]=-1\n    current=1\n    k=1\n    i=0\n    while i<m:\n        j=0\n        while j<y[i]:\n            arr[k]=current\n            k+=1\n            j+=1\n        current+=1\n        i+=1\n\n    \n    next1=n+1\n    i=k-1\n    while i>=0:\n        if next1-i>d:\n            previous=arr[i]\n            arr[i]=0\n            arr[next1-d]=previous\n            next1=next1-d\n          \n            if arr[i-1]==previous:\n                while arr[i-1]==previous:\n                    previous=arr[i-1]\n                    arr[i-1]=0\n                    arr[next1-1]=previous\n                    next1=next1-1\n                    i-=1\n             \n                \n            i-=1\n        else:\n            break\n    \n        \n    \n    print(\"YES\")\n    for i in range(1,n+1):\n        print(arr[i],end=\" \")\n    \n    \nelse:\n    print(\"NO\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint fx[] = {0, 0, 1, -1, -1, 1, -1, 1};\nint fy[] = {1, -1, 0, 0, -1, 1, 1, -1};\nint ans[1005];\nint arr[1005];\nint main() {\n  int n, m, d;\n  scanf(\"%d%*c\", &n), scanf(\"%d%*c\", &m), scanf(\"%d%*c\", &d);\n  int x = n;\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d%*c\", &arr[i]);\n    arr[i] = arr[i] + arr[i - 1];\n  }\n  while (1) {\n    if (m == 0) break;\n    if (n - arr[m] >= d) {\n      n = n - d + 1;\n    } else {\n      n = n - (n - arr[m]);\n    }\n    for (int i = arr[m] - arr[m - 1]; i > 0; i--) {\n      ans[n--] = m;\n    }\n    m--;\n  }\n  if (n >= d) {\n    printf(\"NO\\n\");\n    return 0;\n  }\n  printf(\"YES\\n\");\n  for (int i = 1; i <= x; i++) printf(\"%d \", ans[i]);\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\n\nc = list(map(int, input().split()))\nsc = [0] * m\nsc[-1] = c[-1]\nfor i in range(m - 2, -1, -1):\n    sc[i] = sc[i + 1] + c[i]\n\n# start = []\nriv = n\np = 0\nans = \"\"\nend = 0\nl = 0\nfor i in range(m):\n    # r = i // 2\n\n    r = c[i]\n    gap = n - sc[i] - p\n\n    if gap < d:\n        ans += \"0 \" * (gap)\n        l += gap\n        p = p + gap\n        # st = p\n    else:\n        ans += \"0 \" * (d - 1)\n        l += d - 1\n        p = p + d - 1\n    st = p\n    ans += (str(i + 1) + \" \") * c[i]\n    l += c[i]\n    p = st + c[i]\n    # n -= c[i]\n    # n -= end\n    # print(n)\n    # start.append([st, end - 2])\n\nans += \"0 \" * (n - l)\n\nif n - p < d:\n    print(\"YES\")\n    # i = 0\n    print(ans)\n\nelse:\n    print(\"NO\")\n    # print(ans)\n# print(\"p\", p)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e3 + 5;\nint a[N];\nvector<int> ans;\nint main() {\n  int n, m, d, k = 0;\n  int sum = 0, l = 1;\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; i++) cin >> a[i], sum += a[i];\n  int cnt = n - sum;\n  if (cnt <= (m + 1) * (d - 1)) {\n    cout << \"YES\" << endl;\n    for (int i = 1; i <= cnt; i++) {\n      ans.push_back(0);\n      l++;\n      if (l == d) {\n        for (int j = 0; j < a[k]; j++) ans.push_back(k + 1);\n        k++;\n        l = 1;\n      }\n    }\n    for (int i = k; i < m; i++) {\n      for (int j = 0; j < a[i]; j++) ans.push_back(i + 1);\n    }\n    for (int i = 0; i < n; i++) {\n      if (i != 0) cout << \" \";\n      cout << ans[i];\n    }\n    cout << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int,input().split())\nc=list(map(int,input().split()))\ns=sum(c)\np=[]\nj=0\nfor i in range(m):\n\tp.append(j)\n\tj+=c[i]\nk=n+1\nx=s\ni=m-1\nwhile k-x>d and x>0 and i>-1:\n\tp[i]=k-d-c[i]\n\tx-=c[i]\n\tk=p[i]+1\n\ti-=1\nif k>d and i==-1:\n\tprint(\"NO\")\nelse:\n\tans=[0]*n\n\tj=1\n\tfor i in range(m):\n\t\tans[p[i]:p[i]+c[i]]=[j]*c[i]\n\t\tj+=1\n\tprint(\"YES\")\n\tprint(*ans)"
        },
        {
            "language": 3,
            "solution": "\nli = []\nlist1 = [int(x) for x in input().split(' ')]\nl = list1[0]\np = list1[1]\nj = list1[2] - 1\nplatLengths = [int(x) for x in input().split(' ')]\nif j * (p + 1) + sum(platLengths) >= l:\n    print(\"YES\")\n    \n    currentPlat = 1\n    if (j == 0):\n        for i in range(currentPlat - 1, p):\n            li += [currentPlat] * platLengths[i]\n            currentPlat += 1\n    else:\n        jumpSpaces = l - sum(platLengths)\n        numFullJumps = jumpSpaces // j #4\n        leftOverJump = jumpSpaces % j #2\n        \n        numJumps = numFullJumps\n        if leftOverJump > 0:\n            numJumps += 1\n\n        if numFullJumps >= p:\n            for i in range(numFullJumps - (numFullJumps - p)):\n                li += [0] * j\n                li += [currentPlat] * platLengths[currentPlat - 1] #0, 0 -- 1, 1, -- 2,2\n                currentPlat += 1\n            li += [0] * (l - len(li))\n        else:\n            for i in range(numFullJumps):\n                li += [0] * j\n                li += [currentPlat] * platLengths[currentPlat - 1]\n                currentPlat += 1\n            li += [0] * leftOverJump\n            for i in range(currentPlat - 1, p):\n                li += [currentPlat] * platLengths[currentPlat - 1]\n                currentPlat += 1\n    print(*li)\n    \nelse:\n    print(\"NO\")\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, num_p, d, C[1111];\nint p_st[1111];\nvoid one_front(int ed) {\n  if (p_st[1] > 1) p_st[1]--;\n  for (int i = 2; i <= ed; ++i) {\n    if (p_st[i - 1] + C[i - 1] <= p_st[i] - 1) p_st[i]--;\n  }\n}\nint main(void) {\n  scanf(\"%d%d%d\", &n, &num_p, &d);\n  for (int i = 1; i <= num_p; ++i) scanf(\"%d\", &C[i]);\n  p_st[1] = min(d, n - C[1] + 1);\n  for (int i = 2; i <= num_p; ++i) {\n    int can_nxt = p_st[i - 1] + C[i - 1];\n    int nxt_st = can_nxt + d - 1;\n    int nxt_ed = nxt_st + C[i] - 1;\n    if (nxt_ed <= n) {\n      p_st[i] = nxt_st;\n      continue;\n    }\n    nxt_ed = n;\n    nxt_st = n - C[i] + 1;\n    if (can_nxt <= nxt_st) {\n      p_st[i] = nxt_st;\n      continue;\n    }\n    while (1) {\n      one_front(i - 1);\n      if (p_st[i - 1] + C[i - 1] <= n - C[i] + 1) {\n        p_st[i] = n - C[i] + 1;\n        break;\n      }\n    }\n  }\n  if (p_st[num_p] + C[num_p] - 1 + d < n + 1) {\n    puts(\"NO\");\n    return 0;\n  }\n  vector<int> res(n + 1);\n  for (int i = 1; i <= num_p; ++i) {\n    for (int j = p_st[i]; j <= p_st[i] + C[i] - 1; ++j) res[j] = i;\n  }\n  puts(\"YES\");\n  for (int i = 1; i <= n; ++i) printf(\"%d \", res[i]);\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin,stdout\nraw_input = stdin.readline\n\nn,m,d=map(int,raw_input().split())\nl=map(int,raw_input().split())\nd-=1\n#ans=[0]*n\nif d>=n:\n    ans=[0]*n\n    c=1\n    pos=0\n    while l:\n        ans[pos]=c\n        l[0]-=1\n        if not l[0]:\n            l.pop(0)\n            c+=1\n    print 'YES'\n    for i in ans:\n        print i,\n    print\n    exit()\npos=d\nf=0\nans=[]\nsm=sum(l)\nfor i in xrange(m):\n    if f:\n        ans.append((pos,pos+l[i]))\n        pos+=l[i]\n        continue\n    nxt=pos+l[i]\n    sm-=l[i]\n    if sm>=n-nxt:\n        f=1\n        pos-=sm-n+nxt\n        ans.append((pos,pos+l[i]))\n        pos+=l[i]\n    else:\n        ans.append((pos,pos+l[i]))\n        pos+=l[i]\n        pos+=d\nif pos<n:\n    print 'NO'\n    exit()\narr=[0]*n\nc=1\nfor rng in ans:\n    for i in xrange(rng[0],rng[1]):\n        arr[i]=c\n\n    c+=1\nprint 'YES'\nfor i in arr:\n    print i,\nprint\n"
        },
        {
            "language": 3,
            "solution": "import random\nfrom bisect import bisect_left, bisect_right\nfrom typing import List\nimport collections\nimport bisect\nimport itertools\nimport functools\nfrom fractions import gcd\nimport heapq\nfrom math import ceil, sqrt, floor\n\n# import sys\n# sys.setrecursionlimit(50000)\nfrom collections import defaultdict, deque\n\nimport collections\n\n\nn,m,d = list(map(int, input().split()))\n\nC = list(map(int, input().split()))\n\nbridge_len = sum(C)\n\nwater_len = n - bridge_len\n\nmin_water_len = floor(water_len / (m + 1))\nmax_water_len = ceil(water_len / (m + 1))\n\nif max_water_len < d:\n    print(\"YES\")\n    additional_water = water_len % (m+1)\n    ret = []\n    for i in range(m):\n        for j in range(min_water_len):\n            ret.append(0)\n        if additional_water > 0:\n            ret.append(0)\n            additional_water -= 1\n        for j in range(C[i]):\n            ret.append(i+1)\n    while len(ret) < n:\n        ret.append(0)\n    print(' '.join(str(i) for i in ret))\n\nelse:\n    print(\"NO\")\n\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nc=list(map(int,input().split()))\nnl=n\nfor i in c:\n\tnl-=(i-1)\na=[0]*nl\n#print(a)\nno0 = nl-d\n\ndr=m\npos = nl-(d-1)-1\n\nwhile(dr < (pos+1) and dr>0):\n\t#print(dr,pos)\n\ta[pos] = dr\n\tdr-=1\n\tpos-=(d)\n\n#print(dr,pos)\nwhile(dr>0):\n\ta[dr-1]=dr\n\tdr-=1\n\npos1=-1\nfor i in range (nl):\n\tif(a[i]==1):\n\t\tpos1=i\n\nif(pos1 >= d):\n\tprint(\"NO\")\n\nelse:\n\tprint(\"YES\")\n\tfor i in range (nl):\n\t\tif(a[i]!=0):\n\t\t\tfor j in range (c[a[i]-1]):\n\t\t\t\tprint(a[i],end=\" \")\n\n\t\telse:\n\t\t\tprint(\"0\",end=\" \")\n\n\tprint()\n\n\n\t\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\n\nimport java.util.*;\n\npublic class platform {\n\tpublic static void main(String[] args) throws Exception {\n\t\tInputStreamReader r = new InputStreamReader(System.in);\n\t\tBufferedReader br = new BufferedReader(r);\n\t\tPrintWriter pw = new PrintWriter(new BufferedWriter(\n\t\t\tnew OutputStreamWriter(System.out)));\n\n\t\tString[] input = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(input[0]);\n\t\tint m = Integer.parseInt(input[1]);\n\t\tint d = Integer.parseInt(input[2]);\n\n\t\tint remainingBoardDist = 0;\n\t\tLinkedList<Integer> lst = new LinkedList<>();\n\n\t\tString[] boards = br.readLine().split(\" \");\n\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tint boardWidth = Integer.parseInt(boards[i]);\n\t\t\tlst.add(boardWidth);\n\t\t\tremainingBoardDist += boardWidth;\n\t\t}\n\n\t\tint remainingLength = n;\n\t\tint myPos = 0;\n\t\tint boardCounter = 1;\n\t\tint[] boardArr = new int[n + 1];\n\t\twhile (lst.size() > 0 && remainingBoardDist < remainingLength && remainingLength > 0) {\n\t\t\tmyPos = Math.min(myPos + d, n - remainingBoardDist + 1);\n\t\t\tint length = lst.poll();\n\t\t\tremainingBoardDist -= length;\n\t\t\tfor (int j = 0; j < length; j++) {\n\t\t\t\tboardArr[myPos + j] = boardCounter;\n\t\t\t}\n\t\t\tmyPos += (length - 1);\n\t\t\tboardCounter++;\n\t\t\tremainingLength = n - myPos;\n\t\t}\n\n\t\tif (lst.size() > 0) {\n\t\t\tfor (int b : lst) {\n\t\t\t\tfor (int l = 0; l < b; l++) {\n\t\t\t\t\tmyPos++;\n\t\t\t\t\tboardArr[myPos] = boardCounter;\n\t\t\t\t}\n\t\t\t\tboardCounter++;\n\t\t\t}\n\t\t} else {\n\t\t\tremainingLength = Math.max(remainingLength - d + 1, 0);\n\t\t}\n\n\t\tif (remainingLength == 0 || remainingLength == remainingBoardDist) {\n\t\t\tpw.println(\"YES\");\n\t\t\tint counter = 0;\n\t\t\tfor (int ele : boardArr) {\n\t\t\t\tif (counter == 0) counter++;\n\t\t\t\telse pw.print(ele + \" \");\n\t\t\t}\n\t\t\tpw.println();\n\t\t}\n\t\telse pw.println(\"NO\");\n\n\t\tpw.close();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "(n ,m, d)=[int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\nplat_len = sum(c)\ntotal_space = min((len(c)+1)*(d-1), n - plat_len)\n\nif total_space + plat_len < n:\n    print(\"NO\")\nelse:\n    print(\"YES\")    \n    platform = 1\n    left = total_space\n    ini_space = min(left, d-1)\n    for _i in range(ini_space):\n        print(0, end=' ')        \n    left -=ini_space\n    for el in c:        \n        for i in range(el):\n            print(platform, end=' ')\n        space = min(left, d-1)        \n        for i in range(space):\n            print(0,  end=' ')           \n        left -=space\n        platform += 1\n    for _i in range(left):\n        print(0, end=' ')        \n    print()"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\na=list(map(int,input().split()))\ns=sum(a)\nif n>s+(m+1)*(d-1):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    e=n-s\n    if d==1:\n        l=[]\n        i=1\n        for j in a:\n            l+=[i]*j\n            i+=1\n        print(*l)\n    else:\n        q=e//(d-1)\n        r=e%(d-1)\n        l=[]\n        i=1\n        if r==0 and q!=0:\n            q-=1\n            r=d-1\n        for j in range(q):\n            l+=[0]*(d-1)\n            l+=[i]*a[j]\n            i+=1\n        l+=[0]*r\n        for j in range(q,m):\n            l+=[i]*a[j]\n            i+=1\n        print(*l)"
        },
        {
            "language": 3,
            "solution": "n,m,jump=map(int,input().split())\na=list(map(int,input().split()))\ntotal=0\nfor i in range(m):\n    total+=a[i]\ndist=n-total\nb=dist//(m+1)\nvisited=[b for i in range(n)]\nif(dist%(m+1)>0):\n    b+=1\nif(b>=jump):\n    print(\"NO\")\nelse:\n    for i in range(dist%(m+1)):\n        visited[i]+=1\n    final=[0 for i in range(n)]\n    i=0\n    count=1\n    j=0\n    while(i<m):\n        j+=visited[i]\n        for k in range(j,j+a[i]):\n            final[k]=count\n        j+=a[i]\n        count+=1\n        i+=1\n    print(\"YES\")\n    for i in range(n):\n        print(final[i],end=' ')\n    print()"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskC\n    {\n        public void solve(int testNumber, Scanner in, PrintWriter out)\n        {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int d = in.nextInt();\n            in.nextLine();\n            String platformsString = in.nextLine();\n            String[] platforms = platformsString.split(\" \");\n            int platformsNums[] = convert(platforms);\n\n            int river[] = new int[n + 2];\n\n            for (int i = m - 1, pos = n; i >= 0; --i)\n            {\n                for (int len = 0; len < platformsNums[i]; ++len)\n                {\n                    river[pos - len] = i + 1;\n                }\n                pos -= platformsNums[i];\n            }\n\n            int currentPos = 0;\n            while (true)\n            {\n                while (currentPos + 1 < n + 1 && river[currentPos + 1] > 0) ++currentPos;\n\n                if (currentPos + d >= n + 1) break;\n                //needs a platform?\n                if (river[currentPos + d] == 0)\n                {\n                    int lpos = -1;\n                    //identify first platform\n                    for (int i = currentPos + d; i < n + 2; ++i)\n                    {\n                        if (river[i] != 0)\n                        {\n                            lpos = i;\n                            break;\n                        }\n                    }\n                    // no more platforms\n                    if (lpos == -1)\n                    {\n                        out.print(\"NO\");\n                        return;\n                    }\n                    //detect end of the current platform\n                    int rpos = -1;\n                    for (int i = lpos; i < n + 2; ++i)\n                    {\n                        if (river[i] == river[lpos]) rpos = i;\n                    }\n                    // keep shifting till getting the platform\n                    while (river[currentPos + d] == 0)\n                    {\n                        //swap\n                        int t = river[lpos - 1];\n                        river[lpos - 1] = river[rpos];\n                        river[rpos] = t;\n                        --lpos;\n                        --rpos;\n                    }\n                }\n                currentPos += d;\n            }\n            out.println(\"YES\");\n            for (int i = 1; i <= n; i++)\n            {\n                out.print(river[i] + \" \");\n            }\n        }\n\n        public static int[] convert(String[] platforms)\n        {\n            int nums[] = new int[platforms.length];\n            for (int i = 0; i < platforms.length; i++)\n            {\n                nums[i] = Integer.parseInt(platforms[i]);\n            }\n            return nums;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "def f(n,m,d,a):\n\tb=[0]*m\n\tpos=0\n\tfor i in range(m):\n\t\t# print(b)\n\t\tb[i]=pos+d\n\t\tpos=pos+d+a[i]-1\n\t# print(b)\n\tif b[-1]+a[-1]-1+d<n+1:\n\t\tprint(\"NO\")\n\t\treturn []\n\tpos=n+1\n\tc=[0]*n\n\tfor i in range(m-1,-1,-1):\n\t\tif b[i]+a[i]-1>=pos:\n\t\t\tb[i]=pos-a[i]\n\t\tpos=b[i]\n\t\tfor j in range(b[i],b[i]+a[i]):\n\t\t\tc[j-1]=i+1\n\tprint(\"YES\")\n\treturn c\n\n\nn,m,d=map(int,input().strip().split())\nl=list(map(int,input().strip().split()))\nprint(*f(n,m,d,l))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> c(m);\n  for (int i = 0; i < m; i++) cin >> c[i];\n  int sum = 0;\n  for (int i = 0; i < m; i++) sum += c[i];\n  int st = 0;\n  for (int i = 0; i < m; i++) {\n    st += (d - 1 + c[i]);\n  }\n  st += (d);\n  if (st > n) {\n    sum = n - sum;\n    vector<int> ans(n, 0);\n    int tem = d - 1;\n    int j = 0;\n    for (int i = 0; i < m; i++) {\n      tem = min(tem, sum);\n      sum -= tem;\n      j += (tem);\n      for (int k = 0; k < c[i]; k++) {\n        ans[j] = i + 1;\n        j++;\n      }\n    }\n    cout << \"YES\" << endl;\n    for (int i = 0; i < n; i++) cout << ans[i] << \" \";\n    cout << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int read() {\n  int SUM = 0, ff = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') ff = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    SUM = (SUM << 3) + (SUM << 1) + (ch ^ 48);\n    ch = getchar();\n  }\n  return SUM * ff;\n}\nconst int N = 1010;\nint n, m, d;\nint board[N], ans[N];\nint main() {\n  n = read(), m = read(), d = read();\n  for (int i = 1; i <= m; i++) board[i] = read();\n  for (int i = m, pos = n; i >= 1; i--) {\n    for (int len = 1; len <= board[i]; len++) ans[pos--] = i;\n  }\n  int now = 0, x = 0;\n  while (1) {\n    x++;\n    while (now + 1 < n + 1 && ans[now + 1] > 0) now++;\n    if (now + d >= n + 1) break;\n    if (ans[now + d] == 0) {\n      int Nxt = -1, End = -1;\n      for (int i = now + d; i <= n; i++)\n        if (ans[i] != 0) {\n          Nxt = i;\n          break;\n        }\n      if (Nxt == -1) {\n        puts(\"NO\");\n        return 0;\n      }\n      for (int i = Nxt; i <= n; i++) {\n        if (ans[i] == ans[Nxt]) End = i;\n      }\n      for (int i = now + d, j = Nxt; j <= End; i++, j++) swap(ans[i], ans[j]);\n    }\n    now += d;\n  }\n  puts(\"YES\");\n  for (int i = 1; i <= n; i++) printf(\"%d \", ans[i]);\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid test() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int a[m];\n  int sum = 0;\n  for (int i = 0; i < m; i++) cin >> a[i], sum += a[i];\n  int x = 0, j = 0;\n  int st[m];\n  while (x < n + 1 && j < m) {\n    st[j] = min(x + d, n - (sum - 1));\n    sum -= a[j];\n    x += d + (a[j] - 1);\n    j++;\n    if (j == m) x += d;\n  }\n  if (x < n + 1) {\n    return cout << \"NO\\n\", void();\n  }\n  if (j != m) {\n    int pos = st[j - 1] + a[j - 1];\n    while (j < m) {\n      st[j] = pos;\n      pos += a[j];\n      j++;\n    }\n  }\n  cout << \"YES\\n\";\n  for (int i = 1, k = 0; i <= n;) {\n    if (st[k] != i)\n      cout << \"0 \", i++;\n    else {\n      for (int l = 0; l < a[k]; l++, i++) cout << k + 1 << ' ';\n      k++;\n    }\n  }\n  cout << '\\n';\n}\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0);\n  int t = 1;\n  for (int i = 1; i <= t; i++) {\n    test();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nl=list(map(int,input().split()))\na=n-sum(l)\nres=[0]*n\nif((m+1)*(d-1)>=a):\n    print(\"YES\")\n    p=0\n    i=0\n    j=1\n    v=0\n    t=0\n    while t<n and v<m:\n        if(a-p)>=d:\n            i+=d-1\n            t+=d-1\n            p+=(d-1)\n            for k in range(i,i+l[v]):\n                #print(k)\n                res[k]=v+1\n                t+=1\n            i+=l[v]\n            v+=1\n        elif(a-p)<d:\n            i+=a-p \n            t+=a-p\n            p=a\n            #print(v,l)\n            for k in range(i,i+l[v]):\n                res[k]=v+1\n                t+=1\n            i+=l[v]\n            v+=1\n    print(*res)\nelse:\n    print(\"NO\")"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {new Main().run();}\n\n\tFastReader in = new FastReader();\n\tPrintWriter out = new PrintWriter(System.out);\n\tvoid run(){\n\t\twork();\n\t\tout.flush();\n\t}\n\tlong mod=1000000007;\n\tlong gcd(long a,long b) {\n\t\treturn b==0?a:gcd(b,a%b);\n\t}\n\t\n\tlong ret=0;\n\tvoid work() {\n\t\tint n=in.nextInt();\n\t\tint m=in.nextInt();\n\t\tint d=in.nextInt();\n\t\tint[] A=new int[m+1];\n\t\tint sum=1;\n\t\tfor(int i=0;i<m;i++) {\n\t\t\tA[i]=in.nextInt();\n\t\t\tsum+=A[i];\n\t\t}\n\t\tA[m]=1;\n\t\tif(sum+(m+1)*(d-1)<n+1) {\n\t\t\tout.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tint[] ret=new int[n+1];\n\t\tint step=(n+1-sum)/(m+1);\n\t\tint c2=(n+1-sum)%(m+1);\n\t\tint c1=(m+1)-c2;\n\t\tfor(int i=0,index=1;c1>0||c2>0;index++) {\n\t\t\tif(c2>0) {\n\t\t\t\tc2--;\n\t\t\t\tfor(int j=0;j<step+1;j++,i++);\n\t\t\t\tint j=i;\n\t\t\t\tfor(;j<i+A[index-1];j++) {\n\t\t\t\t\tret[j]=index;\n\t\t\t\t}\n\t\t\t\ti=j;\n\t\t\t}else {\n\t\t\t\tc1--;\n\t\t\t\tfor(int j=0;j<step;j++,i++);\n\t\t\t\tint j=i;\n\t\t\t\tfor(;j<i+A[index-1];j++) {\n\t\t\t\t\tret[j]=index;\n\t\t\t\t}\n\t\t\t\ti=j;\n\t\t\t}\n\t\t}\n\t\tout.println(\"YES\");\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tout.print(ret[i]+\" \");\n\t\t}\n\t}\n}\n\n\n\nclass FastReader\n{\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tpublic FastReader()\n\t{\n\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t}\n\n\tpublic String next() \n\t{\n\t\tif(st==null || !st.hasMoreElements())\n\t\t{\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic int nextInt() \n\t{\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong()\n\t{\n\t\treturn Long.parseLong(next());\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import math\n\ns = input().split(\" \")\nn = int(s[0])\nm = int(s[1])\nd = int(s[2])\nc = input().split(\" \")\ntot = 0\nfor i in range(0,m):\n    c[i] = int(c[i])\n    tot += c[i]\nleft = n - tot\nif left > (d-1)*(m+1):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    now = 1\n    for i in range(0,m):\n        for j in range(0,min(left,d-1)):\n            print(\"0\",end = \" \")\n            now += 1\n        left -= min(left,d-1)\n        for j in range(0,c[i]):\n            print(i+1, end = \" \")\n            now += 1\n\n    for j in range(0,min(left,d-1)):\n        print(\"0\",end = \" \")\n        now += 1\n    print(\"\")"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn, m, d = map(int, input().split())\nline = list(map(int, input().split()))\nif sum(line) + (d - 1) * (m + 1) < n:\n    print(\"NO\")\n    sys.exit()\n\nfill = []\nfor i in range(len(line)):\n    fill += [0] * (d - 1) + [i + 1] * line[i]\nfill += [0] * (d - 1)\nans = []\ndell = len(fill) - n\nfor i in fill:\n    if i == 0 and dell > 0:\n        dell -= 1\n    else:\n        ans.append(i)\nprint(\"YES\")\nprint(*ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main\n{\n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    }\n    static int gcd(int a,int b)\n    {\n        if(b%a==0)\n        return a;\n        return gcd(b%a,a);\n    }\n    public static void main(String args[])\n    {\n        FastReader fs=new FastReader();\n        PrintWriter pw=new PrintWriter(System.out);\n        int n=fs.nextInt();\n        int m=fs.nextInt();\n        int d=fs.nextInt();\n        int ptr=0;\n        int c[]=new int[m];\n        int sum=0;\n        for(int i=0;i<m;i++)\n        {\n            c[i]=fs.nextInt();\n            sum+=c[i];\n        }\n        if(sum+(m+1)*(d-1)<n)\n        pw.println(\"NO\");\n        else if(d>=n+1)\n        {\n            pw.println(\"YES\");\n            int ans[]=new int[n];\n            for(int i=0;i<m;i++)\n            {\n                while(c[i]>0)\n                {\n                    ans[ptr]=i+1;\n                    ptr++;\n                    c[i]--;\n                }\n            }\n            for(int i=0;i<n;i++)\n            pw.print(ans[i]+\" \");\n            \n        }\n        else\n        {\n            int ans[]=new int[n];\n            int diff=n+1-sum;\n            for(int i=0;i<m;i++)\n            {\n                for(int j=0;j<c[i];j++)\n                ans[ptr++]=i+1;\n            }\n            if(diff<=d)\n            {\n                pw.println(\"YES\");\n                for(int j=0;j<n;j++)\n                pw.println(ans[j]+\" \");\n            }\n            else\n            {\n                pw.println(\"YES\");\n                Arrays.fill(ans,0);\n                int gaps=diff/d;\n                ptr=0;\n                for(int i=diff%d;i<n;)\n                {\n                    if(ptr==m)\n                    break;\n                    int j;\n                    for(j=i;j<i+c[ptr];j++)\n                    ans[j]=ptr+1;\n                    i+=c[ptr];\n                    ptr++;\n                    if(gaps>0)\n                    {\n                        i+=d;\n                        gaps--;\n                        i--;\n                    }\n                }\n                for(int i=0;i<n;i++)\n                pw.print(ans[i]+\" \");\n            }\n        }\n        pw.flush();\n        pw.close();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\npublic class e {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint d = sc.nextInt();\n\t\tint[] a = new int[m];\n\t\tint[] b = new int[n];\n\t\tint p = 0;\n\t\tint max = 0;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t\tmax += a[i];\n\t\t}\n\t\tboolean bo = false;\n\t\tif (max + (m + 1) * (d - 1) < n)\n\t\t\tbo = false;\n\t\telse {\n\t\t\tint x = max - m;\n\t\t\tint k = n - 1;\n\t\t\tint h = 0;\n\t\t\tfor (int j = m - 1; j >= 0; j--) {\n\t\t\t\twhile (a[j]-- > 0) {\n\t\t\t\t\tb[k--] = j + 1;\n\t\t\t\t\th = k + 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint g = 0;\n\t\t\tfor (int i = -1; i < n; i++) {\n\t\t\t\ti += d;\n\t\t\t\tif (i >= n) {\n\t\t\t\t\tbo = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (b[i] == 0) {\n\t\t\t\t\tg = b[h];\n\t\t\t\t\twhile (h < n && b[h++] == g) {\n\t\t\t\t\t\th--;\n\t\t\t\t\t\tb[i++] = b[h];\n\t\t\t\t\t\tb[h] = 0;\n\t\t\t\t\t\th++;\n\t\t\t\t\t}\n\t\t\t\t\th--;\n\n\t\t\t\t\ti -= 2;\n\t\t\t\t} else {\n\t\t\t\t\tbo = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bo) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tfor (int i : b)\n\t\t\t\tSystem.out.print(i + \" \");\n\t\t\tSystem.out.println();\n\t\t} else\n\t\t\tSystem.out.println(\"NO\");\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.event.MouseAdapter;\nimport java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        new Main().run();\n    }\n\n    static int groups = 0;\n    static int[] fa;\n    static int[] sz;\n\n    static void init1(int n) {\n        groups = n;\n        fa = new int[n];\n        for (int i = 1; i < n; ++i) {\n            fa[i] = i;\n        }\n        sz = new int[n];\n        Arrays.fill(sz, 1);\n    }\n\n    static int root(int p) {\n        while (p != fa[p]) {\n            fa[p] = fa[fa[p]];\n            p = fa[p];\n        }\n        return p;\n    }\n\n    static void combine(int p, int q) {\n        int i = root(p);\n        int j = root(q);\n        if (i == j) {\n            return;\n        }\n        fa[i] = j;\n        if (sz[i] < sz[j]) {\n            fa[i] = j;\n            sz[j] += sz[i];\n        } else {\n            fa[j] = i;\n            sz[i] += sz[j];\n        }\n        groups--;\n    }\n\n\n    public static String roundS(double result, int scale) {\n        String fmt = String.format(\"%%.%df\", scale);\n        return String.format(fmt, result);\n    }\n\n    int[] unique(int a[]) {\n        int p = 1;\n        for (int i = 1; i < a.length; ++i) {\n            if (a[i] != a[i - 1]) {\n                a[p++] = a[i];\n            }\n        }\n        return Arrays.copyOf(a, p);\n    }\n\n\n    public static int bigger(long[] a, long key) {\n        return bigger(a, 0, a.length, key);\n    }\n\n    public static int bigger(long[] a, int lo, int hi,\n                             long key) {\n        while (lo < hi) {\n            int mid = (lo + hi) >>> 1;\n            if (a[mid] > key) {\n                hi = mid;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return lo;\n    }\n\n\n    static int h[];\n    static int to[];\n    static int ne[];\n    static int m = 0;\n\n    public static void addEdge(int u, int v, int w) {\n        to[++m] = v;\n        ne[m] = h[u];\n        h[u] = m;\n    }\n\n\n    int w[];\n\n    int cc = 0;\n\n    void add(int u, int v, int ww) {\n        to[++cc] = u;\n        w[cc] = ww;\n        ne[cc] = h[v];\n        h[v] = cc;\n\n        to[++cc] = v;\n        w[cc] = ww;\n        ne[cc] = h[u];\n        h[u] = cc;\n    }\n\n\n//    List<int[]> li = new ArrayList<>();\n//\n//    void go(int j){\n//        d[j] = l[j] = ++N;\n//        int cd = 0;\n//        for(int i=h[j];i!=0;i= ne[i]){\n//            int v= to[i];\n//            if(d[v]==0){\n//                fa[v] = j;\n//                cd++;\n//                go(v);\n//                l[j] = Math.min(l[j],l[v]);\n//                if(d[j]<=l[v]){\n//                    cut[j] = true;\n//                }\n//                if(d[j]<l[v]){\n//                    int ma = Math.max(j,v);\n//                    int mi = Math.min(j,v);\n//                    li.add(new int[]{mi,ma});\n//                }\n//            }else if(fa[j]!=v){\n//                l[j] = Math.min(l[j],d[v]);\n//            }\n//        }\n//        if(fa[j]==-1&&cd==1){\n//            cut[j] = false;\n//        }\n//        if (l[j] == d[j]) {\n//            while(p>0){\n//                mk[stk[p-1]] = id;\n//            }\n//            id++;\n//        }\n//    }\n//    int mk[];\n//    int id=  0;\n//    int l[];\n//    boolean cut[];\n//    int p = 0;\n//    int d[];int N = 0;\n//    int stk[];\n\n\n    static class S {\n        int l = 0;\n        int r = 0;\n        int miss = 0;\n        int cnt = 0;\n        int c = 0;\n\n        public S(int l, int r) {\n            this.l = l;\n            this.r = r;\n        }\n    }\n\n    static S a[];\n    static int[] o;\n\n    static void init11(int[] f) {\n        o = f;\n        int len = o.length;\n        a = new S[len * 4];\n        build1(1, 0, len - 1);\n    }\n\n    static void build1(int num, int l, int r) {\n        S cur = new S(l, r);\n        if (l == r) {\n            cur.c = o[l];\n            a[num] = cur;\n            return;\n        } else {\n            int m = (l + r) >> 1;\n            int le = num << 1;\n            int ri = le | 1;\n            build1(le, l, m);\n            build1(ri, m + 1, r);\n            a[num] = cur;\n            pushup(num, le, ri);\n        }\n    }\n\n    static int query1(int num, int l, int r) {\n        if (a[num].l >= l && a[num].r <= r) {\n            return a[num].c;\n        } else {\n            int m = (a[num].l + a[num].r) >> 1;\n            int le = num << 1;\n            int ri = le | 1;\n\n            int mi = -1;\n\n            if (r > m) {\n                int res = query1(ri, l, r);\n                mi = Math.max(mi, res);\n            }\n\n            if (l <= m) {\n                int res = query1(le, l, r);\n                mi = Math.max(mi, res);\n            }\n\n            return mi;\n        }\n    }\n\n    static void pushup(int num, int le, int ri) {\n        a[num].c = Math.max(a[le].c, a[ri].c);\n\n    }\n\n//    int root[] = new int[10000];\n//\n//    void dfs(int j) {\n//\n//        clr[j] = 1;\n//\n//        for (int i = h[j]; i != 0; i = ne[i]) {\n//            int v = to[i];\n//            dfs(v);\n//        }\n//        for (Object go : qr[j]) {\n//            int g = (int) go;\n//            int id1 = qs[g][0];\n//            int id2 = qs[g][1];\n//            int ck;\n//            if (id1 == j) {\n//                ck = id2;\n//            } else {\n//                ck = id1;\n//            }\n//\n//            if (clr[ck] == 0) {\n//                continue;\n//            } else if (clr[ck] == 1) {\n//                qs[g][2] = ck;\n//            } else {\n//                qs[g][2] = root(ck);\n//            }\n//        }\n//        root[j] = fa[j];\n//\n//        clr[j] = 2;\n//    }\n\n\n    int clr[];\n    List[] qr;\n    int qs[][];\n\n    int rr = 100;\n    LinkedList<Integer> cao;\n    void df(int n,LinkedList<Integer> li){\n        int sz = li.size();\n        if(sz>=rr||sz>=11) return;\n        int v = li.getLast();\n        if(v==n){\n            cao = new LinkedList<>(li);\n            rr = sz;\n            return;\n        }\n        List<Integer> res = new ArrayList<>(li);\n        Collections.reverse(res);\n\n        for(int u:res){\n            for(int vv:res){\n                if(u+vv>v&&u+vv<=n){\n                    li.addLast(u+vv);\n                    df(n,li);\n                    li.removeLast();\n                }else if(u+vv>n){break;}\n            }\n        }\n    }\n\n\n\n    Random rd = new Random(1274873);\n\n    static long mul(long a, long b, long p)\n    {\n        long res=0,base=a;\n        while(b>0)\n        {\n            if((b&1L)>0)\n                res=(res+base)%p;\n            base=(base+base)%p;\n            b>>=1;\n        }\n        return res;\n    }\n\n    static long mod_pow(long k,long n,long p){\n        long res = 1L;\n        long temp = k%p;\n        while(n!=0L){\n            if((n&1L)==1L){\n                res = mul(res,temp,p);\n            }\n            temp = mul(temp,temp,p);\n            n = n>>1L;\n        }\n        return res%p;\n    }\n\n\n    long gen(long x){\n        while(true) {\n            long f = rd.nextLong()%x;\n            if (f >=1 &&f<=x-1) {\n                return f;\n            }\n        }\n    }\n\n    boolean robin_miller(long x){\n        if(x==1) return false;\n        if(x==2) return true;\n        if(x==3) return true;\n        if((x&1)==0) return false;\n        long y = x%6;\n        if(y==1||y==5){\n            long ck = x-1;\n            while((ck&1)==0) ck>>>=1;\n\n            long as[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37};\n\n            for(int i=0;i<as.length;++i){\n                long a = as[i];\n                long ck1=  ck;\n                a = mod_pow(a,ck1,x);\n                while(ck1<x){\n                    y = mod_pow(a,2, x);\n                    if (y == 1 && a != 1 && a != x - 1)\n                        return false;\n                    a = y;\n                    ck1 = ck1<<1;\n                }\n                if (a != 1)\n                    return false;\n            }\n            return true;\n        }else{\n            return false;\n        }\n\n    }\n\n    long inv(long a, long MOD) {\n        //return fpow(a, MOD-2, MOD);\n        return a==1?1:(long )(MOD-MOD/a)*inv(MOD%a, MOD)%MOD;\n    }\n\n    long C(long n,long m, long MOD) {\n        if(m+m>n)m=n-m;\n        long up=1,down=1;\n        for(long i=0;i<m;i++)\n        {\n            up=up*(n-i)%MOD;\n            down=down*(i+1)%MOD;\n        }\n        return up*inv(down, MOD)%MOD;\n    }\n\n//    int g[][] = {{1,2,3},{0,3,4},{0,3},{0,1,2,4},{1,3}};\n//    int res= 0;\n//    void go(int i,int a[],int x[],boolean ck[]){\n//        if(i==5){\n//            int an = 0;\n//            for(int j=0;i<5;++j){\n//                int id = a[j];\n//                if(ct[id]>3) continue;\n//                int all =0;\n//                for(int g:g[id]){\n//                    all |= a[g];\n//                }\n//                if(all&(gz[id])==gz[id]){\n//                    an++;\n//                }\n//            }\n//            if(an>res){\n//                res = an;\n//            }\n//            return;\n//        }\n//        for(int j=0;j<5;++j){\n//            if(!ck[j]){\n//                ck[j] = true;\n//                a[i] = x[j];\n//                go(i+1,a,x,ck);\n//                ck[j]  = false;\n//            }\n//        }\n//\n//\n//    }\n\n    // x = r[0], y = r[1] , gcd(x,y) = r[2]\n    public static long[] ex_gcd(long a,long b){\n        if(b==0) {\n            return new long[]{1,0,a};\n        }\n        long []r = ex_gcd(b,a%b);\n        return new long[]{r[1], r[0]-(a/b)*r[1], r[2]};\n    }\n\n    void chinese_rm(long m[],long r[]){\n        long res[] = ex_gcd(m[0],m[1]);\n        long rm = r[1]-r[0];\n        if(rm%res[2]==0){\n\n        }\n\n    }\n\n\n\n\n\n    //    void go(int i,int c,int cl[]){\n//        cl[i] = c;\n//        for(int j=h[i];j!=-1;j=ne[j]){\n//            int v = to[j];\n//            if(cl[v]==0){\n//                go(v,-c,cl);\n//            }\n//        }\n//\n//    }\n    int go(int rt,int h[],int ne[],int to[],int pa){\n        int all = 3010;\n        for(int i=h[rt];i!=-1;i=ne[i]){\n            int v = to[i];\n            if(v==pa) continue;\n            int ma = 0;\n            for(int j=h[rt];j!=-1;j=ne[j]) {\n                int u = to[j];\n                if(u==pa) continue;\n                if(u!=v){\n                    int r = 1 + go(u,h,ne,to,rt);\n                    ma =  Math.max(ma,r);\n                }\n            }\n            all = Math.min(all,ma);\n        }\n        if(all==3010||all==0) return 1;\n        return all;\n\n    }\n\n\n    boolean next_perm(int[] a){\n        int len = a.length;\n        for(int i=len-2,j = 0;i>=0;--i){\n            if(a[i]<a[i+1]){\n                j = len-1;\n                for(;a[j]<=a[i];--j);\n                int p = a[j];\n                a[j] = a[i];\n                a[i] = p;\n                j = i+1;\n                for(int ed = len-1;j<ed;--ed) {\n                    p = a[ed];\n                    a[ed] = a[j];\n                    a[j++] = p;\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    boolean ok = false;\n    void ck(int[] d,int l,String a,String b,String c,int n,boolean chose[],int add){\n        if(ok) return;\n        if(l==-1){\n            if(add==0) {\n                for (int u : d) {\n                    print(u + \" \");\n                }\n                ok = true;\n            }\n            return;\n        }\n\n        int i1 = a.charAt(l)-'A';\n        int i2 = b.charAt(l)-'A';\n        int i3 = c.charAt(l)-'A';\n\n        if(d[i1]==-1&&d[i2]==-1) {\n\n            if(i1==i2){\n\n                for (int i = n-1; i >=0; --i) {\n                    if (chose[i]) continue;\n                    int s = (i + i + add);\n                    int w = s % n;\n                    if (d[i3] != -1 && d[i3] != w) continue;\n                    if (chose[w] && d[i3] != w) continue;\n\n                    if (w == i && i3 != i2) continue;\n                    boolean hsw = d[i3]==w;\n                    chose[w] = true;\n                    chose[i] = true;\n                    d[i1] = i; d[i2] = i; d[i3] = w;\n                    int nadd = s/n;\n                    ck(d, l-1,a,b,c,n,chose,nadd);\n                    d[i1] = -1;\n                    d[i2] = -1;\n                    if(!hsw) {\n                        d[i3] = -1;\n                        chose[w] = false;\n                    }\n                    chose[i] = false;\n\n                }\n\n            }else {\n\n\n                for (int i = n-1; i >=0; --i) {\n                    if (chose[i]) continue;\n                    chose[i] = true;\n                    d[i1] = i;\n                    for (int j = n-1; j >=0; --j) {\n                        if (chose[j]) continue;\n                        int s = (i + j + add);\n                        int w = s % n;\n                        if (d[i3] != -1 && d[i3] != w) continue;\n                        if (chose[w] && d[i3] != w) continue;\n\n                        if (w == j && i3 != i2) continue;\n                        if (w == i && i3 != i1) continue;\n\n                        boolean hsw = d[i3] == w;\n                        chose[w] = true;\n\n                        chose[j] = true;\n\n                        d[i2] = j;\n                        d[i3] = w;\n                        int nadd = s / n;\n                        ck(d, l - 1, a, b, c, n, chose, nadd);\n\n                        d[i2] = -1;\n                        if (!hsw) {\n                            d[i3] = -1;\n                            chose[w] = false;\n                        }\n                        chose[j] = false;\n                    }\n                    chose[i] = false;\n                    d[i1] = -1;\n                }\n            }\n\n        }else if(d[i1]==-1){\n            if(d[i3]==-1) {\n                for (int i = n - 1; i >= 0; --i) {\n                    if (chose[i]) continue;\n                    int s = (i + d[i2] + add);\n                    int w = s % n;\n                    if (d[i3] != -1 && d[i3] != w) continue;\n                    if (chose[w] && d[i3] != w) continue;\n\n                    if (w == i && i3 != i1) continue;\n                    if (w == d[i2] && i3 != i2) continue;\n\n                    boolean hsw = d[i3] == w;\n                    chose[i] = true;\n                    chose[w] = false;\n                    d[i1] = i;\n                    d[i3] = w;\n                    int nadd = s / n;\n                    ck(d, l - 1, a, b, c, n, chose, nadd);\n                    d[i1] = -1;\n                    if (!hsw) {\n                        d[i3] = -1;\n                        chose[w] = false;\n                    }\n                    chose[i] = false;\n                }\n            }else{\n\n                int s = d[i3]-add-d[i2];\n                int nadd = 0;\n                if(s<0){\n                    s += n;\n                    nadd = 1;\n                }\n                if(chose[s]) return;\n                chose[s] = true;\n                d[i1] = s;\n                ck(d, l - 1, a, b, c, n, chose, nadd);\n                chose[s] = false;\n                d[i1] = -1;\n\n\n\n            }\n        }else if(d[i2]==-1){\n\n            if(d[i3]==-1) {\n                for (int i = n - 1; i >= 0; --i) {\n                    if (chose[i]) continue;\n                    int s = (i + d[i1] + add);\n                    int w = s % n;\n                    //  if (d[i3] != -1 && d[i3] != w) continue;\n                    if (chose[w] && d[i3] != w) continue;\n\n                    if (w == i && i3 != i2) continue;\n                    if (w == d[i1] && i3 != i1) continue;\n\n                    boolean hsw = d[i3] == w;\n                    chose[i] = true;\n                    chose[w] = true;\n                    d[i2] = i;\n                    d[i3] = w;\n                    int nadd = s / n;\n                    ck(d, l - 1, a, b, c, n, chose, nadd);\n                    d[i2] = -1;\n                    if (!hsw) {\n                        d[i3] = -1;\n                        chose[w] = false;\n                    }\n                    chose[i] = false;\n                }\n            }else{\n                int s = d[i3]-add-d[i1];\n                int nadd = 0;\n                if(s<0){\n                    s += n;\n                    nadd = 1;\n                }\n                if(chose[s]) return;\n                chose[s] = true;\n                d[i2] = s;\n                ck(d, l - 1, a, b, c, n, chose, nadd);\n                chose[s] = false;\n                d[i2] = -1;\n\n\n\n\n            }\n        }else{\n            if(d[i3]==-1){\n                int w =(d[i1]+d[i2]+add);\n                int nadd = w/n;\n                w %= n;\n                if(w==d[i2]&&i3!=i2) return;\n                if(w==d[i1]&&i3!=i1) return;\n                if(chose[w]) return;\n\n                d[i3] = w;\n                chose[d[i3]] = true;\n                ck(d, l - 1, a, b, c, n, chose, nadd);\n                chose[d[i3]] = false;\n                d[i3] = -1;\n            }else{\n                int w = d[i1]+d[i2]+add;\n                int nadd = w/n;\n                if(d[i3]==w%n){\n                    ck(d, l - 1, a, b, c, n, chose, nadd);\n                }else{\n                    return;\n                }\n\n\n            }\n\n\n\n        }\n\n\n\n    }\n\n\n\n    void solve() {\n        //int q = ni();\n        for(int i=0;i<1;++i){\n\n            int n = ni();\n            int m = ni();\n            int d = ni();\n            int a[] = na(m);\n\n            int f[] = new int[n+1];\n\n            int at = 0;\n            int gt = 0;\n            boolean ok  =true;\n            while(at+d<n+1){\n                if(gt<m){\n                    at = at+d +a[gt]-1;\n                    if(at<=n) {\n                        gt++;\n                    }else{\n                        break;\n                    }\n                }else {\n                    ok = false;\n                    break;\n                }\n            }\n            if(ok){\n                println(\"YES\");\n                int s = 0;\n                int att = n;\n                for(int u=m-1;u>=gt;--u){\n                    s += a[u];\n                    for(int j=0;j<a[u];++j){\n                        f[att] = u+1;\n                        att--;\n                    }\n\n                }\n\n                at = 0;\n                int g = 0;\n\n                while(g<gt) {\n                    int dis = 0;\n                    if (s > 0) {\n                        dis = Math.min(d-1, s);\n                        s -= dis;\n                    }\n                    int dd = d - dis;\n                    at += dd;\n                    for (int j = 0; j < a[g]; ++j) {\n                        f[at] = g+1;\n                        at++;\n                    }\n                    at--;\n                    g++;\n                }\n                for(int j=1;j<=n-1;++j){\n                    print(f[j]+\" \");\n                }\n                println(f[n]);\n\n\n\n\n\n            }else{\n                println(\"NO\");\n            }\n\n\n\n\n\n        }\n\n\n\n\n\n\n\n//        int n = ni();\n//        int p = ni();\n//\n//        int h[] = new int[n+1];\n//        Arrays.fill(h,-1);\n//        int to[] = new int[2*n+5];\n//        int ne[] = new int[2*n+5];\n//        int ct = 0;\n//\n//        for(int i=0;i<p;i++){\n//            int x = ni();\n//            int y = ni();\n//            to[ct] = x;\n//            ne[ct] = h[y];\n//            h[y] = ct++;\n//\n//            to[ct] = y;\n//            ne[ct] = h[x];\n//            h[x] = ct++;\n//\n//        }\n//\n//        println(go(1,h,ne,to,-1));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        //        int n= ni();\n//        //int m = ni();\n//        int  l = 2*n;\n//\n//        String s[] = new String[2*n+1];\n//\n//        long a[] = new long[2*n+1];\n//        for(int i=1;i<=n;++i){\n//            s[i] = ns();\n//            s[i+n] = s[i];\n//            a[i] = ni();\n//            a[i+n] = a[i];\n//        }\n//\n//        long dp[][] = new long[l+1][l+1];\n//        long dp1[][] = new long[l+1][l+1];\n//\n//        for(int i = l;i>=1;--i) {\n//\n//            Arrays.fill(dp[i],-1000000000);\n//            Arrays.fill(dp1[i],1000000000);\n//        }\n//\n//        for(int i = l;i>=1;--i) {\n//            dp[i][i] = a[i];\n//            dp1[i][i] = a[i];\n//        }\n//\n//\n//\n//        for(int i = l;i>=1;--i) {\n//\n//            for (int j = i+1; j <= l&&j-i+1<=n; ++j) {\n//\n//\n//                for(int e=i;e<j;++e){\n//                    if(s[e+1].equals(\"t\")){\n//                        dp[i][j] = Math.max(dp[i][j], dp[i][e]+dp[e+1][j]);\n//                        dp1[i][j] = Math.min(dp1[i][j], dp1[i][e]+dp1[e+1][j]);\n//                    }else{\n//\n//                        long f[] = {dp[i][e]*dp[e+1][j],dp1[i][e]*dp1[e+1][j],dp[i][e]*dp1[e+1][j],dp1[i][e]*dp[e+1][j]};\n//\n//                        for(long u:f) {\n//                            dp[i][j] = Math.max(dp[i][j], u);\n//                            dp1[i][j] = Math.min(dp1[i][j], u);\n//                        }\n//                    }\n//\n//\n//                }\n//\n//            }\n//        }\n//        long ma = -100000000;\n//        List<Integer> li = new ArrayList<>();\n//        for (int j = 1; j <= n; ++j) {\n//            if(dp[j][j+n-1]==ma){\n//                li.add(j);\n//            }else if(dp[j][j+n-1]>ma){\n//                ma = dp[j][j+n-1];\n//                li.clear();\n//                li.add(j);\n//            }\n//\n//        }\n\n\n//        println(ma);\n//        for(int u:li){\n//            print(u+\" \");\n//        }\n//        println();\n\n\n\n\n\n\n\n\n\n\n\n\n\n//        println(get(490));\n\n\n\n\n\n\n\n//        int num =1;\n//      while(true) {\n//          int n = ni();\n//          int m = ni();\n//          if(n==0&&m==0) break;\n//          int p[] = new int[n];\n//          int d[] = new int[n];\n//          for(int j=0;j<n;++j){\n//              p[j] = ni();\n//              d[j] = ni();\n//          }\n//          int dp[][] = new int[8001][22];\n//          int choose[][] = new int[8001][22];\n//\n//          for(int v=0;v<=8000;++v){\n//              for(int u=0;u<=21;++u) {\n//                  dp[v][u] = -100000;\n//                  choose[v][u] =-1;\n//              }\n//          }\n//          dp[4000][0] = 0;\n//\n//          for(int j=0;j<n;++j){\n//             for(int g = m-1 ;g>=0; --g){\n//                 if(p[j] - d[j]>=0) {\n//                     for (int v = 4000; v >= -4000; --v) {\n//                         if (v + 4000 + p[j] - d[j] >= 0 && v + 4000 + p[j] - d[j] <= 8000 && dp[v + 4000][g] >= 0) {\n//                             int ck1 = dp[v + 4000 + p[j] - d[j]][g + 1];\n//                             if (ck1 < dp[v + 4000][g] + p[j] + d[j]) {\n//                                 dp[v + 4000 + p[j] - d[j]][g + 1] = dp[v + 4000][g] + p[j] + d[j];\n//                                 choose[v + 4000 + p[j] - d[j]][g + 1] = j;\n//                             }\n//                         }\n//\n//                     }\n//                 }else{\n//                     for (int v = -4000; v <= 4000; ++v) {\n//                         if (v + 4000 + p[j] - d[j] >= 0 && v + 4000 + p[j] - d[j] <= 8000 && dp[v + 4000][g] >= 0) {\n//                             int ck1 = dp[v + 4000 + p[j] - d[j]][g + 1];\n//                             if (ck1 < dp[v + 4000][g] + p[j] + d[j]) {\n//                                 dp[v + 4000 + p[j] - d[j]][g + 1] = dp[v + 4000][g] + p[j] + d[j];\n//                                 choose[v + 4000 + p[j] - d[j]][g + 1] = j;\n//                             }\n//                         }\n//\n//                     }\n//\n//\n//\n//\n//\n//                 }\n//             }\n//          }\n//          int big = 0;\n//          int st = 0;\n//          boolean ok = false;\n//          for(int v=0;v<=4000;++v){\n//              int v1 = -v;\n//              if(dp[v+4000][m]>0){\n//                  big = dp[v+4000][m];\n//                  st = v+4000;\n//                  ok = true;\n//              }\n//              if(dp[v1+4000][m]>0&&dp[v1+4000][m]>big){\n//                  big = dp[v1+4000][m];\n//                  st = v1+4000;\n//                  ok = true;\n//              }\n//              if(ok){\n//                  break;\n//              }\n//          }\n//          int f = 0;\n//          int s = 0;\n//          List<Integer> res = new ArrayList<>();\n//          while(choose[st][m]!=-1){\n//              int j = choose[st][m];\n//              res.add(j+1);\n//              f += p[j];\n//              s += d[j];\n//              st -= p[j]-d[j];\n//              m--;\n//          }\n//          Collections.sort(res);\n//          println(\"Jury #\"+num);\n//          println(\"Best jury has value \" + f + \" for prosecution and value \" + s + \" for defence:\");\n//          for(int u=0;u<res.size();++u){\n//              print(\" \");\n//              print(res.get(u));\n//          }\n//          println();\n//          println();\n//          num++;\n//      }\n\n\n//    int n = ni();\n//    int m = ni();\n//\n//    int dp[][] = new int[n][4];\n//\n//    for(int i=0;i<n;++i){\n//        for(int j=0;j<m;++j){\n//            for(int c = 0;c<4;++c){\n//                if(c==0){\n//                    dp[i][j][] =\n//                }\n//            }\n//        }\n//    }\n\n\n\n\n\n    }\n\n\n    static void pushdown(int num, int le, int ri) {\n\n    }\n\n\n    long gcd(long a, long b) {\n        return b == 0 ? a : gcd(b, a % b);\n    }\n\n    InputStream is;\n    PrintWriter out;\n\n    void run() throws Exception {\n        is = System.in;\n        out = new PrintWriter(System.out);\n        solve();\n        out.flush();\n    }\n\n    private byte[] inbuf = new byte[1024];\n    public int lenbuf = 0, ptrbuf = 0;\n\n    private int readByte() {\n        if (lenbuf == -1) throw new InputMismatchException();\n        if (ptrbuf >= lenbuf) {\n            ptrbuf = 0;\n            try {\n                lenbuf = is.read(inbuf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (lenbuf <= 0) return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n\n    private boolean isSpaceChar(int c) {\n        return !(c >= 33 && c <= 126);\n    }\n\n    private int skip() {\n        int b;\n        while ((b = readByte()) != -1 && isSpaceChar(b)) ;\n        return b;\n    }\n\n    private double nd() {\n        return Double.parseDouble(ns());\n    }\n\n    private char nc() {\n        return (char) skip();\n    }\n\n    private char ncc() {\n        int b = b = readByte();\n        return (char) b;\n    }\n\n    private String ns() {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n\n    private char[] ns(int n) {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while (p < n && !(isSpaceChar(b))) {\n            buf[p++] = (char) b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n\n    private String nline() {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while (!isSpaceChar(b) || b == ' ') {\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n\n    private char[][] nm(int n, int m) {\n        char[][] a = new char[n][];\n        for (int i = 0; i < n; i++) a[i] = ns(m);\n        return a;\n    }\n\n    private int[] na(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = ni();\n        return a;\n    }\n\n    private long[] nal(int n) {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nl();\n        return a;\n    }\n\n    private int ni() {\n        int num = 0, b;\n        boolean minus = false;\n        while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) {\n        }\n        ;\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        while (true) {\n            if (b >= '0' && b <= '9') num = (num << 3) + (num << 1) + (b - '0');\n            else return minus ? -num : num;\n            b = readByte();\n        }\n    }\n\n    private long nl() {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) {\n        }\n        ;\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        while (true) {\n            if (b >= '0' && b <= '9') num = num * 10 + (b - '0');\n            else return minus ? -num : num;\n            b = readByte();\n        }\n    }\n\n    void print(Object obj) {\n        out.print(obj);\n    }\n\n    void println(Object obj) {\n        out.println(obj);\n    }\n\n    void println() {\n        out.println();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e6 + 10;\nint c[maxn];\nint start[maxn];\nint ans[maxn];\nint main() {\n  int n, m, d;\n  scanf(\"%d%d%d\", &n, &m, &d);\n  int en = n + 1;\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &c[i]);\n  }\n  for (int i = m; i >= 1; i--) {\n    en -= c[i];\n    start[i] = en;\n  }\n  int le = 1, posi = 0;\n  for (int i = 1; i <= m; i++) {\n    posi += d;\n    if (posi >= start[i]) {\n      if (posi < start[i] + c[i]) {\n        posi = start[i] + c[i] - 1;\n      }\n      for (int j = start[i]; j < start[i] + c[i]; j++) ans[j] = i;\n    } else {\n      for (int j = posi; j < posi + c[i]; j++) ans[j] = i;\n      posi += c[i];\n      posi -= 1;\n    }\n  }\n  if (posi + d < n + 1)\n    printf(\"NO\\n\");\n  else {\n    printf(\"YES\\n\");\n    for (int i = 1; i <= n; i++) printf(\"%d \", ans[i]);\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nriv=input().split()\nd=d-1\nfor i in range(m):\n    riv[i]=int(riv[i])\ns=0\nfor i in range(m):\n    s+=riv[i]\n\nif (s+(m+1)*d)<n:\n    print('no')\nelse:\n    print('yes')\n    res=[0]*n\n    pas=(n-s)//(m+1)\n    nbplus=(n-s)%(m+1)\n    h=0\n    for j in range(m):\n        if nbplus>0:\n            h+=pas+1\n            nbplus-=1\n        else:\n            h+=pas\n        b=riv[j]\n        while(b>0):\n            res[h]=j+1\n            h+=1\n            b-=1\n    for i in range(n):\n        print(res[i],end=' ')\n        \n        \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class ProblemC {\n\n    public static InputStream inputStream = System.in;\n\n    public static OutputStream outputStream = System.out;\n\n    public static void main(String[] args) {\n        MyScanner scanner = new MyScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int d = scanner.nextInt();\n        d--;\n        List<Integer> list = new ArrayList<>();\n        int s = 0;\n        for (int i = 0; i < m; i++) {\n            int x = scanner.nextInt();\n            list.add(x);\n            s += x;\n        }\n\n\n        if (s + (m + 1) * d < n) {\n            out.println(\"NO\");\n        } else {\n            out.println(\"YES\");\n            List<Integer> jumps = new ArrayList<>();\n            for (int i = 0; i < m; i++) {\n                int x = Math.min(d, n - s);\n                jumps.add(x);\n                n = n - x - list.get(i);\n                s = s - list.get(i);\n            }\n            for (int i = 0; i < m; i++) {\n                for (int j = 0; j < jumps.get(i); j++) {\n                    out.print(\"0 \");\n                }\n                for (int j = 0; j < list.get(i); j++) {\n                    out.print((i + 1) + \" \");\n                }\n            }\n            for (int j = 0; j < n; j++) {\n                out.print(\"0 \");\n            }\n        }\n\n\n        out.flush();\n    }\n\n    private static class MyScanner {\n        private BufferedReader bufferedReader;\n        private StringTokenizer stringTokenizer;\n\n        private MyScanner(InputStream inputStream) {\n            bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        private String next() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        private int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        private long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        private double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        private String nextLine() {\n            String str = \"\";\n            try {\n                str = bufferedReader.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    private static class Pair<F, S> {\n\n        private F first;\n\n        private S second;\n\n        public Pair() {\n        }\n\n        public Pair(F first, S second) {\n            this.first = first;\n            this.second = second;\n        }\n    }\n\n    private static class Triple<F, S, T> {\n\n        private F first;\n\n        private S second;\n\n        private T third;\n\n        public Triple() {\n        }\n\n        public Triple(F first, S second, T third) {\n            this.first = first;\n            this.second = second;\n            this.third = third;\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.math.RoundingMode;\nimport java.security.KeyStore.Entry;\nimport java.text.DecimalFormat;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport javax.net.ssl.SSLContext;\n\npublic class Main\n{ \n   static long mod=(long)(1e+9 + 7);\n   static int[] sieve;\n   static ArrayList<Integer> primes;\n   static long min=Long.MAX_VALUE;\n   static int cell[];\n   \n   \n   public static void main(String[] args) throws java.lang.Exception\n   {\t  \t\n\t     fast s = new fast();\n\t     PrintWriter out=new PrintWriter(System.out);\n\t     \n\t     int t=1;\n\t     \n\t     while(t>0)\n\t    \t {\n\t    \t\t int n=s.nextInt();\n\t    \t\t int m=s.nextInt();\n\t    \t\t int dist=s.nextInt();\n\t    \t\t \n\t    \t\t int plat[]=new int[m+2];\n\t    \t\t cell=new int[n+2];\n\t    \t\t for(int i=1;i<=m;i++) plat[i]=s.nextInt();\n\t    \t\t int temp=n;\n\t    \t\t \n\t    \t\t int sum=0;\n\t    \t\t for(int i=1;i<=m;i++) sum+=plat[i];\n\t    \t\t sum++;\n\t    \t\t n++;\n\t    \t\t \n\t    \t\t int cur_pos=0;\t    \t\t \n\t    \t\t for(int i=1;i<=m;i++)\n\t    \t\t\t {\n\t    \t\t\t\t int start=n-sum+1; //start point of leftmost platform\n\t    \t\t\t\t if(cur_pos+dist>=start)\n\t    \t\t\t\t\t cur_pos=start+plat[i]-1; //No need to shift platform to left\n\t    \t\t\t\t else\n\t    \t\t\t\t\t cur_pos=cur_pos+dist+plat[i]-1; //Shift platform to left\n\n\t    \t\t\t\t for(int j=cur_pos;j>cur_pos-plat[i];j--)\n\t    \t\t\t\t\t cell[j]=i;\n\n\t    \t    \t\t sum-=plat[i];\n\t    \t\t\t }\n\t    \t\t \n\t    \t\t if(cur_pos+dist<temp+1) System.out.println(\"NO\");\n\t    \t\t else\n\t    \t\t\t {\n\t    \t\t\t\t System.out.println(\"YES\");\n\t    \t    \t\t for(int i=1;i<=temp;i++) System.out.print(cell[i]+\" \");\n\t    \t\t\t }\n                 t--;\n\t    \t }\n   }\n  \n \n \nstatic class fast {   \n\t    private InputStream i;\n\t\tprivate byte[]  buf = new byte[1024];\n\t\tprivate int curChar;\n\t\t\n\t\tprivate int numChars;\n\t\t\n\t\t//Return floor log2n\n\t\tpublic static long log2(long bits) // returns 0 for bits=0\n\t\t\t{\n\t\t\t    int log = 0;\n\t\t\t    if( ( bits & 0xffff0000 ) != 0 ) { bits >>>= 16; log = 16; }\n\t\t\t    if( bits >= 256 ) { bits >>>= 8; log += 8; }\n\t\t\t    if( bits >= 16  ) { bits >>>= 4; log += 4; }\n\t\t\t    if( bits >= 4   ) { bits >>>= 2; log += 2; }\n\t\t\t    return log + ( bits >>> 1 );\n\t\t\t}\n\t\t\n\t\tpublic static boolean next_permutation(int a[])\n\t\t   {\n\t\t\t   int i=0,j=0;int index=-1;\t   \n\t\t\t   int n=a.length;\n\t\t\t   \n\t\t\t   for(i=0;i<n-1;i++)\n\t\t\t\t   if(a[i]<a[i+1]) index=i;\n\t\t\t   \n\t\t\t   if(index==-1) return false;\n\t\t\t   i=index;\n \n\t\t\t  \n\t\t\t   for(j=i+1;j<n && a[i]<a[j];j++);\n \n\t\t\t   int temp=a[i];\n\t\t\t   a[i]=a[j-1];\n\t\t\t   a[j-1]=temp;\n\t\t\t   \t   \n\t\t\t   for(int p=i+1,q=n-1;p<q;p++,q--)\n\t\t\t   {\n\t\t\t\t   temp=a[p];\n\t\t\t\t   a[p]=a[q];\n\t\t\t\t   a[q]=temp;\n\t\t\t   }\n\t\t\t   \n\t\t\t   return true;\n\t\t   }\n\t\t   \n\t\t   \n\t\tpublic static void division(char ch[],int divisor)\n\t\t   {\n\t\t\t   int div=Character.getNumericValue(ch[0]); int mul=10;int remainder=0;\n\t\t\t   StringBuilder quotient=new StringBuilder(\"\");\n\t\t\t   for(int i=1;i<ch.length;i++)\n\t\t\t   {\n\t\t\t\t   div=div*mul+Character.getNumericValue(ch[i]);\t\n\t\t\t\t   if(div<divisor) {quotient.append(\"0\");continue;}\n\t\t\t\t   quotient.append(div/divisor);\n\t\t\t\t   div=div%divisor;mul=10;\n\t\t\t\t   \n\t\t\t   } \n\t\t\t   remainder=div;\n\t\t\t   while(quotient.charAt(0)=='0')quotient.deleteCharAt(0);\t   \n\t\t\t   System.out.println(quotient+\" \"+remainder);\t  \n\t\t   }\n\t\t\n\t\tpublic static void sieve(int size)\n\t\t{\n\t\t\tsieve=new int[size+1];\n\t\t\t\n\t\t\tprimes=new ArrayList<Integer>();\n\t\t\t\n\t\t\tsieve[1]=1;\n\t\t\t\n\t\t\tfor(int i=2;i*i<=size;i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0)\n\t\t\t\t {\n\t\t\t\t\tfor(int j=i*i;j<size;j+=i) {sieve[j]=1;}\n\t\t\t\t }\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=2;i<=size;i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0) primes.add(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static long pow(long n, long b, long MOD)\n\t\t   {\n\t\t       long x=1;long y=n; \n\t\t       while(b > 0)\n\t\t       {\n\t\t           if(b%2 == 1)\n\t\t           {\n\t\t               x=x*y;\n\t\t               if(x>MOD) x=x%(MOD);\n\t\t           }\n\t\t           y = y*y;\n\t\t           if(y>MOD) y=y%(MOD); \n\t\t           b >>= 1;\n\t\t       }\n\t\t       return x;\n\t\t   }\n \n \n\t\tpublic static long mod_inv(long n,long mod)\n\t\t{\n\t\t\treturn pow(n,mod-2,mod);\n\t\t}\n\t\t\n\t\t//Returns index of highest number less than or equal to key\n\t\t public static int upper(long[] a,int length,long key)\n\t\t {\n\t\t\t    int low = 0;\n\t\t        int high = length-1;\n\t\t        int ans=-1;\n\t\t        \n\t\t        while (low <= high) {\n\t\t            int mid = (low + high) / 2;\n\t\t            if (key >= a[mid]) {\n\t\t                ans=mid;\n\t\t            \tlow = mid+1;\n\t\t            } else if(a[mid]>key){\n\t\t                high = mid - 1;\n\t\t            }\n\t\t        }\n\t\t        return ans;\n\t\t}\n\t\t\n\t\t//Returns index of least number greater than or equal to key\n\t\t public static int lower(long[] a,int length,long key)\n\t\t {\n\t\t\t    int low = 0;\n\t\t        int high = length-1;\n\t\t        int ans=-1;\n\t\t        \n\t\t        while (low <= high) {\n\t\t            int mid = (low + high) / 2;\n\t\t            if (key<=a[mid]) {\n\t\t                ans=mid;\n\t\t            \thigh = mid-1;\n\t\t            }\n\t\t            else{\n\t\t            \t\tlow=mid+1;\n\t\t            \t}\n\t\t        }\n\t\t        return ans;\n\t\t} \n\t\t   \n\t\tpublic long gcd(long r,long ans)\n\t\t{\n\t\t\tif(r==0) return ans;\n\t\t\treturn gcd(ans%r,r);\n\t\t}\n\t\tpublic fast() {\n\t\t\tthis(System.in);\n\t\t}\n\t\tpublic fast(InputStream is) {\n\t\t\ti = is;\n\t\t}\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = i.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic String nextString() {\n     \t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t\tpublic boolean isEndOfLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n \n\t}\t\n}"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/contest/1256/problem/C\n\nn, m, d = map(int, input().split())\nc       = [0] + list(map(int, input().split()))\n\ndef solve(c, d, n):\n    max_l = 0\n    \n    for x in c:\n        max_l += x + (d-1)\n    max_l += 1\n    \n    if max_l < n+1:\n        return 'NO', None\n    \n    ans = [0] * n\n    \n    max_l   -= d\n    div, re  = 0, 0\n    \n    if max_l > n and d > 1:\n        div = (max_l-n) // (d-1)\n        re  = (d-1) - ((max_l-n) %  (d-1))\n        \n        if re == (d-1):\n            re = 0\n        \n    s = -1    \n    for i, x in  enumerate(c[1:]):\n        if div > 0:\n            div -= 1\n            \n        elif re > 0:\n            s   += re \n            re   = 0\n        else:\n            s   += (d-1)\n            \n        for _ in range(x):\n            s+=1\n            ans[s] = i+1\n            \n    return 'YES', ans\n\nflg, ans = solve(c, d, n)\nif flg == 'NO':\n    print(flg)\nelse:\n    print(flg)\n    print(' '.join([str(x) for x in ans]))\n#7 3 2\n#1 2 1\n\n#10 1 11\n#1\n\n#10 1 5\n#2\n\n#9 3 4\n#2 3 3\n\n#24 4 4\n#4 4 5"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long sum, d, kk, qq;\nint main() {\n  long long n, m, k;\n  cin >> n >> m >> k;\n  long long a[m], b[1001];\n  for (int i = 0; i < m; ++i) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  sum = n - sum;\n  if ((sum + m) / (m + 1) >= k) {\n    cout << \"NO\";\n    return 0;\n  }\n  d = (sum + m) / (m + 1);\n  for (int i = 0; i < m; ++i) {\n    for (int j = 0; j < d; ++j) {\n      if (kk == sum) break;\n      b[qq] = 0;\n      ++qq;\n      ++kk;\n    }\n    for (int j = 0; j < a[i]; ++j) {\n      b[qq] = i + 1;\n      ++qq;\n    }\n  }\n  cout << \"YES\\n\";\n  for (int i = 0; i < n; ++i) {\n    cout << b[i] << \" \";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# Contest: Codeforces Round #598 (Div. 3) (https://codeforces.com/contest/1256)\n# Problem: C: Platforms Jumping (https://codeforces.com/contest/1256/problem/C)\n\ndef rint():\n    return int(input())\n\n\ndef rints():\n    return list(map(int, input().split()))\n\n\nn, m, d = rints()\nc = rints()\nsumc = sum(c)\nif d == 1:\n    if sumc < n:\n        print('NO')\n        exit(0)\n    print('YES')\n    for i, ci in enumerate(c):\n        for _ in range(ci):\n            print(i + 1, end=' ')\n    print()\n    exit(0)\n\nwater = n - sumc\nif water / (d - 1) > m + 1:\n    print('NO')\n    exit(0)\n\nprint('YES')\nfor i, ci in enumerate(c):\n    if water:\n        for _ in range(min(water, d - 1)):\n            print(0, end=' ')\n        water -= min(water, d - 1)\n    for _ in range(ci):\n        print(i + 1, end=' ')\nif water:\n    for _ in range(water):\n        print(0, end=' ')\nprint()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = acos(-1.0);\nvoid err(istream_iterator<string> it) {}\ntemplate <typename T, typename... Args>\nvoid err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << a << \"  , \";\n  err(++it, args...);\n}\ntemplate <typename... T>\nvoid print(T... args) {\n  ((cout << args << \" \"), ...);\n}\ntemplate <typename... T>\nvoid read(T &...args) {\n  ((cin >> args), ...);\n}\ntemplate <class T, class U>\ninline void checkmin(T &x, U y) {\n  if (y < x) x = y;\n}\ntemplate <class T, class U>\ninline void checkmax(T &x, U y) {\n  if (y > x) x = y;\n}\ntemplate <class T, class U>\ninline bool ifmax(T &x, U y) {\n  if (y > x) return x = y, true;\n  return false;\n}\ntemplate <class T, class U>\ninline bool ifmin(T &x, U y) {\n  if (y < x) return x = y, true;\n  return false;\n}\ntemplate <class T>\ninline void sort(T &a) {\n  sort(a.begin(), a.end());\n}\ntemplate <class T>\ninline void rsort(T &a) {\n  sort(rall(a));\n}\ntemplate <class T>\ninline void reverse(T &a) {\n  reverse(a.begin(), a.end());\n}\ntemplate <class T, class U>\ninline istream &operator>>(istream &str, pair<T, U> &p) {\n  return str >> p.first >> p.second;\n}\ntemplate <class T>\ninline istream &operator>>(istream &str, vector<T> &a) {\n  for (auto &i : a) str >> i;\n  return str;\n}\nvoid solve() {\n  long long n, m, d;\n  read(n, m, d);\n  vector<long long> v(m);\n  long long sum = 0;\n  for (long long i = 0; i < m; i++) read(v[i]), sum += v[i];\n  sum += ((d - 1) * (m + 1));\n  if (n <= sum) {\n    long long diff = sum - n;\n    if (d == 1) {\n      long long cnt = 1;\n      cout << \"YES\"\n           << \"\\n\";\n      for (long long i = 0; i < m; i++) {\n        long long w = v[i];\n        while (w--) cout << cnt << \" \";\n        cnt++;\n      }\n      cout << \"\\n\";\n    } else {\n      long long times = diff / (d - 1);\n      long long rem = diff % (d - 1);\n      vector<vector<long long>> gaps(m + 1);\n      for (long long i = 0; i < m + 1; i++) {\n        for (long long j = 0; j < d - 1; j++) gaps[i].push_back(1);\n      }\n      long long i = 0;\n      while (times--) {\n        gaps[i].clear();\n        i++;\n      }\n      while (rem--) {\n        gaps[i].pop_back();\n      }\n      long long j = 0;\n      vector<long long> ans;\n      while (!gaps[j].empty()) {\n        ans.push_back(0);\n        gaps[j].pop_back();\n      }\n      j++;\n      for (long long i = 0; i < m; i++) {\n        while (v[i]--) ans.push_back(i + 1);\n        while (!gaps[j].empty()) {\n          ans.push_back(0);\n          gaps[j].pop_back();\n        }\n        j++;\n      }\n      cout << \"YES\"\n           << \"\\n\";\n      for (auto ele : ans) cout << ele << \" \";\n      cout << \"\\n\";\n      return;\n    }\n  } else\n    cout << \"NO\"\n         << \"\\n\";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#  =========     /\\       /|    |====/|\n#      |        /  \\       |    |   / |\n#      |       /____\\      |    |  /  |\n#      |      /      \\     |    | /   |\n#  ========= /        \\  =====  |/====|  \n#  code\n\ndef main():\n    n,m,d = map(int,input().split())\n    c = list(map(int,input().split()))\n    s = sum(c)\n    if (m + 1)*d + s - m < n + 1:\n        print('NO')\n        return\n\n    a = [0]*n\n    \n    last = n\n    k = m\n    for i in c[::-1]:\n        for j in range(last - i , last):\n            a[j] = k\n        k -= 1\n        last -= i\n    # print(a)\n    start = -1\n    k = 0\n    while True:\n        if start + d < n and a[start + d] == 0:\n            for i in range(n):\n                if a[i] == k + 1:\n                    a[i] = 0\n            for i in range(start + d , start + d + c[k]):\n                a[i] = k + 1\n            start = start + d + c[k] - 1\n            k += 1\n        else:\n            break\n    if start + d >= n or (start + d < n and a[start + d] > 0):\n        print('YES')\n        print(*a)\n    else:\n        print('NO')\n    return\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = (long long)1e9 + 7;\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = (int)1e3 + 10;\nstruct Wood {\n  int l, c;\n} w[MAXN];\nint ans[MAXN];\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int sum = 0;\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &w[i].c);\n    sum += w[i].c;\n  }\n  int pos = 0, idx = 1;\n  while (idx <= m + 1) {\n    if (idx == m + 1) {\n      if (pos + d > n) pos += d;\n      break;\n    }\n    int x = pos + d;\n    int left = n - sum + 1;\n    w[idx].l = x = min(x, left);\n    pos = x + w[idx].c - 1;\n    sum -= w[idx].c;\n    idx++;\n  }\n  if (pos < n) {\n    puts(\"NO\");\n    return 0;\n  }\n  for (int i = 1; i <= m; i++) {\n    for (int j = w[i].l; j <= w[i].l + w[i].c - 1 && j <= n; j++) {\n      ans[j] = i;\n    }\n  }\n  puts(\"YES\");\n  for (int i = 1; i <= n; i++) {\n    printf(\"%d%c\", ans[i], \" \\n\"[i == n]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nb=[0] + list(map(int,input().split()))\ns=sum(b)\nind=1\nans=[0]*(n+1)\ni=1\nprev=0\n# print(b)\nif (s + len(b)*(d-1))<n:\n    print(\"NO\")\n    exit()\nwhile i<n+1:\n    if s>=(n+1-i):\n        j=0\n        while j<b[ind]:\n            ans[i]=ind\n            # print(ans[1:],i)\n            \n            prev=i\n            i+=1\n            j+=1\n        s-=b[ind]\n        ind+=1    \n    elif i-prev>=d:\n        j=0\n        while j<b[ind]:\n            ans[i]=ind\n            # print(i,ans[1:],ind,b[ind])\n            prev=i\n            i+=1\n            j+=1\n        # print()    \n        s-=b[ind]    \n        ind+=1\n    else:    \n        i+=1\nprint(\"YES\")        \nprint(*ans[1:])    \n    \n            \n        \n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid file() {}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  file();\n  int testCases = 1;\n  while (testCases--) {\n    int n, m, d;\n    cin >> n >> m >> d;\n    vector<int> plat(m);\n    int sum = 0;\n    for (long long i = 0; i < m; i++) {\n      cin >> plat[i];\n      sum += plat[i];\n    }\n    int cur = 0;\n    int dest = n + 1;\n    int least = dest - d;\n    int dif = least - sum;\n    if (dif > (d - 1) * m) {\n      cout << \"NO\";\n      continue;\n    }\n    cout << \"YES\"\n         << \"\\n\";\n    vector<int> ans(n + 1, 0);\n    if (dif <= 0) {\n      int cur = 1;\n      int itr = 0;\n      while (itr < m) {\n        int l = cur, r = cur + plat[itr] - 1;\n        for (long long i = l; i <= r; i++) {\n          ans[i] = itr + 1;\n        }\n        cur += plat[itr];\n        itr += 1;\n      }\n      reverse(ans.begin(), ans.end());\n      ans.pop_back();\n      reverse(ans.begin(), ans.end());\n      for (auto it : ans) {\n        cout << it << ' ';\n      }\n      continue;\n    }\n    int itr = 0;\n    vector<pair<int, int>> range;\n    while (sum < least) {\n      int l, r;\n      l = cur + d;\n      r = l + plat[itr] - 1;\n      range.push_back({l, r});\n      cur = r;\n      itr++;\n      sum += d - 1;\n    }\n    while (itr < m) {\n      int l = cur + 1, r = l + plat[itr] - 1;\n      range.push_back({l, r});\n      cur = r;\n      itr++;\n    }\n    for (long long i = 0; i < m; i++) {\n      int l = range[i].first, r = range[i].second;\n      for (long long j = l; j <= r; j++) {\n        ans[j] = i + 1;\n      }\n    }\n    reverse(ans.begin(), ans.end());\n    ans.pop_back();\n    reverse(ans.begin(), ans.end());\n    for (auto it : ans) {\n      cout << it << ' ';\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.buffer.readline\n\nn,m,d = map(int,input().split())\nc = list(map(int,input().split()))\n\nssum = [0]*(m+1)\nfor i in range(m-1,-1,-1):\n    ssum[i] = c[i] + ssum[i+1]\noutput = [0]*n\n\npos = 0\nfor i in range(m):\n    if n - pos <= d - 1 + ssum[i]:\n        for j in range(i,m):\n            for k in range(c[j]):\n                output[pos] = j+1\n                pos += 1\n        break\n    else:\n        for j in range(pos+d,pos+d+c[i]):\n            output[j-1] = i+1\n        pos = pos + d + c[i] - 1\n\nif pos + d >= n+1:\n    print(\"YES\")\n    print(*output)\nelse:\n    print(\"NO\")\n"
        },
        {
            "language": 4,
            "solution": "import javax.print.DocFlavor;\nimport java.io.*;\nimport java.util.*;\n\npublic class Main implements Runnable {\n    static boolean use_n_tests = false;\n    static int stack_size = 1 << 27;\n\n    void solve(FastScanner in, PrintWriter out, int testNumber) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int d = in.nextInt();\n        int[] c = new int[m];\n        int sum = 0;\n        for (int i = 0; i < c.length; i++) {\n            c[i] = in.nextInt();\n            sum += c[i];\n        }\n        int maxSpace = (n - sum) / (m + 1);\n        if ((n - sum) % (m + 1) != 0) {\n            maxSpace++;\n        }\n        int[] result = new int[n];\n        if (maxSpace <= d - 1) {\n            out.println(\"YES\");\n            int sp = (n - sum) / (m + 1);\n            int cnt = (n - sum) % (m + 1);\n            int cur = 0;\n            for (int i = 1; i <= m; i++) {\n                if (i <= cnt) {\n                    cur += sp + 1;\n                } else {\n                    cur += sp;\n                }\n                for (int j = 0; j < c[i - 1]; j++) {\n                    result[cur + j] = i;\n                }\n                cur += c[i - 1];\n            }\n            for (int x : result) {\n                out.print(x + \" \");\n            }\n            out.println();\n        } else {\n            out.println(\"NO\");\n        }\n\n\n    }\n\n    // ****************************** template code ***********\n\n    class Coeff {\n        long mod;\n        long[][] C;\n        long[] fact;\n        boolean cycleWay = false;\n\n        Coeff(int n, long mod) {\n            this.mod = mod;\n            fact = new long[n + 1];\n            fact[0] = 1;\n            for (int i = 1; i <= n; i++) {\n                fact[i] = i;\n                fact[i] %= mod;\n                fact[i] *= fact[i - 1];\n                fact[i] %= mod;\n            }\n        }\n\n        Coeff(int n, int m, long mod) {\n            // n > m\n            cycleWay = true;\n            this.mod = mod;\n            C = new long[n + 1][m + 1];\n            for (int i = 0; i <= n; i++) {\n                for (int j = 0; j <= Math.min(i, m); j++) {\n                    if (j == 0 || j == i) {\n                        C[i][j] = 1;\n                    } else {\n                        C[i][j] = C[i - 1][j - 1] + C[i - 1][j];\n                        C[i][j] %= mod;\n                    }\n                }\n            }\n        }\n\n        public long C(int n, int m) {\n            if (cycleWay) {\n                return C[n][m];\n            }\n            return fC(n, m);\n        }\n\n        private long fC(int n, int m) {\n            return (fact[n] * inv(fact[n - m] * fact[m] % mod)) % mod;\n        }\n\n        private long inv(long r) {\n            if (r == 1)\n                return 1;\n            return ((mod - mod / r) * inv(mod % r)) % mod;\n        }\n    }\n\n    class Pair {\n        int first;\n        int second;\n\n        public int getFirst() {\n            return first;\n        }\n\n        public int getSecond() {\n            return second;\n        }\n    }\n\n    class MultisetTree<T> {\n        int size = 0;\n\n        TreeMap<T, Integer> mp = new TreeMap<>();\n\n        void add(T x) {\n            mp.merge(x, 1, Integer::sum);\n            size++;\n        }\n\n        void remove(T x) {\n            if (mp.containsKey(x)) {\n                mp.merge(x, -1, Integer::sum);\n                if (mp.get(x) == 0) {\n                    mp.remove(x);\n                }\n                size--;\n            }\n        }\n\n        T greatest() {\n            return mp.lastKey();\n        }\n\n        int size() {\n            return size;\n        }\n\n        int diffSize() {\n            return mp.size();\n        }\n    }\n\n    class Multiset<T> {\n        int size = 0;\n\n        Map<T, Integer> mp = new HashMap<>();\n\n        void add(T x) {\n            mp.merge(x, 1, Integer::sum);\n            size++;\n        }\n\n        void remove(T x) {\n            if (mp.containsKey(x)) {\n                mp.merge(x, -1, Integer::sum);\n                if (mp.get(x) == 0) {\n                    mp.remove(x);\n                }\n                size--;\n            }\n        }\n\n        int size() {\n            return size;\n        }\n\n        int diffSize() {\n            return mp.size();\n        }\n    }\n\n    static class Range {\n        int l, r;\n        int id;\n\n        public int getL() {\n            return l;\n        }\n\n        public int getR() {\n            return r;\n        }\n\n        public Range(int l, int r, int id) {\n            this.l = l;\n            this.r = r;\n            this.id = id;\n        }\n    }\n\n    static class Array {\n        static Range[] readRanges(int n, FastScanner in) {\n            Range[] result = new Range[n];\n            for (int i = 0; i < n; i++) {\n                result[i] = new Range(in.nextInt(), in.nextInt(), i);\n            }\n            return result;\n        }\n\n        static public Integer[] read(int n, FastScanner in) {\n            Integer[] out = new Integer[n];\n            for (int i = 0; i < out.length; i++) {\n                out[i] = in.nextInt();\n            }\n            return out;\n        }\n\n        static public int[] readint(int n, FastScanner in) {\n            int[] out = new int[n];\n            for (int i = 0; i < out.length; i++) {\n                out[i] = in.nextInt();\n            }\n            return out;\n        }\n    }\n\n    class Graph {\n        List<List<Integer>> create(int n) {\n            List<List<Integer>> graph = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                graph.add(new ArrayList<>());\n            }\n            return graph;\n        }\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(InputStream io) {\n            br = new BufferedReader(new InputStreamReader(io));\n        }\n\n        public String line() {\n            String result = \"\";\n            try {\n                result = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return result;\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n    void run_t_tests() {\n        int t = in.nextInt();\n        int i = 0;\n        while (t-- > 0) {\n            solve(in, out, i++);\n        }\n    }\n\n    void run_one() {\n        solve(in, out, -1);\n    }\n\n    @Override\n    public void run() {\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n        if (use_n_tests) {\n            run_t_tests();\n        } else {\n            run_one();\n        }\n        out.close();\n    }\n\n    static FastScanner in;\n    static PrintWriter out;\n\n    public static void main(String[] args) throws InterruptedException {\n        Thread thread = new Thread(null, new Main(), \"\", stack_size);\n        thread.start();\n        thread.join();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int M = 1e9 + 7;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n, m, d;\n  cin >> n >> m >> d;\n  int planks[m];\n  for (int i = 0; i < m; i++) {\n    cin >> planks[i];\n  }\n  int sum = 0;\n  for (int i = 0; i < m; i++) {\n    sum += planks[i];\n  }\n  if ((d - 1) * (m + 1) + sum < n) {\n    cout << \"NO\\n\";\n  } else {\n    if (d == 1) {\n      cout << \"YES\\n\";\n      for (int i = 0; i < m; i++) {\n        for (int j = 1; j <= planks[i]; j++) {\n          cout << i + 1 << \" \";\n        }\n      }\n      cout << \"\\n\";\n    } else {\n      int gaps = n - sum, count = gaps / (d - 1), rem = gaps % (d - 1);\n      count++;\n      int ans[n], index = 0;\n      memset(ans, 0, sizeof(ans));\n      for (int i = 0; i < n;) {\n        if (count > 1) {\n          for (int j = 0; j < d - 1; j++) {\n            ans[i + j] = 0;\n          }\n          i += d - 1;\n          count--;\n        } else if (count == 1) {\n          for (int j = 0; j < rem; j++) {\n            ans[i + j] = 0;\n          }\n          i += rem;\n          count--;\n        }\n        if (index >= m) {\n          break;\n        }\n        for (int j = 0; j < planks[index]; j++) {\n          ans[i + j] = index + 1;\n        }\n        i += planks[index];\n        index++;\n      }\n      cout << \"YES\\n\";\n      for (int i = 0; i < n; i++) {\n        cout << ans[i] << \" \";\n      }\n      cout << \"\\n\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\nn, m, d = map(int, input().split())\nd -= 1\na = list(map(int, input().split()))\ni = 1\nans = []\nl = n - sum(a)\nwhile l:\n    t = [0] * min(l, d)\n    l -= len(t)\n    ans.extend(t)\n    if a:\n        ans.extend([i]*a.pop(0))\n        i += 1\n    else:\n        if l > 0:break\nwhile a:\n    ans.extend([i]*a.pop(0))\n    i += 1\nif len(ans) == n:\n    print(\"YES\")\n    print(*ans)\nelse:print(\"NO\")"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n// scanner.nextInt();\n// gatogari.\npublic class Solution {\n    public static void main(String[] args) {       \n\n        Scanner scanner = new Scanner(System.in);\n        \n            \tint n = scanner.nextInt();\n            \tint m = scanner.nextInt();\n            \tint d = scanner.nextInt();         \t\n                int[] array = new int[m];\n                int[] pref = new int[m];\n                int suma = (m+1)*(d-1);\n                for(int i = 0; i < m; ++i)\n                    {\n                        array[i] = scanner.nextInt();\n                        suma += array[i];\n                        if(i == 0) pref[i] = array[i];\n                        else pref[i] = array[i] + pref[i-1];\n                    }\n                \n                if(suma < n)\n                {\n                \tSystem.out.println(\"NO\");\n                \t\n                }\n                else\n                {\n                \tSystem.out.println(\"YES\");\n                \tString t = \"\";\n                \tfor(int i = 0; i < m;++i)\n                \t{\n                \t\tfor (int j = 0; j < array[i]; j++) {\n\t\t\t\t\t\t\tt += (i+1) + \" \";\n\t\t\t\t\t\t}\n                \t}      \n                \tint index = 0;\n                \tint jj = 0;\n                \tint longitud = pref[m-1];\n                \t\n                \tif(longitud != n){\n                \t\tint longitud_real = longitud;\n                \t\tlongitud = 0;              \t\t\n                \t\twhile(longitud != n)\n                \t\t{               \t\t\t\n                \t\t\tString cero = \"\";\n                    \t\tint ceros = n-longitud_real;\n                    \t\tfor(int j = 0; j < Math.min(d-1, ceros); ++j)\n                    \t\t\tcero += \"0 \";\n                    \t\tif(jj < m)\n                    \t\t{\n                    \t\t\tSystem.out.print(cero);\n                    \t\t\tfor(int i = 0; i < array[jj]; ++i)\n                    \t\t\t{\n                    \t\t\t\tSystem.out.print((jj+1) + \" \");\n                    \t\t\t}\n                    \t\t\tlongitud += array[jj];\n                    \t\t\tlongitud_real += Math.min(d-1, ceros);\n                        \t\tindex+=array[jj];\n                        \t\t++jj;\n                    \t\t}\n                    \t\telse\n                    \t\t{\n                    \t\t\tSystem.out.print(cero);\n                    \t\t}\n                    \t\tlongitud += Math.min(d-1, ceros);\n                \t\t}System.out.println();\n                \t\t\n                \t\t\n                \t}  \n                \telse System.out.println(t);\n                \t\t\n                \t\t\n                }\n                 \n                 /*String[] arr = {\"a\",\"b\",\"c\", \"d\",\"e\", \"f\" , \"g\" , \"h\", \"i\" , \"j\" , \"k\" , \"l\", \"m\", \"n\", \"o\", \"p\", \"q\" , \"r\", \"s\", \"t\", \"u\" , \"v\", \"w\" ,\"x\", \"y\", \"z\"};\n                String arr  = \"abcdefghijklmnopqrstuvwxyz\";*/\n            \n                    \n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing ll = long long;\nusing namespace std;\nint main() {\n  cin.tie(0);\n  cin.sync_with_stdio(0);\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> ans(n);\n  vector<int> c(m);\n  int sum = 0;\n  for (auto& x : c) cin >> x, sum += x;\n  int pos = 0;\n  for (int i = 0; i < m; ++i) {\n    int x = c[i];\n    int left = n - pos;\n    int empty = left - sum;\n    int e = min(d - 1, empty);\n    int next = pos + e + 1;\n    fill_n(ans.begin() + next - 1, x, i + 1);\n    pos = next + x - 1;\n    sum -= x;\n  }\n  if (pos + d >= n + 1) {\n    cout << \"YES\\n\";\n    for (auto x : ans) cout << x << ' ';\n  } else {\n    cout << \"NO\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n >> m >> d;\n  vector<int> ans(1e7);\n  vector<int> a(m);\n  vector<int> res;\n  int sum = 0;\n  for (int i = 0; i < m; ++i) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  bool ok = true;\n  int pos = d;\n  for (int i = 0; i < m; ++i) {\n    for (int j = pos; j <= pos + (a[i] - 1); ++j) {\n      ans[j] = i + 1;\n    }\n    pos += (a[i] - 1);\n    for (int j = pos + 1; j < pos + d - 1; ++j) {\n      ans[j] = 0;\n    }\n    pos += d;\n  }\n  if (pos <= n) {\n    cout << \"NO\" << '\\n';\n    return 0;\n  }\n  --pos;\n  int cnt = pos - n;\n  for (int i = pos; i >= 1; --i) {\n    if (ans[i] == 0) {\n      if (cnt)\n        --cnt;\n      else\n        res.push_back(0);\n    } else {\n      res.push_back(ans[i]);\n    }\n  }\n  cout << \"YES\" << '\\n';\n  reverse(res.begin(), res.end());\n  for (auto it : res) {\n    cout << it << \" \";\n  }\n  cout << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "// practice with kaiboy\nimport java.io.*;\nimport java.util.*;\n\npublic class CF1256C extends PrintWriter {\n\tCF1256C() { super(System.out, true); }\n\tScanner sc = new Scanner(System.in);\n\tpublic static void main(String[] $) {\n\t\tCF1256C o = new CF1256C(); o.main(); o.flush();\n\t}\n\n\tvoid main() {\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint d = sc.nextInt();\n\t\tint[] cc = new int[m];\n\t\tint g = n;\n\t\tfor (int j = 0; j < m; j++)\n\t\t\tg -= cc[j] = sc.nextInt();\n\t\tif (g > (m + 1) * (d - 1)) {\n\t\t\tprintln(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tprintln(\"YES\");\n\t\tfor (int j = 0; j <= m; j++) {\n\t\t\tint h = Math.min(g, d - 1);\n\t\t\tg -= h;\n\t\t\twhile (h-- > 0)\n\t\t\t\tprint(\"0 \");\n\t\t\tif (j == m)\n\t\t\t\tbreak;\n\t\t\twhile (cc[j]-- > 0)\n\t\t\t\tprint(j + 1 + \" \");\n\t\t}\n\t\tprintln();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "\nn, m, d = [int(c) for c in str(input()).split()]\nx = [int(c) for c in str(input()).split()]\n\ntab = []\nsomme = sum(x)\ndiff = n - somme\n# if somme * (d+1) >= n:\nif d == 1 and somme < n:\n    print(\"NO\")\nelif d == 1 and somme == n:\n    print(\"YES\")\n    kkl = 1\n    for kk in x:\n        tab.extend([kkl]*kk)\n        kkl += 1\n    print(*tab)\nelif diff // d <= m:\n    j = 0\n    h = 1\n    while j < diff or h <= m:\n        if j < diff:\n            if tab != [] and tab[-1] == 0:\n                print(\"NO\")\n                break\n            if diff - j >= d - 1:\n                tab.extend([0]*(d-1))\n            else:\n                tab.extend([0]*(diff-j))\n            j += d-1\n        if h <= m:\n            tab.extend([h]*x[h-1])\n            h += 1\n    else:\n        print(\"YES\")\n        print(*tab)\nelse:\n    print(\"NO\")\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {1, -1, 0, 0, 1, 1, -1, -1};\nint dy[] = {0, 0, 1, -1, 1, -1, 1, -1};\nconst int MAX = 1e9 + 7;\nconst int mod = 1e9 + 7;\nconst double pi =\n    3.14159265358979323846264338327950288419716939937510582097494459;\nconst double EPS = 1e-10;\nconst int oo = 1e9 + 7;\nconst long long OO = 5e18;\nlong long mulmod(long long a, long long b, long long m) {\n  long long res = 0;\n  while (b > 0) {\n    if (b & 1) res = ((m - res) > a) ? res + a : res + a - m;\n    b >>= 1;\n    if (b) a = ((m - a) > a) ? a + a : a + a - m;\n  }\n  return res;\n}\nlong long power(long long a, long long b, long long m) {\n  if (b == 0) return 1;\n  if (b & 1) return mulmod(a, power(a, b - 1, m), m);\n  long long tmp = power(a, b / 2, m);\n  return mulmod(tmp, tmp, m);\n}\nbool prime(long long n) {\n  for (int i = 0; i < 10; i++) {\n    long long tmp = (rand() % (n - 1)) + 1;\n    if (power(tmp, n - 1, n) != 1) return false;\n  }\n  return true;\n}\nlong long gcd(long long a, long long b) { return b == 0 ? a : gcd(b, a % b); }\nint cmp_dbl(double a, double b) {\n  if (fabs(a - b) <= EPS) return 0;\n  return a < b ? -1 : 1;\n}\nlong long fastpow(long long b, long long e) {\n  if (!e) return 1;\n  if (e & 1) return b * fastpow(b, e - 1);\n  long long x = fastpow(b, e / 2);\n  return x * x;\n}\nlong long ExtGCD(long long a, long long b, long long& x, long long& y) {\n  if (!b) {\n    x = 1;\n    y = 0;\n    return a;\n  }\n  long long r = ExtGCD(b, a % b, y, x);\n  y -= a / b * x;\n  return r;\n}\nint Ceil(int x, int y) { return (x + y - 1) / y; }\nint Round(int x, int y) { return (x > 0) ? (x + y / 2) / y : (x - y / 2) / y; }\nconst int N = 1e5 + 5;\nconst int MOD = 1e9 + 7;\nvoid solve() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int sum = 0;\n  vector<int> c(m + 10);\n  for (int i = 0; i < m; i++) cin >> c[i], sum += c[i];\n  int rem = n - sum;\n  if (rem > (d - 1) * (m + 1)) {\n    cout << \"NO\" << endl;\n    return;\n  }\n  cout << \"YES\" << endl;\n  vector<int> vis(n + 2);\n  int i = 0;\n  int idx = 1;\n  while (idx < n + 1) {\n    int cnt = 0;\n    while (cnt < d - 1 && rem) cnt++, rem--, idx++;\n    cnt = 0;\n    while (cnt < c[i]) vis[idx++] = i + 1, cnt++;\n    i++;\n  }\n  for (int i = 1; i < n + 1; i++) cout << vis[i] << \" \";\n  cout << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  solve();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, m, d, now, sum, k, tmp;\nlong long arr[1000 + 5];\nvector<long long> ans;\nsigned main() {\n  cin >> n >> m >> d;\n  now = 1;\n  for (long long i = 0; i < m; i++) {\n    cin >> arr[i], sum += arr[i];\n    ans.push_back(now + d - 1);\n    now = now + d + arr[i] - 1;\n  }\n  if (now > n) {\n    tmp = now - n - 1;\n    for (long long i = ans.size() - 1; i >= 0 && tmp > 0; i--) {\n      ans[i] -= tmp;\n      if (i) tmp = ans[i - 1] + arr[i - 1] - ans[i];\n    }\n  }\n  if (n - ans[m - 1] - arr[m - 1] + 1 >= d || sum > n)\n    cout << \"NO\" << '\\n';\n  else {\n    cout << \"YES\" << '\\n';\n    now = 1;\n    for (long long i = 0; i < ans.size(); i++) {\n      while (now < ans[i]) cout << 0 << \" \", now++;\n      while (now < ans[i] + arr[i]) cout << i + 1 << \" \", now++;\n    }\n    while (now <= n) cout << 0 << \" \", now++;\n    cout << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst int maxn = 1e3 + 10;\nint n, m, d;\nint c[maxn];\nint ans[maxn];\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> n >> m >> d;\n  int tot = 0;\n  for (int i = 1; i <= m; i++) cin >> c[i], tot += c[i];\n  if (tot + (m + 1) * (d - 1) < n) {\n    cout << \"NO\" << endl;\n    return 0;\n  }\n  cout << \"YES\" << endl;\n  int res = n - tot;\n  int idx;\n  if (d - 1 >= res) {\n    idx = res + 1;\n    res = 0;\n  } else {\n    res -= (d - 1);\n    idx = d;\n  }\n  for (int i = 1; i <= m; i++) {\n    for (int j = 1; j <= c[i]; j++) {\n      ans[idx] = i;\n      idx++;\n    }\n    tot -= c[i];\n    if (n - idx + 1 >= tot) {\n      res = n - idx + 1 - tot;\n      if (res >= d - 1) {\n        int temp = d - 1;\n        while (temp) {\n          idx++;\n          temp--;\n        }\n      } else {\n        int temp = res;\n        while (temp) {\n          idx++;\n          temp--;\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    cout << ans[i] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmt19937 gen(34);\nint n, m, q, d, c[1001], pr[1002];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n >> m >> d;\n  int nn = n;\n  for (int i = 1; i <= m; i++) {\n    cin >> c[i];\n    nn -= c[i];\n  }\n  while (nn) {\n    bool ch = false;\n    for (int i = 0; i <= m; i++)\n      if (pr[i] + 1 < d) {\n        nn--;\n        pr[i]++;\n        ch = true;\n        if (nn == 0) break;\n      }\n    if (!ch && nn > 0) {\n      cout << \"NO\";\n      return 0;\n    }\n  }\n  cout << \"YES\\n\";\n  for (int i = 0; i < pr[0]; i++) cout << \"0 \";\n  for (int i = 1; i <= m; i++) {\n    for (int j = 0; j < c[i]; j++) cout << i << ' ';\n    for (int j = 0; j < pr[i]; j++) cout << \"0 \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef main():\n    n, m, d = map(int, input().split())\n    c = [int(ci) for ci in input().split()]\n\n    a = [d - 1] * m\n\n    dg = (d - 1) * m + sum(c) - n\n    if dg < 0 and abs(dg) > (d - 1):\n        print(\"NO\")\n        return\n\n    print(\"YES\")\n\n    e = max(dg, 0)\n    for i, j in enumerate(c):\n        z = max((d - 1) - e, 0)\n        e -= (d - 1) - z\n\n        if z:\n            print(*([0] * z), end=' ')\n        print(*([i + 1] * j), end=' ')\n\n    if dg < 0:\n        print(*([0] * -dg))\n    else:\n        print()\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1005;\nint arr[MAX], ans[MAX];\nint n, m, d;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n >> m >> d;\n  for (int i = 0; i < m; ++i) cin >> arr[i];\n  int sum[m + 1];\n  sum[m] = 0;\n  for (int i = m - 1; i >= 0; --i) sum[i] = sum[i + 1] + arr[i];\n  int now = 0, prv = 0;\n  int last = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (i <= last) {\n      ans[i] = now;\n      continue;\n    }\n    if (now == m) break;\n    if (i + sum[now] > n || i == last + d) {\n      ans[i] = now + 1;\n      last = i + arr[now] - 1;\n      ++now;\n    }\n  }\n  if (last + d <= n || now != m) return cout << \"NO\\n\", 0;\n  cout << \"YES\\n\";\n  for (int i = 1; i <= n; ++i) cout << ans[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\na = list(map(int, input().split()))\n\nl = [0] * (n * 2)\nci = d - 1\n\nfor i in range(m):\n    l[ci:ci+a[i]] = [i + 1] * a[i]\n\n    if ci >= n:\n        for _ in range(ci - n + 1):\n            l.remove(0)\n\n        ci = n + a[i] - 1\n    else:\n        ci += a[i] - 1 + d\n\nfor i in range(ci - n):\n    l.remove(0)\n\nif ci < n:\n    print('NO')\nelse:\n    print('YES')\n    print(*l[:n])\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\n\nC = list(map(int, input().split()))\n\nif d == 1:\n\tif sum(C) == n:\n\t\tprint(\"YES\")\n\n\t\tfor i, c in enumerate(C):\n\t\t\tprint(\"{} \".format(i + 1) * c, end=\"\")\n\telse:\n\t\tprint(\"NO\")\n\nelse:\n\tgaps = n - sum(C)\n\n\triver = []\n\tind = 0\n\n\tans = True\n\n\ttotal = 0\n\n\twhile total < n:\n\t\tgap = min(gaps, d - 1)\n\n\t\tgaps -= gap\n\t\ttotal += gap\n\n\t\triver.append((0, gap))\n\n\t\tif ind == len(C):\n\t\t\tbreak\n\n\t\triver.append((ind + 1, C[ind]))\n\t\ttotal += C[ind]\n\t\tind += 1\n\n\n\tif total != n:\n\t\tans = False\n\n\tif ans:\n\t\tprint(\"YES\")\n\t\tfor x, y in river:\n\t\t\tprint(\"{} \".format(x) * y, end=\"\")\n\telse:\n\t\tprint(\"NO\")\n"
        },
        {
            "language": 3,
            "solution": "#RAVENS#TEAM_2#ESSI-DAYI_MOHSEN-LORENZO\nimport sys\ninput=sys.stdin.readline\nn,m,d=map(int,input().split())\nc = list(map(int,input().split()))\nsu = sum(c)\nIndex = []\nstart = n-su+1\nfor i in range(m):\n\tIndex.append(start)\n\tstart+=c[i]\nh = Index[0]\npos = 0\nMP = 0\nwhile MP < m:\n\tif pos+d >= Index[MP]:\n\t\tpos = Index[MP]\n\t\tpos+=c[MP]\n\t\tMP+=1\n\telse:\n\t\tpos+=d\n\t\tIndex[MP] = pos\n\t\tpos+=c[MP]-1\n\t\tMP+=1\nif pos+d>=n+1:\n\tprint('YES')\n\tans = [0]*n\n\tfor i in range(m):\n\t\tyy=Index[i]\n\t\tfor j in range(yy-1,yy+c[i]-1):\n\t\t\tans[j] = i+1\n\tprint(*ans)\n\nelse:\n\tprint('NO')"
        },
        {
            "language": 3,
            "solution": "n , m , d = map(int,input().split())\na=list(map(int,input().split()))\ntot=sum(a)\nd-=1\nleft=n\nans=[]\ncur=1\nif tot+(m+1)*(d)<n:\n    print(\"NO\")\n    exit()\nfor i in range(m):\n    if left>=tot+(d):\n        ans+=([0]*(d)+[cur]*a[i])\n        left-=(d+a[i])\n        tot-=a[i]\n        cur+=1\n    else:\n        g=max(0,left-tot)\n        ans+=([0]*g+[cur]*a[i])\n        cur+=1\n        left-=(g+a[i])\n        tot-=a[i]\n#    print(ans,left)    \n\nif left<=d:\n    ans+=[0]*left\nprint(\"YES\")    \nprint(*ans)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int a[1009];\n  int sum = 0;\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d\", &a[i]);\n    sum += a[i];\n  }\n  if ((m + 1) * (d - 1) + sum < n) {\n    printf(\"NO\\n\");\n    return 0;\n  }\n  printf(\"YES\\n\");\n  int p = 0, x = n - sum, t = 0, j = 0;\n  while (p < n) {\n    int step = min(x, d - 1);\n    p += step;\n    x -= step;\n    for (int i = t; i < p; i++) cout << \"0 \";\n    if (j < m) {\n      while (a[j]--) {\n        cout << j + 1 << \" \";\n        p++;\n      }\n    }\n    t = p;\n    j++;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#------------------------------warmup----------------------------\nimport os\nimport sys\nimport math\nfrom io import BytesIO, IOBase\nfrom fractions import Fraction\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n#-------------------game starts now----------------------------------------------------\nn,m,d=map(int,input().split())\narr=list(map(int,input().split()))\nss=sum(arr)\ns=0\nans=[0]*(n+1)\nfor i in range(m):\n\tpro=min(s+d,n-ss+1)\n\tfor j in range(pro,pro+arr[i]):\n\t\tans[j]=i+1 \n\ts=pro+arr[i]-1\n\tss-=arr[i]\nif s+d<=n:\n\tprint(\"NO\")\n\texit()\nprint(\"YES\")\nfor i in range(1,n+1):\n\tprint(ans[i],end=\" \")\nprint()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename Arg1>\nvoid __f(const char* name, Arg1&& arg1) {\n  std::cerr << name << \" : \" << arg1 << endl;\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char* names, Arg1&& arg1, Args&&... args) {\n  const char* comma = strchr(names + 1, ',');\n  std::cerr.write(names, comma - names) << \" : \" << arg1 << \" | \";\n  __f(comma + 1, args...);\n}\nlong long int pw(long long int a, long long int b) {\n  long long int r = 1;\n  for (long long int i = 0; i < b; i++) {\n    r = ((r % 1000000007) * (a % 1000000007)) % 1000000007;\n  }\n  return r;\n}\nlong long int power(long long int x, unsigned long long int y,\n                    long long int p) {\n  long long int res = 1;\n  x = x % p;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nint gcd(int a, int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nvoid solve() {\n  long long int n, m, d;\n  cin >> n >> m >> d;\n  int c[m], sum = 0;\n  for (long long int i = 0; i < m; i++) {\n    cin >> c[i];\n    sum += c[i];\n  }\n  int mz = (n - sum) / (m + 1);\n  if ((n - sum) % (m + 1) != 0) mz++;\n  __f(\"d, mz\", d, mz);\n  if (d <= mz) {\n    cout << \"NO\";\n    return;\n  }\n  cout << \"YES\" << endl;\n  int nz = n - sum, cz = 0, ind = 1, count = 1;\n  __f(\"mz, n, d, nz\", mz, n, d, nz);\n  for (long long int i = 0; i < n; i++) {\n    __f(\"count, nz, cz\", count, nz, cz);\n    if (count > n) break;\n    if (cz + 1 < d && nz > 0) {\n      count++;\n      cout << 0 << \" \";\n      cz++;\n      nz--;\n      continue;\n    }\n    cz = 0;\n    count += c[ind - 1];\n    for (int j = 0; j < c[ind - 1]; j++) {\n      cout << ind << \" \";\n    }\n    ind++;\n    __f(\"count\", count);\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  int t;\n  t = 1;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "ii=lambda:int(input())\nkk=lambda:map(int,input().split())\nll=lambda:list(kk())\n\nn,m,d=kk()\nd-=1\nls = ll()\nsu =sum(ls)\nover = n-su\nif su+(m+1)*d <n:\n\tprint(\"NO\")\nelse:\n\tadd = min(over,d)\n\tover-=add\n\ti=add\n\tarr=[0]*n\n\tfor ind,p in enumerate(ls):\n\t\tfor _ in range(p):\n\t\t\tarr[i]= ind+1\n\t\t\ti+=1\n\t\tadd=min(over,d)\n\t\tover-=add\n\t\ti+=add\n\tprint(\"YES\")\n\tprint(*arr)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e3 + 10;\nint a[N];\nvector<int> v;\nint main() {\n  int n, m, d;\n  scanf(\"%d %d %d\", &n, &m, &d);\n  int tn = n;\n  int sum = 0;\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d\", &a[i]);\n    for (int j = 0; j < a[i]; j++) v.push_back(i + 1);\n    if (a[i] != 1) tn -= a[i] - 1;\n    sum += a[i];\n  }\n  int No = n - sum;\n  if (tn / d > m || (d == 1 && sum != n))\n    return 0 * printf(\"NO\\n\");\n  else {\n    int now = 0;\n    int cnt = 0;\n    while (No) {\n      int needin = min(d - 1, No);\n      No -= needin;\n      v.insert(v.begin() + now, needin, 0);\n      now += d + a[cnt++] - 1;\n    }\n  }\n  printf(\"YES\\n\");\n  for (int i = 0; i < n; i++) {\n    printf(\"%d \", v[i]);\n  }\n  cout << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "#Bhargey Mehta (Junior)\n#DA-IICT, Gandhinagar\nimport sys, math, queue, collections\nMOD = 10**9+7\n#sys.stdin = open('input.txt', 'r')\n\nn, m, d = map(int, input().split())\nc = list(map(int, input().split()))\na, ans = [], []\nx = 0\nfor ci in c:\n    x += 1\n    a += [0]*(d-1)\n    a += [x]*ci\na += [0]*(d-1)\nfor i in range(len(a)):\n    if a[i] != 0:\n        ans.append(a[i])\n    elif len(a)-i <= n-len(ans):\n        ans.append(0)\nif len(ans) == n:\n    print('YES')\n    print(*ans)\nelse:\n    print('NO')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int mod = 1e9 + 7;\nlong long cas;\nlong long n, m, k, d;\nstring str, ans;\nlong long a[maxn], h[maxn];\nsigned main() {\n  cin >> n >> m >> d;\n  long long p1 = n;\n  for (long long i = 1; i <= m; i++) cin >> h[i], p1 -= h[i];\n  p1 += 1;\n  long long pos = 0;\n  long long cnt = 1;\n  while (pos < n) {\n    if (pos + d < p1) {\n      pos += d;\n      for (long long i = 1; i <= h[cnt]; i++) {\n        a[pos + i - 1] = cnt;\n      }\n      if (cnt == m + 1) break;\n      pos += h[cnt] - 1;\n      p1 += h[cnt];\n      cnt++;\n    } else {\n      pos = n + 1;\n    }\n  }\n  if (pos <= n)\n    cout << \"NO\" << endl;\n  else {\n    cout << \"YES\" << endl;\n    long long j = n;\n    for (long long i = m; i >= cnt; i--) {\n      for (long long t = 1; t <= h[i]; t++) {\n        a[j] = i;\n        j--;\n      }\n    }\n    for (long long i = 1; i <= n; i++) {\n      cout << a[i] << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nn,m,d=map(int,input().split())\nC=list(map(int,input().split()))\n\nx=sum(C)\n\nif -((n-x)//(-(m+1)))>=d:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    y=(n-x)//(m+1)\n    z=(n-x)-y*(m+1)\n\n    ANS=[0]*n\n\n    ind=0\n    for i in range(z):\n        ind+=y+1\n        for k in range(C[i]):\n            ANS[ind]=i+1\n            ind+=1\n\n    #print(*ANS)\n\n    for i in range(z,m):\n        ind+=y\n        for k in range(C[i]):\n            ANS[ind]=i+1\n            ind+=1\n\n    print(*ANS)\n        "
        },
        {
            "language": 3,
            "solution": "import sys\n\nzz=1\n \nsys.setrecursionlimit(10**5)\nif zz:\n\tinput=sys.stdin.readline\nelse:\t\n\tsys.stdin=open('input.txt', 'r')\n\tsys.stdout=open('all.txt','w')\ndi=[[-1,0],[1,0],[0,1],[0,-1]]\n\ndef fori(n):\n\treturn [fi() for i in range(n)]\t\ndef inc(d,c,x=1):\n\td[c]=d[c]+x if c in d else x\ndef ii():\n\treturn input().rstrip()\t\ndef li():\n\treturn [int(xx) for xx in input().split()]\ndef fli():\n\treturn [float(x) for x in input().split()]\t\ndef comp(a,b):\n\tif(a>b):\n\t\treturn 2\n\treturn 2 if a==b else 0\t\t\ndef gi():\t\n\treturn [xx for xx in input().split()]\ndef gtc(tc,ans):\n\tprint(\"Case #\"+str(tc)+\":\",ans)\t\ndef cil(n,m):\n\treturn n//m+int(n%m>0)\t\ndef fi():\n\treturn int(input())\ndef pro(a): \n\treturn reduce(lambda a,b:a*b,a)\t\t\ndef swap(a,i,j): \n\ta[i],a[j]=a[j],a[i]\t\ndef si():\n\treturn list(input().rstrip())\t\ndef mi():\n\treturn \tmap(int,input().split())\t\t\t\ndef gh():\n\tsys.stdout.flush()\ndef isvalid(i,j,n,m):\n\treturn 0<=i<n and 0<=j<m \ndef bo(i):\n\treturn ord(i)-ord('a')\t\ndef graph(n,m):\n\tfor i in range(m):\n\t\tx,y=mi()\n\t\ta[x].append(y)\n\t\ta[y].append(x)\n\n\nt=1\nuu=t\n\n\t\nwhile t>0:\n\tt-=1\n\tn,m,k=mi()\n\ta=li()\n\td=[0]*n\n\ti=k-1\t\n\tp=0;c=1\n\tleft=sum(a)\n\twhile i<n:\n\t\twhile i<n and a[p]:\n\t\t\td[i]=c\n\t\t\tleft-=1\n\t\t\ta[p]-=1\n\t\t\ti+=1\n\t\tif i==n or left==0:\n\t\t\tbreak\n\t\ti+=k-1\n\t\tc+=1\n\t\tp+=1\n\n\tif left==0:\n\t\tif n-i>=k:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(\"YES\")\n\t\t\tprint(*d)\t\t\t\t\n\telse:\n\t\tprint(\"Yes\")\n\t\ti=0\n\t\twhile left:\n\t\t\twhile i<n and a[p]:\n\t\t\t\td.append(c)\n\t\t\t\tleft-=1\n\t\t\t\ta[p]-=1\n\t\t\tc+=1\n\t\t\tp+=1\n\t\tp=len(d)-n\n\t\tr=[]\n\t\tfor i in range(len(d)-1,-1,-1):\n\t\t\tif p==0 or d[i]:\n\t\t\t\tr.append(d[i])\n\t\t\telse:\n\t\t\t\tp-=1\n\t\tprint(*r[::-1])\t\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  --d;\n  vector<int> ar(m);\n  int space = n;\n  for (int i = 0; i < m; ++i) {\n    cin >> ar[i];\n    space -= ar[i];\n  }\n  if (space > (m + 1) * d) {\n    cout << \"NO\\n\";\n    return 0;\n  }\n  cout << \"YES\\n\";\n  for (int i = 0; i <= m; ++i) {\n    int jump = min(space, d);\n    space -= jump;\n    for (int j = 0; j < jump; ++j) {\n      cout << \"0 \";\n    }\n    if (i < m) {\n      for (int j = 0; j < ar[i]; ++j) {\n        cout << i + 1 << \" \";\n      }\n    }\n  }\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d, a[1007], c[1007], ans[1007];\nint sum = 0;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) {\n    cin >> a[i];\n    sum += a[i];\n    c[i] = a[i];\n  }\n  for (int i = m; i >= 1; i--) c[i] += c[i + 1];\n  sum += (d - 1) * (m + 1) + 1;\n  if (sum < n + 1) return cout << \"NO\\n\", 0;\n  cout << \"YES\\n\";\n  int idx = 1, i = 1, dd = 0;\n  while (idx <= m && i <= n) {\n    while (n - i + 1 > c[idx] && dd < d - 1) {\n      dd++;\n      i++;\n    }\n    for (int j = i; j < i + a[idx]; j++) ans[j] = idx;\n    i += a[idx];\n    dd = 0;\n    idx++;\n  }\n  for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\na = list(map(int, input().split()))\n \nif sum(a) + (m + 1) * (d - 1) >= n:\n    print('YES')\n \n    ans = []\n    m = n - sum(a)\n \n    for i, c in enumerate(a):\n        r = min(m, d - 1)\n        ans.extend([i + 1] * c + [0] * r)\n        m -= r\n    ans = [0] * m + ans\n    print(*ans)\nelse:\n    print('NO')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1050];\nint main() {\n  int n, m, d;\n  scanf(\"%d %d %d\", &n, &m, &d);\n  int sum = 0;\n  for (int i = 0; i < m; ++i) {\n    scanf(\"%d\", &a[i]);\n    sum += a[i];\n  }\n  if (n - sum > (d - 1) * (m + 1)) {\n    printf(\"NO\\n\");\n  } else {\n    printf(\"YES\\n\");\n    sum = n - sum;\n    int j = 0, len = 0;\n    while (sum >= 0 && len < n) {\n      int x = min(d - 1, sum);\n      sum -= x;\n      while (x--) {\n        printf(\"%d \", 0);\n        len++;\n      }\n      while (j < m && a[j]--) {\n        printf(\"%d \", j + 1);\n        len++;\n      }\n      j++;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class C {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine().trim());\n        int n = Integer.parseInt(st.nextToken().trim());\n        int m = Integer.parseInt(st.nextToken().trim());\n        int d = Integer.parseInt(st.nextToken().trim());\n        int[] arr = new int[n + 2];\n        int[] plat = new int[m];\n        st = new StringTokenizer(br.readLine().trim());\n        int sum = 0;\n        for (int i = 0; i < m; i++) {\n            plat[i] = Integer.parseInt(st.nextToken().trim());\n            sum += plat[i];\n        }\n        int idx = 0;\n        int p = 0;\n        out:\n        while (idx < n + 2 && p < m) {\n            for (int i = 0; i < d; i++) {\n                idx++;\n                if (idx + sum == n + 1) {\n                    break out;\n                }\n            }\n            for (int i = 0; i < plat[p]; i++) {\n                arr[idx++] = p + 1;\n            }\n            idx--;\n            sum -= plat[p++];\n        }\n        for (int i = p; i < m; i++) {\n            for (int j = 0; j < plat[i]; j++) {\n                arr[idx++] = i + 1;\n            }\n        }\n        if (idx+d < n + 1) {\n            System.out.println(\"NO\");\n        } else {\n            StringBuilder sb = new StringBuilder();\n            for (int i = 1; i < n + 1; i++) {\n                sb.append(arr[i]).append(\" \");\n            }\n            System.out.println(\"YES\");\n            System.out.println(sb.toString());\n        }\n\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "// No sorceries shall previal. //         \nimport java.util.Scanner;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class InVoker { \n\t\n    public static void main(String args[]) {\n    \t\t\n    \tScanner inp=new Scanner(System.in);\n    \tPrintWriter out= new PrintWriter(System.out);\n    \t\n    \tint n=inp.nextInt();\n    \tint m=inp.nextInt();\n    \tint d=inp.nextInt();\n    \tint a[]=new int[m];\n    \tint sum=0;\n    \tfor(int i=0;i<m;i++) {\n    \t\ta[i]=inp.nextInt();\n    \t\tsum+=a[i];\n    \t}\n    \tif(n>sum+(d-1)*(m+1))\n    \t\tout.println(\"NO\");\n    \telse {\n    \t\tout.println(\"YES\");\n    \t\tint empty=n-sum;\n    \t\tint c=0;\n    \t\tint x=d-1;\n    \t\tint i=0;\n\t\t\twhile(x-->0 && empty-->0) {\n\t\t\t\tout.print(0+\" \");\n\t\t\t\ti++;\n\t\t\t}\n    \t\t\n    \t\tfor(;i<n;) {\n    \t\t\tif(a[c]>0) {\n    \t\t\t\twhile(a[c]-->0&&i<n) {\n    \t\t\t\t\tout.print(c+1+\" \");\n    \t\t\t\t\ti++;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tc++;\n    \t\t\tif(empty>0) {\n    \t\t\t\tx=d-1;\n    \t\t\t\twhile(x-->0 && empty-->0) {\n    \t\t\t\t\tout.print(0+\" \");\n    \t\t\t\t\ti++;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n    \t\n    \t\n    \tinp.close();\n    \tout.close();\n    }    \t\t\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, m, i, j, k, count = 0, sum = 0, d;\n  cin >> n >> m >> d;\n  long long int a[m];\n  for (i = 0; i < m; i++) {\n    cin >> a[i];\n    sum = sum + a[i];\n  }\n  if (n > sum + (m + 1) * (d - 1)) {\n    cout << \"NO\";\n  } else {\n    cout << \"YES\" << endl;\n    k = n - sum;\n    if (d != 1)\n      j = k / (d - 1);\n    else {\n      j = m;\n    }\n    long long int l, p, q = 0;\n    for (i = 0; i < j; i++) {\n      for (l = 0; l < d - 1; l++) {\n        cout << \"0 \";\n      }\n      q = q + d - 1;\n      if (q != n) {\n        for (p = 0; p < a[i]; p++) {\n          cout << i + 1 << \" \";\n        }\n        q = q + a[i];\n      }\n    }\n    if (d != 1) {\n      for (l = 0; l < k % (d - 1); l++) {\n        cout << \"0 \";\n      }\n    }\n    for (i = j; i < m; i++) {\n      for (p = 0; p < a[i]; p++) {\n        cout << i + 1 << \" \";\n      }\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nlst=[*map(int,input().split())]\nres,s,x,item,i=[0]*n,sum(lst),0,1,0\nwhile i<n:\n    x+=1\n    if x==d or s==n-i:\n        if item<=m:\n            y=lst[item-1]\n            for j in range(i,i+y):\n                res[j]=item\n            i+=y\n            s-=y\n            item+=1\n            x=0\n        else:\n            from sys import exit\n            print('NO');exit()\n    else:i+=1\nprint('YES')\nprint(*res)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;import java.io.*;import java.math.*;\n\n//=============================================================================\n//--------------------------Main-Class---------------------------------\n//=============================================================================\n\npublic class A {\n\n\tpublic static void process()throws IOException{\n\t\t\n\t\tint n = sc.nextInt(),m = sc.nextInt(),d = sc.nextInt();\n\t\tint arr[] = sc.readArray(m);\n\t\tint sum = 0;\n\t\tfor(int e : arr)sum+=e;\n\t\tint val = n/d;\n\t\t\n\t\tif(sum < val) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tint ans[] = new int[n+1];\n\t\t\n\t\tStack<Integer> st = new Stack<Integer>();\n\t\tint cc = -1;\n\t\tfor(int i=1; i<=m; i++)st.add(arr[i-1]);\n\t\tint size = 0;\n\t\tfor(int i=n+1; i>=1; ) {\n\t\t\tint next = i - d;\n\t\t\tif(next <= 0)break;\n\t\t\tif(st.size() == 0) {\n\t\t\t\tif(i>d) {\n\t\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsize = st.pop();\n\t\t\tint min = max(0,size);\n\t\t\tif(next-size >= 1);\n\t\t\telse min = next;\n\t\t\t cc = st.size()+1;\n\t\t\twhile(min-- != 0) {\n\t\t\t\tans[next--] = cc;\n\t\t\t\tsize--;\n\t\t\t}\n\t\t\ti = next+1;\n\t\t}\n\t\tSystem.out.println(\"YES\");\n//\t\tSystem.out.println(Arrays.toString(ans));\n\t\tDeque<Integer> lis = new LinkedList<Integer>();\n\t\twhile(size != 0) {\n\t\t\tlis.addFirst(cc);\n\t\t\tsize--;\n\t\t}\n\t\twhile(!st.isEmpty()) {\n\t\t\tcc = st.size();\n\t\t\tsize = st.pop();\n\t\t\twhile(size-- != 0)lis.addFirst(cc);\n\t\t}\n\t\tint skip0 = lis.size();\n\t\tfor(int e : lis)System.out.print(e+\" \");\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tif(skip0 > 0 && ans[i] == 0) {\n\t\t\t\tskip0--;\n\t\t\t}\n\t\t\telse System.out.print(ans[i]+\" \");\n\t\t}\n\t\tSystem.out.println();\n\t\t\n\t\t\n\t\t\n    }\n\t\n\n\t//=============================================================================\n\t//--------------------------Dheeraj-Bhagchandani---------------------------------\n\t//=============================================================================\n  \n\t \n    static FastScanner sc;\n    static PrintWriter out;\n    public static void main(String[]args)throws IOException\n    {\n        boolean oj = true;\n        if(oj){sc=new FastScanner();out=new PrintWriter(System.out);}\n        else{sc=new FastScanner(100);out=new PrintWriter(\"output.txt\");}\n        int t=1;\n//        t = sc.nextInt();\n        while(t-->0) {process();}\n        out.flush();out.close();  \n    }\n    \n    static class Pair implements Comparable<Pair> {\n\t\tint x, y;\n\t\tPair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\treturn Integer.compare(this.x, o.x);\n\t\t}\n\t}\n    \n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n    \n\tstatic void println(Object o){out.println(o);}\n\tstatic void print(Object o){out.print(o);}\n\tstatic void pflush(Object o){out.println(o);out.flush();}\n\tstatic int ceil(int x, int y) {return (x % y == 0 ? x / y : (x / y + 1));}\n\tstatic long ceil(long x, long y) {return (x % y == 0 ? x / y : (x / y + 1));}\n\tstatic int max(int x, int y) {return Math.max(x, y);}\n\tstatic int min(int x, int y) {return Math.min(x, y);}\n\tstatic int abs(int x) {return Math.abs(x);}\n\tstatic long abs(long x) {return Math.abs(x);}\n\tstatic int log2(int N) {int result = (int) (Math.log(N) / Math.log(2));return result;}\n\tstatic long max(long x, long y) {return Math.max(x, y);}\n\tstatic long min(long x, long y) {return Math.min(x, y);}\n\tpublic static int gcd(int a, int b) {\n\tBigInteger b1 = BigInteger.valueOf(a);BigInteger b2 = BigInteger.valueOf(b);\n\tBigInteger gcd = b1.gcd(b2);return gcd.intValue();}\n\tpublic static long gcd(long a, long b) {\n\tBigInteger b1 = BigInteger.valueOf(a);BigInteger b2 = BigInteger.valueOf(b);\n\tBigInteger gcd = b1.gcd(b2);return gcd.longValue();}\n   \n\t\n\t\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tstatic class FastScanner{BufferedReader br; StringTokenizer st;\n\tFastScanner()throws FileNotFoundException{\n    \tbr=new BufferedReader(new InputStreamReader(System.in));}\n\tFastScanner(int a)throws FileNotFoundException{\n   \tbr = new BufferedReader(new FileReader(\"input.txt\"));}\n    String next()throws IOException{\n    while (st == null || !st.hasMoreElements()) {try{\n    st = new StringTokenizer(br.readLine());}\n    catch (IOException  e){ e.printStackTrace(); }}\n    return st.nextToken(); } int nextInt() throws IOException{\n    return Integer.parseInt(next());}\n    long nextLong() throws IOException\n    {return Long.parseLong(next());}\n    double nextDouble()throws IOException { return Double.parseDouble(next()); }\n    String nextLine() throws IOException{ String str = \"\"; try{\n    str = br.readLine();} catch (IOException e){\n    e.printStackTrace();} return str;}\n    int[] readArray(int n)throws IOException{int[]A=new int[n];\n    for(int i=0;i!=n;i++){A[i]=sc.nextInt();}return A;}\n    long[] readArrayLong(int n)throws IOException{long[]A=new long[n];\n    for(int i=0;i!=n;i++){A[i]=sc.nextLong();}return A;}}\n\t\n\tstatic void ruffleSort(int[] a) {Random get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {int r = get.nextInt(a.length);\n\t\tint temp = a[i];a[i] = a[r];a[r] = temp;}Arrays.sort(a);}\n\tstatic void ruffleSort(long[] a) {Random get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {int r = get.nextInt(a.length);\n\t\tlong temp = a[i];a[i] = a[r];a[r] = temp;}Arrays.sort(a);}\n}"
        },
        {
            "language": 3,
            "solution": "#!/usr/local/bin/python3\n# -*- coding: utf-8 -*-\n\n(n, m, d) = map(int, input().split())\nnums = list(map(int, input().split()))\n\nsum_ = sum(nums)\n\nif (m+1) * (d-1) + sum_ < n:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    ans = []\n    need_jump = n - sum_\n    index = 1\n    while need_jump:\n        jump = min(need_jump, d - 1)\n        ans += jump * [0]\n        if index <= m:\n            ans += [index] * nums[index - 1]\n            index += 1\n        need_jump -= jump\n    while index <= m:\n        ans += [index] * nums[index - 1]\n        index += 1\n\n    print(\" \".join(map(str, ans)))\n        \n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\nfrom heapq import heapify,heappush,heappop,heappushpop\nfrom collections import defaultdict as dd, deque as dq,Counter as C\nfrom math import factorial as f ,ceil,gcd,sqrt,log\nfrom bisect import bisect_left as bl ,bisect_right as br\nfrom itertools import combinations as c,permutations as p\nfrom math import factorial as f ,ceil,gcd,sqrt,log\nmp = lambda : map(int,input().split())\nit = lambda: int(input())\nls = lambda : list(input().strip())\nmt = lambda  r : [ list(mp()) for _ in range(r)]\nlcm = lambda a,b : (a*b)//gcd(a,b)\ndef fibo_n(n):\n\treturn (((1+sqrt(5))/2)**n)/sqrt(5)\nmod = 1000000007\nfor _ in range(1):\n\tln,pl,d = mp()\n\tlp = dq(mp())\n\tk = sum(lp)\n\trem = ln-k\n\tcurp =0\n\ti =0\n\tv =[]\n\tans =\"YES\"\n\twhile i<ln:\n\t\tmn = min(rem,d-1)\n\t\twhile mn and i<ln:\n\t\t\tv.append(0)\n\t\t\ti+=1\n\t\t\tmn-=1\n\t\t\trem-=1\n\t\tif i<ln:\n\t\t\tif lp:\n\t\t\t\tk = lp.popleft()\n\t\t\t\tinc =k\n\t\t\t\tcurp+=1\n\t\t\t\twhile k and i<ln :\n\t\t\t\t\tv.append(curp)\n\t\t\t\t\tk-=1\n\t\t\t\t\ti+=1\n\t\t\telse:\n\t\t\t\ti = ln\n\t\t\t\tans=\"NO\"\n\t\t\t\tbreak\n\tprint(ans)\n\tif ans ==\"YES\":\n\t\tprint(*v)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class c {\n  public static void main(String[] args) {\n    Scanner in = new Scanner(System.in); \n\n    int n = in.nextInt();\n    int m = in.nextInt(); \n    int d = in.nextInt();\n\n    int numGaps = m+1;\n    int lenNeeded = n - (d-1)*numGaps;\n\n    int sumLen = 0;\n    int[] lens = new int[m];\n    for(int i=0; i<m; i++) {\n      lens[i] = in.nextInt();\n      sumLen += lens[i];\n    }\n    if(lenNeeded > sumLen) {\n      System.out.println(\"NO\");\n    } else {\n      System.out.println(\"YES\");\n      \n      int sumRem = sumLen;\n      int curDist = 0;\n      for(int platform=0; platform<m; platform++) {\n        \n        // if no gap needed\n        if(curDist + sumRem + d-1 >= n) {\n          for(int i=0; i<lens[platform]; i++) {\n            System.out.print((platform+1) + \" \");\n          }\n        } else {\n          // if there's still gap place as much as possible 0\n          for(int i=0; i<d-1; i++) {\n            System.out.print(\"0 \");\n          }\n          curDist += d-1;\n          for(int i=0; i<lens[platform]; i++) {\n            System.out.print((platform+1) + \" \");\n          }\n          sumRem -= lens[platform];\n          curDist += lens[platform];\n        }\n      }\n\n      // All platfomrs placed, put the remaining 0s\n      while(curDist + sumRem < n) {\n        System.out.print(\"0 \");\n        curDist++;\n      }\n\n\n    }\n\n  }\n}\n\n/* \n\n7 3 2\n1 2 1\n\nYES \n0 1 0 2 2 0 3\n\n10 1 11\n1\n\nYES\n0 0 0 0 0 0 0 0 0 1 \n\n10 1 5\n2\n\nYES\n0 0 0 0 1 1 0 0 0 0 \n\n\n*/"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException, InterruptedException {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n        int[] arr = new int[m];\n        int[] ans = new int[n];\n        int sum = 0;\n        for (int i=0;i<m;i++){\n            arr[i] = sc.nextInt();\n            sum += arr[i];\n        }\n        if(sum + (m+1)*(d-1) < n) pw.println(\"NO\");\n        else{\n            pw.println(\"YES\");\n            int index = 1;\n            int temp = n - sum;\n            int cnt ;\n            if(d <= n && d > 1) cnt = Math.min((int) (m + 1 - Math.ceil((double)temp / (d-1))),m);\n            else cnt = m;\n            if(m==1) {\n                if(temp < d) cnt = 1;\n                else cnt = 0;\n            }\n            int mark = 0;\n            for (int i=0;i<cnt;i++){\n                for(int j=0;j<arr[i];j++){\n                    ans[mark] = index;\n                    mark++;\n                }\n                index++;\n            }\n            while(mark <= n-1){\n                for (int i=0;i<d-1;i++){\n                    ans[mark] = 0;\n                    mark++;\n                    if(mark > n-1) break;\n                }\n                if(mark > n-1) break;\n                for (int i=0;i<arr[cnt];i++){\n                    ans[mark] = index;\n                    mark++;\n                }\n                index++;\n                cnt++;\n            }\n            for (int i=0;i<n;i++){\n                if(i != n-1) pw.print(ans[i]+\" \");\n                else pw.println(ans[i]);\n            }\n        }\n\n        pw.close();\n    }\n\n    public static void pairSort(Pair[] arr) {\n        ArrayList<Pair> l = new ArrayList<>();\n        Collections.addAll(l, arr);\n        Collections.sort(l);\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = l.get(i);\n        }\n    }\n    public static void longSort(long[] arr) {\n        ArrayList<Long> l = new ArrayList<>();\n        for (long i : arr) l.add(i);\n        Collections.sort(l);\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = l.get(i);\n        }\n    }\n    public static void intSort(int[] arr) {\n        ArrayList<Integer> l = new ArrayList<>();\n        for (int i : arr) l.add(i);\n        Collections.sort(l);\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = l.get(i);\n        }\n    }\n\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if (x.charAt(0) == '-') {\n                neg = true;\n                start++;\n            }\n            for (int i = start; i < x.length(); i++)\n                if (x.charAt(i) == '.') {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                } else {\n                    sb.append(x.charAt(i));\n                    if (dec)\n                        f *= 10;\n                }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg ? -1 : 1);\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n\n        public int[] nextIntArr(int n) throws IOException {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = Integer.parseInt(next());\n            }\n            return arr;\n        }\n\n        public long[] nextLongArr(int n) throws IOException {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = Long.parseLong(next());\n            }\n            return arr;\n        }\n\n    }\n    static class Pair implements Comparable<Pair>{\n        int first; int second; int length;\n        public Pair(int first, int second){\n            this.first = first; this.second = second; this.length = second-first+1;\n        }\n\n        @Override\n        public int compareTo(Pair p2) {\n            if(first == p2.first) return second - p2.second;\n            else return first - p2.first;\n        }\n\n        @Override\n        public String toString() { return \"(\"+ first + \",\" + second + ')'; }\n\n    }\n    static class Triple implements Comparable<Triple> {\n        double x, y, z, sum;\n\n        Triple(double a, double b, double c) { x = a; y = b; z = c; sum = x + y + z; }\n\n\n        public int compareTo(Triple t)\n        {\n            if(Math.abs(sum - t.sum) < 1e-9) return x > t.x ? 1 : -1;\n            return sum > t.sum ? 1 : -1;\n        }\n        public String toString()\n        {\n            return x + \" \" + y  + \" \" + z;\n        }\n    }\n\n    static PrintWriter pw = new PrintWriter(System.out);\n    static Scanner sc = new Scanner(System.in);\n    static Random random = new Random();\n    static final int MOD = (int) 1e9 + 7;\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio();\n  cin.tie(0);\n  cout.tie(0);\n  long long int N, M, K;\n  cin >> N >> M >> K;\n  long long int a[M], b[M];\n  for (long long int i = 0; i < M; i++) {\n    cin >> a[i];\n  }\n  for (int i = 0; i < M; i++) {\n    if (i == 0) {\n      b[i] = a[i];\n    } else {\n      b[i] = b[i - 1] + a[i];\n    }\n  }\n  long long int i = -1, j = -1;\n  vector<long long int> ans;\n  while (i < N) {\n    long long int new_pos = i + K;\n    if (j >= M - 1) {\n      if (new_pos < N) {\n        cout << \"NO\" << endl;\n        return 0;\n      } else\n        break;\n    }\n    if (b[M - 1] - (j >= 0 ? b[j] : 0) <= N - new_pos) {\n      i = new_pos;\n      ans.push_back(i);\n      j++;\n      i += a[j] - 1;\n    } else {\n      while (b[M - 1] - (j >= 0 ? b[j] : 0) > N - new_pos) {\n        new_pos--;\n      }\n      if (new_pos < i) {\n        cout << \"NO\" << endl;\n        return 0;\n      } else {\n        i = new_pos;\n        ans.push_back(i);\n        j++;\n        i += a[j] - 1;\n      }\n    }\n  }\n  int a2[N];\n  memset(a2, 0, sizeof a2);\n  cout << \"Yes\" << endl;\n  for (long long int i = 0; i < ans.size(); i++) {\n    int t4 = ans[i];\n    for (int k = t4; k < t4 + a[i]; k++) a2[k] = i + 1;\n  }\n  for (int i = 0; i < N; i++) {\n    cout << a2[i] << \" \";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int gcd(long long int a, long long int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long int power(long long int x, long long int n) {\n  if (n == 0) return 1;\n  if (n % 2) return x * power(x * x, (n - 1) / 2);\n  return power(x * x, n / 2);\n}\nlong long int powerm(long long int x, long long int n) {\n  if (n == 0) return 1;\n  if (n % 2)\n    return (x * powerm((x * x) % 1000000007, (n - 1) / 2)) % 1000000007;\n  return powerm((x * x) % 1000000007, n / 2);\n}\nint32_t main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int n, m, d;\n  cin >> n >> m >> d;\n  vector<long long int> wood;\n  long long int sum = 0;\n  long long int a;\n  for (int i = 0; i < m; i++) {\n    cin >> a;\n    sum += a;\n    wood.push_back(a);\n  }\n  long long int maxpos = (m + 1) * (d - 1) + (sum);\n  long long int dif = maxpos - n;\n  if (maxpos < n) {\n    return cout << \"NO\\n\", 0;\n  }\n  cout << \"YES\\n\";\n  long long int start = 0;\n  vector<pair<int, int> > LR;\n  int w = 0;\n  while (start <= n) {\n    long long int x = min(d - 1, dif);\n    dif -= x;\n    long long int y = d - 1 - x;\n    start = start + 1 + y;\n    long long int end = start + wood[w] - 1;\n    LR.push_back({start, end});\n    start = end;\n    w++;\n  }\n  w = 0;\n  int j = 1;\n  while (j <= n) {\n    if (j >= LR[w].first and j <= LR[w].second) {\n      cout << w + 1 << \" \";\n      if (j == LR[w].second) {\n        w++;\n      }\n    } else {\n      cout << 0 << \" \";\n    }\n    j++;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "width, n, d = map(int,input().split())\nlengths = map(int,input().split())\n\n#dist = (n+1)*d + sum(map(int,input().split())) - n\n\nout = [[0,1]]\n\ni = 1\nplatform = 1\nfor length in lengths:\n    out.append([i,length])\n    i += length\n\nsuccess = 0\ni = n\nx = width+1\nwhile i >= 0:\n    x -= d+out[i][1]-1\n    if x <= out[i][0]:\n        success = 1\n        break\n    out[i][0] = x\n    i -= 1\n\nif success:\n    result = [0]*width\n    platform = 1\n    for start,length in out[1:]:\n        for i in range(start-1, start-1+length):\n            result[i] = platform\n        platform += 1\n\n    print(\"YES\")\n    print(\" \".join(map(str,result)))\nelse:\n    print(\"NO\")\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n\tpublic static void main (String[] args)throws IOException{\n\t    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t    String k[] = br.readLine().split(\" \");\n\t    int n = Integer.parseInt(k[0]);\n\t    int m = Integer.parseInt(k[1]);\n\t    int d = Integer.parseInt(k[2]);\n\t    String t[] = br.readLine().split(\" \");\n        int c[] = new int[n];\n        int sum = 0;\n        for(int i=0;i<m;i++)\n        {\n            c[i] = Integer.parseInt(t[i]);\n            sum += c[i];\n        }\n        int gap = n-sum;\n        //System.out.println(gap+\" \"+(d-1)*(m+1));\n        if(gap>(d-1)*(m+1))System.out.println(\"NO\");\n        else\n        {\n            int arr[] = new int[n];\n            int j = 0;\n            int p = 0;\n            while(j<n)\n            {\n                int q = Math.min(d-1,gap);\n                gap -= q;\n                j += q;\n                if(p<m){\n                for(int i=0;i<c[p];i++)\n                {\n                    arr[j] = p+1;\n                    j++;\n                }\n                p++;\n                }\n            }\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"YES\\n\");\n            for(int i=0;i<n;i++)sb.append(arr[i]+\" \");\n            System.out.println(sb);\n        }\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> a(m);\n  int can = (d - 1) * (m + 1);\n  for (int i = 0; i < m; ++i) {\n    cin >> a[i];\n    can += a[i];\n  }\n  if (can < n) {\n    cout << \"NO\";\n    return 0;\n  }\n  vector<int> ans(n, 0);\n  int cur = -1, uk = 0, res = can - n;\n  while (cur < n) {\n    int jump;\n    if (res > 0) {\n      jump = max(1, d - res);\n      res -= (d - jump);\n    } else {\n      jump = d;\n    }\n    cur += jump;\n    for (int i = 0; i < a[uk]; ++i) ans[cur++] = uk + 1;\n    --cur;\n    ++uk;\n    if (uk >= m) break;\n  }\n  cout << \"YES\" << endl;\n  for (int i = 0; i < n; ++i) cout << ans[i] << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 1e5 + 10;\nusing namespace std;\nint book[1010], vis[1010];\nstruct node {\n  int num;\n  int flag;\n} a[1010];\nint main() {\n  int n, m, d;\n  while (~scanf(\"%d %d %d\", &n, &m, &d)) {\n    memset(book, 0, sizeof(book));\n    memset(vis, 0, sizeof(vis));\n    long long ans = 0;\n    ans += (m + 1) * (d);\n    for (int i = 1; i <= m; i++) {\n      scanf(\"%d\", &a[i].num);\n      a[i].flag = i;\n      ans += a[i].num - 1;\n    }\n    if (ans < n + 1) {\n      printf(\"NO\\n\");\n      return 0;\n    } else {\n      printf(\"YES\\n\");\n      int i = 0;\n      for (int j = 1; j <= m; j++) {\n        i += d;\n        if (i > n) break;\n        int xx = a[j].num;\n        while (xx--) {\n          book[i] = j;\n          vis[j] = 1;\n          if (xx) i++;\n        }\n      }\n      int x = n;\n      for (int g = m; g >= 1; g--) {\n        if (book[x]) vis[book[x]] = 0;\n        if (vis[g] == 0) {\n          while (a[g].num--) {\n            if (book[x]) {\n              vis[book[x]] = 0;\n            }\n            book[x] = g;\n            x--;\n          }\n          vis[g] = 1;\n        }\n      }\n      for (int i = 1; i < n; i++) printf(\"%d \", book[i]);\n      printf(\"%d\\n\", book[n]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\n\npublic class Main {\n  static Scanner in;\n  // static FastReader in;\n  static PrintWriter out;\n  static int[][] dirs = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {-1, -1}, {-1, 1}, {1, -1}};\n  static int INF = (int) 1e9 + 7;\n  static int n, m, sum, max, res, k, p, s, count, T;\n  static int[][] E;\n  static List<int[]>[] adj;\n  static int[] a, idx;\n  static int[][] dp;\n  static int[] dpp;\n  static boolean[] vis;\n  static int rows, cols;\n  static int[] curRes;\n  static Map<String, Integer> map;\n  static String str;\n  static String[] w;\n\n  public static void main(String[] args) throws Exception{\n\n    in = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n    // in = new FastReader();\n    out = new PrintWriter(System.out);\n    int n = in.nextInt();\n    int m = in.nextInt();\n    int d = in.nextInt();\n    a = new int[m + 1];\n    int[] res = new int[n];\n    int sum = 0;\n    for (int i = 1; i <= m; i++) {\n      a[i] = in.nextInt();\n      sum += a[i];\n    }\n    for (int idx = 1, cur = n - sum; idx <= m; idx++) {\n      for (int k = 0; k < a[idx]; k++) {\n        res[cur++] = idx;\n      }\n    }\n\n    // for (int i : res) {out.print(i + \" \");}\n    // out.println();\n\n    int pa = -1, pb = n - sum;\n    boolean success = true;\n    while (true) {\n      // System.out.println(pa + \" \" + pb);\n      if (pb - pa <= d) {break;}\n      if (pb == n) {success = false; break;}\n      move(res, pb, pa + d);\n      int size = a[res[pa + d]];\n      pb = pb + size;\n      pa = pa + d + size - 1;\n    }\n\n\n    // for (int i : res) {out.print(i + \" \");}\n    if (!success) {out.print(\"NO\");}\n    else {\n      out.println(\"YES\");\n      for (int i : res) {out.print(i + \" \");}\n    }\n    \n    out.println();\n    out.flush();\n    out.close();\n  }\n\n  static void move(int[] res, int from, int to) {\n    int size = a[res[from]];\n    for (int i = 0; i < size; i++) {\n      swap(res, from + i, to + i);\n    }\n  }\n\n  static void swap(int[] cs, int i, int j) {\n    int t = cs[i];\n    cs[i] = cs[j];\n    cs[j] = t;\n  }\n\n  \n\n  static class FastReader {\n\n    public BufferedReader br; \n    StringTokenizer st; \n\n    public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));} \n\n    String next() { \n      while (st == null || !st.hasMoreElements()) { \n          try {st = new StringTokenizer(br.readLine());} \n          catch (IOException e) {e.printStackTrace();} \n      } \n      return st.nextToken(); \n    } \n\n    int nextInt() {return Integer.parseInt(next());} \n\n    long nextLong() {return Long.parseLong(next());} \n\n    double nextDouble() {return Double.parseDouble(next());} \n\n    String nextLine() {\n      String str = \"\"; \n        try {str = br.readLine();} \n        catch (IOException e) {e.printStackTrace();} \n        return str; \n    }\n  }\n\n} \n\n  \n\n\n\n  \n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "def s_1256c():\n    n, m, d = map(int, raw_input().split())\n    c = map(int, raw_input().split())\n    s = sum(c)\n    if (m+1)* (d-1) + s < n:\n        print \"NO\"\n    else:\n        print \"YES\"\n        res = [0] * n\n        left = n - s\n        pos = 0\n        i = 0\n        while left >= d:\n            for y in range(c[i]):\n                res[pos+d-1+y] = i+1\n            pos += d + c[i] - 1\n            left -= d-1\n            i += 1\n        pos += left\n        while i < len(c):\n            for y in range(c[i]):\n                res[pos+y] = i+1\n            pos += c[i]\n            i += 1\n        print ' '.join(map(str, res))\n\n\ns_1256c()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  int t[m], s = n;\n  for (int i = 0; i < m; i++) {\n    cin >> t[i];\n    s -= t[i];\n  }\n  if ((d - 1) * (m + 1) < s)\n    cout << \"NO\\n\";\n  else {\n    cout << \"YES\\n\";\n    int a = 0, i = 1, h = 0;\n    while (i <= n && s > 0) {\n      for (; i - a < d && i <= n && s > 0; i++, s--) cout << 0 << ' ';\n      if (h < m)\n        for (int j = 0; j < t[h]; j++, i++) cout << h + 1 << ' ';\n      h++;\n      a = i - 1;\n    }\n    if (s == 0) {\n      while (h < m) {\n        for (int j = 0; j < t[h]; j++) cout << h + 1 << ' ';\n        h++;\n      }\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxx = 1010;\nint mrr[maxx + 5], crr[maxx + 5];\nint main() {\n  int n, m, d, sum = 0, w, l = 0, idx = 1;\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; i++) {\n    int x;\n    cin >> x;\n    mrr[i] = x;\n    sum += x;\n  }\n  w = n - sum;\n  for (int i = 1; i <= m; i++) {\n    int gap = min(d - 1, w);\n    w = w - gap;\n    for (int j = l + gap + 1; j <= (l + gap + mrr[i]); j++) {\n      crr[j] = idx;\n    }\n    l = l + gap + mrr[i];\n    idx++;\n  }\n  l = min(n + 1, l + d);\n  if (l != (n + 1)) {\n    cout << \"NO\" << endl;\n    return 0;\n  }\n  cout << \"YES\" << endl;\n  for (int i = 1; i <= n; i++) {\n    if (i != 1) {\n      cout << \" \";\n    }\n    cout << crr[i];\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": " \ndef nextP(n,l,lastPos,posl):\n\n    if n-(lastPos) == sum(l[posl:]) or n - (lastPos + d) < sum(l[posl+1:]) :\n        #if the remaining positions of the river is eqaul \n        #to the length of the planks or \n        # the remaining planks won't fit if the next plank \n        # is  placed with d-1 space in between them then no space is given for the rest of the planks\n        return 0\n    else:\n        return d-1\n        #the above condition is not true means max space \n        # which allows d jumping forward is given which would be d - 1\n    \n\ndef find(n,m,d,l):\n    river = [0 for i in range(n)] # all the positions of the river\n   \n    \n    \n    j = 0\n    posl = 0 \n    z = 1\n    posr = 0 \n\n    while posl < m:\n \n        res = nextP(n,l,posr,posl)\n       \n        \n        \n        j = posr+res\n        lim = j+ l[posl]\n        while j < lim:\n            river[j] = z\n            j += 1\n        z += 1\n        \n        posr += res + l[posl]\n \n        if posr >= n:\n            break\n        posl +=1\n    #end of while loop\n\n\n    if n - (posr) >= d: # if the spaces remaining after placing all the planks is greater than the jump distance.\n        print(\"No\")\n    \n    else:\n        print(\"Yes\")\n        for i in range(n):\n            print(river[i],end = \" \")\n \nn,m,d = map(int,input().split())\nl = [int(i) for i in input().split()]\nfind(n,m,d,l)"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.StringTokenizer;\npublic class Main121 {\n     public static void main(String[] args) throws IOException {\n        sc = new Scanner(System.in);\n        pw = new PrintWriter(System.out);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n        int c[] = new int [m];\n        for(int i = 0;i < m;i++) c[i] = sc.nextInt();\n        int suf[] = new int [m];\n        suf[m - 1] = c[m - 1];\n        for(int i = m - 2;i >= 0;i--) suf[i] = suf[i + 1] + c[i];\n\n        int ans[] = new int [n + 1];\n        for(int i = 0;i < n + 1;i++) ans[i] = -1;\n\n        int start = 0;\n        for(int id = 0;id < m;id++) {\n\n            int v = Math.min(start + d, n - suf[id] + 1);\n\n            for(int i = 0;i < c[id];i++) {\n                ans[v++] = id;\n            }\n            start = v - 1;\n        }\n\n        if (start + d >= n + 1) {\n            pw.println(\"YES\");\n            for(int i = 1;i <= n;i++) pw.print(ans[i] + 1 + \" \");\n        }else pw.println(\"NO\");\n        pw.close();\n    }\n\n    static Scanner sc;\n    static PrintWriter pw;\n\n    static class Scanner {\n        BufferedReader br;\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        Scanner(InputStream in) {\n            br = new BufferedReader(new InputStreamReader(in));\n        }\n\n        String next() throws IOException {\n            while (!st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1010;\nconst int M = 1e6 + 10;\nconst int INF = 0x3f3f3f3f;\nconst int MOD = 1e9 + 7;\nint a[N], ans[N];\nvoid solve() {\n  int n, m, d;\n  cin >> n >> m >> d;\n  for (long long i = 1; i < m + 1; i++) cin >> a[i];\n  int sum = 0;\n  for (long long i = 1; i < m + 1; i++) sum += a[i];\n  if (sum + (m + 1) * (d - 1) < n) {\n    cout << \"NO\" << endl;\n    return;\n  }\n  int pos = 0;\n  for (long long i = 1; i < m + 1; i++) {\n    if (pos + sum + d - 1 < n + 1)\n      pos += d;\n    else\n      pos = n + 1 - sum;\n    for (long long j = pos; j < pos + a[i]; j++) ans[j] = i;\n    pos += a[i] - 1;\n    sum -= a[i];\n  }\n  bool flag = true;\n  int last = 0;\n  for (long long i = 1; i < n + 1; i++) {\n    if (ans[i]) {\n      if (i - last > d) flag = false;\n      last = i;\n    }\n  }\n  cout << \"YES\" << endl;\n  for (long long i = 1; i < n + 1; i++) cout << ans[i] << ' ';\n  cout << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  ;\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nn, m, d = [int(x) for x in input().split()]\nplank_length = [int(x) for x in input().split()]\nsum_planks = sum(plank_length)\npath = deque()\npath.extend([0]*(n-sum_planks))\nindex = 1\nfor pl in plank_length:\n    path.extend([index]*(pl))\n    index += 1\nspacing = (len(plank_length)+1)*(d-1)\nif n-sum_planks > spacing:\n    print('NO')\nelse:\n    current_pos = 0\n    index = 1\n    while current_pos < n+1:\n        if current_pos + d > n or path[current_pos + d - 1] != 0:\n            break\n        else:\n            for i in range(plank_length[index-1]):\n                path.remove(index)\n            for i in range(plank_length[index-1]):\n                path.insert(current_pos+d+i-1,index)\n            current_pos = current_pos + d + plank_length[index-1] - 1\n            index += 1\n    print('YES')\n    for k in path:\n        print(k, end = \" \")"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    static FastReader s = new FastReader();\n    static PrintWriter out = new PrintWriter(System.out);\n\n    private static int[] rai(int n) {\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = s.nextInt();\n        }\n        return arr;\n    }\n\n    private static int[][] rai(int n, int m) {\n        int[][] arr = new int[n][m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                arr[i][j] = s.nextInt();\n            }\n        }\n        return arr;\n    }\n\n    private static long[] ral(int n) {\n        long[] arr = new long[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = s.nextLong();\n        }\n        return arr;\n    }\n\n    private static long[][] ral(int n, int m) {\n        long[][] arr = new long[n][m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                arr[i][j] = s.nextLong();\n            }\n        }\n        return arr;\n    }\n\n    private static int ri() {\n        return s.nextInt();\n    }\n\n    private static long rl() {\n        return s.nextLong();\n    }\n\n    private static String rs() {\n        return s.next();\n    }\n\n    static int gcd(int a,int b)\n    {\n        if(b==0)\n        {\n            return a;\n        }\n        return gcd(b,a%b);\n    }\n\n    static boolean isPrime(int n) {\n        //check if n is a multiple of 2\n        if (n % 2 == 0) return false;\n        //if not, then just check the odds\n        for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n        StringBuilder ans = new StringBuilder();\n//        int t = ri();\n        int t=1;\n        while (t-- > 0)\n        {\n            int n=ri();int m=ri();\n            int d=ri();\n            int[] arr=rai(m);\n            boolean[] contains=new boolean[n+1];\n            int ind=n;\n            int sum=0;\n            for(int i:arr)\n            {\n                sum+=i;\n            }\n            for(int i=n-sum+1;i<=n;i++)\n            {\n                contains[i]=true;\n            }\n//            for(int i=m-1;i>=0;i--)\n//            {\n//                int val=arr[i];\n//                while(ind>0 && val>0)\n//                {\n//                    contains[ind]=true;\n//                    ind--;\n//                }\n//            }\n//            for(int i=1;i<=n;i++)\n//            {\n//                System.out.print(contains[i]+\" \");\n//            }\n//            System.out.println();\n            ind=n-sum+1;\n            HashMap<Integer,Integer> map=new HashMap<>();\n            for(int i=0;i<m;i++)\n            {\n                map.put(i+1,ind);\n                ind+=arr[i];\n            }\n//            for(int i:map.keySet())\n//            {\n//                System.out.println(i+\" \"+map.get(i));\n//            }\n            int curr=0;\n            int pl=1;\n            int flag=0;\n            while(curr<n+1)\n            {\n                int next=curr+d;\n//                System.out.println(next);\n                if(next>=n+1)\n                {\n                    curr+=d;\n                    continue;\n                }\n\n                if(contains[next])\n                {\n                    curr+=d;\n                }\n                else\n                {\n                    if(pl>m)\n                    {\n                        if(contains[curr+1])\n                        {\n                            curr++;\n                            continue;\n\n                        }\n                        else {\n                            flag = 1;\n                            break;\n                        }\n                    }\n                    int cInd=map.get(pl);\n                    int last=cInd+arr[pl-1];\n                    for(int i=next;i<next+arr[pl-1];i++)\n                    {\n                        contains[i]=true;\n                    }\n                    for(int i=next+arr[pl-1];i<last;i++)\n                    {\n                        contains[i]=false;\n                    }\n                    map.put(pl,next);\n                    curr=next+arr[pl-1]-1;\n                    pl++;\n\n                }\n            }\n            if(flag==1)\n            {\n                ans.append(\"No\\n\");\n                continue;\n            }\n\n            int[] res=new int[n+1];\n            for(int i:map.keySet())\n            {\n                for(int j=map.get(i);j<map.get(i)+arr[i-1];j++)\n                {\n                    res[j]=i;\n                }\n            }\n            ans.append(\"Yes\\n\");\n            for(int i=1;i<=n;i++)\n            {\n                ans.append(res[i]).append(\" \");\n            }\n            ans.append(\"\\n\");\n        }\n        out.print(ans.toString());\n        out.flush();\n\n    }\n}\n\n\n"
        },
        {
            "language": 4,
            "solution": "/**\n * BaZ :D\n */\nimport java.lang.reflect.Array;\nimport java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n\npublic class Main\n{\n    static MyScanner scan;\n    static PrintWriter pw;\n    static long MOD = 1_000_000_007;\n    static long INF = 1_000_000_000_000_000_000L;\n    static long inf = 2_000_000_000;\n    public static void main(String[] args) {\n        new Thread(null, null, \"BaZ\", 1 << 27) {\n            public void run() {\n                try {\n                    solve();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    System.exit(1);\n                }\n            }\n        }.start();\n    }\n\n    static void solve() throws IOException\n    {\n        //initIo(true);\n        initIo(false);\n        StringBuilder sb = new StringBuilder();\n        int n = ni(), m = ni(), d = ni();\n        int lengths[] = new int[m];\n        for(int i=0;i<m;++i) {\n            lengths[i] = ni();\n        }\n        int status[] = new int[n+1];\n        int ptr = n+1;\n        for(int i=m-1;i>=0;--i) {\n            for(int j=0;j<lengths[i];++j) {\n                ptr--;\n                status[ptr] = i+1;\n            }\n        }\n        ptr = 0;\n        int where = 0;\n        while(where<=n) {\n            int max = where + d;\n            if(max>n) {\n                break;\n            }\n            int curr = where;\n            for(int i=where+1;i<=max;++i) {\n                if(status[i]>0) {\n                    curr = i;\n                }\n            }\n            if(curr == where) {\n                if(ptr==m) {\n                    pl(\"NO\");\n                    System.exit(0);\n                }\n                else  {\n                    for(int i=where+1;i<=n;++i) {\n                        if(status[i] == ptr+1) {\n                            status[i] = 0;\n                        }\n                    }\n                    for(int i=max;i<min(max+lengths[ptr], n+1); i++) {\n                        status[i] = ptr+1;\n                        where = i;\n                    }\n                    ptr++;\n                }\n            }\n            else {\n                where = curr;\n            }\n        }\n        pl(\"YES\");\n        for(int i=1;i<=n;++i) {\n            p(status[i]);\n        }\n        pl();\n        pw.flush();\n        pw.close();\n    }\n    static void initIo(boolean isFileIO) throws IOException {\n        scan = new MyScanner(isFileIO);\n        if(isFileIO) {\n            pw = new PrintWriter(\"/Users/amandeep/Desktop/output.txt\");\n        }\n        else {\n            pw = new PrintWriter(System.out, true);\n        }\n    }\n    static int ni() throws IOException\n    {\n        return scan.nextInt();\n    }\n    static long nl() throws IOException\n    {\n        return scan.nextLong();\n    }\n    static double nd() throws IOException\n    {\n        return scan.nextDouble();\n    }\n    static String ne() throws IOException\n    {\n        return scan.next();\n    }\n    static String nel() throws IOException\n    {\n        return scan.nextLine();\n    }\n    static void pl()\n    {\n        pw.println();\n    }\n    static void p(Object o)\n    {\n        pw.print(o+\" \");\n    }\n    static void pl(Object o)\n    {\n        pw.println(o);\n    }\n    static void psb(StringBuilder sb)\n    {\n        pw.print(sb);\n    }\n    static void pa(String arrayName, Object arr[])\n    {\n        pl(arrayName+\" : \");\n        for(Object o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, int arr[])\n    {\n        pl(arrayName+\" : \");\n        for(int o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, long arr[])\n    {\n        pl(arrayName+\" : \");\n        for(long o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, double arr[])\n    {\n        pl(arrayName+\" : \");\n        for(double o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, char arr[])\n    {\n        pl(arrayName+\" : \");\n        for(char o : arr)\n            p(o);\n        pl();\n    }\n    static void pa(String listName, List list)\n    {\n        pl(listName+\" : \");\n        for(Object o : list)\n            p(o);\n        pl();\n    }\n    static void pa(String arrayName, Object[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(Object o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static void pa(String arrayName, int[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(int o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static void pa(String arrayName, long[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(long o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static void pa(String arrayName, char[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(char o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static void pa(String arrayName, double[][] arr) {\n        pl(arrayName+\" : \");\n        for(int i=0;i<arr.length;++i) {\n            for(double o : arr[i])\n                p(o);\n            pl();\n        }\n    }\n    static class MyScanner\n    {\n        BufferedReader br;\n        StringTokenizer st;\n        MyScanner(boolean readingFromFile) throws IOException\n        {\n            if(readingFromFile) {\n                br = new BufferedReader(new FileReader(\"/Users/amandeep/Desktop/input.txt\"));\n            }\n            else {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n        }\n        String nextLine()throws IOException\n        {\n            return br.readLine();\n        }\n        String next() throws IOException\n        {\n            if(st==null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n        int nextInt() throws IOException\n        {\n            return Integer.parseInt(next());\n        }\n        long nextLong() throws IOException\n        {\n            return Long.parseLong(next());\n        }\n        double nextDouble() throws IOException\n        {\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 1, 0, -1, 1, 1, -1, -1};\nint dy[] = {1, 0, -1, 0, 1, -1, 1, -1};\nlong long fix_mod(long long x, long long y) { return (y + x % y) % y; }\nvoid fast() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n}\nint n, m, d;\nint main() {\n  fast();\n  cin >> n >> m >> d;\n  vector<int> v(m), ans(n + 1, 0);\n  int sum = 0;\n  for (int i = 0; i < m; i++) cin >> v[i], sum += v[i];\n  sum = n - sum;\n  vector<int> vv;\n  if (sum && d == 1)\n    return cout << \"NO\"\n                << \"\\n\",\n           0;\n  ;\n  while (sum) {\n    vv.push_back(min(d - 1, sum));\n    sum -= min(d - 1, sum);\n  }\n  int x = 1, idx = 0, kk = 1;\n  if (vv.size() > v.size() + 1)\n    return cout << \"NO\"\n                << \"\\n\",\n           0;\n  ;\n  for (int i = 0; i < vv.size(); i++) {\n    while (vv[i]--) {\n      ans[x++] = 0;\n    }\n    while (idx < m && v[idx]--) {\n      ans[x++] = kk;\n    }\n    kk++;\n    idx++;\n  }\n  for (; idx < m; idx++) {\n    while (v[idx]--) ans[x++] = kk;\n    kk++;\n  }\n  cout << \"YES\"\n       << \"\\n\";\n  for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d=[int(x) for x in input().split()]\nC=[int(x) for x in input().split()]\nd-=1\nres=[]\nh=n-sum(C)\nfor i in range(len(C)):\n    if h >=d:\n        res+=[0]*d+[i+1]*C[i]\n        h-=d\n    else:\n        res+=[0]*h+[i+1]*C[i]\n        h=0\n\nif h > d:\n    print('NO')\nelse:\n    print('YES')\n    res+=[0]*h\n    print(*res)\n\n    \n        \n    \n\n\n    \n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long n, m, d;\n  cin >> n >> m >> d;\n  long long sum = 0, c[m];\n  for (long long i = 0; i < m; i++) {\n    cin >> c[i];\n    sum += c[i];\n  }\n  long long x = n - sum;\n  long long z = d - 1;\n  if (z == 0 && x > 0) {\n    cout << \"NO\\n\";\n    return 0;\n  }\n  long long y, rem;\n  if (z == 0) {\n    y = 0;\n    rem = 0;\n  } else {\n    y = x / z;\n    rem = x % z;\n  }\n  if (z == 1 && y >= m + 1) {\n    cout << \"NO\\n\";\n  } else if (y > m + 1 || (y >= m + 1 && rem > 0))\n    cout << \"NO\\n\";\n  else {\n    cout << \"YES\\n\";\n    vector<long long> v;\n    for (long long i = 0; i < m; i++) {\n      while (c[i] > 0) {\n        v.push_back(i + 1);\n        c[i]--;\n      }\n    }\n    long long pos = 0, curr = 1;\n    ;\n    while (x > 0) {\n      long long temp = min(z, x);\n      for (long long i = 0; i < temp; i++) {\n        v.insert(v.begin() + pos, 0);\n      }\n      x -= z;\n      while (pos < v.size() && v[pos] != curr + 1) pos++;\n      curr += 1;\n    }\n    for (long long i = 0; i < v.size(); i++) cout << v[i] << ' ';\n    cout << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 10010, M = 1 << 12;\nint n, m, k, T, d;\nint a[N], ans[N];\nchar s[N], str[N];\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n >> m >> d;\n  int sum = 0, s = 0;\n  for (int i = 1; i <= m; i++) cin >> a[i], sum += a[i];\n  for (int i = n; i >= n - sum + 1; i--) ans[i] = 1;\n  int idx = 1, f = 0;\n  int ss = n - sum + 1;\n  while (1) {\n    int j = s;\n    while (ans[j]) j++;\n    if (j != s) s = j - 1;\n    if (idx >= m + 1) {\n      if (s + d < n + 1) f = 1;\n      break;\n    }\n    if (s + d >= n + 1) break;\n    if (!ans[s + d]) {\n      for (int i = s + d; i <= s + d + a[idx] - 1; i++) {\n        ans[i] = 1;\n        ans[ss] = 0;\n        ss++;\n      }\n      idx++;\n      s += d;\n    } else\n      break;\n  }\n  if (f)\n    cout << \"NO\" << endl;\n  else {\n    int t = 1, cnt = 1;\n    cout << \"YES\" << endl;\n    for (int i = 1; i <= m; i++) {\n      while (!ans[cnt]) cnt++;\n      for (int j = 0; j < a[i]; j++) {\n        ans[cnt] = t;\n        cnt++;\n      }\n      t++;\n    }\n    for (int i = 1; i <= n; i++) cout << ans[i] << ' ';\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tstatic long mod = 1000000007;\n\tstatic int INF = Integer.MAX_VALUE;\n \tpublic static void main(String[] args){\n\t\tFastScanner scanner = new FastScanner();\n\t\tint n = scanner.nextInt();\n\t\tint m = scanner.nextInt();\n\t\tint d = scanner.nextInt();\n\t\tint[] c = new int[m];\n\t\tint total = 0;\n\t\tfor(int i = 0; i < m; i++){\n\t\t\tc[i] = scanner.nextInt();\n\t\t\ttotal += c[i];\n\t\t}\n\t\tif(total+(m+1)*(d-1) < n){\n\t\t\tSystem.out.println(\"NO\");\n\t\t\treturn;\n\t\t}\n\t\tint dist = n-total;\n\t\tint now = 0;\n\t\tint step = 0;\n\t\tint cnt = 1;\n\t\tint[] b = new int[n];\n\t\t//System.out.println(Math.min(dist,d));\n\t\twhile(now <= n && step < m){\n\t\t\tfor(int i = now; i < now + Math.min(d-1,dist); i++){\n\t\t\t\tb[i] = 0;\n\t\t\t}\n\t\t\tdist -= Math.min(d-1,dist);\n\t\t\tnow += Math.min(d-1,dist);\n\t\t\tfor(int i = now; i < now+c[step]; i++){\n\t\t\t\tb[i] = cnt;\n\t\t\t}\n\t\t\tnow += c[step];\n\t\t\tstep++;\n\t\t\tcnt++;\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tSystem.out.print(b[i] + \" \");\n\t\t}\n\t}\n\n\tstatic class Edge{\n\t\tint to;\n\t\tpublic Edge(int to){\n\t\t\tthis.to = to;\n\t\t}\n\t}\n\tstatic class BIT{\n\t\tint n;\n\t\tint[] bit;\n\t\tpublic BIT(int n){\n\t\t\tthis.n = n;\n\t\t\tbit = new int[n+1];\n\t\t}\n\t\tvoid add(int idx, int val){\n\t\t\tfor(int i = idx+1; i <= n; i += i&(-i)) bit[i-1] += val;\n\t\t}\n\t\tint sum(int idx){\n\t\t\tint res = 0;\n\t\t\tfor(int i = idx+1; i > 0; i -= i&(-i)) res += bit[i-1];\n\t\t\treturn res;\n\t\t}\n\t\tint sum(int begin, int end){\n\t\t\tif(begin == 0) return sum(end);\n\t\t\treturn sum(end)-sum(begin-1);\n\t\t}\n\t}\n\tstatic class Pair implements Comparable<Pair>{\n    int first, second;\n    Pair(int a, int b){\n        first = a;\n        second = b;\n    }\n    @Override\n    public boolean equals(Object o){\n        if (this == o) return true;\n        if (!(o instanceof Pair)) return false;\n        Pair p = (Pair) o;\n        return first == p.first && second == p.second;\n    }\n    @Override\n    public int compareTo(Pair p){\n        //return first == p.first ? second - p.second : first - p.first; //first\u3067\u6607\u9806\u306b\u30bd\u30fc\u30c8\n        return (first == p.first ? second - p.second : first - p.first) * -1; //first\u3067\u964d\u9806\u306b\u30bd\u30fc\u30c8\n        //return second == p.second ? first - p.first : second - p.second;//second\u3067\u6607\u9806\u306b\u30bd\u30fc\u30c8\n        //return (second == p.second ? first - p.first : second - p.second)*-1;//second\u3067\u964d\u9806\u306b\u30bd\u30fc\u30c8\n\t\t    //return first * 1.0 / second > p.first * 1.0 / p.second ? 1 : -1; // first/second\u306e\u6607\u9806\u306b\u30bd\u30fc\u30c8\n\t\t    //return first * 1.0 / second < p.first * 1.0 / p.second ? 1 : -1; // first/second\u306e\u964d\u9806\u306b\u30bd\u30fc\u30c8\n\t\t\t\t//return second * 1.0 / first > p.second * 1.0 / p.first ? 1 : -1; // second/first\u306e\u6607\u9806\u306b\u30bd\u30fc\u30c8\n\t\t    //return second * 1.0 / first < p.second * 1.0 / p.first ? 1 : -1; // second/first\u306e\u964d\u9806\u306b\u30bd\u30fc\u30c8\n\t\t\t\t//return Math.atan2(second, first) > Math.atan2(p.second, p.first) ? 1 : -1; // second/first\u306e\u6607\u9806\u306b\u30bd\u30fc\u30c8\n\t\t\t\t//return first + second > p.first + p.second ? 1 : -1; //first+second\u306e\u6607\u9806\u306b\u30bd\u30fc\u30c8\n\t\t\t\t//return first + second < p.first + p.second ? 1 : -1; //first+second\u306e\u964d\u9806\u306b\u30bd\u30fc\u30c8\n\t\t\t\t//return first - second < p.first - p.second ? 1 : -1; //first-second\u306e\u964d\u9806\u306b\u30bd\u30fc\u30c8\n\t\t\t\t//return Math.atan2(second,first) > Math.atan2(p.second, p.first) ? 1 : -1;\n\t\t}\n  }\n\n\tprivate static class FastScanner {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\t\tprivate boolean hasNextByte() {\n\t\t\t\tif (ptr < buflen) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\t\tptr = 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t}\n\t\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\t\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\t\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\t\tpublic String next() {\n\t\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\t\tint b = readByte();\n\t\t\t\twhile(isPrintableChar(b)) {\n\t\t\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\t\t\tb = readByte();\n\t\t\t\t}\n\t\t\t\treturn sb.toString();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\t\tlong n = 0;\n\t\t\t\tboolean minus = false;\n\t\t\t\tint b = readByte();\n\t\t\t\tif (b == '-') {\n\t\t\t\t\t\tminus = true;\n\t\t\t\t\t\tb = readByte();\n\t\t\t\t}\n\t\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\twhile(true){\n\t\t\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\t\t\t\tn *= 10;\n\t\t\t\t\t\t\t\tn += b - '0';\n\t\t\t\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb = readByte();\n\t\t\t\t}\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\t\tlong nl = nextLong();\n\t\t\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n\t\t\t\treturn (int) nl;\n\t\t}\n\t\tpublic double nextDouble() { return Double.parseDouble(next());}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid read(int &x) {\n  x = 0;\n  int f = 1;\n  char ch = getchar();\n  for (; !isdigit(ch); ch = getchar())\n    if (ch == '-') f = -f;\n  for (; isdigit(ch); ch = getchar()) x = x * 10 + ch - '0';\n  x *= f;\n}\nvoid print(int x) {\n  if (x < 0) putchar('-'), x = -x;\n  if (!x) return;\n  print(x / 10), putchar(x % 10 + 48);\n}\nvoid write(int x) {\n  if (!x)\n    putchar('0');\n  else\n    print(x);\n  putchar('\\n');\n}\nconst int maxn = 1e6 + 10;\nconst int inf = 1e9;\nconst double eps = 1e-8;\nconst int mod = 1e9 + 7;\nint n, m, d, c[maxn];\nvoid put(int x, int a) {\n  while (x--) printf(\"%d \", a);\n}\nint main() {\n  read(n), read(m), read(d);\n  int s = 0;\n  for (int i = 1; i <= m; i++) read(c[i]), s += c[i];\n  int p = (n - s) / (m + 1) + ((n - s) % (m + 1) != 0);\n  if (p >= d) return puts(\"NO\"), 0;\n  puts(\"YES\");\n  int t = (n - s) % (m + 1);\n  if (!t) t = m + 1;\n  t--;\n  put(p, 0);\n  for (int i = 1; i <= m; i++) {\n    put(c[i], i);\n    if (t)\n      put(p, 0), t--;\n    else\n      put(p - 1, 0);\n  }\n  puts(\"\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class PlatformJump{\n    public static void main(String args[]){\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int m=sc.nextInt();\n        int d=sc.nextInt();\n        int a[]=new int[n];\n        int c[]=new int[m];\n        int j=0;\n        for(int i=0;i<m;i++){\n            c[i]=sc.nextInt();\n            for(int k=0;k<c[i];k++){\n                a[j++]=i+1;\n            }\n        }\n        j--;\n        int count=m-1;\n        int end=n;\n        StringBuilder sb=new StringBuilder();\n        while(count>=0 && end-j>d){\n            int prev=j-c[count];\n            for(int k=0;k<c[count];k++){\n                a[k+1+prev]=0;\n            }\n            for(int k=0;k<c[count];k++){\n                a[end-d-k]=count+1;\n                \n            }\n            end=end-d-c[count]+1;\n            j=prev;\n            count--;\n        }\n        //System.out.println(end);\n        if(count==-1 && end>=d){\n            System.out.println(\"NO\");\n            System.exit(0);\n        }\n        System.out.println(\"YES\");\n        for(int i=0;i<n;i++){\n            sb.append(a[i]).append(\" \");\n        }\n        System.out.println(sb);\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.*;\n\npublic class PlatformsJumping {\n\n\tstatic BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\tstatic BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));\n\n\tstatic int n, m, d;\n\tstatic int[] c;\n\n\tstatic void process() throws Exception {\n\t\tint[] ans = new int[n + 1];\n\t\tint pos = 0;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tpos += d;\n\t\t\tpos += c[i] - 1;\n\t\t}\n\t\tpos += d;\n\t\tif (pos < n + 1) {\n\t\t\twriter.write(\"NO\");\n\t\t\twriter.newLine();\n\t\t\treturn;\n\t\t}\n\t\tpos = 0;\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tsum += c[i];\n\t\t}\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (pos + d + sum - 1 <= n) {\n\t\t\t\tpos += d;\n\t\t\t} else {\n\t\t\t\tpos = n - sum + 1;\n\t\t\t}\n\t\t\tfor (int j = pos; j < pos + c[i]; j++) {\n\t\t\t\tans[j] = i + 1;\n\t\t\t}\n\t\t\tsum -= c[i];\n\t\t\tpos += c[i] - 1;\n\t\t}\n\t\twriter.write(\"YES\");\n\t\twriter.newLine();\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\twriter.write(String.format(\"%d \", ans[i]));\n\t\t}\n\t\twriter.newLine();\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t//\t\twriter = new BufferedWriter(new FileWriter(\"output.txt\"));\n\t\tString data[], input;\n\t\tdata = reader.readLine().split(\" \");\n\t\tn = Integer.parseInt(data[0]); m = Integer.parseInt(data[1]);\n\t\td = Integer.parseInt(data[2]);\n\t\tc = Arrays.asList(reader.readLine().split(\" \")).stream().mapToInt(Integer::parseInt).toArray();\n\t\tprocess();\n\t\twriter.close();\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\n\npublic class cp1 {\n\n    static class left_shift\n    {\n        public void shift(int[] arr,int n,int t)\n        {\n            int next=t;\n\n            for(int i=n;i>=1;i--)\n            {\n                int temp=arr[i];\n                arr[i]=next;\n\n                next=temp;\n\n                if(next==0)\n                    break;\n            }\n        }\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n\n        private int curChar;\n\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new RuntimeException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new RuntimeException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String readString() {\n            final StringBuilder stringBuilder = new StringBuilder();\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            do {\n                stringBuilder.append(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return stringBuilder.toString();\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n\n    public static void main(String[] args)\n    {\n        InputReader inp=new cp1.InputReader(System.in);\n\n        int n=inp.readInt();\n        int m=inp.readInt();\n        int d=inp.readInt();\n\n        int plank[]=new int[m];\n\n        for(int i=0;i<m;i++)\n        {\n            plank[i]=inp.readInt();\n        }\n\n        int start=d;\n\n        for(int i=0;i<m;i++)\n        {\n            start+=plank[i]-1;\n            start+=d;\n        }\n\n        if(start>n)\n        {\n            System.out.println(\"YES\");\n            int ans[]=new int[n+1];\n\n            start=d;\n            left_shift lf=new cp1.left_shift();\n\n            for(int j=0;j<m;j++)\n            {\n                if(start>n)\n                {\n                    while (plank[j]>0)\n                    {\n                        lf.shift(ans,n,j+1);\n                        plank[j]--;\n                    }\n                }\n                while (plank[j] > 0)\n                {\n                    if (start > n) {\n                        j--;\n                        break;\n                    }\n                    ans[start] = j + 1;\n                    start++;\n                    plank[j]--;\n                }\n                start+=d-1;\n            }\n\n            StringBuilder ss=new StringBuilder();\n\n            for(int i=1;i<=n;i++)\n            {\n                ss.append(ans[i]);\n                ss.append(' ');\n            }\n            System.out.print(ss.toString());\n        }\n        else\n        {\n            System.out.println(\"NO\");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid Read(int &res) {\n  char c = getchar();\n  bool kt = false;\n  if (c == '-') {\n    kt = true;\n    c = getchar();\n  }\n  while (c < '0' || c > '9') c = getchar();\n  res = 0;\n  while (c >= '0' && c <= '9') {\n    res = res * 10 + (c - 48);\n    c = getchar();\n  }\n  if (kt == 1) res = -res;\n}\nconst int maxN = 100005;\nconst long long mod = 1000000007;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, d;\n  int sum = 0;\n  int c[maxN];\n  int dd[maxN];\n  cin >> n >> m >> d;\n  for (int i = 1; i <= m; ++i) {\n    cin >> c[i];\n    sum += c[i];\n  }\n  if (sum + (m + 1) * (d - 1) < n) {\n    cout << \"NO\";\n    exit(0);\n  }\n  int tmp = (n - sum) / (m + 1);\n  int du = (n - sum) % (m + 1);\n  for (int i = 1; i <= m + 1; ++i) dd[i] = tmp;\n  int i = 1;\n  while (du--) {\n    dd[i]++;\n    i++;\n  }\n  cout << \"YES\"\n       << \"\\n\";\n  for (int i = 1; i <= m; ++i) {\n    for (int j = 1; j <= dd[i]; ++j) cout << 0 << \" \";\n    for (int j = 1; j <= c[i]; ++j) cout << i << \" \";\n  }\n  for (int j = 1; j <= dd[m + 1]; ++j) cout << 0 << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long long INF32 = 1e9;\nconst long long INF64 = 1e17;\nconst int RANGE = 1e6 + 5;\nusing namespace std;\ntemplate <class T>\nvoid read(T &Val) {\n  T tmp = 0;\n  char ch = getchar();\n  int flag = 1;\n  while (!(ch >= '0' && ch <= '9')) {\n    if (ch == '-') flag = -1;\n    ch = getchar();\n  }\n  while ((ch >= '0' && ch <= '9')) {\n    tmp = tmp * 10 + ch - '0';\n    ch = getchar();\n  }\n  Val = flag * tmp;\n}\nint ans[RANGE];\nint main() {\n  vector<int> keep;\n  int n, m, d;\n  read(n), read(m), read(d);\n  int jump = d - 1, sum = 0;\n  for (int i = 0; i < m; i++) {\n    int a;\n    read(a);\n    keep.push_back(a);\n    sum += a;\n  }\n  if (sum > n or sum + jump * (1 + m) < n) return cout << \"NO\", 0;\n  sum = sum + min(n - sum, jump);\n  int val = n - sum - jump;\n  int hold = 0;\n  for (int i = (int)(keep).size() - 1; i >= 0; i--) {\n    if (val <= 0) val = 0;\n    for (int j = sum + val - hold; j > sum + val - hold - keep[i]; j--)\n      ans[j] = i + 1;\n    val -= min(val, jump);\n    hold += keep[i];\n  }\n  cout << \"YES\\n\";\n  for (int i = 1; i < n + 1; i++) cout << ans[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\na=list(map(int,input().split()))\nans=[0]*n\nstart=d-1\nfor i in range(m):\n    if a[i]<=n-start:\n        for j in range(a[i]):\n            ans[start]=i+1\n            start+=1\n        start+=d-1\n        #print(start)\n    else:\n        start-=(d-1)\n        #print(start)\n        for j in range(n):\n            if a[i]>n-start:\n                if ans[j]==0:\n                    ans.pop(j)\n                    ans.append(0)\n                    start-=1\n        #print(ans)\n        for j in range(a[i]):\n            ans[start]=i+1\n            start+=1\n        start+=d-1\n    #print(ans)\nif start>=n:\n    print(\"YES\")\n    print(*ans,end=\" \")\n    print()\nelse:\n    print(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d;\nint r[1003];\nint main() {\n  int sum = 0;\n  scanf(\"%d %d %d\", &n, &m, &d);\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &r[i]);\n    sum += r[i];\n  }\n  int cur = 0;\n  int ans[1003] = {\n      0,\n  };\n  int idx = 1;\n  while (idx <= m) {\n    for (int i = d; i >= 1; i--) {\n      int re = n - cur - i - r[idx] + 1;\n      int leftsum = sum - r[idx];\n      if (leftsum <= re) {\n        for (int j = 0; j < r[idx]; j++) {\n          ans[j + cur + i] = idx;\n        }\n        cur = i + cur + r[idx] - 1;\n        sum = leftsum;\n        idx += 1;\n        break;\n      }\n    }\n  }\n  if (cur + d >= n + 1) {\n    printf(\"YES\\n\");\n    for (int i = 1; i <= n; i++) {\n      printf(\"%d \", ans[i]);\n    }\n  } else {\n    printf(\"NO\\n\");\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=[int(i) for i in input().split()]\nl=[int(i) for i in input().split()]\nw=sum(l)\nif(w+(m+1)*(d-1)<n):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    l2=[]\n    tojump=n-w\n    temp=0\n    abc=0\n    while(abc<n):\n        i=0\n        while(i<d-1 and tojump>0 and abc<n):\n           l2+=[0]\n           i+=1\n           abc+=1\n           tojump-=1\n        if(abc<n):\n            for j in range(l[temp]):\n                l2+=[temp+1]\n                abc+=1\n            temp+=1\n    for e in l2:\n        print(e,end=\" \")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d, c[1003], res[1003];\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n >> m >> d;\n  int s = 0;\n  for (int i = 1; i <= m; i++) {\n    cin >> c[i];\n    s += c[i];\n  }\n  s = n - s;\n  int vt = 0;\n  int first = 1;\n  while (vt <= n && first <= m) {\n    if (s > 0) {\n      if (d <= s) {\n        res[vt + d] += first;\n        res[vt + d + c[first]] -= first;\n        s = s - d + 1;\n        vt = vt + d + c[first] - 1;\n        first++;\n        vt--;\n      } else {\n        res[vt + s + 1] += first;\n        res[vt + s + c[first] + 1] -= first;\n        vt = vt + s + c[first] + 1;\n        first++;\n        s = 0;\n        vt--;\n      }\n    } else {\n      if (vt == 0) {\n        res[vt + 1] += first;\n        res[vt + 1 + c[first]] -= first;\n        vt = vt + c[first];\n        first++;\n      } else {\n        res[vt] += first;\n        res[vt + c[first]] -= first;\n        vt = vt + c[first] - 1;\n        first++;\n      }\n    }\n    vt++;\n  }\n  if (vt + d <= n) {\n    cout << \"NO\";\n    return 0;\n  }\n  cout << \"YES\" << endl;\n  for (int i = 1; i <= n; i++) res[i] = res[i - 1] + res[i];\n  for (int i = 1; i <= n; i++) cout << res[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n, m, d = map(int, input().split())\nd -= 1\nC = list(map(int, input().split()))\nh = n - sum(C)\nkek = []\nfor i in range(m):\n    if h >= d:\n        kek += [0] * d + [i + 1] * C[i]\n        h -= d\n    else:\n        kek += [0] * h + [i + 1] * C[i]\n        h = 0\nif h > d:\n    print('NO')\nelse:\n    kek += [0] * h\n    print('YES')\n    print(*kek)\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\n\nif __name__ == '__main__':\n    A = stdin.readline().strip().split()\n    n = int(A[0])   # the width of the river\n    m = int(A[1])   # the number of platforms\n    d = int(A[2])   # the maximum distance of your jump\n\n    c = list(map(int, stdin.readline().strip().split()))\n\n    gap = n - sum(c)\n    jumps = m + 1\n\n    if jumps*(d - 1) >= gap >= 0:\n        res = []\n\n        interval = int(gap/jumps)\n        remainder = gap % jumps\n\n        wi = 0\n        for wi in range(m):\n            cur = interval\n            if remainder > 0:\n                cur += 1\n                remainder -= 1\n\n            for j in range(cur):\n                res.append(0)\n\n            for j in range(c[wi]):\n                res.append(wi + 1)\n\n        for j in range(interval):\n            res.append(0)\n\n        print('YES')\n        print(' '.join(map(str, res)))\n    else:\n        print('NO')\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nc=list(map(int,input().split()))\ns=sum(c)\np=(m+1)*(d-1)+s\nif p<n:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tl=[]\n\ta,b=0,0\n\ts1=n-s\n\twhile b<=m:\n\t\tif a==0:\n\t\t\ta+=1\n\t\t\tb+=1\n\t\t\tif s1>=d-1:\n\t\t\t\tfor i in range(0,d-1):\n\t\t\t\t\tl.append(0)\n\t\t\t\ts1-=d-1\n\t\t\telif s1<d-1 and s1>0:\n\t\t\t\tfor i in range(s1):\n\t\t\t\t\tl.append(0)\n\t\t\t\ts1=0\n\t\telse:\n\t\t\tfor i in range(0,c[b-1]):\n\t\t\t\tl.append(str(b))\n\t\t\ta-=1\n\tfor i in l:\n\t\tprint(i,end=' ')"
        },
        {
            "language": 3,
            "solution": "n,m,d = map(int, input().split())\nc = list(map(int, input().split()))\ns = sum(c)\na = []\n\nr = n - s\n\ng = r / (m + 1)\n\nif g > d-1:\n\tprint('NO')\nelse:\n    print('YES')\n    for i in range(m):\n        if r >= d-1:\n            a += [0]*(d-1) + [i+1]*c[i]\n            r -= (d - 1)\n        else:\n            a += [0]*r + [i+1]*c[i]\n            r = 0\n    a += [0] * r    \n    print(*a)\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nc=list(map(int,input().split()))\ns=sum(c)\np=(m+1)*(d-1)+s\nif p<n:\n\tprint('NO')\nelse:\n\tprint('YES')\n\tl=[]\n\ta,b=0,0\n\ty=n-s\n\twhile b<=m:\n\t\tif a==0:\n\t\t\ta+=1\n\t\t\tb+=1\n\t\t\tif y>=d-1:\n\t\t\t\tfor i in range(0,d-1):\n\t\t\t\t\tl.append(0)\n\t\t\t\ty-=d-1\n\t\t\telif y<d-1 and y>0:\n\t\t\t\tfor i in range(y):\n\t\t\t\t\tl.append(0)\n\t\t\t\ty=0\n\t\telse:\n\t\t\tfor i in range(0,c[b-1]):\n\t\t\t\tl.append(str(b))\n\t\t\ta-=1\n\tfor i in l:\n\t\tprint(i,end=' ')\n"
        },
        {
            "language": 4,
            "solution": "//package main;\n\nimport java.io.*;\nimport java.util.*;\n\npublic final class Main {\n    BufferedReader br;\n    StringTokenizer stk;\n    \n    public static void main(String[] args) throws Exception {\n        new Main().run();\n    }\n    \n    {\n        stk = null;\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n    \n    long mod = 998244353;\n    StringBuilder res = new StringBuilder(1000005);\n    void run() throws Exception {\n        int n = ni();\n        int m = ni();\n        int d = ni();\n        \n        int[] a = new int[m];\n        for(int i = 0; i < m; i++) {\n            a[i] = ni();\n        }\n        \n        int[] map = new int[n + 1];\n        int idx = n;\n        for(int i = m - 1; i >= 0; i--) {\n            int num = a[i];\n            while(num-- > 0) {\n                map[idx--] = i + 1;\n            }\n        }\n        \n        //System.out.println(Arrays.toString(map));\n        \n        List<Segment> segs = new ArrayList<>();\n        for(int i = 1; i <= n; i++) {\n            if(map[i] == 0) {\n                continue;\n            }\n            if(segs.isEmpty()) {\n                segs.add(new Segment(map[i], i, i));\n            } else {\n                if(segs.get(segs.size() - 1).num == map[i]) {\n                    segs.get(segs.size() - 1).right++;\n                } else {\n                    segs.add(new Segment(map[i], i, i));\n                }\n            }\n        }\n        \n        //System.out.println(segs);\n        \n        int pos = d;\n        for(Segment seg : segs) {\n            if(pos >= n + 1) {\n                break;\n            } else {\n                while(seg.left > pos) {\n                    seg.left--;\n                    seg.right--;\n                }\n                pos = seg.right + d;\n            }\n        }\n        \n        //System.out.println(segs);\n        \n        if(segs.get(segs.size() - 1).right + d < n + 1) {\n            res.append(\"NO\\n\");\n        } else {\n            map = new int[n + 1];\n            res.append(\"YES\\n\");\n            for(Segment seg : segs) {\n                for(int i = seg.left; i <= seg.right; i++) {\n                    map[i] = seg.num;\n                }\n            }\n            for(int i = 1; i <= n; i++) {\n                res.append(map[i]).append(\" \");\n            }\n            res.deleteCharAt(res.length() - 1).append(\"\\n\");\n        }\n        \n        System.out.print(res);\n    }\n    \n    class Segment {\n        int num, left, right;\n        public Segment(int num, int left, int right) {\n            this.num   = num;\n            this.left  = left;\n            this.right = right; \n        }\n        @Override\n        public String toString() {\n            return \"[\" + left + \", \" + right + \"]\";\n        }\n    }\n    \n    //Reader & Writer\n    String nextToken() throws Exception {\n        if (stk == null || !stk.hasMoreTokens())\n            stk = new StringTokenizer(br.readLine(), \" \");\n        return stk.nextToken();\n    }\n\n    String nt() throws Exception {\n        return nextToken();\n    }\n\n    int ni() throws Exception {\n        return Integer.parseInt(nextToken());\n    }\n\n    long nl() throws Exception {\n        return Long.parseLong(nextToken());\n    }\n    \n    double nd() throws Exception {\n        return Double.parseDouble(nextToken());\n    }\n    \n    //Some Misc methods\n    int get(int l, int r, int[] a) {\n        return l == 0 ? a[r] : a[r] - a[l - 1];\n    }\n    \n    void shuffle(long[] a) {\n        Random r = new Random();\n        for(int i = 0; i < a.length; i++) {\n            int idx = r.nextInt(a.length);\n            long temp = a[i];\n            a[i] = a[idx];\n            a[idx] = temp;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int T = 1;\n  for (long long int qq = 1; qq <= T; qq++) {\n    long long int n, m, d;\n    cin >> n >> m >> d;\n    vector<long long int> c(m);\n    long long int s = 0;\n    for (int i = 0; i < m; i++) cin >> c[i], s += c[i];\n    s = n - s;\n    vector<long long int> ans(n, 0);\n    long long int cur = 0;\n    d--;\n    for (int i = 0; i < m; i++) {\n      if (s < d) {\n        long long int j = cur;\n        cur += s;\n        for (; cur < j + s + c[i]; cur++) ans[cur] = i + 1;\n        s = 0;\n      } else {\n        long long int j = cur;\n        cur += d;\n        for (; cur < j + d + c[i]; cur++) ans[cur] = i + 1;\n        s -= d;\n      }\n    }\n    if (s > d) {\n      cout << \"NO\" << endl;\n    } else {\n      cout << \"YES\" << endl;\n      for (int i = 0; i < n; i++) cout << ans[i] << ' ';\n      cout << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nT mymax(T a, T b) {\n  return (a > b) ? a : b;\n}\ntemplate <typename T>\nT mymin(T a, T b) {\n  return (a < b) ? a : b;\n}\ntemplate <typename T>\nT myabs(T a) {\n  return (a < 0) ? (-1 * a) : a;\n}\ntemplate <typename T>\nT mysqrt(T x) {\n  if (x == 0 | x == 1) return x;\n  int start = 1, End = x, ans;\n  while (start <= End) {\n    int mid = (start + End) / 2;\n    if (mid * mid == x) return mid;\n    if (mid * mid < x) {\n      start = mid + 1;\n      ans = mid;\n    } else\n      End = mid - 1;\n  }\n  return ans;\n}\nvoid fastIO() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.precision(20);\n}\nlong long A[500006];\nlong long B[500006];\nlong long C[500006];\nvector<long long> V;\nvector<long long> Ans;\nvector<pair<long long, long long> > VP;\nmap<long long, long long> M;\nvector<long long> prime;\nbool mark[10000008];\nlong long N = 1e7;\nvoid seive() {\n  int limit = sqrt(N * 1.0) + 2;\n  mark[1] = 1;\n  for (int i = 4; i <= N; i += 2) mark[i] = 1;\n  prime.push_back(2);\n  for (int i = 3; i <= N; i += 2) {\n    if (!mark[i]) {\n      prime.push_back(i);\n      if (i <= limit) {\n        for (int j = i * i; j <= N; j += i * 2) mark[j] = 1;\n      }\n    }\n  }\n}\nint main() {\n  fastIO();\n  long long a, b, c, n, m, k, p, q, r, gap;\n  long long cnt = 0, cntr = 0, sum = 0, ans = 1, check = 0;\n  float x, y, z;\n  long long Max = 0, Max1 = -1e18 + 1;\n  long long Min = 1e18;\n  string s, s1, s3, s4;\n  cin >> n >> m >> gap;\n  queue<long long> Q;\n  for (int i = 0; i < m; i++) {\n    cin >> a;\n    Q.push(a);\n    sum += a;\n  }\n  long long prev = 0, last;\n  int i = 1;\n  while (!Q.empty()) {\n    if (i > n) break;\n    if (i + sum - 1 >= n || i - prev == gap) {\n      A[i] = Q.front();\n      sum -= Q.front();\n      prev = i + Q.front() - 1;\n      i += Q.front();\n      Q.pop();\n    } else\n      i++;\n  }\n  for (int i = 1; i <= n; i++) {\n    if (A[i]) {\n      cntr++;\n      a = A[i];\n      A[i] = cntr;\n      last = i;\n      for (int j = 1; j < a; j++) {\n        A[i + j] = cntr;\n        last = i + j;\n      }\n      i += a - 1;\n    }\n  }\n  if (last + gap < n + 1) {\n    cout << \"NO\" << endl;\n    return 0;\n  }\n  cout << \"YES\" << endl;\n  for (int i = 1; i <= n; i++) cout << A[i] << \" \";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.StreamTokenizer;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader sc = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Task solver = new Task();\n        solver.solve(1, sc, out);\n        out.close();\n    }\n\n    static class Task {\n    \tpublic ArrayList<Integer> res=new ArrayList<Integer>();\n    \tpublic int n;\n    \tpublic int m;\n    \tpublic int d;\n    \tpublic int[] c;\n    \tpublic int[] pre;\n    \tpublic boolean end=false;\n    \t\n    \tpublic boolean dfs(int index,int last) {\n    \t\tif(index==m) {\n    \t\t\tif(last>n) \n    \t\t\t\treturn true;\n    \t\t\tend=true;\n    \t\t\treturn false;\n    \t\t}\n    \t\t\n    \t\tfor(int i=Math.min(d, n);i>=1;i--) {\n    \t\t\tif(n-(last+i+c[index]-2)<pre[m-1]-pre[index])\n    \t\t\t\tcontinue;\n    \t\t\n    \t\t\tres.add(last);\n    \t\t\tif(dfs(index+1,last+c[index]+i-1))\n    \t\t\t\treturn true;\n    \t\t\tif(end)\n    \t\t\t\treturn false;\n    \t\t\tres.remove(res.get(res.size()-1));\n    \t\t}\n    \t\treturn false;\n    \t}\n    \t\n        public void solve(int testNumber, InputReader sc, PrintWriter out) throws IOException {\n        \tn=sc.nextInt();\n        \tm=sc.nextInt();\n        \td=sc.nextInt();\n        \tc=new int[m+1];\n        \tpre=new int[m+1];\n        \t\n        \tfor(int i=0;i<m;i++)\n        \t\tc[i]=sc.nextInt();\n        \tif(d>=n) {\n        \t\tint[] ans=new int[n+1];\n        \t\tint last=n;\n        \t\tfor(int i=m-1;i>=0;i--) {\n        \t\t\twhile(c[i]-->0) {\n        \t\t\t\tans[last]=i+1;\n        \t\t\t\tlast--;\n        \t\t\t}\n        \t\t}\n        \t\tout.println(\"YES\");\n        \t\tfor(int j=1;j<=n;j++)\n    \t\t\t\tout.print(ans[j]+\" \");\n    \t\t\tout.println();\n    \t\t\treturn ;\n        \t}\n        \tpre[0]=c[0];\n        \tfor(int i=1;i<m;i++)\n        \t\tpre[i]=pre[i-1]+c[i];\n        \tfor(int i=Math.min(d, n);i>=1;i--) {\n        \t\tres.clear();\n        \t\tif(dfs(0,i)) {\n        \t\t\tout.println(\"YES\");\n        \t\t\tint[] ans=new int[n+1];\n        \t\t\tfor(int j=0;j<m;j++) {\n        \t\t\t\tint index=res.get(j);\n        \t\t\t\tfor(int k=index;k<index+c[j];k++) {\n        \t\t\t\t\tans[k]=j+1;\n        \t\t\t\t}\n        \t\t\t}\n        \t\t\tfor(int j=1;j<=n;j++)\n        \t\t\t\tout.print(ans[j]+\" \");\n        \t\t\tout.println();\n        \t\t\treturn ;\n        \t\t}\n        \t\tif(end) \n        \t\t\tbreak;\n        \t}\n        \tout.println(\"NO\");\n        }\n    }\n\n    static class InputReader {\n        private InputStreamReader reader;\n        private char[] buf;\n        private int len, now;\n     \n        public InputReader(InputStream stream) {\n            reader = new InputStreamReader(stream);\n            buf = new char[1024];\n            len = 0;\n            now = 0;\n        }\n     \n        public String next() throws IOException {\n            if (!hasNext()) throw new NullPointerException();\n            StringBuilder sb = new StringBuilder();\n            while (!isSpaceChar(buf[now])) {\n                sb.append(buf[now]);\n                if (!move()) break;\n            }\n            return sb.toString();\n        }\n     \n        public int nextInt() throws IOException {\n            if (!hasNext()) throw new NullPointerException();\n            boolean x = false;\n            if (buf[now] == '-') {\n                x = true;\n                if (!move()) throw new NumberFormatException();\n            }\n            int ans = 0;\n            while (!isSpaceChar(buf[now])) {\n                if (isNum(buf[now])) ans = ans * 10 + buf[now] - '0';\n                else throw new NumberFormatException();\n                if (!move()) break;\n            }\n            return (x ? -1 : 1) * ans;\n        }\n     \n        public String nextLine() throws IOException {\n            if (!hasNextLine()) throw new NullPointerException();\n            StringBuilder sb = new StringBuilder();\n            while (buf[now] != '\\n') {\n                sb.append(buf[now]);\n                if (!move()) return sb.toString();\n            }\n            now++;\n            return sb.toString();\n        }\n     \n        public long nextLong() throws IOException {\n            if (!hasNext()) throw new NullPointerException();\n            boolean x = false;\n            if (buf[now] == '-') {\n                x = true;\n                if (!move()) throw new NumberFormatException();\n            }\n            long ans = 0;\n            while (!isSpaceChar(buf[now])) {\n                if (isNum(buf[now])) ans = ans * 10 + buf[now] - '0';\n                else throw new NumberFormatException();\n                if (!move()) break;\n            }\n            return (x ? -1 : 1) * ans;\n        }\n     \n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n     \n        public int nextHexInt() throws IOException {\n            if (!hasNext()) throw new NullPointerException();\n            boolean x = false;\n            if (buf[now] == '-') {\n                x = true;\n                if (!move()) throw new NumberFormatException();\n            }\n            int ans = 0;\n            while (!isSpaceChar(buf[now])) {\n                if (isHex(buf[now])) ans = ans * 16 + toHex(buf[now]);\n                else throw new NumberFormatException();\n                if (!move()) break;\n            }\n            return (x ? -1 : 1) * ans;\n        }\n     \n        public char nextChar() throws IOException {\n            if (!hasNext()) throw new NullPointerException();\n            char tmp = buf[now];\n            move();\n            return tmp;\n        }\n        public int next(char[] s) throws IOException {\n            if (!hasNext()) throw new NullPointerException();\n            int len=0;\n            while (!isSpaceChar(buf[now])&&len<s.length) {\n                s[len++]=buf[now];\n                if (!move()) break;\n            }\n            return len;\n        }\n        public boolean hasNext() throws IOException {\n            return skip();\n        }\n     \n        public boolean hasNextLine() throws IOException {\n            return now < len || refill();\n        }\n     \n        private boolean move() throws IOException {\n            now++;\n            return hasNextLine();\n        }\n     \n        private boolean skip() throws IOException {\n            if (!hasNextLine()) return false;\n            while (isSpaceChar(buf[now])) {\n                if (!move()) return false;\n            }\n            return true;\n        }\n     \n        private boolean isSpaceChar(char c) {\n            return !(c >= 33 && c <= 126);\n        }\n     \n        private boolean isNum(char c) {\n            return c >= '0' && c <= '9';\n        }\n     \n        private boolean isHex(char c) {\n            return c >= '0' && c <= '9' || c >= 'A' && c <= 'F';\n        }\n     \n        private int toHex(char c) {\n            if (c >= '0' && c <= '9') return c - '0';\n            else return c - 'A' + 10;\n        }\n     \n        private boolean refill() throws IOException {\n            len = reader.read(buf);\n            now = 0;\n            return len > 0;\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class C {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int d = sc.nextInt();\n\n        // sum of platforms length\n        int sum = 0;\n\n        int[] c = new int [m];\n        for(int i = 0; i < m; i++) {\n            c[i] = sc.nextInt();\n            sum += c[i];\n        }\n\n        if(sum > n || sum < n - (d - 1) * (m + 1)) {\n            System.out.println(\"NO\");\n        }\n        else {\n            int empty = n - sum;\n\n            int[] res = new int [n];\n            int platformNum = 0; // 1\n            for(int i = 0; i < n;) {\n                // length of next jump\n                int k = Math.min(empty, d-1);\n                empty -= k;\n                while(k > 0) {\n                    // jump\n                    res[i] = 0;\n                    i++;\n                    k--;\n                }\n                while(platformNum < m && c[platformNum] > 0) {\n                    res[i] = platformNum+1;\n                    i++;\n                    c[platformNum]--;\n                }\n                platformNum++;\n            }\n\n            System.out.println(\"YES\");\n            for(int i = 0; i < n; i++) {\n                System.out.print(res[i] + \" \");\n            }\n\n        }\n\n\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "// package Quarantine;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.StringTokenizer;\n\npublic class PlatformsJumping {\n    public static void main(String[] args)throws IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st=new StringTokenizer(br.readLine());\n        int n=Integer.parseInt(st.nextToken());\n        int m=Integer.parseInt(st.nextToken());\n        int d=Integer.parseInt(st.nextToken());\n        int plat[]=new int[m+1];\n        int sum=0;\n        st=new StringTokenizer(br.readLine());\n        for(int i=1;i<=m;i++){\n            plat[i]=Integer.parseInt(st.nextToken());\n            sum+=plat[i];\n        }\n        int gap=n-sum;\n        int maxgap=d-1;\n        int start[]=new int[m+1];\n        int end[]=new int[m+1];\n        int ahead=n+1;\n        for(int i=m;i>=1;i--){\n            if(gap>=maxgap){\n                end[i]=ahead-maxgap-1;\n                start[i]=end[i]-plat[i]+1;\n                gap-=maxgap;\n            }\n            else{\n                end[i]=ahead-gap-1;\n                start[i]=end[i]-plat[i]+1;\n                gap=0;\n            }\n            ahead=start[i];\n//            System.out.println(start[i]+\" \"+end[i]);\n        }\n        if(start[1]>d){\n            System.out.println(\"NO\");\n        }\n        else{\n            StringBuilder print=new StringBuilder();\n            print.append(\"YES\\n\");\n            int pos=1;\n            for(int i=1;i<=m;i++){\n                for(int j=pos;j<start[i];j++){\n                    print.append(\"0 \");\n                }\n                for(int j=start[i];j<=end[i];j++){\n                    print.append(i+\" \");\n                }\n                pos=end[i]+1;\n            }\n            for(int j=pos;j<=n;j++){\n                print.append(\"0 \");\n            }\n            System.out.println(print.toString());\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n,m,d=map(int,input().split())\nA=[int(i) for i in input().split()]\ns=sum(A)\nif (n-s)/(m+1)>d-1:\n    print(\"NO\")\n    exit()\n\nans=[]\nd-=1\ns=n-s\nfor i in range(m):\n    if s>=d:\n        ans+=[0]*d + [i+1]*A[i]\n        s-=d\n    else:\n        ans+=[0]*s + [i+1]*A[i]\n        s=0\nans+=[0]*s\nprint(\"YES\")\nprint(*ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 60;\nint a[maxn], vis[maxn];\nint ans[maxn];\nint main(int argc, char const *argv[]) {\n  int n, m, d;\n  scanf(\"%d%d%d\", &n, &m, &d);\n  int sum = 0;\n  for (int i = 1; i <= m; i++) {\n    ans[i] = 0;\n    scanf(\"%d\", &a[i]);\n    sum += a[i];\n  }\n  int st = 0;\n  ;\n  int k = 1;\n  for (int i = 0; i <= n; i++) {\n    if (k == m + 1) break;\n    int len = n - i;\n    int x = min(len - sum, d - 1);\n    int le = i + x + 1;\n    int ri = le + a[k] - 1;\n    for (int j = le; j <= ri; j++) {\n      ans[j] = k;\n      st = ri;\n    }\n    sum -= a[k];\n    k++;\n    i = ri - 1;\n  }\n  if (st + d < n + 1) {\n    printf(\"NO\\n\");\n    return 0;\n  }\n  printf(\"YES\\n\");\n  for (int i = 1; i <= n; i++) {\n    printf(\"%d \", ans[i]);\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def mint():\n    return int(input())\n \ndef mints():\n    return map(int,input().split())\n \ndef solve():\n    n, m, d = mints()\n \n    a = list(mints())\n    \n    # b[i] shows start of platform i\n    # p shows end of prev platform\n    b = [0]*m\n    p = 0\n    for i in range(m):\n        b[i] = p + d\n        p = p + d + a[i] - 1\n\n    # if cant jump from last platform to n+1\n    if b[-1] + a[-1] - 1 + d < n + 1:\n        print(\"NO\")\n        return\n    \n    # p shows end of prev platform as we dont want to exceed n+1\n    # so reposition start of platform i\n    p = n + 1\n    c = [0]*n\n    for i in range(m-1,-1,-1):\n        if b[i] + a[i] - 1 >= p:\n            b[i] = p - a[i]\n        p = b[i]\n        for j in range(b[i], b[i] + a[i]):\n            c[j-1] = i + 1\n    print(\"YES\")\n    print(*c)\n\n\nsolve()"
        },
        {
            "language": 3,
            "solution": "import sys\n\n#import os.path\n#if os.path.isfile(\"input.txt\"):\n#    _file = open(\"input.txt\")\n#def readline():\n#    return _file.readline();\n\ndef readline():\n    return input()\n\ndef rindex(list, start):\n    i = start\n    while i >= 0:\n        if list[i] == 0:\n            return i\n        i = i-1\n\ndef room(list):\n    i = len(list) - 1\n    while (list[i] == 0):\n        i = i-1\n        if i < 0: break\n    return len(list)-i-1\n\ndef fun(n, m, d, c):\n    ans = [0] * n\n    i = 0\n    ci = 0\n    while ci < m:\n        i += d-1\n        \n        start = len(ans)-1\n        while room(ans) < c[ci]:\n            # Make room\n            k = rindex(ans, start)\n            for a in range(k, n-1):\n                ans[a] = ans[a+1]\n            ans[n-1] = 0\n            i = n - room(ans)\n            start = start -1\n        \n        if i + c[ci] > n:\n            i = n - c[ci]\n\n        for j in range(c[ci]):\n            ans[i] = ci+1\n            i = i + 1\n        ci = ci + 1\n    \n    if i + d >= n+1:\n        print(\"YES\")\n        print(\" \".join(str(x) for x in ans))\n    else:\n        print(\"NO\")\n    \n\nq = 1# int(readline())\nfor i in range(q):\n    #n = int(readline())\n    v = list(map(int, readline().split(' ')))\n    c = list(map(int, readline().split(' ')))\n    ans = fun(v[0], v[1], v[2], c)\n    \n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1000 + 5];\nint main() {\n  int n, m, d, sum = 0;\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (int i = 1; i <= m; i++) scanf(\"%d\", a + i), sum += a[i];\n  if (sum + (d - 1) * (m + 1) < n) return puts(\"NO\"), 0;\n  puts(\"YES\");\n  int l = 0, L = 1;\n  for (int i = 1; i <= n; i++) {\n    if (i - l == d || n - i + 1 == sum) {\n      for (int j = 0; j < a[L]; j++) printf(\"%d \", L);\n      l = i += a[L] - 1, sum -= a[L++];\n    } else\n      printf(\"0 \");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 10005;\nint a[maxn], c[maxn];\nint n, m, d;\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &d);\n  for (int i = 1; i <= m; ++i) {\n    scanf(\"%d\", &c[i]);\n  }\n  int pos = 0;\n  for (int i = 1; i <= m; ++i) {\n    pos = pos + d;\n    pos = pos + c[i] - 1;\n  }\n  if (pos + d >= n + 1) {\n    puts(\"YES\");\n    int extra = pos + d - n - 1;\n    int pos = 0;\n    for (int i = 1; i <= m; ++i) {\n      if (extra == 0)\n        pos = pos + d;\n      else {\n        if (extra >= d)\n          pos += 1, extra -= d - 1;\n        else\n          pos += d - extra, extra = 0;\n      }\n      for (int j = 0; j < c[i]; ++j) {\n        a[pos + j] = i;\n      }\n      pos = pos + c[i] - 1;\n    }\n    printf(\"%d\", a[1]);\n    for (int i = 2; i <= n; ++i) {\n      printf(\" %d\", a[i]);\n    }\n    printf(\"\\n\");\n  } else\n    puts(\"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn,m,d = map(int,sys.stdin.readline().split())\ntmp = [int(x) for x in sys.stdin.readline().split()]\nsumDistance = n\nfor x in tmp:\n    sumDistance -= x\nq = n - sumDistance\nif sumDistance % (m + 1) == 0:\n    sumDistance //= m + 1\nelse:\n    sumDistance //= m + 1\n    sumDistance += 1\n\nif sumDistance < d:\n    print(\"YES\")\n    f = sys.stdout.write\n    qq = 0\n    if sumDistance != 0:\n        qq = (n - q)//sumDistance\n    o = 0\n    for i in range(m):\n        if i >= qq:\n            sumDistance = 0\n        o += sumDistance + tmp[i]\n        f('0 ' * sumDistance + (str(i+1) + ' ') * tmp[i])\n    f('0 ' * (n - o))\n\nelse:\n    print(\"NO\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> wood(m);\n  for (int i = 0; i < m; i++) cin >> wood[i];\n  int sum = accumulate(wood.begin(), wood.end(), 0);\n  vector<int> ans(n);\n  int start = -1;\n  int nowuse = 0;\n  bool flag = true;\n  while (start < n) {\n    if (nowuse == m) {\n      if (start + d < n) flag = false;\n      break;\n    }\n    int to = min(start + d, n);\n    if (n - to < sum) to = n - sum;\n    for (int j = 0; j < wood[nowuse]; j++) ans[to + j] = nowuse + 1;\n    sum -= wood[nowuse];\n    start = to + wood[nowuse] - 1;\n    nowuse++;\n  }\n  if (flag) {\n    cout << \"YES\\n\";\n    for (auto e : ans) cout << e << ' ';\n    cout << '\\n';\n  } else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int d = in.nextInt()-1;\n            int[] arr = new int[m];\n            int sum = 0;\n            int[] ans = new int[n];\n            for (int i = 0; i <m ; i++) {\n                arr[i] = in.nextInt();\n                sum+=arr[i];\n            }\n            int distance = n-sum;\n            int dis = (int)Math.ceil(distance/((double)m+1));\n            if (dis > d){\n                out.println(\"No\");\n                return;\n            }\n            int i = 0;\n            int plate = 1;\n            int t = 0;\n            boolean flag =false;\n            while (i < n && plate<=arr.length ){\n                dis=distance/(m+1);\n                if (dis > d){\n                    out.println(\"NO\");\n                    return;\n                }\n                for (int j = 0; j < dis && i < n; j++) {\n                    ans[i] = 0;\n                    i++;\n                }\n                distance-=dis;\n                for (int j = 0; j < arr[t] && i < n; j++) {\n                    ans[i] = plate;\n                    i++;\n                }\n                m--;\n                plate++;\n                t++;\n            }\n            out.println(\"YES\");\n            for (int j = 0; j <ans.length ; j++) {\n                out.print(ans[j]+\" \" );\n            }\n        }\n    }\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() { return Long.parseLong(next());\n        }\n\n\n\n    }\n\n}\n\n\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\nimport bisect\nimport math\nimport itertools\nimport sys\nfrom atexit import register\n \nif sys.version_info[0] < 3:\n    from io import BytesIO as stream\nelse:\n    from io import StringIO as stream\n \n \nif sys.version_info[0] < 3:\n    class dict(dict):\n        \"\"\"dict() -> new empty dictionary\"\"\"\n        def items(self):\n            \"\"\"D.items() -> a set-like object providing a view on D's items\"\"\"\n            return dict.iteritems(self)\n \n        def keys(self):\n            \"\"\"D.keys() -> a set-like object providing a view on D's keys\"\"\"\n            return dict.iterkeys(self)\n \n        def values(self):\n            \"\"\"D.values() -> an object providing a view on D's values\"\"\"\n            return dict.itervalues(self)\n \n    input = raw_input\n    range = xrange\n \n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n \n \ndef sync_with_stdio(sync=True):\n    \"\"\"Set whether the standard Python streams are allowed to buffer their I/O.\n \n    Args:\n        sync (bool, optional): The new synchronization setting.\n \n    \"\"\"\n    global input, flush\n \n    if sync:\n        flush = sys.stdout.flush\n    else:\n        sys.stdin = stream(sys.stdin.read())\n        input = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n        sys.stdout = stream()\n        register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n \ndef main():\n    \n \n #---------------------------------------------------------\n #from sys import stdin\n#input=stdin.readline\n#import bisect\n#i = bisect.bisect_left(a, k)\n#a=[]\n    n,m,d=map(int, input().split())\n    c=list(map(int, input().split()))\n    a=[0]*n\n    e=[0]*m\n    k=n-1\n    p=m\n    for i in range(m):\n        for j in range(c[-1*(i+1)]):\n            a[k]=p\n            k-=1\n        e[-1*(i+1)]=k+1    \n        p-=1    \n    #print(a,e)\n    f=0\n    ps=0\n    ans=0\n    while(ps<n):\n        if ps+d-1>=n:\n            ans=0\n            break\n        elif a[ps+d-1]==0:\n            #print(ps,f)\n            if f==m:\n                ans=1\n                break\n            for i in range(c[f]):\n                a[e[f]+i]=0\n            for i in range(c[f]):\n                a[ps+d-1+i]=f+1\n            ps=c[f]+ps+d-1\n            f+=1\n            \n        elif a[ps+d-1]!=0:\n            ans=0\n            break\n    if ans==0:\n        print('YES')\n        print(*a)\n    else:\n        print('NO')\n     \n \nif __name__ == '__main__':\n    sync_with_stdio(False)\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, m, d;\nlong long c[1111];\nlong long sum = 0;\nlong long res[1111];\nint main() {\n  cin >> n >> m >> d;\n  for (int i = 0; i < n; i++) {\n    cin >> c[i];\n    sum += c[i];\n  }\n  long long curPos = 0;\n  long long curPlatform = -1;\n  long long lastPlatform = -1;\n  long long cnt = 0;\n  long long lastPlatformInd = 0;\n  bool possible = 1;\n  for (long long i = 1; i <= n; i++) {\n    if (curPlatform != -1) {\n      res[i] = curPlatform + 1;\n      cnt--;\n      if (!cnt) {\n        curPlatform = -1;\n      }\n    } else {\n      if (sum == n - i + 1 || i - d == lastPlatformInd) {\n        if (lastPlatform == m - 1) {\n          possible = 0;\n          break;\n        }\n        curPlatform = lastPlatform + 1;\n        lastPlatform = curPlatform;\n        cnt = c[curPlatform];\n        lastPlatformInd = i + cnt - 1;\n        sum -= cnt;\n        res[i] = curPlatform + 1;\n        cnt--;\n        if (!cnt) curPlatform = -1;\n      }\n    }\n  }\n  if (possible) {\n    cout << \"YES\\n\";\n    for (int i = 1; i <= n; i++) cout << res[i] << \" \";\n  } else {\n    cout << \"NO\";\n  }\n  cout << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m, d = [int(x) for x in input().split()]\n    C = [int(x) for x in input().split()]\n\n    current = -1\n    ans = [0] * (1000 * 1000)\n    for i, c in enumerate(C):\n        current += d - 1\n        for j in range(c):\n            current += 1\n            ans[current] = i + 1\n\n    if current + d < n:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        amari = current - (n - 1)\n        count = 0\n        for a in ans:\n            if a == 0 and amari > 0:\n                amari -= 1\n                continue\n            count += 1\n            print(a, end=\" \")\n            if count == n:\n                break\n        print(\"\")\n\n\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    main()\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int n, m, d;\n  cin >> n >> m >> d;\n  vector<int> c(m);\n  for (int i = 0; i < m; ++i) {\n    cin >> c[i];\n  }\n  int su = accumulate(c.begin(), c.end(), 0);\n  if ((m + 1) * (d - 1) < n - su) {\n    cout << \"NO\";\n    return 0;\n  }\n  vector<int> ans;\n  int ze = n - su;\n  for (int i = 0; i < m; ++i) {\n    int cnt = d - 1;\n    while (cnt > 0 && ze > 0) {\n      cnt--, ze--;\n      ans.push_back(0);\n    }\n    while (c[i]--) ans.push_back(i + 1);\n  }\n  while (ze > 0) ans.push_back(0), ze--;\n  cout << \"YES\\n\";\n  for (int i : ans) cout << i << ' ';\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;  \npublic class Main {\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br  =new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint d = Integer.parseInt(st.nextToken());\n\t\tst = new StringTokenizer(br.readLine());\n\t\tint[] c = new int[m];\n\t\tint sum=0;\n\t\tfor (int i = 0; i < c.length; i++) {\n\t\t\tc[i]= Integer.parseInt(st.nextToken());\n\t\t\tsum+=c[i];\n\t\t}\n\t\tArrayList<Pair> unused = new ArrayList<Pair>();\n\t\tint tmp=n-sum;\n\t\tfor (int i = 0; i < c.length; i++) {\n\t\t\tunused.add(new Pair(tmp, tmp+c[i]-1));\n\t\t\ttmp=tmp+c[i];\n\t\t}\n\t\t//System.out.println(unused);\n\t\tArrayList<Pair> used = new ArrayList<Pair>();\n\t\tint standing=-1;\n\t\tfor (int i = 0; i < unused.size(); i++) {\n\t\t\tint maxJmp=standing + d;\n\t\t\tint diff=unused.get(i).l-maxJmp<0?0:unused.get(i).l-maxJmp;\n\t\t\tused.add(new Pair(unused.get(i).l-diff,unused.get(i).r-diff));\n\t\t\tstanding=unused.get(i).r-diff;\n\t\t}\n\t\t//System.out.println(used);\n\t\tif(n-standing>d)\n\t\t{\n\t\t\tpw.println(\"NO\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpw.println(\"YES\");\n\t\t\tint[] ans = new int[n];\n\t\t\tfor (int i = 0; i < used.size(); i++) {\n\t\t\t\tfor (int j = used.get(i).l; j <= used.get(i).r; j++) {\n\t\t\t\t\tans[j]=i+1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\t\tpw.print(ans[i] + \" \");\n\t\t\t}\n\t\t\tpw.println();\n\t\t}\n\t\tpw.close();\n\t}\n\tstatic class Pair\n\t{\n\t\tint l,r;\n\t\tpublic Pair(int l, int r) {\n\t\t\tthis.l=l;\n\t\t\tthis.r=r;\n\t\t}\n\t\tpublic String toString()\n\t\t{\n\t\t\treturn l + \", \" + r;\n\t\t}\n\t}\n}"
        }
    ]
}